- en: pandas.DataFrame.to_sql
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas.DataFrame.to_sql
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_sql.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_sql.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_sql.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_sql.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Write records stored in a DataFrame to a SQL database.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 将存储在 DataFrame 中的记录写入 SQL 数据库。
- en: Databases supported by SQLAlchemy [[1]](#r689dfd12abe5-1) are supported. Tables
    can be newly created, appended to, or overwritten.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 支持 SQLAlchemy [[1]](#r689dfd12abe5-1) 支持的数据库。可以新建表，追加或覆盖表。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**name**str'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**name**字符串'
- en: Name of SQL table.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: SQL 表的名称。
- en: '**con**sqlalchemy.engine.(Engine or Connection) or sqlite3.Connection'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**con**sqlalchemy.engine.(Engine or Connection) 或 sqlite3.Connection'
- en: Using SQLAlchemy makes it possible to use any DB supported by that library.
    Legacy support is provided for sqlite3.Connection objects. The user is responsible
    for engine disposal and connection closure for the SQLAlchemy connectable. See
    [here](https://docs.sqlalchemy.org/en/20/core/connections.html). If passing a
    sqlalchemy.engine.Connection which is already in a transaction, the transaction
    will not be committed. If passing a sqlite3.Connection, it will not be possible
    to roll back the record insertion.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 SQLAlchemy 可以使用该库支持的任何数据库。为 sqlite3.Connection 对象提供了传统支持。用户负责对 SQLAlchemy
    可连接对象进行引擎处理和连接关闭。请参阅[这里](https://docs.sqlalchemy.org/en/20/core/connections.html)。如果传递的是已经处于事务中的
    sqlalchemy.engine.Connection，则事务不会被提交。如果传递的是 sqlite3.Connection，则无法回滚记录插入。
- en: '**schema**str, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**schema**字符串，可选'
- en: Specify the schema (if database flavor supports this). If None, use default
    schema.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 指定模式（如果数据库支持）。如果为 None，则使用默认模式。
- en: '**if_exists**{‘fail’, ‘replace’, ‘append’}, default ‘fail’'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**if_exists**{‘fail’, ‘replace’, ‘append’}，默认为 ‘fail’'
- en: How to behave if the table already exists.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果表已经存在，应该如何处理。
- en: 'fail: Raise a ValueError.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'fail: 引发 ValueError。'
- en: 'replace: Drop the table before inserting new values.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'replace: 在插入新值之前删除表。'
- en: 'append: Insert new values to the existing table.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'append: 将新值插入到现有表中。'
- en: '**index**bool, default True'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**index**布尔值，默认为 True'
- en: Write DataFrame index as a column. Uses index_label as the column name in the
    table. Creates a table index for this column.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 将 DataFrame 索引写入作为列。使用 index_label 作为表中的列名。为该列创建表索引。
- en: '**index_label**str or sequence, default None'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**index_label**字符串或序列，默认为 None'
- en: Column label for index column(s). If None is given (default) and index is True,
    then the index names are used. A sequence should be given if the DataFrame uses
    MultiIndex.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 索引列的列标签。如果给定 None（默认值）并且 index 为 True，则使用索引名称。如果 DataFrame 使用 MultiIndex，则应该给出一个序列。
- en: '**chunksize**int, optional'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**chunksize**整数，可选'
- en: Specify the number of rows in each batch to be written at a time. By default,
    all rows will be written at once.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 指定每次写入的批次中的行数。默认情况下，所有行将一次性写入。
- en: '**dtype**dict or scalar, optional'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**dtype**字典或标量，可选'
- en: Specifying the datatype for columns. If a dictionary is used, the keys should
    be the column names and the values should be the SQLAlchemy types or strings for
    the sqlite3 legacy mode. If a scalar is provided, it will be applied to all columns.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 为列指定数据类型。如果使用字典，键应该是列名，值应该是SQLAlchemy类型或sqlite3传统模式的字符串。如果提供了标量，它将应用于所有列。
- en: '**method**{None, ‘multi’, callable}, optional'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**method**{None, ‘multi’, callable}，可选'
- en: 'Controls the SQL insertion clause used:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 控制使用的 SQL 插入子句：
- en: 'None : Uses standard SQL `INSERT` clause (one per row).'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: None：使用标准 SQL `INSERT` 子句（每行一个）。
- en: '‘multi’: Pass multiple values in a single `INSERT` clause.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '‘multi’: 在单个 `INSERT` 子句中传递多个值。'
- en: callable with signature `(pd_table, conn, keys, data_iter)`.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有签名 `(pd_table, conn, keys, data_iter)` 的可调用对象。
- en: Details and a sample callable implementation can be found in the section [insert
    method](../../user_guide/io.html#io-sql-method).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 详细信息和示例可在 [insert method](../../user_guide/io.html#io-sql-method) 部分找到。
- en: 'Returns:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: None or int
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: None 或整数
- en: Number of rows affected by to_sql. None is returned if the callable passed into
    `method` does not return an integer number of rows.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 由 to_sql 影响的行数。如果传递给 `method` 的可调用对象不返回整数行数，则返回 None。
- en: The number of returned rows affected is the sum of the `rowcount` attribute
    of `sqlite3.Cursor` or SQLAlchemy connectable which may not reflect the exact
    number of written rows as stipulated in the [sqlite3](https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.rowcount)
    or [SQLAlchemy](https://docs.sqlalchemy.org/en/20/core/connections.html#sqlalchemy.engine.CursorResult.rowcount).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的受影响行数是 `sqlite3.Cursor` 或 SQLAlchemy 可连接对象的 `rowcount` 属性的总和，这可能不反映写入行数的确切数量，如
    [sqlite3](https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.rowcount)
    或 [SQLAlchemy](https://docs.sqlalchemy.org/en/20/core/connections.html#sqlalchemy.engine.CursorResult.rowcount)
    中规定的。
- en: New in version 1.4.0.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 版本 1.4.0 中的新功能。
- en: 'Raises:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: ValueError
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: ValueError
- en: When the table already exists and if_exists is ‘fail’ (the default).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当表已经存在且 if_exists 为 'fail' 时（默认值）。
- en: See also
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`read_sql`](pandas.read_sql.html#pandas.read_sql "pandas.read_sql")'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[`read_sql`](pandas.read_sql.html#pandas.read_sql "pandas.read_sql")'
- en: Read a DataFrame from a table.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 从表中读取一个 DataFrame。
- en: Notes
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: Timezone aware datetime columns will be written as `Timestamp with timezone`
    type with SQLAlchemy if supported by the database. Otherwise, the datetimes will
    be stored as timezone unaware timestamps local to the original timezone.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果数据库支持，时区感知的 datetime 列将被写入为 `Timestamp with timezone` 类型与 SQLAlchemy。否则，datetimes
    将被存储为原始时区本地的无时区感知时间戳。
- en: Not all datastores support `method="multi"`. Oracle, for example, does not support
    multi-value insert.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 并非所有数据存储支持 `method="multi"`。例如，Oracle 不支持多值插入。
- en: References
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[1](#id1)]'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[[1](#id1)]'
- en: '[https://docs.sqlalchemy.org](https://docs.sqlalchemy.org)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.sqlalchemy.org](https://docs.sqlalchemy.org)'
- en: '[2]'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[2]'
- en: '[https://www.python.org/dev/peps/pep-0249/](https://www.python.org/dev/peps/pep-0249/)'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.python.org/dev/peps/pep-0249/](https://www.python.org/dev/peps/pep-0249/)'
- en: Examples
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: Create an in-memory SQLite database.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个内存中的 SQLite 数据库。
- en: '[PRE1]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Create a table from scratch with 3 rows.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 从头开始创建一个包含 3 行的表。
- en: '[PRE2]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'An sqlalchemy.engine.Connection can also be passed to con:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以将 sqlalchemy.engine.Connection 传递给 con：
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This is allowed to support operations that require that the same DBAPI connection
    is used for the entire operation.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 允许这样做是为了支持需要整个操作使用相同的 DBAPI 连接的操作。
- en: '[PRE5]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Overwrite the table with just `df2`.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 仅使用 `df2` 覆盖表。
- en: '[PRE6]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Use `method` to define a callable insertion method to do nothing if there’s
    a primary key conflict on a table in a PostgreSQL database.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `method` 来定义一个可调用的插入方法，如果在 PostgreSQL 数据库的表上存在主键冲突，则不执行任何操作。
- en: '[PRE7]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: For MySQL, a callable to update columns `b` and `c` if there’s a conflict on
    a primary key.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 MySQL，如果主键冲突，则更新列 `b` 和 `c` 的可调用方法。
- en: '[PRE8]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Specify the dtype (especially useful for integers with missing values). Notice
    that while pandas is forced to store the data as floating point, the database
    supports nullable integers. When fetching the data with Python, we get back integer
    scalars.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 指定 dtype（对于具有缺失值的整数特别有用）。请注意，虽然 pandas 被强制将数据存储为浮点数，但数据库支持可空整数。在使用 Python 检索数据时，我们会得到整数标量。
- en: '[PRE9]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
