- en: scipy.linalg.svdvals
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.svdvals.html#scipy.linalg.svdvals](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.svdvals.html#scipy.linalg.svdvals)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute singular values of a matrix.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**(M, N) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Matrix to decompose.
  prefs: []
  type: TYPE_NORMAL
- en: '**overwrite_a**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to overwrite *a*; may improve performance. Default is False.
  prefs: []
  type: TYPE_NORMAL
- en: '**check_finite**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to check that the input matrix contains only finite numbers. Disabling
    may give a performance gain, but may result in problems (crashes, non-termination)
    if the inputs do contain infinities or NaNs.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**s**(min(M, N),) ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The singular values, sorted in decreasing order.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: LinAlgError
  prefs: []
  type: TYPE_NORMAL
- en: If SVD computation does not converge.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`svd`](scipy.linalg.svd.html#scipy.linalg.svd "scipy.linalg.svd")'
  prefs: []
  type: TYPE_NORMAL
- en: Compute the full singular value decomposition of a matrix.
  prefs: []
  type: TYPE_NORMAL
- en: '[`diagsvd`](scipy.linalg.diagsvd.html#scipy.linalg.diagsvd "scipy.linalg.diagsvd")'
  prefs: []
  type: TYPE_NORMAL
- en: Construct the Sigma matrix, given the vector s.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: '`svdvals(a)` only differs from `svd(a, compute_uv=False)` by its handling of
    the edge case of empty `a`, where it returns an empty sequence:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: We can verify the maximum singular value of *m* by computing the maximum length
    of *m.dot(u)* over all the unit vectors *u* in the (x,y) plane. We approximate
    “all” the unit vectors with a large sample. Because of linearity, we only need
    the unit vectors with angles in [0, pi].
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '*p* is a projection matrix with rank 1\. With exact arithmetic, its singular
    values would be [1, 0, 0, 0].'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The singular values of an orthogonal matrix are all 1\. Here, we create a random
    orthogonal matrix by using the *rvs()* method of [`scipy.stats.ortho_group`](scipy.stats.ortho_group.html#scipy.stats.ortho_group
    "scipy.stats.ortho_group").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
