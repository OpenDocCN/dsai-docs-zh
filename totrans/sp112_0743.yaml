- en: scipy.spatial.geometric_slerp
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.spatial.geometric_slerp.html#scipy.spatial.geometric_slerp](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.spatial.geometric_slerp.html#scipy.spatial.geometric_slerp)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Geometric spherical linear interpolation.
  prefs: []
  type: TYPE_NORMAL
- en: The interpolation occurs along a unit-radius great circle arc in arbitrary dimensional
    space.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**start**(n_dimensions, ) array-like'
  prefs: []
  type: TYPE_NORMAL
- en: Single n-dimensional input coordinate in a 1-D array-like object. *n* must be
    greater than 1.
  prefs: []
  type: TYPE_NORMAL
- en: '**end**(n_dimensions, ) array-like'
  prefs: []
  type: TYPE_NORMAL
- en: Single n-dimensional input coordinate in a 1-D array-like object. *n* must be
    greater than 1.
  prefs: []
  type: TYPE_NORMAL
- en: '**t**float or (n_points,) 1D array-like'
  prefs: []
  type: TYPE_NORMAL
- en: A float or 1D array-like of doubles representing interpolation parameters, with
    values required in the inclusive interval between 0 and 1\. A common approach
    is to generate the array with `np.linspace(0, 1, n_pts)` for linearly spaced points.
    Ascending, descending, and scrambled orders are permitted.
  prefs: []
  type: TYPE_NORMAL
- en: '**tol**float'
  prefs: []
  type: TYPE_NORMAL
- en: The absolute tolerance for determining if the start and end coordinates are
    antipodes.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**result**(t.size, D)'
  prefs: []
  type: TYPE_NORMAL
- en: An array of doubles containing the interpolated spherical path and including
    start and end when 0 and 1 t are used. The interpolated values should correspond
    to the same sort order provided in the t array. The result may be 1-dimensional
    if `t` is a float.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: ValueError
  prefs: []
  type: TYPE_NORMAL
- en: If `start` and `end` are antipodes, not on the unit n-sphere, or for a variety
    of degenerate conditions.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`scipy.spatial.transform.Slerp`](scipy.spatial.transform.Slerp.html#scipy.spatial.transform.Slerp
    "scipy.spatial.transform.Slerp")'
  prefs: []
  type: TYPE_NORMAL
- en: 3-D Slerp that works with quaternions
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The implementation is based on the mathematical formula provided in [[1]](#re44bd46832d9-1),
    and the first known presentation of this algorithm, derived from study of 4-D
    geometry, is credited to Glenn Davis in a footnote of the original quaternion
    Slerp publication by Ken Shoemake [[2]](#re44bd46832d9-2).
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.5.0.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Slerp#Geometric_Slerp](https://en.wikipedia.org/wiki/Slerp#Geometric_Slerp)'
  prefs: []
  type: TYPE_NORMAL
- en: '[[2](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: 'Ken Shoemake (1985) Animating rotation with quaternion curves. ACM SIGGRAPH
    Computer Graphics, 19(3): 245-254.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Interpolate four linearly-spaced values on the circumference of a circle spanning
    90 degrees:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The interpolated results should be at 30 degree intervals recognizable on the
    unit circle:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-spatial-geometric_slerp-1_00_00.png](../Images/eb9b26f1195976d5167edeaafdf173f0.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Attempting to interpolate between antipodes on a circle is ambiguous because
    there are two possible paths, and on a sphere there are infinite possible paths
    on the geodesic surface. Nonetheless, one of the ambiguous paths is returned along
    with a warning:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Extend the original example to a sphere and plot interpolation points in 3D:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Plot the unit sphere for reference (optional):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Interpolating over a larger number of points may provide the appearance of
    a smooth curve on the surface of the sphere, which is also useful for discretized
    integration calculations on a sphere surface:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-spatial-geometric_slerp-1_01_00.png](../Images/87ea1eeb6baf46331c9fb42ea9d9c36d.png)'
  prefs: []
  type: TYPE_IMG
