- en: Special
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 特殊
- en: Original text：[https://docs.sympy.org/latest/modules/functions/special.html](https://docs.sympy.org/latest/modules/functions/special.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[SymPy文档](https://docs.sympy.org/latest/modules/functions/special.html)
- en: '## Dirac Delta and Related Discontinuous Functions'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '## Dirac Delta和相关的不连续函数'
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The DiracDelta function and its derivatives.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: DiracDelta函数及其导数。
- en: Explanation
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: DiracDelta is not an ordinary function. It can be rigorously defined either
    as a distribution or as a measure.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: DiracDelta不是普通函数。它可以严格地定义为分布或测度之一。
- en: DiracDelta only makes sense in definite integrals, and in particular, integrals
    of the form `Integral(f(x)*DiracDelta(x - x0), (x, a, b))`, where it equals `f(x0)`
    if `a <= x0 <= b` and `0` otherwise. Formally, DiracDelta acts in some ways like
    a function that is `0` everywhere except at `0`, but in many ways it also does
    not. It can often be useful to treat DiracDelta in formal ways, building up and
    manipulating expressions with delta functions (which may eventually be integrated),
    but care must be taken to not treat it as a real function. SymPy’s `oo` is similar.
    It only truly makes sense formally in certain contexts (such as integration limits),
    but SymPy allows its use everywhere, and it tries to be consistent with operations
    on it (like `1/oo`), but it is easy to get into trouble and get wrong results
    if `oo` is treated too much like a number. Similarly, if DiracDelta is treated
    too much like a function, it is easy to get wrong or nonsensical results.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: DiracDelta只在定积分中有意义，特别是在形如 `Integral(f(x)*DiracDelta(x - x0), (x, a, b))` 的积分中，当
    `a <= x0 <= b` 时，结果为 `f(x0)`，否则为 `0`。形式上，DiracDelta在某些方面表现得像是一个在除了 `0` 外都是 `0`
    的函数，但在许多方面又不是这样。在形式化地处理Delta函数时通常很有用，构建和操作包含Delta函数的表达式（最终可能被积分），但需要小心不要将其视为真实函数。SymPy的
    `oo` 类似，它只在某些上下文中形式上有意义（如积分限），但SymPy允许在任何地方使用它，并且它尝试在其上执行操作时保持一致性（如 `1/oo`），但如果过度将
    `oo` 视为数字，则很容易出错并得到错误的结果。类似地，如果过度将DiracDelta视为函数，则很容易得到错误或无意义的结果。
- en: 'DiracDelta function has the following properties:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: DiracDelta函数具有以下特性：
- en: \(\frac{d}{d x} \theta(x) = \delta(x)\)
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: \(\frac{d}{d x} \theta(x) = \delta(x)\)
- en: \(\int_{-\infty}^\infty \delta(x - a)f(x)\, dx = f(a)\) and \(\int_{a- \epsilon}^{a+\epsilon}
    \delta(x - a)f(x)\, dx = f(a)\)
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: \(\int_{-\infty}^\infty \delta(x - a)f(x)\, dx = f(a)\)，以及 \(\int_{a- \epsilon}^{a+\epsilon}
    \delta(x - a)f(x)\, dx = f(a)\)
- en: \(\delta(x) = 0\) for all \(x \neq 0\)
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: \(\delta(x) = 0\)，对所有的 \(x \neq 0\)
- en: \(\delta(g(x)) = \sum_i \frac{\delta(x - x_i)}{\|g'(x_i)\|}\) where \(x_i\)
    are the roots of \(g\)
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: \(\delta(g(x)) = \sum_i \frac{\delta(x - x_i)}{\|g'(x_i)\|}\)，其中 \(x_i\) 是 \(g\)
    的根
- en: \(\delta(-x) = \delta(x)\)
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: \(\delta(-x) = \delta(x)\)
- en: 'Derivatives of `k`-th order of DiracDelta have the following properties:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: DiracDelta的第`k`阶导数具有以下特性：
- en: \(\delta(x, k) = 0\) for all \(x \neq 0\)
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: \(\delta(x, k) = 0\)，对所有的 \(x \neq 0\)
- en: \(\delta(-x, k) = -\delta(x, k)\) for odd \(k\)
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: \(\delta(-x, k) = -\delta(x, k)\)，对于奇数 \(k\)
- en: \(\delta(-x, k) = \delta(x, k)\) for even \(k\)
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: \(\delta(-x, k) = \delta(x, k)\)，对于偶数 \(k\)
- en: Examples
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: See also
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`Heaviside`](#sympy.functions.special.delta_functions.Heaviside "sympy.functions.special.delta_functions.Heaviside"),
    [`sympy.simplify.simplify.simplify`](../simplify/simplify.html#sympy.simplify.simplify.simplify
    "sympy.simplify.simplify.simplify"), [`is_simple`](#sympy.functions.special.delta_functions.DiracDelta.is_simple
    "sympy.functions.special.delta_functions.DiracDelta.is_simple"), [`sympy.functions.special.tensor_functions.KroneckerDelta`](#sympy.functions.special.tensor_functions.KroneckerDelta
    "sympy.functions.special.tensor_functions.KroneckerDelta")'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Heaviside`](#sympy.functions.special.delta_functions.Heaviside "sympy.functions.special.delta_functions.Heaviside"),
    [`sympy.simplify.simplify.simplify`](../simplify/simplify.html#sympy.simplify.simplify.simplify
    "sympy.simplify.simplify.simplify"), [`is_simple`](#sympy.functions.special.delta_functions.DiracDelta.is_simple
    "sympy.functions.special.delta_functions.DiracDelta.is_simple"), [`sympy.functions.special.tensor_functions.KroneckerDelta`](#sympy.functions.special.tensor_functions.KroneckerDelta
    "sympy.functions.special.tensor_functions.KroneckerDelta")'
- en: References
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 参考资料
- en: '[[R342](#id1)]'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R342](#id1)]'
- en: '[https://mathworld.wolfram.com/DeltaFunction.html](https://mathworld.wolfram.com/DeltaFunction.html)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[数学世界](https://mathworld.wolfram.com/DeltaFunction.html)'
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Returns a simplified form or a value of DiracDelta depending on the argument
    passed by the DiracDelta object.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 返回DiracDelta对象传递的参数的简化形式或值。
- en: 'Parameters:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**k** : integer'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**k**：整数'
- en: order of derivative
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 导数的阶数
- en: '**arg** : argument passed to DiracDelta'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**arg**：传递给DiracDelta的参数'
- en: Explanation
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The `eval()` method is automatically called when the `DiracDelta` class is about
    to be instantiated and it returns either some simplified instance or the unevaluated
    instance depending on the argument passed. In other words, `eval()` method is
    not needed to be called explicitly, it is being called and evaluated once the
    object is called.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 当`DiracDelta`类即将实例化时，`eval()`方法会自动调用并返回简化的实例或未评估的实例，具体取决于传递的参数。换句话说，不需要显式调用`eval()`方法，一旦调用对象即会被调用和评估。
- en: Examples
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Returns the first derivative of a DiracDelta Function.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 返回DiracDelta函数的第一阶导数。
- en: 'Parameters:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**argindex** : integer'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**argindex** : 整数'
- en: degree of derivative
  id: totrans-49
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 导数的程度
- en: Explanation
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'The difference between `diff()` and `fdiff()` is: `diff()` is the user-level
    function and `fdiff()` is an object method. `fdiff()` is a convenience method
    available in the `Function` class. It returns the derivative of the function without
    considering the chain rule. `diff(function, x)` calls `Function._eval_derivative`
    which in turn calls `fdiff()` internally to compute the derivative of the function.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`diff()`与`fdiff()`的区别在于：`diff()`是用户级函数，而`fdiff()`是对象方法。`fdiff()`是`Function`类中的便利方法，用于返回不考虑链式法则的函数导数。`diff(function,
    x)`调用`Function._eval_derivative`，后者在内部调用`fdiff()`来计算函数的导数。'
- en: Examples
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE15]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Tells whether the argument(args[0]) of DiracDelta is a linear expression in
    *x*.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 判断DiracDelta的参数(args[0])是否是*x*的线性表达式。
- en: 'Parameters:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x** : can be a symbol'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**x** : 可以是一个符号'
- en: Examples
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE21]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: See also
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sympy.simplify.simplify.simplify`](../simplify/simplify.html#sympy.simplify.simplify.simplify
    "sympy.simplify.simplify.simplify"), [`DiracDelta`](#sympy.functions.special.delta_functions.DiracDelta
    "sympy.functions.special.delta_functions.DiracDelta")'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.simplify.simplify.simplify`](../simplify/simplify.html#sympy.simplify.simplify.simplify
    "sympy.simplify.simplify.simplify"), [`DiracDelta`](#sympy.functions.special.delta_functions.DiracDelta
    "sympy.functions.special.delta_functions.DiracDelta")'
- en: '[PRE25]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Heaviside step function.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: Heaviside阶跃函数。
- en: Explanation
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'The Heaviside step function has the following properties:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 海维赛德阶跃函数具有以下特性：
- en: \(\frac{d}{d x} \theta(x) = \delta(x)\)
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: \(\frac{d}{d x} \theta(x) = \delta(x)\)
- en: '\(\theta(x) = \begin{cases} 0 & \text{for}\: x < 0 \\ \frac{1}{2} & \text{for}\:
    x = 0 \\1 & \text{for}\: x > 0 \end{cases}\)'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '\(\theta(x) = \begin{cases} 0 & \text{for}\: x < 0 \\ \frac{1}{2} & \text{for}\:
    x = 0 \\1 & \text{for}\: x > 0 \end{cases}\)'
- en: \(\frac{d}{d x} \max(x, 0) = \theta(x)\)
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: \(\frac{d}{d x} \max(x, 0) = \theta(x)\)
- en: Heaviside(x) is printed as \(\theta(x)\) with the SymPy LaTeX printer.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 当SymPy LaTeX打印机将Heaviside(x)打印为\(\theta(x)\)时。
- en: The value at 0 is set differently in different fields. SymPy uses 1/2, which
    is a convention from electronics and signal processing, and is consistent with
    solving improper integrals by Fourier transform and convolution.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在不同领域中0处的值设置不同。SymPy使用1/2，这是来自电子学和信号处理的约定，并且与通过Fourier变换和卷积求解不适当积分一致。
- en: To specify a different value of Heaviside at `x=0`, a second argument can be
    given. Using `Heaviside(x, nan)` gives an expression that will evaluate to nan
    for x=0.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 要在`x=0`处指定不同值的Heaviside，可以提供第二个参数。使用`Heaviside(x, nan)`会给出一个在`x=0`时评估为nan的表达式。
- en: 'Changed in version 1.9: `Heaviside(0)` now returns 1/2 (before: undefined)'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 从版本1.9开始更改：`Heaviside(0)`现在返回1/2（之前为未定义）
- en: Examples
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE26]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: See also
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`DiracDelta`](#sympy.functions.special.delta_functions.DiracDelta "sympy.functions.special.delta_functions.DiracDelta")'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DiracDelta`](#sympy.functions.special.delta_functions.DiracDelta "sympy.functions.special.delta_functions.DiracDelta")'
- en: References
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R343](#id2)]'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R343](#id2)]'
- en: '[https://mathworld.wolfram.com/HeavisideStepFunction.html](https://mathworld.wolfram.com/HeavisideStepFunction.html)'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/HeavisideStepFunction.html](https://mathworld.wolfram.com/HeavisideStepFunction.html)'
- en: '[[R344](#id3)]'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R344](#id3)]'
- en: '[https://dlmf.nist.gov/1.16#iv](https://dlmf.nist.gov/1.16#iv)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/1.16#iv](https://dlmf.nist.gov/1.16#iv)'
- en: '[PRE27]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Returns a simplified form or a value of Heaviside depending on the argument
    passed by the Heaviside object.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 返回由Heaviside对象传递的参数的简化形式或Heaviside的值。
- en: 'Parameters:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**arg** : argument passed by Heaviside object'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**arg** : 由Heaviside对象传递的参数'
- en: '**H0** : value of Heaviside(0)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**H0** : Heaviside(0)的值'
- en: Explanation
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The `eval()` method is automatically called when the `Heaviside` class is about
    to be instantiated and it returns either some simplified instance or the unevaluated
    instance depending on the argument passed. In other words, `eval()` method is
    not needed to be called explicitly, it is being called and evaluated once the
    object is called.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 当 `Heaviside` 类即将实例化时，`eval()` 方法会自动调用，并返回根据传递的参数而确定的某些简化实例或未评估的实例。换句话说，不需要显式调用
    `eval()` 方法，它在调用对象时被调用和评估。
- en: Examples
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE28]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Returns the first derivative of a Heaviside Function.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 Heaviside 函数的第一阶导数。
- en: 'Parameters:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**argindex** : integer'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '**argindex** : 整数'
- en: order of derivative
  id: totrans-110
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 导数的顺序
- en: Examples
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE38]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[PRE41]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Args without default S.Half
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Args 没有默认值 S.Half
- en: '[PRE43]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Singularity functions are a class of discontinuous functions.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 奇异函数是一类不连续函数。
- en: Explanation
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'Singularity functions take a variable, an offset, and an exponent as arguments.
    These functions are represented using Macaulay brackets as:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 奇异函数以变量、偏移量和指数作为参数。这些函数用 Macaulay 括号表示为：
- en: SingularityFunction(x, a, n) := <x - a>^n
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: SingularityFunction(x, a, n) := <x - a>^n
- en: The singularity function will automatically evaluate to `Derivative(DiracDelta(x
    - a), x, -n - 1)` if `n < 0` and `(x - a)**n*Heaviside(x - a, 1)` if `n >= 0`.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `n < 0`，奇异函数将自动评估为 `Derivative(DiracDelta(x - a), x, -n - 1)`，如果 `n >= 0`，则为
    `(x - a)**n*Heaviside(x - a, 1)`。
- en: Examples
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE44]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: The methods `rewrite(DiracDelta)`, `rewrite(Heaviside)`, and `rewrite('HeavisideDiracDelta')`
    returns the same output. One can use any of these methods according to their choice.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 方法 `rewrite(DiracDelta)`，`rewrite(Heaviside)` 和 `rewrite('HeavisideDiracDelta')`
    返回相同的输出。可以根据需要使用这些方法中的任何一个。
- en: '[PRE45]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: See also
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`DiracDelta`](#sympy.functions.special.delta_functions.DiracDelta "sympy.functions.special.delta_functions.DiracDelta"),
    [`Heaviside`](#sympy.functions.special.delta_functions.Heaviside "sympy.functions.special.delta_functions.Heaviside")'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DiracDelta`](#sympy.functions.special.delta_functions.DiracDelta "sympy.functions.special.delta_functions.DiracDelta")，[`Heaviside`](#sympy.functions.special.delta_functions.Heaviside
    "sympy.functions.special.delta_functions.Heaviside")'
- en: References
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R345](#id4)]'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R345](#id4)]'
- en: '[https://en.wikipedia.org/wiki/Singularity_function](https://en.wikipedia.org/wiki/Singularity_function)'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Singularity_function](https://en.wikipedia.org/wiki/Singularity_function)'
- en: '[PRE46]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Returns a simplified form or a value of Singularity Function depending on the
    argument passed by the object.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 根据对象传递的参数，返回奇异函数的简化形式或值。
- en: Explanation
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The `eval()` method is automatically called when the `SingularityFunction` class
    is about to be instantiated and it returns either some simplified instance or
    the unevaluated instance depending on the argument passed. In other words, `eval()`
    method is not needed to be called explicitly, it is being called and evaluated
    once the object is called.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 当 `SingularityFunction` 类即将实例化时，`eval()` 方法会自动调用，并返回根据传递的参数而确定的某些简化实例或未评估的实例。换句话说，不需要显式调用
    `eval()` 方法，它在调用对象时被调用和评估。
- en: Examples
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE47]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Returns the first derivative of a DiracDelta Function.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 DiracDelta 函数的第一阶导数。
- en: Explanation
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'The difference between `diff()` and `fdiff()` is: `diff()` is the user-level
    function and `fdiff()` is an object method. `fdiff()` is a convenience method
    available in the `Function` class. It returns the derivative of the function without
    considering the chain rule. `diff(function, x)` calls `Function._eval_derivative`
    which in turn calls `fdiff()` internally to compute the derivative of the function.'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '`diff()` 和 `fdiff()` 的区别是：`diff()` 是用户级函数，`fdiff()` 是对象方法。`fdiff()` 是 `Function`
    类中可用的便捷方法。它返回函数的导数，而不考虑链式法则。`diff(function, x)` 调用 `Function._eval_derivative`，后者又在内部调用
    `fdiff()` 来计算函数的导数。'
- en: '## Gamma, Beta and Related Functions'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '## Gamma, Beta and Related Functions'
- en: '[PRE49]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: The gamma function
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: gamma 函数
- en: \[\Gamma(x) := \int^{\infty}_{0} t^{x-1} e^{-t} \mathrm{d}t.\]
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: \[\Gamma(x) := \int^{\infty}_{0} t^{x-1} e^{-t} \mathrm{d}t.\]
- en: Explanation
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The `gamma` function implements the function which passes through the values
    of the factorial function (i.e., \(\Gamma(n) = (n - 1)!\) when n is an integer).
    More generally, \(\Gamma(z)\) is defined in the whole complex plane except at
    the negative integers where there are simple poles.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '`gamma` 函数实现了阶乘函数的值（即，当 n 是整数时，\(\Gamma(n) = (n - 1)!\)）。更一般地，\(\Gamma(z)\)
    在整个复平面上定义，除了负整数处有简单极点。'
- en: Examples
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE50]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Several special values are known:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 已知几个特殊值：
- en: '[PRE51]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'The `gamma` function obeys the mirror symmetry:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '`gamma` 函数遵循镜像对称性：'
- en: '[PRE52]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Differentiation with respect to \(x\) is supported:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 支持相对于 \(x\) 的微分：
- en: '[PRE53]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Series expansion is also supported:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 还支持级数展开：
- en: '[PRE54]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'We can numerically evaluate the `gamma` function to arbitrary precision on
    the whole complex plane:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在整个复平面上任意精度地数值计算`gamma`函数：
- en: '[PRE55]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: See also
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅
- en: '[`lowergamma`](#sympy.functions.special.gamma_functions.lowergamma "sympy.functions.special.gamma_functions.lowergamma")'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '[`lowergamma`](#sympy.functions.special.gamma_functions.lowergamma "sympy.functions.special.gamma_functions.lowergamma")'
- en: Lower incomplete gamma function.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 下不完全伽玛函数。
- en: '[`uppergamma`](#sympy.functions.special.gamma_functions.uppergamma "sympy.functions.special.gamma_functions.uppergamma")'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '[`uppergamma`](#sympy.functions.special.gamma_functions.uppergamma "sympy.functions.special.gamma_functions.uppergamma")'
- en: Upper incomplete gamma function.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 上不完全伽玛函数。
- en: '[`polygamma`](#sympy.functions.special.gamma_functions.polygamma "sympy.functions.special.gamma_functions.polygamma")'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '[`polygamma`](#sympy.functions.special.gamma_functions.polygamma "sympy.functions.special.gamma_functions.polygamma")'
- en: Polygamma function.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 多对数函数。
- en: '[`loggamma`](#sympy.functions.special.gamma_functions.loggamma "sympy.functions.special.gamma_functions.loggamma")'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '[`loggamma`](#sympy.functions.special.gamma_functions.loggamma "sympy.functions.special.gamma_functions.loggamma")'
- en: Log Gamma function.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 对数伽玛函数。
- en: '[`digamma`](#sympy.functions.special.gamma_functions.digamma "sympy.functions.special.gamma_functions.digamma")'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '[`digamma`](#sympy.functions.special.gamma_functions.digamma "sympy.functions.special.gamma_functions.digamma")'
- en: Digamma function.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: Digamma函数。
- en: '[`trigamma`](#sympy.functions.special.gamma_functions.trigamma "sympy.functions.special.gamma_functions.trigamma")'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '[`trigamma`](#sympy.functions.special.gamma_functions.trigamma "sympy.functions.special.gamma_functions.trigamma")'
- en: Trigamma function.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 三对数函数。
- en: '[`sympy.functions.special.beta_functions.beta`](#sympy.functions.special.beta_functions.beta
    "sympy.functions.special.beta_functions.beta")'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.functions.special.beta_functions.beta`](#sympy.functions.special.beta_functions.beta
    "sympy.functions.special.beta_functions.beta")'
- en: Euler Beta function.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 欧拉贝塔函数。
- en: References
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R346](#id5)]'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R346](#id5)]'
- en: '[https://en.wikipedia.org/wiki/Gamma_function](https://en.wikipedia.org/wiki/Gamma_function)'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '[伽玛函数](https://en.wikipedia.org/wiki/Gamma_function)'
- en: '[[R347](#id6)]'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R347](#id6)]'
- en: '[https://dlmf.nist.gov/5](https://dlmf.nist.gov/5)'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/5](https://dlmf.nist.gov/5)'
- en: '[[R348](#id7)]'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R348](#id7)]'
- en: '[https://mathworld.wolfram.com/GammaFunction.html](https://mathworld.wolfram.com/GammaFunction.html)'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/GammaFunction.html](https://mathworld.wolfram.com/GammaFunction.html)'
- en: '[[R349](#id8)]'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R349](#id8)]'
- en: '[https://functions.wolfram.com/GammaBetaErf/Gamma/](https://functions.wolfram.com/GammaBetaErf/Gamma/)'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/GammaBetaErf/Gamma/](https://functions.wolfram.com/GammaBetaErf/Gamma/)'
- en: '[PRE56]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: The `loggamma` function implements the logarithm of the gamma function (i.e.,
    \(\log\Gamma(x)\)).
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '`loggamma`函数实现伽玛函数的对数（即，\(\log\Gamma(x)\))。'
- en: Examples
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Several special values are known. For numerical integral arguments we have:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 已知几个特殊值。对于数值积分参数，我们有：
- en: '[PRE57]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'And for symbolic values:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 以及符号值：
- en: '[PRE58]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'For half-integral values:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 对于半整数值：
- en: '[PRE59]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'And general rational arguments:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 和一般的有理参数：
- en: '[PRE60]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'The `loggamma` function has the following limits towards infinity:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '`loggamma`函数在无穷大时有以下极限：'
- en: '[PRE61]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'The `loggamma` function obeys the mirror symmetry if \(x \in \mathbb{C} \setminus
    \{-\infty, 0\}\):'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 \(x \in \mathbb{C} \setminus \{-\infty, 0\}\)，`loggamma`函数遵循镜像对称性：
- en: '[PRE62]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Differentiation with respect to \(x\) is supported:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 支持对 \(x\) 的微分：
- en: '[PRE63]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Series expansion is also supported:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 还支持级数展开：
- en: '[PRE64]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'We can numerically evaluate the `loggamma` function to arbitrary precision
    on the whole complex plane:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在整个复平面上任意精度地数值计算`loggamma`函数：
- en: '[PRE65]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: See also
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅
- en: '[`gamma`](#sympy.functions.special.gamma_functions.gamma "sympy.functions.special.gamma_functions.gamma")'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '[`gamma`](#sympy.functions.special.gamma_functions.gamma "sympy.functions.special.gamma_functions.gamma")'
- en: Gamma function.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 伽玛函数。
- en: '[`lowergamma`](#sympy.functions.special.gamma_functions.lowergamma "sympy.functions.special.gamma_functions.lowergamma")'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '[`lowergamma`](#sympy.functions.special.gamma_functions.lowergamma "sympy.functions.special.gamma_functions.lowergamma")'
- en: Lower incomplete gamma function.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 下不完全伽玛函数。
- en: '[`uppergamma`](#sympy.functions.special.gamma_functions.uppergamma "sympy.functions.special.gamma_functions.uppergamma")'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '[`uppergamma`](#sympy.functions.special.gamma_functions.uppergamma "sympy.functions.special.gamma_functions.uppergamma")'
- en: Upper incomplete gamma function.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 上不完全伽玛函数。
- en: '[`polygamma`](#sympy.functions.special.gamma_functions.polygamma "sympy.functions.special.gamma_functions.polygamma")'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '[`polygamma`](#sympy.functions.special.gamma_functions.polygamma "sympy.functions.special.gamma_functions.polygamma")'
- en: Polygamma function.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 多对数函数。
- en: '[`digamma`](#sympy.functions.special.gamma_functions.digamma "sympy.functions.special.gamma_functions.digamma")'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '[`digamma`](#sympy.functions.special.gamma_functions.digamma "sympy.functions.special.gamma_functions.digamma")'
- en: Digamma function.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: Digamma函数。
- en: '[`trigamma`](#sympy.functions.special.gamma_functions.trigamma "sympy.functions.special.gamma_functions.trigamma")'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '[`trigamma`](#sympy.functions.special.gamma_functions.trigamma "sympy.functions.special.gamma_functions.trigamma")'
- en: Trigamma function.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: Trigamma 函数。
- en: '[`sympy.functions.special.beta_functions.beta`](#sympy.functions.special.beta_functions.beta
    "sympy.functions.special.beta_functions.beta")'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.functions.special.beta_functions.beta`](#sympy.functions.special.beta_functions.beta
    "sympy.functions.special.beta_functions.beta")'
- en: Euler Beta function.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 欧拉贝塔函数。
- en: References
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R350](#id9)]'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R350](#id9)]'
- en: '[https://en.wikipedia.org/wiki/Gamma_function](https://en.wikipedia.org/wiki/Gamma_function)'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Gamma_function](https://en.wikipedia.org/wiki/Gamma_function)'
- en: '[[R351](#id10)]'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R351](#id10)]'
- en: '[https://dlmf.nist.gov/5](https://dlmf.nist.gov/5)'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/5](https://dlmf.nist.gov/5)'
- en: '[[R352](#id11)]'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R352](#id11)]'
- en: '[https://mathworld.wolfram.com/LogGammaFunction.html](https://mathworld.wolfram.com/LogGammaFunction.html)'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/LogGammaFunction.html](https://mathworld.wolfram.com/LogGammaFunction.html)'
- en: '[[R353](#id12)]'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R353](#id12)]'
- en: '[https://functions.wolfram.com/GammaBetaErf/LogGamma/](https://functions.wolfram.com/GammaBetaErf/LogGamma/)'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/GammaBetaErf/LogGamma/](https://functions.wolfram.com/GammaBetaErf/LogGamma/)'
- en: '[PRE66]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: The function `polygamma(n, z)` returns `log(gamma(z)).diff(n + 1)`.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 函数 `polygamma(n, z)` 返回 `log(gamma(z)).diff(n + 1)`。
- en: Explanation
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'It is a meromorphic function on \(\mathbb{C}\) and defined as the \((n+1)\)-th
    derivative of the logarithm of the gamma function:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 它是 \(\mathbb{C}\) 上的亚黎曼函数，并定义为伽玛函数对数的第 \((n+1)\) 阶导数：
- en: \[\psi^{(n)} (z) := \frac{\mathrm{d}^{n+1}}{\mathrm{d} z^{n+1}} \log\Gamma(z).\]
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: \[\psi^{(n)} (z) := \frac{\mathrm{d}^{n+1}}{\mathrm{d} z^{n+1}} \log\Gamma(z).\]
- en: 'For \(n\) not a nonnegative integer the generalization by Espinosa and Moll
    [[R358]](#r358) is used:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 \(n\) 不是非负整数，使用 Espinosa 和 Moll 的推广[[R358]](#r358)：
- en: \[\psi(s,z) = \frac{\zeta'(s+1, z) + (\gamma + \psi(-s)) \zeta(s+1, z)} {\Gamma(-s)}\]
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: \[\psi(s,z) = \frac{\zeta'(s+1, z) + (\gamma + \psi(-s)) \zeta(s+1, z)} {\Gamma(-s)}\]
- en: Examples
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Several special values are known:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 已知几个特殊值：
- en: '[PRE67]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: '[PRE68]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'Differentiation with respect to \(x\) is supported:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 支持对 \(x\) 的微分：
- en: '[PRE69]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '[PRE70]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'We can rewrite `polygamma` functions in terms of harmonic numbers:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以用调和数来重写 `polygamma` 函数：
- en: '[PRE71]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: See also
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`gamma`](#sympy.functions.special.gamma_functions.gamma "sympy.functions.special.gamma_functions.gamma")'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '[`gamma`](#sympy.functions.special.gamma_functions.gamma "sympy.functions.special.gamma_functions.gamma")'
- en: Gamma function.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: Gamma 函数。
- en: '[`lowergamma`](#sympy.functions.special.gamma_functions.lowergamma "sympy.functions.special.gamma_functions.lowergamma")'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '[`lowergamma`](#sympy.functions.special.gamma_functions.lowergamma "sympy.functions.special.gamma_functions.lowergamma")'
- en: Lower incomplete gamma function.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 下不完全伽玛函数。
- en: '[`uppergamma`](#sympy.functions.special.gamma_functions.uppergamma "sympy.functions.special.gamma_functions.uppergamma")'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '[`uppergamma`](#sympy.functions.special.gamma_functions.uppergamma "sympy.functions.special.gamma_functions.uppergamma")'
- en: Upper incomplete gamma function.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 上不完全伽玛函数。
- en: '[`loggamma`](#sympy.functions.special.gamma_functions.loggamma "sympy.functions.special.gamma_functions.loggamma")'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '[`loggamma`](#sympy.functions.special.gamma_functions.loggamma "sympy.functions.special.gamma_functions.loggamma")'
- en: Log Gamma function.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 对数伽玛函数。
- en: '[`digamma`](#sympy.functions.special.gamma_functions.digamma "sympy.functions.special.gamma_functions.digamma")'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '[`digamma`](#sympy.functions.special.gamma_functions.digamma "sympy.functions.special.gamma_functions.digamma")'
- en: Digamma function.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: Digamma 函数。
- en: '[`trigamma`](#sympy.functions.special.gamma_functions.trigamma "sympy.functions.special.gamma_functions.trigamma")'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '[`trigamma`](#sympy.functions.special.gamma_functions.trigamma "sympy.functions.special.gamma_functions.trigamma")'
- en: Trigamma function.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: Trigamma 函数。
- en: '[`sympy.functions.special.beta_functions.beta`](#sympy.functions.special.beta_functions.beta
    "sympy.functions.special.beta_functions.beta")'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.functions.special.beta_functions.beta`](#sympy.functions.special.beta_functions.beta
    "sympy.functions.special.beta_functions.beta")'
- en: Euler Beta function.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 欧拉贝塔函数。
- en: References
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R354](#id14)]'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R354](#id14)]'
- en: '[https://en.wikipedia.org/wiki/Polygamma_function](https://en.wikipedia.org/wiki/Polygamma_function)'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Polygamma_function](https://en.wikipedia.org/wiki/Polygamma_function)'
- en: '[[R355](#id15)]'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R355](#id15)]'
- en: '[https://mathworld.wolfram.com/PolygammaFunction.html](https://mathworld.wolfram.com/PolygammaFunction.html)'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/PolygammaFunction.html](https://mathworld.wolfram.com/PolygammaFunction.html)'
- en: '[[R356](#id16)]'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R356](#id16)]'
- en: '[https://functions.wolfram.com/GammaBetaErf/PolyGamma/](https://functions.wolfram.com/GammaBetaErf/PolyGamma/)'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/GammaBetaErf/PolyGamma/](https://functions.wolfram.com/GammaBetaErf/PolyGamma/)'
- en: '[[R357](#id17)]'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R357](#id17)]'
- en: '[https://functions.wolfram.com/GammaBetaErf/PolyGamma2/](https://functions.wolfram.com/GammaBetaErf/PolyGamma2/)'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/GammaBetaErf/PolyGamma2/](https://functions.wolfram.com/GammaBetaErf/PolyGamma2/)'
- en: '[R358] ([1](#id13),[2](#id18))'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '[R358] ([1](#id13),[2](#id18))'
- en: O. Espinosa and V. Moll, “A generalized polygamma function”, *Integral Transforms
    and Special Functions* (2004), 101-115.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: O. Espinosa 和 V. Moll，“广义多次伽玛函数”，*积分变换与特殊函数*（2004），101-115。
- en: '[PRE72]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: The `digamma` function is the first derivative of the `loggamma` function
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '`digamma`函数是`loggamma`函数的一阶导数。'
- en: \[\psi(x) := \frac{\mathrm{d}}{\mathrm{d} z} \log\Gamma(z) = \frac{\Gamma'(z)}{\Gamma(z)
    }.\]
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: \[\psi(x) := \frac{\mathrm{d}}{\mathrm{d} z} \log\Gamma(z) = \frac{\Gamma'(z)}{\Gamma(z)
    }.\]
- en: In this case, `digamma(z) = polygamma(0, z)`.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，`digamma(z) = polygamma(0, z)`。
- en: Examples
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE73]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'To retain `digamma` as it is:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 保持`digamma`不变：
- en: '[PRE74]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: See also
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`gamma`](#sympy.functions.special.gamma_functions.gamma "sympy.functions.special.gamma_functions.gamma")'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '[`gamma`](#sympy.functions.special.gamma_functions.gamma "sympy.functions.special.gamma_functions.gamma")'
- en: Gamma function.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: Gamma函数。
- en: '[`lowergamma`](#sympy.functions.special.gamma_functions.lowergamma "sympy.functions.special.gamma_functions.lowergamma")'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '[`lowergamma`](#sympy.functions.special.gamma_functions.lowergamma "sympy.functions.special.gamma_functions.lowergamma")'
- en: Lower incomplete gamma function.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 下不完全伽玛函数。
- en: '[`uppergamma`](#sympy.functions.special.gamma_functions.uppergamma "sympy.functions.special.gamma_functions.uppergamma")'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '[`uppergamma`](#sympy.functions.special.gamma_functions.uppergamma "sympy.functions.special.gamma_functions.uppergamma")'
- en: Upper incomplete gamma function.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 上不完全伽玛函数。
- en: '[`polygamma`](#sympy.functions.special.gamma_functions.polygamma "sympy.functions.special.gamma_functions.polygamma")'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '[`polygamma`](#sympy.functions.special.gamma_functions.polygamma "sympy.functions.special.gamma_functions.polygamma")'
- en: Polygamma function.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 多次伽玛函数。
- en: '[`loggamma`](#sympy.functions.special.gamma_functions.loggamma "sympy.functions.special.gamma_functions.loggamma")'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '[`loggamma`](#sympy.functions.special.gamma_functions.loggamma "sympy.functions.special.gamma_functions.loggamma")'
- en: Log Gamma function.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 对数Gamma函数。
- en: '[`trigamma`](#sympy.functions.special.gamma_functions.trigamma "sympy.functions.special.gamma_functions.trigamma")'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '[`trigamma`](#sympy.functions.special.gamma_functions.trigamma "sympy.functions.special.gamma_functions.trigamma")'
- en: Trigamma function.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 三次伽玛函数。
- en: '[`sympy.functions.special.beta_functions.beta`](#sympy.functions.special.beta_functions.beta
    "sympy.functions.special.beta_functions.beta")'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.functions.special.beta_functions.beta`](#sympy.functions.special.beta_functions.beta
    "sympy.functions.special.beta_functions.beta")'
- en: Euler Beta function.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 欧拉贝塔函数。
- en: References
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R359](#id19)]'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R359](#id19)]'
- en: '[https://en.wikipedia.org/wiki/Digamma_function](https://en.wikipedia.org/wiki/Digamma_function)'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Digamma_function](https://en.wikipedia.org/wiki/Digamma_function)'
- en: '[[R360](#id20)]'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R360](#id20)]'
- en: '[https://mathworld.wolfram.com/DigammaFunction.html](https://mathworld.wolfram.com/DigammaFunction.html)'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/DigammaFunction.html](https://mathworld.wolfram.com/DigammaFunction.html)'
- en: '[[R361](#id21)]'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R361](#id21)]'
- en: '[https://functions.wolfram.com/GammaBetaErf/PolyGamma2/](https://functions.wolfram.com/GammaBetaErf/PolyGamma2/)'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/GammaBetaErf/PolyGamma2/](https://functions.wolfram.com/GammaBetaErf/PolyGamma2/)'
- en: '[PRE75]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: The `trigamma` function is the second derivative of the `loggamma` function
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '`trigamma`函数是`loggamma`函数的二阶导数。'
- en: \[\psi^{(1)}(z) := \frac{\mathrm{d}^{2}}{\mathrm{d} z^{2}} \log\Gamma(z).\]
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: \[\psi^{(1)}(z) := \frac{\mathrm{d}^{2}}{\mathrm{d} z^{2}} \log\Gamma(z).\]
- en: In this case, `trigamma(z) = polygamma(1, z)`.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，`trigamma(z) = polygamma(1, z)`。
- en: Examples
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE76]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'To retain `trigamma` as it is:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 保持`trigamma`不变：
- en: '[PRE77]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: See also
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`gamma`](#sympy.functions.special.gamma_functions.gamma "sympy.functions.special.gamma_functions.gamma")'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: '[`gamma`](#sympy.functions.special.gamma_functions.gamma "sympy.functions.special.gamma_functions.gamma")'
- en: Gamma function.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: Gamma函数。
- en: '[`lowergamma`](#sympy.functions.special.gamma_functions.lowergamma "sympy.functions.special.gamma_functions.lowergamma")'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '[`lowergamma`](#sympy.functions.special.gamma_functions.lowergamma "sympy.functions.special.gamma_functions.lowergamma")'
- en: Lower incomplete gamma function.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 下不完全伽玛函数。
- en: '[`uppergamma`](#sympy.functions.special.gamma_functions.uppergamma "sympy.functions.special.gamma_functions.uppergamma")'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '[`uppergamma`](#sympy.functions.special.gamma_functions.uppergamma "sympy.functions.special.gamma_functions.uppergamma")'
- en: Upper incomplete gamma function.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 上不完全伽玛函数。
- en: '[`polygamma`](#sympy.functions.special.gamma_functions.polygamma "sympy.functions.special.gamma_functions.polygamma")'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '[`polygamma`](#sympy.functions.special.gamma_functions.polygamma "sympy.functions.special.gamma_functions.polygamma")'
- en: Polygamma function.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 多次伽玛函数。
- en: '[`loggamma`](#sympy.functions.special.gamma_functions.loggamma "sympy.functions.special.gamma_functions.loggamma")'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '[`loggamma`](#sympy.functions.special.gamma_functions.loggamma "sympy.functions.special.gamma_functions.loggamma")'
- en: Log Gamma function.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 对数Gamma函数。
- en: '[`digamma`](#sympy.functions.special.gamma_functions.digamma "sympy.functions.special.gamma_functions.digamma")'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '[`digamma`](#sympy.functions.special.gamma_functions.digamma "sympy.functions.special.gamma_functions.digamma")'
- en: Digamma function.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: Digamma函数。
- en: '[`sympy.functions.special.beta_functions.beta`](#sympy.functions.special.beta_functions.beta
    "sympy.functions.special.beta_functions.beta")'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.functions.special.beta_functions.beta`](#sympy.functions.special.beta_functions.beta
    "sympy.functions.special.beta_functions.beta")'
- en: Euler Beta function.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 欧拉贝塔函数。
- en: References
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R362](#id22)]'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R362](#id22)]'
- en: '[https://en.wikipedia.org/wiki/Trigamma_function](https://en.wikipedia.org/wiki/Trigamma_function)'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Trigamma_function](https://en.wikipedia.org/wiki/Trigamma_function)'
- en: '[[R363](#id23)]'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R363](#id23)]'
- en: '[https://mathworld.wolfram.com/TrigammaFunction.html](https://mathworld.wolfram.com/TrigammaFunction.html)'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/TrigammaFunction.html](https://mathworld.wolfram.com/TrigammaFunction.html)'
- en: '[[R364](#id24)]'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R364](#id24)]'
- en: '[https://functions.wolfram.com/GammaBetaErf/PolyGamma2/](https://functions.wolfram.com/GammaBetaErf/PolyGamma2/)'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/GammaBetaErf/PolyGamma2/](https://functions.wolfram.com/GammaBetaErf/PolyGamma2/)'
- en: '[PRE78]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: The upper incomplete gamma function.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 上不完全伽玛函数。
- en: Explanation
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: It can be defined as the meromorphic continuation of
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以定义为
- en: \[\Gamma(s, x) := \int_x^\infty t^{s-1} e^{-t} \mathrm{d}t = \Gamma(s) - \gamma(s,
    x).\]
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: \[\Gamma(s, x) := \int_x^\infty t^{s-1} e^{-t} \mathrm{d}t = \Gamma(s) - \gamma(s,
    x).\]
- en: where \(\gamma(s, x)\) is the lower incomplete gamma function, [`lowergamma`](#sympy.functions.special.gamma_functions.lowergamma
    "sympy.functions.special.gamma_functions.lowergamma"). This can be shown to be
    the same as
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 \(\gamma(s, x)\) 是下不完全伽玛函数，[`lowergamma`](#sympy.functions.special.gamma_functions.lowergamma
    "sympy.functions.special.gamma_functions.lowergamma")。这可以证明与
- en: \[\Gamma(s, x) = \Gamma(s) - \frac{x^s}{s} {}_1F_1\left({s \atop s+1} \middle|
    -x\right),\]
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: \[\Gamma(s, x) = \Gamma(s) - \frac{x^s}{s} {}_1F_1\left({s \atop s+1} \middle|
    -x\right),\]
- en: where \({}_1F_1\) is the (confluent) hypergeometric function.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 \({}_1F_1\) 是超几何函数。
- en: 'The upper incomplete gamma function is also essentially equivalent to the generalized
    exponential integral:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 上不完全伽玛函数也基本等同于广义指数积分：
- en: \[\operatorname{E}_{n}(x) = \int_{1}^{\infty}{\frac{e^{-xt}}{t^n} \, dt} = x^{n-1}\Gamma(1-n,x).\]
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{E}_{n}(x) = \int_{1}^{\infty}{\frac{e^{-xt}}{t^n} \, dt} = x^{n-1}\Gamma(1-n,x).\]
- en: Examples
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE79]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: See also
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`gamma`](#sympy.functions.special.gamma_functions.gamma "sympy.functions.special.gamma_functions.gamma")'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: '[`gamma`](#sympy.functions.special.gamma_functions.gamma "sympy.functions.special.gamma_functions.gamma")'
- en: Gamma function.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 伽玛函数。
- en: '[`lowergamma`](#sympy.functions.special.gamma_functions.lowergamma "sympy.functions.special.gamma_functions.lowergamma")'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '[`lowergamma`](#sympy.functions.special.gamma_functions.lowergamma "sympy.functions.special.gamma_functions.lowergamma")'
- en: Lower incomplete gamma function.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 下不完全伽玛函数。
- en: '[`polygamma`](#sympy.functions.special.gamma_functions.polygamma "sympy.functions.special.gamma_functions.polygamma")'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: '[`polygamma`](#sympy.functions.special.gamma_functions.polygamma "sympy.functions.special.gamma_functions.polygamma")'
- en: Polygamma function.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: Polygamma函数。
- en: '[`loggamma`](#sympy.functions.special.gamma_functions.loggamma "sympy.functions.special.gamma_functions.loggamma")'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: '[`loggamma`](#sympy.functions.special.gamma_functions.loggamma "sympy.functions.special.gamma_functions.loggamma")'
- en: Log Gamma function.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 对数伽玛函数。
- en: '[`digamma`](#sympy.functions.special.gamma_functions.digamma "sympy.functions.special.gamma_functions.digamma")'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '[`digamma`](#sympy.functions.special.gamma_functions.digamma "sympy.functions.special.gamma_functions.digamma")'
- en: Digamma function.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: Digamma函数。
- en: '[`trigamma`](#sympy.functions.special.gamma_functions.trigamma "sympy.functions.special.gamma_functions.trigamma")'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: '[`trigamma`](#sympy.functions.special.gamma_functions.trigamma "sympy.functions.special.gamma_functions.trigamma")'
- en: Trigamma function.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: Trigamma函数。
- en: '[`sympy.functions.special.beta_functions.beta`](#sympy.functions.special.beta_functions.beta
    "sympy.functions.special.beta_functions.beta")'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.functions.special.beta_functions.beta`](#sympy.functions.special.beta_functions.beta
    "sympy.functions.special.beta_functions.beta")'
- en: Euler Beta function.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 欧拉贝塔函数。
- en: References
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R365](#id25)]'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R365](#id25)]'
- en: '[https://en.wikipedia.org/wiki/Incomplete_gamma_function#Upper_incomplete_gamma_function](https://en.wikipedia.org/wiki/Incomplete_gamma_function#Upper_incomplete_gamma_function)'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Incomplete_gamma_function#Upper_incomplete_gamma_function](https://en.wikipedia.org/wiki/Incomplete_gamma_function#Upper_incomplete_gamma_function)'
- en: '[[R366](#id26)]'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R366](#id26)]'
- en: Abramowitz, Milton; Stegun, Irene A., eds. (1965), Chapter 6, Section 5, Handbook
    of Mathematical Functions with Formulas, Graphs, and Mathematical Tables
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: Abramowitz, Milton; Stegun, Irene A., eds. (1965), Chapter 6, Section 5, Handbook
    of Mathematical Functions with Formulas, Graphs, and Mathematical Tables
- en: '[[R367](#id27)]'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R367](#id27)]'
- en: '[https://dlmf.nist.gov/8](https://dlmf.nist.gov/8)'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/8](https://dlmf.nist.gov/8)'
- en: '[[R368](#id28)]'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R368](#id28)]'
- en: '[https://functions.wolfram.com/GammaBetaErf/Gamma2/](https://functions.wolfram.com/GammaBetaErf/Gamma2/)'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/GammaBetaErf/Gamma2/](https://functions.wolfram.com/GammaBetaErf/Gamma2/)'
- en: '[[R369](#id29)]'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R369](#id29)]'
- en: '[https://functions.wolfram.com/GammaBetaErf/Gamma3/](https://functions.wolfram.com/GammaBetaErf/Gamma3/)'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/GammaBetaErf/Gamma3/](https://functions.wolfram.com/GammaBetaErf/Gamma3/)'
- en: '[[R370](#id30)]'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R370](#id30)]'
- en: '[https://en.wikipedia.org/wiki/Exponential_integral#Relation_with_other_functions](https://en.wikipedia.org/wiki/Exponential_integral#Relation_with_other_functions)'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Exponential_integral#Relation_with_other_functions](https://en.wikipedia.org/wiki/Exponential_integral#Relation_with_other_functions)'
- en: '[PRE80]'
  id: totrans-372
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: The lower incomplete gamma function.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 下不完全伽玛函数.
- en: Explanation
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: It can be defined as the meromorphic continuation of
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以定义为
- en: \[\gamma(s, x) := \int_0^x t^{s-1} e^{-t} \mathrm{d}t = \Gamma(s) - \Gamma(s,
    x).\]
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: \[\gamma(s, x) := \int_0^x t^{s-1} e^{-t} \mathrm{d}t = \Gamma(s) - \Gamma(s,
    x).\]
- en: This can be shown to be the same as
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以表明是相同的
- en: \[\gamma(s, x) = \frac{x^s}{s} {}_1F_1\left({s \atop s+1} \middle| -x\right),\]
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: \[\gamma(s, x) = \frac{x^s}{s} {}_1F_1\left({s \atop s+1} \middle| -x\right),\]
- en: where \({}_1F_1\) is the (confluent) hypergeometric function.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 \({}_1F_1\) 是（合流）超几何函数.
- en: Examples
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE81]'
  id: totrans-381
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: See also
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`gamma`](#sympy.functions.special.gamma_functions.gamma "sympy.functions.special.gamma_functions.gamma")'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: '[`gamma`](#sympy.functions.special.gamma_functions.gamma "sympy.functions.special.gamma_functions.gamma")'
- en: Gamma function.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 伽玛函数.
- en: '[`uppergamma`](#sympy.functions.special.gamma_functions.uppergamma "sympy.functions.special.gamma_functions.uppergamma")'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: '[`uppergamma`](#sympy.functions.special.gamma_functions.uppergamma "sympy.functions.special.gamma_functions.uppergamma")'
- en: Upper incomplete gamma function.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 上不完全伽玛函数.
- en: '[`polygamma`](#sympy.functions.special.gamma_functions.polygamma "sympy.functions.special.gamma_functions.polygamma")'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: '[`polygamma`](#sympy.functions.special.gamma_functions.polygamma "sympy.functions.special.gamma_functions.polygamma")'
- en: Polygamma function.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 多次伽玛函数.
- en: '[`loggamma`](#sympy.functions.special.gamma_functions.loggamma "sympy.functions.special.gamma_functions.loggamma")'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: '[`loggamma`](#sympy.functions.special.gamma_functions.loggamma "sympy.functions.special.gamma_functions.loggamma")'
- en: Log Gamma function.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 对数伽玛函数.
- en: '[`digamma`](#sympy.functions.special.gamma_functions.digamma "sympy.functions.special.gamma_functions.digamma")'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: '[`digamma`](#sympy.functions.special.gamma_functions.digamma "sympy.functions.special.gamma_functions.digamma")'
- en: Digamma function.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 二阶Ψ函数.
- en: '[`trigamma`](#sympy.functions.special.gamma_functions.trigamma "sympy.functions.special.gamma_functions.trigamma")'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: '[`trigamma`](#sympy.functions.special.gamma_functions.trigamma "sympy.functions.special.gamma_functions.trigamma")'
- en: Trigamma function.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 三角函数.
- en: '[`sympy.functions.special.beta_functions.beta`](#sympy.functions.special.beta_functions.beta
    "sympy.functions.special.beta_functions.beta")'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.functions.special.beta_functions.beta`](#sympy.functions.special.beta_functions.beta
    "sympy.functions.special.beta_functions.beta")'
- en: Euler Beta function.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 欧拉贝塔函数.
- en: References
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R371](#id31)]'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R371](#id31)]'
- en: '[https://en.wikipedia.org/wiki/Incomplete_gamma_function#Lower_incomplete_gamma_function](https://en.wikipedia.org/wiki/Incomplete_gamma_function#Lower_incomplete_gamma_function)'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Incomplete_gamma_function#Lower_incomplete_gamma_function](https://en.wikipedia.org/wiki/Incomplete_gamma_function#Lower_incomplete_gamma_function)'
- en: '[[R372](#id32)]'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R372](#id32)]'
- en: Abramowitz, Milton; Stegun, Irene A., eds. (1965), Chapter 6, Section 5, Handbook
    of Mathematical Functions with Formulas, Graphs, and Mathematical Tables
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: Abramowitz, Milton; Stegun, Irene A., eds. (1965), Chapter 6, Section 5, Handbook
    of Mathematical Functions with Formulas, Graphs, and Mathematical Tables
- en: '[[R373](#id33)]'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R373](#id33)]'
- en: '[https://dlmf.nist.gov/8](https://dlmf.nist.gov/8)'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/8](https://dlmf.nist.gov/8)'
- en: '[[R374](#id34)]'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R374](#id34)]'
- en: '[https://functions.wolfram.com/GammaBetaErf/Gamma2/](https://functions.wolfram.com/GammaBetaErf/Gamma2/)'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/GammaBetaErf/Gamma2/](https://functions.wolfram.com/GammaBetaErf/Gamma2/)'
- en: '[[R375](#id35)]'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R375](#id35)]'
- en: '[https://functions.wolfram.com/GammaBetaErf/Gamma3/](https://functions.wolfram.com/GammaBetaErf/Gamma3/)'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/GammaBetaErf/Gamma3/](https://functions.wolfram.com/GammaBetaErf/Gamma3/)'
- en: '[PRE82]'
  id: totrans-408
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: The multivariate gamma function is a generalization of the gamma function
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 多元伽玛函数是伽玛函数的一般化
- en: \[\Gamma_p(z) = \pi^{p(p-1)/4}\prod_{k=1}^p \Gamma[z + (1 - k)/2].\]
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: \[\Gamma_p(z) = \pi^{p(p-1)/4}\prod_{k=1}^p \Gamma[z + (1 - k)/2].\]
- en: In a special case, `multigamma(x, 1) = gamma(x)`.
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个特殊情况下，`multigamma(x, 1) = gamma(x)`。
- en: 'Parameters:'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**p** : order or dimension of the multivariate gamma function'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: '**p**：多元伽玛函数的阶数或维度'
- en: Examples
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE83]'
  id: totrans-415
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: '[PRE84]'
  id: totrans-416
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'Several special values are known:'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 已知几个特殊值：
- en: '[PRE85]'
  id: totrans-418
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: 'Writing `multigamma` in terms of the `gamma` function:'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `multigamma` 表示为 `gamma` 函数：
- en: '[PRE86]'
  id: totrans-420
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: '[PRE87]'
  id: totrans-421
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '[PRE88]'
  id: totrans-422
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: See also
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`gamma`](#sympy.functions.special.gamma_functions.gamma "sympy.functions.special.gamma_functions.gamma"),
    [`lowergamma`](#sympy.functions.special.gamma_functions.lowergamma "sympy.functions.special.gamma_functions.lowergamma"),
    [`uppergamma`](#sympy.functions.special.gamma_functions.uppergamma "sympy.functions.special.gamma_functions.uppergamma"),
    [`polygamma`](#sympy.functions.special.gamma_functions.polygamma "sympy.functions.special.gamma_functions.polygamma"),
    [`loggamma`](#sympy.functions.special.gamma_functions.loggamma "sympy.functions.special.gamma_functions.loggamma"),
    [`digamma`](#sympy.functions.special.gamma_functions.digamma "sympy.functions.special.gamma_functions.digamma"),
    [`trigamma`](#sympy.functions.special.gamma_functions.trigamma "sympy.functions.special.gamma_functions.trigamma"),
    [`sympy.functions.special.beta_functions.beta`](#sympy.functions.special.beta_functions.beta
    "sympy.functions.special.beta_functions.beta")'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: '[`gamma`](#sympy.functions.special.gamma_functions.gamma "sympy.functions.special.gamma_functions.gamma"),
    [`lowergamma`](#sympy.functions.special.gamma_functions.lowergamma "sympy.functions.special.gamma_functions.lowergamma"),
    [`uppergamma`](#sympy.functions.special.gamma_functions.uppergamma "sympy.functions.special.gamma_functions.uppergamma"),
    [`polygamma`](#sympy.functions.special.gamma_functions.polygamma "sympy.functions.special.gamma_functions.polygamma"),
    [`loggamma`](#sympy.functions.special.gamma_functions.loggamma "sympy.functions.special.gamma_functions.loggamma"),
    [`digamma`](#sympy.functions.special.gamma_functions.digamma "sympy.functions.special.gamma_functions.digamma"),
    [`trigamma`](#sympy.functions.special.gamma_functions.trigamma "sympy.functions.special.gamma_functions.trigamma"),
    [`sympy.functions.special.beta_functions.beta`](#sympy.functions.special.beta_functions.beta
    "sympy.functions.special.beta_functions.beta")'
- en: References
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R376](#id36)]'
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R376](#id36)]'
- en: '[https://en.wikipedia.org/wiki/Multivariate_gamma_function](https://en.wikipedia.org/wiki/Multivariate_gamma_function)'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Multivariate_gamma_function](https://en.wikipedia.org/wiki/Multivariate_gamma_function)'
- en: '[PRE89]'
  id: totrans-428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'The beta integral is called the Eulerian integral of the first kind by Legendre:'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 贝塔积分被Legendre称为第一类欧拉积分：
- en: \[\mathrm{B}(x,y) \int^{1}_{0} t^{x-1} (1-t)^{y-1} \mathrm{d}t.\]
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: \[\mathrm{B}(x,y) \int^{1}_{0} t^{x-1} (1-t)^{y-1} \mathrm{d}t.\]
- en: Explanation
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: 'The Beta function or Euler’s first integral is closely associated with the
    gamma function. The Beta function is often used in probability theory and mathematical
    statistics. It satisfies properties like:'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 贝塔函数或欧拉第一积分与伽玛函数密切相关。贝塔函数通常用于概率论和数理统计。它满足如下特性：
- en: \[\begin{split}\mathrm{B}(a,1) = \frac{1}{a} \\ \mathrm{B}(a,b) = \mathrm{B}(b,a)
    \\ \mathrm{B}(a,b) = \frac{\Gamma(a) \Gamma(b)}{\Gamma(a+b)}\end{split}\]
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}\mathrm{B}(a,1) = \frac{1}{a} \\ \mathrm{B}(a,b) = \mathrm{B}(b,a)
    \\ \mathrm{B}(a,b) = \frac{\Gamma(a) \Gamma(b)}{\Gamma(a+b)}\end{split}\]
- en: 'Therefore for integral values of \(a\) and \(b\):'
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 因此对于\(a\)和\(b\)的整数值：
- en: \[\mathrm{B} = \frac{(a-1)! (b-1)!}{(a+b-1)!}\]
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: \[\mathrm{B} = \frac{(a-1)! (b-1)!}{(a+b-1)!}\]
- en: 'A special case of the Beta function when \(x = y\) is the Central Beta function.
    It satisfies properties like:'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 当\(x = y\)时贝塔函数的特殊情况是中心贝塔函数。它具有如下特性：
- en: \[\mathrm{B}(x) = 2^{1 - 2x}\mathrm{B}(x, \frac{1}{2}) \mathrm{B}(x) = 2^{1
    - 2x} cos(\pi x) \mathrm{B}(\frac{1}{2} - x, x) \mathrm{B}(x) = \int_{0}^{1} \frac{t^x}{(1
    + t)^{2x}} dt \mathrm{B}(x) = \frac{2}{x} \prod_{n = 1}^{\infty} \frac{n(n + 2x)}{(n
    + x)^2}\]
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: \[\mathrm{B}(x) = 2^{1 - 2x}\mathrm{B}(x, \frac{1}{2}) \mathrm{B}(x) = 2^{1
    - 2x} cos(\pi x) \mathrm{B}(\frac{1}{2} - x, x) \mathrm{B}(x) = \int_{0}^{1} \frac{t^x}{(1
    + t)^{2x}} dt \mathrm{B}(x) = \frac{2}{x} \prod_{n = 1}^{\infty} \frac{n(n + 2x)}{(n
    + x)^2}\]
- en: Examples
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE90]'
  id: totrans-439
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: 'The Beta function obeys the mirror symmetry:'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 贝塔函数遵循镜像对称性：
- en: '[PRE91]'
  id: totrans-441
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: 'Differentiation with respect to both \(x\) and \(y\) is supported:'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 支持对\(x\)和\(y\)的微分：
- en: '[PRE92]'
  id: totrans-443
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: '[PRE93]'
  id: totrans-444
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: '[PRE94]'
  id: totrans-445
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: 'We can numerically evaluate the Beta function to arbitrary precision for any
    complex numbers x and y:'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以对复数\(x\)和\(y\)任意精确评估贝塔函数：
- en: '[PRE95]'
  id: totrans-447
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: '[PRE96]'
  id: totrans-448
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: See also
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`gamma`](#sympy.functions.special.gamma_functions.gamma "sympy.functions.special.gamma_functions.gamma")'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: '[`gamma`](#sympy.functions.special.gamma_functions.gamma "sympy.functions.special.gamma_functions.gamma")'
- en: Gamma function.
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 伽玛函数。
- en: '[`uppergamma`](#sympy.functions.special.gamma_functions.uppergamma "sympy.functions.special.gamma_functions.uppergamma")'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: '[`uppergamma`](#sympy.functions.special.gamma_functions.uppergamma "sympy.functions.special.gamma_functions.uppergamma")'
- en: Upper incomplete gamma function.
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 上不完全伽玛函数。
- en: '[`lowergamma`](#sympy.functions.special.gamma_functions.lowergamma "sympy.functions.special.gamma_functions.lowergamma")'
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: '[`lowergamma`](#sympy.functions.special.gamma_functions.lowergamma "sympy.functions.special.gamma_functions.lowergamma")'
- en: Lower incomplete gamma function.
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 下不完全伽玛函数。
- en: '[`polygamma`](#sympy.functions.special.gamma_functions.polygamma "sympy.functions.special.gamma_functions.polygamma")'
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: '[`polygamma`](#sympy.functions.special.gamma_functions.polygamma "sympy.functions.special.gamma_functions.polygamma")'
- en: Polygamma function.
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 多元伽玛函数。
- en: '[`loggamma`](#sympy.functions.special.gamma_functions.loggamma "sympy.functions.special.gamma_functions.loggamma")'
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: '[`loggamma`](#sympy.functions.special.gamma_functions.loggamma "sympy.functions.special.gamma_functions.loggamma")'
- en: Log Gamma function.
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 对数伽马函数。
- en: '[`digamma`](#sympy.functions.special.gamma_functions.digamma "sympy.functions.special.gamma_functions.digamma")'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: '[`digamma`](#sympy.functions.special.gamma_functions.digamma "sympy.functions.special.gamma_functions.digamma")'
- en: Digamma function.
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 三角斐函数。
- en: '[`trigamma`](#sympy.functions.special.gamma_functions.trigamma "sympy.functions.special.gamma_functions.trigamma")'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: '[`trigamma`](#sympy.functions.special.gamma_functions.trigamma "sympy.functions.special.gamma_functions.trigamma")'
- en: Trigamma function.
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 三角伽马函数。
- en: References
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R377](#id37)]'
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R377](#id37)]'
- en: '[https://en.wikipedia.org/wiki/Beta_function](https://en.wikipedia.org/wiki/Beta_function)'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Beta_function](https://en.wikipedia.org/wiki/Beta_function)'
- en: '[[R378](#id38)]'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R378](#id38)]'
- en: '[https://mathworld.wolfram.com/BetaFunction.html](https://mathworld.wolfram.com/BetaFunction.html)'
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/BetaFunction.html](https://mathworld.wolfram.com/BetaFunction.html)'
- en: '[[R379](#id39)]'
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R379](#id39)]'
- en: '[https://dlmf.nist.gov/5.12](https://dlmf.nist.gov/5.12)  ## Error Functions
    and Fresnel Integrals'
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/5.12](https://dlmf.nist.gov/5.12)  ## 误差函数与菲涅尔积分'
- en: '[PRE97]'
  id: totrans-471
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: The Gauss error function.
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 高斯误差函数。
- en: Explanation
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'This function is defined as:'
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数定义为：
- en: \[\mathrm{erf}(x) = \frac{2}{\sqrt{\pi}} \int_0^x e^{-t^2} \mathrm{d}t.\]
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: \[\mathrm{erf}(x) = \frac{2}{\sqrt{\pi}} \int_0^x e^{-t^2} \mathrm{d}t.\]
- en: Examples
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE98]'
  id: totrans-477
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: 'Several special values are known:'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 已知几个特殊值：
- en: '[PRE99]'
  id: totrans-479
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: 'In general one can pull out factors of -1 and \(I\) from the argument:'
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，可以从参数中提取因子-1和\(I\)：
- en: '[PRE100]'
  id: totrans-481
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: 'The error function obeys the mirror symmetry:'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 误差函数遵循镜像对称性：
- en: '[PRE101]'
  id: totrans-483
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: 'Differentiation with respect to \(z\) is supported:'
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 支持对\(z\)的微分：
- en: '[PRE102]'
  id: totrans-485
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: 'We can numerically evaluate the error function to arbitrary precision on the
    whole complex plane:'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在整个复平面上对误差函数进行任意精度的数值评估：
- en: '[PRE103]'
  id: totrans-487
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: '[PRE104]'
  id: totrans-488
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: See also
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`erfc`](#sympy.functions.special.error_functions.erfc "sympy.functions.special.error_functions.erfc")'
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfc`](#sympy.functions.special.error_functions.erfc "sympy.functions.special.error_functions.erfc")'
- en: Complementary error function.
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: 补充误差函数。
- en: '[`erfi`](#sympy.functions.special.error_functions.erfi "sympy.functions.special.error_functions.erfi")'
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfi`](#sympy.functions.special.error_functions.erfi "sympy.functions.special.error_functions.erfi")'
- en: Imaginary error function.
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 虚数误差函数。
- en: '[`erf2`](#sympy.functions.special.error_functions.erf2 "sympy.functions.special.error_functions.erf2")'
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erf2`](#sympy.functions.special.error_functions.erf2 "sympy.functions.special.error_functions.erf2")'
- en: Two-argument error function.
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 二参数误差函数。
- en: '[`erfinv`](#sympy.functions.special.error_functions.erfinv "sympy.functions.special.error_functions.erfinv")'
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfinv`](#sympy.functions.special.error_functions.erfinv "sympy.functions.special.error_functions.erfinv")'
- en: Inverse error function.
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 误差函数的反函数。
- en: '[`erfcinv`](#sympy.functions.special.error_functions.erfcinv "sympy.functions.special.error_functions.erfcinv")'
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfcinv`](#sympy.functions.special.error_functions.erfcinv "sympy.functions.special.error_functions.erfcinv")'
- en: Inverse Complementary error function.
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 补充误差函数的反函数。
- en: '[`erf2inv`](#sympy.functions.special.error_functions.erf2inv "sympy.functions.special.error_functions.erf2inv")'
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erf2inv`](#sympy.functions.special.error_functions.erf2inv "sympy.functions.special.error_functions.erf2inv")'
- en: Inverse two-argument error function.
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 二参数误差函数的反函数。
- en: References
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R380](#id40)]'
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R380](#id40)]'
- en: '[https://en.wikipedia.org/wiki/Error_function](https://en.wikipedia.org/wiki/Error_function)'
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Error_function](https://en.wikipedia.org/wiki/Error_function)'
- en: '[[R381](#id41)]'
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R381](#id41)]'
- en: '[https://dlmf.nist.gov/7](https://dlmf.nist.gov/7)'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/7](https://dlmf.nist.gov/7)'
- en: '[[R382](#id42)]'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R382](#id42)]'
- en: '[https://mathworld.wolfram.com/Erf.html](https://mathworld.wolfram.com/Erf.html)'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/Erf.html](https://mathworld.wolfram.com/Erf.html)'
- en: '[[R383](#id43)]'
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R383](#id43)]'
- en: '[https://functions.wolfram.com/GammaBetaErf/Erf](https://functions.wolfram.com/GammaBetaErf/Erf)'
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/GammaBetaErf/Erf](https://functions.wolfram.com/GammaBetaErf/Erf)'
- en: '[PRE105]'
  id: totrans-511
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: Returns the inverse of this function.
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 返回该函数的反函数。
- en: '[PRE106]'
  id: totrans-513
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: Complementary Error Function.
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 补充误差函数。
- en: Explanation
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'The function is defined as:'
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数定义为：
- en: \[\mathrm{erfc}(x) = \frac{2}{\sqrt{\pi}} \int_x^\infty e^{-t^2} \mathrm{d}t\]
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: \[\mathrm{erfc}(x) = \frac{2}{\sqrt{\pi}} \int_x^\infty e^{-t^2} \mathrm{d}t\]
- en: Examples
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE107]'
  id: totrans-519
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: 'Several special values are known:'
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 已知几个特殊值：
- en: '[PRE108]'
  id: totrans-521
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: 'The error function obeys the mirror symmetry:'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 误差函数遵循镜像对称性：
- en: '[PRE109]'
  id: totrans-523
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: 'Differentiation with respect to \(z\) is supported:'
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: 支持对\(z\)的微分：
- en: '[PRE110]'
  id: totrans-525
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: It also follows
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: 也遵循
- en: '[PRE111]'
  id: totrans-527
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: 'We can numerically evaluate the complementary error function to arbitrary precision
    on the whole complex plane:'
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在整个复平面上对补充误差函数进行任意精度的数值评估：
- en: '[PRE112]'
  id: totrans-529
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: '[PRE113]'
  id: totrans-530
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: See also
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`erf`](#sympy.functions.special.error_functions.erf "sympy.functions.special.error_functions.erf")'
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erf`](#sympy.functions.special.error_functions.erf "sympy.functions.special.error_functions.erf")'
- en: Gaussian error function.
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: 高斯误差函数。
- en: '[`erfi`](#sympy.functions.special.error_functions.erfi "sympy.functions.special.error_functions.erfi")'
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfi`](#sympy.functions.special.error_functions.erfi "sympy.functions.special.error_functions.erfi")'
- en: Imaginary error function.
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: 虚误差函数。
- en: '[`erf2`](#sympy.functions.special.error_functions.erf2 "sympy.functions.special.error_functions.erf2")'
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erf2`](#sympy.functions.special.error_functions.erf2 "sympy.functions.special.error_functions.erf2")'
- en: Two-argument error function.
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: 二参数误差函数。
- en: '[`erfinv`](#sympy.functions.special.error_functions.erfinv "sympy.functions.special.error_functions.erfinv")'
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfinv`](#sympy.functions.special.error_functions.erfinv "sympy.functions.special.error_functions.erfinv")'
- en: Inverse error function.
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: 逆误差函数。
- en: '[`erfcinv`](#sympy.functions.special.error_functions.erfcinv "sympy.functions.special.error_functions.erfcinv")'
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfcinv`](#sympy.functions.special.error_functions.erfcinv "sympy.functions.special.error_functions.erfcinv")'
- en: Inverse Complementary error function.
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: 逆补充误差函数。
- en: '[`erf2inv`](#sympy.functions.special.error_functions.erf2inv "sympy.functions.special.error_functions.erf2inv")'
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erf2inv`](#sympy.functions.special.error_functions.erf2inv "sympy.functions.special.error_functions.erf2inv")'
- en: Inverse two-argument error function.
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: 逆二参数误差函数。
- en: References
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R384](#id44)]'
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R384](#id44)]'
- en: '[https://en.wikipedia.org/wiki/Error_function](https://en.wikipedia.org/wiki/Error_function)'
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Error_function](https://en.wikipedia.org/wiki/Error_function)'
- en: '[[R385](#id45)]'
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R385](#id45)]'
- en: '[https://dlmf.nist.gov/7](https://dlmf.nist.gov/7)'
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/7](https://dlmf.nist.gov/7)'
- en: '[[R386](#id46)]'
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R386](#id46)]'
- en: '[https://mathworld.wolfram.com/Erfc.html](https://mathworld.wolfram.com/Erfc.html)'
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/Erfc.html](https://mathworld.wolfram.com/Erfc.html)'
- en: '[[R387](#id47)]'
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R387](#id47)]'
- en: '[https://functions.wolfram.com/GammaBetaErf/Erfc](https://functions.wolfram.com/GammaBetaErf/Erfc)'
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/GammaBetaErf/Erfc](https://functions.wolfram.com/GammaBetaErf/Erfc)'
- en: '[PRE114]'
  id: totrans-553
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: Returns the inverse of this function.
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此函数的逆。
- en: '[PRE115]'
  id: totrans-555
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: Imaginary error function.
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 虚误差函数。
- en: Explanation
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'The function erfi is defined as:'
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: 函数 erfi 定义为：
- en: \[\mathrm{erfi}(x) = \frac{2}{\sqrt{\pi}} \int_0^x e^{t^2} \mathrm{d}t\]
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: \[\mathrm{erfi}(x) = \frac{2}{\sqrt{\pi}} \int_0^x e^{t^2} \mathrm{d}t\]
- en: Examples
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE116]'
  id: totrans-561
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: 'Several special values are known:'
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: 已知几个特殊值：
- en: '[PRE117]'
  id: totrans-563
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: 'In general one can pull out factors of -1 and \(I\) from the argument:'
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: 通常可以从参数中提取出因子 -1 和 \(I\) ：
- en: '[PRE118]'
  id: totrans-565
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: '[PRE119]'
  id: totrans-566
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: 'Differentiation with respect to \(z\) is supported:'
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: 对 \(z\) 的微分受支持：
- en: '[PRE120]'
  id: totrans-568
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: 'We can numerically evaluate the imaginary error function to arbitrary precision
    on the whole complex plane:'
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在整个复平面上对虚误差函数进行任意精度的数值评估：
- en: '[PRE121]'
  id: totrans-570
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: '[PRE122]'
  id: totrans-571
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: See also
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`erf`](#sympy.functions.special.error_functions.erf "sympy.functions.special.error_functions.erf")'
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erf`](#sympy.functions.special.error_functions.erf "sympy.functions.special.error_functions.erf")'
- en: Gaussian error function.
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: 高斯误差函数。
- en: '[`erfc`](#sympy.functions.special.error_functions.erfc "sympy.functions.special.error_functions.erfc")'
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfc`](#sympy.functions.special.error_functions.erfc "sympy.functions.special.error_functions.erfc")'
- en: Complementary error function.
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: 补充误差函数。
- en: '[`erf2`](#sympy.functions.special.error_functions.erf2 "sympy.functions.special.error_functions.erf2")'
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erf2`](#sympy.functions.special.error_functions.erf2 "sympy.functions.special.error_functions.erf2")'
- en: Two-argument error function.
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: 二参数误差函数。
- en: '[`erfinv`](#sympy.functions.special.error_functions.erfinv "sympy.functions.special.error_functions.erfinv")'
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfinv`](#sympy.functions.special.error_functions.erfinv "sympy.functions.special.error_functions.erfinv")'
- en: Inverse error function.
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: 逆误差函数。
- en: '[`erfcinv`](#sympy.functions.special.error_functions.erfcinv "sympy.functions.special.error_functions.erfcinv")'
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfcinv`](#sympy.functions.special.error_functions.erfcinv "sympy.functions.special.error_functions.erfcinv")'
- en: Inverse Complementary error function.
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: 逆补充误差函数。
- en: '[`erf2inv`](#sympy.functions.special.error_functions.erf2inv "sympy.functions.special.error_functions.erf2inv")'
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erf2inv`](#sympy.functions.special.error_functions.erf2inv "sympy.functions.special.error_functions.erf2inv")'
- en: Inverse two-argument error function.
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: 逆二参数误差函数。
- en: References
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R388](#id48)]'
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R388](#id48)]'
- en: '[https://en.wikipedia.org/wiki/Error_function](https://en.wikipedia.org/wiki/Error_function)'
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Error_function](https://en.wikipedia.org/wiki/Error_function)'
- en: '[[R389](#id49)]'
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R389](#id49)]'
- en: '[https://mathworld.wolfram.com/Erfi.html](https://mathworld.wolfram.com/Erfi.html)'
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/Erfi.html](https://mathworld.wolfram.com/Erfi.html)'
- en: '[[R390](#id50)]'
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R390](#id50)]'
- en: '[https://functions.wolfram.com/GammaBetaErf/Erfi](https://functions.wolfram.com/GammaBetaErf/Erfi)'
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/GammaBetaErf/Erfi](https://functions.wolfram.com/GammaBetaErf/Erfi)'
- en: '[PRE123]'
  id: totrans-592
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: Two-argument error function.
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: 二参数误差函数。
- en: Explanation
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'This function is defined as:'
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数定义为：
- en: \[\mathrm{erf2}(x, y) = \frac{2}{\sqrt{\pi}} \int_x^y e^{-t^2} \mathrm{d}t\]
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
  zh: \[\mathrm{erf2}(x, y) = \frac{2}{\sqrt{\pi}} \int_x^y e^{-t^2} \mathrm{d}t\]
- en: Examples
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE124]'
  id: totrans-598
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: 'Several special values are known:'
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: 已知几个特殊值：
- en: '[PRE125]'
  id: totrans-600
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: 'In general one can pull out factors of -1:'
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: 通常可以从参数中提取出因子 -1：
- en: '[PRE126]'
  id: totrans-602
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: 'The error function obeys the mirror symmetry:'
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: 误差函数服从镜像对称性：
- en: '[PRE127]'
  id: totrans-604
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: 'Differentiation with respect to \(x\), \(y\) is supported:'
  id: totrans-605
  prefs: []
  type: TYPE_NORMAL
  zh: 支持关于\(x\)、\(y\)的微分：
- en: '[PRE128]'
  id: totrans-606
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: See also
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`erf`](#sympy.functions.special.error_functions.erf "sympy.functions.special.error_functions.erf")'
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erf`](#sympy.functions.special.error_functions.erf "sympy.functions.special.error_functions.erf")'
- en: Gaussian error function.
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
  zh: 高斯误差函数。
- en: '[`erfc`](#sympy.functions.special.error_functions.erfc "sympy.functions.special.error_functions.erfc")'
  id: totrans-610
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfc`](#sympy.functions.special.error_functions.erfc "sympy.functions.special.error_functions.erfc")'
- en: Complementary error function.
  id: totrans-611
  prefs: []
  type: TYPE_NORMAL
  zh: 互补误差函数。
- en: '[`erfi`](#sympy.functions.special.error_functions.erfi "sympy.functions.special.error_functions.erfi")'
  id: totrans-612
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfi`](#sympy.functions.special.error_functions.erfi "sympy.functions.special.error_functions.erfi")'
- en: Imaginary error function.
  id: totrans-613
  prefs: []
  type: TYPE_NORMAL
  zh: 虚误差函数。
- en: '[`erfinv`](#sympy.functions.special.error_functions.erfinv "sympy.functions.special.error_functions.erfinv")'
  id: totrans-614
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfinv`](#sympy.functions.special.error_functions.erfinv "sympy.functions.special.error_functions.erfinv")'
- en: Inverse error function.
  id: totrans-615
  prefs: []
  type: TYPE_NORMAL
  zh: 逆误差函数。
- en: '[`erfcinv`](#sympy.functions.special.error_functions.erfcinv "sympy.functions.special.error_functions.erfcinv")'
  id: totrans-616
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfcinv`](#sympy.functions.special.error_functions.erfcinv "sympy.functions.special.error_functions.erfcinv")'
- en: Inverse Complementary error function.
  id: totrans-617
  prefs: []
  type: TYPE_NORMAL
  zh: 逆互补误差函数。
- en: '[`erf2inv`](#sympy.functions.special.error_functions.erf2inv "sympy.functions.special.error_functions.erf2inv")'
  id: totrans-618
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erf2inv`](#sympy.functions.special.error_functions.erf2inv "sympy.functions.special.error_functions.erf2inv")'
- en: Inverse two-argument error function.
  id: totrans-619
  prefs: []
  type: TYPE_NORMAL
  zh: 逆二参数误差函数。
- en: References
  id: totrans-620
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R391](#id51)]'
  id: totrans-621
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R391](#id51)]'
- en: '[https://functions.wolfram.com/GammaBetaErf/Erf2/](https://functions.wolfram.com/GammaBetaErf/Erf2/)'
  id: totrans-622
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/GammaBetaErf/Erf2/](https://functions.wolfram.com/GammaBetaErf/Erf2/)'
- en: '[PRE129]'
  id: totrans-623
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: 'Inverse Error Function. The erfinv function is defined as:'
  id: totrans-624
  prefs: []
  type: TYPE_NORMAL
  zh: '逆误差函数。erfinv函数定义为:'
- en: \[\mathrm{erf}(x) = y \quad \Rightarrow \quad \mathrm{erfinv}(y) = x\]
  id: totrans-625
  prefs: []
  type: TYPE_NORMAL
  zh: \[\mathrm{erf}(x) = y \quad \Rightarrow \quad \mathrm{erfinv}(y) = x\]
- en: Examples
  id: totrans-626
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE130]'
  id: totrans-627
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: 'Several special values are known:'
  id: totrans-628
  prefs: []
  type: TYPE_NORMAL
  zh: 已知几个特殊值：
- en: '[PRE131]'
  id: totrans-629
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: 'Differentiation with respect to \(x\) is supported:'
  id: totrans-630
  prefs: []
  type: TYPE_NORMAL
  zh: 支持关于\(x\)的微分：
- en: '[PRE132]'
  id: totrans-631
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: 'We can numerically evaluate the inverse error function to arbitrary precision
    on [-1, 1]:'
  id: totrans-632
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在[-1, 1]上数值评估逆误差函数到任意精度：
- en: '[PRE133]'
  id: totrans-633
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: See also
  id: totrans-634
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`erf`](#sympy.functions.special.error_functions.erf "sympy.functions.special.error_functions.erf")'
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erf`](#sympy.functions.special.error_functions.erf "sympy.functions.special.error_functions.erf")'
- en: Gaussian error function.
  id: totrans-636
  prefs: []
  type: TYPE_NORMAL
  zh: 高斯误差函数。
- en: '[`erfc`](#sympy.functions.special.error_functions.erfc "sympy.functions.special.error_functions.erfc")'
  id: totrans-637
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfc`](#sympy.functions.special.error_functions.erfc "sympy.functions.special.error_functions.erfc")'
- en: Complementary error function.
  id: totrans-638
  prefs: []
  type: TYPE_NORMAL
  zh: 互补误差函数。
- en: '[`erfi`](#sympy.functions.special.error_functions.erfi "sympy.functions.special.error_functions.erfi")'
  id: totrans-639
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfi`](#sympy.functions.special.error_functions.erfi "sympy.functions.special.error_functions.erfi")'
- en: Imaginary error function.
  id: totrans-640
  prefs: []
  type: TYPE_NORMAL
  zh: 虚误差函数。
- en: '[`erf2`](#sympy.functions.special.error_functions.erf2 "sympy.functions.special.error_functions.erf2")'
  id: totrans-641
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erf2`](#sympy.functions.special.error_functions.erf2 "sympy.functions.special.error_functions.erf2")'
- en: Two-argument error function.
  id: totrans-642
  prefs: []
  type: TYPE_NORMAL
  zh: 二参数误差函数。
- en: '[`erfcinv`](#sympy.functions.special.error_functions.erfcinv "sympy.functions.special.error_functions.erfcinv")'
  id: totrans-643
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfcinv`](#sympy.functions.special.error_functions.erfcinv "sympy.functions.special.error_functions.erfcinv")'
- en: Inverse Complementary error function.
  id: totrans-644
  prefs: []
  type: TYPE_NORMAL
  zh: 逆互补误差函数。
- en: '[`erf2inv`](#sympy.functions.special.error_functions.erf2inv "sympy.functions.special.error_functions.erf2inv")'
  id: totrans-645
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erf2inv`](#sympy.functions.special.error_functions.erf2inv "sympy.functions.special.error_functions.erf2inv")'
- en: Inverse two-argument error function.
  id: totrans-646
  prefs: []
  type: TYPE_NORMAL
  zh: 逆二参数误差函数。
- en: References
  id: totrans-647
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R392](#id52)]'
  id: totrans-648
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R392](#id52)]'
- en: '[https://en.wikipedia.org/wiki/Error_function#Inverse_functions](https://en.wikipedia.org/wiki/Error_function#Inverse_functions)'
  id: totrans-649
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Error_function#Inverse_functions](https://en.wikipedia.org/wiki/Error_function#Inverse_functions)'
- en: '[[R393](#id53)]'
  id: totrans-650
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R393](#id53)]'
- en: '[https://functions.wolfram.com/GammaBetaErf/InverseErf/](https://functions.wolfram.com/GammaBetaErf/InverseErf/)'
  id: totrans-651
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/GammaBetaErf/InverseErf/](https://functions.wolfram.com/GammaBetaErf/InverseErf/)'
- en: '[PRE134]'
  id: totrans-652
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: Returns the inverse of this function.
  id: totrans-653
  prefs: []
  type: TYPE_NORMAL
  zh: 返回该函数的逆。
- en: '[PRE135]'
  id: totrans-654
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: 'Inverse Complementary Error Function. The erfcinv function is defined as:'
  id: totrans-655
  prefs: []
  type: TYPE_NORMAL
  zh: 逆互补误差函数。erfcinv函数定义为：
- en: \[\mathrm{erfc}(x) = y \quad \Rightarrow \quad \mathrm{erfcinv}(y) = x\]
  id: totrans-656
  prefs: []
  type: TYPE_NORMAL
  zh: \[\mathrm{erfc}(x) = y \quad \Rightarrow \quad \mathrm{erfcinv}(y) = x\]
- en: Examples
  id: totrans-657
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE136]'
  id: totrans-658
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: 'Several special values are known:'
  id: totrans-659
  prefs: []
  type: TYPE_NORMAL
  zh: 已知几个特殊值：
- en: '[PRE137]'
  id: totrans-660
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: 'Differentiation with respect to \(x\) is supported:'
  id: totrans-661
  prefs: []
  type: TYPE_NORMAL
  zh: 支持关于\(x\)的微分：
- en: '[PRE138]'
  id: totrans-662
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: See also
  id: totrans-663
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`erf`](#sympy.functions.special.error_functions.erf "sympy.functions.special.error_functions.erf")'
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erf`](#sympy.functions.special.error_functions.erf "sympy.functions.special.error_functions.erf")'
- en: Gaussian error function.
  id: totrans-665
  prefs: []
  type: TYPE_NORMAL
  zh: 高斯误差函数。
- en: '[`erfc`](#sympy.functions.special.error_functions.erfc "sympy.functions.special.error_functions.erfc")'
  id: totrans-666
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfc`](#sympy.functions.special.error_functions.erfc "sympy.functions.special.error_functions.erfc")'
- en: Complementary error function.
  id: totrans-667
  prefs: []
  type: TYPE_NORMAL
  zh: 互补误差函数。
- en: '[`erfi`](#sympy.functions.special.error_functions.erfi "sympy.functions.special.error_functions.erfi")'
  id: totrans-668
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfi`](#sympy.functions.special.error_functions.erfi "sympy.functions.special.error_functions.erfi")'
- en: Imaginary error function.
  id: totrans-669
  prefs: []
  type: TYPE_NORMAL
  zh: 虚误差函数。
- en: '[`erf2`](#sympy.functions.special.error_functions.erf2 "sympy.functions.special.error_functions.erf2")'
  id: totrans-670
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erf2`](#sympy.functions.special.error_functions.erf2 "sympy.functions.special.error_functions.erf2")'
- en: Two-argument error function.
  id: totrans-671
  prefs: []
  type: TYPE_NORMAL
  zh: 双参数误差函数。
- en: '[`erfinv`](#sympy.functions.special.error_functions.erfinv "sympy.functions.special.error_functions.erfinv")'
  id: totrans-672
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfinv`](#sympy.functions.special.error_functions.erfinv "sympy.functions.special.error_functions.erfinv")'
- en: Inverse error function.
  id: totrans-673
  prefs: []
  type: TYPE_NORMAL
  zh: 逆误差函数。
- en: '[`erf2inv`](#sympy.functions.special.error_functions.erf2inv "sympy.functions.special.error_functions.erf2inv")'
  id: totrans-674
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erf2inv`](#sympy.functions.special.error_functions.erf2inv "sympy.functions.special.error_functions.erf2inv")'
- en: Inverse two-argument error function.
  id: totrans-675
  prefs: []
  type: TYPE_NORMAL
  zh: 双参数逆误差函数。
- en: References
  id: totrans-676
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R394](#id54)]'
  id: totrans-677
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R394](#id54)]'
- en: '[https://en.wikipedia.org/wiki/Error_function#Inverse_functions](https://en.wikipedia.org/wiki/Error_function#Inverse_functions)'
  id: totrans-678
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Error_function#Inverse_functions](https://en.wikipedia.org/wiki/Error_function#Inverse_functions)'
- en: '[[R395](#id55)]'
  id: totrans-679
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R395](#id55)]'
- en: '[https://functions.wolfram.com/GammaBetaErf/InverseErfc/](https://functions.wolfram.com/GammaBetaErf/InverseErfc/)'
  id: totrans-680
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/GammaBetaErf/InverseErfc/](https://functions.wolfram.com/GammaBetaErf/InverseErfc/)'
- en: '[PRE139]'
  id: totrans-681
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: Returns the inverse of this function.
  id: totrans-682
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此函数的逆。
- en: '[PRE140]'
  id: totrans-683
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: 'Two-argument Inverse error function. The erf2inv function is defined as:'
  id: totrans-684
  prefs: []
  type: TYPE_NORMAL
  zh: 双参数逆误差函数。erf2inv 函数定义如下：
- en: \[\mathrm{erf2}(x, w) = y \quad \Rightarrow \quad \mathrm{erf2inv}(x, y) = w\]
  id: totrans-685
  prefs: []
  type: TYPE_NORMAL
  zh: \[\mathrm{erf2}(x, w) = y \quad \Rightarrow \quad \mathrm{erf2inv}(x, y) = w\]
- en: Examples
  id: totrans-686
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE141]'
  id: totrans-687
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: 'Several special values are known:'
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
  zh: 已知几个特殊值：
- en: '[PRE142]'
  id: totrans-689
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: 'Differentiation with respect to \(x\) and \(y\) is supported:'
  id: totrans-690
  prefs: []
  type: TYPE_NORMAL
  zh: 支持对 \(x\) 和 \(y\) 的微分：
- en: '[PRE143]'
  id: totrans-691
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: See also
  id: totrans-692
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`erf`](#sympy.functions.special.error_functions.erf "sympy.functions.special.error_functions.erf")'
  id: totrans-693
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erf`](#sympy.functions.special.error_functions.erf "sympy.functions.special.error_functions.erf")'
- en: Gaussian error function.
  id: totrans-694
  prefs: []
  type: TYPE_NORMAL
  zh: 高斯误差函数。
- en: '[`erfc`](#sympy.functions.special.error_functions.erfc "sympy.functions.special.error_functions.erfc")'
  id: totrans-695
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfc`](#sympy.functions.special.error_functions.erfc "sympy.functions.special.error_functions.erfc")'
- en: Complementary error function.
  id: totrans-696
  prefs: []
  type: TYPE_NORMAL
  zh: 互补误差函数。
- en: '[`erfi`](#sympy.functions.special.error_functions.erfi "sympy.functions.special.error_functions.erfi")'
  id: totrans-697
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfi`](#sympy.functions.special.error_functions.erfi "sympy.functions.special.error_functions.erfi")'
- en: Imaginary error function.
  id: totrans-698
  prefs: []
  type: TYPE_NORMAL
  zh: 虚误差函数。
- en: '[`erf2`](#sympy.functions.special.error_functions.erf2 "sympy.functions.special.error_functions.erf2")'
  id: totrans-699
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erf2`](#sympy.functions.special.error_functions.erf2 "sympy.functions.special.error_functions.erf2")'
- en: Two-argument error function.
  id: totrans-700
  prefs: []
  type: TYPE_NORMAL
  zh: 双参数误差函数。
- en: '[`erfinv`](#sympy.functions.special.error_functions.erfinv "sympy.functions.special.error_functions.erfinv")'
  id: totrans-701
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfinv`](#sympy.functions.special.error_functions.erfinv "sympy.functions.special.error_functions.erfinv")'
- en: Inverse error function.
  id: totrans-702
  prefs: []
  type: TYPE_NORMAL
  zh: 逆误差函数。
- en: '[`erfcinv`](#sympy.functions.special.error_functions.erfcinv "sympy.functions.special.error_functions.erfcinv")'
  id: totrans-703
  prefs: []
  type: TYPE_NORMAL
  zh: '[`erfcinv`](#sympy.functions.special.error_functions.erfcinv "sympy.functions.special.error_functions.erfcinv")'
- en: Inverse complementary error function.
  id: totrans-704
  prefs: []
  type: TYPE_NORMAL
  zh: 逆互补误差函数。
- en: References
  id: totrans-705
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R396](#id56)]'
  id: totrans-706
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R396](#id56)]'
- en: '[https://functions.wolfram.com/GammaBetaErf/InverseErf2/](https://functions.wolfram.com/GammaBetaErf/InverseErf2/)'
  id: totrans-707
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/GammaBetaErf/InverseErf2/](https://functions.wolfram.com/GammaBetaErf/InverseErf2/)'
- en: '[PRE144]'
  id: totrans-708
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: Base class for the Fresnel integrals.
  id: totrans-709
  prefs: []
  type: TYPE_NORMAL
  zh: Fresnel 积分的基类。
- en: '[PRE145]'
  id: totrans-710
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: Fresnel integral S.
  id: totrans-711
  prefs: []
  type: TYPE_NORMAL
  zh: Fresnel 积分 S。
- en: Explanation
  id: totrans-712
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This function is defined by
  id: totrans-713
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数由以下定义
- en: \[\operatorname{S}(z) = \int_0^z \sin{\frac{\pi}{2} t^2} \mathrm{d}t.\]
  id: totrans-714
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{S}(z) = \int_0^z \sin{\frac{\pi}{2} t^2} \mathrm{d}t.\]
- en: It is an entire function.
  id: totrans-715
  prefs: []
  type: TYPE_NORMAL
  zh: 它是一个整函数。
- en: Examples
  id: totrans-716
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE146]'
  id: totrans-717
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: 'Several special values are known:'
  id: totrans-718
  prefs: []
  type: TYPE_NORMAL
  zh: 已知几个特殊值：
- en: '[PRE147]'
  id: totrans-719
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: 'In general one can pull out factors of -1 and \(i\) from the argument:'
  id: totrans-720
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，可以从参数中提取因子 -1 和 \(i\)：
- en: '[PRE148]'
  id: totrans-721
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: 'The Fresnel S integral obeys the mirror symmetry \(\overline{S(z)} = S(\bar{z})\):'
  id: totrans-722
  prefs: []
  type: TYPE_NORMAL
  zh: 'Fresnel S 积分遵循镜像对称性 \(\overline{S(z)} = S(\bar{z})\):'
- en: '[PRE149]'
  id: totrans-723
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: 'Differentiation with respect to \(z\) is supported:'
  id: totrans-724
  prefs: []
  type: TYPE_NORMAL
  zh: 支持对 \(z\) 的微分：
- en: '[PRE150]'
  id: totrans-725
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: 'Defining the Fresnel functions via an integral:'
  id: totrans-726
  prefs: []
  type: TYPE_NORMAL
  zh: 通过积分定义 Fresnel 函数：
- en: '[PRE151]'
  id: totrans-727
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: 'We can numerically evaluate the Fresnel integral to arbitrary precision on
    the whole complex plane:'
  id: totrans-728
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在整个复平面上对 Fresnel 积分进行任意精度的数值评估：
- en: '[PRE152]'
  id: totrans-729
  prefs: []
  type: TYPE_PRE
  zh: '[PRE152]'
- en: '[PRE153]'
  id: totrans-730
  prefs: []
  type: TYPE_PRE
  zh: '[PRE153]'
- en: See also
  id: totrans-731
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`fresnelc`](#sympy.functions.special.error_functions.fresnelc "sympy.functions.special.error_functions.fresnelc")'
  id: totrans-732
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fresnelc`](#sympy.functions.special.error_functions.fresnelc "sympy.functions.special.error_functions.fresnelc")'
- en: Fresnel cosine integral.
  id: totrans-733
  prefs: []
  type: TYPE_NORMAL
  zh: Fresnel 余弦积分。
- en: References
  id: totrans-734
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R397](#id57)]'
  id: totrans-735
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R397](#id57)]'
- en: '[https://en.wikipedia.org/wiki/Fresnel_integral](https://en.wikipedia.org/wiki/Fresnel_integral)'
  id: totrans-736
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Fresnel_integral](https://en.wikipedia.org/wiki/Fresnel_integral)'
- en: '[[R398](#id58)]'
  id: totrans-737
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R398](#id58)]'
- en: '[https://dlmf.nist.gov/7](https://dlmf.nist.gov/7)'
  id: totrans-738
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/7](https://dlmf.nist.gov/7)'
- en: '[[R399](#id59)]'
  id: totrans-739
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R399](#id59)]'
- en: '[https://mathworld.wolfram.com/FresnelIntegrals.html](https://mathworld.wolfram.com/FresnelIntegrals.html)'
  id: totrans-740
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/FresnelIntegrals.html](https://mathworld.wolfram.com/FresnelIntegrals.html)'
- en: '[[R400](#id60)]'
  id: totrans-741
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R400](#id60)]'
- en: '[https://functions.wolfram.com/GammaBetaErf/FresnelS](https://functions.wolfram.com/GammaBetaErf/FresnelS)'
  id: totrans-742
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/GammaBetaErf/FresnelS](https://functions.wolfram.com/GammaBetaErf/FresnelS)'
- en: '[[R401](#id61)]'
  id: totrans-743
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R401](#id61)]'
- en: The converging factors for the fresnel integrals by John W. Wrench Jr. and Vicki
    Alley
  id: totrans-744
  prefs: []
  type: TYPE_NORMAL
  zh: 由John W. Wrench Jr.和Vicki Alley推导的Fresnel积分的收敛因子
- en: '[PRE154]'
  id: totrans-745
  prefs: []
  type: TYPE_PRE
  zh: '[PRE154]'
- en: Fresnel integral C.
  id: totrans-746
  prefs: []
  type: TYPE_NORMAL
  zh: Fresnel积分C。
- en: Explanation
  id: totrans-747
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This function is defined by
  id: totrans-748
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数由以下定义：
- en: \[\operatorname{C}(z) = \int_0^z \cos{\frac{\pi}{2} t^2} \mathrm{d}t.\]
  id: totrans-749
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{C}(z) = \int_0^z \cos{\frac{\pi}{2} t^2} \mathrm{d}t.\]
- en: It is an entire function.
  id: totrans-750
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个整函数。
- en: Examples
  id: totrans-751
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE155]'
  id: totrans-752
  prefs: []
  type: TYPE_PRE
  zh: '[PRE155]'
- en: 'Several special values are known:'
  id: totrans-753
  prefs: []
  type: TYPE_NORMAL
  zh: 已知几个特殊值：
- en: '[PRE156]'
  id: totrans-754
  prefs: []
  type: TYPE_PRE
  zh: '[PRE156]'
- en: 'In general one can pull out factors of -1 and \(i\) from the argument:'
  id: totrans-755
  prefs: []
  type: TYPE_NORMAL
  zh: 通常可以从参数中提取出-1和\(i\)的因子：
- en: '[PRE157]'
  id: totrans-756
  prefs: []
  type: TYPE_PRE
  zh: '[PRE157]'
- en: 'The Fresnel C integral obeys the mirror symmetry \(\overline{C(z)} = C(\bar{z})\):'
  id: totrans-757
  prefs: []
  type: TYPE_NORMAL
  zh: Fresnel C积分遵守镜像对称性 \(\overline{C(z)} = C(\bar{z})\)：
- en: '[PRE158]'
  id: totrans-758
  prefs: []
  type: TYPE_PRE
  zh: '[PRE158]'
- en: 'Differentiation with respect to \(z\) is supported:'
  id: totrans-759
  prefs: []
  type: TYPE_NORMAL
  zh: 支持对\(z\)微分：
- en: '[PRE159]'
  id: totrans-760
  prefs: []
  type: TYPE_PRE
  zh: '[PRE159]'
- en: 'Defining the Fresnel functions via an integral:'
  id: totrans-761
  prefs: []
  type: TYPE_NORMAL
  zh: 通过积分定义Fresnel函数：
- en: '[PRE160]'
  id: totrans-762
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: 'We can numerically evaluate the Fresnel integral to arbitrary precision on
    the whole complex plane:'
  id: totrans-763
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在整个复平面上对Fresnel积分进行任意精度的数值评估：
- en: '[PRE161]'
  id: totrans-764
  prefs: []
  type: TYPE_PRE
  zh: '[PRE161]'
- en: '[PRE162]'
  id: totrans-765
  prefs: []
  type: TYPE_PRE
  zh: '[PRE162]'
- en: See also
  id: totrans-766
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`fresnels`](#sympy.functions.special.error_functions.fresnels "sympy.functions.special.error_functions.fresnels")'
  id: totrans-767
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fresnels`](#sympy.functions.special.error_functions.fresnels "sympy.functions.special.error_functions.fresnels")'
- en: Fresnel sine integral.
  id: totrans-768
  prefs: []
  type: TYPE_NORMAL
  zh: Fresnel正弦积分。
- en: References
  id: totrans-769
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R402](#id62)]'
  id: totrans-770
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R402](#id62)]'
- en: '[https://en.wikipedia.org/wiki/Fresnel_integral](https://en.wikipedia.org/wiki/Fresnel_integral)'
  id: totrans-771
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Fresnel_integral](https://en.wikipedia.org/wiki/Fresnel_integral)'
- en: '[[R403](#id63)]'
  id: totrans-772
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R403](#id63)]'
- en: '[https://dlmf.nist.gov/7](https://dlmf.nist.gov/7)'
  id: totrans-773
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/7](https://dlmf.nist.gov/7)'
- en: '[[R404](#id64)]'
  id: totrans-774
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R404](#id64)]'
- en: '[https://mathworld.wolfram.com/FresnelIntegrals.html](https://mathworld.wolfram.com/FresnelIntegrals.html)'
  id: totrans-775
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/FresnelIntegrals.html](https://mathworld.wolfram.com/FresnelIntegrals.html)'
- en: '[[R405](#id65)]'
  id: totrans-776
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R405](#id65)]'
- en: '[https://functions.wolfram.com/GammaBetaErf/FresnelC](https://functions.wolfram.com/GammaBetaErf/FresnelC)'
  id: totrans-777
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/GammaBetaErf/FresnelC](https://functions.wolfram.com/GammaBetaErf/FresnelC)'
- en: '[[R406](#id66)]'
  id: totrans-778
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R406](#id66)]'
- en: The converging factors for the fresnel integrals by John W. Wrench Jr. and Vicki
    Alley
  id: totrans-779
  prefs: []
  type: TYPE_NORMAL
  zh: 由John W. Wrench Jr.和Vicki Alley推导的Fresnel积分的收敛因子
- en: Exponential, Logarithmic and Trigonometric Integrals
  id: totrans-780
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 指数、对数和三角积分
- en: '[PRE163]'
  id: totrans-781
  prefs: []
  type: TYPE_PRE
  zh: '[PRE163]'
- en: The classical exponential integral.
  id: totrans-782
  prefs: []
  type: TYPE_NORMAL
  zh: 经典指数积分。
- en: Explanation
  id: totrans-783
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: For use in SymPy, this function is defined as
  id: totrans-784
  prefs: []
  type: TYPE_NORMAL
  zh: 用于SymPy，此函数定义如下：
- en: \[\operatorname{Ei}(x) = \sum_{n=1}^\infty \frac{x^n}{n\, n!} + \log(x) + \gamma,\]
  id: totrans-785
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{Ei}(x) = \sum_{n=1}^\infty \frac{x^n}{n\, n!} + \log(x) + \gamma,\]
- en: where \(\gamma\) is the Euler-Mascheroni constant.
  id: totrans-786
  prefs: []
  type: TYPE_NORMAL
  zh: 其中\(\gamma\)是欧拉-马斯切罗尼常数。
- en: If \(x\) is a polar number, this defines an analytic function on the Riemann
    surface of the logarithm. Otherwise this defines an analytic function in the cut
    plane \(\mathbb{C} \setminus (-\infty, 0]\).
  id: totrans-787
  prefs: []
  type: TYPE_NORMAL
  zh: 如果\(x\)是极坐标数，则在对数的Riemann面上定义了一个解析函数。否则，在割面\(\mathbb{C} \setminus (-\infty,
    0]\)中定义了一个解析函数。
- en: '**Background**'
  id: totrans-788
  prefs: []
  type: TYPE_NORMAL
  zh: '**背景**'
- en: 'The name exponential integral comes from the following statement:'
  id: totrans-789
  prefs: []
  type: TYPE_NORMAL
  zh: 指数积分的名称来源于以下声明：
- en: \[\operatorname{Ei}(x) = \int_{-\infty}^x \frac{e^t}{t} \mathrm{d}t\]
  id: totrans-790
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{Ei}(x) = \int_{-\infty}^x \frac{e^t}{t} \mathrm{d}t\]
- en: If the integral is interpreted as a Cauchy principal value, this statement holds
    for \(x > 0\) and \(\operatorname{Ei}(x)\) as defined above.
  id: totrans-791
  prefs: []
  type: TYPE_NORMAL
  zh: 如果将积分解释为柯西主值，则对于\(x > 0\)和上述定义的\(\operatorname{Ei}(x)\)，此声明成立。
- en: Examples
  id: totrans-792
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE164]'
  id: totrans-793
  prefs: []
  type: TYPE_PRE
  zh: '[PRE164]'
- en: '[PRE165]'
  id: totrans-794
  prefs: []
  type: TYPE_PRE
  zh: '[PRE165]'
- en: 'This yields a real value:'
  id: totrans-795
  prefs: []
  type: TYPE_NORMAL
  zh: 这产生一个实数值：
- en: '[PRE166]'
  id: totrans-796
  prefs: []
  type: TYPE_PRE
  zh: '[PRE166]'
- en: 'On the other hand the analytic continuation is not real:'
  id: totrans-797
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，解析延拓并非实数：
- en: '[PRE167]'
  id: totrans-798
  prefs: []
  type: TYPE_PRE
  zh: '[PRE167]'
- en: 'The exponential integral has a logarithmic branch point at the origin:'
  id: totrans-799
  prefs: []
  type: TYPE_NORMAL
  zh: 指数积分在原点有对数分支点：
- en: '[PRE168]'
  id: totrans-800
  prefs: []
  type: TYPE_PRE
  zh: '[PRE168]'
- en: 'Differentiation is supported:'
  id: totrans-801
  prefs: []
  type: TYPE_NORMAL
  zh: 支持微分：
- en: '[PRE169]'
  id: totrans-802
  prefs: []
  type: TYPE_PRE
  zh: '[PRE169]'
- en: 'The exponential integral is related to many other special functions. For example:'
  id: totrans-803
  prefs: []
  type: TYPE_NORMAL
  zh: 指数积分与许多其他特殊函数相关联。例如：
- en: '[PRE170]'
  id: totrans-804
  prefs: []
  type: TYPE_PRE
  zh: '[PRE170]'
- en: See also
  id: totrans-805
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`expint`](#sympy.functions.special.error_functions.expint "sympy.functions.special.error_functions.expint")'
  id: totrans-806
  prefs: []
  type: TYPE_NORMAL
  zh: '[`expint`](#sympy.functions.special.error_functions.expint "sympy.functions.special.error_functions.expint")'
- en: Generalised exponential integral.
  id: totrans-807
  prefs: []
  type: TYPE_NORMAL
  zh: 广义指数积分。
- en: '[`E1`](#sympy.functions.special.error_functions.E1 "sympy.functions.special.error_functions.E1")'
  id: totrans-808
  prefs: []
  type: TYPE_NORMAL
  zh: '[`E1`](#sympy.functions.special.error_functions.E1 "sympy.functions.special.error_functions.E1")'
- en: Special case of the generalised exponential integral.
  id: totrans-809
  prefs: []
  type: TYPE_NORMAL
  zh: 广义指数积分的特殊情况。
- en: '[`li`](#sympy.functions.special.error_functions.li "sympy.functions.special.error_functions.li")'
  id: totrans-810
  prefs: []
  type: TYPE_NORMAL
  zh: '[`li`](#sympy.functions.special.error_functions.li "sympy.functions.special.error_functions.li")'
- en: Logarithmic integral.
  id: totrans-811
  prefs: []
  type: TYPE_NORMAL
  zh: 对数积分。
- en: '[`Li`](#sympy.functions.special.error_functions.Li "sympy.functions.special.error_functions.Li")'
  id: totrans-812
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Li`](#sympy.functions.special.error_functions.Li "sympy.functions.special.error_functions.Li")'
- en: Offset logarithmic integral.
  id: totrans-813
  prefs: []
  type: TYPE_NORMAL
  zh: 偏移对数积分。
- en: '[`Si`](#sympy.functions.special.error_functions.Si "sympy.functions.special.error_functions.Si")'
  id: totrans-814
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Si`](#sympy.functions.special.error_functions.Si "sympy.functions.special.error_functions.Si")'
- en: Sine integral.
  id: totrans-815
  prefs: []
  type: TYPE_NORMAL
  zh: 正弦积分。
- en: '[`Ci`](#sympy.functions.special.error_functions.Ci "sympy.functions.special.error_functions.Ci")'
  id: totrans-816
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Ci`](#sympy.functions.special.error_functions.Ci "sympy.functions.special.error_functions.Ci")'
- en: Cosine integral.
  id: totrans-817
  prefs: []
  type: TYPE_NORMAL
  zh: 余弦积分。
- en: '[`Shi`](#sympy.functions.special.error_functions.Shi "sympy.functions.special.error_functions.Shi")'
  id: totrans-818
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Shi`](#sympy.functions.special.error_functions.Shi "sympy.functions.special.error_functions.Shi")'
- en: Hyperbolic sine integral.
  id: totrans-819
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲正弦积分。
- en: '[`Chi`](#sympy.functions.special.error_functions.Chi "sympy.functions.special.error_functions.Chi")'
  id: totrans-820
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Chi`](#sympy.functions.special.error_functions.Chi "sympy.functions.special.error_functions.Chi")'
- en: Hyperbolic cosine integral.
  id: totrans-821
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲余弦积分。
- en: '[`uppergamma`](#sympy.functions.special.gamma_functions.uppergamma "sympy.functions.special.gamma_functions.uppergamma")'
  id: totrans-822
  prefs: []
  type: TYPE_NORMAL
  zh: '[`uppergamma`](#sympy.functions.special.gamma_functions.uppergamma "sympy.functions.special.gamma_functions.uppergamma")'
- en: Upper incomplete gamma function.
  id: totrans-823
  prefs: []
  type: TYPE_NORMAL
  zh: 上不完全Gamma函数。
- en: References
  id: totrans-824
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R407](#id67)]'
  id: totrans-825
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R407](#id67)]'
- en: '[https://dlmf.nist.gov/6.6](https://dlmf.nist.gov/6.6)'
  id: totrans-826
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/6.6](https://dlmf.nist.gov/6.6)'
- en: '[[R408](#id68)]'
  id: totrans-827
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R408](#id68)]'
- en: '[https://en.wikipedia.org/wiki/Exponential_integral](https://en.wikipedia.org/wiki/Exponential_integral)'
  id: totrans-828
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Exponential_integral](https://en.wikipedia.org/wiki/Exponential_integral)'
- en: '[[R409](#id69)]'
  id: totrans-829
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R409](#id69)]'
- en: 'Abramowitz & Stegun, section 5: [https://web.archive.org/web/20201128173312/http://people.math.sfu.ca/~cbm/aands/page_228.htm](https://web.archive.org/web/20201128173312/http://people.math.sfu.ca/~cbm/aands/page_228.htm)'
  id: totrans-830
  prefs: []
  type: TYPE_NORMAL
  zh: 'Abramowitz & Stegun, section 5: [https://web.archive.org/web/20201128173312/http://people.math.sfu.ca/~cbm/aands/page_228.htm](https://web.archive.org/web/20201128173312/http://people.math.sfu.ca/~cbm/aands/page_228.htm)'
- en: '[PRE171]'
  id: totrans-831
  prefs: []
  type: TYPE_PRE
  zh: '[PRE171]'
- en: Generalized exponential integral.
  id: totrans-832
  prefs: []
  type: TYPE_NORMAL
  zh: 广义指数积分。
- en: Explanation
  id: totrans-833
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This function is defined as
  id: totrans-834
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数定义为
- en: \[\operatorname{E}_\nu(z) = z^{\nu - 1} \Gamma(1 - \nu, z),\]
  id: totrans-835
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{E}_\nu(z) = z^{\nu - 1} \Gamma(1 - \nu, z),\]
- en: where \(\Gamma(1 - \nu, z)\) is the upper incomplete gamma function (`uppergamma`).
  id: totrans-836
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 \(\Gamma(1 - \nu, z)\) 是上不完全Gamma函数 (`uppergamma`)。
- en: Hence for \(z\) with positive real part we have
  id: totrans-837
  prefs: []
  type: TYPE_NORMAL
  zh: 因此对于具有正实部的 \(z\) 我们有
- en: \[\operatorname{E}_\nu(z) = \int_1^\infty \frac{e^{-zt}}{t^\nu} \mathrm{d}t,\]
  id: totrans-838
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{E}_\nu(z) = \int_1^\infty \frac{e^{-zt}}{t^\nu} \mathrm{d}t,\]
- en: which explains the name.
  id: totrans-839
  prefs: []
  type: TYPE_NORMAL
  zh: 这解释了其名称。
- en: The representation as an incomplete gamma function provides an analytic continuation
    for \(\operatorname{E}_\nu(z)\). If \(\nu\) is a non-positive integer, the exponential
    integral is thus an unbranched function of \(z\), otherwise there is a branch
    point at the origin. Refer to the incomplete gamma function documentation for
    details of the branching behavior.
  id: totrans-840
  prefs: []
  type: TYPE_NORMAL
  zh: 表示为不完全Gamma函数提供了 \(\operatorname{E}_\nu(z)\) 的解析延拓。如果 \(\nu\) 是非正整数，则指数积分是 \(z\)
    的一个非分支函数，否则在原点有一个分支点。详细的分支行为请参考不完全Gamma函数的文档。
- en: Examples
  id: totrans-841
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE172]'
  id: totrans-842
  prefs: []
  type: TYPE_PRE
  zh: '[PRE172]'
- en: 'Differentiation is supported. Differentiation with respect to \(z\) further
    explains the name: for integral orders, the exponential integral is an iterated
    integral of the exponential function.'
  id: totrans-843
  prefs: []
  type: TYPE_NORMAL
  zh: 支持微分。对 \(z\) 的微分进一步解释了名称：对于整数阶，指数积分是指数函数的迭代积分。
- en: '[PRE173]'
  id: totrans-844
  prefs: []
  type: TYPE_PRE
  zh: '[PRE173]'
- en: 'Differentiation with respect to \(\nu\) has no classical expression:'
  id: totrans-845
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 \(\nu\) 的微分没有经典表达式：
- en: '[PRE174]'
  id: totrans-846
  prefs: []
  type: TYPE_PRE
  zh: '[PRE174]'
- en: 'At non-postive integer orders, the exponential integral reduces to the exponential
    function:'
  id: totrans-847
  prefs: []
  type: TYPE_NORMAL
  zh: 在非正整数阶时，指数积分简化为指数函数：
- en: '[PRE175]'
  id: totrans-848
  prefs: []
  type: TYPE_PRE
  zh: '[PRE175]'
- en: 'At half-integers it reduces to error functions:'
  id: totrans-849
  prefs: []
  type: TYPE_NORMAL
  zh: 在半整数处，它简化为误差函数：
- en: '[PRE176]'
  id: totrans-850
  prefs: []
  type: TYPE_PRE
  zh: '[PRE176]'
- en: 'At positive integer orders it can be rewritten in terms of exponentials and
    `expint(1, z)`. Use `expand_func()` to do this:'
  id: totrans-851
  prefs: []
  type: TYPE_NORMAL
  zh: 在正整数阶时，它可以用指数形式和 `expint(1, z)` 重写。使用 `expand_func()` 来完成这一点：
- en: '[PRE177]'
  id: totrans-852
  prefs: []
  type: TYPE_PRE
  zh: '[PRE177]'
- en: 'The generalised exponential integral is essentially equivalent to the incomplete
    gamma function:'
  id: totrans-853
  prefs: []
  type: TYPE_NORMAL
  zh: 广义指数积分本质上等同于不完全Gamma函数：
- en: '[PRE178]'
  id: totrans-854
  prefs: []
  type: TYPE_PRE
  zh: '[PRE178]'
- en: 'As such it is branched at the origin:'
  id: totrans-855
  prefs: []
  type: TYPE_NORMAL
  zh: 因此它在原点处分支：
- en: '[PRE179]'
  id: totrans-856
  prefs: []
  type: TYPE_PRE
  zh: '[PRE179]'
- en: See also
  id: totrans-857
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`Ei`](#sympy.functions.special.error_functions.Ei "sympy.functions.special.error_functions.Ei")'
  id: totrans-858
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Ei`](#sympy.functions.special.error_functions.Ei "sympy.functions.special.error_functions.Ei")'
- en: Another related function called exponential integral.
  id: totrans-859
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个相关的称为指数积分的函数。
- en: '[`E1`](#sympy.functions.special.error_functions.E1 "sympy.functions.special.error_functions.E1")'
  id: totrans-860
  prefs: []
  type: TYPE_NORMAL
  zh: '[`E1`](#sympy.functions.special.error_functions.E1 "sympy.functions.special.error_functions.E1")'
- en: The classical case, returns expint(1, z).
  id: totrans-861
  prefs: []
  type: TYPE_NORMAL
  zh: 经典情况，返回`expint(1, z)`。
- en: '[`li`](#sympy.functions.special.error_functions.li "sympy.functions.special.error_functions.li")'
  id: totrans-862
  prefs: []
  type: TYPE_NORMAL
  zh: '[`li`](#sympy.functions.special.error_functions.li "sympy.functions.special.error_functions.li")'
- en: Logarithmic integral.
  id: totrans-863
  prefs: []
  type: TYPE_NORMAL
  zh: 对数积分。
- en: '[`Li`](#sympy.functions.special.error_functions.Li "sympy.functions.special.error_functions.Li")'
  id: totrans-864
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Li`](#sympy.functions.special.error_functions.Li "sympy.functions.special.error_functions.Li")'
- en: Offset logarithmic integral.
  id: totrans-865
  prefs: []
  type: TYPE_NORMAL
  zh: 偏移对数积分。
- en: '[`Si`](#sympy.functions.special.error_functions.Si "sympy.functions.special.error_functions.Si")'
  id: totrans-866
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Si`](#sympy.functions.special.error_functions.Si "sympy.functions.special.error_functions.Si")'
- en: Sine integral.
  id: totrans-867
  prefs: []
  type: TYPE_NORMAL
  zh: 正弦积分。
- en: '[`Ci`](#sympy.functions.special.error_functions.Ci "sympy.functions.special.error_functions.Ci")'
  id: totrans-868
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Ci`](#sympy.functions.special.error_functions.Ci "sympy.functions.special.error_functions.Ci")'
- en: Cosine integral.
  id: totrans-869
  prefs: []
  type: TYPE_NORMAL
  zh: 余弦积分。
- en: '[`Shi`](#sympy.functions.special.error_functions.Shi "sympy.functions.special.error_functions.Shi")'
  id: totrans-870
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Shi`](#sympy.functions.special.error_functions.Shi "sympy.functions.special.error_functions.Shi")'
- en: Hyperbolic sine integral.
  id: totrans-871
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲正弦积分。
- en: '[`Chi`](#sympy.functions.special.error_functions.Chi "sympy.functions.special.error_functions.Chi")'
  id: totrans-872
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Chi`](#sympy.functions.special.error_functions.Chi "sympy.functions.special.error_functions.Chi")'
- en: Hyperbolic cosine integral.
  id: totrans-873
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲余弦积分。
- en: '[`uppergamma`](#sympy.functions.special.gamma_functions.uppergamma "sympy.functions.special.gamma_functions.uppergamma")'
  id: totrans-874
  prefs: []
  type: TYPE_NORMAL
  zh: '[`uppergamma`](#sympy.functions.special.gamma_functions.uppergamma "sympy.functions.special.gamma_functions.uppergamma")'
- en: References
  id: totrans-875
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R410](#id70)]'
  id: totrans-876
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R410](#id70)]'
- en: '[https://dlmf.nist.gov/8.19](https://dlmf.nist.gov/8.19)'
  id: totrans-877
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/8.19](https://dlmf.nist.gov/8.19)'
- en: '[[R411](#id71)]'
  id: totrans-878
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R411](#id71)]'
- en: '[https://functions.wolfram.com/GammaBetaErf/ExpIntegralE/](https://functions.wolfram.com/GammaBetaErf/ExpIntegralE/)'
  id: totrans-879
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/GammaBetaErf/ExpIntegralE/](https://functions.wolfram.com/GammaBetaErf/ExpIntegralE/)'
- en: '[[R412](#id72)]'
  id: totrans-880
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R412](#id72)]'
- en: '[https://en.wikipedia.org/wiki/Exponential_integral](https://en.wikipedia.org/wiki/Exponential_integral)'
  id: totrans-881
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Exponential_integral](https://en.wikipedia.org/wiki/Exponential_integral)'
- en: '[PRE180]'
  id: totrans-882
  prefs: []
  type: TYPE_PRE
  zh: '[PRE180]'
- en: Classical case of the generalized exponential integral.
  id: totrans-883
  prefs: []
  type: TYPE_NORMAL
  zh: 广义指数积分的经典情况。
- en: Explanation
  id: totrans-884
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This is equivalent to `expint(1, z)`.
  id: totrans-885
  prefs: []
  type: TYPE_NORMAL
  zh: 这等同于`expint(1, z)`。
- en: Examples
  id: totrans-886
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE181]'
  id: totrans-887
  prefs: []
  type: TYPE_PRE
  zh: '[PRE181]'
- en: '[PRE182]'
  id: totrans-888
  prefs: []
  type: TYPE_PRE
  zh: '[PRE182]'
- en: See also
  id: totrans-889
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`Ei`](#sympy.functions.special.error_functions.Ei "sympy.functions.special.error_functions.Ei")'
  id: totrans-890
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Ei`](#sympy.functions.special.error_functions.Ei "sympy.functions.special.error_functions.Ei")'
- en: Exponential integral.
  id: totrans-891
  prefs: []
  type: TYPE_NORMAL
  zh: 指数积分。
- en: '[`expint`](#sympy.functions.special.error_functions.expint "sympy.functions.special.error_functions.expint")'
  id: totrans-892
  prefs: []
  type: TYPE_NORMAL
  zh: '[`expint`](#sympy.functions.special.error_functions.expint "sympy.functions.special.error_functions.expint")'
- en: Generalised exponential integral.
  id: totrans-893
  prefs: []
  type: TYPE_NORMAL
  zh: 广义指数积分。
- en: '[`li`](#sympy.functions.special.error_functions.li "sympy.functions.special.error_functions.li")'
  id: totrans-894
  prefs: []
  type: TYPE_NORMAL
  zh: '[`li`](#sympy.functions.special.error_functions.li "sympy.functions.special.error_functions.li")'
- en: Logarithmic integral.
  id: totrans-895
  prefs: []
  type: TYPE_NORMAL
  zh: 对数积分。
- en: '[`Li`](#sympy.functions.special.error_functions.Li "sympy.functions.special.error_functions.Li")'
  id: totrans-896
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Li`](#sympy.functions.special.error_functions.Li "sympy.functions.special.error_functions.Li")'
- en: Offset logarithmic integral.
  id: totrans-897
  prefs: []
  type: TYPE_NORMAL
  zh: 偏移对数积分。
- en: '[`Si`](#sympy.functions.special.error_functions.Si "sympy.functions.special.error_functions.Si")'
  id: totrans-898
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Si`](#sympy.functions.special.error_functions.Si "sympy.functions.special.error_functions.Si")'
- en: Sine integral.
  id: totrans-899
  prefs: []
  type: TYPE_NORMAL
  zh: 正弦积分。
- en: '[`Ci`](#sympy.functions.special.error_functions.Ci "sympy.functions.special.error_functions.Ci")'
  id: totrans-900
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Ci`](#sympy.functions.special.error_functions.Ci "sympy.functions.special.error_functions.Ci")'
- en: Cosine integral.
  id: totrans-901
  prefs: []
  type: TYPE_NORMAL
  zh: 余弦积分。
- en: '[`Shi`](#sympy.functions.special.error_functions.Shi "sympy.functions.special.error_functions.Shi")'
  id: totrans-902
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Shi`](#sympy.functions.special.error_functions.Shi "sympy.functions.special.error_functions.Shi")'
- en: Hyperbolic sine integral.
  id: totrans-903
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲正弦积分。
- en: '[`Chi`](#sympy.functions.special.error_functions.Chi "sympy.functions.special.error_functions.Chi")'
  id: totrans-904
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Chi`](#sympy.functions.special.error_functions.Chi "sympy.functions.special.error_functions.Chi")'
- en: Hyperbolic cosine integral.
  id: totrans-905
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲余弦积分。
- en: '[PRE183]'
  id: totrans-906
  prefs: []
  type: TYPE_PRE
  zh: '[PRE183]'
- en: The classical logarithmic integral.
  id: totrans-907
  prefs: []
  type: TYPE_NORMAL
  zh: 经典对数积分。
- en: Explanation
  id: totrans-908
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: For use in SymPy, this function is defined as
  id: totrans-909
  prefs: []
  type: TYPE_NORMAL
  zh: 在SymPy中使用，该函数定义为
- en: \[\operatorname{li}(x) = \int_0^x \frac{1}{\log(t)} \mathrm{d}t \,.\]
  id: totrans-910
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{li}(x) = \int_0^x \frac{1}{\log(t)} \mathrm{d}t \,.\]
- en: Examples
  id: totrans-911
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE184]'
  id: totrans-912
  prefs: []
  type: TYPE_PRE
  zh: '[PRE184]'
- en: 'Several special values are known:'
  id: totrans-913
  prefs: []
  type: TYPE_NORMAL
  zh: 已知几个特殊值：
- en: '[PRE185]'
  id: totrans-914
  prefs: []
  type: TYPE_PRE
  zh: '[PRE185]'
- en: 'Differentiation with respect to \(z\) is supported:'
  id: totrans-915
  prefs: []
  type: TYPE_NORMAL
  zh: 支持对\(z\)的微分：
- en: '[PRE186]'
  id: totrans-916
  prefs: []
  type: TYPE_PRE
  zh: '[PRE186]'
- en: 'Defining the `li` function via an integral: >>> from sympy import integrate
    >>> integrate(li(z)) z*li(z) - Ei(2*log(z))'
  id: totrans-917
  prefs: []
  type: TYPE_NORMAL
  zh: 通过积分定义`li`函数： >>> from sympy import integrate >>> integrate(li(z)) z*li(z) -
    Ei(2*log(z))
- en: '[PRE187]'
  id: totrans-918
  prefs: []
  type: TYPE_PRE
  zh: '[PRE187]'
- en: 'The logarithmic integral can also be defined in terms of `Ei`:'
  id: totrans-919
  prefs: []
  type: TYPE_NORMAL
  zh: 对数积分也可以用`Ei`定义：
- en: '[PRE188]'
  id: totrans-920
  prefs: []
  type: TYPE_PRE
  zh: '[PRE188]'
- en: 'We can numerically evaluate the logarithmic integral to arbitrary precision
    on the whole complex plane (except the singular points):'
  id: totrans-921
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在整个复平面上（除了奇点）对对数积分进行任意精度的数值计算：
- en: '[PRE189]'
  id: totrans-922
  prefs: []
  type: TYPE_PRE
  zh: '[PRE189]'
- en: '[PRE190]'
  id: totrans-923
  prefs: []
  type: TYPE_PRE
  zh: '[PRE190]'
- en: 'We can even compute Soldner’s constant by the help of mpmath:'
  id: totrans-924
  prefs: []
  type: TYPE_NORMAL
  zh: 我们甚至可以通过 mpmath 计算 Soldner 常数：
- en: '[PRE191]'
  id: totrans-925
  prefs: []
  type: TYPE_PRE
  zh: '[PRE191]'
- en: 'Further transformations include rewriting `li` in terms of the trigonometric
    integrals `Si`, `Ci`, `Shi` and `Chi`:'
  id: totrans-926
  prefs: []
  type: TYPE_NORMAL
  zh: 进一步的变换包括用三角积分 `Si`、`Ci`、`Shi` 和 `Chi` 重写 `li`：
- en: '[PRE192]'
  id: totrans-927
  prefs: []
  type: TYPE_PRE
  zh: '[PRE192]'
- en: See also
  id: totrans-928
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`Li`](#sympy.functions.special.error_functions.Li "sympy.functions.special.error_functions.Li")'
  id: totrans-929
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Li`](#sympy.functions.special.error_functions.Li "sympy.functions.special.error_functions.Li")'
- en: Offset logarithmic integral.
  id: totrans-930
  prefs: []
  type: TYPE_NORMAL
  zh: 偏移对数积分。
- en: '[`Ei`](#sympy.functions.special.error_functions.Ei "sympy.functions.special.error_functions.Ei")'
  id: totrans-931
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Ei`](#sympy.functions.special.error_functions.Ei "sympy.functions.special.error_functions.Ei")'
- en: Exponential integral.
  id: totrans-932
  prefs: []
  type: TYPE_NORMAL
  zh: 指数积分。
- en: '[`expint`](#sympy.functions.special.error_functions.expint "sympy.functions.special.error_functions.expint")'
  id: totrans-933
  prefs: []
  type: TYPE_NORMAL
  zh: '[`expint`](#sympy.functions.special.error_functions.expint "sympy.functions.special.error_functions.expint")'
- en: Generalised exponential integral.
  id: totrans-934
  prefs: []
  type: TYPE_NORMAL
  zh: 广义指数积分。
- en: '[`E1`](#sympy.functions.special.error_functions.E1 "sympy.functions.special.error_functions.E1")'
  id: totrans-935
  prefs: []
  type: TYPE_NORMAL
  zh: '[`E1`](#sympy.functions.special.error_functions.E1 "sympy.functions.special.error_functions.E1")'
- en: Special case of the generalised exponential integral.
  id: totrans-936
  prefs: []
  type: TYPE_NORMAL
  zh: 广义指数积分的特殊情况。
- en: '[`Si`](#sympy.functions.special.error_functions.Si "sympy.functions.special.error_functions.Si")'
  id: totrans-937
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Si`](#sympy.functions.special.error_functions.Si "sympy.functions.special.error_functions.Si")'
- en: Sine integral.
  id: totrans-938
  prefs: []
  type: TYPE_NORMAL
  zh: 正弦积分。
- en: '[`Ci`](#sympy.functions.special.error_functions.Ci "sympy.functions.special.error_functions.Ci")'
  id: totrans-939
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Ci`](#sympy.functions.special.error_functions.Ci "sympy.functions.special.error_functions.Ci")'
- en: Cosine integral.
  id: totrans-940
  prefs: []
  type: TYPE_NORMAL
  zh: 余弦积分。
- en: '[`Shi`](#sympy.functions.special.error_functions.Shi "sympy.functions.special.error_functions.Shi")'
  id: totrans-941
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Shi`](#sympy.functions.special.error_functions.Shi "sympy.functions.special.error_functions.Shi")'
- en: Hyperbolic sine integral.
  id: totrans-942
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲正弦积分。
- en: '[`Chi`](#sympy.functions.special.error_functions.Chi "sympy.functions.special.error_functions.Chi")'
  id: totrans-943
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Chi`](#sympy.functions.special.error_functions.Chi "sympy.functions.special.error_functions.Chi")'
- en: Hyperbolic cosine integral.
  id: totrans-944
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲余弦积分。
- en: References
  id: totrans-945
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R413](#id73)]'
  id: totrans-946
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R413](#id73)]'
- en: '[https://en.wikipedia.org/wiki/Logarithmic_integral](https://en.wikipedia.org/wiki/Logarithmic_integral)'
  id: totrans-947
  prefs: []
  type: TYPE_NORMAL
  zh: '[对数积分](https://en.wikipedia.org/wiki/Logarithmic_integral)的广义指数积分。'
- en: '[[R414](#id74)]'
  id: totrans-948
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R414](#id74)]'
- en: '[https://mathworld.wolfram.com/LogarithmicIntegral.html](https://mathworld.wolfram.com/LogarithmicIntegral.html)'
  id: totrans-949
  prefs: []
  type: TYPE_NORMAL
  zh: '[对数积分](https://mathworld.wolfram.com/LogarithmicIntegral.html)。'
- en: '[[R415](#id75)]'
  id: totrans-950
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R415](#id75)]'
- en: '[https://dlmf.nist.gov/6](https://dlmf.nist.gov/6)'
  id: totrans-951
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/6](https://dlmf.nist.gov/6)'
- en: '[[R416](#id76)]'
  id: totrans-952
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R416](#id76)]'
- en: '[https://mathworld.wolfram.com/SoldnersConstant.html](https://mathworld.wolfram.com/SoldnersConstant.html)'
  id: totrans-953
  prefs: []
  type: TYPE_NORMAL
  zh: '[Soldner常数](https://mathworld.wolfram.com/SoldnersConstant.html)。'
- en: '[PRE193]'
  id: totrans-954
  prefs: []
  type: TYPE_PRE
  zh: '[PRE193]'
- en: The offset logarithmic integral.
  id: totrans-955
  prefs: []
  type: TYPE_NORMAL
  zh: 偏移对数积分。
- en: Explanation
  id: totrans-956
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: For use in SymPy, this function is defined as
  id: totrans-957
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 SymPy 使用，此函数被定义为
- en: \[\operatorname{Li}(x) = \operatorname{li}(x) - \operatorname{li}(2)\]
  id: totrans-958
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{Li}(x) = \operatorname{li}(x) - \operatorname{li}(2)\]
- en: Examples
  id: totrans-959
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE194]'
  id: totrans-960
  prefs: []
  type: TYPE_PRE
  zh: '[PRE194]'
- en: 'The following special value is known:'
  id: totrans-961
  prefs: []
  type: TYPE_NORMAL
  zh: 已知以下特殊值：
- en: '[PRE195]'
  id: totrans-962
  prefs: []
  type: TYPE_PRE
  zh: '[PRE195]'
- en: 'Differentiation with respect to \(z\) is supported:'
  id: totrans-963
  prefs: []
  type: TYPE_NORMAL
  zh: 支持对 \(z\) 的微分：
- en: '[PRE196]'
  id: totrans-964
  prefs: []
  type: TYPE_PRE
  zh: '[PRE196]'
- en: 'The shifted logarithmic integral can be written in terms of \(li(z)\):'
  id: totrans-965
  prefs: []
  type: TYPE_NORMAL
  zh: 偏移对数积分可以用 \(li(z)\) 的形式来表示：
- en: '[PRE197]'
  id: totrans-966
  prefs: []
  type: TYPE_PRE
  zh: '[PRE197]'
- en: 'We can numerically evaluate the logarithmic integral to arbitrary precision
    on the whole complex plane (except the singular points):'
  id: totrans-967
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在整个复平面上（除了奇点）对对数积分进行任意精度的数值计算：
- en: '[PRE198]'
  id: totrans-968
  prefs: []
  type: TYPE_PRE
  zh: '[PRE198]'
- en: '[PRE199]'
  id: totrans-969
  prefs: []
  type: TYPE_PRE
  zh: '[PRE199]'
- en: See also
  id: totrans-970
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`li`](#sympy.functions.special.error_functions.li "sympy.functions.special.error_functions.li")'
  id: totrans-971
  prefs: []
  type: TYPE_NORMAL
  zh: '[`li`](#sympy.functions.special.error_functions.li "sympy.functions.special.error_functions.li")'
- en: Logarithmic integral.
  id: totrans-972
  prefs: []
  type: TYPE_NORMAL
  zh: 对数积分。
- en: '[`Ei`](#sympy.functions.special.error_functions.Ei "sympy.functions.special.error_functions.Ei")'
  id: totrans-973
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Ei`](#sympy.functions.special.error_functions.Ei "sympy.functions.special.error_functions.Ei")'
- en: Exponential integral.
  id: totrans-974
  prefs: []
  type: TYPE_NORMAL
  zh: 指数积分。
- en: '[`expint`](#sympy.functions.special.error_functions.expint "sympy.functions.special.error_functions.expint")'
  id: totrans-975
  prefs: []
  type: TYPE_NORMAL
  zh: '[`expint`](#sympy.functions.special.error_functions.expint "sympy.functions.special.error_functions.expint")'
- en: Generalised exponential integral.
  id: totrans-976
  prefs: []
  type: TYPE_NORMAL
  zh: 广义指数积分。
- en: '[`E1`](#sympy.functions.special.error_functions.E1 "sympy.functions.special.error_functions.E1")'
  id: totrans-977
  prefs: []
  type: TYPE_NORMAL
  zh: '[`E1`](#sympy.functions.special.error_functions.E1 "sympy.functions.special.error_functions.E1")'
- en: Special case of the generalised exponential integral.
  id: totrans-978
  prefs: []
  type: TYPE_NORMAL
  zh: 广义指数积分的特殊情况。
- en: '[`Si`](#sympy.functions.special.error_functions.Si "sympy.functions.special.error_functions.Si")'
  id: totrans-979
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Si`](#sympy.functions.special.error_functions.Si "sympy.functions.special.error_functions.Si")'
- en: Sine integral.
  id: totrans-980
  prefs: []
  type: TYPE_NORMAL
  zh: 正弦积分。
- en: '[`Ci`](#sympy.functions.special.error_functions.Ci "sympy.functions.special.error_functions.Ci")'
  id: totrans-981
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Ci`](#sympy.functions.special.error_functions.Ci "sympy.functions.special.error_functions.Ci")'
- en: Cosine integral.
  id: totrans-982
  prefs: []
  type: TYPE_NORMAL
  zh: 余弦积分。
- en: '[`Shi`](#sympy.functions.special.error_functions.Shi "sympy.functions.special.error_functions.Shi")'
  id: totrans-983
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Shi`](#sympy.functions.special.error_functions.Shi "sympy.functions.special.error_functions.Shi")'
- en: Hyperbolic sine integral.
  id: totrans-984
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲正弦积分。
- en: '[`Chi`](#sympy.functions.special.error_functions.Chi "sympy.functions.special.error_functions.Chi")'
  id: totrans-985
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Chi`](#sympy.functions.special.error_functions.Chi "sympy.functions.special.error_functions.Chi")'
- en: Hyperbolic cosine integral.
  id: totrans-986
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲余弦积分。
- en: References
  id: totrans-987
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R417](#id77)]'
  id: totrans-988
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R417](#id77)]'
- en: '[https://en.wikipedia.org/wiki/Logarithmic_integral](https://en.wikipedia.org/wiki/Logarithmic_integral)'
  id: totrans-989
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Logarithmic_integral](https://en.wikipedia.org/wiki/Logarithmic_integral)'
- en: '[[R418](#id78)]'
  id: totrans-990
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R418](#id78)]'
- en: '[https://mathworld.wolfram.com/LogarithmicIntegral.html](https://mathworld.wolfram.com/LogarithmicIntegral.html)'
  id: totrans-991
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/LogarithmicIntegral.html](https://mathworld.wolfram.com/LogarithmicIntegral.html)'
- en: '[[R419](#id79)]'
  id: totrans-992
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R419](#id79)]'
- en: '[https://dlmf.nist.gov/6](https://dlmf.nist.gov/6)'
  id: totrans-993
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/6](https://dlmf.nist.gov/6)'
- en: '[PRE200]'
  id: totrans-994
  prefs: []
  type: TYPE_PRE
  zh: '[PRE200]'
- en: Sine integral.
  id: totrans-995
  prefs: []
  type: TYPE_NORMAL
  zh: 正弦积分。
- en: Explanation
  id: totrans-996
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: This function is defined by
  id: totrans-997
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数由
- en: \[\operatorname{Si}(z) = \int_0^z \frac{\sin{t}}{t} \mathrm{d}t.\]
  id: totrans-998
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{Si}(z) = \int_0^z \frac{\sin{t}}{t} \mathrm{d}t.\]
- en: It is an entire function.
  id: totrans-999
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个整函数。
- en: Examples
  id: totrans-1000
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE201]'
  id: totrans-1001
  prefs: []
  type: TYPE_PRE
  zh: '[PRE201]'
- en: 'The sine integral is an antiderivative of \(sin(z)/z\):'
  id: totrans-1002
  prefs: []
  type: TYPE_NORMAL
  zh: 正弦积分是\( \sin(z)/z \)的一个原函数：
- en: '[PRE202]'
  id: totrans-1003
  prefs: []
  type: TYPE_PRE
  zh: '[PRE202]'
- en: 'It is unbranched:'
  id: totrans-1004
  prefs: []
  type: TYPE_NORMAL
  zh: 它是无分支的：
- en: '[PRE203]'
  id: totrans-1005
  prefs: []
  type: TYPE_PRE
  zh: '[PRE203]'
- en: 'Sine integral behaves much like ordinary sine under multiplication by `I`:'
  id: totrans-1006
  prefs: []
  type: TYPE_NORMAL
  zh: 正弦积分在乘以`I`后表现得像普通正弦一样：
- en: '[PRE204]'
  id: totrans-1007
  prefs: []
  type: TYPE_PRE
  zh: '[PRE204]'
- en: 'It can also be expressed in terms of exponential integrals, but beware that
    the latter is branched:'
  id: totrans-1008
  prefs: []
  type: TYPE_NORMAL
  zh: 它还可以用指数积分的形式表达，但请注意后者是分支的：
- en: '[PRE205]'
  id: totrans-1009
  prefs: []
  type: TYPE_PRE
  zh: '[PRE205]'
- en: 'It can be rewritten in the form of sinc function (by definition):'
  id: totrans-1010
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以用sinc函数的形式重写（按定义）：
- en: '[PRE206]'
  id: totrans-1011
  prefs: []
  type: TYPE_PRE
  zh: '[PRE206]'
- en: See also
  id: totrans-1012
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`Ci`](#sympy.functions.special.error_functions.Ci "sympy.functions.special.error_functions.Ci")'
  id: totrans-1013
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Ci`](#sympy.functions.special.error_functions.Ci "sympy.functions.special.error_functions.Ci")'
- en: Cosine integral.
  id: totrans-1014
  prefs: []
  type: TYPE_NORMAL
  zh: 余弦积分。
- en: '[`Shi`](#sympy.functions.special.error_functions.Shi "sympy.functions.special.error_functions.Shi")'
  id: totrans-1015
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Shi`](#sympy.functions.special.error_functions.Shi "sympy.functions.special.error_functions.Shi")'
- en: Hyperbolic sine integral.
  id: totrans-1016
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲正弦积分。
- en: '[`Chi`](#sympy.functions.special.error_functions.Chi "sympy.functions.special.error_functions.Chi")'
  id: totrans-1017
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Chi`](#sympy.functions.special.error_functions.Chi "sympy.functions.special.error_functions.Chi")'
- en: Hyperbolic cosine integral.
  id: totrans-1018
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲余弦积分。
- en: '[`Ei`](#sympy.functions.special.error_functions.Ei "sympy.functions.special.error_functions.Ei")'
  id: totrans-1019
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Ei`](#sympy.functions.special.error_functions.Ei "sympy.functions.special.error_functions.Ei")'
- en: Exponential integral.
  id: totrans-1020
  prefs: []
  type: TYPE_NORMAL
  zh: 指数积分。
- en: '[`expint`](#sympy.functions.special.error_functions.expint "sympy.functions.special.error_functions.expint")'
  id: totrans-1021
  prefs: []
  type: TYPE_NORMAL
  zh: '[`expint`](#sympy.functions.special.error_functions.expint "sympy.functions.special.error_functions.expint")'
- en: Generalised exponential integral.
  id: totrans-1022
  prefs: []
  type: TYPE_NORMAL
  zh: 广义指数积分。
- en: '[`sinc`](elementary.html#sympy.functions.elementary.trigonometric.sinc "sympy.functions.elementary.trigonometric.sinc")'
  id: totrans-1023
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sinc`](elementary.html#sympy.functions.elementary.trigonometric.sinc "sympy.functions.elementary.trigonometric.sinc")'
- en: unnormalized sinc function
  id: totrans-1024
  prefs: []
  type: TYPE_NORMAL
  zh: 未归一化的sinc函数
- en: '[`E1`](#sympy.functions.special.error_functions.E1 "sympy.functions.special.error_functions.E1")'
  id: totrans-1025
  prefs: []
  type: TYPE_NORMAL
  zh: '[`E1`](#sympy.functions.special.error_functions.E1 "sympy.functions.special.error_functions.E1")'
- en: Special case of the generalised exponential integral.
  id: totrans-1026
  prefs: []
  type: TYPE_NORMAL
  zh: 广义指数积分的特殊情况。
- en: '[`li`](#sympy.functions.special.error_functions.li "sympy.functions.special.error_functions.li")'
  id: totrans-1027
  prefs: []
  type: TYPE_NORMAL
  zh: '[`li`](#sympy.functions.special.error_functions.li "sympy.functions.special.error_functions.li")'
- en: Logarithmic integral.
  id: totrans-1028
  prefs: []
  type: TYPE_NORMAL
  zh: 对数积分。
- en: '[`Li`](#sympy.functions.special.error_functions.Li "sympy.functions.special.error_functions.Li")'
  id: totrans-1029
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Li`](#sympy.functions.special.error_functions.Li "sympy.functions.special.error_functions.Li")'
- en: Offset logarithmic integral.
  id: totrans-1030
  prefs: []
  type: TYPE_NORMAL
  zh: 偏移对数积分。
- en: References
  id: totrans-1031
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R420](#id80)]'
  id: totrans-1032
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R420](#id80)]'
- en: '[https://en.wikipedia.org/wiki/Trigonometric_integral](https://en.wikipedia.org/wiki/Trigonometric_integral)'
  id: totrans-1033
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Trigonometric_integral](https://en.wikipedia.org/wiki/Trigonometric_integral)'
- en: '[PRE207]'
  id: totrans-1034
  prefs: []
  type: TYPE_PRE
  zh: '[PRE207]'
- en: Cosine integral.
  id: totrans-1035
  prefs: []
  type: TYPE_NORMAL
  zh: 余弦积分。
- en: Explanation
  id: totrans-1036
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: This function is defined for positive \(x\) by
  id: totrans-1037
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数对正\(x\)值定义为
- en: \[\operatorname{Ci}(x) = \gamma + \log{x} + \int_0^x \frac{\cos{t} - 1}{t} \mathrm{d}t
    = -\int_x^\infty \frac{\cos{t}}{t} \mathrm{d}t,\]
  id: totrans-1038
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{Ci}(x) = \gamma + \log{x} + \int_0^x \frac{\cos{t} - 1}{t} \mathrm{d}t
    = -\int_x^\infty \frac{\cos{t}}{t} \mathrm{d}t,\]
- en: where \(\gamma\) is the Euler-Mascheroni constant.
  id: totrans-1039
  prefs: []
  type: TYPE_NORMAL
  zh: 这里\(\gamma\)是欧拉-马歇罗尼常数。
- en: We have
  id: totrans-1040
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有
- en: \[\operatorname{Ci}(z) = -\frac{\operatorname{E}_1\left(e^{i\pi/2} z\right)
    + \operatorname{E}_1\left(e^{-i \pi/2} z\right)}{2}\]
  id: totrans-1041
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{Ci}(z) = -\frac{\operatorname{E}_1\left(e^{i\pi/2} z\right)
    + \operatorname{E}_1\left(e^{-i \pi/2} z\right)}{2}\]
- en: which holds for all polar \(z\) and thus provides an analytic continuation to
    the Riemann surface of the logarithm.
  id: totrans-1042
  prefs: []
  type: TYPE_NORMAL
  zh: 这适用于所有极坐标\(z\)，因此提供了对数的黎曼曲面的解析延拓。
- en: The formula also holds as stated for \(z \in \mathbb{C}\) with \(\Re(z) > 0\).
    By lifting to the principal branch, we obtain an analytic function on the cut
    complex plane.
  id: totrans-1043
  prefs: []
  type: TYPE_NORMAL
  zh: 对于复数域\(z \in \mathbb{C}\)，当\(\Re(z) > 0\)时，该公式也适用。通过提升到主分支，我们在割裂复平面上得到一个解析函数。
- en: Examples
  id: totrans-1044
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE208]'
  id: totrans-1045
  prefs: []
  type: TYPE_PRE
  zh: '[PRE208]'
- en: 'The cosine integral is a primitive of \(\cos(z)/z\):'
  id: totrans-1046
  prefs: []
  type: TYPE_NORMAL
  zh: 余弦积分是\(\cos(z)/z\)的一个原始函数：
- en: '[PRE209]'
  id: totrans-1047
  prefs: []
  type: TYPE_PRE
  zh: '[PRE209]'
- en: 'It has a logarithmic branch point at the origin:'
  id: totrans-1048
  prefs: []
  type: TYPE_NORMAL
  zh: 它在原点处有一个对数分支点：
- en: '[PRE210]'
  id: totrans-1049
  prefs: []
  type: TYPE_PRE
  zh: '[PRE210]'
- en: 'The cosine integral behaves somewhat like ordinary \(\cos\) under multiplication
    by \(i\):'
  id: totrans-1050
  prefs: []
  type: TYPE_NORMAL
  zh: 余弦积分在乘以\(i\)后的行为类似于普通的\(\cos\)：
- en: '[PRE211]'
  id: totrans-1051
  prefs: []
  type: TYPE_PRE
  zh: '[PRE211]'
- en: 'It can also be expressed in terms of exponential integrals:'
  id: totrans-1052
  prefs: []
  type: TYPE_NORMAL
  zh: 它也可以用指数积分的术语表达：
- en: '[PRE212]'
  id: totrans-1053
  prefs: []
  type: TYPE_PRE
  zh: '[PRE212]'
- en: See also
  id: totrans-1054
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`Si`](#sympy.functions.special.error_functions.Si "sympy.functions.special.error_functions.Si")'
  id: totrans-1055
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Si`](#sympy.functions.special.error_functions.Si "sympy.functions.special.error_functions.Si")'
- en: Sine integral.
  id: totrans-1056
  prefs: []
  type: TYPE_NORMAL
  zh: 正弦积分。
- en: '[`Shi`](#sympy.functions.special.error_functions.Shi "sympy.functions.special.error_functions.Shi")'
  id: totrans-1057
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Shi`](#sympy.functions.special.error_functions.Shi "sympy.functions.special.error_functions.Shi")'
- en: Hyperbolic sine integral.
  id: totrans-1058
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲正弦积分。
- en: '[`Chi`](#sympy.functions.special.error_functions.Chi "sympy.functions.special.error_functions.Chi")'
  id: totrans-1059
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Chi`](#sympy.functions.special.error_functions.Chi "sympy.functions.special.error_functions.Chi")'
- en: Hyperbolic cosine integral.
  id: totrans-1060
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲余弦积分。
- en: '[`Ei`](#sympy.functions.special.error_functions.Ei "sympy.functions.special.error_functions.Ei")'
  id: totrans-1061
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Ei`](#sympy.functions.special.error_functions.Ei "sympy.functions.special.error_functions.Ei")'
- en: Exponential integral.
  id: totrans-1062
  prefs: []
  type: TYPE_NORMAL
  zh: 指数积分。
- en: '[`expint`](#sympy.functions.special.error_functions.expint "sympy.functions.special.error_functions.expint")'
  id: totrans-1063
  prefs: []
  type: TYPE_NORMAL
  zh: '[`expint`](#sympy.functions.special.error_functions.expint "sympy.functions.special.error_functions.expint")'
- en: Generalised exponential integral.
  id: totrans-1064
  prefs: []
  type: TYPE_NORMAL
  zh: 广义指数积分。
- en: '[`E1`](#sympy.functions.special.error_functions.E1 "sympy.functions.special.error_functions.E1")'
  id: totrans-1065
  prefs: []
  type: TYPE_NORMAL
  zh: '[`E1`](#sympy.functions.special.error_functions.E1 "sympy.functions.special.error_functions.E1")'
- en: Special case of the generalised exponential integral.
  id: totrans-1066
  prefs: []
  type: TYPE_NORMAL
  zh: 广义指数积分的特殊情况。
- en: '[`li`](#sympy.functions.special.error_functions.li "sympy.functions.special.error_functions.li")'
  id: totrans-1067
  prefs: []
  type: TYPE_NORMAL
  zh: '[`li`](#sympy.functions.special.error_functions.li "sympy.functions.special.error_functions.li")'
- en: Logarithmic integral.
  id: totrans-1068
  prefs: []
  type: TYPE_NORMAL
  zh: 对数积分。
- en: '[`Li`](#sympy.functions.special.error_functions.Li "sympy.functions.special.error_functions.Li")'
  id: totrans-1069
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Li`](#sympy.functions.special.error_functions.Li "sympy.functions.special.error_functions.Li")'
- en: Offset logarithmic integral.
  id: totrans-1070
  prefs: []
  type: TYPE_NORMAL
  zh: 偏移对数积分。
- en: References
  id: totrans-1071
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R421](#id81)]'
  id: totrans-1072
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R421](#id81)]'
- en: '[https://en.wikipedia.org/wiki/Trigonometric_integral](https://en.wikipedia.org/wiki/Trigonometric_integral)'
  id: totrans-1073
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Trigonometric_integral](https://en.wikipedia.org/wiki/Trigonometric_integral)'
- en: '[PRE213]'
  id: totrans-1074
  prefs: []
  type: TYPE_PRE
  zh: '[PRE213]'
- en: Sinh integral.
  id: totrans-1075
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲正弦积分。
- en: Explanation
  id: totrans-1076
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This function is defined by
  id: totrans-1077
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数的定义为
- en: \[\operatorname{Shi}(z) = \int_0^z \frac{\sinh{t}}{t} \mathrm{d}t.\]
  id: totrans-1078
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{Shi}(z) = \int_0^z \frac{\sinh{t}}{t} \mathrm{d}t.\]
- en: It is an entire function.
  id: totrans-1079
  prefs: []
  type: TYPE_NORMAL
  zh: 它是一个整函数。
- en: Examples
  id: totrans-1080
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE214]'
  id: totrans-1081
  prefs: []
  type: TYPE_PRE
  zh: '[PRE214]'
- en: 'The Sinh integral is a primitive of \(\sinh(z)/z\):'
  id: totrans-1082
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲正弦积分是\(\sinh(z)/z\)的一个原始函数：
- en: '[PRE215]'
  id: totrans-1083
  prefs: []
  type: TYPE_PRE
  zh: '[PRE215]'
- en: 'It is unbranched:'
  id: totrans-1084
  prefs: []
  type: TYPE_NORMAL
  zh: 它是无分支的：
- en: '[PRE216]'
  id: totrans-1085
  prefs: []
  type: TYPE_PRE
  zh: '[PRE216]'
- en: 'The \(\sinh\) integral behaves much like ordinary \(\sinh\) under multiplication
    by \(i\):'
  id: totrans-1086
  prefs: []
  type: TYPE_NORMAL
  zh: \(\sinh\)积分在乘以\(i\)后的行为类似于普通的\(\sinh\)：
- en: '[PRE217]'
  id: totrans-1087
  prefs: []
  type: TYPE_PRE
  zh: '[PRE217]'
- en: 'It can also be expressed in terms of exponential integrals, but beware that
    the latter is branched:'
  id: totrans-1088
  prefs: []
  type: TYPE_NORMAL
  zh: 它也可以用指数积分的术语表达，但要注意后者是分支的：
- en: '[PRE218]'
  id: totrans-1089
  prefs: []
  type: TYPE_PRE
  zh: '[PRE218]'
- en: See also
  id: totrans-1090
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`Si`](#sympy.functions.special.error_functions.Si "sympy.functions.special.error_functions.Si")'
  id: totrans-1091
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Si`](#sympy.functions.special.error_functions.Si "sympy.functions.special.error_functions.Si")'
- en: Sine integral.
  id: totrans-1092
  prefs: []
  type: TYPE_NORMAL
  zh: 正弦积分。
- en: '[`Ci`](#sympy.functions.special.error_functions.Ci "sympy.functions.special.error_functions.Ci")'
  id: totrans-1093
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Ci`](#sympy.functions.special.error_functions.Ci "sympy.functions.special.error_functions.Ci")'
- en: Cosine integral.
  id: totrans-1094
  prefs: []
  type: TYPE_NORMAL
  zh: 余弦积分。
- en: '[`Chi`](#sympy.functions.special.error_functions.Chi "sympy.functions.special.error_functions.Chi")'
  id: totrans-1095
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Chi`](#sympy.functions.special.error_functions.Chi "sympy.functions.special.error_functions.Chi")'
- en: Hyperbolic cosine integral.
  id: totrans-1096
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲余弦积分。
- en: '[`Ei`](#sympy.functions.special.error_functions.Ei "sympy.functions.special.error_functions.Ei")'
  id: totrans-1097
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Ei`](#sympy.functions.special.error_functions.Ei "sympy.functions.special.error_functions.Ei")'
- en: Exponential integral.
  id: totrans-1098
  prefs: []
  type: TYPE_NORMAL
  zh: 指数积分。
- en: '[`expint`](#sympy.functions.special.error_functions.expint "sympy.functions.special.error_functions.expint")'
  id: totrans-1099
  prefs: []
  type: TYPE_NORMAL
  zh: '[`expint`](#sympy.functions.special.error_functions.expint "sympy.functions.special.error_functions.expint")'
- en: Generalised exponential integral.
  id: totrans-1100
  prefs: []
  type: TYPE_NORMAL
  zh: 广义指数积分。
- en: '[`E1`](#sympy.functions.special.error_functions.E1 "sympy.functions.special.error_functions.E1")'
  id: totrans-1101
  prefs: []
  type: TYPE_NORMAL
  zh: '[`E1`](#sympy.functions.special.error_functions.E1 "sympy.functions.special.error_functions.E1")'
- en: Special case of the generalised exponential integral.
  id: totrans-1102
  prefs: []
  type: TYPE_NORMAL
  zh: 广义指数积分的特殊情况。
- en: '[`li`](#sympy.functions.special.error_functions.li "sympy.functions.special.error_functions.li")'
  id: totrans-1103
  prefs: []
  type: TYPE_NORMAL
  zh: '[`li`](#sympy.functions.special.error_functions.li "sympy.functions.special.error_functions.li")'
- en: Logarithmic integral.
  id: totrans-1104
  prefs: []
  type: TYPE_NORMAL
  zh: 对数积分。
- en: '[`Li`](#sympy.functions.special.error_functions.Li "sympy.functions.special.error_functions.Li")'
  id: totrans-1105
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Li`](#sympy.functions.special.error_functions.Li "sympy.functions.special.error_functions.Li")'
- en: Offset logarithmic integral.
  id: totrans-1106
  prefs: []
  type: TYPE_NORMAL
  zh: 偏移对数积分。
- en: References
  id: totrans-1107
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R422](#id82)]'
  id: totrans-1108
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R422](#id82)]'
- en: '[https://en.wikipedia.org/wiki/Trigonometric_integral](https://en.wikipedia.org/wiki/Trigonometric_integral)'
  id: totrans-1109
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Trigonometric_integral](https://en.wikipedia.org/wiki/Trigonometric_integral)'
- en: '[PRE219]'
  id: totrans-1110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE219]'
- en: Cosh integral.
  id: totrans-1111
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲余弦积分。
- en: Explanation
  id: totrans-1112
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This function is defined for positive \(x\) by
  id: totrans-1113
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数对正 \(x\) 定义为
- en: \[\operatorname{Chi}(x) = \gamma + \log{x} + \int_0^x \frac{\cosh{t} - 1}{t}
    \mathrm{d}t,\]
  id: totrans-1114
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{Chi}(x) = \gamma + \log{x} + \int_0^x \frac{\cosh{t} - 1}{t}
    \mathrm{d}t,\]
- en: where \(\gamma\) is the Euler-Mascheroni constant.
  id: totrans-1115
  prefs: []
  type: TYPE_NORMAL
  zh: 这里 \(\gamma\) 是欧拉-马歇罗尼常数。
- en: We have
  id: totrans-1116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有
- en: \[\operatorname{Chi}(z) = \operatorname{Ci}\left(e^{i \pi/2}z\right) - i\frac{\pi}{2},\]
  id: totrans-1117
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{Chi}(z) = \operatorname{Ci}\left(e^{i \pi/2}z\right) - i\frac{\pi}{2},\]
- en: which holds for all polar \(z\) and thus provides an analytic continuation to
    the Riemann surface of the logarithm. By lifting to the principal branch we obtain
    an analytic function on the cut complex plane.
  id: totrans-1118
  prefs: []
  type: TYPE_NORMAL
  zh: 对所有极坐标 \(z\) 都成立，并且因此在对数的黎曼面上提供了解析延拓。通过提升到主支，我们在切割复平面上获得了解析函数。
- en: Examples
  id: totrans-1119
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE220]'
  id: totrans-1120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE220]'
- en: 'The \(\cosh\) integral is a primitive of \(\cosh(z)/z\):'
  id: totrans-1121
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲余弦积分是 \(\cosh(z)/z\) 的原函数：
- en: '[PRE221]'
  id: totrans-1122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE221]'
- en: 'It has a logarithmic branch point at the origin:'
  id: totrans-1123
  prefs: []
  type: TYPE_NORMAL
  zh: 它在原点有一个对数分支点：
- en: '[PRE222]'
  id: totrans-1124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE222]'
- en: 'The \(\cosh\) integral behaves somewhat like ordinary \(\cosh\) under multiplication
    by \(i\):'
  id: totrans-1125
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲余弦积分在乘以 \(i\) 后的行为有些像普通的双曲余弦：
- en: '[PRE223]'
  id: totrans-1126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE223]'
- en: 'It can also be expressed in terms of exponential integrals:'
  id: totrans-1127
  prefs: []
  type: TYPE_NORMAL
  zh: 它也可以用指数积分的形式表示：
- en: '[PRE224]'
  id: totrans-1128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE224]'
- en: See also
  id: totrans-1129
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`Si`](#sympy.functions.special.error_functions.Si "sympy.functions.special.error_functions.Si")'
  id: totrans-1130
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Si`](#sympy.functions.special.error_functions.Si "sympy.functions.special.error_functions.Si")'
- en: Sine integral.
  id: totrans-1131
  prefs: []
  type: TYPE_NORMAL
  zh: 正弦积分。
- en: '[`Ci`](#sympy.functions.special.error_functions.Ci "sympy.functions.special.error_functions.Ci")'
  id: totrans-1132
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Ci`](#sympy.functions.special.error_functions.Ci "sympy.functions.special.error_functions.Ci")'
- en: Cosine integral.
  id: totrans-1133
  prefs: []
  type: TYPE_NORMAL
  zh: 余弦积分。
- en: '[`Shi`](#sympy.functions.special.error_functions.Shi "sympy.functions.special.error_functions.Shi")'
  id: totrans-1134
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Shi`](#sympy.functions.special.error_functions.Shi "sympy.functions.special.error_functions.Shi")'
- en: Hyperbolic sine integral.
  id: totrans-1135
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲正弦积分。
- en: '[`Ei`](#sympy.functions.special.error_functions.Ei "sympy.functions.special.error_functions.Ei")'
  id: totrans-1136
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Ei`](#sympy.functions.special.error_functions.Ei "sympy.functions.special.error_functions.Ei")'
- en: Exponential integral.
  id: totrans-1137
  prefs: []
  type: TYPE_NORMAL
  zh: 指数积分。
- en: '[`expint`](#sympy.functions.special.error_functions.expint "sympy.functions.special.error_functions.expint")'
  id: totrans-1138
  prefs: []
  type: TYPE_NORMAL
  zh: '[`expint`](#sympy.functions.special.error_functions.expint "sympy.functions.special.error_functions.expint")'
- en: Generalised exponential integral.
  id: totrans-1139
  prefs: []
  type: TYPE_NORMAL
  zh: 广义指数积分。
- en: '[`E1`](#sympy.functions.special.error_functions.E1 "sympy.functions.special.error_functions.E1")'
  id: totrans-1140
  prefs: []
  type: TYPE_NORMAL
  zh: '[`E1`](#sympy.functions.special.error_functions.E1 "sympy.functions.special.error_functions.E1")'
- en: Special case of the generalised exponential integral.
  id: totrans-1141
  prefs: []
  type: TYPE_NORMAL
  zh: 广义指数积分的特殊情况。
- en: '[`li`](#sympy.functions.special.error_functions.li "sympy.functions.special.error_functions.li")'
  id: totrans-1142
  prefs: []
  type: TYPE_NORMAL
  zh: '[`li`](#sympy.functions.special.error_functions.li "sympy.functions.special.error_functions.li")'
- en: Logarithmic integral.
  id: totrans-1143
  prefs: []
  type: TYPE_NORMAL
  zh: 对数积分。
- en: '[`Li`](#sympy.functions.special.error_functions.Li "sympy.functions.special.error_functions.Li")'
  id: totrans-1144
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Li`](#sympy.functions.special.error_functions.Li "sympy.functions.special.error_functions.Li")'
- en: Offset logarithmic integral.
  id: totrans-1145
  prefs: []
  type: TYPE_NORMAL
  zh: 偏移对数积分。
- en: References
  id: totrans-1146
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R423](#id83)]'
  id: totrans-1147
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R423](#id83)]'
- en: '[https://en.wikipedia.org/wiki/Trigonometric_integral](https://en.wikipedia.org/wiki/Trigonometric_integral)'
  id: totrans-1148
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Trigonometric_integral](https://en.wikipedia.org/wiki/Trigonometric_integral)'
- en: '## Bessel Type Functions'
  id: totrans-1149
  prefs: []
  type: TYPE_NORMAL
  zh: '## 贝塞尔类型函数'
- en: '[PRE225]'
  id: totrans-1150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE225]'
- en: Abstract base class for Bessel-type functions.
  id: totrans-1151
  prefs: []
  type: TYPE_NORMAL
  zh: 贝塞尔类型函数的抽象基类。
- en: This class is meant to reduce code duplication. All Bessel-type functions can
    1) be differentiated, with the derivatives expressed in terms of similar functions,
    and 2) be rewritten in terms of other Bessel-type functions.
  id: totrans-1152
  prefs: []
  type: TYPE_NORMAL
  zh: 这个类旨在减少代码重复。所有贝塞尔类型函数都可以：1）被微分，其导数用类似函数表达，以及 2）用其他贝塞尔类型函数重写。
- en: Here, Bessel-type functions are assumed to have one complex parameter.
  id: totrans-1153
  prefs: []
  type: TYPE_NORMAL
  zh: 这里假设贝塞尔类型函数有一个复参数。
- en: To use this base class, define class attributes `_a` and `_b` such that `2*F_n'
    = -_a*F_{n+1} + b*F_{n-1}`.
  id: totrans-1154
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用这个基类，定义类属性 `_a` 和 `_b`，使得 `2*F_n' = -_a*F_{n+1} + b*F_{n-1}`。
- en: '[PRE226]'
  id: totrans-1155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE226]'
- en: The argument of the Bessel-type function.
  id: totrans-1156
  prefs: []
  type: TYPE_NORMAL
  zh: 贝塞尔类型函数的参数。
- en: '[PRE227]'
  id: totrans-1157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE227]'
- en: The order of the Bessel-type function.
  id: totrans-1158
  prefs: []
  type: TYPE_NORMAL
  zh: 贝塞尔类型函数的阶数。
- en: '[PRE228]'
  id: totrans-1159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE228]'
- en: Bessel function of the first kind.
  id: totrans-1160
  prefs: []
  type: TYPE_NORMAL
  zh: 第一类贝塞尔函数。
- en: Explanation
  id: totrans-1161
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The Bessel \(J\) function of order \(\nu\) is defined to be the function satisfying
    Bessel’s differential equation
  id: totrans-1162
  prefs: []
  type: TYPE_NORMAL
  zh: 阶数为 \(\nu\) 的贝塞尔 \(J\) 函数被定义为满足贝塞尔微分方程的函数
- en: \[z^2 \frac{\mathrm{d}^2 w}{\mathrm{d}z^2} + z \frac{\mathrm{d}w}{\mathrm{d}z}
    + (z^2 - \nu^2) w = 0,\]
  id: totrans-1163
  prefs: []
  type: TYPE_NORMAL
  zh: \[z^2 \frac{\mathrm{d}^2 w}{\mathrm{d}z^2} + z \frac{\mathrm{d}w}{\mathrm{d}z}
    + (z^2 - \nu^2) w = 0,\]
- en: with Laurent expansion
  id: totrans-1164
  prefs: []
  type: TYPE_NORMAL
  zh: 拉朗日展开
- en: \[J_\nu(z) = z^\nu \left(\frac{1}{\Gamma(\nu + 1) 2^\nu} + O(z^2) \right),\]
  id: totrans-1165
  prefs: []
  type: TYPE_NORMAL
  zh: \[J_\nu(z) = z^\nu \left(\frac{1}{\Gamma(\nu + 1) 2^\nu} + O(z^2) \right),\]
- en: if \(\nu\) is not a negative integer. If \(\nu=-n \in \mathbb{Z}_{<0}\) *is*
    a negative integer, then the definition is
  id: totrans-1166
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 \(\nu\) 不是负整数。如果 \(\nu=-n \in \mathbb{Z}_{<0}\) *是* 负整数，则定义为
- en: \[J_{-n}(z) = (-1)^n J_n(z).\]
  id: totrans-1167
  prefs: []
  type: TYPE_NORMAL
  zh: \[J_{-n}(z) = (-1)^n J_n(z).\]
- en: Examples
  id: totrans-1168
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: 'Create a Bessel function object:'
  id: totrans-1169
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个贝塞尔函数对象：
- en: '[PRE229]'
  id: totrans-1170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE229]'
- en: 'Differentiate it:'
  id: totrans-1171
  prefs: []
  type: TYPE_NORMAL
  zh: 对其进行微分：
- en: '[PRE230]'
  id: totrans-1172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE230]'
- en: 'Rewrite in terms of spherical Bessel functions:'
  id: totrans-1173
  prefs: []
  type: TYPE_NORMAL
  zh: 用球贝塞尔函数重新表述：
- en: '[PRE231]'
  id: totrans-1174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE231]'
- en: 'Access the parameter and argument:'
  id: totrans-1175
  prefs: []
  type: TYPE_NORMAL
  zh: 访问参数和参数：
- en: '[PRE232]'
  id: totrans-1176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE232]'
- en: See also
  id: totrans-1177
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`bessely`](#sympy.functions.special.bessel.bessely "sympy.functions.special.bessel.bessely"),
    [`besseli`](#sympy.functions.special.bessel.besseli "sympy.functions.special.bessel.besseli"),
    [`besselk`](#sympy.functions.special.bessel.besselk "sympy.functions.special.bessel.besselk")'
  id: totrans-1178
  prefs: []
  type: TYPE_NORMAL
  zh: '[`bessely`](#sympy.functions.special.bessel.bessely "sympy.functions.special.bessel.bessely"),
    [`besseli`](#sympy.functions.special.bessel.besseli "sympy.functions.special.bessel.besseli"),
    [`besselk`](#sympy.functions.special.bessel.besselk "sympy.functions.special.bessel.besselk")'
- en: References
  id: totrans-1179
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R424](#id84)]'
  id: totrans-1180
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R424](#id84)]'
- en: Abramowitz, Milton; Stegun, Irene A., eds. (1965), “Chapter 9”, Handbook of
    Mathematical Functions with Formulas, Graphs, and Mathematical Tables
  id: totrans-1181
  prefs: []
  type: TYPE_NORMAL
  zh: Abramowitz, Milton; Stegun, Irene A., eds. (1965), “第9章”, Handbook of Mathematical
    Functions with Formulas, Graphs, and Mathematical Tables
- en: '[[R425](#id85)]'
  id: totrans-1182
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R425](#id85)]'
- en: Luke, Y. L. (1969), The Special Functions and Their Approximations, Volume 1
  id: totrans-1183
  prefs: []
  type: TYPE_NORMAL
  zh: Luke, Y. L. (1969), The Special Functions and Their Approximations, Volume 1
- en: '[[R426](#id86)]'
  id: totrans-1184
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R426](#id86)]'
- en: '[https://en.wikipedia.org/wiki/Bessel_function](https://en.wikipedia.org/wiki/Bessel_function)'
  id: totrans-1185
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Bessel_function](https://en.wikipedia.org/wiki/Bessel_function)'
- en: '[[R427](#id87)]'
  id: totrans-1186
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R427](#id87)]'
- en: '[https://functions.wolfram.com/Bessel-TypeFunctions/BesselJ/](https://functions.wolfram.com/Bessel-TypeFunctions/BesselJ/)'
  id: totrans-1187
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Bessel-TypeFunctions/BesselJ/](https://functions.wolfram.com/Bessel-TypeFunctions/BesselJ/)'
- en: '[PRE233]'
  id: totrans-1188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE233]'
- en: Bessel function of the second kind.
  id: totrans-1189
  prefs: []
  type: TYPE_NORMAL
  zh: 第二类贝塞尔函数。
- en: Explanation
  id: totrans-1190
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The Bessel \(Y\) function of order \(\nu\) is defined as
  id: totrans-1191
  prefs: []
  type: TYPE_NORMAL
  zh: 阶数为 \(\nu\) 的贝塞尔 \(Y\) 函数定义如下：
- en: \[Y_\nu(z) = \lim_{\mu \to \nu} \frac{J_\mu(z) \cos(\pi \mu) - J_{-\mu}(z)}{\sin(\pi
    \mu)},\]
  id: totrans-1192
  prefs: []
  type: TYPE_NORMAL
  zh: \[Y_\nu(z) = \lim_{\mu \to \nu} \frac{J_\mu(z) \cos(\pi \mu) - J_{-\mu}(z)}{\sin(\pi
    \mu)},\]
- en: where \(J_\mu(z)\) is the Bessel function of the first kind.
  id: totrans-1193
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 \(J_\mu(z)\) 是第一类贝塞尔函数。
- en: It is a solution to Bessel’s equation, and linearly independent from \(J_\nu\).
  id: totrans-1194
  prefs: []
  type: TYPE_NORMAL
  zh: 它是贝塞尔方程的解，且与 \(J_\nu\) 线性无关。
- en: Examples
  id: totrans-1195
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE234]'
  id: totrans-1196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE234]'
- en: See also
  id: totrans-1197
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`besselj`](#sympy.functions.special.bessel.besselj "sympy.functions.special.bessel.besselj"),
    [`besseli`](#sympy.functions.special.bessel.besseli "sympy.functions.special.bessel.besseli"),
    [`besselk`](#sympy.functions.special.bessel.besselk "sympy.functions.special.bessel.besselk")'
  id: totrans-1198
  prefs: []
  type: TYPE_NORMAL
  zh: '[`besselj`](#sympy.functions.special.bessel.besselj "sympy.functions.special.bessel.besselj"),
    [`besseli`](#sympy.functions.special.bessel.besseli "sympy.functions.special.bessel.besseli"),
    [`besselk`](#sympy.functions.special.bessel.besselk "sympy.functions.special.bessel.besselk")'
- en: References
  id: totrans-1199
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R428](#id88)]'
  id: totrans-1200
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R428](#id88)]'
- en: '[https://functions.wolfram.com/Bessel-TypeFunctions/BesselY/](https://functions.wolfram.com/Bessel-TypeFunctions/BesselY/)'
  id: totrans-1201
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Bessel-TypeFunctions/BesselY/](https://functions.wolfram.com/Bessel-TypeFunctions/BesselY/)'
- en: '[PRE235]'
  id: totrans-1202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE235]'
- en: Modified Bessel function of the first kind.
  id: totrans-1203
  prefs: []
  type: TYPE_NORMAL
  zh: 第一类修正贝塞尔函数。
- en: Explanation
  id: totrans-1204
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The Bessel \(I\) function is a solution to the modified Bessel equation
  id: totrans-1205
  prefs: []
  type: TYPE_NORMAL
  zh: 贝塞尔 \(I\) 函数是修正贝塞尔方程的解
- en: \[z^2 \frac{\mathrm{d}^2 w}{\mathrm{d}z^2} + z \frac{\mathrm{d}w}{\mathrm{d}z}
    + (z^2 + \nu^2)^2 w = 0.\]
  id: totrans-1206
  prefs: []
  type: TYPE_NORMAL
  zh: \[z^2 \frac{\mathrm{d}^2 w}{\mathrm{d}z^2} + z \frac{\mathrm{d}w}{\mathrm{d}z}
    + (z^2 + \nu^2)^2 w = 0.\]
- en: It can be defined as
  id: totrans-1207
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以定义为
- en: \[I_\nu(z) = i^{-\nu} J_\nu(iz),\]
  id: totrans-1208
  prefs: []
  type: TYPE_NORMAL
  zh: \[I_\nu(z) = i^{-\nu} J_\nu(iz),\]
- en: where \(J_\nu(z)\) is the Bessel function of the first kind.
  id: totrans-1209
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 \(J_\nu(z)\) 是第一类贝塞尔函数。
- en: Examples
  id: totrans-1210
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE236]'
  id: totrans-1211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE236]'
- en: See also
  id: totrans-1212
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`besselj`](#sympy.functions.special.bessel.besselj "sympy.functions.special.bessel.besselj"),
    [`bessely`](#sympy.functions.special.bessel.bessely "sympy.functions.special.bessel.bessely"),
    [`besselk`](#sympy.functions.special.bessel.besselk "sympy.functions.special.bessel.besselk")'
  id: totrans-1213
  prefs: []
  type: TYPE_NORMAL
  zh: '[`besselj`](#sympy.functions.special.bessel.besselj "sympy.functions.special.bessel.besselj"),
    [`bessely`](#sympy.functions.special.bessel.bessely "sympy.functions.special.bessel.bessely"),
    [`besselk`](#sympy.functions.special.bessel.besselk "sympy.functions.special.bessel.besselk")'
- en: References
  id: totrans-1214
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R429](#id89)]'
  id: totrans-1215
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R429](#id89)]'
- en: '[https://functions.wolfram.com/Bessel-TypeFunctions/BesselI/](https://functions.wolfram.com/Bessel-TypeFunctions/BesselI/)'
  id: totrans-1216
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Bessel-TypeFunctions/BesselI/](https://functions.wolfram.com/Bessel-TypeFunctions/BesselI/)'
- en: '[PRE237]'
  id: totrans-1217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE237]'
- en: Modified Bessel function of the second kind.
  id: totrans-1218
  prefs: []
  type: TYPE_NORMAL
  zh: 第二类修正贝塞尔函数。
- en: Explanation
  id: totrans-1219
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The Bessel \(K\) function of order \(\nu\) is defined as
  id: totrans-1220
  prefs: []
  type: TYPE_NORMAL
  zh: 第\(K\)类贝塞尔函数的阶数\(\nu\)被定义为
- en: \[K_\nu(z) = \lim_{\mu \to \nu} \frac{\pi}{2} \frac{I_{-\mu}(z) -I_\mu(z)}{\sin(\pi
    \mu)},\]
  id: totrans-1221
  prefs: []
  type: TYPE_NORMAL
  zh: \[K_\nu(z) = \lim_{\mu \to \nu} \frac{\pi}{2} \frac{I_{-\mu}(z) -I_\mu(z)}{\sin(\pi
    \mu)},\]
- en: where \(I_\mu(z)\) is the modified Bessel function of the first kind.
  id: totrans-1222
  prefs: []
  type: TYPE_NORMAL
  zh: 其中\(I_\mu(z)\)是修正第一类贝塞尔函数。
- en: It is a solution of the modified Bessel equation, and linearly independent from
    \(Y_\nu\).
  id: totrans-1223
  prefs: []
  type: TYPE_NORMAL
  zh: 它是修正贝塞尔方程的解，且与\(Y_\nu\)线性无关。
- en: Examples
  id: totrans-1224
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE238]'
  id: totrans-1225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE238]'
- en: See also
  id: totrans-1226
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`besselj`](#sympy.functions.special.bessel.besselj "sympy.functions.special.bessel.besselj"),
    [`besseli`](#sympy.functions.special.bessel.besseli "sympy.functions.special.bessel.besseli"),
    [`bessely`](#sympy.functions.special.bessel.bessely "sympy.functions.special.bessel.bessely")'
  id: totrans-1227
  prefs: []
  type: TYPE_NORMAL
  zh: '[`besselj`](#sympy.functions.special.bessel.besselj "sympy.functions.special.bessel.besselj"),
    [`besseli`](#sympy.functions.special.bessel.besseli "sympy.functions.special.bessel.besseli"),
    [`bessely`](#sympy.functions.special.bessel.bessely "sympy.functions.special.bessel.bessely")'
- en: References
  id: totrans-1228
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R430](#id90)]'
  id: totrans-1229
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R430](#id90)]'
- en: '[https://functions.wolfram.com/Bessel-TypeFunctions/BesselK/](https://functions.wolfram.com/Bessel-TypeFunctions/BesselK/)'
  id: totrans-1230
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Bessel-TypeFunctions/BesselK/](https://functions.wolfram.com/Bessel-TypeFunctions/BesselK/)'
- en: '[PRE239]'
  id: totrans-1231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE239]'
- en: Hankel function of the first kind.
  id: totrans-1232
  prefs: []
  type: TYPE_NORMAL
  zh: 第一类汉克尔函数。
- en: Explanation
  id: totrans-1233
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This function is defined as
  id: totrans-1234
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数被定义为
- en: \[H_\nu^{(1)} = J_\nu(z) + iY_\nu(z),\]
  id: totrans-1235
  prefs: []
  type: TYPE_NORMAL
  zh: \[H_\nu^{(1)} = J_\nu(z) + iY_\nu(z),\]
- en: where \(J_\nu(z)\) is the Bessel function of the first kind, and \(Y_\nu(z)\)
    is the Bessel function of the second kind.
  id: totrans-1236
  prefs: []
  type: TYPE_NORMAL
  zh: 其中\(J_\nu(z)\)是第一类贝塞尔函数，\(Y_\nu(z)\)是第二类贝塞尔函数。
- en: It is a solution to Bessel’s equation.
  id: totrans-1237
  prefs: []
  type: TYPE_NORMAL
  zh: 它是贝塞尔方程的解。
- en: Examples
  id: totrans-1238
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE240]'
  id: totrans-1239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE240]'
- en: See also
  id: totrans-1240
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`hankel2`](#sympy.functions.special.bessel.hankel2 "sympy.functions.special.bessel.hankel2"),
    [`besselj`](#sympy.functions.special.bessel.besselj "sympy.functions.special.bessel.besselj"),
    [`bessely`](#sympy.functions.special.bessel.bessely "sympy.functions.special.bessel.bessely")'
  id: totrans-1241
  prefs: []
  type: TYPE_NORMAL
  zh: '[`hankel2`](#sympy.functions.special.bessel.hankel2 "sympy.functions.special.bessel.hankel2"),
    [`besselj`](#sympy.functions.special.bessel.besselj "sympy.functions.special.bessel.besselj"),
    [`bessely`](#sympy.functions.special.bessel.bessely "sympy.functions.special.bessel.bessely")'
- en: References
  id: totrans-1242
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R431](#id91)]'
  id: totrans-1243
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R431](#id91)]'
- en: '[https://functions.wolfram.com/Bessel-TypeFunctions/HankelH1/](https://functions.wolfram.com/Bessel-TypeFunctions/HankelH1/)'
  id: totrans-1244
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Bessel-TypeFunctions/HankelH1/](https://functions.wolfram.com/Bessel-TypeFunctions/HankelH1/)'
- en: '[PRE241]'
  id: totrans-1245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE241]'
- en: Hankel function of the second kind.
  id: totrans-1246
  prefs: []
  type: TYPE_NORMAL
  zh: 第二类汉克尔函数。
- en: Explanation
  id: totrans-1247
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This function is defined as
  id: totrans-1248
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数被定义为
- en: \[H_\nu^{(2)} = J_\nu(z) - iY_\nu(z),\]
  id: totrans-1249
  prefs: []
  type: TYPE_NORMAL
  zh: \[H_\nu^{(2)} = J_\nu(z) - iY_\nu(z),\]
- en: where \(J_\nu(z)\) is the Bessel function of the first kind, and \(Y_\nu(z)\)
    is the Bessel function of the second kind.
  id: totrans-1250
  prefs: []
  type: TYPE_NORMAL
  zh: 其中\(J_\nu(z)\)是第一类贝塞尔函数，\(Y_\nu(z)\)是第二类贝塞尔函数。
- en: It is a solution to Bessel’s equation, and linearly independent from \(H_\nu^{(1)}\).
  id: totrans-1251
  prefs: []
  type: TYPE_NORMAL
  zh: 它是贝塞尔方程的解，且与\(H_\nu^{(1)}\)线性无关。
- en: Examples
  id: totrans-1252
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE242]'
  id: totrans-1253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE242]'
- en: See also
  id: totrans-1254
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`hankel1`](#sympy.functions.special.bessel.hankel1 "sympy.functions.special.bessel.hankel1"),
    [`besselj`](#sympy.functions.special.bessel.besselj "sympy.functions.special.bessel.besselj"),
    [`bessely`](#sympy.functions.special.bessel.bessely "sympy.functions.special.bessel.bessely")'
  id: totrans-1255
  prefs: []
  type: TYPE_NORMAL
  zh: '[`hankel1`](#sympy.functions.special.bessel.hankel1 "sympy.functions.special.bessel.hankel1"),
    [`besselj`](#sympy.functions.special.bessel.besselj "sympy.functions.special.bessel.besselj"),
    [`bessely`](#sympy.functions.special.bessel.bessely "sympy.functions.special.bessel.bessely")'
- en: References
  id: totrans-1256
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R432](#id92)]'
  id: totrans-1257
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R432](#id92)]'
- en: '[https://functions.wolfram.com/Bessel-TypeFunctions/HankelH2/](https://functions.wolfram.com/Bessel-TypeFunctions/HankelH2/)'
  id: totrans-1258
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Bessel-TypeFunctions/HankelH2/](https://functions.wolfram.com/Bessel-TypeFunctions/HankelH2/)'
- en: '[PRE243]'
  id: totrans-1259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE243]'
- en: Spherical Bessel function of the first kind.
  id: totrans-1260
  prefs: []
  type: TYPE_NORMAL
  zh: '[第一类球贝塞尔函数](https://functions.wolfram.com/Bessel-TypeFunctions/HankelH1/)。'
- en: Explanation
  id: totrans-1261
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This function is a solution to the spherical Bessel equation
  id: totrans-1262
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数是球形贝塞尔方程的解
- en: \[z^2 \frac{\mathrm{d}^2 w}{\mathrm{d}z^2} + 2z \frac{\mathrm{d}w}{\mathrm{d}z}
    + (z^2 - \nu(\nu + 1)) w = 0.\]
  id: totrans-1263
  prefs: []
  type: TYPE_NORMAL
  zh: \[z^2 \frac{\mathrm{d}^2 w}{\mathrm{d}z^2} + 2z \frac{\mathrm{d}w}{\mathrm{d}z}
    + (z^2 - \nu(\nu + 1)) w = 0.\]
- en: It can be defined as
  id: totrans-1264
  prefs: []
  type: TYPE_NORMAL
  zh: 可定义为
- en: \[j_\nu(z) = \sqrt{\frac{\pi}{2z}} J_{\nu + \frac{1}{2}}(z),\]
  id: totrans-1265
  prefs: []
  type: TYPE_NORMAL
  zh: \[j_\nu(z) = \sqrt{\frac{\pi}{2z}} J_{\nu + \frac{1}{2}}(z),\]
- en: where \(J_\nu(z)\) is the Bessel function of the first kind.
  id: totrans-1266
  prefs: []
  type: TYPE_NORMAL
  zh: 其中\(J_\nu(z)\)是第一类贝塞尔函数。
- en: 'The spherical Bessel functions of integral order are calculated using the formula:'
  id: totrans-1267
  prefs: []
  type: TYPE_NORMAL
  zh: 整数阶球贝塞尔函数使用以下公式计算：
- en: \[j_n(z) = f_n(z) \sin{z} + (-1)^{n+1} f_{-n-1}(z) \cos{z},\]
  id: totrans-1268
  prefs: []
  type: TYPE_NORMAL
  zh: \[j_n(z) = f_n(z) \sin{z} + (-1)^{n+1} f_{-n-1}(z) \cos{z},\]
- en: where the coefficients \(f_n(z)\) are available as [`sympy.polys.orthopolys.spherical_bessel_fn()`](../polys/reference.html#sympy.polys.orthopolys.spherical_bessel_fn
    "sympy.polys.orthopolys.spherical_bessel_fn").
  id: totrans-1269
  prefs: []
  type: TYPE_NORMAL
  zh: 其中系数 \(f_n(z)\) 可以通过[`sympy.polys.orthopolys.spherical_bessel_fn()`](../polys/reference.html#sympy.polys.orthopolys.spherical_bessel_fn
    "sympy.polys.orthopolys.spherical_bessel_fn") 获得。
- en: Examples
  id: totrans-1270
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE244]'
  id: totrans-1271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE244]'
- en: See also
  id: totrans-1272
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`besselj`](#sympy.functions.special.bessel.besselj "sympy.functions.special.bessel.besselj"),
    [`bessely`](#sympy.functions.special.bessel.bessely "sympy.functions.special.bessel.bessely"),
    [`besselk`](#sympy.functions.special.bessel.besselk "sympy.functions.special.bessel.besselk"),
    [`yn`](#sympy.functions.special.bessel.yn "sympy.functions.special.bessel.yn")'
  id: totrans-1273
  prefs: []
  type: TYPE_NORMAL
  zh: '[`besselj`](#sympy.functions.special.bessel.besselj "sympy.functions.special.bessel.besselj"),
    [`bessely`](#sympy.functions.special.bessel.bessely "sympy.functions.special.bessel.bessely"),
    [`besselk`](#sympy.functions.special.bessel.besselk "sympy.functions.special.bessel.besselk"),
    [`yn`](#sympy.functions.special.bessel.yn "sympy.functions.special.bessel.yn")'
- en: References
  id: totrans-1274
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R433](#id93)]'
  id: totrans-1275
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R433](#id93)]'
- en: '[https://dlmf.nist.gov/10.47](https://dlmf.nist.gov/10.47)'
  id: totrans-1276
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/10.47](https://dlmf.nist.gov/10.47)'
- en: '[PRE245]'
  id: totrans-1277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE245]'
- en: Spherical Bessel function of the second kind.
  id: totrans-1278
  prefs: []
  type: TYPE_NORMAL
  zh: 第二类球贝塞尔函数。
- en: Explanation
  id: totrans-1279
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This function is another solution to the spherical Bessel equation, and linearly
    independent from \(j_n\). It can be defined as
  id: totrans-1280
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数是球贝塞尔方程的另一解，与\(j_n\)线性无关。可以定义为
- en: \[y_\nu(z) = \sqrt{\frac{\pi}{2z}} Y_{\nu + \frac{1}{2}}(z),\]
  id: totrans-1281
  prefs: []
  type: TYPE_NORMAL
  zh: \[y_\nu(z) = \sqrt{\frac{\pi}{2z}} Y_{\nu + \frac{1}{2}}(z),\]
- en: where \(Y_\nu(z)\) is the Bessel function of the second kind.
  id: totrans-1282
  prefs: []
  type: TYPE_NORMAL
  zh: 其中\(Y_\nu(z)\)是第二类贝塞尔函数。
- en: 'For integral orders \(n\), \(y_n\) is calculated using the formula:'
  id: totrans-1283
  prefs: []
  type: TYPE_NORMAL
  zh: 对于整数阶\(n\)，使用以下公式计算\(y_n\)：
- en: \[y_n(z) = (-1)^{n+1} j_{-n-1}(z)\]
  id: totrans-1284
  prefs: []
  type: TYPE_NORMAL
  zh: \[y_n(z) = (-1)^{n+1} j_{-n-1}(z)\]
- en: Examples
  id: totrans-1285
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE246]'
  id: totrans-1286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE246]'
- en: See also
  id: totrans-1287
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`besselj`](#sympy.functions.special.bessel.besselj "sympy.functions.special.bessel.besselj"),
    [`bessely`](#sympy.functions.special.bessel.bessely "sympy.functions.special.bessel.bessely"),
    [`besselk`](#sympy.functions.special.bessel.besselk "sympy.functions.special.bessel.besselk"),
    [`jn`](#sympy.functions.special.bessel.jn "sympy.functions.special.bessel.jn")'
  id: totrans-1288
  prefs: []
  type: TYPE_NORMAL
  zh: '[`besselj`](#sympy.functions.special.bessel.besselj "sympy.functions.special.bessel.besselj"),
    [`bessely`](#sympy.functions.special.bessel.bessely "sympy.functions.special.bessel.bessely"),
    [`besselk`](#sympy.functions.special.bessel.besselk "sympy.functions.special.bessel.besselk"),
    [`jn`](#sympy.functions.special.bessel.jn "sympy.functions.special.bessel.jn")'
- en: References
  id: totrans-1289
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R434](#id94)]'
  id: totrans-1290
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R434](#id94)]'
- en: '[https://dlmf.nist.gov/10.47](https://dlmf.nist.gov/10.47)'
  id: totrans-1291
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/10.47](https://dlmf.nist.gov/10.47)'
- en: '[PRE247]'
  id: totrans-1292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE247]'
- en: Zeros of the spherical Bessel function of the first kind.
  id: totrans-1293
  prefs: []
  type: TYPE_NORMAL
  zh: 第一类球贝塞尔函数的零点。
- en: 'Parameters:'
  id: totrans-1294
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : integer'
  id: totrans-1295
  prefs: []
  type: TYPE_NORMAL
  zh: '**n** : 整数'
- en: order of Bessel function
  id: totrans-1296
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 贝塞尔函数的阶数
- en: '**k** : integer'
  id: totrans-1297
  prefs: []
  type: TYPE_NORMAL
  zh: '**k** : 整数'
- en: number of zeros to return
  id: totrans-1298
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回的零点数
- en: Explanation
  id: totrans-1299
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This returns an array of zeros of \(jn\) up to the \(k\)-th zero.
  id: totrans-1300
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回一个包含\(jn\)的零点数组，直到第\(k\)个零点。
- en: 'method = “sympy”: uses [mpmath.besseljzero](https://mpmath.org/doc/current/functions/bessel.html#mpmath.besseljzero)'
  id: totrans-1301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'method = “sympy”: 使用[mpmath.besseljzero](https://mpmath.org/doc/current/functions/bessel.html#mpmath.besseljzero)'
- en: 'method = “scipy”: uses the [SciPy’s sph_jn](https://docs.scipy.org/doc/scipy/reference/generated/scipy.special.jn_zeros.html)
    and [newton](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.newton.html)
    to find all roots, which is faster than computing the zeros using a general numerical
    solver, but it requires SciPy and only works with low precision floating point
    numbers. (The function used with method=”sympy” is a recent addition to mpmath;
    before that a general solver was used.)'
  id: totrans-1302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'method = “scipy”: 使用[SciPy 的 sph_jn](https://docs.scipy.org/doc/scipy/reference/generated/scipy.special.jn_zeros.html)
    和[newton](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.newton.html)来找到所有根，比使用一般数值求解器计算零点更快，但需要
    SciPy，并且仅适用于低精度浮点数。（在使用 method=”sympy” 的函数之前，mpmath 使用一般求解器。）'
- en: Examples
  id: totrans-1303
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE248]'
  id: totrans-1304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE248]'
- en: See also
  id: totrans-1305
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`jn`](#sympy.functions.special.bessel.jn "sympy.functions.special.bessel.jn"),
    [`yn`](#sympy.functions.special.bessel.yn "sympy.functions.special.bessel.yn"),
    [`besselj`](#sympy.functions.special.bessel.besselj "sympy.functions.special.bessel.besselj"),
    [`besselk`](#sympy.functions.special.bessel.besselk "sympy.functions.special.bessel.besselk"),
    [`bessely`](#sympy.functions.special.bessel.bessely "sympy.functions.special.bessel.bessely")'
  id: totrans-1306
  prefs: []
  type: TYPE_NORMAL
  zh: '[`jn`](#sympy.functions.special.bessel.jn "sympy.functions.special.bessel.jn"),
    [`yn`](#sympy.functions.special.bessel.yn "sympy.functions.special.bessel.yn"),
    [`besselj`](#sympy.functions.special.bessel.besselj "sympy.functions.special.bessel.besselj"),
    [`besselk`](#sympy.functions.special.bessel.besselk "sympy.functions.special.bessel.besselk"),
    [`bessely`](#sympy.functions.special.bessel.bessely "sympy.functions.special.bessel.bessely")'
- en: '[PRE249]'
  id: totrans-1307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE249]'
- en: The Marcum Q-function.
  id: totrans-1308
  prefs: []
  type: TYPE_NORMAL
  zh: Marcum Q-函数。
- en: Explanation
  id: totrans-1309
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The Marcum Q-function is defined by the meromorphic continuation of
  id: totrans-1310
  prefs: []
  type: TYPE_NORMAL
  zh: Marcum Q-函数由球贝塞尔方程的亚纯延拓定义
- en: \[Q_m(a, b) = a^{- m + 1} \int_{b}^{\infty} x^{m} e^{- \frac{a^{2}}{2} - \frac{x^{2}}{2}}
    I_{m - 1}\left(a x\right)\, dx\]
  id: totrans-1311
  prefs: []
  type: TYPE_NORMAL
  zh: \[Q_m(a, b) = a^{- m + 1} \int_{b}^{\infty} x^{m} e^{- \frac{a^{2}}{2} - \frac{x^{2}}{2}}
    I_{m - 1}\left(a x\right)\, dx\]
- en: Examples
  id: totrans-1312
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE250]'
  id: totrans-1313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE250]'
- en: 'Special values:'
  id: totrans-1314
  prefs: []
  type: TYPE_NORMAL
  zh: 特殊值：
- en: '[PRE251]'
  id: totrans-1315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE251]'
- en: 'Differentiation with respect to \(a\) and \(b\) is supported:'
  id: totrans-1316
  prefs: []
  type: TYPE_NORMAL
  zh: 支持对 \(a\) 和 \(b\) 的微分：
- en: '[PRE252]'
  id: totrans-1317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE252]'
- en: References
  id: totrans-1318
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R435](#id95)]'
  id: totrans-1319
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R435](#id95)]'
- en: '[https://en.wikipedia.org/wiki/Marcum_Q-function](https://en.wikipedia.org/wiki/Marcum_Q-function)'
  id: totrans-1320
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Marcum_Q-function](https://en.wikipedia.org/wiki/Marcum_Q-function)'
- en: '[[R436](#id96)]'
  id: totrans-1321
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R436](#id96)]'
- en: '[https://mathworld.wolfram.com/MarcumQ-Function.html](https://mathworld.wolfram.com/MarcumQ-Function.html)'
  id: totrans-1322
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/MarcumQ-Function.html](https://mathworld.wolfram.com/MarcumQ-Function.html)'
- en: Airy Functions
  id: totrans-1323
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Airy 函数
- en: '[PRE253]'
  id: totrans-1324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE253]'
- en: Abstract base class for Airy functions.
  id: totrans-1325
  prefs: []
  type: TYPE_NORMAL
  zh: Airy 函数的抽象基类。
- en: This class is meant to reduce code duplication.
  id: totrans-1326
  prefs: []
  type: TYPE_NORMAL
  zh: 这个类旨在减少代码重复。
- en: '[PRE254]'
  id: totrans-1327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE254]'
- en: The Airy function \(\operatorname{Ai}\) of the first kind.
  id: totrans-1328
  prefs: []
  type: TYPE_NORMAL
  zh: Airy 函数 \(\operatorname{Ai}\) 的第一种形式。
- en: Explanation
  id: totrans-1329
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: The Airy function \(\operatorname{Ai}(z)\) is defined to be the function satisfying
    Airy’s differential equation
  id: totrans-1330
  prefs: []
  type: TYPE_NORMAL
  zh: Airy 函数 \(\operatorname{Ai}(z)\) 被定义为满足 Airy 微分方程的函数
- en: \[\frac{\mathrm{d}^2 w(z)}{\mathrm{d}z^2} - z w(z) = 0.\]
  id: totrans-1331
  prefs: []
  type: TYPE_NORMAL
  zh: \[\frac{\mathrm{d}^2 w(z)}{\mathrm{d}z^2} - z w(z) = 0.\]
- en: Equivalently, for real \(z\)
  id: totrans-1332
  prefs: []
  type: TYPE_NORMAL
  zh: 同样地，对于实数 \(z\)
- en: \[\operatorname{Ai}(z) := \frac{1}{\pi} \int_0^\infty \cos\left(\frac{t^3}{3}
    + z t\right) \mathrm{d}t.\]
  id: totrans-1333
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{Ai}(z) := \frac{1}{\pi} \int_0^\infty \cos\left(\frac{t^3}{3}
    + z t\right) \mathrm{d}t.\]
- en: Examples
  id: totrans-1334
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Create an Airy function object:'
  id: totrans-1335
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个 Airy 函数对象：
- en: '[PRE255]'
  id: totrans-1336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE255]'
- en: '[PRE256]'
  id: totrans-1337
  prefs: []
  type: TYPE_PRE
  zh: '[PRE256]'
- en: 'Several special values are known:'
  id: totrans-1338
  prefs: []
  type: TYPE_NORMAL
  zh: 已知若干特殊值：
- en: '[PRE257]'
  id: totrans-1339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE257]'
- en: 'The Airy function obeys the mirror symmetry:'
  id: totrans-1340
  prefs: []
  type: TYPE_NORMAL
  zh: Airy 函数遵循镜像对称性：
- en: '[PRE258]'
  id: totrans-1341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE258]'
- en: 'Differentiation with respect to \(z\) is supported:'
  id: totrans-1342
  prefs: []
  type: TYPE_NORMAL
  zh: 支持对 \(z\) 的微分：
- en: '[PRE259]'
  id: totrans-1343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE259]'
- en: 'Series expansion is also supported:'
  id: totrans-1344
  prefs: []
  type: TYPE_NORMAL
  zh: 系列展开也支持：
- en: '[PRE260]'
  id: totrans-1345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE260]'
- en: 'We can numerically evaluate the Airy function to arbitrary precision on the
    whole complex plane:'
  id: totrans-1346
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在整个复平面上对 Airy 函数进行任意精度的数值评估：
- en: '[PRE261]'
  id: totrans-1347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE261]'
- en: 'Rewrite \(\operatorname{Ai}(z)\) in terms of hypergeometric functions:'
  id: totrans-1348
  prefs: []
  type: TYPE_NORMAL
  zh: 重写 \(\operatorname{Ai}(z)\) 以超几何函数表示：
- en: '[PRE262]'
  id: totrans-1349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE262]'
- en: See also
  id: totrans-1350
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`airybi`](#sympy.functions.special.bessel.airybi "sympy.functions.special.bessel.airybi")'
  id: totrans-1351
  prefs: []
  type: TYPE_NORMAL
  zh: '[`airybi`](#sympy.functions.special.bessel.airybi "sympy.functions.special.bessel.airybi")'
- en: Airy function of the second kind.
  id: totrans-1352
  prefs: []
  type: TYPE_NORMAL
  zh: Airy 函数的第二种形式。
- en: '[`airyaiprime`](#sympy.functions.special.bessel.airyaiprime "sympy.functions.special.bessel.airyaiprime")'
  id: totrans-1353
  prefs: []
  type: TYPE_NORMAL
  zh: '[`airyaiprime`](#sympy.functions.special.bessel.airyaiprime "sympy.functions.special.bessel.airyaiprime")'
- en: Derivative of the Airy function of the first kind.
  id: totrans-1354
  prefs: []
  type: TYPE_NORMAL
  zh: Airy 函数的第一种形式的导数。
- en: '[`airybiprime`](#sympy.functions.special.bessel.airybiprime "sympy.functions.special.bessel.airybiprime")'
  id: totrans-1355
  prefs: []
  type: TYPE_NORMAL
  zh: '[`airybiprime`](#sympy.functions.special.bessel.airybiprime "sympy.functions.special.bessel.airybiprime")'
- en: Derivative of the Airy function of the second kind.
  id: totrans-1356
  prefs: []
  type: TYPE_NORMAL
  zh: Airy 函数的第二种形式的导数。
- en: References
  id: totrans-1357
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R437](#id97)]'
  id: totrans-1358
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R437](#id97)]'
- en: '[https://en.wikipedia.org/wiki/Airy_function](https://en.wikipedia.org/wiki/Airy_function)'
  id: totrans-1359
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Airy_function](https://en.wikipedia.org/wiki/Airy_function)'
- en: '[[R438](#id98)]'
  id: totrans-1360
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R438](#id98)]'
- en: '[https://dlmf.nist.gov/9](https://dlmf.nist.gov/9)'
  id: totrans-1361
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/9](https://dlmf.nist.gov/9)'
- en: '[[R439](#id99)]'
  id: totrans-1362
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R439](#id99)]'
- en: '[https://encyclopediaofmath.org/wiki/Airy_functions](https://encyclopediaofmath.org/wiki/Airy_functions)'
  id: totrans-1363
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://encyclopediaofmath.org/wiki/Airy_functions](https://encyclopediaofmath.org/wiki/Airy_functions)'
- en: '[[R440](#id100)]'
  id: totrans-1364
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R440](#id100)]'
- en: '[https://mathworld.wolfram.com/AiryFunctions.html](https://mathworld.wolfram.com/AiryFunctions.html)'
  id: totrans-1365
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/AiryFunctions.html](https://mathworld.wolfram.com/AiryFunctions.html)'
- en: '[PRE263]'
  id: totrans-1366
  prefs: []
  type: TYPE_PRE
  zh: '[PRE263]'
- en: The Airy function \(\operatorname{Bi}\) of the second kind.
  id: totrans-1367
  prefs: []
  type: TYPE_NORMAL
  zh: Airy 函数 \(\operatorname{Bi}\) 的第二种形式。
- en: Explanation
  id: totrans-1368
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: The Airy function \(\operatorname{Bi}(z)\) is defined to be the function satisfying
    Airy’s differential equation
  id: totrans-1369
  prefs: []
  type: TYPE_NORMAL
  zh: Airy 函数 \(\operatorname{Bi}(z)\) 被定义为满足 Airy 微分方程的函数
- en: \[\frac{\mathrm{d}^2 w(z)}{\mathrm{d}z^2} - z w(z) = 0.\]
  id: totrans-1370
  prefs: []
  type: TYPE_NORMAL
  zh: \[\frac{\mathrm{d}^2 w(z)}{\mathrm{d}z^2} - z w(z) = 0.\]
- en: Equivalently, for real \(z\)
  id: totrans-1371
  prefs: []
  type: TYPE_NORMAL
  zh: 同样地，对于实数 \(z\)
- en: \[\operatorname{Bi}(z) := \frac{1}{\pi} \int_0^\infty \exp\left(-\frac{t^3}{3}
    + z t\right) + \sin\left(\frac{t^3}{3} + z t\right) \mathrm{d}t.\]
  id: totrans-1372
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{Bi}(z) := \frac{1}{\pi} \int_0^\infty \exp\left(-\frac{t^3}{3}
    + z t\right) + \sin\left(\frac{t^3}{3} + z t\right) \mathrm{d}t.\]
- en: Examples
  id: totrans-1373
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Create an Airy function object:'
  id: totrans-1374
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个 Airy 函数对象：
- en: '[PRE264]'
  id: totrans-1375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE264]'
- en: '[PRE265]'
  id: totrans-1376
  prefs: []
  type: TYPE_PRE
  zh: '[PRE265]'
- en: 'Several special values are known:'
  id: totrans-1377
  prefs: []
  type: TYPE_NORMAL
  zh: 已知若干特殊值：
- en: '[PRE266]'
  id: totrans-1378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE266]'
- en: 'The Airy function obeys the mirror symmetry:'
  id: totrans-1379
  prefs: []
  type: TYPE_NORMAL
  zh: Airy 函数遵循镜像对称性：
- en: '[PRE267]'
  id: totrans-1380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE267]'
- en: 'Differentiation with respect to \(z\) is supported:'
  id: totrans-1381
  prefs: []
  type: TYPE_NORMAL
  zh: 支持对 \(z\) 的微分：
- en: '[PRE268]'
  id: totrans-1382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE268]'
- en: 'Series expansion is also supported:'
  id: totrans-1383
  prefs: []
  type: TYPE_NORMAL
  zh: 系列展开也支持：
- en: '[PRE269]'
  id: totrans-1384
  prefs: []
  type: TYPE_PRE
  zh: '[PRE269]'
- en: 'We can numerically evaluate the Airy function to arbitrary precision on the
    whole complex plane:'
  id: totrans-1385
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在整个复平面上对 Airy 函数进行任意精度的数值评估：
- en: '[PRE270]'
  id: totrans-1386
  prefs: []
  type: TYPE_PRE
  zh: '[PRE270]'
- en: 'Rewrite \(\operatorname{Bi}(z)\) in terms of hypergeometric functions:'
  id: totrans-1387
  prefs: []
  type: TYPE_NORMAL
  zh: 重写 \(\operatorname{Bi}(z)\) 以超几何函数表示：
- en: '[PRE271]'
  id: totrans-1388
  prefs: []
  type: TYPE_PRE
  zh: '[PRE271]'
- en: See also
  id: totrans-1389
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`airyai`](#sympy.functions.special.bessel.airyai "sympy.functions.special.bessel.airyai")'
  id: totrans-1390
  prefs: []
  type: TYPE_NORMAL
  zh: '[`airyai`](#sympy.functions.special.bessel.airyai "sympy.functions.special.bessel.airyai")'
- en: Airy function of the first kind.
  id: totrans-1391
  prefs: []
  type: TYPE_NORMAL
  zh: 艾里函数第一类。
- en: '[`airyaiprime`](#sympy.functions.special.bessel.airyaiprime "sympy.functions.special.bessel.airyaiprime")'
  id: totrans-1392
  prefs: []
  type: TYPE_NORMAL
  zh: '[`airyaiprime`](#sympy.functions.special.bessel.airyaiprime "sympy.functions.special.bessel.airyaiprime")'
- en: Derivative of the Airy function of the first kind.
  id: totrans-1393
  prefs: []
  type: TYPE_NORMAL
  zh: 艾里函数第一类的导数。
- en: '[`airybiprime`](#sympy.functions.special.bessel.airybiprime "sympy.functions.special.bessel.airybiprime")'
  id: totrans-1394
  prefs: []
  type: TYPE_NORMAL
  zh: '[`airybiprime`](#sympy.functions.special.bessel.airybiprime "sympy.functions.special.bessel.airybiprime")'
- en: Derivative of the Airy function of the second kind.
  id: totrans-1395
  prefs: []
  type: TYPE_NORMAL
  zh: 艾里函数第二类的导数。
- en: References
  id: totrans-1396
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R441](#id101)]'
  id: totrans-1397
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R441](#id101)]'
- en: '[https://en.wikipedia.org/wiki/Airy_function](https://en.wikipedia.org/wiki/Airy_function)'
  id: totrans-1398
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Airy_function](https://en.wikipedia.org/wiki/Airy_function)'
- en: '[[R442](#id102)]'
  id: totrans-1399
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R442](#id102)]'
- en: '[https://dlmf.nist.gov/9](https://dlmf.nist.gov/9)'
  id: totrans-1400
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/9](https://dlmf.nist.gov/9)'
- en: '[[R443](#id103)]'
  id: totrans-1401
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R443](#id103)]'
- en: '[https://encyclopediaofmath.org/wiki/Airy_functions](https://encyclopediaofmath.org/wiki/Airy_functions)'
  id: totrans-1402
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://encyclopediaofmath.org/wiki/Airy_functions](https://encyclopediaofmath.org/wiki/Airy_functions)'
- en: '[[R444](#id104)]'
  id: totrans-1403
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R444](#id104)]'
- en: '[https://mathworld.wolfram.com/AiryFunctions.html](https://mathworld.wolfram.com/AiryFunctions.html)'
  id: totrans-1404
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/AiryFunctions.html](https://mathworld.wolfram.com/AiryFunctions.html)'
- en: '[PRE272]'
  id: totrans-1405
  prefs: []
  type: TYPE_PRE
  zh: '[PRE272]'
- en: The derivative \(\operatorname{Ai}^\prime\) of the Airy function of the first
    kind.
  id: totrans-1406
  prefs: []
  type: TYPE_NORMAL
  zh: 艾里函数第一类的导数\(\operatorname{Ai}^\prime\)。
- en: Explanation
  id: totrans-1407
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: The Airy function \(\operatorname{Ai}^\prime(z)\) is defined to be the function
  id: totrans-1408
  prefs: []
  type: TYPE_NORMAL
  zh: 艾里函数\(\operatorname{Ai}^\prime(z)\)定义为函数
- en: \[\operatorname{Ai}^\prime(z) := \frac{\mathrm{d} \operatorname{Ai}(z)}{\mathrm{d}
    z}.\]
  id: totrans-1409
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{Ai}^\prime(z) := \frac{\mathrm{d} \operatorname{Ai}(z)}{\mathrm{d}
    z}.\]
- en: Examples
  id: totrans-1410
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Create an Airy function object:'
  id: totrans-1411
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个艾里函数对象：
- en: '[PRE273]'
  id: totrans-1412
  prefs: []
  type: TYPE_PRE
  zh: '[PRE273]'
- en: '[PRE274]'
  id: totrans-1413
  prefs: []
  type: TYPE_PRE
  zh: '[PRE274]'
- en: 'Several special values are known:'
  id: totrans-1414
  prefs: []
  type: TYPE_NORMAL
  zh: 已知多个特殊值：
- en: '[PRE275]'
  id: totrans-1415
  prefs: []
  type: TYPE_PRE
  zh: '[PRE275]'
- en: 'The Airy function obeys the mirror symmetry:'
  id: totrans-1416
  prefs: []
  type: TYPE_NORMAL
  zh: 艾里函数遵循镜像对称性：
- en: '[PRE276]'
  id: totrans-1417
  prefs: []
  type: TYPE_PRE
  zh: '[PRE276]'
- en: 'Differentiation with respect to \(z\) is supported:'
  id: totrans-1418
  prefs: []
  type: TYPE_NORMAL
  zh: 支持关于\(z\)的微分：
- en: '[PRE277]'
  id: totrans-1419
  prefs: []
  type: TYPE_PRE
  zh: '[PRE277]'
- en: 'Series expansion is also supported:'
  id: totrans-1420
  prefs: []
  type: TYPE_NORMAL
  zh: 级数展开也是支持的：
- en: '[PRE278]'
  id: totrans-1421
  prefs: []
  type: TYPE_PRE
  zh: '[PRE278]'
- en: 'We can numerically evaluate the Airy function to arbitrary precision on the
    whole complex plane:'
  id: totrans-1422
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在整个复平面上对艾里函数进行任意精度的数值评估：
- en: '[PRE279]'
  id: totrans-1423
  prefs: []
  type: TYPE_PRE
  zh: '[PRE279]'
- en: 'Rewrite \(\operatorname{Ai}^\prime(z)\) in terms of hypergeometric functions:'
  id: totrans-1424
  prefs: []
  type: TYPE_NORMAL
  zh: 将\(\operatorname{Ai}^\prime(z)\)重写为超几何函数的形式：
- en: '[PRE280]'
  id: totrans-1425
  prefs: []
  type: TYPE_PRE
  zh: '[PRE280]'
- en: See also
  id: totrans-1426
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`airyai`](#sympy.functions.special.bessel.airyai "sympy.functions.special.bessel.airyai")'
  id: totrans-1427
  prefs: []
  type: TYPE_NORMAL
  zh: '[`airyai`](#sympy.functions.special.bessel.airyai "sympy.functions.special.bessel.airyai")'
- en: Airy function of the first kind.
  id: totrans-1428
  prefs: []
  type: TYPE_NORMAL
  zh: 艾里函数第一类。
- en: '[`airybi`](#sympy.functions.special.bessel.airybi "sympy.functions.special.bessel.airybi")'
  id: totrans-1429
  prefs: []
  type: TYPE_NORMAL
  zh: '[`airybi`](#sympy.functions.special.bessel.airybi "sympy.functions.special.bessel.airybi")'
- en: Airy function of the second kind.
  id: totrans-1430
  prefs: []
  type: TYPE_NORMAL
  zh: 艾里函数第二类。
- en: '[`airybiprime`](#sympy.functions.special.bessel.airybiprime "sympy.functions.special.bessel.airybiprime")'
  id: totrans-1431
  prefs: []
  type: TYPE_NORMAL
  zh: '[`airybiprime`](#sympy.functions.special.bessel.airybiprime "sympy.functions.special.bessel.airybiprime")'
- en: Derivative of the Airy function of the second kind.
  id: totrans-1432
  prefs: []
  type: TYPE_NORMAL
  zh: 艾里函数第二类的导数。
- en: References
  id: totrans-1433
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R445](#id105)]'
  id: totrans-1434
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R445](#id105)]'
- en: '[https://en.wikipedia.org/wiki/Airy_function](https://en.wikipedia.org/wiki/Airy_function)'
  id: totrans-1435
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Airy_function](https://en.wikipedia.org/wiki/Airy_function)'
- en: '[[R446](#id106)]'
  id: totrans-1436
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R446](#id106)]'
- en: '[https://dlmf.nist.gov/9](https://dlmf.nist.gov/9)'
  id: totrans-1437
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/9](https://dlmf.nist.gov/9)'
- en: '[[R447](#id107)]'
  id: totrans-1438
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R447](#id107)]'
- en: '[https://encyclopediaofmath.org/wiki/Airy_functions](https://encyclopediaofmath.org/wiki/Airy_functions)'
  id: totrans-1439
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://encyclopediaofmath.org/wiki/Airy_functions](https://encyclopediaofmath.org/wiki/Airy_functions)'
- en: '[[R448](#id108)]'
  id: totrans-1440
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R448](#id108)]'
- en: '[https://mathworld.wolfram.com/AiryFunctions.html](https://mathworld.wolfram.com/AiryFunctions.html)'
  id: totrans-1441
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/AiryFunctions.html](https://mathworld.wolfram.com/AiryFunctions.html)'
- en: '[PRE281]'
  id: totrans-1442
  prefs: []
  type: TYPE_PRE
  zh: '[PRE281]'
- en: The derivative \(\operatorname{Bi}^\prime\) of the Airy function of the first
    kind.
  id: totrans-1443
  prefs: []
  type: TYPE_NORMAL
  zh: 艾里函数第一类的导数\(\operatorname{Bi}^\prime\)。
- en: Explanation
  id: totrans-1444
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: The Airy function \(\operatorname{Bi}^\prime(z)\) is defined to be the function
  id: totrans-1445
  prefs: []
  type: TYPE_NORMAL
  zh: 艾里函数\(\operatorname{Bi}^\prime(z)\)定义为函数
- en: \[\operatorname{Bi}^\prime(z) := \frac{\mathrm{d} \operatorname{Bi}(z)}{\mathrm{d}
    z}.\]
  id: totrans-1446
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{Bi}^\prime(z) := \frac{\mathrm{d} \operatorname{Bi}(z)}{\mathrm{d}
    z}.\]
- en: Examples
  id: totrans-1447
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Create an Airy function object:'
  id: totrans-1448
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个艾里函数对象：
- en: '[PRE282]'
  id: totrans-1449
  prefs: []
  type: TYPE_PRE
  zh: '[PRE282]'
- en: '[PRE283]'
  id: totrans-1450
  prefs: []
  type: TYPE_PRE
  zh: '[PRE283]'
- en: 'Several special values are known:'
  id: totrans-1451
  prefs: []
  type: TYPE_NORMAL
  zh: 已知多个特殊值：
- en: '[PRE284]'
  id: totrans-1452
  prefs: []
  type: TYPE_PRE
  zh: '[PRE284]'
- en: 'The Airy function obeys the mirror symmetry:'
  id: totrans-1453
  prefs: []
  type: TYPE_NORMAL
  zh: 艾里函数遵循镜像对称性：
- en: '[PRE285]'
  id: totrans-1454
  prefs: []
  type: TYPE_PRE
  zh: '[PRE285]'
- en: 'Differentiation with respect to \(z\) is supported:'
  id: totrans-1455
  prefs: []
  type: TYPE_NORMAL
  zh: 支持关于\(z\)的微分：
- en: '[PRE286]'
  id: totrans-1456
  prefs: []
  type: TYPE_PRE
  zh: '[PRE286]'
- en: 'Series expansion is also supported:'
  id: totrans-1457
  prefs: []
  type: TYPE_NORMAL
  zh: 级数展开也是支持的：
- en: '[PRE287]'
  id: totrans-1458
  prefs: []
  type: TYPE_PRE
  zh: '[PRE287]'
- en: 'We can numerically evaluate the Airy function to arbitrary precision on the
    whole complex plane:'
  id: totrans-1459
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在整个复平面上对艾里函数进行任意精度的数值评估：
- en: '[PRE288]'
  id: totrans-1460
  prefs: []
  type: TYPE_PRE
  zh: '[PRE288]'
- en: 'Rewrite \(\operatorname{Bi}^\prime(z)\) in terms of hypergeometric functions:'
  id: totrans-1461
  prefs: []
  type: TYPE_NORMAL
  zh: 重写\(\operatorname{Bi}^\prime(z)\)以超几何函数的形式：
- en: '[PRE289]'
  id: totrans-1462
  prefs: []
  type: TYPE_PRE
  zh: '[PRE289]'
- en: See also
  id: totrans-1463
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`airyai`](#sympy.functions.special.bessel.airyai "sympy.functions.special.bessel.airyai")'
  id: totrans-1464
  prefs: []
  type: TYPE_NORMAL
  zh: '[`airyai`](#sympy.functions.special.bessel.airyai "sympy.functions.special.bessel.airyai")'
- en: Airy function of the first kind.
  id: totrans-1465
  prefs: []
  type: TYPE_NORMAL
  zh: Airy函数的第一种。
- en: '[`airybi`](#sympy.functions.special.bessel.airybi "sympy.functions.special.bessel.airybi")'
  id: totrans-1466
  prefs: []
  type: TYPE_NORMAL
  zh: '[`airybi`](#sympy.functions.special.bessel.airybi "sympy.functions.special.bessel.airybi")'
- en: Airy function of the second kind.
  id: totrans-1467
  prefs: []
  type: TYPE_NORMAL
  zh: Airy函数的第二种。
- en: '[`airyaiprime`](#sympy.functions.special.bessel.airyaiprime "sympy.functions.special.bessel.airyaiprime")'
  id: totrans-1468
  prefs: []
  type: TYPE_NORMAL
  zh: '[`airyaiprime`](#sympy.functions.special.bessel.airyaiprime "sympy.functions.special.bessel.airyaiprime")'
- en: Derivative of the Airy function of the first kind.
  id: totrans-1469
  prefs: []
  type: TYPE_NORMAL
  zh: Airy函数的第一种的导数。
- en: References
  id: totrans-1470
  prefs: []
  type: TYPE_NORMAL
  zh: 参考资料
- en: '[[R449](#id109)]'
  id: totrans-1471
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R449](#id109)]'
- en: '[https://en.wikipedia.org/wiki/Airy_function](https://en.wikipedia.org/wiki/Airy_function)'
  id: totrans-1472
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Airy_function](https://en.wikipedia.org/wiki/Airy_function)'
- en: '[[R450](#id110)]'
  id: totrans-1473
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R450](#id110)]'
- en: '[https://dlmf.nist.gov/9](https://dlmf.nist.gov/9)'
  id: totrans-1474
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/9](https://dlmf.nist.gov/9)'
- en: '[[R451](#id111)]'
  id: totrans-1475
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R451](#id111)]'
- en: '[https://encyclopediaofmath.org/wiki/Airy_functions](https://encyclopediaofmath.org/wiki/Airy_functions)'
  id: totrans-1476
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://encyclopediaofmath.org/wiki/Airy_functions](https://encyclopediaofmath.org/wiki/Airy_functions)'
- en: '[[R452](#id112)]'
  id: totrans-1477
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R452](#id112)]'
- en: '[https://mathworld.wolfram.com/AiryFunctions.html](https://mathworld.wolfram.com/AiryFunctions.html)'
  id: totrans-1478
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/AiryFunctions.html](https://mathworld.wolfram.com/AiryFunctions.html)'
- en: B-Splines
  id: totrans-1479
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: B样条
- en: '[PRE290]'
  id: totrans-1480
  prefs: []
  type: TYPE_PRE
  zh: '[PRE290]'
- en: The \(n\)-th B-spline at \(x\) of degree \(d\) with knots.
  id: totrans-1481
  prefs: []
  type: TYPE_NORMAL
  zh: 在给定结点*knots*处的阶为*d*的第*n*个B样条。
- en: 'Parameters:'
  id: totrans-1482
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**d** : integer'
  id: totrans-1483
  prefs: []
  type: TYPE_NORMAL
  zh: '**d**：整数'
- en: degree of bspline
  id: totrans-1484
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: B样条的度数
- en: '**knots** : list of integer values'
  id: totrans-1485
  prefs: []
  type: TYPE_NORMAL
  zh: '**knots**：整数值列表'
- en: list of knots points of bspline
  id: totrans-1486
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: B样条的结节点列表。
- en: '**n** : integer'
  id: totrans-1487
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**：整数'
- en: \(n\)-th B-spline
  id: totrans-1488
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 第*n*个B样条
- en: '**x** : symbol'
  id: totrans-1489
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**：符号'
- en: Explanation
  id: totrans-1490
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: B-Splines are piecewise polynomials of degree \(d\). They are defined on a set
    of knots, which is a sequence of integers or floats.
  id: totrans-1491
  prefs: []
  type: TYPE_NORMAL
  zh: B样条是阶为*d*的分段多项式。它们定义在结点的集合上，这些结点是整数或浮点数序列。
- en: Examples
  id: totrans-1492
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'The 0th degree splines have a value of 1 on a single interval:'
  id: totrans-1493
  prefs: []
  type: TYPE_NORMAL
  zh: 第0阶样条在单个区间上的值为1：
- en: '[PRE291]'
  id: totrans-1494
  prefs: []
  type: TYPE_PRE
  zh: '[PRE291]'
- en: For a given `(d, knots)` there are `len(knots)-d-1` B-splines defined, that
    are indexed by `n` (starting at 0).
  id: totrans-1495
  prefs: []
  type: TYPE_NORMAL
  zh: 对于给定的`(d, knots)`，定义了`len(knots)-d-1`个B样条，其由索引`n`（从0开始）索引。
- en: 'Here is an example of a cubic B-spline:'
  id: totrans-1496
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个三次B样条的示例：
- en: '[PRE292]'
  id: totrans-1497
  prefs: []
  type: TYPE_PRE
  zh: '[PRE292]'
- en: 'By repeating knot points, you can introduce discontinuities in the B-splines
    and their derivatives:'
  id: totrans-1498
  prefs: []
  type: TYPE_NORMAL
  zh: 通过重复结节点，可以在B样条及其导数中引入不连续性：
- en: '[PRE293]'
  id: totrans-1499
  prefs: []
  type: TYPE_PRE
  zh: '[PRE293]'
- en: 'It is quite time consuming to construct and evaluate B-splines. If you need
    to evaluate a B-spline many times, it is best to lambdify them first:'
  id: totrans-1500
  prefs: []
  type: TYPE_NORMAL
  zh: 构造和评估B样条非常耗时。如果需要多次评估B样条，最好先对它们进行lambdify处理：
- en: '[PRE294]'
  id: totrans-1501
  prefs: []
  type: TYPE_PRE
  zh: '[PRE294]'
- en: See also
  id: totrans-1502
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`bspline_basis_set`](#sympy.functions.special.bsplines.bspline_basis_set "sympy.functions.special.bsplines.bspline_basis_set")'
  id: totrans-1503
  prefs: []
  type: TYPE_NORMAL
  zh: '[`bspline_basis_set`](#sympy.functions.special.bsplines.bspline_basis_set "sympy.functions.special.bsplines.bspline_basis_set")'
- en: References
  id: totrans-1504
  prefs: []
  type: TYPE_NORMAL
  zh: 参考资料
- en: '[[R453](#id113)]'
  id: totrans-1505
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R453](#id113)]'
- en: '[https://en.wikipedia.org/wiki/B-spline](https://en.wikipedia.org/wiki/B-spline)'
  id: totrans-1506
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/B-spline](https://en.wikipedia.org/wiki/B-spline)'
- en: '[PRE295]'
  id: totrans-1507
  prefs: []
  type: TYPE_PRE
  zh: '[PRE295]'
- en: Return the `len(knots)-d-1` B-splines at *x* of degree *d* with *knots*.
  id: totrans-1508
  prefs: []
  type: TYPE_NORMAL
  zh: 返回在*knots*处的阶为*d*的*B-splines*的`len(knots)-d-1`个。
- en: 'Parameters:'
  id: totrans-1509
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**d** : integer'
  id: totrans-1510
  prefs: []
  type: TYPE_NORMAL
  zh: '**d**：整数'
- en: degree of bspline
  id: totrans-1511
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: B样条的度数
- en: '**knots** : list of integers'
  id: totrans-1512
  prefs: []
  type: TYPE_NORMAL
  zh: '**knots**：整数列表'
- en: list of knots points of bspline
  id: totrans-1513
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: B样条的结节点列表
- en: '**x** : symbol'
  id: totrans-1514
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**：符号'
- en: Explanation
  id: totrans-1515
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: This function returns a list of piecewise polynomials that are the `len(knots)-d-1`
    B-splines of degree *d* for the given knots. This function calls `bspline_basis(d,
    knots, n, x)` for different values of *n*.
  id: totrans-1516
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回一个多段多项式列表，这些多项式是给定结点*knots*的度数为*d*的`len(knots)-d-1`个B样条。该函数为不同的*n*值调用`bspline_basis(d,
    knots, n, x)`。
- en: Examples
  id: totrans-1517
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE296]'
  id: totrans-1518
  prefs: []
  type: TYPE_PRE
  zh: '[PRE296]'
- en: See also
  id: totrans-1519
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`bspline_basis`](#sympy.functions.special.bsplines.bspline_basis "sympy.functions.special.bsplines.bspline_basis")'
  id: totrans-1520
  prefs: []
  type: TYPE_NORMAL
  zh: '[`bspline_basis`](#sympy.functions.special.bsplines.bspline_basis "sympy.functions.special.bsplines.bspline_basis")'
- en: '[PRE297]'
  id: totrans-1521
  prefs: []
  type: TYPE_PRE
  zh: '[PRE297]'
- en: Return spline of degree *d*, passing through the given *X* and *Y* values.
  id: totrans-1522
  prefs: []
  type: TYPE_NORMAL
  zh: 返回通过给定*X*和*Y*值的*d*度样条。
- en: 'Parameters:'
  id: totrans-1523
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**d** : integer'
  id: totrans-1524
  prefs: []
  type: TYPE_NORMAL
  zh: '**d**：整数'
- en: Degree of Bspline strictly greater than equal to one
  id: totrans-1525
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Bspline的度数严格大于等于一
- en: '**x** : symbol'
  id: totrans-1526
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**：符号'
- en: '**X** : list of strictly increasing real values'
  id: totrans-1527
  prefs: []
  type: TYPE_NORMAL
  zh: '**X**：严格递增的实数值列表'
- en: list of X coordinates through which the spline passes
  id: totrans-1528
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 通过样条通过的X坐标列表
- en: '**Y** : list of real values'
  id: totrans-1529
  prefs: []
  type: TYPE_NORMAL
  zh: '**Y**：实数值列表'
- en: list of corresponding Y coordinates through which the spline passes
  id: totrans-1530
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 通过样条通过的对应Y坐标列表
- en: Explanation
  id: totrans-1531
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: This function returns a piecewise function such that each part is a polynomial
    of degree not greater than *d*. The value of *d* must be 1 or greater and the
    values of *X* must be strictly increasing.
  id: totrans-1532
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回一个分段函数，每个部分都是不大于 *d* 的多项式。*d* 的值必须大于或等于1，而 *X* 的值必须严格增加。
- en: Examples
  id: totrans-1533
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE298]'
  id: totrans-1534
  prefs: []
  type: TYPE_PRE
  zh: '[PRE298]'
- en: See also
  id: totrans-1535
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`bspline_basis_set`](#sympy.functions.special.bsplines.bspline_basis_set "sympy.functions.special.bsplines.bspline_basis_set"),
    [`interpolating_poly`](../polys/reference.html#sympy.polys.specialpolys.interpolating_poly
    "sympy.polys.specialpolys.interpolating_poly")'
  id: totrans-1536
  prefs: []
  type: TYPE_NORMAL
  zh: '[`bspline_basis_set`](#sympy.functions.special.bsplines.bspline_basis_set "sympy.functions.special.bsplines.bspline_basis_set")，[`interpolating_poly`](../polys/reference.html#sympy.polys.specialpolys.interpolating_poly
    "sympy.polys.specialpolys.interpolating_poly")'
- en: '## Riemann Zeta and Related Functions'
  id: totrans-1537
  prefs: []
  type: TYPE_NORMAL
  zh: '## 黎曼 Zeta 函数及相关函数'
- en: '[PRE299]'
  id: totrans-1538
  prefs: []
  type: TYPE_PRE
  zh: '[PRE299]'
- en: Hurwitz zeta function (or Riemann zeta function).
  id: totrans-1539
  prefs: []
  type: TYPE_NORMAL
  zh: 赫维茨 zeta 函数（或黎曼 zeta 函数）。
- en: Explanation
  id: totrans-1540
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: For \(\operatorname{Re}(a) > 0\) and \(\operatorname{Re}(s) > 1\), this function
    is defined as
  id: totrans-1541
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 \(\operatorname{Re}(a) > 0\) 和 \(\operatorname{Re}(s) > 1\)，此函数定义为
- en: \[\zeta(s, a) = \sum_{n=0}^\infty \frac{1}{(n + a)^s},\]
  id: totrans-1542
  prefs: []
  type: TYPE_NORMAL
  zh: \[\zeta(s, a) = \sum_{n=0}^\infty \frac{1}{(n + a)^s},\]
- en: where the standard choice of argument for \(n + a\) is used. For fixed \(a\)
    not a nonpositive integer the Hurwitz zeta function admits a meromorphic continuation
    to all of \(\mathbb{C}\); it is an unbranched function with a simple pole at \(s
    = 1\).
  id: totrans-1543
  prefs: []
  type: TYPE_NORMAL
  zh: 其中使用了 \(n + a\) 的标准参数选择。对于固定的 \(a\)，非正整数的赫维茨 zeta 函数在整个 \(\mathbb{C}\) 上都有亚纯延拓；它是一个无分支函数，在
    \(s = 1\) 处有一个简单极点。
- en: 'The Hurwitz zeta function is a special case of the Lerch transcendent:'
  id: totrans-1544
  prefs: []
  type: TYPE_NORMAL
  zh: 赫维茨 zeta 函数是勒让德超越函数的一个特例：
- en: \[\zeta(s, a) = \Phi(1, s, a).\]
  id: totrans-1545
  prefs: []
  type: TYPE_NORMAL
  zh: \[\zeta(s, a) = \Phi(1, s, a).\]
- en: This formula defines an analytic continuation for all possible values of \(s\)
    and \(a\) (also \(\operatorname{Re}(a) < 0\)), see the documentation of [`lerchphi`](#sympy.functions.special.zeta_functions.lerchphi
    "sympy.functions.special.zeta_functions.lerchphi") for a description of the branching
    behavior.
  id: totrans-1546
  prefs: []
  type: TYPE_NORMAL
  zh: 此公式为所有可能的 \(s\) 和 \(a\) 值（也包括 \(\operatorname{Re}(a) < 0\)）定义了解析延拓，请参阅 [`lerchphi`](#sympy.functions.special.zeta_functions.lerchphi
    "sympy.functions.special.zeta_functions.lerchphi") 的文档以了解分支行为的描述。
- en: If no value is passed for \(a\) a default value of \(a = 1\) is assumed, yielding
    the Riemann zeta function.
  id: totrans-1547
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有为 \(a\) 传递值，则假定默认值为 \(a = 1\)，从而得到黎曼 zeta 函数。
- en: Examples
  id: totrans-1548
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'For \(a = 1\) the Hurwitz zeta function reduces to the famous Riemann zeta
    function:'
  id: totrans-1549
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 \(a = 1\)，赫维茨 zeta 函数简化为著名的黎曼 zeta 函数：
- en: \[\zeta(s, 1) = \zeta(s) = \sum_{n=1}^\infty \frac{1}{n^s}.\]
  id: totrans-1550
  prefs: []
  type: TYPE_NORMAL
  zh: \[\zeta(s, 1) = \zeta(s) = \sum_{n=1}^\infty \frac{1}{n^s}.\]
- en: '[PRE300]'
  id: totrans-1551
  prefs: []
  type: TYPE_PRE
  zh: '[PRE300]'
- en: 'The Riemann zeta function can also be expressed using the Dirichlet eta function:'
  id: totrans-1552
  prefs: []
  type: TYPE_NORMAL
  zh: 黎曼 zeta 函数也可以用狄利克雷 eta 函数表示：
- en: '[PRE301]'
  id: totrans-1553
  prefs: []
  type: TYPE_PRE
  zh: '[PRE301]'
- en: 'The Riemann zeta function at nonnegative even and negative integer values is
    related to the Bernoulli numbers and polynomials:'
  id: totrans-1554
  prefs: []
  type: TYPE_NORMAL
  zh: 非负偶数和负整数值处的黎曼 zeta 函数与伯努利数和多项式相关：
- en: '[PRE302]'
  id: totrans-1555
  prefs: []
  type: TYPE_PRE
  zh: '[PRE302]'
- en: 'The specific formulae are:'
  id: totrans-1556
  prefs: []
  type: TYPE_NORMAL
  zh: 特定公式如下：
- en: \[\zeta(2n) = -\frac{(2\pi i)^{2n} B_{2n}}{2(2n)!}\]\[\zeta(-n,a) = -\frac{B_{n+1}(a)}{n+1}\]
  id: totrans-1557
  prefs: []
  type: TYPE_NORMAL
  zh: \[\zeta(2n) = -\frac{(2\pi i)^{2n} B_{2n}}{2(2n)!}\]\[\zeta(-n,a) = -\frac{B_{n+1}(a)}{n+1}\]
- en: 'No closed-form expressions are known at positive odd integers, but numerical
    evaluation is possible:'
  id: totrans-1558
  prefs: []
  type: TYPE_NORMAL
  zh: 正奇整数没有已知的闭式表达式，但可以进行数值评估：
- en: '[PRE303]'
  id: totrans-1559
  prefs: []
  type: TYPE_PRE
  zh: '[PRE303]'
- en: 'The derivative of \(\zeta(s, a)\) with respect to \(a\) can be computed:'
  id: totrans-1560
  prefs: []
  type: TYPE_NORMAL
  zh: 可计算 \(\zeta(s, a)\) 关于 \(a\) 的导数：
- en: '[PRE304]'
  id: totrans-1561
  prefs: []
  type: TYPE_PRE
  zh: '[PRE304]'
- en: 'However the derivative with respect to \(s\) has no useful closed form expression:'
  id: totrans-1562
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，对于 \(s\) 的导数没有有用的闭式表达式：
- en: '[PRE305]'
  id: totrans-1563
  prefs: []
  type: TYPE_PRE
  zh: '[PRE305]'
- en: 'The Hurwitz zeta function can be expressed in terms of the Lerch transcendent,
    [`lerchphi`](#sympy.functions.special.zeta_functions.lerchphi "sympy.functions.special.zeta_functions.lerchphi"):'
  id: totrans-1564
  prefs: []
  type: TYPE_NORMAL
  zh: 赫维茨 zeta 函数可以用勒让德超越函数表达，[`lerchphi`](#sympy.functions.special.zeta_functions.lerchphi
    "sympy.functions.special.zeta_functions.lerchphi")：
- en: '[PRE306]'
  id: totrans-1565
  prefs: []
  type: TYPE_PRE
  zh: '[PRE306]'
- en: See also
  id: totrans-1566
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`dirichlet_eta`](#sympy.functions.special.zeta_functions.dirichlet_eta "sympy.functions.special.zeta_functions.dirichlet_eta"),
    [`lerchphi`](#sympy.functions.special.zeta_functions.lerchphi "sympy.functions.special.zeta_functions.lerchphi"),
    [`polylog`](#sympy.functions.special.zeta_functions.polylog "sympy.functions.special.zeta_functions.polylog")'
  id: totrans-1567
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dirichlet_eta`](#sympy.functions.special.zeta_functions.dirichlet_eta "sympy.functions.special.zeta_functions.dirichlet_eta")，[`lerchphi`](#sympy.functions.special.zeta_functions.lerchphi
    "sympy.functions.special.zeta_functions.lerchphi")，[`polylog`](#sympy.functions.special.zeta_functions.polylog
    "sympy.functions.special.zeta_functions.polylog")'
- en: References
  id: totrans-1568
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R454](#id114)]'
  id: totrans-1569
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R454](#id114)]'
- en: '[https://dlmf.nist.gov/25.11](https://dlmf.nist.gov/25.11)'
  id: totrans-1570
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/25.11](https://dlmf.nist.gov/25.11)'
- en: '[[R455](#id115)]'
  id: totrans-1571
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R455](#id115)]'
- en: '[https://en.wikipedia.org/wiki/Hurwitz_zeta_function](https://en.wikipedia.org/wiki/Hurwitz_zeta_function)'
  id: totrans-1572
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Hurwitz_zeta_function](https://en.wikipedia.org/wiki/Hurwitz_zeta_function)'
- en: '[PRE307]'
  id: totrans-1573
  prefs: []
  type: TYPE_PRE
  zh: '[PRE307]'
- en: Dirichlet eta function.
  id: totrans-1574
  prefs: []
  type: TYPE_NORMAL
  zh: 狄利克雷eta函数。
- en: Explanation
  id: totrans-1575
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: For \(\operatorname{Re}(s) > 0\) and \(0 < x \le 1\), this function is defined
    as
  id: totrans-1576
  prefs: []
  type: TYPE_NORMAL
  zh: 对于\(\operatorname{Re}(s) > 0\)和\(0 < x \le 1\)，此函数定义为
- en: \[\eta(s, a) = \sum_{n=0}^\infty \frac{(-1)^n}{(n+a)^s}.\]
  id: totrans-1577
  prefs: []
  type: TYPE_NORMAL
  zh: \[\eta(s, a) = \sum_{n=0}^\infty \frac{(-1)^n}{(n+a)^s}.\]
- en: It admits a unique analytic continuation to all of \(\mathbb{C}\) for any fixed
    \(a\) not a nonpositive integer. It is an entire, unbranched function.
  id: totrans-1578
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任意固定的\(a\)不是非正整数，它在\(\mathbb{C}\)中具有唯一的解析延拓。它是一个整体的，无分支的函数。
- en: It can be expressed using the Hurwitz zeta function as
  id: totrans-1579
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以用Hurwitz塞塔函数表示为
- en: \[\eta(s, a) = \zeta(s,a) - 2^{1-s} \zeta\left(s, \frac{a+1}{2}\right)\]
  id: totrans-1580
  prefs: []
  type: TYPE_NORMAL
  zh: \[\eta(s, a) = \zeta(s,a) - 2^{1-s} \zeta\left(s, \frac{a+1}{2}\right)\]
- en: and using the generalized Genocchi function as
  id: totrans-1581
  prefs: []
  type: TYPE_NORMAL
  zh: 并使用广义Genocchi函数表示为
- en: \[\eta(s, a) = \frac{G(1-s, a)}{2(s-1)}.\]
  id: totrans-1582
  prefs: []
  type: TYPE_NORMAL
  zh: \[\eta(s, a) = \frac{G(1-s, a)}{2(s-1)}.\]
- en: In both cases the limiting value of \(\log2 - \psi(a) + \psi\left(\frac{a+1}{2}\right)\)
    is used when \(s = 1\).
  id: totrans-1583
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两种情况下，当\(s = 1\)时使用的极限值为\(\log2 - \psi(a) + \psi\left(\frac{a+1}{2}\right)\)。
- en: Examples
  id: totrans-1584
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE308]'
  id: totrans-1585
  prefs: []
  type: TYPE_PRE
  zh: '[PRE308]'
- en: See also
  id: totrans-1586
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`zeta`](#sympy.functions.special.zeta_functions.zeta "sympy.functions.special.zeta_functions.zeta")'
  id: totrans-1587
  prefs: []
  type: TYPE_NORMAL
  zh: '[`zeta`](#sympy.functions.special.zeta_functions.zeta "sympy.functions.special.zeta_functions.zeta")'
- en: References
  id: totrans-1588
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R456](#id116)]'
  id: totrans-1589
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R456](#id116)]'
- en: '[https://en.wikipedia.org/wiki/Dirichlet_eta_function](https://en.wikipedia.org/wiki/Dirichlet_eta_function)'
  id: totrans-1590
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Dirichlet_eta_function](https://en.wikipedia.org/wiki/Dirichlet_eta_function)'
- en: '[[R457](#id117)]'
  id: totrans-1591
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R457](#id117)]'
- en: Peter Luschny, “An introduction to the Bernoulli function”, [https://arxiv.org/abs/2009.06743](https://arxiv.org/abs/2009.06743)
  id: totrans-1592
  prefs: []
  type: TYPE_NORMAL
  zh: 彼得·鲁施尼，“伯努利函数简介”，[https://arxiv.org/abs/2009.06743](https://arxiv.org/abs/2009.06743)
- en: '[PRE309]'
  id: totrans-1593
  prefs: []
  type: TYPE_PRE
  zh: '[PRE309]'
- en: Polylogarithm function.
  id: totrans-1594
  prefs: []
  type: TYPE_NORMAL
  zh: 多对数函数。
- en: Explanation
  id: totrans-1595
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: For \(|z| < 1\) and \(s \in \mathbb{C}\), the polylogarithm is defined by
  id: totrans-1596
  prefs: []
  type: TYPE_NORMAL
  zh: 对于\(|z| < 1\)和\(s \in \mathbb{C}\)，多对数函数定义为
- en: \[\operatorname{Li}_s(z) = \sum_{n=1}^\infty \frac{z^n}{n^s},\]
  id: totrans-1597
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{Li}_s(z) = \sum_{n=1}^\infty \frac{z^n}{n^s},\]
- en: where the standard branch of the argument is used for \(n\). It admits an analytic
    continuation which is branched at \(z=1\) (notably not on the sheet of initial
    definition), \(z=0\) and \(z=\infty\).
  id: totrans-1598
  prefs: []
  type: TYPE_NORMAL
  zh: 对于\(n\)使用参数的标准分支。它允许解析延拓，分支点在\(z=1\)（显然不是在初始定义的表面上），\(z=0\)和\(z=\infty\)。
- en: The name polylogarithm comes from the fact that for \(s=1\), the polylogarithm
    is related to the ordinary logarithm (see examples), and that
  id: totrans-1599
  prefs: []
  type: TYPE_NORMAL
  zh: 多对数的名称来源于当\(s=1\)时，多对数与普通对数相关（参见示例），并且
- en: \[\operatorname{Li}_{s+1}(z) = \int_0^z \frac{\operatorname{Li}_s(t)}{t} \mathrm{d}t.\]
  id: totrans-1600
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{Li}_{s+1}(z) = \int_0^z \frac{\operatorname{Li}_s(t)}{t} \mathrm{d}t.\]
- en: 'The polylogarithm is a special case of the Lerch transcendent:'
  id: totrans-1601
  prefs: []
  type: TYPE_NORMAL
  zh: 多对数函数是勒让函数的一个特例：
- en: \[\operatorname{Li}_{s}(z) = z \Phi(z, s, 1).\]
  id: totrans-1602
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{Li}_{s}(z) = z \Phi(z, s, 1).\]
- en: Examples
  id: totrans-1603
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'For \(z \in \{0, 1, -1\}\), the polylogarithm is automatically expressed using
    other functions:'
  id: totrans-1604
  prefs: []
  type: TYPE_NORMAL
  zh: 对于\(z \in \{0, 1, -1\}\)，多对数函数会自动用其他函数表达：
- en: '[PRE310]'
  id: totrans-1605
  prefs: []
  type: TYPE_PRE
  zh: '[PRE310]'
- en: 'If \(s\) is a negative integer, \(0\) or \(1\), the polylogarithm can be expressed
    using elementary functions. This can be done using `expand_func()`:'
  id: totrans-1606
  prefs: []
  type: TYPE_NORMAL
  zh: 如果\(s\)是负整数，\(0\)或\(1\)，则多对数函数可以用初等函数表达。这可以通过`expand_func()`完成：
- en: '[PRE311]'
  id: totrans-1607
  prefs: []
  type: TYPE_PRE
  zh: '[PRE311]'
- en: 'The derivative with respect to \(z\) can be computed in closed form:'
  id: totrans-1608
  prefs: []
  type: TYPE_NORMAL
  zh: 对\(z\)的导数可以通过封闭形式计算：
- en: '[PRE312]'
  id: totrans-1609
  prefs: []
  type: TYPE_PRE
  zh: '[PRE312]'
- en: 'The polylogarithm can be expressed in terms of the lerch transcendent:'
  id: totrans-1610
  prefs: []
  type: TYPE_NORMAL
  zh: 多对数函数可以用勒让函数表示为：
- en: '[PRE313]'
  id: totrans-1611
  prefs: []
  type: TYPE_PRE
  zh: '[PRE313]'
- en: See also
  id: totrans-1612
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`zeta`](#sympy.functions.special.zeta_functions.zeta "sympy.functions.special.zeta_functions.zeta"),
    [`lerchphi`](#sympy.functions.special.zeta_functions.lerchphi "sympy.functions.special.zeta_functions.lerchphi")'
  id: totrans-1613
  prefs: []
  type: TYPE_NORMAL
  zh: '[`zeta`](#sympy.functions.special.zeta_functions.zeta "sympy.functions.special.zeta_functions.zeta"),
    [`lerchphi`](#sympy.functions.special.zeta_functions.lerchphi "sympy.functions.special.zeta_functions.lerchphi")'
- en: '[PRE314]'
  id: totrans-1614
  prefs: []
  type: TYPE_PRE
  zh: '[PRE314]'
- en: Lerch transcendent (Lerch phi function).
  id: totrans-1615
  prefs: []
  type: TYPE_NORMAL
  zh: 勒让函数（勒让phi函数）。
- en: Explanation
  id: totrans-1616
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: For \(\operatorname{Re}(a) > 0\), \(|z| < 1\) and \(s \in \mathbb{C}\), the
    Lerch transcendent is defined as
  id: totrans-1617
  prefs: []
  type: TYPE_NORMAL
  zh: 对于\(\operatorname{Re}(a) > 0\)，\( |z| < 1 \)和\(s \in \mathbb{C}\)，勒让函数被定义为
- en: \[\Phi(z, s, a) = \sum_{n=0}^\infty \frac{z^n}{(n + a)^s},\]
  id: totrans-1618
  prefs: []
  type: TYPE_NORMAL
  zh: \[\Phi(z, s, a) = \sum_{n=0}^\infty \frac{z^n}{(n + a)^s},\]
- en: where the standard branch of the argument is used for \(n + a\), and by analytic
    continuation for other values of the parameters.
  id: totrans-1619
  prefs: []
  type: TYPE_NORMAL
  zh: 采用参数的标准分支对\(n + a\)进行使用，并通过解析延拓适用于其他参数值。
- en: A commonly used related function is the Lerch zeta function, defined by
  id: totrans-1620
  prefs: []
  type: TYPE_NORMAL
  zh: 一个常用的相关函数是勒让塞塔函数，定义如下：
- en: \[L(q, s, a) = \Phi(e^{2\pi i q}, s, a).\]
  id: totrans-1621
  prefs: []
  type: TYPE_NORMAL
  zh: \[L(q, s, a) = \Phi(e^{2\pi i q}, s, a).\]
- en: '**Analytic Continuation and Branching Behavior**'
  id: totrans-1622
  prefs: []
  type: TYPE_NORMAL
  zh: '**解析延拓与分支行为**'
- en: It can be shown that
  id: totrans-1623
  prefs: []
  type: TYPE_NORMAL
  zh: 可以证明
- en: \[\Phi(z, s, a) = z\Phi(z, s, a+1) + a^{-s}.\]
  id: totrans-1624
  prefs: []
  type: TYPE_NORMAL
  zh: \[\Phi(z, s, a) = z\Phi(z, s, a+1) + a^{-s}.\]
- en: This provides the analytic continuation to \(\operatorname{Re}(a) \le 0\).
  id: totrans-1625
  prefs: []
  type: TYPE_NORMAL
  zh: 这提供了对 \(\operatorname{Re}(a) \le 0\) 的解析延拓。
- en: Assume now \(\operatorname{Re}(a) > 0\). The integral representation
  id: totrans-1626
  prefs: []
  type: TYPE_NORMAL
  zh: 现在假设 \(\operatorname{Re}(a) > 0\)。积分表示
- en: \[\Phi_0(z, s, a) = \int_0^\infty \frac{t^{s-1} e^{-at}}{1 - ze^{-t}} \frac{\mathrm{d}t}{\Gamma(s)}\]
  id: totrans-1627
  prefs: []
  type: TYPE_NORMAL
  zh: \[\Phi_0(z, s, a) = \int_0^\infty \frac{t^{s-1} e^{-at}}{1 - ze^{-t}} \frac{\mathrm{d}t}{\Gamma(s)}\]
- en: provides an analytic continuation to \(\mathbb{C} - [1, \infty)\). Finally,
    for \(x \in (1, \infty)\) we find
  id: totrans-1628
  prefs: []
  type: TYPE_NORMAL
  zh: 提供了对 \(\mathbb{C} - [1, \infty)\) 的解析延拓。最后，对于 \(x \in (1, \infty)\)，我们找到
- en: \[\lim_{\epsilon \to 0^+} \Phi_0(x + i\epsilon, s, a) -\lim_{\epsilon \to 0^+}
    \Phi_0(x - i\epsilon, s, a) = \frac{2\pi i \log^{s-1}{x}}{x^a \Gamma(s)},\]
  id: totrans-1629
  prefs: []
  type: TYPE_NORMAL
  zh: \[\lim_{\epsilon \to 0^+} \Phi_0(x + i\epsilon, s, a) -\lim_{\epsilon \to 0^+}
    \Phi_0(x - i\epsilon, s, a) = \frac{2\pi i \log^{s-1}{x}}{x^a \Gamma(s)},\]
- en: using the standard branch for both \(\log{x}\) and \(\log{\log{x}}\) (a branch
    of \(\log{\log{x}}\) is needed to evaluate \(\log{x}^{s-1}\)). This concludes
    the analytic continuation. The Lerch transcendent is thus branched at \(z \in
    \{0, 1, \infty\}\) and \(a \in \mathbb{Z}_{\le 0}\). For fixed \(z, a\) outside
    these branch points, it is an entire function of \(s\).
  id: totrans-1630
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 \(\log{x}\) 和 \(\log{\log{x}}\) 的标准分支（\(\log{\log{x}}\) 的分支需要用于计算 \(\log{x}^{s-1}\)）。这结束了解析延拓。因此，勒让德超越函数在
    \(z \in \{0, 1, \infty\}\) 和 \(a \in \mathbb{Z}_{\le 0}\) 处分支。对于固定的 \(z, a\) 超出这些分支点，它是
    \(s\) 的整个函数。
- en: Examples
  id: totrans-1631
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: The Lerch transcendent is a fairly general function, for this reason it does
    not automatically evaluate to simpler functions. Use `expand_func()` to achieve
    this.
  id: totrans-1632
  prefs: []
  type: TYPE_NORMAL
  zh: 勒让德超越函数是一个相当通用的函数，因此它不会自动计算为更简单的函数。使用 `expand_func()` 可以实现这一点。
- en: 'If \(z=1\), the Lerch transcendent reduces to the Hurwitz zeta function:'
  id: totrans-1633
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 \(z=1\)，则勒让德超越函数简化为Hurwitz zeta函数：
- en: '[PRE315]'
  id: totrans-1634
  prefs: []
  type: TYPE_PRE
  zh: '[PRE315]'
- en: 'More generally, if \(z\) is a root of unity, the Lerch transcendent reduces
    to a sum of Hurwitz zeta functions:'
  id: totrans-1635
  prefs: []
  type: TYPE_NORMAL
  zh: 更一般地，如果 \(z\) 是单位根，则勒让德超越函数简化为Hurwitz zeta函数之和：
- en: '[PRE316]'
  id: totrans-1636
  prefs: []
  type: TYPE_PRE
  zh: '[PRE316]'
- en: 'If \(a=1\), the Lerch transcendent reduces to the polylogarithm:'
  id: totrans-1637
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 \(a=1\)，则勒让德超越函数简化为多对数函数：
- en: '[PRE317]'
  id: totrans-1638
  prefs: []
  type: TYPE_PRE
  zh: '[PRE317]'
- en: 'More generally, if \(a\) is rational, the Lerch transcendent reduces to a sum
    of polylogarithms:'
  id: totrans-1639
  prefs: []
  type: TYPE_NORMAL
  zh: 更一般地，如果 \(a\) 是有理数，勒让德超越函数简化为多对数函数之和：
- en: '[PRE318]'
  id: totrans-1640
  prefs: []
  type: TYPE_PRE
  zh: '[PRE318]'
- en: 'The derivatives with respect to \(z\) and \(a\) can be computed in closed form:'
  id: totrans-1641
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 \(z\) 和 \(a\) 的导数可以通过闭合形式计算：
- en: '[PRE319]'
  id: totrans-1642
  prefs: []
  type: TYPE_PRE
  zh: '[PRE319]'
- en: See also
  id: totrans-1643
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`polylog`](#sympy.functions.special.zeta_functions.polylog "sympy.functions.special.zeta_functions.polylog"),
    [`zeta`](#sympy.functions.special.zeta_functions.zeta "sympy.functions.special.zeta_functions.zeta")'
  id: totrans-1644
  prefs: []
  type: TYPE_NORMAL
  zh: '[`polylog`](#sympy.functions.special.zeta_functions.polylog "sympy.functions.special.zeta_functions.polylog"),
    [`zeta`](#sympy.functions.special.zeta_functions.zeta "sympy.functions.special.zeta_functions.zeta")'
- en: References
  id: totrans-1645
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R458](#id118)]'
  id: totrans-1646
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R458](#id118)]'
- en: 'Bateman, H.; Erdelyi, A. (1953), Higher Transcendental Functions, Vol. I, New
    York: McGraw-Hill. Section 1.11.'
  id: totrans-1647
  prefs: []
  type: TYPE_NORMAL
  zh: 'Bateman, H.; Erdelyi, A. (1953), Higher Transcendental Functions, Vol. I, New
    York: McGraw-Hill. Section 1.11.'
- en: '[[R459](#id119)]'
  id: totrans-1648
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R459](#id119)]'
- en: '[https://dlmf.nist.gov/25.14](https://dlmf.nist.gov/25.14)'
  id: totrans-1649
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/25.14](https://dlmf.nist.gov/25.14)'
- en: '[[R460](#id120)]'
  id: totrans-1650
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R460](#id120)]'
- en: '[https://en.wikipedia.org/wiki/Lerch_transcendent](https://en.wikipedia.org/wiki/Lerch_transcendent)'
  id: totrans-1651
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Lerch_transcendent](https://en.wikipedia.org/wiki/Lerch_transcendent)'
- en: '[PRE320]'
  id: totrans-1652
  prefs: []
  type: TYPE_PRE
  zh: '[PRE320]'
- en: Represents Stieltjes constants, \(\gamma_{k}\) that occur in Laurent Series
    expansion of the Riemann zeta function.
  id: totrans-1653
  prefs: []
  type: TYPE_NORMAL
  zh: 代表黎曼ζ函数的Laurent级数展开中出现的斯蒂尔切斯常数，\(\gamma_{k}\)。
- en: Examples
  id: totrans-1654
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE321]'
  id: totrans-1655
  prefs: []
  type: TYPE_PRE
  zh: '[PRE321]'
- en: 'The zero’th stieltjes constant:'
  id: totrans-1656
  prefs: []
  type: TYPE_NORMAL
  zh: 第零斯蒂尔切斯常数：
- en: '[PRE322]'
  id: totrans-1657
  prefs: []
  type: TYPE_PRE
  zh: '[PRE322]'
- en: 'For generalized stieltjes constants:'
  id: totrans-1658
  prefs: []
  type: TYPE_NORMAL
  zh: 对于广义斯蒂尔切斯常数：
- en: '[PRE323]'
  id: totrans-1659
  prefs: []
  type: TYPE_PRE
  zh: '[PRE323]'
- en: 'Constants are only defined for integers >= 0:'
  id: totrans-1660
  prefs: []
  type: TYPE_NORMAL
  zh: 常数仅对整数 >= 0 定义：
- en: '[PRE324]'
  id: totrans-1661
  prefs: []
  type: TYPE_PRE
  zh: '[PRE324]'
- en: References
  id: totrans-1662
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R461](#id121)]'
  id: totrans-1663
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R461](#id121)]'
- en: '[https://en.wikipedia.org/wiki/Stieltjes_constants](https://en.wikipedia.org/wiki/Stieltjes_constants)'
  id: totrans-1664
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Stieltjes_constants](https://en.wikipedia.org/wiki/Stieltjes_constants)'
- en: Hypergeometric Functions
  id: totrans-1665
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 超几何函数
- en: '[PRE325]'
  id: totrans-1666
  prefs: []
  type: TYPE_PRE
  zh: '[PRE325]'
- en: The generalized hypergeometric function is defined by a series where the ratios
    of successive terms are a rational function of the summation index. When convergent,
    it is continued analytically to the largest possible domain.
  id: totrans-1667
  prefs: []
  type: TYPE_NORMAL
  zh: 广义超几何函数由一个级数定义，其中连续项的比值是求和指数的有理函数。当收敛时，它在解析地延拓到最大可能的域。
- en: Explanation
  id: totrans-1668
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The hypergeometric function depends on two vectors of parameters, called the
    numerator parameters \(a_p\), and the denominator parameters \(b_q\). It also
    has an argument \(z\). The series definition is
  id: totrans-1669
  prefs: []
  type: TYPE_NORMAL
  zh: 超几何函数依赖于两个参数向量，称为分子参数 \(a_p\) 和分母参数 \(b_q\)。它还有一个参数 \(z\)。级数定义为
- en: \[\begin{split}{}_pF_q\left(\begin{matrix} a_1, \cdots, a_p \\ b_1, \cdots,
    b_q \end{matrix} \middle| z \right) = \sum_{n=0}^\infty \frac{(a_1)_n \cdots (a_p)_n}{(b_1)_n
    \cdots (b_q)_n} \frac{z^n}{n!},\end{split}\]
  id: totrans-1670
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}{}_pF_q\left(\begin{matrix} a_1, \cdots, a_p \\ b_1, \cdots,
    b_q \end{matrix} \middle| z \right) = \sum_{n=0}^\infty \frac{(a_1)_n \cdots (a_p)_n}{(b_1)_n
    \cdots (b_q)_n} \frac{z^n}{n!},\end{split}\]
- en: where \((a)_n = (a)(a+1)\cdots(a+n-1)\) denotes the rising factorial.
  id: totrans-1671
  prefs: []
  type: TYPE_NORMAL
  zh: 这里 \((a)_n = (a)(a+1)\cdots(a+n-1)\) 表示升阶乘。
- en: If one of the \(b_q\) is a non-positive integer then the series is undefined
    unless one of the \(a_p\) is a larger (i.e., smaller in magnitude) non-positive
    integer. If none of the \(b_q\) is a non-positive integer and one of the \(a_p\)
    is a non-positive integer, then the series reduces to a polynomial. To simplify
    the following discussion, we assume that none of the \(a_p\) or \(b_q\) is a non-positive
    integer. For more details, see the references.
  id: totrans-1672
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 \(b_q\) 中有一个是非正整数，则除非 \(a_p\) 中有一个更大（即绝对值更小）的非正整数，否则级数是未定义的。如果 \(b_q\) 中没有一个是非正整数，而
    \(a_p\) 中有一个是非正整数，则级数化简为多项式。为简化以下讨论，我们假设 \(a_p\) 和 \(b_q\) 都不是非正整数。更多细节请参见参考文献。
- en: The series converges for all \(z\) if \(p \le q\), and thus defines an entire
    single-valued function in this case. If \(p = q+1\) the series converges for \(|z|
    < 1\), and can be continued analytically into a half-plane. If \(p > q+1\) the
    series is divergent for all \(z\).
  id: totrans-1673
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 \(p \le q\)，则级数对所有 \(z\) 收敛，因此在这种情况下定义了一个整个单值函数。如果 \(p = q+1\)，则级数在 \(|z|
    < 1\) 收敛，并可以在半平面内解析地延拓。如果 \(p > q+1\)，则级数在所有 \(z\) 上发散。
- en: Please note the hypergeometric function constructor currently does *not* check
    if the parameters actually yield a well-defined function.
  id: totrans-1674
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，超几何函数构造器目前*不*检查参数是否实际产生一个良定义的函数。
- en: Examples
  id: totrans-1675
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'The parameters \(a_p\) and \(b_q\) can be passed as arbitrary iterables, for
    example:'
  id: totrans-1676
  prefs: []
  type: TYPE_NORMAL
  zh: 参数 \(a_p\) 和 \(b_q\) 可以作为任意可迭代对象传递，例如：
- en: '[PRE326]'
  id: totrans-1677
  prefs: []
  type: TYPE_PRE
  zh: '[PRE326]'
- en: 'There is also pretty printing (it looks better using Unicode):'
  id: totrans-1678
  prefs: []
  type: TYPE_NORMAL
  zh: 还有漂亮的打印（使用 Unicode 看起来更好）：
- en: '[PRE327]'
  id: totrans-1679
  prefs: []
  type: TYPE_PRE
  zh: '[PRE327]'
- en: 'The parameters must always be iterables, even if they are vectors of length
    one or zero:'
  id: totrans-1680
  prefs: []
  type: TYPE_NORMAL
  zh: 参数必须始终是可迭代的，即使它们是长度为一或零的向量：
- en: '[PRE328]'
  id: totrans-1681
  prefs: []
  type: TYPE_PRE
  zh: '[PRE328]'
- en: 'But of course they may be variables (but if they depend on \(x\) then you should
    not expect much implemented functionality):'
  id: totrans-1682
  prefs: []
  type: TYPE_NORMAL
  zh: 但当然它们可能是变量（但如果它们依赖于 \(x\)，那么不应期望有太多实现的功能）：
- en: '[PRE329]'
  id: totrans-1683
  prefs: []
  type: TYPE_PRE
  zh: '[PRE329]'
- en: 'The hypergeometric function generalizes many named special functions. The function
    `hyperexpand()` tries to express a hypergeometric function using named special
    functions. For example:'
  id: totrans-1684
  prefs: []
  type: TYPE_NORMAL
  zh: 超几何函数推广了许多命名特殊函数。函数 `hyperexpand()` 尝试使用命名特殊函数来表达超几何函数。例如：
- en: '[PRE330]'
  id: totrans-1685
  prefs: []
  type: TYPE_PRE
  zh: '[PRE330]'
- en: 'You can also use `expand_func()`:'
  id: totrans-1686
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以使用 `expand_func()`：
- en: '[PRE331]'
  id: totrans-1687
  prefs: []
  type: TYPE_PRE
  zh: '[PRE331]'
- en: 'More examples:'
  id: totrans-1688
  prefs: []
  type: TYPE_NORMAL
  zh: 更多例子：
- en: '[PRE332]'
  id: totrans-1689
  prefs: []
  type: TYPE_PRE
  zh: '[PRE332]'
- en: 'We can also sometimes `hyperexpand()` parametric functions:'
  id: totrans-1690
  prefs: []
  type: TYPE_NORMAL
  zh: 有时我们也可以使用 `hyperexpand()` 参数化函数：
- en: '[PRE333]'
  id: totrans-1691
  prefs: []
  type: TYPE_PRE
  zh: '[PRE333]'
- en: See also
  id: totrans-1692
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sympy.simplify.hyperexpand`](../simplify/simplify.html#module-sympy.simplify.hyperexpand
    "sympy.simplify.hyperexpand"), [`gamma`](#sympy.functions.special.gamma_functions.gamma
    "sympy.functions.special.gamma_functions.gamma"), [`meijerg`](#sympy.functions.special.hyper.meijerg
    "sympy.functions.special.hyper.meijerg")'
  id: totrans-1693
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.simplify.hyperexpand`](../simplify/simplify.html#module-sympy.simplify.hyperexpand
    "sympy.simplify.hyperexpand"), [`gamma`](#sympy.functions.special.gamma_functions.gamma
    "sympy.functions.special.gamma_functions.gamma"), [`meijerg`](#sympy.functions.special.hyper.meijerg
    "sympy.functions.special.hyper.meijerg")'
- en: References
  id: totrans-1694
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R462](#id122)]'
  id: totrans-1695
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R462](#id122)]'
- en: Luke, Y. L. (1969), The Special Functions and Their Approximations, Volume 1
  id: totrans-1696
  prefs: []
  type: TYPE_NORMAL
  zh: Luke, Y. L. (1969), The Special Functions and Their Approximations, Volume 1
- en: '[[R463](#id123)]'
  id: totrans-1697
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R463](#id123)]'
- en: '[https://en.wikipedia.org/wiki/Generalized_hypergeometric_function](https://en.wikipedia.org/wiki/Generalized_hypergeometric_function)'
  id: totrans-1698
  prefs: []
  type: TYPE_NORMAL
  zh: '[广义超几何函数](https://zh.wikipedia.org/wiki/%E5%B9%BF%E4%B9%89%E8%B6%85%E5%87%A0%E4%BD%95%E5%87%BD%E6%95%B0)的收敛相关数量。'
- en: '[PRE334]'
  id: totrans-1699
  prefs: []
  type: TYPE_PRE
  zh: '[PRE334]'
- en: Numerator parameters of the hypergeometric function.
  id: totrans-1700
  prefs: []
  type: TYPE_NORMAL
  zh: 超几何函数的分子参数。
- en: '[PRE335]'
  id: totrans-1701
  prefs: []
  type: TYPE_PRE
  zh: '[PRE335]'
- en: Argument of the hypergeometric function.
  id: totrans-1702
  prefs: []
  type: TYPE_NORMAL
  zh: 超几何函数的参数。
- en: '[PRE336]'
  id: totrans-1703
  prefs: []
  type: TYPE_PRE
  zh: '[PRE336]'
- en: Denominator parameters of the hypergeometric function.
  id: totrans-1704
  prefs: []
  type: TYPE_NORMAL
  zh: 超几何函数的分母参数。
- en: '[PRE337]'
  id: totrans-1705
  prefs: []
  type: TYPE_PRE
  zh: '[PRE337]'
- en: Return a condition on z under which the series converges.
  id: totrans-1706
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个关于 \(z\) 的条件，使得级数收敛。
- en: '[PRE338]'
  id: totrans-1707
  prefs: []
  type: TYPE_PRE
  zh: '[PRE338]'
- en: A quantity related to the convergence of the series.
  id: totrans-1708
  prefs: []
  type: TYPE_NORMAL
  zh: 与级数收敛性相关的数量。
- en: '[PRE339]'
  id: totrans-1709
  prefs: []
  type: TYPE_PRE
  zh: '[PRE339]'
- en: Compute the radius of convergence of the defining series.
  id: totrans-1710
  prefs: []
  type: TYPE_NORMAL
  zh: 计算定义级数的收敛半径。
- en: Explanation
  id: totrans-1711
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Note that even if this is not `oo`, the function may still be evaluated outside
    of the radius of convergence by analytic continuation. But if this is zero, then
    the function is not actually defined anywhere else.
  id: totrans-1712
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，即使这不是 `oo`，函数仍可以通过解析延拓在收敛半径之外进行评估。但如果这是零，那么函数实际上在任何其他地方都未定义。
- en: Examples
  id: totrans-1713
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE340]'
  id: totrans-1714
  prefs: []
  type: TYPE_PRE
  zh: '[PRE340]'
- en: '[PRE341]'
  id: totrans-1715
  prefs: []
  type: TYPE_PRE
  zh: '[PRE341]'
- en: The Meijer G-function is defined by a Mellin-Barnes type integral that resembles
    an inverse Mellin transform. It generalizes the hypergeometric functions.
  id: totrans-1716
  prefs: []
  type: TYPE_NORMAL
  zh: Meijer G 函数由类似逆 Mellin 变换的 Mellin-Barnes 类型积分定义。它推广了超几何函数。
- en: Explanation
  id: totrans-1717
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'The Meijer G-function depends on four sets of parameters. There are “*numerator
    parameters*” \(a_1, \ldots, a_n\) and \(a_{n+1}, \ldots, a_p\), and there are
    “*denominator parameters*” \(b_1, \ldots, b_m\) and \(b_{m+1}, \ldots, b_q\).
    Confusingly, it is traditionally denoted as follows (note the position of \(m\),
    \(n\), \(p\), \(q\), and how they relate to the lengths of the four parameter
    vectors):'
  id: totrans-1718
  prefs: []
  type: TYPE_NORMAL
  zh: Meijer G 函数依赖于四组参数。有“*分子参数*” \(a_1, \ldots, a_n\) 和 \(a_{n+1}, \ldots, a_p\)，以及“*分母参数*”
    \(b_1, \ldots, b_m\) 和 \(b_{m+1}, \ldots, b_q\)。令人困惑的是，传统上它被表示如下（注意 \(m\)、\(n\)、\(p\)、\(q\)
    的位置及它们与四个参数向量的长度的关系）：
- en: \[\begin{split}G_{p,q}^{m,n} \left(\begin{matrix}a_1, \cdots, a_n & a_{n+1},
    \cdots, a_p \\ b_1, \cdots, b_m & b_{m+1}, \cdots, b_q \end{matrix} \middle| z
    \right).\end{split}\]
  id: totrans-1719
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}G_{p,q}^{m,n} \left(\begin{matrix}a_1, \cdots, a_n & a_{n+1},
    \cdots, a_p \\ b_1, \cdots, b_m & b_{m+1}, \cdots, b_q \end{matrix} \middle| z
    \right).\end{split}\]
- en: However, in SymPy the four parameter vectors are always available separately
    (see examples), so that there is no need to keep track of the decorating sub-
    and super-scripts on the G symbol.
  id: totrans-1720
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在 SymPy 中，四个参数向量始终可以单独使用（参见示例），因此无需跟踪 G 符号上的装饰式和上标。
- en: 'The G function is defined as the following integral:'
  id: totrans-1721
  prefs: []
  type: TYPE_NORMAL
  zh: G 函数被定义为以下积分：
- en: \[\frac{1}{2 \pi i} \int_L \frac{\prod_{j=1}^m \Gamma(b_j - s) \prod_{j=1}^n
    \Gamma(1 - a_j + s)}{\prod_{j=m+1}^q \Gamma(1- b_j +s) \prod_{j=n+1}^p \Gamma(a_j
    - s)} z^s \mathrm{d}s,\]
  id: totrans-1722
  prefs: []
  type: TYPE_NORMAL
  zh: \[\frac{1}{2 \pi i} \int_L \frac{\prod_{j=1}^m \Gamma(b_j - s) \prod_{j=1}^n
    \Gamma(1 - a_j + s)}{\prod_{j=m+1}^q \Gamma(1- b_j +s) \prod_{j=n+1}^p \Gamma(a_j
    - s)} z^s \mathrm{d}s,\]
- en: where \(\Gamma(z)\) is the gamma function. There are three possible contours
    which we will not describe in detail here (see the references). If the integral
    converges along more than one of them, the definitions agree. The contours all
    separate the poles of \(\Gamma(1-a_j+s)\) from the poles of \(\Gamma(b_k-s)\),
    so in particular the G function is undefined if \(a_j - b_k \in \mathbb{Z}_{>0}\)
    for some \(j \le n\) and \(k \le m\).
  id: totrans-1723
  prefs: []
  type: TYPE_NORMAL
  zh: 这里 \(\Gamma(z)\) 是 gamma 函数。有三种可能的轮廓我们不在此详细描述（参见参考文献）。如果积分沿着其中多于一条路径收敛，则定义是一致的。所有轮廓都将
    \(\Gamma(1-a_j+s)\) 的极点与 \(\Gamma(b_k-s)\) 的极点分开，因此特别地，如果对于某些 \(j \le n\) 和 \(k
    \le m\)，\(a_j - b_k \in \mathbb{Z}_{>0}\)，则 G 函数是未定义的。
- en: The conditions under which one of the contours yields a convergent integral
    are complicated and we do not state them here, see the references.
  id: totrans-1724
  prefs: []
  type: TYPE_NORMAL
  zh: 一个轮廓产生收敛积分的条件非常复杂，我们不在此声明，请参见参考文献。
- en: Please note currently the Meijer G-function constructor does *not* check any
    convergence conditions.
  id: totrans-1725
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，目前 Meijer G 函数构造器 *不* 检查任何收敛条件。
- en: Examples
  id: totrans-1726
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: 'You can pass the parameters either as four separate vectors:'
  id: totrans-1727
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将参数作为四个单独的向量传递：
- en: '[PRE342]'
  id: totrans-1728
  prefs: []
  type: TYPE_PRE
  zh: '[PRE342]'
- en: 'Or as two nested vectors:'
  id: totrans-1729
  prefs: []
  type: TYPE_NORMAL
  zh: 或者作为两个嵌套向量：
- en: '[PRE343]'
  id: totrans-1730
  prefs: []
  type: TYPE_PRE
  zh: '[PRE343]'
- en: As with the hypergeometric function, the parameters may be passed as arbitrary
    iterables. Vectors of length zero and one also have to be passed as iterables.
    The parameters need not be constants, but if they depend on the argument then
    not much implemented functionality should be expected.
  id: totrans-1731
  prefs: []
  type: TYPE_NORMAL
  zh: 与超几何函数类似，参数可以作为任意可迭代对象传递。长度为零和一的向量也必须作为可迭代对象传递。参数不必是常数，但如果它们依赖于参数，则不应期望实现太多功能。
- en: 'All the subvectors of parameters are available:'
  id: totrans-1732
  prefs: []
  type: TYPE_NORMAL
  zh: 所有参数的子向量都可用：
- en: '[PRE344]'
  id: totrans-1733
  prefs: []
  type: TYPE_PRE
  zh: '[PRE344]'
- en: 'The Meijer G-function generalizes the hypergeometric functions. In some cases
    it can be expressed in terms of hypergeometric functions, using Slater’s theorem.
    For example:'
  id: totrans-1734
  prefs: []
  type: TYPE_NORMAL
  zh: Meijer G 函数推广了超几何函数。在某些情况下，它可以用超几何函数的术语表示，使用 Slater 定理。例如：
- en: '[PRE345]'
  id: totrans-1735
  prefs: []
  type: TYPE_PRE
  zh: '[PRE345]'
- en: 'Thus the Meijer G-function also subsumes many named functions as special cases.
    You can use `expand_func()` or `hyperexpand()` to (try to) rewrite a Meijer G-function
    in terms of named special functions. For example:'
  id: totrans-1736
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，Meijer G 函数也包含许多命名函数作为特殊情况。您可以使用 `expand_func()` 或 `hyperexpand()` 来（尝试）将
    Meijer G 函数重写为命名特殊函数。例如：
- en: '[PRE346]'
  id: totrans-1737
  prefs: []
  type: TYPE_PRE
  zh: '[PRE346]'
- en: See also
  id: totrans-1738
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`hyper`](#sympy.functions.special.hyper.hyper "sympy.functions.special.hyper.hyper"),
    [`sympy.simplify.hyperexpand`](../simplify/simplify.html#module-sympy.simplify.hyperexpand
    "sympy.simplify.hyperexpand")'
  id: totrans-1739
  prefs: []
  type: TYPE_NORMAL
  zh: '[`hyper`](#sympy.functions.special.hyper.hyper "sympy.functions.special.hyper.hyper"),
    [`sympy.simplify.hyperexpand`](../simplify/simplify.html#module-sympy.simplify.hyperexpand
    "sympy.simplify.hyperexpand")'
- en: References
  id: totrans-1740
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R464](#id124)]'
  id: totrans-1741
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R464](#id124)]'
- en: Luke, Y. L. (1969), The Special Functions and Their Approximations, Volume 1
  id: totrans-1742
  prefs: []
  type: TYPE_NORMAL
  zh: Luke, Y. L. (1969), The Special Functions and Their Approximations, Volume 1
- en: '[[R465](#id125)]'
  id: totrans-1743
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R465](#id125)]'
- en: '[https://en.wikipedia.org/wiki/Meijer_G-function](https://en.wikipedia.org/wiki/Meijer_G-function)'
  id: totrans-1744
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Meijer_G-function](https://en.wikipedia.org/wiki/Meijer_G-function)'
- en: '[PRE347]'
  id: totrans-1745
  prefs: []
  type: TYPE_PRE
  zh: '[PRE347]'
- en: First set of numerator parameters.
  id: totrans-1746
  prefs: []
  type: TYPE_NORMAL
  zh: 第一组分子参数。
- en: '[PRE348]'
  id: totrans-1747
  prefs: []
  type: TYPE_PRE
  zh: '[PRE348]'
- en: Second set of numerator parameters.
  id: totrans-1748
  prefs: []
  type: TYPE_NORMAL
  zh: 第二组分子参数。
- en: '[PRE349]'
  id: totrans-1749
  prefs: []
  type: TYPE_PRE
  zh: '[PRE349]'
- en: Combined numerator parameters.
  id: totrans-1750
  prefs: []
  type: TYPE_NORMAL
  zh: 组合的分子参数。
- en: '[PRE350]'
  id: totrans-1751
  prefs: []
  type: TYPE_PRE
  zh: '[PRE350]'
- en: Argument of the Meijer G-function.
  id: totrans-1752
  prefs: []
  type: TYPE_NORMAL
  zh: Meijer G-函数的参数。
- en: '[PRE351]'
  id: totrans-1753
  prefs: []
  type: TYPE_PRE
  zh: '[PRE351]'
- en: First set of denominator parameters.
  id: totrans-1754
  prefs: []
  type: TYPE_NORMAL
  zh: 第一组分母参数。
- en: '[PRE352]'
  id: totrans-1755
  prefs: []
  type: TYPE_PRE
  zh: '[PRE352]'
- en: Second set of denominator parameters.
  id: totrans-1756
  prefs: []
  type: TYPE_NORMAL
  zh: 第二组分母参数。
- en: '[PRE353]'
  id: totrans-1757
  prefs: []
  type: TYPE_PRE
  zh: '[PRE353]'
- en: Combined denominator parameters.
  id: totrans-1758
  prefs: []
  type: TYPE_NORMAL
  zh: 组合的分母参数。
- en: '[PRE354]'
  id: totrans-1759
  prefs: []
  type: TYPE_PRE
  zh: '[PRE354]'
- en: A quantity related to the convergence region of the integral, c.f. references.
  id: totrans-1760
  prefs: []
  type: TYPE_NORMAL
  zh: 与积分的收敛区域相关的量，请参见参考文献。
- en: '[PRE355]'
  id: totrans-1761
  prefs: []
  type: TYPE_PRE
  zh: '[PRE355]'
- en: Return a number \(P\) such that \(G(x*exp(I*P)) == G(x)\).
  id: totrans-1762
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个数 \(P\)，使得 \(G(x*exp(I*P)) == G(x)\)。
- en: Examples
  id: totrans-1763
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE356]'
  id: totrans-1764
  prefs: []
  type: TYPE_PRE
  zh: '[PRE356]'
- en: '[PRE357]'
  id: totrans-1765
  prefs: []
  type: TYPE_PRE
  zh: '[PRE357]'
- en: '[PRE358]'
  id: totrans-1766
  prefs: []
  type: TYPE_PRE
  zh: '[PRE358]'
- en: Get the defining integrand D(s).
  id: totrans-1767
  prefs: []
  type: TYPE_NORMAL
  zh: 获取定义的被积函数 D(s)。
- en: '[PRE359]'
  id: totrans-1768
  prefs: []
  type: TYPE_PRE
  zh: '[PRE359]'
- en: Returns true if expression has numeric data only.
  id: totrans-1769
  prefs: []
  type: TYPE_NORMAL
  zh: 如果表达式仅包含数值数据，则返回 true。
- en: '[PRE360]'
  id: totrans-1770
  prefs: []
  type: TYPE_PRE
  zh: '[PRE360]'
- en: A quantity related to the convergence region of the integral, c.f. references.
  id: totrans-1771
  prefs: []
  type: TYPE_NORMAL
  zh: 与积分的收敛区域相关的量，请参见参考文献。
- en: '[PRE361]'
  id: totrans-1772
  prefs: []
  type: TYPE_PRE
  zh: '[PRE361]'
- en: 'This is the Appell hypergeometric function of two variables as:'
  id: totrans-1773
  prefs: []
  type: TYPE_NORMAL
  zh: 这是两个变量的 Appell 超几何函数，如下：
- en: \[F_1(a,b_1,b_2,c,x,y) = \sum_{m=0}^{\infty} \sum_{n=0}^{\infty} \frac{(a)_{m+n}
    (b_1)_m (b_2)_n}{(c)_{m+n}} \frac{x^m y^n}{m! n!}.\]
  id: totrans-1774
  prefs: []
  type: TYPE_NORMAL
  zh: \[F_1(a,b_1,b_2,c,x,y) = \sum_{m=0}^{\infty} \sum_{n=0}^{\infty} \frac{(a)_{m+n}
    (b_1)_m (b_2)_n}{(c)_{m+n}} \frac{x^m y^n}{m! n!}.\]
- en: Examples
  id: totrans-1775
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE362]'
  id: totrans-1776
  prefs: []
  type: TYPE_PRE
  zh: '[PRE362]'
- en: References
  id: totrans-1777
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R466](#id126)]'
  id: totrans-1778
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R466](#id126)]'
- en: '[https://en.wikipedia.org/wiki/Appell_series](https://en.wikipedia.org/wiki/Appell_series)'
  id: totrans-1779
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Appell_series](https://en.wikipedia.org/wiki/Appell_series)'
- en: '[[R467](#id127)]'
  id: totrans-1780
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R467](#id127)]'
- en: '[https://functions.wolfram.com/HypergeometricFunctions/AppellF1/](https://functions.wolfram.com/HypergeometricFunctions/AppellF1/)'
  id: totrans-1781
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/HypergeometricFunctions/AppellF1/](https://functions.wolfram.com/HypergeometricFunctions/AppellF1/)'
- en: '## Elliptic integrals'
  id: totrans-1782
  prefs: []
  type: TYPE_NORMAL
  zh: '## 椭圆积分'
- en: '[PRE363]'
  id: totrans-1783
  prefs: []
  type: TYPE_PRE
  zh: '[PRE363]'
- en: The complete elliptic integral of the first kind, defined by
  id: totrans-1784
  prefs: []
  type: TYPE_NORMAL
  zh: 第一类完全椭圆积分由以下定义
- en: \[K(m) = F\left(\tfrac{\pi}{2}\middle| m\right)\]
  id: totrans-1785
  prefs: []
  type: TYPE_NORMAL
  zh: \[K(m) = F\left(\tfrac{\pi}{2}\middle| m\right)\]
- en: where \(F\left(z\middle| m\right)\) is the Legendre incomplete elliptic integral
    of the first kind.
  id: totrans-1786
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 \(F\left(z\middle| m\right)\) 是第一类勒让德不完全椭圆积分。
- en: Explanation
  id: totrans-1787
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The function \(K(m)\) is a single-valued function on the complex plane with
    branch cut along the interval \((1, \infty)\).
  id: totrans-1788
  prefs: []
  type: TYPE_NORMAL
  zh: 函数 \(K(m)\) 在复平面上是单值函数，其分支切割沿着区间 \((1, \infty)\)。
- en: Note that our notation defines the incomplete elliptic integral in terms of
    the parameter \(m\) instead of the elliptic modulus (eccentricity) \(k\). In this
    case, the parameter \(m\) is defined as \(m=k^2\).
  id: totrans-1789
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我们的符号学定义中用参数 \(m\) 而不是椭圆模数（偏心率） \(k\) 来定义不完全椭圆积分。在这种情况下，参数 \(m\) 被定义为 \(m=k^2\)。
- en: Examples
  id: totrans-1790
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE364]'
  id: totrans-1791
  prefs: []
  type: TYPE_PRE
  zh: '[PRE364]'
- en: See also
  id: totrans-1792
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`elliptic_f`](#sympy.functions.special.elliptic_integrals.elliptic_f "sympy.functions.special.elliptic_integrals.elliptic_f")'
  id: totrans-1793
  prefs: []
  type: TYPE_NORMAL
  zh: '[`elliptic_f`](#sympy.functions.special.elliptic_integrals.elliptic_f "sympy.functions.special.elliptic_integrals.elliptic_f")'
- en: References
  id: totrans-1794
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R468](#id128)]'
  id: totrans-1795
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R468](#id128)]'
- en: '[https://en.wikipedia.org/wiki/Elliptic_integrals](https://en.wikipedia.org/wiki/Elliptic_integrals)'
  id: totrans-1796
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Elliptic_integrals](https://en.wikipedia.org/wiki/Elliptic_integrals)'
- en: '[[R469](#id129)]'
  id: totrans-1797
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R469](#id129)]'
- en: '[https://functions.wolfram.com/EllipticIntegrals/EllipticK](https://functions.wolfram.com/EllipticIntegrals/EllipticK)'
  id: totrans-1798
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/EllipticIntegrals/EllipticK](https://functions.wolfram.com/EllipticIntegrals/EllipticK)'
- en: '[PRE365]'
  id: totrans-1799
  prefs: []
  type: TYPE_PRE
  zh: '[PRE365]'
- en: The Legendre incomplete elliptic integral of the first kind, defined by
  id: totrans-1800
  prefs: []
  type: TYPE_NORMAL
  zh: 第一类勒让德不完全椭圆积分，由以下定义
- en: \[F\left(z\middle| m\right) = \int_0^z \frac{dt}{\sqrt{1 - m \sin^2 t}}\]
  id: totrans-1801
  prefs: []
  type: TYPE_NORMAL
  zh: \[F\left(z\middle| m\right) = \int_0^z \frac{dt}{\sqrt{1 - m \sin^2 t}}\]
- en: Explanation
  id: totrans-1802
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This function reduces to a complete elliptic integral of the first kind, \(K(m)\),
    when \(z = \pi/2\).
  id: totrans-1803
  prefs: []
  type: TYPE_NORMAL
  zh: 当 \(z = \pi/2\) 时，此函数简化为第一类完全椭圆积分 \(K(m)\)。
- en: Note that our notation defines the incomplete elliptic integral in terms of
    the parameter \(m\) instead of the elliptic modulus (eccentricity) \(k\). In this
    case, the parameter \(m\) is defined as \(m=k^2\).
  id: totrans-1804
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我们的符号学定义中用参数 \(m\) 而不是椭圆模数（偏心率） \(k\) 来定义不完全椭圆积分。在这种情况下，参数 \(m\) 被定义为 \(m=k^2\)。
- en: Examples
  id: totrans-1805
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE366]'
  id: totrans-1806
  prefs: []
  type: TYPE_PRE
  zh: '[PRE366]'
- en: See also
  id: totrans-1807
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`elliptic_k`](#sympy.functions.special.elliptic_integrals.elliptic_k "sympy.functions.special.elliptic_integrals.elliptic_k")'
  id: totrans-1808
  prefs: []
  type: TYPE_NORMAL
  zh: '[`elliptic_k`](#sympy.functions.special.elliptic_integrals.elliptic_k "sympy.functions.special.elliptic_integrals.elliptic_k")'
- en: References
  id: totrans-1809
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R470](#id130)]'
  id: totrans-1810
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R470](#id130)]'
- en: '[https://en.wikipedia.org/wiki/Elliptic_integrals](https://en.wikipedia.org/wiki/Elliptic_integrals)'
  id: totrans-1811
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Elliptic_integrals](https://en.wikipedia.org/wiki/Elliptic_integrals)'
- en: '[[R471](#id131)]'
  id: totrans-1812
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R471](#id131)]'
- en: '[https://functions.wolfram.com/EllipticIntegrals/EllipticF](https://functions.wolfram.com/EllipticIntegrals/EllipticF)'
  id: totrans-1813
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/EllipticIntegrals/EllipticF](https://functions.wolfram.com/EllipticIntegrals/EllipticF)'
- en: '[PRE367]'
  id: totrans-1814
  prefs: []
  type: TYPE_PRE
  zh: '[PRE367]'
- en: Called with two arguments \(z\) and \(m\), evaluates the incomplete elliptic
    integral of the second kind, defined by
  id: totrans-1815
  prefs: []
  type: TYPE_NORMAL
  zh: 以两个参数\(z\) 和\(m\) 调用，评估由下式定义的第二类不完全椭圆积分：
- en: \[E\left(z\middle| m\right) = \int_0^z \sqrt{1 - m \sin^2 t} dt\]
  id: totrans-1816
  prefs: []
  type: TYPE_NORMAL
  zh: \[E\left(z\middle| m\right) = \int_0^z \sqrt{1 - m \sin^2 t} dt\]
- en: Called with a single argument \(m\), evaluates the Legendre complete elliptic
    integral of the second kind
  id: totrans-1817
  prefs: []
  type: TYPE_NORMAL
  zh: 以单个参数\(m\) 调用，评估第二类Legendre完全椭圆积分。
- en: \[E(m) = E\left(\tfrac{\pi}{2}\middle| m\right)\]
  id: totrans-1818
  prefs: []
  type: TYPE_NORMAL
  zh: \[E(m) = E\left(\tfrac{\pi}{2}\middle| m\right)\]
- en: Explanation
  id: totrans-1819
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The function \(E(m)\) is a single-valued function on the complex plane with
    branch cut along the interval \((1, \infty)\).
  id: totrans-1820
  prefs: []
  type: TYPE_NORMAL
  zh: 函数\(E(m)\) 是复平面上的单值函数，其分支沿着区间\((1, \infty)\)。
- en: Note that our notation defines the incomplete elliptic integral in terms of
    the parameter \(m\) instead of the elliptic modulus (eccentricity) \(k\). In this
    case, the parameter \(m\) is defined as \(m=k^2\).
  id: totrans-1821
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我们的符号表示中将不完全椭圆积分定义为参数\(m\)，而非椭圆模（偏心率）\(k\)。在此情况下，参数\(m\) 定义为\(m=k^2\)。
- en: Examples
  id: totrans-1822
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE368]'
  id: totrans-1823
  prefs: []
  type: TYPE_PRE
  zh: '[PRE368]'
- en: References
  id: totrans-1824
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R472](#id132)]'
  id: totrans-1825
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R472](#id132)]'
- en: '[https://en.wikipedia.org/wiki/Elliptic_integrals](https://en.wikipedia.org/wiki/Elliptic_integrals)'
  id: totrans-1826
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Elliptic_integrals](https://en.wikipedia.org/wiki/Elliptic_integrals)'
- en: '[[R473](#id133)]'
  id: totrans-1827
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R473](#id133)]'
- en: '[https://functions.wolfram.com/EllipticIntegrals/EllipticE2](https://functions.wolfram.com/EllipticIntegrals/EllipticE2)'
  id: totrans-1828
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/EllipticIntegrals/EllipticE2](https://functions.wolfram.com/EllipticIntegrals/EllipticE2)'
- en: '[[R474](#id134)]'
  id: totrans-1829
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R474](#id134)]'
- en: '[https://functions.wolfram.com/EllipticIntegrals/EllipticE](https://functions.wolfram.com/EllipticIntegrals/EllipticE)'
  id: totrans-1830
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/EllipticIntegrals/EllipticE](https://functions.wolfram.com/EllipticIntegrals/EllipticE)'
- en: '[PRE369]'
  id: totrans-1831
  prefs: []
  type: TYPE_PRE
  zh: '[PRE369]'
- en: Called with three arguments \(n\), \(z\) and \(m\), evaluates the Legendre incomplete
    elliptic integral of the third kind, defined by
  id: totrans-1832
  prefs: []
  type: TYPE_NORMAL
  zh: 以三个参数\(n\)、\(z\) 和\(m\) 调用，评估由下式定义的Legendre不完全椭圆积分：
- en: \[\Pi\left(n; z\middle| m\right) = \int_0^z \frac{dt} {\left(1 - n \sin^2 t\right)
    \sqrt{1 - m \sin^2 t}}\]
  id: totrans-1833
  prefs: []
  type: TYPE_NORMAL
  zh: \[\Pi\left(n; z\middle| m\right) = \int_0^z \frac{dt} {\left(1 - n \sin^2 t\right)
    \sqrt{1 - m \sin^2 t}}\]
- en: 'Called with two arguments \(n\) and \(m\), evaluates the complete elliptic
    integral of the third kind:'
  id: totrans-1834
  prefs: []
  type: TYPE_NORMAL
  zh: 以两个参数\(n\) 和\(m\) 调用，评估第三类完全椭圆积分：
- en: \[\Pi\left(n\middle| m\right) = \Pi\left(n; \tfrac{\pi}{2}\middle| m\right)\]
  id: totrans-1835
  prefs: []
  type: TYPE_NORMAL
  zh: \[\Pi\left(n\middle| m\right) = \Pi\left(n; \tfrac{\pi}{2}\middle| m\right)\]
- en: Explanation
  id: totrans-1836
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Note that our notation defines the incomplete elliptic integral in terms of
    the parameter \(m\) instead of the elliptic modulus (eccentricity) \(k\). In this
    case, the parameter \(m\) is defined as \(m=k^2\).
  id: totrans-1837
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我们的符号表示中将不完全椭圆积分定义为参数\(m\)，而非椭圆模（偏心率）\(k\)。在此情况下，参数\(m\) 定义为\(m=k^2\)。
- en: Examples
  id: totrans-1838
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE370]'
  id: totrans-1839
  prefs: []
  type: TYPE_PRE
  zh: '[PRE370]'
- en: References
  id: totrans-1840
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R475](#id135)]'
  id: totrans-1841
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R475](#id135)]'
- en: '[https://en.wikipedia.org/wiki/Elliptic_integrals](https://en.wikipedia.org/wiki/Elliptic_integrals)'
  id: totrans-1842
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Elliptic_integrals](https://en.wikipedia.org/wiki/Elliptic_integrals)'
- en: '[[R476](#id136)]'
  id: totrans-1843
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R476](#id136)]'
- en: '[https://functions.wolfram.com/EllipticIntegrals/EllipticPi3](https://functions.wolfram.com/EllipticIntegrals/EllipticPi3)'
  id: totrans-1844
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/EllipticIntegrals/EllipticPi3](https://functions.wolfram.com/EllipticIntegrals/EllipticPi3)'
- en: '[[R477](#id137)]'
  id: totrans-1845
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R477](#id137)]'
- en: '[https://functions.wolfram.com/EllipticIntegrals/EllipticPi](https://functions.wolfram.com/EllipticIntegrals/EllipticPi)  ##
    Mathieu Functions'
  id: totrans-1846
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/EllipticIntegrals/EllipticPi](https://functions.wolfram.com/EllipticIntegrals/EllipticPi)  ##
    Mathieu函数'
- en: '[PRE371]'
  id: totrans-1847
  prefs: []
  type: TYPE_PRE
  zh: '[PRE371]'
- en: Abstract base class for Mathieu functions.
  id: totrans-1848
  prefs: []
  type: TYPE_NORMAL
  zh: Mathieu函数的抽象基类。
- en: This class is meant to reduce code duplication.
  id: totrans-1849
  prefs: []
  type: TYPE_NORMAL
  zh: 此类旨在减少代码重复。
- en: '[PRE372]'
  id: totrans-1850
  prefs: []
  type: TYPE_PRE
  zh: '[PRE372]'
- en: The Mathieu Sine function \(S(a,q,z)\).
  id: totrans-1851
  prefs: []
  type: TYPE_NORMAL
  zh: Mathieu正弦函数\(S(a,q,z)\)。
- en: Explanation
  id: totrans-1852
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'This function is one solution of the Mathieu differential equation:'
  id: totrans-1853
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数是Mathieu微分方程的一个解：
- en: \[y(x)^{\prime\prime} + (a - 2 q \cos(2 x)) y(x) = 0\]
  id: totrans-1854
  prefs: []
  type: TYPE_NORMAL
  zh: \[y(x)^{\prime\prime} + (a - 2 q \cos(2 x)) y(x) = 0\]
- en: The other solution is the Mathieu Cosine function.
  id: totrans-1855
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个解是Mathieu余弦函数。
- en: Examples
  id: totrans-1856
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE373]'
  id: totrans-1857
  prefs: []
  type: TYPE_PRE
  zh: '[PRE373]'
- en: '[PRE374]'
  id: totrans-1858
  prefs: []
  type: TYPE_PRE
  zh: '[PRE374]'
- en: '[PRE375]'
  id: totrans-1859
  prefs: []
  type: TYPE_PRE
  zh: '[PRE375]'
- en: '[PRE376]'
  id: totrans-1860
  prefs: []
  type: TYPE_PRE
  zh: '[PRE376]'
- en: See also
  id: totrans-1861
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`mathieuc`](#sympy.functions.special.mathieu_functions.mathieuc "sympy.functions.special.mathieu_functions.mathieuc")'
  id: totrans-1862
  prefs: []
  type: TYPE_NORMAL
  zh: '[`mathieuc`](#sympy.functions.special.mathieu_functions.mathieuc "sympy.functions.special.mathieu_functions.mathieuc")'
- en: Mathieu cosine function.
  id: totrans-1863
  prefs: []
  type: TYPE_NORMAL
  zh: Mathieu余弦函数。
- en: '[`mathieusprime`](#sympy.functions.special.mathieu_functions.mathieusprime
    "sympy.functions.special.mathieu_functions.mathieusprime")'
  id: totrans-1864
  prefs: []
  type: TYPE_NORMAL
  zh: '[`mathieusprime`](#sympy.functions.special.mathieu_functions.mathieusprime
    "sympy.functions.special.mathieu_functions.mathieusprime")'
- en: Derivative of Mathieu sine function.
  id: totrans-1865
  prefs: []
  type: TYPE_NORMAL
  zh: Mathieu正弦函数的导数。
- en: '[`mathieucprime`](#sympy.functions.special.mathieu_functions.mathieucprime
    "sympy.functions.special.mathieu_functions.mathieucprime")'
  id: totrans-1866
  prefs: []
  type: TYPE_NORMAL
  zh: '[`mathieucprime`](#sympy.functions.special.mathieu_functions.mathieucprime
    "sympy.functions.special.mathieu_functions.mathieucprime")'
- en: Derivative of Mathieu cosine function.
  id: totrans-1867
  prefs: []
  type: TYPE_NORMAL
  zh: Mathieu余弦函数的导数。
- en: References
  id: totrans-1868
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R478](#id138)]'
  id: totrans-1869
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R478](#id138)]'
- en: '[https://en.wikipedia.org/wiki/Mathieu_function](https://en.wikipedia.org/wiki/Mathieu_function)'
  id: totrans-1870
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Mathieu_function](https://en.wikipedia.org/wiki/Mathieu_function)'
- en: '[[R479](#id139)]'
  id: totrans-1871
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R479](#id139)]'
- en: '[https://dlmf.nist.gov/28](https://dlmf.nist.gov/28)'
  id: totrans-1872
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/28](https://dlmf.nist.gov/28)'
- en: '[[R480](#id140)]'
  id: totrans-1873
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R480](#id140)]'
- en: '[https://mathworld.wolfram.com/MathieuFunction.html](https://mathworld.wolfram.com/MathieuFunction.html)'
  id: totrans-1874
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/MathieuFunction.html](https://mathworld.wolfram.com/MathieuFunction.html)'
- en: '[[R481](#id141)]'
  id: totrans-1875
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R481](#id141)]'
- en: '[https://functions.wolfram.com/MathieuandSpheroidalFunctions/MathieuS/](https://functions.wolfram.com/MathieuandSpheroidalFunctions/MathieuS/)'
  id: totrans-1876
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/MathieuandSpheroidalFunctions/MathieuS/](https://functions.wolfram.com/MathieuandSpheroidalFunctions/MathieuS/)'
- en: '[PRE377]'
  id: totrans-1877
  prefs: []
  type: TYPE_PRE
  zh: '[PRE377]'
- en: The Mathieu Cosine function \(C(a,q,z)\).
  id: totrans-1878
  prefs: []
  type: TYPE_NORMAL
  zh: Mathieu余弦函数 \(C(a,q,z)\)。
- en: Explanation
  id: totrans-1879
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'This function is one solution of the Mathieu differential equation:'
  id: totrans-1880
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数是Mathieu微分方程的一个解：
- en: \[y(x)^{\prime\prime} + (a - 2 q \cos(2 x)) y(x) = 0\]
  id: totrans-1881
  prefs: []
  type: TYPE_NORMAL
  zh: \[y(x)^{\prime\prime} + (a - 2 q \cos(2 x)) y(x) = 0\]
- en: The other solution is the Mathieu Sine function.
  id: totrans-1882
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个解是Mathieu正弦函数。
- en: Examples
  id: totrans-1883
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE378]'
  id: totrans-1884
  prefs: []
  type: TYPE_PRE
  zh: '[PRE378]'
- en: '[PRE379]'
  id: totrans-1885
  prefs: []
  type: TYPE_PRE
  zh: '[PRE379]'
- en: '[PRE380]'
  id: totrans-1886
  prefs: []
  type: TYPE_PRE
  zh: '[PRE380]'
- en: '[PRE381]'
  id: totrans-1887
  prefs: []
  type: TYPE_PRE
  zh: '[PRE381]'
- en: See also
  id: totrans-1888
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`mathieus`](#sympy.functions.special.mathieu_functions.mathieus "sympy.functions.special.mathieu_functions.mathieus")'
  id: totrans-1889
  prefs: []
  type: TYPE_NORMAL
  zh: '[`mathieus`](#sympy.functions.special.mathieu_functions.mathieus "sympy.functions.special.mathieu_functions.mathieus")'
- en: Mathieu sine function
  id: totrans-1890
  prefs: []
  type: TYPE_NORMAL
  zh: Mathieu正弦函数
- en: '[`mathieusprime`](#sympy.functions.special.mathieu_functions.mathieusprime
    "sympy.functions.special.mathieu_functions.mathieusprime")'
  id: totrans-1891
  prefs: []
  type: TYPE_NORMAL
  zh: '[`mathieusprime`](#sympy.functions.special.mathieu_functions.mathieusprime
    "sympy.functions.special.mathieu_functions.mathieusprime")'
- en: Derivative of Mathieu sine function
  id: totrans-1892
  prefs: []
  type: TYPE_NORMAL
  zh: Mathieu正弦函数的导数
- en: '[`mathieucprime`](#sympy.functions.special.mathieu_functions.mathieucprime
    "sympy.functions.special.mathieu_functions.mathieucprime")'
  id: totrans-1893
  prefs: []
  type: TYPE_NORMAL
  zh: '[`mathieucprime`](#sympy.functions.special.mathieu_functions.mathieucprime
    "sympy.functions.special.mathieu_functions.mathieucprime")'
- en: Derivative of Mathieu cosine function
  id: totrans-1894
  prefs: []
  type: TYPE_NORMAL
  zh: Mathieu余弦函数的导数
- en: References
  id: totrans-1895
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R482](#id142)]'
  id: totrans-1896
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R482](#id142)]'
- en: '[https://en.wikipedia.org/wiki/Mathieu_function](https://en.wikipedia.org/wiki/Mathieu_function)'
  id: totrans-1897
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Mathieu_function](https://en.wikipedia.org/wiki/Mathieu_function)'
- en: '[[R483](#id143)]'
  id: totrans-1898
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R483](#id143)]'
- en: '[https://dlmf.nist.gov/28](https://dlmf.nist.gov/28)'
  id: totrans-1899
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/28](https://dlmf.nist.gov/28)'
- en: '[[R484](#id144)]'
  id: totrans-1900
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R484](#id144)]'
- en: '[https://mathworld.wolfram.com/MathieuFunction.html](https://mathworld.wolfram.com/MathieuFunction.html)'
  id: totrans-1901
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/MathieuFunction.html](https://mathworld.wolfram.com/MathieuFunction.html)'
- en: '[[R485](#id145)]'
  id: totrans-1902
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R485](#id145)]'
- en: '[https://functions.wolfram.com/MathieuandSpheroidalFunctions/MathieuC/](https://functions.wolfram.com/MathieuandSpheroidalFunctions/MathieuC/)'
  id: totrans-1903
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/MathieuandSpheroidalFunctions/MathieuC/](https://functions.wolfram.com/MathieuandSpheroidalFunctions/MathieuC/)'
- en: '[PRE382]'
  id: totrans-1904
  prefs: []
  type: TYPE_PRE
  zh: '[PRE382]'
- en: The derivative \(S^{\prime}(a,q,z)\) of the Mathieu Sine function.
  id: totrans-1905
  prefs: []
  type: TYPE_NORMAL
  zh: Mathieu正弦函数的导数\(S^{\prime}(a,q,z)\)。
- en: Explanation
  id: totrans-1906
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'This function is one solution of the Mathieu differential equation:'
  id: totrans-1907
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数是Mathieu微分方程的一个解：
- en: \[y(x)^{\prime\prime} + (a - 2 q \cos(2 x)) y(x) = 0\]
  id: totrans-1908
  prefs: []
  type: TYPE_NORMAL
  zh: \[y(x)^{\prime\prime} + (a - 2 q \cos(2 x)) y(x) = 0\]
- en: The other solution is the Mathieu Cosine function.
  id: totrans-1909
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个解是Mathieu余弦函数。
- en: Examples
  id: totrans-1910
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE383]'
  id: totrans-1911
  prefs: []
  type: TYPE_PRE
  zh: '[PRE383]'
- en: '[PRE384]'
  id: totrans-1912
  prefs: []
  type: TYPE_PRE
  zh: '[PRE384]'
- en: '[PRE385]'
  id: totrans-1913
  prefs: []
  type: TYPE_PRE
  zh: '[PRE385]'
- en: '[PRE386]'
  id: totrans-1914
  prefs: []
  type: TYPE_PRE
  zh: '[PRE386]'
- en: See also
  id: totrans-1915
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`mathieus`](#sympy.functions.special.mathieu_functions.mathieus "sympy.functions.special.mathieu_functions.mathieus")'
  id: totrans-1916
  prefs: []
  type: TYPE_NORMAL
  zh: '[`mathieus`](#sympy.functions.special.mathieu_functions.mathieus "sympy.functions.special.mathieu_functions.mathieus")'
- en: Mathieu sine function
  id: totrans-1917
  prefs: []
  type: TYPE_NORMAL
  zh: Mathieu正弦函数
- en: '[`mathieuc`](#sympy.functions.special.mathieu_functions.mathieuc "sympy.functions.special.mathieu_functions.mathieuc")'
  id: totrans-1918
  prefs: []
  type: TYPE_NORMAL
  zh: '[`mathieuc`](#sympy.functions.special.mathieu_functions.mathieuc "sympy.functions.special.mathieu_functions.mathieuc")'
- en: Mathieu cosine function
  id: totrans-1919
  prefs: []
  type: TYPE_NORMAL
  zh: Mathieu余弦函数
- en: '[`mathieucprime`](#sympy.functions.special.mathieu_functions.mathieucprime
    "sympy.functions.special.mathieu_functions.mathieucprime")'
  id: totrans-1920
  prefs: []
  type: TYPE_NORMAL
  zh: '[`mathieucprime`](#sympy.functions.special.mathieu_functions.mathieucprime
    "sympy.functions.special.mathieu_functions.mathieucprime")'
- en: Derivative of Mathieu cosine function
  id: totrans-1921
  prefs: []
  type: TYPE_NORMAL
  zh: Mathieu余弦函数的导数
- en: References
  id: totrans-1922
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R486](#id146)]'
  id: totrans-1923
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R486](#id146)]'
- en: '[https://en.wikipedia.org/wiki/Mathieu_function](https://en.wikipedia.org/wiki/Mathieu_function)'
  id: totrans-1924
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Mathieu_function](https://en.wikipedia.org/wiki/Mathieu_function)'
- en: '[[R487](#id147)]'
  id: totrans-1925
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R487](#id147)]'
- en: '[https://dlmf.nist.gov/28](https://dlmf.nist.gov/28)'
  id: totrans-1926
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/28](https://dlmf.nist.gov/28)'
- en: '[[R488](#id148)]'
  id: totrans-1927
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R488](#id148)]'
- en: '[https://mathworld.wolfram.com/MathieuFunction.html](https://mathworld.wolfram.com/MathieuFunction.html)'
  id: totrans-1928
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/MathieuFunction.html](https://mathworld.wolfram.com/MathieuFunction.html)'
- en: '[[R489](#id149)]'
  id: totrans-1929
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R489](#id149)]'
- en: '[https://functions.wolfram.com/MathieuandSpheroidalFunctions/MathieuSPrime/](https://functions.wolfram.com/MathieuandSpheroidalFunctions/MathieuSPrime/)'
  id: totrans-1930
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/MathieuandSpheroidalFunctions/MathieuSPrime/](https://functions.wolfram.com/MathieuandSpheroidalFunctions/MathieuSPrime/)'
- en: '[PRE387]'
  id: totrans-1931
  prefs: []
  type: TYPE_PRE
  zh: '[PRE387]'
- en: The derivative \(C^{\prime}(a,q,z)\) of the Mathieu Cosine function.
  id: totrans-1932
  prefs: []
  type: TYPE_NORMAL
  zh: 马修余弦函数的导数 \(C^{\prime}(a,q,z)\)。
- en: Explanation
  id: totrans-1933
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'This function is one solution of the Mathieu differential equation:'
  id: totrans-1934
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数是马修微分方程的一个解：
- en: \[y(x)^{\prime\prime} + (a - 2 q \cos(2 x)) y(x) = 0\]
  id: totrans-1935
  prefs: []
  type: TYPE_NORMAL
  zh: \[y(x)^{\prime\prime} + (a - 2 q \cos(2 x)) y(x) = 0\]
- en: The other solution is the Mathieu Sine function.
  id: totrans-1936
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个解是马修正弦函数。
- en: Examples
  id: totrans-1937
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE388]'
  id: totrans-1938
  prefs: []
  type: TYPE_PRE
  zh: '[PRE388]'
- en: '[PRE389]'
  id: totrans-1939
  prefs: []
  type: TYPE_PRE
  zh: '[PRE389]'
- en: '[PRE390]'
  id: totrans-1940
  prefs: []
  type: TYPE_PRE
  zh: '[PRE390]'
- en: '[PRE391]'
  id: totrans-1941
  prefs: []
  type: TYPE_PRE
  zh: '[PRE391]'
- en: See also
  id: totrans-1942
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`mathieus`](#sympy.functions.special.mathieu_functions.mathieus "sympy.functions.special.mathieu_functions.mathieus")'
  id: totrans-1943
  prefs: []
  type: TYPE_NORMAL
  zh: '[`mathieus`](#sympy.functions.special.mathieu_functions.mathieus "sympy.functions.special.mathieu_functions.mathieus")'
- en: Mathieu sine function
  id: totrans-1944
  prefs: []
  type: TYPE_NORMAL
  zh: 马修正弦函数
- en: '[`mathieuc`](#sympy.functions.special.mathieu_functions.mathieuc "sympy.functions.special.mathieu_functions.mathieuc")'
  id: totrans-1945
  prefs: []
  type: TYPE_NORMAL
  zh: '[`mathieuc`](#sympy.functions.special.mathieu_functions.mathieuc "sympy.functions.special.mathieu_functions.mathieuc")'
- en: Mathieu cosine function
  id: totrans-1946
  prefs: []
  type: TYPE_NORMAL
  zh: 马修余弦函数
- en: '[`mathieusprime`](#sympy.functions.special.mathieu_functions.mathieusprime
    "sympy.functions.special.mathieu_functions.mathieusprime")'
  id: totrans-1947
  prefs: []
  type: TYPE_NORMAL
  zh: '[`mathieusprime`](#sympy.functions.special.mathieu_functions.mathieusprime
    "sympy.functions.special.mathieu_functions.mathieusprime")'
- en: Derivative of Mathieu sine function
  id: totrans-1948
  prefs: []
  type: TYPE_NORMAL
  zh: 马修正弦函数的导数
- en: References
  id: totrans-1949
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R490](#id150)]'
  id: totrans-1950
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R490](#id150)]'
- en: '[https://en.wikipedia.org/wiki/Mathieu_function](https://en.wikipedia.org/wiki/Mathieu_function)'
  id: totrans-1951
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Mathieu_function](https://en.wikipedia.org/wiki/Mathieu_function)'
- en: '[[R491](#id151)]'
  id: totrans-1952
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R491](#id151)]'
- en: '[https://dlmf.nist.gov/28](https://dlmf.nist.gov/28)'
  id: totrans-1953
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/28](https://dlmf.nist.gov/28)'
- en: '[[R492](#id152)]'
  id: totrans-1954
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R492](#id152)]'
- en: '[https://mathworld.wolfram.com/MathieuFunction.html](https://mathworld.wolfram.com/MathieuFunction.html)'
  id: totrans-1955
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/MathieuFunction.html](https://mathworld.wolfram.com/MathieuFunction.html)'
- en: '[[R493](#id153)]'
  id: totrans-1956
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R493](#id153)]'
- en: '[https://functions.wolfram.com/MathieuandSpheroidalFunctions/MathieuCPrime/](https://functions.wolfram.com/MathieuandSpheroidalFunctions/MathieuCPrime/)  ##
    Orthogonal Polynomials'
  id: totrans-1957
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/MathieuandSpheroidalFunctions/MathieuCPrime/](https://functions.wolfram.com/MathieuandSpheroidalFunctions/MathieuCPrime/)  ##
    正交多项式'
- en: This module mainly implements special orthogonal polynomials.
  id: totrans-1958
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块主要实现特殊正交多项式。
- en: See also functions.combinatorial.numbers which contains some combinatorial polynomials.
  id: totrans-1959
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见包含一些组合多项式的函数.combinatorial.numbers。
- en: Jacobi Polynomials
  id: totrans-1960
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 雅各比多项式
- en: '[PRE392]'
  id: totrans-1961
  prefs: []
  type: TYPE_PRE
  zh: '[PRE392]'
- en: Jacobi polynomial \(P_n^{\left(\alpha, \beta\right)}(x)\).
  id: totrans-1962
  prefs: []
  type: TYPE_NORMAL
  zh: 雅各比多项式 \(P_n^{\left(\alpha, \beta\right)}(x)\)。
- en: Explanation
  id: totrans-1963
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: '`jacobi(n, alpha, beta, x)` gives the \(n\)th Jacobi polynomial in \(x\), \(P_n^{\left(\alpha,
    \beta\right)}(x)\).'
  id: totrans-1964
  prefs: []
  type: TYPE_NORMAL
  zh: '`jacobi(n, alpha, beta, x)` 给出 \(x\) 中的第 \(n\) 个雅各比多项式，\(P_n^{\left(\alpha,
    \beta\right)}(x)\)。'
- en: The Jacobi polynomials are orthogonal on \([-1, 1]\) with respect to the weight
    \(\left(1-x\right)^\alpha \left(1+x\right)^\beta\).
  id: totrans-1965
  prefs: []
  type: TYPE_NORMAL
  zh: 雅各比多项式在 \([-1, 1]\) 上相对于权重 \(\left(1-x\right)^\alpha \left(1+x\right)^\beta\)
    正交。
- en: Examples
  id: totrans-1966
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE393]'
  id: totrans-1967
  prefs: []
  type: TYPE_PRE
  zh: '[PRE393]'
- en: '[PRE394]'
  id: totrans-1968
  prefs: []
  type: TYPE_PRE
  zh: '[PRE394]'
- en: '[PRE395]'
  id: totrans-1969
  prefs: []
  type: TYPE_PRE
  zh: '[PRE395]'
- en: '[PRE396]'
  id: totrans-1970
  prefs: []
  type: TYPE_PRE
  zh: '[PRE396]'
- en: '[PRE397]'
  id: totrans-1971
  prefs: []
  type: TYPE_PRE
  zh: '[PRE397]'
- en: '[PRE398]'
  id: totrans-1972
  prefs: []
  type: TYPE_PRE
  zh: '[PRE398]'
- en: '[PRE399]'
  id: totrans-1973
  prefs: []
  type: TYPE_PRE
  zh: '[PRE399]'
- en: '[PRE400]'
  id: totrans-1974
  prefs: []
  type: TYPE_PRE
  zh: '[PRE400]'
- en: '[PRE401]'
  id: totrans-1975
  prefs: []
  type: TYPE_PRE
  zh: '[PRE401]'
- en: '[PRE402]'
  id: totrans-1976
  prefs: []
  type: TYPE_PRE
  zh: '[PRE402]'
- en: '[PRE403]'
  id: totrans-1977
  prefs: []
  type: TYPE_PRE
  zh: '[PRE403]'
- en: See also
  id: totrans-1978
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`gegenbauer`](#sympy.functions.special.polynomials.gegenbauer "sympy.functions.special.polynomials.gegenbauer"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
  id: totrans-1979
  prefs: []
  type: TYPE_NORMAL
  zh: '[`gegenbauer`](#sympy.functions.special.polynomials.gegenbauer "sympy.functions.special.polynomials.gegenbauer"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
- en: References
  id: totrans-1980
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R494](#id154)]'
  id: totrans-1981
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R494](#id154)]'
- en: '[https://en.wikipedia.org/wiki/Jacobi_polynomials](https://en.wikipedia.org/wiki/Jacobi_polynomials)'
  id: totrans-1982
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Jacobi_polynomials](https://en.wikipedia.org/wiki/Jacobi_polynomials)'
- en: '[[R495](#id155)]'
  id: totrans-1983
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R495](#id155)]'
- en: '[https://mathworld.wolfram.com/JacobiPolynomial.html](https://mathworld.wolfram.com/JacobiPolynomial.html)'
  id: totrans-1984
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/JacobiPolynomial.html](https://mathworld.wolfram.com/JacobiPolynomial.html)'
- en: '[[R496](#id156)]'
  id: totrans-1985
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R496](#id156)]'
- en: '[https://functions.wolfram.com/Polynomials/JacobiP/](https://functions.wolfram.com/Polynomials/JacobiP/)'
  id: totrans-1986
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Polynomials/JacobiP/](https://functions.wolfram.com/Polynomials/JacobiP/)'
- en: '[PRE404]'
  id: totrans-1987
  prefs: []
  type: TYPE_PRE
  zh: '[PRE404]'
- en: Jacobi polynomial \(P_n^{\left(\alpha, \beta\right)}(x)\).
  id: totrans-1988
  prefs: []
  type: TYPE_NORMAL
  zh: Jacobi 多项式 \(P_n^{\left(\alpha, \beta\right)}(x)\).
- en: 'Parameters:'
  id: totrans-1989
  prefs: []
  type: TYPE_NORMAL
  zh: '参数:'
- en: '**n** : integer degree of polynomial'
  id: totrans-1990
  prefs: []
  type: TYPE_NORMAL
  zh: '**n** : 多项式的整数次数'
- en: '**a** : alpha value'
  id: totrans-1991
  prefs: []
  type: TYPE_NORMAL
  zh: '**a** : alpha 值'
- en: '**b** : beta value'
  id: totrans-1992
  prefs: []
  type: TYPE_NORMAL
  zh: '**b** : beta 值'
- en: '**x** : symbol'
  id: totrans-1993
  prefs: []
  type: TYPE_NORMAL
  zh: '**x** : 符号'
- en: Explanation
  id: totrans-1994
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: '`jacobi_normalized(n, alpha, beta, x)` gives the \(n\)th Jacobi polynomial
    in \(x\), \(P_n^{\left(\alpha, \beta\right)}(x)\).'
  id: totrans-1995
  prefs: []
  type: TYPE_NORMAL
  zh: '`jacobi_normalized(n, alpha, beta, x)` 给出在 \(x\) 上的第 \(n\) 个 Jacobi 多项式，\(P_n^{\left(\alpha,
    \beta\right)}(x)\).'
- en: The Jacobi polynomials are orthogonal on \([-1, 1]\) with respect to the weight
    \(\left(1-x\right)^\alpha \left(1+x\right)^\beta\).
  id: totrans-1996
  prefs: []
  type: TYPE_NORMAL
  zh: Jacobi 多项式在 \([-1, 1]\) 区间上是关于权重 \(\left(1-x\right)^\alpha \left(1+x\right)^\beta\)
    正交的。
- en: 'This functions returns the polynomials normilzed:'
  id: totrans-1997
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数返回归一化的多项式：
- en: \[\int_{-1}^{1} P_m^{\left(\alpha, \beta\right)}(x) P_n^{\left(\alpha, \beta\right)}(x)
    (1-x)^{\alpha} (1+x)^{\beta} \mathrm{d}x = \delta_{m,n}\]
  id: totrans-1998
  prefs: []
  type: TYPE_NORMAL
  zh: \[\int_{-1}^{1} P_m^{\left(\alpha, \beta\right)}(x) P_n^{\left(\alpha, \beta\right)}(x)
    (1-x)^{\alpha} (1+x)^{\beta} \mathrm{d}x = \delta_{m,n}\]
- en: Examples
  id: totrans-1999
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE405]'
  id: totrans-2000
  prefs: []
  type: TYPE_PRE
  zh: '[PRE405]'
- en: '[PRE406]'
  id: totrans-2001
  prefs: []
  type: TYPE_PRE
  zh: '[PRE406]'
- en: See also
  id: totrans-2002
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`gegenbauer`](#sympy.functions.special.polynomials.gegenbauer "sympy.functions.special.polynomials.gegenbauer"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
  id: totrans-2003
  prefs: []
  type: TYPE_NORMAL
  zh: '[`gegenbauer`](#sympy.functions.special.polynomials.gegenbauer "sympy.functions.special.polynomials.gegenbauer"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
- en: References
  id: totrans-2004
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R497](#id157)]'
  id: totrans-2005
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R497](#id157)]'
- en: '[https://en.wikipedia.org/wiki/Jacobi_polynomials](https://en.wikipedia.org/wiki/Jacobi_polynomials)'
  id: totrans-2006
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Jacobi_polynomials](https://en.wikipedia.org/wiki/Jacobi_polynomials)'
- en: '[[R498](#id158)]'
  id: totrans-2007
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R498](#id158)]'
- en: '[https://mathworld.wolfram.com/JacobiPolynomial.html](https://mathworld.wolfram.com/JacobiPolynomial.html)'
  id: totrans-2008
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/JacobiPolynomial.html](https://mathworld.wolfram.com/JacobiPolynomial.html)'
- en: '[[R499](#id159)]'
  id: totrans-2009
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R499](#id159)]'
- en: '[https://functions.wolfram.com/Polynomials/JacobiP/](https://functions.wolfram.com/Polynomials/JacobiP/)'
  id: totrans-2010
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Polynomials/JacobiP/](https://functions.wolfram.com/Polynomials/JacobiP/)'
- en: Gegenbauer Polynomials
  id: totrans-2011
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Gegenbauer 多项式
- en: '[PRE407]'
  id: totrans-2012
  prefs: []
  type: TYPE_PRE
  zh: '[PRE407]'
- en: Gegenbauer polynomial \(C_n^{\left(\alpha\right)}(x)\).
  id: totrans-2013
  prefs: []
  type: TYPE_NORMAL
  zh: Gegenbauer 多项式 \(C_n^{\left(\alpha\right)}(x)\)。
- en: Explanation
  id: totrans-2014
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: '`gegenbauer(n, alpha, x)` gives the \(n\)th Gegenbauer polynomial in \(x\),
    \(C_n^{\left(\alpha\right)}(x)\).'
  id: totrans-2015
  prefs: []
  type: TYPE_NORMAL
  zh: '`gegenbauer(n, alpha, x)` 给出\(x\)中的第\(n\)个 Gegenbauer 多项式，\(C_n^{\left(\alpha\right)}(x)\)。'
- en: The Gegenbauer polynomials are orthogonal on \([-1, 1]\) with respect to the
    weight \(\left(1-x^2\right)^{\alpha-\frac{1}{2}}\).
  id: totrans-2016
  prefs: []
  type: TYPE_NORMAL
  zh: 根据权重 \(\left(1-x^2\right)^{\alpha-\frac{1}{2}}\) 在区间 \([-1, 1]\) 上与 Gegenbauer
    多项式正交。
- en: Examples
  id: totrans-2017
  prefs: []
  type: TYPE_NORMAL
  zh: 举例
- en: '[PRE408]'
  id: totrans-2018
  prefs: []
  type: TYPE_PRE
  zh: '[PRE408]'
- en: '[PRE409]'
  id: totrans-2019
  prefs: []
  type: TYPE_PRE
  zh: '[PRE409]'
- en: '[PRE410]'
  id: totrans-2020
  prefs: []
  type: TYPE_PRE
  zh: '[PRE410]'
- en: '[PRE411]'
  id: totrans-2021
  prefs: []
  type: TYPE_PRE
  zh: '[PRE411]'
- en: '[PRE412]'
  id: totrans-2022
  prefs: []
  type: TYPE_PRE
  zh: '[PRE412]'
- en: See also
  id: totrans-2023
  prefs: []
  type: TYPE_NORMAL
  zh: 亦参见
- en: '[`jacobi`](#sympy.functions.special.polynomials.jacobi "sympy.functions.special.polynomials.jacobi"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.hermite_prob_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_prob_poly
    "sympy.polys.orthopolys.hermite_prob_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
  id: totrans-2024
  prefs: []
  type: TYPE_NORMAL
  zh: '[`jacobi`](#sympy.functions.special.polynomials.jacobi "sympy.functions.special.polynomials.jacobi"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.hermite_prob_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_prob_poly
    "sympy.polys.orthopolys.hermite_prob_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
- en: References
  id: totrans-2025
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R500](#id160)]'
  id: totrans-2026
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R500](#id160)]'
- en: '[https://en.wikipedia.org/wiki/Gegenbauer_polynomials](https://en.wikipedia.org/wiki/Gegenbauer_polynomials)'
  id: totrans-2027
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Gegenbauer_polynomials](https://en.wikipedia.org/wiki/Gegenbauer_polynomials)'
- en: '[[R501](#id161)]'
  id: totrans-2028
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R501](#id161)]'
- en: '[https://mathworld.wolfram.com/GegenbauerPolynomial.html](https://mathworld.wolfram.com/GegenbauerPolynomial.html)'
  id: totrans-2029
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/GegenbauerPolynomial.html](https://mathworld.wolfram.com/GegenbauerPolynomial.html)'
- en: '[[R502](#id162)]'
  id: totrans-2030
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R502](#id162)]'
- en: '[https://functions.wolfram.com/Polynomials/GegenbauerC3/](https://functions.wolfram.com/Polynomials/GegenbauerC3/)'
  id: totrans-2031
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Polynomials/GegenbauerC3/](https://functions.wolfram.com/Polynomials/GegenbauerC3/)'
- en: Chebyshev Polynomials
  id: totrans-2032
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 切比雪夫多项式
- en: '[PRE413]'
  id: totrans-2033
  prefs: []
  type: TYPE_PRE
  zh: '[PRE413]'
- en: Chebyshev polynomial of the first kind, \(T_n(x)\).
  id: totrans-2034
  prefs: []
  type: TYPE_NORMAL
  zh: 第一类切比雪夫多项式，\(T_n(x)\)。
- en: Explanation
  id: totrans-2035
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: '`chebyshevt(n, x)` gives the \(n\)th Chebyshev polynomial (of the first kind)
    in \(x\), \(T_n(x)\).'
  id: totrans-2036
  prefs: []
  type: TYPE_NORMAL
  zh: '`chebyshevt(n, x)` 在\(x\)处给出第\(n\)个切比雪夫多项式（第一类），记为\(T_n(x)\)。'
- en: The Chebyshev polynomials of the first kind are orthogonal on \([-1, 1]\) with
    respect to the weight \(\frac{1}{\sqrt{1-x^2}}\).
  id: totrans-2037
  prefs: []
  type: TYPE_NORMAL
  zh: 第一类切比雪夫多项式在\([-1, 1]\)上相对于权重\(\frac{1}{\sqrt{1-x^2}}\)是正交的。
- en: Examples
  id: totrans-2038
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE414]'
  id: totrans-2039
  prefs: []
  type: TYPE_PRE
  zh: '[PRE414]'
- en: '[PRE415]'
  id: totrans-2040
  prefs: []
  type: TYPE_PRE
  zh: '[PRE415]'
- en: '[PRE416]'
  id: totrans-2041
  prefs: []
  type: TYPE_PRE
  zh: '[PRE416]'
- en: '[PRE417]'
  id: totrans-2042
  prefs: []
  type: TYPE_PRE
  zh: '[PRE417]'
- en: See also
  id: totrans-2043
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`jacobi`](#sympy.functions.special.polynomials.jacobi "sympy.functions.special.polynomials.jacobi"),
    [`gegenbauer`](#sympy.functions.special.polynomials.gegenbauer "sympy.functions.special.polynomials.gegenbauer"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.hermite_prob_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_prob_poly
    "sympy.polys.orthopolys.hermite_prob_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
  id: totrans-2044
  prefs: []
  type: TYPE_NORMAL
  zh: '[`jacobi`](#sympy.functions.special.polynomials.jacobi "sympy.functions.special.polynomials.jacobi"),
    [`gegenbauer`](#sympy.functions.special.polynomials.gegenbauer "sympy.functions.special.polynomials.gegenbauer"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.hermite_prob_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_prob_poly
    "sympy.polys.orthopolys.hermite_prob_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
- en: References
  id: totrans-2045
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R503](#id163)]'
  id: totrans-2046
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R503](#id163)]'
- en: '[https://en.wikipedia.org/wiki/Chebyshev_polynomial](https://en.wikipedia.org/wiki/Chebyshev_polynomial)'
  id: totrans-2047
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Chebyshev_polynomial](https://en.wikipedia.org/wiki/Chebyshev_polynomial)的[切比雪夫多项式](https://en.wikipedia.org/wiki/Chebyshev_polynomial)'
- en: '[[R504](#id164)]'
  id: totrans-2048
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R504](#id164)]'
- en: '[https://mathworld.wolfram.com/ChebyshevPolynomialoftheFirstKind.html](https://mathworld.wolfram.com/ChebyshevPolynomialoftheFirstKind.html)'
  id: totrans-2049
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/ChebyshevPolynomialoftheFirstKind.html](https://mathworld.wolfram.com/ChebyshevPolynomialoftheFirstKind.html)'
- en: '[[R505](#id165)]'
  id: totrans-2050
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R505](#id165)]'
- en: '[https://mathworld.wolfram.com/ChebyshevPolynomialoftheSecondKind.html](https://mathworld.wolfram.com/ChebyshevPolynomialoftheSecondKind.html)'
  id: totrans-2051
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/ChebyshevPolynomialoftheSecondKind.html](https://mathworld.wolfram.com/ChebyshevPolynomialoftheSecondKind.html)'
- en: '[[R506](#id166)]'
  id: totrans-2052
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R506](#id166)]'
- en: '[https://functions.wolfram.com/Polynomials/ChebyshevT/](https://functions.wolfram.com/Polynomials/ChebyshevT/)'
  id: totrans-2053
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Polynomials/ChebyshevT/](https://functions.wolfram.com/Polynomials/ChebyshevT/)'
- en: '[[R507](#id167)]'
  id: totrans-2054
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R507](#id167)]'
- en: '[https://functions.wolfram.com/Polynomials/ChebyshevU/](https://functions.wolfram.com/Polynomials/ChebyshevU/)'
  id: totrans-2055
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Polynomials/ChebyshevU/](https://functions.wolfram.com/Polynomials/ChebyshevU/)'
- en: '[PRE418]'
  id: totrans-2056
  prefs: []
  type: TYPE_PRE
  zh: '[PRE418]'
- en: Chebyshev polynomial of the second kind, \(U_n(x)\).
  id: totrans-2057
  prefs: []
  type: TYPE_NORMAL
  zh: 第二类切比雪夫多项式，\(U_n(x)\)。
- en: Explanation
  id: totrans-2058
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: '`chebyshevu(n, x)` gives the \(n\)th Chebyshev polynomial of the second kind
    in x, \(U_n(x)\).'
  id: totrans-2059
  prefs: []
  type: TYPE_NORMAL
  zh: '`chebyshevu(n, x)` 给出\(n\)阶第二类切比雪夫多项式在\(x\)处的值，记作\(U_n(x)\)。'
- en: The Chebyshev polynomials of the second kind are orthogonal on \([-1, 1]\) with
    respect to the weight \(\sqrt{1-x^2}\).
  id: totrans-2060
  prefs: []
  type: TYPE_NORMAL
  zh: 第二类切比雪夫多项式在\([-1, 1]\)上以权重\(\sqrt{1-x^2}\)正交。
- en: Examples
  id: totrans-2061
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE419]'
  id: totrans-2062
  prefs: []
  type: TYPE_PRE
  zh: '[PRE419]'
- en: '[PRE420]'
  id: totrans-2063
  prefs: []
  type: TYPE_PRE
  zh: '[PRE420]'
- en: '[PRE421]'
  id: totrans-2064
  prefs: []
  type: TYPE_PRE
  zh: '[PRE421]'
- en: '[PRE422]'
  id: totrans-2065
  prefs: []
  type: TYPE_PRE
  zh: '[PRE422]'
- en: See also
  id: totrans-2066
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`jacobi`](#sympy.functions.special.polynomials.jacobi "sympy.functions.special.polynomials.jacobi"),
    [`gegenbauer`](#sympy.functions.special.polynomials.gegenbauer "sympy.functions.special.polynomials.gegenbauer"),
    [`chebyshevt`](#sympy.functions.special.polynomials.chebyshevt "sympy.functions.special.polynomials.chebyshevt"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.hermite_prob_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_prob_poly
    "sympy.polys.orthopolys.hermite_prob_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
  id: totrans-2067
  prefs: []
  type: TYPE_NORMAL
  zh: '[`jacobi`](#sympy.functions.special.polynomials.jacobi "sympy.functions.special.polynomials.jacobi"),
    [`gegenbauer`](#sympy.functions.special.polynomials.gegenbauer "sympy.functions.special.polynomials.gegenbauer"),
    [`chebyshevt`](#sympy.functions.special.polynomials.chebyshevt "sympy.functions.special.polynomials.chebyshevt"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.hermite_prob_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_prob_poly
    "sympy.polys.orthopolys.hermite_prob_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
- en: References
  id: totrans-2068
  prefs: []
  type: TYPE_NORMAL
  zh: References
- en: '[[R508](#id168)]'
  id: totrans-2069
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R508](#id168)]'
- en: '[https://en.wikipedia.org/wiki/Chebyshev_polynomial](https://en.wikipedia.org/wiki/Chebyshev_polynomial)'
  id: totrans-2070
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Chebyshev_polynomial](https://en.wikipedia.org/wiki/Chebyshev_polynomial)  '
- en: '[[R509](#id169)]'
  id: totrans-2071
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R509](#id169)]'
- en: '[https://mathworld.wolfram.com/ChebyshevPolynomialoftheFirstKind.html](https://mathworld.wolfram.com/ChebyshevPolynomialoftheFirstKind.html)'
  id: totrans-2072
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/ChebyshevPolynomialoftheFirstKind.html](https://mathworld.wolfram.com/ChebyshevPolynomialoftheFirstKind.html)  '
- en: '[[R510](#id170)]'
  id: totrans-2073
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R510](#id170)]'
- en: '[https://mathworld.wolfram.com/ChebyshevPolynomialoftheSecondKind.html](https://mathworld.wolfram.com/ChebyshevPolynomialoftheSecondKind.html)'
  id: totrans-2074
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/ChebyshevPolynomialoftheSecondKind.html](https://mathworld.wolfram.com/ChebyshevPolynomialoftheSecondKind.html)'
- en: '[[R511](#id171)]'
  id: totrans-2075
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R511](#id171)]'
- en: '[https://functions.wolfram.com/Polynomials/ChebyshevT/](https://functions.wolfram.com/Polynomials/ChebyshevT/)'
  id: totrans-2076
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Polynomials/ChebyshevT/](https://functions.wolfram.com/Polynomials/ChebyshevT/)'
- en: '[[R512](#id172)]'
  id: totrans-2077
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R512](#id172)]'
- en: '[https://functions.wolfram.com/Polynomials/ChebyshevU/](https://functions.wolfram.com/Polynomials/ChebyshevU/)'
  id: totrans-2078
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Polynomials/ChebyshevU/](https://functions.wolfram.com/Polynomials/ChebyshevU/)'
- en: '[PRE423]'
  id: totrans-2079
  prefs: []
  type: TYPE_PRE
  zh: '[PRE423]'
- en: '`chebyshev_root(n, k)` returns the \(k\)th root (indexed from zero) of the
    \(n\)th Chebyshev polynomial of the first kind; that is, if \(0 \le k < n\), `chebyshevt(n,
    chebyshevt_root(n, k)) == 0`.'
  id: totrans-2080
  prefs: []
  type: TYPE_NORMAL
  zh: '`chebyshev_root(n, k)` 返回第一类Chebyshev多项式的第\(n\)个Chebyshev多项式的第\(k\)个根（从零开始索引）；即，如果\(0
    \le k < n\)，则 `chebyshevt(n, chebyshevt_root(n, k)) == 0`。'
- en: Examples
  id: totrans-2081
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE424]'
  id: totrans-2082
  prefs: []
  type: TYPE_PRE
  zh: '[PRE424]'
- en: See also
  id: totrans-2083
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`jacobi`](#sympy.functions.special.polynomials.jacobi "sympy.functions.special.polynomials.jacobi"),
    [`gegenbauer`](#sympy.functions.special.polynomials.gegenbauer "sympy.functions.special.polynomials.gegenbauer"),
    [`chebyshevt`](#sympy.functions.special.polynomials.chebyshevt "sympy.functions.special.polynomials.chebyshevt"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.hermite_prob_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_prob_poly
    "sympy.polys.orthopolys.hermite_prob_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
  id: totrans-2084
  prefs: []
  type: TYPE_NORMAL
  zh: '[`jacobi`](#sympy.functions.special.polynomials.jacobi "sympy.functions.special.polynomials.jacobi"),
    [`gegenbauer`](#sympy.functions.special.polynomials.gegenbauer "sympy.functions.special.polynomials.gegenbauer"),
    [`chebyshevt`](#sympy.functions.special.polynomials.chebyshevt "sympy.functions.special.polynomials.chebyshevt"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.hermite_prob_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_prob_poly
    "sympy.polys.orthopolys.hermite_prob_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
- en: '[PRE425]'
  id: totrans-2085
  prefs: []
  type: TYPE_PRE
  zh: '[PRE425]'
- en: '`chebyshevu_root(n, k)` returns the \(k\)th root (indexed from zero) of the
    \(n\)th Chebyshev polynomial of the second kind; that is, if \(0 \le k < n\),
    `chebyshevu(n, chebyshevu_root(n, k)) == 0`.'
  id: totrans-2086
  prefs: []
  type: TYPE_NORMAL
  zh: '`chebyshevu_root(n, k)` 返回第 \(n\) 个第二类Chebyshev多项式的第 \(k\) 个根（从零开始索引）；即，如果
    \(0 \le k < n\)，则 `chebyshevu(n, chebyshevu_root(n, k)) == 0`。'
- en: Examples
  id: totrans-2087
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE426]'
  id: totrans-2088
  prefs: []
  type: TYPE_PRE
  zh: '[PRE426]'
- en: See also
  id: totrans-2089
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`chebyshevt`](#sympy.functions.special.polynomials.chebyshevt "sympy.functions.special.polynomials.chebyshevt"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.hermite_prob_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_prob_poly
    "sympy.polys.orthopolys.hermite_prob_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
  id: totrans-2090
  prefs: []
  type: TYPE_NORMAL
  zh: '[`chebyshevt`](#sympy.functions.special.polynomials.chebyshevt "sympy.functions.special.polynomials.chebyshevt"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.hermite_prob_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_prob_poly
    "sympy.polys.orthopolys.hermite_prob_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
- en: Legendre Polynomials
  id: totrans-2091
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Legendre多项式
- en: '[PRE427]'
  id: totrans-2092
  prefs: []
  type: TYPE_PRE
  zh: '[PRE427]'
- en: '`legendre(n, x)` gives the \(n\)th Legendre polynomial of \(x\), \(P_n(x)\)'
  id: totrans-2093
  prefs: []
  type: TYPE_NORMAL
  zh: '`legendre(n, x)` 给出 \(x\) 的第 \(n\) 个Legendre多项式，\(P_n(x)\)'
- en: Explanation
  id: totrans-2094
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: The Legendre polynomials are orthogonal on \([-1, 1]\) with respect to the constant
    weight 1\. They satisfy \(P_n(1) = 1\) for all \(n\); further, \(P_n\) is odd
    for odd \(n\) and even for even \(n\).
  id: totrans-2095
  prefs: []
  type: TYPE_NORMAL
  zh: Legendre多项式在\([-1, 1]\)上相对于常数权重 1 是正交的。它们满足 \(P_n(1) = 1\) 对于所有 \(n\)；此外，对于奇数
    \(n\)，\(P_n\) 是奇函数，对于偶数 \(n\)，\(P_n\) 是偶函数。
- en: Examples
  id: totrans-2096
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE428]'
  id: totrans-2097
  prefs: []
  type: TYPE_PRE
  zh: '[PRE428]'
- en: See also
  id: totrans-2098
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`jacobi`](#sympy.functions.special.polynomials.jacobi "sympy.functions.special.polynomials.jacobi"),
    [`gegenbauer`](#sympy.functions.special.polynomials.gegenbauer "sympy.functions.special.polynomials.gegenbauer"),
    [`chebyshevt`](#sympy.functions.special.polynomials.chebyshevt "sympy.functions.special.polynomials.chebyshevt"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.hermite_prob_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_prob_poly
    "sympy.polys.orthopolys.hermite_prob_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
  id: totrans-2099
  prefs: []
  type: TYPE_NORMAL
  zh: '[`jacobi`](#sympy.functions.special.polynomials.jacobi "sympy.functions.special.polynomials.jacobi"),
    [`gegenbauer`](#sympy.functions.special.polynomials.gegenbauer "sympy.functions.special.polynomials.gegenbauer"),
    [`chebyshevt`](#sympy.functions.special.polynomials.chebyshevt "sympy.functions.special.polynomials.chebyshevt"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.hermite_prob_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_prob_poly
    "sympy.polys.orthopolys.hermite_prob_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
- en: References
  id: totrans-2100
  prefs: []
  type: TYPE_NORMAL
  zh: References
- en: '[[R513](#id173)]'
  id: totrans-2101
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R513](#id173)]'
- en: '[https://en.wikipedia.org/wiki/Legendre_polynomial](https://en.wikipedia.org/wiki/Legendre_polynomial)'
  id: totrans-2102
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Legendre_polynomial](https://en.wikipedia.org/wiki/Legendre_polynomial)'
- en: '[[R514](#id174)]'
  id: totrans-2103
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R514](#id174)]'
- en: '[https://mathworld.wolfram.com/LegendrePolynomial.html](https://mathworld.wolfram.com/LegendrePolynomial.html)'
  id: totrans-2104
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/LegendrePolynomial.html](https://mathworld.wolfram.com/LegendrePolynomial.html)'
- en: '[[R515](#id175)]'
  id: totrans-2105
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R515](#id175)]'
- en: '[https://functions.wolfram.com/Polynomials/LegendreP/](https://functions.wolfram.com/Polynomials/LegendreP/)'
  id: totrans-2106
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Polynomials/LegendreP/](https://functions.wolfram.com/Polynomials/LegendreP/)'
- en: '[[R516](#id176)]'
  id: totrans-2107
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R516](#id176)]'
- en: '[https://functions.wolfram.com/Polynomials/LegendreP2/](https://functions.wolfram.com/Polynomials/LegendreP2/)'
  id: totrans-2108
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Polynomials/LegendreP2/](https://functions.wolfram.com/Polynomials/LegendreP2/)'
- en: '[PRE429]'
  id: totrans-2109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE429]'
- en: '`assoc_legendre(n, m, x)` gives \(P_n^m(x)\), where \(n\) and \(m\) are the
    degree and order or an expression which is related to the nth order Legendre polynomial,
    \(P_n(x)\) in the following manner:'
  id: totrans-2110
  prefs: []
  type: TYPE_NORMAL
  zh: '`assoc_legendre(n, m, x)` 给出\(P_n^m(x)\)，其中\(n\)和\(m\)分别是次数和顺序或与n阶Legendre多项式\(P_n(x)\)相关的表达式方式：'
- en: \[P_n^m(x) = (-1)^m (1 - x^2)^{\frac{m}{2}} \frac{\mathrm{d}^m P_n(x)}{\mathrm{d}
    x^m}\]
  id: totrans-2111
  prefs: []
  type: TYPE_NORMAL
  zh: \[P_n^m(x) = (-1)^m (1 - x^2)^{\frac{m}{2}} \frac{\mathrm{d}^m P_n(x)}{\mathrm{d}
    x^m}\]
- en: Explanation
  id: totrans-2112
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'Associated Legendre polynomials are orthogonal on \([-1, 1]\) with:'
  id: totrans-2113
  prefs: []
  type: TYPE_NORMAL
  zh: 相关的Legendre多项式在\([-1, 1]\)上正交，具有：
- en: weight \(= 1\) for the same \(m\) and different \(n\).
  id: totrans-2114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于相同的\(m\)和不同的\(n\)，权重\(= 1\)。
- en: weight \(= \frac{1}{1-x^2}\) for the same \(n\) and different \(m\).
  id: totrans-2115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于相同的\(n\)和不同的\(m\)，权重\(= \frac{1}{1-x^2}\)。
- en: Examples
  id: totrans-2116
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE430]'
  id: totrans-2117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE430]'
- en: See also
  id: totrans-2118
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`jacobi`](#sympy.functions.special.polynomials.jacobi "sympy.functions.special.polynomials.jacobi"),
    [`gegenbauer`](#sympy.functions.special.polynomials.gegenbauer "sympy.functions.special.polynomials.gegenbauer"),
    [`chebyshevt`](#sympy.functions.special.polynomials.chebyshevt "sympy.functions.special.polynomials.chebyshevt"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.hermite_prob_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_prob_poly
    "sympy.polys.orthopolys.hermite_prob_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
  id: totrans-2119
  prefs: []
  type: TYPE_NORMAL
  zh: '[`jacobi`](#sympy.functions.special.polynomials.jacobi "sympy.functions.special.polynomials.jacobi"),
    [`gegenbauer`](#sympy.functions.special.polynomials.gegenbauer "sympy.functions.special.polynomials.gegenbauer"),
    [`chebyshevt`](#sympy.functions.special.polynomials.chebyshevt "sympy.functions.special.polynomials.chebyshevt"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.hermite_prob_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_prob_poly
    "sympy.polys.orthopolys.hermite_prob_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
- en: References
  id: totrans-2120
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R517](#id177)]'
  id: totrans-2121
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R517](#id177)]'
- en: '[https://en.wikipedia.org/wiki/Associated_Legendre_polynomials](https://en.wikipedia.org/wiki/Associated_Legendre_polynomials)'
  id: totrans-2122
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Associated_Legendre_polynomials](https://en.wikipedia.org/wiki/Associated_Legendre_polynomials)'
- en: '[[R518](#id178)]'
  id: totrans-2123
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R518](#id178)]'
- en: '[https://mathworld.wolfram.com/LegendrePolynomial.html](https://mathworld.wolfram.com/LegendrePolynomial.html)'
  id: totrans-2124
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/LegendrePolynomial.html](https://mathworld.wolfram.com/LegendrePolynomial.html)'
- en: '[[R519](#id179)]'
  id: totrans-2125
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R519](#id179)]'
- en: '[https://functions.wolfram.com/Polynomials/LegendreP/](https://functions.wolfram.com/Polynomials/LegendreP/)'
  id: totrans-2126
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Polynomials/LegendreP/](https://functions.wolfram.com/Polynomials/LegendreP/)'
- en: '[[R520](#id180)]'
  id: totrans-2127
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R520](#id180)]'
- en: '[https://functions.wolfram.com/Polynomials/LegendreP2/](https://functions.wolfram.com/Polynomials/LegendreP2/)'
  id: totrans-2128
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Polynomials/LegendreP2/](https://functions.wolfram.com/Polynomials/LegendreP2/)'
- en: Hermite Polynomials
  id: totrans-2129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 厄米多项式
- en: '[PRE431]'
  id: totrans-2130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE431]'
- en: '`hermite(n, x)` gives the \(n\)th Hermite polynomial in \(x\), \(H_n(x)\).'
  id: totrans-2131
  prefs: []
  type: TYPE_NORMAL
  zh: '`hermite(n, x)`给出\(x\)中的第\(n\)个厄米多项式，\(H_n(x)\)。'
- en: Explanation
  id: totrans-2132
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The Hermite polynomials are orthogonal on \((-\infty, \infty)\) with respect
    to the weight \(\exp\left(-x^2\right)\).
  id: totrans-2133
  prefs: []
  type: TYPE_NORMAL
  zh: 厄米特多项式在\((-\infty, \infty)\)上相对于权重\(\exp\left(-x^2\right)\)正交。
- en: Examples
  id: totrans-2134
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE432]'
  id: totrans-2135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE432]'
- en: See also
  id: totrans-2136
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`jacobi`](#sympy.functions.special.polynomials.jacobi "sympy.functions.special.polynomials.jacobi"),
    [`gegenbauer`](#sympy.functions.special.polynomials.gegenbauer "sympy.functions.special.polynomials.gegenbauer"),
    [`chebyshevt`](#sympy.functions.special.polynomials.chebyshevt "sympy.functions.special.polynomials.chebyshevt"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.hermite_prob_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_prob_poly
    "sympy.polys.orthopolys.hermite_prob_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
  id: totrans-2137
  prefs: []
  type: TYPE_NORMAL
  zh: '[`jacobi`](#sympy.functions.special.polynomials.jacobi "sympy.functions.special.polynomials.jacobi"),
    [`gegenbauer`](#sympy.functions.special.polynomials.gegenbauer "sympy.functions.special.polynomials.gegenbauer"),
    [`chebyshevt`](#sympy.functions.special.polynomials.chebyshevt "sympy.functions.special.polynomials.chebyshevt"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.hermite_prob_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_prob_poly
    "sympy.polys.orthopolys.hermite_prob_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
- en: References
  id: totrans-2138
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R521](#id181)]'
  id: totrans-2139
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R521](#id181)]'
- en: '[https://en.wikipedia.org/wiki/Hermite_polynomial](https://en.wikipedia.org/wiki/Hermite_polynomial)'
  id: totrans-2140
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Hermite_polynomial](https://en.wikipedia.org/wiki/Hermite_polynomial)'
- en: '[[R522](#id182)]'
  id: totrans-2141
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R522](#id182)]'
- en: '[https://mathworld.wolfram.com/HermitePolynomial.html](https://mathworld.wolfram.com/HermitePolynomial.html)'
  id: totrans-2142
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/HermitePolynomial.html](https://mathworld.wolfram.com/HermitePolynomial.html)'
- en: '[[R523](#id183)]'
  id: totrans-2143
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R523](#id183)]'
- en: '[https://functions.wolfram.com/Polynomials/HermiteH/](https://functions.wolfram.com/Polynomials/HermiteH/)'
  id: totrans-2144
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Polynomials/HermiteH/](https://functions.wolfram.com/Polynomials/HermiteH/)'
- en: '[PRE433]'
  id: totrans-2145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE433]'
- en: '`hermite_prob(n, x)` gives the \(n\)th probabilist’s Hermite polynomial in
    \(x\), \(He_n(x)\).'
  id: totrans-2146
  prefs: []
  type: TYPE_NORMAL
  zh: '`hermite_prob(n, x)` 给出第 \(n\) 个概率厄米多项式 \(He_n(x)\)。'
- en: Explanation
  id: totrans-2147
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The probabilist’s Hermite polynomials are orthogonal on \((-\infty, \infty)\)
    with respect to the weight \(\exp\left(-\frac{x^2}{2}\right)\). They are monic
    polynomials, related to the plain Hermite polynomials ([`hermite`](#sympy.functions.special.polynomials.hermite
    "sympy.functions.special.polynomials.hermite")) by
  id: totrans-2148
  prefs: []
  type: TYPE_NORMAL
  zh: 概率学家的 Hermite 多项式在 \((-\infty, \infty)\) 范围内，相对于权重 \(\exp\left(-\frac{x^2}{2}\right)\)
    是正交的。它们是首一多项式，与普通 Hermite 多项式 ([`hermite`](#sympy.functions.special.polynomials.hermite
    "sympy.functions.special.polynomials.hermite")) 相关。
- en: \[He_n(x) = 2^{-n/2} H_n(x/\sqrt{2})\]
  id: totrans-2149
  prefs: []
  type: TYPE_NORMAL
  zh: \[He_n(x) = 2^{-n/2} H_n(x/\sqrt{2})\]
- en: Examples
  id: totrans-2150
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE434]'
  id: totrans-2151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE434]'
- en: 'The sum of absolute values of coefficients of \(He_n(x)\) is the number of
    matchings in the complete graph \(K_n\) or telephone number, A000085 in the OEIS:'
  id: totrans-2152
  prefs: []
  type: TYPE_NORMAL
  zh: \(He_n(x)\)的系数绝对值之和等于完全图 \(K_n\) 或电话号码中的匹配数，OEIS中的 A000085：
- en: '[PRE435]'
  id: totrans-2153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE435]'
- en: See also
  id: totrans-2154
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`jacobi`](#sympy.functions.special.polynomials.jacobi "sympy.functions.special.polynomials.jacobi"),
    [`gegenbauer`](#sympy.functions.special.polynomials.gegenbauer "sympy.functions.special.polynomials.gegenbauer"),
    [`chebyshevt`](#sympy.functions.special.polynomials.chebyshevt "sympy.functions.special.polynomials.chebyshevt"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.hermite_prob_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_prob_poly
    "sympy.polys.orthopolys.hermite_prob_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
  id: totrans-2155
  prefs: []
  type: TYPE_NORMAL
  zh: '[`jacobi`](#sympy.functions.special.polynomials.jacobi "sympy.functions.special.polynomials.jacobi"),
    [`gegenbauer`](#sympy.functions.special.polynomials.gegenbauer "sympy.functions.special.polynomials.gegenbauer"),
    [`chebyshevt`](#sympy.functions.special.polynomials.chebyshevt "sympy.functions.special.polynomials.chebyshevt"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.hermite_prob_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_prob_poly
    "sympy.polys.orthopolys.hermite_prob_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
- en: References
  id: totrans-2156
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R524](#id184)]'
  id: totrans-2157
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R524](#id184)]'
- en: '[https://en.wikipedia.org/wiki/Hermite_polynomial](https://en.wikipedia.org/wiki/Hermite_polynomial)'
  id: totrans-2158
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Hermite_polynomial](https://en.wikipedia.org/wiki/Hermite_polynomial)'
- en: '[[R525](#id185)]'
  id: totrans-2159
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R525](#id185)]'
- en: '[https://mathworld.wolfram.com/HermitePolynomial.html](https://mathworld.wolfram.com/HermitePolynomial.html)'
  id: totrans-2160
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/HermitePolynomial.html](https://mathworld.wolfram.com/HermitePolynomial.html)'
- en: Laguerre Polynomials
  id: totrans-2161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 拉盖尔多项式
- en: '[PRE436]'
  id: totrans-2162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE436]'
- en: Returns the \(n\)th Laguerre polynomial in \(x\), \(L_n(x)\).
  id: totrans-2163
  prefs: []
  type: TYPE_NORMAL
  zh: 返回在\(x\)中的第\(n\)个拉盖尔多项式，\(L_n(x)\)。
- en: 'Parameters:'
  id: totrans-2164
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : int'
  id: totrans-2165
  prefs: []
  type: TYPE_NORMAL
  zh: '**n** : 整数'
- en: Degree of Laguerre polynomial. Must be \(n \ge 0\).
  id: totrans-2166
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 拉盖尔多项式的次数。必须满足\(n \ge 0\)。
- en: Examples
  id: totrans-2167
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE437]'
  id: totrans-2168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE437]'
- en: '[PRE438]'
  id: totrans-2169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE438]'
- en: '[PRE439]'
  id: totrans-2170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE439]'
- en: See also
  id: totrans-2171
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`jacobi`](#sympy.functions.special.polynomials.jacobi "sympy.functions.special.polynomials.jacobi"),
    [`gegenbauer`](#sympy.functions.special.polynomials.gegenbauer "sympy.functions.special.polynomials.gegenbauer"),
    [`chebyshevt`](#sympy.functions.special.polynomials.chebyshevt "sympy.functions.special.polynomials.chebyshevt"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.hermite_prob_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_prob_poly
    "sympy.polys.orthopolys.hermite_prob_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
  id: totrans-2172
  prefs: []
  type: TYPE_NORMAL
  zh: '[`jacobi`](#sympy.functions.special.polynomials.jacobi "sympy.functions.special.polynomials.jacobi"),
    [`gegenbauer`](#sympy.functions.special.polynomials.gegenbauer "sympy.functions.special.polynomials.gegenbauer"),
    [`chebyshevt`](#sympy.functions.special.polynomials.chebyshevt "sympy.functions.special.polynomials.chebyshevt"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`assoc_laguerre`](#sympy.functions.special.polynomials.assoc_laguerre "sympy.functions.special.polynomials.assoc_laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.hermite_prob_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_prob_poly
    "sympy.polys.orthopolys.hermite_prob_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
- en: References
  id: totrans-2173
  prefs: []
  type: TYPE_NORMAL
  zh: 参考资料
- en: '[[R526](#id186)]'
  id: totrans-2174
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R526](#id186)]'
- en: '[https://en.wikipedia.org/wiki/Laguerre_polynomial](https://en.wikipedia.org/wiki/Laguerre_polynomial)'
  id: totrans-2175
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Laguerre_polynomial](https://en.wikipedia.org/wiki/Laguerre_polynomial)'
- en: '[[R527](#id187)]'
  id: totrans-2176
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R527](#id187)]'
- en: '[https://mathworld.wolfram.com/LaguerrePolynomial.html](https://mathworld.wolfram.com/LaguerrePolynomial.html)'
  id: totrans-2177
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/LaguerrePolynomial.html](https://mathworld.wolfram.com/LaguerrePolynomial.html)'
- en: '[[R528](#id188)]'
  id: totrans-2178
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R528](#id188)]'
- en: '[https://functions.wolfram.com/Polynomials/LaguerreL/](https://functions.wolfram.com/Polynomials/LaguerreL/)'
  id: totrans-2179
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Polynomials/LaguerreL/](https://functions.wolfram.com/Polynomials/LaguerreL/)'
- en: '[[R529](#id189)]'
  id: totrans-2180
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R529](#id189)]'
- en: '[https://functions.wolfram.com/Polynomials/LaguerreL3/](https://functions.wolfram.com/Polynomials/LaguerreL3/)'
  id: totrans-2181
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Polynomials/LaguerreL3/](https://functions.wolfram.com/Polynomials/LaguerreL3/)'
- en: '[PRE440]'
  id: totrans-2182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE440]'
- en: Returns the \(n\)th generalized Laguerre polynomial in \(x\), \(L_n(x)\).
  id: totrans-2183
  prefs: []
  type: TYPE_NORMAL
  zh: 返回\(x\)中第\(n\)个广义Laguerre多项式，\(L_n(x)\)。
- en: 'Parameters:'
  id: totrans-2184
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : int'
  id: totrans-2185
  prefs: []
  type: TYPE_NORMAL
  zh: '**n** : int'
- en: Degree of Laguerre polynomial. Must be \(n \ge 0\).
  id: totrans-2186
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Laguerre多项式的次数。必须满足\(n \ge 0\)。
- en: '**alpha** : Expr'
  id: totrans-2187
  prefs: []
  type: TYPE_NORMAL
  zh: '**alpha** : Expr'
- en: Arbitrary expression. For `alpha=0` regular Laguerre polynomials will be generated.
  id: totrans-2188
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 任意表达式。对于`alpha=0`，将生成常规的Laguerre多项式。
- en: Examples
  id: totrans-2189
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE441]'
  id: totrans-2190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE441]'
- en: '[PRE442]'
  id: totrans-2191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE442]'
- en: '[PRE443]'
  id: totrans-2192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE443]'
- en: '[PRE444]'
  id: totrans-2193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE444]'
- en: '[PRE445]'
  id: totrans-2194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE445]'
- en: '[PRE446]'
  id: totrans-2195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE446]'
- en: See also
  id: totrans-2196
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`jacobi`](#sympy.functions.special.polynomials.jacobi "sympy.functions.special.polynomials.jacobi"),
    [`gegenbauer`](#sympy.functions.special.polynomials.gegenbauer "sympy.functions.special.polynomials.gegenbauer"),
    [`chebyshevt`](#sympy.functions.special.polynomials.chebyshevt "sympy.functions.special.polynomials.chebyshevt"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.hermite_prob_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_prob_poly
    "sympy.polys.orthopolys.hermite_prob_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
  id: totrans-2197
  prefs: []
  type: TYPE_NORMAL
  zh: '[`jacobi`](#sympy.functions.special.polynomials.jacobi "sympy.functions.special.polynomials.jacobi"),
    [`gegenbauer`](#sympy.functions.special.polynomials.gegenbauer "sympy.functions.special.polynomials.gegenbauer"),
    [`chebyshevt`](#sympy.functions.special.polynomials.chebyshevt "sympy.functions.special.polynomials.chebyshevt"),
    [`chebyshevt_root`](#sympy.functions.special.polynomials.chebyshevt_root "sympy.functions.special.polynomials.chebyshevt_root"),
    [`chebyshevu`](#sympy.functions.special.polynomials.chebyshevu "sympy.functions.special.polynomials.chebyshevu"),
    [`chebyshevu_root`](#sympy.functions.special.polynomials.chebyshevu_root "sympy.functions.special.polynomials.chebyshevu_root"),
    [`legendre`](#sympy.functions.special.polynomials.legendre "sympy.functions.special.polynomials.legendre"),
    [`assoc_legendre`](#sympy.functions.special.polynomials.assoc_legendre "sympy.functions.special.polynomials.assoc_legendre"),
    [`hermite`](#sympy.functions.special.polynomials.hermite "sympy.functions.special.polynomials.hermite"),
    [`hermite_prob`](#sympy.functions.special.polynomials.hermite_prob "sympy.functions.special.polynomials.hermite_prob"),
    [`laguerre`](#sympy.functions.special.polynomials.laguerre "sympy.functions.special.polynomials.laguerre"),
    [`sympy.polys.orthopolys.jacobi_poly`](../polys/reference.html#sympy.polys.orthopolys.jacobi_poly
    "sympy.polys.orthopolys.jacobi_poly"), [`sympy.polys.orthopolys.gegenbauer_poly`](../polys/reference.html#sympy.polys.orthopolys.gegenbauer_poly
    "sympy.polys.orthopolys.gegenbauer_poly"), [`sympy.polys.orthopolys.chebyshevt_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevt_poly
    "sympy.polys.orthopolys.chebyshevt_poly"), [`sympy.polys.orthopolys.chebyshevu_poly`](../polys/reference.html#sympy.polys.orthopolys.chebyshevu_poly
    "sympy.polys.orthopolys.chebyshevu_poly"), [`sympy.polys.orthopolys.hermite_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_poly
    "sympy.polys.orthopolys.hermite_poly"), [`sympy.polys.orthopolys.hermite_prob_poly`](../polys/reference.html#sympy.polys.orthopolys.hermite_prob_poly
    "sympy.polys.orthopolys.hermite_prob_poly"), [`sympy.polys.orthopolys.legendre_poly`](../polys/reference.html#sympy.polys.orthopolys.legendre_poly
    "sympy.polys.orthopolys.legendre_poly"), [`sympy.polys.orthopolys.laguerre_poly`](../polys/reference.html#sympy.polys.orthopolys.laguerre_poly
    "sympy.polys.orthopolys.laguerre_poly")'
- en: References
  id: totrans-2198
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R530](#id190)]'
  id: totrans-2199
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R530](#id190)]'
- en: '[https://en.wikipedia.org/wiki/Laguerre_polynomial#Generalized_Laguerre_polynomials](https://en.wikipedia.org/wiki/Laguerre_polynomial#Generalized_Laguerre_polynomials)'
  id: totrans-2200
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Laguerre_polynomial#Generalized_Laguerre_polynomials](https://en.wikipedia.org/wiki/Laguerre_polynomial#Generalized_Laguerre_polynomials)'
- en: '[[R531](#id191)]'
  id: totrans-2201
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R531](#id191)]'
- en: '[https://mathworld.wolfram.com/AssociatedLaguerrePolynomial.html](https://mathworld.wolfram.com/AssociatedLaguerrePolynomial.html)'
  id: totrans-2202
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/AssociatedLaguerrePolynomial.html](https://mathworld.wolfram.com/AssociatedLaguerrePolynomial.html)'
- en: '[[R532](#id192)]'
  id: totrans-2203
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R532](#id192)]'
- en: '[https://functions.wolfram.com/Polynomials/LaguerreL/](https://functions.wolfram.com/Polynomials/LaguerreL/)'
  id: totrans-2204
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Polynomials/LaguerreL/](https://functions.wolfram.com/Polynomials/LaguerreL/)'
- en: '[[R533](#id193)]'
  id: totrans-2205
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R533](#id193)]'
- en: '[https://functions.wolfram.com/Polynomials/LaguerreL3/](https://functions.wolfram.com/Polynomials/LaguerreL3/)'
  id: totrans-2206
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Polynomials/LaguerreL3/](https://functions.wolfram.com/Polynomials/LaguerreL3/)'
- en: Spherical Harmonics
  id: totrans-2207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 球谐函数
- en: '[PRE447]'
  id: totrans-2208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE447]'
- en: Spherical harmonics defined as
  id: totrans-2209
  prefs: []
  type: TYPE_NORMAL
  zh: 定义为球谐函数
- en: \[Y_n^m(\theta, \varphi) := \sqrt{\frac{(2n+1)(n-m)!}{4\pi(n+m)!}} \exp(i m
    \varphi) \mathrm{P}_n^m\left(\cos(\theta)\right)\]
  id: totrans-2210
  prefs: []
  type: TYPE_NORMAL
  zh: \[Y_n^m(\theta, \varphi) := \sqrt{\frac{(2n+1)(n-m)!}{4\pi(n+m)!}} \exp(i m
    \varphi) \mathrm{P}_n^m\left(\cos(\theta)\right)\]
- en: Explanation
  id: totrans-2211
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: '`Ynm()` gives the spherical harmonic function of order \(n\) and \(m\) in \(\theta\)
    and \(\varphi\), \(Y_n^m(\theta, \varphi)\). The four parameters are as follows:
    \(n \geq 0\) an integer and \(m\) an integer such that \(-n \leq m \leq n\) holds.
    The two angles are real-valued with \(\theta \in [0, \pi]\) and \(\varphi \in
    [0, 2\pi]\).'
  id: totrans-2212
  prefs: []
  type: TYPE_NORMAL
  zh: '`Ynm()` 给出在球坐标 \(\theta\) 和 \(\varphi\) 中的阶数为 \(n\) 和 \(m\) 的球谐函数，\(Y_n^m(\theta,
    \varphi)\)。这四个参数如下：\(n \geq 0\) 是整数，\(m\) 是整数满足 \(-n \leq m \leq n\)。这两个角度是实数，\(\theta
    \in [0, \pi]\)，\(\varphi \in [0, 2\pi]\)。'
- en: Examples
  id: totrans-2213
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE448]'
  id: totrans-2214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE448]'
- en: '[PRE449]'
  id: totrans-2215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE449]'
- en: 'Several symmetries are known, for the order:'
  id: totrans-2216
  prefs: []
  type: TYPE_NORMAL
  zh: 已知有多种对称性，例如：
- en: '[PRE450]'
  id: totrans-2217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE450]'
- en: 'As well as for the angles:'
  id: totrans-2218
  prefs: []
  type: TYPE_NORMAL
  zh: 同样适用于角度：
- en: '[PRE451]'
  id: totrans-2219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE451]'
- en: '[PRE452]'
  id: totrans-2220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE452]'
- en: 'For specific integers \(n\) and \(m\) we can evaluate the harmonics to more
    useful expressions:'
  id: totrans-2221
  prefs: []
  type: TYPE_NORMAL
  zh: 对于特定的整数 \(n\) 和 \(m\)，我们可以评估谐波到更有用的表达式：
- en: '[PRE453]'
  id: totrans-2222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE453]'
- en: '[PRE454]'
  id: totrans-2223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE454]'
- en: '[PRE455]'
  id: totrans-2224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE455]'
- en: '[PRE456]'
  id: totrans-2225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE456]'
- en: '[PRE457]'
  id: totrans-2226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE457]'
- en: '[PRE458]'
  id: totrans-2227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE458]'
- en: '[PRE459]'
  id: totrans-2228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE459]'
- en: '[PRE460]'
  id: totrans-2229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE460]'
- en: '[PRE461]'
  id: totrans-2230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE461]'
- en: 'We can differentiate the functions with respect to both angles:'
  id: totrans-2231
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以分别对两个角度进行函数的微分：
- en: '[PRE462]'
  id: totrans-2232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE462]'
- en: '[PRE463]'
  id: totrans-2233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE463]'
- en: '[PRE464]'
  id: totrans-2234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE464]'
- en: 'Further we can compute the complex conjugation:'
  id: totrans-2235
  prefs: []
  type: TYPE_NORMAL
  zh: 进一步，我们可以计算复共轭：
- en: '[PRE465]'
  id: totrans-2236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE465]'
- en: '[PRE466]'
  id: totrans-2237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE466]'
- en: 'To get back the well known expressions in spherical coordinates, we use full
    expansion:'
  id: totrans-2238
  prefs: []
  type: TYPE_NORMAL
  zh: 为了恢复球坐标中的著名表达式，我们使用全面展开：
- en: '[PRE467]'
  id: totrans-2239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE467]'
- en: '[PRE468]'
  id: totrans-2240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE468]'
- en: See also
  id: totrans-2241
  prefs: []
  type: TYPE_NORMAL
  zh: 参见也
- en: '[`Ynm_c`](#sympy.functions.special.spherical_harmonics.Ynm_c "sympy.functions.special.spherical_harmonics.Ynm_c"),
    [`Znm`](#sympy.functions.special.spherical_harmonics.Znm "sympy.functions.special.spherical_harmonics.Znm")'
  id: totrans-2242
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Ynm_c`](#sympy.functions.special.spherical_harmonics.Ynm_c "sympy.functions.special.spherical_harmonics.Ynm_c"),
    [`Znm`](#sympy.functions.special.spherical_harmonics.Znm "sympy.functions.special.spherical_harmonics.Znm")'
- en: References
  id: totrans-2243
  prefs: []
  type: TYPE_NORMAL
  zh: References
- en: '[[R534](#id194)]'
  id: totrans-2244
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R534](#id194)]'
- en: '[https://en.wikipedia.org/wiki/Spherical_harmonics](https://en.wikipedia.org/wiki/Spherical_harmonics)'
  id: totrans-2245
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Spherical_harmonics](https://en.wikipedia.org/wiki/Spherical_harmonics)'
- en: '[[R535](#id195)]'
  id: totrans-2246
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R535](#id195)]'
- en: '[https://mathworld.wolfram.com/SphericalHarmonic.html](https://mathworld.wolfram.com/SphericalHarmonic.html)'
  id: totrans-2247
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/SphericalHarmonic.html](https://mathworld.wolfram.com/SphericalHarmonic.html)'
- en: '[[R536](#id196)]'
  id: totrans-2248
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R536](#id196)]'
- en: '[https://functions.wolfram.com/Polynomials/SphericalHarmonicY/](https://functions.wolfram.com/Polynomials/SphericalHarmonicY/)'
  id: totrans-2249
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Polynomials/SphericalHarmonicY/](https://functions.wolfram.com/Polynomials/SphericalHarmonicY/)'
- en: '[[R537](#id197)]'
  id: totrans-2250
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R537](#id197)]'
- en: '[https://dlmf.nist.gov/14.30](https://dlmf.nist.gov/14.30)'
  id: totrans-2251
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/14.30](https://dlmf.nist.gov/14.30)'
- en: '[PRE469]'
  id: totrans-2252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE469]'
- en: Conjugate spherical harmonics defined as
  id: totrans-2253
  prefs: []
  type: TYPE_NORMAL
  zh: 共轭球谐函数定义为
- en: \[\overline{Y_n^m(\theta, \varphi)} := (-1)^m Y_n^{-m}(\theta, \varphi).\]
  id: totrans-2254
  prefs: []
  type: TYPE_NORMAL
  zh: \[\overline{Y_n^m(\theta, \varphi)} := (-1)^m Y_n^{-m}(\theta, \varphi).\]
- en: Examples
  id: totrans-2255
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE470]'
  id: totrans-2256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE470]'
- en: 'For specific integers \(n\) and \(m\) we can evaluate the harmonics to more
    useful expressions:'
  id: totrans-2257
  prefs: []
  type: TYPE_NORMAL
  zh: 对于特定的整数 \(n\) 和 \(m\)，我们可以评估谐波到更有用的表达式：
- en: '[PRE471]'
  id: totrans-2258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE471]'
- en: See also
  id: totrans-2259
  prefs: []
  type: TYPE_NORMAL
  zh: 参见也
- en: '[`Ynm`](#sympy.functions.special.spherical_harmonics.Ynm "sympy.functions.special.spherical_harmonics.Ynm"),
    [`Znm`](#sympy.functions.special.spherical_harmonics.Znm "sympy.functions.special.spherical_harmonics.Znm")'
  id: totrans-2260
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Ynm`](#sympy.functions.special.spherical_harmonics.Ynm "sympy.functions.special.spherical_harmonics.Ynm"),
    [`Znm`](#sympy.functions.special.spherical_harmonics.Znm "sympy.functions.special.spherical_harmonics.Znm")'
- en: References
  id: totrans-2261
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R538](#id198)]'
  id: totrans-2262
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R538](#id198)]'
- en: '[https://en.wikipedia.org/wiki/Spherical_harmonics](https://en.wikipedia.org/wiki/Spherical_harmonics)'
  id: totrans-2263
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Spherical_harmonics](https://en.wikipedia.org/wiki/Spherical_harmonics)'
- en: '[[R539](#id199)]'
  id: totrans-2264
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R539](#id199)]'
- en: '[https://mathworld.wolfram.com/SphericalHarmonic.html](https://mathworld.wolfram.com/SphericalHarmonic.html)'
  id: totrans-2265
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/SphericalHarmonic.html](https://mathworld.wolfram.com/SphericalHarmonic.html)'
- en: '[[R540](#id200)]'
  id: totrans-2266
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R540](#id200)]'
- en: '[https://functions.wolfram.com/Polynomials/SphericalHarmonicY/](https://functions.wolfram.com/Polynomials/SphericalHarmonicY/)'
  id: totrans-2267
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/Polynomials/SphericalHarmonicY/](https://functions.wolfram.com/Polynomials/SphericalHarmonicY/)'
- en: '[PRE472]'
  id: totrans-2268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE472]'
- en: Real spherical harmonics defined as
  id: totrans-2269
  prefs: []
  type: TYPE_NORMAL
  zh: 定义为实球谐函数
- en: \[\begin{split}Z_n^m(\theta, \varphi) := \begin{cases} \frac{Y_n^m(\theta, \varphi)
    + \overline{Y_n^m(\theta, \varphi)}}{\sqrt{2}} &\quad m > 0 \\ Y_n^m(\theta, \varphi)
    &\quad m = 0 \\ \frac{Y_n^m(\theta, \varphi) - \overline{Y_n^m(\theta, \varphi)}}{i
    \sqrt{2}} &\quad m < 0 \\ \end{cases}\end{split}\]
  id: totrans-2270
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}Z_n^m(\theta, \varphi) := \begin{cases} \frac{Y_n^m(\theta, \varphi)
    + \overline{Y_n^m(\theta, \varphi)}}{\sqrt{2}} &\quad m > 0 \\ Y_n^m(\theta, \varphi)
    &\quad m = 0 \\ \frac{Y_n^m(\theta, \varphi) - \overline{Y_n^m(\theta, \varphi)}}{i
    \sqrt{2}} &\quad m < 0 \\ \end{cases}\end{split}\]
- en: which gives in simplified form
  id: totrans-2271
  prefs: []
  type: TYPE_NORMAL
  zh: 这在简化形式中给出
- en: \[\begin{split}Z_n^m(\theta, \varphi) = \begin{cases} \frac{Y_n^m(\theta, \varphi)
    + (-1)^m Y_n^{-m}(\theta, \varphi)}{\sqrt{2}} &\quad m > 0 \\ Y_n^m(\theta, \varphi)
    &\quad m = 0 \\ \frac{Y_n^m(\theta, \varphi) - (-1)^m Y_n^{-m}(\theta, \varphi)}{i
    \sqrt{2}} &\quad m < 0 \\ \end{cases}\end{split}\]
  id: totrans-2272
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}Z_n^m(\theta, \varphi) = \begin{cases} \frac{Y_n^m(\theta, \varphi)
    + (-1)^m Y_n^{-m}(\theta, \varphi)}{\sqrt{2}} &\quad m > 0 \\ Y_n^m(\theta, \varphi)
    &\quad m = 0 \\ \frac{Y_n^m(\theta, \varphi) - (-1)^m Y_n^{-m}(\theta, \varphi)}{i
    \sqrt{2}} &\quad m < 0 \\ \end{cases}\end{split}\]
- en: Examples
  id: totrans-2273
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE473]'
  id: totrans-2274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE473]'
- en: 'For specific integers n and m we can evaluate the harmonics to more useful
    expressions:'
  id: totrans-2275
  prefs: []
  type: TYPE_NORMAL
  zh: 对于特定的整数 \(n\) 和 \(m\)，我们可以评估谐波以获得更有用的表达式：
- en: '[PRE474]'
  id: totrans-2276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE474]'
- en: See also
  id: totrans-2277
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`Ynm`](#sympy.functions.special.spherical_harmonics.Ynm "sympy.functions.special.spherical_harmonics.Ynm"),
    [`Ynm_c`](#sympy.functions.special.spherical_harmonics.Ynm_c "sympy.functions.special.spherical_harmonics.Ynm_c")'
  id: totrans-2278
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Ynm`](#sympy.functions.special.spherical_harmonics.Ynm "sympy.functions.special.spherical_harmonics.Ynm"),
    [`Ynm_c`](#sympy.functions.special.spherical_harmonics.Ynm_c "sympy.functions.special.spherical_harmonics.Ynm_c")'
- en: References
  id: totrans-2279
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R541](#id201)]'
  id: totrans-2280
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R541](#id201)]'
- en: '[https://en.wikipedia.org/wiki/Spherical_harmonics](https://en.wikipedia.org/wiki/Spherical_harmonics)'
  id: totrans-2281
  prefs: []
  type: TYPE_NORMAL
  zh: '[球谐函数](https://en.wikipedia.org/wiki/Spherical_harmonics)'
- en: '[[R542](#id202)]'
  id: totrans-2282
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R542](#id202)]'
- en: '[https://mathworld.wolfram.com/SphericalHarmonic.html](https://mathworld.wolfram.com/SphericalHarmonic.html)'
  id: totrans-2283
  prefs: []
  type: TYPE_NORMAL
  zh: '[球谐函数](https://mathworld.wolfram.com/SphericalHarmonic.html)'
- en: '[[R543](#id203)]'
  id: totrans-2284
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R543](#id203)]'
- en: '[https://functions.wolfram.com/Polynomials/SphericalHarmonicY/](https://functions.wolfram.com/Polynomials/SphericalHarmonicY/)'
  id: totrans-2285
  prefs: []
  type: TYPE_NORMAL
  zh: '[球谐函数 Y](https://functions.wolfram.com/Polynomials/SphericalHarmonicY/)'
- en: Tensor Functions
  id: totrans-2286
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 张量函数
- en: '[PRE475]'
  id: totrans-2287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE475]'
- en: Represent the Levi-Civita symbol.
  id: totrans-2288
  prefs: []
  type: TYPE_NORMAL
  zh: 表示利维-奇维塔符号。
- en: This is a compatibility wrapper to `LeviCivita()`.
  id: totrans-2289
  prefs: []
  type: TYPE_NORMAL
  zh: 这是对 `LeviCivita()` 的兼容性包装。
- en: See also
  id: totrans-2290
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`LeviCivita`](#sympy.functions.special.tensor_functions.LeviCivita "sympy.functions.special.tensor_functions.LeviCivita")'
  id: totrans-2291
  prefs: []
  type: TYPE_NORMAL
  zh: '[`LeviCivita`](#sympy.functions.special.tensor_functions.LeviCivita "sympy.functions.special.tensor_functions.LeviCivita")'
- en: '[PRE476]'
  id: totrans-2292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE476]'
- en: Evaluate Levi-Civita symbol.
  id: totrans-2293
  prefs: []
  type: TYPE_NORMAL
  zh: 评估利维-奇维塔符号。
- en: '[PRE477]'
  id: totrans-2294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE477]'
- en: Represent the Levi-Civita symbol.
  id: totrans-2295
  prefs: []
  type: TYPE_NORMAL
  zh: 表示利维-奇维塔符号。
- en: Explanation
  id: totrans-2296
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: For even permutations of indices it returns 1, for odd permutations -1, and
    for everything else (a repeated index) it returns 0.
  id: totrans-2297
  prefs: []
  type: TYPE_NORMAL
  zh: 对于指标的偶排列返回 1，对于奇排列返回 -1，对于其他情况（重复指标）返回 0。
- en: Thus it represents an alternating pseudotensor.
  id: totrans-2298
  prefs: []
  type: TYPE_NORMAL
  zh: 因此它表示一个交替的伪张量。
- en: Examples
  id: totrans-2299
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE478]'
  id: totrans-2300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE478]'
- en: See also
  id: totrans-2301
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`Eijk`](#sympy.functions.special.tensor_functions.Eijk "sympy.functions.special.tensor_functions.Eijk")'
  id: totrans-2302
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Eijk`](#sympy.functions.special.tensor_functions.Eijk "sympy.functions.special.tensor_functions.Eijk")'
- en: '[PRE479]'
  id: totrans-2303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE479]'
- en: The discrete, or Kronecker, delta function.
  id: totrans-2304
  prefs: []
  type: TYPE_NORMAL
  zh: 离散或克罗内克 δ 函数。
- en: 'Parameters:'
  id: totrans-2305
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**i** : Number, Symbol'
  id: totrans-2306
  prefs: []
  type: TYPE_NORMAL
  zh: '**i** : 数字，符号'
- en: The first index of the delta function.
  id: totrans-2307
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: δ 函数的第一个指标。
- en: '**j** : Number, Symbol'
  id: totrans-2308
  prefs: []
  type: TYPE_NORMAL
  zh: '**j** : 数字，符号'
- en: The second index of the delta function.
  id: totrans-2309
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: δ 函数的第二个指标。
- en: Explanation
  id: totrans-2310
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: A function that takes in two integers \(i\) and \(j\). It returns \(0\) if \(i\)
    and \(j\) are not equal, or it returns \(1\) if \(i\) and \(j\) are equal.
  id: totrans-2311
  prefs: []
  type: TYPE_NORMAL
  zh: 一个接受两个整数 \(i\) 和 \(j\) 的函数。如果 \(i\) 和 \(j\) 不相等则返回 \(0\)，如果相等则返回 \(1\)。
- en: Examples
  id: totrans-2312
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'An example with integer indices:'
  id: totrans-2313
  prefs: []
  type: TYPE_NORMAL
  zh: 带有整数指标的例子：
- en: '[PRE480]'
  id: totrans-2314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE480]'
- en: 'Symbolic indices:'
  id: totrans-2315
  prefs: []
  type: TYPE_NORMAL
  zh: 符号指标：
- en: '[PRE481]'
  id: totrans-2316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE481]'
- en: See also
  id: totrans-2317
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`eval`](#sympy.functions.special.tensor_functions.KroneckerDelta.eval "sympy.functions.special.tensor_functions.KroneckerDelta.eval"),
    [`DiracDelta`](#sympy.functions.special.delta_functions.DiracDelta "sympy.functions.special.delta_functions.DiracDelta")'
  id: totrans-2318
  prefs: []
  type: TYPE_NORMAL
  zh: '[`eval`](#sympy.functions.special.tensor_functions.KroneckerDelta.eval "sympy.functions.special.tensor_functions.KroneckerDelta.eval"),
    [`DiracDelta`](#sympy.functions.special.delta_functions.DiracDelta "sympy.functions.special.delta_functions.DiracDelta")'
- en: References
  id: totrans-2319
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R544](#id204)]'
  id: totrans-2320
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R544](#id204)]'
- en: '[https://en.wikipedia.org/wiki/Kronecker_delta](https://en.wikipedia.org/wiki/Kronecker_delta)'
  id: totrans-2321
  prefs: []
  type: TYPE_NORMAL
  zh: '[克罗内克 δ 函数](https://en.wikipedia.org/wiki/Kronecker_delta)'
- en: '[PRE482]'
  id: totrans-2322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE482]'
- en: Evaluates the discrete delta function.
  id: totrans-2323
  prefs: []
  type: TYPE_NORMAL
  zh: 评估离散 δ 函数。
- en: Examples
  id: totrans-2324
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE483]'
  id: totrans-2325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE483]'
- en: '[PRE484]'
  id: totrans-2326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE484]'
- en: indirect doctest
  id: totrans-2327
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 间接 doctest
- en: '[PRE485]'
  id: totrans-2328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE485]'
- en: Returns True if indices are either both above or below fermi.
  id: totrans-2329
  prefs: []
  type: TYPE_NORMAL
  zh: 如果指标都在费米面上方或下方则返回 True。
- en: Examples
  id: totrans-2330
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE486]'
  id: totrans-2331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE486]'
- en: '[PRE487]'
  id: totrans-2332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE487]'
- en: True if Delta can be non-zero above fermi.
  id: totrans-2333
  prefs: []
  type: TYPE_NORMAL
  zh: 若 Delta 在费米面上方可以非零。
- en: Examples
  id: totrans-2334
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE488]'
  id: totrans-2335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE488]'
- en: See also
  id: totrans-2336
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`is_below_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_below_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_below_fermi"), [`is_only_below_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_only_below_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_only_below_fermi"),
    [`is_only_above_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_only_above_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_only_above_fermi")'
  id: totrans-2337
  prefs: []
  type: TYPE_NORMAL
  zh: '[`is_below_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_below_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_below_fermi"), [`is_only_below_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_only_below_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_only_below_fermi"),
    [`is_only_above_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_only_above_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_only_above_fermi")'
- en: '[PRE489]'
  id: totrans-2338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE489]'
- en: True if Delta can be non-zero below fermi.
  id: totrans-2339
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Delta 可以在费米能级以下非零，则为真。
- en: Examples
  id: totrans-2340
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE490]'
  id: totrans-2341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE490]'
- en: See also
  id: totrans-2342
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`is_above_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_above_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_above_fermi"), [`is_only_above_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_only_above_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_only_above_fermi"),
    [`is_only_below_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_only_below_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_only_below_fermi")'
  id: totrans-2343
  prefs: []
  type: TYPE_NORMAL
  zh: '[`is_above_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_above_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_above_fermi"), [`is_only_above_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_only_above_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_only_above_fermi"),
    [`is_only_below_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_only_below_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_only_below_fermi")'
- en: '[PRE491]'
  id: totrans-2344
  prefs: []
  type: TYPE_PRE
  zh: '[PRE491]'
- en: True if Delta is restricted to above fermi.
  id: totrans-2345
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Delta 受到费米能级以上的限制，则为真。
- en: Examples
  id: totrans-2346
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE492]'
  id: totrans-2347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE492]'
- en: See also
  id: totrans-2348
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`is_above_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_above_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_above_fermi"), [`is_below_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_below_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_below_fermi"), [`is_only_below_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_only_below_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_only_below_fermi")'
  id: totrans-2349
  prefs: []
  type: TYPE_NORMAL
  zh: '[`is_above_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_above_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_above_fermi"), [`is_below_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_below_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_below_fermi"), [`is_only_below_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_only_below_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_only_below_fermi")'
- en: '[PRE493]'
  id: totrans-2350
  prefs: []
  type: TYPE_PRE
  zh: '[PRE493]'
- en: True if Delta is restricted to below fermi.
  id: totrans-2351
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Delta 受到费米能级以下的限制，则为真。
- en: Examples
  id: totrans-2352
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE494]'
  id: totrans-2353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE494]'
- en: See also
  id: totrans-2354
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`is_above_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_above_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_above_fermi"), [`is_below_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_below_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_below_fermi"), [`is_only_above_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_only_above_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_only_above_fermi")'
  id: totrans-2355
  prefs: []
  type: TYPE_NORMAL
  zh: '[`is_above_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_above_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_above_fermi"), [`is_below_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_below_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_below_fermi"), [`is_only_above_fermi`](#sympy.functions.special.tensor_functions.KroneckerDelta.is_only_above_fermi
    "sympy.functions.special.tensor_functions.KroneckerDelta.is_only_above_fermi")'
- en: '[PRE495]'
  id: totrans-2356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE495]'
- en: Returns the index which is preferred to substitute in the final expression.
  id: totrans-2357
  prefs: []
  type: TYPE_NORMAL
  zh: 返回在最终表达式中优先替换的索引。
- en: Explanation
  id: totrans-2358
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The index to substitute is the index with less information regarding fermi level.
    If indices contain the same information, ‘a’ is preferred before ‘b’.
  id: totrans-2359
  prefs: []
  type: TYPE_NORMAL
  zh: 要替换的索引是具有关于费米能级更少信息的索引。如果索引包含相同信息，则“a”优先于“b”。
- en: Examples
  id: totrans-2360
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE496]'
  id: totrans-2361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE496]'
- en: See also
  id: totrans-2362
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`preferred_index`](#sympy.functions.special.tensor_functions.KroneckerDelta.preferred_index
    "sympy.functions.special.tensor_functions.KroneckerDelta.preferred_index")'
  id: totrans-2363
  prefs: []
  type: TYPE_NORMAL
  zh: '[`preferred_index`](#sympy.functions.special.tensor_functions.KroneckerDelta.preferred_index
    "sympy.functions.special.tensor_functions.KroneckerDelta.preferred_index")'
- en: '[PRE497]'
  id: totrans-2364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE497]'
- en: Returns the index which is preferred to keep in the final expression.
  id: totrans-2365
  prefs: []
  type: TYPE_NORMAL
  zh: 返回在最终表达式中保留的优先索引。
- en: Explanation
  id: totrans-2366
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The preferred index is the index with more information regarding fermi level.
    If indices contain the same information, ‘a’ is preferred before ‘b’.
  id: totrans-2367
  prefs: []
  type: TYPE_NORMAL
  zh: 首选索引是具有关于费米能级更多信息的索引。如果索引包含相同信息，则“a”优先于“b”。
- en: Examples
  id: totrans-2368
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE498]'
  id: totrans-2369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE498]'
- en: See also
  id: totrans-2370
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`killable_index`](#sympy.functions.special.tensor_functions.KroneckerDelta.killable_index
    "sympy.functions.special.tensor_functions.KroneckerDelta.killable_index")'
  id: totrans-2371
  prefs: []
  type: TYPE_NORMAL
  zh: '[`killable_index`](#sympy.functions.special.tensor_functions.KroneckerDelta.killable_index
    "sympy.functions.special.tensor_functions.KroneckerDelta.killable_index")'
