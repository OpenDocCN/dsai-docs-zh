- en: scipy.signal.lp2bs_zpk
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lp2bs_zpk.html#scipy.signal.lp2bs_zpk](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lp2bs_zpk.html#scipy.signal.lp2bs_zpk)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Transform a lowpass filter prototype to a bandstop filter.
  prefs: []
  type: TYPE_NORMAL
- en: Return an analog band-stop filter with center frequency *wo* and stopband width
    *bw* from an analog low-pass filter prototype with unity cutoff frequency, using
    zeros, poles, and gain (‘zpk’) representation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**z**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Zeros of the analog filter transfer function.
  prefs: []
  type: TYPE_NORMAL
- en: '**p**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Poles of the analog filter transfer function.
  prefs: []
  type: TYPE_NORMAL
- en: '**k**float'
  prefs: []
  type: TYPE_NORMAL
- en: System gain of the analog filter transfer function.
  prefs: []
  type: TYPE_NORMAL
- en: '**wo**float'
  prefs: []
  type: TYPE_NORMAL
- en: Desired stopband center, as angular frequency (e.g., rad/s). Defaults to no
    change.
  prefs: []
  type: TYPE_NORMAL
- en: '**bw**float'
  prefs: []
  type: TYPE_NORMAL
- en: Desired stopband width, as angular frequency (e.g., rad/s). Defaults to 1.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**z**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Zeros of the transformed band-stop filter transfer function.
  prefs: []
  type: TYPE_NORMAL
- en: '**p**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Poles of the transformed band-stop filter transfer function.
  prefs: []
  type: TYPE_NORMAL
- en: '**k**float'
  prefs: []
  type: TYPE_NORMAL
- en: System gain of the transformed band-stop filter.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`lp2lp_zpk`](scipy.signal.lp2lp_zpk.html#scipy.signal.lp2lp_zpk "scipy.signal.lp2lp_zpk"),
    [`lp2hp_zpk`](scipy.signal.lp2hp_zpk.html#scipy.signal.lp2hp_zpk "scipy.signal.lp2hp_zpk"),
    [`lp2bp_zpk`](scipy.signal.lp2bp_zpk.html#scipy.signal.lp2bp_zpk "scipy.signal.lp2bp_zpk"),
    [`bilinear`](scipy.signal.bilinear.html#scipy.signal.bilinear "scipy.signal.bilinear")'
  prefs: []
  type: TYPE_NORMAL
- en: '[`lp2bs`](scipy.signal.lp2bs.html#scipy.signal.lp2bs "scipy.signal.lp2bs")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This is derived from the s-plane substitution
  prefs: []
  type: TYPE_NORMAL
- en: \[s \rightarrow \frac{s \cdot \mathrm{BW}}{s^2 + {\omega_0}^2}\]
  prefs: []
  type: TYPE_NORMAL
- en: This is the “wideband” transformation, producing a stopband with geometric (log
    frequency) symmetry about *wo*.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.1.0.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Transform a low-pass filter represented in ‘zpk’ (Zero-Pole-Gain) form into
    a bandstop filter represented in ‘zpk’ form, with a center frequency wo and bandwidth
    bw.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
