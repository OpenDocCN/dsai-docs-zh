- en: scipy.interpolate.CubicSpline
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.interpolate.CubicSpline
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.CubicSpline.html#scipy.interpolate.CubicSpline](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.CubicSpline.html#scipy.interpolate.CubicSpline)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.CubicSpline.html#scipy.interpolate.CubicSpline](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.CubicSpline.html#scipy.interpolate.CubicSpline)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Cubic spline data interpolator.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 分段立方样条数据插值器。
- en: Interpolate data with a piecewise cubic polynomial which is twice continuously
    differentiable [[1]](#r0cc18619484f-1). The result is represented as a [`PPoly`](scipy.interpolate.PPoly.html#scipy.interpolate.PPoly
    "scipy.interpolate.PPoly") instance with breakpoints matching the given data.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 使用分段三次多项式对数据进行插值，其二阶连续可微性满足 [[1]](#r0cc18619484f-1)。结果表示为一个[`PPoly`](scipy.interpolate.PPoly.html#scipy.interpolate.PPoly
    "scipy.interpolate.PPoly")实例，其分段与给定数据匹配。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x**array_like, shape (n,)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**array_like, 形状为(n,)'
- en: 1-D array containing values of the independent variable. Values must be real,
    finite and in strictly increasing order.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 包含自变量值的1-D数组。值必须是实数、有限的，并且严格递增。
- en: '**y**array_like'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**y**array_like'
- en: Array containing values of the dependent variable. It can have arbitrary number
    of dimensions, but the length along `axis` (see below) must match the length of
    `x`. Values must be finite.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 包含因变量值的数组。它可以有任意维度，但沿着`axis`（见下文）的长度必须与`x`的长度匹配。值必须是有限的。
- en: '**axis**int, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**axis**int, 可选'
- en: Axis along which *y* is assumed to be varying. Meaning that for `x[i]` the corresponding
    values are `np.take(y, i, axis=axis)`. Default is 0.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 假设*y*变化的轴。这意味着对于`x[i]`，相应的值是`np.take(y, i, axis=axis)`。默认为0。
- en: '**bc_type**string or 2-tuple, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**bc_type**string或2-tuple, 可选'
- en: Boundary condition type. Two additional equations, given by the boundary conditions,
    are required to determine all coefficients of polynomials on each segment [[2]](#r0cc18619484f-2).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 边界条件类型。需要额外的两个方程，由边界条件确定每个段上的所有多项式系数 [[2]](#r0cc18619484f-2)。
- en: 'If *bc_type* is a string, then the specified condition will be applied at both
    ends of a spline. Available conditions are:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*bc_type*是一个字符串，则将在样条的两端应用指定条件。可用的条件有：
- en: '‘not-a-knot’ (default): The first and second segment at a curve end are the
    same polynomial. It is a good default when there is no information on boundary
    conditions.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘not-a-knot’（默认）：曲线端点的第一段和第二段是相同的多项式。当没有边界条件信息时，这是一个很好的默认值。
- en: '‘periodic’: The interpolated functions is assumed to be periodic of period
    `x[-1] - x[0]`. The first and last value of *y* must be identical: `y[0] == y[-1]`.
    This boundary condition will result in `y''[0] == y''[-1]` and `y''''[0] == y''''[-1]`.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '‘periodic’: 假定插值函数是周期性的，周期为`x[-1] - x[0]`。*y*的第一个和最后一个值必须相同：`y[0] == y[-1]`。此边界条件将导致`y''[0]
    == y''[-1]`和`y''''[0] == y''''[-1]`。'
- en: '‘clamped’: The first derivative at curves ends are zero. Assuming a 1D *y*,
    `bc_type=((1, 0.0), (1, 0.0))` is the same condition.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '‘clamped’: 曲线端点的一阶导数为零。假设1D的*y*，`bc_type=((1, 0.0), (1, 0.0))`是相同的条件。'
- en: '‘natural’: The second derivative at curve ends are zero. Assuming a 1D *y*,
    `bc_type=((2, 0.0), (2, 0.0))` is the same condition.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '‘natural’: 曲线端点的二阶导数为零。假设1D的*y*，`bc_type=((2, 0.0), (2, 0.0))`是相同的条件。'
- en: 'If *bc_type* is a 2-tuple, the first and the second value will be applied at
    the curve start and end respectively. The tuple values can be one of the previously
    mentioned strings (except ‘periodic’) or a tuple *(order, deriv_values)* allowing
    to specify arbitrary derivatives at curve ends:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*bc_type*是一个2元组，则第一个和第二个值将分别应用于曲线的起始点和结束点。元组值可以是之前提到的字符串之一（除了‘periodic’）或一个元组*(order,
    deriv_values)*，允许在曲线端点指定任意导数：
- en: '*order*: the derivative order, 1 or 2.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*order*: 导数阶数，为1或2。'
- en: '*deriv_value*: array_like containing derivative values, shape must be the same
    as *y*, excluding `axis` dimension. For example, if *y* is 1-D, then *deriv_value*
    must be a scalar. If *y* is 3-D with the shape (n0, n1, n2) and axis=2, then *deriv_value*
    must be 2-D and have the shape (n0, n1).'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*deriv_value*: 包含导数值的array_like，形状必须与*y*相同，不包括`axis`维度。例如，如果*y*是1D的，则*deriv_value*必须是标量。如果*y*是3D且形状为(n0,
    n1, n2)，且axis=2，则*deriv_value*必须是2D且形状为(n0, n1)。'
- en: '**extrapolate**{bool, ‘periodic’, None}, optional'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**extrapolate**{bool, ‘periodic’, None}, 可选'
- en: If bool, determines whether to extrapolate to out-of-bounds points based on
    first and last intervals, or to return NaNs. If ‘periodic’, periodic extrapolation
    is used. If None (default), `extrapolate` is set to ‘periodic’ for `bc_type='periodic'`
    and to True otherwise.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果是布尔值，则决定基于第一个和最后一个间隔来拟合超出边界的点，或者返回 NaN。如果是‘periodic’，使用周期外推。如果是 None（默认值），则对于`bc_type='periodic'`，`extrapolate`设置为‘periodic’，否则设置为
    True。
- en: See also
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 亦见
- en: '[`Akima1DInterpolator`](scipy.interpolate.Akima1DInterpolator.html#scipy.interpolate.Akima1DInterpolator
    "scipy.interpolate.Akima1DInterpolator")'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Akima1DInterpolator`](scipy.interpolate.Akima1DInterpolator.html#scipy.interpolate.Akima1DInterpolator
    "scipy.interpolate.Akima1DInterpolator")'
- en: Akima 1D interpolator.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Akima 1D 插值器。
- en: '[`PchipInterpolator`](scipy.interpolate.PchipInterpolator.html#scipy.interpolate.PchipInterpolator
    "scipy.interpolate.PchipInterpolator")'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[`PchipInterpolator`](scipy.interpolate.PchipInterpolator.html#scipy.interpolate.PchipInterpolator
    "scipy.interpolate.PchipInterpolator")'
- en: PCHIP 1-D monotonic cubic interpolator.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: PCHIP 1-D 单调立方插值器。
- en: '[`PPoly`](scipy.interpolate.PPoly.html#scipy.interpolate.PPoly "scipy.interpolate.PPoly")'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[`PPoly`](scipy.interpolate.PPoly.html#scipy.interpolate.PPoly "scipy.interpolate.PPoly")'
- en: Piecewise polynomial in terms of coefficients and breakpoints.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 分段多项式在系数和断点方面。
- en: Notes
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Parameters *bc_type* and `extrapolate` work independently, i.e. the former controls
    only construction of a spline, and the latter only evaluation.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 参数 *bc_type* 和 `extrapolate` 相互独立工作，即前者只控制样条的构造，后者只控制评估。
- en: When a boundary condition is ‘not-a-knot’ and n = 2, it is replaced by a condition
    that the first derivative is equal to the linear interpolant slope. When both
    boundary conditions are ‘not-a-knot’ and n = 3, the solution is sought as a parabola
    passing through given points.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 当边界条件为“非奇节点”且 n = 2 时，它被替换为条件，即第一阶导数等于线性插值斜率。当两个边界条件都是“非奇节点”且 n = 3 时，解被寻求为通过给定点的抛物线。
- en: When ‘not-a-knot’ boundary conditions is applied to both ends, the resulting
    spline will be the same as returned by [`splrep`](scipy.interpolate.splrep.html#scipy.interpolate.splrep
    "scipy.interpolate.splrep") (with `s=0`) and [`InterpolatedUnivariateSpline`](scipy.interpolate.InterpolatedUnivariateSpline.html#scipy.interpolate.InterpolatedUnivariateSpline
    "scipy.interpolate.InterpolatedUnivariateSpline"), but these two methods use a
    representation in B-spline basis.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当‘非奇节点’边界条件被应用到两端时，得到的样条将与由[`splrep`](scipy.interpolate.splrep.html#scipy.interpolate.splrep
    "scipy.interpolate.splrep")(with `s=0`)和[`InterpolatedUnivariateSpline`](scipy.interpolate.InterpolatedUnivariateSpline.html#scipy.interpolate.InterpolatedUnivariateSpline
    "scipy.interpolate.InterpolatedUnivariateSpline")返回的一样，但这两种方法使用 B 样条基数来表示。
- en: New in version 0.18.0.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本为 0.18.0。
- en: References
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[1](#id1)]'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[[1](#id1)]'
- en: '[Cubic Spline Interpolation](https://en.wikiversity.org/wiki/Cubic_Spline_Interpolation)
    on Wikiversity.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[立方样条插值](https://en.wikiversity.org/wiki/Cubic_Spline_Interpolation)于维基学院。'
- en: '[[2](#id2)]'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[[2](#id2)]'
- en: Carl de Boor, “A Practical Guide to Splines”, Springer-Verlag, 1978.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Carl de Boor, “A Practical Guide to Splines”, Springer-Verlag, 1978。
- en: Examples
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: In this example the cubic spline is used to interpolate a sampled sinusoid.
    You can see that the spline continuity property holds for the first and second
    derivatives and violates only for the third derivative.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，立方样条被用来插值取样的正弦波。你可以看到样条对第一和第二阶导数的连续性成立，只违反了第三阶导数。
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![../../_images/scipy-interpolate-CubicSpline-1_00_00.png](../Images/1ed792c6a9be605a58e54ab8ca6c633a.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-interpolate-CubicSpline-1_00_00.png](../Images/1ed792c6a9be605a58e54ab8ca6c633a.png)'
- en: In the second example, the unit circle is interpolated with a spline. A periodic
    boundary condition is used. You can see that the first derivative values, ds/dx=0,
    ds/dy=1 at the periodic point (1, 0) are correctly computed. Note that a circle
    cannot be exactly represented by a cubic spline. To increase precision, more breakpoints
    would be required.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二个例子中，单位圆被样条插值。使用了周期性边界条件。你可以看到周期点（1, 0）的第一导数值，ds/dx=0，ds/dy=1 被正确计算。请注意，圆不能被立方样条精确表示。要增加精度，需要更多的断点。
- en: '[PRE2]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![../../_images/scipy-interpolate-CubicSpline-1_01_00.png](../Images/e23855c3f78b64b4120b122fd527e722.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-interpolate-CubicSpline-1_01_00.png](../Images/e23855c3f78b64b4120b122fd527e722.png)'
- en: The third example is the interpolation of a polynomial y = x**3 on the interval
    0 <= x<= 1\. A cubic spline can represent this function exactly. To achieve that
    we need to specify values and first derivatives at endpoints of the interval.
    Note that y’ = 3 * x**2 and thus y’(0) = 0 and y’(1) = 3.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个例子是在区间 0 <= x<= 1 上进行多项式 y = x**3 的插值。立方样条可以精确表示这个函数。为了实现这一点，我们需要在区间的端点指定值和第一导数。请注意，y’
    = 3 * x**2 因此 y’(0) = 0 并且 y’(1) = 3。
- en: '[PRE3]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Attributes:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 属性：
- en: '**x**ndarray, shape (n,)'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**ndarray, shape (n,)'
- en: Breakpoints. The same `x` which was passed to the constructor.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 断点。与构造函数中传递的相同的`x`。
- en: '**c**ndarray, shape (4, n-1, …)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**c**ndarray, shape (4, n-1, …)'
- en: Coefficients of the polynomials on each segment. The trailing dimensions match
    the dimensions of *y*, excluding `axis`. For example, if *y* is 1-d, then `c[k,
    i]` is a coefficient for `(x-x[i])**(3-k)` on the segment between `x[i]` and `x[i+1]`.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式在每个段上的系数。尾随的维度与*y*的维度匹配，不包括`axis`。例如，如果*y*是1维，则`c[k, i]`是在`x[i]`和`x[i+1]`之间的段上`(x-x[i])**(3-k)`的系数。
- en: '**axis**int'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**axis**int'
- en: Interpolation axis. The same axis which was passed to the constructor.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 插值轴。与构造函数中传递的相同的轴。
- en: Methods
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`__call__`](scipy.interpolate.CubicSpline.__call__.html#scipy.interpolate.CubicSpline.__call__
    "scipy.interpolate.CubicSpline.__call__")(x[, nu, extrapolate]) | Evaluate the
    piecewise polynomial or its derivative. |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| [`__call__`](scipy.interpolate.CubicSpline.__call__.html#scipy.interpolate.CubicSpline.__call__
    "scipy.interpolate.CubicSpline.__call__")(x[, nu, extrapolate]) | 计算分段多项式或其导数的值。'
- en: '| [`derivative`](scipy.interpolate.CubicSpline.derivative.html#scipy.interpolate.CubicSpline.derivative
    "scipy.interpolate.CubicSpline.derivative")([nu]) | Construct a new piecewise
    polynomial representing the derivative. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| [`derivative`](scipy.interpolate.CubicSpline.derivative.html#scipy.interpolate.CubicSpline.derivative
    "scipy.interpolate.CubicSpline.derivative")([nu]) | 构造一个代表导数的新分段多项式。'
- en: '| [`antiderivative`](scipy.interpolate.CubicSpline.antiderivative.html#scipy.interpolate.CubicSpline.antiderivative
    "scipy.interpolate.CubicSpline.antiderivative")([nu]) | Construct a new piecewise
    polynomial representing the antiderivative. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| [`antiderivative`](scipy.interpolate.CubicSpline.antiderivative.html#scipy.interpolate.CubicSpline.antiderivative
    "scipy.interpolate.CubicSpline.antiderivative")([nu]) | 构造一个代表反导数的新分段多项式。'
- en: '| [`integrate`](scipy.interpolate.CubicSpline.integrate.html#scipy.interpolate.CubicSpline.integrate
    "scipy.interpolate.CubicSpline.integrate")(a, b[, extrapolate]) | Compute a definite
    integral over a piecewise polynomial. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| [`integrate`](scipy.interpolate.CubicSpline.integrate.html#scipy.interpolate.CubicSpline.integrate
    "scipy.interpolate.CubicSpline.integrate")(a, b[, extrapolate]) | 计算分段多项式的定积分。'
- en: '| [`roots`](scipy.interpolate.CubicSpline.roots.html#scipy.interpolate.CubicSpline.roots
    "scipy.interpolate.CubicSpline.roots")([discontinuity, extrapolate]) | Find real
    roots of the piecewise polynomial. |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| [`roots`](scipy.interpolate.CubicSpline.roots.html#scipy.interpolate.CubicSpline.roots
    "scipy.interpolate.CubicSpline.roots")([discontinuity, extrapolate]) | 寻找分段多项式的实根。'
