- en: pandas.io.formats.style.Styler.set_table_styles
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.io.formats.style.Styler.set_table_styles.html](https://pandas.pydata.org/docs/reference/api/pandas.io.formats.style.Styler.set_table_styles.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Set the table styles included within the `<style>` HTML element.
  prefs: []
  type: TYPE_NORMAL
- en: This function can be used to style the entire table, columns, rows or specific
    HTML selectors.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**table_styles**list or dict'
  prefs: []
  type: TYPE_NORMAL
- en: If supplying a list, each individual table_style should be a dictionary with
    `selector` and `props` keys. `selector` should be a CSS selector that the style
    will be applied to (automatically prefixed by the table’s UUID) and `props` should
    be a list of tuples with `(attribute, value)`. If supplying a dict, the dict keys
    should correspond to column names or index values, depending upon the specified
    axis argument. These will be mapped to row or col CSS selectors. MultiIndex values
    as dict keys should be in their respective tuple form. The dict values should
    be a list as specified in the form with CSS selectors and props that will be applied
    to the specified row or column.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**{0 or ‘index’, 1 or ‘columns’, None}, default 0'
  prefs: []
  type: TYPE_NORMAL
- en: Apply to each column (`axis=0` or `'index'`), to each row (`axis=1` or `'columns'`).
    Only used if table_styles is dict.
  prefs: []
  type: TYPE_NORMAL
- en: '**overwrite**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Styles are replaced if True, or extended if False. CSS rules are preserved so
    most recent styles set will dominate if selectors intersect.
  prefs: []
  type: TYPE_NORMAL
- en: '**css_class_names**dict, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A dict of strings used to replace the default CSS classes described below.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.4.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: Styler
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`Styler.set_td_classes`](pandas.io.formats.style.Styler.set_td_classes.html#pandas.io.formats.style.Styler.set_td_classes
    "pandas.io.formats.style.Styler.set_td_classes")'
  prefs: []
  type: TYPE_NORMAL
- en: Set the DataFrame of strings added to the `class` attribute of `<td>` HTML elements.
  prefs: []
  type: TYPE_NORMAL
- en: '[`Styler.set_table_attributes`](pandas.io.formats.style.Styler.set_table_attributes.html#pandas.io.formats.style.Styler.set_table_attributes
    "pandas.io.formats.style.Styler.set_table_attributes")'
  prefs: []
  type: TYPE_NORMAL
- en: Set the table attributes added to the `<table>` HTML element.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'The default CSS classes dict, whose values can be replaced is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Or with CSS strings
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Adding column styling by name
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Adding row styling
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: See [Table Visualization](../../user_guide/style.html) user guide for more details.
  prefs: []
  type: TYPE_NORMAL
