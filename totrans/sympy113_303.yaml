- en: Building the Documentation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/contributing/new-contributors-guide/build-docs.html](https://docs.sympy.org/latest/contributing/new-contributors-guide/build-docs.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Start by installing the required dependencies for the documentation.
  prefs: []
  type: TYPE_NORMAL
- en: Required dependencies
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can either install the dependencies locally on your machine, or you can
    build a Docker image containing them.
  prefs: []
  type: TYPE_NORMAL
- en: Docker
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you have [Docker](https://docs.docker.com/engine/install/), then instead
    of following the OS-specific installation instructions below, you may choose to
    build a Docker image:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: If you choose this option, you can now skip down to the “Build the Docs” section
    below.
  prefs: []
  type: TYPE_NORMAL
- en: Debian/Ubuntu
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For Debian/Ubuntu:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Install pip using:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'However, you can also create a virtual environment and use pip in it using:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Then activate it using:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'After installing pip through either of the two methods given above, run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'If you get mpmath error, install python-mpmath package:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'If you get matplotlib error, install python-matplotlib package:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Fedora
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For Fedora (and maybe other RPM-based distributions), install the prerequisites:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'If you get mpmath error, install python3-mpmath package:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'If you get matplotlib error, install python3-matplotlib package:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Mac
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For Mac, first install homebrew: [https://brew.sh/](https://brew.sh/)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Then install these packages with homebrew:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Install the docs dependencies with either pip or conda:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Or:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Making your Sphinx build successful on the Windows system is tricky because
    some dependencies like `dvipng` or `docbook2x` are not available.
  prefs: []
  type: TYPE_NORMAL
- en: Windows 10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For Windows 10, however, the Windows Subsystem for Linux can be a possible
    workaround solution, and you can install Ubuntu shell on your Windows system after
    following the tutorial below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://learn.microsoft.com/en-us/windows/wsl/install](https://learn.microsoft.com/en-us/windows/wsl/install)'
  prefs: []
  type: TYPE_NORMAL
- en: In your command prompt, run `ubuntu` to transfer to Linux terminal, and follow
    the Debian/Ubuntu tutorial above to install the dependencies, and then you can
    run `make html` to build. (Note that you also have to install `make` via `apt-get
    install make`.)
  prefs: []
  type: TYPE_NORMAL
- en: If you want to change the directory in your prompt to your working folder of
    SymPy in the Windows file system, you can prepend `cd /mnt/` to your file path
    in Windows, and run in your shell to navigate to the folder. (Also note that Linux
    uses `/` instead of `\` for file paths.)
  prefs: []
  type: TYPE_NORMAL
- en: This method provides better compatibility than Cygwin or MSYS2 and more convenience
    than a virtual machine if you partially need a Linux environment for your workflow,
    however this method is only viable for Windows 10 64-bit users.
  prefs: []
  type: TYPE_NORMAL
- en: or
  prefs: []
  type: TYPE_NORMAL
- en: Follow [instruction](https://chocolatey.org/install) to install Chocolatey
  prefs: []
  type: TYPE_NORMAL
- en: 'Install make and other dependencies:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Install python dependencies:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Build the Docs
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Docker
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you chose to build using Docker, and followed the instructions above to
    build the `sympy_htmldoc` image, then you can build the docs with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: (Be sure to substitute the actual absolute filesystem path to sympy!) This command
    can be run from any directory.
  prefs: []
  type: TYPE_NORMAL
- en: Local Installation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you chose to follow OS-specific instructions above and installed the required
    dependencies locally, the documentation can be built by running the `makefile`
    in the `doc` subdirectory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: View the Docs
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once you have built the docs, the generated files will be found under `doc/_build/html`.
    To view them in your preferred web browser, use the drop down menu and select
    “open file”, navigate into the `sympy/doc/_build/html` folder, and open the `index.html`
    file.
  prefs: []
  type: TYPE_NORMAL
- en: Auto-Rebuild with the Live Server
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The instructions given above told you how to build the docs once, and load them
    in the browser. After you make changes to the document sources, you’ll have to
    manually repeat the build step, and reload the pages in the browser.
  prefs: []
  type: TYPE_NORMAL
- en: There is an alternative approach that sets up a live server, which will monitor
    the docs directory, automatically rebuild when changes are detected, and automatically
    reload the page you are viewing in the browser.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to use this option, the procedure again depends on whether you are
    using Docker, or a local installation.
  prefs: []
  type: TYPE_NORMAL
- en: Docker
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To start the live server with Docker, you can use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: and then navigate your browser to `localhost:8000`. You can use a different
    port by changing the `8000` in the command. Again, be sure to substitute the actual
    absolute filesystem path to sympy.
  prefs: []
  type: TYPE_NORMAL
- en: When finished, you can stop the server with `ctrl-c` in the terminal.
  prefs: []
  type: TYPE_NORMAL
- en: 'Alternatively, you may run the server in detached mode, using:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'and then stop it with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Local Installation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you installed the build dependencies locally, then simply use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: to start the server. Your web browser should then automatically open a new tab,
    showing the index page of the SymPy docs.
  prefs: []
  type: TYPE_NORMAL
- en: When you are finished, you can use `ctrl-c` in the terminal to stop the server.
  prefs: []
  type: TYPE_NORMAL
- en: PDF Documentation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: It is not necessary for the majority of contributors to build the PDF documentation.
    The PDF documentation will be built automatically on GitHub Actions on pull requests.
    PDF documentation for each release is included on the [GitHub releases page](https://github.com/sympy/sympy/releases).
  prefs: []
  type: TYPE_NORMAL
- en: If the PDF documentation build fails on GitHub Actions, 99% of the time this
    is due to bad LaTeX math formatting. Double check that any math you have added
    is formatted correctly, and make sure you use ``double backticks`` for code (`single
    backticks` will render as math, not code). See the resources in the [style guide](../documentation-style-guide.html#style-guide-latex-recommendations)
    for tips on formatting LaTeX math.
  prefs: []
  type: TYPE_NORMAL
- en: Building the PDF documentation requires a few extra dependencies. First you
    will need to have a TeXLive installation that includes XeLaTeX and latexmk. You
    will also need to have Chrome or Chromium installed, as it is used to convert
    some SVG files for the PDF.
  prefs: []
  type: TYPE_NORMAL
- en: 'On Ubuntu, you can install these with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'On Mac, you can use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'On Windows 10, you can use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: If DejaVu fonts are not installed in `C:\Windows\Fonts`, then open `~\AppData\Local\Microsoft\Windows\Fonts`,
    select all DejaVu fonts, right-click and click `Install for all users`.
  prefs: []
  type: TYPE_NORMAL
- en: 'To build the pdf docs run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'The resulting PDF will be in:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: where `<version>` is the SymPy version (e.g., `sympy-1.10.dev.pdf`).
  prefs: []
  type: TYPE_NORMAL
