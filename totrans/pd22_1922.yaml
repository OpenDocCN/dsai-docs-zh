- en: What’s new in 1.2.1 (January 20, 2021)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/whatsnew/v1.2.1.html](https://pandas.pydata.org/docs/whatsnew/v1.2.1.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: These are the changes in pandas 1.2.1\. See [Release notes](index.html#release)
    for a full changelog including other versions of pandas.
  prefs: []
  type: TYPE_NORMAL
- en: '## Fixed regressions'
  prefs: []
  type: TYPE_NORMAL
- en: Fixed regression in [`to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") that created corrupted zip files when there were more
    rows than `chunksize` ([GH 38714](https://github.com/pandas-dev/pandas/issues/38714))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") opening `codecs.StreamReaderWriter` in binary mode
    instead of in text mode ([GH 39247](https://github.com/pandas-dev/pandas/issues/39247))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and other read functions were the encoding error policy (`errors`)
    did not default to `"replace"` when no encoding was specified ([GH 38989](https://github.com/pandas-dev/pandas/issues/38989))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") with non-rawbyte file handles ([GH 38788](https://github.com/pandas-dev/pandas/issues/38788))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") not removing the created file when an error occurred
    ([GH 39202](https://github.com/pandas-dev/pandas/issues/39202))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in `DataFrame.__setitem__` raising `ValueError` when expanding
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    and new column is from type `"0 - name"` ([GH 39010](https://github.com/pandas-dev/pandas/issues/39010))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in setting with [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raising `ValueError` when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has unsorted [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") columns and indexer is a scalar ([GH 38601](https://github.com/pandas-dev/pandas/issues/38601))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in setting with [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raising `KeyError` with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and list-like columns indexer enlarging [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 39147](https://github.com/pandas-dev/pandas/issues/39147))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") with [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") grouping column not showing unused categories for `grouped.indices`
    ([GH 38642](https://github.com/pandas-dev/pandas/issues/38642))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`DataFrameGroupBy.sem()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sem.html#pandas.core.groupby.DataFrameGroupBy.sem
    "pandas.core.groupby.DataFrameGroupBy.sem") and [`SeriesGroupBy.sem()`](../reference/api/pandas.core.groupby.SeriesGroupBy.sem.html#pandas.core.groupby.SeriesGroupBy.sem
    "pandas.core.groupby.SeriesGroupBy.sem") where the presence of non-numeric columns
    would cause an error instead of being dropped ([GH 38774](https://github.com/pandas-dev/pandas/issues/38774))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`DataFrameGroupBy.diff()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.diff.html#pandas.core.groupby.DataFrameGroupBy.diff
    "pandas.core.groupby.DataFrameGroupBy.diff") raising for `int8` and `int16` columns
    ([GH 39050](https://github.com/pandas-dev/pandas/issues/39050))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") when aggregating an `ExtensionDType` that could fail
    for non-numeric values ([GH 38980](https://github.com/pandas-dev/pandas/issues/38980))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`Rolling.skew()`](../reference/api/pandas.core.window.rolling.Rolling.skew.html#pandas.core.window.rolling.Rolling.skew
    "pandas.core.window.rolling.Rolling.skew") and [`Rolling.kurt()`](../reference/api/pandas.core.window.rolling.Rolling.kurt.html#pandas.core.window.rolling.Rolling.kurt
    "pandas.core.window.rolling.Rolling.kurt") modifying the object inplace ([GH 38908](https://github.com/pandas-dev/pandas/issues/38908))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`DataFrame.any()`](../reference/api/pandas.DataFrame.any.html#pandas.DataFrame.any
    "pandas.DataFrame.any") and [`DataFrame.all()`](../reference/api/pandas.DataFrame.all.html#pandas.DataFrame.all
    "pandas.DataFrame.all") not returning a result for tz-aware `datetime64` columns
    ([GH 38723](https://github.com/pandas-dev/pandas/issues/38723))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") with `axis=1` using str accessor in apply function ([GH
    38979](https://github.com/pandas-dev/pandas/issues/38979))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") raising `ValueError` when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has dtype `bytes` ([GH 38900](https://github.com/pandas-dev/pandas/issues/38900))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") that raised `RecursionError` with `datetime64[ns, UTC]`
    dtype ([GH 38851](https://github.com/pandas-dev/pandas/issues/38851))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in comparisons between `NaT` and `datetime.date` objects incorrectly
    returning `True` ([GH 39151](https://github.com/pandas-dev/pandas/issues/39151))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in calling NumPy `accumulate()` ufuncs on DataFrames, e.g.
    `np.maximum.accumulate(df)` ([GH 39259](https://github.com/pandas-dev/pandas/issues/39259))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in repr of float-like strings of an `object` dtype having trailing
    0’s truncated after the decimal ([GH 38708](https://github.com/pandas-dev/pandas/issues/38708))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression that raised `AttributeError` with PyArrow versions [0.16.0,
    1.0.0) ([GH 38801](https://github.com/pandas-dev/pandas/issues/38801))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`pandas.testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") raising `TypeError` with `check_like=True`
    when [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    or columns have mixed dtype ([GH 39168](https://github.com/pandas-dev/pandas/issues/39168))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We have reverted a commit that resulted in several plotting related regressions
    in pandas 1.2.0 ([GH 38969](https://github.com/pandas-dev/pandas/issues/38969),
    [GH 38736](https://github.com/pandas-dev/pandas/issues/38736), [GH 38865](https://github.com/pandas-dev/pandas/issues/38865),
    [GH 38947](https://github.com/pandas-dev/pandas/issues/38947) and [GH 39126](https://github.com/pandas-dev/pandas/issues/39126)).
    As a result, bugs reported as fixed in pandas 1.2.0 related to inconsistent tick
    labeling in bar plots are again present ([GH 26186](https://github.com/pandas-dev/pandas/issues/26186)
    and [GH 11465](https://github.com/pandas-dev/pandas/issues/11465))  ## Calling
    NumPy ufuncs on non-aligned DataFrames'
  prefs: []
  type: TYPE_NORMAL
- en: 'Before pandas 1.2.0, calling a NumPy ufunc on non-aligned DataFrames (or DataFrame
    / Series combination) would ignore the indices, only match the inputs by shape,
    and use the index/columns of the first DataFrame for the result:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'This contrasts with how other pandas operations work, which first align the
    inputs:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: In pandas 1.2.0, we refactored how NumPy ufuncs are called on DataFrames, and
    this started to align the inputs first ([GH 39184](https://github.com/pandas-dev/pandas/issues/39184)),
    as happens in other pandas operations and as it happens for ufuncs called on Series
    objects.
  prefs: []
  type: TYPE_NORMAL
- en: For pandas 1.2.1, we restored the previous behaviour to avoid a breaking change,
    but the above example of `np.add(df1, df2)` with non-aligned inputs will now to
    raise a warning, and a future pandas 2.0 release will start aligning the inputs
    first ([GH 39184](https://github.com/pandas-dev/pandas/issues/39184)). Calling
    a NumPy ufunc on Series objects (eg `np.add(s1, s2)`) already aligns and continues
    to do so.
  prefs: []
  type: TYPE_NORMAL
- en: 'To avoid the warning and keep the current behaviour of ignoring the indices,
    convert one of the arguments to a NumPy array:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'To obtain the future behaviour and silence the warning, you can align manually
    before passing the arguments to the ufunc:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]  ## Bug fixes'
  prefs: []
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `float_precision="high"` caused segfault or wrong parsing
    of long exponent strings. This resulted in a regression in some cases as the default
    for `float_precision` was changed in pandas 1.2.0 ([GH 38753](https://github.com/pandas-dev/pandas/issues/38753))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not closing an opened file handle when a `csv.Error` or `UnicodeDecodeError`
    occurred while initializing ([GH 39024](https://github.com/pandas-dev/pandas/issues/39024))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in [`pandas.testing.assert_index_equal()`](../reference/api/pandas.testing.assert_index_equal.html#pandas.testing.assert_index_equal
    "pandas.testing.assert_index_equal") raising `TypeError` with `check_order=False`
    when [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    has mixed dtype ([GH 39168](https://github.com/pandas-dev/pandas/issues/39168))  ##
    Other'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The deprecated attributes `_AXIS_NAMES` and `_AXIS_NUMBERS` of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") will no longer show up in `dir` or `inspect.getmembers` calls
    ([GH 38740](https://github.com/pandas-dev/pandas/issues/38740))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bumped minimum fastparquet version to 0.4.0 to avoid `AttributeError` from numba
    ([GH 38344](https://github.com/pandas-dev/pandas/issues/38344))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bumped minimum pymysql version to 0.8.1 to avoid test failures ([GH 38344](https://github.com/pandas-dev/pandas/issues/38344))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed build failure on MacOS 11 in Python 3.9.1 ([GH 38766](https://github.com/pandas-dev/pandas/issues/38766))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Added reference to backwards incompatible `check_freq` arg of [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") and [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") in [pandas 1.1.0 what’s new](v1.1.0.html#whatsnew-110-api-breaking-testing-check-freq)
    ([GH 34050](https://github.com/pandas-dev/pandas/issues/34050))  ## Contributors'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A total of 20 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: Ada Draginda +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Wieteska
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bryan Cutler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fangchen Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Zeitlin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MeeseeksMachine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Micael Jarniac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Omar Afifi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas Development Team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Shadrach
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Hawkins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terji Petersen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Torsten Wörtwein
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: WANG Aiyong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kylekeppler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mzeitlin11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'patrick  ## Fixed regressions'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") that created corrupted zip files when there were more
    rows than `chunksize` ([GH 38714](https://github.com/pandas-dev/pandas/issues/38714))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") opening `codecs.StreamReaderWriter` in binary mode
    instead of in text mode ([GH 39247](https://github.com/pandas-dev/pandas/issues/39247))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and other read functions were the encoding error policy (`errors`)
    did not default to `"replace"` when no encoding was specified ([GH 38989](https://github.com/pandas-dev/pandas/issues/38989))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") with non-rawbyte file handles ([GH 38788](https://github.com/pandas-dev/pandas/issues/38788))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") not removing the created file when an error occurred
    ([GH 39202](https://github.com/pandas-dev/pandas/issues/39202))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in `DataFrame.__setitem__` raising `ValueError` when expanding
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    and new column is from type `"0 - name"` ([GH 39010](https://github.com/pandas-dev/pandas/issues/39010))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in setting with [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raising `ValueError` when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has unsorted [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") columns and indexer is a scalar ([GH 38601](https://github.com/pandas-dev/pandas/issues/38601))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in setting with [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raising `KeyError` with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and list-like columns indexer enlarging [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 39147](https://github.com/pandas-dev/pandas/issues/39147))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") with [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") grouping column not showing unused categories for `grouped.indices`
    ([GH 38642](https://github.com/pandas-dev/pandas/issues/38642))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`DataFrameGroupBy.sem()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sem.html#pandas.core.groupby.DataFrameGroupBy.sem
    "pandas.core.groupby.DataFrameGroupBy.sem") and [`SeriesGroupBy.sem()`](../reference/api/pandas.core.groupby.SeriesGroupBy.sem.html#pandas.core.groupby.SeriesGroupBy.sem
    "pandas.core.groupby.SeriesGroupBy.sem") where the presence of non-numeric columns
    would cause an error instead of being dropped ([GH 38774](https://github.com/pandas-dev/pandas/issues/38774))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`DataFrameGroupBy.diff()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.diff.html#pandas.core.groupby.DataFrameGroupBy.diff
    "pandas.core.groupby.DataFrameGroupBy.diff") raising for `int8` and `int16` columns
    ([GH 39050](https://github.com/pandas-dev/pandas/issues/39050))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") when aggregating an `ExtensionDType` that could fail
    for non-numeric values ([GH 38980](https://github.com/pandas-dev/pandas/issues/38980))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`Rolling.skew()`](../reference/api/pandas.core.window.rolling.Rolling.skew.html#pandas.core.window.rolling.Rolling.skew
    "pandas.core.window.rolling.Rolling.skew") and [`Rolling.kurt()`](../reference/api/pandas.core.window.rolling.Rolling.kurt.html#pandas.core.window.rolling.Rolling.kurt
    "pandas.core.window.rolling.Rolling.kurt") modifying the object inplace ([GH 38908](https://github.com/pandas-dev/pandas/issues/38908))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`DataFrame.any()`](../reference/api/pandas.DataFrame.any.html#pandas.DataFrame.any
    "pandas.DataFrame.any") and [`DataFrame.all()`](../reference/api/pandas.DataFrame.all.html#pandas.DataFrame.all
    "pandas.DataFrame.all") not returning a result for tz-aware `datetime64` columns
    ([GH 38723](https://github.com/pandas-dev/pandas/issues/38723))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") with `axis=1` using str accessor in apply function ([GH
    38979](https://github.com/pandas-dev/pandas/issues/38979))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") raising `ValueError` when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has dtype `bytes` ([GH 38900](https://github.com/pandas-dev/pandas/issues/38900))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") that raised `RecursionError` with `datetime64[ns, UTC]`
    dtype ([GH 38851](https://github.com/pandas-dev/pandas/issues/38851))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in comparisons between `NaT` and `datetime.date` objects incorrectly
    returning `True` ([GH 39151](https://github.com/pandas-dev/pandas/issues/39151))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in calling NumPy `accumulate()` ufuncs on DataFrames, e.g.
    `np.maximum.accumulate(df)` ([GH 39259](https://github.com/pandas-dev/pandas/issues/39259))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in repr of float-like strings of an `object` dtype having trailing
    0’s truncated after the decimal ([GH 38708](https://github.com/pandas-dev/pandas/issues/38708))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression that raised `AttributeError` with PyArrow versions [0.16.0,
    1.0.0) ([GH 38801](https://github.com/pandas-dev/pandas/issues/38801))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`pandas.testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") raising `TypeError` with `check_like=True`
    when [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    or columns have mixed dtype ([GH 39168](https://github.com/pandas-dev/pandas/issues/39168))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We have reverted a commit that resulted in several plotting related regressions
    in pandas 1.2.0 ([GH 38969](https://github.com/pandas-dev/pandas/issues/38969),
    [GH 38736](https://github.com/pandas-dev/pandas/issues/38736), [GH 38865](https://github.com/pandas-dev/pandas/issues/38865),
    [GH 38947](https://github.com/pandas-dev/pandas/issues/38947) and [GH 39126](https://github.com/pandas-dev/pandas/issues/39126)).
    As a result, bugs reported as fixed in pandas 1.2.0 related to inconsistent tick
    labeling in bar plots are again present ([GH 26186](https://github.com/pandas-dev/pandas/issues/26186)
    and [GH 11465](https://github.com/pandas-dev/pandas/issues/11465))
  prefs: []
  type: TYPE_NORMAL
- en: '## Calling NumPy ufuncs on non-aligned DataFrames'
  prefs: []
  type: TYPE_NORMAL
- en: 'Before pandas 1.2.0, calling a NumPy ufunc on non-aligned DataFrames (or DataFrame
    / Series combination) would ignore the indices, only match the inputs by shape,
    and use the index/columns of the first DataFrame for the result:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'This contrasts with how other pandas operations work, which first align the
    inputs:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: In pandas 1.2.0, we refactored how NumPy ufuncs are called on DataFrames, and
    this started to align the inputs first ([GH 39184](https://github.com/pandas-dev/pandas/issues/39184)),
    as happens in other pandas operations and as it happens for ufuncs called on Series
    objects.
  prefs: []
  type: TYPE_NORMAL
- en: For pandas 1.2.1, we restored the previous behaviour to avoid a breaking change,
    but the above example of `np.add(df1, df2)` with non-aligned inputs will now to
    raise a warning, and a future pandas 2.0 release will start aligning the inputs
    first ([GH 39184](https://github.com/pandas-dev/pandas/issues/39184)). Calling
    a NumPy ufunc on Series objects (eg `np.add(s1, s2)`) already aligns and continues
    to do so.
  prefs: []
  type: TYPE_NORMAL
- en: 'To avoid the warning and keep the current behaviour of ignoring the indices,
    convert one of the arguments to a NumPy array:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'To obtain the future behaviour and silence the warning, you can align manually
    before passing the arguments to the ufunc:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '## Bug fixes'
  prefs: []
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `float_precision="high"` caused segfault or wrong parsing
    of long exponent strings. This resulted in a regression in some cases as the default
    for `float_precision` was changed in pandas 1.2.0 ([GH 38753](https://github.com/pandas-dev/pandas/issues/38753))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not closing an opened file handle when a `csv.Error` or `UnicodeDecodeError`
    occurred while initializing ([GH 39024](https://github.com/pandas-dev/pandas/issues/39024))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.testing.assert_index_equal()`](../reference/api/pandas.testing.assert_index_equal.html#pandas.testing.assert_index_equal
    "pandas.testing.assert_index_equal") raising `TypeError` with `check_order=False`
    when [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    has mixed dtype ([GH 39168](https://github.com/pandas-dev/pandas/issues/39168))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Other'
  prefs: []
  type: TYPE_NORMAL
- en: The deprecated attributes `_AXIS_NAMES` and `_AXIS_NUMBERS` of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") will no longer show up in `dir` or `inspect.getmembers` calls
    ([GH 38740](https://github.com/pandas-dev/pandas/issues/38740))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bumped minimum fastparquet version to 0.4.0 to avoid `AttributeError` from numba
    ([GH 38344](https://github.com/pandas-dev/pandas/issues/38344))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bumped minimum pymysql version to 0.8.1 to avoid test failures ([GH 38344](https://github.com/pandas-dev/pandas/issues/38344))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed build failure on MacOS 11 in Python 3.9.1 ([GH 38766](https://github.com/pandas-dev/pandas/issues/38766))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added reference to backwards incompatible `check_freq` arg of [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") and [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") in [pandas 1.1.0 what’s new](v1.1.0.html#whatsnew-110-api-breaking-testing-check-freq)
    ([GH 34050](https://github.com/pandas-dev/pandas/issues/34050))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Contributors'
  prefs: []
  type: TYPE_NORMAL
- en: A total of 20 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: Ada Draginda +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Wieteska
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bryan Cutler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fangchen Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Zeitlin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MeeseeksMachine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Micael Jarniac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Omar Afifi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas Development Team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Shadrach
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Hawkins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terji Petersen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Torsten Wörtwein
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: WANG Aiyong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kylekeppler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mzeitlin11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: patrick
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
