- en: scipy.linalg.clarkson_woodruff_transform
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.linalg.clarkson_woodruff_transform
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.clarkson_woodruff_transform.html#scipy.linalg.clarkson_woodruff_transform](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.clarkson_woodruff_transform.html#scipy.linalg.clarkson_woodruff_transform)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.clarkson_woodruff_transform.html#scipy.linalg.clarkson_woodruff_transform](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.clarkson_woodruff_transform.html#scipy.linalg.clarkson_woodruff_transform)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Applies a Clarkson-Woodruff Transform/sketch to the input matrix.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 应用 Clarkson-Woodruff 变换/草图到输入矩阵。
- en: Given an input_matrix `A` of size `(n, d)`, compute a matrix `A'` of size (sketch_size,
    d) so that
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 给定大小为 `(n, d)` 的输入矩阵 `A`，计算大小为 `(sketch_size, d)` 的矩阵 `A'`，以便
- en: \[\|Ax\| \approx \|A'x\|\]
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: \[\|Ax\| \approx \|A'x\|\]
- en: with high probability via the Clarkson-Woodruff Transform, otherwise known as
    the CountSketch matrix.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 Clarkson-Woodruff 变换，通常称为 CountSketch 矩阵，以高概率。
- en: 'Parameters:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**input_matrix**array_like'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**input_matrix**array_like'
- en: Input matrix, of shape `(n, d)`.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 输入矩阵，形状为 `(n, d)`。
- en: '**sketch_size**int'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**sketch_size**int'
- en: Number of rows for the sketch.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 草图的行数。
- en: '**seed**{None, int, [`numpy.random.Generator`](https://numpy.org/devdocs/reference/random/generator.html#numpy.random.Generator
    "(in NumPy v2.0.dev0)"), [`numpy.random.RandomState`](https://numpy.org/devdocs/reference/random/legacy.html#numpy.random.RandomState
    "(in NumPy v2.0.dev0)")}, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**seed**{None, int, [`numpy.random.Generator`](https://numpy.org/devdocs/reference/random/generator.html#numpy.random.Generator
    "(在 NumPy v2.0.dev0 中)"), [`numpy.random.RandomState`](https://numpy.org/devdocs/reference/random/legacy.html#numpy.random.RandomState
    "(在 NumPy v2.0.dev0 中)")}, 可选'
- en: If *seed* is None (or *np.random*), the [`numpy.random.RandomState`](https://numpy.org/devdocs/reference/random/legacy.html#numpy.random.RandomState
    "(in NumPy v2.0.dev0)") singleton is used. If *seed* is an int, a new `RandomState`
    instance is used, seeded with *seed*. If *seed* is already a `Generator` or `RandomState`
    instance then that instance is used.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 *seed* 是 None（或 *np.random*），则使用 [`numpy.random.RandomState`](https://numpy.org/devdocs/reference/random/legacy.html#numpy.random.RandomState
    "(在 NumPy v2.0.dev0 中)") 单例。如果 *seed* 是一个整数，则使用新的带有 *seed* 种子的 `RandomState` 实例。如果
    *seed* 已经是 `Generator` 或 `RandomState` 实例，则使用该实例。
- en: 'Returns:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**A’**array_like'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**A’**array_like'
- en: Sketch of the input matrix `A`, of size `(sketch_size, d)`.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 对输入矩阵 `A` 的草图，大小为 `(sketch_size, d)`。
- en: Notes
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: To make the statement
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明以下的结论
- en: \[\|Ax\| \approx \|A'x\|\]
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: \[\|Ax\| \approx \|A'x\|\]
- en: precise, observe the following result which is adapted from the proof of Theorem
    14 of [[2]](#rc781ce4e1ea0-2) via Markov’s Inequality. If we have a sketch size
    `sketch_size=k` which is at least
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 精确，观察以下的结果，它是从定理 14 的证明中适应的 [[2]](#rc781ce4e1ea0-2) 通过马尔科夫不等式。如果我们有一个 `sketch_size=k`
    的草图大小，它至少是
- en: \[k \geq \frac{2}{\epsilon^2\delta}\]
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: \[k \geq \frac{2}{\epsilon^2\delta}\]
- en: Then for any fixed vector `x`,
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 针对任意固定向量 `x`，
- en: \[\|Ax\| = (1\pm\epsilon)\|A'x\|\]
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: \[\|Ax\| = (1\pm\epsilon)\|A'x\|\]
- en: with probability at least one minus delta.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 至少以概率`1 - delta`。
- en: 'This implementation takes advantage of sparsity: computing a sketch takes time
    proportional to `A.nnz`. Data `A` which is in `scipy.sparse.csc_matrix` format
    gives the quickest computation time for sparse input.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 此实现利用稀疏性：计算草图所需时间与 `A.nnz` 成正比。数据 `A` 以 `scipy.sparse.csc_matrix` 格式给出时，提供了稀疏输入的最快计算时间。
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: That said, this method does perform well on dense inputs, just slower on a relative
    scale.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，在稠密输入上，这种方法表现良好，只是相对来说速度较慢。
- en: References
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 参考资料
- en: '[1]'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[1]'
- en: Kenneth L. Clarkson and David P. Woodruff. Low rank approximation and regression
    in input sparsity time. In STOC, 2013.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Kenneth L. Clarkson 和 David P. Woodruff。在 STOC, 2013 中的低秩逼近与输入稀疏时间回归。
- en: '[[2](#id1)]'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[[2](#id1)]'
- en: David P. Woodruff. Sketching as a tool for numerical linear algebra. In Foundations
    and Trends in Theoretical Computer Science, 2014.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: David P. Woodruff。作为数值线性代数工具的草图化。在 Foundations and Trends in Theoretical Computer
    Science, 2014 中。
- en: Examples
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Create a big dense matrix `A` for the example:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个大的密集矩阵 `A` 作为例子：
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Apply the transform to create a new matrix with 200 rows:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 应用变换来创建一个新的矩阵，其中有 200 行：
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Now with high probability, the true norm is close to the sketched norm in absolute
    value.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在以高概率，真实范数的绝对值接近于草图范数。
- en: '[PRE4]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Similarly, applying our sketch preserves the solution to a linear regression
    of \(\min \|Ax - b\|\).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，应用我们的草图保留了线性回归的解 \(\min \|Ax - b\|\)。
- en: '[PRE5]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As with the matrix norm example, `linalg.norm(A @ x - b)` is close to `linalg.norm(A
    @ x_sketched - b)` with high probability.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 就像矩阵范数示例一样，`linalg.norm(A @ x - b)` 与高概率接近于 `linalg.norm(A @ x_sketched - b)`。
- en: '[PRE6]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
