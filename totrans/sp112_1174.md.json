["```py\nscipy.stats.lognorm = <scipy.stats._continuous_distns.lognorm_gen object>\n```", "```py\n>>> import numpy as np\n>>> from scipy.stats import lognorm\n>>> import matplotlib.pyplot as plt\n>>> fig, ax = plt.subplots(1, 1) \n```", "```py\n>>> s = 0.954\n>>> mean, var, skew, kurt = lognorm.stats(s, moments='mvsk') \n```", "```py\n>>> x = np.linspace(lognorm.ppf(0.01, s),\n...                 lognorm.ppf(0.99, s), 100)\n>>> ax.plot(x, lognorm.pdf(x, s),\n...        'r-', lw=5, alpha=0.6, label='lognorm pdf') \n```", "```py\n>>> rv = lognorm(s)\n>>> ax.plot(x, rv.pdf(x), 'k-', lw=2, label='frozen pdf') \n```", "```py\n>>> vals = lognorm.ppf([0.001, 0.5, 0.999], s)\n>>> np.allclose([0.001, 0.5, 0.999], lognorm.cdf(vals, s))\nTrue \n```", "```py\n>>> r = lognorm.rvs(s, size=1000) \n```", "```py\n>>> ax.hist(r, density=True, bins='auto', histtype='stepfilled', alpha=0.2)\n>>> ax.set_xlim([x[0], x[-1]])\n>>> ax.legend(loc='best', frameon=False)\n>>> plt.show() \n```", "```py\n>>> import numpy as np\n>>> import matplotlib.pyplot as plt\n>>> from scipy import stats\n>>> fig, ax = plt.subplots(1, 1)\n>>> mu, sigma = 2, 0.5\n>>> X = stats.norm(loc=mu, scale=sigma)\n>>> Y = stats.lognorm(s=sigma, scale=np.exp(mu))\n>>> x = np.linspace(*X.interval(0.999))\n>>> y = Y.rvs(size=10000)\n>>> ax.plot(x, X.pdf(x), label='X (pdf)')\n>>> ax.hist(np.log(y), density=True, bins=x, label='log(Y) (histogram)')\n>>> ax.legend()\n>>> plt.show() \n```"]