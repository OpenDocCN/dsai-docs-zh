- en: numpy.testing.assert_array_less
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.testing.assert_array_less
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.testing.assert_array_less.html](https://numpy.org/doc/1.26/reference/generated/numpy.testing.assert_array_less.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.testing.assert_array_less.html](https://numpy.org/doc/1.26/reference/generated/numpy.testing.assert_array_less.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Raises an AssertionError if two array_like objects are not ordered by less than.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果两个类似数组对象不按小于进行排序，则引发AssertionError。
- en: Given two array_like objects, check that the shape is equal and all elements
    of the first object are strictly smaller than those of the second object. An exception
    is raised at shape mismatch or incorrectly ordered values. Shape mismatch does
    not raise if an object has zero dimension. In contrast to the standard usage in
    numpy, NaNs are compared, no assertion is raised if both objects have NaNs in
    the same positions.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 给定两个类似数组对象，检查形状是否相等，以及第一个对象的所有元素是否严格小于第二个对象的元素。在形状不匹配或值错误排序时引发异常。如果对象的维度为零，则形状不匹配不会引发异常。与numpy中的标准用法相反，NaNs会被比较，如果两个对象在相同位置具有NaNs，则不会引发断言。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x**array_like'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**x** 类似数组对象'
- en: The smaller object to check.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查的较小对象。
- en: '**y**array_like'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**y** 类似数组对象'
- en: The larger object to compare.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要比较的较大对象。
- en: '**err_msg**string'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**err_msg** 字符串'
- en: The error message to be printed in case of failure.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在失败情况下打印的错误消息。
- en: '**verbose**bool'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**verbose** 布尔类型'
- en: If True, the conflicting values are appended to the error message.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为True，则将冲突的值附加到错误消息中。
- en: 'Raises:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: AssertionError
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: AssertionError
- en: If x is not strictly smaller than y, element-wise.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果x在元素级别上不严格小于y。
- en: See also
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`assert_array_equal`](numpy.testing.assert_array_equal.html#numpy.testing.assert_array_equal
    "numpy.testing.assert_array_equal")'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[`assert_array_equal`](https://numpy.org/doc/1.26/reference/generated/numpy.testing.assert_array_equal.html#numpy.testing.assert_array_equal
    "numpy.testing.assert_array_equal")'
- en: tests objects for equality
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 测试对象是否相等
- en: '[`assert_array_almost_equal`](numpy.testing.assert_array_almost_equal.html#numpy.testing.assert_array_almost_equal
    "numpy.testing.assert_array_almost_equal")'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[`assert_array_almost_equal`](https://numpy.org/doc/1.26/reference/generated/numpy.testing.assert_array_almost_equal.html#numpy.testing.assert_array_almost_equal
    "numpy.testing.assert_array_almost_equal")'
- en: test objects for equality up to precision
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 测试对象是否相等，精度高达
- en: Examples
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
