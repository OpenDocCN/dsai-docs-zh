- en: scipy.stats.quantile_test
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.quantile_test.html#scipy.stats.quantile_test](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.quantile_test.html#scipy.stats.quantile_test)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Perform a quantile test and compute a confidence interval of the quantile.
  prefs: []
  type: TYPE_NORMAL
- en: This function tests the null hypothesis that *q* is the value of the quantile
    associated with probability *p* of the population underlying sample *x*. For example,
    with default parameters, it tests that the median of the population underlying
    *x* is zero. The function returns an object including the test statistic, a p-value,
    and a method for computing the confidence interval around the quantile.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: A one-dimensional sample.
  prefs: []
  type: TYPE_NORMAL
- en: '**q**float, default: 0'
  prefs: []
  type: TYPE_NORMAL
- en: The hypothesized value of the quantile.
  prefs: []
  type: TYPE_NORMAL
- en: '**p**float, default: 0.5'
  prefs: []
  type: TYPE_NORMAL
- en: The probability associated with the quantile; i.e. the proportion of the population
    less than *q* is *p*. Must be strictly between 0 and 1.
  prefs: []
  type: TYPE_NORMAL
- en: '**alternative**{‘two-sided’, ‘less’, ‘greater’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Defines the alternative hypothesis. The following options are available (default
    is ‘two-sided’):'
  prefs: []
  type: TYPE_NORMAL
- en: '‘two-sided’: the quantile associated with the probability *p* is not *q*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘less’: the quantile associated with the probability *p* is less than *q*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘greater’: the quantile associated with the probability *p* is greater than
    *q*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**result**QuantileTestResult'
  prefs: []
  type: TYPE_NORMAL
- en: 'An object with the following attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: statisticfloat
  prefs: []
  type: TYPE_NORMAL
- en: One of two test statistics that may be used in the quantile test. The first
    test statistic, `T1`, is the proportion of samples in *x* that are less than or
    equal to the hypothesized quantile *q*. The second test statistic, `T2`, is the
    proportion of samples in *x* that are strictly less than the hypothesized quantile
    *q*.
  prefs: []
  type: TYPE_NORMAL
- en: When `alternative = 'greater'`, `T1` is used to calculate the p-value and `statistic`
    is set to `T1`.
  prefs: []
  type: TYPE_NORMAL
- en: When `alternative = 'less'`, `T2` is used to calculate the p-value and `statistic`
    is set to `T2`.
  prefs: []
  type: TYPE_NORMAL
- en: When `alternative = 'two-sided'`, both `T1` and `T2` are considered, and the
    one that leads to the smallest p-value is used.
  prefs: []
  type: TYPE_NORMAL
- en: statistic_typeint
  prefs: []
  type: TYPE_NORMAL
- en: Either *1* or *2* depending on which of `T1` or `T2` was used to calculate the
    p-value.
  prefs: []
  type: TYPE_NORMAL
- en: pvaluefloat
  prefs: []
  type: TYPE_NORMAL
- en: The p-value associated with the given alternative.
  prefs: []
  type: TYPE_NORMAL
- en: 'The object also has the following method:'
  prefs: []
  type: TYPE_NORMAL
- en: confidence_interval(confidence_level=0.95)
  prefs: []
  type: TYPE_NORMAL
- en: Computes a confidence interval around the the population quantile associated
    with the probability *p*. The confidence interval is returned in a `namedtuple`
    with fields *low* and *high*. Values are *nan* when there are not enough observations
    to compute the confidence interval at the desired confidence.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This test and its method for computing confidence intervals are non-parametric.
    They are valid if and only if the observations are i.i.d.
  prefs: []
  type: TYPE_NORMAL
- en: The implementation of the test follows Conover [[1]](#r583b5b824ca0-1). Two
    test statistics are considered.
  prefs: []
  type: TYPE_NORMAL
- en: '`T1`: The number of observations in *x* less than or equal to *q*.'
  prefs: []
  type: TYPE_NORMAL
- en: '`T1 = (x <= q).sum()`'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`T2`: The number of observations in *x* strictly less than *q*.'
  prefs: []
  type: TYPE_NORMAL
- en: '`T2 = (x < q).sum()`'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The use of two test statistics is necessary to handle the possibility that *x*
    was generated from a discrete or mixed distribution.
  prefs: []
  type: TYPE_NORMAL
- en: 'The null hypothesis for the test is:'
  prefs: []
  type: TYPE_NORMAL
- en: 'H0: The \(p^{\mathrm{th}}\) population quantile is *q*.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'and the null distribution for each test statistic is \(\mathrm{binom}\left(n,
    p\right)\). When `alternative=''less''`, the alternative hypothesis is:'
  prefs: []
  type: TYPE_NORMAL
- en: 'H1: The \(p^{\mathrm{th}}\) population quantile is less than *q*.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: and the p-value is the probability that the binomial random variable
  prefs: []
  type: TYPE_NORMAL
- en: \[Y \sim \mathrm{binom}\left(n, p\right)\]
  prefs: []
  type: TYPE_NORMAL
- en: is greater than or equal to the observed value `T2`.
  prefs: []
  type: TYPE_NORMAL
- en: 'When `alternative=''greater''`, the alternative hypothesis is:'
  prefs: []
  type: TYPE_NORMAL
- en: 'H1: The \(p^{\mathrm{th}}\) population quantile is greater than *q*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: and the p-value is the probability that the binomial random variable Y is less
    than or equal to the observed value `T1`.
  prefs: []
  type: TYPE_NORMAL
- en: When `alternative='two-sided'`, the alternative hypothesis is
  prefs: []
  type: TYPE_NORMAL
- en: 'H1: *q* is not the \(p^{\mathrm{th}}\) population quantile.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: and the p-value is twice the smaller of the p-values for the `'less'` and `'greater'`
    cases. Both of these p-values can exceed 0.5 for the same data, so the value is
    clipped into the interval \([0, 1]\).
  prefs: []
  type: TYPE_NORMAL
- en: The approach for confidence intervals is attributed to Thompson [[2]](#r583b5b824ca0-2)
    and later proven to be applicable to any set of i.i.d. samples [[3]](#r583b5b824ca0-3).
    The computation is based on the observation that the probability of a quantile
    \(q\) to be larger than any observations \(x_m (1\leq m \leq N)\) can be computed
    as
  prefs: []
  type: TYPE_NORMAL
- en: \[\mathbb{P}(x_m \leq q) = 1 - \sum_{k=0}^{m-1} \binom{N}{k} q^k(1-q)^{N-k}\]
  prefs: []
  type: TYPE_NORMAL
- en: By default, confidence intervals are computed for a 95% confidence level. A
    common interpretation of a 95% confidence intervals is that if i.i.d. samples
    are drawn repeatedly from the same population and confidence intervals are formed
    each time, the confidence interval will contain the true value of the specified
    quantile in approximately 95% of trials.
  prefs: []
  type: TYPE_NORMAL
- en: A similar function is available in the QuantileNPCI R package [[4]](#r583b5b824ca0-4).
    The foundation is the same, but it computes the confidence interval bounds by
    doing interpolations between the sample values, whereas this function uses only
    sample values as bounds. Thus, `quantile_test.confidence_interval` returns more
    conservative intervals (i.e., larger).
  prefs: []
  type: TYPE_NORMAL
- en: The same computation of confidence intervals for quantiles is included in the
    confintr package [[5]](#r583b5b824ca0-5).
  prefs: []
  type: TYPE_NORMAL
- en: Two-sided confidence intervals are not guaranteed to be optimal; i.e., there
    may exist a tighter interval that may contain the quantile of interest with probability
    larger than the confidence level. Without further assumption on the samples (e.g.,
    the nature of the underlying distribution), the one-sided intervals are optimally
    tight.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: Conover. Practical Nonparametric Statistics, 3rd Ed. 1999.
  prefs:
  - PREF_OL
  - PREF_OL
  type: TYPE_NORMAL
- en: '[[2](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: 'W. R. Thompson, “On Confidence Ranges for the Median and Other Expectation
    Distributions for Populations of Unknown Distribution Form,” The Annals of Mathematical
    Statistics, vol. 7, no. 3, pp. 122-128, 1936, Accessed: Sep. 18, 2019\. [Online].
    Available: [https://www.jstor.org/stable/2957563](https://www.jstor.org/stable/2957563).'
  prefs: []
  type: TYPE_NORMAL
- en: '[[3](#id3)]'
  prefs: []
  type: TYPE_NORMAL
- en: 'H. A. David and H. N. Nagaraja, “Order Statistics in Nonparametric Inference”
    in Order Statistics, John Wiley & Sons, Ltd, 2005, pp. 159-170\. Available: [https://onlinelibrary.wiley.com/doi/10.1002/0471722162.ch7](https://onlinelibrary.wiley.com/doi/10.1002/0471722162.ch7).'
  prefs: []
  type: TYPE_NORMAL
- en: '[[4](#id4)]'
  prefs: []
  type: TYPE_NORMAL
- en: 'N. Hutson, A. Hutson, L. Yan, “QuantileNPCI: Nonparametric Confidence Intervals
    for Quantiles,” R package, [https://cran.r-project.org/package=QuantileNPCI](https://cran.r-project.org/package=QuantileNPCI)'
  prefs: []
  type: TYPE_NORMAL
- en: '[[5](#id5)]'
  prefs: []
  type: TYPE_NORMAL
- en: 'M. Mayer, “confintr: Confidence Intervals,” R package, [https://cran.r-project.org/package=confintr](https://cran.r-project.org/package=confintr)'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Suppose we wish to test the null hypothesis that the median of a population
    is equal to 0.5\. We choose a confidence level of 99%; that is, we will reject
    the null hypothesis in favor of the alternative if the p-value is less than 0.01.
  prefs: []
  type: TYPE_NORMAL
- en: When testing random variates from the standard uniform distribution, which has
    a median of 0.5, we expect the data to be consistent with the null hypothesis
    most of the time.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: As expected, the p-value is not below our threshold of 0.01, so we cannot reject
    the null hypothesis.
  prefs: []
  type: TYPE_NORMAL
- en: When testing data from the standard *normal* distribution, which has a median
    of 0, we would expect the null hypothesis to be rejected.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Indeed, the p-value is lower than our threshold of 0.01, so we reject the null
    hypothesis in favor of the default “two-sided” alternative: the median of the
    population is *not* equal to 0.5.'
  prefs: []
  type: TYPE_NORMAL
- en: However, suppose we were to test the null hypothesis against the one-sided alternative
    that the median of the population is *greater* than 0.5\. Since the median of
    the standard normal is less than 0.5, we would not expect the null hypothesis
    to be rejected.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Unsurprisingly, with a p-value greater than our threshold, we would not reject
    the null hypothesis in favor of the chosen alternative.
  prefs: []
  type: TYPE_NORMAL
- en: The quantile test can be used for any quantile, not only the median. For example,
    we can test whether the third quartile of the distribution underlying the sample
    is greater than 0.6.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The p-value is lower than the threshold. We reject the null hypothesis in favor
    of the alternative: the third quartile of the distribution underlying our sample
    is greater than 0.6.'
  prefs: []
  type: TYPE_NORMAL
- en: '[`quantile_test`](#scipy.stats.quantile_test "scipy.stats.quantile_test") can
    also compute confidence intervals for any quantile.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'When testing a one-sided alternative, the confidence interval contains all
    observations such that if passed as *q*, the p-value of the test would be greater
    than 0.05, and therefore the null hypothesis would not be rejected. For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Also, if a 95% confidence interval is repeatedly generated for random samples,
    the confidence interval will contain the true quantile value in approximately
    95% of replications.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: This works with any distribution and any quantile, as long as the samples are
    i.i.d.
  prefs: []
  type: TYPE_NORMAL
