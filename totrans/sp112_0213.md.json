["```py\nscipy.io.loadmat(file_name, mdict=None, appendmat=True, **kwargs)\n```", "```py\n>>> from os.path import dirname, join as pjoin\n>>> import scipy.io as sio \n```", "```py\n>>> data_dir = pjoin(dirname(sio.__file__), 'matlab', 'tests', 'data')\n>>> mat_fname = pjoin(data_dir, 'testdouble_7.4_GLNX86.mat') \n```", "```py\n>>> mat_contents = sio.loadmat(mat_fname) \n```", "```py\n>>> sorted(mat_contents.keys())\n['__globals__', '__header__', '__version__', 'testdouble']\n>>> mat_contents['testdouble']\narray([[0\\.        , 0.78539816, 1.57079633, 2.35619449, 3.14159265,\n 3.92699082, 4.71238898, 5.49778714, 6.28318531]]) \n```", "```py\n>>> matstruct_fname = pjoin(data_dir, 'teststruct_7.4_GLNX86.mat')\n>>> matstruct_contents = sio.loadmat(matstruct_fname)\n>>> teststruct = matstruct_contents['teststruct']\n>>> teststruct.dtype\ndtype([('stringfield', 'O'), ('doublefield', 'O'), ('complexfield', 'O')]) \n```", "```py\n>>> teststruct.size\n1\n>>> teststruct.shape\n(1, 1) \n```", "```py\n>>> teststruct[0, 0]['stringfield']\narray(['Rats live on no evil star.'],\n dtype='<U26') \n```", "```py\n>>> teststruct['doublefield'][0, 0]\narray([[ 1.41421356,  2.71828183,  3.14159265]]) \n```", "```py\n>>> matstruct_squeezed = sio.loadmat(matstruct_fname, squeeze_me=True)\n>>> matstruct_squeezed['teststruct'].shape\n()\n>>> matstruct_squeezed['teststruct']['complexfield'].shape\n()\n>>> matstruct_squeezed['teststruct']['complexfield'].item()\narray([ 1.41421356+1.41421356j,  2.71828183+2.71828183j,\n 3.14159265+3.14159265j]) \n```"]