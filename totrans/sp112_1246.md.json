["```py\nscipy.stats.planck = <scipy.stats._discrete_distns.planck_gen object>\n```", "```py\n>>> import numpy as np\n>>> from scipy.stats import planck\n>>> import matplotlib.pyplot as plt\n>>> fig, ax = plt.subplots(1, 1) \n```", "```py\n>>> lambda_ = 0.51\n>>> mean, var, skew, kurt = planck.stats(lambda_, moments='mvsk') \n```", "```py\n>>> x = np.arange(planck.ppf(0.01, lambda_),\n...               planck.ppf(0.99, lambda_))\n>>> ax.plot(x, planck.pmf(x, lambda_), 'bo', ms=8, label='planck pmf')\n>>> ax.vlines(x, 0, planck.pmf(x, lambda_), colors='b', lw=5, alpha=0.5) \n```", "```py\n>>> rv = planck(lambda_)\n>>> ax.vlines(x, 0, rv.pmf(x), colors='k', linestyles='-', lw=1,\n...         label='frozen pmf')\n>>> ax.legend(loc='best', frameon=False)\n>>> plt.show() \n```", "```py\n>>> prob = planck.cdf(x, lambda_)\n>>> np.allclose(x, planck.ppf(prob, lambda_))\nTrue \n```", "```py\n>>> r = planck.rvs(lambda_, size=1000) \n```"]