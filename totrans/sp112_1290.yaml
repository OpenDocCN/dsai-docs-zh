- en: scipy.stats.ttest_1samp
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.ttest_1samp.html#scipy.stats.ttest_1samp](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.ttest_1samp.html#scipy.stats.ttest_1samp)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Calculate the T-test for the mean of ONE group of scores.
  prefs: []
  type: TYPE_NORMAL
- en: This is a test for the null hypothesis that the expected value (mean) of a sample
    of independent observations *a* is equal to the given population mean, *popmean*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Sample observation.
  prefs: []
  type: TYPE_NORMAL
- en: '**popmean**float or array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Expected value in null hypothesis. If array_like, then its length along *axis*
    must equal 1, and it must otherwise be broadcastable with *a*.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int or None, default: 0'
  prefs: []
  type: TYPE_NORMAL
- en: If an int, the axis of the input along which to compute the statistic. The statistic
    of each axis-slice (e.g. row) of the input will appear in a corresponding element
    of the output. If `None`, the input will be raveled before computing the statistic.
  prefs: []
  type: TYPE_NORMAL
- en: '**nan_policy**{‘propagate’, ‘omit’, ‘raise’}'
  prefs: []
  type: TYPE_NORMAL
- en: Defines how to handle input NaNs.
  prefs: []
  type: TYPE_NORMAL
- en: '`propagate`: if a NaN is present in the axis slice (e.g. row) along which the
    statistic is computed, the corresponding entry of the output will be NaN.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`omit`: NaNs will be omitted when performing the calculation. If insufficient
    data remains in the axis slice along which the statistic is computed, the corresponding
    entry of the output will be NaN.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`raise`: if a NaN is present, a `ValueError` will be raised.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**alternative**{‘two-sided’, ‘less’, ‘greater’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Defines the alternative hypothesis. The following options are available (default
    is ‘two-sided’):'
  prefs: []
  type: TYPE_NORMAL
- en: '‘two-sided’: the mean of the underlying distribution of the sample is different
    than the given population mean (*popmean*)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘less’: the mean of the underlying distribution of the sample is less than
    the given population mean (*popmean*)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘greater’: the mean of the underlying distribution of the sample is greater
    than the given population mean (*popmean*)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**keepdims**bool, default: False'
  prefs: []
  type: TYPE_NORMAL
- en: If this is set to True, the axes which are reduced are left in the result as
    dimensions with size one. With this option, the result will broadcast correctly
    against the input array.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**result**[`TtestResult`](scipy.stats._result_classes.TtestResult.html#scipy.stats._result_classes.TtestResult
    "scipy.stats._result_classes.TtestResult")'
  prefs: []
  type: TYPE_NORMAL
- en: 'An object with the following attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: statisticfloat or array
  prefs: []
  type: TYPE_NORMAL
- en: The t-statistic.
  prefs: []
  type: TYPE_NORMAL
- en: pvaluefloat or array
  prefs: []
  type: TYPE_NORMAL
- en: The p-value associated with the given alternative.
  prefs: []
  type: TYPE_NORMAL
- en: dffloat or array
  prefs: []
  type: TYPE_NORMAL
- en: The number of degrees of freedom used in calculation of the t-statistic; this
    is one less than the size of the sample (`a.shape[axis]`).
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.10.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'The object also has the following method:'
  prefs: []
  type: TYPE_NORMAL
- en: confidence_interval(confidence_level=0.95)
  prefs: []
  type: TYPE_NORMAL
- en: Computes a confidence interval around the population mean for the given confidence
    level. The confidence interval is returned in a `namedtuple` with fields *low*
    and *high*.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.10.0.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The statistic is calculated as `(np.mean(a) - popmean)/se`, where `se` is the
    standard error. Therefore, the statistic will be positive when the sample mean
    is greater than the population mean and negative when the sample mean is less
    than the population mean.
  prefs: []
  type: TYPE_NORMAL
- en: Beginning in SciPy 1.9, `np.matrix` inputs (not recommended for new code) are
    converted to `np.ndarray` before the calculation is performed. In this case, the
    output will be a scalar or `np.ndarray` of appropriate shape rather than a 2D
    `np.matrix`. Similarly, while masked elements of masked arrays are ignored, the
    output will be a scalar or `np.ndarray` rather than a masked array with `mask=False`.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Suppose we wish to test the null hypothesis that the mean of a population is
    equal to 0.5\. We choose a confidence level of 99%; that is, we will reject the
    null hypothesis in favor of the alternative if the p-value is less than 0.01.
  prefs: []
  type: TYPE_NORMAL
- en: When testing random variates from the standard uniform distribution, which has
    a mean of 0.5, we expect the data to be consistent with the null hypothesis most
    of the time.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: As expected, the p-value of 0.017 is not below our threshold of 0.01, so we
    cannot reject the null hypothesis.
  prefs: []
  type: TYPE_NORMAL
- en: When testing data from the standard *normal* distribution, which has a mean
    of 0, we would expect the null hypothesis to be rejected.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Indeed, the p-value is lower than our threshold of 0.01, so we reject the null
    hypothesis in favor of the default “two-sided” alternative: the mean of the population
    is *not* equal to 0.5.'
  prefs: []
  type: TYPE_NORMAL
- en: However, suppose we were to test the null hypothesis against the one-sided alternative
    that the mean of the population is *greater* than 0.5\. Since the mean of the
    standard normal is less than 0.5, we would not expect the null hypothesis to be
    rejected.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Unsurprisingly, with a p-value greater than our threshold, we would not reject
    the null hypothesis.
  prefs: []
  type: TYPE_NORMAL
- en: Note that when working with a confidence level of 99%, a true null hypothesis
    will be rejected approximately 1% of the time.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Indeed, even though all 100 samples above were drawn from the standard uniform
    distribution, which *does* have a population mean of 0.5, we would mistakenly
    reject the null hypothesis for one of them.
  prefs: []
  type: TYPE_NORMAL
- en: '[`ttest_1samp`](#scipy.stats.ttest_1samp "scipy.stats.ttest_1samp") can also
    compute a confidence interval around the population mean.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The bounds of the 95% confidence interval are the minimum and maximum values
    of the parameter *popmean* for which the p-value of the test would be 0.05.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Under certain assumptions about the population from which a sample is drawn,
    the confidence interval with confidence level 95% is expected to contain the true
    population mean in 95% of sample replications.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
