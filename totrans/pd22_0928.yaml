- en: pandas.tseries.offsets.BusinessHour
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.tseries.offsets.BusinessHour.html](https://pandas.pydata.org/docs/reference/api/pandas.tseries.offsets.BusinessHour.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: DateOffset subclass representing possibly n business hours.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**n**int, default 1'
  prefs: []
  type: TYPE_NORMAL
- en: The number of hours represented.
  prefs: []
  type: TYPE_NORMAL
- en: '**normalize**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Normalize start/end dates to midnight before generating date range.
  prefs: []
  type: TYPE_NORMAL
- en: '**start**str, time, or list of str/time, default “09:00”'
  prefs: []
  type: TYPE_NORMAL
- en: Start time of your custom business hour in 24h format.
  prefs: []
  type: TYPE_NORMAL
- en: '**end**str, time, or list of str/time, default: “17:00”'
  prefs: []
  type: TYPE_NORMAL
- en: End time of your custom business hour in 24h format.
  prefs: []
  type: TYPE_NORMAL
- en: '**offset**timedelta, default timedelta(0)'
  prefs: []
  type: TYPE_NORMAL
- en: Time offset to apply.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: You can use the parameter `n` to represent a shift of n hours.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: You can also change the start and the end of business hours.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Passing the parameter `normalize` equal to True, you shift the start of the
    next business hour to midnight.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: You can divide your business day hours into several parts.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs: []
  type: TYPE_NORMAL
- en: '| `base` | Returns a copy of the calling offset object with n=1 and all other
    attributes equal. |'
  prefs: []
  type: TYPE_TB
- en: '| [`calendar`](pandas.tseries.offsets.BusinessHour.calendar.html#pandas.tseries.offsets.BusinessHour.calendar
    "pandas.tseries.offsets.BusinessHour.calendar") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`end`](pandas.tseries.offsets.BusinessHour.end.html#pandas.tseries.offsets.BusinessHour.end
    "pandas.tseries.offsets.BusinessHour.end") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`freqstr`](pandas.tseries.offsets.BusinessHour.freqstr.html#pandas.tseries.offsets.BusinessHour.freqstr
    "pandas.tseries.offsets.BusinessHour.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`holidays`](pandas.tseries.offsets.BusinessHour.holidays.html#pandas.tseries.offsets.BusinessHour.holidays
    "pandas.tseries.offsets.BusinessHour.holidays") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`kwds`](pandas.tseries.offsets.BusinessHour.kwds.html#pandas.tseries.offsets.BusinessHour.kwds
    "pandas.tseries.offsets.BusinessHour.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`n`](pandas.tseries.offsets.BusinessHour.n.html#pandas.tseries.offsets.BusinessHour.n
    "pandas.tseries.offsets.BusinessHour.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`name`](pandas.tseries.offsets.BusinessHour.name.html#pandas.tseries.offsets.BusinessHour.name
    "pandas.tseries.offsets.BusinessHour.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`nanos`](pandas.tseries.offsets.BusinessHour.nanos.html#pandas.tseries.offsets.BusinessHour.nanos
    "pandas.tseries.offsets.BusinessHour.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| `next_bday` | Used for moving to next business day. |'
  prefs: []
  type: TYPE_TB
- en: '| [`normalize`](pandas.tseries.offsets.BusinessHour.normalize.html#pandas.tseries.offsets.BusinessHour.normalize
    "pandas.tseries.offsets.BusinessHour.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| `offset` | Alias for self._offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`rule_code`](pandas.tseries.offsets.BusinessHour.rule_code.html#pandas.tseries.offsets.BusinessHour.rule_code
    "pandas.tseries.offsets.BusinessHour.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`start`](pandas.tseries.offsets.BusinessHour.start.html#pandas.tseries.offsets.BusinessHour.start
    "pandas.tseries.offsets.BusinessHour.start") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`weekmask`](pandas.tseries.offsets.BusinessHour.weekmask.html#pandas.tseries.offsets.BusinessHour.weekmask
    "pandas.tseries.offsets.BusinessHour.weekmask") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`copy`](pandas.tseries.offsets.BusinessHour.copy.html#pandas.tseries.offsets.BusinessHour.copy
    "pandas.tseries.offsets.BusinessHour.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_anchored`](pandas.tseries.offsets.BusinessHour.is_anchored.html#pandas.tseries.offsets.BusinessHour.is_anchored
    "pandas.tseries.offsets.BusinessHour.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_month_end`](pandas.tseries.offsets.BusinessHour.is_month_end.html#pandas.tseries.offsets.BusinessHour.is_month_end
    "pandas.tseries.offsets.BusinessHour.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_month_start`](pandas.tseries.offsets.BusinessHour.is_month_start.html#pandas.tseries.offsets.BusinessHour.is_month_start
    "pandas.tseries.offsets.BusinessHour.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_on_offset`](pandas.tseries.offsets.BusinessHour.is_on_offset.html#pandas.tseries.offsets.BusinessHour.is_on_offset
    "pandas.tseries.offsets.BusinessHour.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_quarter_end`](pandas.tseries.offsets.BusinessHour.is_quarter_end.html#pandas.tseries.offsets.BusinessHour.is_quarter_end
    "pandas.tseries.offsets.BusinessHour.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_quarter_start`](pandas.tseries.offsets.BusinessHour.is_quarter_start.html#pandas.tseries.offsets.BusinessHour.is_quarter_start
    "pandas.tseries.offsets.BusinessHour.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_year_end`](pandas.tseries.offsets.BusinessHour.is_year_end.html#pandas.tseries.offsets.BusinessHour.is_year_end
    "pandas.tseries.offsets.BusinessHour.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_year_start`](pandas.tseries.offsets.BusinessHour.is_year_start.html#pandas.tseries.offsets.BusinessHour.is_year_start
    "pandas.tseries.offsets.BusinessHour.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| `rollback`(other) | Roll provided date backward to next offset only if not
    on offset. |'
  prefs: []
  type: TYPE_TB
- en: '| `rollforward`(other) | Roll provided date forward to next offset only if
    not on offset. |'
  prefs: []
  type: TYPE_TB
