["```py\n`# Install the ultralytics package from PyPI pip  install  ultralytics` \n```", "```py\n`# Install the ultralytics package from GitHub pip  install  git+https://github.com/ultralytics/ultralytics.git@main` \n```", "```py\n`# Install the ultralytics package using conda conda  install  -c  conda-forge  ultralytics` \n```", "```py\n`# Install all packages together using conda conda  install  -c  pytorch  -c  nvidia  -c  conda-forge  pytorch  torchvision  pytorch-cuda=11.8  ultralytics` \n```", "```py\n`# Set image name as a variable t=ultralytics/ultralytics:latest-conda  # Pull the latest ultralytics image from Docker Hub sudo  docker  pull  $t  # Run the ultralytics image in a container with GPU support sudo  docker  run  -it  --ipc=host  --gpus  all  $t  # all GPUs sudo  docker  run  -it  --ipc=host  --gpus  '\"device=2,3\"'  $t  # specify GPUs` \n```", "```py\n`# Clone the ultralytics repository git  clone  https://github.com/ultralytics/ultralytics  # Navigate to the cloned directory cd  ultralytics  # Install the package in editable mode for development pip  install  -e  .` \n```", "```py\n`# Set image name as a variable t=ultralytics/ultralytics:latest  # Pull the latest ultralytics image from Docker Hub sudo  docker  pull  $t  # Run the ultralytics image in a container with GPU support sudo  docker  run  -it  --ipc=host  --gpus  all  $t  # all GPUs sudo  docker  run  -it  --ipc=host  --gpus  '\"device=2,3\"'  $t  # specify GPUs` \n```", "```py\n`# Mount local directory to a directory inside the container sudo  docker  run  -it  --ipc=host  --gpus  all  -v  /path/on/host:/path/in/container  $t` \n```", "```py\n`yolo  TASK  MODE  ARGS` \n```", "```py\n`yolo  train  data=coco8.yaml  model=yolov8n.pt  epochs=10  lr0=0.01` \n```", "```py\n`yolo  predict  model=yolov8n-seg.pt  source='https://youtu.be/LNwODJXcvt4'  imgsz=320` \n```", "```py\n`yolo  val  model=yolov8n.pt  data=coco8.yaml  batch=1  imgsz=640` \n```", "```py\n`yolo  export  model=yolov8n-cls.pt  format=onnx  imgsz=224,128` \n```", "```py\n`yolo  help yolo  checks yolo  version yolo  settings yolo  copy-cfg yolo  cfg` \n```", "```py\n`from ultralytics import YOLO  # Create a new YOLO model from scratch model = YOLO(\"yolov8n.yaml\")  # Load a pretrained YOLO model (recommended for training) model = YOLO(\"yolov8n.pt\")  # Train the model using the 'coco8.yaml' dataset for 3 epochs results = model.train(data=\"coco8.yaml\", epochs=3)  # Evaluate the model's performance on the validation set results = model.val()  # Perform object detection on an image using the model results = model(\"https://ultralytics.com/images/bus.jpg\")  # Export the model to ONNX format success = model.export(format=\"onnx\")` \n```", "```py\n`from ultralytics import settings  # View all settings print(settings)  # Return a specific setting value = settings[\"runs_dir\"]` \n```", "```py\n`yolo  settings` \n```", "```py\n`from ultralytics import settings  # Update a setting settings.update({\"runs_dir\": \"/path/to/runs\"})  # Update multiple settings settings.update({\"runs_dir\": \"/path/to/runs\", \"tensorboard\": False})  # Reset settings to default values settings.reset()` \n```", "```py\n`# Update a setting yolo  settings  runs_dir='/path/to/runs'  # Update multiple settings yolo  settings  runs_dir='/path/to/runs'  tensorboard=False  # Reset settings to default values yolo  settings  reset` \n```", "```py\n`pip  install  ultralytics` \n```", "```py\n`pip  install  git+https://github.com/ultralytics/ultralytics.git` \n```", "```py\n`conda  install  -c  conda-forge  ultralytics` \n```", "```py\n`conda  install  -c  pytorch  -c  nvidia  -c  conda-forge  pytorch  torchvision  pytorch-cuda=11.8  ultralytics` \n```", "```py\n`# Pull the latest ultralytics image from Docker Hub sudo  docker  pull  ultralytics/ultralytics:latest  # Run the ultralytics image in a container with GPU support sudo  docker  run  -it  --ipc=host  --gpus  all  ultralytics/ultralytics:latest` \n```", "```py\n`# Clone the ultralytics repository git  clone  https://github.com/ultralytics/ultralytics  # Navigate to the cloned directory cd  ultralytics  # Install the package in editable mode for development pip  install  -e  .` \n```", "```py\n`yolo  TASK  MODE  ARGS` \n```", "```py\n`yolo  train  data=coco8.yaml  model=yolov8n.pt  epochs=10  lr0=0.01` \n```"]