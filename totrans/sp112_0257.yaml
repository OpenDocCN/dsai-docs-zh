- en: scipy.linalg.ishermitian
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.ishermitian.html#scipy.linalg.ishermitian](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.ishermitian.html#scipy.linalg.ishermitian)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Check if a square 2D array is Hermitian.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Input array of size (N, N)
  prefs: []
  type: TYPE_NORMAL
- en: '**atol**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Absolute error bound
  prefs: []
  type: TYPE_NORMAL
- en: '**rtol**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Relative error bound
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**her**bool'
  prefs: []
  type: TYPE_NORMAL
- en: Returns True if the array Hermitian.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: TypeError
  prefs: []
  type: TYPE_NORMAL
- en: If the dtype of the array is not supported, in particular, NumPy float16, float128
    and complex256 dtypes.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`issymmetric`](scipy.linalg.issymmetric.html#scipy.linalg.issymmetric "scipy.linalg.issymmetric")'
  prefs: []
  type: TYPE_NORMAL
- en: Check if a square 2D array is symmetric
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: For square empty arrays the result is returned True by convention.
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.inf`](https://numpy.org/devdocs/reference/constants.html#numpy.inf
    "(in NumPy v2.0.dev0)") will be treated as a number, that is to say `[[1, inf],
    [inf, 2]]` will return `True`. On the other hand [`numpy.nan`](https://numpy.org/devdocs/reference/constants.html#numpy.nan
    "(in NumPy v2.0.dev0)") is never symmetric, say, `[[1, nan], [nan, 2]]` will return
    `False`.'
  prefs: []
  type: TYPE_NORMAL
- en: When `atol` and/or `rtol` are set to , then the comparison is performed by [`numpy.allclose`](https://numpy.org/devdocs/reference/generated/numpy.allclose.html#numpy.allclose
    "(in NumPy v2.0.dev0)") and the tolerance values are passed to it. Otherwise an
    exact comparison against zero is performed by internal functions. Hence performance
    can improve or degrade depending on the size and dtype of the array. If one of
    `atol` or `rtol` given the other one is automatically set to zero.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
