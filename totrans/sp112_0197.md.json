["```py\nclass scipy.interpolate.UnivariateSpline(x, y, w=None, bbox=[None, None], k=3, s=None, ext=0, check_finite=False)\n```", "```py\nsum((w[i] * (y[i]-spl(x[i])))**2, axis=0) <= s \n```", "```py\nabs(sum((w[i] * (y[i]-spl(x[i])))**2, axis=0) - s) < 0.001 * s \n```", "```py\n>>> import numpy as np\n>>> from scipy.interpolate import UnivariateSpline\n>>> x, y = np.array([1, 2, 3, 4]), np.array([1, np.nan, 3, 4])\n>>> w = np.isnan(y)\n>>> y[w] = 0.\n>>> spl = UnivariateSpline(x, y, w=~w) \n```", "```py\n>>> import numpy as np\n>>> import matplotlib.pyplot as plt\n>>> from scipy.interpolate import UnivariateSpline\n>>> rng = np.random.default_rng()\n>>> x = np.linspace(-3, 3, 50)\n>>> y = np.exp(-x**2) + 0.1 * rng.standard_normal(50)\n>>> plt.plot(x, y, 'ro', ms=5) \n```", "```py\n>>> spl = UnivariateSpline(x, y)\n>>> xs = np.linspace(-3, 3, 1000)\n>>> plt.plot(xs, spl(xs), 'g', lw=3) \n```", "```py\n>>> spl.set_smoothing_factor(0.5)\n>>> plt.plot(xs, spl(xs), 'b', lw=3)\n>>> plt.show() \n```"]