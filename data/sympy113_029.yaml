- en: Solve a System of Equations Algebraically
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代数方法求解方程组
- en: Original text：[https://docs.sympy.org/latest/guides/solving/solve-system-of-equations-algebraically.html](https://docs.sympy.org/latest/guides/solving/solve-system-of-equations-algebraically.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.sympy.org/latest/guides/solving/solve-system-of-equations-algebraically.html](https://docs.sympy.org/latest/guides/solving/solve-system-of-equations-algebraically.html)
- en: Use SymPy to algebraically solve a system of equations, whether linear or nonlinear.
    For example, solving \(x^2 + y = 2z, y = -4z\) for x and y (assuming z is a constant
    or parameter) yields \(\{(x = -\sqrt{6z}, y = -4z),\) \({(x = \sqrt{6z}, y = -4z)\}}\).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 SymPy 代数方法求解线性或非线性方程组。例如，对于解 \(x^2 + y = 2z, y = -4z\) 求解 x 和 y（假设 z 是常数或参数）得到
    \(\{(x = -\sqrt{6z}, y = -4z),\) \({(x = \sqrt{6z}, y = -4z)\}}\)。
- en: Alternatives to Consider
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 考虑的替代方案
- en: Some systems of equations cannot be solved algebraically (either at all or by
    SymPy), so you may have to [solve your system of equations numerically](solve-numerically.html)
    using [`nsolve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.nsolve
    "sympy.solvers.solvers.nsolve") instead.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些方程组无法通过代数方法（无论是完全还是通过SymPy）求解，因此您可能需要通过数值方法 [数值求解您的方程组](solve-numerically.html)，而不是使用
    [`nsolve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.nsolve "sympy.solvers.solvers.nsolve")。
- en: Examples of Solving a System of Equations Algebraically
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代数方法解决方程组的示例
- en: 'Whether your equations are linear or nonlinear, you can use [`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve"):'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '无论您的方程是线性还是非线性，您都可以使用 [`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve"):'
- en: Solve a System of Linear Equations Algebraically
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 代数方法求解线性方程组
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Solve a System of Nonlinear Equations Algebraically
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 代数方法求解非线性方程组
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Guidance
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 指南
- en: Refer to [Include the Variable to be Solved for in the Function Call](solving-guidance.html#include-the-variable-to-be-solved-for-in-the-function-call)
    and [Ensure Consistent Formatting From solve()](solving-guidance.html#ensure-consistent-formatting-from-solve).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 参考 [在函数调用中包含要解决的变量](solving-guidance.html#include-the-variable-to-be-solved-for-in-the-function-call)
    和 [确保 solve() 的一致格式](solving-guidance.html#ensure-consistent-formatting-from-solve)。
- en: 'There are two methods below for containing solution results: [dictionary](#solve-and-use-results-in-a-dictionary)
    or [set](#solve-results-in-a-set). A dictionary is easier to interrogate programmatically,
    so if you need to extract solutions using code, we recommend the dictionary approach.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 下面有两种方法来包含解决方案结果：[字典](#solve-and-use-results-in-a-dictionary) 或 [集合](#solve-results-in-a-set)。字典更容易通过编程方式进行查询，因此如果需要使用代码提取解决方案，我们建议使用字典方法。
- en: Solve and Use Results in a Dictionary
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 求解并使用结果作为一个字典
- en: Solve Into a Solution Given as a Dictionary
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 给出作为字典的解决方案
- en: 'You can solve a system of equations for some variables (for example, \(x\)
    and \(y\)) leaving another symbol as a constant or parameter (for example, \(z\)).
    You can specify the variables to solve for as multiple separate arguments, or
    as a list (or tuple):'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以为一些变量（例如，\(x\) 和 \(y\)) 解决一组方程，将另一个符号作为常数或参数（例如，\(z\))。您可以将要解决的变量指定为多个单独的参数，或作为一个列表（或元组）：
- en: '[PRE2]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Use a Solution Given as a Dictionary
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用字典给出的解决方案
- en: 'You can then extract solutions by indexing (specifying in brackets) the solution
    number, and then the symbol. For example `solutions[0][x]` gives the result for
    `x` in the first solution:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以通过索引（用方括号指定）解的编号，然后是符号来提取解决方案。例如 `solutions[0][x]` 给出第一个解的 `x` 的结果：
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Solve Results in a Set
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 求解结果为一个集合
- en: 'To get a list of symbols and set of solutions, use `set=True` instead of `dict=True`:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 若要获取符号列表和解集，请使用 `set=True` 而不是 `dict=True`：
- en: '[PRE4]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Options That Can Speed up [`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve")
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加快 [`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve") 的选项
- en: Refer to [Options That Can Speed up solve()](solving-guidance.html#options-that-can-speed-up-solve).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 参考 [加快 solve() 的选项](solving-guidance.html#options-that-can-speed-up-solve)。
- en: Not All Systems of Equations Can be Solved
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 并非所有的方程组都可以求解
- en: Systems of Equations With no Solution
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 无解的方程组
- en: 'Some systems of equations have no solution. For example, the following two
    systems have no solution because they reduce to `1 == 0`, so SymPy returns an
    empty list:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 一些方程组没有解。例如，以下两个方程组没有解，因为它们归结为 `1 == 0`，所以SymPy返回一个空列表：
- en: '[PRE5]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The following system reduces to \(z = 2z\), so it has no general solution, but
    it could be satisfied if \(z=0\). Note that [`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve") will not assume that \(z=0\), even though that
    is the only value of \(z\) that makes the system of equations consistent, because
    \(z\) is a parameter rather than an unknown. That is, [`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve") does not treat \(z\) as an unknown because it is
    not in the list of symbols specified as unknowns (`[x, y]`) and all such symbols
    are treated like parameters with arbitrary value. Whether a symbol is treated
    as a variable or a parameter is determined only by whether it is specified as
    a symbol to solve for in [`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve"). There is no such distinction made when creating
    the symbol using [`symbols()`](../../modules/core.html#sympy.core.symbol.symbols
    "sympy.core.symbol.symbols") (or importing from [`abc`](../../modules/abc.html#module-sympy.abc
    "sympy.abc")).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的系统简化为 \(z = 2z\)，因此没有通解，但如果 \(z=0\)，则可能满足。请注意，[`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve") 不会假定 \(z=0\)，即使这是使方程组一致的唯一值，因为 \(z\) 是一个参数而不是未知数。也就是说，[`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve") 不会像处理未知数一样处理 \(z\)，因为它不在指定为未知数解的符号列表中（`[x, y]`），所有这些符号都像具有任意值的参数一样处理。一个符号是变量还是参数的区分只有在使用[`symbols()`](../../modules/core.html#sympy.core.symbol.symbols
    "sympy.core.symbol.symbols")（或从[`abc`](../../modules/abc.html#module-sympy.abc
    "sympy.abc")导入）创建符号时才能确定。在创建符号时，没有这样的区别。
- en: '[PRE7]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The following system is [overconstrained](https://en.wikipedia.org/wiki/Overdetermined_system),
    meaning there are more equations (three) than unknowns to be solved for (two,
    namely \(x\) and \(y\)). It has no solution:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的系统是[过约束的](https://en.wikipedia.org/wiki/Overdetermined_system)，意味着方程（三个）比要解的未知数（两个，即
    \(x\) 和 \(y\)）更多。它没有解：
- en: '[PRE8]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Note that some overconstrained systems do have solutions (for example, if an
    equation is a linear combination of the others), in which case SymPy can solve
    the overconstrained system.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，一些过约束系统确实有解（例如，如果一个方程是其他方程的线性组合），在这种情况下 SymPy 可以解决这种过约束系统。
- en: Systems of Equations With no Closed-Form Solution
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 没有封闭形式解的方程组
- en: 'Some systems of equations cannot be solved algebraically, for example those
    containing [transcendental equations](https://en.wikipedia.org/wiki/Transcendental_equation):'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 某些方程组无法通过代数方法求解，例如包含[超越方程](https://en.wikipedia.org/wiki/Transcendental_equation)的方程组：
- en: '[PRE9]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'So you can use [`nsolve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.nsolve
    "sympy.solvers.solvers.nsolve") to [find a numerical solution](solve-numerically.html):'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你可以使用[`nsolve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.nsolve
    "sympy.solvers.solvers.nsolve")来[找到数值解](solve-numerically.html)：
- en: '[PRE10]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Equations Which Have a Closed-Form Solution, and SymPy Cannot Solve
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 有封闭形式解但 SymPy 无法解决的方程：
- en: It is also possible that there is an algebraic solution to your equation, and
    SymPy has not implemented an appropriate algorithm. If SymPy returns an empty
    set or list when you know there is a closed-form solution (indicating a bug in
    SymPy), please post it on the [mailing list](https://groups.google.com/g/sympy),
    or open an issue on [SymPy’s GitHub page](https://github.com/sympy/sympy/issues).
    Until the issue is resolved, you can use a different method listed in [Alternatives
    to Consider](#alternatives-to-consider).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 也可能是你的方程有代数解，但 SymPy 尚未实现适当的算法。如果 SymPy 返回一个空集或列表，而你知道存在封闭形式解（表明 SymPy 存在错误），请在[邮件列表](https://groups.google.com/g/sympy)上发布问题，或在[SymPy
    的 GitHub 页面](https://github.com/sympy/sympy/issues)上开一个问题。在问题解决之前，可以使用[考虑的替代方法](#alternatives-to-consider)中列出的其他方法。
- en: Report a Bug
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 报告 Bug
- en: If you find a bug with [`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve"), please post the problem on the [SymPy mailing
    list](https://groups.google.com/g/sympy). Until the issue is resolved, you can
    use a different method listed in [Alternatives to Consider](#alternatives-to-consider).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你发现[`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve")存在 bug，请在[SymPy 邮件列表](https://groups.google.com/g/sympy)上发布问题。在问题解决之前，可以使用[考虑的替代方法](#alternatives-to-consider)中列出的其他方法。
