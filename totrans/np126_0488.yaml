- en: numpy.seterr
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.seterr.html](https://numpy.org/doc/1.26/reference/generated/numpy.seterr.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Set how floating-point errors are handled.
  prefs: []
  type: TYPE_NORMAL
- en: Note that operations on integer scalar types (such as [`int16`](../arrays.scalars.html#numpy.int16
    "numpy.int16")) are handled like floating point, and are affected by these settings.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**all**{‘ignore’, ‘warn’, ‘raise’, ‘call’, ‘print’, ‘log’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Set treatment for all types of floating-point errors at once:'
  prefs: []
  type: TYPE_NORMAL
- en: 'ignore: Take no action when the exception occurs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'warn: Print a *RuntimeWarning* (via the Python [`warnings`](https://docs.python.org/3/library/warnings.html#module-warnings
    "(in Python v3.11)") module).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'raise: Raise a *FloatingPointError*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'call: Call a function specified using the [`seterrcall`](numpy.seterrcall.html#numpy.seterrcall
    "numpy.seterrcall") function.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'print: Print a warning directly to `stdout`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'log: Record error in a Log object specified by [`seterrcall`](numpy.seterrcall.html#numpy.seterrcall
    "numpy.seterrcall").'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The default is not to change the current behavior.
  prefs: []
  type: TYPE_NORMAL
- en: '**divide**{‘ignore’, ‘warn’, ‘raise’, ‘call’, ‘print’, ‘log’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Treatment for division by zero.
  prefs: []
  type: TYPE_NORMAL
- en: '**over**{‘ignore’, ‘warn’, ‘raise’, ‘call’, ‘print’, ‘log’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Treatment for floating-point overflow.
  prefs: []
  type: TYPE_NORMAL
- en: '**under**{‘ignore’, ‘warn’, ‘raise’, ‘call’, ‘print’, ‘log’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Treatment for floating-point underflow.
  prefs: []
  type: TYPE_NORMAL
- en: '**invalid**{‘ignore’, ‘warn’, ‘raise’, ‘call’, ‘print’, ‘log’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Treatment for invalid floating-point operation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**old_settings**dict'
  prefs: []
  type: TYPE_NORMAL
- en: Dictionary containing the old settings.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`seterrcall`](numpy.seterrcall.html#numpy.seterrcall "numpy.seterrcall")'
  prefs: []
  type: TYPE_NORMAL
- en: Set a callback function for the ‘call’ mode.
  prefs: []
  type: TYPE_NORMAL
- en: '[`geterr`](numpy.geterr.html#numpy.geterr "numpy.geterr"), [`geterrcall`](numpy.geterrcall.html#numpy.geterrcall
    "numpy.geterrcall"), [`errstate`](numpy.errstate.html#numpy.errstate "numpy.errstate")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'The floating-point exceptions are defined in the IEEE 754 standard [[1]](#r4cab4292821f-1):'
  prefs: []
  type: TYPE_NORMAL
- en: 'Division by zero: infinite result obtained from finite numbers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Overflow: result too large to be expressed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Underflow: result so close to zero that some precision was lost.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Invalid operation: result is not an expressible number, typically indicates
    that a NaN was produced.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/IEEE_754](https://en.wikipedia.org/wiki/IEEE_754)'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
