- en: scipy.signal.cont2discrete
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.cont2discrete.html#scipy.signal.cont2discrete](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.cont2discrete.html#scipy.signal.cont2discrete)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Transform a continuous to a discrete state-space system.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**system**a tuple describing the system or an instance of [`lti`](scipy.signal.lti.html#scipy.signal.lti
    "scipy.signal.lti")'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following gives the number of elements in the tuple and the interpretation:'
  prefs: []
  type: TYPE_NORMAL
- en: '1: (instance of [`lti`](scipy.signal.lti.html#scipy.signal.lti "scipy.signal.lti"))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '2: (num, den)'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '3: (zeros, poles, gain)'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '4: (A, B, C, D)'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '**dt**float'
  prefs: []
  type: TYPE_NORMAL
- en: The discretization time step.
  prefs: []
  type: TYPE_NORMAL
- en: '**method**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Which method to use:'
  prefs: []
  type: TYPE_NORMAL
- en: 'gbt: generalized bilinear transformation'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'bilinear: Tustin’s approximation (“gbt” with alpha=0.5)'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'euler: Euler (or forward differencing) method (“gbt” with alpha=0)'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'backward_diff: Backwards differencing (“gbt” with alpha=1.0)'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'zoh: zero-order hold (default)'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'foh: first-order hold (*versionadded: 1.3.0*)'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'impulse: equivalent impulse response (*versionadded: 1.3.0*)'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '**alpha**float within [0, 1], optional'
  prefs: []
  type: TYPE_NORMAL
- en: The generalized bilinear transformation weighting parameter, which should only
    be specified with method=”gbt”, and is ignored otherwise
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**sysd**tuple containing the discrete system'
  prefs: []
  type: TYPE_NORMAL
- en: Based on the input type, the output will be of the form
  prefs: []
  type: TYPE_NORMAL
- en: (num, den, dt) for transfer function input
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: (zeros, poles, gain, dt) for zeros-poles-gain input
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: (A, B, C, D, dt) for state-space system input
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: By default, the routine uses a Zero-Order Hold (zoh) method to perform the transformation.
    Alternatively, a generalized bilinear transformation may be used, which includes
    the common Tustin’s bilinear approximation, an Euler’s method technique, or a
    backwards differencing technique.
  prefs: []
  type: TYPE_NORMAL
- en: The Zero-Order Hold (zoh) method is based on [[1]](#r08a5e60792a7-1), the generalized
    bilinear approximation is based on [[2]](#r08a5e60792a7-2) and [[3]](#r08a5e60792a7-3),
    the First-Order Hold (foh) method is based on [[4]](#r08a5e60792a7-4).
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Discretization#Discretization_of_linear_state_space_models](https://en.wikipedia.org/wiki/Discretization#Discretization_of_linear_state_space_models)'
  prefs: []
  type: TYPE_NORMAL
- en: '[[2](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://techteach.no/publications/discretetime_signals_systems/discrete.pdf](http://techteach.no/publications/discretetime_signals_systems/discrete.pdf)'
  prefs: []
  type: TYPE_NORMAL
- en: '[[3](#id3)]'
  prefs: []
  type: TYPE_NORMAL
- en: G. Zhang, X. Chen, and T. Chen, Digital redesign via the generalized bilinear
    transformation, Int. J. Control, vol. 82, no. 4, pp. 741-754, 2009. ([https://www.mypolyuweb.hk/~magzhang/Research/ZCC09_IJC.pdf](https://www.mypolyuweb.hk/~magzhang/Research/ZCC09_IJC.pdf))
  prefs: []
  type: TYPE_NORMAL
- en: '[[4](#id4)]'
  prefs: []
  type: TYPE_NORMAL
- en: 'G. F. Franklin, J. D. Powell, and M. L. Workman, Digital control of dynamic
    systems, 3rd ed. Menlo Park, Calif: Addison-Wesley, pp. 204-206, 1998.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'We can transform a continuous state-space system to a discrete one:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Define a continuous state-space system.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Transform it to a discrete state-space system using several methods.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-signal-cont2discrete-1.png](../Images/6b0c0853f5202b7d85ad0336033d0cf9.png)'
  prefs: []
  type: TYPE_IMG
