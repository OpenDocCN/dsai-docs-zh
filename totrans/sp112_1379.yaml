- en: scipy.stats.probplot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.probplot.html#scipy.stats.probplot](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.probplot.html#scipy.stats.probplot)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Calculate quantiles for a probability plot, and optionally show the plot.
  prefs: []
  type: TYPE_NORMAL
- en: Generates a probability plot of sample data against the quantiles of a specified
    theoretical distribution (the normal distribution by default). [`probplot`](#scipy.stats.probplot
    "scipy.stats.probplot") optionally calculates a best-fit line for the data and
    plots the results using Matplotlib or a given plot function.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Sample/response data from which [`probplot`](#scipy.stats.probplot "scipy.stats.probplot")
    creates the plot.
  prefs: []
  type: TYPE_NORMAL
- en: '**sparams**tuple, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Distribution-specific shape parameters (shape parameters plus location and scale).
  prefs: []
  type: TYPE_NORMAL
- en: '**dist**str or stats.distributions instance, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Distribution or distribution function name. The default is ‘norm’ for a normal
    probability plot. Objects that look enough like a stats.distributions instance
    (i.e. they have a `ppf` method) are also accepted.
  prefs: []
  type: TYPE_NORMAL
- en: '**fit**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Fit a least-squares regression (best-fit) line to the sample data if True (default).
  prefs: []
  type: TYPE_NORMAL
- en: '**plot**object, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If given, plots the quantiles. If given and [`fit`](scipy.stats.fit.html#scipy.stats.fit
    "scipy.stats.fit") is True, also plots the least squares fit. *plot* is an object
    that has to have methods “plot” and “text”. The [`matplotlib.pyplot`](https://matplotlib.org/stable/api/pyplot_summary.html#module-matplotlib.pyplot
    "(in Matplotlib v3.8.2)") module or a Matplotlib Axes object can be used, or a
    custom object with the same methods. Default is None, which means that no plot
    is created.
  prefs: []
  type: TYPE_NORMAL
- en: '**rvalue**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If *plot* is provided and [`fit`](scipy.stats.fit.html#scipy.stats.fit "scipy.stats.fit")
    is True, setting *rvalue* to True includes the coefficient of determination on
    the plot. Default is False.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**(osm, osr)**tuple of ndarrays'
  prefs: []
  type: TYPE_NORMAL
- en: Tuple of theoretical quantiles (osm, or order statistic medians) and ordered
    responses (osr). *osr* is simply sorted input *x*. For details on how *osm* is
    calculated see the Notes section.
  prefs: []
  type: TYPE_NORMAL
- en: '**(slope, intercept, r)**tuple of floats, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Tuple containing the result of the least-squares fit, if that is performed by
    [`probplot`](#scipy.stats.probplot "scipy.stats.probplot"). *r* is the square
    root of the coefficient of determination. If `fit=False` and `plot=None`, this
    tuple is not returned.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Even if *plot* is given, the figure is not shown or saved by [`probplot`](#scipy.stats.probplot
    "scipy.stats.probplot"); `plt.show()` or `plt.savefig('figname.png')` should be
    used after calling [`probplot`](#scipy.stats.probplot "scipy.stats.probplot").
  prefs: []
  type: TYPE_NORMAL
- en: '[`probplot`](#scipy.stats.probplot "scipy.stats.probplot") generates a probability
    plot, which should not be confused with a Q-Q or a P-P plot. Statsmodels has more
    extensive functionality of this type, see `statsmodels.api.ProbPlot`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The formula used for the theoretical quantiles (horizontal axis of the probability
    plot) is Filliben’s estimate:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: where `i` indicates the i-th ordered value and `n` is the total number of values.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'A t distribution with small degrees of freedom:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'A t distribution with larger degrees of freedom:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'A mixture of two normal distributions with broadcasting:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'A standard normal distribution:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Produce a new figure with a loggamma distribution, using the `dist` and `sparams`
    keywords:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Show the results with Matplotlib:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-stats-probplot-1_00.png](../Images/a16eb2cfb55666e84bf9aa86dc0a1ffa.png)![../../_images/scipy-stats-probplot-1_01.png](../Images/daaed0762d720533346f413b2b91f0ce.png)'
  prefs: []
  type: TYPE_IMG
