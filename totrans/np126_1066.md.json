["```py\n#!/usr/bin/env python3\ndef configuration(parent_package='',top_path=None):\n    from numpy.distutils.misc_util import Configuration\n    config = Configuration('mypackage',parent_package,top_path)\n    return config\n\nif __name__ == \"__main__\":\n    from numpy.distutils.core import setup\n    #setup(**configuration(top_path='').todict())\n    setup(configuration=configuration) \n```", "```py\n    config.add_data_files('foo.dat',\n                          ('fun',['gun.dat','nun/pun.dat','/tmp/sun.dat']),\n                          'bar/car.dat'.\n                          '/full/path/to/can.dat',\n                          ) \n    ```", "```py\n    <installation path of config.name package>/\n      foo.dat\n      fun/\n        gun.dat\n        pun.dat\n        sun.dat\n      bar/\n        car.dat\n      can.dat \n    ```", "```py\n    config.add_data_dir('fun')  # fun/ contains foo.dat bar/car.dat\n    config.add_data_dir(('sun','fun'))\n    config.add_data_dir(('gun','/full/path/to/fun')) \n    ```", "```py\n    <installation path of config.name package>/\n      fun/\n         foo.dat\n         bar/\n            car.dat\n      sun/\n         foo.dat\n         bar/\n            car.dat\n      gun/\n         foo.dat\n         bar/\n            car.dat \n    ```", "```py\n    def generate_source(ext,build_dir):\n        import os\n        from distutils.dep_util import newer\n        target = os.path.join(build_dir,'somesource.c')\n        if newer(target,__file__):\n            # create target file\n        return target \n    ```", "```py\n 1  /* TIMEDELTA to non-float types */\n 2\n 3  /**begin repeat 4 *\n 5 * #TOTYPE = BYTE, UBYTE, SHORT, USHORT, INT, UINT, LONG, ULONG,\n 6 *           LONGLONG, ULONGLONG, DATETIME,\n 7 *           TIMEDELTA#\n 8 * #totype = npy_byte, npy_ubyte, npy_short, npy_ushort, npy_int, npy_uint,\n 9 *           npy_long, npy_ulong, npy_longlong, npy_ulonglong,\n10 *           npy_datetime, npy_timedelta#\n11 */\n12\n13  /**begin repeat1 14 *\n15 * #FROMTYPE = TIMEDELTA#\n16 * #fromtype = npy_timedelta#\n17 */\n18  static  void\n19  @FROMTYPE@_to_@TOTYPE@(void *input, void *output, npy_intp n,\n20  void  *NPY_UNUSED(aip),  void  *NPY_UNUSED(aop))\n21  {\n22  const  @fromtype@ *ip = input;\n23  @totype@ *op = output;\n24\n25  while  (n--)  {\n26  *op++  =  (@totype@)*ip++;\n27  }\n28  }\n29  /**end repeat1**/ 30\n31  /**end repeat**/ \n```", "```py\n\"\"\"\nPackage docstring, typically with a brief description and function listing.\n\"\"\"\n\n# import functions into module namespace\nfrom .subpackage import *\n...\n\n__all__ = [s for s in dir() if not s.startswith('_')]\n\nfrom numpy.testing import Tester\ntest = Tester().test\nbench = Tester().bench \n```", "```py\nCF77FLAGS(<fcompiler type>) = <fcompiler f77flags> \n```", "```py\n#!/usr/bin/env python3\ndef configuration(parent_package='',top_path=None):\n    from numpy.distutils.misc_util import Configuration\n    config = Configuration('mypackage',parent_package,top_path)\n    return config\n\nif __name__ == \"__main__\":\n    from numpy.distutils.core import setup\n    #setup(**configuration(top_path='').todict())\n    setup(configuration=configuration) \n```", "```py\n    config.add_data_files('foo.dat',\n                          ('fun',['gun.dat','nun/pun.dat','/tmp/sun.dat']),\n                          'bar/car.dat'.\n                          '/full/path/to/can.dat',\n                          ) \n    ```", "```py\n    <installation path of config.name package>/\n      foo.dat\n      fun/\n        gun.dat\n        pun.dat\n        sun.dat\n      bar/\n        car.dat\n      can.dat \n    ```", "```py\n    config.add_data_dir('fun')  # fun/ contains foo.dat bar/car.dat\n    config.add_data_dir(('sun','fun'))\n    config.add_data_dir(('gun','/full/path/to/fun')) \n    ```", "```py\n    <installation path of config.name package>/\n      fun/\n         foo.dat\n         bar/\n            car.dat\n      sun/\n         foo.dat\n         bar/\n            car.dat\n      gun/\n         foo.dat\n         bar/\n            car.dat \n    ```", "```py\n    def generate_source(ext,build_dir):\n        import os\n        from distutils.dep_util import newer\n        target = os.path.join(build_dir,'somesource.c')\n        if newer(target,__file__):\n            # create target file\n        return target \n    ```", "```py\n 1  /* TIMEDELTA to non-float types */\n 2\n 3  /**begin repeat 4 *\n 5 * #TOTYPE = BYTE, UBYTE, SHORT, USHORT, INT, UINT, LONG, ULONG,\n 6 *           LONGLONG, ULONGLONG, DATETIME,\n 7 *           TIMEDELTA#\n 8 * #totype = npy_byte, npy_ubyte, npy_short, npy_ushort, npy_int, npy_uint,\n 9 *           npy_long, npy_ulong, npy_longlong, npy_ulonglong,\n10 *           npy_datetime, npy_timedelta#\n11 */\n12\n13  /**begin repeat1 14 *\n15 * #FROMTYPE = TIMEDELTA#\n16 * #fromtype = npy_timedelta#\n17 */\n18  static  void\n19  @FROMTYPE@_to_@TOTYPE@(void *input, void *output, npy_intp n,\n20  void  *NPY_UNUSED(aip),  void  *NPY_UNUSED(aop))\n21  {\n22  const  @fromtype@ *ip = input;\n23  @totype@ *op = output;\n24\n25  while  (n--)  {\n26  *op++  =  (@totype@)*ip++;\n27  }\n28  }\n29  /**end repeat1**/ 30\n31  /**end repeat**/ \n```", "```py\n#!/usr/bin/env python3\ndef configuration(parent_package='',top_path=None):\n    from numpy.distutils.misc_util import Configuration\n    config = Configuration('mypackage',parent_package,top_path)\n    return config\n\nif __name__ == \"__main__\":\n    from numpy.distutils.core import setup\n    #setup(**configuration(top_path='').todict())\n    setup(configuration=configuration) \n```", "```py\n    config.add_data_files('foo.dat',\n                          ('fun',['gun.dat','nun/pun.dat','/tmp/sun.dat']),\n                          'bar/car.dat'.\n                          '/full/path/to/can.dat',\n                          ) \n    ```", "```py\n    <installation path of config.name package>/\n      foo.dat\n      fun/\n        gun.dat\n        pun.dat\n        sun.dat\n      bar/\n        car.dat\n      can.dat \n    ```", "```py\n    config.add_data_dir('fun')  # fun/ contains foo.dat bar/car.dat\n    config.add_data_dir(('sun','fun'))\n    config.add_data_dir(('gun','/full/path/to/fun')) \n    ```", "```py\n    <installation path of config.name package>/\n      fun/\n         foo.dat\n         bar/\n            car.dat\n      sun/\n         foo.dat\n         bar/\n            car.dat\n      gun/\n         foo.dat\n         bar/\n            car.dat \n    ```", "```py\n    def generate_source(ext,build_dir):\n        import os\n        from distutils.dep_util import newer\n        target = os.path.join(build_dir,'somesource.c')\n        if newer(target,__file__):\n            # create target file\n        return target \n    ```", "```py\n 1  /* TIMEDELTA to non-float types */\n 2\n 3  /**begin repeat 4 *\n 5 * #TOTYPE = BYTE, UBYTE, SHORT, USHORT, INT, UINT, LONG, ULONG,\n 6 *           LONGLONG, ULONGLONG, DATETIME,\n 7 *           TIMEDELTA#\n 8 * #totype = npy_byte, npy_ubyte, npy_short, npy_ushort, npy_int, npy_uint,\n 9 *           npy_long, npy_ulong, npy_longlong, npy_ulonglong,\n10 *           npy_datetime, npy_timedelta#\n11 */\n12\n13  /**begin repeat1 14 *\n15 * #FROMTYPE = TIMEDELTA#\n16 * #fromtype = npy_timedelta#\n17 */\n18  static  void\n19  @FROMTYPE@_to_@TOTYPE@(void *input, void *output, npy_intp n,\n20  void  *NPY_UNUSED(aip),  void  *NPY_UNUSED(aop))\n21  {\n22  const  @fromtype@ *ip = input;\n23  @totype@ *op = output;\n24\n25  while  (n--)  {\n26  *op++  =  (@totype@)*ip++;\n27  }\n28  }\n29  /**end repeat1**/ 30\n31  /**end repeat**/ \n```", "```py\n\"\"\"\nPackage docstring, typically with a brief description and function listing.\n\"\"\"\n\n# import functions into module namespace\nfrom .subpackage import *\n...\n\n__all__ = [s for s in dir() if not s.startswith('_')]\n\nfrom numpy.testing import Tester\ntest = Tester().test\nbench = Tester().bench \n```", "```py\nCF77FLAGS(<fcompiler type>) = <fcompiler f77flags> \n```", "```py\nCF77FLAGS(<fcompiler type>) = <fcompiler f77flags> \n```"]