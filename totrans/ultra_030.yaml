- en: 'Baidu''s RT-DETR: A Vision Transformer-Based Real-Time Object Detector'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 百度的RT-DETR：基于视觉Transformer的实时目标检测器
- en: 原文：[`docs.ultralytics.com/models/rtdetr/`](https://docs.ultralytics.com/models/rtdetr/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[`docs.ultralytics.com/models/rtdetr/`](https://docs.ultralytics.com/models/rtdetr/)
- en: Overview
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概述
- en: Real-Time Detection Transformer (RT-DETR), developed by Baidu, is a cutting-edge
    end-to-end object detector that provides real-time performance while maintaining
    high accuracy. It is based on the idea of DETR (the NMS-free framework), meanwhile
    introducing conv-based backbone and an efficient hybrid encoder to gain real-time
    speed. RT-DETR efficiently processes multiscale features by decoupling intra-scale
    interaction and cross-scale fusion. The model is highly adaptable, supporting
    flexible adjustment of inference speed using different decoder layers without
    retraining. RT-DETR excels on accelerated backends like CUDA with TensorRT, outperforming
    many other real-time object detectors.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 由百度开发的实时检测变压器（RT-DETR）是一种先进的端到端目标检测器，提供实时性能的同时保持高准确性。它基于DETR（无NMS框架）的思想，同时引入了基于卷积的骨干和高效的混合编码器以实现实时速度。RT-DETR通过解耦内部尺度交互和跨尺度融合高效处理多尺度特征。该模型高度灵活，支持使用不同的解码器层调整推理速度，无需重新训练。RT-DETR在像CUDA与TensorRT这样的加速后端上表现优异，胜过许多其他实时目标检测器。
- en: '[`www.youtube.com/embed/SArFQs6CHwk`](https://www.youtube.com/embed/SArFQs6CHwk)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[`www.youtube.com/embed/SArFQs6CHwk`](https://www.youtube.com/embed/SArFQs6CHwk)'
- en: '**Watch:** Real-Time Detection Transformer (RT-DETR)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**监视：** 实时检测变压器（RT-DETR）'
- en: '![Model example image](img/7f966781c755c8c958c9ec7323740907.png) **Overview
    of Baidu''s RT-DETR.** The RT-DETR model architecture diagram shows the last three
    stages of the backbone {S3, S4, S5} as the input to the encoder. The efficient
    hybrid encoder transforms multiscale features into a sequence of image features
    through intrascale feature interaction (AIFI) and cross-scale feature-fusion module
    (CCFM). The IoU-aware query selection is employed to select a fixed number of
    image features to serve as initial object queries for the decoder. Finally, the
    decoder with auxiliary prediction heads iteratively optimizes object queries to
    generate boxes and confidence scores ([source](https://arxiv.org/pdf/2304.08069.pdf)).'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '![模型示例图](img/7f966781c755c8c958c9ec7323740907.png) **百度RT-DETR概述。** RT-DETR模型架构图显示了作为编码器输入的骨干网的最后三个阶段
    {S3, S4, S5}。高效的混合编码器通过内部尺度特征交互（AIFI）和跨尺度特征融合模块（CCFM），将多尺度特征转换为图像特征序列。使用IoU感知查询选择来选择一定数量的图像特征，作为解码器的初始对象查询。最后，解码器通过辅助预测头迭代优化对象查询，生成框和置信度分数（[来源](https://arxiv.org/pdf/2304.08069.pdf)）。'
- en: Key Features
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 主要特点
- en: '**Efficient Hybrid Encoder:** Baidu''s RT-DETR uses an efficient hybrid encoder
    that processes multiscale features by decoupling intra-scale interaction and cross-scale
    fusion. This unique Vision Transformers-based design reduces computational costs
    and allows for real-time object detection.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高效的混合编码器：** 百度的RT-DETR采用高效的混合编码器，通过解耦内部尺度交互和跨尺度融合来处理多尺度特征。这种基于视觉Transformer的独特设计降低了计算成本，实现了实时目标检测。'
- en: '**IoU-aware Query Selection:** Baidu''s RT-DETR improves object query initialization
    by utilizing IoU-aware query selection. This allows the model to focus on the
    most relevant objects in the scene, enhancing the detection accuracy.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IoU感知查询选择：** 百度的RT-DETR通过使用IoU感知查询选择来改进对象查询初始化。这使得模型能够集中精力处理场景中最相关的对象，从而提高检测精度。'
- en: '**Adaptable Inference Speed:** Baidu''s RT-DETR supports flexible adjustments
    of inference speed by using different decoder layers without the need for retraining.
    This adaptability facilitates practical application in various real-time object
    detection scenarios.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可调节的推理速度：** 百度的RT-DETR通过使用不同的解码器层，无需重新训练即可支持灵活调整推理速度。这种适应性促进了在各种实时目标检测场景中的实际应用。'
- en: Pre-trained Models
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预训练模型
- en: 'The Ultralytics Python API provides pre-trained PaddlePaddle RT-DETR models
    with different scales:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Ultralytics Python API提供了预训练的PaddlePaddle RT-DETR模型，具有不同的规模：
- en: 'RT-DETR-L: 53.0% AP on COCO val2017, 114 FPS on T4 GPU'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RT-DETR-L：在COCO val2017上达到53.0%的AP，T4 GPU上的帧率为114 FPS
- en: 'RT-DETR-X: 54.8% AP on COCO val2017, 74 FPS on T4 GPU'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RT-DETR-X：在COCO val2017上达到54.8%的AP，T4 GPU上的帧率为74 FPS
- en: Usage Examples
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用示例
- en: This example provides simple RT-DETR training and inference examples. For full
    documentation on these and other modes see the Predict, Train, Val and Export
    docs pages.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本示例提供了简单的RT-DETR训练和推理示例。有关这些以及其他模式的完整文档，请参阅预测、训练、验证和导出文档页面。
- en: Example
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Supported Tasks and Modes
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 支持的任务和模式
- en: This table presents the model types, the specific pre-trained weights, the tasks
    supported by each model, and the various modes (Train , Val, Predict, Export)
    that are supported, indicated by ✅ emojis.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 该表格展示了各个模型类型、具体的预训练权重、每个模型支持的任务，以及通过✅表情符号表示的各种模式（训练、验证、预测、导出）。
- en: '| Model Type | Pre-trained Weights | Tasks Supported | Inference | Validation
    | Training | Export |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| 模型类型 | 预训练权重 | 支持的任务 | 推断 | 验证 | 训练 | 导出 |'
- en: '| --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- |'
- en: '| RT-DETR Large | [rtdetr-l.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/rtdetr-l.pt)
    | Object Detection | ✅ | ✅ | ✅ | ✅ |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| RT-DETR 大型 | [rtdetr-l.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/rtdetr-l.pt)
    | 目标检测 | ✅ | ✅ | ✅ | ✅ |'
- en: '| RT-DETR Extra-Large | [rtdetr-x.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/rtdetr-x.pt)
    | Object Detection | ✅ | ✅ | ✅ | ✅ |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| RT-DETR 超大型 | [rtdetr-x.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/rtdetr-x.pt)
    | 目标检测 | ✅ | ✅ | ✅ | ✅ |'
- en: Citations and Acknowledgements
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引用和致谢
- en: 'If you use Baidu''s RT-DETR in your research or development work, please cite
    the [original paper](https://arxiv.org/abs/2304.08069):'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在研究或开发工作中使用百度的RT-DETR，请引用[原始论文](https://arxiv.org/abs/2304.08069)：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We would like to acknowledge Baidu and the [PaddlePaddle](https://github.com/PaddlePaddle/PaddleDetection)
    team for creating and maintaining this valuable resource for the computer vision
    community. Their contribution to the field with the development of the Vision
    Transformers-based real-time object detector, RT-DETR, is greatly appreciated.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要感谢百度和[PaddlePaddle](https://github.com/PaddlePaddle/PaddleDetection)团队为计算机视觉社区创建和维护这一宝贵资源。他们通过开发基于Vision
    Transformers的实时目标检测器RT-DETR，为该领域做出了重要贡献，深受赞赏。
- en: FAQ
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常见问题
- en: What is Baidu's RT-DETR model and how does it work?
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 百度的RT-DETR模型是什么，它是如何工作的？
- en: Baidu's RT-DETR (Real-Time Detection Transformer) is an advanced real-time object
    detector built upon the Vision Transformer architecture. It efficiently processes
    multiscale features by decoupling intra-scale interaction and cross-scale fusion
    through its efficient hybrid encoder. By employing IoU-aware query selection,
    the model focuses on the most relevant objects, enhancing detection accuracy.
    Its adaptable inference speed, achieved by adjusting decoder layers without retraining,
    makes RT-DETR suitable for various real-time object detection scenarios. Learn
    more about RT-DETR features [here](https://arxiv.org/pdf/2304.08069.pdf).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 百度的RT-DETR（Real-Time Detection Transformer）是基于Vision Transformer架构构建的先进实时目标检测器。它通过其高效的混合编码器有效处理多尺度特征，通过解耦内尺度交互和跨尺度融合。通过采用IoU感知的查询选择，该模型专注于最相关的对象，增强了检测精度。其可调节的推断速度，通过调整解码器层而无需重新训练，使RT-DETR适用于各种实时目标检测场景。在这里了解更多关于RT-DETR的特性[链接](https://arxiv.org/pdf/2304.08069.pdf)。
- en: How can I use the pre-trained RT-DETR models provided by Ultralytics?
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我如何使用Ultralytics提供的预训练RT-DETR模型？
- en: 'You can leverage Ultralytics Python API to use pre-trained PaddlePaddle RT-DETR
    models. For instance, to load an RT-DETR-l model pre-trained on COCO val2017 and
    achieve high FPS on T4 GPU, you can utilize the following example:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以利用Ultralytics Python API使用预训练的PaddlePaddle RT-DETR模型。例如，要加载在COCO val2017上预训练的RT-DETR-l模型，并在T4
    GPU上实现高FPS，您可以使用以下示例：
- en: Example
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Why should I choose Baidu's RT-DETR over other real-time object detectors?
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为什么应该选择百度的RT-DETR而不是其他实时目标检测器？
- en: Baidu's RT-DETR stands out due to its efficient hybrid encoder and IoU-aware
    query selection, which drastically reduce computational costs while maintaining
    high accuracy. Its unique ability to adjust inference speed by using different
    decoder layers without retraining adds significant flexibility. This makes it
    particularly advantageous for applications requiring real-time performance on
    accelerated backends like CUDA with TensorRT, outclassing many other real-time
    object detectors.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 百度的RT-DETR凭借其高效的混合编码器和IoU感知的查询选择而脱颖而出，大幅降低计算成本同时保持高准确性。其通过使用不同的解码器层而无需重新训练来调整推断速度的独特能力，增加了显著的灵活性。这使得它特别适用于在CUDA与TensorRT等加速后端上需要实时性能的应用，胜过许多其他实时目标检测器。
- en: How does RT-DETR support adaptable inference speed for different real-time applications?
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: RT-DETR如何支持不同实时应用的可调节推断速度？
- en: Baidu's RT-DETR allows flexible adjustments of inference speed by using different
    decoder layers without requiring retraining. This adaptability is crucial for
    scaling performance across various real-time object detection tasks. Whether you
    need faster processing for lower precision needs or slower, more accurate detections,
    RT-DETR can be tailored to meet your specific requirements.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Baidu 的 RT-DETR 可以通过使用不同的解码器层来灵活调整推理速度，而无需重新训练。这种适应性对于在各种实时目标检测任务中提升性能至关重要。无论您需要更快的处理以满足低精度需求，还是更慢但更精确的检测，RT-DETR
    都可以定制以满足您的特定要求。
- en: Can I use RT-DETR models with other Ultralytics modes, such as training, validation,
    and export?
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我能在其他 Ultralytics 模式下使用 RT-DETR 模型吗，比如训练、验证和导出？
- en: 'Yes, RT-DETR models are compatible with various Ultralytics modes including
    training, validation, prediction, and export. You can refer to the respective
    documentation for detailed instructions on how to utilize these modes: Train,
    Val, Predict, and Export. This ensures a comprehensive workflow for developing
    and deploying your object detection solutions.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，RT-DETR 模型与包括训练、验证、预测和导出在内的多种 Ultralytics 模式兼容。您可以参考相应的文档以获取如何利用这些模式的详细说明：Train、Val、Predict
    和 Export。这确保了开发和部署您的目标检测解决方案的全面工作流程。
