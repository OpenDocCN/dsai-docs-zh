["```py\nufunc.reduce(array, axis=0, dtype=None, out=None, keepdims=False, initial=<no value>, where=True)\n```", "```py\nr = op.identity # op = ufunc\nfor i in range(len(A)):\n  r = op(r, A[i])\nreturn r \n```", "```py\n>>> np.multiply.reduce([2,3,5])\n30 \n```", "```py\n>>> X = np.arange(8).reshape((2,2,2))\n>>> X\narray([[[0, 1],\n [2, 3]],\n [[4, 5],\n [6, 7]]])\n>>> np.add.reduce(X, 0)\narray([[ 4,  6],\n [ 8, 10]])\n>>> np.add.reduce(X) # confirm: default axis value is 0\narray([[ 4,  6],\n [ 8, 10]])\n>>> np.add.reduce(X, 1)\narray([[ 2,  4],\n [10, 12]])\n>>> np.add.reduce(X, 2)\narray([[ 1,  5],\n [ 9, 13]]) \n```", "```py\n>>> np.add.reduce([10], initial=5)\n15\n>>> np.add.reduce(np.ones((2, 2, 2)), axis=(0, 2), initial=10)\narray([14., 14.])\n>>> a = np.array([10., np.nan, 10])\n>>> np.add.reduce(a, where=~np.isnan(a))\n20.0 \n```", "```py\n>>> np.minimum.reduce([], initial=np.inf)\ninf\n>>> np.minimum.reduce([[1., 2.], [3., 4.]], initial=10., where=[True, False])\narray([ 1., 10.])\n>>> np.minimum.reduce([])\nTraceback (most recent call last):\n  ...\nValueError: zero-size array to reduction operation minimum which has no identity \n```"]