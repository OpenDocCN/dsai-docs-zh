- en: Run Tests
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行测试
- en: Original text：[https://docs.sympy.org/latest/modules/testing/runtests.html](https://docs.sympy.org/latest/modules/testing/runtests.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://docs.sympy.org/latest/modules/testing/runtests.html](https://docs.sympy.org/latest/modules/testing/runtests.html)
- en: This is our testing framework.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们的测试框架。
- en: 'Goals:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 目标：
- en: it should be compatible with py.test and operate very similarly (or identically)
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它应与 py.test 兼容，并且操作方式非常相似（或完全相同）
- en: does not require any external dependencies
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不需要任何外部依赖
- en: preferably all the functionality should be in this file only
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最好所有功能都在此文件中
- en: no magic, just import the test file and execute the test functions, that’s it
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有魔法，只需导入测试文件并执行测试函数，就这样
- en: portable
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可移植
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Py.test like reporter. Should produce output identical to py.test.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 像 Py.test 一样的报告者。应该生成与 py.test 完全相同的输出。
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Prints a text on the screen.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在屏幕上打印文本。
- en: It uses sys.stdout.write(), so no readline library is necessary.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 它使用 sys.stdout.write()，因此不需要 readline 库。
- en: 'Parameters:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**color** : choose from the colors below, “” means default color'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**颜色**：从下面的颜色中选择，“” 表示默认颜色'
- en: '**align** : “left”/”right”, “left” is a normal print, “right” is aligned on'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**对齐**：“left”/“right”，“left” 是正常打印，“right” 是右对齐'
- en: the right-hand side of the screen, filled with spaces if necessary
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 屏幕右侧，必要时填充空格
- en: '**width** : the screen width'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**宽度**：屏幕宽度'
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Parent class for all reporters.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 所有报告者的父类。
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'A class used to extract the DocTests that are relevant to a given object, from
    its docstring and the docstrings of its contained objects. Doctests can currently
    be extracted from the following object types: modules, functions, classes, methods,
    staticmethods, classmethods, and properties.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 用于提取与给定对象相关的 DocTest 的类，从其文档字符串及其包含对象的文档字符串中。目前可以从以下对象类型中提取 DocTest：模块、函数、类、方法、静态方法、类方法和属性。
- en: Modified from doctest’s version to look harder for code that appears comes from
    a different module. For example, the @vectorize decorator makes it look like functions
    come from multidimensional.py even though their code exists elsewhere.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 修改自 doctest 版本，更加努力地查找看起来来自不同模块的代码。例如，@vectorize 装饰器使得函数看起来来自 multidimensional.py，尽管它们的代码存在于其他地方。
- en: '[PRE4]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: A class used to run DocTest test cases, and accumulate statistics. The `run`
    method is used to process a single DocTest case. It returns a tuple `(f, t)`,
    where `t` is the number of test cases tried, and `f` is the number of test cases
    that failed.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 用于运行 DocTest 测试用例并累积统计信息的类。`run` 方法用于处理单个 DocTest 用例。它返回一个元组 `(f, t)`，其中 `t`
    是尝试的测试用例数，`f` 是失败的测试用例数。
- en: Modified from the doctest version to not reset the sys.displayhook (see issue
    5140).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 修改自 doctest 版本，以不重置 sys.displayhook（参见问题 5140）。
- en: See the docstring of the original DocTestRunner for more information.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 查看原始 DocTestRunner 的文档字符串以获取更多信息。
- en: '[PRE5]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Run the examples in `test`, and display the results using the writer function
    `out`.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 运行在 `test` 中的示例，并使用写入函数 `out` 显示结果。
- en: The examples are run in the namespace `test.globs`. If `clear_globs` is true
    (the default), then this namespace will be cleared after the test runs, to help
    with garbage collection. If you would like to examine the namespace after the
    test completes, then use `clear_globs=False`.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 示例在命名空间 `test.globs` 中运行。如果 `clear_globs` 为 true（默认值），则在测试运行后将清除此命名空间，以帮助垃圾收集。如果您希望在测试完成后检查命名空间，请使用
    `clear_globs=False`。
- en: '`compileflags` gives the set of flags that should be used by the Python compiler
    when running the examples. If not specified, then it will default to the set of
    future-import flags that apply to `globs`.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`compileflags` 给出了 Python 编译器在运行示例时应使用的标志集。如果未指定，则默认为适用于 `globs` 的未来导入标志集。'
- en: The output of each example is checked using `SymPyDocTestRunner.check_output`,
    and the results are formatted by the `SymPyDocTestRunner.report_*` methods.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 每个示例的输出都使用 `SymPyDocTestRunner.check_output` 进行检查，并由 `SymPyDocTestRunner.report_*`
    方法进行格式化。
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Compared to the OutputChecker from the stdlib our OutputChecker class supports
    numerical comparison of floats occurring in the output of the doctest examples
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 与 stdlib 中的 OutputChecker 相比，我们的 OutputChecker 类支持对 doctest 示例输出中出现的浮点数进行数值比较。
- en: '[PRE7]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Return True iff the actual output from an example (\(got\)) matches the expected
    output (\(want\)). These strings are always considered to match if they are identical;
    but depending on what option flags the test runner is using, several non-exact
    match types are also possible. See the documentation for \(TestRunner\) for more
    information about option flags.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果来自示例的实际输出（\(got\)）与预期输出（\(want\)）匹配，则返回True。如果它们完全相同，则始终认为这些字符串匹配；但根据测试运行器使用的选项标志，还可能存在几种非精确匹配类型。有关选项标志的更多信息，请参阅\(TestRunner\)的文档。
- en: '[PRE8]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Alias for field number 1
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 字段编号1的别名
- en: '[PRE10]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Alias for field number 0
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 字段编号0的别名
- en: '[PRE11]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Converts a list of ‘/’ separated paths into a list of native (os.sep separated)
    paths and converts to lowercase if the system is case insensitive.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 将一组由‘/’分隔的路径转换为本地（os.sep分隔）路径列表，并在系统不区分大小写时转换为小写。
- en: '[PRE12]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Runs doctests in all *.py files in the SymPy directory which match any of the
    given strings in `paths` or all tests if paths=[].
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 运行SymPy目录中所有与`paths`中给定字符串匹配的*.py文件中的doctests，或者如果paths=[]则运行所有测试。
- en: 'Notes:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：
- en: Paths can be entered in native system format or in unix, forward-slash format.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 路径可以输入本地系统格式或unix，正斜杠格式。
- en: Files that are on the blacklist can be tested by providing their path; they
    are only excluded if no paths are given.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 黑名单中的文件可以通过提供其路径来进行测试；只有在没有给定路径的情况下才会排除它们。
- en: Examples
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE13]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Run all tests:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 运行所有测试：
- en: '[PRE14]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Run one file:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 运行一个文件：
- en: '[PRE15]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Run all tests in sympy/functions/ and some particular file:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在sympy/functions/中运行所有测试以及某个特定文件：
- en: '[PRE16]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Run any file having polynomial in its name, doc/src/modules/polynomial.rst,
    sympy/functions/special/polynomials.py, and sympy/polys/polynomial.py:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 运行任何文件名中包含多项式的文件，doc/src/modules/polynomial.rst，sympy/functions/special/polynomials.py以及sympy/polys/polynomial.py：
- en: '[PRE17]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The `split` option can be passed to split the test run into parts. The split
    currently only splits the test files, though this may change in the future. `split`
    should be a string of the form ‘a/b’, which will run part `a` of `b`. Note that
    the regular doctests and the Sphinx doctests are split independently. For instance,
    to run the first half of the test suite:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 可以传递`split`选项来将测试运行分成多个部分。目前只会将测试文件分割，但这可能会在将来改变。`split`应该是形式为‘a/b’的字符串，将运行第`a`部分的`b`。请注意，常规doctests和Sphinx
    doctests会独立拆分。例如，要运行测试套件的前一半：
- en: '[PRE18]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The `subprocess` and `verbose` options are the same as with the function `test()`
    (see the docstring of that function for more information) except that `verbose`
    may also be set equal to `2` in order to print individual doctest lines, as they
    are being tested.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '`subprocess` 和 `verbose` 选项与函数 `test()` 中的相同（有关更多信息，请参阅该函数的文档字符串），不同之处在于 `verbose`
    还可以设置为 `2`，以打印单独的doctest行，因为它们正在被测试。'
- en: '[PRE19]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Returns the root SymPy directory and set the global value indicating whether
    the system is case sensitive or not.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 返回根SymPy目录并设置全局值，指示系统是否区分大小写。
- en: '[PRE20]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Context manager to make DeprecationWarning raise an error
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 上下文管理器，使DeprecationWarning引发错误
- en: This is to catch SymPyDeprecationWarning from library code while running tests
    and doctests. It is important to use this context manager around each individual
    test/doctest in case some tests modify the warning filters.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行测试和doctests时捕获来自库代码的SymPyDeprecationWarning，并使用此上下文管理器尤为重要，以防一些测试修改了警告过滤器。
- en: '[PRE21]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Run all tests.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 运行所有测试。
- en: Right now, this runs the regular tests (bin/test), the doctests (bin/doctest),
    and the examples (examples/all.py).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，此操作运行常规测试（bin/test）、doctests（bin/doctest）和示例（examples/all.py）。
- en: This is what `setup.py test` uses.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这是`setup.py test`使用的内容。
- en: You can pass arguments and keyword arguments to the test functions that support
    them (for now, test, doctest, and the examples). See the docstrings of those functions
    for a description of the available options.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将参数和关键字参数传递给支持它们的测试函数（目前为止，测试、doctest和示例）。有关可用选项的描述，请参阅这些函数的文档字符串。
- en: 'For example, to run the solvers tests with colors turned off:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要在关闭颜色的情况下运行求解器测试：
- en: '[PRE22]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Run a function in a Python subprocess with hash randomization enabled.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 使用启用哈希随机化的Python子进程运行函数。
- en: If hash randomization is not supported by the version of Python given, it returns
    False. Otherwise, it returns the exit value of the command. The function is passed
    to sys.exit(), so the return value of the function will be the return value.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如果给定的Python版本不支持哈希随机化，则返回False。否则，返回命令的退出值。该函数传递给sys.exit()，因此函数的返回值将是返回值。
- en: The environment variable PYTHONHASHSEED is used to seed Python’s hash randomization.
    If it is set, this function will return False, because starting a new subprocess
    is unnecessary in that case. If it is not set, one is set at random, and the tests
    are run. Note that if this environment variable is set when Python starts, hash
    randomization is automatically enabled. To force a subprocess to be created even
    if PYTHONHASHSEED is set, pass `force=True`. This flag will not force a subprocess
    in Python versions that do not support hash randomization (see below), because
    those versions of Python do not support the `-R` flag.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 环境变量PYTHONHASHSEED用于种子化Python的哈希随机化。如果设置了它，此函数将返回False，因为在这种情况下启动新子进程是不必要的。如果未设置，则随机设置一个种子，并运行测试。请注意，如果Python启动时设置了此环境变量，则哈希随机化将自动启用。要强制创建子进程，即使设置了PYTHONHASHSEED，请传递`force=True`。在不支持哈希随机化的Python版本中（请参阅下文），此标志将不会强制创建子进程，因为这些Python版本不支持`-R`标志。
- en: '`function` should be a string name of a function that is importable from the
    module `module`, like “_test”. The default for `module` is “sympy.testing.runtests”.
    `function_args` and `function_kwargs` should be a repr-able tuple and dict, respectively.
    The default Python command is sys.executable, which is the currently running Python
    command.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '`function`应该是一个从模块`module`可导入的函数的字符串名称，例如“_test”。`function_args`和`function_kwargs`应该分别是repr-able的元组和字典。默认的Python命令是sys.executable，即当前正在运行的Python命令。'
- en: This function is necessary because the seed for hash randomization must be set
    by the environment variable before Python starts. Hence, in order to use a predetermined
    seed for tests, we must start Python in a separate subprocess.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数是必需的，因为在Python启动之前必须通过环境变量设置哈希随机化的种子。因此，为了在测试中使用预定的种子，我们必须在一个单独的子进程中启动Python。
- en: Hash randomization was added in the minor Python versions 2.6.8, 2.7.3, 3.1.5,
    and 3.2.3, and is enabled by default in all Python versions after and including
    3.3.0.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希随机化添加在次要Python版本2.6.8、2.7.3、3.1.5和3.2.3中，并且在包括3.3.0及以后的所有Python版本中默认启用。
- en: Examples
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE24]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Splits a list into part a of b
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 将列表分割为a部分的b部分
- en: split should be a string of the form ‘a/b’. For instance, ‘1/3’ would give the
    split one of three.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: split应该是形式为‘a/b’的字符串。例如，‘1/3’将给出一个三分之一的分割。
- en: If the length of the list is not divisible by the number of splits, the last
    split will have more items.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 如果列表的长度不能被分割数整除，则最后一个分割将具有更多的项。
- en: \(density\) may be specified as a list. If specified, tests will be balanced
    so that each split has as equal-as-possible amount of mass according to \(density\).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: \(density\)可以指定为一个列表。如果指定了，则根据\(density\)平衡测试，以便每个分割具有尽可能相等的质量。
- en: '[PRE26]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Test examples in the given file. Return (#failures, #tests).'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 给定文件中的测试示例。返回（#失败，#测试）。
- en: 'Optional keyword arg `module_relative` specifies how filenames should be interpreted:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 可选关键字参数`module_relative`指定文件名的解释方式：
- en: If `module_relative` is True (the default), then `filename` specifies a module-relative
    path. By default, this path is relative to the calling module’s directory; but
    if the `package` argument is specified, then it is relative to that package. To
    ensure os-independence, `filename` should use “/” characters to separate path
    segments, and should not be an absolute path (i.e., it may not begin with “/”).
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果`module_relative`为True（默认值），则`filename`指定一个模块相对路径。默认情况下，此路径相对于调用模块的目录；但如果指定了`package`参数，则相对于该包。为确保操作系统的独立性，`filename`应使用“/”字符分隔路径段，并且不应为绝对路径（即，不能以“/”开头）。
- en: If `module_relative` is False, then `filename` specifies an os-specific path.
    The path may be absolute or relative (to the current working directory).
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果`module_relative`为False，则`filename`指定一个特定于操作系统的路径。路径可以是绝对的或相对的（相对于当前工作目录）。
- en: Optional keyword arg `name` gives the name of the test; by default use the file’s
    basename.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 可选关键字参数`name`给出测试的名称；默认使用文件的基本名称。
- en: Optional keyword argument `package` is a Python package or the name of a Python
    package whose directory should be used as the base directory for a module relative
    filename. If no package is specified, then the calling module’s directory is used
    as the base directory for module relative filenames. It is an error to specify
    `package` if `module_relative` is False.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 可选关键字参数`package`是一个Python包或Python包的名称，其目录应作为模块相对文件名的基本目录。如果未指定包，则使用调用模块的目录作为模块相对文件名的基本目录。如果`module_relative`为False，则指定`package`是一个错误。
- en: Optional keyword arg `globs` gives a dict to be used as the globals when executing
    examples; by default, use {}. A copy of this dict is actually used for each docstring,
    so that each docstring’s examples start with a clean slate.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 可选关键字参数`globs`提供一个应用于执行示例时用作全局变量的字典；默认使用{}。实际上为每个docstring的副本使用此字典，以便每个docstring的示例都从干净的状态开始。
- en: Optional keyword arg `extraglobs` gives a dictionary that should be merged into
    the globals that are used to execute examples. By default, no extra globals are
    used.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 可选关键字参数`extraglobs`提供一个应合并到用于执行示例的全局变量中的字典。默认情况下不使用额外的全局变量。
- en: Optional keyword arg `verbose` prints lots of stuff if true, prints only failures
    if false; by default, it’s true iff “-v” is in sys.argv.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 可选关键字参数`verbose`如果为真，则打印大量内容；如果为假，则仅打印失败项。默认情况下，如果sys.argv中包含“-v”，则为真。
- en: Optional keyword arg `report` prints a summary at the end when true, else prints
    nothing at the end. In verbose mode, the summary is detailed, else very brief
    (in fact, empty if all tests passed).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 可选关键字参数`report`在为true时打印摘要结束时打印，否则在结束时打印空白（如果所有测试都通过，则为空白）。
- en: 'Optional keyword arg `optionflags` or’s together module constants, and defaults
    to 0\. Possible values (see the docs for details):'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 可选关键字参数`optionflags`将模块常量或在一起，并默认为0。可能的值（详见文档详细信息）：
- en: DONT_ACCEPT_TRUE_FOR_1
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DONT_ACCEPT_TRUE_FOR_1
- en: DONT_ACCEPT_BLANKLINE
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DONT_ACCEPT_BLANKLINE
- en: NORMALIZE_WHITESPACE
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NORMALIZE_WHITESPACE
- en: ELLIPSIS
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ELLIPSIS
- en: SKIP
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SKIP
- en: IGNORE_EXCEPTION_DETAIL
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IGNORE_EXCEPTION_DETAIL
- en: REPORT_UDIFF
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: REPORT_UDIFF
- en: REPORT_CDIFF
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: REPORT_CDIFF
- en: REPORT_NDIFF
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: REPORT_NDIFF
- en: REPORT_ONLY_FIRST_FAILURE
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: REPORT_ONLY_FIRST_FAILURE
- en: Optional keyword arg `raise_on_error` raises an exception on the first unexpected
    exception or failure. This allows failures to be post-mortem debugged.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 可选关键字参数`raise_on_error`在第一个意外异常或失败时引发异常。这允许将失败后调试。
- en: Optional keyword arg `parser` specifies a DocTestParser (or subclass) that should
    be used to extract tests from the files.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 可选关键字参数`parser`指定应用于从文件中提取测试的DocTestParser（或其子类）。
- en: Optional keyword arg `encoding` specifies an encoding that should be used to
    convert the file to unicode.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 可选关键字参数`encoding`指定用于将文件转换为Unicode的编码。
- en: 'Advanced tomfoolery: testmod runs methods of a local instance of class doctest.Tester,
    then merges the results into (or creates) global Tester instance doctest.master.
    Methods of doctest.master can be called directly too, if you want to do something
    unusual. Passing report=0 to testmod is especially useful then, to delay displaying
    a summary. Invoke doctest.master.summarize(verbose) when you’re done fiddling.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 高级愚蠢行为：testmod运行本地类实例doctest.Tester的方法，然后将结果合并到（或创建）全局Tester实例doctest.master中。您也可以直接调用doctest.master的方法，如果您想做一些不寻常的事情。将report=0传递给testmod在这种情况下特别有用，以延迟显示摘要。完成调整后调用doctest.master.summarize(verbose)。
- en: '[PRE28]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Run tests in the specified test_*.py files.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在指定的test_*.py文件中运行测试。
- en: Tests in a particular test_*.py file are run if any of the given strings in
    `paths` matches a part of the test file’s path. If `paths=[]`, tests in all test_*.py
    files are run.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`paths=[]`，则如果`paths`中的任何给定字符串与测试文件的路径的一部分匹配，则在特定test_*.py文件中运行测试。将在所有test_*.py文件中运行测试。
- en: 'Notes:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：
- en: If sort=False, tests are run in random order (not default).
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果sort=False，则按随机顺序（而不是默认顺序）运行测试。
- en: Paths can be entered in native system format or in unix, forward-slash format.
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 路径可以输入本地系统格式或Unix前斜杠格式。
- en: Files that are on the blacklist can be tested by providing their path; they
    are only excluded if no paths are given.
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供路径测试的文件可以通过提供其路径进行测试；仅在没有给出路径时才排除它们。
- en: '**Explanation of test results**'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '**测试结果的解释**'
- en: '| Output | Meaning |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| Output | Meaning |'
- en: '| --- | --- |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| . | passed |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| . | passed |'
- en: '| F | failed |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| F | failed |'
- en: '| X | XPassed (expected to fail but passed) |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| X | XPassed（预期会失败但通过） |'
- en: '| f | XFAILed (expected to fail and indeed failed) |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| f | XFAILed（预期会失败并确实失败） |'
- en: '| s | skipped |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| s | skipped |'
- en: '| w | slow |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| w | slow |'
- en: '| T | timeout (e.g., when `--timeout` is used) |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| T | timeout（例如，当使用`--timeout`时） |'
- en: '| K | KeyboardInterrupt (when running the slow tests with `--slow`, you can
    interrupt one of them without killing the test runner) |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| K | KeyboardInterrupt（当使用`--slow`运行缓慢测试时，您可以中断其中一个，而不会终止测试运行器） |'
- en: Colors have no additional meaning and are used just to facilitate interpreting
    the output.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 颜色没有额外的含义，只是用于便于解释输出。
- en: Examples
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE29]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Run all tests:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 运行所有测试：
- en: '[PRE30]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Run one file:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 运行一个文件：
- en: '[PRE31]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Run all tests in sympy/functions/ and some particular file:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 运行sympy/functions/中的所有测试和某个特定文件：
- en: '[PRE32]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Run all tests in sympy/core and sympy/utilities:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 运行sympy/core和sympy/utilities中的所有测试：
- en: '[PRE33]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Run specific test from a file:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 从文件中运行特定测试：
- en: '[PRE34]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Run specific test from any file:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 从任何文件中运行特定测试：
- en: '[PRE35]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Run the tests with verbose mode on:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 使用详细模式运行测试：
- en: '[PRE36]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Do not sort the test output:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 不要对测试输出排序：
- en: '[PRE37]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Turn on post-mortem pdb:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 打开事后调试pdb：
- en: '[PRE38]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Turn off colors:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 关闭颜色：
- en: '[PRE39]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Force colors, even when the output is not to a terminal (this is useful, e.g.,
    if you are piping to `less -r` and you still want colors)
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 即使输出不是终端，也要强制使用颜色（例如，如果您正在将其管道到`less -r`并且仍然想要颜色）。
- en: '[PRE40]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: The traceback verboseness can be set to “short” or “no” (default is “short”)
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 可以将回溯详细程度设置为“short”或“no”（默认为“short”）。
- en: '[PRE41]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The `split` option can be passed to split the test run into parts. The split
    currently only splits the test files, though this may change in the future. `split`
    should be a string of the form ‘a/b’, which will run part `a` of `b`. For instance,
    to run the first half of the test suite:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 可以传递`split`选项来将测试运行分成几部分。目前，分割仅分割测试文件，但这可能会在将来更改。`split`应该是形式为‘a/b’的字符串，这将运行第`a`部分的`b`。例如，要运行测试套件的前半部分：
- en: '[PRE42]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: The `time_balance` option can be passed in conjunction with `split`. If `time_balance=True`
    (the default for `sympy.test`), SymPy will attempt to split the tests such that
    each split takes equal time. This heuristic for balancing is based on pre-recorded
    test data.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 可以与`split`一起传递`time_balance`选项。如果`time_balance=True`（`sympy.test`的默认值），SymPy将尝试分割测试，以使每个分割花费相等的时间。这种平衡的启发式基于预先记录的测试数据。
- en: '[PRE43]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: You can disable running the tests in a separate subprocess using `subprocess=False`.
    This is done to support seeding hash randomization, which is enabled by default
    in the Python versions where it is supported. If subprocess=False, hash randomization
    is enabled/disabled according to whether it has been enabled or not in the calling
    Python process. However, even if it is enabled, the seed cannot be printed unless
    it is called from a new Python process.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过设置`subprocess=False`来禁用在单独的子进程中运行测试。这样做是为了支持种子哈希随机化，在支持的Python版本中默认启用。如果`subprocess=False`，则哈希随机化根据调用的Python进程是否启用来启用/禁用。但是，即使启用了哈希随机化，除非从新的Python进程调用，否则无法打印种子。
- en: Hash randomization was added in the minor Python versions 2.6.8, 2.7.3, 3.1.5,
    and 3.2.3, and is enabled by default in all Python versions after and including
    3.3.0.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希随机化是在次要Python版本2.6.8、2.7.3、3.1.5和3.2.3中添加的，并且默认情况下在包括3.3.0及以后的所有Python版本中启用。
- en: If hash randomization is not supported `subprocess=False` is used automatically.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不支持哈希随机化，则自动使用`subprocess=False`。
- en: '[PRE44]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: To set the hash randomization seed, set the environment variable `PYTHONHASHSEED`
    before running the tests. This can be done from within Python using
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置哈希随机化种子，请在运行测试之前设置环境变量`PYTHONHASHSEED`。这可以在Python内部使用
- en: '[PRE45]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Or from the command line using
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 或者从命令行使用
- en: $ PYTHONHASHSEED=42 ./bin/test
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: $ PYTHONHASHSEED=42 ./bin/test
- en: If the seed is not set, a random seed will be chosen.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未设置种子，则将选择一个随机种子。
- en: Note that to reproduce the same hash values, you must use both the same seed
    as well as the same architecture (32-bit vs. 64-bit).
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，要重现相同的哈希值，必须同时使用相同的种子和相同的架构（32位 vs 64位）。
