- en: scipy.fft.hfftn
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.hfftn.html#scipy.fft.hfftn](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.hfftn.html#scipy.fft.hfftn)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute the N-D FFT of Hermitian symmetric complex input, i.e., a signal with
    a real spectrum.
  prefs: []
  type: TYPE_NORMAL
- en: This function computes the N-D discrete Fourier Transform for a Hermitian symmetric
    complex input over any number of axes in an M-D array by means of the Fast Fourier
    Transform (FFT). In other words, `ihfftn(hfftn(x, s)) == x` to within numerical
    accuracy. (`s` here is `x.shape` with `s[-1] = x.shape[-1] * 2 - 1`, this is necessary
    for the same reason `x.shape` would be necessary for [`irfft`](scipy.fft.irfft.html#scipy.fft.irfft
    "scipy.fft.irfft").)
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input array.
  prefs: []
  type: TYPE_NORMAL
- en: '**s**sequence of ints, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Shape (length of each transformed axis) of the output (`s[0]` refers to axis
    0, `s[1]` to axis 1, etc.). *s* is also the number of input points used along
    this axis, except for the last axis, where `s[-1]//2+1` points of the input are
    used. Along any axis, if the shape indicated by *s* is smaller than that of the
    input, the input is cropped. If it is larger, the input is padded with zeros.
    If *s* is not given, the shape of the input along the axes specified by axes is
    used. Except for the last axis which is taken to be `2*(m-1)` where `m` is the
    length of the input along that axis.
  prefs: []
  type: TYPE_NORMAL
- en: '**axes**sequence of ints, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axes over which to compute the inverse FFT. If not given, the last *len(s)*
    axes are used, or all axes if *s* is also not specified.
  prefs: []
  type: TYPE_NORMAL
- en: '**norm**{“backward”, “ortho”, “forward”}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Normalization mode (see [`fft`](scipy.fft.fft.html#scipy.fft.fft "scipy.fft.fft")).
    Default is “backward”.
  prefs: []
  type: TYPE_NORMAL
- en: '**overwrite_x**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True, the contents of *x* can be destroyed; the default is False. See [`fft`](scipy.fft.fft.html#scipy.fft.fft
    "scipy.fft.fft") for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '**workers**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Maximum number of workers to use for parallel computation. If negative, the
    value wraps around from `os.cpu_count()`. See [`fft`](scipy.fft.fft.html#scipy.fft.fft
    "scipy.fft.fft") for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '**plan**object, optional'
  prefs: []
  type: TYPE_NORMAL
- en: This argument is reserved for passing in a precomputed plan provided by downstream
    FFT vendors. It is currently not used in SciPy.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.5.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The truncated or zero-padded input, transformed along the axes indicated by
    *axes*, or by a combination of *s* or *x*, as explained in the parameters section
    above. The length of each transformed axis is as given by the corresponding element
    of *s*, or the length of the input in every axis except for the last one if *s*
    is not given. In the final transformed axis the length of the output when *s*
    is not given is `2*(m-1)` where `m` is the length of the final transformed axis
    of the input. To get an odd number of output points in the final axis, *s* must
    be specified.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: ValueError
  prefs: []
  type: TYPE_NORMAL
- en: If *s* and *axes* have different length.
  prefs: []
  type: TYPE_NORMAL
- en: IndexError
  prefs: []
  type: TYPE_NORMAL
- en: If an element of *axes* is larger than the number of axes of *x*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`ihfftn`](scipy.fft.ihfftn.html#scipy.fft.ihfftn "scipy.fft.ihfftn")'
  prefs: []
  type: TYPE_NORMAL
- en: The inverse N-D FFT with real spectrum. Inverse of [`hfftn`](#scipy.fft.hfftn
    "scipy.fft.hfftn").
  prefs: []
  type: TYPE_NORMAL
- en: '[`fft`](scipy.fft.fft.html#scipy.fft.fft "scipy.fft.fft")'
  prefs: []
  type: TYPE_NORMAL
- en: The 1-D FFT, with definitions and conventions used.
  prefs: []
  type: TYPE_NORMAL
- en: '[`rfft`](scipy.fft.rfft.html#scipy.fft.rfft "scipy.fft.rfft")'
  prefs: []
  type: TYPE_NORMAL
- en: Forward FFT of real input.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'For a 1-D signal `x` to have a real spectrum, it must satisfy the Hermitian
    property:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'This generalizes into higher dimensions by reflecting over each axis in turn:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'This should not be confused with a Hermitian matrix, for which the transpose
    is its own conjugate:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The default value of *s* assumes an even output length in the final transformation
    axis. When performing the final complex to real transformation, the Hermitian
    symmetry requires that the last imaginary component along that axis must be 0
    and so it is ignored. To avoid losing information, the correct length of the real
    input *must* be given.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
