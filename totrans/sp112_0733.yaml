- en: scipy.spatial.SphericalVoronoi
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.spatial.SphericalVoronoi.html#scipy.spatial.SphericalVoronoi](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.spatial.SphericalVoronoi.html#scipy.spatial.SphericalVoronoi)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Voronoi diagrams on the surface of a sphere.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.18.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**points**ndarray of floats, shape (npoints, ndim)'
  prefs: []
  type: TYPE_NORMAL
- en: Coordinates of points from which to construct a spherical Voronoi diagram.
  prefs: []
  type: TYPE_NORMAL
- en: '**radius**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Radius of the sphere (Default: 1)'
  prefs: []
  type: TYPE_NORMAL
- en: '**center**ndarray of floats, shape (ndim,)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Center of sphere (Default: origin)'
  prefs: []
  type: TYPE_NORMAL
- en: '**threshold**float'
  prefs: []
  type: TYPE_NORMAL
- en: 'Threshold for detecting duplicate points and mismatches between points and
    sphere parameters. (Default: 1e-06)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: ValueError
  prefs: []
  type: TYPE_NORMAL
- en: If there are duplicates in *points*. If the provided *radius* is not consistent
    with *points*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`Voronoi`](scipy.spatial.Voronoi.html#scipy.spatial.Voronoi "scipy.spatial.Voronoi")'
  prefs: []
  type: TYPE_NORMAL
- en: Conventional Voronoi diagrams in N dimensions.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The spherical Voronoi diagram algorithm proceeds as follows. The Convex Hull
    of the input points (generators) is calculated, and is equivalent to their Delaunay
    triangulation on the surface of the sphere [[Caroli]](#r9133a064969a-caroli).
    The Convex Hull neighbour information is then used to order the Voronoi region
    vertices around each generator. The latter approach is substantially less sensitive
    to floating point issues than angle-based methods of Voronoi region vertex sorting.
  prefs: []
  type: TYPE_NORMAL
- en: Empirical assessment of spherical Voronoi algorithm performance suggests quadratic
    time complexity (loglinear is optimal, but algorithms are more challenging to
    implement).
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[Caroli](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: Caroli et al. Robust and Efficient Delaunay triangulations of points on or close
    to a sphere. Research Report RR-7004, 2009.
  prefs: []
  type: TYPE_NORMAL
- en: '[VanOosterom]'
  prefs: []
  type: TYPE_NORMAL
- en: Van Oosterom and Strackee. The solid angle of a plane triangle. IEEE Transactions
    on Biomedical Engineering, 2, 1983, pp 125–126.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Do some imports and take some points on a cube:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Calculate the spherical Voronoi diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Generate plot:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-spatial-SphericalVoronoi-1.png](../Images/7df25865e711378eb606beb79a3a79cf.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '**points**double array of shape (npoints, ndim)'
  prefs: []
  type: TYPE_NORMAL
- en: the points in *ndim* dimensions to generate the Voronoi diagram from
  prefs: []
  type: TYPE_NORMAL
- en: '**radius**double'
  prefs: []
  type: TYPE_NORMAL
- en: radius of the sphere
  prefs: []
  type: TYPE_NORMAL
- en: '**center**double array of shape (ndim,)'
  prefs: []
  type: TYPE_NORMAL
- en: center of the sphere
  prefs: []
  type: TYPE_NORMAL
- en: '**vertices**double array of shape (nvertices, ndim)'
  prefs: []
  type: TYPE_NORMAL
- en: Voronoi vertices corresponding to points
  prefs: []
  type: TYPE_NORMAL
- en: '**regions**list of list of integers of shape (npoints, _ )'
  prefs: []
  type: TYPE_NORMAL
- en: the n-th entry is a list consisting of the indices of the vertices belonging
    to the n-th point in points
  prefs: []
  type: TYPE_NORMAL
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`calculate_areas`](scipy.spatial.SphericalVoronoi.calculate_areas.html#scipy.spatial.SphericalVoronoi.calculate_areas
    "scipy.spatial.SphericalVoronoi.calculate_areas")() | Calculates the areas of
    the Voronoi regions. |'
  prefs: []
  type: TYPE_TB
