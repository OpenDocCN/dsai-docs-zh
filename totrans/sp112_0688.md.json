["```py\nclass scipy.sparse.dia_matrix(arg1, shape=None, dtype=None, copy=False)\n```", "```py\n>>> import numpy as np\n>>> from scipy.sparse import dia_matrix\n>>> dia_matrix((3, 4), dtype=np.int8).toarray()\narray([[0, 0, 0, 0],\n [0, 0, 0, 0],\n [0, 0, 0, 0]], dtype=int8) \n```", "```py\n>>> data = np.array([[1, 2, 3, 4]]).repeat(3, axis=0)\n>>> offsets = np.array([0, -1, 2])\n>>> dia_matrix((data, offsets), shape=(4, 4)).toarray()\narray([[1, 0, 3, 0],\n [1, 2, 0, 4],\n [0, 2, 3, 0],\n [0, 0, 3, 4]]) \n```", "```py\n>>> from scipy.sparse import dia_matrix\n>>> n = 10\n>>> ex = np.ones(n)\n>>> data = np.array([ex, 2 * ex, ex])\n>>> offsets = np.array([-1, 0, 1])\n>>> dia_matrix((data, offsets), shape=(n, n)).toarray()\narray([[2., 1., 0., ..., 0., 0., 0.],\n [1., 2., 1., ..., 0., 0., 0.],\n [0., 1., 2., ..., 0., 0., 0.],\n ...,\n [0., 0., 0., ..., 2., 1., 0.],\n [0., 0., 0., ..., 1., 2., 1.],\n [0., 0., 0., ..., 0., 1., 2.]]) \n```"]