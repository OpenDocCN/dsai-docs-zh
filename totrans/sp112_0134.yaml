- en: scipy.integrate.newton_cotes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.newton_cotes.html#scipy.integrate.newton_cotes](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.newton_cotes.html#scipy.integrate.newton_cotes)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return weights and error coefficient for Newton-Cotes integration.
  prefs: []
  type: TYPE_NORMAL
- en: 'Suppose we have (N+1) samples of f at the positions x_0, x_1, …, x_N. Then
    an N-point Newton-Cotes formula for the integral between x_0 and x_N is:'
  prefs: []
  type: TYPE_NORMAL
- en: \(\int_{x_0}^{x_N} f(x)dx = \Delta x \sum_{i=0}^{N} a_i f(x_i) + B_N (\Delta
    x)^{N+2} f^{N+1} (\xi)\)
  prefs: []
  type: TYPE_NORMAL
- en: where \(\xi \in [x_0,x_N]\) and \(\Delta x = \frac{x_N-x_0}{N}\) is the average
    samples spacing.
  prefs: []
  type: TYPE_NORMAL
- en: If the samples are equally-spaced and N is even, then the error term is \(B_N
    (\Delta x)^{N+3} f^{N+2}(\xi)\).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**rn**int'
  prefs: []
  type: TYPE_NORMAL
- en: The integer order for equally-spaced data or the relative positions of the samples
    with the first sample at 0 and the last at N, where N+1 is the length of *rn*.
    N is the order of the Newton-Cotes integration.
  prefs: []
  type: TYPE_NORMAL
- en: '**equal**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Set to 1 to enforce equally spaced data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**an**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: 1-D array of weights to apply to the function at the provided sample positions.
  prefs: []
  type: TYPE_NORMAL
- en: '**B**float'
  prefs: []
  type: TYPE_NORMAL
- en: Error coefficient.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Normally, the Newton-Cotes rules are used on smaller integration regions and
    a composite rule is used to return the total integral.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Compute the integral of sin(x) in [0, \(\pi\)]:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
