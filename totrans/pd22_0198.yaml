- en: pandas.Series.combine
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.Series.combine.html](https://pandas.pydata.org/docs/reference/api/pandas.Series.combine.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Combine the Series with a Series or scalar according to func.
  prefs: []
  type: TYPE_NORMAL
- en: Combine the Series and other using func to perform elementwise selection for
    combined Series. fill_value is assumed when value is missing at some index from
    one of the two objects being combined.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**other**Series or scalar'
  prefs: []
  type: TYPE_NORMAL
- en: The value(s) to be combined with the Series.
  prefs: []
  type: TYPE_NORMAL
- en: '**func**function'
  prefs: []
  type: TYPE_NORMAL
- en: Function that takes two scalars as inputs and returns an element.
  prefs: []
  type: TYPE_NORMAL
- en: '**fill_value**scalar, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The value to assume when an index is missing from one Series or the other. The
    default specifies to use the appropriate NaN value for the underlying dtype of
    the Series.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: Series
  prefs: []
  type: TYPE_NORMAL
- en: The result of combining the Series with the other object.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.combine_first`](pandas.Series.combine_first.html#pandas.Series.combine_first
    "pandas.Series.combine_first")'
  prefs: []
  type: TYPE_NORMAL
- en: Combine Series values, choosing the calling Series’ values first.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Consider 2 Datasets `s1` and `s2` containing highest clocked speeds of different
    birds.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Now, to combine the two datasets and view the highest speeds of the birds across
    the two datasets
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: In the previous example, the resulting value for duck is missing, because the
    maximum of a NaN and a float is a NaN. So, in the example, we set `fill_value=0`,
    so the maximum value returned will be the value from some dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
