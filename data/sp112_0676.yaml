- en: scipy.sparse.bsr_array
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.sparse.bsr_array
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.bsr_array.html#scipy.sparse.bsr_array](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.bsr_array.html#scipy.sparse.bsr_array)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.bsr_array.html#scipy.sparse.bsr_array](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.bsr_array.html#scipy.sparse.bsr_array)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Block Sparse Row format sparse array.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 块稀疏行格式稀疏数组。
- en: 'This can be instantiated in several ways:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过几种方式实例化：
- en: bsr_array(D, [blocksize=(R,C)])
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: bsr_array(D, [blocksize=(R,C)])
- en: where D is a 2-D ndarray.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 其中D是一个二维数组。
- en: bsr_array(S, [blocksize=(R,C)])
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: bsr_array(S, [blocksize=(R,C)])
- en: with another sparse array or matrix S (equivalent to S.tobsr())
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 与另一个稀疏数组或矩阵S进行比较（等效于S.tobsr()）。
- en: bsr_array((M, N), [blocksize=(R,C), dtype])
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: bsr_array((M, N), [blocksize=(R,C), dtype])
- en: to construct an empty sparse array with shape (M, N) dtype is optional, defaulting
    to dtype=’d’.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 用于构建形状为(M, N)的空稀疏数组，数据类型是可选的，默认为dtype='d'。
- en: bsr_array((data, ij), [blocksize=(R,C), shape=(M, N)])
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: bsr_array((data, ij), [blocksize=(R,C), shape=(M, N)])
- en: where `data` and `ij` satisfy `a[ij[0, k], ij[1, k]] = data[k]`
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 其中`data`和`ij`满足`a[ij[0, k], ij[1, k]] = data[k]`
- en: bsr_array((data, indices, indptr), [shape=(M, N)])
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: bsr_array((data, indices, indptr), [shape=(M, N)])
- en: 'is the standard BSR representation where the block column indices for row i
    are stored in `indices[indptr[i]:indptr[i+1]]` and their corresponding block values
    are stored in `data[ indptr[i]: indptr[i+1] ]`. If the shape parameter is not
    supplied, the array dimensions are inferred from the index arrays.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 是标准的BSR表示，其中第i行的块列索引存储在`indices[indptr[i]:indptr[i+1]]`中，它们对应的块值存储在`data[indptr[i]:indptr[i+1]]`中。如果未提供shape参数，则从索引数组中推断数组的尺寸。
- en: Notes
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: 'Sparse arrays can be used in arithmetic operations: they support addition,
    subtraction, multiplication, division, and matrix power.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 稀疏数组可以用于算术运算：它们支持加法、减法、乘法、除法和矩阵幂运算。
- en: '**Summary of BSR format**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**BSR格式摘要**'
- en: The Block Sparse Row (BSR) format is very similar to the Compressed Sparse Row
    (CSR) format. BSR is appropriate for sparse matrices with dense sub matrices like
    the last example below. Such sparse block matrices often arise in vector-valued
    finite element discretizations. In such cases, BSR is considerably more efficient
    than CSR and CSC for many sparse arithmetic operations.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 块稀疏行（BSR）格式与压缩稀疏行（CSR）格式非常相似。对于具有稠密子矩阵的稀疏矩阵，例如下面的最后一个示例，BSR格式非常适合。这种稀疏块矩阵经常出现在向量值有限元离散化中。在这种情况下，BSR比CSR和CSC在许多稀疏算术操作中要高效得多。
- en: '**Blocksize**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**块大小**'
- en: The blocksize (R,C) must evenly divide the shape of the sparse array (M,N).
    That is, R and C must satisfy the relationship `M % R = 0` and `N % C = 0`.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 块大小(R,C)必须均匀地划分稀疏数组的形状(M,N)。也就是说，R和C必须满足关系`M % R = 0`和`N % C = 0`。
- en: If no blocksize is specified, a simple heuristic is applied to determine an
    appropriate blocksize.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未指定块大小，则将应用简单的启发式方法来确定合适的块大小。
- en: '**Canonical Format**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**规范格式**'
- en: In canonical format, there are no duplicate blocks and indices are sorted per
    row.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在规范格式中，没有重复的块，并且索引按行排序。
- en: Examples
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Attributes:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 属性：
- en: '**dtype**dtype'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**dtype**数据类型'
- en: Data type of the array
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 数组的数据类型
- en: '[`shape`](scipy.sparse.bsr_array.shape.html#scipy.sparse.bsr_array.shape "scipy.sparse.bsr_array.shape")2-tuple'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[`shape`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.bsr_array.shape.html#scipy.sparse.bsr_array.shape
    "scipy.sparse.bsr_array.shape")二元组'
- en: The shape of the array.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 数组的形状。
- en: '**ndim**int'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**ndim**整数'
- en: Number of dimensions (this is always 2)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 维度的数量（始终为2）
- en: '[`nnz`](scipy.sparse.bsr_array.nnz.html#scipy.sparse.bsr_array.nnz "scipy.sparse.bsr_array.nnz")'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '[`nnz`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.bsr_array.nnz.html#scipy.sparse.bsr_array.nnz
    "scipy.sparse.bsr_array.nnz")'
- en: Number of stored values, including explicit zeros.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 存储的值的数量，包括显式的零值。
- en: '[`size`](scipy.sparse.bsr_array.size.html#scipy.sparse.bsr_array.size "scipy.sparse.bsr_array.size")'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[`size`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.bsr_array.size.html#scipy.sparse.bsr_array.size
    "scipy.sparse.bsr_array.size")'
- en: Number of stored values.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 存储值的数量。
- en: '**data**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据**'
- en: BSR format data array of the array
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: BSR格式数组的数据数组
- en: '**indices**'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**indices**'
- en: BSR format index array of the array
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: BSR格式数组的索引数组
- en: '**indptr**'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**indptr**'
- en: BSR format index pointer array of the array
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: BSR格式数组的索引指针数组
- en: '[`blocksize`](scipy.sparse.bsr_array.blocksize.html#scipy.sparse.bsr_array.blocksize
    "scipy.sparse.bsr_array.blocksize")'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[`blocksize`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.bsr_array.blocksize.html#scipy.sparse.bsr_array.blocksize
    "scipy.sparse.bsr_array.blocksize")'
- en: Block size of the matrix.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 矩阵的块大小。
- en: '[`has_sorted_indices`](scipy.sparse.bsr_array.has_sorted_indices.html#scipy.sparse.bsr_array.has_sorted_indices
    "scipy.sparse.bsr_array.has_sorted_indices")bool'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[`has_sorted_indices`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.bsr_array.html#scipy.sparse.bsr_array.has_sorted_indices
    "scipy.sparse.bsr_array.has_sorted_indices")bool'
- en: Whether the indices are sorted
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Whether the indices are sorted
- en: '[`has_canonical_format`](scipy.sparse.bsr_array.has_canonical_format.html#scipy.sparse.bsr_array.has_canonical_format
    "scipy.sparse.bsr_array.has_canonical_format")bool'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '[`has_canonical_format`](scipy.sparse.bsr_array.has_canonical_format.html#scipy.sparse.bsr_array.has_canonical_format
    "scipy.sparse.bsr_array.has_canonical_format")bool'
- en: Whether the array/matrix has sorted indices and no duplicates
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Whether the array/matrix has sorted indices and no duplicates
- en: '[`T`](scipy.sparse.bsr_array.T.html#scipy.sparse.bsr_array.T "scipy.sparse.bsr_array.T")'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[`T`](scipy.sparse.bsr_array.T.html#scipy.sparse.bsr_array.T "scipy.sparse.bsr_array.T")'
- en: Transpose.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 转置。
- en: Methods
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Methods
- en: '| [`__len__`](scipy.sparse.bsr_array.__len__.html#scipy.sparse.bsr_array.__len__
    "scipy.sparse.bsr_array.__len__")() |  |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| [`__len__`](scipy.sparse.bsr_array.__len__.html#scipy.sparse.bsr_array.__len__
    "scipy.sparse.bsr_array.__len__")() |  |'
- en: '| [`arcsin`](scipy.sparse.bsr_array.arcsin.html#scipy.sparse.bsr_array.arcsin
    "scipy.sparse.bsr_array.arcsin")() | Element-wise arcsin. |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| [`arcsin`](scipy.sparse.bsr_array.arcsin.html#scipy.sparse.bsr_array.arcsin
    "scipy.sparse.bsr_array.arcsin")() | 逐元素的反正弦。 |'
- en: '| [`arcsinh`](scipy.sparse.bsr_array.arcsinh.html#scipy.sparse.bsr_array.arcsinh
    "scipy.sparse.bsr_array.arcsinh")() | Element-wise arcsinh. |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| [`arcsinh`](scipy.sparse.bsr_array.arcsinh.html#scipy.sparse.bsr_array.arcsinh
    "scipy.sparse.bsr_array.arcsinh")() | 逐元素的反双曲正弦。 |'
- en: '| [`arctan`](scipy.sparse.bsr_array.arctan.html#scipy.sparse.bsr_array.arctan
    "scipy.sparse.bsr_array.arctan")() | Element-wise arctan. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| [`arctan`](scipy.sparse.bsr_array.arctan.html#scipy.sparse.bsr_array.arctan
    "scipy.sparse.bsr_array.arctan")() | 逐元素的反正切。 |'
- en: '| [`arctanh`](scipy.sparse.bsr_array.arctanh.html#scipy.sparse.bsr_array.arctanh
    "scipy.sparse.bsr_array.arctanh")() | Element-wise arctanh. |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| [`arctanh`](scipy.sparse.bsr_array.arctanh.html#scipy.sparse.bsr_array.arctanh
    "scipy.sparse.bsr_array.arctanh")() | 逐元素的反双曲正切。 |'
- en: '| [`argmax`](scipy.sparse.bsr_array.argmax.html#scipy.sparse.bsr_array.argmax
    "scipy.sparse.bsr_array.argmax")([axis, out]) | Return indices of maximum elements
    along an axis. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| [`argmax`](scipy.sparse.bsr_array.argmax.html#scipy.sparse.bsr_array.argmax
    "scipy.sparse.bsr_array.argmax")([axis, out]) | 返回沿轴的最大元素的索引。 |'
- en: '| [`argmin`](scipy.sparse.bsr_array.argmin.html#scipy.sparse.bsr_array.argmin
    "scipy.sparse.bsr_array.argmin")([axis, out]) | Return indices of minimum elements
    along an axis. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| [`argmin`](scipy.sparse.bsr_array.argmin.html#scipy.sparse.bsr_array.argmin
    "scipy.sparse.bsr_array.argmin")([axis, out]) | 返回沿轴的最小元素的索引。 |'
- en: '| [`asformat`](scipy.sparse.bsr_array.asformat.html#scipy.sparse.bsr_array.asformat
    "scipy.sparse.bsr_array.asformat")(format[, copy]) | Return this array/matrix
    in the passed format. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| [`asformat`](scipy.sparse.bsr_array.asformat.html#scipy.sparse.bsr_array.asformat
    "scipy.sparse.bsr_array.asformat")(format[, copy]) | 返回以指定格式表示的数组/矩阵。 |'
- en: '| [`asfptype`](scipy.sparse.bsr_array.asfptype.html#scipy.sparse.bsr_array.asfptype
    "scipy.sparse.bsr_array.asfptype")() | Upcast array/matrix to a floating point
    format (if necessary) |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| [`asfptype`](scipy.sparse.bsr_array.asfptype.html#scipy.sparse.bsr_array.asfptype
    "scipy.sparse.bsr_array.asfptype")() | 将数组/矩阵转换为浮点数格式（如有必要）。 |'
- en: '| [`astype`](scipy.sparse.bsr_array.astype.html#scipy.sparse.bsr_array.astype
    "scipy.sparse.bsr_array.astype")(dtype[, casting, copy]) | Cast the array/matrix
    elements to a specified type. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| [`astype`](scipy.sparse.bsr_array.astype.html#scipy.sparse.bsr_array.astype
    "scipy.sparse.bsr_array.astype")(dtype[, casting, copy]) | 将数组/矩阵元素转换为指定类型。 |'
- en: '| [`ceil`](scipy.sparse.bsr_array.ceil.html#scipy.sparse.bsr_array.ceil "scipy.sparse.bsr_array.ceil")()
    | Element-wise ceil. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| [`ceil`](scipy.sparse.bsr_array.ceil.html#scipy.sparse.bsr_array.ceil "scipy.sparse.bsr_array.ceil")()
    | 逐元素的向上取整。 |'
- en: '| [`check_format`](scipy.sparse.bsr_array.check_format.html#scipy.sparse.bsr_array.check_format
    "scipy.sparse.bsr_array.check_format")([full_check]) | Check whether the array/matrix
    respects the BSR format. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| [`check_format`](scipy.sparse.bsr_array.check_format.html#scipy.sparse.bsr_array.check_format
    "scipy.sparse.bsr_array.check_format")([full_check]) | 检查数组/矩阵是否符合BSR格式。 |'
- en: '| [`conj`](scipy.sparse.bsr_array.conj.html#scipy.sparse.bsr_array.conj "scipy.sparse.bsr_array.conj")([copy])
    | Element-wise complex conjugation. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| [`conj`](scipy.sparse.bsr_array.conj.html#scipy.sparse.bsr_array.conj "scipy.sparse.bsr_array.conj")([copy])
    | 逐元素的复共轭。 |'
- en: '| [`conjugate`](scipy.sparse.bsr_array.conjugate.html#scipy.sparse.bsr_array.conjugate
    "scipy.sparse.bsr_array.conjugate")([copy]) | Element-wise complex conjugation.
    |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| [`conjugate`](scipy.sparse.bsr_array.conjugate.html#scipy.sparse.bsr_array.conjugate
    "scipy.sparse.bsr_array.conjugate")([copy]) | 逐元素的复共轭。 |'
- en: '| [`copy`](scipy.sparse.bsr_array.copy.html#scipy.sparse.bsr_array.copy "scipy.sparse.bsr_array.copy")()
    | Returns a copy of this array/matrix. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| [`copy`](scipy.sparse.bsr_array.copy.html#scipy.sparse.bsr_array.copy "scipy.sparse.bsr_array.copy")()
    | 返回该数组/矩阵的副本。 |'
- en: '| [`count_nonzero`](scipy.sparse.bsr_array.count_nonzero.html#scipy.sparse.bsr_array.count_nonzero
    "scipy.sparse.bsr_array.count_nonzero")() | Number of non-zero entries, equivalent
    to |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| [`count_nonzero`](scipy.sparse.bsr_array.count_nonzero.html#scipy.sparse.bsr_array.count_nonzero
    "scipy.sparse.bsr_array.count_nonzero")() | 非零条目的数量，等同于 |'
- en: '| [`deg2rad`](scipy.sparse.bsr_array.deg2rad.html#scipy.sparse.bsr_array.deg2rad
    "scipy.sparse.bsr_array.deg2rad")() | Element-wise deg2rad. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| [`deg2rad`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_array.deg2rad.html#scipy.sparse.bsr_array.deg2rad
    "scipy.sparse.bsr_array.deg2rad")() | 元素级的 deg2rad。 |'
- en: '| [`diagonal`](scipy.sparse.bsr_array.diagonal.html#scipy.sparse.bsr_array.diagonal
    "scipy.sparse.bsr_array.diagonal")([k]) | Returns the kth diagonal of the array/matrix.
    |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| [`diagonal`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_array.diagonal.html#scipy.sparse.bsr_array.diagonal
    "scipy.sparse.bsr_array.diagonal")([k]) | 返回数组/矩阵的第 k 条对角线。 |'
- en: '| [`dot`](scipy.sparse.bsr_array.dot.html#scipy.sparse.bsr_array.dot "scipy.sparse.bsr_array.dot")(other)
    | Ordinary dot product |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| [`dot`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_array.dot.html#scipy.sparse.bsr_array.dot
    "scipy.sparse.bsr_array.dot")(other) | 普通的点积。 |'
- en: '| [`eliminate_zeros`](scipy.sparse.bsr_array.eliminate_zeros.html#scipy.sparse.bsr_array.eliminate_zeros
    "scipy.sparse.bsr_array.eliminate_zeros")() | Remove zero elements in-place. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| [`eliminate_zeros`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_array.eliminate_zeros.html#scipy.sparse.bsr_array.eliminate_zeros
    "scipy.sparse.bsr_array.eliminate_zeros")() | 去除原地的零元素。 |'
- en: '| [`expm1`](scipy.sparse.bsr_array.expm1.html#scipy.sparse.bsr_array.expm1
    "scipy.sparse.bsr_array.expm1")() | Element-wise expm1. |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| [`expm1`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_array.expm1.html#scipy.sparse.bsr_array.expm1
    "scipy.sparse.bsr_array.expm1")() | 元素级的 expm1。 |'
- en: '| [`floor`](scipy.sparse.bsr_array.floor.html#scipy.sparse.bsr_array.floor
    "scipy.sparse.bsr_array.floor")() | Element-wise floor. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| [`floor`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_array.floor.html#scipy.sparse.bsr_array.floor
    "scipy.sparse.bsr_array.floor")() | 元素级的 floor。 |'
- en: '| [`getH`](scipy.sparse.bsr_array.getH.html#scipy.sparse.bsr_array.getH "scipy.sparse.bsr_array.getH")()
    | Return the Hermitian transpose of this array/matrix. |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| [`getH`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_array.getH.html#scipy.sparse.bsr_array.getH
    "scipy.sparse.bsr_array.getH")() | 返回该数组/矩阵的共轭转置。 |'
- en: '| [`get_shape`](scipy.sparse.bsr_array.get_shape.html#scipy.sparse.bsr_array.get_shape
    "scipy.sparse.bsr_array.get_shape")() | Get shape of a sparse array/matrix. |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| [`get_shape`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_array.get_shape.html#scipy.sparse.bsr_array.get_shape
    "scipy.sparse.bsr_array.get_shape")() | 获取稀疏数组/矩阵的形状。 |'
- en: '| [`getcol`](scipy.sparse.bsr_array.getcol.html#scipy.sparse.bsr_array.getcol
    "scipy.sparse.bsr_array.getcol")(j) | Returns a copy of column j of the array/matrix,
    as an (m x 1) sparse array/matrix (column vector). |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| [`getcol`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_array.getcol.html#scipy.sparse.bsr_array.getcol
    "scipy.sparse.bsr_array.getcol")(j) | 返回数组/矩阵的第 j 列的副本，作为 (m x 1) 稀疏数组/矩阵（列向量）。
    |'
- en: '| [`getformat`](scipy.sparse.bsr_array.getformat.html#scipy.sparse.bsr_array.getformat
    "scipy.sparse.bsr_array.getformat")() | Sparse array/matrix storage format. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| [`getformat`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_array.getformat.html#scipy.sparse.bsr_array.getformat
    "scipy.sparse.bsr_array.getformat")() | 稀疏数组/矩阵的存储格式。 |'
- en: '| [`getmaxprint`](scipy.sparse.bsr_array.getmaxprint.html#scipy.sparse.bsr_array.getmaxprint
    "scipy.sparse.bsr_array.getmaxprint")() | Maximum number of elements to display
    when printed. |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| [`getmaxprint`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_array.getmaxprint.html#scipy.sparse.bsr_array.getmaxprint
    "scipy.sparse.bsr_array.getmaxprint")() | 打印时显示的最大元素数量。 |'
- en: '| [`getnnz`](scipy.sparse.bsr_array.getnnz.html#scipy.sparse.bsr_array.getnnz
    "scipy.sparse.bsr_array.getnnz")([axis]) | Number of stored values, including
    explicit zeros. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| [`getnnz`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_array.getnnz.html#scipy.sparse.bsr_array.getnnz
    "scipy.sparse.bsr_array.getnnz")([axis]) | 存储值的数量，包括显式的零值。 |'
- en: '| [`getrow`](scipy.sparse.bsr_array.getrow.html#scipy.sparse.bsr_array.getrow
    "scipy.sparse.bsr_array.getrow")(i) | Returns a copy of row i of the array/matrix,
    as a (1 x n) sparse array/matrix (row vector). |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| [`getrow`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_array.getrow.html#scipy.sparse.bsr_array.getrow
    "scipy.sparse.bsr_array.getrow")(i) | 返回数组/矩阵的第 i 行的副本，作为 (1 x n) 稀疏数组/矩阵（行向量）。
    |'
- en: '| [`log1p`](scipy.sparse.bsr_array.log1p.html#scipy.sparse.bsr_array.log1p
    "scipy.sparse.bsr_array.log1p")() | Element-wise log1p. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| [`log1p`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_array.log1p.html#scipy.sparse.bsr_array.log1p
    "scipy.sparse.bsr_array.log1p")() | 元素级的 log1p。 |'
- en: '| [`max`](scipy.sparse.bsr_array.max.html#scipy.sparse.bsr_array.max "scipy.sparse.bsr_array.max")([axis, out])
    | Return the maximum of the array/matrix or maximum along an axis. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| [`max`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_array.max.html#scipy.sparse.bsr_array.max
    "scipy.sparse.bsr_array.max")([axis, out]) | 返回数组/矩阵或指定轴向的最大值。 |'
- en: '| [`maximum`](scipy.sparse.bsr_array.maximum.html#scipy.sparse.bsr_array.maximum
    "scipy.sparse.bsr_array.maximum")(other) | Element-wise maximum between this and
    another array/matrix. |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| [`maximum`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_array.maximum.html#scipy.sparse.bsr_array.maximum
    "scipy.sparse.bsr_array.maximum")(other) | 该数组/矩阵与另一个数组/矩阵之间的元素级最大值。 |'
- en: '| [`mean`](scipy.sparse.bsr_array.mean.html#scipy.sparse.bsr_array.mean "scipy.sparse.bsr_array.mean")([axis, dtype, out])
    | Compute the arithmetic mean along the specified axis. |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| [`mean`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_array.mean.html#scipy.sparse.bsr_array.mean
    "scipy.sparse.bsr_array.mean")([axis, dtype, out]) | 计算沿指定轴的算术平均值。 |'
- en: '| [`min`](scipy.sparse.bsr_array.min.html#scipy.sparse.bsr_array.min "scipy.sparse.bsr_array.min")([axis, out])
    | Return the minimum of the array/matrix or maximum along an axis. |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| [`min`](scipy.sparse.bsr_array.min.html#scipy.sparse.bsr_array.min "scipy.sparse.bsr_array.min")([axis, out])
    | 返回数组/矩阵或沿轴的最小值或最大值 |'
- en: '| [`minimum`](scipy.sparse.bsr_array.minimum.html#scipy.sparse.bsr_array.minimum
    "scipy.sparse.bsr_array.minimum")(other) | Element-wise minimum between this and
    another array/matrix. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| [`minimum`](scipy.sparse.bsr_array.minimum.html#scipy.sparse.bsr_array.minimum
    "scipy.sparse.bsr_array.minimum")(other) | 与另一个数组/矩阵的逐元素最小值 |'
- en: '| [`multiply`](scipy.sparse.bsr_array.multiply.html#scipy.sparse.bsr_array.multiply
    "scipy.sparse.bsr_array.multiply")(other) | Point-wise multiplication by another
    array/matrix, vector, or scalar. |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| [`multiply`](scipy.sparse.bsr_array.multiply.html#scipy.sparse.bsr_array.multiply
    "scipy.sparse.bsr_array.multiply")(other) | 与另一个数组/矩阵、向量或标量的逐点乘法 |'
- en: '| [`nanmax`](scipy.sparse.bsr_array.nanmax.html#scipy.sparse.bsr_array.nanmax
    "scipy.sparse.bsr_array.nanmax")([axis, out]) | Return the maximum of the array/matrix
    or maximum along an axis, ignoring any NaNs. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| [`nanmax`](scipy.sparse.bsr_array.nanmax.html#scipy.sparse.bsr_array.nanmax
    "scipy.sparse.bsr_array.nanmax")([axis, out]) | 返回数组/矩阵或沿轴的最大值，忽略任何NaN值 |'
- en: '| [`nanmin`](scipy.sparse.bsr_array.nanmin.html#scipy.sparse.bsr_array.nanmin
    "scipy.sparse.bsr_array.nanmin")([axis, out]) | Return the minimum of the array/matrix
    or minimum along an axis, ignoring any NaNs. |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| [`nanmin`](scipy.sparse.bsr_array.nanmin.html#scipy.sparse.bsr_array.nanmin
    "scipy.sparse.bsr_array.nanmin")([axis, out]) | 返回数组/矩阵或沿轴的最小值，忽略任何NaN值 |'
- en: '| [`nonzero`](scipy.sparse.bsr_array.nonzero.html#scipy.sparse.bsr_array.nonzero
    "scipy.sparse.bsr_array.nonzero")() | Nonzero indices of the array/matrix. |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| [`nonzero`](scipy.sparse.bsr_array.nonzero.html#scipy.sparse.bsr_array.nonzero
    "scipy.sparse.bsr_array.nonzero")() | 数组/矩阵的非零索引 |'
- en: '| [`power`](scipy.sparse.bsr_array.power.html#scipy.sparse.bsr_array.power
    "scipy.sparse.bsr_array.power")(n[, dtype]) | This function performs element-wise
    power. |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| [`power`](scipy.sparse.bsr_array.power.html#scipy.sparse.bsr_array.power
    "scipy.sparse.bsr_array.power")(n[, dtype]) | 逐元素的幂运算 |'
- en: '| [`prune`](scipy.sparse.bsr_array.prune.html#scipy.sparse.bsr_array.prune
    "scipy.sparse.bsr_array.prune")() | Remove empty space after all non-zero elements.
    |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| [`prune`](scipy.sparse.bsr_array.prune.html#scipy.sparse.bsr_array.prune
    "scipy.sparse.bsr_array.prune")() | 移除所有非零元素后的空间 |'
- en: '| [`rad2deg`](scipy.sparse.bsr_array.rad2deg.html#scipy.sparse.bsr_array.rad2deg
    "scipy.sparse.bsr_array.rad2deg")() | Element-wise rad2deg. |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| [`rad2deg`](scipy.sparse.bsr_array.rad2deg.html#scipy.sparse.bsr_array.rad2deg
    "scipy.sparse.bsr_array.rad2deg")() | 逐元素的弧度转角度 |'
- en: '| [`reshape`](scipy.sparse.bsr_array.reshape.html#scipy.sparse.bsr_array.reshape
    "scipy.sparse.bsr_array.reshape")(self, shape[, order, copy]) | Gives a new shape
    to a sparse array/matrix without changing its data. |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| [`reshape`](scipy.sparse.bsr_array.reshape.html#scipy.sparse.bsr_array.reshape
    "scipy.sparse.bsr_array.reshape")(self, shape[, order, copy]) | 为稀疏数组/矩阵给出新的形状，不更改数据
    |'
- en: '| [`resize`](scipy.sparse.bsr_array.resize.html#scipy.sparse.bsr_array.resize
    "scipy.sparse.bsr_array.resize")(*shape) | Resize the array/matrix in-place to
    dimensions given by `shape` |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| [`resize`](scipy.sparse.bsr_array.resize.html#scipy.sparse.bsr_array.resize
    "scipy.sparse.bsr_array.resize")(*shape) | 将数组/矩阵就地调整为给定的`shape`维度 |'
- en: '| [`rint`](scipy.sparse.bsr_array.rint.html#scipy.sparse.bsr_array.rint "scipy.sparse.bsr_array.rint")()
    | Element-wise rint. |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| [`rint`](scipy.sparse.bsr_array.rint.html#scipy.sparse.bsr_array.rint "scipy.sparse.bsr_array.rint")()
    | 逐元素的四舍五入 |'
- en: '| [`set_shape`](scipy.sparse.bsr_array.set_shape.html#scipy.sparse.bsr_array.set_shape
    "scipy.sparse.bsr_array.set_shape")(shape) | See [`reshape`](scipy.sparse.bsr_array.reshape.html#scipy.sparse.bsr_array.reshape
    "scipy.sparse.bsr_array.reshape"). |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| [`set_shape`](scipy.sparse.bsr_array.set_shape.html#scipy.sparse.bsr_array.set_shape
    "scipy.sparse.bsr_array.set_shape")(shape) | 参见[`reshape`](scipy.sparse.bsr_array.reshape.html#scipy.sparse.bsr_array.reshape
    "scipy.sparse.bsr_array.reshape") |'
- en: '| [`setdiag`](scipy.sparse.bsr_array.setdiag.html#scipy.sparse.bsr_array.setdiag
    "scipy.sparse.bsr_array.setdiag")(values[, k]) | Set diagonal or off-diagonal
    elements of the array/matrix. |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| [`setdiag`](scipy.sparse.bsr_array.setdiag.html#scipy.sparse.bsr_array.setdiag
    "scipy.sparse.bsr_array.setdiag")(values[, k]) | 设置数组/矩阵的对角线或非对角线元素 |'
- en: '| [`sign`](scipy.sparse.bsr_array.sign.html#scipy.sparse.bsr_array.sign "scipy.sparse.bsr_array.sign")()
    | Element-wise sign. |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| [`sign`](scipy.sparse.bsr_array.sign.html#scipy.sparse.bsr_array.sign "scipy.sparse.bsr_array.sign")()
    | 逐元素的符号函数 |'
- en: '| [`sin`](scipy.sparse.bsr_array.sin.html#scipy.sparse.bsr_array.sin "scipy.sparse.bsr_array.sin")()
    | Element-wise sin. |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| [`sin`](scipy.sparse.bsr_array.sin.html#scipy.sparse.bsr_array.sin "scipy.sparse.bsr_array.sin")()
    | 逐元素的正弦函数 |'
- en: '| [`sinh`](scipy.sparse.bsr_array.sinh.html#scipy.sparse.bsr_array.sinh "scipy.sparse.bsr_array.sinh")()
    | Element-wise sinh. |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| [`sinh`](scipy.sparse.bsr_array.sinh.html#scipy.sparse.bsr_array.sinh "scipy.sparse.bsr_array.sinh")()
    | 逐元素的双曲正弦函数 |'
- en: '| [`sort_indices`](scipy.sparse.bsr_array.sort_indices.html#scipy.sparse.bsr_array.sort_indices
    "scipy.sparse.bsr_array.sort_indices")() | Sort the indices of this array/matrix
    *in place* |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| [`sort_indices`](https://wiki.example.org/scipy.sparse.bsr_array.sort_indices.html#scipy.sparse.bsr_array.sort_indices
    "scipy.sparse.bsr_array.sort_indices")() | 对该数组/矩阵的索引进行排序，*原地修改* |'
- en: '| [`sorted_indices`](scipy.sparse.bsr_array.sorted_indices.html#scipy.sparse.bsr_array.sorted_indices
    "scipy.sparse.bsr_array.sorted_indices")() | Return a copy of this array/matrix
    with sorted indices |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| [`sorted_indices`](https://wiki.example.org/scipy.sparse.bsr_array.sorted_indices.html#scipy.sparse.bsr_array.sorted_indices
    "scipy.sparse.bsr_array.sorted_indices")() | 返回该数组/矩阵索引已排序的副本。 |'
- en: '| [`sqrt`](scipy.sparse.bsr_array.sqrt.html#scipy.sparse.bsr_array.sqrt "scipy.sparse.bsr_array.sqrt")()
    | Element-wise sqrt. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| [`sqrt`](https://wiki.example.org/scipy.sparse.bsr_array.sqrt.html#scipy.sparse.bsr_array.sqrt
    "scipy.sparse.bsr_array.sqrt")() | 逐元素的平方根函数。 |'
- en: '| [`sum`](scipy.sparse.bsr_array.sum.html#scipy.sparse.bsr_array.sum "scipy.sparse.bsr_array.sum")([axis, dtype, out])
    | Sum the array/matrix elements over a given axis. |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| [`sum`](https://wiki.example.org/scipy.sparse.bsr_array.sum.html#scipy.sparse.bsr_array.sum
    "scipy.sparse.bsr_array.sum")([axis, dtype, out]) | 沿给定轴对数组/矩阵元素求和。 |'
- en: '| [`sum_duplicates`](scipy.sparse.bsr_array.sum_duplicates.html#scipy.sparse.bsr_array.sum_duplicates
    "scipy.sparse.bsr_array.sum_duplicates")() | Eliminate duplicate array/matrix
    entries by adding them together |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| [`sum_duplicates`](https://wiki.example.org/scipy.sparse.bsr_array.sum_duplicates.html#scipy.sparse.bsr_array.sum_duplicates
    "scipy.sparse.bsr_array.sum_duplicates")() | 通过将重复的数组/矩阵条目相加来消除重复项。 |'
- en: '| [`tan`](scipy.sparse.bsr_array.tan.html#scipy.sparse.bsr_array.tan "scipy.sparse.bsr_array.tan")()
    | Element-wise tan. |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| [`tan`](https://wiki.example.org/scipy.sparse.bsr_array.tan.html#scipy.sparse.bsr_array.tan
    "scipy.sparse.bsr_array.tan")() | 逐元素的正切函数。 |'
- en: '| [`tanh`](scipy.sparse.bsr_array.tanh.html#scipy.sparse.bsr_array.tanh "scipy.sparse.bsr_array.tanh")()
    | Element-wise tanh. |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| [`tanh`](https://wiki.example.org/scipy.sparse.bsr_array.tanh.html#scipy.sparse.bsr_array.tanh
    "scipy.sparse.bsr_array.tanh")() | 逐元素的双曲正切函数。 |'
- en: '| [`toarray`](scipy.sparse.bsr_array.toarray.html#scipy.sparse.bsr_array.toarray
    "scipy.sparse.bsr_array.toarray")([order, out]) | Return a dense ndarray representation
    of this sparse array/matrix. |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| [`toarray`](https://wiki.example.org/scipy.sparse.bsr_array.toarray.html#scipy.sparse.bsr_array.toarray
    "scipy.sparse.bsr_array.toarray")([order, out]) | 返回该稀疏数组/矩阵的稠密 ndarray 表示。 |'
- en: '| [`tobsr`](scipy.sparse.bsr_array.tobsr.html#scipy.sparse.bsr_array.tobsr
    "scipy.sparse.bsr_array.tobsr")([blocksize, copy]) | Convert this array/matrix
    into Block Sparse Row Format. |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| [`tobsr`](https://wiki.example.org/scipy.sparse.bsr_array.tobsr.html#scipy.sparse.bsr_array.tobsr
    "scipy.sparse.bsr_array.tobsr")([blocksize, copy]) | 将该数组/矩阵转换为块稀疏行格式。 |'
- en: '| [`tocoo`](scipy.sparse.bsr_array.tocoo.html#scipy.sparse.bsr_array.tocoo
    "scipy.sparse.bsr_array.tocoo")([copy]) | Convert this array/matrix to COOrdinate
    format. |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| [`tocoo`](https://wiki.example.org/scipy.sparse.bsr_array.tocoo.html#scipy.sparse.bsr_array.tocoo
    "scipy.sparse.bsr_array.tocoo")([copy]) | 将该数组/矩阵转换为坐标格式。 |'
- en: '| [`tocsc`](scipy.sparse.bsr_array.tocsc.html#scipy.sparse.bsr_array.tocsc
    "scipy.sparse.bsr_array.tocsc")([copy]) | Convert this array/matrix to Compressed
    Sparse Column format. |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| [`tocsc`](https://wiki.example.org/scipy.sparse.bsr_array.tocsc.html#scipy.sparse.bsr_array.tocsc
    "scipy.sparse.bsr_array.tocsc")([copy]) | 将该数组/矩阵转换为压缩稀疏列格式。 |'
- en: '| [`tocsr`](scipy.sparse.bsr_array.tocsr.html#scipy.sparse.bsr_array.tocsr
    "scipy.sparse.bsr_array.tocsr")([copy]) | Convert this array/matrix to Compressed
    Sparse Row format. |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| [`tocsr`](https://wiki.example.org/scipy.sparse.bsr_array.tocsr.html#scipy.sparse.bsr_array.tocsr
    "scipy.sparse.bsr_array.tocsr")([copy]) | 将该数组/矩阵转换为压缩稀疏行格式。 |'
- en: '| [`todense`](scipy.sparse.bsr_array.todense.html#scipy.sparse.bsr_array.todense
    "scipy.sparse.bsr_array.todense")([order, out]) | Return a dense representation
    of this sparse array/matrix. |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| [`todense`](https://wiki.example.org/scipy.sparse.bsr_array.todense.html#scipy.sparse.bsr_array.todense
    "scipy.sparse.bsr_array.todense")([order, out]) | 返回该稀疏数组/矩阵的稠密表示。 |'
- en: '| [`todia`](scipy.sparse.bsr_array.todia.html#scipy.sparse.bsr_array.todia
    "scipy.sparse.bsr_array.todia")([copy]) | Convert this array/matrix to sparse
    DIAgonal format. |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| [`todia`](https://wiki.example.org/scipy.sparse.bsr_array.todia.html#scipy.sparse.bsr_array.todia
    "scipy.sparse.bsr_array.todia")([copy]) | 将该数组/矩阵转换为稀疏对角线格式。 |'
- en: '| [`todok`](scipy.sparse.bsr_array.todok.html#scipy.sparse.bsr_array.todok
    "scipy.sparse.bsr_array.todok")([copy]) | Convert this array/matrix to Dictionary
    Of Keys format. |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| [`todok`](https://wiki.example.org/scipy.sparse.bsr_array.todok.html#scipy.sparse.bsr_array.todok
    "scipy.sparse.bsr_array.todok")([copy]) | 将该数组/矩阵转换为键的字典格式。 |'
- en: '| [`tolil`](scipy.sparse.bsr_array.tolil.html#scipy.sparse.bsr_array.tolil
    "scipy.sparse.bsr_array.tolil")([copy]) | Convert this array/matrix to List of
    Lists format. |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| [`tolil`](https://wiki.example.org/scipy.sparse.bsr_array.tolil.html#scipy.sparse.bsr_array.tolil
    "scipy.sparse.bsr_array.tolil")([copy]) | 将该数组/矩阵转换为列表列表格式。 |'
- en: '| [`trace`](scipy.sparse.bsr_array.trace.html#scipy.sparse.bsr_array.trace
    "scipy.sparse.bsr_array.trace")([offset]) | Returns the sum along diagonals of
    the sparse array/matrix. |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| [`trace`](https://wiki.example.org/scipy.sparse.bsr_array.trace.html#scipy.sparse.bsr_array.trace
    "scipy.sparse.bsr_array.trace")([offset]) | 返回稀疏数组/矩阵对角线上元素的和。 |'
- en: '| [`transpose`](scipy.sparse.bsr_array.transpose.html#scipy.sparse.bsr_array.transpose
    "scipy.sparse.bsr_array.transpose")([axes, copy]) | Reverses the dimensions of
    the sparse array/matrix. |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| [`transpose`](scipy.sparse.bsr_array.transpose.html#scipy.sparse.bsr_array.transpose
    "scipy.sparse.bsr_array.transpose")([axes, copy]) | 反转稀疏数组/矩阵的维度。 |'
- en: '| [`trunc`](scipy.sparse.bsr_array.trunc.html#scipy.sparse.bsr_array.trunc
    "scipy.sparse.bsr_array.trunc")() | Element-wise trunc. |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| [`trunc`](scipy.sparse.bsr_array.trunc.html#scipy.sparse.bsr_array.trunc
    "scipy.sparse.bsr_array.trunc")() | 逐元素截断。 |'
- en: '| **__getitem__** |  |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| **__getitem__** |  |'
- en: '| **__mul__** |  |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| **__mul__** |  |'
