- en: pandas.io.formats.style.Styler.highlight_between
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.io.formats.style.Styler.highlight_between.html](https://pandas.pydata.org/docs/reference/api/pandas.io.formats.style.Styler.highlight_between.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Highlight a defined range with a style.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.3.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**subset**label, array-like, IndexSlice, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A valid 2d input to DataFrame.loc[<subset>], or, in the case of a 1d input or
    single key, to DataFrame.loc[:, <subset>] where the columns are prioritised, to
    limit `data` to *before* applying the function.
  prefs: []
  type: TYPE_NORMAL
- en: '**color**str, default ‘yellow’'
  prefs: []
  type: TYPE_NORMAL
- en: Background color to use for highlighting.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**{0 or ‘index’, 1 or ‘columns’, None}, default 0'
  prefs: []
  type: TYPE_NORMAL
- en: If `left` or `right` given as sequence, axis along which to apply those boundaries.
    See examples.
  prefs: []
  type: TYPE_NORMAL
- en: '**left**scalar or datetime-like, or sequence or array-like, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Left bound for defining the range.
  prefs: []
  type: TYPE_NORMAL
- en: '**right**scalar or datetime-like, or sequence or array-like, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Right bound for defining the range.
  prefs: []
  type: TYPE_NORMAL
- en: '**inclusive**{‘both’, ‘neither’, ‘left’, ‘right’}'
  prefs: []
  type: TYPE_NORMAL
- en: Identify whether bounds are closed or open.
  prefs: []
  type: TYPE_NORMAL
- en: '**props**str, default None'
  prefs: []
  type: TYPE_NORMAL
- en: CSS properties to use for highlighting. If `props` is given, `color` is not
    used.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: Styler
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`Styler.highlight_null`](pandas.io.formats.style.Styler.highlight_null.html#pandas.io.formats.style.Styler.highlight_null
    "pandas.io.formats.style.Styler.highlight_null")'
  prefs: []
  type: TYPE_NORMAL
- en: Highlight missing values with a style.
  prefs: []
  type: TYPE_NORMAL
- en: '[`Styler.highlight_max`](pandas.io.formats.style.Styler.highlight_max.html#pandas.io.formats.style.Styler.highlight_max
    "pandas.io.formats.style.Styler.highlight_max")'
  prefs: []
  type: TYPE_NORMAL
- en: Highlight the maximum with a style.
  prefs: []
  type: TYPE_NORMAL
- en: '[`Styler.highlight_min`](pandas.io.formats.style.Styler.highlight_min.html#pandas.io.formats.style.Styler.highlight_min
    "pandas.io.formats.style.Styler.highlight_min")'
  prefs: []
  type: TYPE_NORMAL
- en: Highlight the minimum with a style.
  prefs: []
  type: TYPE_NORMAL
- en: '[`Styler.highlight_quantile`](pandas.io.formats.style.Styler.highlight_quantile.html#pandas.io.formats.style.Styler.highlight_quantile
    "pandas.io.formats.style.Styler.highlight_quantile")'
  prefs: []
  type: TYPE_NORMAL
- en: Highlight values defined by a quantile with a style.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: If `left` is `None` only the right bound is applied. If `right` is `None` only
    the left bound is applied. If both are `None` all values are highlighted.
  prefs: []
  type: TYPE_NORMAL
- en: '`axis` is only needed if `left` or `right` are provided as a sequence or an
    array-like object for aligning the shapes. If `left` and `right` are both scalars
    then all `axis` inputs will give the same result.'
  prefs: []
  type: TYPE_NORMAL
- en: This function only works with compatible `dtypes`. For example a datetime-like
    region can only use equivalent datetime-like `left` and `right` arguments. Use
    `subset` to control regions which have multiple `dtypes`.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Basic usage
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/hbetw_basic.png](../Images/6337e397fd85079d70f29691df68ec9c.png)'
  prefs: []
  type: TYPE_IMG
- en: Using a range input sequence along an `axis`, in this case setting a `left`
    and `right` for each column individually
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/hbetw_seq.png](../Images/921d42996319a815ac3fff3c682d443f.png)'
  prefs: []
  type: TYPE_IMG
- en: Using `axis=None` and providing the `left` argument as an array that matches
    the input DataFrame, with a constant `right`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/hbetw_axNone.png](../Images/a22e22ab1cbdab65f59de14e9e5879c4.png)'
  prefs: []
  type: TYPE_IMG
- en: Using `props` instead of default background coloring
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/hbetw_props.png](../Images/f5a341e78c015242c7f3004895ca9277.png)'
  prefs: []
  type: TYPE_IMG
