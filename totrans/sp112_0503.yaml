- en: scipy.signal.convolve
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.signal.convolve
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.convolve.html#scipy.signal.convolve](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.convolve.html#scipy.signal.convolve)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.convolve.html#scipy.signal.convolve](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.convolve.html#scipy.signal.convolve)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Convolve two N-dimensional arrays.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对两个N维数组进行卷积。
- en: Convolve *in1* and *in2*, with the output size determined by the *mode* argument.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 使用*mode*参数确定输出大小，对*in1*和*in2*进行卷积。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**in1**array_like'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**in1**array_like'
- en: First input.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个输入。
- en: '**in2**array_like'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**in2**array_like'
- en: Second input. Should have the same number of dimensions as *in1*.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 第二输入。应与*in1*具有相同数量的维度。
- en: '**mode**str {‘full’, ‘valid’, ‘same’}, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**mode**str {‘full’, ‘valid’, ‘same’}，可选'
- en: 'A string indicating the size of the output:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 一个表示输出大小的字符串：
- en: '`full`'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '`full`'
- en: The output is the full discrete linear convolution of the inputs. (Default)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 输出是输入的完整离散线性卷积。（默认）
- en: '`valid`'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`valid`'
- en: The output consists only of those elements that do not rely on the zero-padding.
    In ‘valid’ mode, either *in1* or *in2* must be at least as large as the other
    in every dimension.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 输出仅包含那些不依赖于零填充的元素。在‘valid’模式下，*in1*或*in2*必须至少在每个维度上与另一个一样大。
- en: '`same`'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`same`'
- en: The output is the same size as *in1*, centered with respect to the ‘full’ output.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 输出与*in1*相同大小，并相对于‘full’输出中心化。
- en: '**method**str {‘auto’, ‘direct’, ‘fft’}, optional'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**method**str {‘auto’, ‘direct’, ‘fft’}，可选'
- en: A string indicating which method to use to calculate the convolution.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一个表示计算卷积使用的方法的字符串。
- en: '`direct`'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`direct`'
- en: The convolution is determined directly from sums, the definition of convolution.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 卷积直接来自求和，即卷积的定义。
- en: '`fft`'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`fft`'
- en: The Fourier Transform is used to perform the convolution by calling [`fftconvolve`](scipy.signal.fftconvolve.html#scipy.signal.fftconvolve
    "scipy.signal.fftconvolve").
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 通过调用[`fftconvolve`](scipy.signal.fftconvolve.html#scipy.signal.fftconvolve "scipy.signal.fftconvolve")使用傅立叶变换执行卷积。
- en: '`auto`'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '`auto`'
- en: Automatically chooses direct or Fourier method based on an estimate of which
    is faster (default). See Notes for more detail.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 根据估计选择直接方法或傅立叶方法（默认）以提高速度。更多详细信息请参见注释。
- en: New in version 0.19.0.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本0.19.0中引入。
- en: 'Returns:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**convolve**array'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**convolve**array'
- en: An N-dimensional array containing a subset of the discrete linear convolution
    of *in1* with *in2*.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 包含*in1*与*in2*的离散线性卷积子集的N维数组。
- en: 'Warns:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 警告：
- en: RuntimeWarning
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: RuntimeWarning
- en: Use of the FFT convolution on input containing NAN or INF will lead to the entire
    output being NAN or INF. Use method=’direct’ when your input contains NAN or INF
    values.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在包含NAN或INF的输入上使用FFT卷积将导致整个输出为NAN或INF。当输入包含NAN或INF值时，请使用method=’direct’。
- en: See also
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`numpy.polymul`](https://numpy.org/devdocs/reference/generated/numpy.polymul.html#numpy.polymul
    "(in NumPy v2.0.dev0)")'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[`numpy.polymul`](https://numpy.org/devdocs/reference/generated/numpy.polymul.html#numpy.polymul
    "(在 NumPy v2.0.dev0 版本中)")'
- en: performs polynomial multiplication (same operation, but also accepts poly1d
    objects)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 执行多项式乘法（相同操作，但还接受poly1d对象）
- en: '[`choose_conv_method`](scipy.signal.choose_conv_method.html#scipy.signal.choose_conv_method
    "scipy.signal.choose_conv_method")'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[`choose_conv_method`](scipy.signal.choose_conv_method.html#scipy.signal.choose_conv_method
    "scipy.signal.choose_conv_method")'
- en: chooses the fastest appropriate convolution method
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 选择最快适当的卷积方法
- en: '[`fftconvolve`](scipy.signal.fftconvolve.html#scipy.signal.fftconvolve "scipy.signal.fftconvolve")'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fftconvolve`](scipy.signal.fftconvolve.html#scipy.signal.fftconvolve "scipy.signal.fftconvolve")'
- en: Always uses the FFT method.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 始终使用FFT方法。
- en: '[`oaconvolve`](scipy.signal.oaconvolve.html#scipy.signal.oaconvolve "scipy.signal.oaconvolve")'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[`oaconvolve`](scipy.signal.oaconvolve.html#scipy.signal.oaconvolve "scipy.signal.oaconvolve")'
- en: Uses the overlap-add method to do convolution, which is generally faster when
    the input arrays are large and significantly different in size.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 使用重叠-添加方法进行卷积，当输入数组大且大小显著不同时通常更快。
- en: Notes
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: By default, [`convolve`](#scipy.signal.convolve "scipy.signal.convolve") and
    [`correlate`](scipy.signal.correlate.html#scipy.signal.correlate "scipy.signal.correlate")
    use `method='auto'`, which calls [`choose_conv_method`](scipy.signal.choose_conv_method.html#scipy.signal.choose_conv_method
    "scipy.signal.choose_conv_method") to choose the fastest method using pre-computed
    values ([`choose_conv_method`](scipy.signal.choose_conv_method.html#scipy.signal.choose_conv_method
    "scipy.signal.choose_conv_method") can also measure real-world timing with a keyword
    argument). Because [`fftconvolve`](scipy.signal.fftconvolve.html#scipy.signal.fftconvolve
    "scipy.signal.fftconvolve") relies on floating point numbers, there are certain
    constraints that may force *method=direct* (more detail in [`choose_conv_method`](scipy.signal.choose_conv_method.html#scipy.signal.choose_conv_method
    "scipy.signal.choose_conv_method") docstring).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，[`convolve`](#scipy.signal.convolve "scipy.signal.convolve") 和 [`correlate`](scipy.signal.correlate.html#scipy.signal.correlate
    "scipy.signal.correlate") 使用 `method='auto'`，这会调用 [`choose_conv_method`](scipy.signal.choose_conv_method.html#scipy.signal.choose_conv_method
    "scipy.signal.choose_conv_method") 来选择最快的方法，使用预先计算的值（[`choose_conv_method`](scipy.signal.choose_conv_method.html#scipy.signal.choose_conv_method
    "scipy.signal.choose_conv_method") 还可以通过关键字参数测量真实世界的时间）。因为 [`fftconvolve`](scipy.signal.fftconvolve.html#scipy.signal.fftconvolve
    "scipy.signal.fftconvolve") 依赖于浮点数，所以存在某些约束可能会强制使用 *method=direct*（详细信息请参见 [`choose_conv_method`](scipy.signal.choose_conv_method.html#scipy.signal.choose_conv_method
    "scipy.signal.choose_conv_method") 文档字符串）。
- en: Examples
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Smooth a square pulse using a Hann window:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 使用汉宁窗口平滑方波脉冲：
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![../../_images/scipy-signal-convolve-1.png](../Images/6b195380a13a9d1c6a70780b6b8e669c.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-signal-convolve-1.png](../Images/6b195380a13a9d1c6a70780b6b8e669c.png)'
