- en: numpy.linalg.matrix_power
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.linalg.matrix_power.html](https://numpy.org/doc/1.26/reference/generated/numpy.linalg.matrix_power.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Raise a square matrix to the (integer) power *n*.
  prefs: []
  type: TYPE_NORMAL
- en: For positive integers *n*, the power is computed by repeated matrix squarings
    and matrix multiplications. If `n == 0`, the identity matrix of the same shape
    as M is returned. If `n < 0`, the inverse is computed and then raised to the `abs(n)`.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Stacks of object matrices are not currently supported.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**(…, M, M) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Matrix to be “powered”.
  prefs: []
  type: TYPE_NORMAL
- en: '**n**int'
  prefs: []
  type: TYPE_NORMAL
- en: The exponent can be any integer or long integer, positive, negative, or zero.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**n**(…, M, M) ndarray or matrix object'
  prefs: []
  type: TYPE_NORMAL
- en: The return value is the same shape and type as *M*; if the exponent is positive
    or zero then the type of the elements is the same as those of *M*. If the exponent
    is negative the elements are floating-point.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: LinAlgError
  prefs: []
  type: TYPE_NORMAL
- en: For matrices that are not square or that (for negative powers) cannot be inverted
    numerically.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Somewhat more sophisticated example
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
