["```py\n`from ultralytics import YOLO  # Load a model model = YOLO(\"yolov8n.pt\")  # load an official model model = YOLO(\"path/to/best.pt\")  # load a custom model  # Validate the model metrics = model.val()  # no arguments needed, dataset and settings remembered metrics.box.map  # map50-95 metrics.box.map50  # map50 metrics.box.map75  # map75 metrics.box.maps  # a list contains map50-95 of each category` \n```", "```py\n`yolo  detect  val  model=yolov8n.pt  # val official model yolo  detect  val  model=path/to/best.pt  # val custom model` \n```", "```py\n`from ultralytics import YOLO  # Load a model model = YOLO(\"yolov8n.pt\")  # Customize validation settings validation_results = model.val(data=\"coco8.yaml\", imgsz=640, batch=16, conf=0.25, iou=0.6, device=\"0\")` \n```", "```py\n`yolo  val  model=yolov8n.pt  data=coco8.yaml  imgsz=640  batch=16  conf=0.25  iou=0.6  device=0` \n```", "```py\n`from ultralytics import YOLO  # Load a model model = YOLO(\"yolov8n.pt\")  # Validate the model metrics = model.val() print(metrics.box.map)  # map50-95` \n```", "```py\n`yolo  val  model=yolov8n.pt` \n```", "```py\n``metrics = model.val()  # assumes `model` has been loaded print(metrics.box.map)  # mAP50-95 print(metrics.box.map50)  # mAP50 print(metrics.box.map75)  # mAP75 print(metrics.box.maps)  # list of mAP50-95 for each category`` \n```", "```py\n`from ultralytics import YOLO  # Load a model model = YOLO(\"yolov8n.pt\")  # Validate with a custom dataset metrics = model.val(data=\"path/to/your/custom_dataset.yaml\") print(metrics.box.map)  # map50-95` \n```", "```py\n`yolo  val  model=yolov8n.pt  data=path/to/your/custom_dataset.yaml` \n```", "```py\n`from ultralytics import YOLO  # Load a model model = YOLO(\"yolov8n.pt\")  # Save validation results to JSON metrics = model.val(save_json=True)` \n```", "```py\n`yolo  val  model=yolov8n.pt  save_json=True` \n```"]