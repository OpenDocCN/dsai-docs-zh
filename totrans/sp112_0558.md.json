["```py\nscipy.signal.iirdesign(wp, ws, gpass, gstop, analog=False, ftype='ellip', output='ba', fs=None)\n```", "```py\n>>> import numpy as np\n>>> from scipy import signal\n>>> import matplotlib.pyplot as plt\n>>> import matplotlib.ticker \n```", "```py\n>>> wp = 0.2\n>>> ws = 0.3\n>>> gpass = 1\n>>> gstop = 40 \n```", "```py\n>>> system = signal.iirdesign(wp, ws, gpass, gstop)\n>>> w, h = signal.freqz(*system) \n```", "```py\n>>> fig, ax1 = plt.subplots()\n>>> ax1.set_title('Digital filter frequency response')\n>>> ax1.plot(w, 20 * np.log10(abs(h)), 'b')\n>>> ax1.set_ylabel('Amplitude [dB]', color='b')\n>>> ax1.set_xlabel('Frequency [rad/sample]')\n>>> ax1.grid(True)\n>>> ax1.set_ylim([-120, 20])\n>>> ax2 = ax1.twinx()\n>>> angles = np.unwrap(np.angle(h))\n>>> ax2.plot(w, angles, 'g')\n>>> ax2.set_ylabel('Angle (radians)', color='g')\n>>> ax2.grid(True)\n>>> ax2.axis('tight')\n>>> ax2.set_ylim([-6, 1])\n>>> nticks = 8\n>>> ax1.yaxis.set_major_locator(matplotlib.ticker.LinearLocator(nticks))\n>>> ax2.yaxis.set_major_locator(matplotlib.ticker.LinearLocator(nticks)) \n```"]