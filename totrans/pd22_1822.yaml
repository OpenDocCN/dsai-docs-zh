- en: pandas.api.extensions.ExtensionArray
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas.api.extensions.ExtensionArray
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.api.extensions.ExtensionArray.html](https://pandas.pydata.org/docs/reference/api/pandas.api.extensions.ExtensionArray.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.api.extensions.ExtensionArray.html](https://pandas.pydata.org/docs/reference/api/pandas.api.extensions.ExtensionArray.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Abstract base class for custom 1-D array types.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义 1-D 数组类型的抽象基类。
- en: pandas will recognize instances of this class as proper arrays with a custom
    type and will not attempt to coerce them to objects. They may be stored directly
    inside a `DataFrame` or `Series`.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 将会将这个类的实例识别为具有自定义类型的合适数组，并且不会试图将它们强制转换为对象。它们可以直接存储在 `DataFrame` 或 `Series`
    中。
- en: Notes
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: 'The interface includes the following abstract methods that must be implemented
    by subclasses:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 该接口包括必须由子类实现的以下抽象方法：
- en: _from_sequence
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: _from_sequence
- en: _from_factorized
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: _from_factorized
- en: __getitem__
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: __getitem__
- en: __len__
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: __len__
- en: __eq__
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: __eq__
- en: dtype
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据类型
- en: nbytes
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字节大小
- en: isna
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: isna
- en: take
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: take
- en: copy
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复制
- en: _concat_same_type
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: _concat_same_type
- en: interpolate
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 插值
- en: 'A default repr displaying the type, (truncated) data, length, and dtype is
    provided. It can be customized or replaced by by overriding:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 提供了一个默认 repr，显示类型、（截断的）数据、长度和 dtype。可以通过以下方法进行自定义或替换：
- en: '__repr__ : A default repr for the ExtensionArray.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: __repr__：ExtensionArray 的默认 repr。
- en: '_formatter : Print scalars inside a Series or DataFrame.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: _formatter：在 Series 或 DataFrame 中打印标量。
- en: 'Some methods require casting the ExtensionArray to an ndarray of Python objects
    with `self.astype(object)`, which may be expensive. When performance is a concern,
    we highly recommend overriding the following methods:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 一些方法需要将 ExtensionArray 强制转换为 Python 对象的 ndarray，可以通过 `self.astype(object)` 进行。这可能是昂贵的。当性能是一个关注点时，我们强烈建议覆盖以下方法：
- en: fillna
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 填充缺失值
- en: _pad_or_backfill
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: _pad_or_backfill
- en: dropna
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除缺失值
- en: unique
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 唯一值
- en: factorize / _values_for_factorize
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: factorize / _values_for_factorize
- en: argsort, argmax, argmin / _values_for_argsort
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: argsort、argmax、argmin / _values_for_argsort
- en: searchsorted
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: searchsorted
- en: map
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 映射
- en: The remaining methods implemented on this class should be performant, as they
    only compose abstract methods. Still, a more efficient implementation may be available,
    and these methods can be overridden.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个类上实现的其余方法应该是高效的，因为它们只组成了抽象方法。然而，可能存在更高效的实现，并且这些方法可以被覆盖。
- en: One can implement methods to handle array accumulations or reductions.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 可以实现处理数组累积或减少的方法。
- en: _accumulate
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: _accumulate
- en: _reduce
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: _reduce
- en: One can implement methods to handle parsing from strings that will be used in
    methods such as `pandas.io.parsers.read_csv`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 可以实现从字符串解析的方法，这些方法将在诸如 `pandas.io.parsers.read_csv` 的方法中使用。
- en: _from_sequence_of_strings
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: _from_sequence_of_strings
- en: This class does not inherit from ‘abc.ABCMeta’ for performance reasons. Methods
    and properties required by the interface raise `pandas.errors.AbstractMethodError`
    and no `register` method is provided for registering virtual subclasses.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 出于性能原因，该类没有继承自 ‘abc.ABCMeta’。接口所需的方法和属性引发 `pandas.errors.AbstractMethodError`，并且没有为注册虚拟子类提供
    `register` 方法。
- en: ExtensionArrays are limited to 1 dimension.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: ExtensionArrays 仅限于 1 维。
- en: They may be backed by none, one, or many NumPy arrays. For example, `pandas.Categorical`
    is an extension array backed by two arrays, one for codes and one for categories.
    An array of IPv6 address may be backed by a NumPy structured array with two fields,
    one for the lower 64 bits and one for the upper 64 bits. Or they may be backed
    by some other storage type, like Python lists. Pandas makes no assumptions on
    how the data are stored, just that it can be converted to a NumPy array. The ExtensionArray
    interface does not impose any rules on how this data is stored. However, currently,
    the backing data cannot be stored in attributes called `.values` or `._values`
    to ensure full compatibility with pandas internals. But other names as `.data`,
    `._data`, `._items`, … can be freely used.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 它们可以由零个、一个或多个 NumPy 数组支持。例如，`pandas.Categorical` 是由两个数组支持的扩展数组，一个用于代码，一个用于类别。IPv6
    地址数组可以由一个 NumPy 结构化数组支持，具有两个字段，一个用于低 64 位，一个用于高 64 位。或者它们可以由其他存储类型支持，例如 Python
    列表。Pandas 不对数据存储方式做任何假设，只要它可以转换为 NumPy 数组即可。ExtensionArray 接口不对数据存储方式施加任何规则。但是，目前，由于与
    pandas 内部的完全兼容性，支持数据不能存储在名为 `.values` 或 `._values` 的属性中。但可以自由使用其他名称，如 `.data`、`._data`、`._items`
    等。
- en: If implementing NumPy’s `__array_ufunc__` interface, pandas expects that
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果实现了 NumPy 的 `__array_ufunc__` 接口，pandas 期望
- en: You defer by returning `NotImplemented` when any Series are present in inputs.
    Pandas will extract the arrays and call the ufunc again.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当输入中存在任何 Series 时，通过返回 `NotImplemented` 来推迟。Pandas 将提取数组并再次调用 ufunc。
- en: You define a `_HANDLED_TYPES` tuple as an attribute on the class. Pandas inspect
    this to determine whether the ufunc is valid for the types present.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您在类上定义一个 `_HANDLED_TYPES` 元组作为属性。Pandas 检查此元组以确定 ufunc 是否对当前类型有效。
- en: See [NumPy universal functions](../../development/extending.html#extending-extension-ufunc)
    for more.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见 [NumPy 通用函数](../../development/extending.html#extending-extension-ufunc)。
- en: By default, ExtensionArrays are not hashable. Immutable subclasses may override
    this behavior.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，ExtensionArrays 是不可哈希的。不可变的子类可以重写此行为。
- en: Examples
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Please see the following:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 请参见以下内容：
- en: '[pandas-dev/pandas](https://github.com/pandas-dev/pandas/blob/main/pandas/tests/extension/list/array.py)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[pandas-dev/pandas](https://github.com/pandas-dev/pandas/blob/main/pandas/tests/extension/list/array.py)'
- en: Attributes
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`dtype`](pandas.api.extensions.ExtensionArray.dtype.html#pandas.api.extensions.ExtensionArray.dtype
    "pandas.api.extensions.ExtensionArray.dtype") | An instance of ExtensionDtype.
    |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| [`dtype`](pandas.api.extensions.ExtensionArray.dtype.html#pandas.api.extensions.ExtensionArray.dtype
    "pandas.api.extensions.ExtensionArray.dtype") | ExtensionDtype 的实例。 |'
- en: '| [`nbytes`](pandas.api.extensions.ExtensionArray.nbytes.html#pandas.api.extensions.ExtensionArray.nbytes
    "pandas.api.extensions.ExtensionArray.nbytes") | The number of bytes needed to
    store this object in memory. |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| [`nbytes`](pandas.api.extensions.ExtensionArray.nbytes.html#pandas.api.extensions.ExtensionArray.nbytes
    "pandas.api.extensions.ExtensionArray.nbytes") | 存储此对象所需的字节数。 |'
- en: '| [`ndim`](pandas.api.extensions.ExtensionArray.ndim.html#pandas.api.extensions.ExtensionArray.ndim
    "pandas.api.extensions.ExtensionArray.ndim") | Extension Arrays are only allowed
    to be 1-dimensional. |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| [`ndim`](pandas.api.extensions.ExtensionArray.ndim.html#pandas.api.extensions.ExtensionArray.ndim
    "pandas.api.extensions.ExtensionArray.ndim") | 扩展数组只允许是 1 维的。 |'
- en: '| [`shape`](pandas.api.extensions.ExtensionArray.shape.html#pandas.api.extensions.ExtensionArray.shape
    "pandas.api.extensions.ExtensionArray.shape") | Return a tuple of the array dimensions.
    |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| [`shape`](pandas.api.extensions.ExtensionArray.shape.html#pandas.api.extensions.ExtensionArray.shape
    "pandas.api.extensions.ExtensionArray.shape") | 返回数组维度的元组。 |'
- en: Methods
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`argsort`](pandas.api.extensions.ExtensionArray.argsort.html#pandas.api.extensions.ExtensionArray.argsort
    "pandas.api.extensions.ExtensionArray.argsort")(*[, ascending, kind, na_position])
    | Return the indices that would sort this array. |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| [`argsort`](pandas.api.extensions.ExtensionArray.argsort.html#pandas.api.extensions.ExtensionArray.argsort
    "pandas.api.extensions.ExtensionArray.argsort")(*[, ascending, kind, na_position])
    | 返回将此数组排序的索引。 |'
- en: '| [`astype`](pandas.api.extensions.ExtensionArray.astype.html#pandas.api.extensions.ExtensionArray.astype
    "pandas.api.extensions.ExtensionArray.astype")(dtype[, copy]) | Cast to a NumPy
    array or ExtensionArray with ''dtype''. |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| [`astype`](pandas.api.extensions.ExtensionArray.astype.html#pandas.api.extensions.ExtensionArray.astype
    "pandas.api.extensions.ExtensionArray.astype")(dtype[, copy]) | 将其转换为具有 ''dtype''
    的 NumPy 数组或 ExtensionArray。 |'
- en: '| [`copy`](pandas.api.extensions.ExtensionArray.copy.html#pandas.api.extensions.ExtensionArray.copy
    "pandas.api.extensions.ExtensionArray.copy")() | Return a copy of the array. |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| [`copy`](pandas.api.extensions.ExtensionArray.copy.html#pandas.api.extensions.ExtensionArray.copy
    "pandas.api.extensions.ExtensionArray.copy")() | 返回数组的副本。 |'
- en: '| [`dropna`](pandas.api.extensions.ExtensionArray.dropna.html#pandas.api.extensions.ExtensionArray.dropna
    "pandas.api.extensions.ExtensionArray.dropna")() | Return ExtensionArray without
    NA values. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| [`dropna`](pandas.api.extensions.ExtensionArray.dropna.html#pandas.api.extensions.ExtensionArray.dropna
    "pandas.api.extensions.ExtensionArray.dropna")() | 返回没有 NA 值的 ExtensionArray。
    |'
- en: '| [`duplicated`](pandas.api.extensions.ExtensionArray.duplicated.html#pandas.api.extensions.ExtensionArray.duplicated
    "pandas.api.extensions.ExtensionArray.duplicated")([keep]) | Return boolean ndarray
    denoting duplicate values. |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| [`duplicated`](pandas.api.extensions.ExtensionArray.duplicated.html#pandas.api.extensions.ExtensionArray.duplicated
    "pandas.api.extensions.ExtensionArray.duplicated")([keep]) | 返回布尔值的 ndarray，表示重复值。
    |'
- en: '| [`factorize`](pandas.api.extensions.ExtensionArray.factorize.html#pandas.api.extensions.ExtensionArray.factorize
    "pandas.api.extensions.ExtensionArray.factorize")([use_na_sentinel]) | Encode
    the extension array as an enumerated type. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| [`factorize`](pandas.api.extensions.ExtensionArray.factorize.html#pandas.api.extensions.ExtensionArray.factorize
    "pandas.api.extensions.ExtensionArray.factorize")([use_na_sentinel]) | 将扩展数组编码为枚举类型。
    |'
- en: '| [`fillna`](pandas.api.extensions.ExtensionArray.fillna.html#pandas.api.extensions.ExtensionArray.fillna
    "pandas.api.extensions.ExtensionArray.fillna")([value, method, limit, copy]) |
    Fill NA/NaN values using the specified method. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| [`fillna`](pandas.api.extensions.ExtensionArray.fillna.html#pandas.api.extensions.ExtensionArray.fillna
    "pandas.api.extensions.ExtensionArray.fillna")([value, method, limit, copy]) |
    使用指定的方法填充 NA/NaN 值。 |'
- en: '| [`equals`](pandas.api.extensions.ExtensionArray.equals.html#pandas.api.extensions.ExtensionArray.equals
    "pandas.api.extensions.ExtensionArray.equals")(other) | Return if another array
    is equivalent to this array. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '[`equals`](pandas.api.extensions.ExtensionArray.equals.html#pandas.api.extensions.ExtensionArray.equals
    "pandas.api.extensions.ExtensionArray.equals")(other) | 返回另一个数组是否等同于此数组。 |'
- en: '| [`insert`](pandas.api.extensions.ExtensionArray.insert.html#pandas.api.extensions.ExtensionArray.insert
    "pandas.api.extensions.ExtensionArray.insert")(loc, item) | Insert an item at
    the given position. |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '[`insert`](pandas.api.extensions.ExtensionArray.insert.html#pandas.api.extensions.ExtensionArray.insert
    "pandas.api.extensions.ExtensionArray.insert")(loc, item) | 在给定位置插入项目。 |'
- en: '| [`interpolate`](pandas.api.extensions.ExtensionArray.interpolate.html#pandas.api.extensions.ExtensionArray.interpolate
    "pandas.api.extensions.ExtensionArray.interpolate")(*, method, axis, index, limit, ...)
    | See DataFrame.interpolate.__doc__. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '[`interpolate`](pandas.api.extensions.ExtensionArray.interpolate.html#pandas.api.extensions.ExtensionArray.interpolate
    "pandas.api.extensions.ExtensionArray.interpolate")(*, method, axis, index, limit, ...)
    | 参见 DataFrame.interpolate.__doc__。 |'
- en: '| [`isin`](pandas.api.extensions.ExtensionArray.isin.html#pandas.api.extensions.ExtensionArray.isin
    "pandas.api.extensions.ExtensionArray.isin")(values) | Pointwise comparison for
    set containment in the given values. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '[`isin`](pandas.api.extensions.ExtensionArray.isin.html#pandas.api.extensions.ExtensionArray.isin
    "pandas.api.extensions.ExtensionArray.isin")(values) | 在给定值中进行集合包含的逐点比较。 |'
- en: '| [`isna`](pandas.api.extensions.ExtensionArray.isna.html#pandas.api.extensions.ExtensionArray.isna
    "pandas.api.extensions.ExtensionArray.isna")() | A 1-D array indicating if each
    value is missing. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '[`isna`](pandas.api.extensions.ExtensionArray.isna.html#pandas.api.extensions.ExtensionArray.isna
    "pandas.api.extensions.ExtensionArray.isna")() | 指示每个值是否缺失的一维数组。 |'
- en: '| [`ravel`](pandas.api.extensions.ExtensionArray.ravel.html#pandas.api.extensions.ExtensionArray.ravel
    "pandas.api.extensions.ExtensionArray.ravel")([order]) | Return a flattened view
    on this array. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '[`ravel`](pandas.api.extensions.ExtensionArray.ravel.html#pandas.api.extensions.ExtensionArray.ravel
    "pandas.api.extensions.ExtensionArray.ravel")([order]) | 返回此数组的扁平视图。 |'
- en: '| [`repeat`](pandas.api.extensions.ExtensionArray.repeat.html#pandas.api.extensions.ExtensionArray.repeat
    "pandas.api.extensions.ExtensionArray.repeat")(repeats[, axis]) | Repeat elements
    of a ExtensionArray. |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '[`repeat`](pandas.api.extensions.ExtensionArray.repeat.html#pandas.api.extensions.ExtensionArray.repeat
    "pandas.api.extensions.ExtensionArray.repeat")(repeats[, axis]) | 重复 ExtensionArray
    的元素。 |'
- en: '| [`searchsorted`](pandas.api.extensions.ExtensionArray.searchsorted.html#pandas.api.extensions.ExtensionArray.searchsorted
    "pandas.api.extensions.ExtensionArray.searchsorted")(value[, side, sorter]) |
    Find indices where elements should be inserted to maintain order. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '[`searchsorted`](pandas.api.extensions.ExtensionArray.searchsorted.html#pandas.api.extensions.ExtensionArray.searchsorted
    "pandas.api.extensions.ExtensionArray.searchsorted")(value[, side, sorter]) |
    查找元素应插入以保持顺序的索引位置。 |'
- en: '| [`shift`](pandas.api.extensions.ExtensionArray.shift.html#pandas.api.extensions.ExtensionArray.shift
    "pandas.api.extensions.ExtensionArray.shift")([periods, fill_value]) | Shift values
    by desired number. |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '[`shift`](pandas.api.extensions.ExtensionArray.shift.html#pandas.api.extensions.ExtensionArray.shift
    "pandas.api.extensions.ExtensionArray.shift")([periods, fill_value]) | 将值按所需数量移动。
    |'
- en: '| [`take`](pandas.api.extensions.ExtensionArray.take.html#pandas.api.extensions.ExtensionArray.take
    "pandas.api.extensions.ExtensionArray.take")(indices, *[, allow_fill, fill_value])
    | Take elements from an array. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '[`take`](pandas.api.extensions.ExtensionArray.take.html#pandas.api.extensions.ExtensionArray.take
    "pandas.api.extensions.ExtensionArray.take")(indices, *[, allow_fill, fill_value])
    | 从数组中获取元素。 |'
- en: '| [`tolist`](pandas.api.extensions.ExtensionArray.tolist.html#pandas.api.extensions.ExtensionArray.tolist
    "pandas.api.extensions.ExtensionArray.tolist")() | Return a list of the values.
    |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '[`tolist`](pandas.api.extensions.ExtensionArray.tolist.html#pandas.api.extensions.ExtensionArray.tolist
    "pandas.api.extensions.ExtensionArray.tolist")() | 返回值的列表。 |'
- en: '| [`unique`](pandas.api.extensions.ExtensionArray.unique.html#pandas.api.extensions.ExtensionArray.unique
    "pandas.api.extensions.ExtensionArray.unique")() | Compute the ExtensionArray
    of unique values. |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '[`unique`](pandas.api.extensions.ExtensionArray.unique.html#pandas.api.extensions.ExtensionArray.unique
    "pandas.api.extensions.ExtensionArray.unique")() | 计算唯一值的 ExtensionArray。 |'
- en: '| [`view`](pandas.api.extensions.ExtensionArray.view.html#pandas.api.extensions.ExtensionArray.view
    "pandas.api.extensions.ExtensionArray.view")([dtype]) | Return a view on the array.
    |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '[`view`](pandas.api.extensions.ExtensionArray.view.html#pandas.api.extensions.ExtensionArray.view
    "pandas.api.extensions.ExtensionArray.view")([dtype]) | 返回数组的视图。 |'
- en: '| [`_accumulate`](pandas.api.extensions.ExtensionArray._accumulate.html#pandas.api.extensions.ExtensionArray._accumulate
    "pandas.api.extensions.ExtensionArray._accumulate")(name, *[, skipna]) | Return
    an ExtensionArray performing an accumulation operation. |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| [`_accumulate`](pandas.api.extensions.ExtensionArray._accumulate.html#pandas.api.extensions.ExtensionArray._accumulate
    "pandas.api.extensions.ExtensionArray._accumulate")(name, *[, skipna]) | 返回执行累积操作的
    ExtensionArray。 |'
- en: '| [`_concat_same_type`](pandas.api.extensions.ExtensionArray._concat_same_type.html#pandas.api.extensions.ExtensionArray._concat_same_type
    "pandas.api.extensions.ExtensionArray._concat_same_type")(to_concat) | Concatenate
    multiple array of this dtype. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| [`_concat_same_type`](pandas.api.extensions.ExtensionArray._concat_same_type.html#pandas.api.extensions.ExtensionArray._concat_same_type
    "pandas.api.extensions.ExtensionArray._concat_same_type")(to_concat) | 连接多个相同类型的数组。
    |'
- en: '| [`_explode`](pandas.api.extensions.ExtensionArray._explode.html#pandas.api.extensions.ExtensionArray._explode
    "pandas.api.extensions.ExtensionArray._explode")() | Transform each element of
    list-like to a row. |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| [`_explode`](pandas.api.extensions.ExtensionArray._explode.html#pandas.api.extensions.ExtensionArray._explode
    "pandas.api.extensions.ExtensionArray._explode")() | 将列表的每个元素转换为一行。 |'
- en: '| [`_formatter`](pandas.api.extensions.ExtensionArray._formatter.html#pandas.api.extensions.ExtensionArray._formatter
    "pandas.api.extensions.ExtensionArray._formatter")([boxed]) | Formatting function
    for scalar values. |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| [`_formatter`](pandas.api.extensions.ExtensionArray._formatter.html#pandas.api.extensions.ExtensionArray._formatter
    "pandas.api.extensions.ExtensionArray._formatter")([boxed]) | 标量值的格式化函数。 |'
- en: '| [`_from_factorized`](pandas.api.extensions.ExtensionArray._from_factorized.html#pandas.api.extensions.ExtensionArray._from_factorized
    "pandas.api.extensions.ExtensionArray._from_factorized")(values, original) | Reconstruct
    an ExtensionArray after factorization. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| [`_from_factorized`](pandas.api.extensions.ExtensionArray._from_factorized.html#pandas.api.extensions.ExtensionArray._from_factorized
    "pandas.api.extensions.ExtensionArray._from_factorized")(values, original) | 在因子化后重建
    ExtensionArray。 |'
- en: '| [`_from_sequence`](pandas.api.extensions.ExtensionArray._from_sequence.html#pandas.api.extensions.ExtensionArray._from_sequence
    "pandas.api.extensions.ExtensionArray._from_sequence")(scalars, *[, dtype, copy])
    | Construct a new ExtensionArray from a sequence of scalars. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| [`_from_sequence`](pandas.api.extensions.ExtensionArray._from_sequence.html#pandas.api.extensions.ExtensionArray._from_sequence
    "pandas.api.extensions.ExtensionArray._from_sequence")(scalars, *[, dtype, copy])
    | 从标量序列构造新的 ExtensionArray。 |'
- en: '| [`_from_sequence_of_strings`](pandas.api.extensions.ExtensionArray._from_sequence_of_strings.html#pandas.api.extensions.ExtensionArray._from_sequence_of_strings
    "pandas.api.extensions.ExtensionArray._from_sequence_of_strings")(strings, *[, ...])
    | Construct a new ExtensionArray from a sequence of strings. |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| [`_from_sequence_of_strings`](pandas.api.extensions.ExtensionArray._from_sequence_of_strings.html#pandas.api.extensions.ExtensionArray._from_sequence_of_strings
    "pandas.api.extensions.ExtensionArray._from_sequence_of_strings")(strings, *[, ...])
    | 从字符串序列构造新的 ExtensionArray。 |'
- en: '| [`_hash_pandas_object`](pandas.api.extensions.ExtensionArray._hash_pandas_object.html#pandas.api.extensions.ExtensionArray._hash_pandas_object
    "pandas.api.extensions.ExtensionArray._hash_pandas_object")(*, encoding, hash_key, ...)
    | Hook for hash_pandas_object. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| [`_hash_pandas_object`](pandas.api.extensions.ExtensionArray._hash_pandas_object.html#pandas.api.extensions.ExtensionArray._hash_pandas_object
    "pandas.api.extensions.ExtensionArray._hash_pandas_object")(*, encoding, hash_key, ...)
    | hash_pandas_object 的钩子�� |'
- en: '| [`_pad_or_backfill`](pandas.api.extensions.ExtensionArray._pad_or_backfill.html#pandas.api.extensions.ExtensionArray._pad_or_backfill
    "pandas.api.extensions.ExtensionArray._pad_or_backfill")(*, method[, limit, ...])
    | Pad or backfill values, used by Series/DataFrame ffill and bfill. |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| [`_pad_or_backfill`](pandas.api.extensions.ExtensionArray._pad_or_backfill.html#pandas.api.extensions.ExtensionArray._pad_or_backfill
    "pandas.api.extensions.ExtensionArray._pad_or_backfill")(*, method[, limit, ...])
    | 填充或回填值，由 Series/DataFrame 的 ffill 和 bfill 使用。 |'
- en: '| [`_reduce`](pandas.api.extensions.ExtensionArray._reduce.html#pandas.api.extensions.ExtensionArray._reduce
    "pandas.api.extensions.ExtensionArray._reduce")(name, *[, skipna, keepdims]) |
    Return a scalar result of performing the reduction operation. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| [`_reduce`](pandas.api.extensions.ExtensionArray._reduce.html#pandas.api.extensions.ExtensionArray._reduce
    "pandas.api.extensions.ExtensionArray._reduce")(name, *[, skipna, keepdims]) |
    返回执行缩减操作的标量结果。 |'
- en: '| [`_values_for_argsort`](pandas.api.extensions.ExtensionArray._values_for_argsort.html#pandas.api.extensions.ExtensionArray._values_for_argsort
    "pandas.api.extensions.ExtensionArray._values_for_argsort")() | Return values
    for sorting. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| [`_values_for_argsort`](pandas.api.extensions.ExtensionArray._values_for_argsort.html#pandas.api.extensions.ExtensionArray._values_for_argsort")()
    | 返回用于排序的值。 |'
- en: '| [`_values_for_factorize`](pandas.api.extensions.ExtensionArray._values_for_factorize.html#pandas.api.extensions.ExtensionArray._values_for_factorize
    "pandas.api.extensions.ExtensionArray._values_for_factorize")() | Return an array
    and missing value suitable for factorization. |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| [`_values_for_factorize`](pandas.api.extensions.ExtensionArray._values_for_factorize.html#pandas.api.extensions.ExtensionArray._values_for_factorize
    "pandas.api.extensions.ExtensionArray._values_for_factorize")() | 返回一个适合进行因子分解的数组和缺失值。'
