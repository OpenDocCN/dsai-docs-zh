- en: Tensor Canonicalization
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 张量规范化
- en: 原文：[https://docs.sympy.org/latest/modules/combinatorics/tensor_can.html](https://docs.sympy.org/latest/modules/combinatorics/tensor_can.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.sympy.org/latest/modules/combinatorics/tensor_can.html](https://docs.sympy.org/latest/modules/combinatorics/tensor_can.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: canonicalize tensor formed by tensors
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 形成张量的张量规范化
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**g** : permutation representing the tensor'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**g**：表示张量的排列'
- en: '**dummies** : list representing the dummy indices'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**dummies**：表示虚拟指标的列表'
- en: it can be a list of dummy indices of the same type or a list of lists of dummy
    indices, one list for each type of index; the dummy indices must come after the
    free indices, and put in order contravariant, covariant [d0, -d0, d1,-d1,…]
  id: totrans-7
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 它可以是相同类型的虚拟指标列表或虚拟指标列表的列表，每种类型一个列表；虚拟指标必须在自由指标之后，并按逆变、协变顺序排列 [d0, -d0, d1,-d1,…]
- en: '**msym** : symmetry of the metric(s)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**msym**：度规的对称性'
- en: it can be an integer or a list; in the first case it is the symmetry of the
    dummy index metric; in the second case it is the list of the symmetries of the
    index metric for each type
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 它可以是整数或列表；在第一种情况下，它是虚拟指标度规的对称性；在第二种情况下，它是每种类型指标度规对称性的列表
- en: '**v** : list, (base_i, gens_i, n_i, sym_i) for tensors of type \(i\)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**v**：列表，对于类型 \(i\) 的张量为 (base_i, gens_i, n_i, sym_i)'
- en: '**base_i, gens_i** : BSGS for tensors of this type.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**base_i, gens_i**：该类型张量的 BSGS。'
- en: The BSGS should have minimal base under lexicographic ordering; if not, an attempt
    is made do get the minimal BSGS; in case of failure, canonicalize_naive is used,
    which is much slower.
  id: totrans-12
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: BSGS 应按字典顺序具有最小基数；如果不是，则尝试获取最小的 BSGS；如果失败，则使用 `canonicalize_naive`，这会慢得多。
- en: '**n_i** : number of tensors of type \(i\).'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**n_i**：类型 \(i\) 的张量数量。'
- en: '**sym_i** : symmetry under exchange of component tensors of type \(i\).'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**sym_i**：在类型 \(i\) 的分量张量交换下的对称性。'
- en: Both for msym and sym_i the cases are
  id: totrans-15
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 对于 `msym` 和 `sym_i` 情况如下
- en: ''
  id: totrans-16
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: None no symmetry
  id: totrans-17
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无对称性
- en: ''
  id: totrans-18
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-19
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 0 commuting
  id: totrans-20
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 0 交换
- en: ''
  id: totrans-21
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-22
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 1 anticommuting
  id: totrans-23
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1 反交换
- en: 'Returns:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: 0 if the tensor is zero, else return the array form of
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果张量为零，则返回数组形式；
- en: the permutation representing the canonical form of the tensor.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 表示张量的规范形式的排列。
- en: Algorithm
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 算法
- en: First one uses canonical_free to get the minimum tensor under lexicographic
    order, using only the slot symmetries. If the component tensors have not minimal
    BSGS, it is attempted to find it; if the attempt fails canonicalize_naive is used
    instead.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 首先使用 `canonical_free` 获取使用只有槽对称性的字典顺序下的最小张量。如果分量张量没有最小的 BSGS，则尝试找到它；如果尝试失败，则使用
    `canonicalize_naive`。
- en: Compute the residual slot symmetry keeping fixed the free indices using tensor_gens(base,
    gens, list_free_indices, sym).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `tensor_gens(base, gens, list_free_indices, sym)` 计算保持固定自由指标的残余槽对称性。
- en: Reduce the problem eliminating the free indices.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 通过消除自由指标来减少问题。
- en: Then use double_coset_can_rep and lift back the result reintroducing the free
    indices.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 然后使用 `double_coset_can_rep` 并通过重新引入自由指标提升结果。
- en: Examples
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: one type of index with commuting metric;
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 具有交换度规的一种类型的指标；
- en: \(A_{a b}\) and \(B_{a b}\) antisymmetric and commuting
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: \(A_{a b}\) 和 \(B_{a b}\) 反对称且交换
- en: \(T = A_{d0 d1} * B^{d0}{}_{d2} * B^{d2 d1}\)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: \(T = A_{d0 d1} * B^{d0}{}_{d2} * B^{d2 d1}\)
- en: \(ord = [d0,-d0,d1,-d1,d2,-d2]\) order of the indices
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: \(ord = [d0,-d0,d1,-d1,d2,-d2]\) 指标的顺序
- en: g = [1, 3, 0, 5, 4, 2, 6, 7]
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: g = [1, 3, 0, 5, 4, 2, 6, 7]
- en: \(T_c = 0\)
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: \(T_c = 0\)
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: same as above, but with \(B_{a b}\) anticommuting
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所述，但与 \(B_{a b}\) 反交换
- en: \(T_c = -A^{d0 d1} * B_{d0}{}^{d2} * B_{d1 d2}\)
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: \(T_c = -A^{d0 d1} * B_{d0}{}^{d2} * B_{d1 d2}\)
- en: can = [0,2,1,4,3,5,7,6]
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: can = [0,2,1,4,3,5,7,6]
- en: '[PRE2]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: two types of indices \([a,b,c,d,e,f]\) and \([m,n]\), in this order, both with
    commuting metric
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 两种类型的指标 \([a,b,c,d,e,f]\) 和 \([m,n]\)，以这种顺序，都具有交换度规
- en: \(f^{a b c}\) antisymmetric, commuting
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: \(f^{a b c}\) 反对称，交换
- en: \(A_{m a}\) no symmetry, commuting
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: \(A_{m a}\) 无对称性，交换
- en: \(T = f^c{}_{d a} * f^f{}_{e b} * A_m{}^d * A^{m b} * A_n{}^a * A^{n e}\)
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: \(T = f^c{}_{d a} * f^f{}_{e b} * A_m{}^d * A^{m b} * A_n{}^a * A^{n e}\)
- en: ord = [c,f,a,-a,b,-b,d,-d,e,-e,m,-m,n,-n]
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: ord = [c,f,a,-a,b,-b,d,-d,e,-e,m,-m,n,-n]
- en: g = [0,7,3, 1,9,5, 11,6, 10,4, 13,2, 12,8, 14,15]
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: g = [0,7,3, 1,9,5, 11,6, 10,4, 13,2, 12,8, 14,15]
- en: The canonical tensor is \(T_c = -f^{c a b} * f^{f d e} * A^m{}_a * A_{m d} *
    A^n{}_b * A_{n e}\)
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 规范张量为 \(T_c = -f^{c a b} * f^{f d e} * A^m{}_a * A_{m d} * A^n{}_b * A_{n e}\)
- en: can = [0,2,4, 1,6,8, 10,3, 11,7, 12,5, 13,9, 15,14]
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: can = [0,2,4, 1,6,8, 10,3, 11,7, 12,5, 13,9, 15,14]
- en: '[PRE3]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Butler-Portugal algorithm for tensor canonicalization with dummy indices.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Butler-Portugal 张量规范化算法，带有虚拟指标。
- en: 'Parameters:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**dummies**'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**dummies**'
- en: list of lists of dummy indices, one list for each type of index; the dummy indices
    are put in order contravariant, covariant [d0, -d0, d1, -d1, …].
  id: totrans-57
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 虚拟指标列表的列表，每种类型一个列表；虚拟指标按逆变、协变[d0, -d0, d1, -d1, ...]排序。
- en: ''
  id: totrans-58
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: sym
  id: totrans-59
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 对称
- en: ''
  id: totrans-60
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: list of the symmetries of the index metric for each type.
  id: totrans-61
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 指标度量的对称性列表对每种类型。
- en: ''
  id: totrans-62
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: possible symmetries of the metrics
  id: totrans-63
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 指标度量的可能对称性
- en: ''
  id: totrans-64
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 0 symmetric
  id: totrans-65
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 0对称
- en: ''
  id: totrans-66
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-67
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 1 antisymmetric
  id: totrans-68
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1反对称
- en: ''
  id: totrans-69
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-70
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: None no symmetry
  id: totrans-71
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无，没有对称性
- en: ''
  id: totrans-72
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-73
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-74
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: b_S
  id: totrans-75
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: b_S
- en: ''
  id: totrans-76
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: base of a minimal slot symmetry BSGS.
  id: totrans-77
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 最小插槽对称BSGS的基础。
- en: ''
  id: totrans-78
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: sgens
  id: totrans-79
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: sgens
- en: ''
  id: totrans-80
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: generators of the slot symmetry BSGS.
  id: totrans-81
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 插槽对称BSGS的生成器。
- en: ''
  id: totrans-82
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: S_transversals
  id: totrans-83
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: S横截面
- en: ''
  id: totrans-84
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: transversals for the slot BSGS.
  id: totrans-85
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 插槽BSGS的横截面。
- en: ''
  id: totrans-86
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: g
  id: totrans-87
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: g
- en: ''
  id: totrans-88
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: permutation representing the tensor.
  id: totrans-89
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 表示张量的置换。
- en: 'Returns:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: Return 0 if the tensor is zero, else return the array form of
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如果张量为零则返回0，否则返回数组形式的
- en: the permutation representing the canonical form of the tensor.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 表示张量规范形式的置换。
- en: Notes
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: A tensor with dummy indices can be represented in a number of equivalent ways
    which typically grows exponentially with the number of indices. To be able to
    establish if two tensors with many indices are equal becomes computationally very
    slow in absence of an efficient algorithm.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 一个具有虚拟指标的张量可以用多种等价方式表示，通常随着指标数量的增加而呈指数级增长。在没有有效算法的情况下，要确定两个具有许多指标的张量是否相等变得计算非常缓慢。
- en: The Butler-Portugal algorithm [3] is an efficient algorithm to put tensors in
    canonical form, solving the above problem.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Butler-Portugal算法[3]是一个将张量置于规范形式的高效算法，解决上述问题。
- en: 'Portugal observed that a tensor can be represented by a permutation, and that
    the class of tensors equivalent to it under slot and dummy symmetries is equivalent
    to the double coset \(D*g*S\) (Note: in this documentation we use the conventions
    for multiplication of permutations p, q with (p*q)(i) = p[q[i]] which is opposite
    to the one used in the Permutation class)'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Portugal观察到一个张量可以用置换表示，并且在插槽和虚拟对称性下等效的张量类等价于双余类\(D*g*S\)（注意：在本文档中我们使用置换乘法的约定p，q与(p*q)(i)
    = p[q[i]]相反，这与Permutation类中使用的约定相反）
- en: Using the algorithm by Butler to find a representative of the double coset one
    can find a canonical form for the tensor.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Butler算法找到双余类的代表可以找到张量的规范形式。
- en: To see this correspondence, let \(g\) be a permutation in array form; a tensor
    with indices \(ind\) (the indices including both the contravariant and the covariant
    ones) can be written as
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 要看到这种对应关系，设\(g\)是数组形式的置换；具有指标\(ind\)的张量（包括逆变和协变指标）可以写成
- en: \(t = T(ind[g[0]], \dots, ind[g[n-1]])\),
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: \(t = T(ind[g[0]], \dots, ind[g[n-1]])\),
- en: where \(n = len(ind)\); \(g\) has size \(n + 2\), the last two indices for the
    sign of the tensor (trick introduced in [4]).
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 其中\(n = len(ind)\)；\(g\)的大小为\(n + 2\)，最后两个指标是张量的符号（引入[4]中的技巧）。
- en: A slot symmetry transformation \(s\) is a permutation acting on the slots \(t
    \rightarrow T(ind[(g*s)[0]], \dots, ind[(g*s)[n-1]])\)
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 插槽对称性变换\(s\)是作用于插槽上的置换\(t \rightarrow T(ind[(g*s)[0]], \dots, ind[(g*s)[n-1]])\)
- en: A dummy symmetry transformation acts on \(ind\) \(t \rightarrow T(ind[(d*g)[0]],
    \dots, ind[(d*g)[n-1]])\)
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟对称性变换作用于指标\(ind\) \(t \rightarrow T(ind[(d*g)[0]], \dots, ind[(d*g)[n-1]])\)
- en: Being interested only in the transformations of the tensor under these symmetries,
    one can represent the tensor by \(g\), which transforms as
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 仅对这些对称性下的张量变换感兴趣，可以将张量表示为\(g\)，该张量的变换如下
- en: \(g -> d*g*s\), so it belongs to the coset \(D*g*S\), or in other words to the
    set of all permutations allowed by the slot and dummy symmetries.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: \(g -> d*g*s\), 所以它属于余类\(D*g*S\)，或者换句话说，它属于由插槽和虚拟对称性允许的所有排列的集合。
- en: Let us explain the conventions by an example.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个例子解释惯例。
- en: Given a tensor \(T^{d3 d2 d1}{}_{d1 d2 d3}\) with the slot symmetries
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 给定张量\(T^{d3 d2 d1}{}_{d1 d2 d3}\)与插槽对称性
- en: \(T^{a0 a1 a2 a3 a4 a5} = -T^{a2 a1 a0 a3 a4 a5}\)
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: \(T^{a0 a1 a2 a3 a4 a5} = -T^{a2 a1 a0 a3 a4 a5}\)
- en: \(T^{a0 a1 a2 a3 a4 a5} = -T^{a4 a1 a2 a3 a0 a5}\)
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: \(T^{a0 a1 a2 a3 a4 a5} = -T^{a4 a1 a2 a3 a0 a5}\)
- en: 'and symmetric metric, find the tensor equivalent to it which is the lowest
    under the ordering of indices: lexicographic ordering \(d1, d2, d3\) and then
    contravariant before covariant index; that is the canonical form of the tensor.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 并且对称度量，找到与之等价的张量，该张量在指标的排序下是最低的：词典顺序\(d1, d2, d3\)，然后是逆变指标在协变指标之前；即张量的规范形式。
- en: The canonical form is \(-T^{d1 d2 d3}{}_{d1 d2 d3}\) obtained using \(T^{a0
    a1 a2 a3 a4 a5} = -T^{a2 a1 a0 a3 a4 a5}\).
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 规范形式是通过\(T^{a0 a1 a2 a3 a4 a5} = -T^{a2 a1 a0 a3 a4 a5}\)获得的\(-T^{d1 d2 d3}{}_{d1
    d2 d3}\)。
- en: To convert this problem in the input for this function, use the following ordering
    of the index names (- for covariant for short) \(d1, -d1, d2, -d2, d3, -d3\)
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 要将此问题转换为此函数的输入，请使用索引名称的以下顺序 (- 表示缩短的协变) \(d1, -d1, d2, -d2, d3, -d3\)
- en: \(T^{d3 d2 d1}{}_{d1 d2 d3}\) corresponds to \(g = [4, 2, 0, 1, 3, 5, 6, 7]\)
    where the last two indices are for the sign
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: \(T^{d3 d2 d1}{}_{d1 d2 d3}\) 对应于 \(g = [4, 2, 0, 1, 3, 5, 6, 7]\)，其中最后两个指标是为了符号
- en: \(sgens = [Permutation(0, 2)(6, 7), Permutation(0, 4)(6, 7)]\)
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: \(sgens = [Permutation(0, 2)(6, 7), Permutation(0, 4)(6, 7)]\)
- en: sgens[0] is the slot symmetry \(-(0, 2)\) \(T^{a0 a1 a2 a3 a4 a5} = -T^{a2 a1
    a0 a3 a4 a5}\)
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: sgens[0] 是槽对称性 \(-(0, 2)\)，\(T^{a0 a1 a2 a3 a4 a5} = -T^{a2 a1 a0 a3 a4 a5}\)
- en: sgens[1] is the slot symmetry \(-(0, 4)\) \(T^{a0 a1 a2 a3 a4 a5} = -T^{a4 a1
    a2 a3 a0 a5}\)
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: sgens[1] 是槽对称性 \(-(0, 4)\)，\(T^{a0 a1 a2 a3 a4 a5} = -T^{a4 a1 a2 a3 a0 a5}\)
- en: The dummy symmetry group D is generated by the strong base generators \([(0,
    1), (2, 3), (4, 5), (0, 2)(1, 3), (0, 4)(1, 5)]\) where the first three interchange
    covariant and contravariant positions of the same index (d1 <-> -d1) and the last
    two interchange the dummy indices themselves (d1 <-> d2).
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟对称群 D 是由强基生成器生成的 \([(0, 1), (2, 3), (4, 5), (0, 2)(1, 3), (0, 4)(1, 5)]\)，前三个交换同一指标的协变和逆变位置（d1
    <-> -d1），后两个交换虚拟指标本身（d1 <-> d2）。
- en: The dummy symmetry acts from the left \(d = [1, 0, 2, 3, 4, 5, 6, 7]\) exchange
    \(d1 \leftrightarrow -d1\) \(T^{d3 d2 d1}{}_{d1 d2 d3} == T^{d3 d2}{}_{d1}{}^{d1}{}_{d2
    d3}\)
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟对称性从左侧作用 \(d = [1, 0, 2, 3, 4, 5, 6, 7]\)，交换 \(d1 \leftrightarrow -d1\) \(T^{d3
    d2 d1}{}_{d1 d2 d3} == T^{d3 d2}{}_{d1}{}^{d1}{}_{d2 d3}\)
- en: \(g=[4, 2, 0, 1, 3, 5, 6, 7] -> [4, 2, 1, 0, 3, 5, 6, 7] = _af_rmul(d, g)\)
    which differs from \(_af_rmul(g, d)\).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: \(g=[4, 2, 0, 1, 3, 5, 6, 7] -> [4, 2, 1, 0, 3, 5, 6, 7] = _af_rmul(d, g)\)，与
    \(_af_rmul(g, d)\) 不同。
- en: The slot symmetry acts from the right \(s = [2, 1, 0, 3, 4, 5, 7, 6]\) exchanges
    slots 0 and 2 and changes sign \(T^{d3 d2 d1}{}_{d1 d2 d3} == -T^{d1 d2 d3}{}_{d1
    d2 d3}\)
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 槽对称性从右侧作用 \(s = [2, 1, 0, 3, 4, 5, 7, 6]\)，交换槽 0 和 2，并改变符号 \(T^{d3 d2 d1}{}_{d1
    d2 d3} == -T^{d1 d2 d3}{}_{d1 d2 d3}\)
- en: \(g=[4,2,0,1,3,5,6,7] -> [0, 2, 4, 1, 3, 5, 7, 6] = _af_rmul(g, s)\)
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: \(g=[4,2,0,1,3,5,6,7] -> [0, 2, 4, 1, 3, 5, 7, 6] = _af_rmul(g, s)\)
- en: 'Example in which the tensor is zero, same slot symmetries as above: \(T^{d2}{}_{d1
    d3}{}^{d1 d3}{}_{d2}\)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 张量为零的示例，与上述相同的槽对称性：\(T^{d2}{}_{d1 d3}{}^{d1 d3}{}_{d2}\)
- en: \(= -T^{d3}{}_{d1 d3}{}^{d1 d2}{}_{d2}\) under slot symmetry \(-(0,4)\);
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: \(= -T^{d3}{}_{d1 d3}{}^{d1 d2}{}_{d2}\) 在槽对称性 \(-(0,4)\) 下；
- en: \(= T_{d3 d1}{}^{d3}{}^{d1 d2}{}_{d2}\) under slot symmetry \(-(0,2)\);
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: \(= T_{d3 d1}{}^{d3}{}^{d1 d2}{}_{d2}\) 在槽对称性 \(-(0,2)\) 下；
- en: \(= T^{d3}{}_{d1 d3}{}^{d1 d2}{}_{d2}\) symmetric metric;
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: \(= T^{d3}{}_{d1 d3}{}^{d1 d2}{}_{d2}\) 对称度量；
- en: \(= 0\) since two of these lines have tensors differ only for the sign.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: \(= 0\) 因为这两行张量仅在符号上有所不同。
- en: The double coset D*g*S consists of permutations \(h = d*g*s\) corresponding
    to equivalent tensors; if there are two \(h\) which are the same apart from the
    sign, return zero; otherwise choose as representative the tensor with indices
    ordered lexicographically according to \([d1, -d1, d2, -d2, d3, -d3]\) that is
    `rep = min(D*g*S) = min([d*g*s for d in D for s in S])`
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 双余类 D*g*S 包括与等价张量对应的排列 \(h = d*g*s\)；如果有两个相同除了符号的 \(h\)，返回零；否则按照 \([d1, -d1,
    d2, -d2, d3, -d3]\) 的字典顺序选择张量作为代表，即 `rep = min(D*g*S) = min([d*g*s for d in D
    for s in S])`
- en: The indices are fixed one by one; first choose the lowest index for slot 0,
    then the lowest remaining index for slot 1, etc. Doing this one obtains a chain
    of stabilizers
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 指标依次固定；首先选择槽 0 的最低指标，然后选择剩余槽 1 的最低指标，依此类推。这样做可以获得一系列的稳定子。
- en: \(S \rightarrow S_{b0} \rightarrow S_{b0,b1} \rightarrow \dots\) and \(D \rightarrow
    D_{p0} \rightarrow D_{p0,p1} \rightarrow \dots\)
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: \(S \rightarrow S_{b0} \rightarrow S_{b0,b1} \rightarrow \dots\) 和 \(D \rightarrow
    D_{p0} \rightarrow D_{p0,p1} \rightarrow \dots\)
- en: where `[b0, b1, ...] = range(b)` is a base of the symmetric group; the strong
    base \(b_S\) of S is an ordered sublist of it; therefore it is sufficient to compute
    once the strong base generators of S using the Schreier-Sims algorithm; the stabilizers
    of the strong base generators are the strong base generators of the stabilizer
    subgroup.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 `[b0, b1, ...] = range(b)` 是对称群的基；S 的强基 \(b_S\) 是其有序子列表；因此仅需使用 Schreier-Sims
    算法一次计算 S 的强基生成器；强基生成器的稳定子是稳定子子群的强基生成器。
- en: '`dbase = [p0, p1, ...]` is not in general in lexicographic order, so that one
    must recompute the strong base generators each time; however this is trivial,
    there is no need to use the Schreier-Sims algorithm for D.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '`dbase = [p0, p1, ...]` 通常不是字典顺序的，因此每次都必须重新计算强基生成器；然而这很简单，不需要使用 Schreier-Sims
    算法来处理 D。'
- en: The algorithm keeps a TAB of elements \((s_i, d_i, h_i)\) where \(h_i = d_i
    \times g \times s_i\) satisfying \(h_i[j] = p_j\) for \(0 \le j < i\) starting
    from \(s_0 = id, d_0 = id, h_0 = g\).
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 该算法保持元素\((s_i, d_i, h_i)\)的TAB，其中\(h_i = d_i \times g \times s_i\)满足\(h_i[j]
    = p_j\)，对于\(0 \le j < i\)，从\(s_0 = id, d_0 = id, h_0 = g\)开始。
- en: The equations \(h_0[0] = p_0, h_1[1] = p_1, \dots\) are solved in this order,
    choosing each time the lowest possible value of p_i
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 方程\(h_0[0] = p_0, h_1[1] = p_1, \dots\)按照这个顺序解决，每次选择最低可能的p_i值。
- en: For \(j < i\) \(d_i*g*s_i*S_{b_0, \dots, b_{i-1}}*b_j = D_{p_0, \dots, p_{i-1}}*p_j\)
    so that for dx in \(D_{p_0,\dots,p_{i-1}}\) and sx in \(S_{base[0], \dots, base[i-1]}\)
    one has \(dx*d_i*g*s_i*sx*b_j = p_j\)
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 对于\(j < i\)，\(d_i*g*s_i*S_{b_0, \dots, b_{i-1}}*b_j = D_{p_0, \dots, p_{i-1}}*p_j\)，因此对于\(D_{p_0,\dots,p_{i-1}}\)中的dx和\(S_{base[0],
    \dots, base[i-1]}\)中的sx，有\(dx*d_i*g*s_i*sx*b_j = p_j\)
- en: Search for dx, sx such that this equation holds for \(j = i\); it can be written
    as \(s_i*sx*b_j = J, dx*d_i*g*J = p_j\) \(sx*b_j = s_i**-1*J; sx = trace(s_i**-1,
    S_{b_0,...,b_{i-1}})\) \(dx**-1*p_j = d_i*g*J; dx = trace(d_i*g*J, D_{p_0,...,p_{i-1}})\)
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 寻找dx, sx，使得这个方程对于\(j = i\)成立；它可以写成\(s_i*sx*b_j = J, dx*d_i*g*J = p_j\) \(sx*b_j
    = s_i**-1*J; sx = trace(s_i**-1, S_{b_0,...,b_{i-1}})\) \(dx**-1*p_j = d_i*g*J;
    dx = trace(d_i*g*J, D_{p_0,...,p_{i-1}})\)
- en: \(s_{i+1} = s_i*trace(s_i**-1*J, S_{b_0,...,b_{i-1}})\) \(d_{i+1} = trace(d_i*g*J,
    D_{p_0,...,p_{i-1}})**-1*d_i\) \(h_{i+1}*b_i = d_{i+1}*g*s_{i+1}*b_i = p_i\)
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: \(s_{i+1} = s_i*trace(s_i**-1*J, S_{b_0,...,b_{i-1}})\) \(d_{i+1} = trace(d_i*g*J,
    D_{p_0,...,p_{i-1}})**-1*d_i\) \(h_{i+1}*b_i = d_{i+1}*g*s_{i+1}*b_i = p_i\)
- en: \(h_n*b_j = p_j\) for all j, so that \(h_n\) is the solution.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 对所有的j，\(h_n*b_j = p_j\)，因此\(h_n\)是解。
- en: Add the found \((s, d, h)\) to TAB1.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 将找到的\((s, d, h)\)添加到TAB1中。
- en: At the end of the iteration sort TAB1 with respect to the \(h\); if there are
    two consecutive \(h\) in TAB1 which differ only for the sign, the tensor is zero,
    so return 0; if there are two consecutive \(h\) which are equal, keep only one.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在迭代结束时，按照\(h\)对TAB1进行排序；如果TAB1中有两个连续的\(h\)只有符号不同，张量为零，所以返回0；如果有两个连续的\(h\)相等，则保留一个。
- en: Then stabilize the slot generators under \(i\) and the dummy generators under
    \(p_i\).
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 然后稳定\(i\)下的槽生成器和\(p_i\)下的虚拟生成器。
- en: Assign \(TAB = TAB1\) at the end of the iteration step.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在迭代步骤结束时将\(TAB = TAB1\)赋值。
- en: At the end \(TAB\) contains a unique \((s, d, h)\), since all the slots of the
    tensor \(h\) have been fixed to have the minimum value according to the symmetries.
    The algorithm returns \(h\).
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 最后\(TAB\)包含一个独特的\((s, d, h)\)，因为张量\(h\)的所有槽都被固定为符合对称性的最小值。算法返回\(h\)。
- en: It is important that the slot BSGS has lexicographic minimal base, otherwise
    there is an \(i\) which does not belong to the slot base for which \(p_i\) is
    fixed by the dummy symmetry only, while \(i\) is not invariant from the slot stabilizer,
    so \(p_i\) is not in general the minimal value.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是槽BSGS具有字典顺序下的最小基，否则存在一个\(i\)，它不属于槽基，而\(p_i\)仅由虚拟对称性固定，而\(i\)不是来自槽稳定器，所以\(p_i\)通常不是最小值。
- en: 'This algorithm differs slightly from the original algorithm [3]:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 这个算法与原始算法[3]略有不同：
- en: the canonical form is minimal lexicographically, and the BSGS has minimal base
    under lexicographic order. Equal tensors \(h\) are eliminated from TAB.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 规范形式在字典顺序下是最小的，而BSGS在字典顺序下具有最小的基。相等的张量\(h\)从TAB中消除。
- en: Examples
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE5]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Return base, gens of the minimal BSGS for (anti)symmetric tensor
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 返回\( (反)对称张量的最小BSGS的基和生成元 \)
- en: 'Parameters:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : rank of the tensor'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**：张量的秩'
- en: '**antisym** : bool'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '**antisym**：布尔值'
- en: '`antisym = False` symmetric tensor `antisym = True` antisymmetric tensor'
  id: totrans-153
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`antisym = False` 表示对称张量 `antisym = True` 表示反对称张量'
- en: Examples
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE8]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Direct product of two BSGS.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 两个BSGS的直接积。
- en: 'Parameters:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**base1** : base of the first BSGS.'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '**base1**：第一个BSGS的基。'
- en: '**gens1** : strong generating sequence of the first BSGS.'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '**gens1**：第一个BSGS的强生成序列。'
- en: '**base2, gens2** : similarly for the second BSGS.'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '**base2, gens2**：第二个BSGS类似。'
- en: '**signed** : flag for signed permutations.'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '**signed**：表示有符号排列的标志。'
- en: Examples
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE10]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
