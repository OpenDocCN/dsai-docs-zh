- en: numpy.testing.assert_equal
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.testing.assert_equal.html](https://numpy.org/doc/1.26/reference/generated/numpy.testing.assert_equal.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Raises an AssertionError if two objects are not equal.
  prefs: []
  type: TYPE_NORMAL
- en: Given two objects (scalars, lists, tuples, dictionaries or numpy arrays), check
    that all elements of these objects are equal. An exception is raised at the first
    conflicting values.
  prefs: []
  type: TYPE_NORMAL
- en: When one of *actual* and *desired* is a scalar and the other is array_like,
    the function checks that each element of the array_like object is equal to the
    scalar.
  prefs: []
  type: TYPE_NORMAL
- en: This function handles NaN comparisons as if NaN was a “normal” number. That
    is, AssertionError is not raised if both objects have NaNs in the same positions.
    This is in contrast to the IEEE standard on NaNs, which says that NaN compared
    to anything must return False.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**actual**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The object to check.
  prefs: []
  type: TYPE_NORMAL
- en: '**desired**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The expected object.
  prefs: []
  type: TYPE_NORMAL
- en: '**err_msg**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The error message to be printed in case of failure.
  prefs: []
  type: TYPE_NORMAL
- en: '**verbose**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True, the conflicting values are appended to the error message.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: AssertionError
  prefs: []
  type: TYPE_NORMAL
- en: If actual and desired are not equal.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The following comparison does not raise an exception. There are NaNs in the
    inputs, but they are in the same positions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
