- en: scipy.signal.zoom_fft
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.zoom_fft.html#scipy.signal.zoom_fft](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.zoom_fft.html#scipy.signal.zoom_fft)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute the DFT of *x* only for frequencies in range *fn*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array'
  prefs: []
  type: TYPE_NORMAL
- en: The signal to transform.
  prefs: []
  type: TYPE_NORMAL
- en: '**fn**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: A length-2 sequence [*f1*, *f2*] giving the frequency range, or a scalar, for
    which the range [0, *fn*] is assumed.
  prefs: []
  type: TYPE_NORMAL
- en: '**m**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The number of points to evaluate. The default is the length of *x*.
  prefs: []
  type: TYPE_NORMAL
- en: '**fs**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The sampling frequency. If `fs=10` represented 10 kHz, for example, then *f1*
    and *f2* would also be given in kHz. The default sampling frequency is 2, so *f1*
    and *f2* should be in the range [0, 1] to keep the transform below the Nyquist
    frequency.
  prefs: []
  type: TYPE_NORMAL
- en: '**endpoint**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True, *f2* is the last sample. Otherwise, it is not included. Default is
    False.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axis over which to compute the FFT. If not given, the last axis is used.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The transformed signal. The Fourier transform will be calculated at the points
    f1, f1+df, f1+2df, …, f2, where df=(f2-f1)/m.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`ZoomFFT`](scipy.signal.ZoomFFT.html#scipy.signal.ZoomFFT "scipy.signal.ZoomFFT")'
  prefs: []
  type: TYPE_NORMAL
- en: Class that creates a callable partial FFT function.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The defaults are chosen such that `signal.zoom_fft(x, 2)` is equivalent to `fft.fft(x)`
    and, if `m > len(x)`, that `signal.zoom_fft(x, 2, m)` is equivalent to `fft.fft(x,
    m)`.
  prefs: []
  type: TYPE_NORMAL
- en: 'To graph the magnitude of the resulting transform, use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: If the transform needs to be repeated, use [`ZoomFFT`](scipy.signal.ZoomFFT.html#scipy.signal.ZoomFFT
    "scipy.signal.ZoomFFT") to construct a specialized transform function which can
    be reused without recomputing constants.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'To plot the transform results use something like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-signal-zoom_fft-1.png](../Images/98295dce5b87b84cbb866a776d6cc79f.png)'
  prefs: []
  type: TYPE_IMG
