- en: Operator
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/physics/quantum/operator.html](https://docs.sympy.org/latest/modules/physics/quantum/operator.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Quantum mechanical operators.
  prefs: []
  type: TYPE_NORMAL
- en: 'TODO:'
  prefs: []
  type: TYPE_NORMAL
- en: Fix early 0 in apply_operators.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Debug and test apply_operators.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Get cse working with classes in this file.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Doctests and documentation of special methods for InnerProduct, Commutator,
    AntiCommutator, represent, apply_operators.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: An operator for representing the differential operator, i.e. d/dx
  prefs: []
  type: TYPE_NORMAL
- en: It is initialized by passing two arguments. The first is an arbitrary expression
    that involves a function, such as `Derivative(f(x), x)`. The second is the function
    (e.g. `f(x)`) which we are to replace with the `Wavefunction` that this `DifferentialOperator`
    is applied to.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**expr** : Expr'
  prefs: []
  type: TYPE_NORMAL
- en: The arbitrary expression which the appropriate Wavefunction is to be substituted
    into
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**func** : Expr'
  prefs: []
  type: TYPE_NORMAL
- en: A function (e.g. f(x)) which is to be replaced with the appropriate Wavefunction
    when this DifferentialOperator is applied
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: You can define a completely arbitrary expression and specify where the Wavefunction
    is to be substituted
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Returns the arbitrary expression which is to have the Wavefunction substituted
    into it
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Return the free symbols of the expression.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Returns the function which is to be replaced with the Wavefunction
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Returns the variables with which the function in the specified arbitrary expression
    is evaluated
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: A Hermitian operator that satisfies H == Dagger(H).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**args** : tuple'
  prefs: []
  type: TYPE_NORMAL
- en: The list of numbers or parameters that uniquely specify the operator. For time-dependent
    operators, this will include the time.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: An identity operator I that satisfies op * I == I * op == op for any operator
    op.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**N** : Integer'
  prefs: []
  type: TYPE_NORMAL
- en: Optional parameter that specifies the dimension of the Hilbert space of operator.
    This is used when generating a matrix representation.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Base class for non-commuting quantum operators.
  prefs: []
  type: TYPE_NORMAL
- en: An operator maps between quantum states [[R764]](#r764). In quantum mechanics,
    observables (including, but not limited to, measured physical values) are represented
    as Hermitian operators [[R765]](#r765).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**args** : tuple'
  prefs: []
  type: TYPE_NORMAL
- en: The list of numbers or parameters that uniquely specify the operator. For time-dependent
    operators, this will include the time.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Create an operator and examine its attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Create another operator and do some arithmetic operations:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Operators do not commute:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Polymonials of operators respect the commutation properties:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'Operator inverses are handle symbolically:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[R764] ([1](#id1),[2](#id3))'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Operator_%28physics%29](https://en.wikipedia.org/wiki/Operator_%28physics%29)'
  prefs: []
  type: TYPE_NORMAL
- en: '[R765] ([1](#id2),[2](#id4))'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Observable](https://en.wikipedia.org/wiki/Observable)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: An unevaluated outer product between a ket and bra.
  prefs: []
  type: TYPE_NORMAL
- en: This constructs an outer product between any subclass of `KetBase` and `BraBase`
    as `|a><b|`. An `OuterProduct` inherits from Operator as they act as operators
    in quantum expressions. For reference see [[R766]](#r766).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**ket** : KetBase'
  prefs: []
  type: TYPE_NORMAL
- en: The ket on the left side of the outer product.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**bar** : BraBase'
  prefs: []
  type: TYPE_NORMAL
- en: The bra on the right side of the outer product.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Create a simple outer product by hand and take its dagger:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'In simple products of kets and bras outer products will be automatically identified
    and created:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'But in more complex expressions, outer products are not automatically created:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'A user can force the creation of an outer product in a complex expression by
    using parentheses to group the ket and bra:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[R766] ([1](#id5),[2](#id6))'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Outer_product](https://en.wikipedia.org/wiki/Outer_product)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: Return the bra on the right side of the outer product.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: Return the ket on the left side of the outer product.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: A unitary operator that satisfies U*Dagger(U) == 1.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**args** : tuple'
  prefs: []
  type: TYPE_NORMAL
- en: The list of numbers or parameters that uniquely specify the operator. For time-dependent
    operators, this will include the time.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
