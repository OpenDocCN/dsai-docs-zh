- en: scipy.interpolate.BPoly
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.interpolate.BPoly
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.BPoly.html#scipy.interpolate.BPoly](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.BPoly.html#scipy.interpolate.BPoly)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.BPoly.html#scipy.interpolate.BPoly](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.BPoly.html#scipy.interpolate.BPoly)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Piecewise polynomial in terms of coefficients and breakpoints.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 以系数和断点表示的分段多项式。
- en: 'The polynomial between `x[i]` and `x[i + 1]` is written in the Bernstein polynomial
    basis:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在`x[i]`和`x[i + 1]`之间的多项式以伯恩斯坦多项式基础写成：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'where `k` is the degree of the polynomial, and:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 其中`k`是多项式的阶数，以及：
- en: '[PRE2]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: with `t = (x - x[i]) / (x[i+1] - x[i])` and `binom` is the binomial coefficient.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 `t = (x - x[i]) / (x[i+1] - x[i])`，`binom` 是二项式系数。
- en: 'Parameters:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**c**ndarray, shape (k, m, …)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**c**数组，形状为(k, m, ...)'
- en: Polynomial coefficients, order *k* and *m* intervals
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式系数，顺序*k*和*m*间隔
- en: '**x**ndarray, shape (m+1,)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**数组，形状为(m+1,)'
- en: Polynomial breakpoints. Must be sorted in either increasing or decreasing order.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式断点。必须按升序或降序排序。
- en: '**extrapolate**bool, optional'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**外推**布尔值，可选'
- en: If bool, determines whether to extrapolate to out-of-bounds points based on
    first and last intervals, or to return NaNs. If ‘periodic’, periodic extrapolation
    is used. Default is True.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果是布尔值，确定是否基于第一个和最后一个区间来对超出边界点进行外推，或者返回NaN。如果是'periodic'，则使用周期外推。默认值为True。
- en: '**axis**int, optional'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**轴**整数，可选'
- en: Interpolation axis. Default is zero.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 插值轴。默认值为零。
- en: See also
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`PPoly`](scipy.interpolate.PPoly.html#scipy.interpolate.PPoly "scipy.interpolate.PPoly")'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[`PPoly`](scipy.interpolate.PPoly.html#scipy.interpolate.PPoly "scipy.interpolate.PPoly")'
- en: piecewise polynomials in the power basis
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 以幂基数表示的分段多项式
- en: Notes
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: Properties of Bernstein polynomials are well documented in the literature, see
    for example [[1]](#r0da78b0816f0-1) [[2]](#r0da78b0816f0-2) [[3]](#r0da78b0816f0-3).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 伯恩斯坦多项式的性质在文献中有详细记录，例如参见[[1]](#r0da78b0816f0-1) [[2]](#r0da78b0816f0-2) [[3]](#r0da78b0816f0-3)。
- en: References
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[1](#id1)]'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[[1](#id1)]'
- en: '[https://en.wikipedia.org/wiki/Bernstein_polynomial](https://en.wikipedia.org/wiki/Bernstein_polynomial)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Bernstein_polynomial](https://en.wikipedia.org/wiki/Bernstein_polynomial)'
- en: '[[2](#id2)]'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[[2](#id2)]'
- en: Kenneth I. Joy, Bernstein polynomials, [http://www.idav.ucdavis.edu/education/CAGDNotes/Bernstein-Polynomials.pdf](http://www.idav.ucdavis.edu/education/CAGDNotes/Bernstein-Polynomials.pdf)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Kenneth I. Joy，伯恩斯坦多项式，[http://www.idav.ucdavis.edu/education/CAGDNotes/Bernstein-Polynomials.pdf](http://www.idav.ucdavis.edu/education/CAGDNotes/Bernstein-Polynomials.pdf)
- en: '[[3](#id3)]'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[[3](#id3)]'
- en: E. H. Doha, A. H. Bhrawy, and M. A. Saker, Boundary Value Problems, vol 2011,
    article ID 829546, [DOI:10.1155/2011/829543](https://doi.org/10.1155/2011/829543).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: E. H. Doha, A. H. Bhrawy, 和 M. A. Saker, 边值问题, vol 2011, article ID 829546,
    [DOI:10.1155/2011/829543](https://doi.org/10.1155/2011/829543)。
- en: Examples
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This creates a 2nd order polynomial
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这创建了一个二阶多项式
- en: \[\begin{split}B(x) = 1 \times b_{0, 2}(x) + 2 \times b_{1, 2}(x) + 3 \times
    b_{2, 2}(x) \\ = 1 \times (1-x)^2 + 2 \times 2 x (1 - x) + 3 \times x^2\end{split}\]
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}B(x) = 1 \times b_{0, 2}(x) + 2 \times b_{1, 2}(x) + 3 \times
    b_{2, 2}(x) \\ = 1 \times (1-x)^2 + 2 \times 2 x (1 - x) + 3 \times x^2\end{split}\]
- en: 'Attributes:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 属性：
- en: '**x**ndarray'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**数组'
- en: Breakpoints.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 断点。
- en: '**c**ndarray'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**c**数组'
- en: Coefficients of the polynomials. They are reshaped to a 3-D array with the last
    dimension representing the trailing dimensions of the original coefficient array.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式的系数。它们被重塑为一个三维数组，最后一个维度表示原始系数数组的尾部维度。
- en: '**axis**int'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**轴**整数'
- en: Interpolation axis.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 插值轴。
- en: Methods
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`__call__`](scipy.interpolate.BPoly.__call__.html#scipy.interpolate.BPoly.__call__
    "scipy.interpolate.BPoly.__call__")(x[, nu, extrapolate]) | Evaluate the piecewise
    polynomial or its derivative. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| [`__call__`](scipy.interpolate.BPoly.__call__.html#scipy.interpolate.BPoly.__call__
    "scipy.interpolate.BPoly.__call__")(x[, nu, extrapolate]) | 计算分段多项式或其导数。 |'
- en: '| [`extend`](scipy.interpolate.BPoly.extend.html#scipy.interpolate.BPoly.extend
    "scipy.interpolate.BPoly.extend")(c, x) | Add additional breakpoints and coefficients
    to the polynomial. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| [`extend`](scipy.interpolate.BPoly.extend.html#scipy.interpolate.BPoly.extend
    "scipy.interpolate.BPoly.extend")(c, x) | 将额外的断点和系数添加到多项式中。 |'
- en: '| [`derivative`](scipy.interpolate.BPoly.derivative.html#scipy.interpolate.BPoly.derivative
    "scipy.interpolate.BPoly.derivative")([nu]) | Construct a new piecewise polynomial
    representing the derivative. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| [`derivative`](scipy.interpolate.BPoly.derivative.html#scipy.interpolate.BPoly.derivative
    "scipy.interpolate.BPoly.derivative") | 构建表示导数的新分段多项式。 |'
- en: '| [`antiderivative`](scipy.interpolate.BPoly.antiderivative.html#scipy.interpolate.BPoly.antiderivative
    "scipy.interpolate.BPoly.antiderivative")([nu]) | Construct a new piecewise polynomial
    representing the antiderivative. |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| [`antiderivative`](scipy.interpolate.BPoly.antiderivative.html#scipy.interpolate.BPoly.antiderivative
    "scipy.interpolate.BPoly.antiderivative")([nu]) | 构造一个表示原函数的新分段多项式。 |'
- en: '| [`integrate`](scipy.interpolate.BPoly.integrate.html#scipy.interpolate.BPoly.integrate
    "scipy.interpolate.BPoly.integrate")(a, b[, extrapolate]) | Compute a definite
    integral over a piecewise polynomial. |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| [`integrate`](scipy.interpolate.BPoly.integrate.html#scipy.interpolate.BPoly.integrate
    "scipy.interpolate.BPoly.integrate")(a, b[, extrapolate]) | 计算分段多项式在给定区间上的定积分。
    |'
- en: '| [`construct_fast`](scipy.interpolate.BPoly.construct_fast.html#scipy.interpolate.BPoly.construct_fast
    "scipy.interpolate.BPoly.construct_fast")(c, x[, extrapolate, axis]) | Construct
    the piecewise polynomial without making checks. |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| [`construct_fast`](scipy.interpolate.BPoly.construct_fast.html#scipy.interpolate.BPoly.construct_fast
    "scipy.interpolate.BPoly.construct_fast")(c, x[, extrapolate, axis]) | 在不进行检查的情况下构造分段多项式。
    |'
- en: '| [`from_power_basis`](scipy.interpolate.BPoly.from_power_basis.html#scipy.interpolate.BPoly.from_power_basis
    "scipy.interpolate.BPoly.from_power_basis")(pp[, extrapolate]) | Construct a piecewise
    polynomial in Bernstein basis from a power basis polynomial. |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| [`from_power_basis`](scipy.interpolate.BPoly.from_power_basis.html#scipy.interpolate.BPoly.from_power_basis
    "scipy.interpolate.BPoly.from_power_basis")(pp[, extrapolate]) | 从幂基础多项式构造一个以伯恩斯坦基础为基础的分段多项式。
    |'
- en: '| [`from_derivatives`](scipy.interpolate.BPoly.from_derivatives.html#scipy.interpolate.BPoly.from_derivatives
    "scipy.interpolate.BPoly.from_derivatives")(xi, yi[, orders, extrapolate]) | Construct
    a piecewise polynomial in the Bernstein basis, compatible with the specified values
    and derivatives at breakpoints. |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| [`from_derivatives`](scipy.interpolate.BPoly.from_derivatives.html#scipy.interpolate.BPoly.from_derivatives
    "scipy.interpolate.BPoly.from_derivatives")(xi, yi[, orders, extrapolate]) | 根据给定断点处的值和导数构造与之兼容的伯恩斯坦基础分段多项式。
    |'
