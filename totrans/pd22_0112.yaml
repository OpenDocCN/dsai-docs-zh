- en: pandas.crosstab
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.crosstab.html](https://pandas.pydata.org/docs/reference/api/pandas.crosstab.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute a simple cross tabulation of two (or more) factors.
  prefs: []
  type: TYPE_NORMAL
- en: By default, computes a frequency table of the factors unless an array of values
    and an aggregation function are passed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**index**array-like, Series, or list of arrays/Series'
  prefs: []
  type: TYPE_NORMAL
- en: Values to group by in the rows.
  prefs: []
  type: TYPE_NORMAL
- en: '**columns**array-like, Series, or list of arrays/Series'
  prefs: []
  type: TYPE_NORMAL
- en: Values to group by in the columns.
  prefs: []
  type: TYPE_NORMAL
- en: '**values**array-like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Array of values to aggregate according to the factors. Requires aggfunc be specified.
  prefs: []
  type: TYPE_NORMAL
- en: '**rownames**sequence, default None'
  prefs: []
  type: TYPE_NORMAL
- en: If passed, must match number of row arrays passed.
  prefs: []
  type: TYPE_NORMAL
- en: '**colnames**sequence, default None'
  prefs: []
  type: TYPE_NORMAL
- en: If passed, must match number of column arrays passed.
  prefs: []
  type: TYPE_NORMAL
- en: '**aggfunc**function, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If specified, requires values be specified as well.
  prefs: []
  type: TYPE_NORMAL
- en: '**margins**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Add row/column margins (subtotals).
  prefs: []
  type: TYPE_NORMAL
- en: '**margins_name**str, default ‘All’'
  prefs: []
  type: TYPE_NORMAL
- en: Name of the row/column that will contain the totals when margins is True.
  prefs: []
  type: TYPE_NORMAL
- en: '**dropna**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Do not include columns whose entries are all NaN.
  prefs: []
  type: TYPE_NORMAL
- en: '**normalize**bool, {‘all’, ‘index’, ‘columns’}, or {0,1}, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Normalize by dividing all values by the sum of values.
  prefs: []
  type: TYPE_NORMAL
- en: If passed ‘all’ or True, will normalize over all values.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If passed ‘index’ will normalize over each row.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If passed ‘columns’ will normalize over each column.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If margins is True, will also normalize margin values.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: Cross tabulation of the data.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.pivot`](pandas.DataFrame.pivot.html#pandas.DataFrame.pivot "pandas.DataFrame.pivot")'
  prefs: []
  type: TYPE_NORMAL
- en: Reshape data based on column values.
  prefs: []
  type: TYPE_NORMAL
- en: '[`pivot_table`](pandas.pivot_table.html#pandas.pivot_table "pandas.pivot_table")'
  prefs: []
  type: TYPE_NORMAL
- en: Create a pivot table as a DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Any Series passed will have their name attributes used unless row or column
    names for the cross-tabulation are specified.
  prefs: []
  type: TYPE_NORMAL
- en: Any input passed containing Categorical data will have **all** of its categories
    included in the cross-tabulation, even if the actual data does not contain any
    instances of a particular category.
  prefs: []
  type: TYPE_NORMAL
- en: In the event that there aren’t overlapping indexes an empty DataFrame will be
    returned.
  prefs: []
  type: TYPE_NORMAL
- en: Reference [the user guide](../../user_guide/reshaping.html#reshaping-crosstabulations)
    for more examples.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Here ‘c’ and ‘f’ are not represented in the data and will not be shown in the
    output because dropna is True by default. Set dropna=False to preserve categories
    with no data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
