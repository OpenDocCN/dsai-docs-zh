- en: scipy.linalg.expm
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.linalg.expm
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.expm.html#scipy.linalg.expm](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.expm.html#scipy.linalg.expm)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.expm.html#scipy.linalg.expm](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.expm.html#scipy.linalg.expm)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Compute the matrix exponential of an array.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 计算数组的矩阵指数。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '参数:'
- en: '**A**ndarray'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**A**ndarray'
- en: Input with last two dimensions are square `(..., n, n)`.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 输入的最后两个维度是方形的`(..., n, n)`。
- en: 'Returns:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**eA**ndarray'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**eA**ndarray'
- en: The resulting matrix exponential with the same shape of `A`
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 结果矩阵指数与`A`的形状相同
- en: Notes
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Implements the algorithm given in [1], which is essentially a Pade approximation
    with a variable order that is decided based on the array data.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 实现了在[1]中给出的算法，这实质上是一种带有基于数组数据决定的可变阶数的Pade逼近。
- en: For input with size `n`, the memory usage is in the worst case in the order
    of `8*(n**2)`. If the input data is not of single and double precision of real
    and complex dtypes, it is copied to a new array.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对于大小为`n`的输入，在最坏情况下，内存使用量是`8*(n**2)`的数量级。如果输入数据不是单精度和双精度的实数和复数数据类型，则将其复制到一个新的数组。
- en: For cases `n >= 400`, the exact 1-norm computation cost, breaks even with 1-norm
    estimation and from that point on the estimation scheme given in [2] is used to
    decide on the approximation order.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`n >= 400`的情况，精确的1-范数计算成本与1-范数估计持平，并且从那一点开始，使用[2]中给出的估计方案来决定逼近阶数。
- en: References
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1]'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[1]'
- en: Awad H. Al-Mohy and Nicholas J. Higham, (2009), “A New Scaling and Squaring
    Algorithm for the Matrix Exponential”, SIAM J. Matrix Anal. Appl. 31(3):970-989,
    [DOI:10.1137/09074721X](https://doi.org/10.1137/09074721X)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Awad H. Al-Mohy和Nicholas J. Higham（2009），"矩阵指数的新缩放和平方算法"，SIAM J. Matrix Anal.
    Appl. 31(3):970-989，[DOI:10.1137/09074721X](https://doi.org/10.1137/09074721X)
- en: '[2]'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[2]'
- en: Nicholas J. Higham and Francoise Tisseur (2000), “A Block Algorithm for Matrix
    1-Norm Estimation, with an Application to 1-Norm Pseudospectra.” SIAM J. Matrix
    Anal. Appl. 21(4):1185-1201, [DOI:10.1137/S0895479899356080](https://doi.org/10.1137/S0895479899356080)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Nicholas J. Higham和Francoise Tisseur（2000），"用于矩阵1-范数估计的块算法，及其在1-范数伪谱中的应用"，SIAM
    J. Matrix Anal. Appl. 21(4):1185-1201，[DOI:10.1137/S0895479899356080](https://doi.org/10.1137/S0895479899356080)
- en: Examples
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Matrix version of the formula exp(0) = 1:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 公式exp(0) = 1的矩阵版本：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Euler’s identity (exp(i*theta) = cos(theta) + i*sin(theta)) applied to a matrix:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 欧拉恒等式（exp(i*theta) = cos(theta) + i*sin(theta)）应用于矩阵：
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
