["```py\nscipy.stats.kappa4 = <scipy.stats._continuous_distns.kappa4_gen object>\n```", "```py\nkappa4.pdf(x, h, k) = (1.0 - k*x)**(1.0/k - 1.0)*\n                      exp(-(1.0 - k*x)**(1.0/k)) \n```", "```py\nkappa4.pdf(x, h, k) = exp(-x)*(1.0 - h*exp(-x))**(1.0/h - 1.0) \n```", "```py\nkappa4.pdf(x, h, k) = exp(-x)*exp(-exp(-x)) \n```", "```py\n>>> import numpy as np\n>>> from scipy.stats import kappa4\n>>> import matplotlib.pyplot as plt\n>>> fig, ax = plt.subplots(1, 1) \n```", "```py\n>>> h, k = 0.1, 0\n>>> mean, var, skew, kurt = kappa4.stats(h, k, moments='mvsk') \n```", "```py\n>>> x = np.linspace(kappa4.ppf(0.01, h, k),\n...                 kappa4.ppf(0.99, h, k), 100)\n>>> ax.plot(x, kappa4.pdf(x, h, k),\n...        'r-', lw=5, alpha=0.6, label='kappa4 pdf') \n```", "```py\n>>> rv = kappa4(h, k)\n>>> ax.plot(x, rv.pdf(x), 'k-', lw=2, label='frozen pdf') \n```", "```py\n>>> vals = kappa4.ppf([0.001, 0.5, 0.999], h, k)\n>>> np.allclose([0.001, 0.5, 0.999], kappa4.cdf(vals, h, k))\nTrue \n```", "```py\n>>> r = kappa4.rvs(h, k, size=1000) \n```", "```py\n>>> ax.hist(r, density=True, bins='auto', histtype='stepfilled', alpha=0.2)\n>>> ax.set_xlim([x[0], x[-1]])\n>>> ax.legend(loc='best', frameon=False)\n>>> plt.show() \n```"]