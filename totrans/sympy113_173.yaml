- en: Nonminimal Coordinates Pendulum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/physics/mechanics/examples/lin_pend_nonmin_example.html](https://docs.sympy.org/latest/modules/physics/mechanics/examples/lin_pend_nonmin_example.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'In this example we demonstrate the use of the functionality provided in [`sympy.physics.mechanics`](../index.html#module-sympy.physics.mechanics
    "sympy.physics.mechanics") for deriving the equations of motion (EOM) for a pendulum
    with a nonminimal set of coordinates. As the pendulum is a one degree of freedom
    system, it can be described using one coordinate and one speed (the pendulum angle,
    and the angular velocity respectively). Choosing instead to describe the system
    using the \(x\) and \(y\) coordinates of the mass results in a need for constraints.
    The system is shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: <svg class="align-center" width="378.90466" height="456.13843" id="svg2" version="1.1"
    inkscape:version="0.48.4 r9939" sodipodi:docname="Pendulum_NonMin_Coord.svg"><metadata
    id="metadata7"><rdf><work rdf:about=""><format>image/svg+xml</format></work></rdf></metadata>
    <g inkscape:label="Layer 1" inkscape:groupmode="layer" id="layer1" transform="translate(-184.9363,-178.42594)"><text
    xml:space="preserve" style="font-size:40px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="402.85715" y="383.79074" id="text4793" sodipodi:linespacing="125%"><tspan sodipodi:role="line"
    id="tspan4795" x="402.85715" y="383.79074">L</tspan></text> <text xml:space="preserve"
    style="font-size:40px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="459.71429" y="559.36218" id="text4797" sodipodi:linespacing="125%"><tspan sodipodi:role="line"
    id="tspan4799" x="459.71429" y="559.36218">m</tspan></text> <text xml:space="preserve"
    style="font-size:40px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="530.71423" y="302.36218" id="text5019" sodipodi:linespacing="125%"><tspan sodipodi:role="line"
    id="tspan5021" x="530.71423" y="302.36218">g</tspan></text> <text xml:space="preserve"
    style="font-size:40px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="287.93631" y="388.35422" id="text6597" sodipodi:linespacing="125%"><tspan sodipodi:role="line"
    id="tspan6599" x="287.93631" y="388.35422">q<tspan style="font-size:65.00091553%;baseline-shift:sub"
    id="tspan6601">1</tspan></tspan></text> <text xml:space="preserve" style="font-size:40px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="366.93631" y="506.35422" id="text6603" sodipodi:linespacing="125%"><tspan sodipodi:role="line"
    id="tspan6605" x="366.93631" y="506.35422">q<tspan style="font-size:65.00091553%;baseline-shift:sub"
    id="tspan6607">2</tspan></tspan></text> <text xml:space="preserve" style="font-size:40px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="402.93631" y="582.35425" id="text6633" sodipodi:linespacing="125%"><tspan sodipodi:role="line"
    id="tspan6635" x="402.93631" y="582.35425">u<tspan style="font-size:65.00091553%;baseline-shift:sub"
    id="tspan6637">1</tspan></tspan></text> <text xml:space="preserve" style="font-size:40px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="481.93631" y="508.35422" id="text6639" sodipodi:linespacing="125%"><tspan sodipodi:role="line"
    id="tspan6641" x="481.93631" y="508.35422">u<tspan style="font-size:65.00091553%;baseline-shift:sub"
    id="tspan6643">2</tspan></tspan></text> <text sodipodi:linespacing="125%" id="text8301"
    y="299.35422" x="216.93629" style="font-size:40px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    xml:space="preserve"><tspan style="font-size:24px" y="299.35422" x="216.93629"
    id="tspan8303" sodipodi:role="line">N<tspan style="font-size:65.00091553%;baseline-shift:sub"
    id="tspan8571">x</tspan></tspan></text> <text sodipodi:linespacing="125%" id="text8307"
    y="258.35422" x="247.93631" style="font-size:40px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    xml:space="preserve"><tspan style="font-size:24px" y="258.35422" x="247.93631"
    id="tspan8309" sodipodi:role="line">N<tspan style="font-size:65.00091553%;baseline-shift:sub"
    id="tspan8569">y</tspan></tspan></text> <text sodipodi:linespacing="125%" id="text8301-7"
    y="284.70227" x="361.07303" style="font-size:40px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    xml:space="preserve"><tspan style="font-size:24px" y="284.70227" x="361.07303"
    id="tspan8303-9" sodipodi:role="line">A<tspan style="font-size:65.00091553%;baseline-shift:sub"
    id="tspan8567">x</tspan></tspan></text> <text sodipodi:linespacing="125%" id="text8307-4"
    y="235.20618" x="386.03787" style="font-size:40px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    xml:space="preserve"><tspan style="font-size:24px" y="235.20618" x="386.03787"
    id="tspan8309-7" sodipodi:role="line">A<tspan style="font-size:65.00091553%;baseline-shift:sub"
    id="tspan8565">y</tspan></tspan></text></g></svg>
  prefs: []
  type: TYPE_NORMAL
- en: The system will be modeled using both Kane’s and Lagrange’s methods, and the
    resulting EOM linearized. While this is a simple problem, it should illustrate
    the use of the linearization methods in the presence of constraints.
  prefs: []
  type: TYPE_NORMAL
- en: Kane’s Method
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: First we need to create the `dynamicsymbols` needed to describe the system as
    shown in the above diagram. In this case, the generalized coordinates \(q_1\)
    and \(q_2\) represent the mass \(x\) and \(y\) coordinates in the inertial \(N\)
    frame. Likewise, the generalized speeds \(u_1\) and \(u_2\) represent the velocities
    in these directions. We also create some `symbols` to represent the length and
    mass of the pendulum, as well as gravity and time.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Next, we create a world coordinate frame \(N\), and its origin point \(N^*\).
    The velocity of the origin is set to 0\. A second coordinate frame \(A\) is oriented
    such that its x-axis is along the pendulum (as shown in the diagram above).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Locating the pendulum mass is then as easy as specifying its location with in
    terms of its x and y coordinates in the world frame. A `Particle` object is then
    created to represent the mass at this location.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The kinematic differential equations (KDEs) relate the derivatives of the generalized
    coordinates to the generalized speeds. In this case the speeds are the derivatives,
    so these are simple. A dictionary is also created to map \(\dot{q}\) to \(u\):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The velocity of the mass is then the time derivative of the position from the
    origin \(N^*\):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: As this system has more coordinates than degrees of freedom, constraints are
    needed. The configuration constraints relate the coordinates to each other. In
    this case the constraint is that the distance from the origin to the mass is always
    the length \(L\) (the pendulum doesn’t get longer). Likewise, the velocity constraint
    is that the mass velocity in the `A.x` direction is always 0 (no radial velocity).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The force on the system is just gravity, at point `P`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'With the problem setup, the equations of motion can be generated using the
    `KanesMethod` class. As there are constraints, dependent and independent coordinates
    need to be provided to the class. In this case we’ll use \(q_2\) and \(u_2\) as
    the independent coordinates and speeds:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: For linearization, operating points can be specified on the call, or be substituted
    in afterwards. In this case we’ll provide them in the call, supplied in a list.
    The `A_and_B=True` kwarg indicates to solve invert the \(M\) matrix and solve
    for just the explicit linearized \(A\) and \(B\) matrices. The `simplify=True`
    kwarg indicates to simplify inside the linearize call, and return the presimplified
    matrices. The cost of doing this is small for simple systems, but for larger systems
    this can be a costly operation, and should be avoided.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'The resulting \(A\) matrix has dimensions 2 x 2, while the number of total
    states is `len(q) + len(u) = 2 + 2 = 4`. This is because for constrained systems
    the resulting `A_and_B` form has a partitioned state vector only containing the
    independent coordinates and speeds. Written out mathematically, the system linearized
    about this point would be written as:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}\begin{bmatrix} \dot{q_2} \\ \dot{u_2} \end{bmatrix} = \begin{bmatrix}
    0 & 1 \\ \frac{-g}{L} & 0 \end{bmatrix} \begin{bmatrix} q_2 \\ u_2 \end{bmatrix}\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: Lagrange’s Method
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The derivation using Lagrange’s method is very similar to the approach using
    Kane’s method described above. As before, we first create the `dynamicsymbols`
    needed to describe the system. In this case, the generalized coordinates \(q_1\)
    and \(q_2\) represent the mass \(x\) and \(y\) coordinates in the inertial \(N\)
    frame. This results in the time derivatives \(\dot{q_1}\) and \(\dot{q_2}\) representing
    the velocities in these directions. We also create some `symbols` to represent
    the length and mass of the pendulum, as well as gravity and time.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Next, we create a world coordinate frame \(N\), and its origin point \(N^*\).
    The velocity of the origin is set to 0\. A second coordinate frame \(A\) is oriented
    such that its x-axis is along the pendulum (as shown in the diagram above).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Locating the pendulum mass is then as easy as specifying its location with in
    terms of its x and y coordinates in the world frame. A `Particle` object is then
    created to represent the mass at this location.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'As this system has more coordinates than degrees of freedom, constraints are
    needed. In this case only a single holonomic constraints is needed: the distance
    from the origin to the mass is always the length \(L\) (the pendulum doesn’t get
    longer).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: The force on the system is just gravity, at point `P`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: With the problem setup, the Lagrangian can be calculated, and the equations
    of motion formed. Note that the call to `LagrangesMethod` includes the Lagrangian,
    the generalized coordinates, the constraints (specified by `hol_coneqs` or `nonhol_coneqs`),
    the list of (body, force) pairs, and the inertial frame. In contrast to the `KanesMethod`
    initializer, independent and dependent coordinates are not partitioned inside
    the `LagrangesMethod` object. Such a partition is supplied later.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we compose the operating point dictionary, set in the hanging at rest
    position:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: As there are constraints in the formulation, there will be corresponding Lagrange
    Multipliers. These may appear inside the linearized form as well, and thus should
    also be included inside the operating point dictionary. Fortunately, the `LagrangesMethod`
    class provides an easy way of solving for the multipliers at a given operating
    point using the `solve_multipliers` method.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'With this solution, linearization can be completed. Note that in contrast to
    the `KanesMethod` approach, the `LagrangesMethod.linearize` method also requires
    the partitioning of the generalized coordinates and their time derivatives into
    independent and dependent vectors. This is the same as what was passed into the
    `KanesMethod` constructor above:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'The resulting \(A\) matrix has dimensions 2 x 2, while the number of total
    states is `2*len(q) = 4`. This is because for constrained systems the resulting
    `A_and_B` form has a partitioned state vector only containing the independent
    coordinates and their derivatives. Written out mathematically, the system linearized
    about this point would be written as:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}\begin{bmatrix} \dot{q_2} \\ \ddot{q_2} \end{bmatrix} = \begin{bmatrix}
    0 & 1 \\ \frac{-g}{L} & 0 \end{bmatrix} \begin{bmatrix} q_2 \\ \dot{q_2} \end{bmatrix}\end{split}\]
  prefs: []
  type: TYPE_NORMAL
