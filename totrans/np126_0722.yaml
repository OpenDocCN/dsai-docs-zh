- en: numpy.ma.masked_values
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.masked_values.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.masked_values.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Mask using floating point equality.
  prefs: []
  type: TYPE_NORMAL
- en: Return a MaskedArray, masked where the data in array *x* are approximately equal
    to *value*, determined using [`isclose`](numpy.isclose.html#numpy.isclose "numpy.isclose").
    The default tolerances for [`masked_values`](#numpy.ma.masked_values "numpy.ma.masked_values")
    are the same as those for [`isclose`](numpy.isclose.html#numpy.isclose "numpy.isclose").
  prefs: []
  type: TYPE_NORMAL
- en: For integer types, exact equality is used, in the same way as [`masked_equal`](numpy.ma.masked_equal.html#numpy.ma.masked_equal
    "numpy.ma.masked_equal").
  prefs: []
  type: TYPE_NORMAL
- en: The fill_value is set to *value* and the mask is set to `nomask` if possible.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Array to mask.
  prefs: []
  type: TYPE_NORMAL
- en: '**value**float'
  prefs: []
  type: TYPE_NORMAL
- en: Masking value.
  prefs: []
  type: TYPE_NORMAL
- en: '**rtol, atol**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Tolerance parameters passed on to [`isclose`](numpy.isclose.html#numpy.isclose
    "numpy.isclose")
  prefs: []
  type: TYPE_NORMAL
- en: '**copy**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to return a copy of *x*.
  prefs: []
  type: TYPE_NORMAL
- en: '**shrink**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to collapse a mask full of False to `nomask`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**result**MaskedArray'
  prefs: []
  type: TYPE_NORMAL
- en: The result of masking *x* where approximately equal to *value*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`masked_where`](numpy.ma.masked_where.html#numpy.ma.masked_where "numpy.ma.masked_where")'
  prefs: []
  type: TYPE_NORMAL
- en: Mask where a condition is met.
  prefs: []
  type: TYPE_NORMAL
- en: '[`masked_equal`](numpy.ma.masked_equal.html#numpy.ma.masked_equal "numpy.ma.masked_equal")'
  prefs: []
  type: TYPE_NORMAL
- en: Mask where equal to a given value (integers).
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Note that *mask* is set to `nomask` if possible.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Unlike [`masked_equal`](numpy.ma.masked_equal.html#numpy.ma.masked_equal "numpy.ma.masked_equal"),
    [`masked_values`](#numpy.ma.masked_values "numpy.ma.masked_values") can perform
    approximate equalities.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
