- en: HermiteE Series, “Probabilists” (numpy.polynomial.hermite_e)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/routines.polynomials.hermite_e.html](https://numpy.org/doc/1.26/reference/routines.polynomials.hermite_e.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This module provides a number of objects (mostly functions) useful for dealing
    with Hermite_e series, including a [`HermiteE`](generated/numpy.polynomial.hermite_e.HermiteE.html#numpy.polynomial.hermite_e.HermiteE
    "numpy.polynomial.hermite_e.HermiteE") class that encapsulates the usual arithmetic
    operations. (General information on how this module represents and works with
    such polynomials is in the docstring for its “parent” sub-package, [`numpy.polynomial`](routines.polynomials.package.html#module-numpy.polynomial
    "numpy.polynomial")).
  prefs: []
  type: TYPE_NORMAL
- en: Classes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`HermiteE`](generated/numpy.polynomial.hermite_e.HermiteE.html#numpy.polynomial.hermite_e.HermiteE
    "numpy.polynomial.hermite_e.HermiteE")(coef[, domain, window, symbol]) | An HermiteE
    series class. |'
  prefs: []
  type: TYPE_TB
- en: Constants
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`hermedomain`](generated/numpy.polynomial.hermite_e.hermedomain.html#numpy.polynomial.hermite_e.hermedomain
    "numpy.polynomial.hermite_e.hermedomain") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermezero`](generated/numpy.polynomial.hermite_e.hermezero.html#numpy.polynomial.hermite_e.hermezero
    "numpy.polynomial.hermite_e.hermezero") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermeone`](generated/numpy.polynomial.hermite_e.hermeone.html#numpy.polynomial.hermite_e.hermeone
    "numpy.polynomial.hermite_e.hermeone") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermex`](generated/numpy.polynomial.hermite_e.hermex.html#numpy.polynomial.hermite_e.hermex
    "numpy.polynomial.hermite_e.hermex") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: Arithmetic
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`hermeadd`](generated/numpy.polynomial.hermite_e.hermeadd.html#numpy.polynomial.hermite_e.hermeadd
    "numpy.polynomial.hermite_e.hermeadd")(c1, c2) | Add one Hermite series to another.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermesub`](generated/numpy.polynomial.hermite_e.hermesub.html#numpy.polynomial.hermite_e.hermesub
    "numpy.polynomial.hermite_e.hermesub")(c1, c2) | Subtract one Hermite series from
    another. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermemulx`](generated/numpy.polynomial.hermite_e.hermemulx.html#numpy.polynomial.hermite_e.hermemulx
    "numpy.polynomial.hermite_e.hermemulx")(c) | Multiply a Hermite series by x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermemul`](generated/numpy.polynomial.hermite_e.hermemul.html#numpy.polynomial.hermite_e.hermemul
    "numpy.polynomial.hermite_e.hermemul")(c1, c2) | Multiply one Hermite series by
    another. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermediv`](generated/numpy.polynomial.hermite_e.hermediv.html#numpy.polynomial.hermite_e.hermediv
    "numpy.polynomial.hermite_e.hermediv")(c1, c2) | Divide one Hermite series by
    another. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermepow`](generated/numpy.polynomial.hermite_e.hermepow.html#numpy.polynomial.hermite_e.hermepow
    "numpy.polynomial.hermite_e.hermepow")(c, pow[, maxpower]) | Raise a Hermite series
    to a power. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermeval`](generated/numpy.polynomial.hermite_e.hermeval.html#numpy.polynomial.hermite_e.hermeval
    "numpy.polynomial.hermite_e.hermeval")(x, c[, tensor]) | Evaluate an HermiteE
    series at points x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermeval2d`](generated/numpy.polynomial.hermite_e.hermeval2d.html#numpy.polynomial.hermite_e.hermeval2d
    "numpy.polynomial.hermite_e.hermeval2d")(x, y, c) | Evaluate a 2-D HermiteE series
    at points (x, y). |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermeval3d`](generated/numpy.polynomial.hermite_e.hermeval3d.html#numpy.polynomial.hermite_e.hermeval3d
    "numpy.polynomial.hermite_e.hermeval3d")(x, y, z, c) | Evaluate a 3-D Hermite_e
    series at points (x, y, z). |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermegrid2d`](generated/numpy.polynomial.hermite_e.hermegrid2d.html#numpy.polynomial.hermite_e.hermegrid2d
    "numpy.polynomial.hermite_e.hermegrid2d")(x, y, c) | Evaluate a 2-D HermiteE series
    on the Cartesian product of x and y. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermegrid3d`](generated/numpy.polynomial.hermite_e.hermegrid3d.html#numpy.polynomial.hermite_e.hermegrid3d
    "numpy.polynomial.hermite_e.hermegrid3d")(x, y, z, c) | Evaluate a 3-D HermiteE
    series on the Cartesian product of x, y, and z. |'
  prefs: []
  type: TYPE_TB
- en: Calculus
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`hermeder`](generated/numpy.polynomial.hermite_e.hermeder.html#numpy.polynomial.hermite_e.hermeder
    "numpy.polynomial.hermite_e.hermeder")(c[, m, scl, axis]) | Differentiate a Hermite_e
    series. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermeint`](generated/numpy.polynomial.hermite_e.hermeint.html#numpy.polynomial.hermite_e.hermeint
    "numpy.polynomial.hermite_e.hermeint")(c[, m, k, lbnd, scl, axis]) | Integrate
    a Hermite_e series. |'
  prefs: []
  type: TYPE_TB
- en: Misc Functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`hermefromroots`](generated/numpy.polynomial.hermite_e.hermefromroots.html#numpy.polynomial.hermite_e.hermefromroots
    "numpy.polynomial.hermite_e.hermefromroots")(roots) | Generate a HermiteE series
    with given roots. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermeroots`](generated/numpy.polynomial.hermite_e.hermeroots.html#numpy.polynomial.hermite_e.hermeroots
    "numpy.polynomial.hermite_e.hermeroots")(c) | Compute the roots of a HermiteE
    series. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermevander`](generated/numpy.polynomial.hermite_e.hermevander.html#numpy.polynomial.hermite_e.hermevander
    "numpy.polynomial.hermite_e.hermevander")(x, deg) | Pseudo-Vandermonde matrix
    of given degree. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermevander2d`](generated/numpy.polynomial.hermite_e.hermevander2d.html#numpy.polynomial.hermite_e.hermevander2d
    "numpy.polynomial.hermite_e.hermevander2d")(x, y, deg) | Pseudo-Vandermonde matrix
    of given degrees. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermevander3d`](generated/numpy.polynomial.hermite_e.hermevander3d.html#numpy.polynomial.hermite_e.hermevander3d
    "numpy.polynomial.hermite_e.hermevander3d")(x, y, z, deg) | Pseudo-Vandermonde
    matrix of given degrees. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermegauss`](generated/numpy.polynomial.hermite_e.hermegauss.html#numpy.polynomial.hermite_e.hermegauss
    "numpy.polynomial.hermite_e.hermegauss")(deg) | Gauss-HermiteE quadrature. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermeweight`](generated/numpy.polynomial.hermite_e.hermeweight.html#numpy.polynomial.hermite_e.hermeweight
    "numpy.polynomial.hermite_e.hermeweight")(x) | Weight function of the Hermite_e
    polynomials. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermecompanion`](generated/numpy.polynomial.hermite_e.hermecompanion.html#numpy.polynomial.hermite_e.hermecompanion
    "numpy.polynomial.hermite_e.hermecompanion")(c) | Return the scaled companion
    matrix of c. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermefit`](generated/numpy.polynomial.hermite_e.hermefit.html#numpy.polynomial.hermite_e.hermefit
    "numpy.polynomial.hermite_e.hermefit")(x, y, deg[, rcond, full, w]) | Least squares
    fit of Hermite series to data. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermetrim`](generated/numpy.polynomial.hermite_e.hermetrim.html#numpy.polynomial.hermite_e.hermetrim
    "numpy.polynomial.hermite_e.hermetrim")(c[, tol]) | Remove "small" "trailing"
    coefficients from a polynomial. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermeline`](generated/numpy.polynomial.hermite_e.hermeline.html#numpy.polynomial.hermite_e.hermeline
    "numpy.polynomial.hermite_e.hermeline")(off, scl) | Hermite series whose graph
    is a straight line. |'
  prefs: []
  type: TYPE_TB
- en: '| [`herme2poly`](generated/numpy.polynomial.hermite_e.herme2poly.html#numpy.polynomial.hermite_e.herme2poly
    "numpy.polynomial.hermite_e.herme2poly")(c) | Convert a Hermite series to a polynomial.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`poly2herme`](generated/numpy.polynomial.hermite_e.poly2herme.html#numpy.polynomial.hermite_e.poly2herme
    "numpy.polynomial.hermite_e.poly2herme")(pol) | Convert a polynomial to a Hermite
    series. |'
  prefs: []
  type: TYPE_TB
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[`numpy.polynomial`](routines.polynomials.package.html#module-numpy.polynomial
    "numpy.polynomial")'
  prefs: []
  type: TYPE_NORMAL
- en: Classes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`HermiteE`](generated/numpy.polynomial.hermite_e.HermiteE.html#numpy.polynomial.hermite_e.HermiteE
    "numpy.polynomial.hermite_e.HermiteE")(coef[, domain, window, symbol]) | An HermiteE
    series class. |'
  prefs: []
  type: TYPE_TB
- en: Constants
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`hermedomain`](generated/numpy.polynomial.hermite_e.hermedomain.html#numpy.polynomial.hermite_e.hermedomain
    "numpy.polynomial.hermite_e.hermedomain") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermezero`](generated/numpy.polynomial.hermite_e.hermezero.html#numpy.polynomial.hermite_e.hermezero
    "numpy.polynomial.hermite_e.hermezero") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermeone`](generated/numpy.polynomial.hermite_e.hermeone.html#numpy.polynomial.hermite_e.hermeone
    "numpy.polynomial.hermite_e.hermeone") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermex`](generated/numpy.polynomial.hermite_e.hermex.html#numpy.polynomial.hermite_e.hermex
    "numpy.polynomial.hermite_e.hermex") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: Arithmetic
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`hermeadd`](generated/numpy.polynomial.hermite_e.hermeadd.html#numpy.polynomial.hermite_e.hermeadd
    "numpy.polynomial.hermite_e.hermeadd")(c1, c2) | Add one Hermite series to another.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermesub`](generated/numpy.polynomial.hermite_e.hermesub.html#numpy.polynomial.hermite_e.hermesub
    "numpy.polynomial.hermite_e.hermesub")(c1, c2) | Subtract one Hermite series from
    another. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermemulx`](generated/numpy.polynomial.hermite_e.hermemulx.html#numpy.polynomial.hermite_e.hermemulx
    "numpy.polynomial.hermite_e.hermemulx")(c) | Multiply a Hermite series by x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermemul`](generated/numpy.polynomial.hermite_e.hermemul.html#numpy.polynomial.hermite_e.hermemul
    "numpy.polynomial.hermite_e.hermemul")(c1, c2) | Multiply one Hermite series by
    another. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermediv`](generated/numpy.polynomial.hermite_e.hermediv.html#numpy.polynomial.hermite_e.hermediv
    "numpy.polynomial.hermite_e.hermediv")(c1, c2) | Divide one Hermite series by
    another. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermepow`](generated/numpy.polynomial.hermite_e.hermepow.html#numpy.polynomial.hermite_e.hermepow
    "numpy.polynomial.hermite_e.hermepow")(c, pow[, maxpower]) | Raise a Hermite series
    to a power. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermeval`](generated/numpy.polynomial.hermite_e.hermeval.html#numpy.polynomial.hermite_e.hermeval
    "numpy.polynomial.hermite_e.hermeval")(x, c[, tensor]) | Evaluate an HermiteE
    series at points x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermeval2d`](generated/numpy.polynomial.hermite_e.hermeval2d.html#numpy.polynomial.hermite_e.hermeval2d
    "numpy.polynomial.hermite_e.hermeval2d")(x, y, c) | Evaluate a 2-D HermiteE series
    at points (x, y). |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermeval3d`](generated/numpy.polynomial.hermite_e.hermeval3d.html#numpy.polynomial.hermite_e.hermeval3d
    "numpy.polynomial.hermite_e.hermeval3d")(x, y, z, c) | Evaluate a 3-D Hermite_e
    series at points (x, y, z). |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermegrid2d`](generated/numpy.polynomial.hermite_e.hermegrid2d.html#numpy.polynomial.hermite_e.hermegrid2d
    "numpy.polynomial.hermite_e.hermegrid2d")(x, y, c) | Evaluate a 2-D HermiteE series
    on the Cartesian product of x and y. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermegrid3d`](generated/numpy.polynomial.hermite_e.hermegrid3d.html#numpy.polynomial.hermite_e.hermegrid3d
    "numpy.polynomial.hermite_e.hermegrid3d")(x, y, z, c) | Evaluate a 3-D HermiteE
    series on the Cartesian product of x, y, and z. |'
  prefs: []
  type: TYPE_TB
- en: Calculus
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`hermeder`](generated/numpy.polynomial.hermite_e.hermeder.html#numpy.polynomial.hermite_e.hermeder
    "numpy.polynomial.hermite_e.hermeder")(c[, m, scl, axis]) | Differentiate a Hermite_e
    series. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermeint`](generated/numpy.polynomial.hermite_e.hermeint.html#numpy.polynomial.hermite_e.hermeint
    "numpy.polynomial.hermite_e.hermeint")(c[, m, k, lbnd, scl, axis]) | Integrate
    a Hermite_e series. |'
  prefs: []
  type: TYPE_TB
- en: Misc Functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`hermefromroots`](generated/numpy.polynomial.hermite_e.hermefromroots.html#numpy.polynomial.hermite_e.hermefromroots
    "numpy.polynomial.hermite_e.hermefromroots")(roots) | Generate a HermiteE series
    with given roots. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermeroots`](generated/numpy.polynomial.hermite_e.hermeroots.html#numpy.polynomial.hermite_e.hermeroots
    "numpy.polynomial.hermite_e.hermeroots")(c) | Compute the roots of a HermiteE
    series. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermevander`](generated/numpy.polynomial.hermite_e.hermevander.html#numpy.polynomial.hermite_e.hermevander
    "numpy.polynomial.hermite_e.hermevander")(x, deg) | Pseudo-Vandermonde matrix
    of given degree. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermevander2d`](generated/numpy.polynomial.hermite_e.hermevander2d.html#numpy.polynomial.hermite_e.hermevander2d
    "numpy.polynomial.hermite_e.hermevander2d")(x, y, deg) | Pseudo-Vandermonde matrix
    of given degrees. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermevander3d`](generated/numpy.polynomial.hermite_e.hermevander3d.html#numpy.polynomial.hermite_e.hermevander3d
    "numpy.polynomial.hermite_e.hermevander3d")(x, y, z, deg) | Pseudo-Vandermonde
    matrix of given degrees. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermegauss`](generated/numpy.polynomial.hermite_e.hermegauss.html#numpy.polynomial.hermite_e.hermegauss
    "numpy.polynomial.hermite_e.hermegauss")(deg) | Gauss-HermiteE quadrature. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermeweight`](generated/numpy.polynomial.hermite_e.hermeweight.html#numpy.polynomial.hermite_e.hermeweight
    "numpy.polynomial.hermite_e.hermeweight")(x) | Weight function of the Hermite_e
    polynomials. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermecompanion`](generated/numpy.polynomial.hermite_e.hermecompanion.html#numpy.polynomial.hermite_e.hermecompanion
    "numpy.polynomial.hermite_e.hermecompanion")(c) | Return the scaled companion
    matrix of c. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermefit`](generated/numpy.polynomial.hermite_e.hermefit.html#numpy.polynomial.hermite_e.hermefit
    "numpy.polynomial.hermite_e.hermefit")(x, y, deg[, rcond, full, w]) | Least squares
    fit of Hermite series to data. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermetrim`](generated/numpy.polynomial.hermite_e.hermetrim.html#numpy.polynomial.hermite_e.hermetrim
    "numpy.polynomial.hermite_e.hermetrim")(c[, tol]) | Remove "small" "trailing"
    coefficients from a polynomial. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermeline`](generated/numpy.polynomial.hermite_e.hermeline.html#numpy.polynomial.hermite_e.hermeline
    "numpy.polynomial.hermite_e.hermeline")(off, scl) | Hermite series whose graph
    is a straight line. |'
  prefs: []
  type: TYPE_TB
- en: '| [`herme2poly`](generated/numpy.polynomial.hermite_e.herme2poly.html#numpy.polynomial.hermite_e.herme2poly
    "numpy.polynomial.hermite_e.herme2poly")(c) | Convert a Hermite series to a polynomial.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`poly2herme`](generated/numpy.polynomial.hermite_e.poly2herme.html#numpy.polynomial.hermite_e.poly2herme
    "numpy.polynomial.hermite_e.poly2herme")(pol) | Convert a polynomial to a Hermite
    series. |'
  prefs: []
  type: TYPE_TB
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[`numpy.polynomial`](routines.polynomials.package.html#module-numpy.polynomial
    "numpy.polynomial")'
  prefs: []
  type: TYPE_NORMAL
