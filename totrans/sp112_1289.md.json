["```py\nscipy.stats.binned_statistic_dd(sample, values, statistic='mean', bins=10, range=None, expand_binnumbers=False, binned_statistic_result=None)\n```", "```py\n>>> import numpy as np\n>>> from scipy import stats\n>>> import matplotlib.pyplot as plt\n>>> from mpl_toolkits.mplot3d import Axes3D \n```", "```py\n>>> mu = np.array([0., 1.])\n>>> sigma = np.array([[1., -0.5],[-0.5, 1.5]])\n>>> multinormal = stats.multivariate_normal(mu, sigma)\n>>> data = multinormal.rvs(size=600, random_state=235412)\n>>> data.shape\n(600, 2) \n```", "```py\n>>> N = 60\n>>> x = np.linspace(-3, 3, N)\n>>> y = np.linspace(-3, 4, N)\n>>> ret = stats.binned_statistic_dd(data, np.arange(600), bins=[x, y],\n...                                 statistic='count')\n>>> bincounts = ret.statistic \n```", "```py\n>>> dx = x[1] - x[0]\n>>> dy = y[1] - y[0]\n>>> x, y = np.meshgrid(x[:-1]+dx/2, y[:-1]+dy/2)\n>>> z = 0 \n```", "```py\n>>> bincounts = bincounts.ravel()\n>>> x = x.ravel()\n>>> y = y.ravel() \n```", "```py\n>>> fig = plt.figure()\n>>> ax = fig.add_subplot(111, projection='3d')\n>>> with np.errstate(divide='ignore'):   # silence random axes3d warning\n...     ax.bar3d(x, y, z, dx, dy, bincounts) \n```", "```py\n>>> ret2 = stats.binned_statistic_dd(data, -np.arange(600),\n...                                  binned_statistic_result=ret,\n...                                  statistic='mean') \n```"]