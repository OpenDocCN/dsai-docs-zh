- en: pandas.DataFrame.astype
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.astype.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.astype.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Cast a pandas object to a specified dtype `dtype`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype**str, data type, Series or Mapping of column name -> data type'
  prefs: []
  type: TYPE_NORMAL
- en: 'Use a str, numpy.dtype, pandas.ExtensionDtype or Python type to cast entire
    pandas object to the same type. Alternatively, use a mapping, e.g. {col: dtype,
    …}, where col is a column label and dtype is a numpy.dtype or Python type to cast
    one or more of the DataFrame’s columns to column-specific types.'
  prefs: []
  type: TYPE_NORMAL
- en: '**copy**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Return a copy when `copy=True` (be very careful setting `copy=False` as changes
    to values then may propagate to other pandas objects).
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: The copy keyword will change behavior in pandas 3.0. [Copy-on-Write](https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html)
    will be enabled by default, which means that all methods with a copy keyword will
    use a lazy copy mechanism to defer the copy and ignore the copy keyword. The copy
    keyword will be removed in a future version of pandas.
  prefs: []
  type: TYPE_NORMAL
- en: You can already get the future behavior and improvements through enabling copy
    on write `pd.options.mode.copy_on_write = True`
  prefs: []
  type: TYPE_NORMAL
- en: '**errors**{‘raise’, ‘ignore’}, default ‘raise’'
  prefs: []
  type: TYPE_NORMAL
- en: Control raising of exceptions on invalid data for provided dtype.
  prefs: []
  type: TYPE_NORMAL
- en: '`raise` : allow exceptions to be raised'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ignore` : suppress exceptions. On error return original object.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: same type as caller
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`to_datetime`](pandas.to_datetime.html#pandas.to_datetime "pandas.to_datetime")'
  prefs: []
  type: TYPE_NORMAL
- en: Convert argument to datetime.
  prefs: []
  type: TYPE_NORMAL
- en: '[`to_timedelta`](pandas.to_timedelta.html#pandas.to_timedelta "pandas.to_timedelta")'
  prefs: []
  type: TYPE_NORMAL
- en: Convert argument to timedelta.
  prefs: []
  type: TYPE_NORMAL
- en: '[`to_numeric`](pandas.to_numeric.html#pandas.to_numeric "pandas.to_numeric")'
  prefs: []
  type: TYPE_NORMAL
- en: Convert argument to a numeric type.
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.ndarray.astype`](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.astype.html#numpy.ndarray.astype
    "(in NumPy v1.26)")'
  prefs: []
  type: TYPE_NORMAL
- en: Cast a numpy array to a specified type.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 2.0.0: Using `astype` to convert from timezone-naive dtype
    to timezone-aware dtype will raise an exception. Use [`Series.dt.tz_localize()`](pandas.Series.dt.tz_localize.html#pandas.Series.dt.tz_localize
    "pandas.Series.dt.tz_localize") instead.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Create a DataFrame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Cast all columns to int32:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Cast col1 to int32 using a dictionary:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Create a series:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Convert to categorical type:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Convert to ordered categorical type with custom ordering:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Create a series of dates:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
