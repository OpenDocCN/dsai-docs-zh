- en: pandas.read_xml
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas.read_xml
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.read_xml.html](https://pandas.pydata.org/docs/reference/api/pandas.read_xml.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.read_xml.html](https://pandas.pydata.org/docs/reference/api/pandas.read_xml.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Read XML document into a [`DataFrame`](pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") object.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 将 XML 文档读取为 [`DataFrame`](pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    对象。
- en: New in version 1.3.0.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 自版本 1.3.0 起。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**path_or_buffer**str, path object, or file-like object'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**path_or_buffer**str、路径对象或类似文件的对象'
- en: String, path object (implementing `os.PathLike[str]`), or file-like object implementing
    a `read()` function. The string can be any valid XML string or a path. The string
    can further be a URL. Valid URL schemes include http, ftp, s3, and file.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 字符串、路径对象（实现 `os.PathLike[str]`）或实现 `read()` 函数的类似文件的对象。字符串可以是任何有效的 XML 字符串或路径。字符串还可以是
    URL。有效的 URL 方案包括 http、ftp、s3 和 file。
- en: 'Deprecated since version 2.1.0: Passing xml literal strings is deprecated.
    Wrap literal xml input in `io.StringIO` or `io.BytesIO` instead.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 自版本 2.1.0 起已弃用：传递 xml 文本字符串已弃用。请改用 `io.StringIO` 或 `io.BytesIO` 包装字面 xml 输入。
- en: '**xpath**str, optional, default ‘./*’'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**xpath**str，可选，默认为 ‘./*’'
- en: 'The `XPath` to parse required set of nodes for migration to [`DataFrame`](pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame").``XPath`` should return a collection of elements and not a
    single element. Note: The `etree` parser supports limited `XPath` expressions.
    For more complex `XPath`, use `lxml` which requires installation.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 用于迁移到 [`DataFrame`](pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    所需节点集的 `XPath`。``XPath`` 应返回一个元素集合，而不是单个元素。注意：`etree` 解析器支持有限的 `XPath` 表达式。对于更复杂的
    `XPath`，请使用需要安装的 `lxml`。
- en: '**namespaces**dict, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**namespaces**字典，可选'
- en: 'The namespaces defined in XML document as dicts with key being namespace prefix
    and value the URI. There is no need to include all namespaces in XML, only the
    ones used in `xpath` expression. Note: if XML document uses default namespace
    denoted as xmlns=’<URI>’ without a prefix, you must assign any temporary namespace
    prefix such as ‘doc’ to the URI in order to parse underlying nodes and/or attributes.
    For example,'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: XML 文档中定义的命名空间，以字典形式表示，键为命名空间前缀，值为 URI。在 XML 中不需要包含所有命名空间，只需要在 `xpath` 表达式中使用的命名空间。注意：如果
    XML 文档使用默认命名空间表示为 xmlns=’<URI>’ 而没有前缀，则必须为 URI 分配任何临时命名空间前缀，例如 ‘doc’，以解析底层节点和/或属性。例如，
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**elems_only**bool, optional, default False'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**elems_only**bool，可选，默认为 False'
- en: Parse only the child elements at the specified `xpath`. By default, all child
    elements and non-empty text nodes are returned.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 仅解析指定 `xpath` 处的子元素。默认情况下，返回所有子元素和非空文本节点。
- en: '**attrs_only**bool, optional, default False'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**attrs_only**bool，可选，默认为 False'
- en: Parse only the attributes at the specified `xpath`. By default, all attributes
    are returned.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 仅解析指定 `xpath` 处的属性。默认情况下，返回所有属性。
- en: '**names**list-like, optional'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**names**类似列表，可选'
- en: Column names for DataFrame of parsed XML data. Use this parameter to rename
    original element names and distinguish same named elements and attributes.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: DataFrame 中解析的 XML 数据的列名。使用此参数重命名原始元素名称，并区分相同名称的元素和属性。
- en: '**dtype**Type name or dict of column -> type, optional'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**dtype**类型名称或列 -> 类型的字典，可选'
- en: 'Data type for data or columns. E.g. {‘a’: np.float64, ‘b’: np.int32, ‘c’: ‘Int64’}
    Use str or object together with suitable na_values settings to preserve and not
    interpret dtype. If converters are specified, they will be applied INSTEAD of
    dtype conversion.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '数据或列的数据类型。例如 {‘a’: np.float64, ‘b’: np.int32, ‘c’: ‘Int64’} 使用 str 或 object
    以及适当的 na_values 设置来保留并不解释 dtype。如果指定了转换器，则将应用转换器而不是 dtype 转换。'
- en: New in version 1.5.0.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 自版本 1.5.0 起。
- en: '**converters**dict, optional'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**converters**字典，可选'
- en: Dict of functions for converting values in certain columns. Keys can either
    be integers or column labels.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 用于转换特定列中值的函数字典。键可以是整数或列标签。
- en: New in version 1.5.0.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 自版本 1.5.0 起。
- en: '**parse_dates**bool or list of int or names or list of lists or dict, default
    False'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**parse_dates**bool 或 int 或名称列表或列表的列表或字典，默认为 False'
- en: 'Identifiers to parse index or columns to datetime. The behavior is as follows:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 解析索引或列为日期时间的标识符。行为如下：
- en: boolean. If True -> try parsing the index.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 布尔值。如果为 True -> 尝试解析索引。
- en: list of int or names. e.g. If [1, 2, 3] -> try parsing columns 1, 2, 3 each
    as a separate date column.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: int 或名称列表。例如，如果 [1, 2, 3] -> 尝试将列 1、2、3 分别解析为单独的日期列。
- en: list of lists. e.g. If [[1, 3]] -> combine columns 1 and 3 and parse as a single
    date column.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表的列表。例如，如果 [[1, 3]] -> 结合列 1 和 3 并解析为单个日期列。
- en: 'dict, e.g. {‘foo’ : [1, 3]} -> parse columns 1, 3 as date and call result ‘foo’'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '字典，例如 {‘foo’ : [1, 3]} -> 将列 1、3 解析为日期并称结果为 ‘foo’。'
- en: New in version 1.5.0.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 新功能版本 1.5.0。
- en: '**encoding**str, optional, default ‘utf-8’'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**encoding** 字符串，可选，默认为 ‘utf-8’'
- en: Encoding of XML document.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: XML 文档的编码。
- en: '**parser**{‘lxml’,’etree’}, default ‘lxml’'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**parser** {‘lxml’、’etree’}，默认为 ‘lxml’'
- en: Parser module to use for retrieval of data. Only ‘lxml’ and ‘etree’ are supported.
    With ‘lxml’ more complex `XPath` searches and ability to use XSLT stylesheet are
    supported.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 用于检索数据的解析器模块。仅支持 ‘lxml’ 和 ‘etree’。使用 ‘lxml’ 可以支持更复杂的 `XPath` 搜索和使用 XSLT 样式表的能力。
- en: '**stylesheet**str, path object or file-like object'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**stylesheet** 字符串、路径对象或类似文件的对象'
- en: A URL, file-like object, or a raw string containing an XSLT script. This stylesheet
    should flatten complex, deeply nested XML documents for easier parsing. To use
    this feature you must have `lxml` module installed and specify ‘lxml’ as `parser`.
    The `xpath` must reference nodes of transformed XML document generated after XSLT
    transformation and not the original XML document. Only XSLT 1.0 scripts and not
    later versions is currently supported.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: URL、类似文件的对象或包含 XSLT 脚本的原始字符串。此样式表应将复杂的、深度嵌套的 XML 文档展平，以便更容易解析。要使用此功能，您必须安装 `lxml`
    模块，并将 ‘lxml’ 指定为 `parser`。`xpath` 必须引用经过 XSLT 转换生成的转换后的 XML 文档中的节点，而不是原始 XML 文档。目前仅支持
    XSLT 1.0 脚本，不支持更新版本。
- en: '**iterparse**dict, optional'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**iterparse** 字典，可选'
- en: 'The nodes or attributes to retrieve in iterparsing of XML document as a dict
    with key being the name of repeating element and value being list of elements
    or attribute names that are descendants of the repeated element. Note: If this
    option is used, it will replace `xpath` parsing and unlike `xpath`, descendants
    do not need to relate to each other but can exist any where in document under
    the repeating element. This memory- efficient method should be used for very large
    XML files (500MB, 1GB, or 5GB+). For example,'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: XML 文档的迭代解析中要检索的节点或属性，格式为字典，键为重复元素的名称，值为重复元素的后代元素或属性名称的列表。注意：如果使用了此选项，它将替换 `xpath`
    解析，而不像 `xpath` 那样，后代元素不需要相互关联，而可以存在于文档中重复元素的任何位置。这种内存高效的方法应用于非常大的 XML 文件（500MB、1GB
    或 5GB+）。例如，
- en: '[PRE2]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: New in version 1.5.0.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 新功能版本 1.5.0。
- en: '**compression**str or dict, default ‘infer’'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**compression** 字符串或字典，默认为 ‘infer’'
- en: 'For on-the-fly decompression of on-disk data. If ‘infer’ and ‘path_or_buffer’
    is path-like, then detect compression from the following extensions: ‘.gz’, ‘.bz2’,
    ‘.zip’, ‘.xz’, ‘.zst’, ‘.tar’, ‘.tar.gz’, ‘.tar.xz’ or ‘.tar.bz2’ (otherwise no
    compression). If using ‘zip’ or ‘tar’, the ZIP file must contain only one data
    file to be read in. Set to `None` for no decompression. Can also be a dict with
    key `''method''` set to one of {`''zip''`, `''gzip''`, `''bz2''`, `''zstd''`,
    `''xz''`, `''tar''`} and other key-value pairs are forwarded to `zipfile.ZipFile`,
    `gzip.GzipFile`, `bz2.BZ2File`, `zstandard.ZstdDecompressor`, `lzma.LZMAFile`
    or `tarfile.TarFile`, respectively. As an example, the following could be passed
    for Zstandard decompression using a custom compression dictionary: `compression={''method'':
    ''zstd'', ''dict_data'': my_compression_dict}`.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '用于在磁盘上的数据上进行即时解压缩。如果 ‘infer’ 并且 ‘path_or_buffer’ 是类似路径的，则从以下扩展名检测压缩：‘.gz’、‘.bz2’、‘.zip’、‘.xz’、‘.zst’、‘.tar’、‘.tar.gz’、‘.tar.xz’
    或 ‘.tar.bz2’（否则不压缩）。如果使用 ‘zip’ 或 ‘tar’，ZIP 文件必须只包含一个要读取的数据文件。设置为 `None` 不进行解压缩。也可以是一个字典，键为
    `''method''`，设置为其中之一 {`''zip''`、`''gzip''`、`''bz2''`、`''zstd''`、`''xz''`、`''tar''`}，其他键值对转发到
    `zipfile.ZipFile`、`gzip.GzipFile`、`bz2.BZ2File`、`zstandard.ZstdDecompressor`、`lzma.LZMAFile`
    或 `tarfile.TarFile`。例如，可以通过自定义压缩字典传递以下内容以进行 Zstandard 解压缩：`compression={''method'':
    ''zstd'', ''dict_data'': my_compression_dict}`。'
- en: 'New in version 1.5.0: Added support for .tar files.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 新功能版本 1.5.0：增加了对 .tar 文件的支持。
- en: 'Changed in version 1.4.0: Zstandard support.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 版本 1.4.0 中的更改：Zstandard 支持。
- en: '**storage_options**dict, optional'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**storage_options** 字典，可选'
- en: Extra options that make sense for a particular storage connection, e.g. host,
    port, username, password, etc. For HTTP(S) URLs the key-value pairs are forwarded
    to `urllib.request.Request` as header options. For other URLs (e.g. starting with
    “s3://”, and “gcs://”) the key-value pairs are forwarded to `fsspec.open`. Please
    see `fsspec` and `urllib` for more details, and for more examples on storage options
    refer [here](https://pandas.pydata.org/docs/user_guide/io.html?highlight=storage_options#reading-writing-remote-files).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 适用于特定存储连接的额外选项，例如主机、端口、用户名、密码等。对于HTTP(S) URL，键值对将作为标头选项转发给`urllib.request.Request`。对于其他URL（例如以“s3://”和“gcs://”开头的URL），键值对将转发给`fsspec.open`。请参阅`fsspec`和`urllib`以获取更多详细信息，并参考[此处](https://pandas.pydata.org/docs/user_guide/io.html?highlight=storage_options#reading-writing-remote-files)中的存储选项示例。
- en: '**dtype_backend**{‘numpy_nullable’, ‘pyarrow’}, default ‘numpy_nullable’'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**dtype_backend**{‘numpy_nullable’, ‘pyarrow’}，默认为‘numpy_nullable’'
- en: 'Back-end data type applied to the resultant [`DataFrame`](pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") (still experimental). Behaviour is as follows:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 应用于生成的[`DataFrame`](pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")的后端数据类型（仍处于实验阶段）。行为如下：
- en: '`"numpy_nullable"`: returns nullable-dtype-backed [`DataFrame`](pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") (default).'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"numpy_nullable"`：返回支持可空dtype的[`DataFrame`](pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")（默认）。'
- en: '`"pyarrow"`: returns pyarrow-backed nullable [`ArrowDtype`](pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") DataFrame.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"pyarrow"`：返回由pyarrow支持的可空[`ArrowDtype`](pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") DataFrame。'
- en: New in version 2.0.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 版本2.0中的新功能。
- en: 'Returns:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: df
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: df
- en: A DataFrame.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 一个DataFrame。
- en: See also
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`read_json`](pandas.read_json.html#pandas.read_json "pandas.read_json")'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[`read_json`](pandas.read_json.html#pandas.read_json "pandas.read_json")'
- en: Convert a JSON string to pandas object.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 将JSON字符串转换为pandas对象。
- en: '[`read_html`](pandas.read_html.html#pandas.read_html "pandas.read_html")'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[`read_html`](pandas.read_html.html#pandas.read_html "pandas.read_html")'
- en: Read HTML tables into a list of DataFrame objects.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 将HTML表格读入DataFrame对象列表。
- en: Notes
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This method is best designed to import shallow XML documents in following format
    which is the ideal fit for the two-dimensions of a `DataFrame` (row by column).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法最适合导入以下格式的浅层XML文档，这是`DataFrame`（按行列）的理想适配。
- en: '[PRE3]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: As a file format, XML documents can be designed any way including layout of
    elements and attributes as long as it conforms to W3C specifications. Therefore,
    this method is a convenience handler for a specific flatter design and not all
    possible XML structures.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 作为文件格式，XML文档可以以任何方式设计，包括元素和属性的布局，只要符合W3C规范即可。因此，此方法是特定扁平设计的便利处理程序，而不是所有可能的XML结构。
- en: However, for more complex XML documents, `stylesheet` allows you to temporarily
    redesign original document with XSLT (a special purpose language) for a flatter
    version for migration to a DataFrame.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，对于更复杂的XML文档，`stylesheet`允许您使用XSLT（一种特殊用途语言）临时重新设计原始文档，以便迁移到DataFrame的扁平版本。
- en: This function will *always* return a single [`DataFrame`](pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or raise exceptions due to issues with XML document, `xpath`,
    or other parameters.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数将*始终*返回单个[`DataFrame`](pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")或由于XML文档、`xpath`或其他参数问题而引发异常。
- en: See the [read_xml documentation in the IO section of the docs](../../user_guide/io.html#io-read-xml)
    for more information in using this method to parse XML files to DataFrames.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 有关使用此方法将XML文件解析为DataFrame的更多信息，请参阅文档中IO部分的[read_xml文档](../../user_guide/io.html#io-read-xml)。
- en: Examples
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE4]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
