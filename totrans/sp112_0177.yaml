- en: scipy.interpolate.Rbf
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.Rbf.html#scipy.interpolate.Rbf](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.Rbf.html#scipy.interpolate.Rbf)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: A class for radial basis function interpolation of functions from N-D scattered
    data to an M-D domain.
  prefs: []
  type: TYPE_NORMAL
- en: Legacy
  prefs: []
  type: TYPE_NORMAL
- en: This class is considered legacy and will no longer receive updates. This could
    also mean it will be removed in future SciPy versions. [`Rbf`](#scipy.interpolate.Rbf
    "scipy.interpolate.Rbf") is legacy code, for new usage please use [`RBFInterpolator`](scipy.interpolate.RBFInterpolator.html#scipy.interpolate.RBFInterpolator
    "scipy.interpolate.RBFInterpolator") instead.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '***args**arrays'
  prefs: []
  type: TYPE_NORMAL
- en: x, y, z, …, d, where x, y, z, … are the coordinates of the nodes and d is the
    array of values at the nodes
  prefs: []
  type: TYPE_NORMAL
- en: '**function**str or callable, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'The radial basis function, based on the radius, r, given by the norm (default
    is Euclidean distance); the default is ‘multiquadric’:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: If callable, then it must take 2 arguments (self, r). The epsilon parameter
    will be available as self.epsilon. Other keyword arguments passed in will be available
    as well.
  prefs: []
  type: TYPE_NORMAL
- en: '**epsilon**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Adjustable constant for gaussian or multiquadrics functions - defaults to approximate
    average distance between nodes (which is a good start).
  prefs: []
  type: TYPE_NORMAL
- en: '**smooth**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Values greater than zero increase the smoothness of the approximation. 0 is
    for interpolation (default), the function will always go through the nodal points
    in this case.
  prefs: []
  type: TYPE_NORMAL
- en: '**norm**str, callable, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'A function that returns the ‘distance’ between two points, with inputs as arrays
    of positions (x, y, z, …), and an output as an array of distance. E.g., the default:
    ‘euclidean’, such that the result is a matrix of the distances from each point
    in `x1` to each point in `x2`. For more options, see documentation of *scipy.spatial.distances.cdist*.'
  prefs: []
  type: TYPE_NORMAL
- en: '**mode**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Mode of the interpolation, can be ‘1-D’ (default) or ‘N-D’. When it is ‘1-D’
    the data *d* will be considered as 1-D and flattened internally. When it is ‘N-D’
    the data *d* is assumed to be an array of shape (n_samples, m), where m is the
    dimension of the target domain.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`RBFInterpolator`](scipy.interpolate.RBFInterpolator.html#scipy.interpolate.RBFInterpolator
    "scipy.interpolate.RBFInterpolator")'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '**N**int'
  prefs: []
  type: TYPE_NORMAL
- en: The number of data points (as determined by the input arrays).
  prefs: []
  type: TYPE_NORMAL
- en: '**di**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The 1-D array of data values at each of the data coordinates *xi*.
  prefs: []
  type: TYPE_NORMAL
- en: '**xi**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The 2-D array of data coordinates.
  prefs: []
  type: TYPE_NORMAL
- en: '**function**str or callable'
  prefs: []
  type: TYPE_NORMAL
- en: The radial basis function. See description under Parameters.
  prefs: []
  type: TYPE_NORMAL
- en: '**epsilon**float'
  prefs: []
  type: TYPE_NORMAL
- en: Parameter used by gaussian or multiquadrics functions. See Parameters.
  prefs: []
  type: TYPE_NORMAL
- en: '**smooth**float'
  prefs: []
  type: TYPE_NORMAL
- en: Smoothing parameter. See description under Parameters.
  prefs: []
  type: TYPE_NORMAL
- en: '**norm**str or callable'
  prefs: []
  type: TYPE_NORMAL
- en: The distance function. See description under Parameters.
  prefs: []
  type: TYPE_NORMAL
- en: '**mode**str'
  prefs: []
  type: TYPE_NORMAL
- en: Mode of the interpolation. See description under Parameters.
  prefs: []
  type: TYPE_NORMAL
- en: '**nodes**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: A 1-D array of node values for the interpolation.
  prefs: []
  type: TYPE_NORMAL
- en: '**A**internal property, do not use'
  prefs: []
  type: TYPE_NORMAL
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`__call__`](scipy.interpolate.Rbf.__call__.html#scipy.interpolate.Rbf.__call__
    "scipy.interpolate.Rbf.__call__")(*args) | Call self as a function. |'
  prefs: []
  type: TYPE_TB
