- en: scipy.stats.ppcc_plot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.ppcc_plot.html#scipy.stats.ppcc_plot](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.ppcc_plot.html#scipy.stats.ppcc_plot)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Calculate and optionally plot probability plot correlation coefficient.
  prefs: []
  type: TYPE_NORMAL
- en: The probability plot correlation coefficient (PPCC) plot can be used to determine
    the optimal shape parameter for a one-parameter family of distributions. It cannot
    be used for distributions without shape parameters (like the normal distribution)
    or with multiple shape parameters.
  prefs: []
  type: TYPE_NORMAL
- en: By default a Tukey-Lambda distribution (*stats.tukeylambda*) is used. A Tukey-Lambda
    PPCC plot interpolates from long-tailed to short-tailed distributions via an approximately
    normal one, and is therefore particularly useful in practice.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input array.
  prefs: []
  type: TYPE_NORMAL
- en: '**a, b**scalar'
  prefs: []
  type: TYPE_NORMAL
- en: Lower and upper bounds of the shape parameter to use.
  prefs: []
  type: TYPE_NORMAL
- en: '**dist**str or stats.distributions instance, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Distribution or distribution function name. Objects that look enough like a
    stats.distributions instance (i.e. they have a `ppf` method) are also accepted.
    The default is `'tukeylambda'`.
  prefs: []
  type: TYPE_NORMAL
- en: '**plot**object, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If given, plots PPCC against the shape parameter. *plot* is an object that has
    to have methods “plot” and “text”. The [`matplotlib.pyplot`](https://matplotlib.org/stable/api/pyplot_summary.html#module-matplotlib.pyplot
    "(in Matplotlib v3.8.2)") module or a Matplotlib Axes object can be used, or a
    custom object with the same methods. Default is None, which means that no plot
    is created.
  prefs: []
  type: TYPE_NORMAL
- en: '**N**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Number of points on the horizontal axis (equally distributed from *a* to *b*).
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**svals**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The shape values for which *ppcc* was calculated.
  prefs: []
  type: TYPE_NORMAL
- en: '**ppcc**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The calculated probability plot correlation coefficient values.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`ppcc_max`](scipy.stats.ppcc_max.html#scipy.stats.ppcc_max "scipy.stats.ppcc_max"),
    [`probplot`](scipy.stats.probplot.html#scipy.stats.probplot "scipy.stats.probplot"),
    [`boxcox_normplot`](scipy.stats.boxcox_normplot.html#scipy.stats.boxcox_normplot
    "scipy.stats.boxcox_normplot"), [`tukeylambda`](scipy.stats.tukeylambda.html#scipy.stats.tukeylambda
    "scipy.stats.tukeylambda")'
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: J.J. Filliben, “The Probability Plot Correlation Coefficient Test for Normality”,
    Technometrics, Vol. 17, pp. 111-117, 1975.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'First we generate some random data from a Weibull distribution with shape parameter
    2.5, and plot the histogram of the data:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Take a look at the histogram of the data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-stats-ppcc_plot-1_00_00.png](../Images/8ee122320adcaf55c6caf8719a8262c7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now we explore this data with a PPCC plot as well as the related probability
    plot and Box-Cox normplot. A red line is drawn where we expect the PPCC value
    to be maximal (at the shape parameter `c` used above):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-stats-ppcc_plot-1_01_00.png](../Images/b2d4f3c675bb6099ca7e443b8af83e89.png)'
  prefs: []
  type: TYPE_IMG
