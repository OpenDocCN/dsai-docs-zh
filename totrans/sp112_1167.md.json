["```py\nscipy.stats.laplace_asymmetric = <scipy.stats._continuous_distns.laplace_asymmetric_gen object>\n```", "```py\n>>> import numpy as np\n>>> from scipy.stats import laplace_asymmetric\n>>> import matplotlib.pyplot as plt\n>>> fig, ax = plt.subplots(1, 1) \n```", "```py\n>>> kappa = 2\n>>> mean, var, skew, kurt = laplace_asymmetric.stats(kappa, moments='mvsk') \n```", "```py\n>>> x = np.linspace(laplace_asymmetric.ppf(0.01, kappa),\n...                 laplace_asymmetric.ppf(0.99, kappa), 100)\n>>> ax.plot(x, laplace_asymmetric.pdf(x, kappa),\n...        'r-', lw=5, alpha=0.6, label='laplace_asymmetric pdf') \n```", "```py\n>>> rv = laplace_asymmetric(kappa)\n>>> ax.plot(x, rv.pdf(x), 'k-', lw=2, label='frozen pdf') \n```", "```py\n>>> vals = laplace_asymmetric.ppf([0.001, 0.5, 0.999], kappa)\n>>> np.allclose([0.001, 0.5, 0.999], laplace_asymmetric.cdf(vals, kappa))\nTrue \n```", "```py\n>>> r = laplace_asymmetric.rvs(kappa, size=1000) \n```", "```py\n>>> ax.hist(r, density=True, bins='auto', histtype='stepfilled', alpha=0.2)\n>>> ax.set_xlim([x[0], x[-1]])\n>>> ax.legend(loc='best', frameon=False)\n>>> plt.show() \n```"]