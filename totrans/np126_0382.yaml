- en: numpy.reshape
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.reshape
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.reshape.html](https://numpy.org/doc/1.26/reference/generated/numpy.reshape.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.reshape.html](https://numpy.org/doc/1.26/reference/generated/numpy.reshape.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Gives a new shape to an array without changing its data.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 不改变数据的情况下给数组赋予新形状。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a**array_like'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**array_like'
- en: Array to be reshaped.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 要被重塑的数组。
- en: '**newshape**int or tuple of ints'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**newshape**整数或整数元组'
- en: The new shape should be compatible with the original shape. If an integer, then
    the result will be a 1-D array of that length. One shape dimension can be -1\.
    In this case, the value is inferred from the length of the array and remaining
    dimensions.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 新形状应兼容原始形状。如果是整数，则结果将是该长度的 1-D 数组。一个形状维度可以是-1。在这种情况下，该值从数组的长度和剩余维度中推断出。
- en: '**order**{‘C’, ‘F’, ‘A’}, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**order**{‘C’，‘F’，‘A’}，可选'
- en: Read the elements of *a* using this index order, and place the elements into
    the reshaped array using this index order. ‘C’ means to read / write the elements
    using C-like index order, with the last axis index changing fastest, back to the
    first axis index changing slowest. ‘F’ means to read / write the elements using
    Fortran-like index order, with the first index changing fastest, and the last
    index changing slowest. Note that the ‘C’ and ‘F’ options take no account of the
    memory layout of the underlying array, and only refer to the order of indexing.
    ‘A’ means to read / write the elements in Fortran-like index order if *a* is Fortran
    *contiguous* in memory, C-like order otherwise.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此索引顺序读取*a*的元素，并使用此索引顺序将元素放入重塑后的数组中。‘C’表示使用类似C的索引顺序读取/写入元素，最后一个轴索引最快变化，回到第一个轴索引最慢变化的顺序。‘F’表示使用类似Fortran的索引顺序读取/写入元素，第一个索引最快变化，最后一个索引最慢变化。请注意，‘C’和‘F’选项不考虑底层数组的内存布局，只与索引顺序有关。‘A’表示如果*a*在内存中是Fortran
    *连续*的，则按照类似Fortran的索引顺序读取/写入元素，否则按照类似C的顺序。
- en: 'Returns:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**reshaped_array**ndarray'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**reshaped_array**ndarray'
- en: This will be a new view object if possible; otherwise, it will be a copy. Note
    there is no guarantee of the *memory layout* (C- or Fortran- contiguous) of the
    returned array.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果可能的话，这将是一个新的视图对象；否则将是一个副本。请注意，不能保证返回数组的*内存布局*（C - 或 Fortran - 连续）。
- en: See also
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`ndarray.reshape`](numpy.ndarray.reshape.html#numpy.ndarray.reshape "numpy.ndarray.reshape")'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ndarray.reshape`](numpy.ndarray.reshape.html#numpy.ndarray.reshape "numpy.ndarray.reshape")'
- en: Equivalent method.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 等效方法。
- en: Notes
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: It is not always possible to change the shape of an array without copying the
    data.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 不总是能够在不复制数据的情况下更改数组的形状。
- en: 'The *order* keyword gives the index ordering both for *fetching* the values
    from *a*, and then *placing* the values into the output array. For example, let’s
    say you have an array:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**order**关键字用于指定从*a*中获取值和将这些值放入输出数组时的索引顺序。例如，假设你有一个数组：'
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You can think of reshaping as first raveling the array (using the given index
    order), then inserting the elements from the raveled array into the new array
    using the same kind of index ordering as was used for the raveling.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 可以将重塑看作首先对数组进行拉平（使用给定的索引顺序），然后使用与用于拉平的相同类型的索引顺序将来自已拉平数组的元素插入到新数组中。
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Examples
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
