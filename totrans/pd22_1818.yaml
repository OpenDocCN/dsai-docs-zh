- en: pandas.api.extensions.register_dataframe_accessor
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.api.extensions.register_dataframe_accessor.html](https://pandas.pydata.org/docs/reference/api/pandas.api.extensions.register_dataframe_accessor.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Register a custom accessor on DataFrame objects.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**name**str'
  prefs: []
  type: TYPE_NORMAL
- en: Name under which the accessor should be registered. A warning is issued if this
    name conflicts with a preexisting attribute.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: callable
  prefs: []
  type: TYPE_NORMAL
- en: A class decorator.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`register_dataframe_accessor`](#pandas.api.extensions.register_dataframe_accessor
    "pandas.api.extensions.register_dataframe_accessor")'
  prefs: []
  type: TYPE_NORMAL
- en: Register a custom accessor on DataFrame objects.
  prefs: []
  type: TYPE_NORMAL
- en: '[`register_series_accessor`](pandas.api.extensions.register_series_accessor.html#pandas.api.extensions.register_series_accessor
    "pandas.api.extensions.register_series_accessor")'
  prefs: []
  type: TYPE_NORMAL
- en: Register a custom accessor on Series objects.
  prefs: []
  type: TYPE_NORMAL
- en: '[`register_index_accessor`](pandas.api.extensions.register_index_accessor.html#pandas.api.extensions.register_index_accessor
    "pandas.api.extensions.register_index_accessor")'
  prefs: []
  type: TYPE_NORMAL
- en: Register a custom accessor on Index objects.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: When accessed, your accessor will be initialized with the pandas object the
    user is interacting with. So the signature must be
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: For consistency with pandas methods, you should raise an `AttributeError` if
    the data passed to your accessor has an incorrect dtype.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'In your library code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Back in an interactive IPython session:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_BQ
  type: TYPE_PRE
