- en: scipy.integrate.complex_ode
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.integrate.complex_ode
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.complex_ode.html#scipy.integrate.complex_ode](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.complex_ode.html#scipy.integrate.complex_ode)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.complex_ode.html#scipy.integrate.complex_ode](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.complex_ode.html#scipy.integrate.complex_ode)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: A wrapper of ode for complex systems.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 用于复杂系统的 ode 的包装器。
- en: This functions similarly as [`ode`](scipy.integrate.ode.html#scipy.integrate.ode
    "scipy.integrate.ode"), but re-maps a complex-valued equation system to a real-valued
    one before using the integrators.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数类似于[`ode`](scipy.integrate.ode.html#scipy.integrate.ode "scipy.integrate.ode")，但在使用积分器之前，将复值方程系统重新映射为实值方程系统。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**f**callable `f(t, y, *f_args)`'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**f**可调用函数 `f(t, y, *f_args)`'
- en: Rhs of the equation. t is a scalar, `y.shape == (n,)`. `f_args` is set by calling
    `set_f_params(*args)`.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 方程的右手边。t 是标量，`y.shape == (n,)`。通过调用 `set_f_params(*args)` 设置 `f_args`。
- en: '**jac**callable `jac(t, y, *jac_args)`'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**jac**可调用函数 `jac(t, y, *jac_args)`'
- en: Jacobian of the rhs, `jac[i,j] = d f[i] / d y[j]`. `jac_args` is set by calling
    `set_f_params(*args)`.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 方程的雅可比矩阵，`jac[i,j] = d f[i] / d y[j]`。通过调用 `set_f_params(*args)` 设置 `jac_args`。
- en: Examples
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: For usage examples, see [`ode`](scipy.integrate.ode.html#scipy.integrate.ode
    "scipy.integrate.ode").
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 有关用法示例，请参见[`ode`](scipy.integrate.ode.html#scipy.integrate.ode "scipy.integrate.ode")。
- en: 'Attributes:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 属性：
- en: '**t**float'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**t**浮点数'
- en: Current time.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当前时间。
- en: '**y**ndarray'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**y**数组'
- en: Current variable values.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当前变量值。
- en: Methods
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`get_return_code`](scipy.integrate.complex_ode.get_return_code.html#scipy.integrate.complex_ode.get_return_code
    "scipy.integrate.complex_ode.get_return_code")() | Extracts the return code for
    the integration to enable better control if the integration fails. |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [`get_return_code`](scipy.integrate.complex_ode.get_return_code.html#scipy.integrate.complex_ode.get_return_code
    "scipy.integrate.complex_ode.get_return_code")() | 提取积分的返回代码，以便在积分失败时更好地控制。 |'
- en: '| [`integrate`](scipy.integrate.complex_ode.integrate.html#scipy.integrate.complex_ode.integrate
    "scipy.integrate.complex_ode.integrate")(t[, step, relax]) | Find y=y(t), set
    y as an initial condition, and return y. |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [`integrate`](scipy.integrate.complex_ode.integrate.html#scipy.integrate.complex_ode.integrate
    "scipy.integrate.complex_ode.integrate")(t[, step, relax]) | 找到 y=y(t)，将 y 设置为初始条件，并返回
    y。 |'
- en: '| [`set_f_params`](scipy.integrate.complex_ode.set_f_params.html#scipy.integrate.complex_ode.set_f_params
    "scipy.integrate.complex_ode.set_f_params")(*args) | Set extra parameters for
    user-supplied function f. |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`set_f_params`](scipy.integrate.complex_ode.set_f_params.html#scipy.integrate.complex_ode.set_f_params
    "scipy.integrate.complex_ode.set_f_params")(*args) | 为用户提供的函数 f 设置额外参数。 |'
- en: '| [`set_initial_value`](scipy.integrate.complex_ode.set_initial_value.html#scipy.integrate.complex_ode.set_initial_value
    "scipy.integrate.complex_ode.set_initial_value")(y[, t]) | Set initial conditions
    y(t) = y. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`set_initial_value`](scipy.integrate.complex_ode.set_initial_value.html#scipy.integrate.complex_ode.set_initial_value
    "scipy.integrate.complex_ode.set_initial_value")(y[, t]) | 设置初始条件 y(t) = y。 |'
- en: '| [`set_integrator`](scipy.integrate.complex_ode.set_integrator.html#scipy.integrate.complex_ode.set_integrator
    "scipy.integrate.complex_ode.set_integrator")(name, **integrator_params) | Set
    integrator by name. |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [`set_integrator`](scipy.integrate.complex_ode.set_integrator.html#scipy.integrate.complex_ode.set_integrator
    "scipy.integrate.complex_ode.set_integrator")(name, **integrator_params) | 按名称设置积分器。
    |'
- en: '| [`set_jac_params`](scipy.integrate.complex_ode.set_jac_params.html#scipy.integrate.complex_ode.set_jac_params
    "scipy.integrate.complex_ode.set_jac_params")(*args) | Set extra parameters for
    user-supplied function jac. |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [`set_jac_params`](scipy.integrate.complex_ode.set_jac_params.html#scipy.integrate.complex_ode.set_jac_params
    "scipy.integrate.complex_ode.set_jac_params")(*args) | 为用户提供的函数 jac 设置额外参数。 |'
- en: '| [`set_solout`](scipy.integrate.complex_ode.set_solout.html#scipy.integrate.complex_ode.set_solout
    "scipy.integrate.complex_ode.set_solout")(solout) | Set callable to be called
    at every successful integration step. |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [`set_solout`](scipy.integrate.complex_ode.set_solout.html#scipy.integrate.complex_ode.set_solout
    "scipy.integrate.complex_ode.set_solout")(solout) | 设置在每次成功积分步骤时调用的可调用函数。 |'
- en: '| [`successful`](scipy.integrate.complex_ode.successful.html#scipy.integrate.complex_ode.successful
    "scipy.integrate.complex_ode.successful")() | Check if integration was successful.
    |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [`successful`](scipy.integrate.complex_ode.successful.html#scipy.integrate.complex_ode.successful
    "scipy.integrate.complex_ode.successful")() | 检查积分是否成功。 |'
