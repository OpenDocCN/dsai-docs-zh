- en: numpy.seterrcall
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.seterrcall.html](https://numpy.org/doc/1.26/reference/generated/numpy.seterrcall.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Set the floating-point error callback function or log object.
  prefs: []
  type: TYPE_NORMAL
- en: There are two ways to capture floating-point error messages. The first is to
    set the error-handler to ‘call’, using [`seterr`](numpy.seterr.html#numpy.seterr
    "numpy.seterr"). Then, set the function to call using this function.
  prefs: []
  type: TYPE_NORMAL
- en: The second is to set the error-handler to ‘log’, using [`seterr`](numpy.seterr.html#numpy.seterr
    "numpy.seterr"). Floating-point errors then trigger a call to the ‘write’ method
    of the provided object.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**func**callable f(err, flag) or object with write method'
  prefs: []
  type: TYPE_NORMAL
- en: Function to call upon floating-point errors (‘call’-mode) or object whose ‘write’
    method is used to log such message (‘log’-mode).
  prefs: []
  type: TYPE_NORMAL
- en: 'The call function takes two arguments. The first is a string describing the
    type of error (such as “divide by zero”, “overflow”, “underflow”, or “invalid
    value”), and the second is the status flag. The flag is a byte, whose four least-significant
    bits indicate the type of error, one of “divide”, “over”, “under”, “invalid”:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: In other words, `flags = divide + 2*over + 4*under + 8*invalid`.
  prefs: []
  type: TYPE_NORMAL
- en: If an object is provided, its write method should take one argument, a string.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**h**callable, log instance or None'
  prefs: []
  type: TYPE_NORMAL
- en: The old error handler.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`seterr`](numpy.seterr.html#numpy.seterr "numpy.seterr"), [`geterr`](numpy.geterr.html#numpy.geterr
    "numpy.geterr"), [`geterrcall`](numpy.geterrcall.html#numpy.geterrcall "numpy.geterrcall")'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Callback upon error:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Log error message:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
