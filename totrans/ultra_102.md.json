["```py\n`conda  create  --name  ultralytics-env  python=3.8  -y` \n```", "```py\n`conda  activate  ultralytics-env` \n```", "```py\n`conda  install  -c  conda-forge  ultralytics` \n```", "```py\n`conda  install  -c  pytorch  -c  nvidia  -c  conda-forge  pytorch  torchvision  pytorch-cuda=11.8  ultralytics` \n```", "```py\n`from ultralytics import YOLO  model = YOLO(\"yolov8n.pt\")  # initialize model results = model(\"path/to/image.jpg\")  # perform inference results[0].show()  # display results for the first image` \n```", "```py\n`# Set image name as a variable t=ultralytics/ultralytics:latest-conda  # Pull the latest Ultralytics image from Docker Hub sudo  docker  pull  $t` \n```", "```py\n`# Run the Ultralytics image in a container with GPU support sudo  docker  run  -it  --ipc=host  --gpus  all  $t  # all GPUs sudo  docker  run  -it  --ipc=host  --gpus  '\"device=2,3\"'  $t  # specify GPUs` \n```", "```py\n    `conda  install  conda-libmamba-solver` \n    ```", "```py\n    `conda  config  --set  solver  libmamba` \n    ```", "```py\n`conda  create  --name  ultralytics-env  python=3.8  -y` \n```", "```py\n`conda  activate  ultralytics-env` \n```", "```py\n`conda  install  -c  conda-forge  ultralytics` \n```", "```py\n`conda  install  -c  pytorch  -c  nvidia  -c  conda-forge  pytorch  torchvision  pytorch-cuda=11.8  ultralytics` \n```", "```py\n`sudo  docker  pull  ultralytics/ultralytics:latest-conda sudo  docker  run  -it  --ipc=host  --gpus  all  ultralytics/ultralytics:latest-conda` \n```", "```py\n`conda  install  conda-libmamba-solver` \n```", "```py\n`conda  config  --set  solver  libmamba` \n```"]