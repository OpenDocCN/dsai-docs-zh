- en: VisionEye View Object Mapping using Ultralytics YOLOv8 ðŸš€
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: åŽŸæ–‡ï¼š[`docs.ultralytics.com/guides/vision-eye/`](https://docs.ultralytics.com/guides/vision-eye/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: What is VisionEye Object Mapping?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Ultralytics YOLOv8](https://github.com/ultralytics/ultralytics/) VisionEye
    offers the capability for computers to identify and pinpoint objects, simulating
    the observational precision of the human eye. This functionality enables computers
    to discern and focus on specific objects, much like the way the human eye observes
    details from a particular viewpoint.'
  prefs: []
  type: TYPE_NORMAL
- en: Samples
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| VisionEye View | VisionEye View With Object Tracking | VisionEye View With
    Distance Calculation |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| ![VisionEye View Object Mapping using Ultralytics YOLOv8](img/660722b7ba935331fcc1384805fbdbb1.png)
    | ![VisionEye View Object Mapping with Object Tracking using Ultralytics YOLOv8](img/b4363e33522e4f87d96966876ac3fbdc.png)
    | ![VisionEye View with Distance Calculation using Ultralytics YOLOv8](img/effe982fdcf6558076f275d871662324.png)
    |'
  prefs: []
  type: TYPE_TB
- en: '| VisionEye View Object Mapping using Ultralytics YOLOv8 | VisionEye View Object
    Mapping with Object Tracking using Ultralytics YOLOv8 | VisionEye View with Distance
    Calculation using Ultralytics YOLOv8 |'
  prefs: []
  type: TYPE_TB
- en: VisionEye Object Mapping using YOLOv8
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '`visioneye` Arguments'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| Name | Type | Default | Description |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `color` | `tuple` | `(235, 219, 11)` | Line and object centroid color |'
  prefs: []
  type: TYPE_TB
- en: '| `pin_color` | `tuple` | `(255, 0, 255)` | VisionEye pinpoint color |'
  prefs: []
  type: TYPE_TB
- en: Note
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For any inquiries, feel free to post your questions in the [Ultralytics Issue
    Section](https://github.com/ultralytics/ultralytics/issues/new/choose) or the
    discussion section mentioned below.
  prefs: []
  type: TYPE_NORMAL
- en: FAQ
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: How do I start using VisionEye Object Mapping with Ultralytics YOLOv8?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To start using VisionEye Object Mapping with Ultralytics YOLOv8, first, you''ll
    need to install the Ultralytics YOLO package via pip. Then, you can use the sample
    code provided in the documentation to set up object detection with VisionEye.
    Here''s a simple example to get you started:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: What are the key features of VisionEye's object tracking capability using Ultralytics
    YOLOv8?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'VisionEye''s object tracking with Ultralytics YOLOv8 allows users to follow
    the movement of objects within a video frame. Key features include:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Real-Time Object Tracking**: Keeps up with objects as they move.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Object Identification**: Utilizes YOLOv8''s powerful detection algorithms.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Distance Calculation**: Calculates distances between objects and specified
    points.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Annotation and Visualization**: Provides visual markers for tracked objects.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Here''s a brief code snippet demonstrating tracking with VisionEye:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: For a comprehensive guide, visit the VisionEye Object Mapping with Object Tracking.
  prefs: []
  type: TYPE_NORMAL
- en: How can I calculate distances with VisionEye's YOLOv8 model?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Distance calculation with VisionEye and Ultralytics YOLOv8 involves determining
    the distance of detected objects from a specified point in the frame. It enhances
    spatial analysis capabilities, useful in applications such as autonomous driving
    and surveillance.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here''s a simplified example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: For detailed instructions, refer to the VisionEye with Distance Calculation.
  prefs: []
  type: TYPE_NORMAL
- en: Why should I use Ultralytics YOLOv8 for object mapping and tracking?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ultralytics YOLOv8 is renowned for its speed, accuracy, and ease of integration,
    making it a top choice for object mapping and tracking. Key advantages include:'
  prefs: []
  type: TYPE_NORMAL
- en: '**State-of-the-art Performance**: Delivers high accuracy in real-time object
    detection.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Flexibility**: Supports various tasks such as detection, tracking, and distance
    calculation.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Community and Support**: Extensive documentation and active GitHub community
    for troubleshooting and enhancements.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Ease of Use**: Intuitive API simplifies complex tasks, allowing for rapid
    deployment and iteration.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For more information on applications and benefits, check out the [Ultralytics
    YOLOv8 documentation](https://docs.ultralytics.com/models/yolov8/).
  prefs: []
  type: TYPE_NORMAL
- en: How can I integrate VisionEye with other machine learning tools like Comet or
    ClearML?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Ultralytics YOLOv8 can integrate seamlessly with various machine learning tools
    like Comet and ClearML, enhancing experiment tracking, collaboration, and reproducibility.
    Follow the detailed guides on [how to use YOLOv5 with Comet](https://www.ultralytics.com/blog/how-to-use-yolov5-with-comet)
    and [integrate YOLOv8 with ClearML](https://docs.ultralytics.com/integrations/clearml/)
    to get started.
  prefs: []
  type: TYPE_NORMAL
- en: For further exploration and integration examples, check our [Ultralytics Integrations
    Guide](https://docs.ultralytics.com/integrations/).
  prefs: []
  type: TYPE_NORMAL
