- en: pandas.Timestamp.tz_localize
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.Timestamp.tz_localize.html](https://pandas.pydata.org/docs/reference/api/pandas.Timestamp.tz_localize.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Localize the Timestamp to a timezone.
  prefs: []
  type: TYPE_NORMAL
- en: Convert naive Timestamp to local time zone or remove timezone from timezone-aware
    Timestamp.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**tz**str, pytz.timezone, dateutil.tz.tzfile or None'
  prefs: []
  type: TYPE_NORMAL
- en: Time zone for time which Timestamp will be converted to. None will remove timezone
    holding local time.
  prefs: []
  type: TYPE_NORMAL
- en: '**ambiguous**bool, ‘NaT’, default ‘raise’'
  prefs: []
  type: TYPE_NORMAL
- en: When clocks moved backward due to DST, ambiguous times may arise. For example
    in Central European Time (UTC+01), when going from 03:00 DST to 02:00 non-DST,
    02:30:00 local time occurs both at 00:30:00 UTC and at 01:30:00 UTC. In such a
    situation, the ambiguous parameter dictates how ambiguous times should be handled.
  prefs: []
  type: TYPE_NORMAL
- en: 'The behavior is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: bool contains flags to determine if time is dst or not (note that this flag
    is only applicable for ambiguous fall dst dates).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘NaT’ will return NaT for an ambiguous time.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘raise’ will raise an AmbiguousTimeError for an ambiguous time.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**nonexistent**‘shift_forward’, ‘shift_backward, ‘NaT’, timedelta, default
    ‘raise’'
  prefs: []
  type: TYPE_NORMAL
- en: A nonexistent time does not exist in a particular timezone where clocks moved
    forward due to DST.
  prefs: []
  type: TYPE_NORMAL
- en: 'The behavior is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: ‘shift_forward’ will shift the nonexistent time forward to the closest existing
    time.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘shift_backward’ will shift the nonexistent time backward to the closest existing
    time.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘NaT’ will return NaT where there are nonexistent times.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: timedelta objects will shift nonexistent times by the timedelta.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘raise’ will raise an NonExistentTimeError if there are nonexistent times.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**localized**Timestamp'
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: TypeError
  prefs: []
  type: TYPE_NORMAL
- en: If the Timestamp is tz-aware and tz is not None.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Create a naive timestamp object:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Add ‘Europe/Stockholm’ as timezone:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Analogous for `pd.NaT`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
