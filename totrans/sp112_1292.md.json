["```py\nscipy.stats.quantile_test(x, *, q=0, p=0.5, alternative='two-sided')\n```", "```py\n>>> import numpy as np\n>>> from scipy import stats\n>>> rng = np.random.default_rng()\n>>> rvs = stats.uniform.rvs(size=100, random_state=rng)\n>>> stats.quantile_test(rvs, q=0.5, p=0.5)\nQuantileTestResult(statistic=45, statistic_type=1, pvalue=0.36820161732669576) \n```", "```py\n>>> rvs = stats.norm.rvs(size=100, random_state=rng)\n>>> stats.quantile_test(rvs, q=0.5, p=0.5)\nQuantileTestResult(statistic=67, statistic_type=2, pvalue=0.0008737198369123724) \n```", "```py\n>>> stats.quantile_test(rvs, q=0.5, p=0.5, alternative='greater')\nQuantileTestResult(statistic=67, statistic_type=1, pvalue=0.9997956114162866) \n```", "```py\n>>> rvs = stats.uniform.rvs(size=100, random_state=rng)\n>>> stats.quantile_test(rvs, q=0.6, p=0.75, alternative='greater')\nQuantileTestResult(statistic=64, statistic_type=1, pvalue=0.00940696592998271) \n```", "```py\n>>> rvs = stats.norm.rvs(size=100, random_state=rng)\n>>> res = stats.quantile_test(rvs, q=0.6, p=0.75)\n>>> ci = res.confidence_interval(confidence_level=0.95)\n>>> ci\nConfidenceInterval(low=0.284491604437432, high=0.8912531024914844) \n```", "```py\n>>> rvs.sort()\n>>> q, p, alpha = 0.6, 0.75, 0.95\n>>> res = stats.quantile_test(rvs, q=q, p=p, alternative='less')\n>>> ci = res.confidence_interval(confidence_level=alpha)\n>>> for x in rvs[rvs <= ci.high]:\n...     res = stats.quantile_test(rvs, q=x, p=p, alternative='less')\n...     assert res.pvalue > 1-alpha\n>>> for x in rvs[rvs > ci.high]:\n...     res = stats.quantile_test(rvs, q=x, p=p, alternative='less')\n...     assert res.pvalue < 1-alpha \n```", "```py\n>>> dist = stats.rayleigh() # our \"unknown\" distribution\n>>> p = 0.2\n>>> true_stat = dist.ppf(p) # the true value of the statistic\n>>> n_trials = 1000\n>>> quantile_ci_contains_true_stat = 0\n>>> for i in range(n_trials):\n...     data = dist.rvs(size=100, random_state=rng)\n...     res = stats.quantile_test(data, p=p)\n...     ci = res.confidence_interval(0.95)\n...     if ci[0] < true_stat < ci[1]:\n...         quantile_ci_contains_true_stat += 1\n>>> quantile_ci_contains_true_stat >= 950\nTrue \n```"]