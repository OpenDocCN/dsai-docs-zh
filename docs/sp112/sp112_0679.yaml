- en: scipy.sparse.csr_array
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.sparse.csr_array
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.csr_array.html#scipy.sparse.csr_array](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.csr_array.html#scipy.sparse.csr_array)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.csr_array.html#scipy.sparse.csr_array](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.csr_array.html#scipy.sparse.csr_array)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Compressed Sparse Row array.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 压缩稀疏行数组。
- en: 'This can be instantiated in several ways:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过几种方式实例化：
- en: csr_array(D)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: csr_array(D)
- en: where D is a 2-D ndarray
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 其中D是一个2-D ndarray
- en: csr_array(S)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: csr_array(S)
- en: with another sparse array or matrix S (equivalent to S.tocsr())
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 与另一个稀疏数组或矩阵S一起（等同于S.tocsr()）
- en: csr_array((M, N), [dtype])
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: csr_array((M, N), [dtype])
- en: to construct an empty array with shape (M, N) dtype is optional, defaulting
    to dtype=’d’.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 构造一个空数组的形状为(M, N)，dtype是可选的，默认为dtype='d'。
- en: csr_array((data, (row_ind, col_ind)), [shape=(M, N)])
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: csr_array((data, (row_ind, col_ind)), [shape=(M, N)])
- en: where `data`, `row_ind` and `col_ind` satisfy the relationship `a[row_ind[k],
    col_ind[k]] = data[k]`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 其中`data`、`row_ind`和`col_ind`满足关系`a[row_ind[k], col_ind[k]] = data[k]`。
- en: csr_array((data, indices, indptr), [shape=(M, N)])
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: csr_array((data, indices, indptr), [shape=(M, N)])
- en: is the standard CSR representation where the column indices for row i are stored
    in `indices[indptr[i]:indptr[i+1]]` and their corresponding values are stored
    in `data[indptr[i]:indptr[i+1]]`. If the shape parameter is not supplied, the
    array dimensions are inferred from the index arrays.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 是标准的CSR表示，其中第i行的列索引存储在`indices[indptr[i]:indptr[i+1]]`中，它们对应的值存储在`data[indptr[i]:indptr[i+1]]`中。如果未提供形状参数，则从索引数组推断数组维度。
- en: Notes
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: 'Sparse arrays can be used in arithmetic operations: they support addition,
    subtraction, multiplication, division, and matrix power.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 稀疏数组可用于算术操作：它们支持加法、减法、乘法、除法和矩阵幂。
- en: Advantages of the CSR format
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: CSR格式的优点
- en: efficient arithmetic operations CSR + CSR, CSR * CSR, etc.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高效的算术操作 CSR + CSR，CSR * CSR 等。
- en: efficient row slicing
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高效的行切片
- en: fast matrix vector products
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速矩阵向量乘积
- en: Disadvantages of the CSR format
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: CSR格式的缺点
- en: slow column slicing operations (consider CSC)
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缓慢的列切片操作（考虑CSC）
- en: changes to the sparsity structure are expensive (consider LIL or DOK)
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改稀疏结构是昂贵的（考虑LIL或DOK）
- en: Canonical Format
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 规范格式
- en: Within each row, indices are sorted by column.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在每行内，索引按列排序。
- en: There are no duplicate entries.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有重复条目。
- en: Examples
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Duplicate entries are summed together:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 重复条目被合并在一起：
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'As an example of how to construct a CSR array incrementally, the following
    snippet builds a term-document array from texts:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 作为逐步构建CSR数组的示例，以下代码段从文本构建术语-文档数组：
- en: '[PRE5]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Attributes:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 属性：
- en: '**dtype**dtype'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**dtype**dtype'
- en: Data type of the array
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 数组的数据类型
- en: '[`shape`](scipy.sparse.csr_array.shape.html#scipy.sparse.csr_array.shape "scipy.sparse.csr_array.shape")2-tuple'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[`shape`](scipy.sparse.csr_array.shape.html#scipy.sparse.csr_array.shape "scipy.sparse.csr_array.shape")2-tuple'
- en: The shape of the array.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 数组的形状。
- en: '**ndim**int'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**ndim**int'
- en: Number of dimensions (this is always 2)
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 维数的数量（这总是2）
- en: '[`nnz`](scipy.sparse.csr_array.nnz.html#scipy.sparse.csr_array.nnz "scipy.sparse.csr_array.nnz")'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '[`nnz`](scipy.sparse.csr_array.nnz.html#scipy.sparse.csr_array.nnz "scipy.sparse.csr_array.nnz")'
- en: Number of stored values, including explicit zeros.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 存储的值的数量，包括显式零。
- en: '[`size`](scipy.sparse.csr_array.size.html#scipy.sparse.csr_array.size "scipy.sparse.csr_array.size")'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[`size`](scipy.sparse.csr_array.size.html#scipy.sparse.csr_array.size "scipy.sparse.csr_array.size")'
- en: Number of stored values.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 存储的值的数量。
- en: '**data**'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**data**'
- en: CSR format data array of the array
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: CSR格式数据数组的索引数组
- en: '**indices**'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**indices**'
- en: CSR format index array of the array
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: CSR格式数组的索引数组
- en: '**indptr**'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**indptr**'
- en: CSR format index pointer array of the array
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: CSR格式数组的索引指针数组
- en: '[`has_sorted_indices`](scipy.sparse.csr_array.has_sorted_indices.html#scipy.sparse.csr_array.has_sorted_indices
    "scipy.sparse.csr_array.has_sorted_indices")'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[`has_sorted_indices`](scipy.sparse.csr_array.has_sorted_indices.html#scipy.sparse.csr_array.has_sorted_indices
    "scipy.sparse.csr_array.has_sorted_indices")'
- en: Whether the indices are sorted
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 索引是否已排序
- en: '[`has_canonical_format`](scipy.sparse.csr_array.has_canonical_format.html#scipy.sparse.csr_array.has_canonical_format
    "scipy.sparse.csr_array.has_canonical_format")'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '[`has_canonical_format`](scipy.sparse.csr_array.has_canonical_format.html#scipy.sparse.csr_array.has_canonical_format
    "scipy.sparse.csr_array.has_canonical_format")'
- en: Whether the array/matrix has sorted indices and no duplicates
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 数组/矩阵是否具有排序索引且无重复项
- en: '[`T`](scipy.sparse.csr_array.T.html#scipy.sparse.csr_array.T "scipy.sparse.csr_array.T")'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '[`T`](scipy.sparse.csr_array.T.html#scipy.sparse.csr_array.T "scipy.sparse.csr_array.T")'
- en: Transpose.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 转置。
- en: Methods
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`__len__`](scipy.sparse.csr_array.__len__.html#scipy.sparse.csr_array.__len__
    "scipy.sparse.csr_array.__len__")() |  |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '[`__len__`](scipy.sparse.csr_array.__len__.html#scipy.sparse.csr_array.__len__
    "scipy.sparse.csr_array.__len__")() | 返回数组/矩阵的长度。'
- en: '| [`arcsin`](scipy.sparse.csr_array.arcsin.html#scipy.sparse.csr_array.arcsin
    "scipy.sparse.csr_array.arcsin")() | Element-wise arcsin. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '[`arcsin`](scipy.sparse.csr_array.arcsin.html#scipy.sparse.csr_array.arcsin
    "scipy.sparse.csr_array.arcsin")() | 元素级的反正弦。'
- en: '| [`arcsinh`](scipy.sparse.csr_array.arcsinh.html#scipy.sparse.csr_array.arcsinh
    "scipy.sparse.csr_array.arcsinh")() | Element-wise arcsinh. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '[`arcsinh`](scipy.sparse.csr_array.arcsinh.html#scipy.sparse.csr_array.arcsinh
    "scipy.sparse.csr_array.arcsinh")() | 元素级的反双曲正弦。'
- en: '| [`arctan`](scipy.sparse.csr_array.arctan.html#scipy.sparse.csr_array.arctan
    "scipy.sparse.csr_array.arctan")() | Element-wise arctan. |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '[`arctan`](scipy.sparse.csr_array.arctan.html#scipy.sparse.csr_array.arctan
    "scipy.sparse.csr_array.arctan")() | 元素级的反正切。'
- en: '| [`arctanh`](scipy.sparse.csr_array.arctanh.html#scipy.sparse.csr_array.arctanh
    "scipy.sparse.csr_array.arctanh")() | Element-wise arctanh. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '[`arctanh`](scipy.sparse.csr_array.arctanh.html#scipy.sparse.csr_array.arctanh
    "scipy.sparse.csr_array.arctanh")() | 元素级的反双曲正切。'
- en: '| [`argmax`](scipy.sparse.csr_array.argmax.html#scipy.sparse.csr_array.argmax
    "scipy.sparse.csr_array.argmax")([axis, out]) | Return indices of maximum elements
    along an axis. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '[`argmax`](scipy.sparse.csr_array.argmax.html#scipy.sparse.csr_array.argmax
    "scipy.sparse.csr_array.argmax")([axis, out]) | 返回沿着轴的最大元素的索引。'
- en: '| [`argmin`](scipy.sparse.csr_array.argmin.html#scipy.sparse.csr_array.argmin
    "scipy.sparse.csr_array.argmin")([axis, out]) | Return indices of minimum elements
    along an axis. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '[`argmin`](scipy.sparse.csr_array.argmin.html#scipy.sparse.csr_array.argmin
    "scipy.sparse.csr_array.argmin")([axis, out]) | 返回沿着轴的最小元素的索引。'
- en: '| [`asformat`](scipy.sparse.csr_array.asformat.html#scipy.sparse.csr_array.asformat
    "scipy.sparse.csr_array.asformat")(format[, copy]) | Return this array/matrix
    in the passed format. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '[`asformat`](scipy.sparse.csr_array.asformat.html#scipy.sparse.csr_array.asformat
    "scipy.sparse.csr_array.asformat")(format[, copy]) | 以指定格式返回此数组/矩阵。'
- en: '| [`asfptype`](scipy.sparse.csr_array.asfptype.html#scipy.sparse.csr_array.asfptype
    "scipy.sparse.csr_array.asfptype")() | Upcast array/matrix to a floating point
    format (if necessary) |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '[`asfptype`](scipy.sparse.csr_array.asfptype.html#scipy.sparse.csr_array.asfptype
    "scipy.sparse.csr_array.asfptype")() | 将数组/矩阵提升为浮点格式（如果需要）。'
- en: '| [`astype`](scipy.sparse.csr_array.astype.html#scipy.sparse.csr_array.astype
    "scipy.sparse.csr_array.astype")(dtype[, casting, copy]) | Cast the array/matrix
    elements to a specified type. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '[`astype`](scipy.sparse.csr_array.astype.html#scipy.sparse.csr_array.astype
    "scipy.sparse.csr_array.astype")(dtype[, casting, copy]) | 将数组/矩阵元素转换为指定类型。'
- en: '| [`ceil`](scipy.sparse.csr_array.ceil.html#scipy.sparse.csr_array.ceil "scipy.sparse.csr_array.ceil")()
    | Element-wise ceil. |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '[`ceil`](scipy.sparse.csr_array.ceil.html#scipy.sparse.csr_array.ceil "scipy.sparse.csr_array.ceil")()
    | 元素级的向上取整。'
- en: '| [`check_format`](scipy.sparse.csr_array.check_format.html#scipy.sparse.csr_array.check_format
    "scipy.sparse.csr_array.check_format")([full_check]) | Check whether the array/matrix
    respects the CSR or CSC format. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '[`check_format`](scipy.sparse.csr_array.check_format.html#scipy.sparse.csr_array.check_format
    "scipy.sparse.csr_array.check_format")([full_check]) | 检查数组/矩阵是否符合CSR或CSC格式。'
- en: '| [`conj`](scipy.sparse.csr_array.conj.html#scipy.sparse.csr_array.conj "scipy.sparse.csr_array.conj")([copy])
    | Element-wise complex conjugation. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '[`conj`](scipy.sparse.csr_array.conj.html#scipy.sparse.csr_array.conj "scipy.sparse.csr_array.conj")([copy])
    | 元素级的复数共轭。'
- en: '| [`conjugate`](scipy.sparse.csr_array.conjugate.html#scipy.sparse.csr_array.conjugate
    "scipy.sparse.csr_array.conjugate")([copy]) | Element-wise complex conjugation.
    |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '[`conjugate`](scipy.sparse.csr_array.conjugate.html#scipy.sparse.csr_array.conjugate
    "scipy.sparse.csr_array.conjugate")([copy]) | 元素级的复数共轭。'
- en: '| [`copy`](scipy.sparse.csr_array.copy.html#scipy.sparse.csr_array.copy "scipy.sparse.csr_array.copy")()
    | Returns a copy of this array/matrix. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '[`copy`](scipy.sparse.csr_array.copy.html#scipy.sparse.csr_array.copy "scipy.sparse.csr_array.copy")()
    | 返回此数组/矩阵的副本。'
- en: '| [`count_nonzero`](scipy.sparse.csr_array.count_nonzero.html#scipy.sparse.csr_array.count_nonzero
    "scipy.sparse.csr_array.count_nonzero")() | Number of non-zero entries, equivalent
    to |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '[`count_nonzero`](scipy.sparse.csr_array.count_nonzero.html#scipy.sparse.csr_array.count_nonzero
    "scipy.sparse.csr_array.count_nonzero")() | 非零条目的数量，等同于。'
- en: '| [`deg2rad`](scipy.sparse.csr_array.deg2rad.html#scipy.sparse.csr_array.deg2rad
    "scipy.sparse.csr_array.deg2rad")() | Element-wise deg2rad. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '[`deg2rad`](scipy.sparse.csr_array.deg2rad.html#scipy.sparse.csr_array.deg2rad
    "scipy.sparse.csr_array.deg2rad")() | 元素级的角度转弧度。'
- en: '| [`diagonal`](scipy.sparse.csr_array.diagonal.html#scipy.sparse.csr_array.diagonal
    "scipy.sparse.csr_array.diagonal")([k]) | Returns the kth diagonal of the array/matrix.
    |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '[`diagonal`](scipy.sparse.csr_array.diagonal.html#scipy.sparse.csr_array.diagonal
    "scipy.sparse.csr_array.diagonal")([k]) | 返回数组/矩阵的第k条对角线。'
- en: '| [`dot`](scipy.sparse.csr_array.dot.html#scipy.sparse.csr_array.dot "scipy.sparse.csr_array.dot")(other)
    | Ordinary dot product |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| [`dot`](scipy.sparse.csr_array.dot.html#scipy.sparse.csr_array.dot "scipy.sparse.csr_array.dot")(other)
    | 普通点积 |'
- en: '| [`eliminate_zeros`](scipy.sparse.csr_array.eliminate_zeros.html#scipy.sparse.csr_array.eliminate_zeros
    "scipy.sparse.csr_array.eliminate_zeros")() | Remove zero entries from the array/matrix
    |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| [`eliminate_zeros`](scipy.sparse.csr_array.eliminate_zeros.html#scipy.sparse.csr_array.eliminate_zeros
    "scipy.sparse.csr_array.eliminate_zeros")() | 从数组/矩阵中删除零条目。 |'
- en: '| [`expm1`](scipy.sparse.csr_array.expm1.html#scipy.sparse.csr_array.expm1
    "scipy.sparse.csr_array.expm1")() | Element-wise expm1. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| [`expm1`](scipy.sparse.csr_array.expm1.html#scipy.sparse.csr_array.expm1
    "scipy.sparse.csr_array.expm1")() | 逐元素的expm1。 |'
- en: '| [`floor`](scipy.sparse.csr_array.floor.html#scipy.sparse.csr_array.floor
    "scipy.sparse.csr_array.floor")() | Element-wise floor. |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| [`floor`](scipy.sparse.csr_array.floor.html#scipy.sparse.csr_array.floor
    "scipy.sparse.csr_array.floor")() | 逐元素向下取整。 |'
- en: '| [`getH`](scipy.sparse.csr_array.getH.html#scipy.sparse.csr_array.getH "scipy.sparse.csr_array.getH")()
    | Return the Hermitian transpose of this array/matrix. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| [`getH`](scipy.sparse.csr_array.getH.html#scipy.sparse.csr_array.getH "scipy.sparse.csr_array.getH")()
    | 返回该数组/矩阵的共轭转置。 |'
- en: '| [`get_shape`](scipy.sparse.csr_array.get_shape.html#scipy.sparse.csr_array.get_shape
    "scipy.sparse.csr_array.get_shape")() | Get shape of a sparse array/matrix. |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| [`get_shape`](scipy.sparse.csr_array.get_shape.html#scipy.sparse.csr_array.get_shape
    "scipy.sparse.csr_array.get_shape")() | 获取稀疏数组/矩阵的形状。 |'
- en: '| [`getcol`](scipy.sparse.csr_array.getcol.html#scipy.sparse.csr_array.getcol
    "scipy.sparse.csr_array.getcol")(j) | Returns a copy of column j of the array/matrix,
    as an (m x 1) sparse array/matrix (column vector). |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| [`getcol`](scipy.sparse.csr_array.getcol.html#scipy.sparse.csr_array.getcol
    "scipy.sparse.csr_array.getcol")(j) | 返回数组/矩阵的第j列的副本，作为(m x 1)稀疏数组/矩阵（列向量）。 |'
- en: '| [`getformat`](scipy.sparse.csr_array.getformat.html#scipy.sparse.csr_array.getformat
    "scipy.sparse.csr_array.getformat")() | Sparse array/matrix storage format. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| [`getformat`](scipy.sparse.csr_array.getformat.html#scipy.sparse.csr_array.getformat
    "scipy.sparse.csr_array.getformat")() | 稀疏数组/矩阵的存储格式。 |'
- en: '| [`getmaxprint`](scipy.sparse.csr_array.getmaxprint.html#scipy.sparse.csr_array.getmaxprint
    "scipy.sparse.csr_array.getmaxprint")() | Maximum number of elements to display
    when printed. |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| [`getmaxprint`](scipy.sparse.csr_array.getmaxprint.html#scipy.sparse.csr_array.getmaxprint
    "scipy.sparse.csr_array.getmaxprint")() | 打印时显示的最大元素数。 |'
- en: '| [`getnnz`](scipy.sparse.csr_array.getnnz.html#scipy.sparse.csr_array.getnnz
    "scipy.sparse.csr_array.getnnz")([axis]) | Number of stored values, including
    explicit zeros. |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| [`getnnz`](scipy.sparse.csr_array.getnnz.html#scipy.sparse.csr_array.getnnz
    "scipy.sparse.csr_array.getnnz")([axis]) | 存储值的数量，包括显式零值。 |'
- en: '| [`getrow`](scipy.sparse.csr_array.getrow.html#scipy.sparse.csr_array.getrow
    "scipy.sparse.csr_array.getrow")(i) | Returns a copy of row i of the array/matrix,
    as a (1 x n) sparse array/matrix (row vector). |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| [`getrow`](scipy.sparse.csr_array.getrow.html#scipy.sparse.csr_array.getrow
    "scipy.sparse.csr_array.getrow")(i) | 返回数组/矩阵的第i行的副本，作为(1 x n)稀疏数组/矩阵（行向量）。 |'
- en: '| [`log1p`](scipy.sparse.csr_array.log1p.html#scipy.sparse.csr_array.log1p
    "scipy.sparse.csr_array.log1p")() | Element-wise log1p. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| [`log1p`](scipy.sparse.csr_array.log1p.html#scipy.sparse.csr_array.log1p
    "scipy.sparse.csr_array.log1p")() | 逐元素的log1p。 |'
- en: '| [`max`](scipy.sparse.csr_array.max.html#scipy.sparse.csr_array.max "scipy.sparse.csr_array.max")([axis, out])
    | Return the maximum of the array/matrix or maximum along an axis. |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| [`max`](scipy.sparse.csr_array.max.html#scipy.sparse.csr_array.max "scipy.sparse.csr_array.max")([axis, out])
    | 返回数组/矩阵或沿轴的最大值。'
- en: '| [`maximum`](scipy.sparse.csr_array.maximum.html#scipy.sparse.csr_array.maximum
    "scipy.sparse.csr_array.maximum")(other) | Element-wise maximum between this and
    another array/matrix. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| [`maximum`](scipy.sparse.csr_array.maximum.html#scipy.sparse.csr_array.maximum
    "scipy.sparse.csr_array.maximum")(other) | 该数组/矩阵与另一个数组/矩阵之间的逐元素最大值。 |'
- en: '| [`mean`](scipy.sparse.csr_array.mean.html#scipy.sparse.csr_array.mean "scipy.sparse.csr_array.mean")([axis, dtype, out])
    | Compute the arithmetic mean along the specified axis. |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| [`mean`](scipy.sparse.csr_array.mean.html#scipy.sparse.csr_array.mean "scipy.sparse.csr_array.mean")([axis, dtype, out])
    | 计算沿指定轴的算术平均值。 |'
- en: '| [`min`](scipy.sparse.csr_array.min.html#scipy.sparse.csr_array.min "scipy.sparse.csr_array.min")([axis, out])
    | Return the minimum of the array/matrix or maximum along an axis. |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| [`min`](scipy.sparse.csr_array.min.html#scipy.sparse.csr_array.min "scipy.sparse.csr_array.min")([axis, out])
    | 返回数组/矩阵或沿轴的最小值。 |'
- en: '| [`minimum`](scipy.sparse.csr_array.minimum.html#scipy.sparse.csr_array.minimum
    "scipy.sparse.csr_array.minimum")(other) | Element-wise minimum between this and
    another array/matrix. |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| [`minimum`](scipy.sparse.csr_array.minimum.html#scipy.sparse.csr_array.minimum
    "scipy.sparse.csr_array.minimum")(other) | 该数组/矩阵与另一个数组/矩阵之间的逐元素最小值。 |'
- en: '| [`multiply`](scipy.sparse.csr_array.multiply.html#scipy.sparse.csr_array.multiply
    "scipy.sparse.csr_array.multiply")(other) | Point-wise multiplication by another
    array/matrix, vector, or scalar. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| [`multiply`](https://scipy.org/docs/scipy.sparse.csr_array.multiply.html#scipy.sparse.csr_array.multiply
    "scipy.sparse.csr_array.multiply")(other) | 与另一个数组/矩阵、向量或标量进行逐点乘法运算。 |'
- en: '| [`nanmax`](scipy.sparse.csr_array.nanmax.html#scipy.sparse.csr_array.nanmax
    "scipy.sparse.csr_array.nanmax")([axis, out]) | Return the maximum of the array/matrix
    or maximum along an axis, ignoring any NaNs. |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| [`nanmax`](https://scipy.org/docs/scipy.sparse.csr_array.nanmax.html#scipy.sparse.csr_array.nanmax
    "scipy.sparse.csr_array.nanmax")([axis, out]) | 返回数组/矩阵的最大值或沿轴的最大值，忽略任何 NaN。 |'
- en: '| [`nanmin`](scipy.sparse.csr_array.nanmin.html#scipy.sparse.csr_array.nanmin
    "scipy.sparse.csr_array.nanmin")([axis, out]) | Return the minimum of the array/matrix
    or minimum along an axis, ignoring any NaNs. |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| [`nanmin`](https://scipy.org/docs/scipy.sparse.csr_array.nanmin.html#scipy.sparse.csr_array.nanmin
    "scipy.sparse.csr_array.nanmin")([axis, out]) | 返回数组/矩阵的最小值或沿轴的最小值，忽略任何 NaN。 |'
- en: '| [`nonzero`](scipy.sparse.csr_array.nonzero.html#scipy.sparse.csr_array.nonzero
    "scipy.sparse.csr_array.nonzero")() | Nonzero indices of the array/matrix. |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| [`nonzero`](https://scipy.org/docs/scipy.sparse.csr_array.nonzero.html#scipy.sparse.csr_array.nonzero
    "scipy.sparse.csr_array.nonzero")() | 数组/矩阵的非零元素索引。 |'
- en: '| [`power`](scipy.sparse.csr_array.power.html#scipy.sparse.csr_array.power
    "scipy.sparse.csr_array.power")(n[, dtype]) | This function performs element-wise
    power. |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| [`power`](https://scipy.org/docs/scipy.sparse.csr_array.power.html#scipy.sparse.csr_array.power
    "scipy.sparse.csr_array.power")(n[, dtype]) | 此函数执行逐元素的幂运算。 |'
- en: '| [`prune`](scipy.sparse.csr_array.prune.html#scipy.sparse.csr_array.prune
    "scipy.sparse.csr_array.prune")() | Remove empty space after all non-zero elements.
    |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| [`prune`](https://scipy.org/docs/scipy.sparse.csr_array.prune.html#scipy.sparse.csr_array.prune
    "scipy.sparse.csr_array.prune")() | 删除所有非零元素后的空白空间。 |'
- en: '| [`rad2deg`](scipy.sparse.csr_array.rad2deg.html#scipy.sparse.csr_array.rad2deg
    "scipy.sparse.csr_array.rad2deg")() | Element-wise rad2deg. |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| [`rad2deg`](https://scipy.org/docs/scipy.sparse.csr_array.rad2deg.html#scipy.sparse.csr_array.rad2deg
    "scipy.sparse.csr_array.rad2deg")() | 逐元素的弧度转为角度。 |'
- en: '| [`reshape`](scipy.sparse.csr_array.reshape.html#scipy.sparse.csr_array.reshape
    "scipy.sparse.csr_array.reshape")(self, shape[, order, copy]) | Gives a new shape
    to a sparse array/matrix without changing its data. |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| [`reshape`](https://scipy.org/docs/scipy.sparse.csr_array.reshape.html#scipy.sparse.csr_array.reshape
    "scipy.sparse.csr_array.reshape")(self, shape[, order, copy]) | 在不改变数据的情况下给稀疏数组/矩阵赋予新的形状。
    |'
- en: '| [`resize`](scipy.sparse.csr_array.resize.html#scipy.sparse.csr_array.resize
    "scipy.sparse.csr_array.resize")(*shape) | Resize the array/matrix in-place to
    dimensions given by `shape` |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| [`resize`](https://scipy.org/docs/scipy.sparse.csr_array.resize.html#scipy.sparse.csr_array.resize
    "scipy.sparse.csr_array.resize")(*shape) | 在原地将数组/矩阵调整到给定的形状。 |'
- en: '| [`rint`](scipy.sparse.csr_array.rint.html#scipy.sparse.csr_array.rint "scipy.sparse.csr_array.rint")()
    | Element-wise rint. |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| [`rint`](https://scipy.org/docs/scipy.sparse.csr_array.rint.html#scipy.sparse.csr_array.rint
    "scipy.sparse.csr_array.rint")() | 逐元素的四舍五入。 |'
- en: '| [`set_shape`](scipy.sparse.csr_array.set_shape.html#scipy.sparse.csr_array.set_shape
    "scipy.sparse.csr_array.set_shape")(shape) | See [`reshape`](scipy.sparse.csr_array.reshape.html#scipy.sparse.csr_array.reshape
    "scipy.sparse.csr_array.reshape"). |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| [`set_shape`](https://scipy.org/docs/scipy.sparse.csr_array.set_shape.html#scipy.sparse.csr_array.set_shape
    "scipy.sparse.csr_array.set_shape")(shape) | 参见 [`reshape`](https://scipy.org/docs/scipy.sparse.csr_array.reshape.html#scipy.sparse.csr_array.reshape
    "scipy.sparse.csr_array.reshape"). |'
- en: '| [`setdiag`](scipy.sparse.csr_array.setdiag.html#scipy.sparse.csr_array.setdiag
    "scipy.sparse.csr_array.setdiag")(values[, k]) | Set diagonal or off-diagonal
    elements of the array/matrix. |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| [`setdiag`](https://scipy.org/docs/scipy.sparse.csr_array.setdiag.html#scipy.sparse.csr_array.setdiag
    "scipy.sparse.csr_array.setdiag")(values[, k]) | 设置数组/矩阵的对角线或非对角线元素。 |'
- en: '| [`sign`](scipy.sparse.csr_array.sign.html#scipy.sparse.csr_array.sign "scipy.sparse.csr_array.sign")()
    | Element-wise sign. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| [`sign`](https://scipy.org/docs/scipy.sparse.csr_array.sign.html#scipy.sparse.csr_array.sign
    "scipy.sparse.csr_array.sign")() | 逐元素的符号函数。 |'
- en: '| [`sin`](scipy.sparse.csr_array.sin.html#scipy.sparse.csr_array.sin "scipy.sparse.csr_array.sin")()
    | Element-wise sin. |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| [`sin`](https://scipy.org/docs/scipy.sparse.csr_array.sin.html#scipy.sparse.csr_array.sin
    "scipy.sparse.csr_array.sin")() | 逐元素的正弦函数。 |'
- en: '| [`sinh`](scipy.sparse.csr_array.sinh.html#scipy.sparse.csr_array.sinh "scipy.sparse.csr_array.sinh")()
    | Element-wise sinh. |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| [`sinh`](https://scipy.org/docs/scipy.sparse.csr_array.sinh.html#scipy.sparse.csr_array.sinh
    "scipy.sparse.csr_array.sinh")() | 逐元素的双曲正弦函数。 |'
- en: '| [`sort_indices`](scipy.sparse.csr_array.sort_indices.html#scipy.sparse.csr_array.sort_indices
    "scipy.sparse.csr_array.sort_indices")() | Sort the indices of this array/matrix
    *in place* |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| [`sort_indices`](https://scipy.org/docs/scipy.sparse.csr_array.sort_indices.html#scipy.sparse.csr_array.sort_indices
    "scipy.sparse.csr_array.sort_indices")() | *就地* 对此数组/矩阵的索引进行排序 |'
- en: '| [`sorted_indices`](scipy.sparse.csr_array.sorted_indices.html#scipy.sparse.csr_array.sorted_indices
    "scipy.sparse.csr_array.sorted_indices")() | Return a copy of this array/matrix
    with sorted indices |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| [`sorted_indices`](https://scipy.org/docs/scipy.sparse.csr_array.sorted_indices.html#scipy.sparse.csr_array.sorted_indices
    "scipy.sparse.csr_array.sorted_indices")() | 返回此数组/矩阵索引排序后的副本 |'
- en: '| [`sqrt`](scipy.sparse.csr_array.sqrt.html#scipy.sparse.csr_array.sqrt "scipy.sparse.csr_array.sqrt")()
    | Element-wise sqrt. |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| [`sqrt`](https://scipy.org/scipy-docs/scipy.sparse.csr_array.sqrt.html#scipy.sparse.csr_array.sqrt")()
    | 逐元素求平方根。 |'
- en: '| [`sum`](scipy.sparse.csr_array.sum.html#scipy.sparse.csr_array.sum "scipy.sparse.csr_array.sum")([axis, dtype, out])
    | Sum the array/matrix elements over a given axis. |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| [`sum`](https://scipy.org/scipy-docs/scipy.sparse.csr_array.sum.html#scipy.sparse.csr_array.sum
    "scipy.sparse.csr_array.sum")([axis, dtype, out]) | 沿指定轴对数组/矩阵元素求和。 |'
- en: '| [`sum_duplicates`](scipy.sparse.csr_array.sum_duplicates.html#scipy.sparse.csr_array.sum_duplicates
    "scipy.sparse.csr_array.sum_duplicates")() | Eliminate duplicate entries by adding
    them together |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| [`sum_duplicates`](https://scipy.org/scipy-docs/scipy.sparse.csr_array.sum_duplicates.html#scipy.sparse.csr_array.sum_duplicates
    "scipy.sparse.csr_array.sum_duplicates")() | 通过将重复条目相加消除重复条目。 |'
- en: '| [`tan`](scipy.sparse.csr_array.tan.html#scipy.sparse.csr_array.tan "scipy.sparse.csr_array.tan")()
    | Element-wise tan. |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| [`tan`](https://scipy.org/scipy-docs/scipy.sparse.csr_array.tan.html#scipy.sparse.csr_array.tan
    "scipy.sparse.csr_array.tan")() | 逐元素求正切。 |'
- en: '| [`tanh`](scipy.sparse.csr_array.tanh.html#scipy.sparse.csr_array.tanh "scipy.sparse.csr_array.tanh")()
    | Element-wise tanh. |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| [`tanh`](https://scipy.org/scipy-docs/scipy.sparse.csr_array.tanh.html#scipy.sparse.csr_array.tanh
    "scipy.sparse.csr_array.tanh")() | 逐元素双曲正切。 |'
- en: '| [`toarray`](scipy.sparse.csr_array.toarray.html#scipy.sparse.csr_array.toarray
    "scipy.sparse.csr_array.toarray")([order, out]) | Return a dense ndarray representation
    of this sparse array/matrix. |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| [`toarray`](https://scipy.org/scipy-docs/scipy.sparse.csr_array.toarray.html#scipy.sparse.csr_array.toarray
    "scipy.sparse.csr_array.toarray")([order, out]) | 返回此稀疏数组/矩阵的密集 ndarray 表示。 |'
- en: '| [`tobsr`](scipy.sparse.csr_array.tobsr.html#scipy.sparse.csr_array.tobsr
    "scipy.sparse.csr_array.tobsr")([blocksize, copy]) | Convert this array/matrix
    to Block Sparse Row format. |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| [`tobsr`](https://scipy.org/scipy-docs/scipy.sparse.csr_array.tobsr.html#scipy.sparse.csr_array.tobsr
    "scipy.sparse.csr_array.tobsr")([blocksize, copy]) | 将此数组/矩阵转换为块压缩稀疏行格式。 |'
- en: '| [`tocoo`](scipy.sparse.csr_array.tocoo.html#scipy.sparse.csr_array.tocoo
    "scipy.sparse.csr_array.tocoo")([copy]) | Convert this array/matrix to COOrdinate
    format. |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| [`tocoo`](https://scipy.org/scipy-docs/scipy.sparse.csr_array.tocoo.html#scipy.sparse.csr_array.tocoo
    "scipy.sparse.csr_array.tocoo")([copy]) | 将此数组/矩阵转换为 COO 格式。 |'
- en: '| [`tocsc`](scipy.sparse.csr_array.tocsc.html#scipy.sparse.csr_array.tocsc
    "scipy.sparse.csr_array.tocsc")([copy]) | Convert this array/matrix to Compressed
    Sparse Column format. |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| [`tocsc`](https://scipy.org/scipy-docs/scipy.sparse.csr_array.tocsc.html#scipy.sparse.csr_array.tocsc
    "scipy.sparse.csr_array.tocsc")([copy]) | 将此数组/矩阵转换为压缩稀疏列格式。 |'
- en: '| [`tocsr`](scipy.sparse.csr_array.tocsr.html#scipy.sparse.csr_array.tocsr
    "scipy.sparse.csr_array.tocsr")([copy]) | Convert this array/matrix to Compressed
    Sparse Row format. |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| [`tocsr`](https://scipy.org/scipy-docs/scipy.sparse.csr_array.tocsr.html#scipy.sparse.csr_array.tocsr
    "scipy.sparse.csr_array.tocsr")([copy]) | 将此数组/矩阵转换为压缩稀疏行格式。 |'
- en: '| [`todense`](scipy.sparse.csr_array.todense.html#scipy.sparse.csr_array.todense
    "scipy.sparse.csr_array.todense")([order, out]) | Return a dense representation
    of this sparse array/matrix. |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| [`todense`](https://scipy.org/scipy-docs/scipy.sparse.csr_array.todense.html#scipy.sparse.csr_array.todense
    "scipy.sparse.csr_array.todense")([order, out]) | 返回此稀疏数组/矩阵的密集表示。 |'
- en: '| [`todia`](scipy.sparse.csr_array.todia.html#scipy.sparse.csr_array.todia
    "scipy.sparse.csr_array.todia")([copy]) | Convert this array/matrix to sparse
    DIAgonal format. |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| [`todia`](https://scipy.org/scipy-docs/scipy.sparse.csr_array.todia.html#scipy.sparse.csr_array.todia
    "scipy.sparse.csr_array.todia")([copy]) | 将此数组/矩阵转换为稀疏 DIAgonal 格式。 |'
- en: '| [`todok`](scipy.sparse.csr_array.todok.html#scipy.sparse.csr_array.todok
    "scipy.sparse.csr_array.todok")([copy]) | Convert this array/matrix to Dictionary
    Of Keys format. |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| [`todok`](https://scipy.org/scipy-docs/scipy.sparse.csr_array.todok.html#scipy.sparse.csr_array.todok
    "scipy.sparse.csr_array.todok")([copy]) | 将此数组/矩阵转换为键值字典格式。 |'
- en: '| [`tolil`](scipy.sparse.csr_array.tolil.html#scipy.sparse.csr_array.tolil
    "scipy.sparse.csr_array.tolil")([copy]) | Convert this array/matrix to List of
    Lists format. |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| [`tolil`](https://scipy.org/scipy-docs/scipy.sparse.csr_array.tolil.html#scipy.sparse.csr_array.tolil
    "scipy.sparse.csr_array.tolil")([copy]) | 将此数组/矩阵转换为列表列表格式。 |'
- en: '| [`trace`](scipy.sparse.csr_array.trace.html#scipy.sparse.csr_array.trace
    "scipy.sparse.csr_array.trace")([offset]) | Returns the sum along diagonals of
    the sparse array/matrix. |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| [`trace`](https://scipy.org/scipy-docs/scipy.sparse.csr_array.trace.html#scipy.sparse.csr_array.trace
    "scipy.sparse.csr_array.trace")([offset]) | 返回稀疏数组/矩阵对角线上的元素和。 |'
- en: '| [`transpose`](scipy.sparse.csr_array.transpose.html#scipy.sparse.csr_array.transpose
    "scipy.sparse.csr_array.transpose")([axes, copy]) | Reverses the dimensions of
    the sparse array/matrix. |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| [`transpose`](https://scipy.org/scipy-docs/scipy.sparse.csr_array.transpose.html#scipy.sparse.csr_array.transpose
    "scipy.sparse.csr_array.transpose")([axes, copy]) | 反转稀疏数组/矩阵的维度。 |'
- en: '| [`trunc`](scipy.sparse.csr_array.trunc.html#scipy.sparse.csr_array.trunc
    "scipy.sparse.csr_array.trunc")() | Element-wise trunc. |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| [`trunc`](https://scipy.org/scipy-docs/scipy.sparse.csr_array.trunc.html#scipy.sparse.csr_array.trunc
    "scipy.sparse.csr_array.trunc")() | 逐元素截断。 |'
- en: '| **__getitem__** |  |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| **__getitem__** |  |'
- en: '| **__mul__** |  |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| **__mul__** |  |'
