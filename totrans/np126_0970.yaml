- en: numpy.in1d
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.in1d
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.in1d.html](https://numpy.org/doc/1.26/reference/generated/numpy.in1d.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.in1d.html](https://numpy.org/doc/1.26/reference/generated/numpy.in1d.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Test whether each element of a 1-D array is also present in a second array.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 测试1-D数组的每个元素是否也存在于第二个数组中。
- en: Returns a boolean array the same length as *ar1* that is True where an element
    of *ar1* is in *ar2* and False otherwise.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个与*ar1*长度相同的布尔数组，其中*ar1*的元素在*ar2*中为True，否则为False。
- en: We recommend using [`isin`](numpy.isin.html#numpy.isin "numpy.isin") instead
    of [`in1d`](#numpy.in1d "numpy.in1d") for new code.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建议新代码使用[`isin`](numpy.isin.html#numpy.isin "numpy.isin")而不是[`in1d`](#numpy.in1d
    "numpy.in1d")。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**ar1**(M,) array_like'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**ar1**(M,) array_like'
- en: Input array.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数组。
- en: '**ar2**array_like'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**ar2**array_like'
- en: The values against which to test each value of *ar1*.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 用于测试每个*ar1*值的值。
- en: '**assume_unique**bool, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**assume_unique**bool, optional'
- en: If True, the input arrays are both assumed to be unique, which can speed up
    the calculation. Default is False.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为True，则假定输入数组都是唯一的，这可以加快计算速度。默认值为False。
- en: '**invert**bool, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**invert**bool, optional'
- en: If True, the values in the returned array are inverted (that is, False where
    an element of *ar1* is in *ar2* and True otherwise). Default is False. `np.in1d(a,
    b, invert=True)` is equivalent to (but is faster than) `np.invert(in1d(a, b))`.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为True，则返回数组中的值被反转（即，*ar1*的元素在*ar2*中为False，否则为True）。默认值为False。`np.in1d(a, b,
    invert=True)`等同于（但比`np.invert(in1d(a, b))`更快）。
- en: '**kind**{None, ‘sort’, ‘table’}, optional'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**kind**{None, ‘sort’, ‘table’}, optional'
- en: The algorithm to use. This will not affect the final result, but will affect
    the speed and memory use. The default, None, will select automatically based on
    memory considerations.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用的算法。这不会影响最终结果，但会影响速度和内存使用。默认值None，将根据内存考虑自动选择。
- en: If ‘sort’, will use a mergesort-based approach. This will have a memory usage
    of roughly 6 times the sum of the sizes of *ar1* and *ar2*, not accounting for
    size of dtypes.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果选择‘sort’，将使用基于归并排序的方法。这将使用大约*ar1*和*ar2*大小之和的6倍的内存，不考虑dtype的大小。
- en: If ‘table’, will use a lookup table approach similar to a counting sort. This
    is only available for boolean and integer arrays. This will have a memory usage
    of the size of *ar1* plus the max-min value of *ar2*. *assume_unique* has no effect
    when the ‘table’ option is used.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果选择‘table’，将使用类似于计数排序的查找表方法。这仅适用于布尔和整数数组。这将使用*ar1*的大小加上*ar2*的最大-最小值的内存。当使用‘table’选项时，*assume_unique*不起作用。
- en: If None, will automatically choose ‘table’ if the required memory allocation
    is less than or equal to 6 times the sum of the sizes of *ar1* and *ar2*, otherwise
    will use ‘sort’. This is done to not use a large amount of memory by default,
    even though ‘table’ may be faster in most cases. If ‘table’ is chosen, *assume_unique*
    will have no effect.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果为None，则如果所需内存分配小于或等于*ar1*和*ar2*大小之和的6倍，将自动选择‘table’，否则将使用‘sort’。这样做是为了不默认使用大量内存，即使在大多数情况下‘table’可能更快。如果选择‘table’，*assume_unique*将不起作用。
- en: New in version 1.8.0.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在1.8.0版本中新增。
- en: 'Returns:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**in1d**(M,) ndarray, bool'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**in1d**(M,) ndarray, bool'
- en: The values *ar1[in1d]* are in *ar2*.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '*ar1[in1d]*的值在*ar2*中。'
- en: See also
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`isin`](numpy.isin.html#numpy.isin "numpy.isin")'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[`isin`](numpy.isin.html#numpy.isin "numpy.isin")'
- en: Version of this function that preserves the shape of ar1.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 保留ar1形状的此函数版本。
- en: '[`numpy.lib.arraysetops`](numpy.lib.arraysetops.html#module-numpy.lib.arraysetops
    "numpy.lib.arraysetops")'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[`numpy.lib.arraysetops`](numpy.lib.arraysetops.html#module-numpy.lib.arraysetops
    "numpy.lib.arraysetops")'
- en: Module with a number of other functions for performing set operations on arrays.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 具有执行数组上集合操作的其他函数的模块。
- en: Notes
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '[`in1d`](#numpy.in1d "numpy.in1d") can be considered as an element-wise function
    version of the python keyword *in*, for 1-D sequences. `in1d(a, b)` is roughly
    equivalent to `np.array([item in b for item in a])`. However, this idea fails
    if *ar2* is a set, or similar (non-sequence) container: As `ar2` is converted
    to an array, in those cases `asarray(ar2)` is an object array rather than the
    expected array of contained values.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[`in1d`](#numpy.in1d "numpy.in1d")可以被视为对1-D序列执行元素级函数版本的python关键字*in*。`in1d(a,
    b)`大致等同于`np.array([item in b for item in a])`。但是，如果*ar2*是一个集合或类似的（非序列）容器，则这个想法会失败：因为`ar2`被转换为数组，在这些情况下`asarray(ar2)`是一个对象数组，而不是预期的包含值的数组。'
- en: 'Using `kind=''table''` tends to be faster than *kind=’sort’* if the following
    relationship is true: `log10(len(ar2)) > (log10(max(ar2)-min(ar2)) - 2.27) / 0.927`,
    but may use greater memory. The default value for *kind* will be automatically
    selected based only on memory usage, so one may manually set `kind=''table''`
    if memory constraints can be relaxed.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当以下关系成立时，使用 `kind='table'` 通常比 *kind='sort'* 更快：`log10(len(ar2)) > (log10(max(ar2)-min(ar2))
    - 2.27) / 0.927`，但可能使用更多内存。 *kind* 的默认值将仅基于内存使用情况自动选择，因此如果内存约束可以放宽，可以手动设置 `kind='table'`。
- en: New in version 1.4.0.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本 1.4.0 中新增内容。
- en: Examples
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
