- en: pandas.DataFrame.rename
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.rename.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.rename.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Rename columns or index labels.
  prefs: []
  type: TYPE_NORMAL
- en: Function / dict values must be unique (1-to-1). Labels not contained in a dict
    / Series will be left as-is. Extra labels listed don’t throw an error.
  prefs: []
  type: TYPE_NORMAL
- en: See the [user guide](../../user_guide/basics.html#basics-rename) for more.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**mapper**dict-like or function'
  prefs: []
  type: TYPE_NORMAL
- en: Dict-like or function transformations to apply to that axis’ values. Use either
    `mapper` and `axis` to specify the axis to target with `mapper`, or `index` and
    `columns`.
  prefs: []
  type: TYPE_NORMAL
- en: '**index**dict-like or function'
  prefs: []
  type: TYPE_NORMAL
- en: Alternative to specifying axis (`mapper, axis=0` is equivalent to `index=mapper`).
  prefs: []
  type: TYPE_NORMAL
- en: '**columns**dict-like or function'
  prefs: []
  type: TYPE_NORMAL
- en: Alternative to specifying axis (`mapper, axis=1` is equivalent to `columns=mapper`).
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**{0 or ‘index’, 1 or ‘columns’}, default 0'
  prefs: []
  type: TYPE_NORMAL
- en: Axis to target with `mapper`. Can be either the axis name (‘index’, ‘columns’)
    or number (0, 1). The default is ‘index’.
  prefs: []
  type: TYPE_NORMAL
- en: '**copy**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Also copy underlying data.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: The copy keyword will change behavior in pandas 3.0. [Copy-on-Write](https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html)
    will be enabled by default, which means that all methods with a copy keyword will
    use a lazy copy mechanism to defer the copy and ignore the copy keyword. The copy
    keyword will be removed in a future version of pandas.
  prefs: []
  type: TYPE_NORMAL
- en: You can already get the future behavior and improvements through enabling copy
    on write `pd.options.mode.copy_on_write = True`
  prefs: []
  type: TYPE_NORMAL
- en: '**inplace**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to modify the DataFrame rather than creating a new one. If True then
    value of copy is ignored.
  prefs: []
  type: TYPE_NORMAL
- en: '**level**int or level name, default None'
  prefs: []
  type: TYPE_NORMAL
- en: In case of a MultiIndex, only rename labels in the specified level.
  prefs: []
  type: TYPE_NORMAL
- en: '**errors**{‘ignore’, ‘raise’}, default ‘ignore’'
  prefs: []
  type: TYPE_NORMAL
- en: If ‘raise’, raise a KeyError when a dict-like mapper, index, or columns contains
    labels that are not present in the Index being transformed. If ‘ignore’, existing
    keys will be renamed and extra keys will be ignored.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: DataFrame or None
  prefs: []
  type: TYPE_NORMAL
- en: DataFrame with the renamed axis labels or None if `inplace=True`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: KeyError
  prefs: []
  type: TYPE_NORMAL
- en: If any of the labels is not found in the selected axis and “errors=’raise’”.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.rename_axis`](pandas.DataFrame.rename_axis.html#pandas.DataFrame.rename_axis
    "pandas.DataFrame.rename_axis")'
  prefs: []
  type: TYPE_NORMAL
- en: Set the name of the axis.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrame.rename` supports two calling conventions'
  prefs: []
  type: TYPE_NORMAL
- en: '`(index=index_mapper, columns=columns_mapper, ...)`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`(mapper, axis={''index'', ''columns''}, ...)`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We *highly* recommend using keyword arguments to clarify your intent.
  prefs: []
  type: TYPE_NORMAL
- en: 'Rename columns using a mapping:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Rename index using a mapping:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Cast index labels to a different type:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Using axis-style parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
