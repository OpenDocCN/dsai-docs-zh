- en: pandas.read_orc
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.read_orc.html](https://pandas.pydata.org/docs/reference/api/pandas.read_orc.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Load an ORC object from the file path, returning a DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**path**str, path object, or file-like object'
  prefs: []
  type: TYPE_NORMAL
- en: 'String, path object (implementing `os.PathLike[str]`), or file-like object
    implementing a binary `read()` function. The string could be a URL. Valid URL
    schemes include http, ftp, s3, and file. For file URLs, a host is expected. A
    local file could be: `file://localhost/path/to/table.orc`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**columns**list, default None'
  prefs: []
  type: TYPE_NORMAL
- en: If not None, only these columns will be read from the file. Output always follows
    the ordering of the file and not the columns list. This mirrors the original behaviour
    of [`pyarrow.orc.ORCFile.read()`](https://arrow.apache.org/docs/python/generated/pyarrow.orc.ORCFile.html#pyarrow.orc.ORCFile.read
    "(in Apache Arrow v15.0.2)").
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype_backend**{‘numpy_nullable’, ‘pyarrow’}, default ‘numpy_nullable’'
  prefs: []
  type: TYPE_NORMAL
- en: 'Back-end data type applied to the resultant [`DataFrame`](pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") (still experimental). Behaviour is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`"numpy_nullable"`: returns nullable-dtype-backed [`DataFrame`](pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") (default).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`"pyarrow"`: returns pyarrow-backed nullable [`ArrowDtype`](pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") DataFrame.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New in version 2.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**filesystem**fsspec or pyarrow filesystem, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Filesystem object to use when reading the parquet file.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 2.1.0.
  prefs: []
  type: TYPE_NORMAL
- en: '****kwargs**'
  prefs: []
  type: TYPE_NORMAL
- en: Any additional kwargs are passed to pyarrow.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Before using this function you should read the [user guide about ORC](../../user_guide/io.html#io-orc)
    and [install optional dependencies](../../getting_started/install.html#install-warn-orc).
  prefs: []
  type: TYPE_NORMAL
- en: If `path` is a URI scheme pointing to a local or remote file (e.g. “s3://”),
    a `pyarrow.fs` filesystem will be attempted to read the file. You can also pass
    a pyarrow or fsspec filesystem object into the filesystem keyword to override
    this behavior.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
