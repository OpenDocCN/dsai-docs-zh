- en: YOLOv5
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: YOLOv5
- en: 原文：[`docs.ultralytics.com/models/yolov5/`](https://docs.ultralytics.com/models/yolov5/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[`docs.ultralytics.com/models/yolov5/`](https://docs.ultralytics.com/models/yolov5/)
- en: Overview
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概述
- en: YOLOv5u represents an advancement in object detection methodologies. Originating
    from the foundational architecture of the [YOLOv5](https://github.com/ultralytics/yolov5)
    model developed by Ultralytics, YOLOv5u integrates the anchor-free, objectness-free
    split head, a feature previously introduced in the YOLOv8 models. This adaptation
    refines the model's architecture, leading to an improved accuracy-speed tradeoff
    in object detection tasks. Given the empirical results and its derived features,
    YOLOv5u provides an efficient alternative for those seeking robust solutions in
    both research and practical applications.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv5u代表了物体检测方法论的进步。源自Ultralytics开发的YOLOv5模型的基础架构，YOLOv5u集成了无锚点、无对象性的分割头部，这一特性此前已在YOLOv8模型中引入。这种适应性调整优化了模型的架构，在物体检测任务中实现了更好的准确度和速度权衡。根据实证结果及其派生特性，YOLOv5u为那些在研究和实际应用中寻求强大解决方案的人提供了高效的替代选择。
- en: '![Ultralytics YOLOv5](img/043a7987b73c701bfe07aa6ab67c7f4c.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![Ultralytics YOLOv5](img/043a7987b73c701bfe07aa6ab67c7f4c.png)'
- en: Key Features
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 主要特点
- en: '**Anchor-free Split Ultralytics Head:** Traditional object detection models
    rely on predefined anchor boxes to predict object locations. However, YOLOv5u
    modernizes this approach. By adopting an anchor-free split Ultralytics head, it
    ensures a more flexible and adaptive detection mechanism, consequently enhancing
    the performance in diverse scenarios.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**无锚点分割Ultralytics头：** 传统的物体检测模型依赖预定义的锚框来预测物体位置。然而，YOLOv5u现代化了这种方法。通过采用无锚点分割Ultralytics头，它确保了更灵活和适应性更强的检测机制，从而在多种场景中提高了性能。'
- en: '**Optimized Accuracy-Speed Tradeoff:** Speed and accuracy often pull in opposite
    directions. But YOLOv5u challenges this tradeoff. It offers a calibrated balance,
    ensuring real-time detections without compromising on accuracy. This feature is
    particularly invaluable for applications that demand swift responses, such as
    autonomous vehicles, robotics, and real-time video analytics.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**优化的准确度-速度权衡：** 速度和准确度常常相互制约。但YOLOv5u挑战了这种权衡。它提供了一个校准的平衡，确保实时检测而不会牺牲准确性。这一特性在需要快速响应的应用中尤为宝贵，如自动驾驶车辆、机器人技术和实时视频分析。'
- en: '**Variety of Pre-trained Models:** Understanding that different tasks require
    different toolsets, YOLOv5u provides a plethora of pre-trained models. Whether
    you''re focusing on Inference, Validation, or Training, there''s a tailor-made
    model awaiting you. This variety ensures you''re not just using a one-size-fits-all
    solution, but a model specifically fine-tuned for your unique challenge.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**各种预训练模型：** 了解到不同任务需要不同的工具集，YOLOv5u提供了大量预训练模型。无论您是专注于推理、验证还是训练，都有一个专门为您等待的量身定制的模型。这种多样性确保您不仅使用一种“一刀切”的解决方案，而是一种专门为您独特挑战进行了优化调整的模型。'
- en: Supported Tasks and Modes
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 支持的任务和模式
- en: The YOLOv5u models, with various pre-trained weights, excel in Object Detection
    tasks. They support a comprehensive range of modes, making them suitable for diverse
    applications, from development to deployment.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv5u模型以各种预训练权重在物体检测任务中表现卓越。它们支持广泛的模式，适用于从开发到部署的各种应用。
- en: '| Model Type | Pre-trained Weights | Task | Inference | Validation | Training
    | Export |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| 模型类型 | 预训练权重 | 任务 | 推理 | 验证 | 训练 | 导出 |'
- en: '| --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- |'
- en: '| YOLOv5u | `yolov5nu`, `yolov5su`, `yolov5mu`, `yolov5lu`, `yolov5xu`, `yolov5n6u`,
    `yolov5s6u`, `yolov5m6u`, `yolov5l6u`, `yolov5x6u` | Object Detection | ✅ | ✅
    | ✅ | ✅ |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| YOLOv5u | `yolov5nu`, `yolov5su`, `yolov5mu`, `yolov5lu`, `yolov5xu`, `yolov5n6u`,
    `yolov5s6u`, `yolov5m6u`, `yolov5l6u`, `yolov5x6u` | 物体检测 | ✅ | ✅ | ✅ | ✅ |'
- en: This table provides a detailed overview of the YOLOv5u model variants, highlighting
    their applicability in object detection tasks and support for various operational
    modes such as Inference, Validation, Training, and Export. This comprehensive
    support ensures that users can fully leverage the capabilities of YOLOv5u models
    in a wide range of object detection scenarios.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 此表详细介绍了YOLOv5u模型变体的概述，突出了它们在物体检测任务中的适用性以及对推理、验证、训练和导出等各种操作模式的支持。这种全面的支持确保用户能充分利用YOLOv5u模型在各种物体检测场景中的能力。
- en: Performance Metrics
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 性能指标
- en: Performance
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 性能
- en: See Detection Docs for usage examples with these models trained on COCO, which
    include 80 pre-trained classes.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 请查看检测文档，了解在COCO数据集上训练的这些模型的使用示例，其中包括80个预训练类别。
- en: '| Model | YAML | size ^((pixels)) | mAP^(val 50-95) | Speed ^(CPU ONNX'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '| Model | YAML | size ^((pixels)) | mAP^(val 50-95) | Speed ^(CPU ONNX'
- en: (ms)) | Speed ^(A100 TensorRT
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: (ms)) | Speed ^(A100 TensorRT
- en: (ms)) | params ^((M)) | FLOPs ^((B)) |
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: (ms)) | params ^((M)) | FLOPs ^((B)) |
- en: '| --- | --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- | --- |'
- en: '| [yolov5nu.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov5nu.pt)
    | [yolov5n.yaml](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/models/v5/yolov5.yaml)
    | 640 | 34.3 | 73.6 | 1.06 | 2.6 | 7.7 |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [yolov5nu.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov5nu.pt)
    | [yolov5n.yaml](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/models/v5/yolov5.yaml)
    | 640 | 34.3 | 73.6 | 1.06 | 2.6 | 7.7 |'
- en: '| [yolov5su.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov5su.pt)
    | [yolov5s.yaml](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/models/v5/yolov5.yaml)
    | 640 | 43.0 | 120.7 | 1.27 | 9.1 | 24.0 |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [yolov5su.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov5su.pt)
    | [yolov5s.yaml](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/models/v5/yolov5.yaml)
    | 640 | 43.0 | 120.7 | 1.27 | 9.1 | 24.0 |'
- en: '| [yolov5mu.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov5mu.pt)
    | [yolov5m.yaml](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/models/v5/yolov5.yaml)
    | 640 | 49.0 | 233.9 | 1.86 | 25.1 | 64.2 |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [yolov5mu.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov5mu.pt)
    | [yolov5m.yaml](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/models/v5/yolov5.yaml)
    | 640 | 49.0 | 233.9 | 1.86 | 25.1 | 64.2 |'
- en: '| [yolov5lu.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov5lu.pt)
    | [yolov5l.yaml](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/models/v5/yolov5.yaml)
    | 640 | 52.2 | 408.4 | 2.50 | 53.2 | 135.0 |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [yolov5lu.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov5lu.pt)
    | [yolov5l.yaml](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/models/v5/yolov5.yaml)
    | 640 | 52.2 | 408.4 | 2.50 | 53.2 | 135.0 |'
- en: '| [yolov5xu.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov5xu.pt)
    | [yolov5x.yaml](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/models/v5/yolov5.yaml)
    | 640 | 53.2 | 763.2 | 3.81 | 97.2 | 246.4 |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [yolov5xu.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov5xu.pt)
    | [yolov5x.yaml](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/models/v5/yolov5.yaml)
    | 640 | 53.2 | 763.2 | 3.81 | 97.2 | 246.4 |'
- en: '|  |  |  |  |  |  |  |  |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '|  |  |  |  |  |  |  |  |'
- en: '| [yolov5n6u.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov5n6u.pt)
    | [yolov5n6.yaml](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/models/v5/yolov5-p6.yaml)
    | 1280 | 42.1 | 211.0 | 1.83 | 4.3 | 7.8 |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [yolov5n6u.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov5n6u.pt)
    | [yolov5n6.yaml](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/models/v5/yolov5-p6.yaml)
    | 1280 | 42.1 | 211.0 | 1.83 | 4.3 | 7.8 |'
- en: '| [yolov5s6u.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov5s6u.pt)
    | [yolov5s6.yaml](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/models/v5/yolov5-p6.yaml)
    | 1280 | 48.6 | 422.6 | 2.34 | 15.3 | 24.6 |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [yolov5s6u.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov5s6u.pt)
    | [yolov5s6.yaml](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/models/v5/yolov5-p6.yaml)
    | 1280 | 48.6 | 422.6 | 2.34 | 15.3 | 24.6 |'
- en: '| [yolov5m6u.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov5m6u.pt)
    | [yolov5m6.yaml](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/models/v5/yolov5-p6.yaml)
    | 1280 | 53.6 | 810.9 | 4.36 | 41.2 | 65.7 |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [yolov5m6u.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov5m6u.pt)
    | [yolov5m6.yaml](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/models/v5/yolov5-p6.yaml)
    | 1280 | 53.6 | 810.9 | 4.36 | 41.2 | 65.7 |'
- en: '| [yolov5l6u.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov5l6u.pt)
    | [yolov5l6.yaml](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/models/v5/yolov5-p6.yaml)
    | 1280 | 55.7 | 1470.9 | 5.47 | 86.1 | 137.4 |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [yolov5l6u.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov5l6u.pt)
    | [yolov5l6.yaml](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/models/v5/yolov5-p6.yaml)
    | 1280 | 55.7 | 1470.9 | 5.47 | 86.1 | 137.4 |'
- en: '| [yolov5x6u.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov5x6u.pt)
    | [yolov5x6.yaml](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/models/v5/yolov5-p6.yaml)
    | 1280 | 56.8 | 2436.5 | 8.98 | 155.4 | 250.7 |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [yolov5x6u.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov5x6u.pt)
    | [yolov5x6.yaml](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/models/v5/yolov5-p6.yaml)
    | 1280 | 56.8 | 2436.5 | 8.98 | 155.4 | 250.7 |'
- en: Usage Examples
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Usage Examples
- en: This example provides simple YOLOv5 training and inference examples. For full
    documentation on these and other modes see the Predict, Train, Val and Export
    docs pages.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: This example provides simple YOLOv5 training and inference examples. For full
    documentation on these and other modes see the Predict, Train, Val and Export
    docs pages.
- en: Example
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Example
- en: 'PyTorch pretrained `*.pt` models as well as configuration `*.yaml` files can
    be passed to the `YOLO()` class to create a model instance in python:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: PyTorch预训练的`*.pt`模型以及配置`*.yaml`文件可以传递给`YOLO()`类，以在Python中创建模型实例：
- en: '[PRE0]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'CLI commands are available to directly run the models:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: CLI命令可直接运行模型：
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Citations and Acknowledgements
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引文和致谢
- en: 'If you use YOLOv5 or YOLOv5u in your research, please cite the Ultralytics
    YOLOv5 repository as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在研究中使用YOLOv5或YOLOv5u，请引用Ultralytics YOLOv5库的存储库如下：
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Please note that YOLOv5 models are provided under [AGPL-3.0](https://github.com/ultralytics/ultralytics/blob/main/LICENSE)
    and [Enterprise](https://ultralytics.com/license) licenses.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，YOLOv5模型根据[AGPL-3.0](https://github.com/ultralytics/ultralytics/blob/main/LICENSE)和[企业](https://ultralytics.com/license)许可提供。
- en: FAQ
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常见问题解答
- en: What is Ultralytics YOLOv5u and how does it differ from YOLOv5?
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Ultralytics YOLOv5u是什么，它与YOLOv5有什么不同？
- en: Ultralytics YOLOv5u is an advanced version of YOLOv5, integrating the anchor-free,
    objectness-free split head that enhances the accuracy-speed tradeoff for real-time
    object detection tasks. Unlike the traditional YOLOv5, YOLOv5u adopts an anchor-free
    detection mechanism, making it more flexible and adaptive in diverse scenarios.
    For more detailed information on its features, you can refer to the YOLOv5 Overview.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Ultralytics YOLOv5u是YOLOv5的高级版本，集成了无锚点、无对象性分裂头部，增强了实时目标检测任务的精度和速度折衷。与传统的YOLOv5不同，YOLOv5u采用无锚点检测机制，使其在不同场景中更加灵活和适应性强。关于其特性的更多详细信息，请参考YOLOv5概述。
- en: How does the anchor-free Ultralytics head improve object detection performance
    in YOLOv5u?
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 无锚点的Ultralytics头部如何提高YOLOv5u中的目标检测性能？
- en: The anchor-free Ultralytics head in YOLOv5u improves object detection performance
    by eliminating the dependency on predefined anchor boxes. This results in a more
    flexible and adaptive detection mechanism that can handle various object sizes
    and shapes with greater efficiency. This enhancement directly contributes to a
    balanced tradeoff between accuracy and speed, making YOLOv5u suitable for real-time
    applications. Learn more about its architecture in the Key Features section.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv5u中的无锚点Ultralytics头部通过消除对预定义锚点框的依赖来提高目标检测性能。这导致了更灵活、适应性更强的检测机制，可以更高效地处理各种大小和形状的物体。这种增强直接促成了精度和速度之间的平衡折衷，使YOLOv5u适用于实时应用。在关键特性部分了解其架构的更多信息。
- en: Can I use pre-trained YOLOv5u models for different tasks and modes?
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我可以将预训练的YOLOv5u模型用于不同的任务和模式吗？
- en: Yes, you can use pre-trained YOLOv5u models for various tasks such as Object
    Detection. These models support multiple modes, including Inference, Validation,
    Training, and Export. This flexibility allows users to leverage the capabilities
    of YOLOv5u models across different operational requirements. For a detailed overview,
    check the Supported Tasks and Modes section.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，您可以将预训练的YOLOv5u模型用于物体检测等多种任务。这些模型支持包括推断、验证、训练和导出在内的多种模式。这种灵活性使用户能够在不同的操作需求下利用YOLOv5u模型的能力。详细概述，请查看支持的任务和模式部分。
- en: How do the performance metrics of YOLOv5u models compare on different platforms?
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: YOLOv5u模型在不同平台上的性能指标如何比较？
- en: The performance metrics of YOLOv5u models vary depending on the platform and
    hardware used. For example, the YOLOv5nu model achieves a 34.3 mAP on COCO dataset
    with a speed of 73.6 ms on CPU (ONNX) and 1.06 ms on A100 TensorRT. Detailed performance
    metrics for different YOLOv5u models can be found in the Performance Metrics section,
    which provides a comprehensive comparison across various devices.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv5u模型的性能指标因平台和硬件的不同而有所不同。例如，YOLOv5nu模型在COCO数据集上的mAP达到34.3，在CPU（ONNX）上的速度为73.6毫秒，在A100
    TensorRT上为1.06毫秒。详细的不同YOLOv5u模型的性能指标可以在性能指标部分找到，该部分提供了跨各种设备的全面比较。
- en: How can I train a YOLOv5u model using the Ultralytics Python API?
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何使用Ultralytics Python API训练YOLOv5u模型？
- en: 'You can train a YOLOv5u model by loading a pre-trained model and running the
    training command with your dataset. Here''s a quick example:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过加载预训练模型并使用您的数据集运行训练命令来训练YOLOv5u模型。以下是一个快速示例：
- en: Example
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE3]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: For more detailed instructions, visit the Usage Examples section.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更详细的说明，请访问使用示例部分。
