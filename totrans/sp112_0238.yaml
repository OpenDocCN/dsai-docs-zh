- en: scipy.linalg.solveh_banded
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.solveh_banded.html#scipy.linalg.solveh_banded](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.solveh_banded.html#scipy.linalg.solveh_banded)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Solve equation a x = b. a is Hermitian positive-definite banded matrix.
  prefs: []
  type: TYPE_NORMAL
- en: Uses Thomas’ Algorithm, which is more efficient than standard LU factorization,
    but should only be used for Hermitian positive-definite matrices.
  prefs: []
  type: TYPE_NORMAL
- en: 'The matrix `a` is stored in *ab* either in lower diagonal or upper diagonal
    ordered form:'
  prefs: []
  type: TYPE_NORMAL
- en: ab[u + i - j, j] == a[i,j] (if upper form; i <= j) ab[ i - j, j] == a[i,j] (if
    lower form; i >= j)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Example of *ab* (shape of `a` is (6, 6), number of upper diagonals, `u` =2):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Cells marked with * are not used.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**ab**(`u` + 1, M) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Banded matrix
  prefs: []
  type: TYPE_NORMAL
- en: '**b**(M,) or (M, K) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Right-hand side
  prefs: []
  type: TYPE_NORMAL
- en: '**overwrite_ab**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Discard data in *ab* (may enhance performance)
  prefs: []
  type: TYPE_NORMAL
- en: '**overwrite_b**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Discard data in *b* (may enhance performance)
  prefs: []
  type: TYPE_NORMAL
- en: '**lower**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Is the matrix in the lower form. (Default is upper form)
  prefs: []
  type: TYPE_NORMAL
- en: '**check_finite**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to check that the input matrices contain only finite numbers. Disabling
    may give a performance gain, but may result in problems (crashes, non-termination)
    if the inputs do contain infinities or NaNs.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**(M,) or (M, K) ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The solution to the system `a x = b`. Shape of return matches shape of *b*.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: In the case of a non-positive definite matrix `a`, the solver [`solve_banded`](scipy.linalg.solve_banded.html#scipy.linalg.solve_banded
    "scipy.linalg.solve_banded") may be used.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Solve the banded system `A x = b`, where:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '`ab` contains the main diagonal and the nonzero diagonals below the main diagonal.
    That is, we use the lower form:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Solve the Hermitian banded system `H x = b`, where:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'In this example, we put the upper diagonals in the array `hb`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
