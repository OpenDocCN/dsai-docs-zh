- en: Functions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/functions/index.html](https://docs.sympy.org/latest/modules/functions/index.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: All functions support the methods documented below, inherited from [`sympy.core.function.Function`](../core.html#sympy.core.function.Function
    "sympy.core.function.Function").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Base class for applied mathematical functions.
  prefs: []
  type: TYPE_NORMAL
- en: It also serves as a constructor for undefined function classes.
  prefs: []
  type: TYPE_NORMAL
- en: See the [Writing Custom Functions](../../guides/custom-functions.html#custom-functions)
    guide for details on how to subclass `Function` and what methods can be defined.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '**Undefined Functions**'
  prefs: []
  type: TYPE_NORMAL
- en: To create an undefined function, pass a string of the function name to `Function`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Assumptions can be passed to `Function` the same as with a [`Symbol`](../core.html#sympy.core.symbol.Symbol
    "sympy.core.symbol.Symbol"). Alternatively, you can use a `Symbol` with assumptions
    for the function name and the function will inherit the name and assumptions associated
    with the `Symbol`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Note that assumptions on a function are unrelated to the assumptions on the
    variables it is called on. If you want to add a relationship, subclass `Function`
    and define custom assumptions handler methods. See the [Assumptions](../../guides/custom-functions.html#custom-functions-assumptions)
    section of the [Writing Custom Functions](../../guides/custom-functions.html#custom-functions)
    guide for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '**Custom Function Subclasses**'
  prefs: []
  type: TYPE_NORMAL
- en: The [Writing Custom Functions](../../guides/custom-functions.html#custom-functions)
    guide has several [Complete Examples](../../guides/custom-functions.html#custom-functions-complete-examples)
    of how to subclass `Function` to create a custom function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Returns the method as the 2-tuple (base, exponent).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Returns the first derivative of the function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Tests whether the argument is an essential singularity or a branch point, or
    the functions is non-holomorphic.
  prefs: []
  type: TYPE_NORMAL
- en: '## Contents'
  prefs: []
  type: TYPE_NORMAL
- en: '[Elementary](elementary.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Combinatorial](combinatorial.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Enumeration](combinatorial.html#enumeration)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Special](special.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
