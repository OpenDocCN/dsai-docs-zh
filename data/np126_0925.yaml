- en: numpy.shares_memory
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.shares_memory
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.shares_memory.html](https://numpy.org/doc/1.26/reference/generated/numpy.shares_memory.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.shares_memory.html](https://numpy.org/doc/1.26/reference/generated/numpy.shares_memory.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Determine if two arrays share memory.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 确定两个数组是否共享内存。
- en: Warning
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: This function can be exponentially slow for some inputs, unless *max_work* is
    set to a finite number or `MAY_SHARE_BOUNDS`. If in doubt, use [`numpy.may_share_memory`](numpy.may_share_memory.html#numpy.may_share_memory
    "numpy.may_share_memory") instead.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 除非将*max_work*设置为有限数或`MAY_SHARE_BOUNDS`，否则该函数对某些输入可能会以指数级慢。如果有疑问，请使用[`numpy.may_share_memory`](numpy.may_share_memory.html#numpy.may_share_memory
    "numpy.may_share_memory")。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a, b**ndarray'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**a, b**ndarray'
- en: Input arrays
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数组
- en: '**max_work**int, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**max_work**int, 可选'
- en: 'Effort to spend on solving the overlap problem (maximum number of candidate
    solutions to consider). The following special values are recognized:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 用于解决重叠问题的工作量（要考虑的候选解的最大数量）。 下面识别了一些特殊值：
- en: max_work=MAY_SHARE_EXACT (default)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: max_work=MAY_SHARE_EXACT（默认）
- en: The problem is solved exactly. In this case, the function returns True only
    if there is an element shared between the arrays. Finding the exact solution may
    take extremely long in some cases.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 问题已被精确解决。在这种情况下，仅当数组之间存在共享元素时，函数才返回True。在某些情况下，寻找确切解可能需要很长时间。
- en: max_work=MAY_SHARE_BOUNDS
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: max_work=MAY_SHARE_BOUNDS
- en: Only the memory bounds of a and b are checked.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 仅检查a和b的内存边界。
- en: 'Returns:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**out**bool'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**bool'
- en: 'Raises:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 抛出：
- en: numpy.exceptions.TooHardError
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: numpy.exceptions.TooHardError
- en: Exceeded max_work.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 超过max_work。
- en: See also
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`may_share_memory`](numpy.may_share_memory.html#numpy.may_share_memory "numpy.may_share_memory")'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[`may_share_memory`](numpy.may_share_memory.html#numpy.may_share_memory "numpy.may_share_memory")'
- en: Examples
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Checking whether two arrays share memory is NP-complete, and runtime may increase
    exponentially in the number of dimensions. Hence, *max_work* should generally
    be set to a finite number, as it is possible to construct examples that take extremely
    long to run:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 检查两个数组是否共享内存是NP完全的，并且运行时间可能会随维数的增加呈指数级增长。因此，*max_work*通常应设置为有限数，因为可能构造需要运行极长时间的示例：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Running `np.shares_memory(x1, x2)` without *max_work* set takes around 1 minute
    for this case. It is possible to find problems that take still significantly longer.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在没有设置*max_work*的情况下运行`np.shares_memory(x1, x2)`大约需要1分钟。可能还会找到需要更长时间解决的问题。
