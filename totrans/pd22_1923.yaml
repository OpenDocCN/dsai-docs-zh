- en: What’s new in 1.2.0 (December 26, 2020)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/whatsnew/v1.2.0.html](https://pandas.pydata.org/docs/whatsnew/v1.2.0.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: These are the changes in pandas 1.2.0\. See [Release notes](index.html#release)
    for a full changelog including other versions of pandas.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: The [xlwt](https://xlwt.readthedocs.io/en/latest/) package for writing old-style
    `.xls` excel files is no longer maintained. The [xlrd](https://xlrd.readthedocs.io/en/latest/)
    package is now only for reading old-style `.xls` files.
  prefs: []
  type: TYPE_NORMAL
- en: Previously, the default argument `engine=None` to [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") would result in using the `xlrd` engine in many cases, including
    new Excel 2007+ (`.xlsx`) files. If [openpyxl](https://openpyxl.readthedocs.io/en/stable/)
    is installed, many of these cases will now default to using the `openpyxl` engine.
    See the [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") documentation for more details.
  prefs: []
  type: TYPE_NORMAL
- en: Thus, it is strongly encouraged to install `openpyxl` to read Excel 2007+ (`.xlsx`)
    files. **Please do not report issues when using ``xlrd`` to read ``.xlsx`` files.**
    This is no longer supported, switch to using `openpyxl` instead.
  prefs: []
  type: TYPE_NORMAL
- en: Attempting to use the `xlwt` engine will raise a `FutureWarning` unless the
    option `io.excel.xls.writer` is set to `"xlwt"`. While this option is now deprecated
    and will also raise a `FutureWarning`, it can be globally set and the warning
    suppressed. Users are recommended to write `.xlsx` files using the `openpyxl`
    engine instead.
  prefs: []
  type: TYPE_NORMAL
- en: Enhancements
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### Optionally disallow duplicate labels'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    can now be created with `allows_duplicate_labels=False` flag to control whether
    the index or columns can contain duplicate labels ([GH 28394](https://github.com/pandas-dev/pandas/issues/28394)).
    This can be used to prevent accidental introduction of duplicate labels, which
    can affect downstream operations.'
  prefs: []
  type: TYPE_NORMAL
- en: By default, duplicates continue to be allowed.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: pandas will propagate the `allows_duplicate_labels` property through many operations.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: This is an experimental feature. Currently, many methods fail to propagate the
    `allows_duplicate_labels` value. In future versions it is expected that every
    method taking or returning one or more DataFrame or Series objects will propagate
    `allows_duplicate_labels`.
  prefs: []
  type: TYPE_NORMAL
- en: See [Duplicate Labels](../user_guide/duplicates.html#duplicates) for more.
  prefs: []
  type: TYPE_NORMAL
- en: The `allows_duplicate_labels` flag is stored in the new `DataFrame.flags` attribute.
    This stores global attributes that apply to the *pandas object*. This differs
    from [`DataFrame.attrs`](../reference/api/pandas.DataFrame.attrs.html#pandas.DataFrame.attrs
    "pandas.DataFrame.attrs"), which stores information that applies to the dataset.
  prefs: []
  type: TYPE_NORMAL
- en: Passing arguments to fsspec backends
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Many read/write functions have acquired the `storage_options` optional argument,
    to pass a dictionary of parameters to the storage backend. This allows, for example,
    for passing credentials to S3 and GCS storage. The details of what parameters
    can be passed to which backends can be found in the documentation of the individual
    storage backends (detailed from the fsspec docs for [builtin implementations](https://filesystem-spec.readthedocs.io/en/latest/api.html#built-in-implementations)
    and linked to [external ones](https://filesystem-spec.readthedocs.io/en/latest/api.html#other-known-implementations)).
    See Section [Reading/writing remote files](../user_guide/io.html#io-remote).
  prefs: []
  type: TYPE_NORMAL
- en: '[GH 35655](https://github.com/pandas-dev/pandas/issues/35655) added fsspec
    support (including `storage_options`) for reading excel files.'
  prefs: []
  type: TYPE_NORMAL
- en: '### Support for binary file handles in `to_csv`'
  prefs: []
  type: TYPE_NORMAL
- en: '`to_csv()` supports file handles in binary mode ([GH 19827](https://github.com/pandas-dev/pandas/issues/19827)
    and [GH 35058](https://github.com/pandas-dev/pandas/issues/35058)) with `encoding`
    ([GH 13068](https://github.com/pandas-dev/pandas/issues/13068) and [GH 23854](https://github.com/pandas-dev/pandas/issues/23854))
    and `compression` ([GH 22555](https://github.com/pandas-dev/pandas/issues/22555)).
    If pandas does not automatically detect whether the file handle is opened in binary
    or text mode, it is necessary to provide `mode="wb"`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Support for short caption and table position in `to_latex`
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") now allows one to specify a floating table position
    ([GH 35281](https://github.com/pandas-dev/pandas/issues/35281)) and a short caption
    ([GH 36267](https://github.com/pandas-dev/pandas/issues/36267)).'
  prefs: []
  type: TYPE_NORMAL
- en: The keyword `position` has been added to set the position.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Usage of the keyword `caption` has been extended. Besides taking a single string
    as an argument, one can optionally provide a tuple `(full_caption, short_caption)`
    to add a short caption macro.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '### Change in default floating precision for `read_csv` and `read_table`'
  prefs: []
  type: TYPE_NORMAL
- en: 'For the C parsing engine, the methods [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") previously defaulted to a parser that could read floating
    point numbers slightly incorrectly with respect to the last bit in precision.
    The option `floating_precision="high"` has always been available to avoid this
    issue. Beginning with this version, the default is now to use the more accurate
    parser by making `floating_precision=None` correspond to the high precision parser,
    and the new option `floating_precision="legacy"` to use the legacy parser. The
    change to using the higher precision parser by default should have no impact on
    performance. ([GH 17154](https://github.com/pandas-dev/pandas/issues/17154))  ###
    Experimental nullable data types for float data'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve added [`Float32Dtype`](../reference/api/pandas.Float32Dtype.html#pandas.Float32Dtype
    "pandas.Float32Dtype") / [`Float64Dtype`](../reference/api/pandas.Float64Dtype.html#pandas.Float64Dtype
    "pandas.Float64Dtype") and [`FloatingArray`](../reference/api/pandas.arrays.FloatingArray.html#pandas.arrays.FloatingArray
    "pandas.arrays.FloatingArray"). These are extension data types dedicated to floating
    point data that can hold the `pd.NA` missing value indicator ([GH 32265](https://github.com/pandas-dev/pandas/issues/32265),
    [GH 34307](https://github.com/pandas-dev/pandas/issues/34307)).
  prefs: []
  type: TYPE_NORMAL
- en: While the default float data type already supports missing values using `np.nan`,
    these new data types use `pd.NA` (and its corresponding behavior) as the missing
    value indicator, in line with the already existing nullable [integer](../user_guide/integer_na.html#integer-na)
    and [boolean](../user_guide/boolean.html#boolean) data types.
  prefs: []
  type: TYPE_NORMAL
- en: 'One example where the behavior of `np.nan` and `pd.NA` is different is comparison
    operations:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: See the [NA semantics](../user_guide/missing_data.html#missing-data-na) doc
    section for more details on the behavior when using the `pd.NA` missing value
    indicator.
  prefs: []
  type: TYPE_NORMAL
- en: 'As shown above, the dtype can be specified using the “Float64” or “Float32”
    string (capitalized to distinguish it from the default “float64” data type). Alternatively,
    you can also use the dtype object:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Operations with the existing integer or boolean nullable data types that give
    float results will now also use the nullable floating data types ([GH 38178](https://github.com/pandas-dev/pandas/issues/38178)).
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: 'Experimental: the new floating data types are currently experimental, and their
    behavior or API may still change without warning. Especially the behavior regarding
    NaN (distinct from NA missing values) is subject to change.  ### Index/column
    name preservation when aggregating'
  prefs: []
  type: TYPE_NORMAL
- en: 'When aggregating using [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") or the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor, pandas will now attempt to preserve index and
    column names whenever possible ([GH 35847](https://github.com/pandas-dev/pandas/issues/35847)).
    In the case where all inputs share a common name, this name will be assigned to
    the result. When the input names do not all agree, the result will be unnamed.
    Here is an example where the index name is preserved:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'The same is true for [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"), but the logic is applied separately on a level-by-level
    basis.  ### GroupBy supports EWM operations directly'
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrameGroupBy` now supports exponentially weighted window operations directly
    ([GH 16037](https://github.com/pandas-dev/pandas/issues/16037)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Additionally `mean` supports execution via [Numba](https://numba.pydata.org/)
    with the `engine` and `engine_kwargs` arguments. Numba must be installed as an
    optional dependency to use this feature.  ### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: Added `day_of_week` (compatibility alias `dayofweek`) property to [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp"), [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period"), [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") ([GH 9605](https://github.com/pandas-dev/pandas/issues/9605))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `day_of_year` (compatibility alias `dayofyear`) property to [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp"), [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period"), [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") ([GH 9605](https://github.com/pandas-dev/pandas/issues/9605))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`set_flags()`](../reference/api/pandas.DataFrame.set_flags.html#pandas.DataFrame.set_flags
    "pandas.DataFrame.set_flags") for setting table-wide flags on a Series or DataFrame
    ([GH 28394](https://github.com/pandas-dev/pandas/issues/28394))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.applymap()`](../reference/api/pandas.DataFrame.applymap.html#pandas.DataFrame.applymap
    "pandas.DataFrame.applymap") now supports `na_action` ([GH 23803](https://github.com/pandas-dev/pandas/issues/23803))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") with
    object dtype supports division and multiplication ([GH 34160](https://github.com/pandas-dev/pandas/issues/34160))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`io.sql.get_schema()` now supports a `schema` keyword argument that will add
    a schema into the create table statement ([GH 28486](https://github.com/pandas-dev/pandas/issues/28486))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.explode()`](../reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode
    "pandas.DataFrame.explode") and [`Series.explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode") now support exploding of sets ([GH 35614](https://github.com/pandas-dev/pandas/issues/35614))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.hist()`](../reference/api/pandas.DataFrame.hist.html#pandas.DataFrame.hist
    "pandas.DataFrame.hist") now supports time series (datetime) data ([GH 32590](https://github.com/pandas-dev/pandas/issues/32590))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Styler.set_table_styles()`](../reference/api/pandas.io.formats.style.Styler.set_table_styles.html#pandas.io.formats.style.Styler.set_table_styles
    "pandas.io.formats.style.Styler.set_table_styles") now allows the direct styling
    of rows and columns and can be chained ([GH 35607](https://github.com/pandas-dev/pandas/issues/35607))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") now allows direct CSS class name addition to
    individual data cells ([GH 36159](https://github.com/pandas-dev/pandas/issues/36159))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Rolling.mean()`](../reference/api/pandas.core.window.rolling.Rolling.mean.html#pandas.core.window.rolling.Rolling.mean
    "pandas.core.window.rolling.Rolling.mean") and [`Rolling.sum()`](../reference/api/pandas.core.window.rolling.Rolling.sum.html#pandas.core.window.rolling.Rolling.sum
    "pandas.core.window.rolling.Rolling.sum") use Kahan summation to calculate the
    mean to avoid numerical problems ([GH 10319](https://github.com/pandas-dev/pandas/issues/10319),
    [GH 11645](https://github.com/pandas-dev/pandas/issues/11645), [GH 13254](https://github.com/pandas-dev/pandas/issues/13254),
    [GH 32761](https://github.com/pandas-dev/pandas/issues/32761), [GH 36031](https://github.com/pandas-dev/pandas/issues/36031))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.searchsorted()`, `TimedeltaIndex.searchsorted()`, `PeriodIndex.searchsorted()`,
    and [`Series.searchsorted()`](../reference/api/pandas.Series.searchsorted.html#pandas.Series.searchsorted
    "pandas.Series.searchsorted") with datetime-like dtypes will now try to cast string
    arguments (list-like and scalar) to the matching datetime-like type ([GH 36346](https://github.com/pandas-dev/pandas/issues/36346))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added methods `IntegerArray.prod()`, `IntegerArray.min()`, and `IntegerArray.max()`
    ([GH 33790](https://github.com/pandas-dev/pandas/issues/33790))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calling a NumPy ufunc on a `DataFrame` with extension types now preserves the
    extension types when possible ([GH 23743](https://github.com/pandas-dev/pandas/issues/23743))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calling a binary-input NumPy ufunc on multiple `DataFrame` objects now aligns,
    matching the behavior of binary operations and ufuncs on `Series` ([GH 23743](https://github.com/pandas-dev/pandas/issues/23743)).
    This change has been reverted in pandas 1.2.1, and the behaviour to not align
    DataFrames is deprecated instead, see the [the 1.2.1 release notes](v1.2.1.html#whatsnew-121-ufunc-deprecation).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Where possible `RangeIndex.difference()` and `RangeIndex.symmetric_difference()`
    will return [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") instead of `Int64Index` ([GH 36564](https://github.com/pandas-dev/pandas/issues/36564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") now supports [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") for columns in parquet format ([GH 34777](https://github.com/pandas-dev/pandas/issues/34777))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") gained a `use_nullable_dtypes=True` option to use nullable
    dtypes that use `pd.NA` as missing value indicator where possible for the resulting
    DataFrame (default is `False`, and only applicable for `engine="pyarrow"`) ([GH
    31242](https://github.com/pandas-dev/pandas/issues/31242))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`Rolling.sem()`](../reference/api/pandas.core.window.rolling.Rolling.sem.html#pandas.core.window.rolling.Rolling.sem
    "pandas.core.window.rolling.Rolling.sem") and `Expanding.sem()` to compute the
    standard error of the mean ([GH 26476](https://github.com/pandas-dev/pandas/issues/26476))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Rolling.var()`](../reference/api/pandas.core.window.rolling.Rolling.var.html#pandas.core.window.rolling.Rolling.var
    "pandas.core.window.rolling.Rolling.var") and [`Rolling.std()`](../reference/api/pandas.core.window.rolling.Rolling.std.html#pandas.core.window.rolling.Rolling.std
    "pandas.core.window.rolling.Rolling.std") use Kahan summation and Welford’s Method
    to avoid numerical issues ([GH 37051](https://github.com/pandas-dev/pandas/issues/37051))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr") and [`DataFrame.cov()`](../reference/api/pandas.DataFrame.cov.html#pandas.DataFrame.cov
    "pandas.DataFrame.cov") use Welford’s Method to avoid numerical issues ([GH 37448](https://github.com/pandas-dev/pandas/issues/37448))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") now recognizes `xlabel` and `ylabel` arguments for plots
    of type `scatter` and `hexbin` ([GH 37001](https://github.com/pandas-dev/pandas/issues/37001))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    now supports the `divmod` operation ([GH 37165](https://github.com/pandas-dev/pandas/issues/37165))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") now returns a `bytes` object when no `path` argument
    is passed ([GH 37105](https://github.com/pandas-dev/pandas/issues/37105))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Rolling` now supports the `closed` argument for fixed windows ([GH 34315](https://github.com/pandas-dev/pandas/issues/34315))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `datetime64` or `datetime64tz` dtypes now support `std`
    ([GH 37436](https://github.com/pandas-dev/pandas/issues/37436))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Window` now supports all Scipy window types in `win_type` with flexible keyword
    argument support ([GH 34556](https://github.com/pandas-dev/pandas/issues/34556))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`testing.assert_index_equal()`](../reference/api/pandas.testing.assert_index_equal.html#pandas.testing.assert_index_equal
    "pandas.testing.assert_index_equal") now has a `check_order` parameter that allows
    indexes to be checked in an order-insensitive manner ([GH 37478](https://github.com/pandas-dev/pandas/issues/37478))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    supports memory-mapping for compressed files ([GH 37621](https://github.com/pandas-dev/pandas/issues/37621))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add support for `min_count` keyword for [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") for functions `min`, `max`, `first` and `last` ([GH
    37821](https://github.com/pandas-dev/pandas/issues/37821), [GH 37768](https://github.com/pandas-dev/pandas/issues/37768))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve error reporting for [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") when invalid merge column definitions were given ([GH
    16228](https://github.com/pandas-dev/pandas/issues/16228))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve numerical stability for [`Rolling.skew()`](../reference/api/pandas.core.window.rolling.Rolling.skew.html#pandas.core.window.rolling.Rolling.skew
    "pandas.core.window.rolling.Rolling.skew"), [`Rolling.kurt()`](../reference/api/pandas.core.window.rolling.Rolling.kurt.html#pandas.core.window.rolling.Rolling.kurt
    "pandas.core.window.rolling.Rolling.kurt"), `Expanding.skew()` and `Expanding.kurt()`
    through implementation of Kahan summation ([GH 6929](https://github.com/pandas-dev/pandas/issues/6929))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error reporting for subsetting columns of a `DataFrameGroupBy` with
    `axis=1` ([GH 37725](https://github.com/pandas-dev/pandas/issues/37725))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement method `cross` for [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") and [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") ([GH 5401](https://github.com/pandas-dev/pandas/issues/5401))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv"),
    [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    and [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    are called with `chunksize`/`iterator` they can be used in a `with` statement
    as they return context-managers ([GH 38225](https://github.com/pandas-dev/pandas/issues/38225))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Augmented the list of named colors available for styling Excel exports, enabling
    all of CSS4 colors ([GH 38247](https://github.com/pandas-dev/pandas/issues/38247))  ##
    Notable bug fixes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are bug fixes that might have notable behavior changes.
  prefs: []
  type: TYPE_NORMAL
- en: Consistency of DataFrame Reductions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.any()`](../reference/api/pandas.DataFrame.any.html#pandas.DataFrame.any
    "pandas.DataFrame.any") and [`DataFrame.all()`](../reference/api/pandas.DataFrame.all.html#pandas.DataFrame.all
    "pandas.DataFrame.all") with `bool_only=True` now determines whether to exclude
    object-dtype columns on a column-by-column basis, instead of checking if *all*
    object-dtype columns can be considered boolean.'
  prefs: []
  type: TYPE_NORMAL
- en: This prevents pathological behavior where applying the reduction on a subset
    of columns could result in a larger Series result. See ([GH 37799](https://github.com/pandas-dev/pandas/issues/37799)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Other DataFrame reductions with `numeric_only=None` will also avoid this pathological
    behavior ([GH 37827](https://github.com/pandas-dev/pandas/issues/37827)):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Moreover, DataFrame reductions with `numeric_only=None` will now be consistent
    with their Series counterparts. In particular, for reductions where the Series
    method raises `TypeError`, the DataFrame reduction will now consider that column
    non-numeric instead of casting to a NumPy array which may have different semantics
    ([GH 36076](https://github.com/pandas-dev/pandas/issues/36076), [GH 28949](https://github.com/pandas-dev/pandas/issues/28949),
    [GH 21020](https://github.com/pandas-dev/pandas/issues/21020)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '### Increased minimum version for Python'
  prefs: []
  type: TYPE_NORMAL
- en: 'pandas 1.2.0 supports Python 3.7.1 and higher ([GH 35214](https://github.com/pandas-dev/pandas/issues/35214)).  ###
    Increased minimum versions for dependencies'
  prefs: []
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated ([GH 35214](https://github.com/pandas-dev/pandas/issues/35214)).
    If installed, we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.16.5 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytz | 2017.3 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.7.3 | X |  |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.2.1 |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.6.8 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytest (dev) | 5.0.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| mypy (dev) | 0.782 |  | X |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.3.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 0.7.4 |  |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 0.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 4.3.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 2.2.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.46.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 2.6.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 0.15.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 0.7.11 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.5.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 0.4.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.2.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.2.8 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.12.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlrd | 1.2.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 1.0.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlwt | 1.3.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas-gbq | 0.12.0 |  |'
  prefs: []
  type: TYPE_TB
- en: 'See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.  ### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: Sorting in descending order is now stable for [`Series.sort_values()`](../reference/api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values") and [`Index.sort_values()`](../reference/api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values") for Datetime-like [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") subclasses. This will affect sort order when sorting a DataFrame
    on multiple columns, sorting with a key function that produces duplicates, or
    requesting the sorting index when using [`Index.sort_values()`](../reference/api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values"). When using [`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts"), the count of missing values is no longer necessarily
    last in the list of duplicate counts. Instead, its position corresponds to the
    position in the original Series. When using [`Index.sort_values()`](../reference/api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values") for Datetime-like [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") subclasses, NaTs ignored the `na_position` argument and were sorted
    to the beginning. Now they respect `na_position`, the default being `last`, same
    as other [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    subclasses ([GH 35992](https://github.com/pandas-dev/pandas/issues/35992))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing an invalid `fill_value` to `Categorical.take()`, `DatetimeArray.take()`,
    `TimedeltaArray.take()`, or `PeriodArray.take()` now raises a `TypeError` instead
    of a `ValueError` ([GH 37733](https://github.com/pandas-dev/pandas/issues/37733))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing an invalid `fill_value` to [`Series.shift()`](../reference/api/pandas.Series.shift.html#pandas.Series.shift
    "pandas.Series.shift") with a `CategoricalDtype` now raises a `TypeError` instead
    of a `ValueError` ([GH 37733](https://github.com/pandas-dev/pandas/issues/37733))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing an invalid value to `IntervalIndex.insert()` or `CategoricalIndex.insert()`
    now raises a `TypeError` instead of a `ValueError` ([GH 37733](https://github.com/pandas-dev/pandas/issues/37733))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Attempting to reindex a Series with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") with an invalid `fill_value` now raises a `TypeError`
    instead of a `ValueError` ([GH 37733](https://github.com/pandas-dev/pandas/issues/37733))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`CategoricalIndex.append()` with an index that contains non-category values
    will now cast instead of raising `TypeError` ([GH 38098](https://github.com/pandas-dev/pandas/issues/38098))  ##
    Deprecations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated parameter `inplace` in [`MultiIndex.set_codes()`](../reference/api/pandas.MultiIndex.set_codes.html#pandas.MultiIndex.set_codes
    "pandas.MultiIndex.set_codes") and [`MultiIndex.set_levels()`](../reference/api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels") ([GH 35626](https://github.com/pandas-dev/pandas/issues/35626))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated parameter `dtype` of method [`copy()`](../reference/api/pandas.Index.copy.html#pandas.Index.copy
    "pandas.Index.copy") for all [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") subclasses. Use the [`astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype") method instead for changing dtype ([GH 35853](https://github.com/pandas-dev/pandas/issues/35853))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated parameters `levels` and `codes` in [`MultiIndex.copy()`](../reference/api/pandas.MultiIndex.copy.html#pandas.MultiIndex.copy
    "pandas.MultiIndex.copy"). Use the [`set_levels()`](../reference/api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels") and [`set_codes()`](../reference/api/pandas.MultiIndex.set_codes.html#pandas.MultiIndex.set_codes
    "pandas.MultiIndex.set_codes") methods instead ([GH 36685](https://github.com/pandas-dev/pandas/issues/36685))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Date parser functions `parse_date_time()`, `parse_date_fields()`, `parse_all_fields()`
    and `generic_parser()` from `pandas.io.date_converters` are deprecated and will
    be removed in a future version; use [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") instead ([GH 35741](https://github.com/pandas-dev/pandas/issues/35741))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.lookup()` is deprecated and will be removed in a future version,
    use [`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") and [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") instead ([GH 35224](https://github.com/pandas-dev/pandas/issues/35224))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The method `Index.to_native_types()` is deprecated. Use `.astype(str)` instead
    ([GH 28867](https://github.com/pandas-dev/pandas/issues/28867))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated indexing [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") rows with a single datetime-like string as `df[string]` (given
    the ambiguity whether it is indexing the rows or selecting a column), use `df.loc[string]`
    instead ([GH 36179](https://github.com/pandas-dev/pandas/issues/36179))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Index.is_all_dates()` ([GH 27744](https://github.com/pandas-dev/pandas/issues/27744))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The default value of `regex` for [`Series.str.replace()`](../reference/api/pandas.Series.str.replace.html#pandas.Series.str.replace
    "pandas.Series.str.replace") will change from `True` to `False` in a future release.
    In addition, single character regular expressions will *not* be treated as literal
    strings when `regex=True` is set ([GH 24804](https://github.com/pandas-dev/pandas/issues/24804))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated automatic alignment on comparison operations between [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), do `frame, ser = frame.align(ser, axis=1, copy=False)` before
    e.g. `frame == ser` ([GH 28759](https://github.com/pandas-dev/pandas/issues/28759))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Rolling.count()` with `min_periods=None` will default to the size of the window
    in a future version ([GH 31302](https://github.com/pandas-dev/pandas/issues/31302))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using “outer” ufuncs on DataFrames to return 4d ndarray is now deprecated. Convert
    to an ndarray first ([GH 23743](https://github.com/pandas-dev/pandas/issues/23743))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated slice-indexing on tz-aware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with naive `datetime` objects, to match scalar indexing
    behavior ([GH 36148](https://github.com/pandas-dev/pandas/issues/36148))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.ravel()`](../reference/api/pandas.Index.ravel.html#pandas.Index.ravel
    "pandas.Index.ravel") returning a `np.ndarray` is deprecated, in the future this
    will return a view on the same index ([GH 19956](https://github.com/pandas-dev/pandas/issues/19956))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecate use of strings denoting units with ‘M’, ‘Y’ or ‘y’ in [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") ([GH 36666](https://github.com/pandas-dev/pandas/issues/36666))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") methods
    `&`, `|`, and `^` behaving as the set operations [`Index.intersection()`](../reference/api/pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection"), [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union"), and [`Index.symmetric_difference()`](../reference/api/pandas.Index.symmetric_difference.html#pandas.Index.symmetric_difference
    "pandas.Index.symmetric_difference"), respectively, are deprecated and in the
    future will behave as pointwise boolean operations matching [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") behavior. Use the named set methods instead ([GH 36758](https://github.com/pandas-dev/pandas/issues/36758))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.is_dtype_equal()` and `CategoricalIndex.is_dtype_equal()` are
    deprecated, will be removed in a future version ([GH 37545](https://github.com/pandas-dev/pandas/issues/37545))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.slice_shift()` and `DataFrame.slice_shift()` are deprecated, use [`Series.shift()`](../reference/api/pandas.Series.shift.html#pandas.Series.shift
    "pandas.Series.shift") or [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift") instead ([GH 37601](https://github.com/pandas-dev/pandas/issues/37601))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Partial slicing on unordered [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") objects with keys that are not in the index is deprecated
    and will be removed in a future version ([GH 18531](https://github.com/pandas-dev/pandas/issues/18531))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `how` keyword in `PeriodIndex.astype()` is deprecated and will be removed
    in a future version, use `index.to_timestamp(how=how)` instead ([GH 37982](https://github.com/pandas-dev/pandas/issues/37982))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Index.asi8()` for [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") subclasses other than [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex"), and [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") ([GH 37877](https://github.com/pandas-dev/pandas/issues/37877))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `inplace` parameter of `Categorical.remove_unused_categories()` is deprecated
    and will be removed in a future version ([GH 37643](https://github.com/pandas-dev/pandas/issues/37643))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `null_counts` parameter of [`DataFrame.info()`](../reference/api/pandas.DataFrame.info.html#pandas.DataFrame.info
    "pandas.DataFrame.info") is deprecated and replaced by `show_counts`. It will
    be removed in a future version ([GH 37999](https://github.com/pandas-dev/pandas/issues/37999))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Calling NumPy ufuncs on non-aligned DataFrames**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Calling NumPy ufuncs on non-aligned DataFrames changed behaviour in pandas
    1.2.0 (to align the inputs before calling the ufunc), but this change is reverted
    in pandas 1.2.1\. The behaviour to not align is now deprecated instead, see the
    [the 1.2.1 release notes](v1.2.1.html#whatsnew-121-ufunc-deprecation) for more
    details.  ## Performance improvements'
  prefs: []
  type: TYPE_NORMAL
- en: Performance improvements when creating DataFrame or Series with dtype `str`
    or [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype") from array with many string elements ([GH 36304](https://github.com/pandas-dev/pandas/issues/36304),
    [GH 36317](https://github.com/pandas-dev/pandas/issues/36317), [GH 36325](https://github.com/pandas-dev/pandas/issues/36325),
    [GH 36432](https://github.com/pandas-dev/pandas/issues/36432), [GH 37371](https://github.com/pandas-dev/pandas/issues/37371))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") and [`SeriesGroupBy.agg()`](../reference/api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg") with the `numba` engine ([GH 35759](https://github.com/pandas-dev/pandas/issues/35759))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvements when creating [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") from a huge dictionary ([GH 34717](https://github.com/pandas-dev/pandas/issues/34717))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") with the `numba` engine ([GH 36240](https://github.com/pandas-dev/pandas/issues/36240))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") uuid method altered to compress data transmission
    over web whilst maintaining reasonably low table collision probability ([GH 36345](https://github.com/pandas-dev/pandas/issues/36345))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with non-ns time unit for `float` `dtype` columns ([GH 20445](https://github.com/pandas-dev/pandas/issues/20445))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in setting values on an `IntervalArray` ([GH 36310](https://github.com/pandas-dev/pandas/issues/36310))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The internal index method `_shallow_copy()` now makes the new index and original
    index share cached attributes, avoiding creating these again, if created on either.
    This can speed up operations that depend on creating copies of existing indexes
    ([GH 36840](https://github.com/pandas-dev/pandas/issues/36840))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `RollingGroupby.count()` ([GH 35625](https://github.com/pandas-dev/pandas/issues/35625))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Small performance decrease to [`Rolling.min()`](../reference/api/pandas.core.window.rolling.Rolling.min.html#pandas.core.window.rolling.Rolling.min
    "pandas.core.window.rolling.Rolling.min") and [`Rolling.max()`](../reference/api/pandas.core.window.rolling.Rolling.max.html#pandas.core.window.rolling.Rolling.max
    "pandas.core.window.rolling.Rolling.max") for fixed windows ([GH 36567](https://github.com/pandas-dev/pandas/issues/36567))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reduced peak memory usage in [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle") when using `protocol=5` in python 3.8+ ([GH 34244](https://github.com/pandas-dev/pandas/issues/34244))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Faster `dir` calls when the object has many index labels, e.g. `dir(ser)` ([GH
    37450](https://github.com/pandas-dev/pandas/issues/37450))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `ExpandingGroupby` ([GH 37064](https://github.com/pandas-dev/pandas/issues/37064))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") and [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") for [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") ([GH 8628](https://github.com/pandas-dev/pandas/issues/8628))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") for `float` `dtype` ([GH 28303](https://github.com/pandas-dev/pandas/issues/28303)),
    changes of the underlying hash-function can lead to changes in float based indexes
    sort ordering for ties (e.g. [`Index.value_counts()`](../reference/api/pandas.Index.value_counts.html#pandas.Index.value_counts
    "pandas.Index.value_counts"))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `pd.isin()` for inputs with more than 1e6 elements
    ([GH 36611](https://github.com/pandas-dev/pandas/issues/36611))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for `DataFrame.__setitem__()` with list-like indexers
    ([GH 37954](https://github.com/pandas-dev/pandas/issues/37954))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    now avoids reading entire file into memory when chunksize is specified ([GH 34548](https://github.com/pandas-dev/pandas/issues/34548))  ##
    Bug fixes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`Categorical.fillna()` will always return a copy, validate a passed fill value
    regardless of whether there are any NAs to fill, and disallow an `NaT` as a fill
    value for numeric categories ([GH 36530](https://github.com/pandas-dev/pandas/issues/36530))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.__setitem__()` that incorrectly raised when trying to set
    a tuple value ([GH 20439](https://github.com/pandas-dev/pandas/issues/20439))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`CategoricalIndex.equals()`](../reference/api/pandas.CategoricalIndex.equals.html#pandas.CategoricalIndex.equals
    "pandas.CategoricalIndex.equals") incorrectly casting non-category entries to
    `np.nan` ([GH 37667](https://github.com/pandas-dev/pandas/issues/37667))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CategoricalIndex.where()` incorrectly setting non-category entries to
    `np.nan` instead of raising `TypeError` ([GH 37977](https://github.com/pandas-dev/pandas/issues/37977))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.to_numpy()` and `np.array(categorical)` with tz-aware `datetime64`
    categories incorrectly dropping the time zone information instead of casting to
    object dtype ([GH 38136](https://github.com/pandas-dev/pandas/issues/38136))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetime-like
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first") that would convert datetime-like column on other
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    to integer when the column is not present in original [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 28481](https://github.com/pandas-dev/pandas/issues/28481))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeArray.date` where a `ValueError` would be raised with a read-only
    backing array ([GH 33530](https://github.com/pandas-dev/pandas/issues/33530))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `NaT` comparisons failing to raise `TypeError` on invalid inequality
    comparisons ([GH 35046](https://github.com/pandas-dev/pandas/issues/35046))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DateOffset`](../reference/api/pandas.tseries.offsets.DateOffset.html#pandas.tseries.offsets.DateOffset
    "pandas.tseries.offsets.DateOffset") where attributes reconstructed from pickle
    files differ from original objects when input values exceed normal ranges (e.g.
    months=12) ([GH 34511](https://github.com/pandas-dev/pandas/issues/34511))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.get_slice_bound()` where `datetime.date` objects were
    not accepted or naive [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with a tz-aware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 35690](https://github.com/pandas-dev/pandas/issues/35690))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.slice_locs()` where `datetime.date` objects were not accepted
    ([GH 34077](https://github.com/pandas-dev/pandas/issues/34077))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.searchsorted()`, `TimedeltaIndex.searchsorted()`, `PeriodIndex.searchsorted()`,
    and [`Series.searchsorted()`](../reference/api/pandas.Series.searchsorted.html#pandas.Series.searchsorted
    "pandas.Series.searchsorted") with `datetime64`, `timedelta64` or [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") dtype placement of `NaT` values being inconsistent with NumPy
    ([GH 36176](https://github.com/pandas-dev/pandas/issues/36176), [GH 36254](https://github.com/pandas-dev/pandas/issues/36254))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Inconsistency in [`DatetimeArray`](../reference/api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray"), [`TimedeltaArray`](../reference/api/pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray"), and [`PeriodArray`](../reference/api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray") method `__setitem__` casting arrays of strings to
    datetime-like scalars but not scalar strings ([GH 36261](https://github.com/pandas-dev/pandas/issues/36261))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeArray.take()` incorrectly allowing `fill_value` with a mismatched
    time zone ([GH 37356](https://github.com/pandas-dev/pandas/issues/37356))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.shift` incorrectly raising when shifting empty indexes
    ([GH 14811](https://github.com/pandas-dev/pandas/issues/14811))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    and [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") comparisons between tz-aware and tz-naive objects now
    follow the standard library `datetime` behavior, returning `True`/`False` for
    `!=`/`==` and raising for inequality comparisons ([GH 28507](https://github.com/pandas-dev/pandas/issues/28507))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.equals()` and `TimedeltaIndex.equals()` incorrectly considering
    `int64` indexes as equal ([GH 36744](https://github.com/pandas-dev/pandas/issues/36744))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.to_json()`](../reference/api/pandas.Series.to_json.html#pandas.Series.to_json
    "pandas.Series.to_json"), [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json"), and [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") now implement time zone parsing when orient structure is `table`
    ([GH 35973](https://github.com/pandas-dev/pandas/issues/35973))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`astype()` now attempts to convert to `datetime64[ns, tz]` directly from `object`
    with inferred time zone from string ([GH 35973](https://github.com/pandas-dev/pandas/issues/35973))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `TimedeltaIndex.sum()` and [`Series.sum()`](../reference/api/pandas.Series.sum.html#pandas.Series.sum
    "pandas.Series.sum") with `timedelta64` dtype on an empty index or series returning
    `NaT` instead of `Timedelta(0)` ([GH 31751](https://github.com/pandas-dev/pandas/issues/31751))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeArray.shift()` incorrectly allowing `fill_value` with a mismatched
    time zone ([GH 37299](https://github.com/pandas-dev/pandas/issues/37299))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in adding a [`BusinessDay`](../reference/api/pandas.tseries.offsets.BusinessDay.html#pandas.tseries.offsets.BusinessDay
    "pandas.tseries.offsets.BusinessDay") with nonzero `offset` to a non-scalar other
    ([GH 37457](https://github.com/pandas-dev/pandas/issues/37457))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with a read-only array incorrectly raising ([GH 34857](https://github.com/pandas-dev/pandas/issues/34857))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") with `datetime64[ns]` dtype and `DatetimeIndex.isin()` incorrectly
    casting integers to datetimes ([GH 36621](https://github.com/pandas-dev/pandas/issues/36621))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") with `datetime64[ns]` dtype and `DatetimeIndex.isin()` failing
    to consider tz-aware and tz-naive datetimes as always different ([GH 35728](https://github.com/pandas-dev/pandas/issues/35728))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") with `PeriodDtype` dtype and `PeriodIndex.isin()` failing
    to consider arguments with different `PeriodDtype` as always different ([GH 37528](https://github.com/pandas-dev/pandas/issues/37528))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    constructor now correctly handles nanoseconds in the `value` argument ([GH 34621](https://github.com/pandas-dev/pandas/issues/34621)
    and [GH 17053](https://github.com/pandas-dev/pandas/issues/17053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") floor-division with `timedelta64` dtypes and `NaT` in the
    denominator ([GH 35529](https://github.com/pandas-dev/pandas/issues/35529))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in parsing of ISO 8601 durations in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") and [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") ([GH 29773](https://github.com/pandas-dev/pandas/issues/29773),
    [GH 36204](https://github.com/pandas-dev/pandas/issues/36204))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") with a read-only array incorrectly raising ([GH 34857](https://github.com/pandas-dev/pandas/issues/34857))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") incorrectly truncating to sub-second portion of a string input
    when it has precision higher than nanoseconds ([GH 36738](https://github.com/pandas-dev/pandas/issues/36738))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") was raising `AmbiguousTimeError` for valid input with `ambiguous=False`
    ([GH 35297](https://github.com/pandas-dev/pandas/issues/35297))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.replace()`](../reference/api/pandas.Timestamp.replace.html#pandas.Timestamp.replace
    "pandas.Timestamp.replace") was losing fold information ([GH 37610](https://github.com/pandas-dev/pandas/issues/37610))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") where float precision was incorrect ([GH 31364](https://github.com/pandas-dev/pandas/issues/31364))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.any()`](../reference/api/pandas.DataFrame.any.html#pandas.DataFrame.any
    "pandas.DataFrame.any") with `axis=1` and `bool_only=True` ignoring the `bool_only`
    keyword ([GH 32432](https://github.com/pandas-dev/pandas/issues/32432))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.equals()`](../reference/api/pandas.Series.equals.html#pandas.Series.equals
    "pandas.Series.equals") where a `ValueError` was raised when NumPy arrays were
    compared to scalars ([GH 35267](https://github.com/pandas-dev/pandas/issues/35267))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    where two Series each have a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with different time zones having those indexes incorrectly
    changed when performing arithmetic operations ([GH 33671](https://github.com/pandas-dev/pandas/issues/33671))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas.testing` module functions when used with `check_exact=False`
    on complex numeric types ([GH 28235](https://github.com/pandas-dev/pandas/issues/28235))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__rmatmul__()` error handling reporting transposed shapes
    ([GH 21581](https://github.com/pandas-dev/pandas/issues/21581))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    flex arithmetic methods where the result when operating with a `list`, `tuple`
    or `np.ndarray` would have an incorrect name ([GH 36760](https://github.com/pandas-dev/pandas/issues/36760))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") multiplication with `timedelta` and `np.timedelta64`
    objects ([GH 36870](https://github.com/pandas-dev/pandas/issues/36870))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") comparison with tuple incorrectly treating tuple as array-like
    ([GH 21517](https://github.com/pandas-dev/pandas/issues/21517))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.diff()`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff") with `datetime64` dtypes including `NaT` values failing
    to fill `NaT` results correctly ([GH 32441](https://github.com/pandas-dev/pandas/issues/32441))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") arithmetic ops incorrectly accepting keyword arguments ([GH
    36843](https://github.com/pandas-dev/pandas/issues/36843))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalArray`](../reference/api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray") comparisons with [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") not returning Series ([GH 36908](https://github.com/pandas-dev/pandas/issues/36908))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") allowing arithmetic operations with list of array-likes with
    undefined results. Behavior changed to raising `ValueError` ([GH 36702](https://github.com/pandas-dev/pandas/issues/36702))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.std()`](../reference/api/pandas.DataFrame.std.html#pandas.DataFrame.std
    "pandas.DataFrame.std") with `timedelta64` dtype and `skipna=False` ([GH 37392](https://github.com/pandas-dev/pandas/issues/37392))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.min()`](../reference/api/pandas.DataFrame.min.html#pandas.DataFrame.min
    "pandas.DataFrame.min") and [`DataFrame.max()`](../reference/api/pandas.DataFrame.max.html#pandas.DataFrame.max
    "pandas.DataFrame.max") with `datetime64` dtype and `skipna=False` ([GH 36907](https://github.com/pandas-dev/pandas/issues/36907))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax") and [`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin") with mixed dtypes incorrectly raising `TypeError` ([GH
    38195](https://github.com/pandas-dev/pandas/issues/38195))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") with `orient='records'` now returns python native
    datetime objects for datetime-like columns ([GH 21256](https://github.com/pandas-dev/pandas/issues/21256))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") conversion from `string` to `float` raised in presence
    of `pd.NA` values ([GH 37626](https://github.com/pandas-dev/pandas/issues/37626))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.to_string()`](../reference/api/pandas.Series.to_string.html#pandas.Series.to_string
    "pandas.Series.to_string"), [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string"), and [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") adding a leading space when `index=False` ([GH 24980](https://github.com/pandas-dev/pandas/issues/24980))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") raising a `TypeError` when attempting to convert a string
    dtype Series containing only numeric strings and `NA` ([GH 37262](https://github.com/pandas-dev/pandas/issues/37262))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") where [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") dtypes would be converted to object dtypes ([GH 34871](https://github.com/pandas-dev/pandas/issues/34871))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.take()` with negative indices and `fill_value=None` ([GH
    37330](https://github.com/pandas-dev/pandas/issues/37330))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.putmask()` with datetime-like dtype incorrectly casting
    to object dtype ([GH 37968](https://github.com/pandas-dev/pandas/issues/37968))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalArray.astype()` incorrectly dropping dtype information with
    a [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") object ([GH 37984](https://github.com/pandas-dev/pandas/issues/37984))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `PeriodIndex.get_loc()` incorrectly raising `ValueError` on non-datelike
    strings instead of `KeyError`, causing similar errors in `Series.__getitem__()`,
    `Series.__contains__()`, and `Series.loc.__getitem__()` ([GH 34240](https://github.com/pandas-dev/pandas/issues/34240))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.sort_values()`](../reference/api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values") where, when empty values were passed, the method would
    break by trying to compare missing values instead of pushing them to the end of
    the sort order ([GH 35584](https://github.com/pandas-dev/pandas/issues/35584))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.get_indexer()`](../reference/api/pandas.Index.get_indexer.html#pandas.Index.get_indexer
    "pandas.Index.get_indexer") and [`Index.get_indexer_non_unique()`](../reference/api/pandas.Index.get_indexer_non_unique.html#pandas.Index.get_indexer_non_unique
    "pandas.Index.get_indexer_non_unique") where `int64` arrays are returned instead
    of `intp` ([GH 36359](https://github.com/pandas-dev/pandas/issues/36359))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index") where parameter ascending passed as a list on a
    single level index gives wrong result ([GH 32334](https://github.com/pandas-dev/pandas/issues/32334))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") was incorrectly raising a `ValueError` for input
    with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with missing values in a level with `Categorical` dtype ([GH
    24206](https://github.com/pandas-dev/pandas/issues/24206))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing with boolean masks on datetime-like values sometimes returning
    a view instead of a copy ([GH 36210](https://github.com/pandas-dev/pandas/issues/36210))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__getitem__()` and `DataFrame.loc.__getitem__()` with [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") columns and a numeric indexer ([GH 26490](https://github.com/pandas-dev/pandas/issues/26490))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.loc.__getitem__()` with a non-unique [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and an empty-list indexer ([GH 13691](https://github.com/pandas-dev/pandas/issues/13691))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and a level named `"0"` ([GH 37194](https://github.com/pandas-dev/pandas/issues/37194))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__getitem__()` when using an unsigned integer array as an indexer
    giving incorrect results or segfaulting instead of raising `KeyError` ([GH 37218](https://github.com/pandas-dev/pandas/issues/37218))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.where()`](../reference/api/pandas.Index.where.html#pandas.Index.where
    "pandas.Index.where") incorrectly casting numeric values to strings ([GH 37591](https://github.com/pandas-dev/pandas/issues/37591))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") returning empty result when indexer is a slice with negative
    step size ([GH 38071](https://github.com/pandas-dev/pandas/issues/38071))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") and [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raises when the index was of `object` dtype and the given
    numeric label was in the index ([GH 26491](https://github.com/pandas-dev/pandas/issues/26491))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") returned requested key plus missing values when `loc`
    was applied to single level from a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 27104](https://github.com/pandas-dev/pandas/issues/27104))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") using a list-like indexer containing NA values ([GH
    37722](https://github.com/pandas-dev/pandas/issues/37722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc.__setitem__()` expanding an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with mixed dtypes ([GH 37932](https://github.com/pandas-dev/pandas/issues/37932))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.xs()`](../reference/api/pandas.DataFrame.xs.html#pandas.DataFrame.xs
    "pandas.DataFrame.xs") ignored `droplevel=False` for columns ([GH 19056](https://github.com/pandas-dev/pandas/issues/19056))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") raising `IndexingError` wrongly for empty DataFrame
    with `tolerance` not `None` or `method="nearest"` ([GH 27315](https://github.com/pandas-dev/pandas/issues/27315))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") using list-like indexer that contains elements that
    are in the index’s `categories` but not in the index itself failing to raise `KeyError`
    ([GH 37901](https://github.com/pandas-dev/pandas/issues/37901))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug on inserting a boolean label into a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a numeric [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") columns incorrectly casting to integer ([GH 36319](https://github.com/pandas-dev/pandas/issues/36319))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") and [`Series.iloc()`](../reference/api/pandas.Series.iloc.html#pandas.Series.iloc
    "pandas.Series.iloc") aligning objects in `__setitem__` ([GH 22046](https://github.com/pandas-dev/pandas/issues/22046))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.drop()`](../reference/api/pandas.MultiIndex.drop.html#pandas.MultiIndex.drop
    "pandas.MultiIndex.drop") does not raise if labels are partially found ([GH 37820](https://github.com/pandas-dev/pandas/issues/37820))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") did not raise `KeyError` when missing combination was
    given with `slice(None)` for remaining levels ([GH 19556](https://github.com/pandas-dev/pandas/issues/19556))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raising `TypeError` when non-integer slice was given to
    select values from [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 25165](https://github.com/pandas-dev/pandas/issues/25165),
    [GH 24263](https://github.com/pandas-dev/pandas/issues/24263))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.at()`](../reference/api/pandas.Series.at.html#pandas.Series.at
    "pandas.Series.at") returning [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with one element instead of scalar when index is a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with one level ([GH 38053](https://github.com/pandas-dev/pandas/issues/38053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") returning and assigning elements in wrong order when indexer
    is differently ordered than the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") to filter ([GH 31330](https://github.com/pandas-dev/pandas/issues/31330),
    [GH 34603](https://github.com/pandas-dev/pandas/issues/34603))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and `DataFrame.__getitem__()` raising `KeyError` when
    columns were [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with only one level ([GH 29749](https://github.com/pandas-dev/pandas/issues/29749))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__getitem__()` and `DataFrame.__getitem__()` raising blank `KeyError`
    without missing keys for [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") ([GH 27365](https://github.com/pandas-dev/pandas/issues/27365))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting a new label on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") incorrectly raising `TypeError` when the new label
    is not among the index’s categories ([GH 38098](https://github.com/pandas-dev/pandas/issues/38098))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") and [`Series.iloc()`](../reference/api/pandas.Series.iloc.html#pandas.Series.iloc
    "pandas.Series.iloc") raising `ValueError` when inserting a list-like `np.array`,
    `list` or `tuple` in an `object` Series of equal length ([GH 37748](https://github.com/pandas-dev/pandas/issues/37748),
    [GH 37486](https://github.com/pandas-dev/pandas/issues/37486))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") and [`Series.iloc()`](../reference/api/pandas.Series.iloc.html#pandas.Series.iloc
    "pandas.Series.iloc") setting all the values of an `object` Series with those
    of a list-like `ExtensionArray` instead of inserting it ([GH 38271](https://github.com/pandas-dev/pandas/issues/38271))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") now correctly handles missing values
    for `dropna=False` ([GH 35014](https://github.com/pandas-dev/pandas/issues/35014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.nunique()`](../reference/api/pandas.Series.nunique.html#pandas.Series.nunique
    "pandas.Series.nunique") with `dropna=True` was returning incorrect results when
    both `NA` and `None` missing values were present ([GH 37566](https://github.com/pandas-dev/pandas/issues/37566))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") where kwarg `limit_area` and `limit_direction` had
    no effect when using methods `pad` and `backfill` ([GH 31048](https://github.com/pandas-dev/pandas/issues/31048))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.xs()`](../reference/api/pandas.DataFrame.xs.html#pandas.DataFrame.xs
    "pandas.DataFrame.xs") when used with [`IndexSlice`](../reference/api/pandas.IndexSlice.html#pandas.IndexSlice
    "pandas.IndexSlice") raises `TypeError` with message `"Expected label or tuple
    of labels"` ([GH 35301](https://github.com/pandas-dev/pandas/issues/35301))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") with `NaT` values in index raises `ValueError`
    with message `"cannot convert float NaN to integer"` ([GH 36541](https://github.com/pandas-dev/pandas/issues/36541))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first") when used with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") containing string and `NaN` values raises `TypeError` ([GH
    36562](https://github.com/pandas-dev/pandas/issues/36562))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.drop()`](../reference/api/pandas.MultiIndex.drop.html#pandas.MultiIndex.drop
    "pandas.MultiIndex.drop") dropped `NaN` values when non existing key was given
    as input ([GH 18853](https://github.com/pandas-dev/pandas/issues/18853))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.drop()`](../reference/api/pandas.MultiIndex.drop.html#pandas.MultiIndex.drop
    "pandas.MultiIndex.drop") dropping more values than expected when index has duplicates
    and is not sorted ([GH 33494](https://github.com/pandas-dev/pandas/issues/33494))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I/O
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    no longer leaks resources on failure ([GH 35566](https://github.com/pandas-dev/pandas/issues/35566))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") and [`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv") caused a `ValueError` when it was called with a filename
    in combination with `mode` containing a `b` ([GH 35058](https://github.com/pandas-dev/pandas/issues/35058))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `float_precision='round_trip'` did not handle `decimal`
    and `thousands` parameters ([GH 35365](https://github.com/pandas-dev/pandas/issues/35365))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_pickle()` and [`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle") were closing user-provided file objects ([GH 35679](https://github.com/pandas-dev/pandas/issues/35679))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_csv()` passes compression arguments for `''gzip''` always to `gzip.GzipFile`
    ([GH 28103](https://github.com/pandas-dev/pandas/issues/28103))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_csv()` did not support zip compression for binary file object not having
    a filename ([GH 35058](https://github.com/pandas-dev/pandas/issues/35058))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_csv()` and [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") did not honor `compression` and `encoding` for path-like objects
    that are internally converted to file-like objects ([GH 35677](https://github.com/pandas-dev/pandas/issues/35677),
    [GH 26124](https://github.com/pandas-dev/pandas/issues/26124), [GH 32392](https://github.com/pandas-dev/pandas/issues/32392))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle"), [`Series.to_pickle()`](../reference/api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle"), and [`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle") did not support compression for file-objects ([GH 26237](https://github.com/pandas-dev/pandas/issues/26237),
    [GH 29054](https://github.com/pandas-dev/pandas/issues/29054), [GH 29570](https://github.com/pandas-dev/pandas/issues/29570))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `LongTableBuilder.middle_separator()` was duplicating LaTeX longtable
    entries in the List of Tables of a LaTeX document ([GH 34360](https://github.com/pandas-dev/pandas/issues/34360))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `engine='python'` truncating data if multiple items present
    in first row and first element started with BOM ([GH 36343](https://github.com/pandas-dev/pandas/issues/36343))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `private_key` and `verbose` from [`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq
    "pandas.read_gbq") as they are no longer supported in `pandas-gbq` ([GH 34654](https://github.com/pandas-dev/pandas/issues/34654),
    [GH 30200](https://github.com/pandas-dev/pandas/issues/30200))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bumped minimum pytables version to 3.5.1 to avoid a `ValueError` in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") ([GH 24839](https://github.com/pandas-dev/pandas/issues/24839))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") and [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when `delim_whitespace=True` and `sep=default` ([GH 36583](https://github.com/pandas-dev/pandas/issues/36583))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") and [`Series.to_json()`](../reference/api/pandas.Series.to_json.html#pandas.Series.to_json
    "pandas.Series.to_json") when used with `lines=True` and `orient='records'` the
    last line of the record is not appended with ‘new line character’ ([GH 36888](https://github.com/pandas-dev/pandas/issues/36888))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") with fixed offset time zones. String representation of
    time zones was not recognized ([GH 35997](https://github.com/pandas-dev/pandas/issues/35997),
    [GH 36004](https://github.com/pandas-dev/pandas/issues/36004))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html"), [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string"), and [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") ignoring the `na_rep` argument when `float_format`
    was also specified ([GH 9046](https://github.com/pandas-dev/pandas/issues/9046),
    [GH 13828](https://github.com/pandas-dev/pandas/issues/13828))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in output rendering of complex numbers showing too many trailing zeros ([GH
    36799](https://github.com/pandas-dev/pandas/issues/36799))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `HDFStore` threw a `TypeError` when exporting an empty DataFrame with
    `datetime64[ns, tz]` dtypes with a fixed HDF5 store ([GH 20594](https://github.com/pandas-dev/pandas/issues/20594))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `HDFStore` was dropping time zone information when exporting a Series
    with `datetime64[ns, tz]` dtypes with a fixed HDF5 store ([GH 20594](https://github.com/pandas-dev/pandas/issues/20594))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    was closing user-provided binary file handles when `engine="c"` and an `encoding`
    was requested ([GH 36980](https://github.com/pandas-dev/pandas/issues/36980))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_hdf()`](../reference/api/pandas.DataFrame.to_hdf.html#pandas.DataFrame.to_hdf
    "pandas.DataFrame.to_hdf") was not dropping missing rows with `dropna=True` ([GH
    35719](https://github.com/pandas-dev/pandas/issues/35719))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") was raising a `TypeError` when supplying a `pathlib.Path`
    argument to the `io` parameter ([GH 37705](https://github.com/pandas-dev/pandas/issues/37705))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel"), [`Series.to_excel()`](../reference/api/pandas.Series.to_excel.html#pandas.Series.to_excel
    "pandas.Series.to_excel"), [`DataFrame.to_markdown()`](../reference/api/pandas.DataFrame.to_markdown.html#pandas.DataFrame.to_markdown
    "pandas.DataFrame.to_markdown"), and [`Series.to_markdown()`](../reference/api/pandas.Series.to_markdown.html#pandas.Series.to_markdown
    "pandas.Series.to_markdown") now support writing to fsspec URLs such as S3 and
    Google Cloud Storage ([GH 33987](https://github.com/pandas-dev/pandas/issues/33987))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf") with `skip_blank_lines=True` was not skipping blank lines ([GH
    37758](https://github.com/pandas-dev/pandas/issues/37758))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parse missing values using [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") with `dtype=False` to `NaN` instead of `None` ([GH 28501](https://github.com/pandas-dev/pandas/issues/28501))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf "pandas.read_fwf")
    was inferring compression with `compression=None` which was not consistent with
    the other `read_*` functions ([GH 37909](https://github.com/pandas-dev/pandas/issues/37909))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") was ignoring `formatters` argument for `ExtensionDtype`
    columns ([GH 36525](https://github.com/pandas-dev/pandas/issues/36525))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bumped minimum xarray version to 0.12.3 to avoid reference to the removed `Panel`
    class ([GH 27101](https://github.com/pandas-dev/pandas/issues/27101), [GH 37983](https://github.com/pandas-dev/pandas/issues/37983))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") was re-opening file-like handles that also implement
    `os.PathLike` ([GH 38125](https://github.com/pandas-dev/pandas/issues/38125))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the conversion of a sliced `pyarrow.Table` with missing values to a DataFrame
    ([GH 38525](https://github.com/pandas-dev/pandas/issues/38525))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sql_table()`](../reference/api/pandas.read_sql_table.html#pandas.read_sql_table
    "pandas.read_sql_table") raising a `sqlalchemy.exc.OperationalError` when column
    names contained a percentage sign ([GH 37517](https://github.com/pandas-dev/pandas/issues/37517))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Period
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") where [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") dtypes would be converted to object dtypes ([GH 34871](https://github.com/pandas-dev/pandas/issues/34871))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") was rotating xticklabels when `subplots=True`, even if
    the x-axis wasn’t an irregular time series ([GH 29460](https://github.com/pandas-dev/pandas/issues/29460))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") where a marker letter in the `style` keyword sometimes
    caused a `ValueError` ([GH 21003](https://github.com/pandas-dev/pandas/issues/21003))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.bar()`](../reference/api/pandas.DataFrame.plot.bar.html#pandas.DataFrame.plot.bar
    "pandas.DataFrame.plot.bar") and [`Series.plot.bar()`](../reference/api/pandas.Series.plot.bar.html#pandas.Series.plot.bar
    "pandas.Series.plot.bar") where ticks positions were assigned by value order instead
    of using the actual value for numeric or a smart ordering for string ([GH 26186](https://github.com/pandas-dev/pandas/issues/26186),
    [GH 11465](https://github.com/pandas-dev/pandas/issues/11465)). This fix has been
    reverted in pandas 1.2.1, see [What’s new in 1.2.1 (January 20, 2021)](v1.2.1.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Twinned axes were losing their tick labels which should only happen to all but
    the last row or column of ‘externally’ shared axes ([GH 33819](https://github.com/pandas-dev/pandas/issues/33819))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") and [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") was throwing a [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError
    "(in Python v3.12)") when the Series or DataFrame was indexed by a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") with a fixed frequency and the x-axis lower limit was
    greater than the upper limit ([GH 37454](https://github.com/pandas-dev/pandas/issues/37454))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.boxplot()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.boxplot.html#pandas.core.groupby.DataFrameGroupBy.boxplot
    "pandas.core.groupby.DataFrameGroupBy.boxplot") when `subplots=False` would raise
    a `KeyError` ([GH 16748](https://github.com/pandas-dev/pandas/issues/16748))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") and [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") was overwriting matplotlib’s shared y axes behavior when
    no `sharey` parameter was passed ([GH 37942](https://github.com/pandas-dev/pandas/issues/37942))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") was raising a `TypeError` with `ExtensionDtype` columns
    ([GH 32073](https://github.com/pandas-dev/pandas/issues/32073))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styler
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Styler.render()` HTML was generated incorrectly because of formatting
    error in `rowspan` attribute, it now matches with w3 syntax ([GH 38234](https://github.com/pandas-dev/pandas/issues/38234))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.count()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.count.html#pandas.core.groupby.DataFrameGroupBy.count
    "pandas.core.groupby.DataFrameGroupBy.count") and `SeriesGroupBy.sum()` returning
    `NaN` for missing categories when grouped on multiple `Categoricals`. Now returning
    `0` ([GH 35028](https://github.com/pandas-dev/pandas/issues/35028))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") that would sometimes throw an erroneous
    `ValueError` if the grouping axis had duplicate entries ([GH 16646](https://github.com/pandas-dev/pandas/issues/16646))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") that would throw a `ValueError` when resampling from
    `"D"` to `"24H"` over a transition into daylight savings time (DST) ([GH 35219](https://github.com/pandas-dev/pandas/issues/35219))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when combining methods [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") with [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") raising a `TypeError` ([GH 35325](https://github.com/pandas-dev/pandas/issues/35325))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") where a non-nuisance grouping column
    would be dropped from the output columns if another groupby method was called
    before `.apply` ([GH 34656](https://github.com/pandas-dev/pandas/issues/34656))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when subsetting columns on a `DataFrameGroupBy` (e.g. `df.groupby('a')[['b']])`)
    would reset the attributes `axis`, `dropna`, `group_keys`, `level`, `mutated`,
    `sort`, and `squeeze` to their default values ([GH 9959](https://github.com/pandas-dev/pandas/issues/9959))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.tshift()` failing to raise `ValueError` when a frequency
    cannot be inferred for the index of a group ([GH 35937](https://github.com/pandas-dev/pandas/issues/35937))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") does not always maintain column index name for `any`,
    `all`, `bfill`, `ffill`, `shift` ([GH 29764](https://github.com/pandas-dev/pandas/issues/29764))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") raising error with `np.nan` group(s)
    when `dropna=False` ([GH 35889](https://github.com/pandas-dev/pandas/issues/35889))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.sum()`](../reference/api/pandas.core.window.rolling.Rolling.sum.html#pandas.core.window.rolling.Rolling.sum
    "pandas.core.window.rolling.Rolling.sum") returned wrong values when dtypes where
    mixed between float and integer and `axis=1` ([GH 20649](https://github.com/pandas-dev/pandas/issues/20649),
    [GH 35596](https://github.com/pandas-dev/pandas/issues/35596))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.count()`](../reference/api/pandas.core.window.rolling.Rolling.count.html#pandas.core.window.rolling.Rolling.count
    "pandas.core.window.rolling.Rolling.count") returned `np.nan` with [`FixedForwardWindowIndexer`](../reference/api/pandas.api.indexers.FixedForwardWindowIndexer.html#pandas.api.indexers.FixedForwardWindowIndexer
    "pandas.api.indexers.FixedForwardWindowIndexer") as window, `min_periods=0` and
    only missing values in the window ([GH 35579](https://github.com/pandas-dev/pandas/issues/35579))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where `Rolling` produces incorrect window sizes when using a `PeriodIndex`
    ([GH 34225](https://github.com/pandas-dev/pandas/issues/34225))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.ffill()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.ffill.html#pandas.core.groupby.DataFrameGroupBy.ffill
    "pandas.core.groupby.DataFrameGroupBy.ffill") and [`DataFrameGroupBy.bfill()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.bfill.html#pandas.core.groupby.DataFrameGroupBy.bfill
    "pandas.core.groupby.DataFrameGroupBy.bfill") where a `NaN` group would return
    filled values instead of `NaN` when `dropna=True` ([GH 34725](https://github.com/pandas-dev/pandas/issues/34725))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RollingGroupby.count()` where a `ValueError` was raised when specifying
    the `closed` parameter ([GH 35869](https://github.com/pandas-dev/pandas/issues/35869))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.rolling()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rolling.html#pandas.core.groupby.DataFrameGroupBy.rolling
    "pandas.core.groupby.DataFrameGroupBy.rolling") returning wrong values with partial
    centered window ([GH 36040](https://github.com/pandas-dev/pandas/issues/36040))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.rolling()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rolling.html#pandas.core.groupby.DataFrameGroupBy.rolling
    "pandas.core.groupby.DataFrameGroupBy.rolling") returned wrong values with time
    aware window containing `NaN`. Raises `ValueError` because windows are not monotonic
    now ([GH 34617](https://github.com/pandas-dev/pandas/issues/34617))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Rolling.__iter__()` where a `ValueError` was not raised when `min_periods`
    was larger than `window` ([GH 37156](https://github.com/pandas-dev/pandas/issues/37156))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using [`Rolling.var()`](../reference/api/pandas.core.window.rolling.Rolling.var.html#pandas.core.window.rolling.Rolling.var
    "pandas.core.window.rolling.Rolling.var") instead of [`Rolling.std()`](../reference/api/pandas.core.window.rolling.Rolling.std.html#pandas.core.window.rolling.Rolling.std
    "pandas.core.window.rolling.Rolling.std") avoids numerical issues for [`Rolling.corr()`](../reference/api/pandas.core.window.rolling.Rolling.corr.html#pandas.core.window.rolling.Rolling.corr
    "pandas.core.window.rolling.Rolling.corr") when [`Rolling.var()`](../reference/api/pandas.core.window.rolling.Rolling.var.html#pandas.core.window.rolling.Rolling.var
    "pandas.core.window.rolling.Rolling.var") is still within floating point precision
    while [`Rolling.std()`](../reference/api/pandas.core.window.rolling.Rolling.std.html#pandas.core.window.rolling.Rolling.std
    "pandas.core.window.rolling.Rolling.std") is not ([GH 31286](https://github.com/pandas-dev/pandas/issues/31286))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`Resampler.quantile()`](../reference/api/pandas.core.resample.Resampler.quantile.html#pandas.core.resample.Resampler.quantile
    "pandas.core.resample.Resampler.quantile") raised `TypeError` when values were
    of type `Timedelta` ([GH 29485](https://github.com/pandas-dev/pandas/issues/29485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.median()`](../reference/api/pandas.core.window.rolling.Rolling.median.html#pandas.core.window.rolling.Rolling.median
    "pandas.core.window.rolling.Rolling.median") and [`Rolling.quantile()`](../reference/api/pandas.core.window.rolling.Rolling.quantile.html#pandas.core.window.rolling.Rolling.quantile
    "pandas.core.window.rolling.Rolling.quantile") returned wrong values for [`BaseIndexer`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer") subclasses with non-monotonic starting or ending
    points for windows ([GH 37153](https://github.com/pandas-dev/pandas/issues/37153))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") dropped `nan` groups from result with `dropna=False`
    when grouping over a single column ([GH 35646](https://github.com/pandas-dev/pandas/issues/35646),
    [GH 35542](https://github.com/pandas-dev/pandas/issues/35542))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.head()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.head.html#pandas.core.groupby.DataFrameGroupBy.head
    "pandas.core.groupby.DataFrameGroupBy.head"), `DataFrameGroupBy.tail()`, `SeriesGroupBy.head()`,
    and `SeriesGroupBy.tail()` would raise when used with `axis=1` ([GH 9772](https://github.com/pandas-dev/pandas/issues/9772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") would raise when used with `axis=1`
    and a transformation kernel (e.g. “shift”) ([GH 36308](https://github.com/pandas-dev/pandas/issues/36308))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.resample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.resample.html#pandas.core.groupby.DataFrameGroupBy.resample
    "pandas.core.groupby.DataFrameGroupBy.resample") using `.agg` with sum produced
    different result than just calling `.sum` ([GH 33548](https://github.com/pandas-dev/pandas/issues/33548))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") dropped values on `nan` group when
    returning the same axes with the original frame ([GH 38227](https://github.com/pandas-dev/pandas/issues/38227))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") couldn’t handle with arraylike
    `q` when grouping by columns ([GH 33795](https://github.com/pandas-dev/pandas/issues/33795))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.rank()` with `datetime64tz` or period dtype incorrectly
    casting results to those dtypes instead of returning `float64` dtype ([GH 38187](https://github.com/pandas-dev/pandas/issues/38187))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `DataFrame.crosstab()` was returning incorrect results on inputs with
    duplicate row names, duplicate column names or duplicate names between row and
    column labels ([GH 22529](https://github.com/pandas-dev/pandas/issues/22529))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") with `aggfunc='count'` or `aggfunc='sum'` returning
    `NaN` for missing categories when pivoted on a `Categorical`. Now returning `0`
    ([GH 31422](https://github.com/pandas-dev/pandas/issues/31422))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor where input index names are not preserved in some cases ([GH 13475](https://github.com/pandas-dev/pandas/issues/13475))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in func [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") when using multiple columns with `margins=True` and `normalize=True`
    ([GH 35144](https://github.com/pandas-dev/pandas/issues/35144))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") where an empty DataFrame.stack would raise an error
    ([GH 36113](https://github.com/pandas-dev/pandas/issues/36113)). Now returning
    an empty Series with empty MultiIndex.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack"). Now a Series with single level of Index trying to unstack
    would raise a `ValueError` ([GH 36113](https://github.com/pandas-dev/pandas/issues/36113))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") with `func={'name':<FUNC>}` incorrectly raising `TypeError`
    when `DataFrame.columns==['Name']` ([GH 36212](https://github.com/pandas-dev/pandas/issues/36212))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.transform()`](../reference/api/pandas.Series.transform.html#pandas.Series.transform
    "pandas.Series.transform") would give incorrect results or raise when the argument
    `func` was a dictionary ([GH 35811](https://github.com/pandas-dev/pandas/issues/35811))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") did not preserve [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") level names for columns when rows and columns are both multiindexed
    ([GH 36360](https://github.com/pandas-dev/pandas/issues/36360))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") modified `index` argument when `columns` was passed
    but `values` was not ([GH 37635](https://github.com/pandas-dev/pandas/issues/37635))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") returned a non deterministic level-order for the resulting
    [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    ([GH 36910](https://github.com/pandas-dev/pandas/issues/36910))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first") caused wrong alignment with dtype `string` and
    one level of `MultiIndex` containing only `NA` ([GH 37591](https://github.com/pandas-dev/pandas/issues/37591))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") on merging [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with empty DataFrame ([GH 36895](https://github.com/pandas-dev/pandas/issues/36895))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") not setting index of return value when `func` return
    type is `dict` ([GH 37544](https://github.com/pandas-dev/pandas/issues/37544))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") and [`pandas.merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") returning inconsistent ordering in result for `how=right` and
    `how=left` ([GH 35382](https://github.com/pandas-dev/pandas/issues/35382))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_ordered()`](../reference/api/pandas.merge_ordered.html#pandas.merge_ordered
    "pandas.merge_ordered") couldn’t handle list-like `left_by` or `right_by` ([GH
    35269](https://github.com/pandas-dev/pandas/issues/35269))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_ordered()`](../reference/api/pandas.merge_ordered.html#pandas.merge_ordered
    "pandas.merge_ordered") returned wrong join result when length of `left_by` or
    `right_by` equals to the rows of `left` or `right` ([GH 38166](https://github.com/pandas-dev/pandas/issues/38166))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_ordered()`](../reference/api/pandas.merge_ordered.html#pandas.merge_ordered
    "pandas.merge_ordered") didn’t raise when elements in `left_by` or `right_by`
    not exist in `left` columns or `right` columns ([GH 38167](https://github.com/pandas-dev/pandas/issues/38167))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.drop_duplicates()`](../reference/api/pandas.DataFrame.drop_duplicates.html#pandas.DataFrame.drop_duplicates
    "pandas.DataFrame.drop_duplicates") not validating bool dtype for `ignore_index`
    keyword ([GH 38274](https://github.com/pandas-dev/pandas/issues/38274))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fixed bug where [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") column set to scalar extension type via a dict instantiation
    was considered an object type rather than the extension type ([GH 35965](https://github.com/pandas-dev/pandas/issues/35965))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where `astype()` with equal dtype and `copy=False` would return a
    new object ([GH 28488](https://github.com/pandas-dev/pandas/issues/28488))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug when applying a NumPy ufunc with multiple outputs to an [`IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") returning `None` ([GH 36913](https://github.com/pandas-dev/pandas/issues/36913))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed an inconsistency in [`PeriodArray`](../reference/api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray")’s `__init__` signature to those of [`DatetimeArray`](../reference/api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") and [`TimedeltaArray`](../reference/api/pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray") ([GH 37289](https://github.com/pandas-dev/pandas/issues/37289))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reductions for [`BooleanArray`](../reference/api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray"), [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical"), [`DatetimeArray`](../reference/api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray"), [`FloatingArray`](../reference/api/pandas.arrays.FloatingArray.html#pandas.arrays.FloatingArray
    "pandas.arrays.FloatingArray"), [`IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray"), [`PeriodArray`](../reference/api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray"), [`TimedeltaArray`](../reference/api/pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray"), and `PandasArray` are now keyword-only methods
    ([GH 37541](https://github.com/pandas-dev/pandas/issues/37541))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed a bug where a `TypeError` was wrongly raised if a membership check was
    made on an `ExtensionArray` containing nan-like values ([GH 37867](https://github.com/pandas-dev/pandas/issues/37867))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") incorrectly raising an `AssertionError` instead of a
    `ValueError` when invalid parameter combinations are passed ([GH 36045](https://github.com/pandas-dev/pandas/issues/36045))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with numeric values and string `to_replace` ([GH 34789](https://github.com/pandas-dev/pandas/issues/34789))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed metadata propagation in [`Series.abs()`](../reference/api/pandas.Series.abs.html#pandas.Series.abs
    "pandas.Series.abs") and ufuncs called on Series and DataFrames ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") incorrectly casting from `PeriodDtype` to object dtype
    ([GH 34871](https://github.com/pandas-dev/pandas/issues/34871))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in metadata propagation incorrectly copying DataFrame columns as metadata
    when the column name overlaps with the metadata name ([GH 37037](https://github.com/pandas-dev/pandas/issues/37037))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed metadata propagation in the [`Series.dt`](../reference/api/pandas.Series.dt.html#pandas.Series.dt
    "pandas.Series.dt"), [`Series.str`](../reference/api/pandas.Series.str.html#pandas.Series.str
    "pandas.Series.str") accessors, [`DataFrame.duplicated`](../reference/api/pandas.DataFrame.duplicated.html#pandas.DataFrame.duplicated
    "pandas.DataFrame.duplicated"), [`DataFrame.stack`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack"), [`DataFrame.unstack`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack"), [`DataFrame.pivot`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot"), `DataFrame.append`, [`DataFrame.diff`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff"), [`DataFrame.applymap`](../reference/api/pandas.DataFrame.applymap.html#pandas.DataFrame.applymap
    "pandas.DataFrame.applymap") and [`DataFrame.update`](../reference/api/pandas.DataFrame.update.html#pandas.DataFrame.update
    "pandas.DataFrame.update") methods ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283),
    [GH 37381](https://github.com/pandas-dev/pandas/issues/37381))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed metadata propagation when selecting columns with `DataFrame.__getitem__`
    ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.intersection()`](../reference/api/pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection") with non-[`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") failing to set the correct name on the returned [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 38111](https://github.com/pandas-dev/pandas/issues/38111))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RangeIndex.intersection()` failing to set the correct name on the returned
    [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") in some
    corner cases ([GH 38197](https://github.com/pandas-dev/pandas/issues/38197))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.difference()`](../reference/api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference") failing to set the correct name on the returned [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") in some corner cases ([GH 38268](https://github.com/pandas-dev/pandas/issues/38268))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") behaving differently depending on whether operand is an
    [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") or other
    list-like ([GH 36384](https://github.com/pandas-dev/pandas/issues/36384))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.intersection()`](../reference/api/pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection") with non-matching numeric dtypes casting to `object`
    dtype instead of minimal common dtype ([GH 38122](https://github.com/pandas-dev/pandas/issues/38122))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.union()` returning an incorrectly-typed [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") when empty ([GH 38282](https://github.com/pandas-dev/pandas/issues/38282))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing an array with 2 or more dimensions to the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") constructor now raises the more specific `ValueError` rather
    than a bare `Exception` ([GH 35744](https://github.com/pandas-dev/pandas/issues/35744))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `dir` where `dir(obj)` wouldn’t show attributes defined on the instance
    for pandas objects ([GH 37173](https://github.com/pandas-dev/pandas/issues/37173))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.drop()`](../reference/api/pandas.Index.drop.html#pandas.Index.drop
    "pandas.Index.drop") raising `InvalidIndexError` when index has duplicates ([GH
    38051](https://github.com/pandas-dev/pandas/issues/38051))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RangeIndex.difference()` returning `Int64Index` in some cases where
    it should return [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") ([GH 38028](https://github.com/pandas-dev/pandas/issues/38028))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in `assert_series_equal()` when comparing a datetime-like array with
    an equivalent non extension dtype array ([GH 37609](https://github.com/pandas-dev/pandas/issues/37609))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`is_bool_dtype()`](../reference/api/pandas.api.types.is_bool_dtype.html#pandas.api.types.is_bool_dtype
    "pandas.api.types.is_bool_dtype") would raise when passed a valid string such
    as `"boolean"` ([GH 38386](https://github.com/pandas-dev/pandas/issues/38386))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Fixed regression in logical operators raising `ValueError` when columns of
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    are a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") with unused categories ([GH 38367](https://github.com/pandas-dev/pandas/issues/38367))  ##
    Contributors'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A total of 257 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: 21CSM +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AbdulMAbdi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abhiraj Hinge +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abhishek Mangla +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abo7atm +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam Spannbauer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Albert Villanova del Moral
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Kirko
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Lim +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Thorne +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aleš Erjavec +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ali McMaster
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amanda Dsouza +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amim Knabben +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Wieteska
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anshoo Rajput +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anthony Milbourne
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arun12121 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Asish Mahapatra
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avinash Pancham +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: BeanNan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben Forbes +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brendan Wilby +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bruno Almeida +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Byron Boulton +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chankey Pathak
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Barnes +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Lynch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Withers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christoph Deil +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christopher Hadley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chuanzhu Xu
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Coelhudo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dan Moore
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Saxton
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Kwong +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Li +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Mrva +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deepak Pandey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deepyaman Datta
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Devin Petersohn
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dmitriy Perepelkin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Douglas Hanley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dāgs Grīnbergs +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eli Treuherz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Elliot Rampono +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Erfan Nariman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eric Goddard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eric Leung +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eric Wieser
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ethan Chen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eve +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eyal Trabelsi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fabian Gebhart +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fangchen Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Felix Claessen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finlay Maguire +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Florian Roscheck +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gabriel Monteiro
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gautham +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gerard Jorgensen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gregory Livschitz
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hans
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Harsh Sharma
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Honfung Wong +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Igor Gotlibovych +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Iqrar Agalosi Nureyza
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Irv Lustig
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Isaac Virshup
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jacob Peacock
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jacob Stevens-Haas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Müller +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Janus
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeet Parekh
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Hernandez +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jiaxiang
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joao Pedro Berno Zanutto +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joel Nothman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joel Whittier +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John Karasinski +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John McGuigan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Johnny Pribyl +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonas Laursen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonathan Shreckengost +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jose +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JoseNavy +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josh Temple +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jun Kudo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justin Essert
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justin Sexton +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kaiqi Dong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kamil Trocewicz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Karthik Mathur
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kashif +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kenny Huynh
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kumar Shivam +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leonardus Chen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Levi Matus +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lucas Rodés-Guirao +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luis Pinto +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lynch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Garcia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Gorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maria-Alexandra Ilie +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marian Denes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mark Graham +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Durant
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthias Bussonnier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maxim Ivanov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mayank Chaudhary +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MeeseeksMachine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Meghana Varanasi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metehan Kutlu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Micael Jarniac +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Micah Smith +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Marino
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Miroslav Šedivý
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mohammad Jafar Mashhadi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mohammed Kashif +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nagesh Kumar C +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nidhi Zare +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nikhil Choudhary +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Number42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oleh Kozynets +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OlivierLuG
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas Development Team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paolo Lammens +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul Ganssle
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pax +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter Liu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Philip Cerles +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pranjal Bhardwaj +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prayag Savsani +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Purushothaman Srikanth +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Qbiwan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rahul Chauhan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rahul Sathanapalli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rajat Bishnoi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ray Bell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshama Shaikh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Shadrach
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert Bradshaw
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert de Vries
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rohith295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: S Mono +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: S.TAKENO +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sahid Velji +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sam Cohen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sam Ezebunandu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sander +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sarthak +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sarthak Vineet Kumar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Satrio H Wicaksono +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scott Lasley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shao Yang Hong +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sharon Woo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shubham Mehra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Hawkins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sixuan (Cherie) Wu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Souris Ash +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steffen Rehberg
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Suvayu Ali
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sven
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SylvainLan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: T. JEGHAM +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terji Petersen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Dickson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Heavey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Smith
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tobias Pitters
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Augspurger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tomasz Sakrejda +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Torsten Wörtwein +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ty Mick +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: UrielMaD +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Uwe L. Korn
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vikramaditya Gaonkar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VirosaLi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: W.R +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Warren White +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wesley Boelrijk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Ayd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yanxian Lin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yassir Karroum +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yong Kai Yi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yuanhao Geng +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yury Mikhaylov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yutaro Ikeda
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yuya Takashina +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zach Brookler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zak Kohler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ZhihuiChen0903 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: abmyii
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alexhtn +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: asharma13524 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: attack68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: beanan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: chinhwee
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cleconte987
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: danchev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ebardie +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: edwardkong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: elliot rampono +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: estasney +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gabicca
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: geetha-rangaswamaiah +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gfyoung
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: guru kiran
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: hardikpnsp +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: icanhazcodeplz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ivanovmg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jeschwar
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jnecus
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: joooeey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: junk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: krajatcl +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lacrosse91 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: leo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lpkirwin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lrjball
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lucasrodes +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ma3da +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mavismonica +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mlondschien +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mzeitlin11 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nguevara +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nrebena
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: parkdj1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: partev
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: patrick
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: realead
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rxxg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: samilAyoub +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sanderland
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: shawnbrown
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sm1899 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: smartvinnetou
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ssortman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: steveya +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: taytzehao +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tiagohonorato +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: timhunderwood
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tkmz-n +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tnwei +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tpanza +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vineethraj510 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vmdhhh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: xinrong-databricks +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: yonas kassa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: yonashub +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ádám Lippai +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enhancements
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### Optionally disallow duplicate labels'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    can now be created with `allows_duplicate_labels=False` flag to control whether
    the index or columns can contain duplicate labels ([GH 28394](https://github.com/pandas-dev/pandas/issues/28394)).
    This can be used to prevent accidental introduction of duplicate labels, which
    can affect downstream operations.'
  prefs: []
  type: TYPE_NORMAL
- en: By default, duplicates continue to be allowed.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: pandas will propagate the `allows_duplicate_labels` property through many operations.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: This is an experimental feature. Currently, many methods fail to propagate the
    `allows_duplicate_labels` value. In future versions it is expected that every
    method taking or returning one or more DataFrame or Series objects will propagate
    `allows_duplicate_labels`.
  prefs: []
  type: TYPE_NORMAL
- en: See [Duplicate Labels](../user_guide/duplicates.html#duplicates) for more.
  prefs: []
  type: TYPE_NORMAL
- en: The `allows_duplicate_labels` flag is stored in the new `DataFrame.flags` attribute.
    This stores global attributes that apply to the *pandas object*. This differs
    from [`DataFrame.attrs`](../reference/api/pandas.DataFrame.attrs.html#pandas.DataFrame.attrs
    "pandas.DataFrame.attrs"), which stores information that applies to the dataset.
  prefs: []
  type: TYPE_NORMAL
- en: Passing arguments to fsspec backends
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Many read/write functions have acquired the `storage_options` optional argument,
    to pass a dictionary of parameters to the storage backend. This allows, for example,
    for passing credentials to S3 and GCS storage. The details of what parameters
    can be passed to which backends can be found in the documentation of the individual
    storage backends (detailed from the fsspec docs for [builtin implementations](https://filesystem-spec.readthedocs.io/en/latest/api.html#built-in-implementations)
    and linked to [external ones](https://filesystem-spec.readthedocs.io/en/latest/api.html#other-known-implementations)).
    See Section [Reading/writing remote files](../user_guide/io.html#io-remote).
  prefs: []
  type: TYPE_NORMAL
- en: '[GH 35655](https://github.com/pandas-dev/pandas/issues/35655) added fsspec
    support (including `storage_options`) for reading excel files.'
  prefs: []
  type: TYPE_NORMAL
- en: '### Support for binary file handles in `to_csv`'
  prefs: []
  type: TYPE_NORMAL
- en: '`to_csv()` supports file handles in binary mode ([GH 19827](https://github.com/pandas-dev/pandas/issues/19827)
    and [GH 35058](https://github.com/pandas-dev/pandas/issues/35058)) with `encoding`
    ([GH 13068](https://github.com/pandas-dev/pandas/issues/13068) and [GH 23854](https://github.com/pandas-dev/pandas/issues/23854))
    and `compression` ([GH 22555](https://github.com/pandas-dev/pandas/issues/22555)).
    If pandas does not automatically detect whether the file handle is opened in binary
    or text mode, it is necessary to provide `mode="wb"`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Support for short caption and table position in `to_latex`
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") now allows one to specify a floating table position
    ([GH 35281](https://github.com/pandas-dev/pandas/issues/35281)) and a short caption
    ([GH 36267](https://github.com/pandas-dev/pandas/issues/36267)).'
  prefs: []
  type: TYPE_NORMAL
- en: The keyword `position` has been added to set the position.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Usage of the keyword `caption` has been extended. Besides taking a single string
    as an argument, one can optionally provide a tuple `(full_caption, short_caption)`
    to add a short caption macro.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '### Change in default floating precision for `read_csv` and `read_table`'
  prefs: []
  type: TYPE_NORMAL
- en: 'For the C parsing engine, the methods [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") previously defaulted to a parser that could read floating
    point numbers slightly incorrectly with respect to the last bit in precision.
    The option `floating_precision="high"` has always been available to avoid this
    issue. Beginning with this version, the default is now to use the more accurate
    parser by making `floating_precision=None` correspond to the high precision parser,
    and the new option `floating_precision="legacy"` to use the legacy parser. The
    change to using the higher precision parser by default should have no impact on
    performance. ([GH 17154](https://github.com/pandas-dev/pandas/issues/17154))  ###
    Experimental nullable data types for float data'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve added [`Float32Dtype`](../reference/api/pandas.Float32Dtype.html#pandas.Float32Dtype
    "pandas.Float32Dtype") / [`Float64Dtype`](../reference/api/pandas.Float64Dtype.html#pandas.Float64Dtype
    "pandas.Float64Dtype") and [`FloatingArray`](../reference/api/pandas.arrays.FloatingArray.html#pandas.arrays.FloatingArray
    "pandas.arrays.FloatingArray"). These are extension data types dedicated to floating
    point data that can hold the `pd.NA` missing value indicator ([GH 32265](https://github.com/pandas-dev/pandas/issues/32265),
    [GH 34307](https://github.com/pandas-dev/pandas/issues/34307)).
  prefs: []
  type: TYPE_NORMAL
- en: While the default float data type already supports missing values using `np.nan`,
    these new data types use `pd.NA` (and its corresponding behavior) as the missing
    value indicator, in line with the already existing nullable [integer](../user_guide/integer_na.html#integer-na)
    and [boolean](../user_guide/boolean.html#boolean) data types.
  prefs: []
  type: TYPE_NORMAL
- en: 'One example where the behavior of `np.nan` and `pd.NA` is different is comparison
    operations:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: See the [NA semantics](../user_guide/missing_data.html#missing-data-na) doc
    section for more details on the behavior when using the `pd.NA` missing value
    indicator.
  prefs: []
  type: TYPE_NORMAL
- en: 'As shown above, the dtype can be specified using the “Float64” or “Float32”
    string (capitalized to distinguish it from the default “float64” data type). Alternatively,
    you can also use the dtype object:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: Operations with the existing integer or boolean nullable data types that give
    float results will now also use the nullable floating data types ([GH 38178](https://github.com/pandas-dev/pandas/issues/38178)).
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: 'Experimental: the new floating data types are currently experimental, and their
    behavior or API may still change without warning. Especially the behavior regarding
    NaN (distinct from NA missing values) is subject to change.  ### Index/column
    name preservation when aggregating'
  prefs: []
  type: TYPE_NORMAL
- en: 'When aggregating using [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") or the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor, pandas will now attempt to preserve index and
    column names whenever possible ([GH 35847](https://github.com/pandas-dev/pandas/issues/35847)).
    In the case where all inputs share a common name, this name will be assigned to
    the result. When the input names do not all agree, the result will be unnamed.
    Here is an example where the index name is preserved:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'The same is true for [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"), but the logic is applied separately on a level-by-level
    basis.  ### GroupBy supports EWM operations directly'
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrameGroupBy` now supports exponentially weighted window operations directly
    ([GH 16037](https://github.com/pandas-dev/pandas/issues/16037)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'Additionally `mean` supports execution via [Numba](https://numba.pydata.org/)
    with the `engine` and `engine_kwargs` arguments. Numba must be installed as an
    optional dependency to use this feature.  ### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: Added `day_of_week` (compatibility alias `dayofweek`) property to [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp"), [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period"), [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") ([GH 9605](https://github.com/pandas-dev/pandas/issues/9605))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `day_of_year` (compatibility alias `dayofyear`) property to [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp"), [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period"), [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") ([GH 9605](https://github.com/pandas-dev/pandas/issues/9605))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`set_flags()`](../reference/api/pandas.DataFrame.set_flags.html#pandas.DataFrame.set_flags
    "pandas.DataFrame.set_flags") for setting table-wide flags on a Series or DataFrame
    ([GH 28394](https://github.com/pandas-dev/pandas/issues/28394))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.applymap()`](../reference/api/pandas.DataFrame.applymap.html#pandas.DataFrame.applymap
    "pandas.DataFrame.applymap") now supports `na_action` ([GH 23803](https://github.com/pandas-dev/pandas/issues/23803))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") with
    object dtype supports division and multiplication ([GH 34160](https://github.com/pandas-dev/pandas/issues/34160))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`io.sql.get_schema()` now supports a `schema` keyword argument that will add
    a schema into the create table statement ([GH 28486](https://github.com/pandas-dev/pandas/issues/28486))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.explode()`](../reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode
    "pandas.DataFrame.explode") and [`Series.explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode") now support exploding of sets ([GH 35614](https://github.com/pandas-dev/pandas/issues/35614))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.hist()`](../reference/api/pandas.DataFrame.hist.html#pandas.DataFrame.hist
    "pandas.DataFrame.hist") now supports time series (datetime) data ([GH 32590](https://github.com/pandas-dev/pandas/issues/32590))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Styler.set_table_styles()`](../reference/api/pandas.io.formats.style.Styler.set_table_styles.html#pandas.io.formats.style.Styler.set_table_styles
    "pandas.io.formats.style.Styler.set_table_styles") now allows the direct styling
    of rows and columns and can be chained ([GH 35607](https://github.com/pandas-dev/pandas/issues/35607))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") now allows direct CSS class name addition to
    individual data cells ([GH 36159](https://github.com/pandas-dev/pandas/issues/36159))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Rolling.mean()`](../reference/api/pandas.core.window.rolling.Rolling.mean.html#pandas.core.window.rolling.Rolling.mean
    "pandas.core.window.rolling.Rolling.mean") and [`Rolling.sum()`](../reference/api/pandas.core.window.rolling.Rolling.sum.html#pandas.core.window.rolling.Rolling.sum
    "pandas.core.window.rolling.Rolling.sum") use Kahan summation to calculate the
    mean to avoid numerical problems ([GH 10319](https://github.com/pandas-dev/pandas/issues/10319),
    [GH 11645](https://github.com/pandas-dev/pandas/issues/11645), [GH 13254](https://github.com/pandas-dev/pandas/issues/13254),
    [GH 32761](https://github.com/pandas-dev/pandas/issues/32761), [GH 36031](https://github.com/pandas-dev/pandas/issues/36031))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.searchsorted()`, `TimedeltaIndex.searchsorted()`, `PeriodIndex.searchsorted()`,
    and [`Series.searchsorted()`](../reference/api/pandas.Series.searchsorted.html#pandas.Series.searchsorted
    "pandas.Series.searchsorted") with datetime-like dtypes will now try to cast string
    arguments (list-like and scalar) to the matching datetime-like type ([GH 36346](https://github.com/pandas-dev/pandas/issues/36346))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added methods `IntegerArray.prod()`, `IntegerArray.min()`, and `IntegerArray.max()`
    ([GH 33790](https://github.com/pandas-dev/pandas/issues/33790))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calling a NumPy ufunc on a `DataFrame` with extension types now preserves the
    extension types when possible ([GH 23743](https://github.com/pandas-dev/pandas/issues/23743))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calling a binary-input NumPy ufunc on multiple `DataFrame` objects now aligns,
    matching the behavior of binary operations and ufuncs on `Series` ([GH 23743](https://github.com/pandas-dev/pandas/issues/23743)).
    This change has been reverted in pandas 1.2.1, and the behaviour to not align
    DataFrames is deprecated instead, see the [the 1.2.1 release notes](v1.2.1.html#whatsnew-121-ufunc-deprecation).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Where possible `RangeIndex.difference()` and `RangeIndex.symmetric_difference()`
    will return [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") instead of `Int64Index` ([GH 36564](https://github.com/pandas-dev/pandas/issues/36564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") now supports [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") for columns in parquet format ([GH 34777](https://github.com/pandas-dev/pandas/issues/34777))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") gained a `use_nullable_dtypes=True` option to use nullable
    dtypes that use `pd.NA` as missing value indicator where possible for the resulting
    DataFrame (default is `False`, and only applicable for `engine="pyarrow"`) ([GH
    31242](https://github.com/pandas-dev/pandas/issues/31242))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`Rolling.sem()`](../reference/api/pandas.core.window.rolling.Rolling.sem.html#pandas.core.window.rolling.Rolling.sem
    "pandas.core.window.rolling.Rolling.sem") and `Expanding.sem()` to compute the
    standard error of the mean ([GH 26476](https://github.com/pandas-dev/pandas/issues/26476))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Rolling.var()`](../reference/api/pandas.core.window.rolling.Rolling.var.html#pandas.core.window.rolling.Rolling.var
    "pandas.core.window.rolling.Rolling.var") and [`Rolling.std()`](../reference/api/pandas.core.window.rolling.Rolling.std.html#pandas.core.window.rolling.Rolling.std
    "pandas.core.window.rolling.Rolling.std") use Kahan summation and Welford’s Method
    to avoid numerical issues ([GH 37051](https://github.com/pandas-dev/pandas/issues/37051))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr") and [`DataFrame.cov()`](../reference/api/pandas.DataFrame.cov.html#pandas.DataFrame.cov
    "pandas.DataFrame.cov") use Welford’s Method to avoid numerical issues ([GH 37448](https://github.com/pandas-dev/pandas/issues/37448))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") now recognizes `xlabel` and `ylabel` arguments for plots
    of type `scatter` and `hexbin` ([GH 37001](https://github.com/pandas-dev/pandas/issues/37001))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    now supports the `divmod` operation ([GH 37165](https://github.com/pandas-dev/pandas/issues/37165))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") now returns a `bytes` object when no `path` argument
    is passed ([GH 37105](https://github.com/pandas-dev/pandas/issues/37105))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Rolling` now supports the `closed` argument for fixed windows ([GH 34315](https://github.com/pandas-dev/pandas/issues/34315))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `datetime64` or `datetime64tz` dtypes now support `std`
    ([GH 37436](https://github.com/pandas-dev/pandas/issues/37436))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Window` now supports all Scipy window types in `win_type` with flexible keyword
    argument support ([GH 34556](https://github.com/pandas-dev/pandas/issues/34556))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`testing.assert_index_equal()`](../reference/api/pandas.testing.assert_index_equal.html#pandas.testing.assert_index_equal
    "pandas.testing.assert_index_equal") now has a `check_order` parameter that allows
    indexes to be checked in an order-insensitive manner ([GH 37478](https://github.com/pandas-dev/pandas/issues/37478))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    supports memory-mapping for compressed files ([GH 37621](https://github.com/pandas-dev/pandas/issues/37621))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add support for `min_count` keyword for [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") for functions `min`, `max`, `first` and `last` ([GH
    37821](https://github.com/pandas-dev/pandas/issues/37821), [GH 37768](https://github.com/pandas-dev/pandas/issues/37768))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve error reporting for [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") when invalid merge column definitions were given ([GH
    16228](https://github.com/pandas-dev/pandas/issues/16228))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve numerical stability for [`Rolling.skew()`](../reference/api/pandas.core.window.rolling.Rolling.skew.html#pandas.core.window.rolling.Rolling.skew
    "pandas.core.window.rolling.Rolling.skew"), [`Rolling.kurt()`](../reference/api/pandas.core.window.rolling.Rolling.kurt.html#pandas.core.window.rolling.Rolling.kurt
    "pandas.core.window.rolling.Rolling.kurt"), `Expanding.skew()` and `Expanding.kurt()`
    through implementation of Kahan summation ([GH 6929](https://github.com/pandas-dev/pandas/issues/6929))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error reporting for subsetting columns of a `DataFrameGroupBy` with
    `axis=1` ([GH 37725](https://github.com/pandas-dev/pandas/issues/37725))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement method `cross` for [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") and [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") ([GH 5401](https://github.com/pandas-dev/pandas/issues/5401))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv"),
    [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    and [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    are called with `chunksize`/`iterator` they can be used in a `with` statement
    as they return context-managers ([GH 38225](https://github.com/pandas-dev/pandas/issues/38225))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Augmented the list of named colors available for styling Excel exports, enabling
    all of CSS4 colors ([GH 38247](https://github.com/pandas-dev/pandas/issues/38247))  ###
    Optionally disallow duplicate labels'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    can now be created with `allows_duplicate_labels=False` flag to control whether
    the index or columns can contain duplicate labels ([GH 28394](https://github.com/pandas-dev/pandas/issues/28394)).
    This can be used to prevent accidental introduction of duplicate labels, which
    can affect downstream operations.'
  prefs: []
  type: TYPE_NORMAL
- en: By default, duplicates continue to be allowed.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: pandas will propagate the `allows_duplicate_labels` property through many operations.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: This is an experimental feature. Currently, many methods fail to propagate the
    `allows_duplicate_labels` value. In future versions it is expected that every
    method taking or returning one or more DataFrame or Series objects will propagate
    `allows_duplicate_labels`.
  prefs: []
  type: TYPE_NORMAL
- en: See [Duplicate Labels](../user_guide/duplicates.html#duplicates) for more.
  prefs: []
  type: TYPE_NORMAL
- en: The `allows_duplicate_labels` flag is stored in the new `DataFrame.flags` attribute.
    This stores global attributes that apply to the *pandas object*. This differs
    from [`DataFrame.attrs`](../reference/api/pandas.DataFrame.attrs.html#pandas.DataFrame.attrs
    "pandas.DataFrame.attrs"), which stores information that applies to the dataset.
  prefs: []
  type: TYPE_NORMAL
- en: Passing arguments to fsspec backends
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Many read/write functions have acquired the `storage_options` optional argument,
    to pass a dictionary of parameters to the storage backend. This allows, for example,
    for passing credentials to S3 and GCS storage. The details of what parameters
    can be passed to which backends can be found in the documentation of the individual
    storage backends (detailed from the fsspec docs for [builtin implementations](https://filesystem-spec.readthedocs.io/en/latest/api.html#built-in-implementations)
    and linked to [external ones](https://filesystem-spec.readthedocs.io/en/latest/api.html#other-known-implementations)).
    See Section [Reading/writing remote files](../user_guide/io.html#io-remote).
  prefs: []
  type: TYPE_NORMAL
- en: '[GH 35655](https://github.com/pandas-dev/pandas/issues/35655) added fsspec
    support (including `storage_options`) for reading excel files.'
  prefs: []
  type: TYPE_NORMAL
- en: '### Support for binary file handles in `to_csv`'
  prefs: []
  type: TYPE_NORMAL
- en: '`to_csv()` supports file handles in binary mode ([GH 19827](https://github.com/pandas-dev/pandas/issues/19827)
    and [GH 35058](https://github.com/pandas-dev/pandas/issues/35058)) with `encoding`
    ([GH 13068](https://github.com/pandas-dev/pandas/issues/13068) and [GH 23854](https://github.com/pandas-dev/pandas/issues/23854))
    and `compression` ([GH 22555](https://github.com/pandas-dev/pandas/issues/22555)).
    If pandas does not automatically detect whether the file handle is opened in binary
    or text mode, it is necessary to provide `mode="wb"`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: Support for short caption and table position in `to_latex`
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") now allows one to specify a floating table position
    ([GH 35281](https://github.com/pandas-dev/pandas/issues/35281)) and a short caption
    ([GH 36267](https://github.com/pandas-dev/pandas/issues/36267)).'
  prefs: []
  type: TYPE_NORMAL
- en: The keyword `position` has been added to set the position.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: Usage of the keyword `caption` has been extended. Besides taking a single string
    as an argument, one can optionally provide a tuple `(full_caption, short_caption)`
    to add a short caption macro.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: '### Change in default floating precision for `read_csv` and `read_table`'
  prefs: []
  type: TYPE_NORMAL
- en: For the C parsing engine, the methods [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") previously defaulted to a parser that could read floating
    point numbers slightly incorrectly with respect to the last bit in precision.
    The option `floating_precision="high"` has always been available to avoid this
    issue. Beginning with this version, the default is now to use the more accurate
    parser by making `floating_precision=None` correspond to the high precision parser,
    and the new option `floating_precision="legacy"` to use the legacy parser. The
    change to using the higher precision parser by default should have no impact on
    performance. ([GH 17154](https://github.com/pandas-dev/pandas/issues/17154))
  prefs: []
  type: TYPE_NORMAL
- en: '### Experimental nullable data types for float data'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve added [`Float32Dtype`](../reference/api/pandas.Float32Dtype.html#pandas.Float32Dtype
    "pandas.Float32Dtype") / [`Float64Dtype`](../reference/api/pandas.Float64Dtype.html#pandas.Float64Dtype
    "pandas.Float64Dtype") and [`FloatingArray`](../reference/api/pandas.arrays.FloatingArray.html#pandas.arrays.FloatingArray
    "pandas.arrays.FloatingArray"). These are extension data types dedicated to floating
    point data that can hold the `pd.NA` missing value indicator ([GH 32265](https://github.com/pandas-dev/pandas/issues/32265),
    [GH 34307](https://github.com/pandas-dev/pandas/issues/34307)).
  prefs: []
  type: TYPE_NORMAL
- en: While the default float data type already supports missing values using `np.nan`,
    these new data types use `pd.NA` (and its corresponding behavior) as the missing
    value indicator, in line with the already existing nullable [integer](../user_guide/integer_na.html#integer-na)
    and [boolean](../user_guide/boolean.html#boolean) data types.
  prefs: []
  type: TYPE_NORMAL
- en: 'One example where the behavior of `np.nan` and `pd.NA` is different is comparison
    operations:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: See the [NA semantics](../user_guide/missing_data.html#missing-data-na) doc
    section for more details on the behavior when using the `pd.NA` missing value
    indicator.
  prefs: []
  type: TYPE_NORMAL
- en: 'As shown above, the dtype can be specified using the “Float64” or “Float32”
    string (capitalized to distinguish it from the default “float64” data type). Alternatively,
    you can also use the dtype object:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: Operations with the existing integer or boolean nullable data types that give
    float results will now also use the nullable floating data types ([GH 38178](https://github.com/pandas-dev/pandas/issues/38178)).
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: 'Experimental: the new floating data types are currently experimental, and their
    behavior or API may still change without warning. Especially the behavior regarding
    NaN (distinct from NA missing values) is subject to change.'
  prefs: []
  type: TYPE_NORMAL
- en: '### Index/column name preservation when aggregating'
  prefs: []
  type: TYPE_NORMAL
- en: 'When aggregating using [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") or the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor, pandas will now attempt to preserve index and
    column names whenever possible ([GH 35847](https://github.com/pandas-dev/pandas/issues/35847)).
    In the case where all inputs share a common name, this name will be assigned to
    the result. When the input names do not all agree, the result will be unnamed.
    Here is an example where the index name is preserved:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: The same is true for [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"), but the logic is applied separately on a level-by-level
    basis.
  prefs: []
  type: TYPE_NORMAL
- en: '### GroupBy supports EWM operations directly'
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrameGroupBy` now supports exponentially weighted window operations directly
    ([GH 16037](https://github.com/pandas-dev/pandas/issues/16037)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: Additionally `mean` supports execution via [Numba](https://numba.pydata.org/)
    with the `engine` and `engine_kwargs` arguments. Numba must be installed as an
    optional dependency to use this feature.
  prefs: []
  type: TYPE_NORMAL
- en: '### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: Added `day_of_week` (compatibility alias `dayofweek`) property to [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp"), [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period"), [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") ([GH 9605](https://github.com/pandas-dev/pandas/issues/9605))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `day_of_year` (compatibility alias `dayofyear`) property to [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp"), [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period"), [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") ([GH 9605](https://github.com/pandas-dev/pandas/issues/9605))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`set_flags()`](../reference/api/pandas.DataFrame.set_flags.html#pandas.DataFrame.set_flags
    "pandas.DataFrame.set_flags") for setting table-wide flags on a Series or DataFrame
    ([GH 28394](https://github.com/pandas-dev/pandas/issues/28394))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.applymap()`](../reference/api/pandas.DataFrame.applymap.html#pandas.DataFrame.applymap
    "pandas.DataFrame.applymap") now supports `na_action` ([GH 23803](https://github.com/pandas-dev/pandas/issues/23803))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") with
    object dtype supports division and multiplication ([GH 34160](https://github.com/pandas-dev/pandas/issues/34160))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`io.sql.get_schema()` now supports a `schema` keyword argument that will add
    a schema into the create table statement ([GH 28486](https://github.com/pandas-dev/pandas/issues/28486))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.explode()`](../reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode
    "pandas.DataFrame.explode") and [`Series.explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode") now support exploding of sets ([GH 35614](https://github.com/pandas-dev/pandas/issues/35614))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.hist()`](../reference/api/pandas.DataFrame.hist.html#pandas.DataFrame.hist
    "pandas.DataFrame.hist") now supports time series (datetime) data ([GH 32590](https://github.com/pandas-dev/pandas/issues/32590))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Styler.set_table_styles()`](../reference/api/pandas.io.formats.style.Styler.set_table_styles.html#pandas.io.formats.style.Styler.set_table_styles
    "pandas.io.formats.style.Styler.set_table_styles") now allows the direct styling
    of rows and columns and can be chained ([GH 35607](https://github.com/pandas-dev/pandas/issues/35607))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") now allows direct CSS class name addition to
    individual data cells ([GH 36159](https://github.com/pandas-dev/pandas/issues/36159))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Rolling.mean()`](../reference/api/pandas.core.window.rolling.Rolling.mean.html#pandas.core.window.rolling.Rolling.mean
    "pandas.core.window.rolling.Rolling.mean") and [`Rolling.sum()`](../reference/api/pandas.core.window.rolling.Rolling.sum.html#pandas.core.window.rolling.Rolling.sum
    "pandas.core.window.rolling.Rolling.sum") use Kahan summation to calculate the
    mean to avoid numerical problems ([GH 10319](https://github.com/pandas-dev/pandas/issues/10319),
    [GH 11645](https://github.com/pandas-dev/pandas/issues/11645), [GH 13254](https://github.com/pandas-dev/pandas/issues/13254),
    [GH 32761](https://github.com/pandas-dev/pandas/issues/32761), [GH 36031](https://github.com/pandas-dev/pandas/issues/36031))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.searchsorted()`, `TimedeltaIndex.searchsorted()`, `PeriodIndex.searchsorted()`,
    and [`Series.searchsorted()`](../reference/api/pandas.Series.searchsorted.html#pandas.Series.searchsorted
    "pandas.Series.searchsorted") with datetime-like dtypes will now try to cast string
    arguments (list-like and scalar) to the matching datetime-like type ([GH 36346](https://github.com/pandas-dev/pandas/issues/36346))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added methods `IntegerArray.prod()`, `IntegerArray.min()`, and `IntegerArray.max()`
    ([GH 33790](https://github.com/pandas-dev/pandas/issues/33790))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calling a NumPy ufunc on a `DataFrame` with extension types now preserves the
    extension types when possible ([GH 23743](https://github.com/pandas-dev/pandas/issues/23743))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calling a binary-input NumPy ufunc on multiple `DataFrame` objects now aligns,
    matching the behavior of binary operations and ufuncs on `Series` ([GH 23743](https://github.com/pandas-dev/pandas/issues/23743)).
    This change has been reverted in pandas 1.2.1, and the behaviour to not align
    DataFrames is deprecated instead, see the [the 1.2.1 release notes](v1.2.1.html#whatsnew-121-ufunc-deprecation).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Where possible `RangeIndex.difference()` and `RangeIndex.symmetric_difference()`
    will return [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") instead of `Int64Index` ([GH 36564](https://github.com/pandas-dev/pandas/issues/36564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") now supports [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") for columns in parquet format ([GH 34777](https://github.com/pandas-dev/pandas/issues/34777))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") gained a `use_nullable_dtypes=True` option to use nullable
    dtypes that use `pd.NA` as missing value indicator where possible for the resulting
    DataFrame (default is `False`, and only applicable for `engine="pyarrow"`) ([GH
    31242](https://github.com/pandas-dev/pandas/issues/31242))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`Rolling.sem()`](../reference/api/pandas.core.window.rolling.Rolling.sem.html#pandas.core.window.rolling.Rolling.sem
    "pandas.core.window.rolling.Rolling.sem") and `Expanding.sem()` to compute the
    standard error of the mean ([GH 26476](https://github.com/pandas-dev/pandas/issues/26476))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Rolling.var()`](../reference/api/pandas.core.window.rolling.Rolling.var.html#pandas.core.window.rolling.Rolling.var
    "pandas.core.window.rolling.Rolling.var") and [`Rolling.std()`](../reference/api/pandas.core.window.rolling.Rolling.std.html#pandas.core.window.rolling.Rolling.std
    "pandas.core.window.rolling.Rolling.std") use Kahan summation and Welford’s Method
    to avoid numerical issues ([GH 37051](https://github.com/pandas-dev/pandas/issues/37051))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr") and [`DataFrame.cov()`](../reference/api/pandas.DataFrame.cov.html#pandas.DataFrame.cov
    "pandas.DataFrame.cov") use Welford’s Method to avoid numerical issues ([GH 37448](https://github.com/pandas-dev/pandas/issues/37448))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") now recognizes `xlabel` and `ylabel` arguments for plots
    of type `scatter` and `hexbin` ([GH 37001](https://github.com/pandas-dev/pandas/issues/37001))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    now supports the `divmod` operation ([GH 37165](https://github.com/pandas-dev/pandas/issues/37165))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") now returns a `bytes` object when no `path` argument
    is passed ([GH 37105](https://github.com/pandas-dev/pandas/issues/37105))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Rolling` now supports the `closed` argument for fixed windows ([GH 34315](https://github.com/pandas-dev/pandas/issues/34315))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `datetime64` or `datetime64tz` dtypes now support `std`
    ([GH 37436](https://github.com/pandas-dev/pandas/issues/37436))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Window` now supports all Scipy window types in `win_type` with flexible keyword
    argument support ([GH 34556](https://github.com/pandas-dev/pandas/issues/34556))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`testing.assert_index_equal()`](../reference/api/pandas.testing.assert_index_equal.html#pandas.testing.assert_index_equal
    "pandas.testing.assert_index_equal") now has a `check_order` parameter that allows
    indexes to be checked in an order-insensitive manner ([GH 37478](https://github.com/pandas-dev/pandas/issues/37478))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    supports memory-mapping for compressed files ([GH 37621](https://github.com/pandas-dev/pandas/issues/37621))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add support for `min_count` keyword for [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") for functions `min`, `max`, `first` and `last` ([GH
    37821](https://github.com/pandas-dev/pandas/issues/37821), [GH 37768](https://github.com/pandas-dev/pandas/issues/37768))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve error reporting for [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") when invalid merge column definitions were given ([GH
    16228](https://github.com/pandas-dev/pandas/issues/16228))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve numerical stability for [`Rolling.skew()`](../reference/api/pandas.core.window.rolling.Rolling.skew.html#pandas.core.window.rolling.Rolling.skew
    "pandas.core.window.rolling.Rolling.skew"), [`Rolling.kurt()`](../reference/api/pandas.core.window.rolling.Rolling.kurt.html#pandas.core.window.rolling.Rolling.kurt
    "pandas.core.window.rolling.Rolling.kurt"), `Expanding.skew()` and `Expanding.kurt()`
    through implementation of Kahan summation ([GH 6929](https://github.com/pandas-dev/pandas/issues/6929))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error reporting for subsetting columns of a `DataFrameGroupBy` with
    `axis=1` ([GH 37725](https://github.com/pandas-dev/pandas/issues/37725))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement method `cross` for [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") and [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") ([GH 5401](https://github.com/pandas-dev/pandas/issues/5401))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv"),
    [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    and [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    are called with `chunksize`/`iterator` they can be used in a `with` statement
    as they return context-managers ([GH 38225](https://github.com/pandas-dev/pandas/issues/38225))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Augmented the list of named colors available for styling Excel exports, enabling
    all of CSS4 colors ([GH 38247](https://github.com/pandas-dev/pandas/issues/38247))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Notable bug fixes'
  prefs: []
  type: TYPE_NORMAL
- en: These are bug fixes that might have notable behavior changes.
  prefs: []
  type: TYPE_NORMAL
- en: Consistency of DataFrame Reductions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.any()`](../reference/api/pandas.DataFrame.any.html#pandas.DataFrame.any
    "pandas.DataFrame.any") and [`DataFrame.all()`](../reference/api/pandas.DataFrame.all.html#pandas.DataFrame.all
    "pandas.DataFrame.all") with `bool_only=True` now determines whether to exclude
    object-dtype columns on a column-by-column basis, instead of checking if *all*
    object-dtype columns can be considered boolean.'
  prefs: []
  type: TYPE_NORMAL
- en: This prevents pathological behavior where applying the reduction on a subset
    of columns could result in a larger Series result. See ([GH 37799](https://github.com/pandas-dev/pandas/issues/37799)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: 'Other DataFrame reductions with `numeric_only=None` will also avoid this pathological
    behavior ([GH 37827](https://github.com/pandas-dev/pandas/issues/37827)):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: Moreover, DataFrame reductions with `numeric_only=None` will now be consistent
    with their Series counterparts. In particular, for reductions where the Series
    method raises `TypeError`, the DataFrame reduction will now consider that column
    non-numeric instead of casting to a NumPy array which may have different semantics
    ([GH 36076](https://github.com/pandas-dev/pandas/issues/36076), [GH 28949](https://github.com/pandas-dev/pandas/issues/28949),
    [GH 21020](https://github.com/pandas-dev/pandas/issues/21020)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: '### Increased minimum version for Python'
  prefs: []
  type: TYPE_NORMAL
- en: 'pandas 1.2.0 supports Python 3.7.1 and higher ([GH 35214](https://github.com/pandas-dev/pandas/issues/35214)).  ###
    Increased minimum versions for dependencies'
  prefs: []
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated ([GH 35214](https://github.com/pandas-dev/pandas/issues/35214)).
    If installed, we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.16.5 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytz | 2017.3 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.7.3 | X |  |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.2.1 |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.6.8 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytest (dev) | 5.0.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| mypy (dev) | 0.782 |  | X |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.3.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 0.7.4 |  |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 0.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 4.3.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 2.2.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.46.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 2.6.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 0.15.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 0.7.11 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.5.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 0.4.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.2.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.2.8 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.12.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlrd | 1.2.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 1.0.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlwt | 1.3.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas-gbq | 0.12.0 |  |'
  prefs: []
  type: TYPE_TB
- en: 'See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.  ### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: Sorting in descending order is now stable for [`Series.sort_values()`](../reference/api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values") and [`Index.sort_values()`](../reference/api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values") for Datetime-like [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") subclasses. This will affect sort order when sorting a DataFrame
    on multiple columns, sorting with a key function that produces duplicates, or
    requesting the sorting index when using [`Index.sort_values()`](../reference/api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values"). When using [`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts"), the count of missing values is no longer necessarily
    last in the list of duplicate counts. Instead, its position corresponds to the
    position in the original Series. When using [`Index.sort_values()`](../reference/api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values") for Datetime-like [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") subclasses, NaTs ignored the `na_position` argument and were sorted
    to the beginning. Now they respect `na_position`, the default being `last`, same
    as other [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    subclasses ([GH 35992](https://github.com/pandas-dev/pandas/issues/35992))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing an invalid `fill_value` to `Categorical.take()`, `DatetimeArray.take()`,
    `TimedeltaArray.take()`, or `PeriodArray.take()` now raises a `TypeError` instead
    of a `ValueError` ([GH 37733](https://github.com/pandas-dev/pandas/issues/37733))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing an invalid `fill_value` to [`Series.shift()`](../reference/api/pandas.Series.shift.html#pandas.Series.shift
    "pandas.Series.shift") with a `CategoricalDtype` now raises a `TypeError` instead
    of a `ValueError` ([GH 37733](https://github.com/pandas-dev/pandas/issues/37733))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing an invalid value to `IntervalIndex.insert()` or `CategoricalIndex.insert()`
    now raises a `TypeError` instead of a `ValueError` ([GH 37733](https://github.com/pandas-dev/pandas/issues/37733))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Attempting to reindex a Series with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") with an invalid `fill_value` now raises a `TypeError`
    instead of a `ValueError` ([GH 37733](https://github.com/pandas-dev/pandas/issues/37733))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`CategoricalIndex.append()` with an index that contains non-category values
    will now cast instead of raising `TypeError` ([GH 38098](https://github.com/pandas-dev/pandas/issues/38098))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Consistency of DataFrame Reductions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.any()`](../reference/api/pandas.DataFrame.any.html#pandas.DataFrame.any
    "pandas.DataFrame.any") and [`DataFrame.all()`](../reference/api/pandas.DataFrame.all.html#pandas.DataFrame.all
    "pandas.DataFrame.all") with `bool_only=True` now determines whether to exclude
    object-dtype columns on a column-by-column basis, instead of checking if *all*
    object-dtype columns can be considered boolean.'
  prefs: []
  type: TYPE_NORMAL
- en: This prevents pathological behavior where applying the reduction on a subset
    of columns could result in a larger Series result. See ([GH 37799](https://github.com/pandas-dev/pandas/issues/37799)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: 'Other DataFrame reductions with `numeric_only=None` will also avoid this pathological
    behavior ([GH 37827](https://github.com/pandas-dev/pandas/issues/37827)):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: Moreover, DataFrame reductions with `numeric_only=None` will now be consistent
    with their Series counterparts. In particular, for reductions where the Series
    method raises `TypeError`, the DataFrame reduction will now consider that column
    non-numeric instead of casting to a NumPy array which may have different semantics
    ([GH 36076](https://github.com/pandas-dev/pandas/issues/36076), [GH 28949](https://github.com/pandas-dev/pandas/issues/28949),
    [GH 21020](https://github.com/pandas-dev/pandas/issues/21020)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: '### Increased minimum version for Python'
  prefs: []
  type: TYPE_NORMAL
- en: pandas 1.2.0 supports Python 3.7.1 and higher ([GH 35214](https://github.com/pandas-dev/pandas/issues/35214)).
  prefs: []
  type: TYPE_NORMAL
- en: '### Increased minimum versions for dependencies'
  prefs: []
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated ([GH 35214](https://github.com/pandas-dev/pandas/issues/35214)).
    If installed, we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.16.5 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytz | 2017.3 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.7.3 | X |  |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.2.1 |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.6.8 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytest (dev) | 5.0.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| mypy (dev) | 0.782 |  | X |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.3.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 0.7.4 |  |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 0.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 4.3.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 2.2.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.46.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 2.6.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 0.15.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 0.7.11 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.5.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 0.4.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.2.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.2.8 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.12.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlrd | 1.2.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 1.0.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlwt | 1.3.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas-gbq | 0.12.0 |  |'
  prefs: []
  type: TYPE_TB
- en: See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: '### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: Sorting in descending order is now stable for [`Series.sort_values()`](../reference/api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values") and [`Index.sort_values()`](../reference/api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values") for Datetime-like [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") subclasses. This will affect sort order when sorting a DataFrame
    on multiple columns, sorting with a key function that produces duplicates, or
    requesting the sorting index when using [`Index.sort_values()`](../reference/api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values"). When using [`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts"), the count of missing values is no longer necessarily
    last in the list of duplicate counts. Instead, its position corresponds to the
    position in the original Series. When using [`Index.sort_values()`](../reference/api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values") for Datetime-like [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") subclasses, NaTs ignored the `na_position` argument and were sorted
    to the beginning. Now they respect `na_position`, the default being `last`, same
    as other [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    subclasses ([GH 35992](https://github.com/pandas-dev/pandas/issues/35992))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing an invalid `fill_value` to `Categorical.take()`, `DatetimeArray.take()`,
    `TimedeltaArray.take()`, or `PeriodArray.take()` now raises a `TypeError` instead
    of a `ValueError` ([GH 37733](https://github.com/pandas-dev/pandas/issues/37733))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing an invalid `fill_value` to [`Series.shift()`](../reference/api/pandas.Series.shift.html#pandas.Series.shift
    "pandas.Series.shift") with a `CategoricalDtype` now raises a `TypeError` instead
    of a `ValueError` ([GH 37733](https://github.com/pandas-dev/pandas/issues/37733))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing an invalid value to `IntervalIndex.insert()` or `CategoricalIndex.insert()`
    now raises a `TypeError` instead of a `ValueError` ([GH 37733](https://github.com/pandas-dev/pandas/issues/37733))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Attempting to reindex a Series with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") with an invalid `fill_value` now raises a `TypeError`
    instead of a `ValueError` ([GH 37733](https://github.com/pandas-dev/pandas/issues/37733))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`CategoricalIndex.append()` with an index that contains non-category values
    will now cast instead of raising `TypeError` ([GH 38098](https://github.com/pandas-dev/pandas/issues/38098))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: Deprecated parameter `inplace` in [`MultiIndex.set_codes()`](../reference/api/pandas.MultiIndex.set_codes.html#pandas.MultiIndex.set_codes
    "pandas.MultiIndex.set_codes") and [`MultiIndex.set_levels()`](../reference/api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels") ([GH 35626](https://github.com/pandas-dev/pandas/issues/35626))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated parameter `dtype` of method [`copy()`](../reference/api/pandas.Index.copy.html#pandas.Index.copy
    "pandas.Index.copy") for all [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") subclasses. Use the [`astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype") method instead for changing dtype ([GH 35853](https://github.com/pandas-dev/pandas/issues/35853))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated parameters `levels` and `codes` in [`MultiIndex.copy()`](../reference/api/pandas.MultiIndex.copy.html#pandas.MultiIndex.copy
    "pandas.MultiIndex.copy"). Use the [`set_levels()`](../reference/api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels") and [`set_codes()`](../reference/api/pandas.MultiIndex.set_codes.html#pandas.MultiIndex.set_codes
    "pandas.MultiIndex.set_codes") methods instead ([GH 36685](https://github.com/pandas-dev/pandas/issues/36685))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Date parser functions `parse_date_time()`, `parse_date_fields()`, `parse_all_fields()`
    and `generic_parser()` from `pandas.io.date_converters` are deprecated and will
    be removed in a future version; use [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") instead ([GH 35741](https://github.com/pandas-dev/pandas/issues/35741))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.lookup()` is deprecated and will be removed in a future version,
    use [`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") and [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") instead ([GH 35224](https://github.com/pandas-dev/pandas/issues/35224))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The method `Index.to_native_types()` is deprecated. Use `.astype(str)` instead
    ([GH 28867](https://github.com/pandas-dev/pandas/issues/28867))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated indexing [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") rows with a single datetime-like string as `df[string]` (given
    the ambiguity whether it is indexing the rows or selecting a column), use `df.loc[string]`
    instead ([GH 36179](https://github.com/pandas-dev/pandas/issues/36179))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Index.is_all_dates()` ([GH 27744](https://github.com/pandas-dev/pandas/issues/27744))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The default value of `regex` for [`Series.str.replace()`](../reference/api/pandas.Series.str.replace.html#pandas.Series.str.replace
    "pandas.Series.str.replace") will change from `True` to `False` in a future release.
    In addition, single character regular expressions will *not* be treated as literal
    strings when `regex=True` is set ([GH 24804](https://github.com/pandas-dev/pandas/issues/24804))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated automatic alignment on comparison operations between [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), do `frame, ser = frame.align(ser, axis=1, copy=False)` before
    e.g. `frame == ser` ([GH 28759](https://github.com/pandas-dev/pandas/issues/28759))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Rolling.count()` with `min_periods=None` will default to the size of the window
    in a future version ([GH 31302](https://github.com/pandas-dev/pandas/issues/31302))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using “outer” ufuncs on DataFrames to return 4d ndarray is now deprecated. Convert
    to an ndarray first ([GH 23743](https://github.com/pandas-dev/pandas/issues/23743))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated slice-indexing on tz-aware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with naive `datetime` objects, to match scalar indexing
    behavior ([GH 36148](https://github.com/pandas-dev/pandas/issues/36148))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.ravel()`](../reference/api/pandas.Index.ravel.html#pandas.Index.ravel
    "pandas.Index.ravel") returning a `np.ndarray` is deprecated, in the future this
    will return a view on the same index ([GH 19956](https://github.com/pandas-dev/pandas/issues/19956))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecate use of strings denoting units with ‘M’, ‘Y’ or ‘y’ in [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") ([GH 36666](https://github.com/pandas-dev/pandas/issues/36666))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") methods
    `&`, `|`, and `^` behaving as the set operations [`Index.intersection()`](../reference/api/pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection"), [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union"), and [`Index.symmetric_difference()`](../reference/api/pandas.Index.symmetric_difference.html#pandas.Index.symmetric_difference
    "pandas.Index.symmetric_difference"), respectively, are deprecated and in the
    future will behave as pointwise boolean operations matching [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") behavior. Use the named set methods instead ([GH 36758](https://github.com/pandas-dev/pandas/issues/36758))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.is_dtype_equal()` and `CategoricalIndex.is_dtype_equal()` are
    deprecated, will be removed in a future version ([GH 37545](https://github.com/pandas-dev/pandas/issues/37545))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.slice_shift()` and `DataFrame.slice_shift()` are deprecated, use [`Series.shift()`](../reference/api/pandas.Series.shift.html#pandas.Series.shift
    "pandas.Series.shift") or [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift") instead ([GH 37601](https://github.com/pandas-dev/pandas/issues/37601))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Partial slicing on unordered [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") objects with keys that are not in the index is deprecated
    and will be removed in a future version ([GH 18531](https://github.com/pandas-dev/pandas/issues/18531))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `how` keyword in `PeriodIndex.astype()` is deprecated and will be removed
    in a future version, use `index.to_timestamp(how=how)` instead ([GH 37982](https://github.com/pandas-dev/pandas/issues/37982))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Index.asi8()` for [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") subclasses other than [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex"), and [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") ([GH 37877](https://github.com/pandas-dev/pandas/issues/37877))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `inplace` parameter of `Categorical.remove_unused_categories()` is deprecated
    and will be removed in a future version ([GH 37643](https://github.com/pandas-dev/pandas/issues/37643))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `null_counts` parameter of [`DataFrame.info()`](../reference/api/pandas.DataFrame.info.html#pandas.DataFrame.info
    "pandas.DataFrame.info") is deprecated and replaced by `show_counts`. It will
    be removed in a future version ([GH 37999](https://github.com/pandas-dev/pandas/issues/37999))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Calling NumPy ufuncs on non-aligned DataFrames**'
  prefs: []
  type: TYPE_NORMAL
- en: Calling NumPy ufuncs on non-aligned DataFrames changed behaviour in pandas 1.2.0
    (to align the inputs before calling the ufunc), but this change is reverted in
    pandas 1.2.1\. The behaviour to not align is now deprecated instead, see the [the
    1.2.1 release notes](v1.2.1.html#whatsnew-121-ufunc-deprecation) for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '## Performance improvements'
  prefs: []
  type: TYPE_NORMAL
- en: Performance improvements when creating DataFrame or Series with dtype `str`
    or [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype") from array with many string elements ([GH 36304](https://github.com/pandas-dev/pandas/issues/36304),
    [GH 36317](https://github.com/pandas-dev/pandas/issues/36317), [GH 36325](https://github.com/pandas-dev/pandas/issues/36325),
    [GH 36432](https://github.com/pandas-dev/pandas/issues/36432), [GH 37371](https://github.com/pandas-dev/pandas/issues/37371))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") and [`SeriesGroupBy.agg()`](../reference/api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg") with the `numba` engine ([GH 35759](https://github.com/pandas-dev/pandas/issues/35759))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvements when creating [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") from a huge dictionary ([GH 34717](https://github.com/pandas-dev/pandas/issues/34717))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") with the `numba` engine ([GH 36240](https://github.com/pandas-dev/pandas/issues/36240))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") uuid method altered to compress data transmission
    over web whilst maintaining reasonably low table collision probability ([GH 36345](https://github.com/pandas-dev/pandas/issues/36345))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with non-ns time unit for `float` `dtype` columns ([GH 20445](https://github.com/pandas-dev/pandas/issues/20445))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in setting values on an `IntervalArray` ([GH 36310](https://github.com/pandas-dev/pandas/issues/36310))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The internal index method `_shallow_copy()` now makes the new index and original
    index share cached attributes, avoiding creating these again, if created on either.
    This can speed up operations that depend on creating copies of existing indexes
    ([GH 36840](https://github.com/pandas-dev/pandas/issues/36840))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `RollingGroupby.count()` ([GH 35625](https://github.com/pandas-dev/pandas/issues/35625))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Small performance decrease to [`Rolling.min()`](../reference/api/pandas.core.window.rolling.Rolling.min.html#pandas.core.window.rolling.Rolling.min
    "pandas.core.window.rolling.Rolling.min") and [`Rolling.max()`](../reference/api/pandas.core.window.rolling.Rolling.max.html#pandas.core.window.rolling.Rolling.max
    "pandas.core.window.rolling.Rolling.max") for fixed windows ([GH 36567](https://github.com/pandas-dev/pandas/issues/36567))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reduced peak memory usage in [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle") when using `protocol=5` in python 3.8+ ([GH 34244](https://github.com/pandas-dev/pandas/issues/34244))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Faster `dir` calls when the object has many index labels, e.g. `dir(ser)` ([GH
    37450](https://github.com/pandas-dev/pandas/issues/37450))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `ExpandingGroupby` ([GH 37064](https://github.com/pandas-dev/pandas/issues/37064))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") and [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") for [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") ([GH 8628](https://github.com/pandas-dev/pandas/issues/8628))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") for `float` `dtype` ([GH 28303](https://github.com/pandas-dev/pandas/issues/28303)),
    changes of the underlying hash-function can lead to changes in float based indexes
    sort ordering for ties (e.g. [`Index.value_counts()`](../reference/api/pandas.Index.value_counts.html#pandas.Index.value_counts
    "pandas.Index.value_counts"))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `pd.isin()` for inputs with more than 1e6 elements
    ([GH 36611](https://github.com/pandas-dev/pandas/issues/36611))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for `DataFrame.__setitem__()` with list-like indexers
    ([GH 37954](https://github.com/pandas-dev/pandas/issues/37954))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    now avoids reading entire file into memory when chunksize is specified ([GH 34548](https://github.com/pandas-dev/pandas/issues/34548))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Bug fixes'
  prefs: []
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`Categorical.fillna()` will always return a copy, validate a passed fill value
    regardless of whether there are any NAs to fill, and disallow an `NaT` as a fill
    value for numeric categories ([GH 36530](https://github.com/pandas-dev/pandas/issues/36530))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.__setitem__()` that incorrectly raised when trying to set
    a tuple value ([GH 20439](https://github.com/pandas-dev/pandas/issues/20439))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`CategoricalIndex.equals()`](../reference/api/pandas.CategoricalIndex.equals.html#pandas.CategoricalIndex.equals
    "pandas.CategoricalIndex.equals") incorrectly casting non-category entries to
    `np.nan` ([GH 37667](https://github.com/pandas-dev/pandas/issues/37667))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CategoricalIndex.where()` incorrectly setting non-category entries to
    `np.nan` instead of raising `TypeError` ([GH 37977](https://github.com/pandas-dev/pandas/issues/37977))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.to_numpy()` and `np.array(categorical)` with tz-aware `datetime64`
    categories incorrectly dropping the time zone information instead of casting to
    object dtype ([GH 38136](https://github.com/pandas-dev/pandas/issues/38136))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetime-like
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first") that would convert datetime-like column on other
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    to integer when the column is not present in original [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 28481](https://github.com/pandas-dev/pandas/issues/28481))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeArray.date` where a `ValueError` would be raised with a read-only
    backing array ([GH 33530](https://github.com/pandas-dev/pandas/issues/33530))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `NaT` comparisons failing to raise `TypeError` on invalid inequality
    comparisons ([GH 35046](https://github.com/pandas-dev/pandas/issues/35046))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DateOffset`](../reference/api/pandas.tseries.offsets.DateOffset.html#pandas.tseries.offsets.DateOffset
    "pandas.tseries.offsets.DateOffset") where attributes reconstructed from pickle
    files differ from original objects when input values exceed normal ranges (e.g.
    months=12) ([GH 34511](https://github.com/pandas-dev/pandas/issues/34511))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.get_slice_bound()` where `datetime.date` objects were
    not accepted or naive [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with a tz-aware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 35690](https://github.com/pandas-dev/pandas/issues/35690))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.slice_locs()` where `datetime.date` objects were not accepted
    ([GH 34077](https://github.com/pandas-dev/pandas/issues/34077))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.searchsorted()`, `TimedeltaIndex.searchsorted()`, `PeriodIndex.searchsorted()`,
    and [`Series.searchsorted()`](../reference/api/pandas.Series.searchsorted.html#pandas.Series.searchsorted
    "pandas.Series.searchsorted") with `datetime64`, `timedelta64` or [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") dtype placement of `NaT` values being inconsistent with NumPy
    ([GH 36176](https://github.com/pandas-dev/pandas/issues/36176), [GH 36254](https://github.com/pandas-dev/pandas/issues/36254))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Inconsistency in [`DatetimeArray`](../reference/api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray"), [`TimedeltaArray`](../reference/api/pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray"), and [`PeriodArray`](../reference/api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray") method `__setitem__` casting arrays of strings to
    datetime-like scalars but not scalar strings ([GH 36261](https://github.com/pandas-dev/pandas/issues/36261))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeArray.take()` incorrectly allowing `fill_value` with a mismatched
    time zone ([GH 37356](https://github.com/pandas-dev/pandas/issues/37356))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.shift` incorrectly raising when shifting empty indexes
    ([GH 14811](https://github.com/pandas-dev/pandas/issues/14811))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    and [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") comparisons between tz-aware and tz-naive objects now
    follow the standard library `datetime` behavior, returning `True`/`False` for
    `!=`/`==` and raising for inequality comparisons ([GH 28507](https://github.com/pandas-dev/pandas/issues/28507))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.equals()` and `TimedeltaIndex.equals()` incorrectly considering
    `int64` indexes as equal ([GH 36744](https://github.com/pandas-dev/pandas/issues/36744))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.to_json()`](../reference/api/pandas.Series.to_json.html#pandas.Series.to_json
    "pandas.Series.to_json"), [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json"), and [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") now implement time zone parsing when orient structure is `table`
    ([GH 35973](https://github.com/pandas-dev/pandas/issues/35973))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`astype()` now attempts to convert to `datetime64[ns, tz]` directly from `object`
    with inferred time zone from string ([GH 35973](https://github.com/pandas-dev/pandas/issues/35973))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `TimedeltaIndex.sum()` and [`Series.sum()`](../reference/api/pandas.Series.sum.html#pandas.Series.sum
    "pandas.Series.sum") with `timedelta64` dtype on an empty index or series returning
    `NaT` instead of `Timedelta(0)` ([GH 31751](https://github.com/pandas-dev/pandas/issues/31751))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeArray.shift()` incorrectly allowing `fill_value` with a mismatched
    time zone ([GH 37299](https://github.com/pandas-dev/pandas/issues/37299))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in adding a [`BusinessDay`](../reference/api/pandas.tseries.offsets.BusinessDay.html#pandas.tseries.offsets.BusinessDay
    "pandas.tseries.offsets.BusinessDay") with nonzero `offset` to a non-scalar other
    ([GH 37457](https://github.com/pandas-dev/pandas/issues/37457))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with a read-only array incorrectly raising ([GH 34857](https://github.com/pandas-dev/pandas/issues/34857))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") with `datetime64[ns]` dtype and `DatetimeIndex.isin()` incorrectly
    casting integers to datetimes ([GH 36621](https://github.com/pandas-dev/pandas/issues/36621))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") with `datetime64[ns]` dtype and `DatetimeIndex.isin()` failing
    to consider tz-aware and tz-naive datetimes as always different ([GH 35728](https://github.com/pandas-dev/pandas/issues/35728))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") with `PeriodDtype` dtype and `PeriodIndex.isin()` failing
    to consider arguments with different `PeriodDtype` as always different ([GH 37528](https://github.com/pandas-dev/pandas/issues/37528))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    constructor now correctly handles nanoseconds in the `value` argument ([GH 34621](https://github.com/pandas-dev/pandas/issues/34621)
    and [GH 17053](https://github.com/pandas-dev/pandas/issues/17053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") floor-division with `timedelta64` dtypes and `NaT` in the
    denominator ([GH 35529](https://github.com/pandas-dev/pandas/issues/35529))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in parsing of ISO 8601 durations in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") and [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") ([GH 29773](https://github.com/pandas-dev/pandas/issues/29773),
    [GH 36204](https://github.com/pandas-dev/pandas/issues/36204))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") with a read-only array incorrectly raising ([GH 34857](https://github.com/pandas-dev/pandas/issues/34857))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") incorrectly truncating to sub-second portion of a string input
    when it has precision higher than nanoseconds ([GH 36738](https://github.com/pandas-dev/pandas/issues/36738))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") was raising `AmbiguousTimeError` for valid input with `ambiguous=False`
    ([GH 35297](https://github.com/pandas-dev/pandas/issues/35297))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.replace()`](../reference/api/pandas.Timestamp.replace.html#pandas.Timestamp.replace
    "pandas.Timestamp.replace") was losing fold information ([GH 37610](https://github.com/pandas-dev/pandas/issues/37610))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") where float precision was incorrect ([GH 31364](https://github.com/pandas-dev/pandas/issues/31364))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.any()`](../reference/api/pandas.DataFrame.any.html#pandas.DataFrame.any
    "pandas.DataFrame.any") with `axis=1` and `bool_only=True` ignoring the `bool_only`
    keyword ([GH 32432](https://github.com/pandas-dev/pandas/issues/32432))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.equals()`](../reference/api/pandas.Series.equals.html#pandas.Series.equals
    "pandas.Series.equals") where a `ValueError` was raised when NumPy arrays were
    compared to scalars ([GH 35267](https://github.com/pandas-dev/pandas/issues/35267))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    where two Series each have a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with different time zones having those indexes incorrectly
    changed when performing arithmetic operations ([GH 33671](https://github.com/pandas-dev/pandas/issues/33671))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas.testing` module functions when used with `check_exact=False`
    on complex numeric types ([GH 28235](https://github.com/pandas-dev/pandas/issues/28235))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__rmatmul__()` error handling reporting transposed shapes
    ([GH 21581](https://github.com/pandas-dev/pandas/issues/21581))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    flex arithmetic methods where the result when operating with a `list`, `tuple`
    or `np.ndarray` would have an incorrect name ([GH 36760](https://github.com/pandas-dev/pandas/issues/36760))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") multiplication with `timedelta` and `np.timedelta64`
    objects ([GH 36870](https://github.com/pandas-dev/pandas/issues/36870))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") comparison with tuple incorrectly treating tuple as array-like
    ([GH 21517](https://github.com/pandas-dev/pandas/issues/21517))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.diff()`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff") with `datetime64` dtypes including `NaT` values failing
    to fill `NaT` results correctly ([GH 32441](https://github.com/pandas-dev/pandas/issues/32441))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") arithmetic ops incorrectly accepting keyword arguments ([GH
    36843](https://github.com/pandas-dev/pandas/issues/36843))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalArray`](../reference/api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray") comparisons with [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") not returning Series ([GH 36908](https://github.com/pandas-dev/pandas/issues/36908))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") allowing arithmetic operations with list of array-likes with
    undefined results. Behavior changed to raising `ValueError` ([GH 36702](https://github.com/pandas-dev/pandas/issues/36702))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.std()`](../reference/api/pandas.DataFrame.std.html#pandas.DataFrame.std
    "pandas.DataFrame.std") with `timedelta64` dtype and `skipna=False` ([GH 37392](https://github.com/pandas-dev/pandas/issues/37392))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.min()`](../reference/api/pandas.DataFrame.min.html#pandas.DataFrame.min
    "pandas.DataFrame.min") and [`DataFrame.max()`](../reference/api/pandas.DataFrame.max.html#pandas.DataFrame.max
    "pandas.DataFrame.max") with `datetime64` dtype and `skipna=False` ([GH 36907](https://github.com/pandas-dev/pandas/issues/36907))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax") and [`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin") with mixed dtypes incorrectly raising `TypeError` ([GH
    38195](https://github.com/pandas-dev/pandas/issues/38195))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") with `orient='records'` now returns python native
    datetime objects for datetime-like columns ([GH 21256](https://github.com/pandas-dev/pandas/issues/21256))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") conversion from `string` to `float` raised in presence
    of `pd.NA` values ([GH 37626](https://github.com/pandas-dev/pandas/issues/37626))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.to_string()`](../reference/api/pandas.Series.to_string.html#pandas.Series.to_string
    "pandas.Series.to_string"), [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string"), and [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") adding a leading space when `index=False` ([GH 24980](https://github.com/pandas-dev/pandas/issues/24980))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") raising a `TypeError` when attempting to convert a string
    dtype Series containing only numeric strings and `NA` ([GH 37262](https://github.com/pandas-dev/pandas/issues/37262))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") where [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") dtypes would be converted to object dtypes ([GH 34871](https://github.com/pandas-dev/pandas/issues/34871))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.take()` with negative indices and `fill_value=None` ([GH
    37330](https://github.com/pandas-dev/pandas/issues/37330))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.putmask()` with datetime-like dtype incorrectly casting
    to object dtype ([GH 37968](https://github.com/pandas-dev/pandas/issues/37968))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalArray.astype()` incorrectly dropping dtype information with
    a [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") object ([GH 37984](https://github.com/pandas-dev/pandas/issues/37984))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `PeriodIndex.get_loc()` incorrectly raising `ValueError` on non-datelike
    strings instead of `KeyError`, causing similar errors in `Series.__getitem__()`,
    `Series.__contains__()`, and `Series.loc.__getitem__()` ([GH 34240](https://github.com/pandas-dev/pandas/issues/34240))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.sort_values()`](../reference/api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values") where, when empty values were passed, the method would
    break by trying to compare missing values instead of pushing them to the end of
    the sort order ([GH 35584](https://github.com/pandas-dev/pandas/issues/35584))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.get_indexer()`](../reference/api/pandas.Index.get_indexer.html#pandas.Index.get_indexer
    "pandas.Index.get_indexer") and [`Index.get_indexer_non_unique()`](../reference/api/pandas.Index.get_indexer_non_unique.html#pandas.Index.get_indexer_non_unique
    "pandas.Index.get_indexer_non_unique") where `int64` arrays are returned instead
    of `intp` ([GH 36359](https://github.com/pandas-dev/pandas/issues/36359))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index") where parameter ascending passed as a list on a
    single level index gives wrong result ([GH 32334](https://github.com/pandas-dev/pandas/issues/32334))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") was incorrectly raising a `ValueError` for input
    with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with missing values in a level with `Categorical` dtype ([GH
    24206](https://github.com/pandas-dev/pandas/issues/24206))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing with boolean masks on datetime-like values sometimes returning
    a view instead of a copy ([GH 36210](https://github.com/pandas-dev/pandas/issues/36210))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__getitem__()` and `DataFrame.loc.__getitem__()` with [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") columns and a numeric indexer ([GH 26490](https://github.com/pandas-dev/pandas/issues/26490))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.loc.__getitem__()` with a non-unique [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and an empty-list indexer ([GH 13691](https://github.com/pandas-dev/pandas/issues/13691))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and a level named `"0"` ([GH 37194](https://github.com/pandas-dev/pandas/issues/37194))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__getitem__()` when using an unsigned integer array as an indexer
    giving incorrect results or segfaulting instead of raising `KeyError` ([GH 37218](https://github.com/pandas-dev/pandas/issues/37218))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.where()`](../reference/api/pandas.Index.where.html#pandas.Index.where
    "pandas.Index.where") incorrectly casting numeric values to strings ([GH 37591](https://github.com/pandas-dev/pandas/issues/37591))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") returning empty result when indexer is a slice with negative
    step size ([GH 38071](https://github.com/pandas-dev/pandas/issues/38071))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") and [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raises when the index was of `object` dtype and the given
    numeric label was in the index ([GH 26491](https://github.com/pandas-dev/pandas/issues/26491))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") returned requested key plus missing values when `loc`
    was applied to single level from a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 27104](https://github.com/pandas-dev/pandas/issues/27104))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") using a list-like indexer containing NA values ([GH
    37722](https://github.com/pandas-dev/pandas/issues/37722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc.__setitem__()` expanding an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with mixed dtypes ([GH 37932](https://github.com/pandas-dev/pandas/issues/37932))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.xs()`](../reference/api/pandas.DataFrame.xs.html#pandas.DataFrame.xs
    "pandas.DataFrame.xs") ignored `droplevel=False` for columns ([GH 19056](https://github.com/pandas-dev/pandas/issues/19056))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") raising `IndexingError` wrongly for empty DataFrame
    with `tolerance` not `None` or `method="nearest"` ([GH 27315](https://github.com/pandas-dev/pandas/issues/27315))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") using list-like indexer that contains elements that
    are in the index’s `categories` but not in the index itself failing to raise `KeyError`
    ([GH 37901](https://github.com/pandas-dev/pandas/issues/37901))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug on inserting a boolean label into a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a numeric [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") columns incorrectly casting to integer ([GH 36319](https://github.com/pandas-dev/pandas/issues/36319))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") and [`Series.iloc()`](../reference/api/pandas.Series.iloc.html#pandas.Series.iloc
    "pandas.Series.iloc") aligning objects in `__setitem__` ([GH 22046](https://github.com/pandas-dev/pandas/issues/22046))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.drop()`](../reference/api/pandas.MultiIndex.drop.html#pandas.MultiIndex.drop
    "pandas.MultiIndex.drop") does not raise if labels are partially found ([GH 37820](https://github.com/pandas-dev/pandas/issues/37820))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") did not raise `KeyError` when missing combination was
    given with `slice(None)` for remaining levels ([GH 19556](https://github.com/pandas-dev/pandas/issues/19556))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raising `TypeError` when non-integer slice was given to
    select values from [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 25165](https://github.com/pandas-dev/pandas/issues/25165),
    [GH 24263](https://github.com/pandas-dev/pandas/issues/24263))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.at()`](../reference/api/pandas.Series.at.html#pandas.Series.at
    "pandas.Series.at") returning [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with one element instead of scalar when index is a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with one level ([GH 38053](https://github.com/pandas-dev/pandas/issues/38053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") returning and assigning elements in wrong order when indexer
    is differently ordered than the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") to filter ([GH 31330](https://github.com/pandas-dev/pandas/issues/31330),
    [GH 34603](https://github.com/pandas-dev/pandas/issues/34603))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and `DataFrame.__getitem__()` raising `KeyError` when
    columns were [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with only one level ([GH 29749](https://github.com/pandas-dev/pandas/issues/29749))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__getitem__()` and `DataFrame.__getitem__()` raising blank `KeyError`
    without missing keys for [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") ([GH 27365](https://github.com/pandas-dev/pandas/issues/27365))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting a new label on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") incorrectly raising `TypeError` when the new label
    is not among the index’s categories ([GH 38098](https://github.com/pandas-dev/pandas/issues/38098))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") and [`Series.iloc()`](../reference/api/pandas.Series.iloc.html#pandas.Series.iloc
    "pandas.Series.iloc") raising `ValueError` when inserting a list-like `np.array`,
    `list` or `tuple` in an `object` Series of equal length ([GH 37748](https://github.com/pandas-dev/pandas/issues/37748),
    [GH 37486](https://github.com/pandas-dev/pandas/issues/37486))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") and [`Series.iloc()`](../reference/api/pandas.Series.iloc.html#pandas.Series.iloc
    "pandas.Series.iloc") setting all the values of an `object` Series with those
    of a list-like `ExtensionArray` instead of inserting it ([GH 38271](https://github.com/pandas-dev/pandas/issues/38271))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") now correctly handles missing values
    for `dropna=False` ([GH 35014](https://github.com/pandas-dev/pandas/issues/35014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.nunique()`](../reference/api/pandas.Series.nunique.html#pandas.Series.nunique
    "pandas.Series.nunique") with `dropna=True` was returning incorrect results when
    both `NA` and `None` missing values were present ([GH 37566](https://github.com/pandas-dev/pandas/issues/37566))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") where kwarg `limit_area` and `limit_direction` had
    no effect when using methods `pad` and `backfill` ([GH 31048](https://github.com/pandas-dev/pandas/issues/31048))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.xs()`](../reference/api/pandas.DataFrame.xs.html#pandas.DataFrame.xs
    "pandas.DataFrame.xs") when used with [`IndexSlice`](../reference/api/pandas.IndexSlice.html#pandas.IndexSlice
    "pandas.IndexSlice") raises `TypeError` with message `"Expected label or tuple
    of labels"` ([GH 35301](https://github.com/pandas-dev/pandas/issues/35301))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") with `NaT` values in index raises `ValueError`
    with message `"cannot convert float NaN to integer"` ([GH 36541](https://github.com/pandas-dev/pandas/issues/36541))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first") when used with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") containing string and `NaN` values raises `TypeError` ([GH
    36562](https://github.com/pandas-dev/pandas/issues/36562))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.drop()`](../reference/api/pandas.MultiIndex.drop.html#pandas.MultiIndex.drop
    "pandas.MultiIndex.drop") dropped `NaN` values when non existing key was given
    as input ([GH 18853](https://github.com/pandas-dev/pandas/issues/18853))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.drop()`](../reference/api/pandas.MultiIndex.drop.html#pandas.MultiIndex.drop
    "pandas.MultiIndex.drop") dropping more values than expected when index has duplicates
    and is not sorted ([GH 33494](https://github.com/pandas-dev/pandas/issues/33494))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I/O
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    no longer leaks resources on failure ([GH 35566](https://github.com/pandas-dev/pandas/issues/35566))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") and [`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv") caused a `ValueError` when it was called with a filename
    in combination with `mode` containing a `b` ([GH 35058](https://github.com/pandas-dev/pandas/issues/35058))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `float_precision='round_trip'` did not handle `decimal`
    and `thousands` parameters ([GH 35365](https://github.com/pandas-dev/pandas/issues/35365))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_pickle()` and [`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle") were closing user-provided file objects ([GH 35679](https://github.com/pandas-dev/pandas/issues/35679))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_csv()` passes compression arguments for `''gzip''` always to `gzip.GzipFile`
    ([GH 28103](https://github.com/pandas-dev/pandas/issues/28103))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_csv()` did not support zip compression for binary file object not having
    a filename ([GH 35058](https://github.com/pandas-dev/pandas/issues/35058))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_csv()` and [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") did not honor `compression` and `encoding` for path-like objects
    that are internally converted to file-like objects ([GH 35677](https://github.com/pandas-dev/pandas/issues/35677),
    [GH 26124](https://github.com/pandas-dev/pandas/issues/26124), [GH 32392](https://github.com/pandas-dev/pandas/issues/32392))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle"), [`Series.to_pickle()`](../reference/api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle"), and [`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle") did not support compression for file-objects ([GH 26237](https://github.com/pandas-dev/pandas/issues/26237),
    [GH 29054](https://github.com/pandas-dev/pandas/issues/29054), [GH 29570](https://github.com/pandas-dev/pandas/issues/29570))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `LongTableBuilder.middle_separator()` was duplicating LaTeX longtable
    entries in the List of Tables of a LaTeX document ([GH 34360](https://github.com/pandas-dev/pandas/issues/34360))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `engine='python'` truncating data if multiple items present
    in first row and first element started with BOM ([GH 36343](https://github.com/pandas-dev/pandas/issues/36343))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `private_key` and `verbose` from [`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq
    "pandas.read_gbq") as they are no longer supported in `pandas-gbq` ([GH 34654](https://github.com/pandas-dev/pandas/issues/34654),
    [GH 30200](https://github.com/pandas-dev/pandas/issues/30200))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bumped minimum pytables version to 3.5.1 to avoid a `ValueError` in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") ([GH 24839](https://github.com/pandas-dev/pandas/issues/24839))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") and [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when `delim_whitespace=True` and `sep=default` ([GH 36583](https://github.com/pandas-dev/pandas/issues/36583))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") and [`Series.to_json()`](../reference/api/pandas.Series.to_json.html#pandas.Series.to_json
    "pandas.Series.to_json") when used with `lines=True` and `orient='records'` the
    last line of the record is not appended with ‘new line character’ ([GH 36888](https://github.com/pandas-dev/pandas/issues/36888))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") with fixed offset time zones. String representation of
    time zones was not recognized ([GH 35997](https://github.com/pandas-dev/pandas/issues/35997),
    [GH 36004](https://github.com/pandas-dev/pandas/issues/36004))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html"), [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string"), and [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") ignoring the `na_rep` argument when `float_format`
    was also specified ([GH 9046](https://github.com/pandas-dev/pandas/issues/9046),
    [GH 13828](https://github.com/pandas-dev/pandas/issues/13828))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in output rendering of complex numbers showing too many trailing zeros ([GH
    36799](https://github.com/pandas-dev/pandas/issues/36799))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `HDFStore` threw a `TypeError` when exporting an empty DataFrame with
    `datetime64[ns, tz]` dtypes with a fixed HDF5 store ([GH 20594](https://github.com/pandas-dev/pandas/issues/20594))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `HDFStore` was dropping time zone information when exporting a Series
    with `datetime64[ns, tz]` dtypes with a fixed HDF5 store ([GH 20594](https://github.com/pandas-dev/pandas/issues/20594))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    was closing user-provided binary file handles when `engine="c"` and an `encoding`
    was requested ([GH 36980](https://github.com/pandas-dev/pandas/issues/36980))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_hdf()`](../reference/api/pandas.DataFrame.to_hdf.html#pandas.DataFrame.to_hdf
    "pandas.DataFrame.to_hdf") was not dropping missing rows with `dropna=True` ([GH
    35719](https://github.com/pandas-dev/pandas/issues/35719))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") was raising a `TypeError` when supplying a `pathlib.Path`
    argument to the `io` parameter ([GH 37705](https://github.com/pandas-dev/pandas/issues/37705))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel"), [`Series.to_excel()`](../reference/api/pandas.Series.to_excel.html#pandas.Series.to_excel
    "pandas.Series.to_excel"), [`DataFrame.to_markdown()`](../reference/api/pandas.DataFrame.to_markdown.html#pandas.DataFrame.to_markdown
    "pandas.DataFrame.to_markdown"), and [`Series.to_markdown()`](../reference/api/pandas.Series.to_markdown.html#pandas.Series.to_markdown
    "pandas.Series.to_markdown") now support writing to fsspec URLs such as S3 and
    Google Cloud Storage ([GH 33987](https://github.com/pandas-dev/pandas/issues/33987))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf") with `skip_blank_lines=True` was not skipping blank lines ([GH
    37758](https://github.com/pandas-dev/pandas/issues/37758))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parse missing values using [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") with `dtype=False` to `NaN` instead of `None` ([GH 28501](https://github.com/pandas-dev/pandas/issues/28501))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf "pandas.read_fwf")
    was inferring compression with `compression=None` which was not consistent with
    the other `read_*` functions ([GH 37909](https://github.com/pandas-dev/pandas/issues/37909))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") was ignoring `formatters` argument for `ExtensionDtype`
    columns ([GH 36525](https://github.com/pandas-dev/pandas/issues/36525))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bumped minimum xarray version to 0.12.3 to avoid reference to the removed `Panel`
    class ([GH 27101](https://github.com/pandas-dev/pandas/issues/27101), [GH 37983](https://github.com/pandas-dev/pandas/issues/37983))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") was re-opening file-like handles that also implement
    `os.PathLike` ([GH 38125](https://github.com/pandas-dev/pandas/issues/38125))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the conversion of a sliced `pyarrow.Table` with missing values to a DataFrame
    ([GH 38525](https://github.com/pandas-dev/pandas/issues/38525))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sql_table()`](../reference/api/pandas.read_sql_table.html#pandas.read_sql_table
    "pandas.read_sql_table") raising a `sqlalchemy.exc.OperationalError` when column
    names contained a percentage sign ([GH 37517](https://github.com/pandas-dev/pandas/issues/37517))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Period
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") where [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") dtypes would be converted to object dtypes ([GH 34871](https://github.com/pandas-dev/pandas/issues/34871))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") was rotating xticklabels when `subplots=True`, even if
    the x-axis wasn’t an irregular time series ([GH 29460](https://github.com/pandas-dev/pandas/issues/29460))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") where a marker letter in the `style` keyword sometimes
    caused a `ValueError` ([GH 21003](https://github.com/pandas-dev/pandas/issues/21003))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.bar()`](../reference/api/pandas.DataFrame.plot.bar.html#pandas.DataFrame.plot.bar
    "pandas.DataFrame.plot.bar") and [`Series.plot.bar()`](../reference/api/pandas.Series.plot.bar.html#pandas.Series.plot.bar
    "pandas.Series.plot.bar") where ticks positions were assigned by value order instead
    of using the actual value for numeric or a smart ordering for string ([GH 26186](https://github.com/pandas-dev/pandas/issues/26186),
    [GH 11465](https://github.com/pandas-dev/pandas/issues/11465)). This fix has been
    reverted in pandas 1.2.1, see [What’s new in 1.2.1 (January 20, 2021)](v1.2.1.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Twinned axes were losing their tick labels which should only happen to all but
    the last row or column of ‘externally’ shared axes ([GH 33819](https://github.com/pandas-dev/pandas/issues/33819))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") and [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") was throwing a [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError
    "(in Python v3.12)") when the Series or DataFrame was indexed by a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") with a fixed frequency and the x-axis lower limit was
    greater than the upper limit ([GH 37454](https://github.com/pandas-dev/pandas/issues/37454))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.boxplot()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.boxplot.html#pandas.core.groupby.DataFrameGroupBy.boxplot
    "pandas.core.groupby.DataFrameGroupBy.boxplot") when `subplots=False` would raise
    a `KeyError` ([GH 16748](https://github.com/pandas-dev/pandas/issues/16748))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") and [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") was overwriting matplotlib’s shared y axes behavior when
    no `sharey` parameter was passed ([GH 37942](https://github.com/pandas-dev/pandas/issues/37942))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") was raising a `TypeError` with `ExtensionDtype` columns
    ([GH 32073](https://github.com/pandas-dev/pandas/issues/32073))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styler
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Styler.render()` HTML was generated incorrectly because of formatting
    error in `rowspan` attribute, it now matches with w3 syntax ([GH 38234](https://github.com/pandas-dev/pandas/issues/38234))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.count()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.count.html#pandas.core.groupby.DataFrameGroupBy.count
    "pandas.core.groupby.DataFrameGroupBy.count") and `SeriesGroupBy.sum()` returning
    `NaN` for missing categories when grouped on multiple `Categoricals`. Now returning
    `0` ([GH 35028](https://github.com/pandas-dev/pandas/issues/35028))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") that would sometimes throw an erroneous
    `ValueError` if the grouping axis had duplicate entries ([GH 16646](https://github.com/pandas-dev/pandas/issues/16646))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") that would throw a `ValueError` when resampling from
    `"D"` to `"24H"` over a transition into daylight savings time (DST) ([GH 35219](https://github.com/pandas-dev/pandas/issues/35219))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when combining methods [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") with [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") raising a `TypeError` ([GH 35325](https://github.com/pandas-dev/pandas/issues/35325))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") where a non-nuisance grouping column
    would be dropped from the output columns if another groupby method was called
    before `.apply` ([GH 34656](https://github.com/pandas-dev/pandas/issues/34656))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when subsetting columns on a `DataFrameGroupBy` (e.g. `df.groupby('a')[['b']])`)
    would reset the attributes `axis`, `dropna`, `group_keys`, `level`, `mutated`,
    `sort`, and `squeeze` to their default values ([GH 9959](https://github.com/pandas-dev/pandas/issues/9959))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.tshift()` failing to raise `ValueError` when a frequency
    cannot be inferred for the index of a group ([GH 35937](https://github.com/pandas-dev/pandas/issues/35937))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") does not always maintain column index name for `any`,
    `all`, `bfill`, `ffill`, `shift` ([GH 29764](https://github.com/pandas-dev/pandas/issues/29764))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") raising error with `np.nan` group(s)
    when `dropna=False` ([GH 35889](https://github.com/pandas-dev/pandas/issues/35889))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.sum()`](../reference/api/pandas.core.window.rolling.Rolling.sum.html#pandas.core.window.rolling.Rolling.sum
    "pandas.core.window.rolling.Rolling.sum") returned wrong values when dtypes where
    mixed between float and integer and `axis=1` ([GH 20649](https://github.com/pandas-dev/pandas/issues/20649),
    [GH 35596](https://github.com/pandas-dev/pandas/issues/35596))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.count()`](../reference/api/pandas.core.window.rolling.Rolling.count.html#pandas.core.window.rolling.Rolling.count
    "pandas.core.window.rolling.Rolling.count") returned `np.nan` with [`FixedForwardWindowIndexer`](../reference/api/pandas.api.indexers.FixedForwardWindowIndexer.html#pandas.api.indexers.FixedForwardWindowIndexer
    "pandas.api.indexers.FixedForwardWindowIndexer") as window, `min_periods=0` and
    only missing values in the window ([GH 35579](https://github.com/pandas-dev/pandas/issues/35579))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where `Rolling` produces incorrect window sizes when using a `PeriodIndex`
    ([GH 34225](https://github.com/pandas-dev/pandas/issues/34225))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.ffill()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.ffill.html#pandas.core.groupby.DataFrameGroupBy.ffill
    "pandas.core.groupby.DataFrameGroupBy.ffill") and [`DataFrameGroupBy.bfill()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.bfill.html#pandas.core.groupby.DataFrameGroupBy.bfill
    "pandas.core.groupby.DataFrameGroupBy.bfill") where a `NaN` group would return
    filled values instead of `NaN` when `dropna=True` ([GH 34725](https://github.com/pandas-dev/pandas/issues/34725))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RollingGroupby.count()` where a `ValueError` was raised when specifying
    the `closed` parameter ([GH 35869](https://github.com/pandas-dev/pandas/issues/35869))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.rolling()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rolling.html#pandas.core.groupby.DataFrameGroupBy.rolling
    "pandas.core.groupby.DataFrameGroupBy.rolling") returning wrong values with partial
    centered window ([GH 36040](https://github.com/pandas-dev/pandas/issues/36040))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.rolling()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rolling.html#pandas.core.groupby.DataFrameGroupBy.rolling
    "pandas.core.groupby.DataFrameGroupBy.rolling") returned wrong values with time
    aware window containing `NaN`. Raises `ValueError` because windows are not monotonic
    now ([GH 34617](https://github.com/pandas-dev/pandas/issues/34617))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Rolling.__iter__()` where a `ValueError` was not raised when `min_periods`
    was larger than `window` ([GH 37156](https://github.com/pandas-dev/pandas/issues/37156))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using [`Rolling.var()`](../reference/api/pandas.core.window.rolling.Rolling.var.html#pandas.core.window.rolling.Rolling.var
    "pandas.core.window.rolling.Rolling.var") instead of [`Rolling.std()`](../reference/api/pandas.core.window.rolling.Rolling.std.html#pandas.core.window.rolling.Rolling.std
    "pandas.core.window.rolling.Rolling.std") avoids numerical issues for [`Rolling.corr()`](../reference/api/pandas.core.window.rolling.Rolling.corr.html#pandas.core.window.rolling.Rolling.corr
    "pandas.core.window.rolling.Rolling.corr") when [`Rolling.var()`](../reference/api/pandas.core.window.rolling.Rolling.var.html#pandas.core.window.rolling.Rolling.var
    "pandas.core.window.rolling.Rolling.var") is still within floating point precision
    while [`Rolling.std()`](../reference/api/pandas.core.window.rolling.Rolling.std.html#pandas.core.window.rolling.Rolling.std
    "pandas.core.window.rolling.Rolling.std") is not ([GH 31286](https://github.com/pandas-dev/pandas/issues/31286))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`Resampler.quantile()`](../reference/api/pandas.core.resample.Resampler.quantile.html#pandas.core.resample.Resampler.quantile
    "pandas.core.resample.Resampler.quantile") raised `TypeError` when values were
    of type `Timedelta` ([GH 29485](https://github.com/pandas-dev/pandas/issues/29485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.median()`](../reference/api/pandas.core.window.rolling.Rolling.median.html#pandas.core.window.rolling.Rolling.median
    "pandas.core.window.rolling.Rolling.median") and [`Rolling.quantile()`](../reference/api/pandas.core.window.rolling.Rolling.quantile.html#pandas.core.window.rolling.Rolling.quantile
    "pandas.core.window.rolling.Rolling.quantile") returned wrong values for [`BaseIndexer`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer") subclasses with non-monotonic starting or ending
    points for windows ([GH 37153](https://github.com/pandas-dev/pandas/issues/37153))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") dropped `nan` groups from result with `dropna=False`
    when grouping over a single column ([GH 35646](https://github.com/pandas-dev/pandas/issues/35646),
    [GH 35542](https://github.com/pandas-dev/pandas/issues/35542))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.head()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.head.html#pandas.core.groupby.DataFrameGroupBy.head
    "pandas.core.groupby.DataFrameGroupBy.head"), `DataFrameGroupBy.tail()`, `SeriesGroupBy.head()`,
    and `SeriesGroupBy.tail()` would raise when used with `axis=1` ([GH 9772](https://github.com/pandas-dev/pandas/issues/9772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") would raise when used with `axis=1`
    and a transformation kernel (e.g. “shift”) ([GH 36308](https://github.com/pandas-dev/pandas/issues/36308))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.resample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.resample.html#pandas.core.groupby.DataFrameGroupBy.resample
    "pandas.core.groupby.DataFrameGroupBy.resample") using `.agg` with sum produced
    different result than just calling `.sum` ([GH 33548](https://github.com/pandas-dev/pandas/issues/33548))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") dropped values on `nan` group when
    returning the same axes with the original frame ([GH 38227](https://github.com/pandas-dev/pandas/issues/38227))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") couldn’t handle with arraylike
    `q` when grouping by columns ([GH 33795](https://github.com/pandas-dev/pandas/issues/33795))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.rank()` with `datetime64tz` or period dtype incorrectly
    casting results to those dtypes instead of returning `float64` dtype ([GH 38187](https://github.com/pandas-dev/pandas/issues/38187))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `DataFrame.crosstab()` was returning incorrect results on inputs with
    duplicate row names, duplicate column names or duplicate names between row and
    column labels ([GH 22529](https://github.com/pandas-dev/pandas/issues/22529))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") with `aggfunc='count'` or `aggfunc='sum'` returning
    `NaN` for missing categories when pivoted on a `Categorical`. Now returning `0`
    ([GH 31422](https://github.com/pandas-dev/pandas/issues/31422))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor where input index names are not preserved in some cases ([GH 13475](https://github.com/pandas-dev/pandas/issues/13475))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in func [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") when using multiple columns with `margins=True` and `normalize=True`
    ([GH 35144](https://github.com/pandas-dev/pandas/issues/35144))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") where an empty DataFrame.stack would raise an error
    ([GH 36113](https://github.com/pandas-dev/pandas/issues/36113)). Now returning
    an empty Series with empty MultiIndex.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack"). Now a Series with single level of Index trying to unstack
    would raise a `ValueError` ([GH 36113](https://github.com/pandas-dev/pandas/issues/36113))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") with `func={'name':<FUNC>}` incorrectly raising `TypeError`
    when `DataFrame.columns==['Name']` ([GH 36212](https://github.com/pandas-dev/pandas/issues/36212))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.transform()`](../reference/api/pandas.Series.transform.html#pandas.Series.transform
    "pandas.Series.transform") would give incorrect results or raise when the argument
    `func` was a dictionary ([GH 35811](https://github.com/pandas-dev/pandas/issues/35811))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") did not preserve [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") level names for columns when rows and columns are both multiindexed
    ([GH 36360](https://github.com/pandas-dev/pandas/issues/36360))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") modified `index` argument when `columns` was passed
    but `values` was not ([GH 37635](https://github.com/pandas-dev/pandas/issues/37635))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") returned a non deterministic level-order for the resulting
    [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    ([GH 36910](https://github.com/pandas-dev/pandas/issues/36910))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first") caused wrong alignment with dtype `string` and
    one level of `MultiIndex` containing only `NA` ([GH 37591](https://github.com/pandas-dev/pandas/issues/37591))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") on merging [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with empty DataFrame ([GH 36895](https://github.com/pandas-dev/pandas/issues/36895))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") not setting index of return value when `func` return
    type is `dict` ([GH 37544](https://github.com/pandas-dev/pandas/issues/37544))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") and [`pandas.merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") returning inconsistent ordering in result for `how=right` and
    `how=left` ([GH 35382](https://github.com/pandas-dev/pandas/issues/35382))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_ordered()`](../reference/api/pandas.merge_ordered.html#pandas.merge_ordered
    "pandas.merge_ordered") couldn’t handle list-like `left_by` or `right_by` ([GH
    35269](https://github.com/pandas-dev/pandas/issues/35269))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_ordered()`](../reference/api/pandas.merge_ordered.html#pandas.merge_ordered
    "pandas.merge_ordered") returned wrong join result when length of `left_by` or
    `right_by` equals to the rows of `left` or `right` ([GH 38166](https://github.com/pandas-dev/pandas/issues/38166))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_ordered()`](../reference/api/pandas.merge_ordered.html#pandas.merge_ordered
    "pandas.merge_ordered") didn’t raise when elements in `left_by` or `right_by`
    not exist in `left` columns or `right` columns ([GH 38167](https://github.com/pandas-dev/pandas/issues/38167))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.drop_duplicates()`](../reference/api/pandas.DataFrame.drop_duplicates.html#pandas.DataFrame.drop_duplicates
    "pandas.DataFrame.drop_duplicates") not validating bool dtype for `ignore_index`
    keyword ([GH 38274](https://github.com/pandas-dev/pandas/issues/38274))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fixed bug where [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") column set to scalar extension type via a dict instantiation
    was considered an object type rather than the extension type ([GH 35965](https://github.com/pandas-dev/pandas/issues/35965))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where `astype()` with equal dtype and `copy=False` would return a
    new object ([GH 28488](https://github.com/pandas-dev/pandas/issues/28488))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug when applying a NumPy ufunc with multiple outputs to an [`IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") returning `None` ([GH 36913](https://github.com/pandas-dev/pandas/issues/36913))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed an inconsistency in [`PeriodArray`](../reference/api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray")’s `__init__` signature to those of [`DatetimeArray`](../reference/api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") and [`TimedeltaArray`](../reference/api/pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray") ([GH 37289](https://github.com/pandas-dev/pandas/issues/37289))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reductions for [`BooleanArray`](../reference/api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray"), [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical"), [`DatetimeArray`](../reference/api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray"), [`FloatingArray`](../reference/api/pandas.arrays.FloatingArray.html#pandas.arrays.FloatingArray
    "pandas.arrays.FloatingArray"), [`IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray"), [`PeriodArray`](../reference/api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray"), [`TimedeltaArray`](../reference/api/pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray"), and `PandasArray` are now keyword-only methods
    ([GH 37541](https://github.com/pandas-dev/pandas/issues/37541))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed a bug where a `TypeError` was wrongly raised if a membership check was
    made on an `ExtensionArray` containing nan-like values ([GH 37867](https://github.com/pandas-dev/pandas/issues/37867))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") incorrectly raising an `AssertionError` instead of a
    `ValueError` when invalid parameter combinations are passed ([GH 36045](https://github.com/pandas-dev/pandas/issues/36045))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with numeric values and string `to_replace` ([GH 34789](https://github.com/pandas-dev/pandas/issues/34789))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed metadata propagation in [`Series.abs()`](../reference/api/pandas.Series.abs.html#pandas.Series.abs
    "pandas.Series.abs") and ufuncs called on Series and DataFrames ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") incorrectly casting from `PeriodDtype` to object dtype
    ([GH 34871](https://github.com/pandas-dev/pandas/issues/34871))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in metadata propagation incorrectly copying DataFrame columns as metadata
    when the column name overlaps with the metadata name ([GH 37037](https://github.com/pandas-dev/pandas/issues/37037))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed metadata propagation in the [`Series.dt`](../reference/api/pandas.Series.dt.html#pandas.Series.dt
    "pandas.Series.dt"), [`Series.str`](../reference/api/pandas.Series.str.html#pandas.Series.str
    "pandas.Series.str") accessors, [`DataFrame.duplicated`](../reference/api/pandas.DataFrame.duplicated.html#pandas.DataFrame.duplicated
    "pandas.DataFrame.duplicated"), [`DataFrame.stack`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack"), [`DataFrame.unstack`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack"), [`DataFrame.pivot`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot"), `DataFrame.append`, [`DataFrame.diff`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff"), [`DataFrame.applymap`](../reference/api/pandas.DataFrame.applymap.html#pandas.DataFrame.applymap
    "pandas.DataFrame.applymap") and [`DataFrame.update`](../reference/api/pandas.DataFrame.update.html#pandas.DataFrame.update
    "pandas.DataFrame.update") methods ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283),
    [GH 37381](https://github.com/pandas-dev/pandas/issues/37381))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed metadata propagation when selecting columns with `DataFrame.__getitem__`
    ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.intersection()`](../reference/api/pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection") with non-[`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") failing to set the correct name on the returned [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 38111](https://github.com/pandas-dev/pandas/issues/38111))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RangeIndex.intersection()` failing to set the correct name on the returned
    [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") in some
    corner cases ([GH 38197](https://github.com/pandas-dev/pandas/issues/38197))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.difference()`](../reference/api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference") failing to set the correct name on the returned [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") in some corner cases ([GH 38268](https://github.com/pandas-dev/pandas/issues/38268))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") behaving differently depending on whether operand is an
    [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") or other
    list-like ([GH 36384](https://github.com/pandas-dev/pandas/issues/36384))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.intersection()`](../reference/api/pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection") with non-matching numeric dtypes casting to `object`
    dtype instead of minimal common dtype ([GH 38122](https://github.com/pandas-dev/pandas/issues/38122))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.union()` returning an incorrectly-typed [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") when empty ([GH 38282](https://github.com/pandas-dev/pandas/issues/38282))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing an array with 2 or more dimensions to the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") constructor now raises the more specific `ValueError` rather
    than a bare `Exception` ([GH 35744](https://github.com/pandas-dev/pandas/issues/35744))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `dir` where `dir(obj)` wouldn’t show attributes defined on the instance
    for pandas objects ([GH 37173](https://github.com/pandas-dev/pandas/issues/37173))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.drop()`](../reference/api/pandas.Index.drop.html#pandas.Index.drop
    "pandas.Index.drop") raising `InvalidIndexError` when index has duplicates ([GH
    38051](https://github.com/pandas-dev/pandas/issues/38051))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RangeIndex.difference()` returning `Int64Index` in some cases where
    it should return [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") ([GH 38028](https://github.com/pandas-dev/pandas/issues/38028))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in `assert_series_equal()` when comparing a datetime-like array with
    an equivalent non extension dtype array ([GH 37609](https://github.com/pandas-dev/pandas/issues/37609))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`is_bool_dtype()`](../reference/api/pandas.api.types.is_bool_dtype.html#pandas.api.types.is_bool_dtype
    "pandas.api.types.is_bool_dtype") would raise when passed a valid string such
    as `"boolean"` ([GH 38386](https://github.com/pandas-dev/pandas/issues/38386))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in logical operators raising `ValueError` when columns of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") are a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") with unused categories ([GH 38367](https://github.com/pandas-dev/pandas/issues/38367))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`Categorical.fillna()` will always return a copy, validate a passed fill value
    regardless of whether there are any NAs to fill, and disallow an `NaT` as a fill
    value for numeric categories ([GH 36530](https://github.com/pandas-dev/pandas/issues/36530))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.__setitem__()` that incorrectly raised when trying to set
    a tuple value ([GH 20439](https://github.com/pandas-dev/pandas/issues/20439))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`CategoricalIndex.equals()`](../reference/api/pandas.CategoricalIndex.equals.html#pandas.CategoricalIndex.equals
    "pandas.CategoricalIndex.equals") incorrectly casting non-category entries to
    `np.nan` ([GH 37667](https://github.com/pandas-dev/pandas/issues/37667))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CategoricalIndex.where()` incorrectly setting non-category entries to
    `np.nan` instead of raising `TypeError` ([GH 37977](https://github.com/pandas-dev/pandas/issues/37977))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.to_numpy()` and `np.array(categorical)` with tz-aware `datetime64`
    categories incorrectly dropping the time zone information instead of casting to
    object dtype ([GH 38136](https://github.com/pandas-dev/pandas/issues/38136))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetime-like
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first") that would convert datetime-like column on other
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    to integer when the column is not present in original [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 28481](https://github.com/pandas-dev/pandas/issues/28481))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeArray.date` where a `ValueError` would be raised with a read-only
    backing array ([GH 33530](https://github.com/pandas-dev/pandas/issues/33530))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `NaT` comparisons failing to raise `TypeError` on invalid inequality
    comparisons ([GH 35046](https://github.com/pandas-dev/pandas/issues/35046))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DateOffset`](../reference/api/pandas.tseries.offsets.DateOffset.html#pandas.tseries.offsets.DateOffset
    "pandas.tseries.offsets.DateOffset") where attributes reconstructed from pickle
    files differ from original objects when input values exceed normal ranges (e.g.
    months=12) ([GH 34511](https://github.com/pandas-dev/pandas/issues/34511))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.get_slice_bound()` where `datetime.date` objects were
    not accepted or naive [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with a tz-aware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 35690](https://github.com/pandas-dev/pandas/issues/35690))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.slice_locs()` where `datetime.date` objects were not accepted
    ([GH 34077](https://github.com/pandas-dev/pandas/issues/34077))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.searchsorted()`, `TimedeltaIndex.searchsorted()`, `PeriodIndex.searchsorted()`,
    and [`Series.searchsorted()`](../reference/api/pandas.Series.searchsorted.html#pandas.Series.searchsorted
    "pandas.Series.searchsorted") with `datetime64`, `timedelta64` or [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") dtype placement of `NaT` values being inconsistent with NumPy
    ([GH 36176](https://github.com/pandas-dev/pandas/issues/36176), [GH 36254](https://github.com/pandas-dev/pandas/issues/36254))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Inconsistency in [`DatetimeArray`](../reference/api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray"), [`TimedeltaArray`](../reference/api/pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray"), and [`PeriodArray`](../reference/api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray") method `__setitem__` casting arrays of strings to
    datetime-like scalars but not scalar strings ([GH 36261](https://github.com/pandas-dev/pandas/issues/36261))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeArray.take()` incorrectly allowing `fill_value` with a mismatched
    time zone ([GH 37356](https://github.com/pandas-dev/pandas/issues/37356))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.shift` incorrectly raising when shifting empty indexes
    ([GH 14811](https://github.com/pandas-dev/pandas/issues/14811))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    and [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") comparisons between tz-aware and tz-naive objects now
    follow the standard library `datetime` behavior, returning `True`/`False` for
    `!=`/`==` and raising for inequality comparisons ([GH 28507](https://github.com/pandas-dev/pandas/issues/28507))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.equals()` and `TimedeltaIndex.equals()` incorrectly considering
    `int64` indexes as equal ([GH 36744](https://github.com/pandas-dev/pandas/issues/36744))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.to_json()`](../reference/api/pandas.Series.to_json.html#pandas.Series.to_json
    "pandas.Series.to_json"), [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json"), and [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") now implement time zone parsing when orient structure is `table`
    ([GH 35973](https://github.com/pandas-dev/pandas/issues/35973))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`astype()` now attempts to convert to `datetime64[ns, tz]` directly from `object`
    with inferred time zone from string ([GH 35973](https://github.com/pandas-dev/pandas/issues/35973))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `TimedeltaIndex.sum()` and [`Series.sum()`](../reference/api/pandas.Series.sum.html#pandas.Series.sum
    "pandas.Series.sum") with `timedelta64` dtype on an empty index or series returning
    `NaT` instead of `Timedelta(0)` ([GH 31751](https://github.com/pandas-dev/pandas/issues/31751))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeArray.shift()` incorrectly allowing `fill_value` with a mismatched
    time zone ([GH 37299](https://github.com/pandas-dev/pandas/issues/37299))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in adding a [`BusinessDay`](../reference/api/pandas.tseries.offsets.BusinessDay.html#pandas.tseries.offsets.BusinessDay
    "pandas.tseries.offsets.BusinessDay") with nonzero `offset` to a non-scalar other
    ([GH 37457](https://github.com/pandas-dev/pandas/issues/37457))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with a read-only array incorrectly raising ([GH 34857](https://github.com/pandas-dev/pandas/issues/34857))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") with `datetime64[ns]` dtype and `DatetimeIndex.isin()` incorrectly
    casting integers to datetimes ([GH 36621](https://github.com/pandas-dev/pandas/issues/36621))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") with `datetime64[ns]` dtype and `DatetimeIndex.isin()` failing
    to consider tz-aware and tz-naive datetimes as always different ([GH 35728](https://github.com/pandas-dev/pandas/issues/35728))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") with `PeriodDtype` dtype and `PeriodIndex.isin()` failing
    to consider arguments with different `PeriodDtype` as always different ([GH 37528](https://github.com/pandas-dev/pandas/issues/37528))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    constructor now correctly handles nanoseconds in the `value` argument ([GH 34621](https://github.com/pandas-dev/pandas/issues/34621)
    and [GH 17053](https://github.com/pandas-dev/pandas/issues/17053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") floor-division with `timedelta64` dtypes and `NaT` in the
    denominator ([GH 35529](https://github.com/pandas-dev/pandas/issues/35529))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in parsing of ISO 8601 durations in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") and [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") ([GH 29773](https://github.com/pandas-dev/pandas/issues/29773),
    [GH 36204](https://github.com/pandas-dev/pandas/issues/36204))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") with a read-only array incorrectly raising ([GH 34857](https://github.com/pandas-dev/pandas/issues/34857))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") incorrectly truncating to sub-second portion of a string input
    when it has precision higher than nanoseconds ([GH 36738](https://github.com/pandas-dev/pandas/issues/36738))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") was raising `AmbiguousTimeError` for valid input with `ambiguous=False`
    ([GH 35297](https://github.com/pandas-dev/pandas/issues/35297))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.replace()`](../reference/api/pandas.Timestamp.replace.html#pandas.Timestamp.replace
    "pandas.Timestamp.replace") was losing fold information ([GH 37610](https://github.com/pandas-dev/pandas/issues/37610))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") where float precision was incorrect ([GH 31364](https://github.com/pandas-dev/pandas/issues/31364))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.any()`](../reference/api/pandas.DataFrame.any.html#pandas.DataFrame.any
    "pandas.DataFrame.any") with `axis=1` and `bool_only=True` ignoring the `bool_only`
    keyword ([GH 32432](https://github.com/pandas-dev/pandas/issues/32432))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.equals()`](../reference/api/pandas.Series.equals.html#pandas.Series.equals
    "pandas.Series.equals") where a `ValueError` was raised when NumPy arrays were
    compared to scalars ([GH 35267](https://github.com/pandas-dev/pandas/issues/35267))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    where two Series each have a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with different time zones having those indexes incorrectly
    changed when performing arithmetic operations ([GH 33671](https://github.com/pandas-dev/pandas/issues/33671))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas.testing` module functions when used with `check_exact=False`
    on complex numeric types ([GH 28235](https://github.com/pandas-dev/pandas/issues/28235))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__rmatmul__()` error handling reporting transposed shapes
    ([GH 21581](https://github.com/pandas-dev/pandas/issues/21581))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    flex arithmetic methods where the result when operating with a `list`, `tuple`
    or `np.ndarray` would have an incorrect name ([GH 36760](https://github.com/pandas-dev/pandas/issues/36760))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") multiplication with `timedelta` and `np.timedelta64`
    objects ([GH 36870](https://github.com/pandas-dev/pandas/issues/36870))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") comparison with tuple incorrectly treating tuple as array-like
    ([GH 21517](https://github.com/pandas-dev/pandas/issues/21517))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.diff()`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff") with `datetime64` dtypes including `NaT` values failing
    to fill `NaT` results correctly ([GH 32441](https://github.com/pandas-dev/pandas/issues/32441))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") arithmetic ops incorrectly accepting keyword arguments ([GH
    36843](https://github.com/pandas-dev/pandas/issues/36843))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalArray`](../reference/api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray") comparisons with [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") not returning Series ([GH 36908](https://github.com/pandas-dev/pandas/issues/36908))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") allowing arithmetic operations with list of array-likes with
    undefined results. Behavior changed to raising `ValueError` ([GH 36702](https://github.com/pandas-dev/pandas/issues/36702))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.std()`](../reference/api/pandas.DataFrame.std.html#pandas.DataFrame.std
    "pandas.DataFrame.std") with `timedelta64` dtype and `skipna=False` ([GH 37392](https://github.com/pandas-dev/pandas/issues/37392))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.min()`](../reference/api/pandas.DataFrame.min.html#pandas.DataFrame.min
    "pandas.DataFrame.min") and [`DataFrame.max()`](../reference/api/pandas.DataFrame.max.html#pandas.DataFrame.max
    "pandas.DataFrame.max") with `datetime64` dtype and `skipna=False` ([GH 36907](https://github.com/pandas-dev/pandas/issues/36907))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax") and [`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin") with mixed dtypes incorrectly raising `TypeError` ([GH
    38195](https://github.com/pandas-dev/pandas/issues/38195))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") with `orient='records'` now returns python native
    datetime objects for datetime-like columns ([GH 21256](https://github.com/pandas-dev/pandas/issues/21256))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") conversion from `string` to `float` raised in presence
    of `pd.NA` values ([GH 37626](https://github.com/pandas-dev/pandas/issues/37626))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.to_string()`](../reference/api/pandas.Series.to_string.html#pandas.Series.to_string
    "pandas.Series.to_string"), [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string"), and [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") adding a leading space when `index=False` ([GH 24980](https://github.com/pandas-dev/pandas/issues/24980))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") raising a `TypeError` when attempting to convert a string
    dtype Series containing only numeric strings and `NA` ([GH 37262](https://github.com/pandas-dev/pandas/issues/37262))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") where [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") dtypes would be converted to object dtypes ([GH 34871](https://github.com/pandas-dev/pandas/issues/34871))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.take()` with negative indices and `fill_value=None` ([GH
    37330](https://github.com/pandas-dev/pandas/issues/37330))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.putmask()` with datetime-like dtype incorrectly casting
    to object dtype ([GH 37968](https://github.com/pandas-dev/pandas/issues/37968))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalArray.astype()` incorrectly dropping dtype information with
    a [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") object ([GH 37984](https://github.com/pandas-dev/pandas/issues/37984))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `PeriodIndex.get_loc()` incorrectly raising `ValueError` on non-datelike
    strings instead of `KeyError`, causing similar errors in `Series.__getitem__()`,
    `Series.__contains__()`, and `Series.loc.__getitem__()` ([GH 34240](https://github.com/pandas-dev/pandas/issues/34240))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.sort_values()`](../reference/api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values") where, when empty values were passed, the method would
    break by trying to compare missing values instead of pushing them to the end of
    the sort order ([GH 35584](https://github.com/pandas-dev/pandas/issues/35584))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.get_indexer()`](../reference/api/pandas.Index.get_indexer.html#pandas.Index.get_indexer
    "pandas.Index.get_indexer") and [`Index.get_indexer_non_unique()`](../reference/api/pandas.Index.get_indexer_non_unique.html#pandas.Index.get_indexer_non_unique
    "pandas.Index.get_indexer_non_unique") where `int64` arrays are returned instead
    of `intp` ([GH 36359](https://github.com/pandas-dev/pandas/issues/36359))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index") where parameter ascending passed as a list on a
    single level index gives wrong result ([GH 32334](https://github.com/pandas-dev/pandas/issues/32334))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") was incorrectly raising a `ValueError` for input
    with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with missing values in a level with `Categorical` dtype ([GH
    24206](https://github.com/pandas-dev/pandas/issues/24206))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing with boolean masks on datetime-like values sometimes returning
    a view instead of a copy ([GH 36210](https://github.com/pandas-dev/pandas/issues/36210))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__getitem__()` and `DataFrame.loc.__getitem__()` with [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") columns and a numeric indexer ([GH 26490](https://github.com/pandas-dev/pandas/issues/26490))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.loc.__getitem__()` with a non-unique [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and an empty-list indexer ([GH 13691](https://github.com/pandas-dev/pandas/issues/13691))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and a level named `"0"` ([GH 37194](https://github.com/pandas-dev/pandas/issues/37194))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__getitem__()` when using an unsigned integer array as an indexer
    giving incorrect results or segfaulting instead of raising `KeyError` ([GH 37218](https://github.com/pandas-dev/pandas/issues/37218))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.where()`](../reference/api/pandas.Index.where.html#pandas.Index.where
    "pandas.Index.where") incorrectly casting numeric values to strings ([GH 37591](https://github.com/pandas-dev/pandas/issues/37591))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") returning empty result when indexer is a slice with negative
    step size ([GH 38071](https://github.com/pandas-dev/pandas/issues/38071))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") and [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raises when the index was of `object` dtype and the given
    numeric label was in the index ([GH 26491](https://github.com/pandas-dev/pandas/issues/26491))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") returned requested key plus missing values when `loc`
    was applied to single level from a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 27104](https://github.com/pandas-dev/pandas/issues/27104))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") using a list-like indexer containing NA values ([GH
    37722](https://github.com/pandas-dev/pandas/issues/37722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc.__setitem__()` expanding an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with mixed dtypes ([GH 37932](https://github.com/pandas-dev/pandas/issues/37932))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.xs()`](../reference/api/pandas.DataFrame.xs.html#pandas.DataFrame.xs
    "pandas.DataFrame.xs") ignored `droplevel=False` for columns ([GH 19056](https://github.com/pandas-dev/pandas/issues/19056))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") raising `IndexingError` wrongly for empty DataFrame
    with `tolerance` not `None` or `method="nearest"` ([GH 27315](https://github.com/pandas-dev/pandas/issues/27315))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") using list-like indexer that contains elements that
    are in the index’s `categories` but not in the index itself failing to raise `KeyError`
    ([GH 37901](https://github.com/pandas-dev/pandas/issues/37901))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug on inserting a boolean label into a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a numeric [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") columns incorrectly casting to integer ([GH 36319](https://github.com/pandas-dev/pandas/issues/36319))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") and [`Series.iloc()`](../reference/api/pandas.Series.iloc.html#pandas.Series.iloc
    "pandas.Series.iloc") aligning objects in `__setitem__` ([GH 22046](https://github.com/pandas-dev/pandas/issues/22046))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.drop()`](../reference/api/pandas.MultiIndex.drop.html#pandas.MultiIndex.drop
    "pandas.MultiIndex.drop") does not raise if labels are partially found ([GH 37820](https://github.com/pandas-dev/pandas/issues/37820))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") did not raise `KeyError` when missing combination was
    given with `slice(None)` for remaining levels ([GH 19556](https://github.com/pandas-dev/pandas/issues/19556))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raising `TypeError` when non-integer slice was given to
    select values from [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 25165](https://github.com/pandas-dev/pandas/issues/25165),
    [GH 24263](https://github.com/pandas-dev/pandas/issues/24263))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.at()`](../reference/api/pandas.Series.at.html#pandas.Series.at
    "pandas.Series.at") returning [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with one element instead of scalar when index is a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with one level ([GH 38053](https://github.com/pandas-dev/pandas/issues/38053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") returning and assigning elements in wrong order when indexer
    is differently ordered than the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") to filter ([GH 31330](https://github.com/pandas-dev/pandas/issues/31330),
    [GH 34603](https://github.com/pandas-dev/pandas/issues/34603))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and `DataFrame.__getitem__()` raising `KeyError` when
    columns were [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with only one level ([GH 29749](https://github.com/pandas-dev/pandas/issues/29749))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__getitem__()` and `DataFrame.__getitem__()` raising blank `KeyError`
    without missing keys for [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") ([GH 27365](https://github.com/pandas-dev/pandas/issues/27365))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting a new label on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") incorrectly raising `TypeError` when the new label
    is not among the index’s categories ([GH 38098](https://github.com/pandas-dev/pandas/issues/38098))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") and [`Series.iloc()`](../reference/api/pandas.Series.iloc.html#pandas.Series.iloc
    "pandas.Series.iloc") raising `ValueError` when inserting a list-like `np.array`,
    `list` or `tuple` in an `object` Series of equal length ([GH 37748](https://github.com/pandas-dev/pandas/issues/37748),
    [GH 37486](https://github.com/pandas-dev/pandas/issues/37486))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") and [`Series.iloc()`](../reference/api/pandas.Series.iloc.html#pandas.Series.iloc
    "pandas.Series.iloc") setting all the values of an `object` Series with those
    of a list-like `ExtensionArray` instead of inserting it ([GH 38271](https://github.com/pandas-dev/pandas/issues/38271))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") now correctly handles missing values
    for `dropna=False` ([GH 35014](https://github.com/pandas-dev/pandas/issues/35014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.nunique()`](../reference/api/pandas.Series.nunique.html#pandas.Series.nunique
    "pandas.Series.nunique") with `dropna=True` was returning incorrect results when
    both `NA` and `None` missing values were present ([GH 37566](https://github.com/pandas-dev/pandas/issues/37566))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") where kwarg `limit_area` and `limit_direction` had
    no effect when using methods `pad` and `backfill` ([GH 31048](https://github.com/pandas-dev/pandas/issues/31048))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.xs()`](../reference/api/pandas.DataFrame.xs.html#pandas.DataFrame.xs
    "pandas.DataFrame.xs") when used with [`IndexSlice`](../reference/api/pandas.IndexSlice.html#pandas.IndexSlice
    "pandas.IndexSlice") raises `TypeError` with message `"Expected label or tuple
    of labels"` ([GH 35301](https://github.com/pandas-dev/pandas/issues/35301))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") with `NaT` values in index raises `ValueError`
    with message `"cannot convert float NaN to integer"` ([GH 36541](https://github.com/pandas-dev/pandas/issues/36541))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first") when used with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") containing string and `NaN` values raises `TypeError` ([GH
    36562](https://github.com/pandas-dev/pandas/issues/36562))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.drop()`](../reference/api/pandas.MultiIndex.drop.html#pandas.MultiIndex.drop
    "pandas.MultiIndex.drop") dropped `NaN` values when non existing key was given
    as input ([GH 18853](https://github.com/pandas-dev/pandas/issues/18853))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.drop()`](../reference/api/pandas.MultiIndex.drop.html#pandas.MultiIndex.drop
    "pandas.MultiIndex.drop") dropping more values than expected when index has duplicates
    and is not sorted ([GH 33494](https://github.com/pandas-dev/pandas/issues/33494))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I/O
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    no longer leaks resources on failure ([GH 35566](https://github.com/pandas-dev/pandas/issues/35566))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") and [`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv") caused a `ValueError` when it was called with a filename
    in combination with `mode` containing a `b` ([GH 35058](https://github.com/pandas-dev/pandas/issues/35058))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `float_precision='round_trip'` did not handle `decimal`
    and `thousands` parameters ([GH 35365](https://github.com/pandas-dev/pandas/issues/35365))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_pickle()` and [`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle") were closing user-provided file objects ([GH 35679](https://github.com/pandas-dev/pandas/issues/35679))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_csv()` passes compression arguments for `''gzip''` always to `gzip.GzipFile`
    ([GH 28103](https://github.com/pandas-dev/pandas/issues/28103))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_csv()` did not support zip compression for binary file object not having
    a filename ([GH 35058](https://github.com/pandas-dev/pandas/issues/35058))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_csv()` and [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") did not honor `compression` and `encoding` for path-like objects
    that are internally converted to file-like objects ([GH 35677](https://github.com/pandas-dev/pandas/issues/35677),
    [GH 26124](https://github.com/pandas-dev/pandas/issues/26124), [GH 32392](https://github.com/pandas-dev/pandas/issues/32392))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle"), [`Series.to_pickle()`](../reference/api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle"), and [`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle") did not support compression for file-objects ([GH 26237](https://github.com/pandas-dev/pandas/issues/26237),
    [GH 29054](https://github.com/pandas-dev/pandas/issues/29054), [GH 29570](https://github.com/pandas-dev/pandas/issues/29570))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `LongTableBuilder.middle_separator()` was duplicating LaTeX longtable
    entries in the List of Tables of a LaTeX document ([GH 34360](https://github.com/pandas-dev/pandas/issues/34360))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `engine='python'` truncating data if multiple items present
    in first row and first element started with BOM ([GH 36343](https://github.com/pandas-dev/pandas/issues/36343))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `private_key` and `verbose` from [`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq
    "pandas.read_gbq") as they are no longer supported in `pandas-gbq` ([GH 34654](https://github.com/pandas-dev/pandas/issues/34654),
    [GH 30200](https://github.com/pandas-dev/pandas/issues/30200))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bumped minimum pytables version to 3.5.1 to avoid a `ValueError` in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") ([GH 24839](https://github.com/pandas-dev/pandas/issues/24839))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") and [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when `delim_whitespace=True` and `sep=default` ([GH 36583](https://github.com/pandas-dev/pandas/issues/36583))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") and [`Series.to_json()`](../reference/api/pandas.Series.to_json.html#pandas.Series.to_json
    "pandas.Series.to_json") when used with `lines=True` and `orient='records'` the
    last line of the record is not appended with ‘new line character’ ([GH 36888](https://github.com/pandas-dev/pandas/issues/36888))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") with fixed offset time zones. String representation of
    time zones was not recognized ([GH 35997](https://github.com/pandas-dev/pandas/issues/35997),
    [GH 36004](https://github.com/pandas-dev/pandas/issues/36004))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html"), [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string"), and [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") ignoring the `na_rep` argument when `float_format`
    was also specified ([GH 9046](https://github.com/pandas-dev/pandas/issues/9046),
    [GH 13828](https://github.com/pandas-dev/pandas/issues/13828))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in output rendering of complex numbers showing too many trailing zeros ([GH
    36799](https://github.com/pandas-dev/pandas/issues/36799))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `HDFStore` threw a `TypeError` when exporting an empty DataFrame with
    `datetime64[ns, tz]` dtypes with a fixed HDF5 store ([GH 20594](https://github.com/pandas-dev/pandas/issues/20594))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `HDFStore` was dropping time zone information when exporting a Series
    with `datetime64[ns, tz]` dtypes with a fixed HDF5 store ([GH 20594](https://github.com/pandas-dev/pandas/issues/20594))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    was closing user-provided binary file handles when `engine="c"` and an `encoding`
    was requested ([GH 36980](https://github.com/pandas-dev/pandas/issues/36980))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_hdf()`](../reference/api/pandas.DataFrame.to_hdf.html#pandas.DataFrame.to_hdf
    "pandas.DataFrame.to_hdf") was not dropping missing rows with `dropna=True` ([GH
    35719](https://github.com/pandas-dev/pandas/issues/35719))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") was raising a `TypeError` when supplying a `pathlib.Path`
    argument to the `io` parameter ([GH 37705](https://github.com/pandas-dev/pandas/issues/37705))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel"), [`Series.to_excel()`](../reference/api/pandas.Series.to_excel.html#pandas.Series.to_excel
    "pandas.Series.to_excel"), [`DataFrame.to_markdown()`](../reference/api/pandas.DataFrame.to_markdown.html#pandas.DataFrame.to_markdown
    "pandas.DataFrame.to_markdown"), and [`Series.to_markdown()`](../reference/api/pandas.Series.to_markdown.html#pandas.Series.to_markdown
    "pandas.Series.to_markdown") now support writing to fsspec URLs such as S3 and
    Google Cloud Storage ([GH 33987](https://github.com/pandas-dev/pandas/issues/33987))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf") with `skip_blank_lines=True` was not skipping blank lines ([GH
    37758](https://github.com/pandas-dev/pandas/issues/37758))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parse missing values using [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") with `dtype=False` to `NaN` instead of `None` ([GH 28501](https://github.com/pandas-dev/pandas/issues/28501))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf "pandas.read_fwf")
    was inferring compression with `compression=None` which was not consistent with
    the other `read_*` functions ([GH 37909](https://github.com/pandas-dev/pandas/issues/37909))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") was ignoring `formatters` argument for `ExtensionDtype`
    columns ([GH 36525](https://github.com/pandas-dev/pandas/issues/36525))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bumped minimum xarray version to 0.12.3 to avoid reference to the removed `Panel`
    class ([GH 27101](https://github.com/pandas-dev/pandas/issues/27101), [GH 37983](https://github.com/pandas-dev/pandas/issues/37983))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") was re-opening file-like handles that also implement
    `os.PathLike` ([GH 38125](https://github.com/pandas-dev/pandas/issues/38125))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the conversion of a sliced `pyarrow.Table` with missing values to a DataFrame
    ([GH 38525](https://github.com/pandas-dev/pandas/issues/38525))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sql_table()`](../reference/api/pandas.read_sql_table.html#pandas.read_sql_table
    "pandas.read_sql_table") raising a `sqlalchemy.exc.OperationalError` when column
    names contained a percentage sign ([GH 37517](https://github.com/pandas-dev/pandas/issues/37517))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Period
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") where [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") dtypes would be converted to object dtypes ([GH 34871](https://github.com/pandas-dev/pandas/issues/34871))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") was rotating xticklabels when `subplots=True`, even if
    the x-axis wasn’t an irregular time series ([GH 29460](https://github.com/pandas-dev/pandas/issues/29460))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") where a marker letter in the `style` keyword sometimes
    caused a `ValueError` ([GH 21003](https://github.com/pandas-dev/pandas/issues/21003))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.bar()`](../reference/api/pandas.DataFrame.plot.bar.html#pandas.DataFrame.plot.bar
    "pandas.DataFrame.plot.bar") and [`Series.plot.bar()`](../reference/api/pandas.Series.plot.bar.html#pandas.Series.plot.bar
    "pandas.Series.plot.bar") where ticks positions were assigned by value order instead
    of using the actual value for numeric or a smart ordering for string ([GH 26186](https://github.com/pandas-dev/pandas/issues/26186),
    [GH 11465](https://github.com/pandas-dev/pandas/issues/11465)). This fix has been
    reverted in pandas 1.2.1, see [What’s new in 1.2.1 (January 20, 2021)](v1.2.1.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Twinned axes were losing their tick labels which should only happen to all but
    the last row or column of ‘externally’ shared axes ([GH 33819](https://github.com/pandas-dev/pandas/issues/33819))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") and [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") was throwing a [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError
    "(in Python v3.12)") when the Series or DataFrame was indexed by a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") with a fixed frequency and the x-axis lower limit was
    greater than the upper limit ([GH 37454](https://github.com/pandas-dev/pandas/issues/37454))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.boxplot()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.boxplot.html#pandas.core.groupby.DataFrameGroupBy.boxplot
    "pandas.core.groupby.DataFrameGroupBy.boxplot") when `subplots=False` would raise
    a `KeyError` ([GH 16748](https://github.com/pandas-dev/pandas/issues/16748))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") and [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") was overwriting matplotlib’s shared y axes behavior when
    no `sharey` parameter was passed ([GH 37942](https://github.com/pandas-dev/pandas/issues/37942))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") was raising a `TypeError` with `ExtensionDtype` columns
    ([GH 32073](https://github.com/pandas-dev/pandas/issues/32073))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styler
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Styler.render()` HTML was generated incorrectly because of formatting
    error in `rowspan` attribute, it now matches with w3 syntax ([GH 38234](https://github.com/pandas-dev/pandas/issues/38234))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.count()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.count.html#pandas.core.groupby.DataFrameGroupBy.count
    "pandas.core.groupby.DataFrameGroupBy.count") and `SeriesGroupBy.sum()` returning
    `NaN` for missing categories when grouped on multiple `Categoricals`. Now returning
    `0` ([GH 35028](https://github.com/pandas-dev/pandas/issues/35028))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") that would sometimes throw an erroneous
    `ValueError` if the grouping axis had duplicate entries ([GH 16646](https://github.com/pandas-dev/pandas/issues/16646))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") that would throw a `ValueError` when resampling from
    `"D"` to `"24H"` over a transition into daylight savings time (DST) ([GH 35219](https://github.com/pandas-dev/pandas/issues/35219))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when combining methods [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") with [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") raising a `TypeError` ([GH 35325](https://github.com/pandas-dev/pandas/issues/35325))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") where a non-nuisance grouping column
    would be dropped from the output columns if another groupby method was called
    before `.apply` ([GH 34656](https://github.com/pandas-dev/pandas/issues/34656))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when subsetting columns on a `DataFrameGroupBy` (e.g. `df.groupby('a')[['b']])`)
    would reset the attributes `axis`, `dropna`, `group_keys`, `level`, `mutated`,
    `sort`, and `squeeze` to their default values ([GH 9959](https://github.com/pandas-dev/pandas/issues/9959))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.tshift()` failing to raise `ValueError` when a frequency
    cannot be inferred for the index of a group ([GH 35937](https://github.com/pandas-dev/pandas/issues/35937))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") does not always maintain column index name for `any`,
    `all`, `bfill`, `ffill`, `shift` ([GH 29764](https://github.com/pandas-dev/pandas/issues/29764))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") raising error with `np.nan` group(s)
    when `dropna=False` ([GH 35889](https://github.com/pandas-dev/pandas/issues/35889))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.sum()`](../reference/api/pandas.core.window.rolling.Rolling.sum.html#pandas.core.window.rolling.Rolling.sum
    "pandas.core.window.rolling.Rolling.sum") returned wrong values when dtypes where
    mixed between float and integer and `axis=1` ([GH 20649](https://github.com/pandas-dev/pandas/issues/20649),
    [GH 35596](https://github.com/pandas-dev/pandas/issues/35596))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.count()`](../reference/api/pandas.core.window.rolling.Rolling.count.html#pandas.core.window.rolling.Rolling.count
    "pandas.core.window.rolling.Rolling.count") returned `np.nan` with [`FixedForwardWindowIndexer`](../reference/api/pandas.api.indexers.FixedForwardWindowIndexer.html#pandas.api.indexers.FixedForwardWindowIndexer
    "pandas.api.indexers.FixedForwardWindowIndexer") as window, `min_periods=0` and
    only missing values in the window ([GH 35579](https://github.com/pandas-dev/pandas/issues/35579))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where `Rolling` produces incorrect window sizes when using a `PeriodIndex`
    ([GH 34225](https://github.com/pandas-dev/pandas/issues/34225))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.ffill()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.ffill.html#pandas.core.groupby.DataFrameGroupBy.ffill
    "pandas.core.groupby.DataFrameGroupBy.ffill") and [`DataFrameGroupBy.bfill()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.bfill.html#pandas.core.groupby.DataFrameGroupBy.bfill
    "pandas.core.groupby.DataFrameGroupBy.bfill") where a `NaN` group would return
    filled values instead of `NaN` when `dropna=True` ([GH 34725](https://github.com/pandas-dev/pandas/issues/34725))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RollingGroupby.count()` where a `ValueError` was raised when specifying
    the `closed` parameter ([GH 35869](https://github.com/pandas-dev/pandas/issues/35869))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.rolling()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rolling.html#pandas.core.groupby.DataFrameGroupBy.rolling
    "pandas.core.groupby.DataFrameGroupBy.rolling") returning wrong values with partial
    centered window ([GH 36040](https://github.com/pandas-dev/pandas/issues/36040))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.rolling()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rolling.html#pandas.core.groupby.DataFrameGroupBy.rolling
    "pandas.core.groupby.DataFrameGroupBy.rolling") returned wrong values with time
    aware window containing `NaN`. Raises `ValueError` because windows are not monotonic
    now ([GH 34617](https://github.com/pandas-dev/pandas/issues/34617))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Rolling.__iter__()` where a `ValueError` was not raised when `min_periods`
    was larger than `window` ([GH 37156](https://github.com/pandas-dev/pandas/issues/37156))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using [`Rolling.var()`](../reference/api/pandas.core.window.rolling.Rolling.var.html#pandas.core.window.rolling.Rolling.var
    "pandas.core.window.rolling.Rolling.var") instead of [`Rolling.std()`](../reference/api/pandas.core.window.rolling.Rolling.std.html#pandas.core.window.rolling.Rolling.std
    "pandas.core.window.rolling.Rolling.std") avoids numerical issues for [`Rolling.corr()`](../reference/api/pandas.core.window.rolling.Rolling.corr.html#pandas.core.window.rolling.Rolling.corr
    "pandas.core.window.rolling.Rolling.corr") when [`Rolling.var()`](../reference/api/pandas.core.window.rolling.Rolling.var.html#pandas.core.window.rolling.Rolling.var
    "pandas.core.window.rolling.Rolling.var") is still within floating point precision
    while [`Rolling.std()`](../reference/api/pandas.core.window.rolling.Rolling.std.html#pandas.core.window.rolling.Rolling.std
    "pandas.core.window.rolling.Rolling.std") is not ([GH 31286](https://github.com/pandas-dev/pandas/issues/31286))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`Resampler.quantile()`](../reference/api/pandas.core.resample.Resampler.quantile.html#pandas.core.resample.Resampler.quantile
    "pandas.core.resample.Resampler.quantile") raised `TypeError` when values were
    of type `Timedelta` ([GH 29485](https://github.com/pandas-dev/pandas/issues/29485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.median()`](../reference/api/pandas.core.window.rolling.Rolling.median.html#pandas.core.window.rolling.Rolling.median
    "pandas.core.window.rolling.Rolling.median") and [`Rolling.quantile()`](../reference/api/pandas.core.window.rolling.Rolling.quantile.html#pandas.core.window.rolling.Rolling.quantile
    "pandas.core.window.rolling.Rolling.quantile") returned wrong values for [`BaseIndexer`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer") subclasses with non-monotonic starting or ending
    points for windows ([GH 37153](https://github.com/pandas-dev/pandas/issues/37153))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") dropped `nan` groups from result with `dropna=False`
    when grouping over a single column ([GH 35646](https://github.com/pandas-dev/pandas/issues/35646),
    [GH 35542](https://github.com/pandas-dev/pandas/issues/35542))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.head()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.head.html#pandas.core.groupby.DataFrameGroupBy.head
    "pandas.core.groupby.DataFrameGroupBy.head"), `DataFrameGroupBy.tail()`, `SeriesGroupBy.head()`,
    and `SeriesGroupBy.tail()` would raise when used with `axis=1` ([GH 9772](https://github.com/pandas-dev/pandas/issues/9772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") would raise when used with `axis=1`
    and a transformation kernel (e.g. “shift”) ([GH 36308](https://github.com/pandas-dev/pandas/issues/36308))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.resample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.resample.html#pandas.core.groupby.DataFrameGroupBy.resample
    "pandas.core.groupby.DataFrameGroupBy.resample") using `.agg` with sum produced
    different result than just calling `.sum` ([GH 33548](https://github.com/pandas-dev/pandas/issues/33548))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") dropped values on `nan` group when
    returning the same axes with the original frame ([GH 38227](https://github.com/pandas-dev/pandas/issues/38227))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") couldn’t handle with arraylike
    `q` when grouping by columns ([GH 33795](https://github.com/pandas-dev/pandas/issues/33795))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.rank()` with `datetime64tz` or period dtype incorrectly
    casting results to those dtypes instead of returning `float64` dtype ([GH 38187](https://github.com/pandas-dev/pandas/issues/38187))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `DataFrame.crosstab()` was returning incorrect results on inputs with
    duplicate row names, duplicate column names or duplicate names between row and
    column labels ([GH 22529](https://github.com/pandas-dev/pandas/issues/22529))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") with `aggfunc='count'` or `aggfunc='sum'` returning
    `NaN` for missing categories when pivoted on a `Categorical`. Now returning `0`
    ([GH 31422](https://github.com/pandas-dev/pandas/issues/31422))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor where input index names are not preserved in some cases ([GH 13475](https://github.com/pandas-dev/pandas/issues/13475))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in func [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") when using multiple columns with `margins=True` and `normalize=True`
    ([GH 35144](https://github.com/pandas-dev/pandas/issues/35144))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") where an empty DataFrame.stack would raise an error
    ([GH 36113](https://github.com/pandas-dev/pandas/issues/36113)). Now returning
    an empty Series with empty MultiIndex.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack"). Now a Series with single level of Index trying to unstack
    would raise a `ValueError` ([GH 36113](https://github.com/pandas-dev/pandas/issues/36113))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") with `func={'name':<FUNC>}` incorrectly raising `TypeError`
    when `DataFrame.columns==['Name']` ([GH 36212](https://github.com/pandas-dev/pandas/issues/36212))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.transform()`](../reference/api/pandas.Series.transform.html#pandas.Series.transform
    "pandas.Series.transform") would give incorrect results or raise when the argument
    `func` was a dictionary ([GH 35811](https://github.com/pandas-dev/pandas/issues/35811))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") did not preserve [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") level names for columns when rows and columns are both multiindexed
    ([GH 36360](https://github.com/pandas-dev/pandas/issues/36360))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") modified `index` argument when `columns` was passed
    but `values` was not ([GH 37635](https://github.com/pandas-dev/pandas/issues/37635))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") returned a non deterministic level-order for the resulting
    [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    ([GH 36910](https://github.com/pandas-dev/pandas/issues/36910))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first") caused wrong alignment with dtype `string` and
    one level of `MultiIndex` containing only `NA` ([GH 37591](https://github.com/pandas-dev/pandas/issues/37591))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") on merging [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with empty DataFrame ([GH 36895](https://github.com/pandas-dev/pandas/issues/36895))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") not setting index of return value when `func` return
    type is `dict` ([GH 37544](https://github.com/pandas-dev/pandas/issues/37544))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") and [`pandas.merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") returning inconsistent ordering in result for `how=right` and
    `how=left` ([GH 35382](https://github.com/pandas-dev/pandas/issues/35382))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_ordered()`](../reference/api/pandas.merge_ordered.html#pandas.merge_ordered
    "pandas.merge_ordered") couldn’t handle list-like `left_by` or `right_by` ([GH
    35269](https://github.com/pandas-dev/pandas/issues/35269))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_ordered()`](../reference/api/pandas.merge_ordered.html#pandas.merge_ordered
    "pandas.merge_ordered") returned wrong join result when length of `left_by` or
    `right_by` equals to the rows of `left` or `right` ([GH 38166](https://github.com/pandas-dev/pandas/issues/38166))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_ordered()`](../reference/api/pandas.merge_ordered.html#pandas.merge_ordered
    "pandas.merge_ordered") didn’t raise when elements in `left_by` or `right_by`
    not exist in `left` columns or `right` columns ([GH 38167](https://github.com/pandas-dev/pandas/issues/38167))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.drop_duplicates()`](../reference/api/pandas.DataFrame.drop_duplicates.html#pandas.DataFrame.drop_duplicates
    "pandas.DataFrame.drop_duplicates") not validating bool dtype for `ignore_index`
    keyword ([GH 38274](https://github.com/pandas-dev/pandas/issues/38274))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fixed bug where [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") column set to scalar extension type via a dict instantiation
    was considered an object type rather than the extension type ([GH 35965](https://github.com/pandas-dev/pandas/issues/35965))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where `astype()` with equal dtype and `copy=False` would return a
    new object ([GH 28488](https://github.com/pandas-dev/pandas/issues/28488))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug when applying a NumPy ufunc with multiple outputs to an [`IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") returning `None` ([GH 36913](https://github.com/pandas-dev/pandas/issues/36913))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed an inconsistency in [`PeriodArray`](../reference/api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray")’s `__init__` signature to those of [`DatetimeArray`](../reference/api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") and [`TimedeltaArray`](../reference/api/pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray") ([GH 37289](https://github.com/pandas-dev/pandas/issues/37289))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reductions for [`BooleanArray`](../reference/api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray"), [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical"), [`DatetimeArray`](../reference/api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray"), [`FloatingArray`](../reference/api/pandas.arrays.FloatingArray.html#pandas.arrays.FloatingArray
    "pandas.arrays.FloatingArray"), [`IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray"), [`PeriodArray`](../reference/api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray"), [`TimedeltaArray`](../reference/api/pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray"), and `PandasArray` are now keyword-only methods
    ([GH 37541](https://github.com/pandas-dev/pandas/issues/37541))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed a bug where a `TypeError` was wrongly raised if a membership check was
    made on an `ExtensionArray` containing nan-like values ([GH 37867](https://github.com/pandas-dev/pandas/issues/37867))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") incorrectly raising an `AssertionError` instead of a
    `ValueError` when invalid parameter combinations are passed ([GH 36045](https://github.com/pandas-dev/pandas/issues/36045))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with numeric values and string `to_replace` ([GH 34789](https://github.com/pandas-dev/pandas/issues/34789))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed metadata propagation in [`Series.abs()`](../reference/api/pandas.Series.abs.html#pandas.Series.abs
    "pandas.Series.abs") and ufuncs called on Series and DataFrames ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") incorrectly casting from `PeriodDtype` to object dtype
    ([GH 34871](https://github.com/pandas-dev/pandas/issues/34871))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in metadata propagation incorrectly copying DataFrame columns as metadata
    when the column name overlaps with the metadata name ([GH 37037](https://github.com/pandas-dev/pandas/issues/37037))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed metadata propagation in the [`Series.dt`](../reference/api/pandas.Series.dt.html#pandas.Series.dt
    "pandas.Series.dt"), [`Series.str`](../reference/api/pandas.Series.str.html#pandas.Series.str
    "pandas.Series.str") accessors, [`DataFrame.duplicated`](../reference/api/pandas.DataFrame.duplicated.html#pandas.DataFrame.duplicated
    "pandas.DataFrame.duplicated"), [`DataFrame.stack`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack"), [`DataFrame.unstack`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack"), [`DataFrame.pivot`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot"), `DataFrame.append`, [`DataFrame.diff`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff"), [`DataFrame.applymap`](../reference/api/pandas.DataFrame.applymap.html#pandas.DataFrame.applymap
    "pandas.DataFrame.applymap") and [`DataFrame.update`](../reference/api/pandas.DataFrame.update.html#pandas.DataFrame.update
    "pandas.DataFrame.update") methods ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283),
    [GH 37381](https://github.com/pandas-dev/pandas/issues/37381))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed metadata propagation when selecting columns with `DataFrame.__getitem__`
    ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.intersection()`](../reference/api/pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection") with non-[`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") failing to set the correct name on the returned [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 38111](https://github.com/pandas-dev/pandas/issues/38111))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RangeIndex.intersection()` failing to set the correct name on the returned
    [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") in some
    corner cases ([GH 38197](https://github.com/pandas-dev/pandas/issues/38197))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.difference()`](../reference/api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference") failing to set the correct name on the returned [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") in some corner cases ([GH 38268](https://github.com/pandas-dev/pandas/issues/38268))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") behaving differently depending on whether operand is an
    [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") or other
    list-like ([GH 36384](https://github.com/pandas-dev/pandas/issues/36384))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.intersection()`](../reference/api/pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection") with non-matching numeric dtypes casting to `object`
    dtype instead of minimal common dtype ([GH 38122](https://github.com/pandas-dev/pandas/issues/38122))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.union()` returning an incorrectly-typed [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") when empty ([GH 38282](https://github.com/pandas-dev/pandas/issues/38282))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing an array with 2 or more dimensions to the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") constructor now raises the more specific `ValueError` rather
    than a bare `Exception` ([GH 35744](https://github.com/pandas-dev/pandas/issues/35744))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `dir` where `dir(obj)` wouldn’t show attributes defined on the instance
    for pandas objects ([GH 37173](https://github.com/pandas-dev/pandas/issues/37173))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.drop()`](../reference/api/pandas.Index.drop.html#pandas.Index.drop
    "pandas.Index.drop") raising `InvalidIndexError` when index has duplicates ([GH
    38051](https://github.com/pandas-dev/pandas/issues/38051))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RangeIndex.difference()` returning `Int64Index` in some cases where
    it should return [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") ([GH 38028](https://github.com/pandas-dev/pandas/issues/38028))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in `assert_series_equal()` when comparing a datetime-like array with
    an equivalent non extension dtype array ([GH 37609](https://github.com/pandas-dev/pandas/issues/37609))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`is_bool_dtype()`](../reference/api/pandas.api.types.is_bool_dtype.html#pandas.api.types.is_bool_dtype
    "pandas.api.types.is_bool_dtype") would raise when passed a valid string such
    as `"boolean"` ([GH 38386](https://github.com/pandas-dev/pandas/issues/38386))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in logical operators raising `ValueError` when columns of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") are a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") with unused categories ([GH 38367](https://github.com/pandas-dev/pandas/issues/38367))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Contributors'
  prefs: []
  type: TYPE_NORMAL
- en: A total of 257 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: 21CSM +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AbdulMAbdi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abhiraj Hinge +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abhishek Mangla +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abo7atm +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam Spannbauer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Albert Villanova del Moral
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Kirko
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Lim +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Thorne +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aleš Erjavec +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ali McMaster
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amanda Dsouza +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amim Knabben +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Wieteska
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anshoo Rajput +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anthony Milbourne
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arun12121 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Asish Mahapatra
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avinash Pancham +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: BeanNan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben Forbes +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brendan Wilby +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bruno Almeida +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Byron Boulton +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chankey Pathak
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Barnes +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Lynch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Withers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christoph Deil +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christopher Hadley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chuanzhu Xu
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Coelhudo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dan Moore
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Saxton
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Kwong +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Li +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Mrva +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deepak Pandey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deepyaman Datta
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Devin Petersohn
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dmitriy Perepelkin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Douglas Hanley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dāgs Grīnbergs +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eli Treuherz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Elliot Rampono +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Erfan Nariman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eric Goddard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eric Leung +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eric Wieser
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ethan Chen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eve +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eyal Trabelsi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fabian Gebhart +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fangchen Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Felix Claessen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finlay Maguire +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Florian Roscheck +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gabriel Monteiro
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gautham +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gerard Jorgensen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gregory Livschitz
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hans
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Harsh Sharma
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Honfung Wong +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Igor Gotlibovych +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Iqrar Agalosi Nureyza
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Irv Lustig
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Isaac Virshup
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jacob Peacock
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jacob Stevens-Haas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Müller +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Janus
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeet Parekh
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Hernandez +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jiaxiang
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joao Pedro Berno Zanutto +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joel Nothman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joel Whittier +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John Karasinski +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John McGuigan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Johnny Pribyl +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonas Laursen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonathan Shreckengost +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jose +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JoseNavy +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josh Temple +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jun Kudo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justin Essert
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justin Sexton +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kaiqi Dong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kamil Trocewicz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Karthik Mathur
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kashif +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kenny Huynh
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kumar Shivam +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leonardus Chen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Levi Matus +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lucas Rodés-Guirao +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luis Pinto +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lynch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Garcia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Gorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maria-Alexandra Ilie +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marian Denes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mark Graham +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Durant
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthias Bussonnier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maxim Ivanov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mayank Chaudhary +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MeeseeksMachine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Meghana Varanasi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metehan Kutlu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Micael Jarniac +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Micah Smith +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Marino
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Miroslav Šedivý
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mohammad Jafar Mashhadi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mohammed Kashif +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nagesh Kumar C +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nidhi Zare +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nikhil Choudhary +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Number42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oleh Kozynets +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OlivierLuG
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas Development Team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paolo Lammens +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul Ganssle
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pax +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter Liu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Philip Cerles +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pranjal Bhardwaj +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prayag Savsani +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Purushothaman Srikanth +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Qbiwan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rahul Chauhan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rahul Sathanapalli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rajat Bishnoi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ray Bell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshama Shaikh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Shadrach
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert Bradshaw
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert de Vries
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rohith295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: S Mono +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: S.TAKENO +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sahid Velji +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sam Cohen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sam Ezebunandu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sander +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sarthak +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sarthak Vineet Kumar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Satrio H Wicaksono +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scott Lasley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shao Yang Hong +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sharon Woo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shubham Mehra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Hawkins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sixuan (Cherie) Wu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Souris Ash +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steffen Rehberg
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Suvayu Ali
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sven
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SylvainLan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: T. JEGHAM +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terji Petersen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Dickson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Heavey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Smith
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tobias Pitters
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Augspurger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tomasz Sakrejda +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Torsten Wörtwein +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ty Mick +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: UrielMaD +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Uwe L. Korn
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vikramaditya Gaonkar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VirosaLi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: W.R +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Warren White +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wesley Boelrijk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Ayd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yanxian Lin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yassir Karroum +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yong Kai Yi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yuanhao Geng +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yury Mikhaylov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yutaro Ikeda
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yuya Takashina +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zach Brookler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zak Kohler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ZhihuiChen0903 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: abmyii
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alexhtn +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: asharma13524 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: attack68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: beanan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: chinhwee
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cleconte987
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: danchev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ebardie +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: edwardkong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: elliot rampono +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: estasney +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gabicca
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: geetha-rangaswamaiah +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gfyoung
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: guru kiran
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: hardikpnsp +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: icanhazcodeplz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ivanovmg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jeschwar
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jnecus
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: joooeey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: junk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: krajatcl +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lacrosse91 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: leo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lpkirwin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lrjball
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lucasrodes +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ma3da +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mavismonica +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mlondschien +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mzeitlin11 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nguevara +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nrebena
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: parkdj1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: partev
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: patrick
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: realead
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rxxg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: samilAyoub +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sanderland
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: shawnbrown
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sm1899 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: smartvinnetou
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ssortman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: steveya +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: taytzehao +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tiagohonorato +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: timhunderwood
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tkmz-n +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tnwei +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tpanza +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vineethraj510 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vmdhhh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: xinrong-databricks +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: yonas kassa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: yonashub +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ádám Lippai +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
