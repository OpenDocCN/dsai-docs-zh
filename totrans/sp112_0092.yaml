- en: scipy.fftpack.fftn
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fftpack.fftn.html#scipy.fftpack.fftn](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fftpack.fftn.html#scipy.fftpack.fftn)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return multidimensional discrete Fourier transform.
  prefs: []
  type: TYPE_NORMAL
- en: 'The returned array contains:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: where d = len(x.shape) and n = x.shape.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The (N-D) array to transform.
  prefs: []
  type: TYPE_NORMAL
- en: '**shape**int or array_like of ints or None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The shape of the result. If both *shape* and *axes* (see below) are None, *shape*
    is `x.shape`; if *shape* is None but *axes* is not None, then *shape* is `numpy.take(x.shape,
    axes, axis=0)`. If `shape[i] > x.shape[i]`, the ith dimension is padded with zeros.
    If `shape[i] < x.shape[i]`, the ith dimension is truncated to length `shape[i]`.
    If any element of *shape* is -1, the size of the corresponding dimension of *x*
    is used.
  prefs: []
  type: TYPE_NORMAL
- en: '**axes**int or array_like of ints or None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The axes of *x* (*y* if *shape* is not None) along which the transform is applied.
    The default is over all axes.
  prefs: []
  type: TYPE_NORMAL
- en: '**overwrite_x**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True, the contents of *x* can be destroyed. Default is False.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**y**complex-valued N-D NumPy array'
  prefs: []
  type: TYPE_NORMAL
- en: The (N-D) DFT of the input array.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`ifftn`](scipy.fftpack.ifftn.html#scipy.fftpack.ifftn "scipy.fftpack.ifftn")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: If `x` is real-valued, then `y[..., j_i, ...] == y[..., n_i-j_i, ...].conjugate()`.
  prefs: []
  type: TYPE_NORMAL
- en: Both single and double precision routines are implemented. Half precision inputs
    will be converted to single precision. Non-floating-point inputs will be converted
    to double precision. Long-double precision inputs are not supported.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
