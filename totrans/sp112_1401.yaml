- en: SciPy contributor guide
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SciPy贡献者指南
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/dev/contributor/contributor_toc.html](https://docs.scipy.org/doc/scipy-1.12.0/dev/contributor/contributor_toc.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/dev/contributor/contributor_toc.html](https://docs.scipy.org/doc/scipy-1.12.0/dev/contributor/contributor_toc.html)
- en: This guide is designed to help you quickly find the information you need about
    SciPy development after you’ve reviewed the introductory material in [Ways to
    Contribute](../hacking.html#hacking) or [Contributor quickstart guide](../dev_quickstart.html#dev-quickstart).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本指南旨在帮助您在查看了《贡献方式》[../hacking.html#hacking]或《贡献者快速入门指南》[../dev_quickstart.html#dev-quickstart]的入门材料后，快速找到关于SciPy开发的信息。
- en: 'You can also watch [SciPy Development Workflow](https://youtu.be/HgU01gJbzMY),
    a five-minute video example of fixing a bug and submitting a pull request (*note:
    this video is from 2018, so the build steps are different by now - the overall
    workflow is still the same though*).'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以观看[SciPy开发工作流程](https://youtu.be/HgU01gJbzMY)，这是一个修复错误并提交Pull请求的五分钟视频示例（*注意：此视频来自2018年，因此构建步骤现在已有所不同，但总体工作流程仍然相同*）。
- en: '[Building from source](../../building/index.html#building-from-source) - how
    to set up a development environment, including installing compilers and SciPy
    dependencies, cloning the SciPy repository on GitHub and updating git submodules,
    and using the `dev.py` interface for building and running tests.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[从源代码构建](../../building/index.html#building-from-source) - 如何设置开发环境，包括安装编译器和SciPy依赖项，在GitHub上克隆SciPy存储库并更新git子模块，并使用`dev.py`接口进行构建和运行测试。'
- en: '[Editing SciPy](#editing-scipy) - how to edit SciPy Python code, with tips
    on finding which module contains SciPy functionality to be edited, adding new
    modules to SciPy, and complying with PEP8 style standards'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[编辑SciPy](#editing-scipy) - 如何编辑SciPy Python代码，包括查找包含SciPy功能的模块、向SciPy添加新模块以及符合PEP8样式标准的技巧'
- en: '[Unit tests](#unit-tests) - how to write and run unit tests for SciPy with
    the pytest framework'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[单元测试](#unit-tests) - 如何使用pytest框架编写和运行SciPy的单元测试'
- en: '[Documentation](#docs) - how to write reStructuredText documentation that complies
    with docstring standards, build documentation locally with Sphinx, and view documentation
    built during continuous integration checks'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[文档](#docs) - 如何编写符合docstring标准的reStructuredText文档，本地使用Sphinx构建文档，并查看在持续集成检查期间构建的文档'
- en: '[Benchmarks](#toc-benchmarking) - how to benchmark code with airspeed velocity'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[基准测试](#toc-benchmarking) - 如何使用airspeed velocity对代码进行基准测试'
- en: '[Compiled code](#compiled-code) - how to add fast, compiled code to SciPy'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[编译代码](#compiled-code) - 如何将快速编译的代码添加到SciPy'
- en: '[Continuous Integration](continuous_integration.html#continuous-integration)
    - how does our continuous integration system works and how to debug your PR'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[持续集成](continuous_integration.html#continuous-integration) - 我们的持续集成系统是如何工作的以及如何调试您的PR'
- en: '## Editing SciPy'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '## 编辑SciPy'
- en: '[Development workflow](development_workflow.html#development-workflow) lays
    out what to do after your development environment is set up'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[开发工作流程](development_workflow.html#development-workflow) 描述了在设置完开发环境后应该做什么'
- en: '[PEP8 and SciPy](pep8.html#pep8-scipy) gives some tips for ensuring that your
    code is PEP8 compliant'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[PEP8和SciPy](pep8.html#pep8-scipy) 提供了确保您的代码符合PEP8规范的一些技巧'
- en: '[Git for development](../gitwash/gitwash.html#git-development) is a guide to
    using `git`, the distributed version-control system used to manage the changes
    made to SciPy code from around the world'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用于开发的Git](../gitwash/gitwash.html#git-development) 是使用`git`的指南，这是一个分布式版本控制系统，用于管理来自世界各地对SciPy代码所做的更改'
- en: '[SciPy API](../../reference/index.html#scipy-api) contains some important notes
    about how SciPy code is organized and documents the structure of the SciPy API;
    if you are going to import other SciPy code, read this first'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SciPy API](../../reference/index.html#scipy-api) 包含了关于SciPy代码组织方式的重要注释，并记录了SciPy
    API的结构；如果您打算导入其他SciPy代码，请先阅读本文。'
- en: '[Reviewing Pull Requests](reviewing_prs.html#reviewing-prs) explains how to
    review another author’s SciPy code locally'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[审查Pull请求](reviewing_prs.html#reviewing-prs) 解释了如何在本地审查其他作者的SciPy代码'
- en: '[Triaging and curating issues](../triage.html#triaging) explains how to curate
    issues and PRs, as well as how GitHub team permissions work for SciPy'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[问题分类和策划](../triage.html#triaging) 解释了如何策划问题和PR，并介绍了SciPy的GitHub团队权限工作方式'
- en: '[Adding New Methods, Functions, and Classes](adding_new.html#adding-new) has
    information on how to add new methods, functions and classes'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[添加新方法、函数和类](adding_new.html#adding-new) 包含了如何添加新方法、函数和类的信息'
- en: '[SciPy Core Developer Guide](../core-dev/index.html#core-dev-guide) has background
    information including how decisions are made and how a release is prepared; it’s
    geared toward [Core Developers](../governance.html#governance), but contains useful
    information for all contributors'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SciPy 核心开发者指南](../core-dev/index.html#core-dev-guide) 包括背景信息，包括如何做出决策和准备发布；面向[核心开发者](../governance.html#governance)，但对所有贡献者都包含有用信息'
- en: '[Code and Documentation Style Guide - The Missing Bits](../missing-bits.html#missing-bits)
    - code and documentation style guide  ## Unit tests'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[代码和文档风格指南 - 缺失的部分](../missing-bits.html#missing-bits) - 代码和文档风格指南  ## 单元测试'
- en: '[Testing guidelines](https://numpy.org/devdocs/reference/testing.html "(in
    NumPy v2.0.dev0)") is the definitive guide to writing unit tests of NumPy or SciPy
    code (part of the NumPy documentation)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[测试指南](https://numpy.org/devdocs/reference/testing.html "(在 NumPy v2.0.dev0
    中)") 是撰写 NumPy 或 SciPy 代码单元测试的权威指南（NumPy 文档的一部分）'
- en: '[Running SciPy Tests Locally](devpy_test.html#devpy-test) documents `dev.py
    test`, the command to build SciPy and run tests locally  ## Documentation'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在本地运行 SciPy 测试](devpy_test.html#devpy-test)记录了构建 SciPy 并在本地运行测试的命令 `dev.py
    test`  ## 文档'
- en: '[Documentation style](https://numpy.org/devdocs/dev/howto-docs.html#howto-document
    "(in NumPy v2.0.dev0)") contains everything you need to know about writing docstrings,
    which are rendered to produce HTML documentation using [Sphinx](http://www.sphinx-doc.org/en/master/)
    (part of the NumPy documentation)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[文档风格](https://numpy.org/devdocs/dev/howto-docs.html#howto-document "(在 NumPy
    v2.0.dev0 中)") 包含了撰写文档字符串的一切知识，这些文档字符串通过[Sphinx](http://www.sphinx-doc.org/en/master/)渲染为
    HTML 文档（NumPy 文档的一部分）'
- en: '[Contributing to the SciPy documentation](rendering_documentation.html#contributing-docs)
    contains information on how to contribute to the SciPy documentation'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[为 SciPy 文档做贡献](rendering_documentation.html#contributing-docs) 包含有关如何为 SciPy
    文档做出贡献的信息'
- en: '[Rendering documentation locally with Sphinx](rendering_documentation.html#rendering-documentation)
    it’s important to check how changes to the documentation render before merging
    a PR; this document explains how you can do that  ## Benchmarks'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在本地使用 Sphinx 渲染文档](rendering_documentation.html#rendering-documentation) 在合并
    PR 前检查文档如何渲染是非常重要的；本文档解释了您可以如何做到这一点  ## 基准测试'
- en: '[Benchmarking SciPy with airspeed velocity](benchmarking.html#benchmarking-with-asv)
    explains how to add benchmarks to SciPy using [airspeed velocity](https://asv.readthedocs.io/en/stable/)  ##
    Compiled code'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 airspeed velocity 对 SciPy 进行基准测试](benchmarking.html#benchmarking-with-asv)
    解释了如何使用[airspeed velocity](https://asv.readthedocs.io/en/stable/)为 SciPy 添加基准测试  ##
    编译代码'
- en: '[Adding Cython to SciPy](cython.html#adding-cython) extending and compiling
    Python code with [Cython](https://cython.org/) can significantly improve its performance;
    this document helps you get started'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[向 SciPy 添加 Cython](cython.html#adding-cython) 使用[Cython](https://cython.org/)扩展和编译Python代码可以显著提高其性能；本文档帮助您入门'
- en: '[Beyond Python](compiled_code.html#other-languages) discusses the use of C,
    C++, and Fortran code in SciPy'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[超越 Python](compiled_code.html#other-languages) 讨论了在 SciPy 中使用 C、C++ 和 Fortran
    代码的情况'
- en: '[Public Cython APIs](public_cython_api.html#public-cython-api) on guidelines
    on exposing public Cython APIs'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[公共 Cython API](public_cython_api.html#public-cython-api) 关于公开 Cython API 的指导方针'
