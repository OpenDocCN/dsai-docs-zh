- en: numpy.savez
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.savez.html](https://numpy.org/doc/1.26/reference/generated/numpy.savez.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Save several arrays into a single file in uncompressed `.npz` format.
  prefs: []
  type: TYPE_NORMAL
- en: 'Provide arrays as keyword arguments to store them under the corresponding name
    in the output file: `savez(fn, x=x, y=y)`.'
  prefs: []
  type: TYPE_NORMAL
- en: If arrays are specified as positional arguments, i.e., `savez(fn, x, y)`, their
    names will be *arr_0*, *arr_1*, etc.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**file**str or file'
  prefs: []
  type: TYPE_NORMAL
- en: Either the filename (string) or an open file (file-like object) where the data
    will be saved. If file is a string or a Path, the `.npz` extension will be appended
    to the filename if it is not already there.
  prefs: []
  type: TYPE_NORMAL
- en: '**args**Arguments, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Arrays to save to the file. Please use keyword arguments (see *kwds* below)
    to assign names to arrays. Arrays specified as args will be named “arr_0”, “arr_1”,
    and so on.
  prefs: []
  type: TYPE_NORMAL
- en: '**kwds**Keyword arguments, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Arrays to save to the file. Each array will be saved to the output file with
    its corresponding keyword name.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: None
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`save`](numpy.save.html#numpy.save "numpy.save")'
  prefs: []
  type: TYPE_NORMAL
- en: Save a single array to a binary file in NumPy format.
  prefs: []
  type: TYPE_NORMAL
- en: '[`savetxt`](numpy.savetxt.html#numpy.savetxt "numpy.savetxt")'
  prefs: []
  type: TYPE_NORMAL
- en: Save an array to a file as plain text.
  prefs: []
  type: TYPE_NORMAL
- en: '[`savez_compressed`](numpy.savez_compressed.html#numpy.savez_compressed "numpy.savez_compressed")'
  prefs: []
  type: TYPE_NORMAL
- en: Save several arrays into a compressed `.npz` archive
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The `.npz` file format is a zipped archive of files named after the variables
    they contain. The archive is not compressed and each file in the archive contains
    one variable in `.npy` format. For a description of the `.npy` format, see [`numpy.lib.format`](numpy.lib.format.html#module-numpy.lib.format
    "numpy.lib.format").
  prefs: []
  type: TYPE_NORMAL
- en: When opening the saved `.npz` file with [`load`](numpy.load.html#numpy.load
    "numpy.load") a *NpzFile* object is returned. This is a dictionary-like object
    which can be queried for its list of arrays (with the `.files` attribute), and
    for the arrays themselves.
  prefs: []
  type: TYPE_NORMAL
- en: Keys passed in *kwds* are used as filenames inside the ZIP archive. Therefore,
    keys should be valid filenames; e.g., avoid keys that begin with `/` or contain
    `.`.
  prefs: []
  type: TYPE_NORMAL
- en: When naming variables with keyword arguments, it is not possible to name a variable
    `file`, as this would cause the `file` argument to be defined twice in the call
    to `savez`.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Using [`savez`](#numpy.savez "numpy.savez") with *args, the arrays are saved
    with default names.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Using [`savez`](#numpy.savez "numpy.savez") with **kwds, the arrays are saved
    with the keyword names.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
