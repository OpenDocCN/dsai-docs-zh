- en: scipy.signal.lti
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lti.html#scipy.signal.lti](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lti.html#scipy.signal.lti)'
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lti.html#scipy.signal.lti](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lti.html#scipy.signal.lti)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lti.html#scipy.signal.lti](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lti.html#scipy.signal.lti)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Continuous-time linear time invariant system base class.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 连续时间线性时不变系统基类。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '***system**arguments'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '***system**arguments'
- en: 'The [`lti`](#scipy.signal.lti "scipy.signal.lti") class can be instantiated
    with either 2, 3 or 4 arguments. The following gives the number of arguments and
    the corresponding continuous-time subclass that is created:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[`lti`](#scipy.signal.lti "scipy.signal.lti") 类可以使用 2、3 或 4 个参数实例化。以下是参数数量及其对应的连续时间子类：'
- en: '2: [`TransferFunction`](scipy.signal.TransferFunction.html#scipy.signal.TransferFunction
    "scipy.signal.TransferFunction"): (numerator, denominator)'
  id: totrans-7
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '2: [`TransferFunction`](scipy.signal.TransferFunction.html#scipy.signal.TransferFunction
    "scipy.signal.TransferFunction")：（分子，分母）'
- en: ''
  id: totrans-8
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-9
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '3: [`ZerosPolesGain`](scipy.signal.ZerosPolesGain.html#scipy.signal.ZerosPolesGain
    "scipy.signal.ZerosPolesGain"): (zeros, poles, gain)'
  id: totrans-10
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '3: [`ZerosPolesGain`](scipy.signal.ZerosPolesGain.html#scipy.signal.ZerosPolesGain
    "scipy.signal.ZerosPolesGain")：（零点，极点，增益）'
- en: ''
  id: totrans-11
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-12
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '4: [`StateSpace`](scipy.signal.StateSpace.html#scipy.signal.StateSpace "scipy.signal.StateSpace"):
    (A, B, C, D)'
  id: totrans-13
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '4: [`StateSpace`](scipy.signal.StateSpace.html#scipy.signal.StateSpace "scipy.signal.StateSpace")：（A，B，C，D）'
- en: Each argument can be an array or a sequence.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 每个参数都可以是数组或序列。
- en: See also
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`ZerosPolesGain`](scipy.signal.ZerosPolesGain.html#scipy.signal.ZerosPolesGain
    "scipy.signal.ZerosPolesGain"), [`StateSpace`](scipy.signal.StateSpace.html#scipy.signal.StateSpace
    "scipy.signal.StateSpace"), [`TransferFunction`](scipy.signal.TransferFunction.html#scipy.signal.TransferFunction
    "scipy.signal.TransferFunction"), [`dlti`](scipy.signal.dlti.html#scipy.signal.dlti
    "scipy.signal.dlti")'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ZerosPolesGain`](scipy.signal.ZerosPolesGain.html#scipy.signal.ZerosPolesGain
    "scipy.signal.ZerosPolesGain")、[`StateSpace`](scipy.signal.StateSpace.html#scipy.signal.StateSpace
    "scipy.signal.StateSpace")、[`TransferFunction`](scipy.signal.TransferFunction.html#scipy.signal.TransferFunction
    "scipy.signal.TransferFunction")、[`dlti`](scipy.signal.dlti.html#scipy.signal.dlti
    "scipy.signal.dlti")'
- en: Notes
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: '[`lti`](#scipy.signal.lti "scipy.signal.lti") instances do not exist directly.
    Instead, [`lti`](#scipy.signal.lti "scipy.signal.lti") creates an instance of
    one of its subclasses: [`StateSpace`](scipy.signal.StateSpace.html#scipy.signal.StateSpace
    "scipy.signal.StateSpace"), [`TransferFunction`](scipy.signal.TransferFunction.html#scipy.signal.TransferFunction
    "scipy.signal.TransferFunction") or [`ZerosPolesGain`](scipy.signal.ZerosPolesGain.html#scipy.signal.ZerosPolesGain
    "scipy.signal.ZerosPolesGain").'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[`lti`](#scipy.signal.lti "scipy.signal.lti") 实例并不存在直接。相反，[`lti`](#scipy.signal.lti
    "scipy.signal.lti") 会创建其子类之一的实例：[`StateSpace`](scipy.signal.StateSpace.html#scipy.signal.StateSpace
    "scipy.signal.StateSpace")、[`TransferFunction`](scipy.signal.TransferFunction.html#scipy.signal.TransferFunction
    "scipy.signal.TransferFunction") 或 [`ZerosPolesGain`](scipy.signal.ZerosPolesGain.html#scipy.signal.ZerosPolesGain
    "scipy.signal.ZerosPolesGain")。'
- en: If (numerator, denominator) is passed in for `*system`, coefficients for both
    the numerator and denominator should be specified in descending exponent order
    (e.g., `s^2 + 3s + 5` would be represented as `[1, 3, 5]`).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果对于 `*system` 传入了（分子，分母），则分子和分母的系数都应以降幂顺序指定（例如，`s^2 + 3s + 5` 应表示为 `[1, 3,
    5]`）。
- en: Changing the value of properties that are not directly part of the current system
    representation (such as the [`zeros`](scipy.signal.lti.zeros.html#scipy.signal.lti.zeros
    "scipy.signal.lti.zeros") of a [`StateSpace`](scipy.signal.StateSpace.html#scipy.signal.StateSpace
    "scipy.signal.StateSpace") system) is very inefficient and may lead to numerical
    inaccuracies. It is better to convert to the specific system representation first.
    For example, call `sys = sys.to_zpk()` before accessing/changing the zeros, poles
    or gain.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 更改当前系统表示中不直接部分（如 [`StateSpace`](scipy.signal.StateSpace.html#scipy.signal.StateSpace
    "scipy.signal.StateSpace") 系统的 [`zeros`](scipy.signal.lti.zeros.html#scipy.signal.lti.zeros
    "scipy.signal.lti.zeros")）的属性值非常低效且可能导致数值不准确。最好在访问/更改零点、极点或增益之前先转换为特定系统表示。例如，在访问/更改零点、极点或增益之前调用
    `sys = sys.to_zpk()`。
- en: Examples
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Construct the transfer function \(H(s) = \frac{5(s - 1)(s - 2)}{(s - 3)(s -
    4)}\):'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 构建传递函数 \(H(s) = \frac{5(s - 1)(s - 2)}{(s - 3)(s - 4)}\)：
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Construct the transfer function \(H(s) = \frac{3s + 4}{1s + 2}\):'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 构建传递函数 \(H(s) = \frac{3s + 4}{1s + 2}\)：
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Attributes:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 属性：
- en: '[`dt`](scipy.signal.lti.dt.html#scipy.signal.lti.dt "scipy.signal.lti.dt")'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dt`](scipy.signal.lti.dt.html#scipy.signal.lti.dt "scipy.signal.lti.dt")'
- en: Return the sampling time of the system, *None* for [`lti`](#scipy.signal.lti
    "scipy.signal.lti") systems.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 返回系统的采样时间，对于 [`lti`](#scipy.signal.lti "scipy.signal.lti") 系统返回 *None*。
- en: '[`poles`](scipy.signal.lti.poles.html#scipy.signal.lti.poles "scipy.signal.lti.poles")'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[`poles`](scipy.signal.lti.poles.html#scipy.signal.lti.poles "scipy.signal.lti.poles")'
- en: Poles of the system.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 系统的极点。
- en: '[`zeros`](scipy.signal.lti.zeros.html#scipy.signal.lti.zeros "scipy.signal.lti.zeros")'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[`zeros`](scipy.signal.lti.zeros.html#scipy.signal.lti.zeros "scipy.signal.lti.zeros")'
- en: Zeros of the system.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 系统的零点。
- en: Methods
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`bode`](scipy.signal.lti.bode.html#scipy.signal.lti.bode "scipy.signal.lti.bode")([w, n])
    | Calculate Bode magnitude and phase data of a continuous-time system. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| [`bode`](scipy.signal.lti.bode.html#scipy.signal.lti.bode "scipy.signal.lti.bode")([w, n])
    | 计算连续时间系统的 Bode 幅值和相位数据。'
- en: '| [`freqresp`](scipy.signal.lti.freqresp.html#scipy.signal.lti.freqresp "scipy.signal.lti.freqresp")([w, n])
    | Calculate the frequency response of a continuous-time system. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| [`freqresp`](scipy.signal.lti.freqresp.html#scipy.signal.lti.freqresp "scipy.signal.lti.freqresp")([w, n])
    | 计算连续时间系统的频率响应。'
- en: '| [`impulse`](scipy.signal.lti.impulse.html#scipy.signal.lti.impulse "scipy.signal.lti.impulse")([X0, T, N])
    | Return the impulse response of a continuous-time system. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| [`impulse`](scipy.signal.lti.impulse.html#scipy.signal.lti.impulse "scipy.signal.lti.impulse")([X0, T, N])
    | 返回连续时间系统的冲激响应。'
- en: '| [`output`](scipy.signal.lti.output.html#scipy.signal.lti.output "scipy.signal.lti.output")(U, T[, X0])
    | Return the response of a continuous-time system to input *U*. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [`output`](scipy.signal.lti.output.html#scipy.signal.lti.output "scipy.signal.lti.output")(U, T[, X0])
    | 返回连续时间系统对输入 *U* 的响应。'
- en: '| [`step`](scipy.signal.lti.step.html#scipy.signal.lti.step "scipy.signal.lti.step")([X0, T, N])
    | Return the step response of a continuous-time system. |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| [`step`](scipy.signal.lti.step.html#scipy.signal.lti.step "scipy.signal.lti.step")([X0, T, N])
    | 返回连续时间系统的阶跃响应。'
- en: '| [`to_discrete`](scipy.signal.lti.to_discrete.html#scipy.signal.lti.to_discrete
    "scipy.signal.lti.to_discrete")(dt[, method, alpha]) | Return a discretized version
    of the current system. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| [`to_discrete`](scipy.signal.lti.to_discrete.html#scipy.signal.lti.to_discrete
    "scipy.signal.lti.to_discrete")(dt[, method, alpha]) | 返回当前系统的离散化版本。'
