- en: scipy.interpolate.spalde
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.spalde.html#scipy.interpolate.spalde](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.spalde.html#scipy.interpolate.spalde)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Evaluate all derivatives of a B-spline.
  prefs: []
  type: TYPE_NORMAL
- en: Given the knots and coefficients of a cubic B-spline compute all derivatives
    up to order k at a point (or set of points).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: A point or a set of points at which to evaluate the derivatives. Note that `t(k)
    <= x <= t(n-k+1)` must hold for each *x*.
  prefs: []
  type: TYPE_NORMAL
- en: '**tck**tuple'
  prefs: []
  type: TYPE_NORMAL
- en: A tuple (t,c,k) containing the vector of knots, the B-spline coefficients, and
    the degree of the spline.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**results**{ndarray, list of ndarrays}'
  prefs: []
  type: TYPE_NORMAL
- en: An array (or a list of arrays) containing all derivatives up to order k inclusive
    for each point *x*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`splprep`](scipy.interpolate.splprep.html#scipy.interpolate.splprep "scipy.interpolate.splprep"),
    [`splrep`](scipy.interpolate.splrep.html#scipy.interpolate.splrep "scipy.interpolate.splrep"),
    [`splint`](scipy.interpolate.splint.html#scipy.interpolate.splint "scipy.interpolate.splint"),
    [`sproot`](scipy.interpolate.sproot.html#scipy.interpolate.sproot "scipy.interpolate.sproot"),
    [`splev`](scipy.interpolate.splev.html#scipy.interpolate.splev "scipy.interpolate.splev"),
    [`bisplrep`](scipy.interpolate.bisplrep.html#scipy.interpolate.bisplrep "scipy.interpolate.bisplrep"),
    [`bisplev`](scipy.interpolate.bisplev.html#scipy.interpolate.bisplev "scipy.interpolate.bisplev")'
  prefs: []
  type: TYPE_NORMAL
- en: '[`UnivariateSpline`](scipy.interpolate.UnivariateSpline.html#scipy.interpolate.UnivariateSpline
    "scipy.interpolate.UnivariateSpline"), [`BivariateSpline`](scipy.interpolate.BivariateSpline.html#scipy.interpolate.BivariateSpline
    "scipy.interpolate.BivariateSpline")'
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1]'
  prefs: []
  type: TYPE_NORMAL
- en: 'de Boor C : On calculating with b-splines, J. Approximation Theory 6 (1972)
    50-62.'
  prefs: []
  type: TYPE_NORMAL
- en: '[2]'
  prefs: []
  type: TYPE_NORMAL
- en: 'Cox M.G. : The numerical evaluation of b-splines, J. Inst. Maths applics 10
    (1972) 134-149.'
  prefs: []
  type: TYPE_NORMAL
- en: '[3]'
  prefs: []
  type: TYPE_NORMAL
- en: 'Dierckx P. : Curve and surface fitting with splines, Monographs on Numerical
    Analysis, Oxford University Press, 1993.'
  prefs: []
  type: TYPE_NORMAL
