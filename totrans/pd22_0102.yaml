- en: pandas.read_stata
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.read_stata.html](https://pandas.pydata.org/docs/reference/api/pandas.read_stata.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Read Stata file into DataFrame.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '**filepath_or_buffer**str, path object or file-like object'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: 'Any valid string path is acceptable. The string could be a URL. Valid URL schemes
    include http, ftp, s3, and file. For file URLs, a host is expected. A local file
    could be: `file://localhost/path/to/table.dta`.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: If you want to pass in a path object, pandas accepts any `os.PathLike`.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: By file-like object, we refer to objects with a `read()` method, such as a file
    handle (e.g. via builtin `open` function) or `StringIO`.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '**convert_dates**bool, default True'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: Convert date variables to DataFrame time values.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '**convert_categoricals**bool, default True'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: Read value labels and convert columns to Categorical/Factor variables.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: '**index_col**str, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: Column to set as index.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: '**convert_missing**bool, default False'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: Flag indicating whether to convert missing values to their Stata representations.
    If False, missing values are replaced with nan. If True, columns containing missing
    values are returned with object data types and missing values are represented
    by StataMissingValue objects.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '**preserve_dtypes**bool, default True'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: Preserve Stata datatypes. If False, numeric data are upcast to pandas default
    types for foreign data (float64 or int64).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: '**columns**list or None'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: Columns to retain. Columns will be returned in the given order. None returns
    all columns.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: '**order_categoricals**bool, default True'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: Flag indicating whether converted categorical data are ordered.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: '**chunksize**int, default None'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: Return StataReader object for iterations, returns chunks with given number of
    lines.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: '**iterator**bool, default False'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: Return StataReader object.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: '**compression**str or dict, default ‘infer’'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: 'For on-the-fly decompression of on-disk data. If ‘infer’ and ‘filepath_or_buffer’
    is path-like, then detect compression from the following extensions: ‘.gz’, ‘.bz2’,
    ‘.zip’, ‘.xz’, ‘.zst’, ‘.tar’, ‘.tar.gz’, ‘.tar.xz’ or ‘.tar.bz2’ (otherwise no
    compression). If using ‘zip’ or ‘tar’, the ZIP file must contain only one data
    file to be read in. Set to `None` for no decompression. Can also be a dict with
    key `''method''` set to one of {`''zip''`, `''gzip''`, `''bz2''`, `''zstd''`,
    `''xz''`, `''tar''`} and other key-value pairs are forwarded to `zipfile.ZipFile`,
    `gzip.GzipFile`, `bz2.BZ2File`, `zstandard.ZstdDecompressor`, `lzma.LZMAFile`
    or `tarfile.TarFile`, respectively. As an example, the following could be passed
    for Zstandard decompression using a custom compression dictionary: `compression={''method'':
    ''zstd'', ''dict_data'': my_compression_dict}`.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: 'New in version 1.5.0: Added support for .tar files.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '**storage_options**dict, optional'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: Extra options that make sense for a particular storage connection, e.g. host,
    port, username, password, etc. For HTTP(S) URLs the key-value pairs are forwarded
    to `urllib.request.Request` as header options. For other URLs (e.g. starting with
    “s3://”, and “gcs://”) the key-value pairs are forwarded to `fsspec.open`. Please
    see `fsspec` and `urllib` for more details, and for more examples on storage options
    refer [here](https://pandas.pydata.org/docs/user_guide/io.html?highlight=storage_options#reading-writing-remote-files).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 适用于特定存储连接的额外选项，例如主机、端口、用户名、密码等。对于 HTTP(S) URL，键值对将作为标头选项转发给`urllib.request.Request`。对于其他
    URL（例如以“s3://”和“gcs://”开头的 URL），键值对将转发给`fsspec.open`。请参阅`fsspec`和`urllib`以获取更多详细信息，并查看[此处](https://pandas.pydata.org/docs/user_guide/io.html?highlight=storage_options#reading-writing-remote-files)有关存储选项的更多示例。
- en: 'Returns:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: DataFrame or pandas.api.typing.StataReader
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: DataFrame 或 pandas.api.typing.StataReader
- en: See also
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '`io.stata.StataReader`'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`io.stata.StataReader`'
- en: Low-level reader for Stata data files.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 用于读取 Stata 数据文件的低级读取器。
- en: '[`DataFrame.to_stata`](pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata")'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.to_stata`](pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata")'
- en: Export Stata data files.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 导出 Stata 数据文件。
- en: Notes
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: Categorical variables read through an iterator may not have the same categories
    and dtype. This occurs when a variable stored in a DTA file is associated to an
    incomplete set of value labels that only label a strict subset of the values.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 通过迭代器读取的分类变量可能没有相同的类别和数据类型。当存储在 DTA 文件中的变量与仅标记值的不完整集合相关联时，就会发生这种情况。
- en: Examples
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: Creating a dummy stata for this example
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 为此示例创建一个虚拟 stata
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Read a Stata dta file:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 读取 Stata dta 文件：
- en: '[PRE2]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Read a Stata dta file in 10,000 line chunks:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 以 10,000 行块读取 Stata dta 文件：
- en: '[PRE3]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
