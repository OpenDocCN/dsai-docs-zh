- en: Represent
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表示
- en: Original text：[https://docs.sympy.org/latest/modules/physics/quantum/represent.html](https://docs.sympy.org/latest/modules/physics/quantum/represent.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.sympy.org/latest/modules/physics/quantum/represent.html](https://docs.sympy.org/latest/modules/physics/quantum/represent.html)
- en: Logic for representing operators in state in various bases.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 用于在各种基底中表示状态操作符的逻辑。
- en: 'TODO:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 'TODO:'
- en: Get represent working with continuous hilbert spaces.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获得与连续希尔伯特空间一起工作的表示工作。
- en: Document default basis functionality.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档默认基础功能。
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Returns instances of the given state with dummy indices appended
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 返回附加了虚指数的给定状态的实例
- en: 'Operates in two different modes:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在两种不同的模式下运行：
- en: Two arguments are passed to it. The first is the base state which is to be indexed,
    and the second argument is a list of indices to append.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 传递了两个参数。第一个是要索引的基态，第二个参数是要附加的索引列表。
- en: Three arguments are passed. The first is again the base state to be indexed.
    The second is the start index for counting. The final argument is the number of
    kets you wish to receive.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 传递了三个参数。第一个再次是要索引的基态。第二个是计数的起始索引。最后一个参数是您希望接收的ket的数量。
- en: Tries to call state._enumerate_state. If this fails, returns an empty list
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试调用state._enumerate_state。如果失败，则返回一个空列表
- en: 'Parameters:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**args** : list'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**args** : 列表'
- en: See list of operation modes above for explanation
  id: totrans-14
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 查看上面的操作模式列表以获取解释
- en: Examples
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Returns a basis state instance corresponding to the basis specified in options=s.
    If no basis is specified, the function tries to form a default basis state of
    the given expression.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与options=s中指定的基础相对应的基态实例。如果未指定基础，则函数尝试形成给定表达式的默认基态。
- en: 'There are three behaviors:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 有三种行为：
- en: The basis specified in options is already an instance of StateBase. If this
    is the case, it is simply returned. If the class is specified but not an instance,
    a default instance is returned.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在选项中指定的基础已经是StateBase的实例。如果是这种情况，则简单地返回。如果指定了类但不是实例，则返回默认实例。
- en: The basis specified is an operator or set of operators. If this is the case,
    the operator_to_state mapping method is used.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指定的基础是操作符或一组操作符。如果是这种情况，则使用operator_to_state映射方法。
- en: No basis is specified. If expr is a state, then a default instance of its class
    is returned. If expr is an operator, then it is mapped to the corresponding state.
    If it is neither, then we cannot obtain the basis state.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 没有指定基底。如果expr是一个状态，则返回其类的默认实例。如果expr是一个操作符，则将其映射到相应的状态。如果它既不是，则无法获得基态。
- en: If the basis cannot be mapped, then it is not changed.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果无法映射基础，则不会更改。
- en: This will be called from within represent, and represent will only pass QExpr’s.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这将从represent内部调用，并且represent将只传递QExpr。
- en: 'TODO (?): Support for Muls and other types of expressions?'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 'TODO (?): 支持Muls和其他类型的表达式？'
- en: 'Parameters:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**expr** : Operator or StateBase'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**expr** : 操作符或StateBase'
- en: Expression whose basis is sought
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 寻求其基底的表达式
- en: Examples
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Returns the result of integrating over any unities `(|x><x|)` in the given expression.
    Intended for integrating over the result of representations in continuous bases.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 返回在给定表达式中积分任何unities `(|x><x|)` 的结果。用于在连续基底中积分表示的结果。
- en: This function integrates over any unities that may have been inserted into the
    quantum expression and returns the result. It uses the interval of the Hilbert
    space of the basis state passed to it in order to figure out the limits of integration.
    The unities option must be specified for this to work.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数在量子表达式中插入任何unities后进行积分并返回结果。它使用传递给它的基态的希尔伯特空间的区间来确定积分的限制。必须为此指定unities选项才能工作。
- en: 'Note: This is mostly used internally by represent(). Examples are given merely
    to show the use cases.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：这主要是由represent()在内部使用。示例仅用于展示用例。
- en: 'Parameters:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**orig_expr** : quantum expression'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**orig_expr** : 量子表达式'
- en: The original expression which was to be represented
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 最初要表示的表达式
- en: '**result: Expr**'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**result: Expr**'
- en: The resulting representation that we wish to integrate over
  id: totrans-39
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们希望对其进行积分的结果表示
- en: Examples
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE5]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Returns an `<x'|A|x>` type representation for the given operator.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 返回给定操作符的 `<x'|A|x>` 类型表示。
- en: 'Parameters:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**expr** : Operator'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**expr** : 操作符'
- en: Operator to be represented in the specified basis
  id: totrans-46
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 要在指定基础上表示的操作符
- en: Examples
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE7]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Returns an innerproduct like representation (e.g. `<x'|x>`) for the given state.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 返回给定状态的内积表示（例如 `<x'|x>`）。
- en: Attempts to calculate inner product with a bra from the specified basis. Should
    only be passed an instance of KetBase or BraBase
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试计算与来自指定基组的 bra 的内积。只应传递 KetBase 或 BraBase 的实例。
- en: 'Parameters:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**expr** : KetBase or BraBase'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**expr**：KetBase 或 BraBase'
- en: The expression to be represented
  id: totrans-54
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 要表示的表达式
- en: Examples
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE9]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Represent the quantum expression in the given basis.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在给定基组中表示量子表达式。
- en: 'In quantum mechanics abstract states and operators can be represented in various
    basis sets. Under this operation the follow transforms happen:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在量子力学中，抽象状态和算符可以在各种基组中表示。在此操作下，发生以下转换：
- en: Ket -> column vector or function
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ket -> 列向量或函数
- en: Bra -> row vector of function
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bra -> 行向量或函数
- en: Operator -> matrix or differential operator
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Operator -> 矩阵或微分算符
- en: This function is the top-level interface for this action.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数是此操作的顶级接口。
- en: 'This function walks the SymPy expression tree looking for `QExpr` instances
    that have a `_represent` method. This method is then called and the object is
    replaced by the representation returned by this method. By default, the `_represent`
    method will dispatch to other methods that handle the representation logic for
    a particular basis set. The naming convention for these methods is the following:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数遍历 SymPy 表达式树，查找具有 `_represent` 方法的 `QExpr` 实例。然后调用此方法，并用此方法返回的表示形式替换对象。默认情况下，`_represent`
    方法将分派到处理特定基组表示逻辑的其他方法。这些方法的命名约定如下：
- en: '[PRE11]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This function will have the logic for representing instances of its class in
    the basis set having a class named `FooBasis`.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数将具有在名为 `FooBasis` 的类中具有基组集的类的实例的表示逻辑。
- en: 'Parameters:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**expr** : Expr'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**expr**：Expr'
- en: The expression to represent.
  id: totrans-69
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 要表示的表达式。
- en: '**basis** : Operator, basis set'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**basis**：Operator，基组集'
- en: An object that contains the information about the basis set. If an operator
    is used, the basis is assumed to be the orthonormal eigenvectors of that operator.
    In general though, the basis argument can be any object that contains the basis
    set information.
  id: totrans-71
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 包含有关基组的信息的对象。如果使用操作符，则假定基组是该操作符的标准正交特征向量。尽管如此，基组参数通常可以是包含基组信息的任何对象。
- en: '**options** : dict'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**options**：dict'
- en: Key/value pairs of options that are passed to the underlying method that finds
    the representation. These options can be used to control how the representation
    is done. For example, this is where the size of the basis set would be set.
  id: totrans-73
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 传递给找到表示形式的基础方法的选项的键/值对。可以使用这些选项来控制如何进行表示。例如，这里可以设置基组大小。
- en: 'Returns:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**e** : Expr'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**e**：Expr'
- en: The SymPy expression of the represented quantum expression.
  id: totrans-76
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 表示的量子表达式的 SymPy 表达式。
- en: Examples
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: Here we subclass `Operator` and `Ket` to create the z-spin operator and its
    spin 1/2 up eigenstate. By defining the `_represent_SzOp` method, the ket can
    be represented in the z-spin basis.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们子类化 `Operator` 和 `Ket` 来创建 z 自旋算符及其自旋 1/2 上的本征态。通过定义 `_represent_SzOp`
    方法，可以在 z 自旋基组中表示这个 ket。
- en: '[PRE12]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Here we see an example of representations in a continuous basis. We see that
    the result of representing various combinations of cartesian position operators
    and kets give us continuous expressions involving DiracDelta functions.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们看到在连续基组中的表示示例。我们看到代表笛卡尔位置算符和 ket 的各种组合的结果，给出了涉及 DiracDelta 函数的连续表达式。
- en: '[PRE14]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
