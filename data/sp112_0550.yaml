- en: scipy.signal.firwin2
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.signal.firwin2
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.firwin2.html#scipy.signal.firwin2](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.firwin2.html#scipy.signal.firwin2)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.firwin2.html#scipy.signal.firwin2](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.firwin2.html#scipy.signal.firwin2)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: FIR filter design using the window method.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 使用窗口方法设计 FIR 滤波器。
- en: From the given frequencies *freq* and corresponding gains *gain*, this function
    constructs an FIR filter with linear phase and (approximately) the given frequency
    response.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 根据给定的频率 *freq* 和相应的增益 *gain*，此函数构造具有线性相位和（近似）给定频率响应的 FIR 滤波器。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**numtaps**int'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**numtaps**int'
- en: The number of taps in the FIR filter. *numtaps* must be less than *nfreqs*.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: FIR 滤波器中的 taps 数。*numtaps* 必须小于 *nfreqs*。
- en: '**freq**array_like, 1-D'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**freq**array_like, 1-D'
- en: The frequency sampling points. Typically 0.0 to 1.0 with 1.0 being Nyquist.
    The Nyquist frequency is half *fs*. The values in *freq* must be nondecreasing.
    A value can be repeated once to implement a discontinuity. The first value in
    *freq* must be 0, and the last value must be `fs/2`. Values 0 and `fs/2` must
    not be repeated.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 频率采样点。通常为 0.0 到 1.0，其中 1.0 为奈奎斯特。奈奎斯特频率是 *fs* 的一半。 *freq* 中的值必须是非递减的。一个值可以重复一次以实现不连续性。
    *freq* 中的第一个值必须为 0，最后一个值必须为 `fs/2`。值 0 和 `fs/2` 不得重复。
- en: '**gain**array_like'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**gain**array_like'
- en: The filter gains at the frequency sampling points. Certain constraints to gain
    values, depending on the filter type, are applied, see Notes for details.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 频率采样点处的滤波器增益。根据滤波器类型应用某些增益值的约束条件，请参阅备注以获取详细信息。
- en: '**nfreqs**int, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**nfreqs**int, optional'
- en: The size of the interpolation mesh used to construct the filter. For most efficient
    behavior, this should be a power of 2 plus 1 (e.g, 129, 257, etc). The default
    is one more than the smallest power of 2 that is not less than *numtaps*. *nfreqs*
    must be greater than *numtaps*.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 用于构建滤波器的插值网格的大小。为了实现最有效的行为，这应该是一个2的幂加1（例如129, 257等）。默认值为大于等于 *numtaps* 的最小2的幂加1。*nfreqs*
    必须大于 *numtaps*。
- en: '**window**string or (string, float) or float, or None, optional'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**window**string or (string, float) or float, or None, optional'
- en: Window function to use. Default is “hamming”. See [`scipy.signal.get_window`](scipy.signal.get_window.html#scipy.signal.get_window
    "scipy.signal.get_window") for the complete list of possible values. If None,
    no window function is applied.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用的窗口函数。默认值为“hamming”。参见 [`scipy.signal.get_window`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.get_window.html#scipy.signal.get_window
    "scipy.signal.get_window") 获取可能值的完整列表。如果为 None，则不应用窗口函数。
- en: '**nyq**float, optional, deprecated'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**nyq**float, optional, deprecated'
- en: This is the Nyquist frequency. Each frequency in *freq* must be between 0 and
    *nyq*. Default is 1.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这是奈奎斯特频率。 *freq* 中的每个频率必须在 0 和 *nyq* 之间。默认值为 1。
- en: 'Deprecated since version 1.0.0: [`firwin2`](#scipy.signal.firwin2 "scipy.signal.firwin2")
    keyword argument *nyq* is deprecated in favour of *fs* and will be removed in
    SciPy 1.14.0.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 自 1.0.0 版本起已弃用：[`firwin2`](#scipy.signal.firwin2 "scipy.signal.firwin2") 关键字参数
    *nyq* 已弃用，改为使用 *fs*，将在 SciPy 1.14.0 中删除。
- en: '**antisymmetric**bool, optional'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**antisymmetric**bool, optional'
- en: Whether resulting impulse response is symmetric/antisymmetric. See Notes for
    more details.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 结果脉冲响应是否对称/反对称。更多细节请参见备注。
- en: '**fs**float, optional'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**fs**float, optional'
- en: The sampling frequency of the signal. Each frequency in *cutoff* must be between
    0 and `fs/2`. Default is 2.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 信号的采样频率。 *cutoff* 中的每个频率必须在 0 和 `fs/2` 之间。默认值为 2。
- en: 'Returns:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**taps**ndarray'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**taps**ndarray'
- en: The filter coefficients of the FIR filter, as a 1-D array of length *numtaps*.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: FIR 滤波器的滤波器系数，作为长度为 *numtaps* 的1-D数组。
- en: See also
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`firls`](scipy.signal.firls.html#scipy.signal.firls "scipy.signal.firls")'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[`firls`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.firls.html#scipy.signal.firls
    "scipy.signal.firls")'
- en: '[`firwin`](scipy.signal.firwin.html#scipy.signal.firwin "scipy.signal.firwin")'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[`firwin`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.firwin.html#scipy.signal.firwin
    "scipy.signal.firwin")'
- en: '[`minimum_phase`](scipy.signal.minimum_phase.html#scipy.signal.minimum_phase
    "scipy.signal.minimum_phase")'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[`minimum_phase`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.minimum_phase.html#scipy.signal.minimum_phase
    "scipy.signal.minimum_phase")'
- en: '[`remez`](scipy.signal.remez.html#scipy.signal.remez "scipy.signal.remez")'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[`remez`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.remez.html#scipy.signal.remez
    "scipy.signal.remez")'
- en: Notes
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 备注
- en: From the given set of frequencies and gains, the desired response is constructed
    in the frequency domain. The inverse FFT is applied to the desired response to
    create the associated convolution kernel, and the first *numtaps* coefficients
    of this kernel, scaled by *window*, are returned.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 从给定的频率和增益集合中，在频率域中构造所需的响应。将逆 FFT 应用于所需的响应以创建相关的卷积核，并返回此卷积核的前 *numtaps* 系数，按
    *window* 缩放。
- en: 'The FIR filter will have linear phase. The type of filter is determined by
    the value of ‘numtaps` and *antisymmetric* flag. There are four possible combinations:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: FIR 滤波器将具有线性相位。滤波器的类型由 `numtaps` 的值和 *antisymmetric* 标志确定。有四种可能的组合：
- en: odd *numtaps*, *antisymmetric* is False, type I filter is produced
  id: totrans-34
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 即使 *numtaps* 为奇数，*antisymmetric* 为 False，生成类型 I 滤波器。
- en: ''
  id: totrans-35
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-36
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: even *numtaps*, *antisymmetric* is False, type II filter is produced
  id: totrans-37
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 即使 *numtaps* 为偶数，*antisymmetric* 为 False，生成类型 II 滤波器。
- en: ''
  id: totrans-38
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-39
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: odd *numtaps*, *antisymmetric* is True, type III filter is produced
  id: totrans-40
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 即使 *numtaps* 为奇数，*antisymmetric* 为 True，生成类型 III 滤波器。
- en: ''
  id: totrans-41
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-42
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: even *numtaps*, *antisymmetric* is True, type IV filter is produced
  id: totrans-43
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 即使 *numtaps* 为偶数，*antisymmetric* 为 True，生成类型 IV 滤波器。
- en: 'Magnitude response of all but type I filters are subjects to following constraints:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 除了类型 I 滤波器外，所有滤波器的幅度响应都受以下约束的影响：
- en: type II – zero at the Nyquist frequency
  id: totrans-45
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类型 II – 零频率处为 Nyquist 频率。
- en: ''
  id: totrans-46
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-47
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: type III – zero at zero and Nyquist frequencies
  id: totrans-48
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类型 III – 零频率和 Nyquist 频率处为零。
- en: ''
  id: totrans-49
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-50
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: type IV – zero at zero frequency
  id: totrans-51
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类型 IV – 零频率处为零。
- en: New in version 0.9.0.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本为 0.9.0。
- en: References
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1]'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '[1]'
- en: Oppenheim, A. V. and Schafer, R. W., “Discrete-Time Signal Processing”, Prentice-Hall,
    Englewood Cliffs, New Jersey (1989). (See, for example, Section 7.4.)
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Oppenheim, A. V. 和 Schafer, R. W.，“Discrete-Time Signal Processing”，Prentice-Hall，Englewood
    Cliffs，New Jersey（1989）。（例如，参见第 7.4 节。）
- en: '[2]'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '[2]'
- en: Smith, Steven W., “The Scientist and Engineer’s Guide to Digital Signal Processing”,
    Ch. 17\. [http://www.dspguide.com/ch17/1.htm](http://www.dspguide.com/ch17/1.htm)
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Smith, Steven W.，“The Scientist and Engineer’s Guide to Digital Signal Processing”，第
    17 章。[http://www.dspguide.com/ch17/1.htm](http://www.dspguide.com/ch17/1.htm)
- en: Examples
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'A lowpass FIR filter with a response that is 1 on [0.0, 0.5], and that decreases
    linearly on [0.5, 1.0] from 1 to 0:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 一个低通 FIR 滤波器，其响应在 [0.0, 0.5] 上为 1，并且在 [0.5, 1.0] 上从 1 线性减少到 0：
- en: '[PRE1]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
