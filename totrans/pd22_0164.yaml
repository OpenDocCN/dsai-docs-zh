- en: pandas.Series.copy
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas.Series.copy
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.Series.copy.html](https://pandas.pydata.org/docs/reference/api/pandas.Series.copy.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.Series.copy.html](https://pandas.pydata.org/docs/reference/api/pandas.Series.copy.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Make a copy of this object’s indices and data.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 复制此对象的索引和数据。
- en: When `deep=True` (default), a new object will be created with a copy of the
    calling object’s data and indices. Modifications to the data or indices of the
    copy will not be reflected in the original object (see notes below).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 当`deep=True`（默认值）时，将创建一个新对象，其中包含调用对象的数据和索引的副本。对副本的数据或索引的修改将不会反映在原始对象中（请参阅下面的说明）。
- en: When `deep=False`, a new object will be created without copying the calling
    object’s data or index (only references to the data and index are copied). Any
    changes to the data of the original will be reflected in the shallow copy (and
    vice versa).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 当`deep=False`时，将创建一个新对象，而不会复制调用对象的数据或索引（只会复制到数据和索引的引用）。对原始数据的任何更改都将反映在浅拷贝中（反之亦然）。
- en: Note
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The `deep=False` behaviour as described above will change in pandas 3.0\. [Copy-on-Write](https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html)
    will be enabled by default, which means that the “shallow” copy is that is returned
    with `deep=False` will still avoid making an eager copy, but changes to the data
    of the original will *no* longer be reflected in the shallow copy (or vice versa).
    Instead, it makes use of a lazy (deferred) copy mechanism that will copy the data
    only when any changes to the original or shallow copy is made.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 上述描述的`deep=False`行为将在 pandas 3.0 中发生变化。[写时复制](https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html)将默认启用，这意味着返回`deep=False`的“浅”拷贝仍将避免进行急切拷贝，但原始数据的更改将不再反映在浅拷贝中（反之亦然）。相反，它利用了一种懒惰（延迟）拷贝机制，只有在对原始数据或浅拷贝进行任何更改时才会复制数据。
- en: You can already get the future behavior and improvements through enabling copy
    on write `pd.options.mode.copy_on_write = True`
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经可以通过启用写时复制`pd.options.mode.copy_on_write = True`来获得未来的行为和改进。
- en: 'Parameters:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**deep**bool, default True'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**deep**bool，默认为 True'
- en: Make a deep copy, including a copy of the data and the indices. With `deep=False`
    neither the indices nor the data are copied.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 进行深度复制，包括数据和索引的复制。使用`deep=False`时，索引和数据都不会被复制。
- en: 'Returns:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: Series or DataFrame
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Series 或 DataFrame
- en: Object type matches caller.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对象类型与调用者匹配。
- en: Notes
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: When `deep=True`, data is copied but actual Python objects will not be copied
    recursively, only the reference to the object. This is in contrast to copy.deepcopy
    in the Standard Library, which recursively copies object data (see examples below).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当`deep=True`时，数据会被复制，但实际的 Python 对象不会被递归复制，只会复制到对象的引用。这与标准库中的 copy.deepcopy
    不同，后者会递归复制对象数据（请参阅下面的示例）。
- en: While `Index` objects are copied when `deep=True`, the underlying numpy array
    is not copied for performance reasons. Since `Index` is immutable, the underlying
    data can be safely shared and a copy is not needed.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当`deep=True`时，`Index`对象会被复制，但出于性能原因，底层 numpy 数组不会被复制。由于`Index`是不可变的，底层数据可以安全共享，因此不需要复制。
- en: Since pandas is not thread safe, see the [gotchas](../../user_guide/gotchas.html#gotchas-thread-safety)
    when copying in a threading environment.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 pandas 不是线程安全的，请参阅在线程环境中复制时的[注意事项](../../user_guide/gotchas.html#gotchas-thread-safety)。
- en: When `copy_on_write` in pandas config is set to `True`, the `copy_on_write`
    config takes effect even when `deep=False`. This means that any changes to the
    copied data would make a new copy of the data upon write (and vice versa). Changes
    made to either the original or copied variable would not be reflected in the counterpart.
    See [Copy_on_Write](../../user_guide/copy_on_write.html#copy-on-write) for more
    information.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 当 pandas 配置中的`copy_on_write`设置为`True`时，即使`deep=False`，`copy_on_write`配置也会生效。这意味着对复制数据的任何更改都会在写入时生成数据的新副本（反之亦然）。对原始变量或复制变量进行的任何更改都不会反映在对方中。请参阅[写时复制](../../user_guide/copy_on_write.html#copy-on-write)获取更多信息。
- en: Examples
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Shallow copy versus default (deep) copy:**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**浅拷贝与默认（深拷贝）的区别：**'
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Shallow copy shares data and index with original.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 浅拷贝与原始共享数据和索引。
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Deep copy has own copy of data and index.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 深拷贝具有自己的数据和索引的副本。
- en: '[PRE5]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Updates to the data shared by shallow copy and original is reflected in both
    (NOTE: this will no longer be true for pandas >= 3.0); deep copy remains unchanged.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 对由浅拷贝和原始共享的数据的更新在两者中都会反映出来（注意：对于 pandas >= 3.0，这将不再是真实的）；深拷贝保持不变。
- en: '[PRE6]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note that when copying an object containing Python objects, a deep copy will
    copy the data, but will not do so recursively. Updating a nested data object will
    be reflected in the deep copy.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，当复制包含 Python 对象的对象时，深拷贝会复制数据，但不会递归地这样做。更新嵌套数据对象将反映在深拷贝中。
- en: '[PRE7]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '**Copy-on-Write is set to true**, the shallow copy is not modified when the
    original data is changed:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**Copy-on-Write 设置为 true**，当原始数据发生更改时，浅拷贝不会被修改：'
- en: '[PRE8]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
