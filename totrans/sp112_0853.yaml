- en: scipy.special.nbdtr
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.special.nbdtr
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.nbdtr.html#scipy.special.nbdtr](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.nbdtr.html#scipy.special.nbdtr)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.nbdtr.html#scipy.special.nbdtr](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.nbdtr.html#scipy.special.nbdtr)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Negative binomial cumulative distribution function.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 负二项分布累积分布函数。
- en: Returns the sum of the terms 0 through *k* of the negative binomial distribution
    probability mass function,
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 返回负二项分布概率质量函数从0到*k*项的总和，
- en: \[F = \sum_{j=0}^k {{n + j - 1}\choose{j}} p^n (1 - p)^j.\]
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: \[F = \sum_{j=0}^k {{n + j - 1}\choose{j}} p^n (1 - p)^j.\]
- en: In a sequence of Bernoulli trials with individual success probabilities *p*,
    this is the probability that *k* or fewer failures precede the nth success.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在一系列伯努利试验中，单次成功概率为*p*，这是*k*或更少次失败在第*n*次成功之前发生的概率。
- en: 'Parameters:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**k**array_like'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**k**array_like'
- en: The maximum number of allowed failures (nonnegative int).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 允许的最大失败次数（非负整数）。
- en: '**n**array_like'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**array_like'
- en: The target number of successes (positive int).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 成功次数的目标数（正整数）。
- en: '**p**array_like'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**p**array_like'
- en: Probability of success in a single event (float).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 单次事件中成功的概率（浮点数）。
- en: '**out**ndarray, optional'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**ndarray, 可选'
- en: Optional output array for the function results
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 可选的函数结果输出数组
- en: 'Returns:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**F**scalar or ndarray'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**F**标量或ndarray'
- en: The probability of *k* or fewer failures before *n* successes in a sequence
    of events with individual success probability *p*.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在一系列事件中，成功概率为*p*，在*n*次成功之前发生*k*或更少次失败的概率。
- en: See also
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`nbdtrc`](scipy.special.nbdtrc.html#scipy.special.nbdtrc "scipy.special.nbdtrc")'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[`nbdtrc`](scipy.special.nbdtrc.html#scipy.special.nbdtrc "scipy.special.nbdtrc")'
- en: Negative binomial survival function
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 负二项分布生存函数
- en: '[`nbdtrik`](scipy.special.nbdtrik.html#scipy.special.nbdtrik "scipy.special.nbdtrik")'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[`nbdtrik`](scipy.special.nbdtrik.html#scipy.special.nbdtrik "scipy.special.nbdtrik")'
- en: Negative binomial quantile function
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 负二项分布分位数函数
- en: '[`scipy.stats.nbinom`](scipy.stats.nbinom.html#scipy.stats.nbinom "scipy.stats.nbinom")'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.stats.nbinom`](scipy.stats.nbinom.html#scipy.stats.nbinom "scipy.stats.nbinom")'
- en: Negative binomial distribution
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 负二项分布
- en: Notes
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: If floating point values are passed for *k* or *n*, they will be truncated to
    integers.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果将浮点数值传递给*k*或*n*，它们将被截断为整数。
- en: The terms are not summed directly; instead the regularized incomplete beta function
    is employed, according to the formula,
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这些项不直接求和；相反，使用正则化不完全贝塔函数，根据公式，
- en: \[\mathrm{nbdtr}(k, n, p) = I_{p}(n, k + 1).\]
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: \[\mathrm{nbdtr}(k, n, p) = I_{p}(n, k + 1).\]
- en: Wrapper for the Cephes [[1]](#rb09274340cef-1) routine [`nbdtr`](#scipy.special.nbdtr
    "scipy.special.nbdtr").
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Cephes的包装器[[1]](#rb09274340cef-1)例程[`nbdtr`](#scipy.special.nbdtr "scipy.special.nbdtr")。
- en: The negative binomial distribution is also available as [`scipy.stats.nbinom`](scipy.stats.nbinom.html#scipy.stats.nbinom
    "scipy.stats.nbinom"). Using [`nbdtr`](#scipy.special.nbdtr "scipy.special.nbdtr")
    directly can improve performance compared to the `cdf` method of [`scipy.stats.nbinom`](scipy.stats.nbinom.html#scipy.stats.nbinom
    "scipy.stats.nbinom") (see last example).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 负二项分布也可以作为[`scipy.stats.nbinom`](scipy.stats.nbinom.html#scipy.stats.nbinom
    "scipy.stats.nbinom")获得。直接使用[`nbdtr`](#scipy.special.nbdtr "scipy.special.nbdtr")相对于[`scipy.stats.nbinom`](scipy.stats.nbinom.html#scipy.stats.nbinom
    "scipy.stats.nbinom")的`cdf`方法可以提高性能（见最后一个示例）。
- en: References
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[1](#id1)]'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[[1](#id1)]'
- en: Cephes Mathematical Functions Library, [http://www.netlib.org/cephes/](http://www.netlib.org/cephes/)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Cephes数学函数库，[http://www.netlib.org/cephes/](http://www.netlib.org/cephes/)
- en: Examples
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: Compute the function for `k=10` and `n=5` at `p=0.5`.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 计算在*p=0.5*时*k=10*和*n=5*的函数。
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Compute the function for `n=10` and `p=0.5` at several points by providing a
    NumPy array or list for *k*.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 通过提供NumPy数组或列表用于*k*，计算*p=0.5*时*n=10*的函数的多个点。
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Plot the function for four different parameter sets.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制四组不同参数集的函数图。
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![../../_images/scipy-special-nbdtr-1_00_00.png](../Images/763f409555829a519ff4b13976fb5d19.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-special-nbdtr-1_00_00.png](../Images/763f409555829a519ff4b13976fb5d19.png)'
- en: 'The negative binomial distribution is also available as [`scipy.stats.nbinom`](scipy.stats.nbinom.html#scipy.stats.nbinom
    "scipy.stats.nbinom"). Using [`nbdtr`](#scipy.special.nbdtr "scipy.special.nbdtr")
    directly can be much faster than calling the `cdf` method of [`scipy.stats.nbinom`](scipy.stats.nbinom.html#scipy.stats.nbinom
    "scipy.stats.nbinom"), especially for small arrays or individual values. To get
    the same results one must use the following parametrization: `nbinom(n, p).cdf(k)=nbdtr(k,
    n, p)`.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 负二项分布也可作为[`scipy.stats.nbinom`](scipy.stats.nbinom.html#scipy.stats.nbinom "scipy.stats.nbinom")来使用。直接使用[`nbdtr`](#scipy.special.nbdtr
    "scipy.special.nbdtr")比调用[`scipy.stats.nbinom`](scipy.stats.nbinom.html#scipy.stats.nbinom
    "scipy.stats.nbinom")的`cdf`方法要快得多，特别是对于小数组或单个值。要获得相同的结果，必须使用以下参数化：`nbinom(n, p).cdf(k)=nbdtr(k,
    n, p)`。
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[`nbdtr`](#scipy.special.nbdtr "scipy.special.nbdtr") can evaluate different
    parameter sets by providing arrays with shapes compatible for broadcasting for
    *k*, *n* and *p*. Here we compute the function for three different *k* at four
    locations *p*, resulting in a 3x4 array.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[`nbdtr`](#scipy.special.nbdtr "scipy.special.nbdtr")可以通过提供与*k*、*n*和*p*的广播兼容形状的数组来评估不同的参数集。在这里，我们计算了三个不同的*k*和四个*p*的函数值，结果是一个3x4数组。'
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
