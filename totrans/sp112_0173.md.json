["```py\nclass scipy.interpolate.LinearNDInterpolator(points, values, fill_value=np.nan, rescale=False)\n```", "```py\n>>> from scipy.interpolate import LinearNDInterpolator\n>>> import numpy as np\n>>> import matplotlib.pyplot as plt\n>>> rng = np.random.default_rng()\n>>> x = rng.random(10) - 0.5\n>>> y = rng.random(10) - 0.5\n>>> z = np.hypot(x, y)\n>>> X = np.linspace(min(x), max(x))\n>>> Y = np.linspace(min(y), max(y))\n>>> X, Y = np.meshgrid(X, Y)  # 2D grid for interpolation\n>>> interp = LinearNDInterpolator(list(zip(x, y)), z)\n>>> Z = interp(X, Y)\n>>> plt.pcolormesh(X, Y, Z, shading='auto')\n>>> plt.plot(x, y, \"ok\", label=\"input point\")\n>>> plt.legend()\n>>> plt.colorbar()\n>>> plt.axis(\"equal\")\n>>> plt.show() \n```"]