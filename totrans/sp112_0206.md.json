["```py\nclass scipy.interpolate.LSQSphereBivariateSpline(theta, phi, r, tt, tp, w=None, eps=1e-16)\n```", "```py\n>>> from scipy.interpolate import LSQSphereBivariateSpline\n>>> import numpy as np\n>>> import matplotlib.pyplot as plt \n```", "```py\n>>> theta = np.linspace(0, np.pi, num=7)\n>>> phi = np.linspace(0, 2*np.pi, num=9)\n>>> data = np.empty((theta.shape[0], phi.shape[0]))\n>>> data[:,0], data[0,:], data[-1,:] = 0., 0., 0.\n>>> data[1:-1,1], data[1:-1,-1] = 1., 1.\n>>> data[1,1:-1], data[-2,1:-1] = 1., 1.\n>>> data[2:-2,2], data[2:-2,-2] = 2., 2.\n>>> data[2,2:-2], data[-3,2:-2] = 2., 2.\n>>> data[3,3:-2] = 3.\n>>> data = np.roll(data, 4, 1) \n```", "```py\n>>> lats, lons = np.meshgrid(theta, phi)\n>>> knotst, knotsp = theta.copy(), phi.copy()\n>>> knotst[0] += .0001\n>>> knotst[-1] -= .0001\n>>> knotsp[0] += .0001\n>>> knotsp[-1] -= .0001\n>>> lut = LSQSphereBivariateSpline(lats.ravel(), lons.ravel(),\n...                                data.T.ravel(), knotst, knotsp) \n```", "```py\n>>> data_orig = lut(theta, phi) \n```", "```py\n>>> fine_lats = np.linspace(0., np.pi, 70)\n>>> fine_lons = np.linspace(0., 2*np.pi, 90)\n>>> data_lsq = lut(fine_lats, fine_lons) \n```", "```py\n>>> fig = plt.figure()\n>>> ax1 = fig.add_subplot(131)\n>>> ax1.imshow(data, interpolation='nearest')\n>>> ax2 = fig.add_subplot(132)\n>>> ax2.imshow(data_orig, interpolation='nearest')\n>>> ax3 = fig.add_subplot(133)\n>>> ax3.imshow(data_lsq, interpolation='nearest')\n>>> plt.show() \n```"]