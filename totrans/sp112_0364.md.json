["```py\nscipy.ndimage.sobel(input, axis=-1, output=None, mode='reflect', cval=0.0)\n```", "```py\n>>> from scipy import ndimage, datasets\n>>> import matplotlib.pyplot as plt\n>>> import numpy as np\n>>> ascent = datasets.ascent().astype('int32')\n>>> sobel_h = ndimage.sobel(ascent, 0)  # horizontal gradient\n>>> sobel_v = ndimage.sobel(ascent, 1)  # vertical gradient\n>>> magnitude = np.sqrt(sobel_h**2 + sobel_v**2)\n>>> magnitude *= 255.0 / np.max(magnitude)  # normalization\n>>> fig, axs = plt.subplots(2, 2, figsize=(8, 8))\n>>> plt.gray()  # show the filtered result in grayscale\n>>> axs[0, 0].imshow(ascent)\n>>> axs[0, 1].imshow(sobel_h)\n>>> axs[1, 0].imshow(sobel_v)\n>>> axs[1, 1].imshow(magnitude)\n>>> titles = [\"original\", \"horizontal\", \"vertical\", \"magnitude\"]\n>>> for i, ax in enumerate(axs.ravel()):\n...     ax.set_title(titles[i])\n...     ax.axis(\"off\")\n>>> plt.show() \n```"]