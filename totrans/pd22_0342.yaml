- en: pandas.DataFrame.ffill
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.ffill.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.ffill.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Fill NA/NaN values by propagating the last valid observation to next valid.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**{0 or ‘index’} for Series, {0 or ‘index’, 1 or ‘columns’} for DataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: Axis along which to fill missing values. For Series this parameter is unused
    and defaults to 0.
  prefs: []
  type: TYPE_NORMAL
- en: '**inplace**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: 'If True, fill in-place. Note: this will modify any other views on this object
    (e.g., a no-copy slice for a column in a DataFrame).'
  prefs: []
  type: TYPE_NORMAL
- en: '**limit**int, default None'
  prefs: []
  type: TYPE_NORMAL
- en: If method is specified, this is the maximum number of consecutive NaN values
    to forward/backward fill. In other words, if there is a gap with more than this
    number of consecutive NaNs, it will only be partially filled. If method is not
    specified, this is the maximum number of entries along the entire axis where NaNs
    will be filled. Must be greater than 0 if not None.
  prefs: []
  type: TYPE_NORMAL
- en: '**limit_area**{None, ‘inside’, ‘outside’}, default None'
  prefs: []
  type: TYPE_NORMAL
- en: If limit is specified, consecutive NaNs will be filled with this restriction.
  prefs: []
  type: TYPE_NORMAL
- en: '`None`: No fill restriction.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘inside’: Only fill NaNs surrounded by valid values (interpolate).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘outside’: Only fill NaNs outside valid values (extrapolate).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New in version 2.2.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**downcast**dict, default is None'
  prefs: []
  type: TYPE_NORMAL
- en: A dict of item->dtype of what to downcast if possible, or the string ‘infer’
    which will try to downcast to an appropriate equal type (e.g. float64 to int64
    if possible).
  prefs: []
  type: TYPE_NORMAL
- en: Deprecated since version 2.2.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: Series/DataFrame or None
  prefs: []
  type: TYPE_NORMAL
- en: Object with missing values filled or None if `inplace=True`.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
