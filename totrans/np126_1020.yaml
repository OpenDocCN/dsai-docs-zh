- en: numpy.testing.assert_allclose
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.testing.assert_allclose.html](https://numpy.org/doc/1.26/reference/generated/numpy.testing.assert_allclose.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Raises an AssertionError if two objects are not equal up to desired tolerance.
  prefs: []
  type: TYPE_NORMAL
- en: Given two array_like objects, check that their shapes and all elements are equal
    (but see the Notes for the special handling of a scalar). An exception is raised
    if the shapes mismatch or any values conflict. In contrast to the standard usage
    in numpy, NaNs are compared like numbers, no assertion is raised if both objects
    have NaNs in the same positions.
  prefs: []
  type: TYPE_NORMAL
- en: The test is equivalent to `allclose(actual, desired, rtol, atol)` (note that
    `allclose` has different default values). It compares the difference between *actual*
    and *desired* to `atol + rtol * abs(desired)`.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.5.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**actual**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Array obtained.
  prefs: []
  type: TYPE_NORMAL
- en: '**desired**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Array desired.
  prefs: []
  type: TYPE_NORMAL
- en: '**rtol**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Relative tolerance.
  prefs: []
  type: TYPE_NORMAL
- en: '**atol**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Absolute tolerance.
  prefs: []
  type: TYPE_NORMAL
- en: '**equal_nan**bool, optional.'
  prefs: []
  type: TYPE_NORMAL
- en: If True, NaNs will compare equal.
  prefs: []
  type: TYPE_NORMAL
- en: '**err_msg**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The error message to be printed in case of failure.
  prefs: []
  type: TYPE_NORMAL
- en: '**verbose**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True, the conflicting values are appended to the error message.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: AssertionError
  prefs: []
  type: TYPE_NORMAL
- en: If actual and desired are not equal up to specified precision.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`assert_array_almost_equal_nulp`](numpy.testing.assert_array_almost_equal_nulp.html#numpy.testing.assert_array_almost_equal_nulp
    "numpy.testing.assert_array_almost_equal_nulp"), [`assert_array_max_ulp`](numpy.testing.assert_array_max_ulp.html#numpy.testing.assert_array_max_ulp
    "numpy.testing.assert_array_max_ulp")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: When one of *actual* and *desired* is a scalar and the other is array_like,
    the function checks that each element of the array_like object is equal to the
    scalar.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
