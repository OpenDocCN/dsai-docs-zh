["```py\nscipy.stats.zipfian = <scipy.stats._discrete_distns.zipfian_gen object>\n```", "```py\n>>> import numpy as np\n>>> from scipy.stats import zipfian\n>>> import matplotlib.pyplot as plt\n>>> fig, ax = plt.subplots(1, 1) \n```", "```py\n>>> a, n = 1.25, 10\n>>> mean, var, skew, kurt = zipfian.stats(a, n, moments='mvsk') \n```", "```py\n>>> x = np.arange(zipfian.ppf(0.01, a, n),\n...               zipfian.ppf(0.99, a, n))\n>>> ax.plot(x, zipfian.pmf(x, a, n), 'bo', ms=8, label='zipfian pmf')\n>>> ax.vlines(x, 0, zipfian.pmf(x, a, n), colors='b', lw=5, alpha=0.5) \n```", "```py\n>>> rv = zipfian(a, n)\n>>> ax.vlines(x, 0, rv.pmf(x), colors='k', linestyles='-', lw=1,\n...         label='frozen pmf')\n>>> ax.legend(loc='best', frameon=False)\n>>> plt.show() \n```", "```py\n>>> prob = zipfian.cdf(x, a, n)\n>>> np.allclose(x, zipfian.ppf(prob, a, n))\nTrue \n```", "```py\n>>> r = zipfian.rvs(a, n, size=1000) \n```", "```py\n>>> import numpy as np\n>>> from scipy.stats import zipf, zipfian\n>>> k = np.arange(11)\n>>> np.allclose(zipfian.pmf(k, a=3.5, n=10000000), zipf.pmf(k, a=3.5))\nTrue \n```"]