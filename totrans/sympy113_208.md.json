["```py\nclass sympy.physics.quantum.dagger.Dagger(arg)\n```", "```py\n>>> from sympy.physics.quantum.dagger import Dagger\n>>> from sympy.physics.quantum.state import Ket, Bra\n>>> from sympy.physics.quantum.operator import Operator\n>>> Dagger(Ket('psi'))\n<psi|\n>>> Dagger(Bra('phi'))\n|phi>\n>>> Dagger(Operator('A'))\nDagger(A) \n```", "```py\n>>> from sympy.physics.quantum import InnerProduct, OuterProduct\n>>> Dagger(InnerProduct(Bra('a'), Ket('b')))\n<b|a>\n>>> Dagger(OuterProduct(Ket('a'), Bra('b')))\n|b><a| \n```", "```py\n>>> A = Operator('A')\n>>> B = Operator('B')\n>>> Dagger(A*B)\nDagger(B)*Dagger(A)\n>>> Dagger(A+B)\nDagger(A) + Dagger(B)\n>>> Dagger(A**2)\nDagger(A)**2 \n```", "```py\n>>> from sympy import Matrix, I\n>>> m = Matrix([[1,I],[2,I]])\n>>> m\nMatrix([\n[1, I],\n[2, I]])\n>>> Dagger(m)\nMatrix([\n[ 1,  2],\n[-I, -I]]) \n```"]