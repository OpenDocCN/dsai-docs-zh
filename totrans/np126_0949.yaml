- en: Hermite Series, “Physicists” (numpy.polynomial.hermite)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/routines.polynomials.hermite.html](https://numpy.org/doc/1.26/reference/routines.polynomials.hermite.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This module provides a number of objects (mostly functions) useful for dealing
    with Hermite series, including a [`Hermite`](generated/numpy.polynomial.hermite.Hermite.html#numpy.polynomial.hermite.Hermite
    "numpy.polynomial.hermite.Hermite") class that encapsulates the usual arithmetic
    operations. (General information on how this module represents and works with
    such polynomials is in the docstring for its “parent” sub-package, [`numpy.polynomial`](routines.polynomials.package.html#module-numpy.polynomial
    "numpy.polynomial")).
  prefs: []
  type: TYPE_NORMAL
- en: Classes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Hermite`](generated/numpy.polynomial.hermite.Hermite.html#numpy.polynomial.hermite.Hermite
    "numpy.polynomial.hermite.Hermite")(coef[, domain, window, symbol]) | An Hermite
    series class. |'
  prefs: []
  type: TYPE_TB
- en: Constants
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`hermdomain`](generated/numpy.polynomial.hermite.hermdomain.html#numpy.polynomial.hermite.hermdomain
    "numpy.polynomial.hermite.hermdomain") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermzero`](generated/numpy.polynomial.hermite.hermzero.html#numpy.polynomial.hermite.hermzero
    "numpy.polynomial.hermite.hermzero") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermone`](generated/numpy.polynomial.hermite.hermone.html#numpy.polynomial.hermite.hermone
    "numpy.polynomial.hermite.hermone") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermx`](generated/numpy.polynomial.hermite.hermx.html#numpy.polynomial.hermite.hermx
    "numpy.polynomial.hermite.hermx") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: Arithmetic
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`hermadd`](generated/numpy.polynomial.hermite.hermadd.html#numpy.polynomial.hermite.hermadd
    "numpy.polynomial.hermite.hermadd")(c1, c2) | Add one Hermite series to another.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermsub`](generated/numpy.polynomial.hermite.hermsub.html#numpy.polynomial.hermite.hermsub
    "numpy.polynomial.hermite.hermsub")(c1, c2) | Subtract one Hermite series from
    another. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermmulx`](generated/numpy.polynomial.hermite.hermmulx.html#numpy.polynomial.hermite.hermmulx
    "numpy.polynomial.hermite.hermmulx")(c) | Multiply a Hermite series by x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermmul`](generated/numpy.polynomial.hermite.hermmul.html#numpy.polynomial.hermite.hermmul
    "numpy.polynomial.hermite.hermmul")(c1, c2) | Multiply one Hermite series by another.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermdiv`](generated/numpy.polynomial.hermite.hermdiv.html#numpy.polynomial.hermite.hermdiv
    "numpy.polynomial.hermite.hermdiv")(c1, c2) | Divide one Hermite series by another.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermpow`](generated/numpy.polynomial.hermite.hermpow.html#numpy.polynomial.hermite.hermpow
    "numpy.polynomial.hermite.hermpow")(c, pow[, maxpower]) | Raise a Hermite series
    to a power. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermval`](generated/numpy.polynomial.hermite.hermval.html#numpy.polynomial.hermite.hermval
    "numpy.polynomial.hermite.hermval")(x, c[, tensor]) | Evaluate an Hermite series
    at points x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermval2d`](generated/numpy.polynomial.hermite.hermval2d.html#numpy.polynomial.hermite.hermval2d
    "numpy.polynomial.hermite.hermval2d")(x, y, c) | Evaluate a 2-D Hermite series
    at points (x, y). |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermval3d`](generated/numpy.polynomial.hermite.hermval3d.html#numpy.polynomial.hermite.hermval3d
    "numpy.polynomial.hermite.hermval3d")(x, y, z, c) | Evaluate a 3-D Hermite series
    at points (x, y, z). |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermgrid2d`](generated/numpy.polynomial.hermite.hermgrid2d.html#numpy.polynomial.hermite.hermgrid2d
    "numpy.polynomial.hermite.hermgrid2d")(x, y, c) | Evaluate a 2-D Hermite series
    on the Cartesian product of x and y. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermgrid3d`](generated/numpy.polynomial.hermite.hermgrid3d.html#numpy.polynomial.hermite.hermgrid3d
    "numpy.polynomial.hermite.hermgrid3d")(x, y, z, c) | Evaluate a 3-D Hermite series
    on the Cartesian product of x, y, and z. |'
  prefs: []
  type: TYPE_TB
- en: Calculus
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`hermder`](generated/numpy.polynomial.hermite.hermder.html#numpy.polynomial.hermite.hermder
    "numpy.polynomial.hermite.hermder")(c[, m, scl, axis]) | Differentiate a Hermite
    series. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermint`](generated/numpy.polynomial.hermite.hermint.html#numpy.polynomial.hermite.hermint
    "numpy.polynomial.hermite.hermint")(c[, m, k, lbnd, scl, axis]) | Integrate a
    Hermite series. |'
  prefs: []
  type: TYPE_TB
- en: Misc Functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`hermfromroots`](generated/numpy.polynomial.hermite.hermfromroots.html#numpy.polynomial.hermite.hermfromroots
    "numpy.polynomial.hermite.hermfromroots")(roots) | Generate a Hermite series with
    given roots. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermroots`](generated/numpy.polynomial.hermite.hermroots.html#numpy.polynomial.hermite.hermroots
    "numpy.polynomial.hermite.hermroots")(c) | Compute the roots of a Hermite series.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermvander`](generated/numpy.polynomial.hermite.hermvander.html#numpy.polynomial.hermite.hermvander
    "numpy.polynomial.hermite.hermvander")(x, deg) | Pseudo-Vandermonde matrix of
    given degree. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermvander2d`](generated/numpy.polynomial.hermite.hermvander2d.html#numpy.polynomial.hermite.hermvander2d
    "numpy.polynomial.hermite.hermvander2d")(x, y, deg) | Pseudo-Vandermonde matrix
    of given degrees. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermvander3d`](generated/numpy.polynomial.hermite.hermvander3d.html#numpy.polynomial.hermite.hermvander3d
    "numpy.polynomial.hermite.hermvander3d")(x, y, z, deg) | Pseudo-Vandermonde matrix
    of given degrees. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermgauss`](generated/numpy.polynomial.hermite.hermgauss.html#numpy.polynomial.hermite.hermgauss
    "numpy.polynomial.hermite.hermgauss")(deg) | Gauss-Hermite quadrature. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermweight`](generated/numpy.polynomial.hermite.hermweight.html#numpy.polynomial.hermite.hermweight
    "numpy.polynomial.hermite.hermweight")(x) | Weight function of the Hermite polynomials.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermcompanion`](generated/numpy.polynomial.hermite.hermcompanion.html#numpy.polynomial.hermite.hermcompanion
    "numpy.polynomial.hermite.hermcompanion")(c) | Return the scaled companion matrix
    of c. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermfit`](generated/numpy.polynomial.hermite.hermfit.html#numpy.polynomial.hermite.hermfit
    "numpy.polynomial.hermite.hermfit")(x, y, deg[, rcond, full, w]) | Least squares
    fit of Hermite series to data. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermtrim`](generated/numpy.polynomial.hermite.hermtrim.html#numpy.polynomial.hermite.hermtrim
    "numpy.polynomial.hermite.hermtrim")(c[, tol]) | Remove "small" "trailing" coefficients
    from a polynomial. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermline`](generated/numpy.polynomial.hermite.hermline.html#numpy.polynomial.hermite.hermline
    "numpy.polynomial.hermite.hermline")(off, scl) | Hermite series whose graph is
    a straight line. |'
  prefs: []
  type: TYPE_TB
- en: '| [`herm2poly`](generated/numpy.polynomial.hermite.herm2poly.html#numpy.polynomial.hermite.herm2poly
    "numpy.polynomial.hermite.herm2poly")(c) | Convert a Hermite series to a polynomial.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`poly2herm`](generated/numpy.polynomial.hermite.poly2herm.html#numpy.polynomial.hermite.poly2herm
    "numpy.polynomial.hermite.poly2herm")(pol) | Convert a polynomial to a Hermite
    series. |'
  prefs: []
  type: TYPE_TB
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[`numpy.polynomial`](routines.polynomials.package.html#module-numpy.polynomial
    "numpy.polynomial")'
  prefs: []
  type: TYPE_NORMAL
- en: Classes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Hermite`](generated/numpy.polynomial.hermite.Hermite.html#numpy.polynomial.hermite.Hermite
    "numpy.polynomial.hermite.Hermite")(coef[, domain, window, symbol]) | An Hermite
    series class. |'
  prefs: []
  type: TYPE_TB
- en: Constants
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`hermdomain`](generated/numpy.polynomial.hermite.hermdomain.html#numpy.polynomial.hermite.hermdomain
    "numpy.polynomial.hermite.hermdomain") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermzero`](generated/numpy.polynomial.hermite.hermzero.html#numpy.polynomial.hermite.hermzero
    "numpy.polynomial.hermite.hermzero") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermone`](generated/numpy.polynomial.hermite.hermone.html#numpy.polynomial.hermite.hermone
    "numpy.polynomial.hermite.hermone") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermx`](generated/numpy.polynomial.hermite.hermx.html#numpy.polynomial.hermite.hermx
    "numpy.polynomial.hermite.hermx") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: Arithmetic
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`hermadd`](generated/numpy.polynomial.hermite.hermadd.html#numpy.polynomial.hermite.hermadd
    "numpy.polynomial.hermite.hermadd")(c1, c2) | Add one Hermite series to another.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermsub`](generated/numpy.polynomial.hermite.hermsub.html#numpy.polynomial.hermite.hermsub
    "numpy.polynomial.hermite.hermsub")(c1, c2) | Subtract one Hermite series from
    another. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermmulx`](generated/numpy.polynomial.hermite.hermmulx.html#numpy.polynomial.hermite.hermmulx
    "numpy.polynomial.hermite.hermmulx")(c) | Multiply a Hermite series by x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermmul`](generated/numpy.polynomial.hermite.hermmul.html#numpy.polynomial.hermite.hermmul
    "numpy.polynomial.hermite.hermmul")(c1, c2) | Multiply one Hermite series by another.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermdiv`](generated/numpy.polynomial.hermite.hermdiv.html#numpy.polynomial.hermite.hermdiv
    "numpy.polynomial.hermite.hermdiv")(c1, c2) | Divide one Hermite series by another.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermpow`](generated/numpy.polynomial.hermite.hermpow.html#numpy.polynomial.hermite.hermpow
    "numpy.polynomial.hermite.hermpow")(c, pow[, maxpower]) | Raise a Hermite series
    to a power. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermval`](generated/numpy.polynomial.hermite.hermval.html#numpy.polynomial.hermite.hermval
    "numpy.polynomial.hermite.hermval")(x, c[, tensor]) | Evaluate an Hermite series
    at points x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermval2d`](generated/numpy.polynomial.hermite.hermval2d.html#numpy.polynomial.hermite.hermval2d
    "numpy.polynomial.hermite.hermval2d")(x, y, c) | Evaluate a 2-D Hermite series
    at points (x, y). |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermval3d`](generated/numpy.polynomial.hermite.hermval3d.html#numpy.polynomial.hermite.hermval3d
    "numpy.polynomial.hermite.hermval3d")(x, y, z, c) | Evaluate a 3-D Hermite series
    at points (x, y, z). |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermgrid2d`](generated/numpy.polynomial.hermite.hermgrid2d.html#numpy.polynomial.hermite.hermgrid2d
    "numpy.polynomial.hermite.hermgrid2d")(x, y, c) | Evaluate a 2-D Hermite series
    on the Cartesian product of x and y. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermgrid3d`](generated/numpy.polynomial.hermite.hermgrid3d.html#numpy.polynomial.hermite.hermgrid3d
    "numpy.polynomial.hermite.hermgrid3d")(x, y, z, c) | Evaluate a 3-D Hermite series
    on the Cartesian product of x, y, and z. |'
  prefs: []
  type: TYPE_TB
- en: Calculus
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`hermder`](generated/numpy.polynomial.hermite.hermder.html#numpy.polynomial.hermite.hermder
    "numpy.polynomial.hermite.hermder")(c[, m, scl, axis]) | Differentiate a Hermite
    series. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermint`](generated/numpy.polynomial.hermite.hermint.html#numpy.polynomial.hermite.hermint
    "numpy.polynomial.hermite.hermint")(c[, m, k, lbnd, scl, axis]) | Integrate a
    Hermite series. |'
  prefs: []
  type: TYPE_TB
- en: Misc Functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`hermfromroots`](generated/numpy.polynomial.hermite.hermfromroots.html#numpy.polynomial.hermite.hermfromroots
    "numpy.polynomial.hermite.hermfromroots")(roots) | Generate a Hermite series with
    given roots. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermroots`](generated/numpy.polynomial.hermite.hermroots.html#numpy.polynomial.hermite.hermroots
    "numpy.polynomial.hermite.hermroots")(c) | Compute the roots of a Hermite series.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermvander`](generated/numpy.polynomial.hermite.hermvander.html#numpy.polynomial.hermite.hermvander
    "numpy.polynomial.hermite.hermvander")(x, deg) | Pseudo-Vandermonde matrix of
    given degree. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermvander2d`](generated/numpy.polynomial.hermite.hermvander2d.html#numpy.polynomial.hermite.hermvander2d
    "numpy.polynomial.hermite.hermvander2d")(x, y, deg) | Pseudo-Vandermonde matrix
    of given degrees. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermvander3d`](generated/numpy.polynomial.hermite.hermvander3d.html#numpy.polynomial.hermite.hermvander3d
    "numpy.polynomial.hermite.hermvander3d")(x, y, z, deg) | Pseudo-Vandermonde matrix
    of given degrees. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermgauss`](generated/numpy.polynomial.hermite.hermgauss.html#numpy.polynomial.hermite.hermgauss
    "numpy.polynomial.hermite.hermgauss")(deg) | Gauss-Hermite quadrature. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermweight`](generated/numpy.polynomial.hermite.hermweight.html#numpy.polynomial.hermite.hermweight
    "numpy.polynomial.hermite.hermweight")(x) | Weight function of the Hermite polynomials.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermcompanion`](generated/numpy.polynomial.hermite.hermcompanion.html#numpy.polynomial.hermite.hermcompanion
    "numpy.polynomial.hermite.hermcompanion")(c) | Return the scaled companion matrix
    of c. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermfit`](generated/numpy.polynomial.hermite.hermfit.html#numpy.polynomial.hermite.hermfit
    "numpy.polynomial.hermite.hermfit")(x, y, deg[, rcond, full, w]) | Least squares
    fit of Hermite series to data. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermtrim`](generated/numpy.polynomial.hermite.hermtrim.html#numpy.polynomial.hermite.hermtrim
    "numpy.polynomial.hermite.hermtrim")(c[, tol]) | Remove "small" "trailing" coefficients
    from a polynomial. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hermline`](generated/numpy.polynomial.hermite.hermline.html#numpy.polynomial.hermite.hermline
    "numpy.polynomial.hermite.hermline")(off, scl) | Hermite series whose graph is
    a straight line. |'
  prefs: []
  type: TYPE_TB
- en: '| [`herm2poly`](generated/numpy.polynomial.hermite.herm2poly.html#numpy.polynomial.hermite.herm2poly
    "numpy.polynomial.hermite.herm2poly")(c) | Convert a Hermite series to a polynomial.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`poly2herm`](generated/numpy.polynomial.hermite.poly2herm.html#numpy.polynomial.hermite.poly2herm
    "numpy.polynomial.hermite.poly2herm")(pol) | Convert a polynomial to a Hermite
    series. |'
  prefs: []
  type: TYPE_TB
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[`numpy.polynomial`](routines.polynomials.package.html#module-numpy.polynomial
    "numpy.polynomial")'
  prefs: []
  type: TYPE_NORMAL
