- en: scipy.stats.ttest_ind_from_stats
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.ttest_ind_from_stats.html#scipy.stats.ttest_ind_from_stats](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.ttest_ind_from_stats.html#scipy.stats.ttest_ind_from_stats)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: T-test for means of two independent samples from descriptive statistics.
  prefs: []
  type: TYPE_NORMAL
- en: This is a test for the null hypothesis that two independent samples have identical
    average (expected) values.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**mean1**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The mean(s) of sample 1.
  prefs: []
  type: TYPE_NORMAL
- en: '**std1**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The corrected sample standard deviation of sample 1 (i.e. `ddof=1`).
  prefs: []
  type: TYPE_NORMAL
- en: '**nobs1**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The number(s) of observations of sample 1.
  prefs: []
  type: TYPE_NORMAL
- en: '**mean2**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The mean(s) of sample 2.
  prefs: []
  type: TYPE_NORMAL
- en: '**std2**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The corrected sample standard deviation of sample 2 (i.e. `ddof=1`).
  prefs: []
  type: TYPE_NORMAL
- en: '**nobs2**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The number(s) of observations of sample 2.
  prefs: []
  type: TYPE_NORMAL
- en: '**equal_var**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True (default), perform a standard independent 2 sample test that assumes
    equal population variances [[1]](#r24a95fcea38c-1). If False, perform Welch’s
    t-test, which does not assume equal population variance [[2]](#r24a95fcea38c-2).
  prefs: []
  type: TYPE_NORMAL
- en: '**alternative**{‘two-sided’, ‘less’, ‘greater’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Defines the alternative hypothesis. The following options are available (default
    is ‘two-sided’):'
  prefs: []
  type: TYPE_NORMAL
- en: '‘two-sided’: the means of the distributions are unequal.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘less’: the mean of the first distribution is less than the mean of the second
    distribution.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘greater’: the mean of the first distribution is greater than the mean of the
    second distribution.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New in version 1.6.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**statistic**float or array'
  prefs: []
  type: TYPE_NORMAL
- en: The calculated t-statistics.
  prefs: []
  type: TYPE_NORMAL
- en: '**pvalue**float or array'
  prefs: []
  type: TYPE_NORMAL
- en: The two-tailed p-value.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`scipy.stats.ttest_ind`](scipy.stats.ttest_ind.html#scipy.stats.ttest_ind
    "scipy.stats.ttest_ind")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The statistic is calculated as `(mean1 - mean2)/se`, where `se` is the standard
    error. Therefore, the statistic will be positive when *mean1* is greater than
    *mean2* and negative when *mean1* is less than *mean2*.
  prefs: []
  type: TYPE_NORMAL
- en: This method does not check whether any of the elements of *std1* or *std2* are
    negative. If any elements of the *std1* or *std2* parameters are negative in a
    call to this method, this method will return the same result as if it were passed
    `numpy.abs(std1)` and `numpy.abs(std2)`, respectively, instead; no exceptions
    or warnings will be emitted.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/T-test#Independent_two-sample_t-test](https://en.wikipedia.org/wiki/T-test#Independent_two-sample_t-test)'
  prefs: []
  type: TYPE_NORMAL
- en: '[[2](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Welch%27s_t-test](https://en.wikipedia.org/wiki/Welch%27s_t-test)'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Suppose we have the summary data for two samples, as follows (with the Sample
    Variance being the corrected sample variance):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Apply the t-test to this data (with the assumption that the population variances
    are equal):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'For comparison, here is the data from which those summary statistics were taken.
    With this data, we can compute the same result using [`scipy.stats.ttest_ind`](scipy.stats.ttest_ind.html#scipy.stats.ttest_ind
    "scipy.stats.ttest_ind"):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Suppose we instead have binary data and would like to apply a t-test to compare
    the proportion of 1s in two independent groups:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The sample mean \(\hat{p}\) is the proportion of ones in the sample and the
    variance for a binary observation is estimated by \(\hat{p}(1-\hat{p})\).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: For comparison, we could compute the t statistic and p-value using arrays of
    0s and 1s and *scipy.stat.ttest_ind*, as above.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
