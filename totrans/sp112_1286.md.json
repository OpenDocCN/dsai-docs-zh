["```py\nscipy.stats.relfreq(a, numbins=10, defaultreallimits=None, weights=None)\n```", "```py\n>>> import numpy as np\n>>> import matplotlib.pyplot as plt\n>>> from scipy import stats\n>>> rng = np.random.default_rng()\n>>> a = np.array([2, 4, 1, 2, 3, 2])\n>>> res = stats.relfreq(a, numbins=4)\n>>> res.frequency\narray([ 0.16666667, 0.5       , 0.16666667,  0.16666667])\n>>> np.sum(res.frequency)  # relative frequencies should add up to 1\n1.0 \n```", "```py\n>>> samples = stats.norm.rvs(size=1000, random_state=rng) \n```", "```py\n>>> res = stats.relfreq(samples, numbins=25) \n```", "```py\n>>> x = res.lowerlimit + np.linspace(0, res.binsize*res.frequency.size,\n...                                  res.frequency.size) \n```", "```py\n>>> fig = plt.figure(figsize=(5, 4))\n>>> ax = fig.add_subplot(1, 1, 1)\n>>> ax.bar(x, res.frequency, width=res.binsize)\n>>> ax.set_title('Relative frequency histogram')\n>>> ax.set_xlim([x.min(), x.max()]) \n```", "```py\n>>> plt.show() \n```"]