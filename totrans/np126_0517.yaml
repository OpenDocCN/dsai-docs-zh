- en: numpy.frompyfunc
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.frompyfunc
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.frompyfunc.html](https://numpy.org/doc/1.26/reference/generated/numpy.frompyfunc.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.frompyfunc.html](https://numpy.org/doc/1.26/reference/generated/numpy.frompyfunc.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Takes an arbitrary Python function and returns a NumPy ufunc.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 采用任意Python函数，并返回一个NumPy ufunc。
- en: Can be used, for example, to add broadcasting to a built-in Python function
    (see Examples section).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，可用于对内置Python函数添加广播功能（见示例部分）。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**func**Python function object'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**func**Python 函数对象'
- en: An arbitrary Python function.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 任意的Python函数。
- en: '**nin**int'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**nin**整数'
- en: The number of input arguments.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 输入参数的数量。
- en: '**nout**int'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**nout**整数'
- en: The number of objects returned by *func*.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '*func*返回的对象数量。'
- en: '**identity**object, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**identity**对象，可选'
- en: The value to use for the [`identity`](numpy.ufunc.identity.html#numpy.ufunc.identity
    "numpy.ufunc.identity") attribute of the resulting object. If specified, this
    is equivalent to setting the underlying C `identity` field to `PyUFunc_IdentityValue`.
    If omitted, the identity is set to `PyUFunc_None`. Note that this is _not_ equivalent
    to setting the identity to `None`, which implies the operation is reorderable.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[`identity`](numpy.ufunc.identity.html#numpy.ufunc.identity "numpy.ufunc.identity")属性的值。如果指定，这相当于设置底层C的`identity`字段为`PyUFunc_IdentityValue`。如果省略，身份设置为`PyUFunc_None`。请注意，这并不相当于将身份设置为`None`，这意味着操作是可重定的。'
- en: 'Returns:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**out**ufunc'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**ufunc'
- en: Returns a NumPy universal function (`ufunc`) object.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个NumPy通用函数（`ufunc`）对象。
- en: See also
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`vectorize`](numpy.vectorize.html#numpy.vectorize "numpy.vectorize")'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[`vectorize`](numpy.vectorize.html#numpy.vectorize "numpy.vectorize")'
- en: Evaluates pyfunc over input arrays using broadcasting rules of numpy.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 使用NumPy的广播规则在输入数组上计算pyfunc。
- en: Notes
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: The returned ufunc always returns PyObject arrays.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的ufunc始终返回PyObject数组。
- en: Examples
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Use frompyfunc to add broadcasting to the Python function `oct`:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 使用frompyfunc来为Python函数`oct`添加广播功能：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
