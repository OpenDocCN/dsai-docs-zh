- en: YOLOv5 Quickstart üöÄ
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[`docs.ultralytics.com/yolov5/quickstart_tutorial/`](https://docs.ultralytics.com/yolov5/quickstart_tutorial/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Embark on your journey into the dynamic realm of real-time object detection
    with YOLOv5! This guide is crafted to serve as a comprehensive starting point
    for AI enthusiasts and professionals aiming to master YOLOv5\. From initial setup
    to advanced training techniques, we've got you covered. By the end of this guide,
    you'll have the knowledge to implement YOLOv5 into your projects confidently.
    Let's ignite the engines and soar into YOLOv5!
  prefs: []
  type: TYPE_NORMAL
- en: Install
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Prepare for launch by cloning the repository and establishing the environment.
    This ensures that all the necessary [requirements](https://github.com/ultralytics/yolov5/blob/master/requirements.txt)
    are installed. Check that you have [**Python>=3.8.0**](https://www.python.org/)
    and [**PyTorch>=1.8**](https://pytorch.org/get-started/locally/) ready for takeoff.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Inference with PyTorch Hub
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Experience the simplicity of YOLOv5 PyTorch Hub inference, where [models](https://github.com/ultralytics/yolov5/tree/master/models)
    are seamlessly downloaded from the latest YOLOv5 [release](https://github.com/ultralytics/yolov5/releases).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Inference with detect.py
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Harness `detect.py` for versatile inference on various sources. It automatically
    fetches [models](https://github.com/ultralytics/yolov5/tree/master/models) from
    the latest YOLOv5 [release](https://github.com/ultralytics/yolov5/releases) and
    saves results with ease.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Training
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Replicate the YOLOv5 [COCO](https://github.com/ultralytics/yolov5/blob/master/data/scripts/get_coco.sh)
    benchmarks with the instructions below. The necessary [models](https://github.com/ultralytics/yolov5/tree/master/models)
    and [datasets](https://github.com/ultralytics/yolov5/tree/master/data) are pulled
    directly from the latest YOLOv5 [release](https://github.com/ultralytics/yolov5/releases).
    Training YOLOv5n/s/m/l/x on a V100 GPU should typically take 1/2/4/6/8 days respectively
    (note that Multi-GPU setups work faster). Maximize performance by using the highest
    possible `--batch-size` or use `--batch-size -1` for the YOLOv5 [AutoBatch](https://github.com/ultralytics/yolov5/pull/5092)
    feature. The following batch sizes are ideal for V100-16GB GPUs.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![YOLO training curves](img/1b5bdcf7cdb22553a4e2161fb0110304.png)'
  prefs: []
  type: TYPE_IMG
- en: To conclude, YOLOv5 is not only a state-of-the-art tool for object detection
    but also a testament to the power of machine learning in transforming the way
    we interact with the world through visual understanding. As you progress through
    this guide and begin applying YOLOv5 to your projects, remember that you are at
    the forefront of a technological revolution, capable of achieving remarkable feats.
    Should you need further insights or support from fellow visionaries, you're invited
    to our [GitHub repository](https://github.com/ultralytics/yolov5) home to a thriving
    community of developers and researchers. Keep exploring, keep innovating, and
    enjoy the marvels of YOLOv5\. Happy detecting! üå†üîç
  prefs: []
  type: TYPE_NORMAL
