- en: scipy.stats.siegelslopes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.siegelslopes.html#scipy.stats.siegelslopes](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.siegelslopes.html#scipy.stats.siegelslopes)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Computes the Siegel estimator for a set of points (x, y).
  prefs: []
  type: TYPE_NORMAL
- en: '[`siegelslopes`](#scipy.stats.siegelslopes "scipy.stats.siegelslopes") implements
    a method for robust linear regression using repeated medians (see [[1]](#r38c02cfc4873-1))
    to fit a line to the points (x, y). The method is robust to outliers with an asymptotic
    breakdown point of 50%.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**y**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Dependent variable.
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like or None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Independent variable. If None, use `arange(len(y))` instead.
  prefs: []
  type: TYPE_NORMAL
- en: '**method**{‘hierarchical’, ‘separate’}'
  prefs: []
  type: TYPE_NORMAL
- en: If ‘hierarchical’, estimate the intercept using the estimated slope `slope`
    (default option). If ‘separate’, estimate the intercept independent of the estimated
    slope. See Notes for details.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**result**`SiegelslopesResult` instance'
  prefs: []
  type: TYPE_NORMAL
- en: 'The return value is an object with the following attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: slopefloat
  prefs: []
  type: TYPE_NORMAL
- en: Estimate of the slope of the regression line.
  prefs: []
  type: TYPE_NORMAL
- en: interceptfloat
  prefs: []
  type: TYPE_NORMAL
- en: Estimate of the intercept of the regression line.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`theilslopes`](scipy.stats.theilslopes.html#scipy.stats.theilslopes "scipy.stats.theilslopes")'
  prefs: []
  type: TYPE_NORMAL
- en: a similar technique without repeated medians
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'With `n = len(y)`, compute `m_j` as the median of the slopes from the point
    `(x[j], y[j])` to all other *n-1* points. `slope` is then the median of all slopes
    `m_j`. Two ways are given to estimate the intercept in [[1]](#r38c02cfc4873-1)
    which can be chosen via the parameter `method`. The hierarchical approach uses
    the estimated slope `slope` and computes `intercept` as the median of `y - slope*x`.
    The other approach estimates the intercept separately as follows: for each point
    `(x[j], y[j])`, compute the intercepts of all the *n-1* lines through the remaining
    points and take the median `i_j`. `intercept` is the median of the `i_j`.'
  prefs: []
  type: TYPE_NORMAL
- en: The implementation computes *n* times the median of a vector of size *n* which
    can be slow for large vectors. There are more efficient algorithms (see [[2]](#r38c02cfc4873-2))
    which are not implemented here.
  prefs: []
  type: TYPE_NORMAL
- en: 'For compatibility with older versions of SciPy, the return value acts like
    a `namedtuple` of length 2, with fields `slope` and `intercept`, so one can continue
    to write:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1] ([1](#id1),[2](#id2))'
  prefs: []
  type: TYPE_NORMAL
- en: A. Siegel, “Robust Regression Using Repeated Medians”, Biometrika, Vol. 69,
    pp. 242-244, 1982.
  prefs: []
  type: TYPE_NORMAL
- en: '[[2](#id3)]'
  prefs: []
  type: TYPE_NORMAL
- en: A. Stein and M. Werman, “Finding the repeated median regression line”, Proceedings
    of the Third Annual ACM-SIAM Symposium on Discrete Algorithms, pp. 409-413, 1992.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Compute the slope and intercept. For comparison, also compute the least-squares
    fit with [`linregress`](scipy.stats.linregress.html#scipy.stats.linregress "scipy.stats.linregress"):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Plot the results. The Siegel regression line is shown in red. The green line
    shows the least-squares fit for comparison.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-stats-siegelslopes-1.png](../Images/66e26eb70ab5fd23749438fdd43d1153.png)'
  prefs: []
  type: TYPE_IMG
