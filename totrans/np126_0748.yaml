- en: numpy.ma.cumsum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.cumsum.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.cumsum.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return the cumulative sum of the array elements over the given axis.
  prefs: []
  type: TYPE_NORMAL
- en: Masked values are set to 0 internally during the computation. However, their
    position is saved, and the result will be masked at the same locations.
  prefs: []
  type: TYPE_NORMAL
- en: Refer to [`numpy.cumsum`](numpy.cumsum.html#numpy.cumsum "numpy.cumsum") for
    full documentation.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.ndarray.cumsum`](numpy.ndarray.cumsum.html#numpy.ndarray.cumsum "numpy.ndarray.cumsum")'
  prefs: []
  type: TYPE_NORMAL
- en: corresponding function for ndarrays
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.cumsum`](numpy.cumsum.html#numpy.cumsum "numpy.cumsum")'
  prefs: []
  type: TYPE_NORMAL
- en: equivalent function
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The mask is lost if *out* is not a valid [`ma.MaskedArray`](../maskedarray.baseclass.html#numpy.ma.MaskedArray
    "numpy.ma.MaskedArray") !
  prefs: []
  type: TYPE_NORMAL
- en: Arithmetic is modular when using integer types, and no error is raised on overflow.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
