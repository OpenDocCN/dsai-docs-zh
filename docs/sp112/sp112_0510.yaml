- en: scipy.signal.choose_conv_method
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.signal.choose_conv_method
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.choose_conv_method.html#scipy.signal.choose_conv_method](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.choose_conv_method.html#scipy.signal.choose_conv_method)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.choose_conv_method.html#scipy.signal.choose_conv_method](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.choose_conv_method.html#scipy.signal.choose_conv_method)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Find the fastest convolution/correlation method.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 找到最快的卷积/相关方法。
- en: This primarily exists to be called during the `method='auto'` option in [`convolve`](scipy.signal.convolve.html#scipy.signal.convolve
    "scipy.signal.convolve") and [`correlate`](scipy.signal.correlate.html#scipy.signal.correlate
    "scipy.signal.correlate"). It can also be used to determine the value of `method`
    for many different convolutions of the same dtype/shape. In addition, it supports
    timing the convolution to adapt the value of `method` to a particular set of inputs
    and/or hardware.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 主要用于在[`卷积`](scipy.signal.convolve.html#scipy.signal.convolve "scipy.signal.convolve")和[`相关`](scipy.signal.correlate.html#scipy.signal.correlate
    "scipy.signal.correlate")的`method='auto'`选项期间调用。它还可用于确定许多相同dtype/shape的卷积的`method`的值。此外，它支持根据特定输入和/或硬件的时间来调整`method`的值。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**in1**array_like'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**in1**类数组'
- en: The first argument passed into the convolution function.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 传递给卷积函数的第一个参数。
- en: '**in2**array_like'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**in2**类数组'
- en: The second argument passed into the convolution function.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 传递给卷积函数的第二个参数。
- en: '**mode**str {‘full’, ‘valid’, ‘same’}, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**模式**字符串 {‘full’, ‘valid’, ‘same’}，可选'
- en: 'A string indicating the size of the output:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 输出大小的字符串指示：
- en: '`full`'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '`full`'
- en: The output is the full discrete linear convolution of the inputs. (Default)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 输出是输入的完整离散线性卷积。（默认）
- en: '`valid`'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`valid`'
- en: The output consists only of those elements that do not rely on the zero-padding.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 输出仅包含不依赖于零填充的元素。
- en: '`same`'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`same`'
- en: The output is the same size as *in1*, centered with respect to the ‘full’ output.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 输出与*in1*相同大小，相对于‘full’输出居中。
- en: '**measure**bool, optional'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**测量**布尔值，可选'
- en: If True, run and time the convolution of *in1* and *in2* with both methods and
    return the fastest. If False (default), predict the fastest method using precomputed
    values.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为True，则使用两种方法运行和计时*in1*和*in2*的卷积，并返回最快的方法。如果为False（默认），则使用预计算的值预测最快方法。
- en: 'Returns:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**method**str'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**方法**字符串'
- en: A string indicating which convolution method is fastest, either ‘direct’ or
    ‘fft’
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 指示哪种卷积方法最快的字符串，可以是‘direct’或‘fft’
- en: '**times**dict, optional'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**times**字典，可选'
- en: A dictionary containing the times (in seconds) needed for each method. This
    value is only returned if `measure=True`.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 包含每种方法所需时间（以秒为单位）的字典。仅当`measure=True`时才返回此值。
- en: See also
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`convolve`](scipy.signal.convolve.html#scipy.signal.convolve "scipy.signal.convolve")'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[`卷积`](scipy.signal.convolve.html#scipy.signal.convolve "scipy.signal.convolve")'
- en: '[`correlate`](scipy.signal.correlate.html#scipy.signal.correlate "scipy.signal.correlate")'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[`相关`](scipy.signal.correlate.html#scipy.signal.correlate "scipy.signal.correlate")'
- en: Notes
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Generally, this method is 99% accurate for 2D signals and 85% accurate for 1D
    signals for randomly chosen input sizes. For precision, use `measure=True` to
    find the fastest method by timing the convolution. This can be used to avoid the
    minimal overhead of finding the fastest `method` later, or to adapt the value
    of `method` to a particular set of inputs.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，对于随机选择的输入尺寸，此方法在2D信号中的准确率为99%，在1D信号中为85%。为了精度，使用`measure=True`来找到计算卷积所需的最快方法。这可以用来避免稍后找到最快`method`的最小开销，或者根据特定输入集合调整`method`的值。
- en: 'Experiments were run on an Amazon EC2 r5a.2xlarge machine to test this function.
    These experiments measured the ratio between the time required when using `method=''auto''`
    and the time required for the fastest method (i.e., `ratio = time_auto / min(time_fft,
    time_direct)`). In these experiments, we found:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 实验在Amazon EC2 r5a.2xlarge机器上运行，以测试此函数。这些实验测量了使用`method='auto'`时所需的时间与最快方法（即`ratio
    = time_auto / min(time_fft, time_direct)`）之间的比率。在这些实验中，我们发现：
- en: There is a 95% chance of this ratio being less than 1.5 for 1D signals and a
    99% chance of being less than 2.5 for 2D signals.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于1D信号，这个比率小于1.5的可能性为95%，对于2D信号，这个比率小于2.5的可能性为99%。
- en: The ratio was always less than 2.5/5 for 1D/2D signals respectively.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于1D/2D信号，这个比率始终小于2.5/5。
- en: This function is most inaccurate for 1D convolutions that take between 1 and
    10 milliseconds with `method='direct'`. A good proxy for this (at least in our
    experiments) is `1e6 <= in1.size * in2.size <= 1e7`.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此函数在处理`method='direct'`的1D卷积时最不准确，耗时介于1到10毫秒之间。在我们的实验中，这个值的一个良好代理是`1e6 <= in1.size
    * in2.size <= 1e7`。
- en: The 2D results almost certainly generalize to 3D/4D/etc because the implementation
    is the same (the 1D implementation is different).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 2D结果几乎可以肯定地推广到3D/4D等，因为实现是相同的（1D实现是不同的）。
- en: All the numbers above are specific to the EC2 machine. However, we did find
    that this function generalizes fairly decently across hardware. The speed tests
    were of similar quality (and even slightly better) than the same tests performed
    on the machine to tune this function’s numbers (a mid-2014 15-inch MacBook Pro
    with 16GB RAM and a 2.5GHz Intel i7 processor).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 上述所有数字都特定于EC2机器。然而，我们确实发现该函数在不同硬件上表现相当良好。速度测试的质量与调整此函数数字的机器相似（一台2014年中期的15英寸MacBook
    Pro，配备16GB RAM和2.5GHz的Intel i7处理器）。
- en: There are cases when [`fftconvolve`](scipy.signal.fftconvolve.html#scipy.signal.fftconvolve
    "scipy.signal.fftconvolve") supports the inputs but this function returns *direct*
    (e.g., to protect against floating point integer precision).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 存在一些情况，[`fftconvolve`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.fftconvolve.html#scipy.signal.fftconvolve
    "scipy.signal.fftconvolve")支持输入，但此函数返回*direct*（例如，为了防止浮点整数精度问题）。
- en: New in version 0.19.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 从0.19版本开始新增。
- en: Examples
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Estimate the fastest method for a given input:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 估算给定输入的最快方法：
- en: '[PRE1]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This can then be applied to other arrays of the same dtype and shape:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 然后可以应用于相同数据类型和形状的其他数组：
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The output of this function (`method`) works with [`correlate`](scipy.signal.correlate.html#scipy.signal.correlate
    "scipy.signal.correlate") and [`convolve`](scipy.signal.convolve.html#scipy.signal.convolve
    "scipy.signal.convolve").
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数的输出(`method`)与[`correlate`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.correlate.html#scipy.signal.correlate
    "scipy.signal.correlate")和[`convolve`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.convolve.html#scipy.signal.convolve
    "scipy.signal.convolve")一起使用。
