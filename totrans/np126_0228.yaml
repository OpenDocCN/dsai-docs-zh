- en: numpy.lib.stride_tricks.as_strided
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.lib.stride_tricks.as_strided.html](https://numpy.org/doc/1.26/reference/generated/numpy.lib.stride_tricks.as_strided.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Create a view into the array with the given shape and strides.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: This function has to be used with extreme care, see notes.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Array to create a new.
  prefs: []
  type: TYPE_NORMAL
- en: '**shape**sequence of int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The shape of the new array. Defaults to `x.shape`.
  prefs: []
  type: TYPE_NORMAL
- en: '**strides**sequence of int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The strides of the new array. Defaults to `x.strides`.
  prefs: []
  type: TYPE_NORMAL
- en: '**subok**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.10.
  prefs: []
  type: TYPE_NORMAL
- en: If True, subclasses are preserved.
  prefs: []
  type: TYPE_NORMAL
- en: '**writeable**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.12.
  prefs: []
  type: TYPE_NORMAL
- en: If set to False, the returned array will always be readonly. Otherwise it will
    be writable if the original array was. It is advisable to set this to False if
    possible (see Notes).
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**view**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`broadcast_to`](numpy.broadcast_to.html#numpy.broadcast_to "numpy.broadcast_to")'
  prefs: []
  type: TYPE_NORMAL
- en: broadcast an array to a given shape.
  prefs: []
  type: TYPE_NORMAL
- en: '[`reshape`](numpy.reshape.html#numpy.reshape "numpy.reshape")'
  prefs: []
  type: TYPE_NORMAL
- en: reshape an array.
  prefs: []
  type: TYPE_NORMAL
- en: '[`lib.stride_tricks.sliding_window_view`](numpy.lib.stride_tricks.sliding_window_view.html#numpy.lib.stride_tricks.sliding_window_view
    "numpy.lib.stride_tricks.sliding_window_view")'
  prefs: []
  type: TYPE_NORMAL
- en: userfriendly and safe function for the creation of sliding window views.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: '`as_strided` creates a view into the array given the exact strides and shape.
    This means it manipulates the internal data structure of ndarray and, if done
    incorrectly, the array elements can point to invalid memory and can corrupt results
    or crash your program. It is advisable to always use the original `x.strides`
    when calculating new strides to avoid reliance on a contiguous memory layout.'
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, arrays created with this function often contain self overlapping
    memory, so that two elements are identical. Vectorized write operations on such
    arrays will typically be unpredictable. They may even give different results for
    small, large, or transposed arrays.
  prefs: []
  type: TYPE_NORMAL
- en: Since writing to these arrays has to be tested and done with great care, you
    may want to use `writeable=False` to avoid accidental write operations.
  prefs: []
  type: TYPE_NORMAL
- en: For these reasons it is advisable to avoid `as_strided` when possible.
  prefs: []
  type: TYPE_NORMAL
