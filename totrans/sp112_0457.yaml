- en: scipy.optimize.bisect
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[`scipy.optimize.bisect`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.bisect.html#scipy.optimize.bisect
    "scipy.optimize.bisect")'
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.bisect.html#scipy.optimize.bisect](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.bisect.html#scipy.optimize.bisect)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.bisect.html#scipy.optimize.bisect](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.bisect.html#scipy.optimize.bisect)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Find root of a function within an interval using bisection.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 使用二分法在区间内找到函数的根。
- en: Basic bisection routine to find a root of the function *f* between the arguments
    *a* and *b*. *f(a)* and *f(b)* cannot have the same signs. Slow but sure.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 基本的二分法例程，用于在参数*a*和*b*之间找到函数*f*的根。*f(a)*和*f(b)*不能有相同的符号。缓慢但可靠。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**f**function'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**f**函数'
- en: Python function returning a number. *f* must be continuous, and f(a) and f(b)
    must have opposite signs.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个数的Python函数。*f*必须是连续的，且*f(a)*和*f(b)*必须有相反的符号。
- en: '**a**scalar'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**标量'
- en: One end of the bracketing interval [a,b].
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 一个括号间隔的端点[a,b]。
- en: '**b**scalar'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**b**标量'
- en: The other end of the bracketing interval [a,b].
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 括号间隔的另一端[a,b]。
- en: '**xtol**number, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**xtol**数值，可选'
- en: The computed root `x0` will satisfy `np.allclose(x, x0, atol=xtol, rtol=rtol)`,
    where `x` is the exact root. The parameter must be positive.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 计算得到的根`x0`满足`np.allclose(x, x0, atol=xtol, rtol=rtol)`，其中`x`是精确的根。该参数必须为正。
- en: '**rtol**number, optional'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**rtol**数值，可选'
- en: The computed root `x0` will satisfy `np.allclose(x, x0, atol=xtol, rtol=rtol)`,
    where `x` is the exact root. The parameter cannot be smaller than its default
    value of `4*np.finfo(float).eps`.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 计算得到的根`x0`满足`np.allclose(x, x0, atol=xtol, rtol=rtol)`，其中`x`是精确的根。该参数不能小于其默认值`4*np.finfo(float).eps`。
- en: '**maxiter**int, optional'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**maxiter**整数，可选'
- en: If convergence is not achieved in *maxiter* iterations, an error is raised.
    Must be >= 0.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在*maxiter*次迭代中未实现收敛，则引发错误。必须>= 0。
- en: '**args**tuple, optional'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**args**元组，可选'
- en: Containing extra arguments for the function *f*. *f* is called by `apply(f,
    (x)+args)`.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 包含传递给函数*f*的额外参数。*f*由`apply(f, (x)+args)`调用。
- en: '**full_output**bool, optional'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**full_output**布尔型，可选'
- en: If *full_output* is False, the root is returned. If *full_output* is True, the
    return value is `(x, r)`, where x is the root, and r is a [`RootResults`](scipy.optimize.RootResults.html#scipy.optimize.RootResults
    "scipy.optimize.RootResults") object.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*full_output*为False，则返回根。如果*full_output*为True，则返回值为`(x, r)`，其中x为根，r为[`RootResults`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.RootResults.html#scipy.optimize.RootResults
    "scipy.optimize.RootResults")对象。
- en: '**disp**bool, optional'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**disp**布尔型，可选'
- en: If True, raise RuntimeError if the algorithm didn’t converge. Otherwise, the
    convergence status is recorded in a [`RootResults`](scipy.optimize.RootResults.html#scipy.optimize.RootResults
    "scipy.optimize.RootResults") return object.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为True，则在算法未收敛时引发RuntimeError。否则，收敛状态记录在[`RootResults`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.RootResults.html#scipy.optimize.RootResults
    "scipy.optimize.RootResults")返回对象中。
- en: 'Returns:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**root**float'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**root**浮点数'
- en: Root of *f* between *a* and *b*.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '*f*在*a*和*b*之间的根。'
- en: '**r**[`RootResults`](scipy.optimize.RootResults.html#scipy.optimize.RootResults
    "scipy.optimize.RootResults") (present if `full_output = True`)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**r**[`RootResults`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.RootResults.html#scipy.optimize.RootResults
    "scipy.optimize.RootResults")（如果`full_output = True`）'
- en: Object containing information about the convergence. In particular, `r.converged`
    is True if the routine converged.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 包含有关收敛性的信息的对象。特别地，如果程序收敛，则`r.converged`为True。
- en: See also
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`brentq`](scipy.optimize.brentq.html#scipy.optimize.brentq "scipy.optimize.brentq"),
    [`brenth`](scipy.optimize.brenth.html#scipy.optimize.brenth "scipy.optimize.brenth"),
    [`bisect`](#scipy.optimize.bisect "scipy.optimize.bisect"), [`newton`](scipy.optimize.newton.html#scipy.optimize.newton
    "scipy.optimize.newton")'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[`brentq`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.brentq.html#scipy.optimize.brentq
    "scipy.optimize.brentq")，[`brenth`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.brenth.html#scipy.optimize.brenth
    "scipy.optimize.brenth")，[`bisect`](#scipy.optimize.bisect "scipy.optimize.bisect")，[`newton`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.newton.html#scipy.optimize.newton
    "scipy.optimize.newton")'
- en: '[`fixed_point`](scipy.optimize.fixed_point.html#scipy.optimize.fixed_point
    "scipy.optimize.fixed_point")'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fixed_point`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.fixed_point.html#scipy.optimize.fixed_point
    "scipy.optimize.fixed_point")'
- en: scalar fixed-point finder
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 标量的固定点查找器
- en: '[`fsolve`](scipy.optimize.fsolve.html#scipy.optimize.fsolve "scipy.optimize.fsolve")'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fsolve`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.fsolve.html#scipy.optimize.fsolve
    "scipy.optimize.fsolve")'
- en: n-dimensional root-finding
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: n维根查找
- en: Examples
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
