["```py\nsympy.physics.vector.printing.init_vprinting(**kwargs)\n```", "```py\n>>> from sympy import Function, symbols\n>>> t, x = symbols('t, x')\n>>> omega = Function('omega')\n>>> omega(x).diff()\nDerivative(omega(x), x)\n>>> omega(t).diff()\nDerivative(omega(t), t) \n```", "```py\n>>> from sympy.physics.vector import init_vprinting\n>>> init_vprinting(pretty_print=False)\n>>> omega(x).diff()\nDerivative(omega(x), x)\n>>> omega(t).diff()\nomega' \n```", "```py\nsympy.physics.vector.printing.vprint(expr, **settings)\n```", "```py\n>>> from sympy.physics.vector import vprint, dynamicsymbols\n>>> u1 = dynamicsymbols('u1')\n>>> print(u1)\nu1(t)\n>>> vprint(u1)\nu1 \n```", "```py\nsympy.physics.vector.printing.vpprint(expr, **settings)\n```", "```py\nsympy.physics.vector.printing.vlatex(expr, **settings)\n```", "```py\n>>> from sympy.physics.vector import vlatex, ReferenceFrame, dynamicsymbols\n>>> N = ReferenceFrame('N')\n>>> q1, q2 = dynamicsymbols('q1 q2')\n>>> q1d, q2d = dynamicsymbols('q1 q2', 1)\n>>> q1dd, q2dd = dynamicsymbols('q1 q2', 2)\n>>> vlatex(N.x + N.y)\n'\\\\mathbf{\\\\hat{n}_x} + \\\\mathbf{\\\\hat{n}_y}'\n>>> vlatex(q1 + q2)\n'q_{1} + q_{2}'\n>>> vlatex(q1d)\n'\\\\dot{q}_{1}'\n>>> vlatex(q1 * q2d)\n'q_{1} \\\\dot{q}_{2}'\n>>> vlatex(q1dd * q1 / q1d)\n'\\\\frac{q_{1} \\\\ddot{q}_{1}}{\\\\dot{q}_{1}}' \n```"]