- en: Series
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Series
- en: 原文：[https://pandas.pydata.org/docs/reference/series.html](https://pandas.pydata.org/docs/reference/series.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/series.html](https://pandas.pydata.org/docs/reference/series.html)
- en: '## Constructor'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '## 构造函数'
- en: '| [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series")([data, index, dtype, name, copy, ...])
    | One-dimensional ndarray with axis labels (including time series). |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '| [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series")([data, index, dtype, name, copy, ...])
    | 具有轴标签（包括时间序列）的一维 ndarray。 |'
- en: Attributes
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 属性
- en: '**Axes**'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**轴**'
- en: '| [`Series.index`](api/pandas.Series.index.html#pandas.Series.index "pandas.Series.index")
    | The index (axis labels) of the Series. |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.index`](api/pandas.Series.index.html#pandas.Series.index "pandas.Series.index")
    | Series 的索引（轴标签）。 |'
- en: '| [`Series.array`](api/pandas.Series.array.html#pandas.Series.array "pandas.Series.array")
    | The ExtensionArray of the data backing this Series or Index. |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.array`](api/pandas.Series.array.html#pandas.Series.array "pandas.Series.array")
    | 支持此 Series 或 Index 的数据的 ExtensionArray。 |'
- en: '| [`Series.values`](api/pandas.Series.values.html#pandas.Series.values "pandas.Series.values")
    | Return Series as ndarray or ndarray-like depending on the dtype. |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.values`](api/pandas.Series.values.html#pandas.Series.values "pandas.Series.values")
    | 返回 Series 作为 ndarray 或者类似 ndarray，取决于 dtype。 |'
- en: '| [`Series.dtype`](api/pandas.Series.dtype.html#pandas.Series.dtype "pandas.Series.dtype")
    | Return the dtype object of the underlying data. |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dtype`](api/pandas.Series.dtype.html#pandas.Series.dtype "pandas.Series.dtype")
    | 返回底层数据的 dtype 对象。 |'
- en: '| [`Series.shape`](api/pandas.Series.shape.html#pandas.Series.shape "pandas.Series.shape")
    | Return a tuple of the shape of the underlying data. |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.shape`](api/pandas.Series.shape.html#pandas.Series.shape "pandas.Series.shape")
    | 返回底层数据的形状的元组。 |'
- en: '| [`Series.nbytes`](api/pandas.Series.nbytes.html#pandas.Series.nbytes "pandas.Series.nbytes")
    | Return the number of bytes in the underlying data. |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.nbytes`](api/pandas.Series.nbytes.html#pandas.Series.nbytes "pandas.Series.nbytes")
    | 返回底层数据中的字节数。 |'
- en: '| [`Series.ndim`](api/pandas.Series.ndim.html#pandas.Series.ndim "pandas.Series.ndim")
    | Number of dimensions of the underlying data, by definition 1. |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.ndim`](api/pandas.Series.ndim.html#pandas.Series.ndim "pandas.Series.ndim")
    | 底层数据的维度数量，根据定义为 1。 |'
- en: '| [`Series.size`](api/pandas.Series.size.html#pandas.Series.size "pandas.Series.size")
    | Return the number of elements in the underlying data. |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.size`](api/pandas.Series.size.html#pandas.Series.size "pandas.Series.size")
    | 返回底层数据中的元素数量。 |'
- en: '| [`Series.T`](api/pandas.Series.T.html#pandas.Series.T "pandas.Series.T")
    | Return the transpose, which is by definition self. |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.T`](api/pandas.Series.T.html#pandas.Series.T "pandas.Series.T")
    | 返回转置，根据定义是自身。 |'
- en: '| [`Series.memory_usage`](api/pandas.Series.memory_usage.html#pandas.Series.memory_usage
    "pandas.Series.memory_usage")([index, deep]) | Return the memory usage of the
    Series. |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.memory_usage`](api/pandas.Series.memory_usage.html#pandas.Series.memory_usage
    "pandas.Series.memory_usage")([index, deep]) | 返回 Series 的内存使用情况。 |'
- en: '| [`Series.hasnans`](api/pandas.Series.hasnans.html#pandas.Series.hasnans "pandas.Series.hasnans")
    | Return True if there are any NaNs. |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.hasnans`](api/pandas.Series.hasnans.html#pandas.Series.hasnans "pandas.Series.hasnans")
    | 如果存在任何 NaN，则返回 True。 |'
- en: '| [`Series.empty`](api/pandas.Series.empty.html#pandas.Series.empty "pandas.Series.empty")
    | Indicator whether Series/DataFrame is empty. |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.empty`](api/pandas.Series.empty.html#pandas.Series.empty "pandas.Series.empty")
    | 指示 Series/DataFrame 是否为空。 |'
- en: '| [`Series.dtypes`](api/pandas.Series.dtypes.html#pandas.Series.dtypes "pandas.Series.dtypes")
    | Return the dtype object of the underlying data. |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dtypes`](api/pandas.Series.dtypes.html#pandas.Series.dtypes "pandas.Series.dtypes")
    | 返回底层数据的 dtype 对象。 |'
- en: '| [`Series.name`](api/pandas.Series.name.html#pandas.Series.name "pandas.Series.name")
    | Return the name of the Series. |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.name`](api/pandas.Series.name.html#pandas.Series.name "pandas.Series.name")
    | 返回 Series 的名称。 |'
- en: '| [`Series.flags`](api/pandas.Series.flags.html#pandas.Series.flags "pandas.Series.flags")
    | Get the properties associated with this pandas object. |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.flags`](api/pandas.Series.flags.html#pandas.Series.flags "pandas.Series.flags")
    | 获取与此 pandas 对象关联的属性。 |'
- en: '| [`Series.set_flags`](api/pandas.Series.set_flags.html#pandas.Series.set_flags
    "pandas.Series.set_flags")(*[, copy, ...]) | Return a new object with updated
    flags. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.set_flags`](api/pandas.Series.set_flags.html#pandas.Series.set_flags
    "pandas.Series.set_flags")(*[, copy, ...]) | 返回具有更新标志的新对象。 |'
- en: Conversion
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 转换
- en: '| [`Series.astype`](api/pandas.Series.astype.html#pandas.Series.astype "pandas.Series.astype")(dtype[, copy, errors])
    | Cast a pandas object to a specified dtype `dtype`. |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.astype`](api/pandas.Series.astype.html#pandas.Series.astype "pandas.Series.astype")(dtype[, copy, errors])
    | 将 pandas 对象转换为指定的 dtype `dtype`。 |'
- en: '| [`Series.convert_dtypes`](api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes")([infer_objects, ...]) | Convert columns to the
    best possible dtypes using dtypes supporting `pd.NA`. |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.convert_dtypes`](api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes")([infer_objects, ...]) | 使用支持`pd.NA`的dtype将列转换为最佳可能的dtype。'
- en: '| [`Series.infer_objects`](api/pandas.Series.infer_objects.html#pandas.Series.infer_objects
    "pandas.Series.infer_objects")([copy]) | Attempt to infer better dtypes for object
    columns. |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.infer_objects`](api/pandas.Series.infer_objects.html#pandas.Series.infer_objects
    "pandas.Series.infer_objects")([copy]) | 尝试为对象列推断更好的dtype。'
- en: '| [`Series.copy`](api/pandas.Series.copy.html#pandas.Series.copy "pandas.Series.copy")([deep])
    | Make a copy of this object''s indices and data. |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.copy`](api/pandas.Series.copy.html#pandas.Series.copy "pandas.Series.copy")([deep])
    | 复制此对象的索引和数据。'
- en: '| [`Series.bool`](api/pandas.Series.bool.html#pandas.Series.bool "pandas.Series.bool")()
    | (DEPRECATED) Return the bool of a single element Series or DataFrame. |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.bool`](api/pandas.Series.bool.html#pandas.Series.bool "pandas.Series.bool")()
    | （已弃用）返回单个元素Series或DataFrame的布尔值。'
- en: '| [`Series.to_numpy`](api/pandas.Series.to_numpy.html#pandas.Series.to_numpy
    "pandas.Series.to_numpy")([dtype, copy, na_value]) | A NumPy ndarray representing
    the values in this Series or Index. |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_numpy`](api/pandas.Series.to_numpy.html#pandas.Series.to_numpy
    "pandas.Series.to_numpy")([dtype, copy, na_value]) | 表示此Series或Index中的值的NumPy
    ndarray。'
- en: '| [`Series.to_period`](api/pandas.Series.to_period.html#pandas.Series.to_period
    "pandas.Series.to_period")([freq, copy]) | Convert Series from DatetimeIndex to
    PeriodIndex. |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_period`](api/pandas.Series.to_period.html#pandas.Series.to_period
    "pandas.Series.to_period")([freq, copy]) | 将Series从DatetimeIndex转换为PeriodIndex。'
- en: '| [`Series.to_timestamp`](api/pandas.Series.to_timestamp.html#pandas.Series.to_timestamp
    "pandas.Series.to_timestamp")([freq, how, copy]) | Cast to DatetimeIndex of Timestamps,
    at *beginning* of period. |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_timestamp`](api/pandas.Series.to_timestamp.html#pandas.Series.to_timestamp
    "pandas.Series.to_timestamp")([freq, how, copy]) | 转换为时间戳的DatetimeIndex，位于*周期的开始*。'
- en: '| [`Series.to_list`](api/pandas.Series.to_list.html#pandas.Series.to_list "pandas.Series.to_list")()
    | Return a list of the values. |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_list`](api/pandas.Series.to_list.html#pandas.Series.to_list "pandas.Series.to_list")()
    | 返回值的列表。'
- en: '| [`Series.__array__`](api/pandas.Series.__array__.html#pandas.Series.__array__
    "pandas.Series.__array__")([dtype, copy]) | Return the values as a NumPy array.
    |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.__array__`](api/pandas.Series.__array__.html#pandas.Series.__array__
    "pandas.Series.__array__")([dtype, copy]) | 将值作为NumPy数组返回。'
- en: Indexing, iteration
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 索引，迭代
- en: '| [`Series.get`](api/pandas.Series.get.html#pandas.Series.get "pandas.Series.get")(key[, default])
    | Get item from object for given key (ex: DataFrame column). |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.get`](api/pandas.Series.get.html#pandas.Series.get "pandas.Series.get")(key[, default])
    | 获取给定键（例如DataFrame列）的对象中的项目。'
- en: '| [`Series.at`](api/pandas.Series.at.html#pandas.Series.at "pandas.Series.at")
    | Access a single value for a row/column label pair. |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.at`](api/pandas.Series.at.html#pandas.Series.at "pandas.Series.at")
    | 访问行/列标签对的单个值。'
- en: '| [`Series.iat`](api/pandas.Series.iat.html#pandas.Series.iat "pandas.Series.iat")
    | Access a single value for a row/column pair by integer position. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.iat`](api/pandas.Series.iat.html#pandas.Series.iat "pandas.Series.iat")
    | 通过整数位置访问行/列对的单个值。'
- en: '| [`Series.loc`](api/pandas.Series.loc.html#pandas.Series.loc "pandas.Series.loc")
    | Access a group of rows and columns by label(s) or a boolean array. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.loc`](api/pandas.Series.loc.html#pandas.Series.loc "pandas.Series.loc")
    | 通过标签或布尔数组访问一组行和列。'
- en: '| [`Series.iloc`](api/pandas.Series.iloc.html#pandas.Series.iloc "pandas.Series.iloc")
    | (DEPRECATED) Purely integer-location based indexing for selection by position.
    |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.iloc`](api/pandas.Series.iloc.html#pandas.Series.iloc "pandas.Series.iloc")
    | （已弃用）基于纯整数位置的索引，按位置选择。'
- en: '| [`Series.__iter__`](api/pandas.Series.__iter__.html#pandas.Series.__iter__
    "pandas.Series.__iter__")() | Return an iterator of the values. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.__iter__`](api/pandas.Series.__iter__.html#pandas.Series.__iter__
    "pandas.Series.__iter__")() | 返回值的迭代器。'
- en: '| [`Series.items`](api/pandas.Series.items.html#pandas.Series.items "pandas.Series.items")()
    | Lazily iterate over (index, value) tuples. |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.items`](api/pandas.Series.items.html#pandas.Series.items "pandas.Series.items")()
    | 惰性地遍历（索引，值）元组。'
- en: '| [`Series.keys`](api/pandas.Series.keys.html#pandas.Series.keys "pandas.Series.keys")()
    | Return alias for index. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.keys`](api/pandas.Series.keys.html#pandas.Series.keys "pandas.Series.keys")()
    | 返回索引的别名。'
- en: '| [`Series.pop`](api/pandas.Series.pop.html#pandas.Series.pop "pandas.Series.pop")(item)
    | Return item and drops from series. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.pop`](api/pandas.Series.pop.html#pandas.Series.pop "pandas.Series.pop")(item)
    | 返回项目并从系列中删除。'
- en: '| [`Series.item`](api/pandas.Series.item.html#pandas.Series.item "pandas.Series.item")()
    | Return the first element of the underlying data as a Python scalar. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.item`](api/pandas.Series.item.html#pandas.Series.item "pandas.Series.item")()
    | 将底层数据的第一个元素作为 Python 标量返回。'
- en: '| [`Series.xs`](api/pandas.Series.xs.html#pandas.Series.xs "pandas.Series.xs")(key[, axis, level, drop_level])
    | Return cross-section from the Series/DataFrame. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.xs`](api/pandas.Series.xs.html#pandas.Series.xs "pandas.Series.xs")(key[, axis, level, drop_level])
    | 从系列/数据框返回横截面。'
- en: For more information on `.at`, `.iat`, `.loc`, and `.iloc`, see the [indexing
    documentation](../user_guide/indexing.html#indexing).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于 `.at`, `.iat`, `.loc`, 和 `.iloc` 的信息，请参阅[索引文档](../user_guide/indexing.html#indexing)。
- en: Binary operator functions
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 二元运算符函数
- en: '| [`Series.add`](api/pandas.Series.add.html#pandas.Series.add "pandas.Series.add")(other[, level, fill_value, axis])
    | Return Addition of series and other, element-wise (binary operator add). |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.add`](api/pandas.Series.add.html#pandas.Series.add "pandas.Series.add")(other[, level, fill_value, axis])
    | 返回系列和其他元素的加法（二元运算符 add）。'
- en: '| [`Series.sub`](api/pandas.Series.sub.html#pandas.Series.sub "pandas.Series.sub")(other[, level, fill_value, axis])
    | Return Subtraction of series and other, element-wise (binary operator sub).
    |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sub`](api/pandas.Series.sub.html#pandas.Series.sub "pandas.Series.sub")(other[, level, fill_value, axis])
    | 返回系列和其他元素的减法（二元运算符 sub）。'
- en: '| [`Series.mul`](api/pandas.Series.mul.html#pandas.Series.mul "pandas.Series.mul")(other[, level, fill_value, axis])
    | Return Multiplication of series and other, element-wise (binary operator mul).
    |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.mul`](api/pandas.Series.mul.html#pandas.Series.mul "pandas.Series.mul")(other[, level, fill_value, axis])
    | 返回系列和其他元素的乘法（二元运算符 mul）。'
- en: '| [`Series.div`](api/pandas.Series.div.html#pandas.Series.div "pandas.Series.div")(other[, level, fill_value, axis])
    | Return Floating division of series and other, element-wise (binary operator
    truediv). |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.div`](api/pandas.Series.div.html#pandas.Series.div "pandas.Series.div")(other[, level, fill_value, axis])
    | 返回系列和其他元素的浮点除法（二元运算符 truediv）。'
- en: '| [`Series.truediv`](api/pandas.Series.truediv.html#pandas.Series.truediv "pandas.Series.truediv")(other[, level, fill_value, axis])
    | Return Floating division of series and other, element-wise (binary operator
    truediv). |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.truediv`](api/pandas.Series.truediv.html#pandas.Series.truediv "pandas.Series.truediv")(other[, level, fill_value, axis])
    | 返回系列和其他元素的浮点除法（二元运算符 truediv）。'
- en: '| [`Series.floordiv`](api/pandas.Series.floordiv.html#pandas.Series.floordiv
    "pandas.Series.floordiv")(other[, level, fill_value, axis]) | Return Integer division
    of series and other, element-wise (binary operator floordiv). |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.floordiv`](api/pandas.Series.floordiv.html#pandas.Series.floordiv
    "pandas.Series.floordiv")(other[, level, fill_value, axis]) | 返回系列和其他元素的整数除法（二元运算符
    floordiv）。'
- en: '| [`Series.mod`](api/pandas.Series.mod.html#pandas.Series.mod "pandas.Series.mod")(other[, level, fill_value, axis])
    | Return Modulo of series and other, element-wise (binary operator mod). |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.mod`](api/pandas.Series.mod.html#pandas.Series.mod "pandas.Series.mod")(other[, level, fill_value, axis])
    | 返回系列和其他元素的模运算（二元运算符 mod）。'
- en: '| [`Series.pow`](api/pandas.Series.pow.html#pandas.Series.pow "pandas.Series.pow")(other[, level, fill_value, axis])
    | Return Exponential power of series and other, element-wise (binary operator
    pow). |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.pow`](api/pandas.Series.pow.html#pandas.Series.pow "pandas.Series.pow")(other[, level, fill_value, axis])
    | 返回系列和其他元素的指数幂运算（二元运算符 pow）。'
- en: '| [`Series.radd`](api/pandas.Series.radd.html#pandas.Series.radd "pandas.Series.radd")(other[, level, fill_value, axis])
    | Return Addition of series and other, element-wise (binary operator radd). |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.radd`](api/pandas.Series.radd.html#pandas.Series.radd "pandas.Series.radd")(other[, level, fill_value, axis])
    | 返回系列和其他元素的加法（二元运算符 radd）。'
- en: '| [`Series.rsub`](api/pandas.Series.rsub.html#pandas.Series.rsub "pandas.Series.rsub")(other[, level, fill_value, axis])
    | Return Subtraction of series and other, element-wise (binary operator rsub).
    |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.rsub`](api/pandas.Series.rsub.html#pandas.Series.rsub "pandas.Series.rsub")(other[, level, fill_value, axis])
    | 返回系列和其他元素的减法（二元运算符 rsub）。'
- en: '| [`Series.rmul`](api/pandas.Series.rmul.html#pandas.Series.rmul "pandas.Series.rmul")(other[, level, fill_value, axis])
    | Return Multiplication of series and other, element-wise (binary operator rmul).
    |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.rmul`](api/pandas.Series.rmul.html#pandas.Series.rmul "pandas.Series.rmul")(other[, level, fill_value, axis])
    | 返回系列和其他元素的乘法（二元运算符 rmul）。'
- en: '| [`Series.rdiv`](api/pandas.Series.rdiv.html#pandas.Series.rdiv "pandas.Series.rdiv")(other[, level, fill_value, axis])
    | Return Floating division of series and other, element-wise (binary operator
    rtruediv). |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.rdiv`](api/pandas.Series.rdiv.html#pandas.Series.rdiv "pandas.Series.rdiv")(other[, level, fill_value, axis])
    | 返回系列和其他元素的浮点除法（二元运算符 rtruediv）。'
- en: '| [`Series.rtruediv`](api/pandas.Series.rtruediv.html#pandas.Series.rtruediv
    "pandas.Series.rtruediv")(other[, level, fill_value, axis]) | Return Floating
    division of series and other, element-wise (binary operator rtruediv). |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.rtruediv`](api/pandas.Series.rtruediv.html#pandas.Series.rtruediv
    "pandas.Series.rtruediv")(other[, level, fill_value, axis]) | 返回 Series 和其他的浮点除法，逐元素进行（二元运算符
    rtruediv）。 |'
- en: '| [`Series.rfloordiv`](api/pandas.Series.rfloordiv.html#pandas.Series.rfloordiv
    "pandas.Series.rfloordiv")(other[, level, fill_value, ...]) | Return Integer division
    of series and other, element-wise (binary operator rfloordiv). |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.rfloordiv`](api/pandas.Series.rfloordiv.html#pandas.Series.rfloordiv
    "pandas.Series.rfloordiv")(other[, level, fill_value, ...]) | 返回 Series 和其他的整数除法，逐元素进行（二元运算符
    rfloordiv）。 |'
- en: '| [`Series.rmod`](api/pandas.Series.rmod.html#pandas.Series.rmod "pandas.Series.rmod")(other[, level, fill_value, axis])
    | Return Modulo of series and other, element-wise (binary operator rmod). |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.rmod`](api/pandas.Series.rmod.html#pandas.Series.rmod "pandas.Series.rmod")(other[, level, fill_value, axis])
    | 返回 Series 和其他的模运算，逐元素进行（二元运算符 rmod）。 |'
- en: '| [`Series.rpow`](api/pandas.Series.rpow.html#pandas.Series.rpow "pandas.Series.rpow")(other[, level, fill_value, axis])
    | Return Exponential power of series and other, element-wise (binary operator
    rpow). |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.rpow`](api/pandas.Series.rpow.html#pandas.Series.rpow "pandas.Series.rpow")(other[, level, fill_value, axis])
    | 返回 Series 和其他的指数幂，逐元素进行（二元运算符 rpow）。 |'
- en: '| [`Series.combine`](api/pandas.Series.combine.html#pandas.Series.combine "pandas.Series.combine")(other, func[, fill_value])
    | Combine the Series with a Series or scalar according to func. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.combine`](api/pandas.Series.combine.html#pandas.Series.combine "pandas.Series.combine")(other, func[, fill_value])
    | 根据 func 将 Series 与 Series 或标量组合。 |'
- en: '| [`Series.combine_first`](api/pandas.Series.combine_first.html#pandas.Series.combine_first
    "pandas.Series.combine_first")(other) | Update null elements with value in the
    same location in ''other''. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.combine_first`](api/pandas.Series.combine_first.html#pandas.Series.combine_first
    "pandas.Series.combine_first")(other) | 用 ''other'' 中相同位置的值更新空元素。 |'
- en: '| [`Series.round`](api/pandas.Series.round.html#pandas.Series.round "pandas.Series.round")([decimals])
    | Round each value in a Series to the given number of decimals. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.round`](api/pandas.Series.round.html#pandas.Series.round "pandas.Series.round")([decimals])
    | 将 Series 中的每个值四舍五入到给定的小数位数。 |'
- en: '| [`Series.lt`](api/pandas.Series.lt.html#pandas.Series.lt "pandas.Series.lt")(other[, level, fill_value, axis])
    | Return Less than of series and other, element-wise (binary operator lt). |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.lt`](api/pandas.Series.lt.html#pandas.Series.lt "pandas.Series.lt")(other[, level, fill_value, axis])
    | 返回 Series 和其他的小于关系，逐元素进行（二元运算符 lt）。 |'
- en: '| [`Series.gt`](api/pandas.Series.gt.html#pandas.Series.gt "pandas.Series.gt")(other[, level, fill_value, axis])
    | Return Greater than of series and other, element-wise (binary operator gt).
    |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.gt`](api/pandas.Series.gt.html#pandas.Series.gt "pandas.Series.gt")(other[, level, fill_value, axis])
    | 返回 Series 和其他的大于关系，逐元素进行（二元运算符 gt）。 |'
- en: '| [`Series.le`](api/pandas.Series.le.html#pandas.Series.le "pandas.Series.le")(other[, level, fill_value, axis])
    | Return Less than or equal to of series and other, element-wise (binary operator
    le). |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.le`](api/pandas.Series.le.html#pandas.Series.le "pandas.Series.le")(other[, level, fill_value, axis])
    | 返回 Series 和其他的小于或等于关系，逐元素进行（二元运算符 le）。 |'
- en: '| [`Series.ge`](api/pandas.Series.ge.html#pandas.Series.ge "pandas.Series.ge")(other[, level, fill_value, axis])
    | Return Greater than or equal to of series and other, element-wise (binary operator
    ge). |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.ge`](api/pandas.Series.ge.html#pandas.Series.ge "pandas.Series.ge")(other[, level, fill_value, axis])
    | 返回 Series 和其他的大于或等于关系，逐元素进行（二元运算符 ge）。 |'
- en: '| [`Series.ne`](api/pandas.Series.ne.html#pandas.Series.ne "pandas.Series.ne")(other[, level, fill_value, axis])
    | Return Not equal to of series and other, element-wise (binary operator ne).
    |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.ne`](api/pandas.Series.ne.html#pandas.Series.ne "pandas.Series.ne")(other[, level, fill_value, axis])
    | 返回 Series 和其他的不等于关系，逐元素进行（二元运算符 ne）。 |'
- en: '| [`Series.eq`](api/pandas.Series.eq.html#pandas.Series.eq "pandas.Series.eq")(other[, level, fill_value, axis])
    | Return Equal to of series and other, element-wise (binary operator eq). |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.eq`](api/pandas.Series.eq.html#pandas.Series.eq "pandas.Series.eq")(other[, level, fill_value, axis])
    | 返回 Series 和其他的等于关系，逐元素进行（二元运算符 eq）。 |'
- en: '| [`Series.product`](api/pandas.Series.product.html#pandas.Series.product "pandas.Series.product")([axis, skipna, numeric_only, ...])
    | Return the product of the values over the requested axis. |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.product`](api/pandas.Series.product.html#pandas.Series.product "pandas.Series.product")([axis, skipna, numeric_only, ...])
    | 返回请求轴上值的乘积。 |'
- en: '| [`Series.dot`](api/pandas.Series.dot.html#pandas.Series.dot "pandas.Series.dot")(other)
    | Compute the dot product between the Series and the columns of other. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dot`](api/pandas.Series.dot.html#pandas.Series.dot "pandas.Series.dot")(other)
    | 计算 Series 和其他列之间的点积。 |'
- en: Function application, GroupBy & window
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 函数应用、GroupBy 和窗口
- en: '| [`Series.apply`](api/pandas.Series.apply.html#pandas.Series.apply "pandas.Series.apply")(func[, convert_dtype, args, by_row])
    | Invoke function on values of Series. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.apply`](api/pandas.Series.apply.html#pandas.Series.apply "pandas.Series.apply")(func[, convert_dtype, args, by_row])
    | 在 Series 的值上调用函数。 |'
- en: '| [`Series.agg`](api/pandas.Series.agg.html#pandas.Series.agg "pandas.Series.agg")([func, axis])
    | Aggregate using one or more operations over the specified axis. |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.agg`](api/pandas.Series.agg.html#pandas.Series.agg "pandas.Series.agg")([func, axis])
    | 使用一个或多个操作聚合指定轴上的数据。 |'
- en: '| [`Series.aggregate`](api/pandas.Series.aggregate.html#pandas.Series.aggregate
    "pandas.Series.aggregate")([func, axis]) | Aggregate using one or more operations
    over the specified axis. |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.aggregate`](api/pandas.Series.aggregate.html#pandas.Series.aggregate
    "pandas.Series.aggregate")([func, axis]) | 使用一个或多个操作聚合指定轴上的数据。 |'
- en: '| [`Series.transform`](api/pandas.Series.transform.html#pandas.Series.transform
    "pandas.Series.transform")(func[, axis]) | Call `func` on self producing a Series
    with the same axis shape as self. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.transform`](api/pandas.Series.transform.html#pandas.Series.transform
    "pandas.Series.transform")(func[, axis]) | 对自身调用 `func`，产生与自身轴形状相同的 Series。 |'
- en: '| [`Series.map`](api/pandas.Series.map.html#pandas.Series.map "pandas.Series.map")(arg[, na_action])
    | Map values of Series according to an input mapping or function. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.map`](api/pandas.Series.map.html#pandas.Series.map "pandas.Series.map")(arg[, na_action])
    | 根据输入的映射或函数映射 Series 的值。 |'
- en: '| [`Series.groupby`](api/pandas.Series.groupby.html#pandas.Series.groupby "pandas.Series.groupby")([by, axis, level, as_index, ...])
    | Group Series using a mapper or by a Series of columns. |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.groupby`](api/pandas.Series.groupby.html#pandas.Series.groupby "pandas.Series.groupby")([by, axis, level, as_index, ...])
    | 使用映射器或列的 Series 进行分组。 |'
- en: '| [`Series.rolling`](api/pandas.Series.rolling.html#pandas.Series.rolling "pandas.Series.rolling")(window[, min_periods, ...])
    | Provide rolling window calculations. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.rolling`](api/pandas.Series.rolling.html#pandas.Series.rolling "pandas.Series.rolling")(window[, min_periods, ...])
    | 提供滚动窗口计算。 |'
- en: '| [`Series.expanding`](api/pandas.Series.expanding.html#pandas.Series.expanding
    "pandas.Series.expanding")([min_periods, axis, method]) | Provide expanding window
    calculations. |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.expanding`](api/pandas.Series.expanding.html#pandas.Series.expanding
    "pandas.Series.expanding")([min_periods, axis, method]) | 提供扩展窗口计算。 |'
- en: '| [`Series.ewm`](api/pandas.Series.ewm.html#pandas.Series.ewm "pandas.Series.ewm")([com, span, halflife, alpha, ...])
    | Provide exponentially weighted (EW) calculations. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.ewm`](api/pandas.Series.ewm.html#pandas.Series.ewm "pandas.Series.ewm")([com, span, halflife, alpha, ...])
    | 提供指数加权 (EW) 计算。 |'
- en: '| [`Series.pipe`](api/pandas.Series.pipe.html#pandas.Series.pipe "pandas.Series.pipe")(func, *args, **kwargs)
    | Apply chainable functions that expect Series or DataFrames. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.pipe`](api/pandas.Series.pipe.html#pandas.Series.pipe "pandas.Series.pipe")(func, *args, **kwargs)
    | 应用可链式调用的函数，期望 Series 或 DataFrame 作为输入。 |'
- en: '## Computations / descriptive stats'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '## 计算 / 描述统计'
- en: '| [`Series.abs`](api/pandas.Series.abs.html#pandas.Series.abs "pandas.Series.abs")()
    | Return a Series/DataFrame with absolute numeric value of each element. |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.abs`](api/pandas.Series.abs.html#pandas.Series.abs "pandas.Series.abs")()
    | 返回具有每个元素的绝对数值的 Series/DataFrame。 |'
- en: '| [`Series.all`](api/pandas.Series.all.html#pandas.Series.all "pandas.Series.all")([axis, bool_only, skipna])
    | Return whether all elements are True, potentially over an axis. |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.all`](api/pandas.Series.all.html#pandas.Series.all "pandas.Series.all")([axis, bool_only, skipna])
    | 返回是否所有元素均为 True，可能沿着轴进行计算。 |'
- en: '| [`Series.any`](api/pandas.Series.any.html#pandas.Series.any "pandas.Series.any")(*[, axis, bool_only, skipna])
    | Return whether any element is True, potentially over an axis. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.any`](api/pandas.Series.any.html#pandas.Series.any "pandas.Series.any")(*[, axis, bool_only, skipna])
    | 返回是否有任何元素为 True，可能沿着轴进行计算。 |'
- en: '| [`Series.autocorr`](api/pandas.Series.autocorr.html#pandas.Series.autocorr
    "pandas.Series.autocorr")([lag]) | Compute the lag-N autocorrelation. |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.autocorr`](api/pandas.Series.autocorr.html#pandas.Series.autocorr
    "pandas.Series.autocorr")([lag]) | 计算滞后 N 的自相关。 |'
- en: '| [`Series.between`](api/pandas.Series.between.html#pandas.Series.between "pandas.Series.between")(left, right[, inclusive])
    | Return boolean Series equivalent to left <= series <= right. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.between`](api/pandas.Series.between.html#pandas.Series.between "pandas.Series.between")(left, right[, inclusive])
    | 返回等同于 left <= series <= right 的布尔 Series。 |'
- en: '| [`Series.clip`](api/pandas.Series.clip.html#pandas.Series.clip "pandas.Series.clip")([lower, upper, axis, inplace])
    | Trim values at input threshold(s). |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.clip`](api/pandas.Series.clip.html#pandas.Series.clip "pandas.Series.clip")([lower, upper, axis, inplace])
    | 在输入阈值处修剪值。 |'
- en: '| [`Series.corr`](api/pandas.Series.corr.html#pandas.Series.corr "pandas.Series.corr")(other[, method, min_periods])
    | Compute correlation with other Series, excluding missing values. |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.corr`](api/pandas.Series.corr.html#pandas.Series.corr "pandas.Series.corr")(other[, method, min_periods])
    | 计算与其他 Series 的相关性，不包括缺失值。 |'
- en: '| [`Series.count`](api/pandas.Series.count.html#pandas.Series.count "pandas.Series.count")()
    | Return number of non-NA/null observations in the Series. |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.count`](api/pandas.Series.count.html#pandas.Series.count "pandas.Series.count")()
    | 返回 Series 中非 NA/null 观测值的数量。 |'
- en: '| [`Series.cov`](api/pandas.Series.cov.html#pandas.Series.cov "pandas.Series.cov")(other[, min_periods, ddof])
    | Compute covariance with Series, excluding missing values. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cov`](api/pandas.Series.cov.html#pandas.Series.cov "pandas.Series.cov")(other[, min_periods, ddof])
    | 计算与 Series 的协方差，不包括缺失值。 |'
- en: '| [`Series.cummax`](api/pandas.Series.cummax.html#pandas.Series.cummax "pandas.Series.cummax")([axis, skipna])
    | Return cumulative maximum over a DataFrame or Series axis. |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cummax`](api/pandas.Series.cummax.html#pandas.Series.cummax "pandas.Series.cummax")([axis, skipna])
    | 返回 DataFrame 或 Series 轴上的累积最大值。 |'
- en: '| [`Series.cummin`](api/pandas.Series.cummin.html#pandas.Series.cummin "pandas.Series.cummin")([axis, skipna])
    | Return cumulative minimum over a DataFrame or Series axis. |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cummin`](api/pandas.Series.cummin.html#pandas.Series.cummin "pandas.Series.cummin")([axis, skipna])
    | 返回 DataFrame 或 Series 轴上的累积最小值。 |'
- en: '| [`Series.cumprod`](api/pandas.Series.cumprod.html#pandas.Series.cumprod "pandas.Series.cumprod")([axis, skipna])
    | Return cumulative product over a DataFrame or Series axis. |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cumprod`](api/pandas.Series.cumprod.html#pandas.Series.cumprod "pandas.Series.cumprod")([axis, skipna])
    | 返回 DataFrame 或 Series 轴上的累积乘积。 |'
- en: '| [`Series.cumsum`](api/pandas.Series.cumsum.html#pandas.Series.cumsum "pandas.Series.cumsum")([axis, skipna])
    | Return cumulative sum over a DataFrame or Series axis. |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cumsum`](api/pandas.Series.cumsum.html#pandas.Series.cumsum "pandas.Series.cumsum")([axis, skipna])
    | 返回 DataFrame 或 Series 轴上的累积和。 |'
- en: '| [`Series.describe`](api/pandas.Series.describe.html#pandas.Series.describe
    "pandas.Series.describe")([percentiles, include, exclude]) | Generate descriptive
    statistics. |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.describe`](api/pandas.Series.describe.html#pandas.Series.describe
    "pandas.Series.describe")([percentiles, include, exclude]) | 生成描述性统计信息。 |'
- en: '| [`Series.diff`](api/pandas.Series.diff.html#pandas.Series.diff "pandas.Series.diff")([periods])
    | First discrete difference of element. |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.diff`](api/pandas.Series.diff.html#pandas.Series.diff "pandas.Series.diff")([periods])
    | 元素的第一个离散差异。 |'
- en: '| [`Series.factorize`](api/pandas.Series.factorize.html#pandas.Series.factorize
    "pandas.Series.factorize")([sort, use_na_sentinel]) | Encode the object as an
    enumerated type or categorical variable. |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.factorize`](api/pandas.Series.factorize.html#pandas.Series.factorize
    "pandas.Series.factorize")([sort, use_na_sentinel]) | 将对象编码为枚举类型或分类变量。 |'
- en: '| [`Series.kurt`](api/pandas.Series.kurt.html#pandas.Series.kurt "pandas.Series.kurt")([axis, skipna, numeric_only])
    | Return unbiased kurtosis over requested axis. |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.kurt`](api/pandas.Series.kurt.html#pandas.Series.kurt "pandas.Series.kurt")([axis, skipna, numeric_only])
    | 返回请求轴上的无偏峰度。 |'
- en: '| [`Series.max`](api/pandas.Series.max.html#pandas.Series.max "pandas.Series.max")([axis, skipna, numeric_only])
    | Return the maximum of the values over the requested axis. |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.max`](api/pandas.Series.max.html#pandas.Series.max "pandas.Series.max")([axis, skipna, numeric_only])
    | 返回请求轴上的最大值。 |'
- en: '| [`Series.mean`](api/pandas.Series.mean.html#pandas.Series.mean "pandas.Series.mean")([axis, skipna, numeric_only])
    | Return the mean of the values over the requested axis. |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.mean`](api/pandas.Series.mean.html#pandas.Series.mean "pandas.Series.mean")([axis, skipna, numeric_only])
    | 返回请求轴上的均值。 |'
- en: '| [`Series.median`](api/pandas.Series.median.html#pandas.Series.median "pandas.Series.median")([axis, skipna, numeric_only])
    | Return the median of the values over the requested axis. |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.median`](api/pandas.Series.median.html#pandas.Series.median "pandas.Series.median")([axis, skipna, numeric_only])
    | 返回请求轴上的中位数。 |'
- en: '| [`Series.min`](api/pandas.Series.min.html#pandas.Series.min "pandas.Series.min")([axis, skipna, numeric_only])
    | Return the minimum of the values over the requested axis. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.min`](api/pandas.Series.min.html#pandas.Series.min "pandas.Series.min")([axis, skipna, numeric_only])
    | 返回请求轴上的最小值。 |'
- en: '| [`Series.mode`](api/pandas.Series.mode.html#pandas.Series.mode "pandas.Series.mode")([dropna])
    | Return the mode(s) of the Series. |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.mode`](api/pandas.Series.mode.html#pandas.Series.mode "pandas.Series.mode")([dropna])
    | 返回 Series 的众数。 |'
- en: '| [`Series.nlargest`](api/pandas.Series.nlargest.html#pandas.Series.nlargest
    "pandas.Series.nlargest")([n, keep]) | Return the largest n elements. |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.nlargest`](api/pandas.Series.nlargest.html#pandas.Series.nlargest
    "pandas.Series.nlargest")([n, keep]) | 返回最大的 n 个元素。 |'
- en: '| [`Series.nsmallest`](api/pandas.Series.nsmallest.html#pandas.Series.nsmallest
    "pandas.Series.nsmallest")([n, keep]) | Return the smallest n elements. |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.nsmallest`](api/pandas.Series.nsmallest.html#pandas.Series.nsmallest
    "pandas.Series.nsmallest")([n, keep]) | 返回最小的 n 个元素。 |'
- en: '| [`Series.pct_change`](api/pandas.Series.pct_change.html#pandas.Series.pct_change
    "pandas.Series.pct_change")([periods, fill_method, ...]) | Fractional change between
    the current and a prior element. |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.pct_change`](api/pandas.Series.pct_change.html#pandas.Series.pct_change
    "pandas.Series.pct_change")([periods, fill_method, ...]) | 当前元素与先前元素之间的分数变化。 |'
- en: '| [`Series.prod`](api/pandas.Series.prod.html#pandas.Series.prod "pandas.Series.prod")([axis, skipna, numeric_only, ...])
    | Return the product of the values over the requested axis. |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.prod`](api/pandas.Series.prod.html#pandas.Series.prod "pandas.Series.prod")([axis, skipna, numeric_only, ...])
    | 返回请求轴上的值的乘积。 |'
- en: '| [`Series.quantile`](api/pandas.Series.quantile.html#pandas.Series.quantile
    "pandas.Series.quantile")([q, interpolation]) | Return value at the given quantile.
    |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.quantile`](api/pandas.Series.quantile.html#pandas.Series.quantile
    "pandas.Series.quantile")([q, interpolation]) | 返回给定分位数处的值。 |'
- en: '| [`Series.rank`](api/pandas.Series.rank.html#pandas.Series.rank "pandas.Series.rank")([axis, method, numeric_only, ...])
    | Compute numerical data ranks (1 through n) along axis. |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.rank`](api/pandas.Series.rank.html#pandas.Series.rank "pandas.Series.rank")([axis, method, numeric_only, ...])
    | 沿轴计算数值数据排名（1 到 n）。 |'
- en: '| [`Series.sem`](api/pandas.Series.sem.html#pandas.Series.sem "pandas.Series.sem")([axis, skipna, ddof, numeric_only])
    | Return unbiased standard error of the mean over requested axis. |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sem`](api/pandas.Series.sem.html#pandas.Series.sem "pandas.Series.sem")([axis, skipna, ddof, numeric_only])
    | 返回请求轴上的均值的无偏标准误差。 |'
- en: '| [`Series.skew`](api/pandas.Series.skew.html#pandas.Series.skew "pandas.Series.skew")([axis, skipna, numeric_only])
    | Return unbiased skew over requested axis. |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.skew`](api/pandas.Series.skew.html#pandas.Series.skew "pandas.Series.skew")([axis, skipna, numeric_only])
    | 返回请求轴上的无偏斜度。 |'
- en: '| [`Series.std`](api/pandas.Series.std.html#pandas.Series.std "pandas.Series.std")([axis, skipna, ddof, numeric_only])
    | Return sample standard deviation over requested axis. |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.std`](api/pandas.Series.std.html#pandas.Series.std "pandas.Series.std")([axis, skipna, ddof, numeric_only])
    | 返回请求轴上的样本标准差。 |'
- en: '| [`Series.sum`](api/pandas.Series.sum.html#pandas.Series.sum "pandas.Series.sum")([axis, skipna, numeric_only, ...])
    | Return the sum of the values over the requested axis. |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sum`](api/pandas.Series.sum.html#pandas.Series.sum "pandas.Series.sum")([axis, skipna, numeric_only, ...])
    | 返回请求轴上的值的总和。 |'
- en: '| [`Series.var`](api/pandas.Series.var.html#pandas.Series.var "pandas.Series.var")([axis, skipna, ddof, numeric_only])
    | Return unbiased variance over requested axis. |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.var`](api/pandas.Series.var.html#pandas.Series.var "pandas.Series.var")([axis, skipna, ddof, numeric_only])
    | 返回请求轴上的无偏方差。 |'
- en: '| [`Series.kurtosis`](api/pandas.Series.kurtosis.html#pandas.Series.kurtosis
    "pandas.Series.kurtosis")([axis, skipna, numeric_only]) | Return unbiased kurtosis
    over requested axis. |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.kurtosis`](api/pandas.Series.kurtosis.html#pandas.Series.kurtosis
    "pandas.Series.kurtosis")([axis, skipna, numeric_only]) | 返回请求轴上的无偏��度。 |'
- en: '| [`Series.unique`](api/pandas.Series.unique.html#pandas.Series.unique "pandas.Series.unique")()
    | Return unique values of Series object. |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.unique`](api/pandas.Series.unique.html#pandas.Series.unique "pandas.Series.unique")()
    | 返回 Series 对象的唯一值。 |'
- en: '| [`Series.nunique`](api/pandas.Series.nunique.html#pandas.Series.nunique "pandas.Series.nunique")([dropna])
    | Return number of unique elements in the object. |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.nunique`](api/pandas.Series.nunique.html#pandas.Series.nunique "pandas.Series.nunique")([dropna])
    | 返回对象中唯一元素的数量。 |'
- en: '| [`Series.is_unique`](api/pandas.Series.is_unique.html#pandas.Series.is_unique
    "pandas.Series.is_unique") | Return boolean if values in the object are unique.
    |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.is_unique`](api/pandas.Series.is_unique.html#pandas.Series.is_unique
    "pandas.Series.is_unique") | 如果对象中的值是唯一的，则返回布尔值。 |'
- en: '| [`Series.is_monotonic_increasing`](api/pandas.Series.is_monotonic_increasing.html#pandas.Series.is_monotonic_increasing
    "pandas.Series.is_monotonic_increasing") | Return boolean if values in the object
    are monotonically increasing. |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.is_monotonic_increasing`](api/pandas.Series.is_monotonic_increasing.html#pandas.Series.is_monotonic_increasing
    "pandas.Series.is_monotonic_increasing") | 如果对象中的值单调递增，则返回布尔值。 |'
- en: '| [`Series.is_monotonic_decreasing`](api/pandas.Series.is_monotonic_decreasing.html#pandas.Series.is_monotonic_decreasing
    "pandas.Series.is_monotonic_decreasing") | Return boolean if values in the object
    are monotonically decreasing. |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.is_monotonic_decreasing`](api/pandas.Series.is_monotonic_decreasing.html#pandas.Series.is_monotonic_decreasing
    "pandas.Series.is_monotonic_decreasing") | 如果对象中的值单调递减，则返回布尔值。 |'
- en: '| [`Series.value_counts`](api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts")([normalize, sort, ...]) | Return a Series containing
    counts of unique values. |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.value_counts`](api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts")([normalize, sort, ...]) | 返回包含唯一值计数的 Series。 |'
- en: Reindexing / selection / label manipulation
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 重新索引/选择/标签操作
- en: '| [`Series.align`](api/pandas.Series.align.html#pandas.Series.align "pandas.Series.align")(other[, join, axis, level, ...])
    | Align two objects on their axes with the specified join method. |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.align`](api/pandas.Series.align.html#pandas.Series.align "pandas.Series.align")(other[, join, axis, level, ...])
    | 使用指定的连接方法在它们的轴上对齐两个对象。 |'
- en: '| [`Series.case_when`](api/pandas.Series.case_when.html#pandas.Series.case_when
    "pandas.Series.case_when")(caselist) | Replace values where the conditions are
    True. |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.case_when`](api/pandas.Series.case_when.html#pandas.Series.case_when
    "pandas.Series.case_when")(caselist) | 替换条件为 True 的值。 |'
- en: '| [`Series.drop`](api/pandas.Series.drop.html#pandas.Series.drop "pandas.Series.drop")([labels, axis, index, columns, ...])
    | Return Series with specified index labels removed. |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.drop`](api/pandas.Series.drop.html#pandas.Series.drop "pandas.Series.drop")([labels, axis, index, columns, ...])
    | 返回删除指定索引标签的 Series。 |'
- en: '| [`Series.droplevel`](api/pandas.Series.droplevel.html#pandas.Series.droplevel
    "pandas.Series.droplevel")(level[, axis]) | Return Series/DataFrame with requested
    index / column level(s) removed. |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.droplevel`](api/pandas.Series.droplevel.html#pandas.Series.droplevel
    "pandas.Series.droplevel")(level[, axis]) | 返回删除请求的索引/列级别的 Series/DataFrame。 |'
- en: '| [`Series.drop_duplicates`](api/pandas.Series.drop_duplicates.html#pandas.Series.drop_duplicates
    "pandas.Series.drop_duplicates")(*[, keep, inplace, ...]) | Return Series with
    duplicate values removed. |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.drop_duplicates`](api/pandas.Series.drop_duplicates.html#pandas.Series.drop_duplicates
    "pandas.Series.drop_duplicates")(*[, keep, inplace, ...]) | 返回删除重复值的 Series。 |'
- en: '| [`Series.duplicated`](api/pandas.Series.duplicated.html#pandas.Series.duplicated
    "pandas.Series.duplicated")([keep]) | Indicate duplicate Series values. |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.duplicated`](api/pandas.Series.duplicated.html#pandas.Series.duplicated
    "pandas.Series.duplicated")([keep]) | 指示重复的 Series 值。 |'
- en: '| [`Series.equals`](api/pandas.Series.equals.html#pandas.Series.equals "pandas.Series.equals")(other)
    | Test whether two objects contain the same elements. |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.equals`](api/pandas.Series.equals.html#pandas.Series.equals "pandas.Series.equals")(other)
    | 测试两个对象是否包含相同的元素。 |'
- en: '| [`Series.first`](api/pandas.Series.first.html#pandas.Series.first "pandas.Series.first")(offset)
    | (DEPRECATED) Select initial periods of time series data based on a date offset.
    |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.first`](api/pandas.Series.first.html#pandas.Series.first "pandas.Series.first")(offset)
    | (已弃用) 根据日期偏移量选择时间序列数据的初始周期。 |'
- en: '| [`Series.head`](api/pandas.Series.head.html#pandas.Series.head "pandas.Series.head")([n])
    | Return the first n rows. |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.head`](api/pandas.Series.head.html#pandas.Series.head "pandas.Series.head")([n])
    | 返回前 n 行。 |'
- en: '| [`Series.idxmax`](api/pandas.Series.idxmax.html#pandas.Series.idxmax "pandas.Series.idxmax")([axis, skipna])
    | Return the row label of the maximum value. |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.idxmax`](api/pandas.Series.idxmax.html#pandas.Series.idxmax "pandas.Series.idxmax")([axis, skipna])
    | 返回最大值的行标签。 |'
- en: '| [`Series.idxmin`](api/pandas.Series.idxmin.html#pandas.Series.idxmin "pandas.Series.idxmin")([axis, skipna])
    | Return the row label of the minimum value. |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.idxmin`](api/pandas.Series.idxmin.html#pandas.Series.idxmin "pandas.Series.idxmin")([axis, skipna])
    | 返回最小值的行标签。 |'
- en: '| [`Series.isin`](api/pandas.Series.isin.html#pandas.Series.isin "pandas.Series.isin")(values)
    | Whether elements in Series are contained in values. |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.isin`](api/pandas.Series.isin.html#pandas.Series.isin "pandas.Series.isin")(values)
    | Series 中的元素是否包含在 values 中。 |'
- en: '| [`Series.last`](api/pandas.Series.last.html#pandas.Series.last "pandas.Series.last")(offset)
    | (DEPRECATED) Select final periods of time series data based on a date offset.
    |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.last`](api/pandas.Series.last.html#pandas.Series.last "pandas.Series.last")(offset)
    | (已弃用) 根据日期偏移量选择时间序列数据的最终周期。 |'
- en: '| [`Series.reindex`](api/pandas.Series.reindex.html#pandas.Series.reindex "pandas.Series.reindex")([index, axis, method, copy, ...])
    | Conform Series to new index with optional filling logic. |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.reindex`](api/pandas.Series.reindex.html#pandas.Series.reindex "pandas.Series.reindex")([index, axis, method, copy, ...])
    | 将 Series 调整为具有新索引的对象，并可选择填充逻辑。 |'
- en: '| [`Series.reindex_like`](api/pandas.Series.reindex_like.html#pandas.Series.reindex_like
    "pandas.Series.reindex_like")(other[, method, copy, ...]) | Return an object with
    matching indices as other object. |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.reindex_like`](api/pandas.Series.reindex_like.html#pandas.Series.reindex_like
    "pandas.Series.reindex_like")(other[, method, copy, ...]) | 返回具有与其他对象匹配索引的对象。
    |'
- en: '| [`Series.rename`](api/pandas.Series.rename.html#pandas.Series.rename "pandas.Series.rename")([index, axis, copy, inplace, ...])
    | Alter Series index labels or name. |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.rename`](api/pandas.Series.rename.html#pandas.Series.rename "pandas.Series.rename")([index, axis, copy, inplace, ...])
    | 修改 Series 的索引标签或名称。 |'
- en: '| [`Series.rename_axis`](api/pandas.Series.rename_axis.html#pandas.Series.rename_axis
    "pandas.Series.rename_axis")([mapper, index, axis, ...]) | Set the name of the
    axis for the index or columns. |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.rename_axis`](api/pandas.Series.rename_axis.html#pandas.Series.rename_axis
    "pandas.Series.rename_axis")([mapper, index, axis, ...]) | 为索引或列设置轴的名称。 |'
- en: '| [`Series.reset_index`](api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index")([level, drop, name, ...]) | Generate a new DataFrame
    or Series with the index reset. |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.reset_index`](api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index")([level, drop, name, ...]) | 生成一个重置索引的新 DataFrame
    或 Series。 |'
- en: '| [`Series.sample`](api/pandas.Series.sample.html#pandas.Series.sample "pandas.Series.sample")([n, frac, replace, weights, ...])
    | Return a random sample of items from an axis of object. |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sample`](api/pandas.Series.sample.html#pandas.Series.sample "pandas.Series.sample")([n, frac, replace, weights, ...])
    | 从对象的一个轴中返回随机抽样的项目。 |'
- en: '| [`Series.set_axis`](api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis")(labels, *[, axis, copy]) | Assign desired index to given
    axis. |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.set_axis`](api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis")(labels, *[, axis, copy]) | 为给定轴分配所需的索引。 |'
- en: '| [`Series.take`](api/pandas.Series.take.html#pandas.Series.take "pandas.Series.take")(indices[, axis])
    | Return the elements in the given *positional* indices along an axis. |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.take`](api/pandas.Series.take.html#pandas.Series.take "pandas.Series.take")(indices[, axis])
    | 沿着一个轴返回给定 *位置* 索引处的元素。 |'
- en: '| [`Series.tail`](api/pandas.Series.tail.html#pandas.Series.tail "pandas.Series.tail")([n])
    | Return the last n rows. |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.tail`](api/pandas.Series.tail.html#pandas.Series.tail "pandas.Series.tail")([n])
    | 返回最后 n 行。 |'
- en: '| [`Series.truncate`](api/pandas.Series.truncate.html#pandas.Series.truncate
    "pandas.Series.truncate")([before, after, axis, copy]) | Truncate a Series or
    DataFrame before and after some index value. |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.truncate`](api/pandas.Series.truncate.html#pandas.Series.truncate
    "pandas.Series.truncate")([before, after, axis, copy]) | 截断 Series 或 DataFrame
    在某个索引值之前和之后。 |'
- en: '| [`Series.where`](api/pandas.Series.where.html#pandas.Series.where "pandas.Series.where")(cond[, other, inplace, axis, level])
    | Replace values where the condition is False. |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.where`](api/pandas.Series.where.html#pandas.Series.where "pandas.Series.where")(cond[, other, inplace, axis, level])
    | 替换条件为 False 的值。 |'
- en: '| [`Series.mask`](api/pandas.Series.mask.html#pandas.Series.mask "pandas.Series.mask")(cond[, other, inplace, axis, level])
    | Replace values where the condition is True. |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.mask`](api/pandas.Series.mask.html#pandas.Series.mask "pandas.Series.mask")(cond[, other, inplace, axis, level])
    | 替换条件为 True 的值。 |'
- en: '| [`Series.add_prefix`](api/pandas.Series.add_prefix.html#pandas.Series.add_prefix
    "pandas.Series.add_prefix")(prefix[, axis]) | Prefix labels with string prefix.
    |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.add_prefix`](api/pandas.Series.add_prefix.html#pandas.Series.add_prefix
    "pandas.Series.add_prefix")(prefix[, axis]) | 用字符串前缀添加标签。 |'
- en: '| [`Series.add_suffix`](api/pandas.Series.add_suffix.html#pandas.Series.add_suffix
    "pandas.Series.add_suffix")(suffix[, axis]) | Suffix labels with string suffix.
    |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.add_suffix`](api/pandas.Series.add_suffix.html#pandas.Series.add_suffix
    "pandas.Series.add_suffix")(suffix[, axis]) | 用字符串后缀添加标签。 |'
- en: '| [`Series.filter`](api/pandas.Series.filter.html#pandas.Series.filter "pandas.Series.filter")([items, like, regex, axis])
    | Subset the dataframe rows or columns according to the specified index labels.
    |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.filter`](api/pandas.Series.filter.html#pandas.Series.filter "pandas.Series.filter")([items, like, regex, axis])
    | 根据指定的索引标签对数据帧的行或列进行子集筛选。 |'
- en: Missing data handling
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缺失数据处理
- en: '| [`Series.backfill`](api/pandas.Series.backfill.html#pandas.Series.backfill
    "pandas.Series.backfill")(*[, axis, inplace, limit, ...]) | (DEPRECATED) Fill
    NA/NaN values by using the next valid observation to fill the gap. |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.backfill`](api/pandas.Series.backfill.html#pandas.Series.backfill
    "pandas.Series.backfill")(*[, axis, inplace, limit, ...]) | (已弃用) 使用下一个有效观察值填充
    NA/NaN 值。 |'
- en: '| [`Series.bfill`](api/pandas.Series.bfill.html#pandas.Series.bfill "pandas.Series.bfill")(*[, axis, inplace, limit, ...])
    | Fill NA/NaN values by using the next valid observation to fill the gap. |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.bfill`](api/pandas.Series.bfill.html#pandas.Series.bfill "pandas.Series.bfill")(*[, axis, inplace, limit, ...])
    | 使用下一个有效观察值填充 NA/NaN 值。 |'
- en: '| [`Series.dropna`](api/pandas.Series.dropna.html#pandas.Series.dropna "pandas.Series.dropna")(*[, axis, inplace, how, ...])
    | Return a new Series with missing values removed. |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dropna`](api/pandas.Series.dropna.html#pandas.Series.dropna "pandas.Series.dropna")(*[, axis, inplace, how, ...])
    | 返回一个删除缺失值的新 Series。 |'
- en: '| [`Series.ffill`](api/pandas.Series.ffill.html#pandas.Series.ffill "pandas.Series.ffill")(*[, axis, inplace, limit, ...])
    | Fill NA/NaN values by propagating the last valid observation to next valid.
    |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.ffill`](api/pandas.Series.ffill.html#pandas.Series.ffill "pandas.Series.ffill")(*[, axis, inplace, limit, ...])
    | 通过将最后一个有效观察结果传播到下一个有效结果来填充 NA/NaN 值。 |'
- en: '| [`Series.fillna`](api/pandas.Series.fillna.html#pandas.Series.fillna "pandas.Series.fillna")([value, method, axis, ...])
    | Fill NA/NaN values using the specified method. |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.fillna`](api/pandas.Series.fillna.html#pandas.Series.fillna "pandas.Series.fillna")([value, method, axis, ...])
    | 使用指定方法填充 NA/NaN 值。 |'
- en: '| [`Series.interpolate`](api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate")([method, axis, limit, ...]) | Fill NaN values using
    an interpolation method. |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.interpolate`](api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate")([method, axis, limit, ...]) | 使用插值方法填充 NaN 值。 |'
- en: '| [`Series.isna`](api/pandas.Series.isna.html#pandas.Series.isna "pandas.Series.isna")()
    | Detect missing values. |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.isna`](api/pandas.Series.isna.html#pandas.Series.isna "pandas.Series.isna")()
    | 检测缺失值。 |'
- en: '| [`Series.isnull`](api/pandas.Series.isnull.html#pandas.Series.isnull "pandas.Series.isnull")()
    | Series.isnull is an alias for Series.isna. |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.isnull`](api/pandas.Series.isnull.html#pandas.Series.isnull "pandas.Series.isnull")()
    | Series.isnull 是 Series.isna 的别名。 |'
- en: '| [`Series.notna`](api/pandas.Series.notna.html#pandas.Series.notna "pandas.Series.notna")()
    | Detect existing (non-missing) values. |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.notna`](api/pandas.Series.notna.html#pandas.Series.notna "pandas.Series.notna")()
    | 检测存在的（非缺失）值。 |'
- en: '| [`Series.notnull`](api/pandas.Series.notnull.html#pandas.Series.notnull "pandas.Series.notnull")()
    | Series.notnull is an alias for Series.notna. |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.notnull`](api/pandas.Series.notnull.html#pandas.Series.notnull "pandas.Series.notnull")()
    | Series.notnull 是 Series.notna 的别名。 |'
- en: '| [`Series.pad`](api/pandas.Series.pad.html#pandas.Series.pad "pandas.Series.pad")(*[, axis, inplace, limit, downcast])
    | (DEPRECATED) Fill NA/NaN values by propagating the last valid observation to
    next valid. |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.pad`](api/pandas.Series.pad.html#pandas.Series.pad "pandas.Series.pad")(*[, axis, inplace, limit, downcast])
    | (已弃用) 通过将最后一个有效观察结果传播到下一个有效结果来填充 NA/NaN 值。 |'
- en: '| [`Series.replace`](api/pandas.Series.replace.html#pandas.Series.replace "pandas.Series.replace")([to_replace, value, inplace, ...])
    | Replace values given in to_replace with value. |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.replace`](api/pandas.Series.replace.html#pandas.Series.replace "pandas.Series.replace")([to_replace, value, inplace, ...])
    | 用 value 替换 to_replace 中给定的值。 |'
- en: Reshaping, sorting
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 重塑，排序
- en: '| [`Series.argsort`](api/pandas.Series.argsort.html#pandas.Series.argsort "pandas.Series.argsort")([axis, kind, order, stable])
    | Return the integer indices that would sort the Series values. |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.argsort`](api/pandas.Series.argsort.html#pandas.Series.argsort "pandas.Series.argsort")([axis, kind, order, stable])
    | 返回将 Series 值排序的整数索引。 |'
- en: '| [`Series.argmin`](api/pandas.Series.argmin.html#pandas.Series.argmin "pandas.Series.argmin")([axis, skipna])
    | Return int position of the smallest value in the Series. |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.argmin`](api/pandas.Series.argmin.html#pandas.Series.argmin "pandas.Series.argmin")([axis, skipna])
    | 返回 Series 中最小值的整数位置。 |'
- en: '| [`Series.argmax`](api/pandas.Series.argmax.html#pandas.Series.argmax "pandas.Series.argmax")([axis, skipna])
    | Return int position of the largest value in the Series. |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.argmax`](api/pandas.Series.argmax.html#pandas.Series.argmax "pandas.Series.argmax")([axis, skipna])
    | 返回 Series 中最大值的整数位置。 |'
- en: '| [`Series.reorder_levels`](api/pandas.Series.reorder_levels.html#pandas.Series.reorder_levels
    "pandas.Series.reorder_levels")(order) | Rearrange index levels using input order.
    |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.reorder_levels`](api/pandas.Series.reorder_levels.html#pandas.Series.reorder_levels
    "pandas.Series.reorder_levels")(order) | 使用输入顺序重新排列索引级别。 |'
- en: '| [`Series.sort_values`](api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values")(*[, axis, ascending, ...]) | Sort by the values.
    |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sort_values`](api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values")(*[, axis, ascending, ...]) | 按值排序。 |'
- en: '| [`Series.sort_index`](api/pandas.Series.sort_index.html#pandas.Series.sort_index
    "pandas.Series.sort_index")(*[, axis, level, ...]) | Sort Series by index labels.
    |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sort_index`](api/pandas.Series.sort_index.html#pandas.Series.sort_index
    "pandas.Series.sort_index")(*[, axis, level, ...]) | 按索引标签对 Series 进行排序。 |'
- en: '| [`Series.swaplevel`](api/pandas.Series.swaplevel.html#pandas.Series.swaplevel
    "pandas.Series.swaplevel")([i, j, copy]) | Swap levels i and j in a [`MultiIndex`](api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"). |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.swaplevel`](api/pandas.Series.swaplevel.html#pandas.Series.swaplevel
    "pandas.Series.swaplevel")([i, j, copy]) | 在 [`MultiIndex`](api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") 中交换级别 i 和 j。 |'
- en: '| [`Series.unstack`](api/pandas.Series.unstack.html#pandas.Series.unstack "pandas.Series.unstack")([level, fill_value, sort])
    | Unstack, also known as pivot, Series with MultiIndex to produce DataFrame. |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.unstack`](api/pandas.Series.unstack.html#pandas.Series.unstack "pandas.Series.unstack")([level, fill_value, sort])
    | 将具有MultiIndex的Series解压缩，也称为透视，以生成DataFrame。'
- en: '| [`Series.explode`](api/pandas.Series.explode.html#pandas.Series.explode "pandas.Series.explode")([ignore_index])
    | Transform each element of a list-like to a row. |'
  id: totrans-177
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.explode`](api/pandas.Series.explode.html#pandas.Series.explode "pandas.Series.explode")([ignore_index])
    | 将列表样式的每个元素转换为一行。'
- en: '| [`Series.searchsorted`](api/pandas.Series.searchsorted.html#pandas.Series.searchsorted
    "pandas.Series.searchsorted")(value[, side, sorter]) | Find indices where elements
    should be inserted to maintain order. |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.searchsorted`](api/pandas.Series.searchsorted.html#pandas.Series.searchsorted
    "pandas.Series.searchsorted")(value[, side, sorter]) | 查找应插入元素以保持顺序的索引。'
- en: '| [`Series.ravel`](api/pandas.Series.ravel.html#pandas.Series.ravel "pandas.Series.ravel")([order])
    | (DEPRECATED) Return the flattened underlying data as an ndarray or ExtensionArray.
    |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.ravel`](api/pandas.Series.ravel.html#pandas.Series.ravel "pandas.Series.ravel")([order])
    | （已弃用）将扁平化的基础数据返回为ndarray或ExtensionArray。'
- en: '| [`Series.repeat`](api/pandas.Series.repeat.html#pandas.Series.repeat "pandas.Series.repeat")(repeats[, axis])
    | Repeat elements of a Series. |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.repeat`](api/pandas.Series.repeat.html#pandas.Series.repeat "pandas.Series.repeat")(repeats[, axis])
    | 重复Series的元素。'
- en: '| [`Series.squeeze`](api/pandas.Series.squeeze.html#pandas.Series.squeeze "pandas.Series.squeeze")([axis])
    | Squeeze 1 dimensional axis objects into scalars. |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.squeeze`](api/pandas.Series.squeeze.html#pandas.Series.squeeze "pandas.Series.squeeze")([axis])
    | 将1维轴对象压缩为标量。'
- en: '| [`Series.view`](api/pandas.Series.view.html#pandas.Series.view "pandas.Series.view")([dtype])
    | (DEPRECATED) Create a new view of the Series. |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.view`](api/pandas.Series.view.html#pandas.Series.view "pandas.Series.view")([dtype])
    | （已弃用）创建Series的新视图。'
- en: Combining / comparing / joining / merging
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 合并/比较/连接/合并
- en: '| [`Series.compare`](api/pandas.Series.compare.html#pandas.Series.compare "pandas.Series.compare")(other[, align_axis, ...])
    | Compare to another Series and show the differences. |'
  id: totrans-184
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.compare`](api/pandas.Series.compare.html#pandas.Series.compare "pandas.Series.compare")(other[, align_axis, ...])
    | 与另一个Series进行比较并显示差异。'
- en: '| [`Series.update`](api/pandas.Series.update.html#pandas.Series.update "pandas.Series.update")(other)
    | Modify Series in place using values from passed Series. |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.update`](api/pandas.Series.update.html#pandas.Series.update "pandas.Series.update")(other)
    | 使用传递的Series的值就地修改Series。'
- en: Time Series-related
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 与时间序列相关
- en: '| [`Series.asfreq`](api/pandas.Series.asfreq.html#pandas.Series.asfreq "pandas.Series.asfreq")(freq[, method, how, ...])
    | Convert time series to specified frequency. |'
  id: totrans-187
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.asfreq`](api/pandas.Series.asfreq.html#pandas.Series.asfreq "pandas.Series.asfreq")(freq[, method, how, ...])
    | 将时间序列转换为指定频率。'
- en: '| [`Series.asof`](api/pandas.Series.asof.html#pandas.Series.asof "pandas.Series.asof")(where[, subset])
    | Return the last row(s) without any NaNs before where. |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.asof`](api/pandas.Series.asof.html#pandas.Series.asof "pandas.Series.asof")(where[, subset])
    | 返回where之前没有任何NaN的最后一行。'
- en: '| [`Series.shift`](api/pandas.Series.shift.html#pandas.Series.shift "pandas.Series.shift")([periods, freq, axis, ...])
    | Shift index by desired number of periods with an optional time freq. |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.shift`](api/pandas.Series.shift.html#pandas.Series.shift "pandas.Series.shift")([periods, freq, axis, ...])
    | 将索引按所需的周期数移动，可选地使用时间频率。'
- en: '| [`Series.first_valid_index`](api/pandas.Series.first_valid_index.html#pandas.Series.first_valid_index
    "pandas.Series.first_valid_index")() | Return index for first non-NA value or
    None, if no non-NA value is found. |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.first_valid_index`](api/pandas.Series.first_valid_index.html#pandas.Series.first_valid_index
    "pandas.Series.first_valid_index")() | 返回第一个非NA值的索引，如果找不到非NA值，则返回None。'
- en: '| [`Series.last_valid_index`](api/pandas.Series.last_valid_index.html#pandas.Series.last_valid_index
    "pandas.Series.last_valid_index")() | Return index for last non-NA value or None,
    if no non-NA value is found. |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.last_valid_index`](api/pandas.Series.last_valid_index.html#pandas.Series.last_valid_index
    "pandas.Series.last_valid_index")() | 返回最后一个非NA值的索引，如果找不到非NA值，则返回None。'
- en: '| [`Series.resample`](api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample")(rule[, axis, closed, label, ...]) | Resample time-series
    data. |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.resample`](api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample")(rule[, axis, closed, label, ...]) | 对时间序列数据重新采样。'
- en: '| [`Series.tz_convert`](api/pandas.Series.tz_convert.html#pandas.Series.tz_convert
    "pandas.Series.tz_convert")(tz[, axis, level, copy]) | Convert tz-aware axis to
    target time zone. |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.tz_convert`](api/pandas.Series.tz_convert.html#pandas.Series.tz_convert
    "pandas.Series.tz_convert")(tz[, axis, level, copy]) | 将tz-aware轴转换为目标时区。'
- en: '| [`Series.tz_localize`](api/pandas.Series.tz_localize.html#pandas.Series.tz_localize
    "pandas.Series.tz_localize")(tz[, axis, level, copy, ...]) | Localize tz-naive
    index of a Series or DataFrame to target time zone. |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.tz_localize`](api/pandas.Series.tz_localize.html#pandas.Series.tz_localize
    "pandas.Series.tz_localize")(tz[, axis, level, copy, ...]) | 将序列或数据框的 tz-naive
    索引本地化到目标时区。 |'
- en: '| [`Series.at_time`](api/pandas.Series.at_time.html#pandas.Series.at_time "pandas.Series.at_time")(time[, asof, axis])
    | Select values at particular time of day (e.g., 9:30AM). |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.at_time`](api/pandas.Series.at_time.html#pandas.Series.at_time "pandas.Series.at_time")(time[, asof, axis])
    | 选择一天中特定时间的值（例如，上午9:30）。 |'
- en: '| [`Series.between_time`](api/pandas.Series.between_time.html#pandas.Series.between_time
    "pandas.Series.between_time")(start_time, end_time[, ...]) | Select values between
    particular times of the day (e.g., 9:00-9:30 AM). |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.between_time`](api/pandas.Series.between_time.html#pandas.Series.between_time
    "pandas.Series.between_time")(start_time, end_time[, ...]) | 选择一天中特定时间段的值（例如，上午9:00-9:30）。
    |'
- en: Accessors
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 访问器
- en: pandas provides dtype-specific methods under various accessors. These are separate
    namespaces within [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series")
    that only apply to specific data types.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 在各种访问器下提供了特定于数据类型的方法。这些是在 [`Series`](api/pandas.Series.html#pandas.Series
    "pandas.Series") 中的单独命名空间，仅适用于特定的数据类型。
- en: '| [`Series.str`](api/pandas.Series.str.html#pandas.Series.str "pandas.Series.str")
    | alias of `StringMethods` |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str`](api/pandas.Series.str.html#pandas.Series.str "pandas.Series.str")
    | `StringMethods` 的别名 |'
- en: '| [`Series.cat`](api/pandas.Series.cat.html#pandas.Series.cat "pandas.Series.cat")
    | alias of `CategoricalAccessor` |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat`](api/pandas.Series.cat.html#pandas.Series.cat "pandas.Series.cat")
    | `CategoricalAccessor` 的别名 |'
- en: '| [`Series.dt`](api/pandas.Series.dt.html#pandas.Series.dt "pandas.Series.dt")
    | alias of `CombinedDatetimelikeProperties` |'
  id: totrans-201
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt`](api/pandas.Series.dt.html#pandas.Series.dt "pandas.Series.dt")
    | `CombinedDatetimelikeProperties` 的别名 |'
- en: '| [`Series.sparse`](api/pandas.Series.sparse.html#pandas.Series.sparse "pandas.Series.sparse")
    | alias of `SparseAccessor` |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sparse`](api/pandas.Series.sparse.html#pandas.Series.sparse "pandas.Series.sparse")
    | `SparseAccessor` 的别名 |'
- en: '| [`DataFrame.sparse`](api/pandas.DataFrame.sparse.html#pandas.DataFrame.sparse
    "pandas.DataFrame.sparse") | alias of `SparseFrameAccessor` |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.sparse`](api/pandas.DataFrame.sparse.html#pandas.DataFrame.sparse
    "pandas.DataFrame.sparse") | `SparseFrameAccessor` 的别名 |'
- en: '| [`Index.str`](api/pandas.Index.str.html#pandas.Index.str "pandas.Index.str")
    | alias of `StringMethods` |'
  id: totrans-204
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.str`](api/pandas.Index.str.html#pandas.Index.str "pandas.Index.str")
    | `StringMethods` 的别名 |'
- en: '| Data Type | Accessor |'
  id: totrans-205
  prefs: []
  type: TYPE_TB
  zh: '| 数据类型 | 访问器 |'
- en: '| --- | --- |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Datetime, Timedelta, Period | [dt](#api-series-dt) |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
  zh: '| 日期时间、时间差、周期 | [dt](#api-series-dt) |'
- en: '| String | [str](#api-series-str) |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '| 字符串 | [str](#api-series-str) |'
- en: '| Categorical | [cat](#api-series-cat) |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
  zh: '| 分类 | [cat](#api-series-cat) |'
- en: '| Sparse | [sparse](#api-series-sparse) |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '| 稀疏 | [sparse](#api-series-sparse) |'
- en: '### Datetimelike properties'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '### 日期时间属性'
- en: '`Series.dt` can be used to access the values of the series as datetimelike
    and return several properties. These can be accessed like `Series.dt.<property>`.'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series.dt` 可以用于访问序列的日期时间值并返回多个属性。这些可以像 `Series.dt.<property>` 这样访问。'
- en: Datetime properties
  id: totrans-213
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 日期时间属性
- en: '| [`Series.dt.date`](api/pandas.Series.dt.date.html#pandas.Series.dt.date "pandas.Series.dt.date")
    | Returns numpy array of python [`datetime.date`](https://docs.python.org/3/library/datetime.html#datetime.date
    "(in Python v3.12)") objects. |'
  id: totrans-214
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.date`](api/pandas.Series.dt.date.html#pandas.Series.dt.date "pandas.Series.dt.date")
    | 返回 Python [`datetime.date`](https://docs.python.org/3/library/datetime.html#datetime.date
    "(在 Python v3.12)") 对象的 numpy 数组。 |'
- en: '| [`Series.dt.time`](api/pandas.Series.dt.time.html#pandas.Series.dt.time "pandas.Series.dt.time")
    | Returns numpy array of [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(in Python v3.12)") objects. |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.time`](api/pandas.Series.dt.time.html#pandas.Series.dt.time "pandas.Series.dt.time")
    | 返回 Python [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(在 Python v3.12)") 对象的 numpy 数组。 |'
- en: '| [`Series.dt.timetz`](api/pandas.Series.dt.timetz.html#pandas.Series.dt.timetz
    "pandas.Series.dt.timetz") | Returns numpy array of [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(in Python v3.12)") objects with timezones. |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.timetz`](api/pandas.Series.dt.timetz.html#pandas.Series.dt.timetz
    "pandas.Series.dt.timetz") | 返回带有时区的 Python [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(在 Python v3.12)") 对象的 numpy 数组。 |'
- en: '| [`Series.dt.year`](api/pandas.Series.dt.year.html#pandas.Series.dt.year "pandas.Series.dt.year")
    | The year of the datetime. |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.year`](api/pandas.Series.dt.year.html#pandas.Series.dt.year "pandas.Series.dt.year")
    | 日期时间的年份。 |'
- en: '| [`Series.dt.month`](api/pandas.Series.dt.month.html#pandas.Series.dt.month
    "pandas.Series.dt.month") | The month as January=1, December=12. |'
  id: totrans-218
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.month`](api/pandas.Series.dt.month.html#pandas.Series.dt.month
    "pandas.Series.dt.month") | 月份，1 代表一月，12 代表十二月。 |'
- en: '| [`Series.dt.day`](api/pandas.Series.dt.day.html#pandas.Series.dt.day "pandas.Series.dt.day")
    | The day of the datetime. |'
  id: totrans-219
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.day`](api/pandas.Series.dt.day.html#pandas.Series.dt.day "pandas.Series.dt.day")
    | 日期时间的天数。 |'
- en: '| [`Series.dt.hour`](api/pandas.Series.dt.hour.html#pandas.Series.dt.hour "pandas.Series.dt.hour")
    | The hours of the datetime. |'
  id: totrans-220
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.hour`](api/pandas.Series.dt.hour.html#pandas.Series.dt.hour "pandas.Series.dt.hour")
    | 日期时间的小时数。 |'
- en: '| [`Series.dt.minute`](api/pandas.Series.dt.minute.html#pandas.Series.dt.minute
    "pandas.Series.dt.minute") | The minutes of the datetime. |'
  id: totrans-221
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.minute`](api/pandas.Series.dt.minute.html#pandas.Series.dt.minute
    "pandas.Series.dt.minute") | 日期时间的分钟数。 |'
- en: '| [`Series.dt.second`](api/pandas.Series.dt.second.html#pandas.Series.dt.second
    "pandas.Series.dt.second") | The seconds of the datetime. |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.second`](api/pandas.Series.dt.second.html#pandas.Series.dt.second
    "pandas.Series.dt.second") | 日期时间的秒数。 |'
- en: '| [`Series.dt.microsecond`](api/pandas.Series.dt.microsecond.html#pandas.Series.dt.microsecond
    "pandas.Series.dt.microsecond") | The microseconds of the datetime. |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.microsecond`](api/pandas.Series.dt.microsecond.html#pandas.Series.dt.microsecond
    "pandas.Series.dt.microsecond") | 日期时间的微秒数。 |'
- en: '| [`Series.dt.nanosecond`](api/pandas.Series.dt.nanosecond.html#pandas.Series.dt.nanosecond
    "pandas.Series.dt.nanosecond") | The nanoseconds of the datetime. |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.nanosecond`](api/pandas.Series.dt.nanosecond.html#pandas.Series.dt.nanosecond
    "pandas.Series.dt.nanosecond") | 日期时间的纳秒数。 |'
- en: '| [`Series.dt.dayofweek`](api/pandas.Series.dt.dayofweek.html#pandas.Series.dt.dayofweek
    "pandas.Series.dt.dayofweek") | The day of the week with Monday=0, Sunday=6. |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.dayofweek`](api/pandas.Series.dt.dayofweek.html#pandas.Series.dt.dayofweek
    "pandas.Series.dt.dayofweek") | 一周中的星期几，星期一=0，星期日=6。 |'
- en: '| [`Series.dt.day_of_week`](api/pandas.Series.dt.day_of_week.html#pandas.Series.dt.day_of_week
    "pandas.Series.dt.day_of_week") | The day of the week with Monday=0, Sunday=6.
    |'
  id: totrans-226
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.day_of_week`](api/pandas.Series.dt.day_of_week.html#pandas.Series.dt.day_of_week
    "pandas.Series.dt.day_of_week") | 一周中的星期几，星期一=0，星期日=6。 |'
- en: '| [`Series.dt.weekday`](api/pandas.Series.dt.weekday.html#pandas.Series.dt.weekday
    "pandas.Series.dt.weekday") | The day of the week with Monday=0, Sunday=6. |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.weekday`](api/pandas.Series.dt.weekday.html#pandas.Series.dt.weekday
    "pandas.Series.dt.weekday") | 一周中的星期几，星期一=0，星期日=6。 |'
- en: '| [`Series.dt.dayofyear`](api/pandas.Series.dt.dayofyear.html#pandas.Series.dt.dayofyear
    "pandas.Series.dt.dayofyear") | The ordinal day of the year. |'
  id: totrans-228
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.dayofyear`](api/pandas.Series.dt.dayofyear.html#pandas.Series.dt.dayofyear
    "pandas.Series.dt.dayofyear") | 年份中的第几天。 |'
- en: '| [`Series.dt.day_of_year`](api/pandas.Series.dt.day_of_year.html#pandas.Series.dt.day_of_year
    "pandas.Series.dt.day_of_year") | The ordinal day of the year. |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.day_of_year`](api/pandas.Series.dt.day_of_year.html#pandas.Series.dt.day_of_year
    "pandas.Series.dt.day_of_year") | 年份中的第几天。 |'
- en: '| [`Series.dt.days_in_month`](api/pandas.Series.dt.days_in_month.html#pandas.Series.dt.days_in_month
    "pandas.Series.dt.days_in_month") | The number of days in the month. |'
  id: totrans-230
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.days_in_month`](api/pandas.Series.dt.days_in_month.html#pandas.Series.dt.days_in_month
    "pandas.Series.dt.days_in_month") | 月份中的天数。 |'
- en: '| [`Series.dt.quarter`](api/pandas.Series.dt.quarter.html#pandas.Series.dt.quarter
    "pandas.Series.dt.quarter") | The quarter of the date. |'
  id: totrans-231
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.quarter`](api/pandas.Series.dt.quarter.html#pandas.Series.dt.quarter
    "pandas.Series.dt.quarter") | 日期所在的季度。 |'
- en: '| [`Series.dt.is_month_start`](api/pandas.Series.dt.is_month_start.html#pandas.Series.dt.is_month_start
    "pandas.Series.dt.is_month_start") | Indicates whether the date is the first day
    of the month. |'
  id: totrans-232
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_month_start`](api/pandas.Series.dt.is_month_start.html#pandas.Series.dt.is_month_start
    "pandas.Series.dt.is_month_start") | 指示日期是否是月份的第一天。 |'
- en: '| [`Series.dt.is_month_end`](api/pandas.Series.dt.is_month_end.html#pandas.Series.dt.is_month_end
    "pandas.Series.dt.is_month_end") | Indicates whether the date is the last day
    of the month. |'
  id: totrans-233
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_month_end`](api/pandas.Series.dt.is_month_end.html#pandas.Series.dt.is_month_end
    "pandas.Series.dt.is_month_end") | 指示日期是否是月份的最后一天。 |'
- en: '| [`Series.dt.is_quarter_start`](api/pandas.Series.dt.is_quarter_start.html#pandas.Series.dt.is_quarter_start
    "pandas.Series.dt.is_quarter_start") | Indicator for whether the date is the first
    day of a quarter. |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_quarter_start`](api/pandas.Series.dt.is_quarter_start.html#pandas.Series.dt.is_quarter_start
    "pandas.Series.dt.is_quarter_start") | 指示日期是否是一个季度的第一天。 |'
- en: '| [`Series.dt.is_quarter_end`](api/pandas.Series.dt.is_quarter_end.html#pandas.Series.dt.is_quarter_end
    "pandas.Series.dt.is_quarter_end") | Indicator for whether the date is the last
    day of a quarter. |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_quarter_end`](api/pandas.Series.dt.is_quarter_end.html#pandas.Series.dt.is_quarter_end
    "pandas.Series.dt.is_quarter_end") | 指示日期是否是一个季度的最后一天。 |'
- en: '| [`Series.dt.is_year_start`](api/pandas.Series.dt.is_year_start.html#pandas.Series.dt.is_year_start
    "pandas.Series.dt.is_year_start") | Indicate whether the date is the first day
    of a year. |'
  id: totrans-236
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_year_start`](api/pandas.Series.dt.is_year_start.html#pandas.Series.dt.is_year_start
    "pandas.Series.dt.is_year_start") | 指示日期是否是一年的第一天。 |'
- en: '| [`Series.dt.is_year_end`](api/pandas.Series.dt.is_year_end.html#pandas.Series.dt.is_year_end
    "pandas.Series.dt.is_year_end") | Indicate whether the date is the last day of
    the year. |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_year_end`](api/pandas.Series.dt.is_year_end.html#pandas.Series.dt.is_year_end
    "pandas.Series.dt.is_year_end") | 指示日期是否为年末的标志。 |'
- en: '| [`Series.dt.is_leap_year`](api/pandas.Series.dt.is_leap_year.html#pandas.Series.dt.is_leap_year
    "pandas.Series.dt.is_leap_year") | Boolean indicator if the date belongs to a
    leap year. |'
  id: totrans-238
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_leap_year`](api/pandas.Series.dt.is_leap_year.html#pandas.Series.dt.is_leap_year
    "pandas.Series.dt.is_leap_year") | 布尔值指示日期是否属于闰年。 |'
- en: '| [`Series.dt.daysinmonth`](api/pandas.Series.dt.daysinmonth.html#pandas.Series.dt.daysinmonth
    "pandas.Series.dt.daysinmonth") | The number of days in the month. |'
  id: totrans-239
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.daysinmonth`](api/pandas.Series.dt.daysinmonth.html#pandas.Series.dt.daysinmonth
    "pandas.Series.dt.daysinmonth") | 月份中的天数。 |'
- en: '| [`Series.dt.days_in_month`](api/pandas.Series.dt.days_in_month.html#pandas.Series.dt.days_in_month
    "pandas.Series.dt.days_in_month") | The number of days in the month. |'
  id: totrans-240
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.days_in_month`](api/pandas.Series.dt.days_in_month.html#pandas.Series.dt.days_in_month
    "pandas.Series.dt.days_in_month") | 月份中的天数。 |'
- en: '| [`Series.dt.tz`](api/pandas.Series.dt.tz.html#pandas.Series.dt.tz "pandas.Series.dt.tz")
    | Return the timezone. |'
  id: totrans-241
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.tz`](api/pandas.Series.dt.tz.html#pandas.Series.dt.tz "pandas.Series.dt.tz")
    | 返回时区。 |'
- en: '| [`Series.dt.freq`](api/pandas.Series.dt.freq.html#pandas.Series.dt.freq "pandas.Series.dt.freq")
    | Return the frequency object for this PeriodArray. |'
  id: totrans-242
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.freq`](api/pandas.Series.dt.freq.html#pandas.Series.dt.freq "pandas.Series.dt.freq")
    | 返回此 PeriodArray 的频率对象。 |'
- en: '| [`Series.dt.unit`](api/pandas.Series.dt.unit.html#pandas.Series.dt.unit "pandas.Series.dt.unit")
    |  |'
  id: totrans-243
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.unit`](api/pandas.Series.dt.unit.html#pandas.Series.dt.unit "pandas.Series.dt.unit")
    |  |'
- en: Datetime methods
  id: totrans-244
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 日期时间方法
- en: '| [`Series.dt.isocalendar`](api/pandas.Series.dt.isocalendar.html#pandas.Series.dt.isocalendar
    "pandas.Series.dt.isocalendar")() | Calculate year, week, and day according to
    the ISO 8601 standard. |'
  id: totrans-245
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.isocalendar`](api/pandas.Series.dt.isocalendar.html#pandas.Series.dt.isocalendar
    "pandas.Series.dt.isocalendar")() | 根据 ISO 8601 标准计算年、周和日。 |'
- en: '| [`Series.dt.to_period`](api/pandas.Series.dt.to_period.html#pandas.Series.dt.to_period
    "pandas.Series.dt.to_period")(*args, **kwargs) | Cast to PeriodArray/PeriodIndex
    at a particular frequency. |'
  id: totrans-246
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.to_period`](api/pandas.Series.dt.to_period.html#pandas.Series.dt.to_period
    "pandas.Series.dt.to_period")(*args, **kwargs) | 在特定频率下转换为 PeriodArray/PeriodIndex。
    |'
- en: '| [`Series.dt.to_pydatetime`](api/pandas.Series.dt.to_pydatetime.html#pandas.Series.dt.to_pydatetime
    "pandas.Series.dt.to_pydatetime")() | (DEPRECATED) Return the data as an array
    of [`datetime.datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime
    "(in Python v3.12)") objects. |'
  id: totrans-247
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.to_pydatetime`](api/pandas.Series.dt.to_pydatetime.html#pandas.Series.dt.to_pydatetime
    "pandas.Series.dt.to_pydatetime")() | (已弃用)将数据作为 [`datetime.datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime
    "(在 Python v3.12 中)") 对象数组返回。 |'
- en: '| [`Series.dt.tz_localize`](api/pandas.Series.dt.tz_localize.html#pandas.Series.dt.tz_localize
    "pandas.Series.dt.tz_localize")(*args, **kwargs) | Localize tz-naive Datetime
    Array/Index to tz-aware Datetime Array/Index. |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.tz_localize`](api/pandas.Series.dt.tz_localize.html#pandas.Series.dt.tz_localize
    "pandas.Series.dt.tz_localize")(*args, **kwargs) | 将时区无关的日期时间数组/索引本地化为时区感知的日期时间数组/索引。
    |'
- en: '| [`Series.dt.tz_convert`](api/pandas.Series.dt.tz_convert.html#pandas.Series.dt.tz_convert
    "pandas.Series.dt.tz_convert")(*args, **kwargs) | Convert tz-aware Datetime Array/Index
    from one time zone to another. |'
  id: totrans-249
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.tz_convert`](api/pandas.Series.dt.tz_convert.html#pandas.Series.dt.tz_convert
    "pandas.Series.dt.tz_convert")(*args, **kwargs) | 将时区感知的日期时间数组/索引从一个时区转换为另一个时区。
    |'
- en: '| [`Series.dt.normalize`](api/pandas.Series.dt.normalize.html#pandas.Series.dt.normalize
    "pandas.Series.dt.normalize")(*args, **kwargs) | Convert times to midnight. |'
  id: totrans-250
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.normalize`](api/pandas.Series.dt.normalize.html#pandas.Series.dt.normalize
    "pandas.Series.dt.normalize")(*args, **kwargs) | 将时间转换为午夜。 |'
- en: '| [`Series.dt.strftime`](api/pandas.Series.dt.strftime.html#pandas.Series.dt.strftime
    "pandas.Series.dt.strftime")(*args, **kwargs) | Convert to Index using specified
    date_format. |'
  id: totrans-251
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.strftime`](api/pandas.Series.dt.strftime.html#pandas.Series.dt.strftime
    "pandas.Series.dt.strftime")(*args, **kwargs) | 使用指定的日期格式转换为索引。 |'
- en: '| [`Series.dt.round`](api/pandas.Series.dt.round.html#pandas.Series.dt.round
    "pandas.Series.dt.round")(*args, **kwargs) | Perform round operation on the data
    to the specified freq. |'
  id: totrans-252
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.round`](api/pandas.Series.dt.round.html#pandas.Series.dt.round
    "pandas.Series.dt.round")(*args, **kwargs) | 对数据执行向上取整操作到指定的频率。 |'
- en: '| [`Series.dt.floor`](api/pandas.Series.dt.floor.html#pandas.Series.dt.floor
    "pandas.Series.dt.floor")(*args, **kwargs) | Perform floor operation on the data
    to the specified freq. |'
  id: totrans-253
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.floor`](api/pandas.Series.dt.floor.html#pandas.Series.dt.floor
    "pandas.Series.dt.floor")(*args, **kwargs) | 对数据执行向下取整操作到指定的频率。 |'
- en: '| [`Series.dt.ceil`](api/pandas.Series.dt.ceil.html#pandas.Series.dt.ceil "pandas.Series.dt.ceil")(*args, **kwargs)
    | Perform ceil operation on the data to the specified freq. |'
  id: totrans-254
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.ceil`](api/pandas.Series.dt.ceil.html#pandas.Series.dt.ceil "pandas.Series.dt.ceil")(*args, **kwargs)
    | 对数据执行向上舍入操作以指定的频率。 |'
- en: '| [`Series.dt.month_name`](api/pandas.Series.dt.month_name.html#pandas.Series.dt.month_name
    "pandas.Series.dt.month_name")(*args, **kwargs) | Return the month names with
    specified locale. |'
  id: totrans-255
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.month_name`](api/pandas.Series.dt.month_name.html#pandas.Series.dt.month_name
    "pandas.Series.dt.month_name")(*args, **kwargs) | 返回具有指定区域设置的月份名称。 |'
- en: '| [`Series.dt.day_name`](api/pandas.Series.dt.day_name.html#pandas.Series.dt.day_name
    "pandas.Series.dt.day_name")(*args, **kwargs) | Return the day names with specified
    locale. |'
  id: totrans-256
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.day_name`](api/pandas.Series.dt.day_name.html#pandas.Series.dt.day_name
    "pandas.Series.dt.day_name")(*args, **kwargs) | 返回具有指定区域设置的星期几名称。 |'
- en: '| [`Series.dt.as_unit`](api/pandas.Series.dt.as_unit.html#pandas.Series.dt.as_unit
    "pandas.Series.dt.as_unit")(*args, **kwargs) |  |'
  id: totrans-257
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.as_unit`](api/pandas.Series.dt.as_unit.html#pandas.Series.dt.as_unit
    "pandas.Series.dt.as_unit")(*args, **kwargs) |  |'
- en: Period properties
  id: totrans-258
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 时期属性
- en: '| [`Series.dt.qyear`](api/pandas.Series.dt.qyear.html#pandas.Series.dt.qyear
    "pandas.Series.dt.qyear") |  |'
  id: totrans-259
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.qyear`](api/pandas.Series.dt.qyear.html#pandas.Series.dt.qyear
    "pandas.Series.dt.qyear") |  |'
- en: '| [`Series.dt.start_time`](api/pandas.Series.dt.start_time.html#pandas.Series.dt.start_time
    "pandas.Series.dt.start_time") | Get the Timestamp for the start of the period.
    |'
  id: totrans-260
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.start_time`](api/pandas.Series.dt.start_time.html#pandas.Series.dt.start_time
    "pandas.Series.dt.start_time") | 获取周期开始的时间戳。 |'
- en: '| [`Series.dt.end_time`](api/pandas.Series.dt.end_time.html#pandas.Series.dt.end_time
    "pandas.Series.dt.end_time") | Get the Timestamp for the end of the period. |'
  id: totrans-261
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.end_time`](api/pandas.Series.dt.end_time.html#pandas.Series.dt.end_time
    "pandas.Series.dt.end_time") | 获取周期结束的时间戳。 |'
- en: Timedelta properties
  id: totrans-262
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 时间差属性
- en: '| [`Series.dt.days`](api/pandas.Series.dt.days.html#pandas.Series.dt.days "pandas.Series.dt.days")
    | Number of days for each element. |'
  id: totrans-263
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.days`](api/pandas.Series.dt.days.html#pandas.Series.dt.days "pandas.Series.dt.days")
    | 每个元素的天数。 |'
- en: '| [`Series.dt.seconds`](api/pandas.Series.dt.seconds.html#pandas.Series.dt.seconds
    "pandas.Series.dt.seconds") | Number of seconds (>= 0 and less than 1 day) for
    each element. |'
  id: totrans-264
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.seconds`](api/pandas.Series.dt.seconds.html#pandas.Series.dt.seconds
    "pandas.Series.dt.seconds") | 每个元素的秒数（大于等于0且小于1天）。 |'
- en: '| [`Series.dt.microseconds`](api/pandas.Series.dt.microseconds.html#pandas.Series.dt.microseconds
    "pandas.Series.dt.microseconds") | Number of microseconds (>= 0 and less than
    1 second) for each element. |'
  id: totrans-265
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.microseconds`](api/pandas.Series.dt.microseconds.html#pandas.Series.dt.microseconds
    "pandas.Series.dt.microseconds") | 每个元素的微秒数（大于等于0且小于1秒）。 |'
- en: '| [`Series.dt.nanoseconds`](api/pandas.Series.dt.nanoseconds.html#pandas.Series.dt.nanoseconds
    "pandas.Series.dt.nanoseconds") | Number of nanoseconds (>= 0 and less than 1
    microsecond) for each element. |'
  id: totrans-266
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.nanoseconds`](api/pandas.Series.dt.nanoseconds.html#pandas.Series.dt.nanoseconds
    "pandas.Series.dt.nanoseconds") | 每个元素的纳秒数（大于等于0且小于1微秒）。 |'
- en: '| [`Series.dt.components`](api/pandas.Series.dt.components.html#pandas.Series.dt.components
    "pandas.Series.dt.components") | Return a Dataframe of the components of the Timedeltas.
    |'
  id: totrans-267
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.components`](api/pandas.Series.dt.components.html#pandas.Series.dt.components
    "pandas.Series.dt.components") | 返回时间差的各个组成部分的 DataFrame。 |'
- en: '| [`Series.dt.unit`](api/pandas.Series.dt.unit.html#pandas.Series.dt.unit "pandas.Series.dt.unit")
    |  |'
  id: totrans-268
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.unit`](api/pandas.Series.dt.unit.html#pandas.Series.dt.unit "pandas.Series.dt.unit")
    |  |'
- en: Timedelta methods
  id: totrans-269
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 时间差方法
- en: '| [`Series.dt.to_pytimedelta`](api/pandas.Series.dt.to_pytimedelta.html#pandas.Series.dt.to_pytimedelta
    "pandas.Series.dt.to_pytimedelta")() | Return an array of native [`datetime.timedelta`](https://docs.python.org/3/library/datetime.html#datetime.timedelta
    "(in Python v3.12)") objects. |'
  id: totrans-270
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.to_pytimedelta`](api/pandas.Series.dt.to_pytimedelta.html#pandas.Series.dt.to_pytimedelta
    "pandas.Series.dt.to_pytimedelta")() | 返回一个原生的 [`datetime.timedelta`](https://docs.python.org/3/library/datetime.html#datetime.timedelta
    "(in Python v3.12)") 对象数组。 |'
- en: '| [`Series.dt.total_seconds`](api/pandas.Series.dt.total_seconds.html#pandas.Series.dt.total_seconds
    "pandas.Series.dt.total_seconds")(*args, **kwargs) | Return total duration of
    each element expressed in seconds. |'
  id: totrans-271
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.total_seconds`](api/pandas.Series.dt.total_seconds.html#pandas.Series.dt.total_seconds
    "pandas.Series.dt.total_seconds")(*args, **kwargs) | 返回以秒为单位表示的每个元素的总持续时间。 |'
- en: '| [`Series.dt.as_unit`](api/pandas.Series.dt.as_unit.html#pandas.Series.dt.as_unit
    "pandas.Series.dt.as_unit")(*args, **kwargs) |  |  ### String handling'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`Series.dt.as_unit`](api/pandas.Series.dt.as_unit.html#pandas.Series.dt.as_unit
    "pandas.Series.dt.as_unit")(*args, **kwargs) |  |  ### 字符串处理'
- en: '`Series.str` can be used to access the values of the series as strings and
    apply several methods to it. These can be accessed like `Series.str.<function/property>`.'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series.str` 可用于访问系列的值作为字符串，并对其应用多种方法。可以像 `Series.str.<function/property>`
    这样访问它们。'
- en: '| [`Series.str.capitalize`](api/pandas.Series.str.capitalize.html#pandas.Series.str.capitalize
    "pandas.Series.str.capitalize")() | Convert strings in the Series/Index to be
    capitalized. |'
  id: totrans-274
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.capitalize`](api/pandas.Series.str.capitalize.html#pandas.Series.str.capitalize
    "pandas.Series.str.capitalize") | 将 Series/Index 中的字符串转换为大写。'
- en: '| [`Series.str.casefold`](api/pandas.Series.str.casefold.html#pandas.Series.str.casefold
    "pandas.Series.str.casefold")() | Convert strings in the Series/Index to be casefolded.
    |'
  id: totrans-275
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.casefold`](api/pandas.Series.str.casefold.html#pandas.Series.str.casefold
    "pandas.Series.str.casefold") | 将 Series/Index 中的字符串转换为小写。'
- en: '| [`Series.str.cat`](api/pandas.Series.str.cat.html#pandas.Series.str.cat "pandas.Series.str.cat")([others, sep, na_rep, join])
    | Concatenate strings in the Series/Index with given separator. |'
  id: totrans-276
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.cat`](api/pandas.Series.str.cat.html#pandas.Series.str.cat "pandas.Series.str.cat")
    | 使用给定的分隔符连接 Series/Index 中的字符串。'
- en: '| [`Series.str.center`](api/pandas.Series.str.center.html#pandas.Series.str.center
    "pandas.Series.str.center")(width[, fillchar]) | Pad left and right side of strings
    in the Series/Index. |'
  id: totrans-277
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.center`](api/pandas.Series.str.center.html#pandas.Series.str.center
    "pandas.Series.str.center") | 在 Series/Index 中的字符串左右两侧填充。'
- en: '| [`Series.str.contains`](api/pandas.Series.str.contains.html#pandas.Series.str.contains
    "pandas.Series.str.contains")(pat[, case, flags, na, ...]) | Test if pattern or
    regex is contained within a string of a Series or Index. |'
  id: totrans-278
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.contains`](api/pandas.Series.str.contains.html#pandas.Series.str.contains
    "pandas.Series.str.contains") | 测试 Series 或 Index 中的字符串是否包含模式或正则表达式。'
- en: '| [`Series.str.count`](api/pandas.Series.str.count.html#pandas.Series.str.count
    "pandas.Series.str.count")(pat[, flags]) | Count occurrences of pattern in each
    string of the Series/Index. |'
  id: totrans-279
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.count`](api/pandas.Series.str.count.html#pandas.Series.str.count
    "pandas.Series.str.count") | 计算 Series/Index 中每个字符串中模式的出现次数。'
- en: '| [`Series.str.decode`](api/pandas.Series.str.decode.html#pandas.Series.str.decode
    "pandas.Series.str.decode")(encoding[, errors]) | Decode character string in the
    Series/Index using indicated encoding. |'
  id: totrans-280
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.decode`](api/pandas.Series.str.decode.html#pandas.Series.str.decode
    "pandas.Series.str.decode") | 使用指定的编码对 Series/Index 中的字符串进行解码。'
- en: '| [`Series.str.encode`](api/pandas.Series.str.encode.html#pandas.Series.str.encode
    "pandas.Series.str.encode")(encoding[, errors]) | Encode character string in the
    Series/Index using indicated encoding. |'
  id: totrans-281
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.encode`](api/pandas.Series.str.encode.html#pandas.Series.str.encode
    "pandas.Series.str.encode") | 使用指定的编码对 Series/Index 中的字符串进行编码。'
- en: '| [`Series.str.endswith`](api/pandas.Series.str.endswith.html#pandas.Series.str.endswith
    "pandas.Series.str.endswith")(pat[, na]) | Test if the end of each string element
    matches a pattern. |'
  id: totrans-282
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.endswith`](api/pandas.Series.str.endswith.html#pandas.Series.str.endswith
    "pandas.Series.str.endswith") | 测试每个字符串元素的末尾是否与模式匹配。'
- en: '| [`Series.str.extract`](api/pandas.Series.str.extract.html#pandas.Series.str.extract
    "pandas.Series.str.extract")(pat[, flags, expand]) | Extract capture groups in
    the regex pat as columns in a DataFrame. |'
  id: totrans-283
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.extract`](api/pandas.Series.str.extract.html#pandas.Series.str.extract
    "pandas.Series.str.extract") | 在 DataFrame 中提取正则表达式 pat 中的捕获组作为列。'
- en: '| [`Series.str.extractall`](api/pandas.Series.str.extractall.html#pandas.Series.str.extractall
    "pandas.Series.str.extractall")(pat[, flags]) | Extract capture groups in the
    regex pat as columns in DataFrame. |'
  id: totrans-284
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.extractall`](api/pandas.Series.str.extractall.html#pandas.Series.str.extractall
    "pandas.Series.str.extractall") | 在 DataFrame 中提取正则表达式 pat 中的捕获组作为列。'
- en: '| [`Series.str.find`](api/pandas.Series.str.find.html#pandas.Series.str.find
    "pandas.Series.str.find")(sub[, start, end]) | Return lowest indexes in each strings
    in the Series/Index. |'
  id: totrans-285
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.find`](api/pandas.Series.str.find.html#pandas.Series.str.find
    "pandas.Series.str.find") | 返回 Series/Index 中每个字符串的最低索引。'
- en: '| [`Series.str.findall`](api/pandas.Series.str.findall.html#pandas.Series.str.findall
    "pandas.Series.str.findall")(pat[, flags]) | Find all occurrences of pattern or
    regular expression in the Series/Index. |'
  id: totrans-286
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.findall`](api/pandas.Series.str.findall.html#pandas.Series.str.findall
    "pandas.Series.str.findall") | 在 Series/Index 中查找模式或正则表达式的所有匹配项。'
- en: '| [`Series.str.fullmatch`](api/pandas.Series.str.fullmatch.html#pandas.Series.str.fullmatch
    "pandas.Series.str.fullmatch")(pat[, case, flags, na]) | Determine if each string
    entirely matches a regular expression. |'
  id: totrans-287
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.fullmatch`](api/pandas.Series.str.fullmatch.html#pandas.Series.str.fullmatch
    "pandas.Series.str.fullmatch") | 确定每个字符串是否完全匹配正则表达式。'
- en: '| [`Series.str.get`](api/pandas.Series.str.get.html#pandas.Series.str.get "pandas.Series.str.get")(i)
    | Extract element from each component at specified position or with specified
    key. |'
  id: totrans-288
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.get`](api/pandas.Series.str.get.html#pandas.Series.str.get "pandas.Series.str.get")(i)
    | 从指定位置或指定键提取每个组件的元素。 |'
- en: '| [`Series.str.index`](api/pandas.Series.str.index.html#pandas.Series.str.index
    "pandas.Series.str.index")(sub[, start, end]) | Return lowest indexes in each
    string in Series/Index. |'
  id: totrans-289
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.index`](api/pandas.Series.str.index.html#pandas.Series.str.index
    "pandas.Series.str.index")(sub[, start, end]) | 返回系列/索引中每个字符串中最低的索引。 |'
- en: '| [`Series.str.join`](api/pandas.Series.str.join.html#pandas.Series.str.join
    "pandas.Series.str.join")(sep) | Join lists contained as elements in the Series/Index
    with passed delimiter. |'
  id: totrans-290
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.join`](api/pandas.Series.str.join.html#pandas.Series.str.join
    "pandas.Series.str.join")(sep) | 使用指定的分隔符连接系列/索引中包含的元素列表。 |'
- en: '| [`Series.str.len`](api/pandas.Series.str.len.html#pandas.Series.str.len "pandas.Series.str.len")()
    | Compute the length of each element in the Series/Index. |'
  id: totrans-291
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.len`](api/pandas.Series.str.len.html#pandas.Series.str.len "pandas.Series.str.len")()
    | 计算系列/索引中每个元素的长度。 |'
- en: '| [`Series.str.ljust`](api/pandas.Series.str.ljust.html#pandas.Series.str.ljust
    "pandas.Series.str.ljust")(width[, fillchar]) | Pad right side of strings in the
    Series/Index. |'
  id: totrans-292
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.ljust`](api/pandas.Series.str.ljust.html#pandas.Series.str.ljust
    "pandas.Series.str.ljust")(width[, fillchar]) | 在系列/索引中的字符串右侧填充空格。 |'
- en: '| [`Series.str.lower`](api/pandas.Series.str.lower.html#pandas.Series.str.lower
    "pandas.Series.str.lower")() | Convert strings in the Series/Index to lowercase.
    |'
  id: totrans-293
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.lower`](api/pandas.Series.str.lower.html#pandas.Series.str.lower
    "pandas.Series.str.lower")() | 将系列/索引中的字符串转换为小写。 |'
- en: '| [`Series.str.lstrip`](api/pandas.Series.str.lstrip.html#pandas.Series.str.lstrip
    "pandas.Series.str.lstrip")([to_strip]) | Remove leading characters. |'
  id: totrans-294
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.lstrip`](api/pandas.Series.str.lstrip.html#pandas.Series.str.lstrip
    "pandas.Series.str.lstrip")([to_strip]) | 删除前导字符。 |'
- en: '| [`Series.str.match`](api/pandas.Series.str.match.html#pandas.Series.str.match
    "pandas.Series.str.match")(pat[, case, flags, na]) | Determine if each string
    starts with a match of a regular expression. |'
  id: totrans-295
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.match`](api/pandas.Series.str.match.html#pandas.Series.str.match
    "pandas.Series.str.match")(pat[, case, flags, na]) | 确定每个字符串是否以正则表达式的匹配开头。 |'
- en: '| [`Series.str.normalize`](api/pandas.Series.str.normalize.html#pandas.Series.str.normalize
    "pandas.Series.str.normalize")(form) | Return the Unicode normal form for the
    strings in the Series/Index. |'
  id: totrans-296
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.normalize`](api/pandas.Series.str.normalize.html#pandas.Series.str.normalize
    "pandas.Series.str.normalize")(form) | 返回系列/索引中字符串的 Unicode 规范形式。 |'
- en: '| [`Series.str.pad`](api/pandas.Series.str.pad.html#pandas.Series.str.pad "pandas.Series.str.pad")(width[, side, fillchar])
    | Pad strings in the Series/Index up to width. |'
  id: totrans-297
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.pad`](api/pandas.Series.str.pad.html#pandas.Series.str.pad "pandas.Series.str.pad")(width[, side, fillchar])
    | 将系列/索引中的字符串填充到指定宽度。 |'
- en: '| [`Series.str.partition`](api/pandas.Series.str.partition.html#pandas.Series.str.partition
    "pandas.Series.str.partition")([sep, expand]) | Split the string at the first
    occurrence of sep. |'
  id: totrans-298
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.partition`](api/pandas.Series.str.partition.html#pandas.Series.str.partition
    "pandas.Series.str.partition")([sep, expand]) | 将字符串在第一次出现的分隔符处拆分。 |'
- en: '| [`Series.str.removeprefix`](api/pandas.Series.str.removeprefix.html#pandas.Series.str.removeprefix
    "pandas.Series.str.removeprefix")(prefix) | Remove a prefix from an object series.
    |'
  id: totrans-299
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.removeprefix`](api/pandas.Series.str.removeprefix.html#pandas.Series.str.removeprefix
    "pandas.Series.str.removeprefix")(prefix) | 从对象系列中删除前缀。 |'
- en: '| [`Series.str.removesuffix`](api/pandas.Series.str.removesuffix.html#pandas.Series.str.removesuffix
    "pandas.Series.str.removesuffix")(suffix) | Remove a suffix from an object series.
    |'
  id: totrans-300
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.removesuffix`](api/pandas.Series.str.removesuffix.html#pandas.Series.str.removesuffix
    "pandas.Series.str.removesuffix")(suffix) | 从对象系列中删除后缀。 |'
- en: '| [`Series.str.repeat`](api/pandas.Series.str.repeat.html#pandas.Series.str.repeat
    "pandas.Series.str.repeat")(repeats) | Duplicate each string in the Series or
    Index. |'
  id: totrans-301
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.repeat`](api/pandas.Series.str.repeat.html#pandas.Series.str.repeat
    "pandas.Series.str.repeat")(repeats) | 在系列或索引中重复每个字符串。 |'
- en: '| [`Series.str.replace`](api/pandas.Series.str.replace.html#pandas.Series.str.replace
    "pandas.Series.str.replace")(pat, repl[, n, case, ...]) | Replace each occurrence
    of pattern/regex in the Series/Index. |'
  id: totrans-302
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.replace`](api/pandas.Series.str.replace.html#pandas.Series.str.replace
    "pandas.Series.str.replace")(pat, repl[, n, case, ...]) | 替换系列/索引中每个出现的模式/正则表达式。
    |'
- en: '| [`Series.str.rfind`](api/pandas.Series.str.rfind.html#pandas.Series.str.rfind
    "pandas.Series.str.rfind")(sub[, start, end]) | Return highest indexes in each
    strings in the Series/Index. |'
  id: totrans-303
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.rfind`](api/pandas.Series.str.rfind.html#pandas.Series.str.rfind
    "pandas.Series.str.rfind")(sub[, start, end]) | 返回系列/索引中每个字符串中最高的索引。 |'
- en: '| [`Series.str.rindex`](api/pandas.Series.str.rindex.html#pandas.Series.str.rindex
    "pandas.Series.str.rindex")(sub[, start, end]) | Return highest indexes in each
    string in Series/Index. |'
  id: totrans-304
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.rindex`](api/pandas.Series.str.rindex.html#pandas.Series.str.rindex
    "pandas.Series.str.rindex")(sub[, start, end]) | 返回系列/索引中每个字符串的最高索引。 |'
- en: '| [`Series.str.rjust`](api/pandas.Series.str.rjust.html#pandas.Series.str.rjust
    "pandas.Series.str.rjust")(width[, fillchar]) | Pad left side of strings in the
    Series/Index. |'
  id: totrans-305
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.rjust`](api/pandas.Series.str.rjust.html#pandas.Series.str.rjust
    "pandas.Series.str.rjust")(width[, fillchar]) | 在系列/索引中字符串的左侧填充。 |'
- en: '| [`Series.str.rpartition`](api/pandas.Series.str.rpartition.html#pandas.Series.str.rpartition
    "pandas.Series.str.rpartition")([sep, expand]) | Split the string at the last
    occurrence of sep. |'
  id: totrans-306
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.rpartition`](api/pandas.Series.str.rpartition.html#pandas.Series.str.rpartition
    "pandas.Series.str.rpartition")([sep, expand]) | 在字符串中最后一次出现的位置分割字符串。 |'
- en: '| [`Series.str.rstrip`](api/pandas.Series.str.rstrip.html#pandas.Series.str.rstrip
    "pandas.Series.str.rstrip")([to_strip]) | Remove trailing characters. |'
  id: totrans-307
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.rstrip`](api/pandas.Series.str.rstrip.html#pandas.Series.str.rstrip
    "pandas.Series.str.rstrip")([to_strip]) | 删除字符串末尾的字符。 |'
- en: '| [`Series.str.slice`](api/pandas.Series.str.slice.html#pandas.Series.str.slice
    "pandas.Series.str.slice")([start, stop, step]) | Slice substrings from each element
    in the Series or Index. |'
  id: totrans-308
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.slice`](api/pandas.Series.str.slice.html#pandas.Series.str.slice
    "pandas.Series.str.slice")([start, stop, step]) | 从系列或索引中的每个元素中切片子字符串。 |'
- en: '| [`Series.str.slice_replace`](api/pandas.Series.str.slice_replace.html#pandas.Series.str.slice_replace
    "pandas.Series.str.slice_replace")([start, stop, repl]) | Replace a positional
    slice of a string with another value. |'
  id: totrans-309
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.slice_replace`](api/pandas.Series.str.slice_replace.html#pandas.Series.str.slice_replace
    "pandas.Series.str.slice_replace")([start, stop, repl]) | 用另一个值替换字符串的位置切片。 |'
- en: '| [`Series.str.split`](api/pandas.Series.str.split.html#pandas.Series.str.split
    "pandas.Series.str.split")([pat, n, expand, regex]) | Split strings around given
    separator/delimiter. |'
  id: totrans-310
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.split`](api/pandas.Series.str.split.html#pandas.Series.str.split
    "pandas.Series.str.split")([pat, n, expand, regex]) | 在给定的分隔符/定界符周围分割字符串。 |'
- en: '| [`Series.str.rsplit`](api/pandas.Series.str.rsplit.html#pandas.Series.str.rsplit
    "pandas.Series.str.rsplit")([pat, n, expand]) | Split strings around given separator/delimiter.
    |'
  id: totrans-311
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.rsplit`](api/pandas.Series.str.rsplit.html#pandas.Series.str.rsplit
    "pandas.Series.str.rsplit")([pat, n, expand]) | 在给定的分隔符/定界符周围分割字符串。 |'
- en: '| [`Series.str.startswith`](api/pandas.Series.str.startswith.html#pandas.Series.str.startswith
    "pandas.Series.str.startswith")(pat[, na]) | Test if the start of each string
    element matches a pattern. |'
  id: totrans-312
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.startswith`](api/pandas.Series.str.startswith.html#pandas.Series.str.startswith
    "pandas.Series.str.startswith")(pat[, na]) | 检测每个字符串元素的开头是否匹配某个模式。 |'
- en: '| [`Series.str.strip`](api/pandas.Series.str.strip.html#pandas.Series.str.strip
    "pandas.Series.str.strip")([to_strip]) | Remove leading and trailing characters.
    |'
  id: totrans-313
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.strip`](api/pandas.Series.str.strip.html#pandas.Series.str.strip
    "pandas.Series.str.strip")([to_strip]) | 删除字符串的前导和尾随字符。 |'
- en: '| [`Series.str.swapcase`](api/pandas.Series.str.swapcase.html#pandas.Series.str.swapcase
    "pandas.Series.str.swapcase")() | Convert strings in the Series/Index to be swapcased.
    |'
  id: totrans-314
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.swapcase`](api/pandas.Series.str.swapcase.html#pandas.Series.str.swapcase
    "pandas.Series.str.swapcase")() | 将系列/索引中的字符串进行大小写交换。 |'
- en: '| [`Series.str.title`](api/pandas.Series.str.title.html#pandas.Series.str.title
    "pandas.Series.str.title")() | Convert strings in the Series/Index to titlecase.
    |'
  id: totrans-315
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.title`](api/pandas.Series.str.title.html#pandas.Series.str.title
    "pandas.Series.str.title")() | 将系列/索引中的字符串转换为标题格式。 |'
- en: '| [`Series.str.translate`](api/pandas.Series.str.translate.html#pandas.Series.str.translate
    "pandas.Series.str.translate")(table) | Map all characters in the string through
    the given mapping table. |'
  id: totrans-316
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.translate`](api/pandas.Series.str.translate.html#pandas.Series.str.translate
    "pandas.Series.str.translate")(table) | 通过给定的映射表映射字符串中的所有字符。 |'
- en: '| [`Series.str.upper`](api/pandas.Series.str.upper.html#pandas.Series.str.upper
    "pandas.Series.str.upper")() | Convert strings in the Series/Index to uppercase.
    |'
  id: totrans-317
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.upper`](api/pandas.Series.str.upper.html#pandas.Series.str.upper
    "pandas.Series.str.upper")() | 将系列/索引中的字符串转换为大写。 |'
- en: '| [`Series.str.wrap`](api/pandas.Series.str.wrap.html#pandas.Series.str.wrap
    "pandas.Series.str.wrap")(width, **kwargs) | Wrap strings in Series/Index at specified
    line width. |'
  id: totrans-318
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.wrap`](api/pandas.Series.str.wrap.html#pandas.Series.str.wrap
    "pandas.Series.str.wrap")(width, **kwargs) | 将系列/索引中的字符串按指定行宽进行换行。 |'
- en: '| [`Series.str.zfill`](api/pandas.Series.str.zfill.html#pandas.Series.str.zfill
    "pandas.Series.str.zfill")(width) | Pad strings in the Series/Index by prepending
    ''0'' characters. |'
  id: totrans-319
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.zfill`](api/pandas.Series.str.zfill.html#pandas.Series.str.zfill
    "pandas.Series.str.zfill")(width) | 在系列/索引中的字符串前面填充''0''字符。 |'
- en: '| [`Series.str.isalnum`](api/pandas.Series.str.isalnum.html#pandas.Series.str.isalnum
    "pandas.Series.str.isalnum")() | Check whether all characters in each string are
    alphanumeric. |'
  id: totrans-320
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.isalnum`](api/pandas.Series.str.isalnum.html#pandas.Series.str.isalnum
    "pandas.Series.str.isalnum")() | 检查每个字符串中的所有字符是否都是字母数字。 |'
- en: '| [`Series.str.isalpha`](api/pandas.Series.str.isalpha.html#pandas.Series.str.isalpha
    "pandas.Series.str.isalpha")() | Check whether all characters in each string are
    alphabetic. |'
  id: totrans-321
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.isalpha`](api/pandas.Series.str.isalpha.html#pandas.Series.str.isalpha
    "pandas.Series.str.isalpha")() | 检查每个字符串中的所有字符是否都是字母。 |'
- en: '| [`Series.str.isdigit`](api/pandas.Series.str.isdigit.html#pandas.Series.str.isdigit
    "pandas.Series.str.isdigit")() | Check whether all characters in each string are
    digits. |'
  id: totrans-322
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.isdigit`](api/pandas.Series.str.isdigit.html#pandas.Series.str.isdigit
    "pandas.Series.str.isdigit")() | 检查每个字符串中的所有字符是否都是数字。 |'
- en: '| [`Series.str.isspace`](api/pandas.Series.str.isspace.html#pandas.Series.str.isspace
    "pandas.Series.str.isspace")() | Check whether all characters in each string are
    whitespace. |'
  id: totrans-323
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.isspace`](api/pandas.Series.str.isspace.html#pandas.Series.str.isspace
    "pandas.Series.str.isspace")() | 检查每个字符串中的所有字符是否都是空格。 |'
- en: '| [`Series.str.islower`](api/pandas.Series.str.islower.html#pandas.Series.str.islower
    "pandas.Series.str.islower")() | Check whether all characters in each string are
    lowercase. |'
  id: totrans-324
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.islower`](api/pandas.Series.str.islower.html#pandas.Series.str.islower
    "pandas.Series.str.islower")() | 检查每个字符串中的所有字符是否都是小写。 |'
- en: '| [`Series.str.isupper`](api/pandas.Series.str.isupper.html#pandas.Series.str.isupper
    "pandas.Series.str.isupper")() | Check whether all characters in each string are
    uppercase. |'
  id: totrans-325
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.isupper`](api/pandas.Series.str.isupper.html#pandas.Series.str.isupper
    "pandas.Series.str.isupper")() | 检查每个字符串中的所有字符是否都是大写。 |'
- en: '| [`Series.str.istitle`](api/pandas.Series.str.istitle.html#pandas.Series.str.istitle
    "pandas.Series.str.istitle")() | Check whether all characters in each string are
    titlecase. |'
  id: totrans-326
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.istitle`](api/pandas.Series.str.istitle.html#pandas.Series.str.istitle
    "pandas.Series.str.istitle")() | 检查每个字符串中的所有字符是否都是首字母大写。 |'
- en: '| [`Series.str.isnumeric`](api/pandas.Series.str.isnumeric.html#pandas.Series.str.isnumeric
    "pandas.Series.str.isnumeric")() | Check whether all characters in each string
    are numeric. |'
  id: totrans-327
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.isnumeric`](api/pandas.Series.str.isnumeric.html#pandas.Series.str.isnumeric
    "pandas.Series.str.isnumeric")() | 检查每个字符串中的所有字符是否都是数字。 |'
- en: '| [`Series.str.isdecimal`](api/pandas.Series.str.isdecimal.html#pandas.Series.str.isdecimal
    "pandas.Series.str.isdecimal")() | Check whether all characters in each string
    are decimal. |'
  id: totrans-328
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.isdecimal`](api/pandas.Series.str.isdecimal.html#pandas.Series.str.isdecimal
    "pandas.Series.str.isdecimal")() | 检查每个字符串中的所有字符是否都是十进制数。 |'
- en: '| [`Series.str.get_dummies`](api/pandas.Series.str.get_dummies.html#pandas.Series.str.get_dummies
    "pandas.Series.str.get_dummies")([sep]) | Return DataFrame of dummy/indicator
    variables for Series. |  ### Categorical accessor'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`Series.str.get_dummies`](api/pandas.Series.str.get_dummies.html#pandas.Series.str.get_dummies
    "pandas.Series.str.get_dummies")([sep]) | 返回Series的虚拟/指示变量的DataFrame。 |  ### 分类访问器'
- en: Categorical-dtype specific methods and attributes are available under the `Series.cat`
    accessor.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 分类特定的方法和属性可以在`Series.cat`访问器下使用。
- en: '| [`Series.cat.categories`](api/pandas.Series.cat.categories.html#pandas.Series.cat.categories
    "pandas.Series.cat.categories") | The categories of this categorical. |'
  id: totrans-331
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.categories`](api/pandas.Series.cat.categories.html#pandas.Series.cat.categories
    "pandas.Series.cat.categories") | 此分类的类别。 |'
- en: '| [`Series.cat.ordered`](api/pandas.Series.cat.ordered.html#pandas.Series.cat.ordered
    "pandas.Series.cat.ordered") | Whether the categories have an ordered relationship.
    |'
  id: totrans-332
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.ordered`](api/pandas.Series.cat.ordered.html#pandas.Series.cat.ordered
    "pandas.Series.cat.ordered") | 类别是否具有有序关系。 |'
- en: '| [`Series.cat.codes`](api/pandas.Series.cat.codes.html#pandas.Series.cat.codes
    "pandas.Series.cat.codes") | Return Series of codes as well as the index. |'
  id: totrans-333
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.codes`](api/pandas.Series.cat.codes.html#pandas.Series.cat.codes
    "pandas.Series.cat.codes") | 返回代码的Series以及索引。 |'
- en: '| [`Series.cat.rename_categories`](api/pandas.Series.cat.rename_categories.html#pandas.Series.cat.rename_categories
    "pandas.Series.cat.rename_categories")(*args, **kwargs) | Rename categories. |'
  id: totrans-334
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.rename_categories`](api/pandas.Series.cat.rename_categories.html#pandas.Series.cat.rename_categories
    "pandas.Series.cat.rename_categories")(*args, **kwargs) | 重命名类别。 |'
- en: '| [`Series.cat.reorder_categories`](api/pandas.Series.cat.reorder_categories.html#pandas.Series.cat.reorder_categories
    "pandas.Series.cat.reorder_categories")(*args, **kwargs) | Reorder categories
    as specified in new_categories. |'
  id: totrans-335
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.reorder_categories`](api/pandas.Series.cat.reorder_categories.html#pandas.Series.cat.reorder_categories
    "pandas.Series.cat.reorder_categories")(*args, **kwargs) | 根据new_categories指定的顺序重新排序类别。
    |'
- en: '| [`Series.cat.add_categories`](api/pandas.Series.cat.add_categories.html#pandas.Series.cat.add_categories
    "pandas.Series.cat.add_categories")(*args, **kwargs) | Add new categories. |'
  id: totrans-336
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.add_categories`](api/pandas.Series.cat.add_categories.html#pandas.Series.cat.add_categories
    "pandas.Series.cat.add_categories")(*args, **kwargs) | 添加新的类别。 |'
- en: '| [`Series.cat.remove_categories`](api/pandas.Series.cat.remove_categories.html#pandas.Series.cat.remove_categories
    "pandas.Series.cat.remove_categories")(*args, **kwargs) | Remove the specified
    categories. |'
  id: totrans-337
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.remove_categories`](api/pandas.Series.cat.remove_categories.html#pandas.Series.cat.remove_categories
    "pandas.Series.cat.remove_categories")(*args, **kwargs) | 移除指定的类别。 |'
- en: '| [`Series.cat.remove_unused_categories`](api/pandas.Series.cat.remove_unused_categories.html#pandas.Series.cat.remove_unused_categories
    "pandas.Series.cat.remove_unused_categories")(*args, ...) | Remove categories
    which are not used. |'
  id: totrans-338
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.remove_unused_categories`](api/pandas.Series.cat.remove_unused_categories.html#pandas.Series.cat.remove_unused_categories
    "pandas.Series.cat.remove_unused_categories")(*args, ...) | 移除未使用的类别。 |'
- en: '| [`Series.cat.set_categories`](api/pandas.Series.cat.set_categories.html#pandas.Series.cat.set_categories
    "pandas.Series.cat.set_categories")(*args, **kwargs) | Set the categories to the
    specified new categories. |'
  id: totrans-339
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.set_categories`](api/pandas.Series.cat.set_categories.html#pandas.Series.cat.set_categories
    "pandas.Series.cat.set_categories")(*args, **kwargs) | 将类别设置为指定的新类别。 |'
- en: '| [`Series.cat.as_ordered`](api/pandas.Series.cat.as_ordered.html#pandas.Series.cat.as_ordered
    "pandas.Series.cat.as_ordered")(*args, **kwargs) | Set the Categorical to be ordered.
    |'
  id: totrans-340
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.as_ordered`](api/pandas.Series.cat.as_ordered.html#pandas.Series.cat.as_ordered
    "pandas.Series.cat.as_ordered")(*args, **kwargs) | 将分类设置为有序。 |'
- en: '| [`Series.cat.as_unordered`](api/pandas.Series.cat.as_unordered.html#pandas.Series.cat.as_unordered
    "pandas.Series.cat.as_unordered")(*args, **kwargs) | Set the Categorical to be
    unordered. |  ### Sparse accessor'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`Series.cat.as_unordered`](api/pandas.Series.cat.as_unordered.html#pandas.Series.cat.as_unordered
    "pandas.Series.cat.as_unordered")(*args, **kwargs) | 将分类设置为无序。 |  ### 稀疏访问器'
- en: Sparse-dtype specific methods and attributes are provided under the `Series.sparse`
    accessor.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 稀��-dtype 特定的方法和属性可在 `Series.sparse` 访问器下找到。
- en: '| [`Series.sparse.npoints`](api/pandas.Series.sparse.npoints.html#pandas.Series.sparse.npoints
    "pandas.Series.sparse.npoints") | The number of non- `fill_value` points. |'
  id: totrans-343
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sparse.npoints`](api/pandas.Series.sparse.npoints.html#pandas.Series.sparse.npoints
    "pandas.Series.sparse.npoints") | 非 `fill_value` 点的数量。 |'
- en: '| [`Series.sparse.density`](api/pandas.Series.sparse.density.html#pandas.Series.sparse.density
    "pandas.Series.sparse.density") | The percent of non- `fill_value` points, as
    decimal. |'
  id: totrans-344
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sparse.density`](api/pandas.Series.sparse.density.html#pandas.Series.sparse.density
    "pandas.Series.sparse.density") | 非 `fill_value` 点的百分比，以小数表示。 |'
- en: '| [`Series.sparse.fill_value`](api/pandas.Series.sparse.fill_value.html#pandas.Series.sparse.fill_value
    "pandas.Series.sparse.fill_value") | Elements in data that are fill_value are
    not stored. |'
  id: totrans-345
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sparse.fill_value`](api/pandas.Series.sparse.fill_value.html#pandas.Series.sparse.fill_value
    "pandas.Series.sparse.fill_value") | 数据中的 fill_value 元素不会被存储。 |'
- en: '| [`Series.sparse.sp_values`](api/pandas.Series.sparse.sp_values.html#pandas.Series.sparse.sp_values
    "pandas.Series.sparse.sp_values") | An ndarray containing the non- `fill_value`
    values. |'
  id: totrans-346
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sparse.sp_values`](api/pandas.Series.sparse.sp_values.html#pandas.Series.sparse.sp_values
    "pandas.Series.sparse.sp_values") | 包含非 `fill_value` 值的 ndarray。 |'
- en: '| [`Series.sparse.from_coo`](api/pandas.Series.sparse.from_coo.html#pandas.Series.sparse.from_coo
    "pandas.Series.sparse.from_coo")(A[, dense_index]) | Create a Series with sparse
    values from a scipy.sparse.coo_matrix. |'
  id: totrans-347
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sparse.from_coo`](api/pandas.Series.sparse.from_coo.html#pandas.Series.sparse.from_coo
    "pandas.Series.sparse.from_coo")(A[, dense_index]) | 从 scipy.sparse.coo_matrix
    创建具有稀疏值的 Series。 |'
- en: '| [`Series.sparse.to_coo`](api/pandas.Series.sparse.to_coo.html#pandas.Series.sparse.to_coo
    "pandas.Series.sparse.to_coo")([row_levels, ...]) | Create a scipy.sparse.coo_matrix
    from a Series with MultiIndex. |  ### List accessor'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`Series.sparse.to_coo`](api/pandas.Series.sparse.to_coo.html#pandas.Series.sparse.to_coo
    "pandas.Series.sparse.to_coo")([row_levels, ...]) | 从具有 MultiIndex 的 Series 创建一个
    scipy.sparse.coo_matrix。 |  ### 列表访问器'
- en: Arrow list-dtype specific methods and attributes are provided under the `Series.list`
    accessor.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 列表-dtype 特定的方法和属性可在 `Series.list` 访问器下找到。
- en: '| [`Series.list.flatten`](api/pandas.Series.list.flatten.html#pandas.Series.list.flatten
    "pandas.Series.list.flatten")() | Flatten list values. |'
  id: totrans-350
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.list.flatten`](api/pandas.Series.list.flatten.html#pandas.Series.list.flatten
    "pandas.Series.list.flatten")() | 展平列表值。 |'
- en: '| [`Series.list.len`](api/pandas.Series.list.len.html#pandas.Series.list.len
    "pandas.Series.list.len")() | Return the length of each list in the Series. |'
  id: totrans-351
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.list.len`](api/pandas.Series.list.len.html#pandas.Series.list.len
    "pandas.Series.list.len")() | 返回 Series 中每个列表的长度。 |'
- en: '| [`Series.list.__getitem__`](api/pandas.Series.list.__getitem__.html#pandas.Series.list.__getitem__
    "pandas.Series.list.__getitem__")(key) | Index or slice lists in the Series. |  ###
    Struct accessor'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`Series.list.__getitem__`](api/pandas.Series.list.__getitem__.html#pandas.Series.list.__getitem__
    "pandas.Series.list.__getitem__")(key) | 在 Series 中索引或切片列表。 |  ### 结构访问器'
- en: Arrow struct-dtype specific methods and attributes are provided under the `Series.struct`
    accessor.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 箭头结构体 dtype 特定方法和属性在`Series.struct`访问器下提供。
- en: '| [`Series.struct.dtypes`](api/pandas.Series.struct.dtypes.html#pandas.Series.struct.dtypes
    "pandas.Series.struct.dtypes") | Return the dtype object of each child field of
    the struct. |'
  id: totrans-354
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.struct.dtypes`](api/pandas.Series.struct.dtypes.html#pandas.Series.struct.dtypes
    "pandas.Series.struct.dtypes") | 返回结构体的每个子字段的 dtype 对象。 |'
- en: '| [`Series.struct.field`](api/pandas.Series.struct.field.html#pandas.Series.struct.field
    "pandas.Series.struct.field")(name_or_index) | Extract a child field of a struct
    as a Series. |'
  id: totrans-355
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.struct.field`](api/pandas.Series.struct.field.html#pandas.Series.struct.field
    "pandas.Series.struct.field")(name_or_index) | 将结构体的子字段提取为 Series。 |'
- en: '| [`Series.struct.explode`](api/pandas.Series.struct.explode.html#pandas.Series.struct.explode
    "pandas.Series.struct.explode")() | Extract all child fields of a struct as a
    DataFrame. |  ### Flags'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`Series.struct.explode`](api/pandas.Series.struct.explode.html#pandas.Series.struct.explode
    "pandas.Series.struct.explode")() | 将结构体的所有子字段提取为 DataFrame。 |  ### 标志'
- en: Flags refer to attributes of the pandas object. Properties of the dataset (like
    the date is was recorded, the URL it was accessed from, etc.) should be stored
    in [`Series.attrs`](api/pandas.Series.attrs.html#pandas.Series.attrs "pandas.Series.attrs").
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 标志指的是 pandas 对象的属性。数据集的属性（如记录日期、访问的 URL 等）应存储在[`Series.attrs`](api/pandas.Series.attrs.html#pandas.Series.attrs
    "pandas.Series.attrs")中。
- en: '| [`Flags`](api/pandas.Flags.html#pandas.Flags "pandas.Flags")(obj, *, allows_duplicate_labels)
    | Flags that apply to pandas objects. |  ### Metadata'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`Flags`](api/pandas.Flags.html#pandas.Flags "pandas.Flags")(obj, *, allows_duplicate_labels)
    | 适用于 pandas 对象的标志。 |  ### 元数据'
- en: '[`Series.attrs`](api/pandas.Series.attrs.html#pandas.Series.attrs "pandas.Series.attrs")
    is a dictionary for storing global metadata for this Series.'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Series.attrs`](api/pandas.Series.attrs.html#pandas.Series.attrs "pandas.Series.attrs")
    是用于存储此 Series 的全局元数据的字典。'
- en: Warning
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: '`Series.attrs` is considered experimental and may change without warning.'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series.attrs`被视为实验性内容，可能会在没有警告的情况下更改。'
- en: '| [`Series.attrs`](api/pandas.Series.attrs.html#pandas.Series.attrs "pandas.Series.attrs")
    | Dictionary of global attributes of this dataset. |'
  id: totrans-362
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.attrs`](api/pandas.Series.attrs.html#pandas.Series.attrs "pandas.Series.attrs")
    | 此数据集的全局属性字典。 |'
- en: Plotting
  id: totrans-363
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘图
- en: '`Series.plot` is both a callable method and a namespace attribute for specific
    plotting methods of the form `Series.plot.<kind>`.'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series.plot`既是一个可调用方法，也是特定绘图方法的命名空间属性，形式为`Series.plot.<kind>`。'
- en: '| [`Series.plot`](api/pandas.Series.plot.html#pandas.Series.plot "pandas.Series.plot")([kind, ax, figsize, ....])
    | Series plotting accessor and method |'
  id: totrans-365
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.plot`](api/pandas.Series.plot.html#pandas.Series.plot "pandas.Series.plot")([kind, ax, figsize, ....])
    | Series 绘图访问器和方法 |'
- en: '| [`Series.plot.area`](api/pandas.Series.plot.area.html#pandas.Series.plot.area
    "pandas.Series.plot.area")([x, y, stacked]) | Draw a stacked area plot. |'
  id: totrans-366
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.plot.area`](api/pandas.Series.plot.area.html#pandas.Series.plot.area
    "pandas.Series.plot.area")([x, y, stacked]) | 绘制堆叠面积图。 |'
- en: '| [`Series.plot.bar`](api/pandas.Series.plot.bar.html#pandas.Series.plot.bar
    "pandas.Series.plot.bar")([x, y]) | Vertical bar plot. |'
  id: totrans-367
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.plot.bar`](api/pandas.Series.plot.bar.html#pandas.Series.plot.bar
    "pandas.Series.plot.bar")([x, y]) | 垂直条形图。 |'
- en: '| [`Series.plot.barh`](api/pandas.Series.plot.barh.html#pandas.Series.plot.barh
    "pandas.Series.plot.barh")([x, y]) | Make a horizontal bar plot. |'
  id: totrans-368
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.plot.barh`](api/pandas.Series.plot.barh.html#pandas.Series.plot.barh
    "pandas.Series.plot.barh")([x, y]) | 绘制水平条形图。 |'
- en: '| [`Series.plot.box`](api/pandas.Series.plot.box.html#pandas.Series.plot.box
    "pandas.Series.plot.box")([by]) | Make a box plot of the DataFrame columns. |'
  id: totrans-369
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.plot.box`](api/pandas.Series.plot.box.html#pandas.Series.plot.box
    "pandas.Series.plot.box")([by]) | 绘制 DataFrame 列的箱线图。 |'
- en: '| [`Series.plot.density`](api/pandas.Series.plot.density.html#pandas.Series.plot.density
    "pandas.Series.plot.density")([bw_method, ind]) | Generate Kernel Density Estimate
    plot using Gaussian kernels. |'
  id: totrans-370
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.plot.density`](api/pandas.Series.plot.density.html#pandas.Series.plot.density
    "pandas.Series.plot.density")([bw_method, ind]) | 使用高斯核生成核密度估计图。 |'
- en: '| [`Series.plot.hist`](api/pandas.Series.plot.hist.html#pandas.Series.plot.hist
    "pandas.Series.plot.hist")([by, bins]) | Draw one histogram of the DataFrame''s
    columns. |'
  id: totrans-371
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.plot.hist`](api/pandas.Series.plot.hist.html#pandas.Series.plot.hist
    "pandas.Series.plot.hist")([by, bins]) | 绘制 DataFrame 列的直方图。 |'
- en: '| [`Series.plot.kde`](api/pandas.Series.plot.kde.html#pandas.Series.plot.kde
    "pandas.Series.plot.kde")([bw_method, ind]) | Generate Kernel Density Estimate
    plot using Gaussian kernels. |'
  id: totrans-372
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.plot.kde`](api/pandas.Series.plot.kde.html#pandas.Series.plot.kde
    "pandas.Series.plot.kde")([bw_method, ind]) | 使用高斯核生成核密度估计图。 |'
- en: '| [`Series.plot.line`](api/pandas.Series.plot.line.html#pandas.Series.plot.line
    "pandas.Series.plot.line")([x, y]) | Plot Series or DataFrame as lines. |'
  id: totrans-373
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.plot.line`](api/pandas.Series.plot.line.html#pandas.Series.plot.line
    "pandas.Series.plot.line")([x, y]) | 将 Series 或 DataFrame 绘制为折线图。 |'
- en: '| [`Series.plot.pie`](api/pandas.Series.plot.pie.html#pandas.Series.plot.pie
    "pandas.Series.plot.pie")(**kwargs) | Generate a pie plot. |'
  id: totrans-374
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.plot.pie`](api/pandas.Series.plot.pie.html#pandas.Series.plot.pie
    "pandas.Series.plot.pie")(**kwargs) | 生成饼图。 |'
- en: '| [`Series.hist`](api/pandas.Series.hist.html#pandas.Series.hist "pandas.Series.hist")([by, ax, grid, xlabelsize, ...])
    | Draw histogram of the input series using matplotlib. |'
  id: totrans-375
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.hist`](api/pandas.Series.hist.html#pandas.Series.hist "pandas.Series.hist")([by, ax, grid, xlabelsize, ...])
    | 使用 matplotlib 绘制输入 Series 的直方图。 |'
- en: Serialization / IO / conversion
  id: totrans-376
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 序列化 / IO / 转换
- en: '| [`Series.to_pickle`](api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle")(path, *[, compression, ...]) | Pickle (serialize) object
    to file. |'
  id: totrans-377
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_pickle`](api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle")(path, *[, compression, ...]) | 将对象序列化为文件。 |'
- en: '| [`Series.to_csv`](api/pandas.Series.to_csv.html#pandas.Series.to_csv "pandas.Series.to_csv")([path_or_buf, sep, na_rep, ...])
    | Write object to a comma-separated values (csv) file. |'
  id: totrans-378
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_csv`](api/pandas.Series.to_csv.html#pandas.Series.to_csv "pandas.Series.to_csv")([path_or_buf, sep, na_rep, ...])
    | 将对象写入逗号分隔值（csv）文件。 |'
- en: '| [`Series.to_dict`](api/pandas.Series.to_dict.html#pandas.Series.to_dict "pandas.Series.to_dict")(*[, into])
    | Convert Series to {label -> value} dict or dict-like object. |'
  id: totrans-379
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_dict`](api/pandas.Series.to_dict.html#pandas.Series.to_dict "pandas.Series.to_dict")(*[, into])
    | 将 Series 转换为 {标签 -> 值} 字典或类似字典的对象。 |'
- en: '| [`Series.to_excel`](api/pandas.Series.to_excel.html#pandas.Series.to_excel
    "pandas.Series.to_excel")(excel_writer, *[, ...]) | Write object to an Excel sheet.
    |'
  id: totrans-380
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_excel`](api/pandas.Series.to_excel.html#pandas.Series.to_excel
    "pandas.Series.to_excel")(excel_writer, *[, ...]) | 将对象写入 Excel 表格。 |'
- en: '| [`Series.to_frame`](api/pandas.Series.to_frame.html#pandas.Series.to_frame
    "pandas.Series.to_frame")([name]) | Convert Series to DataFrame. |'
  id: totrans-381
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_frame`](api/pandas.Series.to_frame.html#pandas.Series.to_frame
    "pandas.Series.to_frame")([name]) | 将 Series 转换为 DataFrame。 |'
- en: '| [`Series.to_xarray`](api/pandas.Series.to_xarray.html#pandas.Series.to_xarray
    "pandas.Series.to_xarray")() | Return an xarray object from the pandas object.
    |'
  id: totrans-382
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_xarray`](api/pandas.Series.to_xarray.html#pandas.Series.to_xarray
    "pandas.Series.to_xarray")() | 从 pandas 对象返回一个 xarray 对象。 |'
- en: '| [`Series.to_hdf`](api/pandas.Series.to_hdf.html#pandas.Series.to_hdf "pandas.Series.to_hdf")(path_or_buf, *, key[, mode, ...])
    | Write the contained data to an HDF5 file using HDFStore. |'
  id: totrans-383
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_hdf`](api/pandas.Series.to_hdf.html#pandas.Series.to_hdf "pandas.Series.to_hdf")(path_or_buf, *, key[, mode, ...])
    | 使用 HDFStore 将包含的数据写入 HDF5 文件。 |'
- en: '| [`Series.to_sql`](api/pandas.Series.to_sql.html#pandas.Series.to_sql "pandas.Series.to_sql")(name, con, *[, schema, ...])
    | Write records stored in a DataFrame to a SQL database. |'
  id: totrans-384
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_sql`](api/pandas.Series.to_sql.html#pandas.Series.to_sql "pandas.Series.to_sql")(name, con, *[, schema, ...])
    | 将存储在 DataFrame 中的记录写入 SQL 数据库。 |'
- en: '| [`Series.to_json`](api/pandas.Series.to_json.html#pandas.Series.to_json "pandas.Series.to_json")([path_or_buf, orient, ...])
    | Convert the object to a JSON string. |'
  id: totrans-385
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_json`](api/pandas.Series.to_json.html#pandas.Series.to_json "pandas.Series.to_json")([path_or_buf, orient, ...])
    | 将对象转换为 JSON 字符串。 |'
- en: '| [`Series.to_string`](api/pandas.Series.to_string.html#pandas.Series.to_string
    "pandas.Series.to_string")([buf, na_rep, ...]) | Render a string representation
    of the Series. |'
  id: totrans-386
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_string`](api/pandas.Series.to_string.html#pandas.Series.to_string
    "pandas.Series.to_string")([buf, na_rep, ...]) | 呈现 Series 的字符串表示。 |'
- en: '| [`Series.to_clipboard`](api/pandas.Series.to_clipboard.html#pandas.Series.to_clipboard
    "pandas.Series.to_clipboard")(*[, excel, sep]) | Copy object to the system clipboard.
    |'
  id: totrans-387
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_clipboard`](api/pandas.Series.to_clipboard.html#pandas.Series.to_clipboard
    "pandas.Series.to_clipboard")(*[, excel, sep]) | 将对象复制到系统剪贴板。 |'
- en: '| [`Series.to_latex`](api/pandas.Series.to_latex.html#pandas.Series.to_latex
    "pandas.Series.to_latex")([buf, columns, header, ...]) | Render object to a LaTeX
    tabular, longtable, or nested table. |'
  id: totrans-388
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_latex`](api/pandas.Series.to_latex.html#pandas.Series.to_latex
    "pandas.Series.to_latex")([buf, columns, header, ...]) | 将对象呈现为 LaTeX 表格、长表格或嵌套表格。
    |'
- en: '| [`Series.to_markdown`](api/pandas.Series.to_markdown.html#pandas.Series.to_markdown
    "pandas.Series.to_markdown")([buf, mode, index, ...]) | Print Series in Markdown-friendly
    format. |'
  id: totrans-389
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_markdown`](api/pandas.Series.to_markdown.html#pandas.Series.to_markdown
    "pandas.Series.to_markdown")([buf, mode, index, ...]) | 以 Markdown 友好的格式打印 Series。
    |'
- en: Constructor
  id: totrans-390
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构造函数
- en: '| [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series")([data, index, dtype, name, copy, ...])
    | One-dimensional ndarray with axis labels (including time series). |'
  id: totrans-391
  prefs: []
  type: TYPE_TB
  zh: '| [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series")([data, index, dtype, name, copy, ...])
    | 具有轴标签的一维 ndarray（包括时间序列）。 |'
- en: Attributes
  id: totrans-392
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 属性
- en: '**Axes**'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: '**轴**'
- en: '| [`Series.index`](api/pandas.Series.index.html#pandas.Series.index "pandas.Series.index")
    | The index (axis labels) of the Series. |'
  id: totrans-394
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.index`](api/pandas.Series.index.html#pandas.Series.index "pandas.Series.index")
    | Series 的索引（轴标签）。 |'
- en: '| [`Series.array`](api/pandas.Series.array.html#pandas.Series.array "pandas.Series.array")
    | The ExtensionArray of the data backing this Series or Index. |'
  id: totrans-395
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.array`](api/pandas.Series.array.html#pandas.Series.array "pandas.Series.array")
    | 支持此 Series 或 Index 的数据的 ExtensionArray。 |'
- en: '| [`Series.values`](api/pandas.Series.values.html#pandas.Series.values "pandas.Series.values")
    | Return Series as ndarray or ndarray-like depending on the dtype. |'
  id: totrans-396
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.values`](api/pandas.Series.values.html#pandas.Series.values "pandas.Series.values")
    | 根据 dtype 返回 Series 作为 ndarray 或类似 ndarray。 |'
- en: '| [`Series.dtype`](api/pandas.Series.dtype.html#pandas.Series.dtype "pandas.Series.dtype")
    | Return the dtype object of the underlying data. |'
  id: totrans-397
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dtype`](api/pandas.Series.dtype.html#pandas.Series.dtype "pandas.Series.dtype")
    | 返回底层数据的 dtype 对象。 |'
- en: '| [`Series.shape`](api/pandas.Series.shape.html#pandas.Series.shape "pandas.Series.shape")
    | Return a tuple of the shape of the underlying data. |'
  id: totrans-398
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.shape`](api/pandas.Series.shape.html#pandas.Series.shape "pandas.Series.shape")
    | 返回底层数据的形状的元组。 |'
- en: '| [`Series.nbytes`](api/pandas.Series.nbytes.html#pandas.Series.nbytes "pandas.Series.nbytes")
    | Return the number of bytes in the underlying data. |'
  id: totrans-399
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.nbytes`](api/pandas.Series.nbytes.html#pandas.Series.nbytes "pandas.Series.nbytes")
    | 返回底层数据的字节数。 |'
- en: '| [`Series.ndim`](api/pandas.Series.ndim.html#pandas.Series.ndim "pandas.Series.ndim")
    | Number of dimensions of the underlying data, by definition 1. |'
  id: totrans-400
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.ndim`](api/pandas.Series.ndim.html#pandas.Series.ndim "pandas.Series.ndim")
    | 底层数据的维数，根据定义为 1。 |'
- en: '| [`Series.size`](api/pandas.Series.size.html#pandas.Series.size "pandas.Series.size")
    | Return the number of elements in the underlying data. |'
  id: totrans-401
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.size`](api/pandas.Series.size.html#pandas.Series.size "pandas.Series.size")
    | 返回底层数据中的元素数。 |'
- en: '| [`Series.T`](api/pandas.Series.T.html#pandas.Series.T "pandas.Series.T")
    | Return the transpose, which is by definition self. |'
  id: totrans-402
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.T`](api/pandas.Series.T.html#pandas.Series.T "pandas.Series.T")
    | 返回转置，根据定义是自身。 |'
- en: '| [`Series.memory_usage`](api/pandas.Series.memory_usage.html#pandas.Series.memory_usage
    "pandas.Series.memory_usage")([index, deep]) | Return the memory usage of the
    Series. |'
  id: totrans-403
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.memory_usage`](api/pandas.Series.memory_usage.html#pandas.Series.memory_usage
    "pandas.Series.memory_usage")([index, deep]) | 返回 Series 的内存使用情况。 |'
- en: '| [`Series.hasnans`](api/pandas.Series.hasnans.html#pandas.Series.hasnans "pandas.Series.hasnans")
    | Return True if there are any NaNs. |'
  id: totrans-404
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.hasnans`](api/pandas.Series.hasnans.html#pandas.Series.hasnans "pandas.Series.hasnans")
    | 如果存在任何 NaN，则返回 True。 |'
- en: '| [`Series.empty`](api/pandas.Series.empty.html#pandas.Series.empty "pandas.Series.empty")
    | Indicator whether Series/DataFrame is empty. |'
  id: totrans-405
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.empty`](api/pandas.Series.empty.html#pandas.Series.empty "pandas.Series.empty")
    | 指示 Series/DataFrame 是否为空。 |'
- en: '| [`Series.dtypes`](api/pandas.Series.dtypes.html#pandas.Series.dtypes "pandas.Series.dtypes")
    | Return the dtype object of the underlying data. |'
  id: totrans-406
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dtypes`](api/pandas.Series.dtypes.html#pandas.Series.dtypes "pandas.Series.dtypes")
    | 返回底层数据的 dtype 对象。 |'
- en: '| [`Series.name`](api/pandas.Series.name.html#pandas.Series.name "pandas.Series.name")
    | Return the name of the Series. |'
  id: totrans-407
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.name`](api/pandas.Series.name.html#pandas.Series.name "pandas.Series.name")
    | 返回 Series 的名称。 |'
- en: '| [`Series.flags`](api/pandas.Series.flags.html#pandas.Series.flags "pandas.Series.flags")
    | Get the properties associated with this pandas object. |'
  id: totrans-408
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.flags`](api/pandas.Series.flags.html#pandas.Series.flags "pandas.Series.flags")
    | 获取与此 pandas 对象关联的属性。 |'
- en: '| [`Series.set_flags`](api/pandas.Series.set_flags.html#pandas.Series.set_flags
    "pandas.Series.set_flags")(*[, copy, ...]) | Return a new object with updated
    flags. |'
  id: totrans-409
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.set_flags`](api/pandas.Series.set_flags.html#pandas.Series.set_flags
    "pandas.Series.set_flags")(*[, copy, ...]) | 返回具有更新标志的新对象。 |'
- en: Conversion
  id: totrans-410
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 转换
- en: '| [`Series.astype`](api/pandas.Series.astype.html#pandas.Series.astype "pandas.Series.astype")(dtype[, copy, errors])
    | Cast a pandas object to a specified dtype `dtype`. |'
  id: totrans-411
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.astype`](api/pandas.Series.astype.html#pandas.Series.astype "pandas.Series.astype")(dtype[, copy, errors])
    | 将 pandas 对象转换为指定的 dtype `dtype`。 |'
- en: '| [`Series.convert_dtypes`](api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes")([infer_objects, ...]) | Convert columns to the
    best possible dtypes using dtypes supporting `pd.NA`. |'
  id: totrans-412
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.convert_dtypes`](api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes")([infer_objects, ...]) | 使用支持 `pd.NA` 的 dtype 将列转换为可能的最佳
    dtype。 |'
- en: '| [`Series.infer_objects`](api/pandas.Series.infer_objects.html#pandas.Series.infer_objects
    "pandas.Series.infer_objects")([copy]) | Attempt to infer better dtypes for object
    columns. |'
  id: totrans-413
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.infer_objects`](api/pandas.Series.infer_objects.html#pandas.Series.infer_objects
    "pandas.Series.infer_objects")([copy]) | 尝试推断对象列的更好数据类型。 |'
- en: '| [`Series.copy`](api/pandas.Series.copy.html#pandas.Series.copy "pandas.Series.copy")([deep])
    | Make a copy of this object''s indices and data. |'
  id: totrans-414
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.copy`](api/pandas.Series.copy.html#pandas.Series.copy "pandas.Series.copy")([deep])
    | 复制此对象的索引和数据。 |'
- en: '| [`Series.bool`](api/pandas.Series.bool.html#pandas.Series.bool "pandas.Series.bool")()
    | (DEPRECATED) Return the bool of a single element Series or DataFrame. |'
  id: totrans-415
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.bool`](api/pandas.Series.bool.html#pandas.Series.bool "pandas.Series.bool")()
    | (已弃用)返回单个元素Series或DataFrame的布尔值。 |'
- en: '| [`Series.to_numpy`](api/pandas.Series.to_numpy.html#pandas.Series.to_numpy
    "pandas.Series.to_numpy")([dtype, copy, na_value]) | A NumPy ndarray representing
    the values in this Series or Index. |'
  id: totrans-416
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_numpy`](api/pandas.Series.to_numpy.html#pandas.Series.to_numpy
    "pandas.Series.to_numpy")([dtype, copy, na_value]) | 表示此Series或Index中的值的NumPy
    ndarray。 |'
- en: '| [`Series.to_period`](api/pandas.Series.to_period.html#pandas.Series.to_period
    "pandas.Series.to_period")([freq, copy]) | Convert Series from DatetimeIndex to
    PeriodIndex. |'
  id: totrans-417
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_period`](api/pandas.Series.to_period.html#pandas.Series.to_period
    "pandas.Series.to_period")([freq, copy]) | 将Series从DatetimeIndex转换为PeriodIndex。
    |'
- en: '| [`Series.to_timestamp`](api/pandas.Series.to_timestamp.html#pandas.Series.to_timestamp
    "pandas.Series.to_timestamp")([freq, how, copy]) | Cast to DatetimeIndex of Timestamps,
    at *beginning* of period. |'
  id: totrans-418
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_timestamp`](api/pandas.Series.to_timestamp.html#pandas.Series.to_timestamp
    "pandas.Series.to_timestamp")([freq, how, copy]) | 转换为时间戳的DatetimeIndex，位于*周期的开始*。
    |'
- en: '| [`Series.to_list`](api/pandas.Series.to_list.html#pandas.Series.to_list "pandas.Series.to_list")()
    | Return a list of the values. |'
  id: totrans-419
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_list`](api/pandas.Series.to_list.html#pandas.Series.to_list "pandas.Series.to_list")()
    | 返回值的列表。 |'
- en: '| [`Series.__array__`](api/pandas.Series.__array__.html#pandas.Series.__array__
    "pandas.Series.__array__")([dtype, copy]) | Return the values as a NumPy array.
    |'
  id: totrans-420
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.__array__`](api/pandas.Series.__array__.html#pandas.Series.__array__
    "pandas.Series.__array__")([dtype, copy]) | 将值作为NumPy数组返回。 |'
- en: Indexing, iteration
  id: totrans-421
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 索引，迭代
- en: '| [`Series.get`](api/pandas.Series.get.html#pandas.Series.get "pandas.Series.get")(key[, default])
    | Get item from object for given key (ex: DataFrame column). |'
  id: totrans-422
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.get`](api/pandas.Series.get.html#pandas.Series.get "pandas.Series.get")(key[, default])
    | 获取给定键（例如：DataFrame列）的对象中的项目。 |'
- en: '| [`Series.at`](api/pandas.Series.at.html#pandas.Series.at "pandas.Series.at")
    | Access a single value for a row/column label pair. |'
  id: totrans-423
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.at`](api/pandas.Series.at.html#pandas.Series.at "pandas.Series.at")
    | 访问行/列标签对的单个值。 |'
- en: '| [`Series.iat`](api/pandas.Series.iat.html#pandas.Series.iat "pandas.Series.iat")
    | Access a single value for a row/column pair by integer position. |'
  id: totrans-424
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.iat`](api/pandas.Series.iat.html#pandas.Series.iat "pandas.Series.iat")
    | 通过整数位置访问行/列对的单个值。 |'
- en: '| [`Series.loc`](api/pandas.Series.loc.html#pandas.Series.loc "pandas.Series.loc")
    | Access a group of rows and columns by label(s) or a boolean array. |'
  id: totrans-425
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.loc`](api/pandas.Series.loc.html#pandas.Series.loc "pandas.Series.loc")
    | 通过标签或布尔数组访问一组行和列。 |'
- en: '| [`Series.iloc`](api/pandas.Series.iloc.html#pandas.Series.iloc "pandas.Series.iloc")
    | (DEPRECATED) Purely integer-location based indexing for selection by position.
    |'
  id: totrans-426
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.iloc`](api/pandas.Series.iloc.html#pandas.Series.iloc "pandas.Series.iloc")
    | (已弃用)基于纯整数位置的按位置选择索引。 |'
- en: '| [`Series.__iter__`](api/pandas.Series.__iter__.html#pandas.Series.__iter__
    "pandas.Series.__iter__")() | Return an iterator of the values. |'
  id: totrans-427
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.__iter__`](api/pandas.Series.__iter__.html#pandas.Series.__iter__
    "pandas.Series.__iter__")() | 返回值的迭代器。 |'
- en: '| [`Series.items`](api/pandas.Series.items.html#pandas.Series.items "pandas.Series.items")()
    | Lazily iterate over (index, value) tuples. |'
  id: totrans-428
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.items`](api/pandas.Series.items.html#pandas.Series.items "pandas.Series.items")()
    | 惰性地遍历（索引，值）元组。 |'
- en: '| [`Series.keys`](api/pandas.Series.keys.html#pandas.Series.keys "pandas.Series.keys")()
    | Return alias for index. |'
  id: totrans-429
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.keys`](api/pandas.Series.keys.html#pandas.Series.keys "pandas.Series.keys")()
    | 返回索引的别名。 |'
- en: '| [`Series.pop`](api/pandas.Series.pop.html#pandas.Series.pop "pandas.Series.pop")(item)
    | Return item and drops from series. |'
  id: totrans-430
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.pop`](api/pandas.Series.pop.html#pandas.Series.pop "pandas.Series.pop")(item)
    | 返回项目并从系列中删除。 |'
- en: '| [`Series.item`](api/pandas.Series.item.html#pandas.Series.item "pandas.Series.item")()
    | Return the first element of the underlying data as a Python scalar. |'
  id: totrans-431
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.item`](api/pandas.Series.item.html#pandas.Series.item "pandas.Series.item")()
    | 将底层数据的第一个元素作为Python标量返回。 |'
- en: '| [`Series.xs`](api/pandas.Series.xs.html#pandas.Series.xs "pandas.Series.xs")(key[, axis, level, drop_level])
    | Return cross-section from the Series/DataFrame. |'
  id: totrans-432
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.xs`](api/pandas.Series.xs.html#pandas.Series.xs "pandas.Series.xs")(key[, axis, level, drop_level])
    | 从系列/数据框中返回横截面。'
- en: For more information on `.at`, `.iat`, `.loc`, and `.iloc`, see the [indexing
    documentation](../user_guide/indexing.html#indexing).
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于 `.at`, `.iat`, `.loc`, 和 `.iloc` 的信息，请参阅[索引文档](../user_guide/indexing.html#indexing)。
- en: Binary operator functions
  id: totrans-434
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 二元操作符函数
- en: '| [`Series.add`](api/pandas.Series.add.html#pandas.Series.add "pandas.Series.add")(other[, level, fill_value, axis])
    | Return Addition of series and other, element-wise (binary operator add). |'
  id: totrans-435
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.add`](api/pandas.Series.add.html#pandas.Series.add "pandas.Series.add")(other[, level, fill_value, axis])
    | 返回系列和其他的加法，逐元素进行计算（二元操作符 add）。'
- en: '| [`Series.sub`](api/pandas.Series.sub.html#pandas.Series.sub "pandas.Series.sub")(other[, level, fill_value, axis])
    | Return Subtraction of series and other, element-wise (binary operator sub).
    |'
  id: totrans-436
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sub`](api/pandas.Series.sub.html#pandas.Series.sub "pandas.Series.sub")(other[, level, fill_value, axis])
    | 返回系列和其他的减法，逐元素进行计算（二元操作符 sub）。'
- en: '| [`Series.mul`](api/pandas.Series.mul.html#pandas.Series.mul "pandas.Series.mul")(other[, level, fill_value, axis])
    | Return Multiplication of series and other, element-wise (binary operator mul).
    |'
  id: totrans-437
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.mul`](api/pandas.Series.mul.html#pandas.Series.mul "pandas.Series.mul")(other[, level, fill_value, axis])
    | 返回系列和其他的乘法，逐元素进行计算（二元操作符 mul）。'
- en: '| [`Series.div`](api/pandas.Series.div.html#pandas.Series.div "pandas.Series.div")(other[, level, fill_value, axis])
    | Return Floating division of series and other, element-wise (binary operator
    truediv). |'
  id: totrans-438
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.div`](api/pandas.Series.div.html#pandas.Series.div "pandas.Series.div")(other[, level, fill_value, axis])
    | 返回系列和其他的浮点除法，逐元素进行计算（二元操作符 truediv）。'
- en: '| [`Series.truediv`](api/pandas.Series.truediv.html#pandas.Series.truediv "pandas.Series.truediv")(other[, level, fill_value, axis])
    | Return Floating division of series and other, element-wise (binary operator
    truediv). |'
  id: totrans-439
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.truediv`](api/pandas.Series.truediv.html#pandas.Series.truediv "pandas.Series.truediv")(other[, level, fill_value, axis])
    | 返回系列和其他的浮点除法，逐元素进行计算（二元操作符 truediv）。'
- en: '| [`Series.floordiv`](api/pandas.Series.floordiv.html#pandas.Series.floordiv
    "pandas.Series.floordiv")(other[, level, fill_value, axis]) | Return Integer division
    of series and other, element-wise (binary operator floordiv). |'
  id: totrans-440
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.floordiv`](api/pandas.Series.floordiv.html#pandas.Series.floordiv
    "pandas.Series.floordiv")(other[, level, fill_value, axis]) | 返回系列和其他的整除，逐元素进行计算（二元操作符
    floordiv）。'
- en: '| [`Series.mod`](api/pandas.Series.mod.html#pandas.Series.mod "pandas.Series.mod")(other[, level, fill_value, axis])
    | Return Modulo of series and other, element-wise (binary operator mod). |'
  id: totrans-441
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.mod`](api/pandas.Series.mod.html#pandas.Series.mod "pandas.Series.mod")(other[, level, fill_value, axis])
    | 返回系列和其他的模数，逐元素进行计算（二元操作符 mod）。'
- en: '| [`Series.pow`](api/pandas.Series.pow.html#pandas.Series.pow "pandas.Series.pow")(other[, level, fill_value, axis])
    | Return Exponential power of series and other, element-wise (binary operator
    pow). |'
  id: totrans-442
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.pow`](api/pandas.Series.pow.html#pandas.Series.pow "pandas.Series.pow")(other[, level, fill_value, axis])
    | 返回系列和其他的指数幂，逐元素进行计算（二元操作符 pow）。'
- en: '| [`Series.radd`](api/pandas.Series.radd.html#pandas.Series.radd "pandas.Series.radd")(other[, level, fill_value, axis])
    | Return Addition of series and other, element-wise (binary operator radd). |'
  id: totrans-443
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.radd`](api/pandas.Series.radd.html#pandas.Series.radd "pandas.Series.radd")(other[, level, fill_value, axis])
    | 返回系列和其他的加法，逐元素进行计算（二元操作符 radd）。'
- en: '| [`Series.rsub`](api/pandas.Series.rsub.html#pandas.Series.rsub "pandas.Series.rsub")(other[, level, fill_value, axis])
    | Return Subtraction of series and other, element-wise (binary operator rsub).
    |'
  id: totrans-444
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.rsub`](api/pandas.Series.rsub.html#pandas.Series.rsub "pandas.Series.rsub")(other[, level, fill_value, axis])
    | 返回系列和其他的减法，逐元素进行计算（二元操作符 rsub）。'
- en: '| [`Series.rmul`](api/pandas.Series.rmul.html#pandas.Series.rmul "pandas.Series.rmul")(other[, level, fill_value, axis])
    | Return Multiplication of series and other, element-wise (binary operator rmul).
    |'
  id: totrans-445
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.rmul`](api/pandas.Series.rmul.html#pandas.Series.rmul "pandas.Series.rmul")(other[, level, fill_value, axis])
    | 返回系列和其他的乘法，逐元素进行计算（二元操作符 rmul）。'
- en: '| [`Series.rdiv`](api/pandas.Series.rdiv.html#pandas.Series.rdiv "pandas.Series.rdiv")(other[, level, fill_value, axis])
    | Return Floating division of series and other, element-wise (binary operator
    rtruediv). |'
  id: totrans-446
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.rdiv`](api/pandas.Series.rdiv.html#pandas.Series.rdiv "pandas.Series.rdiv")(other[, level, fill_value, axis])
    | 返回系列和其他的浮点除法，逐元素进行计算（二元操作符 rtruediv）。'
- en: '| [`Series.rtruediv`](api/pandas.Series.rtruediv.html#pandas.Series.rtruediv
    "pandas.Series.rtruediv")(other[, level, fill_value, axis]) | Return Floating
    division of series and other, element-wise (binary operator rtruediv). |'
  id: totrans-447
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.rtruediv`](api/pandas.Series.rtruediv.html#pandas.Series.rtruediv
    "pandas.Series.rtruediv")(other[, level, fill_value, axis]) | 返回 Series 和其他的浮点数除法，逐元素进行计算（二元运算符
    rtruediv）。 |'
- en: '| [`Series.rfloordiv`](api/pandas.Series.rfloordiv.html#pandas.Series.rfloordiv
    "pandas.Series.rfloordiv")(other[, level, fill_value, ...]) | Return Integer division
    of series and other, element-wise (binary operator rfloordiv). |'
  id: totrans-448
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.rfloordiv`](api/pandas.Series.rfloordiv.html#pandas.Series.rfloordiv
    "pandas.Series.rfloordiv")(other[, level, fill_value, ...]) | 返回 Series 和其他的整数除法，逐元素进行计算（二元运算符
    rfloordiv）。 |'
- en: '| [`Series.rmod`](api/pandas.Series.rmod.html#pandas.Series.rmod "pandas.Series.rmod")(other[, level, fill_value, axis])
    | Return Modulo of series and other, element-wise (binary operator rmod). |'
  id: totrans-449
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.rmod`](api/pandas.Series.rmod.html#pandas.Series.rmod "pandas.Series.rmod")(other[, level, fill_value, axis])
    | 返回 Series 和其他的模数，逐元素进行计算（二元运算符 rmod）。 |'
- en: '| [`Series.rpow`](api/pandas.Series.rpow.html#pandas.Series.rpow "pandas.Series.rpow")(other[, level, fill_value, axis])
    | Return Exponential power of series and other, element-wise (binary operator
    rpow). |'
  id: totrans-450
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.rpow`](api/pandas.Series.rpow.html#pandas.Series.rpow "pandas.Series.rpow")(other[, level, fill_value, axis])
    | 返回 Series 和其他的指数幂，逐元素进行计算（二元运算符 rpow）。 |'
- en: '| [`Series.combine`](api/pandas.Series.combine.html#pandas.Series.combine "pandas.Series.combine")(other, func[, fill_value])
    | Combine the Series with a Series or scalar according to func. |'
  id: totrans-451
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.combine`](api/pandas.Series.combine.html#pandas.Series.combine "pandas.Series.combine")(other, func[, fill_value])
    | 根据 func 将 Series 与 Series 或标量组合在一起。 |'
- en: '| [`Series.combine_first`](api/pandas.Series.combine_first.html#pandas.Series.combine_first
    "pandas.Series.combine_first")(other) | Update null elements with value in the
    same location in ''other''. |'
  id: totrans-452
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.combine_first`](api/pandas.Series.combine_first.html#pandas.Series.combine_first
    "pandas.Series.combine_first")(other) | 使用 ''other'' 中相同位置的值更新空元素。 |'
- en: '| [`Series.round`](api/pandas.Series.round.html#pandas.Series.round "pandas.Series.round")([decimals])
    | Round each value in a Series to the given number of decimals. |'
  id: totrans-453
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.round`](api/pandas.Series.round.html#pandas.Series.round "pandas.Series.round")([decimals])
    | 将 Series 中的每个值四舍五入到指定的小数位数。 |'
- en: '| [`Series.lt`](api/pandas.Series.lt.html#pandas.Series.lt "pandas.Series.lt")(other[, level, fill_value, axis])
    | Return Less than of series and other, element-wise (binary operator lt). |'
  id: totrans-454
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.lt`](api/pandas.Series.lt.html#pandas.Series.lt "pandas.Series.lt")(other[, level, fill_value, axis])
    | 返回 Series 和其他的小于值，逐元素进行比较（二元运算符 lt）。 |'
- en: '| [`Series.gt`](api/pandas.Series.gt.html#pandas.Series.gt "pandas.Series.gt")(other[, level, fill_value, axis])
    | Return Greater than of series and other, element-wise (binary operator gt).
    |'
  id: totrans-455
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.gt`](api/pandas.Series.gt.html#pandas.Series.gt "pandas.Series.gt")(other[, level, fill_value, axis])
    | 返回 Series 和其他的大于值，逐元素进行比较（二元运算符 gt）。 |'
- en: '| [`Series.le`](api/pandas.Series.le.html#pandas.Series.le "pandas.Series.le")(other[, level, fill_value, axis])
    | Return Less than or equal to of series and other, element-wise (binary operator
    le). |'
  id: totrans-456
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.le`](api/pandas.Series.le.html#pandas.Series.le "pandas.Series.le")(other[, level, fill_value, axis])
    | 返回 Series 和其他的小于或等于值，逐元素进行比较（二元运算符 le）。 |'
- en: '| [`Series.ge`](api/pandas.Series.ge.html#pandas.Series.ge "pandas.Series.ge")(other[, level, fill_value, axis])
    | Return Greater than or equal to of series and other, element-wise (binary operator
    ge). |'
  id: totrans-457
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.ge`](api/pandas.Series.ge.html#pandas.Series.ge "pandas.Series.ge")(other[, level, fill_value, axis])
    | 返回 Series 和其他的大于或等于值，逐元素进行比较（二元运算符 ge）。 |'
- en: '| [`Series.ne`](api/pandas.Series.ne.html#pandas.Series.ne "pandas.Series.ne")(other[, level, fill_value, axis])
    | Return Not equal to of series and other, element-wise (binary operator ne).
    |'
  id: totrans-458
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.ne`](api/pandas.Series.ne.html#pandas.Series.ne "pandas.Series.ne")(other[, level, fill_value, axis])
    | 返回 Series 和其他的不相等值，逐元素进行比较（二元运算符 ne）。 |'
- en: '| [`Series.eq`](api/pandas.Series.eq.html#pandas.Series.eq "pandas.Series.eq")(other[, level, fill_value, axis])
    | Return Equal to of series and other, element-wise (binary operator eq). |'
  id: totrans-459
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.eq`](api/pandas.Series.eq.html#pandas.Series.eq "pandas.Series.eq")(other[, level, fill_value, axis])
    | 返回 Series 和其他的相等值，逐元素进行比较（二元运算符 eq）。 |'
- en: '| [`Series.product`](api/pandas.Series.product.html#pandas.Series.product "pandas.Series.product")([axis, skipna, numeric_only, ...])
    | Return the product of the values over the requested axis. |'
  id: totrans-460
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.product`](api/pandas.Series.product.html#pandas.Series.product "pandas.Series.product")([axis, skipna, numeric_only, ...])
    | 返回请求轴上值的乘积。 |'
- en: '| [`Series.dot`](api/pandas.Series.dot.html#pandas.Series.dot "pandas.Series.dot")(other)
    | Compute the dot product between the Series and the columns of other. |'
  id: totrans-461
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dot`](api/pandas.Series.dot.html#pandas.Series.dot "pandas.Series.dot")(other)
    | 计算 Series 和其他列之间的点积。 |'
- en: Function application, GroupBy & window
  id: totrans-462
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 函数应用、GroupBy 和窗口
- en: '| [`Series.apply`](api/pandas.Series.apply.html#pandas.Series.apply "pandas.Series.apply")(func[, convert_dtype, args, by_row])
    | Invoke function on values of Series. |'
  id: totrans-463
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.apply`](api/pandas.Series.apply.html#pandas.Series.apply "pandas.Series.apply")(func[, convert_dtype, args, by_row])
    | 对 Series 的值调用函数。 |'
- en: '| [`Series.agg`](api/pandas.Series.agg.html#pandas.Series.agg "pandas.Series.agg")([func, axis])
    | Aggregate using one or more operations over the specified axis. |'
  id: totrans-464
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.agg`](api/pandas.Series.agg.html#pandas.Series.agg "pandas.Series.agg")([func, axis])
    | 在指定轴上使用一个或多个操作进行聚合。 |'
- en: '| [`Series.aggregate`](api/pandas.Series.aggregate.html#pandas.Series.aggregate
    "pandas.Series.aggregate")([func, axis]) | Aggregate using one or more operations
    over the specified axis. |'
  id: totrans-465
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.aggregate`](api/pandas.Series.aggregate.html#pandas.Series.aggregate
    "pandas.Series.aggregate")([func, axis]) | 在指定轴上使用一个或多个操作进行聚合。 |'
- en: '| [`Series.transform`](api/pandas.Series.transform.html#pandas.Series.transform
    "pandas.Series.transform")(func[, axis]) | Call `func` on self producing a Series
    with the same axis shape as self. |'
  id: totrans-466
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.transform`](api/pandas.Series.transform.html#pandas.Series.transform
    "pandas.Series.transform")(func[, axis]) | 在自身上调用 `func`，生成一个与自身轴形状相同的 Series。
    |'
- en: '| [`Series.map`](api/pandas.Series.map.html#pandas.Series.map "pandas.Series.map")(arg[, na_action])
    | Map values of Series according to an input mapping or function. |'
  id: totrans-467
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.map`](api/pandas.Series.map.html#pandas.Series.map "pandas.Series.map")(arg[, na_action])
    | 根据输入映射或函数对 Series 的值进行映射。 |'
- en: '| [`Series.groupby`](api/pandas.Series.groupby.html#pandas.Series.groupby "pandas.Series.groupby")([by, axis, level, as_index, ...])
    | Group Series using a mapper or by a Series of columns. |'
  id: totrans-468
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.groupby`](api/pandas.Series.groupby.html#pandas.Series.groupby "pandas.Series.groupby")([by, axis, level, as_index, ...])
    | 使用映射器或一系列列对 Series 进行分组。 |'
- en: '| [`Series.rolling`](api/pandas.Series.rolling.html#pandas.Series.rolling "pandas.Series.rolling")(window[, min_periods, ...])
    | Provide rolling window calculations. |'
  id: totrans-469
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.rolling`](api/pandas.Series.rolling.html#pandas.Series.rolling "pandas.Series.rolling")(window[, min_periods, ...])
    | 提供滚动窗口计算。 |'
- en: '| [`Series.expanding`](api/pandas.Series.expanding.html#pandas.Series.expanding
    "pandas.Series.expanding")([min_periods, axis, method]) | Provide expanding window
    calculations. |'
  id: totrans-470
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.expanding`](api/pandas.Series.expanding.html#pandas.Series.expanding
    "pandas.Series.expanding")([min_periods, axis, method]) | 提供扩展窗口计算。 |'
- en: '| [`Series.ewm`](api/pandas.Series.ewm.html#pandas.Series.ewm "pandas.Series.ewm")([com, span, halflife, alpha, ...])
    | Provide exponentially weighted (EW) calculations. |'
  id: totrans-471
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.ewm`](api/pandas.Series.ewm.html#pandas.Series.ewm "pandas.Series.ewm")([com, span, halflife, alpha, ...])
    | 提供指数加权（EW）计算。 |'
- en: '| [`Series.pipe`](api/pandas.Series.pipe.html#pandas.Series.pipe "pandas.Series.pipe")(func, *args, **kwargs)
    | Apply chainable functions that expect Series or DataFrames. |'
  id: totrans-472
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.pipe`](api/pandas.Series.pipe.html#pandas.Series.pipe "pandas.Series.pipe")(func, *args, **kwargs)
    | 应用可链式调用的函数，期望 Series 或 DataFrames。 |'
- en: '## Computations / descriptive stats'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: '## 计算 / 描述性统计'
- en: '| [`Series.abs`](api/pandas.Series.abs.html#pandas.Series.abs "pandas.Series.abs")()
    | Return a Series/DataFrame with absolute numeric value of each element. |'
  id: totrans-474
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.abs`](api/pandas.Series.abs.html#pandas.Series.abs "pandas.Series.abs")()
    | 返回每个元素的绝对数值的 Series/DataFrame。 |'
- en: '| [`Series.all`](api/pandas.Series.all.html#pandas.Series.all "pandas.Series.all")([axis, bool_only, skipna])
    | Return whether all elements are True, potentially over an axis. |'
  id: totrans-475
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.all`](api/pandas.Series.all.html#pandas.Series.all "pandas.Series.all")([axis, bool_only, skipna])
    | 返回所有元素是否都为 True，可能在一个轴上。 |'
- en: '| [`Series.any`](api/pandas.Series.any.html#pandas.Series.any "pandas.Series.any")(*[, axis, bool_only, skipna])
    | Return whether any element is True, potentially over an axis. |'
  id: totrans-476
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.any`](api/pandas.Series.any.html#pandas.Series.any "pandas.Series.any")(*[, axis, bool_only, skipna])
    | 返回任何元素��否为 True，可能在一个轴上。 |'
- en: '| [`Series.autocorr`](api/pandas.Series.autocorr.html#pandas.Series.autocorr
    "pandas.Series.autocorr")([lag]) | Compute the lag-N autocorrelation. |'
  id: totrans-477
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.autocorr`](api/pandas.Series.autocorr.html#pandas.Series.autocorr
    "pandas.Series.autocorr")([lag]) | 计算滞后 N 的自相关性。 |'
- en: '| [`Series.between`](api/pandas.Series.between.html#pandas.Series.between "pandas.Series.between")(left, right[, inclusive])
    | Return boolean Series equivalent to left <= series <= right. |'
  id: totrans-478
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.between`](api/pandas.Series.between.html#pandas.Series.between "pandas.Series.between")(left, right[, inclusive])
    | 返回布尔 Series，相当于 left <= series <= right。 |'
- en: '| [`Series.clip`](api/pandas.Series.clip.html#pandas.Series.clip "pandas.Series.clip")([lower, upper, axis, inplace])
    | Trim values at input threshold(s). |'
  id: totrans-479
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.clip`](api/pandas.Series.clip.html#pandas.Series.clip "pandas.Series.clip")([lower, upper, axis, inplace])
    | 在输入阈值处修剪值。 |'
- en: '| [`Series.corr`](api/pandas.Series.corr.html#pandas.Series.corr "pandas.Series.corr")(other[, method, min_periods])
    | Compute correlation with other Series, excluding missing values. |'
  id: totrans-480
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.corr`](api/pandas.Series.corr.html#pandas.Series.corr "pandas.Series.corr")(other[, method, min_periods])
    | 计算与其他 Series 的相关性，排除缺失值。 |'
- en: '| [`Series.count`](api/pandas.Series.count.html#pandas.Series.count "pandas.Series.count")()
    | Return number of non-NA/null observations in the Series. |'
  id: totrans-481
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.count`](api/pandas.Series.count.html#pandas.Series.count "pandas.Series.count")()
    | 返回 Series 中非 NA/null 观测值的数量。 |'
- en: '| [`Series.cov`](api/pandas.Series.cov.html#pandas.Series.cov "pandas.Series.cov")(other[, min_periods, ddof])
    | Compute covariance with Series, excluding missing values. |'
  id: totrans-482
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cov`](api/pandas.Series.cov.html#pandas.Series.cov "pandas.Series.cov")(other[, min_periods, ddof])
    | 计算与 Series 的协方差，排除缺失值。 |'
- en: '| [`Series.cummax`](api/pandas.Series.cummax.html#pandas.Series.cummax "pandas.Series.cummax")([axis, skipna])
    | Return cumulative maximum over a DataFrame or Series axis. |'
  id: totrans-483
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cummax`](api/pandas.Series.cummax.html#pandas.Series.cummax "pandas.Series.cummax")([axis, skipna])
    | 返回 DataFrame 或 Series 轴上的累积最大值。 |'
- en: '| [`Series.cummin`](api/pandas.Series.cummin.html#pandas.Series.cummin "pandas.Series.cummin")([axis, skipna])
    | Return cumulative minimum over a DataFrame or Series axis. |'
  id: totrans-484
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cummin`](api/pandas.Series.cummin.html#pandas.Series.cummin "pandas.Series.cummin")([axis, skipna])
    | 返回 DataFrame 或 Series 轴上的累积最小值。 |'
- en: '| [`Series.cumprod`](api/pandas.Series.cumprod.html#pandas.Series.cumprod "pandas.Series.cumprod")([axis, skipna])
    | Return cumulative product over a DataFrame or Series axis. |'
  id: totrans-485
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cumprod`](api/pandas.Series.cumprod.html#pandas.Series.cumprod "pandas.Series.cumprod")([axis, skipna])
    | 返回 DataFrame 或 Series 轴上的累积乘积。 |'
- en: '| [`Series.cumsum`](api/pandas.Series.cumsum.html#pandas.Series.cumsum "pandas.Series.cumsum")([axis, skipna])
    | Return cumulative sum over a DataFrame or Series axis. |'
  id: totrans-486
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cumsum`](api/pandas.Series.cumsum.html#pandas.Series.cumsum "pandas.Series.cumsum")([axis, skipna])
    | 返回 DataFrame 或 Series 轴上的累积总和。 |'
- en: '| [`Series.describe`](api/pandas.Series.describe.html#pandas.Series.describe
    "pandas.Series.describe")([percentiles, include, exclude]) | Generate descriptive
    statistics. |'
  id: totrans-487
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.describe`](api/pandas.Series.describe.html#pandas.Series.describe
    "pandas.Series.describe")([percentiles, include, exclude]) | 生成描述性统计信息。 |'
- en: '| [`Series.diff`](api/pandas.Series.diff.html#pandas.Series.diff "pandas.Series.diff")([periods])
    | First discrete difference of element. |'
  id: totrans-488
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.diff`](api/pandas.Series.diff.html#pandas.Series.diff "pandas.Series.diff")([periods])
    | 元素的第一个离散差异。 |'
- en: '| [`Series.factorize`](api/pandas.Series.factorize.html#pandas.Series.factorize
    "pandas.Series.factorize")([sort, use_na_sentinel]) | Encode the object as an
    enumerated type or categorical variable. |'
  id: totrans-489
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.factorize`](api/pandas.Series.factorize.html#pandas.Series.factorize
    "pandas.Series.factorize")([sort, use_na_sentinel]) | 将对象编码为枚举类型或分类变量。 |'
- en: '| [`Series.kurt`](api/pandas.Series.kurt.html#pandas.Series.kurt "pandas.Series.kurt")([axis, skipna, numeric_only])
    | Return unbiased kurtosis over requested axis. |'
  id: totrans-490
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.kurt`](api/pandas.Series.kurt.html#pandas.Series.kurt "pandas.Series.kurt")([axis, skipna, numeric_only])
    | 返回请求轴上的无偏峰度。 |'
- en: '| [`Series.max`](api/pandas.Series.max.html#pandas.Series.max "pandas.Series.max")([axis, skipna, numeric_only])
    | Return the maximum of the values over the requested axis. |'
  id: totrans-491
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.max`](api/pandas.Series.max.html#pandas.Series.max "pandas.Series.max")([axis, skipna, numeric_only])
    | 返回请求轴上的最大值。 |'
- en: '| [`Series.mean`](api/pandas.Series.mean.html#pandas.Series.mean "pandas.Series.mean")([axis, skipna, numeric_only])
    | Return the mean of the values over the requested axis. |'
  id: totrans-492
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.mean`](api/pandas.Series.mean.html#pandas.Series.mean "pandas.Series.mean")([axis, skipna, numeric_only])
    | 返回请求轴上的均值。 |'
- en: '| [`Series.median`](api/pandas.Series.median.html#pandas.Series.median "pandas.Series.median")([axis, skipna, numeric_only])
    | Return the median of the values over the requested axis. |'
  id: totrans-493
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.median`](api/pandas.Series.median.html#pandas.Series.median "pandas.Series.median")([axis, skipna, numeric_only])
    | 返回请求轴上的中位数。 |'
- en: '| [`Series.min`](api/pandas.Series.min.html#pandas.Series.min "pandas.Series.min")([axis, skipna, numeric_only])
    | Return the minimum of the values over the requested axis. |'
  id: totrans-494
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.min`](api/pandas.Series.min.html#pandas.Series.min "pandas.Series.min")([axis, skipna, numeric_only])
    | 返回请求轴上的最小值。 |'
- en: '| [`Series.mode`](api/pandas.Series.mode.html#pandas.Series.mode "pandas.Series.mode")([dropna])
    | Return the mode(s) of the Series. |'
  id: totrans-495
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.mode`](api/pandas.Series.mode.html#pandas.Series.mode "pandas.Series.mode")([dropna])
    | 返回 Series 的众数。 |'
- en: '| [`Series.nlargest`](api/pandas.Series.nlargest.html#pandas.Series.nlargest
    "pandas.Series.nlargest")([n, keep]) | Return the largest n elements. |'
  id: totrans-496
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.nlargest`](api/pandas.Series.nlargest.html#pandas.Series.nlargest
    "pandas.Series.nlargest")([n, keep]) | 返回最大的 n 个元素。 |'
- en: '| [`Series.nsmallest`](api/pandas.Series.nsmallest.html#pandas.Series.nsmallest
    "pandas.Series.nsmallest")([n, keep]) | Return the smallest n elements. |'
  id: totrans-497
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.nsmallest`](api/pandas.Series.nsmallest.html#pandas.Series.nsmallest
    "pandas.Series.nsmallest")([n, keep]) | 返回最小的 n 个元素。 |'
- en: '| [`Series.pct_change`](api/pandas.Series.pct_change.html#pandas.Series.pct_change
    "pandas.Series.pct_change")([periods, fill_method, ...]) | Fractional change between
    the current and a prior element. |'
  id: totrans-498
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.pct_change`](api/pandas.Series.pct_change.html#pandas.Series.pct_change
    "pandas.Series.pct_change")([periods, fill_method, ...]) | 当前元素与先前元素之间的分数变化。 |'
- en: '| [`Series.prod`](api/pandas.Series.prod.html#pandas.Series.prod "pandas.Series.prod")([axis, skipna, numeric_only, ...])
    | Return the product of the values over the requested axis. |'
  id: totrans-499
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.prod`](api/pandas.Series.prod.html#pandas.Series.prod "pandas.Series.prod")([axis, skipna, numeric_only, ...])
    | 返回请求轴上值的乘积。 |'
- en: '| [`Series.quantile`](api/pandas.Series.quantile.html#pandas.Series.quantile
    "pandas.Series.quantile")([q, interpolation]) | Return value at the given quantile.
    |'
  id: totrans-500
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.quantile`](api/pandas.Series.quantile.html#pandas.Series.quantile
    "pandas.Series.quantile")([q, interpolation]) | 返回给定分位数处的值。 |'
- en: '| [`Series.rank`](api/pandas.Series.rank.html#pandas.Series.rank "pandas.Series.rank")([axis, method, numeric_only, ...])
    | Compute numerical data ranks (1 through n) along axis. |'
  id: totrans-501
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.rank`](api/pandas.Series.rank.html#pandas.Series.rank "pandas.Series.rank")([axis, method, numeric_only, ...])
    | 沿轴计算数据的排名（1 到 n）。 |'
- en: '| [`Series.sem`](api/pandas.Series.sem.html#pandas.Series.sem "pandas.Series.sem")([axis, skipna, ddof, numeric_only])
    | Return unbiased standard error of the mean over requested axis. |'
  id: totrans-502
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sem`](api/pandas.Series.sem.html#pandas.Series.sem "pandas.Series.sem")([axis, skipna, ddof, numeric_only])
    | 返回请求轴上均值的无偏标准误差。 |'
- en: '| [`Series.skew`](api/pandas.Series.skew.html#pandas.Series.skew "pandas.Series.skew")([axis, skipna, numeric_only])
    | Return unbiased skew over requested axis. |'
  id: totrans-503
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.skew`](api/pandas.Series.skew.html#pandas.Series.skew "pandas.Series.skew")([axis, skipna, numeric_only])
    | 返回请求轴上的无偏偏度。 |'
- en: '| [`Series.std`](api/pandas.Series.std.html#pandas.Series.std "pandas.Series.std")([axis, skipna, ddof, numeric_only])
    | Return sample standard deviation over requested axis. |'
  id: totrans-504
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.std`](api/pandas.Series.std.html#pandas.Series.std "pandas.Series.std")([axis, skipna, ddof, numeric_only])
    | 返回请求轴上的样��标准差。 |'
- en: '| [`Series.sum`](api/pandas.Series.sum.html#pandas.Series.sum "pandas.Series.sum")([axis, skipna, numeric_only, ...])
    | Return the sum of the values over the requested axis. |'
  id: totrans-505
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sum`](api/pandas.Series.sum.html#pandas.Series.sum "pandas.Series.sum")([axis, skipna, numeric_only, ...])
    | 返回请求轴上值的总和。 |'
- en: '| [`Series.var`](api/pandas.Series.var.html#pandas.Series.var "pandas.Series.var")([axis, skipna, ddof, numeric_only])
    | Return unbiased variance over requested axis. |'
  id: totrans-506
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.var`](api/pandas.Series.var.html#pandas.Series.var "pandas.Series.var")([axis, skipna, ddof, numeric_only])
    | 返回请求轴上的无偏方差。 |'
- en: '| [`Series.kurtosis`](api/pandas.Series.kurtosis.html#pandas.Series.kurtosis
    "pandas.Series.kurtosis")([axis, skipna, numeric_only]) | Return unbiased kurtosis
    over requested axis. |'
  id: totrans-507
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.kurtosis`](api/pandas.Series.kurtosis.html#pandas.Series.kurtosis
    "pandas.Series.kurtosis")([axis, skipna, numeric_only]) | 返回请求轴上的无偏峰度。 |'
- en: '| [`Series.unique`](api/pandas.Series.unique.html#pandas.Series.unique "pandas.Series.unique")()
    | Return unique values of Series object. |'
  id: totrans-508
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.unique`](api/pandas.Series.unique.html#pandas.Series.unique "pandas.Series.unique")()
    | 返回 Series 对象的唯一值。 |'
- en: '| [`Series.nunique`](api/pandas.Series.nunique.html#pandas.Series.nunique "pandas.Series.nunique")([dropna])
    | Return number of unique elements in the object. |'
  id: totrans-509
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.nunique`](api/pandas.Series.nunique.html#pandas.Series.nunique "pandas.Series.nunique")([dropna])
    | 返回对象中唯一元素的数量。 |'
- en: '| [`Series.is_unique`](api/pandas.Series.is_unique.html#pandas.Series.is_unique
    "pandas.Series.is_unique") | Return boolean if values in the object are unique.
    |'
  id: totrans-510
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.is_unique`](api/pandas.Series.is_unique.html#pandas.Series.is_unique
    "pandas.Series.is_unique") | 如果对象中的值是唯一的，则返回布尔值。 |'
- en: '| [`Series.is_monotonic_increasing`](api/pandas.Series.is_monotonic_increasing.html#pandas.Series.is_monotonic_increasing
    "pandas.Series.is_monotonic_increasing") | Return boolean if values in the object
    are monotonically increasing. |'
  id: totrans-511
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.is_monotonic_increasing`](api/pandas.Series.is_monotonic_increasing.html#pandas.Series.is_monotonic_increasing
    "pandas.Series.is_monotonic_increasing") | 如果对象中的值单调递增，则返回布尔值。 |'
- en: '| [`Series.is_monotonic_decreasing`](api/pandas.Series.is_monotonic_decreasing.html#pandas.Series.is_monotonic_decreasing
    "pandas.Series.is_monotonic_decreasing") | Return boolean if values in the object
    are monotonically decreasing. |'
  id: totrans-512
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.is_monotonic_decreasing`](api/pandas.Series.is_monotonic_decreasing.html#pandas.Series.is_monotonic_decreasing
    "pandas.Series.is_monotonic_decreasing") | 如果对象中的值单调递减，则返回布尔值。 |'
- en: '| [`Series.value_counts`](api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts")([normalize, sort, ...]) | Return a Series containing
    counts of unique values. |'
  id: totrans-513
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.value_counts`](api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts")([normalize, sort, ...]) | 返回包含唯一值计数的 Series。 |'
- en: Reindexing / selection / label manipulation
  id: totrans-514
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 重新索引/选择/标签操作
- en: '| [`Series.align`](api/pandas.Series.align.html#pandas.Series.align "pandas.Series.align")(other[, join, axis, level, ...])
    | Align two objects on their axes with the specified join method. |'
  id: totrans-515
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.align`](api/pandas.Series.align.html#pandas.Series.align "pandas.Series.align")(other[, join, axis, level, ...])
    | 使用指定的连接方法在它们的轴上对齐两个对象。 |'
- en: '| [`Series.case_when`](api/pandas.Series.case_when.html#pandas.Series.case_when
    "pandas.Series.case_when")(caselist) | Replace values where the conditions are
    True. |'
  id: totrans-516
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.case_when`](api/pandas.Series.case_when.html#pandas.Series.case_when
    "pandas.Series.case_when")(caselist) | 替换条件为 True 的值。 |'
- en: '| [`Series.drop`](api/pandas.Series.drop.html#pandas.Series.drop "pandas.Series.drop")([labels, axis, index, columns, ...])
    | Return Series with specified index labels removed. |'
  id: totrans-517
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.drop`](api/pandas.Series.drop.html#pandas.Series.drop "pandas.Series.drop")([labels, axis, index, columns, ...])
    | 返回删除指定索引标签的 Series。 |'
- en: '| [`Series.droplevel`](api/pandas.Series.droplevel.html#pandas.Series.droplevel
    "pandas.Series.droplevel")(level[, axis]) | Return Series/DataFrame with requested
    index / column level(s) removed. |'
  id: totrans-518
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.droplevel`](api/pandas.Series.droplevel.html#pandas.Series.droplevel
    "pandas.Series.droplevel")(level[, axis]) | 返回请求删除的索引/列级别的 Series/DataFrame。 |'
- en: '| [`Series.drop_duplicates`](api/pandas.Series.drop_duplicates.html#pandas.Series.drop_duplicates
    "pandas.Series.drop_duplicates")(*[, keep, inplace, ...]) | Return Series with
    duplicate values removed. |'
  id: totrans-519
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.drop_duplicates`](api/pandas.Series.drop_duplicates.html#pandas.Series.drop_duplicates
    "pandas.Series.drop_duplicates")(*[, keep, inplace, ...]) | 返回删除重复值的 Series。 |'
- en: '| [`Series.duplicated`](api/pandas.Series.duplicated.html#pandas.Series.duplicated
    "pandas.Series.duplicated")([keep]) | Indicate duplicate Series values. |'
  id: totrans-520
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.duplicated`](api/pandas.Series.duplicated.html#pandas.Series.duplicated
    "pandas.Series.duplicated")([keep]) | 指示重复的 Series 值。 |'
- en: '| [`Series.equals`](api/pandas.Series.equals.html#pandas.Series.equals "pandas.Series.equals")(other)
    | Test whether two objects contain the same elements. |'
  id: totrans-521
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.equals`](api/pandas.Series.equals.html#pandas.Series.equals "pandas.Series.equals")(other)
    | 测试两个对象是否包含相同的元素。 |'
- en: '| [`Series.first`](api/pandas.Series.first.html#pandas.Series.first "pandas.Series.first")(offset)
    | (DEPRECATED) Select initial periods of time series data based on a date offset.
    |'
  id: totrans-522
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.first`](api/pandas.Series.first.html#pandas.Series.first "pandas.Series.first")(offset)
    | (已弃用) 根据日期偏移量选择时间序列数据的初始周期。 |'
- en: '| [`Series.head`](api/pandas.Series.head.html#pandas.Series.head "pandas.Series.head")([n])
    | Return the first n rows. |'
  id: totrans-523
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.head`](api/pandas.Series.head.html#pandas.Series.head "pandas.Series.head")([n])
    | 返回前 n 行。 |'
- en: '| [`Series.idxmax`](api/pandas.Series.idxmax.html#pandas.Series.idxmax "pandas.Series.idxmax")([axis, skipna])
    | Return the row label of the maximum value. |'
  id: totrans-524
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.idxmax`](api/pandas.Series.idxmax.html#pandas.Series.idxmax "pandas.Series.idxmax")([axis, skipna])
    | 返回最大值的行标签。 |'
- en: '| [`Series.idxmin`](api/pandas.Series.idxmin.html#pandas.Series.idxmin "pandas.Series.idxmin")([axis, skipna])
    | Return the row label of the minimum value. |'
  id: totrans-525
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.idxmin`](api/pandas.Series.idxmin.html#pandas.Series.idxmin "pandas.Series.idxmin")([axis, skipna])
    | 返回最小值的行标签。 |'
- en: '| [`Series.isin`](api/pandas.Series.isin.html#pandas.Series.isin "pandas.Series.isin")(values)
    | Whether elements in Series are contained in values. |'
  id: totrans-526
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.isin`](api/pandas.Series.isin.html#pandas.Series.isin "pandas.Series.isin")(values)
    | Series 中的元素是否包含在 values 中。 |'
- en: '| [`Series.last`](api/pandas.Series.last.html#pandas.Series.last "pandas.Series.last")(offset)
    | (DEPRECATED) Select final periods of time series data based on a date offset.
    |'
  id: totrans-527
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.last`](api/pandas.Series.last.html#pandas.Series.last "pandas.Series.last")(offset)
    | (已弃用) 根据日期偏移量选择时间序列数据的最终周期。 |'
- en: '| [`Series.reindex`](api/pandas.Series.reindex.html#pandas.Series.reindex "pandas.Series.reindex")([index, axis, method, copy, ...])
    | Conform Series to new index with optional filling logic. |'
  id: totrans-528
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.reindex`](api/pandas.Series.reindex.html#pandas.Series.reindex "pandas.Series.reindex")([index, axis, method, copy, ...])
    | 将 Series 调整为具有新索引的对象，并可选择填充逻辑。 |'
- en: '| [`Series.reindex_like`](api/pandas.Series.reindex_like.html#pandas.Series.reindex_like
    "pandas.Series.reindex_like")(other[, method, copy, ...]) | Return an object with
    matching indices as other object. |'
  id: totrans-529
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.reindex_like`](api/pandas.Series.reindex_like.html#pandas.Series.reindex_like
    "pandas.Series.reindex_like")(other[, method, copy, ...]) | 返回具有与其他对象匹配索引的对象。
    |'
- en: '| [`Series.rename`](api/pandas.Series.rename.html#pandas.Series.rename "pandas.Series.rename")([index, axis, copy, inplace, ...])
    | Alter Series index labels or name. |'
  id: totrans-530
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.rename`](api/pandas.Series.rename.html#pandas.Series.rename "pandas.Series.rename")([index, axis, copy, inplace, ...])
    | 更改Series索引标签或名称。 |'
- en: '| [`Series.rename_axis`](api/pandas.Series.rename_axis.html#pandas.Series.rename_axis
    "pandas.Series.rename_axis")([mapper, index, axis, ...]) | Set the name of the
    axis for the index or columns. |'
  id: totrans-531
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.rename_axis`](api/pandas.Series.rename_axis.html#pandas.Series.rename_axis
    "pandas.Series.rename_axis")([mapper, index, axis, ...]) | 设置索引或列的轴名称。 |'
- en: '| [`Series.reset_index`](api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index")([level, drop, name, ...]) | Generate a new DataFrame
    or Series with the index reset. |'
  id: totrans-532
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.reset_index`](api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index")([level, drop, name, ...]) | 生成重置索引的新DataFrame或Series。
    |'
- en: '| [`Series.sample`](api/pandas.Series.sample.html#pandas.Series.sample "pandas.Series.sample")([n, frac, replace, weights, ...])
    | Return a random sample of items from an axis of object. |'
  id: totrans-533
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sample`](api/pandas.Series.sample.html#pandas.Series.sample "pandas.Series.sample")([n, frac, replace, weights, ...])
    | 从对象的轴中返回随机样本项。 |'
- en: '| [`Series.set_axis`](api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis")(labels, *[, axis, copy]) | Assign desired index to given
    axis. |'
  id: totrans-534
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.set_axis`](api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis")(labels, *[, axis, copy]) | 为给定轴分配所需的索引。 |'
- en: '| [`Series.take`](api/pandas.Series.take.html#pandas.Series.take "pandas.Series.take")(indices[, axis])
    | Return the elements in the given *positional* indices along an axis. |'
  id: totrans-535
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.take`](api/pandas.Series.take.html#pandas.Series.take "pandas.Series.take")(indices[, axis])
    | 返回沿轴的给定*位置*索引的元素。 |'
- en: '| [`Series.tail`](api/pandas.Series.tail.html#pandas.Series.tail "pandas.Series.tail")([n])
    | Return the last n rows. |'
  id: totrans-536
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.tail`](api/pandas.Series.tail.html#pandas.Series.tail "pandas.Series.tail")([n])
    | 返回最后n行。 |'
- en: '| [`Series.truncate`](api/pandas.Series.truncate.html#pandas.Series.truncate
    "pandas.Series.truncate")([before, after, axis, copy]) | Truncate a Series or
    DataFrame before and after some index value. |'
  id: totrans-537
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.truncate`](api/pandas.Series.truncate.html#pandas.Series.truncate
    "pandas.Series.truncate")([before, after, axis, copy]) | 在某个索引值之前和之后截断Series或DataFrame。
    |'
- en: '| [`Series.where`](api/pandas.Series.where.html#pandas.Series.where "pandas.Series.where")(cond[, other, inplace, axis, level])
    | Replace values where the condition is False. |'
  id: totrans-538
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.where`](api/pandas.Series.where.html#pandas.Series.where "pandas.Series.where")(cond[, other, inplace, axis, level])
    | 替换条件为False的值。 |'
- en: '| [`Series.mask`](api/pandas.Series.mask.html#pandas.Series.mask "pandas.Series.mask")(cond[, other, inplace, axis, level])
    | Replace values where the condition is True. |'
  id: totrans-539
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.mask`](api/pandas.Series.mask.html#pandas.Series.mask "pandas.Series.mask")(cond[, other, inplace, axis, level])
    | 替换条件为True的值。 |'
- en: '| [`Series.add_prefix`](api/pandas.Series.add_prefix.html#pandas.Series.add_prefix
    "pandas.Series.add_prefix")(prefix[, axis]) | Prefix labels with string prefix.
    |'
  id: totrans-540
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.add_prefix`](api/pandas.Series.add_prefix.html#pandas.Series.add_prefix
    "pandas.Series.add_prefix")(prefix[, axis]) | 使用字符串前缀为标签添加前缀。 |'
- en: '| [`Series.add_suffix`](api/pandas.Series.add_suffix.html#pandas.Series.add_suffix
    "pandas.Series.add_suffix")(suffix[, axis]) | Suffix labels with string suffix.
    |'
  id: totrans-541
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.add_suffix`](api/pandas.Series.add_suffix.html#pandas.Series.add_suffix
    "pandas.Series.add_suffix")(suffix[, axis]) | 使用字符串后缀为标签添加后缀。 |'
- en: '| [`Series.filter`](api/pandas.Series.filter.html#pandas.Series.filter "pandas.Series.filter")([items, like, regex, axis])
    | Subset the dataframe rows or columns according to the specified index labels.
    |'
  id: totrans-542
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.filter`](api/pandas.Series.filter.html#pandas.Series.filter "pandas.Series.filter")([items, like, regex, axis])
    | 根据指定的索引标签筛选数据帧的行或列。 |'
- en: Missing data handling
  id: totrans-543
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缺失数据处理
- en: '| [`Series.backfill`](api/pandas.Series.backfill.html#pandas.Series.backfill
    "pandas.Series.backfill")(*[, axis, inplace, limit, ...]) | (DEPRECATED) Fill
    NA/NaN values by using the next valid observation to fill the gap. |'
  id: totrans-544
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.backfill`](api/pandas.Series.backfill.html#pandas.Series.backfill
    "pandas.Series.backfill")(*[, axis, inplace, limit, ...]) | (已弃用) 使用下一个有效观察值填充NA/NaN值。
    |'
- en: '| [`Series.bfill`](api/pandas.Series.bfill.html#pandas.Series.bfill "pandas.Series.bfill")(*[, axis, inplace, limit, ...])
    | Fill NA/NaN values by using the next valid observation to fill the gap. |'
  id: totrans-545
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.bfill`](api/pandas.Series.bfill.html#pandas.Series.bfill "pandas.Series.bfill")(*[, axis, inplace, limit, ...])
    | 使用下一个有效观察值填充NA/NaN值。 |'
- en: '| [`Series.dropna`](api/pandas.Series.dropna.html#pandas.Series.dropna "pandas.Series.dropna")(*[, axis, inplace, how, ...])
    | Return a new Series with missing values removed. |'
  id: totrans-546
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dropna`](api/pandas.Series.dropna.html#pandas.Series.dropna "pandas.Series.dropna")(*[, axis, inplace, how, ...])
    | 返回删除缺失值的新Series。 |'
- en: '| [`Series.ffill`](api/pandas.Series.ffill.html#pandas.Series.ffill "pandas.Series.ffill")(*[, axis, inplace, limit, ...])
    | Fill NA/NaN values by propagating the last valid observation to next valid.
    |'
  id: totrans-547
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.ffill`](api/pandas.Series.ffill.html#pandas.Series.ffill "pandas.Series.ffill")(*[, axis, inplace, limit, ...])
    | 通过将最后一个有效观测值传播到下一个有效值来填充NA/NaN值。 |'
- en: '| [`Series.fillna`](api/pandas.Series.fillna.html#pandas.Series.fillna "pandas.Series.fillna")([value, method, axis, ...])
    | Fill NA/NaN values using the specified method. |'
  id: totrans-548
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.fillna`](api/pandas.Series.fillna.html#pandas.Series.fillna "pandas.Series.fillna")([value, method, axis, ...])
    | 使用指定方法填充NA/NaN值。 |'
- en: '| [`Series.interpolate`](api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate")([method, axis, limit, ...]) | Fill NaN values using
    an interpolation method. |'
  id: totrans-549
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.interpolate`](api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate")([method, axis, limit, ...]) | 使用插值方法填充NaN值。 |'
- en: '| [`Series.isna`](api/pandas.Series.isna.html#pandas.Series.isna "pandas.Series.isna")()
    | Detect missing values. |'
  id: totrans-550
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.isna`](api/pandas.Series.isna.html#pandas.Series.isna "pandas.Series.isna")()
    | 检测缺失值。 |'
- en: '| [`Series.isnull`](api/pandas.Series.isnull.html#pandas.Series.isnull "pandas.Series.isnull")()
    | Series.isnull is an alias for Series.isna. |'
  id: totrans-551
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.isnull`](api/pandas.Series.isnull.html#pandas.Series.isnull "pandas.Series.isnull")()
    | Series.isnull是Series.isna的别名。 |'
- en: '| [`Series.notna`](api/pandas.Series.notna.html#pandas.Series.notna "pandas.Series.notna")()
    | Detect existing (non-missing) values. |'
  id: totrans-552
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.notna`](api/pandas.Series.notna.html#pandas.Series.notna "pandas.Series.notna")()
    | 检测存在的（非缺失）值。 |'
- en: '| [`Series.notnull`](api/pandas.Series.notnull.html#pandas.Series.notnull "pandas.Series.notnull")()
    | Series.notnull is an alias for Series.notna. |'
  id: totrans-553
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.notnull`](api/pandas.Series.notnull.html#pandas.Series.notnull "pandas.Series.notnull")()
    | Series.notnull是Series.notna的别名。 |'
- en: '| [`Series.pad`](api/pandas.Series.pad.html#pandas.Series.pad "pandas.Series.pad")(*[, axis, inplace, limit, downcast])
    | (DEPRECATED) Fill NA/NaN values by propagating the last valid observation to
    next valid. |'
  id: totrans-554
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.pad`](api/pandas.Series.pad.html#pandas.Series.pad "pandas.Series.pad")(*[, axis, inplace, limit, downcast])
    | (已弃用)通过将最后一个有效观测值传播到下一个有效值来填充NA/NaN值。 |'
- en: '| [`Series.replace`](api/pandas.Series.replace.html#pandas.Series.replace "pandas.Series.replace")([to_replace, value, inplace, ...])
    | Replace values given in to_replace with value. |'
  id: totrans-555
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.replace`](api/pandas.Series.replace.html#pandas.Series.replace "pandas.Series.replace")([to_replace, value, inplace, ...])
    | 用value替换to_replace中的值。 |'
- en: Reshaping, sorting
  id: totrans-556
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 重塑、排序
- en: '| [`Series.argsort`](api/pandas.Series.argsort.html#pandas.Series.argsort "pandas.Series.argsort")([axis, kind, order, stable])
    | Return the integer indices that would sort the Series values. |'
  id: totrans-557
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.argsort`](api/pandas.Series.argsort.html#pandas.Series.argsort "pandas.Series.argsort")([axis, kind, order, stable])
    | 返回对Series值进行排序的整数索引。 |'
- en: '| [`Series.argmin`](api/pandas.Series.argmin.html#pandas.Series.argmin "pandas.Series.argmin")([axis, skipna])
    | Return int position of the smallest value in the Series. |'
  id: totrans-558
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.argmin`](api/pandas.Series.argmin.html#pandas.Series.argmin "pandas.Series.argmin")([axis, skipna])
    | 返回Series中最小值的整数位置。 |'
- en: '| [`Series.argmax`](api/pandas.Series.argmax.html#pandas.Series.argmax "pandas.Series.argmax")([axis, skipna])
    | Return int position of the largest value in the Series. |'
  id: totrans-559
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.argmax`](api/pandas.Series.argmax.html#pandas.Series.argmax "pandas.Series.argmax")([axis, skipna])
    | 返回Series中最大值的整数位置。 |'
- en: '| [`Series.reorder_levels`](api/pandas.Series.reorder_levels.html#pandas.Series.reorder_levels
    "pandas.Series.reorder_levels")(order) | Rearrange index levels using input order.
    |'
  id: totrans-560
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.reorder_levels`](api/pandas.Series.reorder_levels.html#pandas.Series.reorder_levels
    "pandas.Series.reorder_levels")(order) | 使用输入顺序重新排列索引级别。 |'
- en: '| [`Series.sort_values`](api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values")(*[, axis, ascending, ...]) | Sort by the values.
    |'
  id: totrans-561
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sort_values`](api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values")(*[, axis, ascending, ...]) | 按值排序。 |'
- en: '| [`Series.sort_index`](api/pandas.Series.sort_index.html#pandas.Series.sort_index
    "pandas.Series.sort_index")(*[, axis, level, ...]) | Sort Series by index labels.
    |'
  id: totrans-562
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sort_index`](api/pandas.Series.sort_index.html#pandas.Series.sort_index
    "pandas.Series.sort_index")(*[, axis, level, ...]) | 按索引标签对Series进行排序。 |'
- en: '| [`Series.swaplevel`](api/pandas.Series.swaplevel.html#pandas.Series.swaplevel
    "pandas.Series.swaplevel")([i, j, copy]) | Swap levels i and j in a [`MultiIndex`](api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"). |'
  id: totrans-563
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.swaplevel`](api/pandas.Series.swaplevel.html#pandas.Series.swaplevel
    "pandas.Series.swaplevel")([i, j, copy]) | 在[`MultiIndex`](api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")中交换级别i和j。 |'
- en: '| [`Series.unstack`](api/pandas.Series.unstack.html#pandas.Series.unstack "pandas.Series.unstack")([level, fill_value, sort])
    | Unstack, also known as pivot, Series with MultiIndex to produce DataFrame. |'
  id: totrans-564
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.unstack`](api/pandas.Series.unstack.html#pandas.Series.unstack "pandas.Series.unstack")([level, fill_value, sort])
    | Unstack，也称为pivot，将具有MultiIndex的Series转换为DataFrame。 |'
- en: '| [`Series.explode`](api/pandas.Series.explode.html#pandas.Series.explode "pandas.Series.explode")([ignore_index])
    | Transform each element of a list-like to a row. |'
  id: totrans-565
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.explode`](api/pandas.Series.explode.html#pandas.Series.explode "pandas.Series.explode")([ignore_index])
    | 将类似列表的每个元素转换为一行。 |'
- en: '| [`Series.searchsorted`](api/pandas.Series.searchsorted.html#pandas.Series.searchsorted
    "pandas.Series.searchsorted")(value[, side, sorter]) | Find indices where elements
    should be inserted to maintain order. |'
  id: totrans-566
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.searchsorted`](api/pandas.Series.searchsorted.html#pandas.Series.searchsorted
    "pandas.Series.searchsorted")(value[, side, sorter]) | 查找应插入元素以保持顺序的索引。 |'
- en: '| [`Series.ravel`](api/pandas.Series.ravel.html#pandas.Series.ravel "pandas.Series.ravel")([order])
    | (DEPRECATED) Return the flattened underlying data as an ndarray or ExtensionArray.
    |'
  id: totrans-567
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.ravel`](api/pandas.Series.ravel.html#pandas.Series.ravel "pandas.Series.ravel")([order])
    | (已弃用) 将底层数据扁平化为ndarray或ExtensionArray。 |'
- en: '| [`Series.repeat`](api/pandas.Series.repeat.html#pandas.Series.repeat "pandas.Series.repeat")(repeats[, axis])
    | Repeat elements of a Series. |'
  id: totrans-568
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.repeat`](api/pandas.Series.repeat.html#pandas.Series.repeat "pandas.Series.repeat")(repeats[, axis])
    | 重复Series的元素。 |'
- en: '| [`Series.squeeze`](api/pandas.Series.squeeze.html#pandas.Series.squeeze "pandas.Series.squeeze")([axis])
    | Squeeze 1 dimensional axis objects into scalars. |'
  id: totrans-569
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.squeeze`](api/pandas.Series.squeeze.html#pandas.Series.squeeze "pandas.Series.squeeze")([axis])
    | 将1维轴对象压缩为标量。 |'
- en: '| [`Series.view`](api/pandas.Series.view.html#pandas.Series.view "pandas.Series.view")([dtype])
    | (DEPRECATED) Create a new view of the Series. |'
  id: totrans-570
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.view`](api/pandas.Series.view.html#pandas.Series.view "pandas.Series.view")([dtype])
    | (已弃用) 创建Series的新视图。 |'
- en: Combining / comparing / joining / merging
  id: totrans-571
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 合并/比较/连接/合并
- en: '| [`Series.compare`](api/pandas.Series.compare.html#pandas.Series.compare "pandas.Series.compare")(other[, align_axis, ...])
    | Compare to another Series and show the differences. |'
  id: totrans-572
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.compare`](api/pandas.Series.compare.html#pandas.Series.compare "pandas.Series.compare")(other[, align_axis, ...])
    | 与另一个Series进行比较并显示差异。 |'
- en: '| [`Series.update`](api/pandas.Series.update.html#pandas.Series.update "pandas.Series.update")(other)
    | Modify Series in place using values from passed Series. |'
  id: totrans-573
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.update`](api/pandas.Series.update.html#pandas.Series.update "pandas.Series.update")(other)
    | 使用传递的Series的值就地修改Series。 |'
- en: Time Series-related
  id: totrans-574
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 与时间序列相关
- en: '| [`Series.asfreq`](api/pandas.Series.asfreq.html#pandas.Series.asfreq "pandas.Series.asfreq")(freq[, method, how, ...])
    | Convert time series to specified frequency. |'
  id: totrans-575
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.asfreq`](api/pandas.Series.asfreq.html#pandas.Series.asfreq "pandas.Series.asfreq")(freq[, method, how, ...])
    | 将时间序列转换为指定的频率。 |'
- en: '| [`Series.asof`](api/pandas.Series.asof.html#pandas.Series.asof "pandas.Series.asof")(where[, subset])
    | Return the last row(s) without any NaNs before where. |'
  id: totrans-576
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.asof`](api/pandas.Series.asof.html#pandas.Series.asof "pandas.Series.asof")(where[, subset])
    | 返回在where之前没有任何NaN的最后一行。 |'
- en: '| [`Series.shift`](api/pandas.Series.shift.html#pandas.Series.shift "pandas.Series.shift")([periods, freq, axis, ...])
    | Shift index by desired number of periods with an optional time freq. |'
  id: totrans-577
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.shift`](api/pandas.Series.shift.html#pandas.Series.shift "pandas.Series.shift")([periods, freq, axis, ...])
    | 通过所需的周期数将索引向前或向后移动，可选择性地使用时间频率。 |'
- en: '| [`Series.first_valid_index`](api/pandas.Series.first_valid_index.html#pandas.Series.first_valid_index
    "pandas.Series.first_valid_index")() | Return index for first non-NA value or
    None, if no non-NA value is found. |'
  id: totrans-578
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.first_valid_index`](api/pandas.Series.first_valid_index.html#pandas.Series.first_valid_index
    "pandas.Series.first_valid_index")() | 返回第一个非NA值的索引，如果找不到非NA值，则返回None。 |'
- en: '| [`Series.last_valid_index`](api/pandas.Series.last_valid_index.html#pandas.Series.last_valid_index
    "pandas.Series.last_valid_index")() | Return index for last non-NA value or None,
    if no non-NA value is found. |'
  id: totrans-579
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.last_valid_index`](api/pandas.Series.last_valid_index.html#pandas.Series.last_valid_index
    "pandas.Series.last_valid_index")() | 返回最后一个非NA值的索引，如果找不到非NA值，则返回None。 |'
- en: '| [`Series.resample`](api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample")(rule[, axis, closed, label, ...]) | Resample time-series
    data. |'
  id: totrans-580
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.resample`](api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample")(rule[, axis, closed, label, ...]) | 重新采样时间序列数据。 |'
- en: '| [`Series.tz_convert`](api/pandas.Series.tz_convert.html#pandas.Series.tz_convert
    "pandas.Series.tz_convert")(tz[, axis, level, copy]) | Convert tz-aware axis to
    target time zone. |'
  id: totrans-581
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.tz_convert`](api/pandas.Series.tz_convert.html#pandas.Series.tz_convert
    "pandas.Series.tz_convert")(tz[, axis, level, copy]) | 将带有时区信息的轴转换为目标时区。 |'
- en: '| [`Series.tz_localize`](api/pandas.Series.tz_localize.html#pandas.Series.tz_localize
    "pandas.Series.tz_localize")(tz[, axis, level, copy, ...]) | Localize tz-naive
    index of a Series or DataFrame to target time zone. |'
  id: totrans-582
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.tz_localize`](api/pandas.Series.tz_localize.html#pandas.Series.tz_localize
    "pandas.Series.tz_localize")(tz[, axis, level, copy, ...]) | 将 Series 或 DataFrame
    的 tz-naive 索引本地化到目标时区。 |'
- en: '| [`Series.at_time`](api/pandas.Series.at_time.html#pandas.Series.at_time "pandas.Series.at_time")(time[, asof, axis])
    | Select values at particular time of day (e.g., 9:30AM). |'
  id: totrans-583
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.at_time`](api/pandas.Series.at_time.html#pandas.Series.at_time "pandas.Series.at_time")(time[, asof, axis])
    | 选择一天中特定时间的值（例如，上午9:30）。 |'
- en: '| [`Series.between_time`](api/pandas.Series.between_time.html#pandas.Series.between_time
    "pandas.Series.between_time")(start_time, end_time[, ...]) | Select values between
    particular times of the day (e.g., 9:00-9:30 AM). |'
  id: totrans-584
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.between_time`](api/pandas.Series.between_time.html#pandas.Series.between_time
    "pandas.Series.between_time")(start_time, end_time[, ...]) | 选择一天中特定时间段内的值（例如，上午9:00-9:30）。
    |'
- en: Accessors
  id: totrans-585
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 访问器
- en: pandas provides dtype-specific methods under various accessors. These are separate
    namespaces within [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series")
    that only apply to specific data types.
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 在各种访问器下提供了特定于数据类型的方法。这些是 [`Series`](api/pandas.Series.html#pandas.Series
    "pandas.Series") 内的单独命名空间，仅适用于特定数据类型。
- en: '| [`Series.str`](api/pandas.Series.str.html#pandas.Series.str "pandas.Series.str")
    | alias of `StringMethods` |'
  id: totrans-587
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str`](api/pandas.Series.str.html#pandas.Series.str "pandas.Series.str")
    | `StringMethods` 的别名 |'
- en: '| [`Series.cat`](api/pandas.Series.cat.html#pandas.Series.cat "pandas.Series.cat")
    | alias of `CategoricalAccessor` |'
  id: totrans-588
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat`](api/pandas.Series.cat.html#pandas.Series.cat "pandas.Series.cat")
    | `CategoricalAccessor` 的别名 |'
- en: '| [`Series.dt`](api/pandas.Series.dt.html#pandas.Series.dt "pandas.Series.dt")
    | alias of `CombinedDatetimelikeProperties` |'
  id: totrans-589
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt`](api/pandas.Series.dt.html#pandas.Series.dt "pandas.Series.dt")
    | `CombinedDatetimelikeProperties` 的别名 |'
- en: '| [`Series.sparse`](api/pandas.Series.sparse.html#pandas.Series.sparse "pandas.Series.sparse")
    | alias of `SparseAccessor` |'
  id: totrans-590
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sparse`](api/pandas.Series.sparse.html#pandas.Series.sparse "pandas.Series.sparse")
    | `SparseAccessor` 的别名 |'
- en: '| [`DataFrame.sparse`](api/pandas.DataFrame.sparse.html#pandas.DataFrame.sparse
    "pandas.DataFrame.sparse") | alias of `SparseFrameAccessor` |'
  id: totrans-591
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.sparse`](api/pandas.DataFrame.sparse.html#pandas.DataFrame.sparse
    "pandas.DataFrame.sparse") | `SparseFrameAccessor` 的别名 |'
- en: '| [`Index.str`](api/pandas.Index.str.html#pandas.Index.str "pandas.Index.str")
    | alias of `StringMethods` |'
  id: totrans-592
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.str`](api/pandas.Index.str.html#pandas.Index.str "pandas.Index.str")
    | `StringMethods` 的别名 |'
- en: '| Data Type | Accessor |'
  id: totrans-593
  prefs: []
  type: TYPE_TB
  zh: '| 数据类型 | 访问器 |'
- en: '| --- | --- |'
  id: totrans-594
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Datetime, Timedelta, Period | [dt](#api-series-dt) |'
  id: totrans-595
  prefs: []
  type: TYPE_TB
  zh: '| 日期时间、时间差、周期 | [dt](#api-series-dt) |'
- en: '| String | [str](#api-series-str) |'
  id: totrans-596
  prefs: []
  type: TYPE_TB
  zh: '| 字符串 | [str](#api-series-str) |'
- en: '| Categorical | [cat](#api-series-cat) |'
  id: totrans-597
  prefs: []
  type: TYPE_TB
  zh: '| Categorical | [cat](#api-series-cat) |'
- en: '| Sparse | [sparse](#api-series-sparse) |'
  id: totrans-598
  prefs: []
  type: TYPE_TB
  zh: '| 稀疏 | [sparse](#api-series-sparse) |'
- en: '### Datetimelike properties'
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: '### 日期时间属性'
- en: '`Series.dt` can be used to access the values of the series as datetimelike
    and return several properties. These can be accessed like `Series.dt.<property>`.'
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series.dt` 可用于访问系列的日期时间属性并返回多个属性。这些属性可以像 `Series.dt.<property>` 这样访问。'
- en: Datetime properties
  id: totrans-601
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 日期时间属性
- en: '| [`Series.dt.date`](api/pandas.Series.dt.date.html#pandas.Series.dt.date "pandas.Series.dt.date")
    | Returns numpy array of python [`datetime.date`](https://docs.python.org/3/library/datetime.html#datetime.date
    "(in Python v3.12)") objects. |'
  id: totrans-602
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.date`](api/pandas.Series.dt.date.html#pandas.Series.dt.date "pandas.Series.dt.date")
    | 返回带有 python [`datetime.date`](https://docs.python.org/3/library/datetime.html#datetime.date
    "(在 Python v3.12 中)") 对象的 numpy 数组。 |'
- en: '| [`Series.dt.time`](api/pandas.Series.dt.time.html#pandas.Series.dt.time "pandas.Series.dt.time")
    | Returns numpy array of [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(in Python v3.12)") objects. |'
  id: totrans-603
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.time`](api/pandas.Series.dt.time.html#pandas.Series.dt.time "pandas.Series.dt.time")
    | 返回带有时区的 [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(在 Python v3.12 中)") 对象的 numpy 数组。 |'
- en: '| [`Series.dt.timetz`](api/pandas.Series.dt.timetz.html#pandas.Series.dt.timetz
    "pandas.Series.dt.timetz") | Returns numpy array of [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(in Python v3.12)") objects with timezones. |'
  id: totrans-604
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.timetz`](api/pandas.Series.dt.timetz.html#pandas.Series.dt.timetz
    "pandas.Series.dt.timetz") | 返回带有时区的 [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(在 Python v3.12 中)") 对象的 numpy 数组。 |'
- en: '| [`Series.dt.year`](api/pandas.Series.dt.year.html#pandas.Series.dt.year "pandas.Series.dt.year")
    | The year of the datetime. |'
  id: totrans-605
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.year`](api/pandas.Series.dt.year.html#pandas.Series.dt.year "pandas.Series.dt.year")
    | 日期时间的年份。 |'
- en: '| [`Series.dt.month`](api/pandas.Series.dt.month.html#pandas.Series.dt.month
    "pandas.Series.dt.month") | The month as January=1, December=12. |'
  id: totrans-606
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.month`](api/pandas.Series.dt.month.html#pandas.Series.dt.month
    "pandas.Series.dt.month") | 月份，1 代表一月，12 代表十二月。 |'
- en: '| [`Series.dt.day`](api/pandas.Series.dt.day.html#pandas.Series.dt.day "pandas.Series.dt.day")
    | The day of the datetime. |'
  id: totrans-607
  prefs: []
  type: TYPE_TB
  zh: '[`Series.dt.day`](api/pandas.Series.dt.day.html#pandas.Series.dt.day "pandas.Series.dt.day")
    | 日期时间的日数。  '
- en: '| [`Series.dt.hour`](api/pandas.Series.dt.hour.html#pandas.Series.dt.hour "pandas.Series.dt.hour")
    | The hours of the datetime. |'
  id: totrans-608
  prefs: []
  type: TYPE_TB
  zh: '[`Series.dt.hour`](api/pandas.Series.dt.hour.html#pandas.Series.dt.hour "pandas.Series.dt.hour")
    | 日期时间的小时数。  '
- en: '| [`Series.dt.minute`](api/pandas.Series.dt.minute.html#pandas.Series.dt.minute
    "pandas.Series.dt.minute") | The minutes of the datetime. |'
  id: totrans-609
  prefs: []
  type: TYPE_TB
  zh: '[`Series.dt.minute`](api/pandas.Series.dt.minute.html#pandas.Series.dt.minute
    "pandas.Series.dt.minute") | 日期时间的分钟数。  '
- en: '| [`Series.dt.second`](api/pandas.Series.dt.second.html#pandas.Series.dt.second
    "pandas.Series.dt.second") | The seconds of the datetime. |'
  id: totrans-610
  prefs: []
  type: TYPE_TB
  zh: '[`Series.dt.second`](api/pandas.Series.dt.second.html#pandas.Series.dt.second
    "pandas.Series.dt.second") | 日期时间的秒数。  '
- en: '| [`Series.dt.microsecond`](api/pandas.Series.dt.microsecond.html#pandas.Series.dt.microsecond
    "pandas.Series.dt.microsecond") | The microseconds of the datetime. |'
  id: totrans-611
  prefs: []
  type: TYPE_TB
  zh: '[`Series.dt.microsecond`](api/pandas.Series.dt.microsecond.html#pandas.Series.dt.microsecond
    "pandas.Series.dt.microsecond") | 日期时间的微秒数。  '
- en: '| [`Series.dt.nanosecond`](api/pandas.Series.dt.nanosecond.html#pandas.Series.dt.nanosecond
    "pandas.Series.dt.nanosecond") | The nanoseconds of the datetime. |'
  id: totrans-612
  prefs: []
  type: TYPE_TB
  zh: '[`Series.dt.nanosecond`](api/pandas.Series.dt.nanosecond.html#pandas.Series.dt.nanosecond
    "pandas.Series.dt.nanosecond") | 日期时间的纳秒数。  '
- en: '| [`Series.dt.dayofweek`](api/pandas.Series.dt.dayofweek.html#pandas.Series.dt.dayofweek
    "pandas.Series.dt.dayofweek") | The day of the week with Monday=0, Sunday=6. |'
  id: totrans-613
  prefs: []
  type: TYPE_TB
  zh: '[`Series.dt.dayofweek`](api/pandas.Series.dt.dayofweek.html#pandas.Series.dt.dayofweek
    "pandas.Series.dt.dayofweek") | 星期几，星期一=0，星期日=6。  '
- en: '| [`Series.dt.day_of_week`](api/pandas.Series.dt.day_of_week.html#pandas.Series.dt.day_of_week
    "pandas.Series.dt.day_of_week") | The day of the week with Monday=0, Sunday=6.
    |'
  id: totrans-614
  prefs: []
  type: TYPE_TB
  zh: '[`Series.dt.day_of_week`](api/pandas.Series.dt.day_of_week.html#pandas.Series.dt.day_of_week
    "pandas.Series.dt.day_of_week") | 星期几，星期一=0，星期日=6。  '
- en: '| [`Series.dt.weekday`](api/pandas.Series.dt.weekday.html#pandas.Series.dt.weekday
    "pandas.Series.dt.weekday") | The day of the week with Monday=0, Sunday=6. |'
  id: totrans-615
  prefs: []
  type: TYPE_TB
  zh: '[`Series.dt.weekday`](api/pandas.Series.dt.weekday.html#pandas.Series.dt.weekday
    "pandas.Series.dt.weekday") | 星期几，星期一=0，星期日=6。  '
- en: '| [`Series.dt.dayofyear`](api/pandas.Series.dt.dayofyear.html#pandas.Series.dt.dayofyear
    "pandas.Series.dt.dayofyear") | The ordinal day of the year. |'
  id: totrans-616
  prefs: []
  type: TYPE_TB
  zh: '[`Series.dt.dayofyear`](api/pandas.Series.dt.dayofyear.html#pandas.Series.dt.dayofyear
    "pandas.Series.dt.dayofyear") | 年份中的第几天。  '
- en: '| [`Series.dt.day_of_year`](api/pandas.Series.dt.day_of_year.html#pandas.Series.dt.day_of_year
    "pandas.Series.dt.day_of_year") | The ordinal day of the year. |'
  id: totrans-617
  prefs: []
  type: TYPE_TB
  zh: '[`Series.dt.day_of_year`](api/pandas.Series.dt.day_of_year.html#pandas.Series.dt.day_of_year
    "pandas.Series.dt.day_of_year") | 年份中的第几天。  '
- en: '| [`Series.dt.days_in_month`](api/pandas.Series.dt.days_in_month.html#pandas.Series.dt.days_in_month
    "pandas.Series.dt.days_in_month") | The number of days in the month. |'
  id: totrans-618
  prefs: []
  type: TYPE_TB
  zh: '[`Series.dt.days_in_month`](api/pandas.Series.dt.days_in_month.html#pandas.Series.dt.days_in_month
    "pandas.Series.dt.days_in_month") | 该月的天数。  '
- en: '| [`Series.dt.quarter`](api/pandas.Series.dt.quarter.html#pandas.Series.dt.quarter
    "pandas.Series.dt.quarter") | The quarter of the date. |'
  id: totrans-619
  prefs: []
  type: TYPE_TB
  zh: '[`Series.dt.quarter`](api/pandas.Series.dt.quarter.html#pandas.Series.dt.quarter
    "pandas.Series.dt.quarter") | 日期的季度。  '
- en: '| [`Series.dt.is_month_start`](api/pandas.Series.dt.is_month_start.html#pandas.Series.dt.is_month_start
    "pandas.Series.dt.is_month_start") | Indicates whether the date is the first day
    of the month. |'
  id: totrans-620
  prefs: []
  type: TYPE_TB
  zh: '[`Series.dt.is_month_start`](api/pandas.Series.dt.is_month_start.html#pandas.Series.dt.is_month_start
    "pandas.Series.dt.is_month_start") | 是否为月初的指示器。  '
- en: '| [`Series.dt.is_month_end`](api/pandas.Series.dt.is_month_end.html#pandas.Series.dt.is_month_end
    "pandas.Series.dt.is_month_end") | Indicates whether the date is the last day
    of the month. |'
  id: totrans-621
  prefs: []
  type: TYPE_TB
  zh: '[`Series.dt.is_month_end`](api/pandas.Series.dt.is_month_end.html#pandas.Series.dt.is_month_end
    "pandas.Series.dt.is_month_end") | 是否为月末的指示器。  '
- en: '| [`Series.dt.is_quarter_start`](api/pandas.Series.dt.is_quarter_start.html#pandas.Series.dt.is_quarter_start
    "pandas.Series.dt.is_quarter_start") | Indicator for whether the date is the first
    day of a quarter. |'
  id: totrans-622
  prefs: []
  type: TYPE_TB
  zh: '[`Series.dt.is_quarter_start`](api/pandas.Series.dt.is_quarter_start.html#pandas.Series.dt.is_quarter_start
    "pandas.Series.dt.is_quarter_start") | 是否为季度第一天的指示器。  '
- en: '| [`Series.dt.is_quarter_end`](api/pandas.Series.dt.is_quarter_end.html#pandas.Series.dt.is_quarter_end
    "pandas.Series.dt.is_quarter_end") | Indicator for whether the date is the last
    day of a quarter. |'
  id: totrans-623
  prefs: []
  type: TYPE_TB
  zh: '[`Series.dt.is_quarter_end`](api/pandas.Series.dt.is_quarter_end.html#pandas.Series.dt.is_quarter_end
    "pandas.Series.dt.is_quarter_end") | 是否为季度最后一天的指示器。  '
- en: '| [`Series.dt.is_year_start`](api/pandas.Series.dt.is_year_start.html#pandas.Series.dt.is_year_start
    "pandas.Series.dt.is_year_start") | Indicate whether the date is the first day
    of a year. |'
  id: totrans-624
  prefs: []
  type: TYPE_TB
  zh: '[`Series.dt.is_year_start`](api/pandas.Series.dt.is_year_start.html#pandas.Series.dt.is_year_start
    "pandas.Series.dt.is_year_start") | 是否为年初的指示器。  '
- en: '| [`Series.dt.is_year_end`](api/pandas.Series.dt.is_year_end.html#pandas.Series.dt.is_year_end
    "pandas.Series.dt.is_year_end") | Indicate whether the date is the last day of
    the year. |'
  id: totrans-625
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_year_end`](api/pandas.Series.dt.is_year_end.html#pandas.Series.dt.is_year_end
    "pandas.Series.dt.is_year_end") | 表示日期是否为年末的指示器。 |'
- en: '| [`Series.dt.is_leap_year`](api/pandas.Series.dt.is_leap_year.html#pandas.Series.dt.is_leap_year
    "pandas.Series.dt.is_leap_year") | Boolean indicator if the date belongs to a
    leap year. |'
  id: totrans-626
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_leap_year`](api/pandas.Series.dt.is_leap_year.html#pandas.Series.dt.is_leap_year
    "pandas.Series.dt.is_leap_year") | 如果日期属于闰年，则为布尔值指示器。 |'
- en: '| [`Series.dt.daysinmonth`](api/pandas.Series.dt.daysinmonth.html#pandas.Series.dt.daysinmonth
    "pandas.Series.dt.daysinmonth") | The number of days in the month. |'
  id: totrans-627
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.daysinmonth`](api/pandas.Series.dt.daysinmonth.html#pandas.Series.dt.daysinmonth
    "pandas.Series.dt.daysinmonth") | 一个月中的天数。 |'
- en: '| [`Series.dt.days_in_month`](api/pandas.Series.dt.days_in_month.html#pandas.Series.dt.days_in_month
    "pandas.Series.dt.days_in_month") | The number of days in the month. |'
  id: totrans-628
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.days_in_month`](api/pandas.Series.dt.days_in_month.html#pandas.Series.dt.days_in_month
    "pandas.Series.dt.days_in_month") | 一个月中的天数。 |'
- en: '| [`Series.dt.tz`](api/pandas.Series.dt.tz.html#pandas.Series.dt.tz "pandas.Series.dt.tz")
    | Return the timezone. |'
  id: totrans-629
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.tz`](api/pandas.Series.dt.tz.html#pandas.Series.dt.tz "pandas.Series.dt.tz")
    | 返回时区。 |'
- en: '| [`Series.dt.freq`](api/pandas.Series.dt.freq.html#pandas.Series.dt.freq "pandas.Series.dt.freq")
    | Return the frequency object for this PeriodArray. |'
  id: totrans-630
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.freq`](api/pandas.Series.dt.freq.html#pandas.Series.dt.freq "pandas.Series.dt.freq")
    | 返回此 PeriodArray 的频率对象。 |'
- en: '| [`Series.dt.unit`](api/pandas.Series.dt.unit.html#pandas.Series.dt.unit "pandas.Series.dt.unit")
    |  |'
  id: totrans-631
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.unit`](api/pandas.Series.dt.unit.html#pandas.Series.dt.unit "pandas.Series.dt.unit")
    |  |'
- en: Datetime methods
  id: totrans-632
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 时间方法
- en: '| [`Series.dt.isocalendar`](api/pandas.Series.dt.isocalendar.html#pandas.Series.dt.isocalendar
    "pandas.Series.dt.isocalendar")() | Calculate year, week, and day according to
    the ISO 8601 standard. |'
  id: totrans-633
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.isocalendar`](api/pandas.Series.dt.isocalendar.html#pandas.Series.dt.isocalendar
    "pandas.Series.dt.isocalendar")() | 根据 ISO 8601 标准计算年份、周数和日期。 |'
- en: '| [`Series.dt.to_period`](api/pandas.Series.dt.to_period.html#pandas.Series.dt.to_period
    "pandas.Series.dt.to_period")(*args, **kwargs) | Cast to PeriodArray/PeriodIndex
    at a particular frequency. |'
  id: totrans-634
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.to_period`](api/pandas.Series.dt.to_period.html#pandas.Series.dt.to_period
    "pandas.Series.dt.to_period")(*args, **kwargs) | 在特定频率下转换为 PeriodArray/PeriodIndex。
    |'
- en: '| [`Series.dt.to_pydatetime`](api/pandas.Series.dt.to_pydatetime.html#pandas.Series.dt.to_pydatetime
    "pandas.Series.dt.to_pydatetime")() | (DEPRECATED) Return the data as an array
    of [`datetime.datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime
    "(in Python v3.12)") objects. |'
  id: totrans-635
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.to_pydatetime`](api/pandas.Series.dt.to_pydatetime.html#pandas.Series.dt.to_pydatetime
    "pandas.Series.dt.to_pydatetime")() | (已弃用)将数据返回为 [`datetime.datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime
    "(在 Python v3.12 中)") 对象数组。 |'
- en: '| [`Series.dt.tz_localize`](api/pandas.Series.dt.tz_localize.html#pandas.Series.dt.tz_localize
    "pandas.Series.dt.tz_localize")(*args, **kwargs) | Localize tz-naive Datetime
    Array/Index to tz-aware Datetime Array/Index. |'
  id: totrans-636
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.tz_localize`](api/pandas.Series.dt.tz_localize.html#pandas.Series.dt.tz_localize
    "pandas.Series.dt.tz_localize")(*args, **kwargs) | 将时区无关的日期时间数组/索引本地化为时区感知的日期时间数组/索引。
    |'
- en: '| [`Series.dt.tz_convert`](api/pandas.Series.dt.tz_convert.html#pandas.Series.dt.tz_convert
    "pandas.Series.dt.tz_convert")(*args, **kwargs) | Convert tz-aware Datetime Array/Index
    from one time zone to another. |'
  id: totrans-637
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.tz_convert`](api/pandas.Series.dt.tz_convert.html#pandas.Series.dt.tz_convert
    "pandas.Series.dt.tz_convert")(*args, **kwargs) | 将时区感知的日期时间数组/索引从一个时区转换为另一个时区。
    |'
- en: '| [`Series.dt.normalize`](api/pandas.Series.dt.normalize.html#pandas.Series.dt.normalize
    "pandas.Series.dt.normalize")(*args, **kwargs) | Convert times to midnight. |'
  id: totrans-638
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.normalize`](api/pandas.Series.dt.normalize.html#pandas.Series.dt.normalize
    "pandas.Series.dt.normalize")(*args, **kwargs) | 将时间转换为午夜。 |'
- en: '| [`Series.dt.strftime`](api/pandas.Series.dt.strftime.html#pandas.Series.dt.strftime
    "pandas.Series.dt.strftime")(*args, **kwargs) | Convert to Index using specified
    date_format. |'
  id: totrans-639
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.strftime`](api/pandas.Series.dt.strftime.html#pandas.Series.dt.strftime
    "pandas.Series.dt.strftime")(*args, **kwargs) | 使用指定的日期格式转换为索引。 |'
- en: '| [`Series.dt.round`](api/pandas.Series.dt.round.html#pandas.Series.dt.round
    "pandas.Series.dt.round")(*args, **kwargs) | Perform round operation on the data
    to the specified freq. |'
  id: totrans-640
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.round`](api/pandas.Series.dt.round.html#pandas.Series.dt.round
    "pandas.Series.dt.round")(*args, **kwargs) | 对数据执行舍入操作，以指定的频率。 |'
- en: '| [`Series.dt.floor`](api/pandas.Series.dt.floor.html#pandas.Series.dt.floor
    "pandas.Series.dt.floor")(*args, **kwargs) | Perform floor operation on the data
    to the specified freq. |'
  id: totrans-641
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.floor`](api/pandas.Series.dt.floor.html#pandas.Series.dt.floor
    "pandas.Series.dt.floor")(*args, **kwargs) | 对数据执行向下取整操作，以指定的频率。 |'
- en: '| [`Series.dt.ceil`](api/pandas.Series.dt.ceil.html#pandas.Series.dt.ceil "pandas.Series.dt.ceil")(*args, **kwargs)
    | Perform ceil operation on the data to the specified freq. |'
  id: totrans-642
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.ceil`](api/pandas.Series.dt.ceil.html#pandas.Series.dt.ceil "pandas.Series.dt.ceil")(*args, **kwargs)
    | 对数据执行向上取整操作到指定的频率。'
- en: '| [`Series.dt.month_name`](api/pandas.Series.dt.month_name.html#pandas.Series.dt.month_name
    "pandas.Series.dt.month_name")(*args, **kwargs) | Return the month names with
    specified locale. |'
  id: totrans-643
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.month_name`](api/pandas.Series.dt.month_name.html#pandas.Series.dt.month_name
    "pandas.Series.dt.month_name")(*args, **kwargs) | 返回指定语言环境的月份名称。'
- en: '| [`Series.dt.day_name`](api/pandas.Series.dt.day_name.html#pandas.Series.dt.day_name
    "pandas.Series.dt.day_name")(*args, **kwargs) | Return the day names with specified
    locale. |'
  id: totrans-644
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.day_name`](api/pandas.Series.dt.day_name.html#pandas.Series.dt.day_name
    "pandas.Series.dt.day_name")(*args, **kwargs) | 返回指定语言环境的星期几名称。'
- en: '| [`Series.dt.as_unit`](api/pandas.Series.dt.as_unit.html#pandas.Series.dt.as_unit
    "pandas.Series.dt.as_unit")(*args, **kwargs) |  |'
  id: totrans-645
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.as_unit`](api/pandas.Series.dt.as_unit.html#pandas.Series.dt.as_unit
    "pandas.Series.dt.as_unit")(*args, **kwargs) |  |'
- en: Period properties
  id: totrans-646
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 期间属性
- en: '| [`Series.dt.qyear`](api/pandas.Series.dt.qyear.html#pandas.Series.dt.qyear
    "pandas.Series.dt.qyear") |  |'
  id: totrans-647
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.qyear`](api/pandas.Series.dt.qyear.html#pandas.Series.dt.qyear
    "pandas.Series.dt.qyear") |  |'
- en: '| [`Series.dt.start_time`](api/pandas.Series.dt.start_time.html#pandas.Series.dt.start_time
    "pandas.Series.dt.start_time") | Get the Timestamp for the start of the period.
    |'
  id: totrans-648
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.start_time`](api/pandas.Series.dt.start_time.html#pandas.Series.dt.start_time
    "pandas.Series.dt.start_time") | 获取周期开始的时间戳。'
- en: '| [`Series.dt.end_time`](api/pandas.Series.dt.end_time.html#pandas.Series.dt.end_time
    "pandas.Series.dt.end_time") | Get the Timestamp for the end of the period. |'
  id: totrans-649
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.end_time`](api/pandas.Series.dt.end_time.html#pandas.Series.dt.end_time
    "pandas.Series.dt.end_time") | 获取周期结束的时间戳。'
- en: Timedelta properties
  id: totrans-650
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 时间增量属性
- en: '| [`Series.dt.days`](api/pandas.Series.dt.days.html#pandas.Series.dt.days "pandas.Series.dt.days")
    | Number of days for each element. |'
  id: totrans-651
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.days`](api/pandas.Series.dt.days.html#pandas.Series.dt.days "pandas.Series.dt.days")
    | 每个元素的天数。'
- en: '| [`Series.dt.seconds`](api/pandas.Series.dt.seconds.html#pandas.Series.dt.seconds
    "pandas.Series.dt.seconds") | Number of seconds (>= 0 and less than 1 day) for
    each element. |'
  id: totrans-652
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.seconds`](api/pandas.Series.dt.seconds.html#pandas.Series.dt.seconds
    "pandas.Series.dt.seconds") | 每个元素的秒数（大于等于0且小于1天）。'
- en: '| [`Series.dt.microseconds`](api/pandas.Series.dt.microseconds.html#pandas.Series.dt.microseconds
    "pandas.Series.dt.microseconds") | Number of microseconds (>= 0 and less than
    1 second) for each element. |'
  id: totrans-653
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.microseconds`](api/pandas.Series.dt.microseconds.html#pandas.Series.dt.microseconds
    "pandas.Series.dt.microseconds") | 每个元素的微秒数（大于等于0且小于1秒）。'
- en: '| [`Series.dt.nanoseconds`](api/pandas.Series.dt.nanoseconds.html#pandas.Series.dt.nanoseconds
    "pandas.Series.dt.nanoseconds") | Number of nanoseconds (>= 0 and less than 1
    microsecond) for each element. |'
  id: totrans-654
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.nanoseconds`](api/pandas.Series.dt.nanoseconds.html#pandas.Series.dt.nanoseconds
    "pandas.Series.dt.nanoseconds") | 每个元素的纳秒数（大于等于0且小于1微秒）。'
- en: '| [`Series.dt.components`](api/pandas.Series.dt.components.html#pandas.Series.dt.components
    "pandas.Series.dt.components") | Return a Dataframe of the components of the Timedeltas.
    |'
  id: totrans-655
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.components`](api/pandas.Series.dt.components.html#pandas.Series.dt.components
    "pandas.Series.dt.components") | 返回时间增量的各个组成部分的数据框。'
- en: '| [`Series.dt.unit`](api/pandas.Series.dt.unit.html#pandas.Series.dt.unit "pandas.Series.dt.unit")
    |  |'
  id: totrans-656
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.unit`](api/pandas.Series.dt.unit.html#pandas.Series.dt.unit "pandas.Series.dt.unit")
    |  |'
- en: Timedelta methods
  id: totrans-657
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 时间增量方法
- en: '| [`Series.dt.to_pytimedelta`](api/pandas.Series.dt.to_pytimedelta.html#pandas.Series.dt.to_pytimedelta
    "pandas.Series.dt.to_pytimedelta")() | Return an array of native [`datetime.timedelta`](https://docs.python.org/3/library/datetime.html#datetime.timedelta
    "(in Python v3.12)") objects. |'
  id: totrans-658
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.to_pytimedelta`](api/pandas.Series.dt.to_pytimedelta.html#pandas.Series.dt.to_pytimedelta
    "pandas.Series.dt.to_pytimedelta")() | 返回一个原生[`datetime.timedelta`](https://docs.python.org/3/library/datetime.html#datetime.timedelta
    "(在Python v3.12中)")对象数组。'
- en: '| [`Series.dt.total_seconds`](api/pandas.Series.dt.total_seconds.html#pandas.Series.dt.total_seconds
    "pandas.Series.dt.total_seconds")(*args, **kwargs) | Return total duration of
    each element expressed in seconds. |'
  id: totrans-659
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.total_seconds`](api/pandas.Series.dt.total_seconds.html#pandas.Series.dt.total_seconds
    "pandas.Series.dt.total_seconds")(*args, **kwargs) | 返回每个元素表示的总持续时间（以秒为单位）。'
- en: '| [`Series.dt.as_unit`](api/pandas.Series.dt.as_unit.html#pandas.Series.dt.as_unit
    "pandas.Series.dt.as_unit")(*args, **kwargs) |  |  ### String handling'
  id: totrans-660
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`Series.dt.as_unit`](api/pandas.Series.dt.as_unit.html#pandas.Series.dt.as_unit
    "pandas.Series.dt.as_unit")(*args, **kwargs) |  |  ### 字符串处理'
- en: '`Series.str` can be used to access the values of the series as strings and
    apply several methods to it. These can be accessed like `Series.str.<function/property>`.'
  id: totrans-661
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series.str` 可用于访问系列的值作为字符串并对其应用多种方法。这些可以像 `Series.str.<function/property>`
    这样访问。'
- en: '| [`Series.str.capitalize`](api/pandas.Series.str.capitalize.html#pandas.Series.str.capitalize
    "pandas.Series.str.capitalize")() | Convert strings in the Series/Index to be
    capitalized. |'
  id: totrans-662
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.capitalize`](api/pandas.Series.str.capitalize.html#pandas.Series.str.capitalize
    "pandas.Series.str.capitalize")() | 将 Series/Index 中的字符串转换为大写。'
- en: '| [`Series.str.casefold`](api/pandas.Series.str.casefold.html#pandas.Series.str.casefold
    "pandas.Series.str.casefold")() | Convert strings in the Series/Index to be casefolded.
    |'
  id: totrans-663
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.casefold`](api/pandas.Series.str.casefold.html#pandas.Series.str.casefold
    "pandas.Series.str.casefold")() | 将 Series/Index 中的字符串转换为 casefolded。'
- en: '| [`Series.str.cat`](api/pandas.Series.str.cat.html#pandas.Series.str.cat "pandas.Series.str.cat")([others, sep, na_rep, join])
    | Concatenate strings in the Series/Index with given separator. |'
  id: totrans-664
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.cat`](api/pandas.Series.str.cat.html#pandas.Series.str.cat "pandas.Series.str.cat")([others, sep, na_rep, join])
    | 使用给定的分隔符连接 Series/Index 中的字符串。'
- en: '| [`Series.str.center`](api/pandas.Series.str.center.html#pandas.Series.str.center
    "pandas.Series.str.center")(width[, fillchar]) | Pad left and right side of strings
    in the Series/Index. |'
  id: totrans-665
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.center`](api/pandas.Series.str.center.html#pandas.Series.str.center
    "pandas.Series.str.center")(width[, fillchar]) | 在 Series/Index 中的字符串的左右两侧填充。'
- en: '| [`Series.str.contains`](api/pandas.Series.str.contains.html#pandas.Series.str.contains
    "pandas.Series.str.contains")(pat[, case, flags, na, ...]) | Test if pattern or
    regex is contained within a string of a Series or Index. |'
  id: totrans-666
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.contains`](api/pandas.Series.str.contains.html#pandas.Series.str.contains
    "pandas.Series.str.contains")(pat[, case, flags, na, ...]) | 测试 Series 或 Index
    中的字符串是否包含模式或正则表达式。'
- en: '| [`Series.str.count`](api/pandas.Series.str.count.html#pandas.Series.str.count
    "pandas.Series.str.count")(pat[, flags]) | Count occurrences of pattern in each
    string of the Series/Index. |'
  id: totrans-667
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.count`](api/pandas.Series.str.count.html#pandas.Series.str.count
    "pandas.Series.str.count")(pat[, flags]) | 计算 Series/Index 中每个字符串中模式的出现次数。'
- en: '| [`Series.str.decode`](api/pandas.Series.str.decode.html#pandas.Series.str.decode
    "pandas.Series.str.decode")(encoding[, errors]) | Decode character string in the
    Series/Index using indicated encoding. |'
  id: totrans-668
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.decode`](api/pandas.Series.str.decode.html#pandas.Series.str.decode
    "pandas.Series.str.decode")(encoding[, errors]) | 使用指定的编码解码 Series/Index 中的字符字符串。'
- en: '| [`Series.str.encode`](api/pandas.Series.str.encode.html#pandas.Series.str.encode
    "pandas.Series.str.encode")(encoding[, errors]) | Encode character string in the
    Series/Index using indicated encoding. |'
  id: totrans-669
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.encode`](api/pandas.Series.str.encode.html#pandas.Series.str.encode
    "pandas.Series.str.encode")(encoding[, errors]) | 使用指定的编码对 Series/Index 中的字符字符串进行编码。'
- en: '| [`Series.str.endswith`](api/pandas.Series.str.endswith.html#pandas.Series.str.endswith
    "pandas.Series.str.endswith")(pat[, na]) | Test if the end of each string element
    matches a pattern. |'
  id: totrans-670
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.endswith`](api/pandas.Series.str.endswith.html#pandas.Series.str.endswith
    "pandas.Series.str.endswith")(pat[, na]) | 测试每个字符串元素的结尾是否与模式匹配。'
- en: '| [`Series.str.extract`](api/pandas.Series.str.extract.html#pandas.Series.str.extract
    "pandas.Series.str.extract")(pat[, flags, expand]) | Extract capture groups in
    the regex pat as columns in a DataFrame. |'
  id: totrans-671
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.extract`](api/pandas.Series.str.extract.html#pandas.Series.str.extract
    "pandas.Series.str.extract")(pat[, flags, expand]) | 在 DataFrame 中提取正则表达式 pat
    中的捕获组作为列。'
- en: '| [`Series.str.extractall`](api/pandas.Series.str.extractall.html#pandas.Series.str.extractall
    "pandas.Series.str.extractall")(pat[, flags]) | Extract capture groups in the
    regex pat as columns in DataFrame. |'
  id: totrans-672
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.extractall`](api/pandas.Series.str.extractall.html#pandas.Series.str.extractall
    "pandas.Series.str.extractall")(pat[, flags]) | 在 DataFrame 中提取正则表达式 pat 中的捕获组作为列。'
- en: '| [`Series.str.find`](api/pandas.Series.str.find.html#pandas.Series.str.find
    "pandas.Series.str.find")(sub[, start, end]) | Return lowest indexes in each strings
    in the Series/Index. |'
  id: totrans-673
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.find`](api/pandas.Series.str.find.html#pandas.Series.str.find
    "pandas.Series.str.find")(sub[, start, end]) | 返回 Series/Index 中每个字符串中的最低索引。'
- en: '| [`Series.str.findall`](api/pandas.Series.str.findall.html#pandas.Series.str.findall
    "pandas.Series.str.findall")(pat[, flags]) | Find all occurrences of pattern or
    regular expression in the Series/Index. |'
  id: totrans-674
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.findall`](api/pandas.Series.str.findall.html#pandas.Series.str.findall
    "pandas.Series.str.findall")(pat[, flags]) | 在 Series/Index 中查找模式或正则表达式的所有匹配项。'
- en: '| [`Series.str.fullmatch`](api/pandas.Series.str.fullmatch.html#pandas.Series.str.fullmatch
    "pandas.Series.str.fullmatch")(pat[, case, flags, na]) | Determine if each string
    entirely matches a regular expression. |'
  id: totrans-675
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.fullmatch`](api/pandas.Series.str.fullmatch.html#pandas.Series.str.fullmatch
    "pandas.Series.str.fullmatch")(pat[, case, flags, na]) | 确定每个字符串是否完全匹配正则表达式。'
- en: '| [`Series.str.get`](api/pandas.Series.str.get.html#pandas.Series.str.get "pandas.Series.str.get")(i)
    | Extract element from each component at specified position or with specified
    key. |'
  id: totrans-676
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.get`](api/pandas.Series.str.get.html#pandas.Series.str.get "pandas.Series.str.get")(i)
    | 从指定位置或具有指定键的每个组件中提取元素。'
- en: '| [`Series.str.index`](api/pandas.Series.str.index.html#pandas.Series.str.index
    "pandas.Series.str.index")(sub[, start, end]) | Return lowest indexes in each
    string in Series/Index. |'
  id: totrans-677
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.index`](api/pandas.Series.str.index.html#pandas.Series.str.index
    "pandas.Series.str.index")(sub[, start, end]) | 返回 Series/Index 中每个字符串中的最低索引。'
- en: '| [`Series.str.join`](api/pandas.Series.str.join.html#pandas.Series.str.join
    "pandas.Series.str.join")(sep) | Join lists contained as elements in the Series/Index
    with passed delimiter. |'
  id: totrans-678
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.join`](api/pandas.Series.str.join.html#pandas.Series.str.join
    "pandas.Series.str.join")(sep) | 使用传递的分隔符连接 Series/Index 中作为元素包含的列表。'
- en: '| [`Series.str.len`](api/pandas.Series.str.len.html#pandas.Series.str.len "pandas.Series.str.len")()
    | Compute the length of each element in the Series/Index. |'
  id: totrans-679
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.len`](api/pandas.Series.str.len.html#pandas.Series.str.len "pandas.Series.str.len")()
    | 计算 Series/Index 中每个元素的长度。'
- en: '| [`Series.str.ljust`](api/pandas.Series.str.ljust.html#pandas.Series.str.ljust
    "pandas.Series.str.ljust")(width[, fillchar]) | Pad right side of strings in the
    Series/Index. |'
  id: totrans-680
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.ljust`](api/pandas.Series.str.ljust.html#pandas.Series.str.ljust
    "pandas.Series.str.ljust")(width[, fillchar]) | 在 Series/Index 中字符串的右侧填充。'
- en: '| [`Series.str.lower`](api/pandas.Series.str.lower.html#pandas.Series.str.lower
    "pandas.Series.str.lower")() | Convert strings in the Series/Index to lowercase.
    |'
  id: totrans-681
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.lower`](api/pandas.Series.str.lower.html#pandas.Series.str.lower
    "pandas.Series.str.lower")() | 将 Series/Index 中的字符串转换为小写。'
- en: '| [`Series.str.lstrip`](api/pandas.Series.str.lstrip.html#pandas.Series.str.lstrip
    "pandas.Series.str.lstrip")([to_strip]) | Remove leading characters. |'
  id: totrans-682
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.lstrip`](api/pandas.Series.str.lstrip.html#pandas.Series.str.lstrip
    "pandas.Series.str.lstrip")([to_strip]) | 移除前导字符。'
- en: '| [`Series.str.match`](api/pandas.Series.str.match.html#pandas.Series.str.match
    "pandas.Series.str.match")(pat[, case, flags, na]) | Determine if each string
    starts with a match of a regular expression. |'
  id: totrans-683
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.match`](api/pandas.Series.str.match.html#pandas.Series.str.match
    "pandas.Series.str.match")(pat[, case, flags, na]) | 确定每个字符串是否以正则表达式的匹配开头。'
- en: '| [`Series.str.normalize`](api/pandas.Series.str.normalize.html#pandas.Series.str.normalize
    "pandas.Series.str.normalize")(form) | Return the Unicode normal form for the
    strings in the Series/Index. |'
  id: totrans-684
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.normalize`](api/pandas.Series.str.normalize.html#pandas.Series.str.normalize
    "pandas.Series.str.normalize")(form) | 返回 Series/Index 中字符串的 Unicode 标准形式。'
- en: '| [`Series.str.pad`](api/pandas.Series.str.pad.html#pandas.Series.str.pad "pandas.Series.str.pad")(width[, side, fillchar])
    | Pad strings in the Series/Index up to width. |'
  id: totrans-685
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.pad`](api/pandas.Series.str.pad.html#pandas.Series.str.pad "pandas.Series.str.pad")(width[, side, fillchar])
    | 将 Series/Index 中的字符串填充到指定宽度。'
- en: '| [`Series.str.partition`](api/pandas.Series.str.partition.html#pandas.Series.str.partition
    "pandas.Series.str.partition")([sep, expand]) | Split the string at the first
    occurrence of sep. |'
  id: totrans-686
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.partition`](api/pandas.Series.str.partition.html#pandas.Series.str.partition
    "pandas.Series.str.partition")([sep, expand]) | 在第一个分隔符处拆分字符串。'
- en: '| [`Series.str.removeprefix`](api/pandas.Series.str.removeprefix.html#pandas.Series.str.removeprefix
    "pandas.Series.str.removeprefix")(prefix) | Remove a prefix from an object series.
    |'
  id: totrans-687
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.removeprefix`](api/pandas.Series.str.removeprefix.html#pandas.Series.str.removeprefix
    "pandas.Series.str.removeprefix")(prefix) | 从对象系列中移除前缀。'
- en: '| [`Series.str.removesuffix`](api/pandas.Series.str.removesuffix.html#pandas.Series.str.removesuffix
    "pandas.Series.str.removesuffix")(suffix) | Remove a suffix from an object series.
    |'
  id: totrans-688
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.removesuffix`](api/pandas.Series.str.removesuffix.html#pandas.Series.str.removesuffix
    "pandas.Series.str.removesuffix")(suffix) | 从对象系列中移���后缀。'
- en: '| [`Series.str.repeat`](api/pandas.Series.str.repeat.html#pandas.Series.str.repeat
    "pandas.Series.str.repeat")(repeats) | Duplicate each string in the Series or
    Index. |'
  id: totrans-689
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.repeat`](api/pandas.Series.str.repeat.html#pandas.Series.str.repeat
    "pandas.Series.str.repeat")(repeats) | 在 Series 或 Index 中复制每个字符串。'
- en: '| [`Series.str.replace`](api/pandas.Series.str.replace.html#pandas.Series.str.replace
    "pandas.Series.str.replace")(pat, repl[, n, case, ...]) | Replace each occurrence
    of pattern/regex in the Series/Index. |'
  id: totrans-690
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.replace`](api/pandas.Series.str.replace.html#pandas.Series.str.replace
    "pandas.Series.str.replace")(pat, repl[, n, case, ...]) | 替换 Series/Index 中每个出现的模式/正则表达式。'
- en: '| [`Series.str.rfind`](api/pandas.Series.str.rfind.html#pandas.Series.str.rfind
    "pandas.Series.str.rfind")(sub[, start, end]) | Return highest indexes in each
    strings in the Series/Index. |'
  id: totrans-691
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.rfind`](api/pandas.Series.str.rfind.html#pandas.Series.str.rfind
    "pandas.Series.str.rfind")(sub[, start, end]) | 返回 Series/Index 中每个字符串中的最高索引。'
- en: '| [`Series.str.rindex`](api/pandas.Series.str.rindex.html#pandas.Series.str.rindex
    "pandas.Series.str.rindex")(sub[, start, end]) | Return highest indexes in each
    string in Series/Index. |'
  id: totrans-692
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.rindex`](api/pandas.Series.str.rindex.html#pandas.Series.str.rindex
    "pandas.Series.str.rindex")(sub[, start, end]) | 返回 Series/Index 中每个字符串中的最高索引。'
- en: '| [`Series.str.rjust`](api/pandas.Series.str.rjust.html#pandas.Series.str.rjust
    "pandas.Series.str.rjust")(width[, fillchar]) | Pad left side of strings in the
    Series/Index. |'
  id: totrans-693
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.rjust`](api/pandas.Series.str.rjust.html#pandas.Series.str.rjust
    "pandas.Series.str.rjust")(width[, fillchar]) | 在 Series/Index 中的字符串左侧填充。'
- en: '| [`Series.str.rpartition`](api/pandas.Series.str.rpartition.html#pandas.Series.str.rpartition
    "pandas.Series.str.rpartition")([sep, expand]) | Split the string at the last
    occurrence of sep. |'
  id: totrans-694
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.rpartition`](api/pandas.Series.str.rpartition.html#pandas.Series.str.rpartition
    "pandas.Series.str.rpartition")([sep, expand]) | 在字符串中最后一次出现的位置分割字符串。'
- en: '| [`Series.str.rstrip`](api/pandas.Series.str.rstrip.html#pandas.Series.str.rstrip
    "pandas.Series.str.rstrip")([to_strip]) | Remove trailing characters. |'
  id: totrans-695
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.rstrip`](api/pandas.Series.str.rstrip.html#pandas.Series.str.rstrip
    "pandas.Series.str.rstrip")([to_strip]) | 移除字符串末尾的字符。'
- en: '| [`Series.str.slice`](api/pandas.Series.str.slice.html#pandas.Series.str.slice
    "pandas.Series.str.slice")([start, stop, step]) | Slice substrings from each element
    in the Series or Index. |'
  id: totrans-696
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.slice`](api/pandas.Series.str.slice.html#pandas.Series.str.slice
    "pandas.Series.str.slice")([start, stop, step]) | 从 Series 或 Index 中的每个元素中切片子字符串。'
- en: '| [`Series.str.slice_replace`](api/pandas.Series.str.slice_replace.html#pandas.Series.str.slice_replace
    "pandas.Series.str.slice_replace")([start, stop, repl]) | Replace a positional
    slice of a string with another value. |'
  id: totrans-697
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.slice_replace`](api/pandas.Series.str.slice_replace.html#pandas.Series.str.slice_replace
    "pandas.Series.str.slice_replace")([start, stop, repl]) | 用另一个值替换字符串的位置切片。'
- en: '| [`Series.str.split`](api/pandas.Series.str.split.html#pandas.Series.str.split
    "pandas.Series.str.split")([pat, n, expand, regex]) | Split strings around given
    separator/delimiter. |'
  id: totrans-698
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.split`](api/pandas.Series.str.split.html#pandas.Series.str.split
    "pandas.Series.str.split")([pat, n, expand, regex]) | 在给定的分隔符周围分割字符串。'
- en: '| [`Series.str.rsplit`](api/pandas.Series.str.rsplit.html#pandas.Series.str.rsplit
    "pandas.Series.str.rsplit")([pat, n, expand]) | Split strings around given separator/delimiter.
    |'
  id: totrans-699
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.rsplit`](api/pandas.Series.str.rsplit.html#pandas.Series.str.rsplit
    "pandas.Series.str.rsplit")([pat, n, expand]) | 在给定的分隔符周围分割字符串。'
- en: '| [`Series.str.startswith`](api/pandas.Series.str.startswith.html#pandas.Series.str.startswith
    "pandas.Series.str.startswith")(pat[, na]) | Test if the start of each string
    element matches a pattern. |'
  id: totrans-700
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.startswith`](api/pandas.Series.str.startswith.html#pandas.Series.str.startswith
    "pandas.Series.str.startswith")(pat[, na]) | 测试每个字符串元素的开头是否与模式匹配。'
- en: '| [`Series.str.strip`](api/pandas.Series.str.strip.html#pandas.Series.str.strip
    "pandas.Series.str.strip")([to_strip]) | Remove leading and trailing characters.
    |'
  id: totrans-701
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.strip`](api/pandas.Series.str.strip.html#pandas.Series.str.strip
    "pandas.Series.str.strip")([to_strip]) | 移除字符串的前导和尾随字符。'
- en: '| [`Series.str.swapcase`](api/pandas.Series.str.swapcase.html#pandas.Series.str.swapcase
    "pandas.Series.str.swapcase")() | Convert strings in the Series/Index to be swapcased.
    |'
  id: totrans-702
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.swapcase`](api/pandas.Series.str.swapcase.html#pandas.Series.str.swapcase
    "pandas.Series.str.swapcase")() | 将 Series/Index 中的字符串转换为大小写互换。'
- en: '| [`Series.str.title`](api/pandas.Series.str.title.html#pandas.Series.str.title
    "pandas.Series.str.title")() | Convert strings in the Series/Index to titlecase.
    |'
  id: totrans-703
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.title`](api/pandas.Series.str.title.html#pandas.Series.str.title
    "pandas.Series.str.title")() | 将 Series/Index 中的字符串转换为首字母大写。'
- en: '| [`Series.str.translate`](api/pandas.Series.str.translate.html#pandas.Series.str.translate
    "pandas.Series.str.translate")(table) | Map all characters in the string through
    the given mapping table. |'
  id: totrans-704
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.translate`](api/pandas.Series.str.translate.html#pandas.Series.str.translate
    "pandas.Series.str.translate")(table) | 将字符串中的所有字符通过给定的映射表进行映射。'
- en: '| [`Series.str.upper`](api/pandas.Series.str.upper.html#pandas.Series.str.upper
    "pandas.Series.str.upper")() | Convert strings in the Series/Index to uppercase.
    |'
  id: totrans-705
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.upper`](api/pandas.Series.str.upper.html#pandas.Series.str.upper
    "pandas.Series.str.upper")() | 将 Series/Index 中的字符串转换为大写。'
- en: '| [`Series.str.wrap`](api/pandas.Series.str.wrap.html#pandas.Series.str.wrap
    "pandas.Series.str.wrap")(width, **kwargs) | Wrap strings in Series/Index at specified
    line width. |'
  id: totrans-706
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.wrap`](api/pandas.Series.str.wrap.html#pandas.Series.str.wrap
    "pandas.Series.str.wrap")(width, **kwargs) | 在指定的行宽处将 Series/Index 中的字符串换行。'
- en: '| [`Series.str.zfill`](api/pandas.Series.str.zfill.html#pandas.Series.str.zfill
    "pandas.Series.str.zfill")(width) | Pad strings in the Series/Index by prepending
    ''0'' characters. |'
  id: totrans-707
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.zfill`](api/pandas.Series.str.zfill.html#pandas.Series.str.zfill
    "pandas.Series.str.zfill")(width) | 在 Series/Index 中的字符串前面填充 ''0'' 字符。'
- en: '| [`Series.str.isalnum`](api/pandas.Series.str.isalnum.html#pandas.Series.str.isalnum
    "pandas.Series.str.isalnum")() | Check whether all characters in each string are
    alphanumeric. |'
  id: totrans-708
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.isalnum`](api/pandas.Series.str.isalnum.html#pandas.Series.str.isalnum
    "pandas.Series.str.isalnum")() | 检查每个字符串中的所有字符是否为字母数字字符。 |'
- en: '| [`Series.str.isalpha`](api/pandas.Series.str.isalpha.html#pandas.Series.str.isalpha
    "pandas.Series.str.isalpha")() | Check whether all characters in each string are
    alphabetic. |'
  id: totrans-709
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.isalpha`](api/pandas.Series.str.isalpha.html#pandas.Series.str.isalpha
    "pandas.Series.str.isalpha")() | 检查每个字符串中的所有字符是否为字母字符。 |'
- en: '| [`Series.str.isdigit`](api/pandas.Series.str.isdigit.html#pandas.Series.str.isdigit
    "pandas.Series.str.isdigit")() | Check whether all characters in each string are
    digits. |'
  id: totrans-710
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.isdigit`](api/pandas.Series.str.isdigit.html#pandas.Series.str.isdigit
    "pandas.Series.str.isdigit")() | 检查每个字符串中的所有字符是否为数字。 |'
- en: '| [`Series.str.isspace`](api/pandas.Series.str.isspace.html#pandas.Series.str.isspace
    "pandas.Series.str.isspace")() | Check whether all characters in each string are
    whitespace. |'
  id: totrans-711
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.isspace`](api/pandas.Series.str.isspace.html#pandas.Series.str.isspace
    "pandas.Series.str.isspace")() | 检查每个字符串中的所有字符是否为空格字符。 |'
- en: '| [`Series.str.islower`](api/pandas.Series.str.islower.html#pandas.Series.str.islower
    "pandas.Series.str.islower")() | Check whether all characters in each string are
    lowercase. |'
  id: totrans-712
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.islower`](api/pandas.Series.str.islower.html#pandas.Series.str.islower
    "pandas.Series.str.islower")() | 检查每个字符串中的所有字符是否为小写。 |'
- en: '| [`Series.str.isupper`](api/pandas.Series.str.isupper.html#pandas.Series.str.isupper
    "pandas.Series.str.isupper")() | Check whether all characters in each string are
    uppercase. |'
  id: totrans-713
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.isupper`](api/pandas.Series.str.isupper.html#pandas.Series.str.isupper
    "pandas.Series.str.isupper")() | 检查每个字符串中的所有字符是否为大写。 |'
- en: '| [`Series.str.istitle`](api/pandas.Series.str.istitle.html#pandas.Series.str.istitle
    "pandas.Series.str.istitle")() | Check whether all characters in each string are
    titlecase. |'
  id: totrans-714
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.istitle`](api/pandas.Series.str.istitle.html#pandas.Series.str.istitle
    "pandas.Series.str.istitle")() | 检查每个字符串中的所有字符是否为标题大小写。 |'
- en: '| [`Series.str.isnumeric`](api/pandas.Series.str.isnumeric.html#pandas.Series.str.isnumeric
    "pandas.Series.str.isnumeric")() | Check whether all characters in each string
    are numeric. |'
  id: totrans-715
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.isnumeric`](api/pandas.Series.str.isnumeric.html#pandas.Series.str.isnumeric
    "pandas.Series.str.isnumeric")() | 检查每个字符串中的所有字符是否为数字字符。 |'
- en: '| [`Series.str.isdecimal`](api/pandas.Series.str.isdecimal.html#pandas.Series.str.isdecimal
    "pandas.Series.str.isdecimal")() | Check whether all characters in each string
    are decimal. |'
  id: totrans-716
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.isdecimal`](api/pandas.Series.str.isdecimal.html#pandas.Series.str.isdecimal
    "pandas.Series.str.isdecimal")() | 检查每个字符串中的所有字符是否为十进制数。 |'
- en: '| [`Series.str.get_dummies`](api/pandas.Series.str.get_dummies.html#pandas.Series.str.get_dummies
    "pandas.Series.str.get_dummies")([sep]) | Return DataFrame of dummy/indicator
    variables for Series. |  ### Categorical accessor'
  id: totrans-717
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`Series.str.get_dummies`](api/pandas.Series.str.get_dummies.html#pandas.Series.str.get_dummies
    "pandas.Series.str.get_dummies")([sep]) | 返回Series的虚拟/指示变量的DataFrame。 |  ### 分类访问器'
- en: Categorical-dtype specific methods and attributes are available under the `Series.cat`
    accessor.
  id: totrans-718
  prefs: []
  type: TYPE_NORMAL
  zh: 分类数据类型特定的方法和属性可在`Series.cat`访问器下使用。
- en: '| [`Series.cat.categories`](api/pandas.Series.cat.categories.html#pandas.Series.cat.categories
    "pandas.Series.cat.categories") | The categories of this categorical. |'
  id: totrans-719
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.categories`](api/pandas.Series.cat.categories.html#pandas.Series.cat.categories
    "pandas.Series.cat.categories") | 此分类的类别。 |'
- en: '| [`Series.cat.ordered`](api/pandas.Series.cat.ordered.html#pandas.Series.cat.ordered
    "pandas.Series.cat.ordered") | Whether the categories have an ordered relationship.
    |'
  id: totrans-720
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.ordered`](api/pandas.Series.cat.ordered.html#pandas.Series.cat.ordered
    "pandas.Series.cat.ordered") | 类别是否具有有序关系。 |'
- en: '| [`Series.cat.codes`](api/pandas.Series.cat.codes.html#pandas.Series.cat.codes
    "pandas.Series.cat.codes") | Return Series of codes as well as the index. |'
  id: totrans-721
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.codes`](api/pandas.Series.cat.codes.html#pandas.Series.cat.codes
    "pandas.Series.cat.codes") | 返回代码系列以及索引。 |'
- en: '| [`Series.cat.rename_categories`](api/pandas.Series.cat.rename_categories.html#pandas.Series.cat.rename_categories
    "pandas.Series.cat.rename_categories")(*args, **kwargs) | Rename categories. |'
  id: totrans-722
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.rename_categories`](api/pandas.Series.cat.rename_categories.html#pandas.Series.cat.rename_categories
    "pandas.Series.cat.rename_categories")(*args, **kwargs) | 重命名类别。 |'
- en: '| [`Series.cat.reorder_categories`](api/pandas.Series.cat.reorder_categories.html#pandas.Series.cat.reorder_categories
    "pandas.Series.cat.reorder_categories")(*args, **kwargs) | Reorder categories
    as specified in new_categories. |'
  id: totrans-723
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.reorder_categories`](api/pandas.Series.cat.reorder_categories.html#pandas.Series.cat.reorder_categories
    "pandas.Series.cat.reorder_categories")(*args, **kwargs) | 按照新类别指定的顺序重新排序类别。 |'
- en: '| [`Series.cat.add_categories`](api/pandas.Series.cat.add_categories.html#pandas.Series.cat.add_categories
    "pandas.Series.cat.add_categories")(*args, **kwargs) | Add new categories. |'
  id: totrans-724
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.add_categories`](api/pandas.Series.cat.add_categories.html#pandas.Series.cat.add_categories
    "pandas.Series.cat.add_categories")(*args, **kwargs) | 添加新的分类。'
- en: '| [`Series.cat.remove_categories`](api/pandas.Series.cat.remove_categories.html#pandas.Series.cat.remove_categories
    "pandas.Series.cat.remove_categories")(*args, **kwargs) | Remove the specified
    categories. |'
  id: totrans-725
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.remove_categories`](api/pandas.Series.cat.remove_categories.html#pandas.Series.cat.remove_categories
    "pandas.Series.cat.remove_categories")(*args, **kwargs) | 移除指定的分类。'
- en: '| [`Series.cat.remove_unused_categories`](api/pandas.Series.cat.remove_unused_categories.html#pandas.Series.cat.remove_unused_categories
    "pandas.Series.cat.remove_unused_categories")(*args, ...) | Remove categories
    which are not used. |'
  id: totrans-726
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.remove_unused_categories`](api/pandas.Series.cat.remove_unused_categories.html#pandas.Series.cat.remove_unused_categories
    "pandas.Series.cat.remove_unused_categories")(*args, ...) | 移除未使用的分类。'
- en: '| [`Series.cat.set_categories`](api/pandas.Series.cat.set_categories.html#pandas.Series.cat.set_categories
    "pandas.Series.cat.set_categories")(*args, **kwargs) | Set the categories to the
    specified new categories. |'
  id: totrans-727
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.set_categories`](api/pandas.Series.cat.set_categories.html#pandas.Series.cat.set_categories
    "pandas.Series.cat.set_categories")(*args, **kwargs) | 将分类设置为指定的新分类。'
- en: '| [`Series.cat.as_ordered`](api/pandas.Series.cat.as_ordered.html#pandas.Series.cat.as_ordered
    "pandas.Series.cat.as_ordered")(*args, **kwargs) | Set the Categorical to be ordered.
    |'
  id: totrans-728
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.as_ordered`](api/pandas.Series.cat.as_ordered.html#pandas.Series.cat.as_ordered
    "pandas.Series.cat.as_ordered")(*args, **kwargs) | 将分类设置为有序。'
- en: '| [`Series.cat.as_unordered`](api/pandas.Series.cat.as_unordered.html#pandas.Series.cat.as_unordered
    "pandas.Series.cat.as_unordered")(*args, **kwargs) | Set the Categorical to be
    unordered. |  ### Sparse accessor'
  id: totrans-729
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`Series.cat.as_unordered`](api/pandas.Series.cat.as_unordered.html#pandas.Series.cat.as_unordered
    "pandas.Series.cat.as_unordered")(*args, **kwargs) | 将分类设置为无序。  ### 稀疏访问器'
- en: Sparse-dtype specific methods and attributes are provided under the `Series.sparse`
    accessor.
  id: totrans-730
  prefs: []
  type: TYPE_NORMAL
  zh: 稀疏数据类型特定的方法和属性可在 `Series.sparse` 访问器下找到。
- en: '| [`Series.sparse.npoints`](api/pandas.Series.sparse.npoints.html#pandas.Series.sparse.npoints
    "pandas.Series.sparse.npoints") | The number of non- `fill_value` points. |'
  id: totrans-731
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sparse.npoints`](api/pandas.Series.sparse.npoints.html#pandas.Series.sparse.npoints
    "pandas.Series.sparse.npoints") | 非 `fill_value` 点的数量。'
- en: '| [`Series.sparse.density`](api/pandas.Series.sparse.density.html#pandas.Series.sparse.density
    "pandas.Series.sparse.density") | The percent of non- `fill_value` points, as
    decimal. |'
  id: totrans-732
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sparse.density`](api/pandas.Series.sparse.density.html#pandas.Series.sparse.density
    "pandas.Series.sparse.density") | 非 `fill_value` 点的百分比，以小数表示。'
- en: '| [`Series.sparse.fill_value`](api/pandas.Series.sparse.fill_value.html#pandas.Series.sparse.fill_value
    "pandas.Series.sparse.fill_value") | Elements in data that are fill_value are
    not stored. |'
  id: totrans-733
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sparse.fill_value`](api/pandas.Series.sparse.fill_value.html#pandas.Series.sparse.fill_value
    "pandas.Series.sparse.fill_value") | 数据中的 fill_value 元素不会被存储。'
- en: '| [`Series.sparse.sp_values`](api/pandas.Series.sparse.sp_values.html#pandas.Series.sparse.sp_values
    "pandas.Series.sparse.sp_values") | An ndarray containing the non- `fill_value`
    values. |'
  id: totrans-734
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sparse.sp_values`](api/pandas.Series.sparse.sp_values.html#pandas.Series.sparse.sp_values
    "pandas.Series.sparse.sp_values") | 包含非 `fill_value` 值的 ndarray。'
- en: '| [`Series.sparse.from_coo`](api/pandas.Series.sparse.from_coo.html#pandas.Series.sparse.from_coo
    "pandas.Series.sparse.from_coo")(A[, dense_index]) | Create a Series with sparse
    values from a scipy.sparse.coo_matrix. |'
  id: totrans-735
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sparse.from_coo`](api/pandas.Series.sparse.from_coo.html#pandas.Series.sparse.from_coo
    "pandas.Series.sparse.from_coo")(A[, dense_index]) | 从 scipy.sparse.coo_matrix
    创建具有稀疏值的 Series。'
- en: '| [`Series.sparse.to_coo`](api/pandas.Series.sparse.to_coo.html#pandas.Series.sparse.to_coo
    "pandas.Series.sparse.to_coo")([row_levels, ...]) | Create a scipy.sparse.coo_matrix
    from a Series with MultiIndex. |  ### List accessor'
  id: totrans-736
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`Series.sparse.to_coo`](api/pandas.Series.sparse.to_coo.html#pandas.Series.sparse.to_coo
    "pandas.Series.sparse.to_coo")([row_levels, ...]) | 从具有 MultiIndex 的 Series 创建
    scipy.sparse.coo_matrix。  ### 列表访问器'
- en: Arrow list-dtype specific methods and attributes are provided under the `Series.list`
    accessor.
  id: totrans-737
  prefs: []
  type: TYPE_NORMAL
  zh: 箭头列表数据类型特定的方法和属性可在 `Series.list` 访问器下找到。
- en: '| [`Series.list.flatten`](api/pandas.Series.list.flatten.html#pandas.Series.list.flatten
    "pandas.Series.list.flatten")() | Flatten list values. |'
  id: totrans-738
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.list.flatten`](api/pandas.Series.list.flatten.html#pandas.Series.list.flatten
    "pandas.Series.list.flatten")() | 展平列表值。'
- en: '| [`Series.list.len`](api/pandas.Series.list.len.html#pandas.Series.list.len
    "pandas.Series.list.len")() | Return the length of each list in the Series. |'
  id: totrans-739
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.list.len`](api/pandas.Series.list.len.html#pandas.Series.list.len
    "pandas.Series.list.len")() | 返回 Series 中每个列表的长度。'
- en: '| [`Series.list.__getitem__`](api/pandas.Series.list.__getitem__.html#pandas.Series.list.__getitem__
    "pandas.Series.list.__getitem__")(key) | Index or slice lists in the Series. |  ###
    Struct accessor'
  id: totrans-740
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`Series.list.__getitem__`](api/pandas.Series.list.__getitem__.html#pandas.Series.list.__getitem__
    "pandas.Series.list.__getitem__")(key) | 在 Series 中索引或切片列表。 |  ### 结构访问器'
- en: Arrow struct-dtype specific methods and attributes are provided under the `Series.struct`
    accessor.
  id: totrans-741
  prefs: []
  type: TYPE_NORMAL
  zh: Arrow 结构 dtype 特定的方法和属性在 `Series.struct` 访问器下提供。
- en: '| [`Series.struct.dtypes`](api/pandas.Series.struct.dtypes.html#pandas.Series.struct.dtypes
    "pandas.Series.struct.dtypes") | Return the dtype object of each child field of
    the struct. |'
  id: totrans-742
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.struct.dtypes`](api/pandas.Series.struct.dtypes.html#pandas.Series.struct.dtypes
    "pandas.Series.struct.dtypes") | 返回结构的每个子字段的 dtype 对象。 |'
- en: '| [`Series.struct.field`](api/pandas.Series.struct.field.html#pandas.Series.struct.field
    "pandas.Series.struct.field")(name_or_index) | Extract a child field of a struct
    as a Series. |'
  id: totrans-743
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.struct.field`](api/pandas.Series.struct.field.html#pandas.Series.struct.field
    "pandas.Series.struct.field")(name_or_index) | 将结构的子字段提取为 Series。 |'
- en: '| [`Series.struct.explode`](api/pandas.Series.struct.explode.html#pandas.Series.struct.explode
    "pandas.Series.struct.explode")() | Extract all child fields of a struct as a
    DataFrame. |  ### Flags'
  id: totrans-744
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`Series.struct.explode`](api/pandas.Series.struct.explode.html#pandas.Series.struct.explode
    "pandas.Series.struct.explode")() | 将结构的所有子字段提取为 DataFrame。 |  ### 标志'
- en: Flags refer to attributes of the pandas object. Properties of the dataset (like
    the date is was recorded, the URL it was accessed from, etc.) should be stored
    in [`Series.attrs`](api/pandas.Series.attrs.html#pandas.Series.attrs "pandas.Series.attrs").
  id: totrans-745
  prefs: []
  type: TYPE_NORMAL
  zh: 标志指的是 pandas 对象的属性。数据集的属性（如记录日期、访问的 URL 等）应存储在 [`Series.attrs`](api/pandas.Series.attrs.html#pandas.Series.attrs
    "pandas.Series.attrs") 中。
- en: '| [`Flags`](api/pandas.Flags.html#pandas.Flags "pandas.Flags")(obj, *, allows_duplicate_labels)
    | Flags that apply to pandas objects. |  ### Metadata'
  id: totrans-746
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`Flags`](api/pandas.Flags.html#pandas.Flags "pandas.Flags")(obj, *, allows_duplicate_labels)
    | 适用于 pandas 对象的标志。 |  ### 元数据'
- en: '[`Series.attrs`](api/pandas.Series.attrs.html#pandas.Series.attrs "pandas.Series.attrs")
    is a dictionary for storing global metadata for this Series.'
  id: totrans-747
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Series.attrs`](api/pandas.Series.attrs.html#pandas.Series.attrs "pandas.Series.attrs")
    是一个用于存储此 Series 的全局元数据的字典。'
- en: Warning
  id: totrans-748
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: '`Series.attrs` is considered experimental and may change without warning.'
  id: totrans-749
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series.attrs` 被视为实验性的，可能会在没有警告的情况下更改。'
- en: '| [`Series.attrs`](api/pandas.Series.attrs.html#pandas.Series.attrs "pandas.Series.attrs")
    | Dictionary of global attributes of this dataset. |  ### Datetimelike properties'
  id: totrans-750
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`Series.attrs`](api/pandas.Series.attrs.html#pandas.Series.attrs "pandas.Series.attrs")
    | 此数据集的全局属性字典。 |  ### 日期时间属性'
- en: '`Series.dt` can be used to access the values of the series as datetimelike
    and return several properties. These can be accessed like `Series.dt.<property>`.'
  id: totrans-751
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series.dt` 可用于访问系列的日期时间值并返回多个属性。这些可以像 `Series.dt.<property>` 这样访问。'
- en: Datetime properties
  id: totrans-752
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 日期时间属性
- en: '| [`Series.dt.date`](api/pandas.Series.dt.date.html#pandas.Series.dt.date "pandas.Series.dt.date")
    | Returns numpy array of python [`datetime.date`](https://docs.python.org/3/library/datetime.html#datetime.date
    "(in Python v3.12)") objects. |'
  id: totrans-753
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.date`](api/pandas.Series.dt.date.html#pandas.Series.dt.date "pandas.Series.dt.date")
    | 返回 python 的 numpy 数组[`datetime.date`](https://docs.python.org/3/library/datetime.html#datetime.date
    "(在 Python v3.12 中)")对象。 |'
- en: '| [`Series.dt.time`](api/pandas.Series.dt.time.html#pandas.Series.dt.time "pandas.Series.dt.time")
    | Returns numpy array of [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(in Python v3.12)") objects. |'
  id: totrans-754
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.time`](api/pandas.Series.dt.time.html#pandas.Series.dt.time "pandas.Series.dt.time")
    | 返回带有时区的[`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(在 Python v3.12 中)")对象的 numpy 数组。 |'
- en: '| [`Series.dt.timetz`](api/pandas.Series.dt.timetz.html#pandas.Series.dt.timetz
    "pandas.Series.dt.timetz") | Returns numpy array of [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(in Python v3.12)") objects with timezones. |'
  id: totrans-755
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.timetz`](api/pandas.Series.dt.timetz.html#pandas.Series.dt.timetz
    "pandas.Series.dt.timetz") | 返回带有时区的[`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(在 Python v3.12 中)")对象的 numpy 数组。 |'
- en: '| [`Series.dt.year`](api/pandas.Series.dt.year.html#pandas.Series.dt.year "pandas.Series.dt.year")
    | The year of the datetime. |'
  id: totrans-756
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.year`](api/pandas.Series.dt.year.html#pandas.Series.dt.year "pandas.Series.dt.year")
    | 日期时间的年份。 |'
- en: '| [`Series.dt.month`](api/pandas.Series.dt.month.html#pandas.Series.dt.month
    "pandas.Series.dt.month") | The month as January=1, December=12. |'
  id: totrans-757
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.month`](api/pandas.Series.dt.month.html#pandas.Series.dt.month
    "pandas.Series.dt.month") | 月份，一月为1，十二月为12。 |'
- en: '| [`Series.dt.day`](api/pandas.Series.dt.day.html#pandas.Series.dt.day "pandas.Series.dt.day")
    | The day of the datetime. |'
  id: totrans-758
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.day`](api/pandas.Series.dt.day.html#pandas.Series.dt.day "pandas.Series.dt.day")
    | 日期时间的日期。 |'
- en: '| [`Series.dt.hour`](api/pandas.Series.dt.hour.html#pandas.Series.dt.hour "pandas.Series.dt.hour")
    | The hours of the datetime. |'
  id: totrans-759
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.hour`](api/pandas.Series.dt.hour.html#pandas.Series.dt.hour "pandas.Series.dt.hour")
    | 日期时间的小时。 |'
- en: '| [`Series.dt.minute`](api/pandas.Series.dt.minute.html#pandas.Series.dt.minute
    "pandas.Series.dt.minute") | The minutes of the datetime. |'
  id: totrans-760
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.minute`](api/pandas.Series.dt.minute.html#pandas.Series.dt.minute
    "pandas.Series.dt.minute") | 日期时间的分钟。 |'
- en: '| [`Series.dt.second`](api/pandas.Series.dt.second.html#pandas.Series.dt.second
    "pandas.Series.dt.second") | The seconds of the datetime. |'
  id: totrans-761
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.second`](api/pandas.Series.dt.second.html#pandas.Series.dt.second
    "pandas.Series.dt.second") | 日期时间的秒。 |'
- en: '| [`Series.dt.microsecond`](api/pandas.Series.dt.microsecond.html#pandas.Series.dt.microsecond
    "pandas.Series.dt.microsecond") | The microseconds of the datetime. |'
  id: totrans-762
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.microsecond`](api/pandas.Series.dt.microsecond.html#pandas.Series.dt.microsecond
    "pandas.Series.dt.microsecond") | 日期时间的微秒。 |'
- en: '| [`Series.dt.nanosecond`](api/pandas.Series.dt.nanosecond.html#pandas.Series.dt.nanosecond
    "pandas.Series.dt.nanosecond") | The nanoseconds of the datetime. |'
  id: totrans-763
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.nanosecond`](api/pandas.Series.dt.nanosecond.html#pandas.Series.dt.nanosecond
    "pandas.Series.dt.nanosecond") | 日期时间的纳秒。 |'
- en: '| [`Series.dt.dayofweek`](api/pandas.Series.dt.dayofweek.html#pandas.Series.dt.dayofweek
    "pandas.Series.dt.dayofweek") | The day of the week with Monday=0, Sunday=6. |'
  id: totrans-764
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.dayofweek`](api/pandas.Series.dt.dayofweek.html#pandas.Series.dt.dayofweek
    "pandas.Series.dt.dayofweek") | 一周中的日期，星期一=0，星期日=6。 |'
- en: '| [`Series.dt.day_of_week`](api/pandas.Series.dt.day_of_week.html#pandas.Series.dt.day_of_week
    "pandas.Series.dt.day_of_week") | The day of the week with Monday=0, Sunday=6.
    |'
  id: totrans-765
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.day_of_week`](api/pandas.Series.dt.day_of_week.html#pandas.Series.dt.day_of_week
    "pandas.Series.dt.day_of_week") | 一周中的日期，星期一=0，星期日=6。 |'
- en: '| [`Series.dt.weekday`](api/pandas.Series.dt.weekday.html#pandas.Series.dt.weekday
    "pandas.Series.dt.weekday") | The day of the week with Monday=0, Sunday=6. |'
  id: totrans-766
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.weekday`](api/pandas.Series.dt.weekday.html#pandas.Series.dt.weekday
    "pandas.Series.dt.weekday") | 一周中的日期，星期一=0，星期日=6。 |'
- en: '| [`Series.dt.dayofyear`](api/pandas.Series.dt.dayofyear.html#pandas.Series.dt.dayofyear
    "pandas.Series.dt.dayofyear") | The ordinal day of the year. |'
  id: totrans-767
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.dayofyear`](api/pandas.Series.dt.dayofyear.html#pandas.Series.dt.dayofyear
    "pandas.Series.dt.dayofyear") | 一年中的日期序数。 |'
- en: '| [`Series.dt.day_of_year`](api/pandas.Series.dt.day_of_year.html#pandas.Series.dt.day_of_year
    "pandas.Series.dt.day_of_year") | The ordinal day of the year. |'
  id: totrans-768
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.day_of_year`](api/pandas.Series.dt.day_of_year.html#pandas.Series.dt.day_of_year
    "pandas.Series.dt.day_of_year") | 一年中的日期序数。 |'
- en: '| [`Series.dt.days_in_month`](api/pandas.Series.dt.days_in_month.html#pandas.Series.dt.days_in_month
    "pandas.Series.dt.days_in_month") | The number of days in the month. |'
  id: totrans-769
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.days_in_month`](api/pandas.Series.dt.days_in_month.html#pandas.Series.dt.days_in_month
    "pandas.Series.dt.days_in_month") | 月份的天数。 |'
- en: '| [`Series.dt.quarter`](api/pandas.Series.dt.quarter.html#pandas.Series.dt.quarter
    "pandas.Series.dt.quarter") | The quarter of the date. |'
  id: totrans-770
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.quarter`](api/pandas.Series.dt.quarter.html#pandas.Series.dt.quarter
    "pandas.Series.dt.quarter") | 日期的季度。 |'
- en: '| [`Series.dt.is_month_start`](api/pandas.Series.dt.is_month_start.html#pandas.Series.dt.is_month_start
    "pandas.Series.dt.is_month_start") | Indicates whether the date is the first day
    of the month. |'
  id: totrans-771
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_month_start`](api/pandas.Series.dt.is_month_start.html#pandas.Series.dt.is_month_start
    "pandas.Series.dt.is_month_start") | 表示日期是否为月初。 |'
- en: '| [`Series.dt.is_month_end`](api/pandas.Series.dt.is_month_end.html#pandas.Series.dt.is_month_end
    "pandas.Series.dt.is_month_end") | Indicates whether the date is the last day
    of the month. |'
  id: totrans-772
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_month_end`](api/pandas.Series.dt.is_month_end.html#pandas.Series.dt.is_month_end
    "pandas.Series.dt.is_month_end") | 表示日期是否为月末。 |'
- en: '| [`Series.dt.is_quarter_start`](api/pandas.Series.dt.is_quarter_start.html#pandas.Series.dt.is_quarter_start
    "pandas.Series.dt.is_quarter_start") | Indicator for whether the date is the first
    day of a quarter. |'
  id: totrans-773
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_quarter_start`](api/pandas.Series.dt.is_quarter_start.html#pandas.Series.dt.is_quarter_start
    "pandas.Series.dt.is_quarter_start") | 表示日期是否为季度初。 |'
- en: '| [`Series.dt.is_quarter_end`](api/pandas.Series.dt.is_quarter_end.html#pandas.Series.dt.is_quarter_end
    "pandas.Series.dt.is_quarter_end") | Indicator for whether the date is the last
    day of a quarter. |'
  id: totrans-774
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_quarter_end`](api/pandas.Series.dt.is_quarter_end.html#pandas.Series.dt.is_quarter_end
    "pandas.Series.dt.is_quarter_end") | 表示日期是否为季度末。 |'
- en: '| [`Series.dt.is_year_start`](api/pandas.Series.dt.is_year_start.html#pandas.Series.dt.is_year_start
    "pandas.Series.dt.is_year_start") | Indicate whether the date is the first day
    of a year. |'
  id: totrans-775
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_year_start`](api/pandas.Series.dt.is_year_start.html#pandas.Series.dt.is_year_start
    "pandas.Series.dt.is_year_start") | 表示日期是否为年初。 |'
- en: '| [`Series.dt.is_year_end`](api/pandas.Series.dt.is_year_end.html#pandas.Series.dt.is_year_end
    "pandas.Series.dt.is_year_end") | Indicate whether the date is the last day of
    the year. |'
  id: totrans-776
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_year_end`](api/pandas.Series.dt.is_year_end.html#pandas.Series.dt.is_year_end
    "pandas.Series.dt.is_year_end") | 指示日期是否为年底。 |'
- en: '| [`Series.dt.is_leap_year`](api/pandas.Series.dt.is_leap_year.html#pandas.Series.dt.is_leap_year
    "pandas.Series.dt.is_leap_year") | Boolean indicator if the date belongs to a
    leap year. |'
  id: totrans-777
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_leap_year`](api/pandas.Series.dt.is_leap_year.html#pandas.Series.dt.is_leap_year
    "pandas.Series.dt.is_leap_year") | 布尔值指示日期是否属于闰年。 |'
- en: '| [`Series.dt.daysinmonth`](api/pandas.Series.dt.daysinmonth.html#pandas.Series.dt.daysinmonth
    "pandas.Series.dt.daysinmonth") | The number of days in the month. |'
  id: totrans-778
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.daysinmonth`](api/pandas.Series.dt.daysinmonth.html#pandas.Series.dt.daysinmonth
    "pandas.Series.dt.daysinmonth") | 该月的天数。 |'
- en: '| [`Series.dt.days_in_month`](api/pandas.Series.dt.days_in_month.html#pandas.Series.dt.days_in_month
    "pandas.Series.dt.days_in_month") | The number of days in the month. |'
  id: totrans-779
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.days_in_month`](api/pandas.Series.dt.days_in_month.html#pandas.Series.dt.days_in_month
    "pandas.Series.dt.days_in_month") | 该月的天数。 |'
- en: '| [`Series.dt.tz`](api/pandas.Series.dt.tz.html#pandas.Series.dt.tz "pandas.Series.dt.tz")
    | Return the timezone. |'
  id: totrans-780
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.tz`](api/pandas.Series.dt.tz.html#pandas.Series.dt.tz "pandas.Series.dt.tz")
    | 返回时区。 |'
- en: '| [`Series.dt.freq`](api/pandas.Series.dt.freq.html#pandas.Series.dt.freq "pandas.Series.dt.freq")
    | Return the frequency object for this PeriodArray. |'
  id: totrans-781
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.freq`](api/pandas.Series.dt.freq.html#pandas.Series.dt.freq "pandas.Series.dt.freq")
    | 返回此 PeriodArray 的频率对象。 |'
- en: '| [`Series.dt.unit`](api/pandas.Series.dt.unit.html#pandas.Series.dt.unit "pandas.Series.dt.unit")
    |  |'
  id: totrans-782
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.unit`](api/pandas.Series.dt.unit.html#pandas.Series.dt.unit "pandas.Series.dt.unit")
    |  |'
- en: Datetime methods
  id: totrans-783
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 日期时间方法
- en: '| [`Series.dt.isocalendar`](api/pandas.Series.dt.isocalendar.html#pandas.Series.dt.isocalendar
    "pandas.Series.dt.isocalendar")() | Calculate year, week, and day according to
    the ISO 8601 standard. |'
  id: totrans-784
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.isocalendar`](api/pandas.Series.dt.isocalendar.html#pandas.Series.dt.isocalendar
    "pandas.Series.dt.isocalendar")() | 根据 ISO 8601 标准计算年、周和日。 |'
- en: '| [`Series.dt.to_period`](api/pandas.Series.dt.to_period.html#pandas.Series.dt.to_period
    "pandas.Series.dt.to_period")(*args, **kwargs) | Cast to PeriodArray/PeriodIndex
    at a particular frequency. |'
  id: totrans-785
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.to_period`](api/pandas.Series.dt.to_period.html#pandas.Series.dt.to_period
    "pandas.Series.dt.to_period")(*args, **kwargs) | 转换为特定频率的 PeriodArray/PeriodIndex。
    |'
- en: '| [`Series.dt.to_pydatetime`](api/pandas.Series.dt.to_pydatetime.html#pandas.Series.dt.to_pydatetime
    "pandas.Series.dt.to_pydatetime")() | (DEPRECATED) Return the data as an array
    of [`datetime.datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime
    "(in Python v3.12)") objects. |'
  id: totrans-786
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.to_pydatetime`](api/pandas.Series.dt.to_pydatetime.html#pandas.Series.dt.to_pydatetime
    "pandas.Series.dt.to_pydatetime")() | (已弃用) 将数据返回为 [`datetime.datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime
    "(在 Python v3.12)") 对象的数组。 |'
- en: '| [`Series.dt.tz_localize`](api/pandas.Series.dt.tz_localize.html#pandas.Series.dt.tz_localize
    "pandas.Series.dt.tz_localize")(*args, **kwargs) | Localize tz-naive Datetime
    Array/Index to tz-aware Datetime Array/Index. |'
  id: totrans-787
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.tz_localize`](api/pandas.Series.dt.tz_localize.html#pandas.Series.dt.tz_localize
    "pandas.Series.dt.tz_localize")(*args, **kwargs) | 将 tz-naive 的日期时间数组/索引本地化为 tz-aware
    的日期时间数组/索引。 |'
- en: '| [`Series.dt.tz_convert`](api/pandas.Series.dt.tz_convert.html#pandas.Series.dt.tz_convert
    "pandas.Series.dt.tz_convert")(*args, **kwargs) | Convert tz-aware Datetime Array/Index
    from one time zone to another. |'
  id: totrans-788
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.tz_convert`](api/pandas.Series.dt.tz_convert.html#pandas.Series.dt.tz_convert
    "pandas.Series.dt.tz_convert")(*args, **kwargs) | 将来自一个时区的 tz-aware 的日期时间数组/索引转换为另一个时区。
    |'
- en: '| [`Series.dt.normalize`](api/pandas.Series.dt.normalize.html#pandas.Series.dt.normalize
    "pandas.Series.dt.normalize")(*args, **kwargs) | Convert times to midnight. |'
  id: totrans-789
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.normalize`](api/pandas.Series.dt.normalize.html#pandas.Series.dt.normalize
    "pandas.Series.dt.normalize")(*args, **kwargs) | 将时间转换为午夜。 |'
- en: '| [`Series.dt.strftime`](api/pandas.Series.dt.strftime.html#pandas.Series.dt.strftime
    "pandas.Series.dt.strftime")(*args, **kwargs) | Convert to Index using specified
    date_format. |'
  id: totrans-790
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.strftime`](api/pandas.Series.dt.strftime.html#pandas.Series.dt.strftime
    "pandas.Series.dt.strftime")(*args, **kwargs) | 使用指定的日期格式转换为索引。 |'
- en: '| [`Series.dt.round`](api/pandas.Series.dt.round.html#pandas.Series.dt.round
    "pandas.Series.dt.round")(*args, **kwargs) | Perform round operation on the data
    to the specified freq. |'
  id: totrans-791
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.round`](api/pandas.Series.dt.round.html#pandas.Series.dt.round
    "pandas.Series.dt.round")(*args, **kwargs) | 对数据执行指定频率的四舍五入操作。 |'
- en: '| [`Series.dt.floor`](api/pandas.Series.dt.floor.html#pandas.Series.dt.floor
    "pandas.Series.dt.floor")(*args, **kwargs) | Perform floor operation on the data
    to the specified freq. |'
  id: totrans-792
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.floor`](api/pandas.Series.dt.floor.html#pandas.Series.dt.floor
    "pandas.Series.dt.floor")(*args, **kwargs) | 对数据执行指定频率的向下取整操作。 |'
- en: '| [`Series.dt.ceil`](api/pandas.Series.dt.ceil.html#pandas.Series.dt.ceil "pandas.Series.dt.ceil")(*args, **kwargs)
    | Perform ceil operation on the data to the specified freq. |'
  id: totrans-793
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.ceil`](api/pandas.Series.dt.ceil.html#pandas.Series.dt.ceil "pandas.Series.dt.ceil")(*args, **kwargs)
    | 对数据执行向上取整操作到指定的频率。'
- en: '| [`Series.dt.month_name`](api/pandas.Series.dt.month_name.html#pandas.Series.dt.month_name
    "pandas.Series.dt.month_name")(*args, **kwargs) | Return the month names with
    specified locale. |'
  id: totrans-794
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.month_name`](api/pandas.Series.dt.month_name.html#pandas.Series.dt.month_name
    "pandas.Series.dt.month_name")(*args, **kwargs) | 返回指定语言环境下的月份名称。'
- en: '| [`Series.dt.day_name`](api/pandas.Series.dt.day_name.html#pandas.Series.dt.day_name
    "pandas.Series.dt.day_name")(*args, **kwargs) | Return the day names with specified
    locale. |'
  id: totrans-795
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.day_name`](api/pandas.Series.dt.day_name.html#pandas.Series.dt.day_name
    "pandas.Series.dt.day_name")(*args, **kwargs) | 返回指定语言环境下的星期几名称。'
- en: '| [`Series.dt.as_unit`](api/pandas.Series.dt.as_unit.html#pandas.Series.dt.as_unit
    "pandas.Series.dt.as_unit")(*args, **kwargs) |  |'
  id: totrans-796
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.as_unit`](api/pandas.Series.dt.as_unit.html#pandas.Series.dt.as_unit
    "pandas.Series.dt.as_unit")(*args, **kwargs) |  |'
- en: Period properties
  id: totrans-797
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 时期属性
- en: '| [`Series.dt.qyear`](api/pandas.Series.dt.qyear.html#pandas.Series.dt.qyear
    "pandas.Series.dt.qyear") |  |'
  id: totrans-798
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.qyear`](api/pandas.Series.dt.qyear.html#pandas.Series.dt.qyear
    "pandas.Series.dt.qyear") |  |'
- en: '| [`Series.dt.start_time`](api/pandas.Series.dt.start_time.html#pandas.Series.dt.start_time
    "pandas.Series.dt.start_time") | Get the Timestamp for the start of the period.
    |'
  id: totrans-799
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.start_time`](api/pandas.Series.dt.start_time.html#pandas.Series.dt.start_time
    "pandas.Series.dt.start_time") | 获取周期开始时的时间戳。'
- en: '| [`Series.dt.end_time`](api/pandas.Series.dt.end_time.html#pandas.Series.dt.end_time
    "pandas.Series.dt.end_time") | Get the Timestamp for the end of the period. |'
  id: totrans-800
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.end_time`](api/pandas.Series.dt.end_time.html#pandas.Series.dt.end_time
    "pandas.Series.dt.end_time") | 获取周期结束时的时间戳。'
- en: Timedelta properties
  id: totrans-801
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 时间差属性
- en: '| [`Series.dt.days`](api/pandas.Series.dt.days.html#pandas.Series.dt.days "pandas.Series.dt.days")
    | Number of days for each element. |'
  id: totrans-802
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.days`](api/pandas.Series.dt.days.html#pandas.Series.dt.days "pandas.Series.dt.days")
    | 每个元素的天数。'
- en: '| [`Series.dt.seconds`](api/pandas.Series.dt.seconds.html#pandas.Series.dt.seconds
    "pandas.Series.dt.seconds") | Number of seconds (>= 0 and less than 1 day) for
    each element. |'
  id: totrans-803
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.seconds`](api/pandas.Series.dt.seconds.html#pandas.Series.dt.seconds
    "pandas.Series.dt.seconds") | 每个元素的秒数（>= 0 且小于1天）。'
- en: '| [`Series.dt.microseconds`](api/pandas.Series.dt.microseconds.html#pandas.Series.dt.microseconds
    "pandas.Series.dt.microseconds") | Number of microseconds (>= 0 and less than
    1 second) for each element. |'
  id: totrans-804
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.microseconds`](api/pandas.Series.dt.microseconds.html#pandas.Series.dt.microseconds
    "pandas.Series.dt.microseconds") | 每个元素的微秒数（>= 0 且小于1秒）。'
- en: '| [`Series.dt.nanoseconds`](api/pandas.Series.dt.nanoseconds.html#pandas.Series.dt.nanoseconds
    "pandas.Series.dt.nanoseconds") | Number of nanoseconds (>= 0 and less than 1
    microsecond) for each element. |'
  id: totrans-805
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.nanoseconds`](api/pandas.Series.dt.nanoseconds.html#pandas.Series.dt.nanoseconds
    "pandas.Series.dt.nanoseconds") | 每个元素的纳秒数（>= 0 且小于1微秒）。'
- en: '| [`Series.dt.components`](api/pandas.Series.dt.components.html#pandas.Series.dt.components
    "pandas.Series.dt.components") | Return a Dataframe of the components of the Timedeltas.
    |'
  id: totrans-806
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.components`](api/pandas.Series.dt.components.html#pandas.Series.dt.components
    "pandas.Series.dt.components") | 返回时间差的各个组成部分的数据框。'
- en: '| [`Series.dt.unit`](api/pandas.Series.dt.unit.html#pandas.Series.dt.unit "pandas.Series.dt.unit")
    |  |'
  id: totrans-807
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.unit`](api/pandas.Series.dt.unit.html#pandas.Series.dt.unit "pandas.Series.dt.unit")
    |  |'
- en: Timedelta methods
  id: totrans-808
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 时间差方法
- en: '| [`Series.dt.to_pytimedelta`](api/pandas.Series.dt.to_pytimedelta.html#pandas.Series.dt.to_pytimedelta
    "pandas.Series.dt.to_pytimedelta")() | Return an array of native [`datetime.timedelta`](https://docs.python.org/3/library/datetime.html#datetime.timedelta
    "(in Python v3.12)") objects. |'
  id: totrans-809
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.to_pytimedelta`](api/pandas.Series.dt.to_pytimedelta.html#pandas.Series.dt.to_pytimedelta
    "pandas.Series.dt.to_pytimedelta")() | 返回一个由本地[`datetime.timedelta`](https://docs.python.org/3/library/datetime.html#datetime.timedelta
    "(在 Python v3.12 中)")对象组成的数组。'
- en: '| [`Series.dt.total_seconds`](api/pandas.Series.dt.total_seconds.html#pandas.Series.dt.total_seconds
    "pandas.Series.dt.total_seconds")(*args, **kwargs) | Return total duration of
    each element expressed in seconds. |'
  id: totrans-810
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.total_seconds`](api/pandas.Series.dt.total_seconds.html#pandas.Series.dt.total_seconds
    "pandas.Series.dt.total_seconds")(*args, **kwargs) | 返回每个元素表示的总持续时间（以秒为单位）。'
- en: '| [`Series.dt.as_unit`](api/pandas.Series.dt.as_unit.html#pandas.Series.dt.as_unit
    "pandas.Series.dt.as_unit")(*args, **kwargs) |  |'
  id: totrans-811
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.as_unit`](api/pandas.Series.dt.as_unit.html#pandas.Series.dt.as_unit
    "pandas.Series.dt.as_unit")(*args, **kwargs) |  |'
- en: Datetime properties
  id: totrans-812
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 日期时间属性
- en: '| [`Series.dt.date`](api/pandas.Series.dt.date.html#pandas.Series.dt.date "pandas.Series.dt.date")
    | Returns numpy array of python [`datetime.date`](https://docs.python.org/3/library/datetime.html#datetime.date
    "(in Python v3.12)") objects. |'
  id: totrans-813
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.date`](api/pandas.Series.dt.date.html#pandas.Series.dt.date "pandas.Series.dt.date")
    | 返回带有python [`datetime.date`](https://docs.python.org/3/library/datetime.html#datetime.date
    "(在Python v3.12中)")对象的numpy数组。 |'
- en: '| [`Series.dt.time`](api/pandas.Series.dt.time.html#pandas.Series.dt.time "pandas.Series.dt.time")
    | Returns numpy array of [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(in Python v3.12)") objects. |'
  id: totrans-814
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.time`](api/pandas.Series.dt.time.html#pandas.Series.dt.time "pandas.Series.dt.time")
    | 返回带有[`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(在Python v3.12中)")对象的numpy数组。 |'
- en: '| [`Series.dt.timetz`](api/pandas.Series.dt.timetz.html#pandas.Series.dt.timetz
    "pandas.Series.dt.timetz") | Returns numpy array of [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(in Python v3.12)") objects with timezones. |'
  id: totrans-815
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.timetz`](api/pandas.Series.dt.timetz.html#pandas.Series.dt.timetz
    "pandas.Series.dt.timetz") | 返回带有时区的[`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(在Python v3.12中)")对象的numpy数组。 |'
- en: '| [`Series.dt.year`](api/pandas.Series.dt.year.html#pandas.Series.dt.year "pandas.Series.dt.year")
    | The year of the datetime. |'
  id: totrans-816
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.year`](api/pandas.Series.dt.year.html#pandas.Series.dt.year "pandas.Series.dt.year")
    | 日期的年份。 |'
- en: '| [`Series.dt.month`](api/pandas.Series.dt.month.html#pandas.Series.dt.month
    "pandas.Series.dt.month") | The month as January=1, December=12. |'
  id: totrans-817
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.month`](api/pandas.Series.dt.month.html#pandas.Series.dt.month
    "pandas.Series.dt.month") | 月份，一月为1，十二月为12。 |'
- en: '| [`Series.dt.day`](api/pandas.Series.dt.day.html#pandas.Series.dt.day "pandas.Series.dt.day")
    | The day of the datetime. |'
  id: totrans-818
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.day`](api/pandas.Series.dt.day.html#pandas.Series.dt.day "pandas.Series.dt.day")
    | 日期的日。 |'
- en: '| [`Series.dt.hour`](api/pandas.Series.dt.hour.html#pandas.Series.dt.hour "pandas.Series.dt.hour")
    | The hours of the datetime. |'
  id: totrans-819
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.hour`](api/pandas.Series.dt.hour.html#pandas.Series.dt.hour "pandas.Series.dt.hour")
    | 日期的小时。 |'
- en: '| [`Series.dt.minute`](api/pandas.Series.dt.minute.html#pandas.Series.dt.minute
    "pandas.Series.dt.minute") | The minutes of the datetime. |'
  id: totrans-820
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.minute`](api/pandas.Series.dt.minute.html#pandas.Series.dt.minute
    "pandas.Series.dt.minute") | 日期的分钟。 |'
- en: '| [`Series.dt.second`](api/pandas.Series.dt.second.html#pandas.Series.dt.second
    "pandas.Series.dt.second") | The seconds of the datetime. |'
  id: totrans-821
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.second`](api/pandas.Series.dt.second.html#pandas.Series.dt.second
    "pandas.Series.dt.second") | 日期的秒。 |'
- en: '| [`Series.dt.microsecond`](api/pandas.Series.dt.microsecond.html#pandas.Series.dt.microsecond
    "pandas.Series.dt.microsecond") | The microseconds of the datetime. |'
  id: totrans-822
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.microsecond`](api/pandas.Series.dt.microsecond.html#pandas.Series.dt.microsecond
    "pandas.Series.dt.microsecond") | 日期的微秒。 |'
- en: '| [`Series.dt.nanosecond`](api/pandas.Series.dt.nanosecond.html#pandas.Series.dt.nanosecond
    "pandas.Series.dt.nanosecond") | The nanoseconds of the datetime. |'
  id: totrans-823
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.nanosecond`](api/pandas.Series.dt.nanosecond.html#pandas.Series.dt.nanosecond
    "pandas.Series.dt.nanosecond") | 日期的纳秒。 |'
- en: '| [`Series.dt.dayofweek`](api/pandas.Series.dt.dayofweek.html#pandas.Series.dt.dayofweek
    "pandas.Series.dt.dayofweek") | The day of the week with Monday=0, Sunday=6. |'
  id: totrans-824
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.dayofweek`](api/pandas.Series.dt.dayofweek.html#pandas.Series.dt.dayofweek
    "pandas.Series.dt.dayofweek") | 一周中的第几天，星期一为0，星期日为6。 |'
- en: '| [`Series.dt.day_of_week`](api/pandas.Series.dt.day_of_week.html#pandas.Series.dt.day_of_week
    "pandas.Series.dt.day_of_week") | The day of the week with Monday=0, Sunday=6.
    |'
  id: totrans-825
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.day_of_week`](api/pandas.Series.dt.day_of_week.html#pandas.Series.dt.day_of_week
    "pandas.Series.dt.day_of_week") | 一周中的第几天，星期一为0，星期日为6。 |'
- en: '| [`Series.dt.weekday`](api/pandas.Series.dt.weekday.html#pandas.Series.dt.weekday
    "pandas.Series.dt.weekday") | The day of the week with Monday=0, Sunday=6. |'
  id: totrans-826
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.weekday`](api/pandas.Series.dt.weekday.html#pandas.Series.dt.weekday
    "pandas.Series.dt.weekday") | 一周中的第几天，星期一为0，星期日为6。 |'
- en: '| [`Series.dt.dayofyear`](api/pandas.Series.dt.dayofyear.html#pandas.Series.dt.dayofyear
    "pandas.Series.dt.dayofyear") | The ordinal day of the year. |'
  id: totrans-827
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.dayofyear`](api/pandas.Series.dt.dayofyear.html#pandas.Series.dt.dayofyear
    "pandas.Series.dt.dayofyear") | 一年中的第几天。 |'
- en: '| [`Series.dt.day_of_year`](api/pandas.Series.dt.day_of_year.html#pandas.Series.dt.day_of_year
    "pandas.Series.dt.day_of_year") | The ordinal day of the year. |'
  id: totrans-828
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.day_of_year`](api/pandas.Series.dt.day_of_year.html#pandas.Series.dt.day_of_year
    "pandas.Series.dt.day_of_year") | 一年中的第几天。 |'
- en: '| [`Series.dt.days_in_month`](api/pandas.Series.dt.days_in_month.html#pandas.Series.dt.days_in_month
    "pandas.Series.dt.days_in_month") | The number of days in the month. |'
  id: totrans-829
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.days_in_month`](api/pandas.Series.dt.days_in_month.html#pandas.Series.dt.days_in_month
    "pandas.Series.dt.days_in_month") | 月份的天数。 |'
- en: '| [`Series.dt.quarter`](api/pandas.Series.dt.quarter.html#pandas.Series.dt.quarter
    "pandas.Series.dt.quarter") | The quarter of the date. |'
  id: totrans-830
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.quarter`](api/pandas.Series.dt.quarter.html#pandas.Series.dt.quarter
    "pandas.Series.dt.quarter") | 日期的季度。 |'
- en: '| [`Series.dt.is_month_start`](api/pandas.Series.dt.is_month_start.html#pandas.Series.dt.is_month_start
    "pandas.Series.dt.is_month_start") | Indicates whether the date is the first day
    of the month. |'
  id: totrans-831
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_month_start`](api/pandas.Series.dt.is_month_start.html#pandas.Series.dt.is_month_start
    "pandas.Series.dt.is_month_start") | 指示日期是否为一个月的第一天。 |'
- en: '| [`Series.dt.is_month_end`](api/pandas.Series.dt.is_month_end.html#pandas.Series.dt.is_month_end
    "pandas.Series.dt.is_month_end") | Indicates whether the date is the last day
    of the month. |'
  id: totrans-832
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_month_end`](api/pandas.Series.dt.is_month_end.html#pandas.Series.dt.is_month_end
    "pandas.Series.dt.is_month_end") | 指示日期是否为一个月的最后一天。 |'
- en: '| [`Series.dt.is_quarter_start`](api/pandas.Series.dt.is_quarter_start.html#pandas.Series.dt.is_quarter_start
    "pandas.Series.dt.is_quarter_start") | Indicator for whether the date is the first
    day of a quarter. |'
  id: totrans-833
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_quarter_start`](api/pandas.Series.dt.is_quarter_start.html#pandas.Series.dt.is_quarter_start
    "pandas.Series.dt.is_quarter_start") | 指示日期是否为一个季度的第一天。 |'
- en: '| [`Series.dt.is_quarter_end`](api/pandas.Series.dt.is_quarter_end.html#pandas.Series.dt.is_quarter_end
    "pandas.Series.dt.is_quarter_end") | Indicator for whether the date is the last
    day of a quarter. |'
  id: totrans-834
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_quarter_end`](api/pandas.Series.dt.is_quarter_end.html#pandas.Series.dt.is_quarter_end
    "pandas.Series.dt.is_quarter_end") | 指示日期是否为一个季度的最后一天。 |'
- en: '| [`Series.dt.is_year_start`](api/pandas.Series.dt.is_year_start.html#pandas.Series.dt.is_year_start
    "pandas.Series.dt.is_year_start") | Indicate whether the date is the first day
    of a year. |'
  id: totrans-835
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_year_start`](api/pandas.Series.dt.is_year_start.html#pandas.Series.dt.is_year_start
    "pandas.Series.dt.is_year_start") | 指示日期是否为一年的第一天。 |'
- en: '| [`Series.dt.is_year_end`](api/pandas.Series.dt.is_year_end.html#pandas.Series.dt.is_year_end
    "pandas.Series.dt.is_year_end") | Indicate whether the date is the last day of
    the year. |'
  id: totrans-836
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_year_end`](api/pandas.Series.dt.is_year_end.html#pandas.Series.dt.is_year_end
    "pandas.Series.dt.is_year_end") | 指示日期是否为一年的最后一天。 |'
- en: '| [`Series.dt.is_leap_year`](api/pandas.Series.dt.is_leap_year.html#pandas.Series.dt.is_leap_year
    "pandas.Series.dt.is_leap_year") | Boolean indicator if the date belongs to a
    leap year. |'
  id: totrans-837
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.is_leap_year`](api/pandas.Series.dt.is_leap_year.html#pandas.Series.dt.is_leap_year
    "pandas.Series.dt.is_leap_year") | 布尔指示器，指示日期是否属于闰年。 |'
- en: '| [`Series.dt.daysinmonth`](api/pandas.Series.dt.daysinmonth.html#pandas.Series.dt.daysinmonth
    "pandas.Series.dt.daysinmonth") | The number of days in the month. |'
  id: totrans-838
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.daysinmonth`](api/pandas.Series.dt.daysinmonth.html#pandas.Series.dt.daysinmonth
    "pandas.Series.dt.daysinmonth") | 月份中的天数。 |'
- en: '| [`Series.dt.days_in_month`](api/pandas.Series.dt.days_in_month.html#pandas.Series.dt.days_in_month
    "pandas.Series.dt.days_in_month") | The number of days in the month. |'
  id: totrans-839
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.days_in_month`](api/pandas.Series.dt.days_in_month.html#pandas.Series.dt.days_in_month
    "pandas.Series.dt.days_in_month") | 月份中的天数。 |'
- en: '| [`Series.dt.tz`](api/pandas.Series.dt.tz.html#pandas.Series.dt.tz "pandas.Series.dt.tz")
    | Return the timezone. |'
  id: totrans-840
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.tz`](api/pandas.Series.dt.tz.html#pandas.Series.dt.tz "pandas.Series.dt.tz")
    | 返回时区。 |'
- en: '| [`Series.dt.freq`](api/pandas.Series.dt.freq.html#pandas.Series.dt.freq "pandas.Series.dt.freq")
    | Return the frequency object for this PeriodArray. |'
  id: totrans-841
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.freq`](api/pandas.Series.dt.freq.html#pandas.Series.dt.freq "pandas.Series.dt.freq")
    | 返回此 PeriodArray 的频率对象。 |'
- en: '| [`Series.dt.unit`](api/pandas.Series.dt.unit.html#pandas.Series.dt.unit "pandas.Series.dt.unit")
    |  |'
  id: totrans-842
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.unit`](api/pandas.Series.dt.unit.html#pandas.Series.dt.unit "pandas.Series.dt.unit")
    |  |'
- en: Datetime methods
  id: totrans-843
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 日期时间方法
- en: '| [`Series.dt.isocalendar`](api/pandas.Series.dt.isocalendar.html#pandas.Series.dt.isocalendar
    "pandas.Series.dt.isocalendar")() | Calculate year, week, and day according to
    the ISO 8601 standard. |'
  id: totrans-844
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.isocalendar`](api/pandas.Series.dt.isocalendar.html#pandas.Series.dt.isocalendar
    "pandas.Series.dt.isocalendar")() | 根据 ISO 8601 标准计算年、周和日。 |'
- en: '| [`Series.dt.to_period`](api/pandas.Series.dt.to_period.html#pandas.Series.dt.to_period
    "pandas.Series.dt.to_period")(*args, **kwargs) | Cast to PeriodArray/PeriodIndex
    at a particular frequency. |'
  id: totrans-845
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.to_period`](api/pandas.Series.dt.to_period.html#pandas.Series.dt.to_period
    "pandas.Series.dt.to_period")(*args, **kwargs) | 在特定频率下转换为 PeriodArray/PeriodIndex。
    |'
- en: '| [`Series.dt.to_pydatetime`](api/pandas.Series.dt.to_pydatetime.html#pandas.Series.dt.to_pydatetime
    "pandas.Series.dt.to_pydatetime")() | (DEPRECATED) Return the data as an array
    of [`datetime.datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime
    "(in Python v3.12)") objects. |'
  id: totrans-846
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.to_pydatetime`](api/pandas.Series.dt.to_pydatetime.html#pandas.Series.dt.to_pydatetime
    "pandas.Series.dt.to_pydatetime")() | (已弃用) 将数据返回为 [`datetime.datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime
    "(在 Python v3.12 中)") 对象数组。 |'
- en: '| [`Series.dt.tz_localize`](api/pandas.Series.dt.tz_localize.html#pandas.Series.dt.tz_localize
    "pandas.Series.dt.tz_localize")(*args, **kwargs) | Localize tz-naive Datetime
    Array/Index to tz-aware Datetime Array/Index. |'
  id: totrans-847
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.tz_localize`](api/pandas.Series.dt.tz_localize.html#pandas.Series.dt.tz_localize
    "pandas.Series.dt.tz_localize")(*args, **kwargs) | 将时区无关的日期时间数组/索引本地化为时区感知的日期时间数组/索引。
    |'
- en: '| [`Series.dt.tz_convert`](api/pandas.Series.dt.tz_convert.html#pandas.Series.dt.tz_convert
    "pandas.Series.dt.tz_convert")(*args, **kwargs) | Convert tz-aware Datetime Array/Index
    from one time zone to another. |'
  id: totrans-848
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.tz_convert`](api/pandas.Series.dt.tz_convert.html#pandas.Series.dt.tz_convert
    "pandas.Series.dt.tz_convert")(*args, **kwargs) | 将来自一个时区的时区感知的日期时间数组/索引转换为另一个时区。
    |'
- en: '| [`Series.dt.normalize`](api/pandas.Series.dt.normalize.html#pandas.Series.dt.normalize
    "pandas.Series.dt.normalize")(*args, **kwargs) | Convert times to midnight. |'
  id: totrans-849
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.normalize`](api/pandas.Series.dt.normalize.html#pandas.Series.dt.normalize
    "pandas.Series.dt.normalize")(*args, **kwargs) | 将时间转换为午夜。 |'
- en: '| [`Series.dt.strftime`](api/pandas.Series.dt.strftime.html#pandas.Series.dt.strftime
    "pandas.Series.dt.strftime")(*args, **kwargs) | Convert to Index using specified
    date_format. |'
  id: totrans-850
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.strftime`](api/pandas.Series.dt.strftime.html#pandas.Series.dt.strftime
    "pandas.Series.dt.strftime")(*args, **kwargs) | 使用指定的日期格式转换为索引。 |'
- en: '| [`Series.dt.round`](api/pandas.Series.dt.round.html#pandas.Series.dt.round
    "pandas.Series.dt.round")(*args, **kwargs) | Perform round operation on the data
    to the specified freq. |'
  id: totrans-851
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.round`](api/pandas.Series.dt.round.html#pandas.Series.dt.round
    "pandas.Series.dt.round")(*args, **kwargs) | 对数据执行四舍五入操作，以指定的频率为准。 |'
- en: '| [`Series.dt.floor`](api/pandas.Series.dt.floor.html#pandas.Series.dt.floor
    "pandas.Series.dt.floor")(*args, **kwargs) | Perform floor operation on the data
    to the specified freq. |'
  id: totrans-852
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.floor`](api/pandas.Series.dt.floor.html#pandas.Series.dt.floor
    "pandas.Series.dt.floor")(*args, **kwargs) | 对数据执行向下取整操作，以指定的频率为准。 |'
- en: '| [`Series.dt.ceil`](api/pandas.Series.dt.ceil.html#pandas.Series.dt.ceil "pandas.Series.dt.ceil")(*args, **kwargs)
    | Perform ceil operation on the data to the specified freq. |'
  id: totrans-853
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.ceil`](api/pandas.Series.dt.ceil.html#pandas.Series.dt.ceil "pandas.Series.dt.ceil")(*args, **kwargs)
    | 对数据执行向上取整操作，以指定的频率为准。 |'
- en: '| [`Series.dt.month_name`](api/pandas.Series.dt.month_name.html#pandas.Series.dt.month_name
    "pandas.Series.dt.month_name")(*args, **kwargs) | Return the month names with
    specified locale. |'
  id: totrans-854
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.month_name`](api/pandas.Series.dt.month_name.html#pandas.Series.dt.month_name
    "pandas.Series.dt.month_name")(*args, **kwargs) | 返回指定区域设置的月份名称。 |'
- en: '| [`Series.dt.day_name`](api/pandas.Series.dt.day_name.html#pandas.Series.dt.day_name
    "pandas.Series.dt.day_name")(*args, **kwargs) | Return the day names with specified
    locale. |'
  id: totrans-855
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.day_name`](api/pandas.Series.dt.day_name.html#pandas.Series.dt.day_name
    "pandas.Series.dt.day_name")(*args, **kwargs) | 返回指定区域设置的星期几名称。 |'
- en: '| [`Series.dt.as_unit`](api/pandas.Series.dt.as_unit.html#pandas.Series.dt.as_unit
    "pandas.Series.dt.as_unit")(*args, **kwargs) |  |'
  id: totrans-856
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.as_unit`](api/pandas.Series.dt.as_unit.html#pandas.Series.dt.as_unit
    "pandas.Series.dt.as_unit")(*args, **kwargs) |  |'
- en: Period properties
  id: totrans-857
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 时间周期属性
- en: '| [`Series.dt.qyear`](api/pandas.Series.dt.qyear.html#pandas.Series.dt.qyear
    "pandas.Series.dt.qyear") |  |'
  id: totrans-858
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.qyear`](api/pandas.Series.dt.qyear.html#pandas.Series.dt.qyear
    "pandas.Series.dt.qyear") |  |'
- en: '| [`Series.dt.start_time`](api/pandas.Series.dt.start_time.html#pandas.Series.dt.start_time
    "pandas.Series.dt.start_time") | Get the Timestamp for the start of the period.
    |'
  id: totrans-859
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.start_time`](api/pandas.Series.dt.start_time.html#pandas.Series.dt.start_time
    "pandas.Series.dt.start_time") | 获取周期开始的时间戳。 |'
- en: '| [`Series.dt.end_time`](api/pandas.Series.dt.end_time.html#pandas.Series.dt.end_time
    "pandas.Series.dt.end_time") | Get the Timestamp for the end of the period. |'
  id: totrans-860
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.end_time`](api/pandas.Series.dt.end_time.html#pandas.Series.dt.end_time
    "pandas.Series.dt.end_time") | 获取周期结束的时间戳。 |'
- en: Timedelta properties
  id: totrans-861
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 时间差属性
- en: '| [`Series.dt.days`](api/pandas.Series.dt.days.html#pandas.Series.dt.days "pandas.Series.dt.days")
    | Number of days for each element. |'
  id: totrans-862
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.days`](api/pandas.Series.dt.days.html#pandas.Series.dt.days "pandas.Series.dt.days")
    | 每个元素的天数。 |'
- en: '| [`Series.dt.seconds`](api/pandas.Series.dt.seconds.html#pandas.Series.dt.seconds
    "pandas.Series.dt.seconds") | Number of seconds (>= 0 and less than 1 day) for
    each element. |'
  id: totrans-863
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.seconds`](api/pandas.Series.dt.seconds.html#pandas.Series.dt.seconds
    "pandas.Series.dt.seconds") | 每个元素的秒数（>= 0 并且小于 1 天）。 |'
- en: '| [`Series.dt.microseconds`](api/pandas.Series.dt.microseconds.html#pandas.Series.dt.microseconds
    "pandas.Series.dt.microseconds") | Number of microseconds (>= 0 and less than
    1 second) for each element. |'
  id: totrans-864
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.microseconds`](api/pandas.Series.dt.microseconds.html#pandas.Series.dt.microseconds
    "pandas.Series.dt.microseconds") | 每个元素的微秒数（>= 0 并且小于 1 秒）。 |'
- en: '| [`Series.dt.nanoseconds`](api/pandas.Series.dt.nanoseconds.html#pandas.Series.dt.nanoseconds
    "pandas.Series.dt.nanoseconds") | Number of nanoseconds (>= 0 and less than 1
    microsecond) for each element. |'
  id: totrans-865
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.nanoseconds`](api/pandas.Series.dt.nanoseconds.html#pandas.Series.dt.nanoseconds
    "pandas.Series.dt.nanoseconds") | 每个元素的纳秒数（>= 0且小于1微秒）。 |'
- en: '| [`Series.dt.components`](api/pandas.Series.dt.components.html#pandas.Series.dt.components
    "pandas.Series.dt.components") | Return a Dataframe of the components of the Timedeltas.
    |'
  id: totrans-866
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.components`](api/pandas.Series.dt.components.html#pandas.Series.dt.components
    "pandas.Series.dt.components") | 返回时间增量的各个组件的数据框。 |'
- en: '| [`Series.dt.unit`](api/pandas.Series.dt.unit.html#pandas.Series.dt.unit "pandas.Series.dt.unit")
    |  |'
  id: totrans-867
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.unit`](api/pandas.Series.dt.unit.html#pandas.Series.dt.unit "pandas.Series.dt.unit")
    |  |'
- en: Timedelta methods
  id: totrans-868
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 时间增量方法
- en: '| [`Series.dt.to_pytimedelta`](api/pandas.Series.dt.to_pytimedelta.html#pandas.Series.dt.to_pytimedelta
    "pandas.Series.dt.to_pytimedelta")() | Return an array of native [`datetime.timedelta`](https://docs.python.org/3/library/datetime.html#datetime.timedelta
    "(in Python v3.12)") objects. |'
  id: totrans-869
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.to_pytimedelta`](api/pandas.Series.dt.to_pytimedelta.html#pandas.Series.dt.to_pytimedelta
    "pandas.Series.dt.to_pytimedelta")() | 返回一个由本地[`datetime.timedelta`](https://docs.python.org/3/library/datetime.html#datetime.timedelta
    "(在Python v3.12中)")对象组成的数组。 |'
- en: '| [`Series.dt.total_seconds`](api/pandas.Series.dt.total_seconds.html#pandas.Series.dt.total_seconds
    "pandas.Series.dt.total_seconds")(*args, **kwargs) | Return total duration of
    each element expressed in seconds. |'
  id: totrans-870
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.total_seconds`](api/pandas.Series.dt.total_seconds.html#pandas.Series.dt.total_seconds
    "pandas.Series.dt.total_seconds")(*args, **kwargs) | 返回每个元素表示的总持续时间（以秒为单位）。 |'
- en: '| [`Series.dt.as_unit`](api/pandas.Series.dt.as_unit.html#pandas.Series.dt.as_unit
    "pandas.Series.dt.as_unit")(*args, **kwargs) |  |'
  id: totrans-871
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.dt.as_unit`](api/pandas.Series.dt.as_unit.html#pandas.Series.dt.as_unit
    "pandas.Series.dt.as_unit")(*args, **kwargs) |  |'
- en: '### String handling'
  id: totrans-872
  prefs: []
  type: TYPE_NORMAL
  zh: '### 字符串处理'
- en: '`Series.str` can be used to access the values of the series as strings and
    apply several methods to it. These can be accessed like `Series.str.<function/property>`.'
  id: totrans-873
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series.str` 可用于访问系列的���作为字符串并应用多种方法。这些可以像`Series.str.<function/property>`这样访问。'
- en: '| [`Series.str.capitalize`](api/pandas.Series.str.capitalize.html#pandas.Series.str.capitalize
    "pandas.Series.str.capitalize")() | Convert strings in the Series/Index to be
    capitalized. |'
  id: totrans-874
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.capitalize`](api/pandas.Series.str.capitalize.html#pandas.Series.str.capitalize
    "pandas.Series.str.capitalize")() | 将系列/索引中的字符串转换为大写。 |'
- en: '| [`Series.str.casefold`](api/pandas.Series.str.casefold.html#pandas.Series.str.casefold
    "pandas.Series.str.casefold")() | Convert strings in the Series/Index to be casefolded.
    |'
  id: totrans-875
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.casefold`](api/pandas.Series.str.casefold.html#pandas.Series.str.casefold
    "pandas.Series.str.casefold")() | 将系列/索引中的字符串转换为折叠大小写形式。 |'
- en: '| [`Series.str.cat`](api/pandas.Series.str.cat.html#pandas.Series.str.cat "pandas.Series.str.cat")([others, sep, na_rep, join])
    | Concatenate strings in the Series/Index with given separator. |'
  id: totrans-876
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.cat`](api/pandas.Series.str.cat.html#pandas.Series.str.cat "pandas.Series.str.cat")([others, sep, na_rep, join])
    | 使用给定的分隔符连接系列/索引中的字符串。 |'
- en: '| [`Series.str.center`](api/pandas.Series.str.center.html#pandas.Series.str.center
    "pandas.Series.str.center")(width[, fillchar]) | Pad left and right side of strings
    in the Series/Index. |'
  id: totrans-877
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.center`](api/pandas.Series.str.center.html#pandas.Series.str.center
    "pandas.Series.str.center")(width[, fillchar]) | 在系列/索引中的字符串的左侧和右侧填充。 |'
- en: '| [`Series.str.contains`](api/pandas.Series.str.contains.html#pandas.Series.str.contains
    "pandas.Series.str.contains")(pat[, case, flags, na, ...]) | Test if pattern or
    regex is contained within a string of a Series or Index. |'
  id: totrans-878
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.contains`](api/pandas.Series.str.contains.html#pandas.Series.str.contains
    "pandas.Series.str.contains")(pat[, case, flags, na, ...]) | 测试模式或正则表达式是否包含在系列或索引的字符串中。
    |'
- en: '| [`Series.str.count`](api/pandas.Series.str.count.html#pandas.Series.str.count
    "pandas.Series.str.count")(pat[, flags]) | Count occurrences of pattern in each
    string of the Series/Index. |'
  id: totrans-879
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.count`](api/pandas.Series.str.count.html#pandas.Series.str.count
    "pandas.Series.str.count")(pat[, flags]) | 计算系列/索引中每个字符串中模式的出现次数。 |'
- en: '| [`Series.str.decode`](api/pandas.Series.str.decode.html#pandas.Series.str.decode
    "pandas.Series.str.decode")(encoding[, errors]) | Decode character string in the
    Series/Index using indicated encoding. |'
  id: totrans-880
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.decode`](api/pandas.Series.str.decode.html#pandas.Series.str.decode
    "pandas.Series.str.decode")(encoding[, errors]) | 使用指定的编码对系列/索引中的字符字符串进行解码。 |'
- en: '| [`Series.str.encode`](api/pandas.Series.str.encode.html#pandas.Series.str.encode
    "pandas.Series.str.encode")(encoding[, errors]) | Encode character string in the
    Series/Index using indicated encoding. |'
  id: totrans-881
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.encode`](api/pandas.Series.str.encode.html#pandas.Series.str.encode
    "pandas.Series.str.encode")(encoding[, errors]) | 使用指定的编码对系列/索引中的字符字符串进行编码。 |'
- en: '| [`Series.str.endswith`](api/pandas.Series.str.endswith.html#pandas.Series.str.endswith
    "pandas.Series.str.endswith")(pat[, na]) | Test if the end of each string element
    matches a pattern. |'
  id: totrans-882
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.endswith`](api/pandas.Series.str.endswith.html#pandas.Series.str.endswith
    "pandas.Series.str.endswith")(pat[, na]) | 测试每个字符串元素的结尾是否与模式��配。'
- en: '| [`Series.str.extract`](api/pandas.Series.str.extract.html#pandas.Series.str.extract
    "pandas.Series.str.extract")(pat[, flags, expand]) | Extract capture groups in
    the regex pat as columns in a DataFrame. |'
  id: totrans-883
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.extract`](api/pandas.Series.str.extract.html#pandas.Series.str.extract
    "pandas.Series.str.extract")(pat[, flags, expand]) | 在 DataFrame 中提取正则表达式 pat
    中的捕获组作为列。'
- en: '| [`Series.str.extractall`](api/pandas.Series.str.extractall.html#pandas.Series.str.extractall
    "pandas.Series.str.extractall")(pat[, flags]) | Extract capture groups in the
    regex pat as columns in DataFrame. |'
  id: totrans-884
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.extractall`](api/pandas.Series.str.extractall.html#pandas.Series.str.extractall
    "pandas.Series.str.extractall")(pat[, flags]) | 在 DataFrame 中提取正则表达式 pat 中的捕获组作为列。'
- en: '| [`Series.str.find`](api/pandas.Series.str.find.html#pandas.Series.str.find
    "pandas.Series.str.find")(sub[, start, end]) | Return lowest indexes in each strings
    in the Series/Index. |'
  id: totrans-885
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.find`](api/pandas.Series.str.find.html#pandas.Series.str.find
    "pandas.Series.str.find")(sub[, start, end]) | 返回 Series/Index 中每个字符串中的最低索引。'
- en: '| [`Series.str.findall`](api/pandas.Series.str.findall.html#pandas.Series.str.findall
    "pandas.Series.str.findall")(pat[, flags]) | Find all occurrences of pattern or
    regular expression in the Series/Index. |'
  id: totrans-886
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.findall`](api/pandas.Series.str.findall.html#pandas.Series.str.findall
    "pandas.Series.str.findall")(pat[, flags]) | 在 Series/Index 中查找模式或正则表达式的所有出现。'
- en: '| [`Series.str.fullmatch`](api/pandas.Series.str.fullmatch.html#pandas.Series.str.fullmatch
    "pandas.Series.str.fullmatch")(pat[, case, flags, na]) | Determine if each string
    entirely matches a regular expression. |'
  id: totrans-887
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.fullmatch`](api/pandas.Series.str.fullmatch.html#pandas.Series.str.fullmatch
    "pandas.Series.str.fullmatch")(pat[, case, flags, na]) | 确定每个字符串是否完全匹配正则表达式。'
- en: '| [`Series.str.get`](api/pandas.Series.str.get.html#pandas.Series.str.get "pandas.Series.str.get")(i)
    | Extract element from each component at specified position or with specified
    key. |'
  id: totrans-888
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.get`](api/pandas.Series.str.get.html#pandas.Series.str.get "pandas.Series.str.get")(i)
    | 从每个组件中提取指定位置或指定键的元素。'
- en: '| [`Series.str.index`](api/pandas.Series.str.index.html#pandas.Series.str.index
    "pandas.Series.str.index")(sub[, start, end]) | Return lowest indexes in each
    string in Series/Index. |'
  id: totrans-889
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.index`](api/pandas.Series.str.index.html#pandas.Series.str.index
    "pandas.Series.str.index")(sub[, start, end]) | 返回 Series/Index 中每个字符串的最低索引。'
- en: '| [`Series.str.join`](api/pandas.Series.str.join.html#pandas.Series.str.join
    "pandas.Series.str.join")(sep) | Join lists contained as elements in the Series/Index
    with passed delimiter. |'
  id: totrans-890
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.join`](api/pandas.Series.str.join.html#pandas.Series.str.join
    "pandas.Series.str.join")(sep) | 使用传递的分隔符将 Series/Index 中作为元素包含的列表连接起来。'
- en: '| [`Series.str.len`](api/pandas.Series.str.len.html#pandas.Series.str.len "pandas.Series.str.len")()
    | Compute the length of each element in the Series/Index. |'
  id: totrans-891
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.len`](api/pandas.Series.str.len.html#pandas.Series.str.len "pandas.Series.str.len")()
    | 计算 Series/Index 中每个元素的长度。'
- en: '| [`Series.str.ljust`](api/pandas.Series.str.ljust.html#pandas.Series.str.ljust
    "pandas.Series.str.ljust")(width[, fillchar]) | Pad right side of strings in the
    Series/Index. |'
  id: totrans-892
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.ljust`](api/pandas.Series.str.ljust.html#pandas.Series.str.ljust
    "pandas.Series.str.ljust")(width[, fillchar]) | 在 Series/Index 中字符串的右侧填充。'
- en: '| [`Series.str.lower`](api/pandas.Series.str.lower.html#pandas.Series.str.lower
    "pandas.Series.str.lower")() | Convert strings in the Series/Index to lowercase.
    |'
  id: totrans-893
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.lower`](api/pandas.Series.str.lower.html#pandas.Series.str.lower
    "pandas.Series.str.lower")() | 将 Series/Index 中的字符串转换为小写。'
- en: '| [`Series.str.lstrip`](api/pandas.Series.str.lstrip.html#pandas.Series.str.lstrip
    "pandas.Series.str.lstrip")([to_strip]) | Remove leading characters. |'
  id: totrans-894
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.lstrip`](api/pandas.Series.str.lstrip.html#pandas.Series.str.lstrip
    "pandas.Series.str.lstrip")([to_strip]) | 移除前导字符。'
- en: '| [`Series.str.match`](api/pandas.Series.str.match.html#pandas.Series.str.match
    "pandas.Series.str.match")(pat[, case, flags, na]) | Determine if each string
    starts with a match of a regular expression. |'
  id: totrans-895
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.match`](api/pandas.Series.str.match.html#pandas.Series.str.match
    "pandas.Series.str.match")(pat[, case, flags, na]) | 确定每个字符串是否以正则表达式的匹配开头。'
- en: '| [`Series.str.normalize`](api/pandas.Series.str.normalize.html#pandas.Series.str.normalize
    "pandas.Series.str.normalize")(form) | Return the Unicode normal form for the
    strings in the Series/Index. |'
  id: totrans-896
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.normalize`](api/pandas.Series.str.normalize.html#pandas.Series.str.normalize
    "pandas.Series.str.normalize")(form) | 返回 Series/Index 中字符串的 Unicode 标准形式。'
- en: '| [`Series.str.pad`](api/pandas.Series.str.pad.html#pandas.Series.str.pad "pandas.Series.str.pad")(width[, side, fillchar])
    | Pad strings in the Series/Index up to width. |'
  id: totrans-897
  prefs: []
  type: TYPE_TB
  zh: '[`Series.str.pad`](api/pandas.Series.str.pad.html#pandas.Series.str.pad "pandas.Series.str.pad")
    | 在 Series/Index 中的字符串中填充到指定宽度。'
- en: '| [`Series.str.partition`](api/pandas.Series.str.partition.html#pandas.Series.str.partition
    "pandas.Series.str.partition")([sep, expand]) | Split the string at the first
    occurrence of sep. |'
  id: totrans-898
  prefs: []
  type: TYPE_TB
  zh: '[`Series.str.partition`](api/pandas.Series.str.partition.html#pandas.Series.str.partition
    "pandas.Series.str.partition") | 在第一个 sep 出现的位置拆分字符串。'
- en: '| [`Series.str.removeprefix`](api/pandas.Series.str.removeprefix.html#pandas.Series.str.removeprefix
    "pandas.Series.str.removeprefix")(prefix) | Remove a prefix from an object series.
    |'
  id: totrans-899
  prefs: []
  type: TYPE_TB
  zh: '[`Series.str.removeprefix`](api/pandas.Series.str.removeprefix.html#pandas.Series.str.removeprefix
    "pandas.Series.str.removeprefix") | 从对象系列中删除前缀。'
- en: '| [`Series.str.removesuffix`](api/pandas.Series.str.removesuffix.html#pandas.Series.str.removesuffix
    "pandas.Series.str.removesuffix")(suffix) | Remove a suffix from an object series.
    |'
  id: totrans-900
  prefs: []
  type: TYPE_TB
  zh: '[`Series.str.removesuffix`](api/pandas.Series.str.removesuffix.html#pandas.Series.str.removesuffix
    "pandas.Series.str.removesuffix") | 从对象系列中删除后缀。'
- en: '| [`Series.str.repeat`](api/pandas.Series.str.repeat.html#pandas.Series.str.repeat
    "pandas.Series.str.repeat")(repeats) | Duplicate each string in the Series or
    Index. |'
  id: totrans-901
  prefs: []
  type: TYPE_TB
  zh: '[`Series.str.repeat`](api/pandas.Series.str.repeat.html#pandas.Series.str.repeat
    "pandas.Series.str.repeat") | 在 Series 或 Index 中复制每个字符串。'
- en: '| [`Series.str.replace`](api/pandas.Series.str.replace.html#pandas.Series.str.replace
    "pandas.Series.str.replace")(pat, repl[, n, case, ...]) | Replace each occurrence
    of pattern/regex in the Series/Index. |'
  id: totrans-902
  prefs: []
  type: TYPE_TB
  zh: '[`Series.str.replace`](api/pandas.Series.str.replace.html#pandas.Series.str.replace
    "pandas.Series.str.replace") | 在 Series/Index 中替换每个模式/正则表达式的每个出现。'
- en: '| [`Series.str.rfind`](api/pandas.Series.str.rfind.html#pandas.Series.str.rfind
    "pandas.Series.str.rfind")(sub[, start, end]) | Return highest indexes in each
    strings in the Series/Index. |'
  id: totrans-903
  prefs: []
  type: TYPE_TB
  zh: '[`Series.str.rfind`](api/pandas.Series.str.rfind.html#pandas.Series.str.rfind
    "pandas.Series.str.rfind") | 返回 Series/Index 中每个字符串中的最高索引。'
- en: '| [`Series.str.rindex`](api/pandas.Series.str.rindex.html#pandas.Series.str.rindex
    "pandas.Series.str.rindex")(sub[, start, end]) | Return highest indexes in each
    string in Series/Index. |'
  id: totrans-904
  prefs: []
  type: TYPE_TB
  zh: '[`Series.str.rindex`](api/pandas.Series.str.rindex.html#pandas.Series.str.rindex
    "pandas.Series.str.rindex") | 返回 Series/Index 中每个字符串中的最高索引。'
- en: '| [`Series.str.rjust`](api/pandas.Series.str.rjust.html#pandas.Series.str.rjust
    "pandas.Series.str.rjust")(width[, fillchar]) | Pad left side of strings in the
    Series/Index. |'
  id: totrans-905
  prefs: []
  type: TYPE_TB
  zh: '[`Series.str.rjust`](api/pandas.Series.str.rjust.html#pandas.Series.str.rjust
    "pandas.Series.str.rjust") | 在 Series/Index 中的字符串左侧填充。'
- en: '| [`Series.str.rpartition`](api/pandas.Series.str.rpartition.html#pandas.Series.str.rpartition
    "pandas.Series.str.rpartition")([sep, expand]) | Split the string at the last
    occurrence of sep. |'
  id: totrans-906
  prefs: []
  type: TYPE_TB
  zh: '[`Series.str.rpartition`](api/pandas.Series.str.rpartition.html#pandas.Series.str.rpartition
    "pandas.Series.str.rpartition") | 在最后一个 sep 出现的位置拆分字符串。'
- en: '| [`Series.str.rstrip`](api/pandas.Series.str.rstrip.html#pandas.Series.str.rstrip
    "pandas.Series.str.rstrip")([to_strip]) | Remove trailing characters. |'
  id: totrans-907
  prefs: []
  type: TYPE_TB
  zh: '[`Series.str.rstrip`](api/pandas.Series.str.rstrip.html#pandas.Series.str.rstrip
    "pandas.Series.str.rstrip") | 移除字符串尾部的字符。'
- en: '| [`Series.str.slice`](api/pandas.Series.str.slice.html#pandas.Series.str.slice
    "pandas.Series.str.slice")([start, stop, step]) | Slice substrings from each element
    in the Series or Index. |'
  id: totrans-908
  prefs: []
  type: TYPE_TB
  zh: '[`Series.str.slice`](api/pandas.Series.str.slice.html#pandas.Series.str.slice
    "pandas.Series.str.slice") | 从 Series 或 Index 中的每个元素中切割子字符串。'
- en: '| [`Series.str.slice_replace`](api/pandas.Series.str.slice_replace.html#pandas.Series.str.slice_replace
    "pandas.Series.str.slice_replace")([start, stop, repl]) | Replace a positional
    slice of a string with another value. |'
  id: totrans-909
  prefs: []
  type: TYPE_TB
  zh: '[`Series.str.slice_replace`](api/pandas.Series.str.slice_replace.html#pandas.Series.str.slice_replace
    "pandas.Series.str.slice_replace") | 用另一个值替换字符串的位置切片。'
- en: '| [`Series.str.split`](api/pandas.Series.str.split.html#pandas.Series.str.split
    "pandas.Series.str.split")([pat, n, expand, regex]) | Split strings around given
    separator/delimiter. |'
  id: totrans-910
  prefs: []
  type: TYPE_TB
  zh: '[`Series.str.split`](api/pandas.Series.str.split.html#pandas.Series.str.split
    "pandas.Series.str.split") | 在给定的分隔符/定界符周围分割字符串。'
- en: '| [`Series.str.rsplit`](api/pandas.Series.str.rsplit.html#pandas.Series.str.rsplit
    "pandas.Series.str.rsplit")([pat, n, expand]) | Split strings around given separator/delimiter.
    |'
  id: totrans-911
  prefs: []
  type: TYPE_TB
  zh: '[`Series.str.rsplit`](api/pandas.Series.str.rsplit.html#pandas.Series.str.rsplit
    "pandas.Series.str.rsplit") | 在给定的分隔符/定界符周围分割字符串。'
- en: '| [`Series.str.startswith`](api/pandas.Series.str.startswith.html#pandas.Series.str.startswith
    "pandas.Series.str.startswith")(pat[, na]) | Test if the start of each string
    element matches a pattern. |'
  id: totrans-912
  prefs: []
  type: TYPE_TB
  zh: '[`Series.str.startswith`](api/pandas.Series.str.startswith.html#pandas.Series.str.startswith
    "pandas.Series.str.startswith") | 测试每个字符串元素的开头是否与模式匹配。'
- en: '| [`Series.str.strip`](api/pandas.Series.str.strip.html#pandas.Series.str.strip
    "pandas.Series.str.strip")([to_strip]) | Remove leading and trailing characters.
    |'
  id: totrans-913
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.strip`](api/pandas.Series.str.strip.html#pandas.Series.str.strip
    "pandas.Series.str.strip")([to_strip]) | 移除字符串的开头和结尾字符。 |'
- en: '| [`Series.str.swapcase`](api/pandas.Series.str.swapcase.html#pandas.Series.str.swapcase
    "pandas.Series.str.swapcase")() | Convert strings in the Series/Index to be swapcased.
    |'
  id: totrans-914
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.swapcase`](api/pandas.Series.str.swapcase.html#pandas.Series.str.swapcase
    "pandas.Series.str.swapcase")() | 将 Series/Index 中的字符串转换为大小写互换。 |'
- en: '| [`Series.str.title`](api/pandas.Series.str.title.html#pandas.Series.str.title
    "pandas.Series.str.title")() | Convert strings in the Series/Index to titlecase.
    |'
  id: totrans-915
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.title`](api/pandas.Series.str.title.html#pandas.Series.str.title
    "pandas.Series.str.title")() | 将 Series/Index 中的字符串转换为标题格式。 |'
- en: '| [`Series.str.translate`](api/pandas.Series.str.translate.html#pandas.Series.str.translate
    "pandas.Series.str.translate")(table) | Map all characters in the string through
    the given mapping table. |'
  id: totrans-916
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.translate`](api/pandas.Series.str.translate.html#pandas.Series.str.translate
    "pandas.Series.str.translate")(table) | 通过给定的映射表映射字符串中的所有字符。 |'
- en: '| [`Series.str.upper`](api/pandas.Series.str.upper.html#pandas.Series.str.upper
    "pandas.Series.str.upper")() | Convert strings in the Series/Index to uppercase.
    |'
  id: totrans-917
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.upper`](api/pandas.Series.str.upper.html#pandas.Series.str.upper
    "pandas.Series.str.upper")() | 将 Series/Index 中的字符串转换为大写。 |'
- en: '| [`Series.str.wrap`](api/pandas.Series.str.wrap.html#pandas.Series.str.wrap
    "pandas.Series.str.wrap")(width, **kwargs) | Wrap strings in Series/Index at specified
    line width. |'
  id: totrans-918
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.wrap`](api/pandas.Series.str.wrap.html#pandas.Series.str.wrap
    "pandas.Series.str.wrap")(width, **kwargs) | 在指定的行宽度处将 Series/Index 中的字符串换行。 |'
- en: '| [`Series.str.zfill`](api/pandas.Series.str.zfill.html#pandas.Series.str.zfill
    "pandas.Series.str.zfill")(width) | Pad strings in the Series/Index by prepending
    ''0'' characters. |'
  id: totrans-919
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.zfill`](api/pandas.Series.str.zfill.html#pandas.Series.str.zfill
    "pandas.Series.str.zfill")(width) | 通过在 Series/Index 中的字符串前面添加 ''0'' 字符来填充字符串。
    |'
- en: '| [`Series.str.isalnum`](api/pandas.Series.str.isalnum.html#pandas.Series.str.isalnum
    "pandas.Series.str.isalnum")() | Check whether all characters in each string are
    alphanumeric. |'
  id: totrans-920
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.isalnum`](api/pandas.Series.str.isalnum.html#pandas.Series.str.isalnum
    "pandas.Series.str.isalnum")() | 检查每个字符串中的所有字符是否都是字母数字。 |'
- en: '| [`Series.str.isalpha`](api/pandas.Series.str.isalpha.html#pandas.Series.str.isalpha
    "pandas.Series.str.isalpha")() | Check whether all characters in each string are
    alphabetic. |'
  id: totrans-921
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.isalpha`](api/pandas.Series.str.isalpha.html#pandas.Series.str.isalpha
    "pandas.Series.str.isalpha")() | 检查每个字符串中的所有字符是否都是字母。 |'
- en: '| [`Series.str.isdigit`](api/pandas.Series.str.isdigit.html#pandas.Series.str.isdigit
    "pandas.Series.str.isdigit")() | Check whether all characters in each string are
    digits. |'
  id: totrans-922
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.isdigit`](api/pandas.Series.str.isdigit.html#pandas.Series.str.isdigit
    "pandas.Series.str.isdigit")() | 检查每个字符串中的所有字符是否都是数字。 |'
- en: '| [`Series.str.isspace`](api/pandas.Series.str.isspace.html#pandas.Series.str.isspace
    "pandas.Series.str.isspace")() | Check whether all characters in each string are
    whitespace. |'
  id: totrans-923
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.isspace`](api/pandas.Series.str.isspace.html#pandas.Series.str.isspace
    "pandas.Series.str.isspace")() | 检查每个字符串中的所有字符是否都是空白字符。 |'
- en: '| [`Series.str.islower`](api/pandas.Series.str.islower.html#pandas.Series.str.islower
    "pandas.Series.str.islower")() | Check whether all characters in each string are
    lowercase. |'
  id: totrans-924
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.islower`](api/pandas.Series.str.islower.html#pandas.Series.str.islower
    "pandas.Series.str.islower")() | 检查每个字符串中的所有字符是否都是小写。 |'
- en: '| [`Series.str.isupper`](api/pandas.Series.str.isupper.html#pandas.Series.str.isupper
    "pandas.Series.str.isupper")() | Check whether all characters in each string are
    uppercase. |'
  id: totrans-925
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.isupper`](api/pandas.Series.str.isupper.html#pandas.Series.str.isupper
    "pandas.Series.str.isupper")() | 检查每个字符串中的所有字符是否都是大写。 |'
- en: '| [`Series.str.istitle`](api/pandas.Series.str.istitle.html#pandas.Series.str.istitle
    "pandas.Series.str.istitle")() | Check whether all characters in each string are
    titlecase. |'
  id: totrans-926
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.istitle`](api/pandas.Series.str.istitle.html#pandas.Series.str.istitle
    "pandas.Series.str.istitle")() | 检查每个字符串中的所有字符是否都是标题格式。 |'
- en: '| [`Series.str.isnumeric`](api/pandas.Series.str.isnumeric.html#pandas.Series.str.isnumeric
    "pandas.Series.str.isnumeric")() | Check whether all characters in each string
    are numeric. |'
  id: totrans-927
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.isnumeric`](api/pandas.Series.str.isnumeric.html#pandas.Series.str.isnumeric
    "pandas.Series.str.isnumeric")() | 检查每个字符串中的所有字符是否都是数字。 |'
- en: '| [`Series.str.isdecimal`](api/pandas.Series.str.isdecimal.html#pandas.Series.str.isdecimal
    "pandas.Series.str.isdecimal")() | Check whether all characters in each string
    are decimal. |'
  id: totrans-928
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.isdecimal`](api/pandas.Series.str.isdecimal.html#pandas.Series.str.isdecimal
    "pandas.Series.str.isdecimal")() | 检查每个字符串中的所有字符是否都是十进制数。 |'
- en: '| [`Series.str.get_dummies`](api/pandas.Series.str.get_dummies.html#pandas.Series.str.get_dummies
    "pandas.Series.str.get_dummies")([sep]) | Return DataFrame of dummy/indicator
    variables for Series. |'
  id: totrans-929
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.str.get_dummies`](api/pandas.Series.str.get_dummies.html#pandas.Series.str.get_dummies
    "pandas.Series.str.get_dummies")([sep]) | 返回 Series 的虚拟/指示变量的 DataFrame。 |'
- en: '### Categorical accessor'
  id: totrans-930
  prefs: []
  type: TYPE_NORMAL
  zh: '### 分类访问器'
- en: Categorical-dtype specific methods and attributes are available under the `Series.cat`
    accessor.
  id: totrans-931
  prefs: []
  type: TYPE_NORMAL
  zh: 类别特定的方法和属性可在 `Series.cat` 访问器下找到。
- en: '| [`Series.cat.categories`](api/pandas.Series.cat.categories.html#pandas.Series.cat.categories
    "pandas.Series.cat.categories") | The categories of this categorical. |'
  id: totrans-932
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.categories`](api/pandas.Series.cat.categories.html#pandas.Series.cat.categories
    "pandas.Series.cat.categories") | 此分类的类别。 |'
- en: '| [`Series.cat.ordered`](api/pandas.Series.cat.ordered.html#pandas.Series.cat.ordered
    "pandas.Series.cat.ordered") | Whether the categories have an ordered relationship.
    |'
  id: totrans-933
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.ordered`](api/pandas.Series.cat.ordered.html#pandas.Series.cat.ordered
    "pandas.Series.cat.ordered") | 类别是否具有有序关系。 |'
- en: '| [`Series.cat.codes`](api/pandas.Series.cat.codes.html#pandas.Series.cat.codes
    "pandas.Series.cat.codes") | Return Series of codes as well as the index. |'
  id: totrans-934
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.codes`](api/pandas.Series.cat.codes.html#pandas.Series.cat.codes
    "pandas.Series.cat.codes") | 返回代码的 Series 以及索引。 |'
- en: '| [`Series.cat.rename_categories`](api/pandas.Series.cat.rename_categories.html#pandas.Series.cat.rename_categories
    "pandas.Series.cat.rename_categories")(*args, **kwargs) | Rename categories. |'
  id: totrans-935
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.rename_categories`](api/pandas.Series.cat.rename_categories.html#pandas.Series.cat.rename_categories
    "pandas.Series.cat.rename_categories")(*args, **kwargs) | 重命名类别。 |'
- en: '| [`Series.cat.reorder_categories`](api/pandas.Series.cat.reorder_categories.html#pandas.Series.cat.reorder_categories
    "pandas.Series.cat.reorder_categories")(*args, **kwargs) | Reorder categories
    as specified in new_categories. |'
  id: totrans-936
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.reorder_categories`](api/pandas.Series.cat.reorder_categories.html#pandas.Series.cat.reorder_categories
    "pandas.Series.cat.reorder_categories")(*args, **kwargs) | 根据新类别重新排序类别。 |'
- en: '| [`Series.cat.add_categories`](api/pandas.Series.cat.add_categories.html#pandas.Series.cat.add_categories
    "pandas.Series.cat.add_categories")(*args, **kwargs) | Add new categories. |'
  id: totrans-937
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.add_categories`](api/pandas.Series.cat.add_categories.html#pandas.Series.cat.add_categories
    "pandas.Series.cat.add_categories")(*args, **kwargs) | 添加新类别。 |'
- en: '| [`Series.cat.remove_categories`](api/pandas.Series.cat.remove_categories.html#pandas.Series.cat.remove_categories
    "pandas.Series.cat.remove_categories")(*args, **kwargs) | Remove the specified
    categories. |'
  id: totrans-938
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.remove_categories`](api/pandas.Series.cat.remove_categories.html#pandas.Series.cat.remove_categories
    "pandas.Series.cat.remove_categories")(*args, **kwargs) | 删除指定的类别。 |'
- en: '| [`Series.cat.remove_unused_categories`](api/pandas.Series.cat.remove_unused_categories.html#pandas.Series.cat.remove_unused_categories
    "pandas.Series.cat.remove_unused_categories")(*args, ...) | Remove categories
    which are not used. |'
  id: totrans-939
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.remove_unused_categories`](api/pandas.Series.cat.remove_unused_categories.html#pandas.Series.cat.remove_unused_categories
    "pandas.Series.cat.remove_unused_categories")(*args, ...) | 删除未使用的类别。 |'
- en: '| [`Series.cat.set_categories`](api/pandas.Series.cat.set_categories.html#pandas.Series.cat.set_categories
    "pandas.Series.cat.set_categories")(*args, **kwargs) | Set the categories to the
    specified new categories. |'
  id: totrans-940
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.set_categories`](api/pandas.Series.cat.set_categories.html#pandas.Series.cat.set_categories
    "pandas.Series.cat.set_categories")(*args, **kwargs) | 将类别设置为指定的新类别。 |'
- en: '| [`Series.cat.as_ordered`](api/pandas.Series.cat.as_ordered.html#pandas.Series.cat.as_ordered
    "pandas.Series.cat.as_ordered")(*args, **kwargs) | Set the Categorical to be ordered.
    |'
  id: totrans-941
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.as_ordered`](api/pandas.Series.cat.as_ordered.html#pandas.Series.cat.as_ordered
    "pandas.Series.cat.as_ordered")(*args, **kwargs) | 将分类设置为有序。 |'
- en: '| [`Series.cat.as_unordered`](api/pandas.Series.cat.as_unordered.html#pandas.Series.cat.as_unordered
    "pandas.Series.cat.as_unordered")(*args, **kwargs) | Set the Categorical to be
    unordered. |'
  id: totrans-942
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.cat.as_unordered`](api/pandas.Series.cat.as_unordered.html#pandas.Series.cat.as_unordered
    "pandas.Series.cat.as_unordered")(*args, **kwargs) | 将分类设置为无序。 |'
- en: '### Sparse accessor'
  id: totrans-943
  prefs: []
  type: TYPE_NORMAL
  zh: '### 稀疏访问器'
- en: Sparse-dtype specific methods and attributes are provided under the `Series.sparse`
    accessor.
  id: totrans-944
  prefs: []
  type: TYPE_NORMAL
  zh: 稀疏特定的方法和属性可在 `Series.sparse` 访问器下找到。
- en: '| [`Series.sparse.npoints`](api/pandas.Series.sparse.npoints.html#pandas.Series.sparse.npoints
    "pandas.Series.sparse.npoints") | The number of non- `fill_value` points. |'
  id: totrans-945
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sparse.npoints`](api/pandas.Series.sparse.npoints.html#pandas.Series.sparse.npoints
    "pandas.Series.sparse.npoints") | 非 `fill_value` 点的数量。 |'
- en: '| [`Series.sparse.density`](api/pandas.Series.sparse.density.html#pandas.Series.sparse.density
    "pandas.Series.sparse.density") | The percent of non- `fill_value` points, as
    decimal. |'
  id: totrans-946
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sparse.density`](api/pandas.Series.sparse.density.html#pandas.Series.sparse.density
    "pandas.Series.sparse.density") | 非 `fill_value` 点的百分比，以小数表示。 |'
- en: '| [`Series.sparse.fill_value`](api/pandas.Series.sparse.fill_value.html#pandas.Series.sparse.fill_value
    "pandas.Series.sparse.fill_value") | Elements in data that are fill_value are
    not stored. |'
  id: totrans-947
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sparse.fill_value`](api/pandas.Series.sparse.fill_value.html#pandas.Series.sparse.fill_value
    "pandas.Series.sparse.fill_value") | 数据中的 fill_value 元素不会被存储。 |'
- en: '| [`Series.sparse.sp_values`](api/pandas.Series.sparse.sp_values.html#pandas.Series.sparse.sp_values
    "pandas.Series.sparse.sp_values") | An ndarray containing the non- `fill_value`
    values. |'
  id: totrans-948
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sparse.sp_values`](api/pandas.Series.sparse.sp_values.html#pandas.Series.sparse.sp_values
    "pandas.Series.sparse.sp_values") | 包含非 `fill_value` 值的 ndarray。 |'
- en: '| [`Series.sparse.from_coo`](api/pandas.Series.sparse.from_coo.html#pandas.Series.sparse.from_coo
    "pandas.Series.sparse.from_coo")(A[, dense_index]) | Create a Series with sparse
    values from a scipy.sparse.coo_matrix. |'
  id: totrans-949
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sparse.from_coo`](api/pandas.Series.sparse.from_coo.html#pandas.Series.sparse.from_coo
    "pandas.Series.sparse.from_coo")(A[, dense_index]) | 从 scipy.sparse.coo_matrix
    创建具有稀疏值的 Series。 |'
- en: '| [`Series.sparse.to_coo`](api/pandas.Series.sparse.to_coo.html#pandas.Series.sparse.to_coo
    "pandas.Series.sparse.to_coo")([row_levels, ...]) | Create a scipy.sparse.coo_matrix
    from a Series with MultiIndex. |'
  id: totrans-950
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.sparse.to_coo`](api/pandas.Series.sparse.to_coo.html#pandas.Series.sparse.to_coo
    "pandas.Series.sparse.to_coo")([row_levels, ...]) | 从具有 MultiIndex 的 Series 创建一个
    scipy.sparse.coo_matrix。 |'
- en: '### List accessor'
  id: totrans-951
  prefs: []
  type: TYPE_NORMAL
  zh: '### 列表访问器'
- en: Arrow list-dtype specific methods and attributes are provided under the `Series.list`
    accessor.
  id: totrans-952
  prefs: []
  type: TYPE_NORMAL
  zh: Arrow 列表数据类型的特定方法和属性可在 `Series.list` 访问器下找到。
- en: '| [`Series.list.flatten`](api/pandas.Series.list.flatten.html#pandas.Series.list.flatten
    "pandas.Series.list.flatten")() | Flatten list values. |'
  id: totrans-953
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.list.flatten`](api/pandas.Series.list.flatten.html#pandas.Series.list.flatten
    "pandas.Series.list.flatten")() | 展平列表值。 |'
- en: '| [`Series.list.len`](api/pandas.Series.list.len.html#pandas.Series.list.len
    "pandas.Series.list.len")() | Return the length of each list in the Series. |'
  id: totrans-954
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.list.len`](api/pandas.Series.list.len.html#pandas.Series.list.len
    "pandas.Series.list.len")() | 返回 Series 中每个列表的长度。 |'
- en: '| [`Series.list.__getitem__`](api/pandas.Series.list.__getitem__.html#pandas.Series.list.__getitem__
    "pandas.Series.list.__getitem__")(key) | Index or slice lists in the Series. |'
  id: totrans-955
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.list.__getitem__`](api/pandas.Series.list.__getitem__.html#pandas.Series.list.__getitem__
    "pandas.Series.list.__getitem__")(key) | 在 Series 中索引或切片列表。 |'
- en: '### Struct accessor'
  id: totrans-956
  prefs: []
  type: TYPE_NORMAL
  zh: '### 结构访问器'
- en: Arrow struct-dtype specific methods and attributes are provided under the `Series.struct`
    accessor.
  id: totrans-957
  prefs: []
  type: TYPE_NORMAL
  zh: Arrow 结构数据类型的特定方法和属性可在 `Series.struct` 访问器下找到。
- en: '| [`Series.struct.dtypes`](api/pandas.Series.struct.dtypes.html#pandas.Series.struct.dtypes
    "pandas.Series.struct.dtypes") | Return the dtype object of each child field of
    the struct. |'
  id: totrans-958
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.struct.dtypes`](api/pandas.Series.struct.dtypes.html#pandas.Series.struct.dtypes
    "pandas.Series.struct.dtypes") | 返回结构的每个子字段的 dtype 对象。 |'
- en: '| [`Series.struct.field`](api/pandas.Series.struct.field.html#pandas.Series.struct.field
    "pandas.Series.struct.field")(name_or_index) | Extract a child field of a struct
    as a Series. |'
  id: totrans-959
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.struct.field`](api/pandas.Series.struct.field.html#pandas.Series.struct.field
    "pandas.Series.struct.field")(name_or_index) | 将结构的子字段提取为 Series。 |'
- en: '| [`Series.struct.explode`](api/pandas.Series.struct.explode.html#pandas.Series.struct.explode
    "pandas.Series.struct.explode")() | Extract all child fields of a struct as a
    DataFrame. |'
  id: totrans-960
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.struct.explode`](api/pandas.Series.struct.explode.html#pandas.Series.struct.explode
    "pandas.Series.struct.explode")() | 将结构的所有子字段提取为 DataFrame。 |'
- en: '### Flags'
  id: totrans-961
  prefs: []
  type: TYPE_NORMAL
  zh: '### 标志'
- en: Flags refer to attributes of the pandas object. Properties of the dataset (like
    the date is was recorded, the URL it was accessed from, etc.) should be stored
    in [`Series.attrs`](api/pandas.Series.attrs.html#pandas.Series.attrs "pandas.Series.attrs").
  id: totrans-962
  prefs: []
  type: TYPE_NORMAL
  zh: 标志指的是 pandas 对象的属性。数据集的属性（如记录日期、访问的 URL 等）应存储在 [`Series.attrs`](api/pandas.Series.attrs.html#pandas.Series.attrs
    "pandas.Series.attrs") 中。
- en: '| [`Flags`](api/pandas.Flags.html#pandas.Flags "pandas.Flags")(obj, *, allows_duplicate_labels)
    | Flags that apply to pandas objects. |'
  id: totrans-963
  prefs: []
  type: TYPE_TB
  zh: '| [`Flags`](api/pandas.Flags.html#pandas.Flags "pandas.Flags")(obj, *, allows_duplicate_labels)
    | 适用于 pandas 对象的标志。 |'
- en: '### Metadata'
  id: totrans-964
  prefs: []
  type: TYPE_NORMAL
  zh: '### 元数据'
- en: '[`Series.attrs`](api/pandas.Series.attrs.html#pandas.Series.attrs "pandas.Series.attrs")
    is a dictionary for storing global metadata for this Series.'
  id: totrans-965
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Series.attrs`](api/pandas.Series.attrs.html#pandas.Series.attrs "pandas.Series.attrs")
    是一个用于存储此 Series 的全局元数据的字典。'
- en: Warning
  id: totrans-966
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: '`Series.attrs` is considered experimental and may change without warning.'
  id: totrans-967
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series.attrs` 被视为实验性质，可能会在不经警告的情况下更改。'
- en: '| [`Series.attrs`](api/pandas.Series.attrs.html#pandas.Series.attrs "pandas.Series.attrs")
    | Dictionary of global attributes of this dataset. |'
  id: totrans-968
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.attrs`](api/pandas.Series.attrs.html#pandas.Series.attrs "pandas.Series.attrs")
    | 此数据集的全局属性字典。 |'
- en: Plotting
  id: totrans-969
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘图
- en: '`Series.plot` is both a callable method and a namespace attribute for specific
    plotting methods of the form `Series.plot.<kind>`.'
  id: totrans-970
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series.plot` 既是一个可调用方法，也是特定绘图方法的命名空间属性，形式为 `Series.plot.<kind>`。'
- en: '| [`Series.plot`](api/pandas.Series.plot.html#pandas.Series.plot "pandas.Series.plot")([kind, ax, figsize, ....])
    | Series plotting accessor and method |'
  id: totrans-971
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.plot`](api/pandas.Series.plot.html#pandas.Series.plot "pandas.Series.plot")([kind, ax, figsize, ....])
    | Series 绘图访问器和方法 |'
- en: '| [`Series.plot.area`](api/pandas.Series.plot.area.html#pandas.Series.plot.area
    "pandas.Series.plot.area")([x, y, stacked]) | Draw a stacked area plot. |'
  id: totrans-972
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.plot.area`](api/pandas.Series.plot.area.html#pandas.Series.plot.area
    "pandas.Series.plot.area")([x, y, stacked]) | 绘制堆叠面积图。 |'
- en: '| [`Series.plot.bar`](api/pandas.Series.plot.bar.html#pandas.Series.plot.bar
    "pandas.Series.plot.bar")([x, y]) | Vertical bar plot. |'
  id: totrans-973
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.plot.bar`](api/pandas.Series.plot.bar.html#pandas.Series.plot.bar
    "pandas.Series.plot.bar")([x, y]) | 绘制垂直条形图。 |'
- en: '| [`Series.plot.barh`](api/pandas.Series.plot.barh.html#pandas.Series.plot.barh
    "pandas.Series.plot.barh")([x, y]) | Make a horizontal bar plot. |'
  id: totrans-974
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.plot.barh`](api/pandas.Series.plot.barh.html#pandas.Series.plot.barh
    "pandas.Series.plot.barh")([x, y]) | 绘制水平条形图。 |'
- en: '| [`Series.plot.box`](api/pandas.Series.plot.box.html#pandas.Series.plot.box
    "pandas.Series.plot.box")([by]) | Make a box plot of the DataFrame columns. |'
  id: totrans-975
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.plot.box`](api/pandas.Series.plot.box.html#pandas.Series.plot.box
    "pandas.Series.plot.box")([by]) | 绘制 DataFrame 列的箱线图。 |'
- en: '| [`Series.plot.density`](api/pandas.Series.plot.density.html#pandas.Series.plot.density
    "pandas.Series.plot.density")([bw_method, ind]) | Generate Kernel Density Estimate
    plot using Gaussian kernels. |'
  id: totrans-976
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.plot.density`](api/pandas.Series.plot.density.html#pandas.Series.plot.density
    "pandas.Series.plot.density")([bw_method, ind]) | 使用高斯核生成核密度估计图。 |'
- en: '| [`Series.plot.hist`](api/pandas.Series.plot.hist.html#pandas.Series.plot.hist
    "pandas.Series.plot.hist")([by, bins]) | Draw one histogram of the DataFrame''s
    columns. |'
  id: totrans-977
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.plot.hist`](api/pandas.Series.plot.hist.html#pandas.Series.plot.hist
    "pandas.Series.plot.hist")([by, bins]) | 绘制 DataFrame 列的直方图。 |'
- en: '| [`Series.plot.kde`](api/pandas.Series.plot.kde.html#pandas.Series.plot.kde
    "pandas.Series.plot.kde")([bw_method, ind]) | Generate Kernel Density Estimate
    plot using Gaussian kernels. |'
  id: totrans-978
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.plot.kde`](api/pandas.Series.plot.kde.html#pandas.Series.plot.kde
    "pandas.Series.plot.kde")([bw_method, ind]) | 使用高斯核生成核密度估计图。 |'
- en: '| [`Series.plot.line`](api/pandas.Series.plot.line.html#pandas.Series.plot.line
    "pandas.Series.plot.line")([x, y]) | Plot Series or DataFrame as lines. |'
  id: totrans-979
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.plot.line`](api/pandas.Series.plot.line.html#pandas.Series.plot.line
    "pandas.Series.plot.line")([x, y]) | 将 Series 或 DataFrame 绘制为折线图。 |'
- en: '| [`Series.plot.pie`](api/pandas.Series.plot.pie.html#pandas.Series.plot.pie
    "pandas.Series.plot.pie")(**kwargs) | Generate a pie plot. |'
  id: totrans-980
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.plot.pie`](api/pandas.Series.plot.pie.html#pandas.Series.plot.pie
    "pandas.Series.plot.pie")(**kwargs) | 生成饼图。 |'
- en: '| [`Series.hist`](api/pandas.Series.hist.html#pandas.Series.hist "pandas.Series.hist")([by, ax, grid, xlabelsize, ...])
    | Draw histogram of the input series using matplotlib. |'
  id: totrans-981
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.hist`](api/pandas.Series.hist.html#pandas.Series.hist "pandas.Series.hist")([by, ax, grid, xlabelsize, ...])
    | 使用 matplotlib 绘制输入序列的直方图。 |'
- en: Serialization / IO / conversion
  id: totrans-982
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 序列化 / IO / 转换
- en: '| [`Series.to_pickle`](api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle")(path, *[, compression, ...]) | Pickle (serialize) object
    to file. |'
  id: totrans-983
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_pickle`](api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle")(path, *[, compression, ...]) | 将对象序列化（Pickle）到文件。 |'
- en: '| [`Series.to_csv`](api/pandas.Series.to_csv.html#pandas.Series.to_csv "pandas.Series.to_csv")([path_or_buf, sep, na_rep, ...])
    | Write object to a comma-separated values (csv) file. |'
  id: totrans-984
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_csv`](api/pandas.Series.to_csv.html#pandas.Series.to_csv "pandas.Series.to_csv")([path_or_buf, sep, na_rep, ...])
    | 将对象写入逗号分隔值（csv）文件。 |'
- en: '| [`Series.to_dict`](api/pandas.Series.to_dict.html#pandas.Series.to_dict "pandas.Series.to_dict")(*[, into])
    | Convert Series to {label -> value} dict or dict-like object. |'
  id: totrans-985
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_dict`](api/pandas.Series.to_dict.html#pandas.Series.to_dict "pandas.Series.to_dict")(*[, into])
    | 将 Series 转换为 {标签 -> 值} 字典或类似字典的对象。 |'
- en: '| [`Series.to_excel`](api/pandas.Series.to_excel.html#pandas.Series.to_excel
    "pandas.Series.to_excel")(excel_writer, *[, ...]) | Write object to an Excel sheet.
    |'
  id: totrans-986
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_excel`](api/pandas.Series.to_excel.html#pandas.Series.to_excel
    "pandas.Series.to_excel")(excel_writer, *[, ...]) | 将对象写入 Excel 表格。 |'
- en: '| [`Series.to_frame`](api/pandas.Series.to_frame.html#pandas.Series.to_frame
    "pandas.Series.to_frame")([name]) | Convert Series to DataFrame. |'
  id: totrans-987
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_frame`](api/pandas.Series.to_frame.html#pandas.Series.to_frame
    "pandas.Series.to_frame")([name]) | 将 Series 转换为 DataFrame。 |'
- en: '| [`Series.to_xarray`](api/pandas.Series.to_xarray.html#pandas.Series.to_xarray
    "pandas.Series.to_xarray")() | Return an xarray object from the pandas object.
    |'
  id: totrans-988
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_xarray`](api/pandas.Series.to_xarray.html#pandas.Series.to_xarray
    "pandas.Series.to_xarray")() | 从 pandas 对象返回一个 xarray 对象。 |'
- en: '| [`Series.to_hdf`](api/pandas.Series.to_hdf.html#pandas.Series.to_hdf "pandas.Series.to_hdf")(path_or_buf, *, key[, mode, ...])
    | Write the contained data to an HDF5 file using HDFStore. |'
  id: totrans-989
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_hdf`](api/pandas.Series.to_hdf.html#pandas.Series.to_hdf "pandas.Series.to_hdf")(path_or_buf, *, key[, mode, ...])
    | 使用 HDFStore 将包含的数据写入 HDF5 文件。 |'
- en: '| [`Series.to_sql`](api/pandas.Series.to_sql.html#pandas.Series.to_sql "pandas.Series.to_sql")(name, con, *[, schema, ...])
    | Write records stored in a DataFrame to a SQL database. |'
  id: totrans-990
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_sql`](api/pandas.Series.to_sql.html#pandas.Series.to_sql "pandas.Series.to_sql")(name, con, *[, schema, ...])
    | 将存储在 DataFrame 中的记录写入 SQL 数据库。 |'
- en: '| [`Series.to_json`](api/pandas.Series.to_json.html#pandas.Series.to_json "pandas.Series.to_json")([path_or_buf, orient, ...])
    | Convert the object to a JSON string. |'
  id: totrans-991
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_json`](api/pandas.Series.to_json.html#pandas.Series.to_json "pandas.Series.to_json")([path_or_buf, orient, ...])
    | 将对象转换为 JSON 字符串。 |'
- en: '| [`Series.to_string`](api/pandas.Series.to_string.html#pandas.Series.to_string
    "pandas.Series.to_string")([buf, na_rep, ...]) | Render a string representation
    of the Series. |'
  id: totrans-992
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_string`](api/pandas.Series.to_string.html#pandas.Series.to_string
    "pandas.Series.to_string")([buf, na_rep, ...]) | 呈现 Series 的字符串表示。 |'
- en: '| [`Series.to_clipboard`](api/pandas.Series.to_clipboard.html#pandas.Series.to_clipboard
    "pandas.Series.to_clipboard")(*[, excel, sep]) | Copy object to the system clipboard.
    |'
  id: totrans-993
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_clipboard`](api/pandas.Series.to_clipboard.html#pandas.Series.to_clipboard
    "pandas.Series.to_clipboard")(*[, excel, sep]) | 将对象复制到系统剪贴板。 |'
- en: '| [`Series.to_latex`](api/pandas.Series.to_latex.html#pandas.Series.to_latex
    "pandas.Series.to_latex")([buf, columns, header, ...]) | Render object to a LaTeX
    tabular, longtable, or nested table. |'
  id: totrans-994
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_latex`](api/pandas.Series.to_latex.html#pandas.Series.to_latex
    "pandas.Series.to_latex")([buf, columns, header, ...]) | 将对象呈现为 LaTeX 表格、长表格或嵌套表格。
    |'
- en: '| [`Series.to_markdown`](api/pandas.Series.to_markdown.html#pandas.Series.to_markdown
    "pandas.Series.to_markdown")([buf, mode, index, ...]) | Print Series in Markdown-friendly
    format. |'
  id: totrans-995
  prefs: []
  type: TYPE_TB
  zh: '| [`Series.to_markdown`](api/pandas.Series.to_markdown.html#pandas.Series.to_markdown
    "pandas.Series.to_markdown")([buf, mode, index, ...]) | 以 Markdown 友好的格式打印 Series。
    |'
