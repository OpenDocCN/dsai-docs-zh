- en: Indexing routines
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 索引例程
- en: 原文：[https://numpy.org/doc/1.26/reference/arrays.indexing.html](https://numpy.org/doc/1.26/reference/arrays.indexing.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/arrays.indexing.html](https://numpy.org/doc/1.26/reference/arrays.indexing.html)
- en: See also
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[Indexing on ndarrays](../user/basics.indexing.html#basics-indexing)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[ndarray上的索引](../user/basics.indexing.html#basics-indexing)'
- en: Generating index arrays
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生成索引数组
- en: '| [`c_`](generated/numpy.c_.html#numpy.c_ "numpy.c_") | Translates slice objects
    to concatenation along the second axis. |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| [`c_`](generated/numpy.c_.html#numpy.c_ "numpy.c_") | 将切片对象转换为沿第二轴的串联。 |'
- en: '| [`r_`](generated/numpy.r_.html#numpy.r_ "numpy.r_") | Translates slice objects
    to concatenation along the first axis. |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| [`r_`](generated/numpy.r_.html#numpy.r_ "numpy.r_") | 将切片对象转换为沿第一轴的串联。 |'
- en: '| [`s_`](generated/numpy.s_.html#numpy.s_ "numpy.s_") | A nicer way to build
    up index tuples for arrays. |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [`s_`](generated/numpy.s_.html#numpy.s_ "numpy.s_") | 为数组构建索引元组的更好方式。 |'
- en: '| [`nonzero`](generated/numpy.nonzero.html#numpy.nonzero "numpy.nonzero")(a)
    | Return the indices of the elements that are non-zero. |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| [`nonzero`](generated/numpy.nonzero.html#numpy.nonzero "numpy.nonzero")(a)
    | 返回非零元素的索引。 |'
- en: '| [`where`](generated/numpy.where.html#numpy.where "numpy.where")(condition, [x, y], /)
    | Return elements chosen from *x* or *y* depending on *condition*. |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| [`where`](generated/numpy.where.html#numpy.where "numpy.where")(condition, [x, y], /)
    | 根据*condition*选择*x*或*y*中的元素。 |'
- en: '| [`indices`](generated/numpy.indices.html#numpy.indices "numpy.indices")(dimensions[, dtype, sparse])
    | Return an array representing the indices of a grid. |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| [`indices`](generated/numpy.indices.html#numpy.indices "numpy.indices")(dimensions[, dtype, sparse])
    | 返回表示网格索引的数组。 |'
- en: '| [`ix_`](generated/numpy.ix_.html#numpy.ix_ "numpy.ix_")(*args) | Construct
    an open mesh from multiple sequences. |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| [`ix_`](generated/numpy.ix_.html#numpy.ix_ "numpy.ix_")(*args) | 从多个序列构造开放网格。
    |'
- en: '| [`ogrid`](generated/numpy.ogrid.html#numpy.ogrid "numpy.ogrid") | An instance
    which returns an open multi-dimensional "meshgrid". |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| [`ogrid`](generated/numpy.ogrid.html#numpy.ogrid "numpy.ogrid") | 返回开放多维“网格”。
    |'
- en: '| [`ravel_multi_index`](generated/numpy.ravel_multi_index.html#numpy.ravel_multi_index
    "numpy.ravel_multi_index")(multi_index, dims[, mode, ...]) | Converts a tuple
    of index arrays into an array of flat indices, applying boundary modes to the
    multi-index. |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| [`ravel_multi_index`](generated/numpy.ravel_multi_index.html#numpy.ravel_multi_index
    "numpy.ravel_multi_index")(multi_index, dims[, mode, ...]) | 将索引数组的元组转换为平面索引的数组，并将边界模式应用于多索引。
    |'
- en: '| [`unravel_index`](generated/numpy.unravel_index.html#numpy.unravel_index
    "numpy.unravel_index")(indices, shape[, order]) | Converts a flat index or array
    of flat indices into a tuple of coordinate arrays. |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [`unravel_index`](generated/numpy.unravel_index.html#numpy.unravel_index
    "numpy.unravel_index")(indices, shape[, order]) | 将平面索引或平面索引数组转换为坐标数组的元组。 |'
- en: '| [`diag_indices`](generated/numpy.diag_indices.html#numpy.diag_indices "numpy.diag_indices")(n[, ndim])
    | Return the indices to access the main diagonal of an array. |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| [`diag_indices`](generated/numpy.diag_indices.html#numpy.diag_indices "numpy.diag_indices")(n[, ndim])
    | 返回访问数组主对角线的索引。 |'
- en: '| [`diag_indices_from`](generated/numpy.diag_indices_from.html#numpy.diag_indices_from
    "numpy.diag_indices_from")(arr) | Return the indices to access the main diagonal
    of an n-dimensional array. |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [`diag_indices_from`](generated/numpy.diag_indices_from.html#numpy.diag_indices_from
    "numpy.diag_indices_from")(arr) | 返回访问n维数组主对角线的索引。 |'
- en: '| [`mask_indices`](generated/numpy.mask_indices.html#numpy.mask_indices "numpy.mask_indices")(n, mask_func[, k])
    | Return the indices to access (n, n) arrays, given a masking function. |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [`mask_indices`](generated/numpy.mask_indices.html#numpy.mask_indices "numpy.mask_indices")(n, mask_func[, k])
    | 返回访问(n, n)数组的索引，给定一个掩码函数。 |'
- en: '| [`tril_indices`](generated/numpy.tril_indices.html#numpy.tril_indices "numpy.tril_indices")(n[, k, m])
    | Return the indices for the lower-triangle of an (n, m) array. |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [`tril_indices`](generated/numpy.tril_indices.html#numpy.tril_indices "numpy.tril_indices")(n[, k, m])
    | 返回(n, m)数组的下三角形的索引。 |'
- en: '| [`tril_indices_from`](generated/numpy.tril_indices_from.html#numpy.tril_indices_from
    "numpy.tril_indices_from")(arr[, k]) | Return the indices for the lower-triangle
    of arr. |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [`tril_indices_from`](generated/numpy.tril_indices_from.html#numpy.tril_indices_from
    "numpy.tril_indices_from")(arr[, k]) | 返回arr的下三角形的索引。 |'
- en: '| [`triu_indices`](generated/numpy.triu_indices.html#numpy.triu_indices "numpy.triu_indices")(n[, k, m])
    | Return the indices for the upper-triangle of an (n, m) array. |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`triu_indices`](generated/numpy.triu_indices.html#numpy.triu_indices "numpy.triu_indices")(n[, k, m])
    | 返回(n, m)数组的上三角形的索引。 |'
- en: '| [`triu_indices_from`](generated/numpy.triu_indices_from.html#numpy.triu_indices_from
    "numpy.triu_indices_from")(arr[, k]) | Return the indices for the upper-triangle
    of arr. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`triu_indices_from`](generated/numpy.triu_indices_from.html#numpy.triu_indices_from
    "numpy.triu_indices_from")(arr[, k]) | 返回数组上三角的索引。 |'
- en: Indexing-like operations
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 类似索引的操作
- en: '| [`take`](generated/numpy.take.html#numpy.take "numpy.take")(a, indices[, axis, out, mode])
    | Take elements from an array along an axis. |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [`take`](generated/numpy.take.html#numpy.take "numpy.take")(a, indices[, axis, out, mode])
    | 沿着轴取出数组中的元素。 |'
- en: '| [`take_along_axis`](generated/numpy.take_along_axis.html#numpy.take_along_axis
    "numpy.take_along_axis")(arr, indices, axis) | Take values from the input array
    by matching 1d index and data slices. |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [`take_along_axis`](generated/numpy.take_along_axis.html#numpy.take_along_axis
    "numpy.take_along_axis")(arr, indices, axis) | 通过匹配1d索引和数据切片，从输入数组中取值。 |'
- en: '| [`choose`](generated/numpy.choose.html#numpy.choose "numpy.choose")(a, choices[, out, mode])
    | Construct an array from an index array and a list of arrays to choose from.
    |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [`choose`](generated/numpy.choose.html#numpy.choose "numpy.choose")(a, choices[, out, mode])
    | 从索引数组和要选择的数组列表构造数组。 |'
- en: '| [`compress`](generated/numpy.compress.html#numpy.compress "numpy.compress")(condition, a[, axis, out])
    | Return selected slices of an array along given axis. |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [`compress`](generated/numpy.compress.html#numpy.compress "numpy.compress")(condition, a[, axis, out])
    | 根据给定的轴返回数组的选择片段。 |'
- en: '| [`diag`](generated/numpy.diag.html#numpy.diag "numpy.diag")(v[, k]) | Extract
    a diagonal or construct a diagonal array. |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| [`diag`](generated/numpy.diag.html#numpy.diag "numpy.diag")(v[, k]) | 提取对角线或构造对角线数组。
    |'
- en: '| [`diagonal`](generated/numpy.diagonal.html#numpy.diagonal "numpy.diagonal")(a[, offset, axis1, axis2])
    | Return specified diagonals. |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [`diagonal`](generated/numpy.diagonal.html#numpy.diagonal "numpy.diagonal")(a[, offset, axis1, axis2])
    | 返回指定的���角线。 |'
- en: '| [`select`](generated/numpy.select.html#numpy.select "numpy.select")(condlist, choicelist[, default])
    | Return an array drawn from elements in choicelist, depending on conditions.
    |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [`select`](generated/numpy.select.html#numpy.select "numpy.select")(condlist, choicelist[, default])
    | 根据条件返回从选择列表中抽取的数组。 |'
- en: '| [`lib.stride_tricks.sliding_window_view`](generated/numpy.lib.stride_tricks.sliding_window_view.html#numpy.lib.stride_tricks.sliding_window_view
    "numpy.lib.stride_tricks.sliding_window_view")(x, ...) | Create a sliding window
    view into the array with the given window shape. |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [`lib.stride_tricks.sliding_window_view`](generated/numpy.lib.stride_tricks.sliding_window_view.html#numpy.lib.stride_tricks.sliding_window_view
    "numpy.lib.stride_tricks.sliding_window_view")(x, ...) | 创建一个窗口形状的滑动窗口视图到数组中。
    |'
- en: '| [`lib.stride_tricks.as_strided`](generated/numpy.lib.stride_tricks.as_strided.html#numpy.lib.stride_tricks.as_strided
    "numpy.lib.stride_tricks.as_strided")(x[, shape, ...]) | Create a view into the
    array with the given shape and strides. |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [`lib.stride_tricks.as_strided`](generated/numpy.lib.stride_tricks.as_strided.html#numpy.lib.stride_tricks.as_strided
    "numpy.lib.stride_tricks.as_strided")(x[, shape, ...]) | 用给定的形状和跨度创建数组的视图。 |'
- en: Inserting data into arrays
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将数据插入数组
- en: '| [`place`](generated/numpy.place.html#numpy.place "numpy.place")(arr, mask, vals)
    | Change elements of an array based on conditional and input values. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [`place`](generated/numpy.place.html#numpy.place "numpy.place")(arr, mask, vals)
    | 根据条件和输入值更改数组的元素。 |'
- en: '| [`put`](generated/numpy.put.html#numpy.put "numpy.put")(a, ind, v[, mode])
    | Replaces specified elements of an array with given values. |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [`put`](generated/numpy.put.html#numpy.put "numpy.put")(a, ind, v[, mode])
    | 用给定的值替换数组的指定元素。 |'
- en: '| [`put_along_axis`](generated/numpy.put_along_axis.html#numpy.put_along_axis
    "numpy.put_along_axis")(arr, indices, values, axis) | Put values into the destination
    array by matching 1d index and data slices. |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| [`put_along_axis`](generated/numpy.put_along_axis.html#numpy.put_along_axis
    "numpy.put_along_axis")(arr, indices, values, axis) | 通过匹配1d索引和数据切片，将值放入目标数组。
    |'
- en: '| [`putmask`](generated/numpy.putmask.html#numpy.putmask "numpy.putmask")(a, mask, values)
    | Changes elements of an array based on conditional and input values. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| [`putmask`](generated/numpy.putmask.html#numpy.putmask "numpy.putmask")(a, mask, values)
    | 根据条件和输入值更改数组的元素。 |'
- en: '| [`fill_diagonal`](generated/numpy.fill_diagonal.html#numpy.fill_diagonal
    "numpy.fill_diagonal")(a, val[, wrap]) | Fill the main diagonal of the given array
    of any dimensionality. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| [`fill_diagonal`](generated/numpy.fill_diagonal.html#numpy.fill_diagonal
    "numpy.fill_diagonal")(a, val[, wrap]) | 填充给定数组的任意尺寸的主对角线。 |'
- en: Iterating over arrays
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过数组进行迭代
- en: '| [`nditer`](generated/numpy.nditer.html#numpy.nditer "numpy.nditer")(op[, flags, op_flags, op_dtypes, ...])
    | Efficient multi-dimensional iterator object to iterate over arrays. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [`nditer`](generated/numpy.nditer.html#numpy.nditer "numpy.nditer")(op[, flags, op_flags, op_dtypes, ...])
    | 高效的多维迭代器对象，用于对数组进行迭代。 |'
- en: '| [`ndenumerate`](generated/numpy.ndenumerate.html#numpy.ndenumerate "numpy.ndenumerate")(arr)
    | Multidimensional index iterator. |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| [`ndenumerate`](generated/numpy.ndenumerate.html#numpy.ndenumerate "numpy.ndenumerate")(arr)
    | 多维索引迭代器。'
- en: '| [`ndindex`](generated/numpy.ndindex.html#numpy.ndindex "numpy.ndindex")(*shape)
    | An N-dimensional iterator object to index arrays. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| [`ndindex`](generated/numpy.ndindex.html#numpy.ndindex "numpy.ndindex")(*shape)
    | 用于索引数组的N维迭代器对象。'
- en: '| [`nested_iters`](generated/numpy.nested_iters.html#numpy.nested_iters "numpy.nested_iters")(op, axes[, flags, op_flags, ...])
    | Create nditers for use in nested loops |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| [`nested_iters`](generated/numpy.nested_iters.html#numpy.nested_iters "numpy.nested_iters")(op, axes[, flags, op_flags, ...])
    | 创建用于嵌套循环的nditers'
- en: '| [`flatiter`](generated/numpy.flatiter.html#numpy.flatiter "numpy.flatiter")()
    | Flat iterator object to iterate over arrays. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| [`flatiter`](generated/numpy.flatiter.html#numpy.flatiter "numpy.flatiter")()
    | 用于遍历数组的平坦迭代器对象。'
- en: '| [`lib.Arrayterator`](generated/numpy.lib.Arrayterator.html#numpy.lib.Arrayterator
    "numpy.lib.Arrayterator")(var[, buf_size]) | Buffered iterator for big arrays.
    |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| [`lib.Arrayterator`](generated/numpy.lib.Arrayterator.html#numpy.lib.Arrayterator
    "numpy.lib.Arrayterator")(var[, buf_size]) | 大数组的缓冲迭代器。'
- en: '| [`iterable`](generated/numpy.iterable.html#numpy.iterable "numpy.iterable")(y)
    | Check whether or not an object can be iterated over. |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| [`iterable`](generated/numpy.iterable.html#numpy.iterable "numpy.iterable")(y)
    | 检查对象是否可迭代。'
- en: Generating index arrays
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生成索引数组
- en: '| [`c_`](generated/numpy.c_.html#numpy.c_ "numpy.c_") | Translates slice objects
    to concatenation along the second axis. |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| [`c_`](generated/numpy.c_.html#numpy.c_ "numpy.c_") | 将切片对象转换为沿第二轴的连接。'
- en: '| [`r_`](generated/numpy.r_.html#numpy.r_ "numpy.r_") | Translates slice objects
    to concatenation along the first axis. |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| [`r_`](generated/numpy.r_.html#numpy.r_ "numpy.r_") | 将切片对象转换为沿第一轴的连接。'
- en: '| [`s_`](generated/numpy.s_.html#numpy.s_ "numpy.s_") | A nicer way to build
    up index tuples for arrays. |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| [`s_`](generated/numpy.s_.html#numpy.s_ "numpy.s_") | 用于构建数组的索引元组的更好方式。'
- en: '| [`nonzero`](generated/numpy.nonzero.html#numpy.nonzero "numpy.nonzero")(a)
    | Return the indices of the elements that are non-zero. |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| [`nonzero`](generated/numpy.nonzero.html#numpy.nonzero "numpy.nonzero")(a)
    | 返回非零元素的索引。'
- en: '| [`where`](generated/numpy.where.html#numpy.where "numpy.where")(condition, [x, y], /)
    | Return elements chosen from *x* or *y* depending on *condition*. |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| [`where`](generated/numpy.where.html#numpy.where "numpy.where")(condition, [x, y], /)
    | 根据条件从 *x* 或 *y* 中选取元素。'
- en: '| [`indices`](generated/numpy.indices.html#numpy.indices "numpy.indices")(dimensions[, dtype, sparse])
    | Return an array representing the indices of a grid. |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| [`indices`](generated/numpy.indices.html#numpy.indices "numpy.indices")(dimensions[, dtype, sparse])
    | 返回表示网格索引的数组。'
- en: '| [`ix_`](generated/numpy.ix_.html#numpy.ix_ "numpy.ix_")(*args) | Construct
    an open mesh from multiple sequences. |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| [`ix_`](generated/numpy.ix_.html#numpy.ix_ "numpy.ix_")(*args) | 从多个序列构建开放网格。'
- en: '| [`ogrid`](generated/numpy.ogrid.html#numpy.ogrid "numpy.ogrid") | An instance
    which returns an open multi-dimensional "meshgrid". |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| [`ogrid`](generated/numpy.ogrid.html#numpy.ogrid "numpy.ogrid") | 返回一个开放的多维“网格”实例。'
- en: '| [`ravel_multi_index`](generated/numpy.ravel_multi_index.html#numpy.ravel_multi_index
    "numpy.ravel_multi_index")(multi_index, dims[, mode, ...]) | Converts a tuple
    of index arrays into an array of flat indices, applying boundary modes to the
    multi-index. |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| [`ravel_multi_index`](generated/numpy.ravel_multi_index.html#numpy.ravel_multi_index
    "numpy.ravel_multi_index")(multi_index, dims[, mode, ...]) | 将索引数组的元组转换为平坦索引数组，适用于多索引的边界模式。'
- en: '| [`unravel_index`](generated/numpy.unravel_index.html#numpy.unravel_index
    "numpy.unravel_index")(indices, shape[, order]) | Converts a flat index or array
    of flat indices into a tuple of coordinate arrays. |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| [`unravel_index`](generated/numpy.unravel_index.html#numpy.unravel_index
    "numpy.unravel_index")(indices, shape[, order]) | 将平坦索引或平坦索引数组转换为坐标数组的元组。'
- en: '| [`diag_indices`](generated/numpy.diag_indices.html#numpy.diag_indices "numpy.diag_indices")(n[, ndim])
    | Return the indices to access the main diagonal of an array. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| [`diag_indices`](generated/numpy.diag_indices.html#numpy.diag_indices "numpy.diag_indices")(n[, ndim])
    | 返回访问数组主对角线的索引。'
- en: '| [`diag_indices_from`](generated/numpy.diag_indices_from.html#numpy.diag_indices_from
    "numpy.diag_indices_from")(arr) | Return the indices to access the main diagonal
    of an n-dimensional array. |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| [`diag_indices_from`](generated/numpy.diag_indices_from.html#numpy.diag_indices_from
    "numpy.diag_indices_from")(arr) | 返回访问 n 维数组主对角线的索引。'
- en: '| [`mask_indices`](generated/numpy.mask_indices.html#numpy.mask_indices "numpy.mask_indices")(n, mask_func[, k])
    | Return the indices to access (n, n) arrays, given a masking function. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| [`mask_indices`](generated/numpy.mask_indices.html#numpy.mask_indices "numpy.mask_indices")(n, mask_func[, k])
    | 返回使用掩码函数访问（n, n）数组的索引。'
- en: '| [`tril_indices`](generated/numpy.tril_indices.html#numpy.tril_indices "numpy.tril_indices")(n[, k, m])
    | Return the indices for the lower-triangle of an (n, m) array. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| [`tril_indices`](generated/numpy.tril_indices.html#numpy.tril_indices "numpy.tril_indices")(n[, k, m])
    | 返回（n, m）数组的下三角形的索引。 |'
- en: '| [`tril_indices_from`](generated/numpy.tril_indices_from.html#numpy.tril_indices_from
    "numpy.tril_indices_from")(arr[, k]) | Return the indices for the lower-triangle
    of arr. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| [`tril_indices_from`](generated/numpy.tril_indices_from.html#numpy.tril_indices_from
    "numpy.tril_indices_from")(arr[, k]) | 返回数组的下三角形的索引。 |'
- en: '| [`triu_indices`](generated/numpy.triu_indices.html#numpy.triu_indices "numpy.triu_indices")(n[, k, m])
    | Return the indices for the upper-triangle of an (n, m) array. |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| [`triu_indices`](generated/numpy.triu_indices.html#numpy.triu_indices "numpy.triu_indices")(n[, k, m])
    | 返回（n, m）数组的上三角形的索引。 |'
- en: '| [`triu_indices_from`](generated/numpy.triu_indices_from.html#numpy.triu_indices_from
    "numpy.triu_indices_from")(arr[, k]) | Return the indices for the upper-triangle
    of arr. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| [`triu_indices_from`](generated/numpy.triu_indices_from.html#numpy.triu_indices_from
    "numpy.triu_indices_from")(arr[, k]) | 返回数组的上三角形的索引。 |'
- en: Indexing-like operations
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 类似索引的操作
- en: '| [`take`](generated/numpy.take.html#numpy.take "numpy.take")(a, indices[, axis, out, mode])
    | Take elements from an array along an axis. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| [`take`](generated/numpy.take.html#numpy.take "numpy.take")(a, indices[, axis, out, mode])
    | 沿轴取数组中的元素。 |'
- en: '| [`take_along_axis`](generated/numpy.take_along_axis.html#numpy.take_along_axis
    "numpy.take_along_axis")(arr, indices, axis) | Take values from the input array
    by matching 1d index and data slices. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| [`take_along_axis`](generated/numpy.take_along_axis.html#numpy.take_along_axis
    "numpy.take_along_axis")(arr, indices, axis) | 通过匹配一维索引和数据切片从输入数组中获取值。 |'
- en: '| [`choose`](generated/numpy.choose.html#numpy.choose "numpy.choose")(a, choices[, out, mode])
    | Construct an array from an index array and a list of arrays to choose from.
    |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| [`choose`](generated/numpy.choose.html#numpy.choose "numpy.choose")(a, choices[, out, mode])
    | 从索引数组和要选择的数组列表构造数组。 |'
- en: '| [`compress`](generated/numpy.compress.html#numpy.compress "numpy.compress")(condition, a[, axis, out])
    | Return selected slices of an array along given axis. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| [`compress`](generated/numpy.compress.html#numpy.compress "numpy.compress")(condition, a[, axis, out])
    | 返回给定轴上数组的选定切片。 |'
- en: '| [`diag`](generated/numpy.diag.html#numpy.diag "numpy.diag")(v[, k]) | Extract
    a diagonal or construct a diagonal array. |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| [`diag`](generated/numpy.diag.html#numpy.diag "numpy.diag")(v[, k]) | 提取对角线或构造对角线数组。
    |'
- en: '| [`diagonal`](generated/numpy.diagonal.html#numpy.diagonal "numpy.diagonal")(a[, offset, axis1, axis2])
    | Return specified diagonals. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| [`diagonal`](generated/numpy.diagonal.html#numpy.diagonal "numpy.diagonal")(a[, offset, axis1, axis2])
    | 返回指定的对角线。 |'
- en: '| [`select`](generated/numpy.select.html#numpy.select "numpy.select")(condlist, choicelist[, default])
    | Return an array drawn from elements in choicelist, depending on conditions.
    |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| [`select`](generated/numpy.select.html#numpy.select "numpy.select")(condlist, choicelist[, default])
    | 根据条件从 choicelist 中返回一个数组。 |'
- en: '| [`lib.stride_tricks.sliding_window_view`](generated/numpy.lib.stride_tricks.sliding_window_view.html#numpy.lib.stride_tricks.sliding_window_view
    "numpy.lib.stride_tricks.sliding_window_view")(x, ...) | Create a sliding window
    view into the array with the given window shape. |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| [`lib.stride_tricks.sliding_window_view`](generated/numpy.lib.stride_tricks.sliding_window_view.html#numpy.lib.stride_tricks.sliding_window_view
    "numpy.lib.stride_tricks.sliding_window_view")(x, ...) | 使用给定的窗口形状创建数组的滑动窗口视图。
    |'
- en: '| [`lib.stride_tricks.as_strided`](generated/numpy.lib.stride_tricks.as_strided.html#numpy.lib.stride_tricks.as_strided
    "numpy.lib.stride_tricks.as_strided")(x[, shape, ...]) | Create a view into the
    array with the given shape and strides. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| [`lib.stride_tricks.as_strided`](generated/numpy.lib.stride_tricks.as_strided.html#numpy.lib.stride_tricks.as_strided
    "numpy.lib.stride_tricks.as_strided")(x[, shape, ...]) | 使用给定的形状和步幅创建数组的视图。 |'
- en: Inserting data into arrays
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向数组中插入数据
- en: '| [`place`](generated/numpy.place.html#numpy.place "numpy.place")(arr, mask, vals)
    | Change elements of an array based on conditional and input values. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| [`place`](generated/numpy.place.html#numpy.place "numpy.place")(arr, mask, vals)
    | 根据条件和输入值更改数组的元素。 |'
- en: '| [`put`](generated/numpy.put.html#numpy.put "numpy.put")(a, ind, v[, mode])
    | Replaces specified elements of an array with given values. |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| [`put`](generated/numpy.put.html#numpy.put "numpy.put")(a, ind, v[, mode])
    | 用给定值替换数组的指定元素。 |'
- en: '| [`put_along_axis`](generated/numpy.put_along_axis.html#numpy.put_along_axis
    "numpy.put_along_axis")(arr, indices, values, axis) | Put values into the destination
    array by matching 1d index and data slices. |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| [`put_along_axis`](generated/numpy.put_along_axis.html#numpy.put_along_axis
    "numpy.put_along_axis")(arr, indices, values, axis) | 通过匹配一维索引和数据切片将值放入目标数组。 |'
- en: '| [`putmask`](generated/numpy.putmask.html#numpy.putmask "numpy.putmask")(a, mask, values)
    | Changes elements of an array based on conditional and input values. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| [`putmask`](generated/numpy.putmask.html#numpy.putmask "numpy.putmask")(a, mask, values)
    | 基于条件和输入值更改数组元素。'
- en: '| [`fill_diagonal`](generated/numpy.fill_diagonal.html#numpy.fill_diagonal
    "numpy.fill_diagonal")(a, val[, wrap]) | Fill the main diagonal of the given array
    of any dimensionality. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| [`fill_diagonal`](generated/numpy.fill_diagonal.html#numpy.fill_diagonal
    "numpy.fill_diagonal")(a, val[, wrap]) | 填充给定任意维度数组的主对角线。'
- en: Iterating over arrays
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 遍历数组
- en: '| [`nditer`](generated/numpy.nditer.html#numpy.nditer "numpy.nditer")(op[, flags, op_flags, op_dtypes, ...])
    | Efficient multi-dimensional iterator object to iterate over arrays. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| [`nditer`](generated/numpy.nditer.html#numpy.nditer "numpy.nditer")(op[, flags, op_flags, op_dtypes, ...])
    | 高效的多维迭代器对象，用于遍历数组。'
- en: '| [`ndenumerate`](generated/numpy.ndenumerate.html#numpy.ndenumerate "numpy.ndenumerate")(arr)
    | Multidimensional index iterator. |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| [`ndenumerate`](generated/numpy.ndenumerate.html#numpy.ndenumerate "numpy.ndenumerate")(arr)
    | 多维索引迭代器。'
- en: '| [`ndindex`](generated/numpy.ndindex.html#numpy.ndindex "numpy.ndindex")(*shape)
    | An N-dimensional iterator object to index arrays. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| [`ndindex`](generated/numpy.ndindex.html#numpy.ndindex "numpy.ndindex")(*shape)
    | 用于索引数组的 N 维迭代器对象。'
- en: '| [`nested_iters`](generated/numpy.nested_iters.html#numpy.nested_iters "numpy.nested_iters")(op, axes[, flags, op_flags, ...])
    | Create nditers for use in nested loops |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| [`nested_iters`](generated/numpy.nested_iters.html#numpy.nested_iters "numpy.nested_iters")(op, axes[, flags, op_flags, ...])
    | 创建用于嵌套循环的 nditer。'
- en: '| [`flatiter`](generated/numpy.flatiter.html#numpy.flatiter "numpy.flatiter")()
    | Flat iterator object to iterate over arrays. |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| [`flatiter`](generated/numpy.flatiter.html#numpy.flatiter "numpy.flatiter")()
    | 用于遍历数组的扁平迭代器对象。'
- en: '| [`lib.Arrayterator`](generated/numpy.lib.Arrayterator.html#numpy.lib.Arrayterator
    "numpy.lib.Arrayterator")(var[, buf_size]) | Buffered iterator for big arrays.
    |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| [`lib.Arrayterator`](generated/numpy.lib.Arrayterator.html#numpy.lib.Arrayterator
    "numpy.lib.Arrayterator")(var[, buf_size]) | 大型数组的缓冲迭代器。'
- en: '| [`iterable`](generated/numpy.iterable.html#numpy.iterable "numpy.iterable")(y)
    | Check whether or not an object can be iterated over. |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| [`iterable`](generated/numpy.iterable.html#numpy.iterable "numpy.iterable")(y)
    | 检查对象是否可迭代。'
