- en: Version 0.21.0 (October 27, 2017)
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 版本 0.21.0（2017年10月27日）
- en: 原文：[https://pandas.pydata.org/docs/whatsnew/v0.21.0.html](https://pandas.pydata.org/docs/whatsnew/v0.21.0.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/whatsnew/v0.21.0.html](https://pandas.pydata.org/docs/whatsnew/v0.21.0.html)
- en: This is a major release from 0.20.3 and includes a number of API changes, deprecations,
    new features, enhancements, and performance improvements along with a large number
    of bug fixes. We recommend that all users upgrade to this version.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这是从 0.20.3 开始的一个重大更新，包括许多 API 更改、弃用、新功能、增强功能和性能改进，以及大量的错误修复。我们建议所有用户升级到这个版本。
- en: 'Highlights include:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 亮点包括：
- en: Integration with [Apache Parquet](https://parquet.apache.org/), including a
    new top-level [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") function and [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") method, see [here](#whatsnew-0210-enhancements-parquet).
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与 [Apache Parquet](https://parquet.apache.org/) 集成，包括一个新的顶级 [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") 函数和 [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") 方法，请见[这里](#whatsnew-0210-enhancements-parquet)。
- en: New user-facing `pandas.api.types.CategoricalDtype` for specifying categoricals
    independent of the data, see [here](#whatsnew-0210-enhancements-categorical-dtype).
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的用户界面 `pandas.api.types.CategoricalDtype` 用于独立于数据指定分类变量，详情请见[这里](#whatsnew-0210-enhancements-categorical-dtype)。
- en: The behavior of `sum` and `prod` on all-NaN Series/DataFrames is now consistent
    and no longer depends on whether [bottleneck](https://bottleneck.readthedocs.io)
    is installed, and `sum` and `prod` on empty Series now return NaN instead of 0,
    see [here](#whatsnew-0210-api-breaking-bottleneck).
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于所有值为 NaN 的 Series/DataFrames，`sum` 和 `prod` 的行为现在是一致的，不再取决于是否安装了 [bottleneck](https://bottleneck.readthedocs.io)，而且空
    Series 上的 `sum` 和 `prod` 现在返回 NaN 而不是 0，请参见[这里](#whatsnew-0210-api-breaking-bottleneck)。
- en: Compatibility fixes for pypy, see [here](#whatsnew-0210-pypy).
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pypy 的兼容性修复，请见[这里](#whatsnew-0210-pypy)。
- en: Additions to the `drop`, `reindex` and `rename` API to make them more consistent,
    see [here](#whatsnew-0210-enhancements-drop-api).
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对 `drop`、`reindex` 和 `rename` API 的添加，使它们更加一致，请见[这里](#whatsnew-0210-enhancements-drop-api)。
- en: Addition of the new methods `DataFrame.infer_objects` (see [here](#whatsnew-0210-enhancements-infer-objects))
    and `GroupBy.pipe` (see [here](#whatsnew-0210-enhancements-groupby-pipe)).
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新方法 `DataFrame.infer_objects`（请见[这里](#whatsnew-0210-enhancements-infer-objects)）和
    `GroupBy.pipe`（请见[这里](#whatsnew-0210-enhancements-groupby-pipe)）的添加。
- en: Indexing with a list of labels, where one or more of the labels is missing,
    is deprecated and will raise a KeyError in a future version, see [here](#whatsnew-0210-api-breaking-loc).
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用标签列表进行索引，其中一个或多个标签丢失的情况已被弃用，并将在将来的版本中引发 KeyError，请见[这里](#whatsnew-0210-api-breaking-loc)。
- en: Check the [API Changes](#whatsnew-0210-api-breaking) and [deprecations](#whatsnew-0210-deprecations)
    before updating.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在更新之前，请查看[API 更改](#whatsnew-0210-api-breaking)和[弃用项](#whatsnew-0210-deprecations)。
- en: What’s new in v0.21.0
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: v0.21.0 有什么新功能
- en: '[New features](#new-features)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[新功能](#new-features)'
- en: '[Integration with Apache Parquet file format](#integration-with-apache-parquet-file-format)'
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与 Apache Parquet 文件格式的集成
- en: '[Method `infer_objects` type conversion](#method-infer-objects-type-conversion)'
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 方法 `infer_objects` 类型转换
- en: '[Improved warnings when attempting to create columns](#improved-warnings-when-attempting-to-create-columns)'
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当尝试创建列时，警告改进
- en: '[Method `drop` now also accepts index/columns keywords](#method-drop-now-also-accepts-index-columns-keywords)'
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[方法 `drop` 现在也接受 index/columns 关键字](#method-drop-now-also-accepts-index-columns-keywords)'
- en: '[Methods `rename`, `reindex` now also accept axis keyword](#methods-rename-reindex-now-also-accept-axis-keyword)'
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 方法 `rename`、`reindex` 现在也接受 axis 关键字
- en: '[`CategoricalDtype` for specifying categoricals](#categoricaldtype-for-specifying-categoricals)'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于指定分类变量的 `CategoricalDtype`
- en: '[`GroupBy` objects now have a `pipe` method](#groupby-objects-now-have-a-pipe-method)'
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GroupBy` 对象现在具有 `pipe` 方法'
- en: '[`Categorical.rename_categories` accepts a dict-like](#categorical-rename-categories-accepts-a-dict-like)'
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Categorical.rename_categories` 现在接受类似字典的对象](#categorical-rename-categories-accepts-a-dict-like)'
- en: '[Other enhancements](#other-enhancements)'
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[其他增强](#other-enhancements)'
- en: '[Backwards incompatible API changes](#backwards-incompatible-api-changes)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[向后不兼容的 API 更改](#backwards-incompatible-api-changes)'
- en: '[Dependencies have increased minimum versions](#dependencies-have-increased-minimum-versions)'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[依赖项的最低版本已经提高](#dependencies-have-increased-minimum-versions)'
- en: '[Sum/prod of all-NaN or empty Series/DataFrames is now consistently NaN](#sum-prod-of-all-nan-or-empty-series-dataframes-is-now-consistently-nan)'
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[所有-NaN 或空 Series/DataFrames 的 sum/prod 现在一致为 NaN](#sum-prod-of-all-nan-or-empty-series-dataframes-is-now-consistently-nan)'
- en: '[Indexing with a list with missing labels is deprecated](#indexing-with-a-list-with-missing-labels-is-deprecated)'
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用具有缺失标签的列表进行索引已弃用](#indexing-with-a-list-with-missing-labels-is-deprecated)'
- en: '[NA naming changes](#na-naming-changes)'
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[NA 命名更改](#na-naming-changes)'
- en: '[Iteration of Series/Index will now return Python scalars](#iteration-of-series-index-will-now-return-python-scalars)'
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Series/Index 的迭代现在���返回 Python 标量](#iteration-of-series-index-will-now-return-python-scalars)'
- en: '[Indexing with a Boolean Index](#indexing-with-a-boolean-index)'
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用布尔索引进行索引](#indexing-with-a-boolean-index)'
- en: '[`PeriodIndex` resampling](#periodindex-resampling)'
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`PeriodIndex` 重采样](#periodindex-resampling)'
- en: '[Improved error handling during item assignment in pd.eval](#improved-error-handling-during-item-assignment-in-pd-eval)'
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 pd.eval 中进行项目赋值时改进错误处理](#improved-error-handling-during-item-assignment-in-pd-eval)'
- en: '[Dtype conversions](#dtype-conversions)'
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Dtype 转换](#dtype-conversions)'
- en: '[MultiIndex constructor with a single level](#multiindex-constructor-with-a-single-level)'
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用单个级别的 MultiIndex 构造函数](#multiindex-constructor-with-a-single-level)'
- en: '[UTC localization with Series](#utc-localization-with-series)'
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Series 中的 UTC 本地化](#utc-localization-with-series)'
- en: '[Consistency of range functions](#consistency-of-range-functions)'
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[范围函数的一致性](#consistency-of-range-functions)'
- en: '[No automatic Matplotlib converters](#no-automatic-matplotlib-converters)'
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[不再自动转换为 Matplotlib](#no-automatic-matplotlib-converters)'
- en: '[Other API changes](#other-api-changes)'
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[其他 API 更改](#other-api-changes)'
- en: '[Deprecations](#deprecations)'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[弃用](#deprecations)'
- en: '[Series.select and DataFrame.select](#series-select-and-dataframe-select)'
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Series.select 和 DataFrame.select](#series-select-and-dataframe-select)'
- en: '[Series.argmax and Series.argmin](#series-argmax-and-series-argmin)'
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Series.argmax 和 Series.argmin](#series-argmax-and-series-argmin)'
- en: '[Removal of prior version deprecations/changes](#removal-of-prior-version-deprecations-changes)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[删除之前版本的弃用/更改](#removal-of-prior-version-deprecations-changes)'
- en: '[Performance improvements](#performance-improvements)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[性能改进](#performance-improvements)'
- en: '[Documentation changes](#documentation-changes)'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[文档更改](#documentation-changes)'
- en: '[Bug fixes](#bug-fixes)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[错误修复](#bug-fixes)'
- en: '[Conversion](#conversion)'
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[转换](#conversion)'
- en: '[Indexing](#indexing)'
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[索引](#indexing)'
- en: '[IO](#io)'
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[IO](#io)'
- en: '[Plotting](#plotting)'
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[绘图](#plotting)'
- en: '[GroupBy/resample/rolling](#groupby-resample-rolling)'
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[GroupBy/resample/rolling](#groupby-resample-rolling)'
- en: '[Sparse](#sparse)'
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[稀疏](#sparse)'
- en: '[Reshaping](#reshaping)'
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[重塑](#reshaping)'
- en: '[Numeric](#numeric)'
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数值](#numeric)'
- en: '[Categorical](#categorical)'
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[分类](#categorical)'
- en: '[PyPy](#pypy)'
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[PyPy](#pypy)'
- en: '[Other](#other)'
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[其他](#other)'
- en: '[Contributors](#contributors)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[贡献者](#contributors)'
- en: '## New features'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '## 新功能'
- en: '### Integration with Apache Parquet file format'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '### 与 Apache Parquet 文件格式的集成'
- en: Integration with [Apache Parquet](https://parquet.apache.org/), including a
    new top-level [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") and [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") method, see [here](../user_guide/io.html#io-parquet)
    ([GH 15838](https://github.com/pandas-dev/pandas/issues/15838), [GH 17438](https://github.com/pandas-dev/pandas/issues/17438)).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 与 [Apache Parquet](https://parquet.apache.org/) 的集成，包括一个新的顶级[`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") 和 [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") 方法，请参见[这里](../user_guide/io.html#io-parquet) ([GH
    15838](https://github.com/pandas-dev/pandas/issues/15838), [GH 17438](https://github.com/pandas-dev/pandas/issues/17438))。
- en: '[Apache Parquet](https://parquet.apache.org/) provides a cross-language, binary
    file format for reading and writing data frames efficiently. Parquet is designed
    to faithfully serialize and de-serialize `DataFrame` s, supporting all of the
    pandas dtypes, including extension dtypes such as datetime with timezones.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[Apache Parquet](https://parquet.apache.org/) 提供了一个跨语言的二进制文件格式，用于高效读写数据框。Parquet
    被设计为忠实地序列化和反序列化`DataFrame` s，支持所有的 pandas dtypes，包括带有时区的扩展 dtypes，如带有时区的日期时间。'
- en: 'This functionality depends on either the [pyarrow](http://arrow.apache.org/docs/python/)
    or [fastparquet](https://fastparquet.readthedocs.io/en/latest/) library. For more
    details, see [the IO docs on Parquet](../user_guide/io.html#io-parquet).  ###
    Method `infer_objects` type conversion'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 此功能取决于 [pyarrow](http://arrow.apache.org/docs/python/) 或 [fastparquet](https://fastparquet.readthedocs.io/en/latest/)
    库。有关更多详细信息，请参阅[Parquet 上的 IO 文档](../user_guide/io.html#io-parquet)。### 方法 `infer_objects`
    类型转换
- en: The [`DataFrame.infer_objects()`](../reference/api/pandas.DataFrame.infer_objects.html#pandas.DataFrame.infer_objects
    "pandas.DataFrame.infer_objects") and [`Series.infer_objects()`](../reference/api/pandas.Series.infer_objects.html#pandas.Series.infer_objects
    "pandas.Series.infer_objects") methods have been added to perform dtype inference
    on object columns, replacing some of the functionality of the deprecated `convert_objects`
    method. See the documentation [here](../user_guide/basics.html#basics-object-conversion)
    for more details. ([GH 11221](https://github.com/pandas-dev/pandas/issues/11221))
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.infer_objects()`](../reference/api/pandas.DataFrame.infer_objects.html#pandas.DataFrame.infer_objects
    "pandas.DataFrame.infer_objects")和[`Series.infer_objects()`](../reference/api/pandas.Series.infer_objects.html#pandas.Series.infer_objects
    "pandas.Series.infer_objects")方法已添加以在对象列上执行dtype推断，取代了已弃用的`convert_objects`方法的部分功能。有关更多详细信息，请参阅[此处](../user_guide/basics.html#basics-object-conversion)的文档。([GH
    11221](https://github.com/pandas-dev/pandas/issues/11221))'
- en: 'This method only performs soft conversions on object columns, converting Python
    objects to native types, but not any coercive conversions. For example:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法仅对对象列执行软转换，将Python对象转换为本机类型，但不执行任何强制转换。例如：
- en: '[PRE0]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note that column `'C'` was not converted - only scalar numeric types will be
    converted to a new type. Other types of conversion should be accomplished using
    the [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") function (or [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime"), [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta")).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意列`'C'`未被转换 - 只有标量数值类型将被转换为新类型。其他类型的转换应使用[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric")函数（或[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime")，[`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta")）来完成。
- en: '[PRE1]  ### Improved warnings when attempting to create columns'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE1]  ### 尝试创建列时改进的警告'
- en: 'New users are often puzzled by the relationship between column operations and
    attribute access on `DataFrame` instances ([GH 7175](https://github.com/pandas-dev/pandas/issues/7175)).
    One specific instance of this confusion is attempting to create a new column by
    setting an attribute on the `DataFrame`:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 新用户经常对`DataFrame`实例上的列操作和属性访问之间的关系感到困惑（[GH 7175](https://github.com/pandas-dev/pandas/issues/7175)）。这种困惑的一个具体例子是尝试通过在`DataFrame`上设置属性来创建新列：
- en: '[PRE2]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This does not raise any obvious exceptions, but also does not create a new
    column:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这不会引发任何明显的异常，但也不会创建新列：
- en: '[PRE3]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Setting a list-like data structure into a new attribute now raises a `UserWarning`
    about the potential for unexpected behavior. See [Attribute Access](../user_guide/indexing.html#indexing-attribute-access).  ###
    Method `drop` now also accepts index/columns keywords'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '将类似列表的数据结构设置为新属性现在会引发一个关于潜在意外行为的`UserWarning`。请参阅[属性访问](../user_guide/indexing.html#indexing-attribute-access)。  ###
    方法`drop`现在还接受索引/列关键字'
- en: The [`drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") method has gained `index`/`columns` keywords as an alternative
    to specifying the `axis`. This is similar to the behavior of `reindex` ([GH 12392](https://github.com/pandas-dev/pandas/issues/12392)).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '[`drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop")方法已经增加了`index`/`columns`关键字作为指定`axis`的替代方法。这类似于`reindex`的行为（[GH
    12392](https://github.com/pandas-dev/pandas/issues/12392)）。'
- en: 'For example:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE4]  ### Methods `rename`, `reindex` now also accept axis keyword'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE4]  ### 方法`rename`，`reindex`现在也接受axis关键字'
- en: The [`DataFrame.rename()`](../reference/api/pandas.DataFrame.rename.html#pandas.DataFrame.rename
    "pandas.DataFrame.rename") and [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") methods have gained the `axis` keyword to specify
    the axis to target with the operation ([GH 12392](https://github.com/pandas-dev/pandas/issues/12392)).
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.rename()`](../reference/api/pandas.DataFrame.rename.html#pandas.DataFrame.rename
    "pandas.DataFrame.rename")和[`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex")方法已经增加了`axis`关键字，用于指定要针对操作的轴（[GH 12392](https://github.com/pandas-dev/pandas/issues/12392)）。'
- en: 'Here’s `rename`:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是`rename`：
- en: '[PRE5]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'And `reindex`:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 和`reindex`：
- en: '[PRE6]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The “index, columns” style continues to work as before.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: “索引，列”风格仍然像以前一样工作。
- en: '[PRE7]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'We *highly* encourage using named arguments to avoid confusion when using either
    style.  ### `CategoricalDtype` for specifying categoricals'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '我们*强烈*建议使用命名参数以避免在使用任何风格时产生混淆。  ### 用于指定分类的`CategoricalDtype`'
- en: '`pandas.api.types.CategoricalDtype` has been added to the public API and expanded
    to include the `categories` and `ordered` attributes. A `CategoricalDtype` can
    be used to specify the set of categories and orderedness of an array, independent
    of the data. This can be useful for example, when converting string data to a
    `Categorical` ([GH 14711](https://github.com/pandas-dev/pandas/issues/14711),
    [GH 15078](https://github.com/pandas-dev/pandas/issues/15078), [GH 16015](https://github.com/pandas-dev/pandas/issues/16015),
    [GH 17643](https://github.com/pandas-dev/pandas/issues/17643)):'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas.api.types.CategoricalDtype` 已添加到公共 API，并扩展以包括 `categories` 和 `ordered`
    属性。`CategoricalDtype` 可用于指定数组的类别集和顺序，而与数据无关。例如，当将字符串数据转换为 `Categorical` 时，这可能很有用
    ([GH 14711](https://github.com/pandas-dev/pandas/issues/14711), [GH 15078](https://github.com/pandas-dev/pandas/issues/15078),
    [GH 16015](https://github.com/pandas-dev/pandas/issues/16015), [GH 17643](https://github.com/pandas-dev/pandas/issues/17643)):'
- en: '[PRE8]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'One place that deserves special mention is in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"). Previously, with `dtype={''col'': ''category''}`, the returned
    values and categories would always be strings.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '一个值得特别提及的地方是在 [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") 中。以前，使用 `dtype={''col'': ''category''}`，返回的值和类别总是字符串。'
- en: '[PRE9]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Notice the “object” dtype.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 注意“object” dtype。
- en: With a `CategoricalDtype` of all numerics, datetimes, or timedeltas, we can
    automatically convert to the correct type
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 有了所有数字、日期时间或时间增量的 `CategoricalDtype`，我们可以自动转换为正确的类型
- en: '[PRE10]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The values have been correctly interpreted as integers.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 值已被正确解释为整数。
- en: The `.dtype` property of a `Categorical`, `CategoricalIndex` or a `Series` with
    categorical type will now return an instance of `CategoricalDtype`. While the
    repr has changed, `str(CategoricalDtype())` is still the string `'category'`.
    We’ll take this moment to remind users that the *preferred* way to detect categorical
    data is to use [`pandas.api.types.is_categorical_dtype()`](../reference/api/pandas.api.types.is_categorical_dtype.html#pandas.api.types.is_categorical_dtype
    "pandas.api.types.is_categorical_dtype"), and not `str(dtype) == 'category'`.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '`Categorical`、`CategoricalIndex` 或具有分类类型的 `Series` 的 `.dtype` 属性现在将返回 `CategoricalDtype`
    的实例。虽然 repr 已更改，但 `str(CategoricalDtype())` 仍然是字符串 `''category''`。我们在此提醒用户，检测分类数据的*首选*方法是使用
    [`pandas.api.types.is_categorical_dtype()`](../reference/api/pandas.api.types.is_categorical_dtype.html#pandas.api.types.is_categorical_dtype
    "pandas.api.types.is_categorical_dtype")，而不是 `str(dtype) == ''category''`。'
- en: 'See the [CategoricalDtype docs](../user_guide/categorical.html#categorical-categoricaldtype)
    for more.  ### `GroupBy` objects now have a `pipe` method'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '更多信息请参阅 [CategoricalDtype 文档](../user_guide/categorical.html#categorical-categoricaldtype)。  ###
    `GroupBy` 对象现在有一个 `pipe` 方法'
- en: '`GroupBy` objects now have a `pipe` method, similar to the one on `DataFrame`
    and `Series`, that allow for functions that take a `GroupBy` to be composed in
    a clean, readable syntax. ([GH 17871](https://github.com/pandas-dev/pandas/issues/17871))'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '`GroupBy` 对象现在有一个 `pipe` 方法，类似于 `DataFrame` 和 `Series` 上的方法，允许以清晰、易读的语法组合接受
    `GroupBy` 的函数。([GH 17871](https://github.com/pandas-dev/pandas/issues/17871))'
- en: For a concrete example on combining `.groupby` and `.pipe` , imagine having
    a DataFrame with columns for stores, products, revenue and sold quantity. We’d
    like to do a groupwise calculation of *prices* (i.e. revenue/quantity) per store
    and per product. We could do this in a multi-step operation, but expressing it
    in terms of piping can make the code more readable.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一个结合了 `.groupby` 和 `.pipe` 的具体示例，请想象一个包含了商店、产品、收入和销售数量列的 DataFrame。我们希望对每个商店和每种产品进行组内计算
    *价格*（即收入/数量）。我们可以通过多步操作来完成这个操作，但用管道来表达会使代码更易读。
- en: 'First we set the data:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 首先我们设置数据：
- en: '[PRE11]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now, to find prices per store/product, we can simply do:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，要找到每个商店/产品的价格，我们只需简单地执行：
- en: '[PRE12]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'See the [documentation](../user_guide/groupby.html#groupby-pipe) for more.  ###
    `Categorical.rename_categories` accepts a dict-like'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '更多信息请参阅[文档](../user_guide/groupby.html#groupby-pipe)。  ### `Categorical.rename_categories`
    接受类似字典的参数'
- en: '[`rename_categories()`](../reference/api/pandas.Series.cat.rename_categories.html#pandas.Series.cat.rename_categories
    "pandas.Series.cat.rename_categories") now accepts a dict-like argument for `new_categories`.
    The previous categories are looked up in the dictionary’s keys and replaced if
    found. The behavior of missing and extra keys is the same as in [`DataFrame.rename()`](../reference/api/pandas.DataFrame.rename.html#pandas.DataFrame.rename
    "pandas.DataFrame.rename").'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '[`rename_categories()`](../reference/api/pandas.Series.cat.rename_categories.html#pandas.Series.cat.rename_categories
    "pandas.Series.cat.rename_categories") 现在接受类似字典的参数作为 `new_categories`。先前的类别将在字典的键中查找并进行替换。缺失和额外键的行为与
    [`DataFrame.rename()`](../reference/api/pandas.DataFrame.rename.html#pandas.DataFrame.rename
    "pandas.DataFrame.rename") 中的行为相同。'
- en: '[PRE13]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Warning
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: To assist with upgrading pandas, `rename_categories` treats `Series` as list-like.
    Typically, Series are considered to be dict-like (e.g. in `.rename`, `.map`).
    In a future version of pandas `rename_categories` will change to treat them as
    dict-like. Follow the warning message’s recommendations for writing future-proof
    code.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助升级 pandas，`rename_categories` 将 `Series` 视为类似列表的对象。通常，Series 被视为类似字典的对象（例如在
    `.rename`、`.map` 中）。在 pandas 的未来版本中，`rename_categories` 将会改变其对待方式，将其视为类似字典的对象。请遵循警告信息的建议编写具有未来兼容性的代码。
- en: '[PRE14]  ### Other enhancements'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE14]  ### 其他增强功能'
- en: New functions or methods
  id: totrans-105
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 新增的函数或方法
- en: '[`Resampler.nearest()`](../reference/api/pandas.core.resample.Resampler.nearest.html#pandas.core.resample.Resampler.nearest
    "pandas.core.resample.Resampler.nearest") is added to support nearest-neighbor
    upsampling ([GH 17496](https://github.com/pandas-dev/pandas/issues/17496)).'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Resampler.nearest()`](../reference/api/pandas.core.resample.Resampler.nearest.html#pandas.core.resample.Resampler.nearest
    "pandas.core.resample.Resampler.nearest") 添加了支持最近邻上采样的功能（[GH 17496](https://github.com/pandas-dev/pandas/issues/17496)）。'
- en: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") has
    added support for a `to_frame` method ([GH 15230](https://github.com/pandas-dev/pandas/issues/15230)).'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") 添加了
    `to_frame` 方法的支持（[GH 15230](https://github.com/pandas-dev/pandas/issues/15230)）。'
- en: New keywords
  id: totrans-108
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 新增的关键字
- en: Added a `skipna` parameter to [`infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") to support type inference in the presence of missing
    values ([GH 17059](https://github.com/pandas-dev/pandas/issues/17059)).
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了 `skipna` 参数到 [`infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") 以支持在存在缺失值时进行类型推断（[GH 17059](https://github.com/pandas-dev/pandas/issues/17059)）。
- en: '[`Series.to_dict()`](../reference/api/pandas.Series.to_dict.html#pandas.Series.to_dict
    "pandas.Series.to_dict") and [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") now support an `into` keyword which allows you to
    specify the `collections.Mapping` subclass that you would like returned. The default
    is `dict`, which is backwards compatible. ([GH 16122](https://github.com/pandas-dev/pandas/issues/16122))'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.to_dict()`](../reference/api/pandas.Series.to_dict.html#pandas.Series.to_dict
    "pandas.Series.to_dict") 和 [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") 现在支持一个 `into` 关键字，该关键字允许您指定要返回的 `collections.Mapping`
    子类。默认为 `dict`，与向后兼容性一致。（[GH 16122](https://github.com/pandas-dev/pandas/issues/16122)）'
- en: '[`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") and [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") now support the `inplace` parameter. ([GH 14636](https://github.com/pandas-dev/pandas/issues/14636))'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") 和 [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") 现在支持 `inplace` 参数。（[GH 14636](https://github.com/pandas-dev/pandas/issues/14636)）'
- en: '[`Series.to_pickle()`](../reference/api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle") and [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle") have gained a `protocol` parameter ([GH 16252](https://github.com/pandas-dev/pandas/issues/16252)).
    By default, this parameter is set to [HIGHEST_PROTOCOL](https://docs.python.org/3/library/pickle.html#data-stream-format)'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.to_pickle()`](../reference/api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle") 和 [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle") 已经添加了 `protocol` 参数（[GH 16252](https://github.com/pandas-dev/pandas/issues/16252)）。默认情况下，此参数设置为
    [HIGHEST_PROTOCOL](https://docs.python.org/3/library/pickle.html#data-stream-format)。'
- en: '[`read_feather()`](../reference/api/pandas.read_feather.html#pandas.read_feather
    "pandas.read_feather") has gained the `nthreads` parameter for multi-threaded
    operations ([GH 16359](https://github.com/pandas-dev/pandas/issues/16359))'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_feather()`](../reference/api/pandas.read_feather.html#pandas.read_feather
    "pandas.read_feather") 增加了 `nthreads` 参数，用于多线程操作 ([GH 16359](https://github.com/pandas-dev/pandas/issues/16359))'
- en: '[`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip") and [`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip") have gained an `inplace` argument. ([GH 15388](https://github.com/pandas-dev/pandas/issues/15388))'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip") 和 [`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip") 现在增加了一个 `inplace` 参数。 ([GH 15388](https://github.com/pandas-dev/pandas/issues/15388))'
- en: '[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    has gained a `margins_name` parameter to define the name of the row / column that
    will contain the totals when `margins=True`. ([GH 15972](https://github.com/pandas-dev/pandas/issues/15972))'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    增加了一个 `margins_name` 参数，用于定义当 `margins=True` 时包含总计的行/列的名称。 ([GH 15972](https://github.com/pandas-dev/pandas/issues/15972))'
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    now accepts a `chunksize` parameter that can be used when `lines=True`. If `chunksize`
    is passed, read_json now returns an iterator which reads in `chunksize` lines
    with each iteration. ([GH 17048](https://github.com/pandas-dev/pandas/issues/17048))'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    现在接受一个 `chunksize` 参数，当 `lines=True` 时可以使用。如果传递了 `chunksize`，read_json 现在返回一个迭代器，每次迭代读取
    `chunksize` 行。 ([GH 17048](https://github.com/pandas-dev/pandas/issues/17048))'
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    and [`to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") now accept a `compression` argument which allows them
    to transparently handle compressed files. ([GH 17798](https://github.com/pandas-dev/pandas/issues/17798))'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    和 [`to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") 现在接受一个 `compression` 参数，允许它们透明地处理压缩文件。 ([GH 17798](https://github.com/pandas-dev/pandas/issues/17798))'
- en: Various enhancements
  id: totrans-118
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 各种增强
- en: Improved the import time of pandas by about 2.25x. ([GH 16764](https://github.com/pandas-dev/pandas/issues/16764))
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 pandas 的导入时间提高了约 2.25 倍。 ([GH 16764](https://github.com/pandas-dev/pandas/issues/16764))
- en: Support for [PEP 519 – Adding a file system path protocol](https://www.python.org/dev/peps/pep-0519/)
    on most readers (e.g. [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")) and writers (e.g. [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv")) ([GH 13823](https://github.com/pandas-dev/pandas/issues/13823)).
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对大多数读取器（例如 [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")）和写入器（例如 [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv")）添加了对 [PEP 519 – Adding a file system path protocol](https://www.python.org/dev/peps/pep-0519/)
    的支持 ([GH 13823](https://github.com/pandas-dev/pandas/issues/13823)).
- en: Added a `__fspath__` method to `pd.HDFStore`, `pd.ExcelFile`, and `pd.ExcelWriter`
    to work properly with the file system path protocol ([GH 13823](https://github.com/pandas-dev/pandas/issues/13823)).
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对 `pd.HDFStore`, `pd.ExcelFile`, 和 `pd.ExcelWriter` 添加了一个 `__fspath__` 方法，以正确处理文件系统路径协议
    ([GH 13823](https://github.com/pandas-dev/pandas/issues/13823)).
- en: The `validate` argument for [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") now checks whether a merge is one-to-one, one-to-many, many-to-one,
    or many-to-many. If a merge is found to not be an example of specified merge type,
    an exception of type `MergeError` will be raised. For more, see [here](../user_guide/merging.html#merging-validation)
    ([GH 16270](https://github.com/pandas-dev/pandas/issues/16270))
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    的 `validate` 参数现在检查合并是一对一、一对多、多对一还是多对多。如果发现合并不是指定合并类型的示例，则会引发 `MergeError` 类型的异常。有关更多信息，请参见[这里](../user_guide/merging.html#merging-validation)
    ([GH 16270](https://github.com/pandas-dev/pandas/issues/16270))'
- en: Added support for [PEP 518](https://www.python.org/dev/peps/pep-0518/) (`pyproject.toml`)
    to the build system ([GH 16745](https://github.com/pandas-dev/pandas/issues/16745))
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对构建系统添加了对 [PEP 518](https://www.python.org/dev/peps/pep-0518/) (`pyproject.toml`)
    的支持 ([GH 16745](https://github.com/pandas-dev/pandas/issues/16745))
- en: '`RangeIndex.append()` now returns a `RangeIndex` object when possible ([GH
    16212](https://github.com/pandas-dev/pandas/issues/16212))'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RangeIndex.append()` 现在在可能时返回一个`RangeIndex`对象 ([GH 16212](https://github.com/pandas-dev/pandas/issues/16212))'
- en: '[`Series.rename_axis()`](../reference/api/pandas.Series.rename_axis.html#pandas.Series.rename_axis
    "pandas.Series.rename_axis") and [`DataFrame.rename_axis()`](../reference/api/pandas.DataFrame.rename_axis.html#pandas.DataFrame.rename_axis
    "pandas.DataFrame.rename_axis") with `inplace=True` now return `None` while renaming
    the axis inplace. ([GH 15704](https://github.com/pandas-dev/pandas/issues/15704))'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.rename_axis()`](../reference/api/pandas.Series.rename_axis.html#pandas.Series.rename_axis
    "pandas.Series.rename_axis") 和 [`DataFrame.rename_axis()`](../reference/api/pandas.DataFrame.rename_axis.html#pandas.DataFrame.rename_axis
    "pandas.DataFrame.rename_axis") 在`inplace=True`时，现在会在原地重命名轴并返回`None`。 ([GH 15704](https://github.com/pandas-dev/pandas/issues/15704))'
- en: '[`api.types.infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") now infers decimals. ([GH 15690](https://github.com/pandas-dev/pandas/issues/15690))'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`api.types.infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") 现在能够推断小数。 ([GH 15690](https://github.com/pandas-dev/pandas/issues/15690))'
- en: '[`DataFrame.select_dtypes()`](../reference/api/pandas.DataFrame.select_dtypes.html#pandas.DataFrame.select_dtypes
    "pandas.DataFrame.select_dtypes") now accepts scalar values for include/exclude
    as well as list-like. ([GH 16855](https://github.com/pandas-dev/pandas/issues/16855))'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.select_dtypes()`](../reference/api/pandas.DataFrame.select_dtypes.html#pandas.DataFrame.select_dtypes
    "pandas.DataFrame.select_dtypes") 现在接受标量值用于包含/排除以及类似列表的值。 ([GH 16855](https://github.com/pandas-dev/pandas/issues/16855))'
- en: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") now accepts ‘YS’ in addition to ‘AS’ as an alias for start
    of year. ([GH 9313](https://github.com/pandas-dev/pandas/issues/9313))'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") 现在除了‘AS’之外，还接受‘YS’作为年初的别名。 ([GH 9313](https://github.com/pandas-dev/pandas/issues/9313))'
- en: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") now accepts ‘Y’ in addition to ‘A’ as an alias for end of
    year. ([GH 9313](https://github.com/pandas-dev/pandas/issues/9313))'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") 现在除了‘A’之外，还接受‘Y’作为年末的别名。 ([GH 9313](https://github.com/pandas-dev/pandas/issues/9313))'
- en: '[`DataFrame.add_prefix()`](../reference/api/pandas.DataFrame.add_prefix.html#pandas.DataFrame.add_prefix
    "pandas.DataFrame.add_prefix") and [`DataFrame.add_suffix()`](../reference/api/pandas.DataFrame.add_suffix.html#pandas.DataFrame.add_suffix
    "pandas.DataFrame.add_suffix") now accept strings containing the ‘%’ character.
    ([GH 17151](https://github.com/pandas-dev/pandas/issues/17151))'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.add_prefix()`](../reference/api/pandas.DataFrame.add_prefix.html#pandas.DataFrame.add_prefix
    "pandas.DataFrame.add_prefix") 和 [`DataFrame.add_suffix()`](../reference/api/pandas.DataFrame.add_suffix.html#pandas.DataFrame.add_suffix
    "pandas.DataFrame.add_suffix") 现在接受包含‘%’字符的字符串。 ([GH 17151](https://github.com/pandas-dev/pandas/issues/17151))'
- en: Read/write methods that infer compression ([`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), [`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle"), and [`to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle")) can now infer from path-like objects, such as `pathlib.Path`.
    ([GH 17206](https://github.com/pandas-dev/pandas/issues/17206))
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读/写方法可以推断压缩（[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")、[`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table")、[`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle")和[`to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle")) 现在可以从类似路径的对象中推断，比如`pathlib.Path`。 ([GH 17206](https://github.com/pandas-dev/pandas/issues/17206))
- en: '[`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    now recognizes much more of the most frequently used date (datetime) formats in
    SAS7BDAT files. ([GH 15871](https://github.com/pandas-dev/pandas/issues/15871))'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    现在能够识别更多SAS7BDAT文件中最常用的日期（时间）格式。 ([GH 15871](https://github.com/pandas-dev/pandas/issues/15871))'
- en: '[`DataFrame.items()`](../reference/api/pandas.DataFrame.items.html#pandas.DataFrame.items
    "pandas.DataFrame.items") and [`Series.items()`](../reference/api/pandas.Series.items.html#pandas.Series.items
    "pandas.Series.items") are now present in both Python 2 and 3 and is lazy in all
    cases. ([GH 13918](https://github.com/pandas-dev/pandas/issues/13918), [GH 17213](https://github.com/pandas-dev/pandas/issues/17213))'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.items()`](../reference/api/pandas.DataFrame.items.html#pandas.DataFrame.items
    "pandas.DataFrame.items") 和 [`Series.items()`](../reference/api/pandas.Series.items.html#pandas.Series.items
    "pandas.Series.items") 现在在 Python 2 和 3 中都存在，并且在所有情况下都是惰性的。 ([GH 13918](https://github.com/pandas-dev/pandas/issues/13918),
    [GH 17213](https://github.com/pandas-dev/pandas/issues/17213))'
- en: '`pandas.io.formats.style.Styler.where()` has been implemented as a convenience
    for `pandas.io.formats.style.Styler.applymap()`. ([GH 17474](https://github.com/pandas-dev/pandas/issues/17474))'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas.io.formats.style.Styler.where()` 已实现为 `pandas.io.formats.style.Styler.applymap()`
    的方便用法。 ([GH 17474](https://github.com/pandas-dev/pandas/issues/17474))'
- en: '`MultiIndex.is_monotonic_decreasing()` has been implemented. Previously returned
    `False` in all cases. ([GH 16554](https://github.com/pandas-dev/pandas/issues/16554))'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已实现 `MultiIndex.is_monotonic_decreasing()`。先前在所有情况下返回 `False`。 ([GH 16554](https://github.com/pandas-dev/pandas/issues/16554))
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") raises `ImportError` with a better message if `xlrd` is not
    installed. ([GH 17613](https://github.com/pandas-dev/pandas/issues/17613))'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") 如果未安装 `xlrd`，则提供更好的消息引发 `ImportError`。 ([GH 17613](https://github.com/pandas-dev/pandas/issues/17613))'
- en: '[`DataFrame.assign()`](../reference/api/pandas.DataFrame.assign.html#pandas.DataFrame.assign
    "pandas.DataFrame.assign") will preserve the original order of `**kwargs` for
    Python 3.6+ users instead of sorting the column names. ([GH 14207](https://github.com/pandas-dev/pandas/issues/14207))'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.assign()`](../reference/api/pandas.DataFrame.assign.html#pandas.DataFrame.assign
    "pandas.DataFrame.assign") 将为 Python 3.6+ 用户保留 `**kwargs` 的原始顺序，而不是对列名进行排序。 ([GH
    14207](https://github.com/pandas-dev/pandas/issues/14207))'
- en: '[`Series.reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex"), [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex"), [`Index.get_indexer()`](../reference/api/pandas.Index.get_indexer.html#pandas.Index.get_indexer
    "pandas.Index.get_indexer") now support list-like argument for `tolerance`. ([GH
    17367](https://github.com/pandas-dev/pandas/issues/17367))  ## Backwards incompatible
    API changes'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex"), [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex"), [`Index.get_indexer()`](../reference/api/pandas.Index.get_indexer.html#pandas.Index.get_indexer
    "pandas.Index.get_indexer") 现在支持 `tolerance` 的类似列表参数。 ([GH 17367](https://github.com/pandas-dev/pandas/issues/17367))  ##
    不兼容的 API 更改'
- en: '### Dependencies have increased minimum versions'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '### 依赖项已增加最低版本要求'
- en: 'We have updated our minimum supported versions of dependencies ([GH 15206](https://github.com/pandas-dev/pandas/issues/15206),
    [GH 15543](https://github.com/pandas-dev/pandas/issues/15543), [GH 15214](https://github.com/pandas-dev/pandas/issues/15214)).
    If installed, we now require:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已更新了对依赖项的最低支持版本 ([GH 15206](https://github.com/pandas-dev/pandas/issues/15206),
    [GH 15543](https://github.com/pandas-dev/pandas/issues/15543), [GH 15214](https://github.com/pandas-dev/pandas/issues/15214))。
    如果已安装，我们现在要求：
- en: '| Package | Minimum Version | Required |'
  id: totrans-141
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| Package | Minimum Version | Required |'
- en: '| --- | --- | --- |'
  id: totrans-142
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Numpy | 1.9.0 | X |'
  id: totrans-143
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| Numpy | 1.9.0 | X |'
- en: '| Matplotlib | 1.4.3 |  |'
  id: totrans-144
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| Matplotlib | 1.4.3 |  |'
- en: '| Scipy | 0.14.0 |  |'
  id: totrans-145
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| Scipy | 0.14.0 |  |'
- en: '| Bottleneck | 1.0.0 |  |'
  id: totrans-146
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| Bottleneck | 1.0.0 |  |'
- en: 'Additionally, support has been dropped for Python 3.4 ([GH 15251](https://github.com/pandas-dev/pandas/issues/15251)).  ###
    Sum/prod of all-NaN or empty Series/DataFrames is now consistently NaN'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '此外，不再支持 Python 3.4 ([GH 15251](https://github.com/pandas-dev/pandas/issues/15251))。  ###
    所有-NaN或空 Series/DataFrames 的 Sum/prod 现在一致为 NaN'
- en: Note
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 注
- en: The changes described here have been partially reverted. See the [v0.22.0 Whatsnew](v0.22.0.html#whatsnew-0220)
    for more.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 此处描述的更改已被部分撤销。请参阅 [v0.22.0 Whatsnew](v0.22.0.html#whatsnew-0220) 了解更多。
- en: The behavior of `sum` and `prod` on all-NaN Series/DataFrames no longer depends
    on whether [bottleneck](https://bottleneck.readthedocs.io) is installed, and return
    value of `sum` and `prod` on an empty Series has changed ([GH 9422](https://github.com/pandas-dev/pandas/issues/9422),
    [GH 15507](https://github.com/pandas-dev/pandas/issues/15507)).
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '`sum` 和 `prod` 在所有-NaN Series/DataFrames 上的行为不再取决于是否已安装 [bottleneck](https://bottleneck.readthedocs.io)，并且空
    Series 上 `sum` 和 `prod` 的返回值已更改 ([GH 9422](https://github.com/pandas-dev/pandas/issues/9422),
    [GH 15507](https://github.com/pandas-dev/pandas/issues/15507))。'
- en: Calling `sum` or `prod` on an empty or all-`NaN` `Series`, or columns of a `DataFrame`,
    will result in `NaN`. See the [docs](../user_guide/missing_data.html#missing-data-calculations).
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 对于空或全部为`NaN`的`Series`，或者`DataFrame`的列，调用`sum`或`prod`将导致`NaN`。请参阅[文档](../user_guide/missing_data.html#missing-data-calculations)。
- en: '[PRE15]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Previously WITHOUT `bottleneck` installed:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 先前没有安装`bottleneck`：
- en: '[PRE16]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Previously WITH `bottleneck`:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 先前带有`bottleneck`：
- en: '[PRE17]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'New behavior, without regard to the bottleneck installation:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为，不考虑`bottleneck`的安装情况：
- en: '[PRE18]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Note that this also changes the sum of an empty `Series`. Previously this always
    returned 0 regardless of a `bottleneck` installation:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这也改变了空`Series`的和。以前，这总是返回 0，无论是否安装了`bottleneck`：
- en: '[PRE19]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'but for consistency with the all-NaN case, this was changed to return 0 as
    well:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 但为了与全`NaN`情况保持一致，这也改为返回 0：
- en: '[PRE20]  ### Indexing with a list with missing labels is deprecated'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE20]  ### 使用带有缺失标签的列表进行索引已弃用'
- en: Previously, selecting with a list of labels, where one or more labels were missing
    would always succeed, returning `NaN` for missing labels. This will now show a
    `FutureWarning`. In the future this will raise a `KeyError` ([GH 15747](https://github.com/pandas-dev/pandas/issues/15747)).
    This warning will trigger on a `DataFrame` or a `Series` for using `.loc[]` or
    `[[]]` when passing a list-of-labels with at least 1 missing label.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，使用带有缺失标签的列表进行选择总是会成功，对于缺失的标签返回`NaN`。现在这将显示一个`FutureWarning`。将来这将引发一个`KeyError`([GH
    15747](https://github.com/pandas-dev/pandas/issues/15747))。当传递至少有 1 个缺失标签的标签列表时，此警告将在使用`.loc[]`或`[[]]`的`DataFrame`或`Series`上触发。
- en: '[PRE21]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Previous behavior
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 先前的行为
- en: '[PRE22]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Current behavior
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 当前行为
- en: '[PRE23]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The idiomatic way to achieve selecting potentially not-found elements is via
    `.reindex()`
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 实现选择可能未找到的元素的惯用方法是通过`.reindex()`。
- en: '[PRE24]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Selection with all keys found is unchanged.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 选择所有找到的键不变。
- en: '[PRE25]  ### NA naming changes'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE25]  ### NA 命名更改'
- en: In order to promote more consistency among the pandas API, we have added additional
    top-level functions [`isna()`](../reference/api/pandas.isna.html#pandas.isna "pandas.isna")
    and [`notna()`](../reference/api/pandas.notna.html#pandas.notna "pandas.notna")
    that are aliases for [`isnull()`](../reference/api/pandas.isnull.html#pandas.isnull
    "pandas.isnull") and [`notnull()`](../reference/api/pandas.notnull.html#pandas.notnull
    "pandas.notnull"). The naming scheme is now more consistent with methods like
    `.dropna()` and `.fillna()`. Furthermore in all cases where `.isnull()` and `.notnull()`
    methods are defined, these have additional methods named `.isna()` and `.notna()`,
    these are included for classes `Categorical`, `Index`, `Series`, and `DataFrame`.
    ([GH 15001](https://github.com/pandas-dev/pandas/issues/15001)).
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在 pandas API 中促进更一致性，我们添加了额外的顶级函数[`isna()`](../reference/api/pandas.isna.html#pandas.isna
    "pandas.isna")和[`notna()`](../reference/api/pandas.notna.html#pandas.notna "pandas.notna")，它们是[`isnull()`](../reference/api/pandas.isnull.html#pandas.isnull
    "pandas.isnull")和[`notnull()`](../reference/api/pandas.notnull.html#pandas.notnull
    "pandas.notnull")的别名。命名方案现在与`.dropna()`和`.fillna()`等方法更一致。此外，在定义`.isnull()`和`.notnull()`方法的所有情况下，这些方法都有额外的方法名为`.isna()`和`.notna()`，这些方法包括类`Categorical`、`Index`、`Series`和`DataFrame`。
    ([GH 15001](https://github.com/pandas-dev/pandas/issues/15001))。
- en: 'The configuration option `pd.options.mode.use_inf_as_null` is deprecated, and
    `pd.options.mode.use_inf_as_na` is added as a replacement.  ### Iteration of Series/Index
    will now return Python scalars'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '配置选项`pd.options.mode.use_inf_as_null`已弃用，新增了`pd.options.mode.use_inf_as_na`作为替代。  ###
    Series/Index 的迭代现在将返回 Python 标量'
- en: Previously, when using certain iteration methods for a `Series` with dtype `int`
    or `float`, you would receive a `numpy` scalar, e.g. a `np.int64`, rather than
    a Python `int`. Issue ([GH 10904](https://github.com/pandas-dev/pandas/issues/10904))
    corrected this for `Series.tolist()` and `list(Series)`. This change makes all
    iteration methods consistent, in particular, for `__iter__()` and `.map()`; note
    that this only affects int/float dtypes. ([GH 13236](https://github.com/pandas-dev/pandas/issues/13236),
    [GH 13258](https://github.com/pandas-dev/pandas/issues/13258), [GH 14216](https://github.com/pandas-dev/pandas/issues/14216)).
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，对于dtype为`int`或`float`的`Series`使用某些迭代方法时，您将收到一个`numpy`标量，例如`np.int64`，而不是Python
    `int`。问题([GH 10904](https://github.com/pandas-dev/pandas/issues/10904))已经为`Series.tolist()`和`list(Series)`更正了这一点。此更改使所有迭代方法保持一致，特别是对于`__iter__()`和`.map()`；请注意，这仅影响int/float
    dtypes。([GH 13236](https://github.com/pandas-dev/pandas/issues/13236), [GH 13258](https://github.com/pandas-dev/pandas/issues/13258),
    [GH 14216](https://github.com/pandas-dev/pandas/issues/14216))。
- en: '[PRE26]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Previously:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 以前：
- en: '[PRE27]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'New behavior:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为：
- en: '[PRE28]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Furthermore this will now correctly box the results of iteration for [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") as well.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，现在将正确地对[`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") 的结果进行盒装。
- en: '[PRE29]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Previously:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 以前：
- en: '[PRE30]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'New behavior:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为：
- en: '[PRE31]  ### Indexing with a Boolean Index'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE31]  ### 使用布尔索引进行索引'
- en: Previously when passing a boolean `Index` to `.loc`, if the index of the `Series/DataFrame`
    had `boolean` labels, you would get a label based selection, potentially duplicating
    result labels, rather than a boolean indexing selection (where `True` selects
    elements), this was inconsistent how a boolean numpy array indexed. The new behavior
    is to act like a boolean numpy array indexer. ([GH 17738](https://github.com/pandas-dev/pandas/issues/17738))
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，当将布尔`Index`传递给`.loc`时，如果`Series/DataFrame`的索引具有`boolean`标签，则会获得基于标签的选择，可能会复制结果标签，而不是布尔索引选择（其中`True`选择元素），这与布尔
    numpy 数组的索引方式不一致。新行为是像布尔 numpy 数组索引器一样操作。([GH 17738](https://github.com/pandas-dev/pandas/issues/17738))
- en: 'Previous behavior:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 先前行为：
- en: '[PRE32]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Current behavior
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 当前行为
- en: '[PRE34]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Furthermore, previously if you had an index that was non-numeric (e.g. strings),
    then a boolean Index would raise a `KeyError`. This will now be treated as a boolean
    indexer.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，以前如果索引是非数字的（例如字符串），那么布尔索引将引发`KeyError`。现在将被视为布尔索引器。
- en: 'Previously behavior:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 先前行为：
- en: '[PRE35]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Current behavior
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 当前行为
- en: '[PRE37]  ### `PeriodIndex` resampling'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE37]  ### `PeriodIndex` 重新采样'
- en: In previous versions of pandas, resampling a `Series`/`DataFrame` indexed by
    a `PeriodIndex` returned a `DatetimeIndex` in some cases ([GH 12884](https://github.com/pandas-dev/pandas/issues/12884)).
    Resampling to a multiplied frequency now returns a `PeriodIndex` ([GH 15944](https://github.com/pandas-dev/pandas/issues/15944)).
    As a minor enhancement, resampling a `PeriodIndex` can now handle `NaT` values
    ([GH 13224](https://github.com/pandas-dev/pandas/issues/13224))
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在 pandas 的先前版本中，对由`PeriodIndex`索引的`Series`/`DataFrame`进行重新采样在某些情况下返回一个`DatetimeIndex`
    ([GH 12884](https://github.com/pandas-dev/pandas/issues/12884))。现在，对乘频率进行重新采样将返回一个`PeriodIndex`
    ([GH 15944](https://github.com/pandas-dev/pandas/issues/15944))。作为一个小的增强，现在可以处理`PeriodIndex`中的`NaT`值
    ([GH 13224](https://github.com/pandas-dev/pandas/issues/13224))
- en: 'Previous behavior:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 先前行为：
- en: '[PRE38]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'New behavior:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为：
- en: '[PRE39]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Upsampling and calling `.ohlc()` previously returned a `Series`, basically identical
    to calling `.asfreq()`. OHLC upsampling now returns a DataFrame with columns `open`,
    `high`, `low` and `close` ([GH 13083](https://github.com/pandas-dev/pandas/issues/13083)).
    This is consistent with downsampling and `DatetimeIndex` behavior.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 上采样并调用`.ohlc()` 以前返回一个`Series`，基本上与调用`.asfreq()` 相同。现在，OHLC 上采样将返回一个具有列`open`、`high`、`low`
    和`close`的 DataFrame ([GH 13083](https://github.com/pandas-dev/pandas/issues/13083))。这与下采样和`DatetimeIndex`的行为一致。
- en: 'Previous behavior:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 先前行为：
- en: '[PRE40]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'New behavior:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为：
- en: '[PRE41]  ### Improved error handling during item assignment in pd.eval'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE41]  ### 在 pd.eval 中改进了项目分配时的错误处理'
- en: '[`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval") will
    now raise a `ValueError` when item assignment malfunctions, or inplace operations
    are specified, but there is no item assignment in the expression ([GH 16732](https://github.com/pandas-dev/pandas/issues/16732))'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '[`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval") 现在会在项目分配出现故障或指定了原地操作但表达式中没有项目分配时引发`ValueError`（[GH
    16732](https://github.com/pandas-dev/pandas/issues/16732)）'
- en: '[PRE42]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Previously, if you attempted the following expression, you would get a not
    very helpful error message:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，如果尝试以下表达式，将会得到一个不太有用的错误消息：
- en: '[PRE43]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'This is a very long way of saying numpy arrays don’t support string-item indexing.
    With this change, the error message is now this:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 这是说 numpy 数组不支持字符串项索引的一种很长的方式。通过这个改变，错误消息现在是这样的：
- en: '[PRE44]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'It also used to be possible to evaluate expressions inplace, even if there
    was no item assignment:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 以前还可以对表达式进行原地评估，即使没有项目分配：
- en: '[PRE45]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'However, this input does not make much sense because the output is not being
    assigned to the target. Now, a `ValueError` will be raised when such an input
    is passed in:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这种输入并没有太多意义，因为输出没有被分配给目标。现在，当传递这样的输入时，将引发`ValueError`：
- en: '[PRE46]  ### Dtype conversions'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE46]  ### Dtype 转换'
- en: Previously assignments, `.where()` and `.fillna()` with a `bool` assignment,
    would coerce to same the type (e.g. int / float), or raise for datetimelikes.
    These will now preserve the bools with `object` dtypes. ([GH 16821](https://github.com/pandas-dev/pandas/issues/16821)).
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，使用`bool`赋值进行赋值、`.where()`和`.fillna()`会强制转换为相同的类型（例如 int / float），或者对于日期时间相关内容会引发错误。现在，这些操作将保留具有`object`数据类型的布尔值。([GH
    16821](https://github.com/pandas-dev/pandas/issues/16821)).
- en: '[PRE47]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: New behavior
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为
- en: '[PRE49]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Previously, as assignment to a datetimelike with a non-datetimelike would coerce
    the non-datetime-like item being assigned ([GH 14145](https://github.com/pandas-dev/pandas/issues/14145)).
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，对非日期时间相关项进行赋值时，会强制转换为非日期时间相关项（[GH 14145](https://github.com/pandas-dev/pandas/issues/14145)）。
- en: '[PRE50]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: These now coerce to `object` dtype.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 现在强制转换为`object`数据类型。
- en: '[PRE52]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Inconsistent behavior in `.where()` with datetimelikes which would raise rather
    than coerce to `object` ([GH 16402](https://github.com/pandas-dev/pandas/issues/16402))
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`.where()`中与日期时间相关的不一致行为，会引发而不是强制转换为`object`（[GH 16402](https://github.com/pandas-dev/pandas/issues/16402)）
- en: 'Bug in assignment against `int64` data with `np.ndarray` with `float64` dtype
    may keep `int64` dtype ([GH 14001](https://github.com/pandas-dev/pandas/issues/14001))  ###
    MultiIndex constructor with a single level'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '对带有`float64`数据类型的`np.ndarray`进行`int64`数据的赋值可能会保持`int64`数据类型 ([GH 14001](https://github.com/pandas-dev/pandas/issues/14001))  ###
    具有单一级别的 MultiIndex 构造函数'
- en: The `MultiIndex` constructors no longer squeezes a MultiIndex with all length-one
    levels down to a regular `Index`. This affects all the `MultiIndex` constructors.
    ([GH 17178](https://github.com/pandas-dev/pandas/issues/17178))
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '`MultiIndex` 构造函数不再将具有全部长度为一级别的 MultiIndex 压缩为常规`Index`。这会影响到所有的`MultiIndex`构造函数。([GH
    17178](https://github.com/pandas-dev/pandas/issues/17178))'
- en: 'Previous behavior:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 先前的行为：
- en: '[PRE53]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Length 1 levels are no longer special-cased. They behave exactly as if you
    had length 2+ levels, so a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") is always returned from all of the `MultiIndex` constructors:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 长度为 1 的级别不再特殊处理。它们的行为与长度为 2+ 的级别完全相同，因此所有的`MultiIndex`构造函数都将返回一个[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")：
- en: '[PRE54]  ### UTC localization with Series'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE54]  ### 使用 Series 进行 UTC 本地化'
- en: Previously, [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") did not localize datetime `Series` data when `utc=True`
    was passed. Now, [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") will correctly localize `Series` with a `datetime64[ns,
    UTC]` dtype to be consistent with how list-like and `Index` data are handled.
    ([GH 6415](https://github.com/pandas-dev/pandas/issues/6415)).
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，当传递`utc=True`时，[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime")不会对日期时间`Series`数据进行本地化。现在，当传递`utc=True`时，[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime")将正确地对`datetime64[ns, UTC]`数据类型的`Series`进行本地化，以与列表样式和`Index`数据的处理方式保持一致。([GH
    6415](https://github.com/pandas-dev/pandas/issues/6415)).
- en: Previous behavior
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 先前的行为
- en: '[PRE55]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '[PRE56]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: New behavior
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为
- en: '[PRE57]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Additionally, DataFrames with datetime columns that were parsed by [`read_sql_table()`](../reference/api/pandas.read_sql_table.html#pandas.read_sql_table
    "pandas.read_sql_table") and [`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query") will also be localized to UTC only if the original SQL
    columns were timezone aware datetime columns.  ### Consistency of range functions'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，通过[`read_sql_table()`](../reference/api/pandas.read_sql_table.html#pandas.read_sql_table
    "pandas.read_sql_table")和[`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query")解析的具有日期时间列的 DataFrame，如果原始 SQL 列是带时区的日期时间列，则也将被本地化为 UTC。###
    范围函数的一致性
- en: 'In previous versions, there were some inconsistencies between the various range
    functions: [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range"), [`bdate_range()`](../reference/api/pandas.bdate_range.html#pandas.bdate_range
    "pandas.bdate_range"), [`period_range()`](../reference/api/pandas.period_range.html#pandas.period_range
    "pandas.period_range"), [`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range"), and [`interval_range()`](../reference/api/pandas.interval_range.html#pandas.interval_range
    "pandas.interval_range"). ([GH 17471](https://github.com/pandas-dev/pandas/issues/17471)).'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在以前的版本中，各种范围函数之间存在一些不一致性：[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range")、[`bdate_range()`](../reference/api/pandas.bdate_range.html#pandas.bdate_range
    "pandas.bdate_range")、[`period_range()`](../reference/api/pandas.period_range.html#pandas.period_range
    "pandas.period_range")、[`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range")和[`interval_range()`](../reference/api/pandas.interval_range.html#pandas.interval_range
    "pandas.interval_range")。（[GH 17471](https://github.com/pandas-dev/pandas/issues/17471)）。
- en: One of the inconsistent behaviors occurred when the `start`, `end` and `period`
    parameters were all specified, potentially leading to ambiguous ranges. When all
    three parameters were passed, `interval_range` ignored the `period` parameter,
    `period_range` ignored the `end` parameter, and the other range functions raised.
    To promote consistency among the range functions, and avoid potentially ambiguous
    ranges, `interval_range` and `period_range` will now raise when all three parameters
    are passed.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 当`start`、`end`和`period`参数都指定时，出现不一致的行为之一可能导致模糊的范围。当传递了所有三个参数时，`interval_range`忽略了`period`参数，`period_range`忽略了`end`参数，而其他范围函数则引发了错误。为了促进范围函数之间的一致性，并避免可能的模糊范围，当传递了所有三个参数时，`interval_range`和`period_range`现在将引发错误。
- en: 'Previous behavior:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的行为：
- en: '[PRE58]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'New behavior:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为：
- en: '[PRE59]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Additionally, the endpoint parameter `end` was not included in the intervals
    produced by `interval_range`. However, all other range functions include `end`
    in their output. To promote consistency among the range functions, `interval_range`
    will now include `end` as the right endpoint of the final interval, except if
    `freq` is specified in a way which skips `end`.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，`interval_range`产生的区间中未包含端点参数`end`。然而，所有其他范围函数都在其输出中包含了`end`。为了促进范围函数之间的一致性，`interval_range`现在将`end`作为最后一个区间的右端点，除非以一种跳过`end`的方式指定了`freq`。
- en: 'Previous behavior:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的行为：
- en: '[PRE60]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'New behavior:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为：
- en: '[PRE61]  ### No automatic Matplotlib converters'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE61]  ### 没有自动 Matplotlib 转换器'
- en: 'pandas no longer registers our `date`, `time`, `datetime`, `datetime64`, and
    `Period` converters with matplotlib when pandas is imported. Matplotlib plot methods
    (`plt.plot`, `ax.plot`, …), will not nicely format the x-axis for `DatetimeIndex`
    or `PeriodIndex` values. You must explicitly register these methods:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 当 pandas 被导入时，pandas 不再使用 matplotlib 注册我们的`date`、`time`、`datetime`、`datetime64`和`Period`转换器。Matplotlib
    绘图方法（`plt.plot`、`ax.plot`等）将不会为`DatetimeIndex`或`PeriodIndex`值漂亮地格式化 x 轴。你必须显式注册这些方法：
- en: pandas built-in `Series.plot` and `DataFrame.plot` *will* register these converters
    on first-use ([GH 17710](https://github.com/pandas-dev/pandas/issues/17710)).
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 内置的`Series.plot`和`DataFrame.plot`*将*在首次使用时注册这些转换器（[GH 17710](https://github.com/pandas-dev/pandas/issues/17710)）。
- en: Note
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'This change has been temporarily reverted in pandas 0.21.1, for more details
    see [here](v0.21.1.html#whatsnew-0211-converters).  ### Other API changes'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '这个改变在 pandas 0.21.1 中暂时被撤销了，更多详情请见[这里](v0.21.1.html#whatsnew-0211-converters)。  ###
    其他 API 改变'
- en: The Categorical constructor no longer accepts a scalar for the `categories`
    keyword. ([GH 16022](https://github.com/pandas-dev/pandas/issues/16022))
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分类构造函数不再接受`categories`关键字的标量。 （[GH 16022](https://github.com/pandas-dev/pandas/issues/16022)）
- en: Accessing a non-existent attribute on a closed `HDFStore` will now raise an
    `AttributeError` rather than a `ClosedFileError` ([GH 16301](https://github.com/pandas-dev/pandas/issues/16301))
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在关闭的`HDFStore`上访问一个不存在的属性现在会引发一个`AttributeError`，而不是一个`ClosedFileError`（[GH
    16301](https://github.com/pandas-dev/pandas/issues/16301)）
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now issues a `UserWarning` if the `names` parameter contains duplicates ([GH 17095](https://github.com/pandas-dev/pandas/issues/17095))'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")现在会在`names`参数包含重复值时发出一个`UserWarning`（[GH
    17095](https://github.com/pandas-dev/pandas/issues/17095))'
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now treats `''null''` and `''n/a''` strings as missing values by default ([GH
    16471](https://github.com/pandas-dev/pandas/issues/16471), [GH 16078](https://github.com/pandas-dev/pandas/issues/16078))'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    现在默认将 `''null''` 和 `''n/a''` 字符串视为缺失值 ([GH 16471](https://github.com/pandas-dev/pandas/issues/16471),
    [GH 16078](https://github.com/pandas-dev/pandas/issues/16078))'
- en: '`pandas.HDFStore`’s string representation is now faster and less detailed.
    For the previous behavior, use `pandas.HDFStore.info()`. ([GH 16503](https://github.com/pandas-dev/pandas/issues/16503)).'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas.HDFStore` 的字符串表示现��更快且更简洁。要恢复以前的行为，请使用 `pandas.HDFStore.info()`。([GH
    16503](https://github.com/pandas-dev/pandas/issues/16503)).'
- en: Compression defaults in HDF stores now follow pytables standards. Default is
    no compression and if `complib` is missing and `complevel` > 0 `zlib` is used
    ([GH 15943](https://github.com/pandas-dev/pandas/issues/15943))
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HDF 存储中的压缩默认值现在遵循 pytables 标准。默认值为无压缩，如果 `complib` 丢���且 `complevel` > 0，则使用
    `zlib` ([GH 15943](https://github.com/pandas-dev/pandas/issues/15943))
- en: '`Index.get_indexer_non_unique()` now returns a ndarray indexer rather than
    an `Index`; this is consistent with `Index.get_indexer()` ([GH 16819](https://github.com/pandas-dev/pandas/issues/16819))'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Index.get_indexer_non_unique()` 现在返回一个 ndarray 索引器而不是一个 `Index`；这与 `Index.get_indexer()`
    保持一致 ([GH 16819](https://github.com/pandas-dev/pandas/issues/16819))'
- en: Removed the `@slow` decorator from `pandas._testing`, which caused issues for
    some downstream packages’ test suites. Use `@pytest.mark.slow` instead, which
    achieves the same thing ([GH 16850](https://github.com/pandas-dev/pandas/issues/16850))
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 `pandas._testing` 中移除了 `@slow` 装饰器，这导致一些下游包的测试套件出现问题。改用 `@pytest.mark.slow`，它可以达到相同的效果
    ([GH 16850](https://github.com/pandas-dev/pandas/issues/16850))
- en: Moved definition of `MergeError` to the `pandas.errors` module.
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 `MergeError` 的定义移动到 `pandas.errors` 模块中。
- en: The signature of [`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") and [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") has been changed from `set_axis(axis, labels)` to
    `set_axis(labels, axis=0)`, for consistency with the rest of the API. The old
    signature is deprecated and will show a `FutureWarning` ([GH 14636](https://github.com/pandas-dev/pandas/issues/14636))
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") 和 [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") 的签名已从 `set_axis(axis, labels)` 更改为 `set_axis(labels,
    axis=0)`，以保持与其余 API 的一致性。旧的签名已被弃用，并将显示一个 `FutureWarning` ([GH 14636](https://github.com/pandas-dev/pandas/issues/14636))'
- en: '[`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin") and [`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax") will now raise a `TypeError` when used with `object` dtypes,
    instead of a `ValueError` ([GH 13595](https://github.com/pandas-dev/pandas/issues/13595))'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin") 和 [`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax") 现在在与 `object` dtypes 一起使用时会引发 `TypeError`，而不是 `ValueError`
    ([GH 13595](https://github.com/pandas-dev/pandas/issues/13595))'
- en: '[`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    is now immutable, and will now raise an `AttributeError` when a user tries to
    assign a new value to the `ordinal` or `freq` attributes ([GH 17116](https://github.com/pandas-dev/pandas/issues/17116)).'
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    现在是不可变的，当用户尝试为 `ordinal` 或 `freq` 属性分配新值时，将引发 `AttributeError` ([GH 17116](https://github.com/pandas-dev/pandas/issues/17116)).'
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when passed a tz-aware `origin=` kwarg will now raise a
    more informative `ValueError` rather than a `TypeError` ([GH 16842](https://github.com/pandas-dev/pandas/issues/16842))'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当传递一个带有时区信息的 `origin=` kwarg 给 [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") 时，现在会引发一个更具信息性的 `ValueError` 而不是 `TypeError` ([GH 16842](https://github.com/pandas-dev/pandas/issues/16842))
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") now raises a `ValueError` when format includes `%W` or `%U`
    without also including day of the week and calendar year ([GH 16774](https://github.com/pandas-dev/pandas/issues/16774))'
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当格式包含 `%W` 或 `%U` 而没有包含星期几和日历年时，[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") 现在会引发 `ValueError` ([GH 16774](https://github.com/pandas-dev/pandas/issues/16774))
- en: Renamed non-functional `index` to `index_col` in [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") to improve API consistency ([GH 16342](https://github.com/pandas-dev/pandas/issues/16342))
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") 中将非功能性的 `index` 重命名为 `index_col`，以改善 API 一致性（[GH 16342](https://github.com/pandas-dev/pandas/issues/16342)）
- en: Bug in [`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") caused boolean labels `False` and `True` to be treated
    as labels 0 and 1 respectively when dropping indices from a numeric index. This
    will now raise a ValueError ([GH 16877](https://github.com/pandas-dev/pandas/issues/16877))
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") 中的错误导致布尔标签 `False` 和 `True` 在从数值索引中删除索引时分别被视为标签 0 和 1。现在将引发
    ValueError 错误（[GH 16877](https://github.com/pandas-dev/pandas/issues/16877)）'
- en: 'Restricted DateOffset keyword arguments. Previously, `DateOffset` subclasses
    allowed arbitrary keyword arguments which could lead to unexpected behavior. Now,
    only valid arguments will be accepted. ([GH 17176](https://github.com/pandas-dev/pandas/issues/17176)).  ##
    Deprecations'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '限制了 `DateOffset` 关键字参数。以前，`DateOffset` 子类允许任意关键字参数，这可能导致意外行为。现在，只有有效的参数将被接受。([GH
    17176](https://github.com/pandas-dev/pandas/issues/17176))  ## 弃用'
- en: '`DataFrame.from_csv()` and `Series.from_csv()` have been deprecated in favor
    of [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    ([GH 4191](https://github.com/pandas-dev/pandas/issues/4191))'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.from_csv()` 和 `Series.from_csv()` 已被弃用，推荐使用 [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")（[GH 4191](https://github.com/pandas-dev/pandas/issues/4191)）'
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") has deprecated `sheetname` in favor of `sheet_name` for consistency
    with `.to_excel()` ([GH 10559](https://github.com/pandas-dev/pandas/issues/10559)).'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") 已弃用 `sheetname`，推荐使用 `sheet_name` 以保持与 `.to_excel()` 的一致性（[GH
    10559](https://github.com/pandas-dev/pandas/issues/10559)）'
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") has deprecated `parse_cols` in favor of `usecols` for consistency
    with [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    ([GH 4988](https://github.com/pandas-dev/pandas/issues/4988))'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") 已弃用 `parse_cols`，推荐使用 `usecols` 以保持与 [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") 的一致性（[GH 4988](https://github.com/pandas-dev/pandas/issues/4988)）'
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    has deprecated the `tupleize_cols` argument. Column tuples will always be converted
    to a `MultiIndex` ([GH 17060](https://github.com/pandas-dev/pandas/issues/17060))'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    已弃用 `tupleize_cols` 参数。列元组将始终转换为 `MultiIndex`（[GH 17060](https://github.com/pandas-dev/pandas/issues/17060)）'
- en: '[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") has deprecated the `tupleize_cols` argument. MultiIndex
    columns will be always written as rows in the CSV file ([GH 17060](https://github.com/pandas-dev/pandas/issues/17060))'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") 已弃用 `tupleize_cols` 参数。MultiIndex 列将始终以行的形式写入 CSV 文件（[GH
    17060](https://github.com/pandas-dev/pandas/issues/17060)）'
- en: The `convert` parameter has been deprecated in the `.take()` method, as it was
    not being respected ([GH 16948](https://github.com/pandas-dev/pandas/issues/16948))
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.take()` 方法中已弃用 `convert` 参数，因为它没有被遵守（[GH 16948](https://github.com/pandas-dev/pandas/issues/16948)）'
- en: '`pd.options.html.border` has been deprecated in favor of `pd.options.display.html.border`
    ([GH 15793](https://github.com/pandas-dev/pandas/issues/15793)).'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.options.html.border` 已被弃用，推荐使用 `pd.options.display.html.border`（[GH 15793](https://github.com/pandas-dev/pandas/issues/15793)）'
- en: '`SeriesGroupBy.nth()` has deprecated `True` in favor of `''all''` for its kwarg
    `dropna` ([GH 11038](https://github.com/pandas-dev/pandas/issues/11038)).'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SeriesGroupBy.nth()` 已弃用 `True`，推荐使用 `''all''` 作为其关键字参数 `dropna`（[GH 11038](https://github.com/pandas-dev/pandas/issues/11038)）'
- en: '`DataFrame.as_blocks()` is deprecated, as this is exposing the internal implementation
    ([GH 17302](https://github.com/pandas-dev/pandas/issues/17302))'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.as_blocks()` 已被弃用，因为这暴露了内部实现（[GH 17302](https://github.com/pandas-dev/pandas/issues/17302)）'
- en: '`pd.TimeGrouper` is deprecated in favor of [`pandas.Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper") ([GH 16747](https://github.com/pandas-dev/pandas/issues/16747))'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.TimeGrouper`已被弃用，推荐使用[`pandas.Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper")（[GH 16747](https://github.com/pandas-dev/pandas/issues/16747)）'
- en: '`cdate_range` has been deprecated in favor of [`bdate_range()`](../reference/api/pandas.bdate_range.html#pandas.bdate_range
    "pandas.bdate_range"), which has gained `weekmask` and `holidays` parameters for
    building custom frequency date ranges. See the [documentation](../user_guide/timeseries.html#timeseries-custom-freq-ranges)
    for more details ([GH 17596](https://github.com/pandas-dev/pandas/issues/17596))'
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cdate_range`已被弃用，推荐使用[`bdate_range()`](../reference/api/pandas.bdate_range.html#pandas.bdate_range
    "pandas.bdate_range")，该方法增加了`weekmask`和`holidays`参数，用于构建自定义频率日期范围。更多详情请参阅[文档](../user_guide/timeseries.html#timeseries-custom-freq-ranges)（[GH
    17596](https://github.com/pandas-dev/pandas/issues/17596)）'
- en: passing `categories` or `ordered` kwargs to [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") is deprecated, in favor of passing a [CategoricalDtype](#whatsnew-0210-enhancements-categorical-dtype)
    ([GH 17636](https://github.com/pandas-dev/pandas/issues/17636))
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype")中传递`categories`或`ordered`参数已被弃用，推荐传递[CategoricalDtype](#whatsnew-0210-enhancements-categorical-dtype)（[GH
    17636](https://github.com/pandas-dev/pandas/issues/17636)）
- en: '`.get_value` and `.set_value` on `Series`, `DataFrame`, `Panel`, `SparseSeries`,
    and `SparseDataFrame` are deprecated in favor of using `.iat[]` or `.at[]` accessors
    ([GH 15269](https://github.com/pandas-dev/pandas/issues/15269))'
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series`、`DataFrame`、`Panel`、`SparseSeries`和`SparseDataFrame`上的`.get_value`和`.set_value`已被弃用，推荐使用`.iat[]`或`.at[]`访问器（[GH
    15269](https://github.com/pandas-dev/pandas/issues/15269))'
- en: Passing a non-existent column in `.to_excel(..., columns=)` is deprecated and
    will raise a `KeyError` in the future ([GH 17295](https://github.com/pandas-dev/pandas/issues/17295))
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`.to_excel(..., columns=)`中传递一个不存在的列已被弃用，并将在未来引发`KeyError`（[GH 17295](https://github.com/pandas-dev/pandas/issues/17295)）
- en: '`raise_on_error` parameter to [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where"), [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask"), [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where"), [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask") is deprecated, in favor of `errors=` ([GH 14968](https://github.com/pandas-dev/pandas/issues/14968))'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where")、[`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask")、[`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where")、[`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask")中传递`raise_on_error`参数已被弃用，推荐使用`errors=`（[GH 14968](https://github.com/pandas-dev/pandas/issues/14968)）
- en: Using [`DataFrame.rename_axis()`](../reference/api/pandas.DataFrame.rename_axis.html#pandas.DataFrame.rename_axis
    "pandas.DataFrame.rename_axis") and [`Series.rename_axis()`](../reference/api/pandas.Series.rename_axis.html#pandas.Series.rename_axis
    "pandas.Series.rename_axis") to alter index or column *labels* is now deprecated
    in favor of using `.rename`. `rename_axis` may still be used to alter the name
    of the index or columns ([GH 17833](https://github.com/pandas-dev/pandas/issues/17833)).
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用[`DataFrame.rename_axis()`](../reference/api/pandas.DataFrame.rename_axis.html#pandas.DataFrame.rename_axis
    "pandas.DataFrame.rename_axis")和[`Series.rename_axis()`](../reference/api/pandas.Series.rename_axis.html#pandas.Series.rename_axis
    "pandas.Series.rename_axis")来更改索引或列*标签*已被弃用，推荐使用`.rename`。`rename_axis`仍可用于更改索引或列的名称（[GH
    17833](https://github.com/pandas-dev/pandas/issues/17833)）
- en: '`reindex_axis()` has been deprecated in favor of [`reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex"). See [here](#whatsnew-0210-enhancements-rename-reindex-axis)
    for more ([GH 17833](https://github.com/pandas-dev/pandas/issues/17833)).'
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`reindex_axis()`已被弃用，推荐使用[`reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex")。更多详情请参阅[这里](#whatsnew-0210-enhancements-rename-reindex-axis)（[GH
    17833](https://github.com/pandas-dev/pandas/issues/17833)）'
- en: '### Series.select and DataFrame.select'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '### Series.select 和 DataFrame.select'
- en: The `Series.select()` and `DataFrame.select()` methods are deprecated in favor
    of using `df.loc[labels.map(crit)]` ([GH 12401](https://github.com/pandas-dev/pandas/issues/12401))
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series.select()`和`DataFrame.select()`方法已被弃用，推荐使用`df.loc[labels.map(crit)]`（[GH
    12401](https://github.com/pandas-dev/pandas/issues/12401)）'
- en: '[PRE62]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '[PRE63]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: '[PRE64]  ### Series.argmax and Series.argmin'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE64]  ### Series.argmax 和 Series.argmin'
- en: The behavior of [`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax") and [`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin") have been deprecated in favor of [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax") and [`Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin"), respectively ([GH 16830](https://github.com/pandas-dev/pandas/issues/16830)).
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax")和[`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin")的行为已被弃用，取而代之的是[`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax")和[`Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin")，分别（[GH 16830](https://github.com/pandas-dev/pandas/issues/16830)）。'
- en: For compatibility with NumPy arrays, `pd.Series` implements `argmax` and `argmin`.
    Since pandas 0.13.0, `argmax` has been an alias for [`pandas.Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax"), and `argmin` has been an alias for [`pandas.Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin"). They return the *label* of the maximum or minimum, rather
    than the *position*.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 为了与NumPy数组兼容，`pd.Series`实现了`argmax`和`argmin`。自pandas 0.13.0以来，`argmax`已成为[`pandas.Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax")的别名，`argmin`已成为[`pandas.Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin")的别名。它们返回*标签*的最大值或最小值，而不是*位置*。
- en: 'We’ve deprecated the current behavior of `Series.argmax` and `Series.argmin`.
    Using either of these will emit a `FutureWarning`. Use [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax") if you want the label of the maximum. Use `Series.values.argmax()`
    if you want the position of the maximum. Likewise for the minimum. In a future
    release `Series.argmax` and `Series.argmin` will return the position of the maximum
    or minimum.  ## Removal of prior version deprecations/changes'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已弃用了`Series.argmax`和`Series.argmin`的当前行为。使用任何一个将发出`FutureWarning`。如果您想要最大值的标签，请使用[`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax")。如果您想要最大值的位置，请使用`Series.values.argmax()`。最小值同理。在未来的版本中，`Series.argmax`和`Series.argmin`将返回最大值或最小值的位置。##移除之前版本的弃用/更改
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") has dropped the `has_index_names` parameter ([GH 10967](https://github.com/pandas-dev/pandas/issues/10967))'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel")已放弃`has_index_names`参数（[GH 10967](https://github.com/pandas-dev/pandas/issues/10967)）。'
- en: The `pd.options.display.height` configuration has been dropped ([GH 3663](https://github.com/pandas-dev/pandas/issues/3663))
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.options.display.height`配置已被放弃（[GH 3663](https://github.com/pandas-dev/pandas/issues/3663)）。'
- en: The `pd.options.display.line_width` configuration has been dropped ([GH 2881](https://github.com/pandas-dev/pandas/issues/2881))
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.options.display.line_width`配置已被放弃（[GH 2881](https://github.com/pandas-dev/pandas/issues/2881)）。'
- en: The `pd.options.display.mpl_style` configuration has been dropped ([GH 12190](https://github.com/pandas-dev/pandas/issues/12190))
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.options.display.mpl_style`配置已被放弃（[GH 12190](https://github.com/pandas-dev/pandas/issues/12190)）。'
- en: '`Index` has dropped the `.sym_diff()` method in favor of `.symmetric_difference()`
    ([GH 12591](https://github.com/pandas-dev/pandas/issues/12591))'
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Index`已放弃`.sym_diff()`方法，取而代之的是`.symmetric_difference()`（[GH 12591](https://github.com/pandas-dev/pandas/issues/12591)）。'
- en: '`Categorical` has dropped the `.order()` and `.sort()` methods in favor of
    `.sort_values()` ([GH 12882](https://github.com/pandas-dev/pandas/issues/12882))'
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Categorical`已放弃`.order()`和`.sort()`方法，取而代之的是`.sort_values()`（[GH 12882](https://github.com/pandas-dev/pandas/issues/12882)）。'
- en: '[`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval") and
    [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") have changed the default of `inplace` from `None` to
    `False` ([GH 11149](https://github.com/pandas-dev/pandas/issues/11149))'
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval")和[`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval")已将`inplace`的默认值从`None`更改为`False`（[GH 11149](https://github.com/pandas-dev/pandas/issues/11149)）。'
- en: The function `get_offset_name` has been dropped in favor of the `.freqstr` attribute
    for an offset ([GH 11834](https://github.com/pandas-dev/pandas/issues/11834))
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数`get_offset_name`已被放弃，取而代之的是偏移量的`.freqstr`属性（[GH 11834](https://github.com/pandas-dev/pandas/issues/11834)）。
- en: 'pandas no longer tests for compatibility with hdf5-files created with pandas
    < 0.11 ([GH 17404](https://github.com/pandas-dev/pandas/issues/17404)).  ## Performance
    improvements'
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'pandas不再测试与使用pandas < 0.11创建的hdf5文件的兼容性（[GH 17404](https://github.com/pandas-dev/pandas/issues/17404))。  ##
    性能改进'
- en: Improved performance of instantiating `SparseDataFrame` ([GH 16773](https://github.com/pandas-dev/pandas/issues/16773))
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了实例化`SparseDataFrame`的性能（[GH 16773](https://github.com/pandas-dev/pandas/issues/16773))
- en: '[`Series.dt`](../reference/api/pandas.Series.dt.html#pandas.Series.dt "pandas.Series.dt")
    no longer performs frequency inference, yielding a large speedup when accessing
    the attribute ([GH 17210](https://github.com/pandas-dev/pandas/issues/17210))'
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.dt`](../reference/api/pandas.Series.dt.html#pandas.Series.dt "pandas.Series.dt")不再执行频率推断，在访问属性时速度大幅提升（[GH
    17210](https://github.com/pandas-dev/pandas/issues/17210))'
- en: Improved performance of [`set_categories()`](../reference/api/pandas.Series.cat.set_categories.html#pandas.Series.cat.set_categories
    "pandas.Series.cat.set_categories") by not materializing the values ([GH 17508](https://github.com/pandas-dev/pandas/issues/17508))
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过不实现值来改进[`set_categories()`](../reference/api/pandas.Series.cat.set_categories.html#pandas.Series.cat.set_categories
    "pandas.Series.cat.set_categories")的性能（[GH 17508](https://github.com/pandas-dev/pandas/issues/17508))
- en: '[`Timestamp.microsecond`](../reference/api/pandas.Timestamp.microsecond.html#pandas.Timestamp.microsecond
    "pandas.Timestamp.microsecond") no longer re-computes on attribute access ([GH
    17331](https://github.com/pandas-dev/pandas/issues/17331))'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Timestamp.microsecond`](../reference/api/pandas.Timestamp.microsecond.html#pandas.Timestamp.microsecond
    "pandas.Timestamp.microsecond")在属性访问时不再重新计算（[GH 17331](https://github.com/pandas-dev/pandas/issues/17331))'
- en: Improved performance of the [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") for data that is already categorical dtype ([GH 17513](https://github.com/pandas-dev/pandas/issues/17513))
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了对已经是分类dtype的数据的[`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex")的性能（[GH 17513](https://github.com/pandas-dev/pandas/issues/17513))
- en: 'Improved performance of `RangeIndex.min()` and `RangeIndex.max()` by using
    `RangeIndex` properties to perform the computations ([GH 17607](https://github.com/pandas-dev/pandas/issues/17607))  ##
    Documentation changes'
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '通过使用`RangeIndex`属性执行计算来改进`RangeIndex.min()`和`RangeIndex.max()`的性能（[GH 17607](https://github.com/pandas-dev/pandas/issues/17607))  ##
    文档更改'
- en: Several `NaT` method docstrings (e.g. `NaT.ctime()`) were incorrect ([GH 17327](https://github.com/pandas-dev/pandas/issues/17327))
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 几个`NaT`方法的文档字符串（例如`NaT.ctime()`）是不正确的（[GH 17327](https://github.com/pandas-dev/pandas/issues/17327))
- en: 'The documentation has had references to versions < v0.17 removed and cleaned
    up ([GH 17442](https://github.com/pandas-dev/pandas/issues/17442), [GH 17442](https://github.com/pandas-dev/pandas/issues/17442),
    [GH 17404](https://github.com/pandas-dev/pandas/issues/17404) & [GH 17504](https://github.com/pandas-dev/pandas/issues/17504))  ##
    Bug fixes'
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '文档已删除并清理了对版本 < v0.17的引用（[GH 17442](https://github.com/pandas-dev/pandas/issues/17442),
    [GH 17442](https://github.com/pandas-dev/pandas/issues/17442), [GH 17404](https://github.com/pandas-dev/pandas/issues/17404)
    & [GH 17504](https://github.com/pandas-dev/pandas/issues/17504))  ## Bug修复'
- en: Conversion
  id: totrans-317
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 转换
- en: Bug in assignment against datetime-like data with `int` may incorrectly convert
    to datetime-like ([GH 14145](https://github.com/pandas-dev/pandas/issues/14145))
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了使用`int`对日期时间数据进行赋值时可能错误地转换为日期时间数据的错误（[GH 14145](https://github.com/pandas-dev/pandas/issues/14145))
- en: Bug in assignment against `int64` data with `np.ndarray` with `float64` dtype
    may keep `int64` dtype ([GH 14001](https://github.com/pandas-dev/pandas/issues/14001))
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了使用`np.ndarray`和`float64` dtype的`int64`数据进行赋值时可能保留`int64` dtype的错误（[GH 14001](https://github.com/pandas-dev/pandas/issues/14001))
- en: Fixed the return type of `IntervalIndex.is_non_overlapping_monotonic` to be
    a Python `bool` for consistency with similar attributes/methods. Previously returned
    a `numpy.bool_`. ([GH 17237](https://github.com/pandas-dev/pandas/issues/17237))
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了`IntervalIndex.is_non_overlapping_monotonic`的返回类型，以便与类似���性/方法保持一致为Python
    `bool`。之前返回的是`numpy.bool_`。（[GH 17237](https://github.com/pandas-dev/pandas/issues/17237))
- en: Bug in `IntervalIndex.is_non_overlapping_monotonic` when intervals are closed
    on both sides and overlap at a point ([GH 16560](https://github.com/pandas-dev/pandas/issues/16560))
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当间隔两端闭合且在一个点重叠时，修复了`IntervalIndex.is_non_overlapping_monotonic`的错误（[GH 16560](https://github.com/pandas-dev/pandas/issues/16560))
- en: Bug in [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") returns frame when `inplace=True` and `value` is dict
    ([GH 16156](https://github.com/pandas-dev/pandas/issues/16156))
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`inplace=True`且`value`为字典时，修复了[`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna")返回帧的错误（[GH 16156](https://github.com/pandas-dev/pandas/issues/16156))
- en: Bug in `Timestamp.weekday_name` returning a UTC-based weekday name when localized
    to a timezone ([GH 17354](https://github.com/pandas-dev/pandas/issues/17354))
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在本地化到时区时，`Timestamp.weekday_name`返回基于UTC的星期几名称存在错误（[GH 17354](https://github.com/pandas-dev/pandas/issues/17354)）
- en: Bug in `Timestamp.replace` when replacing `tzinfo` around DST changes ([GH 15683](https://github.com/pandas-dev/pandas/issues/15683))
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在处理夏令时变化时，`Timestamp.replace`存在错误（[GH 15683](https://github.com/pandas-dev/pandas/issues/15683)）
- en: Bug in `Timedelta` construction and arithmetic that would not propagate the
    `Overflow` exception ([GH 17367](https://github.com/pandas-dev/pandas/issues/17367))
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在构建和计算`Timedelta`时存在错误，不会传播`Overflow`异常（[GH 17367](https://github.com/pandas-dev/pandas/issues/17367)）
- en: Bug in [`astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") converting to object dtype when passed extension type
    classes (`DatetimeTZDtype`, `CategoricalDtype`) rather than instances. Now a `TypeError`
    is raised when a class is passed ([GH 17780](https://github.com/pandas-dev/pandas/issues/17780)).
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当传递扩展类型类（`DatetimeTZDtype`，`CategoricalDtype`）而不是实例时，[`astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype")转换为对象dtype时存在错误。现在当传递类时会引发`TypeError`（[GH 17780](https://github.com/pandas-dev/pandas/issues/17780)）
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") in which elements were not always being coerced to numeric
    when `errors='coerce'` ([GH 17007](https://github.com/pandas-dev/pandas/issues/17007),
    [GH 17125](https://github.com/pandas-dev/pandas/issues/17125))
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`errors='coerce'`时，修复了[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric")中元素不始终被强制转换为数值的错误（[GH 17007](https://github.com/pandas-dev/pandas/issues/17007),
    [GH 17125](https://github.com/pandas-dev/pandas/issues/17125)）
- en: Bug in `DataFrame` and `Series` constructors where `range` objects are converted
    to `int32` dtype on Windows instead of `int64` ([GH 16804](https://github.com/pandas-dev/pandas/issues/16804))
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Windows 上，修复了`DataFrame`和`Series`构造函数中将`range`对象转换为`int32`而不是`int64`的错误（[GH
    16804](https://github.com/pandas-dev/pandas/issues/16804)）
- en: Indexing
  id: totrans-329
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 索引
- en: When called with a null slice (e.g. `df.iloc[:]`), the `.iloc` and `.loc` indexers
    return a shallow copy of the original object. Previously they returned the original
    object. ([GH 13873](https://github.com/pandas-dev/pandas/issues/13873)).
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当使用空切片调用时（例如`df.iloc[:]`），`.iloc`和`.loc`索引器返回原始对象的浅拷贝。以前它们返回原始对象。（[GH 13873](https://github.com/pandas-dev/pandas/issues/13873)）
- en: When called on an unsorted `MultiIndex`, the `loc` indexer now will raise `UnsortedIndexError`
    only if proper slicing is used on non-sorted levels ([GH 16734](https://github.com/pandas-dev/pandas/issues/16734)).
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当在未排序的`MultiIndex`上调用时，`loc`索引器现在只有在非排序级别上使用正确的切片时才会引发`UnsortedIndexError`（[GH
    16734](https://github.com/pandas-dev/pandas/issues/16734)）。
- en: Fixes regression in 0.20.3 when indexing with a string on a `TimedeltaIndex`
    ([GH 16896](https://github.com/pandas-dev/pandas/issues/16896)).
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了 0.20.3 版本中使用字符串对`TimedeltaIndex`进行索引时的回归错误（[GH 16896](https://github.com/pandas-dev/pandas/issues/16896)）
- en: Fixed `TimedeltaIndex.get_loc()` handling of `np.timedelta64` inputs ([GH 16909](https://github.com/pandas-dev/pandas/issues/16909)).
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了`TimedeltaIndex.get_loc()`对`np.timedelta64`输入的处理（[GH 16909](https://github.com/pandas-dev/pandas/issues/16909)）
- en: Fix `MultiIndex.sort_index()` ordering when `ascending` argument is a list,
    but not all levels are specified, or are in a different order ([GH 16934](https://github.com/pandas-dev/pandas/issues/16934)).
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`ascending`参数是一个列表但未指定所有级别或级别顺序不同的情况下，修复了`MultiIndex.sort_index()`的排序问题（[GH
    16934](https://github.com/pandas-dev/pandas/issues/16934)）
- en: Fixes bug where indexing with `np.inf` caused an `OverflowError` to be raised
    ([GH 16957](https://github.com/pandas-dev/pandas/issues/16957))
  id: totrans-335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了使用`np.inf`进行索引时引发`OverflowError`的错误（[GH 16957](https://github.com/pandas-dev/pandas/issues/16957)）
- en: Bug in reindexing on an empty `CategoricalIndex` ([GH 16770](https://github.com/pandas-dev/pandas/issues/16770))
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在重新索引时，修复了对空`CategoricalIndex`的错误（[GH 16770](https://github.com/pandas-dev/pandas/issues/16770)）
- en: Fixes `DataFrame.loc` for setting with alignment and tz-aware `DatetimeIndex`
    ([GH 16889](https://github.com/pandas-dev/pandas/issues/16889))
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了`DataFrame.loc`在使用对齐和带时区的`DatetimeIndex`时的问题（[GH 16889](https://github.com/pandas-dev/pandas/issues/16889)）
- en: Avoids `IndexError` when passing an Index or Series to `.iloc` with older numpy
    ([GH 17193](https://github.com/pandas-dev/pandas/issues/17193))
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当使用较旧版本的numpy将索引或系列传递给`.iloc`时，避免了`IndexError`（[GH 17193](https://github.com/pandas-dev/pandas/issues/17193)）
- en: Allow unicode empty strings as placeholders in multilevel columns in Python
    2 ([GH 17099](https://github.com/pandas-dev/pandas/issues/17099))
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许在 Python 2 中的多级列中使用 Unicode 空字符串作为占位符（[GH 17099](https://github.com/pandas-dev/pandas/issues/17099)）
- en: Bug in `.iloc` when used with inplace addition or assignment and an int indexer
    on a `MultiIndex` causing the wrong indexes to be read from and written to ([GH
    17148](https://github.com/pandas-dev/pandas/issues/17148))
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in `.iloc` 当在`MultiIndex`上使用就地加法或赋值和整数索引器时，导致从错误的索引读取和写入（[GH 17148](https://github.com/pandas-dev/pandas/issues/17148)）
- en: Bug in `.isin()` in which checking membership in empty `Series` objects raised
    an error ([GH 16991](https://github.com/pandas-dev/pandas/issues/16991))
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in `.isin()` 中检查空`Series`对象成员资格时引发错误（[GH 16991](https://github.com/pandas-dev/pandas/issues/16991)）
- en: Bug in `CategoricalIndex` reindexing in which specified indices containing duplicates
    were not being respected ([GH 17323](https://github.com/pandas-dev/pandas/issues/17323))
  id: totrans-342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in `CategoricalIndex` 重新索引中指定包含重复项的索引未被尊重（[GH 17323](https://github.com/pandas-dev/pandas/issues/17323)）
- en: Bug in intersection of `RangeIndex` with negative step ([GH 17296](https://github.com/pandas-dev/pandas/issues/17296))
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in `RangeIndex` 与负步长的交集中出现的问题（[GH 17296](https://github.com/pandas-dev/pandas/issues/17296)）
- en: Bug in `IntervalIndex` where performing a scalar lookup fails for included right
    endpoints of non-overlapping monotonic decreasing indexes ([GH 16417](https://github.com/pandas-dev/pandas/issues/16417),
    [GH 17271](https://github.com/pandas-dev/pandas/issues/17271))
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in `IntervalIndex` 在对非重叠单调递减索引的包含右端点执行标量查找时失败（[GH 16417](https://github.com/pandas-dev/pandas/issues/16417)，[GH
    17271](https://github.com/pandas-dev/pandas/issues/17271)）
- en: Bug in [`DataFrame.first_valid_index()`](../reference/api/pandas.DataFrame.first_valid_index.html#pandas.DataFrame.first_valid_index
    "pandas.DataFrame.first_valid_index") and [`DataFrame.last_valid_index()`](../reference/api/pandas.DataFrame.last_valid_index.html#pandas.DataFrame.last_valid_index
    "pandas.DataFrame.last_valid_index") when no valid entry ([GH 17400](https://github.com/pandas-dev/pandas/issues/17400))
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in [`DataFrame.first_valid_index()`](../reference/api/pandas.DataFrame.first_valid_index.html#pandas.DataFrame.first_valid_index
    "pandas.DataFrame.first_valid_index") 和 [`DataFrame.last_valid_index()`](../reference/api/pandas.DataFrame.last_valid_index.html#pandas.DataFrame.last_valid_index
    "pandas.DataFrame.last_valid_index") 当没有有效条目时（[GH 17400](https://github.com/pandas-dev/pandas/issues/17400)）
- en: Bug in [`Series.rename()`](../reference/api/pandas.Series.rename.html#pandas.Series.rename
    "pandas.Series.rename") when called with a callable, incorrectly alters the name
    of the `Series`, rather than the name of the `Index`. ([GH 17407](https://github.com/pandas-dev/pandas/issues/17407))
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in [`Series.rename()`](../reference/api/pandas.Series.rename.html#pandas.Series.rename
    "pandas.Series.rename") 被调用时，使用可调用对象时，错误地改变了`Series`的名称，而不是`Index`的名称。（[GH 17407](https://github.com/pandas-dev/pandas/issues/17407)）
- en: Bug in `String.str_get()` raises `IndexError` instead of inserting NaNs when
    using a negative index. ([GH 17704](https://github.com/pandas-dev/pandas/issues/17704))
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in `String.str_get()` 当使用负索引时，引发`IndexError`而不是插入NaNs。（[GH 17704](https://github.com/pandas-dev/pandas/issues/17704)）
- en: IO
  id: totrans-348
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: IO
- en: Bug in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") when reading a timezone aware index from `fixed` format HDFStore
    ([GH 17618](https://github.com/pandas-dev/pandas/issues/17618))
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") 从`fixed`格式 HDFStore 读取时，读取带时区的索引时出现问题（[GH 17618](https://github.com/pandas-dev/pandas/issues/17618)）
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") in which columns were not being thoroughly de-duplicated ([GH
    17060](https://github.com/pandas-dev/pandas/issues/17060))
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") 中存在的问题，列未被彻底去重复（[GH 17060](https://github.com/pandas-dev/pandas/issues/17060)）
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") in which specified column names were not being thoroughly de-duplicated
    ([GH 17095](https://github.com/pandas-dev/pandas/issues/17095))
  id: totrans-351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") 中指定的列名未被彻底去重复（[GH 17095](https://github.com/pandas-dev/pandas/issues/17095)）
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") in which non integer values for the header argument generated
    an unhelpful / unrelated error message ([GH 16338](https://github.com/pandas-dev/pandas/issues/16338))
  id: totrans-352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") 中存在的问题，头部参数的非整数值生成了一个无用/无关的错误信息（[GH 16338](https://github.com/pandas-dev/pandas/issues/16338)）
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") in which memory management issues in exception handling, under
    certain conditions, would cause the interpreter to segfault ([GH 14696](https://github.com/pandas-dev/pandas/issues/14696),
    [GH 16798](https://github.com/pandas-dev/pandas/issues/16798)).
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    中的错误，异常处理中的内存管理问题，在特定条件下，会导致解释器崩溃（[GH 14696](https://github.com/pandas-dev/pandas/issues/14696)，[GH
    16798](https://github.com/pandas-dev/pandas/issues/16798)）'
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when called with `low_memory=False` in which a CSV with at
    least one column > 2GB in size would incorrectly raise a `MemoryError` ([GH 16798](https://github.com/pandas-dev/pandas/issues/16798)).
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    中的错误，当使用 `low_memory=False` 时，大小至少为 2GB 的至少一列的 CSV 会不正确地引发 `MemoryError`（[GH 16798](https://github.com/pandas-dev/pandas/issues/16798)）'
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when called with a single-element list `header` would return
    a `DataFrame` of all NaN values ([GH 7757](https://github.com/pandas-dev/pandas/issues/7757))
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    中的错误，当使用单元素列表 `header` 调用时，将返回所有 NaN 值的 DataFrame（[GH 7757](https://github.com/pandas-dev/pandas/issues/7757)）'
- en: Bug in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") defaulting to ‘ascii’ encoding in Python 3, instead
    of ‘utf-8’ ([GH 17097](https://github.com/pandas-dev/pandas/issues/17097))
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") 中的错误，默认为 Python 3 中的 ''ascii'' 编码，而不是 ''utf-8''（[GH
    17097](https://github.com/pandas-dev/pandas/issues/17097)）'
- en: Bug in [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") where value labels could not be read when using an iterator
    ([GH 16923](https://github.com/pandas-dev/pandas/issues/16923))
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") 存在的错误，当使用迭代器时无法读取值标签（[GH 16923](https://github.com/pandas-dev/pandas/issues/16923)）'
- en: Bug in [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") where the index was not set ([GH 16342](https://github.com/pandas-dev/pandas/issues/16342))
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") 中的错误，索引未设置（[GH 16342](https://github.com/pandas-dev/pandas/issues/16342)）'
- en: Bug in [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") where import check fails when run in multiple threads ([GH
    16928](https://github.com/pandas-dev/pandas/issues/16928))
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html "pandas.read_html")
    中的错误，当在多个线程中运行时，导入检查失败（[GH 16928](https://github.com/pandas-dev/pandas/issues/16928)）'
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where automatic delimiter detection caused a `TypeError` to
    be thrown when a bad line was encountered rather than the correct error message
    ([GH 13374](https://github.com/pandas-dev/pandas/issues/13374))
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    中的错误，自动分隔符检测导致遇到坏行时引发 `TypeError` 而不是正确的错误消息（[GH 13374](https://github.com/pandas-dev/pandas/issues/13374)）'
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") with `notebook=True` where DataFrames with named indices
    or non-MultiIndex indices had undesired horizontal or vertical alignment for column
    or row labels, respectively ([GH 16792](https://github.com/pandas-dev/pandas/issues/16792))
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") 中的错误，当 `notebook=True` 时，具有命名索引或非 MultiIndex 索引的 DataFrame
    的列或行标签具有不希望的水平或垂直对齐（[GH 16792](https://github.com/pandas-dev/pandas/issues/16792)）'
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") in which there was no validation of the `justify`
    parameter ([GH 17527](https://github.com/pandas-dev/pandas/issues/17527))
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") 中的错误，`justify` 参数没有验证（[GH 17527](https://github.com/pandas-dev/pandas/issues/17527)）'
- en: Bug in [`HDFStore.select()`](../reference/api/pandas.HDFStore.select.html#pandas.HDFStore.select
    "pandas.HDFStore.select") when reading a contiguous mixed-data table featuring
    VLArray ([GH 17021](https://github.com/pandas-dev/pandas/issues/17021))
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`HDFStore.select()`](../reference/api/pandas.HDFStore.select.html#pandas.HDFStore.select
    "pandas.HDFStore.select") 中的错误，读取包含 VLArray 的连续混合数据表时出现问题（[GH 17021](https://github.com/pandas-dev/pandas/issues/17021)）'
- en: Bug in `to_json()` where several conditions (including objects with unprintable
    symbols, objects with deep recursion, overlong labels) caused segfaults instead
    of raising the appropriate exception ([GH 14256](https://github.com/pandas-dev/pandas/issues/14256))
  id: totrans-364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `to_json()` 中，多种条件（包括具有不可打印符号的对象，具有深度递归的对象，标签过长等）导致 segfaults 而不是引发适当的异常。([GH
    14256](https://github.com/pandas-dev/pandas/issues/14256))
- en: Plotting
  id: totrans-365
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 绘图
- en: Bug in plotting methods using `secondary_y` and `fontsize` not setting secondary
    axis font size ([GH 12565](https://github.com/pandas-dev/pandas/issues/12565))
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 绘图方法中使用 `secondary_y` 和 `fontsize` 设置次要轴字体大小时出现的错误（[GH 12565](https://github.com/pandas-dev/pandas/issues/12565)）
- en: Bug when plotting `timedelta` and `datetime` dtypes on y-axis ([GH 16953](https://github.com/pandas-dev/pandas/issues/16953))
  id: totrans-367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在绘制 `timedelta` 和 `datetime` 数据类型的图时出现的错误，位于 y 轴上。([GH 16953](https://github.com/pandas-dev/pandas/issues/16953))
- en: Line plots no longer assume monotonic x data when calculating xlims, they show
    the entire lines now even for unsorted x data. ([GH 11310](https://github.com/pandas-dev/pandas/issues/11310),
    [GH 11471](https://github.com/pandas-dev/pandas/issues/11471))
  id: totrans-368
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在，在计算 xlims 时，线图不再假设 x 数据是单调的，即使 x 数据未排序，它们现在也会显示整个线。([GH 11310](https://github.com/pandas-dev/pandas/issues/11310),
    [GH 11471](https://github.com/pandas-dev/pandas/issues/11471))
- en: With matplotlib 2.0.0 and above, calculation of x limits for line plots is left
    to matplotlib, so that its new default settings are applied. ([GH 15495](https://github.com/pandas-dev/pandas/issues/15495))
  id: totrans-369
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 matplotlib 2.0.0 及以上版本中，线图的 x 轴限制的计算由 matplotlib 完成，因此应用了其新的默认设置。([GH 15495](https://github.com/pandas-dev/pandas/issues/15495))
- en: Bug in `Series.plot.bar` or `DataFrame.plot.bar` with `y` not respecting user-passed
    `color` ([GH 16822](https://github.com/pandas-dev/pandas/issues/16822))
  id: totrans-370
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `Series.plot.bar` 或 `DataFrame.plot.bar` 中，`y` 参数不遵循用户传递的 `color` 参数。([GH
    16822](https://github.com/pandas-dev/pandas/issues/16822))
- en: Bug causing `plotting.parallel_coordinates` to reset the random seed when using
    random colors ([GH 17525](https://github.com/pandas-dev/pandas/issues/17525))
  id: totrans-371
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用随机颜色时，导致 `plotting.parallel_coordinates` 重置随机种子的错误。([GH 17525](https://github.com/pandas-dev/pandas/issues/17525))
- en: GroupBy/resample/rolling
  id: totrans-372
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: GroupBy/resample/rolling
- en: Bug in `DataFrame.resample(...).size()` where an empty `DataFrame` did not return
    a `Series` ([GH 14962](https://github.com/pandas-dev/pandas/issues/14962))
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `DataFrame.resample(...).size()` 中，一个空的 `DataFrame` 没有返回一个 `Series`。([GH 14962](https://github.com/pandas-dev/pandas/issues/14962))
- en: Bug in [`infer_freq()`](../reference/api/pandas.infer_freq.html#pandas.infer_freq
    "pandas.infer_freq") causing indices with 2-day gaps during the working week to
    be wrongly inferred as business daily ([GH 16624](https://github.com/pandas-dev/pandas/issues/16624))
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 [`infer_freq()`](../reference/api/pandas.infer_freq.html#pandas.infer_freq
    "pandas.infer_freq") 中，导致工作日之间存在 2 天间隔的索引错误地被推断为工作日频率。([GH 16624](https://github.com/pandas-dev/pandas/issues/16624))
- en: Bug in `.rolling(...).quantile()` which incorrectly used different defaults
    than [`Series.quantile()`](../reference/api/pandas.Series.quantile.html#pandas.Series.quantile
    "pandas.Series.quantile") and [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile") ([GH 9413](https://github.com/pandas-dev/pandas/issues/9413),
    [GH 16211](https://github.com/pandas-dev/pandas/issues/16211))
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `.rolling(...).quantile()` 中错误地使用了与 [`Series.quantile()`](../reference/api/pandas.Series.quantile.html#pandas.Series.quantile
    "pandas.Series.quantile") 和 [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile") 不同的默认设置（[GH 9413](https://github.com/pandas-dev/pandas/issues/9413),
    [GH 16211](https://github.com/pandas-dev/pandas/issues/16211)）
- en: Bug in `groupby.transform()` that would coerce boolean dtypes back to float
    ([GH 16875](https://github.com/pandas-dev/pandas/issues/16875))
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `groupby.transform()` 中，布尔类型被强制转换为浮点型。([GH 16875](https://github.com/pandas-dev/pandas/issues/16875))
- en: Bug in `Series.resample(...).apply()` where an empty `Series` modified the source
    index and did not return the name of a `Series` ([GH 14313](https://github.com/pandas-dev/pandas/issues/14313))
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `Series.resample(...).apply()` 中，一个空的 `Series` 修改了源索引并且没有返回一个 `Series` 的名称。([GH
    14313](https://github.com/pandas-dev/pandas/issues/14313))
- en: Bug in `.rolling(...).apply(...)` with a `DataFrame` with a `DatetimeIndex`,
    a `window` of a timedelta-convertible and `min_periods >= 1` ([GH 15305](https://github.com/pandas-dev/pandas/issues/15305))
  id: totrans-378
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在具有 `DatetimeIndex` 的 `DataFrame` 上使用 `.rolling(...).apply(...)` 时，`window`
    是一个时间增量可转换的情况下，以及 `min_periods >= 1` 时出现的错误（[GH 15305](https://github.com/pandas-dev/pandas/issues/15305)）
- en: Bug in `DataFrame.groupby` where index and column keys were not recognized correctly
    when the number of keys equaled the number of elements on the groupby axis ([GH
    16859](https://github.com/pandas-dev/pandas/issues/16859))
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `DataFrame.groupby` 中，当键的数量等于分组轴上的元素数量时，索引和列键没有被正确识别。([GH 16859](https://github.com/pandas-dev/pandas/issues/16859))
- en: Bug in `groupby.nunique()` with `TimeGrouper` which cannot handle `NaT` correctly
    ([GH 17575](https://github.com/pandas-dev/pandas/issues/17575))
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`groupby.nunique()` 中的 Bug，与 `TimeGrouper` 结合使用时无法正确处理 `NaT`（[GH 17575](https://github.com/pandas-dev/pandas/issues/17575)）'
- en: Bug in `DataFrame.groupby` where a single level selection from a `MultiIndex`
    unexpectedly sorts ([GH 17537](https://github.com/pandas-dev/pandas/issues/17537))
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.groupby` 中的 Bug，在从 `MultiIndex` 进行单层选择时意外地进行排序（[GH 17537](https://github.com/pandas-dev/pandas/issues/17537)）'
- en: Bug in `DataFrame.groupby` where spurious warning is raised when `Grouper` object
    is used to override ambiguous column name ([GH 17383](https://github.com/pandas-dev/pandas/issues/17383))
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.groupby` 中的 Bug，在使用 `Grouper` 对象覆盖模糊列名时会引发虚假警告（[GH 17383](https://github.com/pandas-dev/pandas/issues/17383)）'
- en: Bug in `TimeGrouper` differs when passes as a list and as a scalar ([GH 17530](https://github.com/pandas-dev/pandas/issues/17530))
  id: totrans-383
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TimeGrouper` 中的 Bug，在作为列表和标量传递时存在差异（[GH 17530](https://github.com/pandas-dev/pandas/issues/17530)）'
- en: Sparse
  id: totrans-384
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Sparse
- en: Bug in `SparseSeries` raises `AttributeError` when a dictionary is passed in
    as data ([GH 16905](https://github.com/pandas-dev/pandas/issues/16905))
  id: totrans-385
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseSeries` 中的 Bug，当传入字典作为数据时会引发 `AttributeError`（[GH 16905](https://github.com/pandas-dev/pandas/issues/16905)）'
- en: Bug in `SparseDataFrame.fillna()` not filling all NaNs when frame was instantiated
    from SciPy sparse matrix ([GH 16112](https://github.com/pandas-dev/pandas/issues/16112))
  id: totrans-386
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseDataFrame.fillna()` 中的 Bug，在从 SciPy 稀疏矩阵实例化的框架中未填充所有 NaNs（[GH 16112](https://github.com/pandas-dev/pandas/issues/16112)）'
- en: Bug in `SparseSeries.unstack()` and `SparseDataFrame.stack()` ([GH 16614](https://github.com/pandas-dev/pandas/issues/16614),
    [GH 15045](https://github.com/pandas-dev/pandas/issues/15045))
  id: totrans-387
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseSeries.unstack()` 和 `SparseDataFrame.stack()` 中的 Bug（[GH 16614](https://github.com/pandas-dev/pandas/issues/16614),
    [GH 15045](https://github.com/pandas-dev/pandas/issues/15045)）'
- en: Bug in `make_sparse()` treating two numeric/boolean data, which have same bits,
    as same when array `dtype` is `object` ([GH 17574](https://github.com/pandas-dev/pandas/issues/17574))
  id: totrans-388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`make_sparse()` 中的 Bug，在数组 `dtype` 为 `object` 时，将两个数字/布尔数据（具有相同位）视为相同（[GH 17574](https://github.com/pandas-dev/pandas/issues/17574)）'
- en: '`SparseArray.all()` and `SparseArray.any()` are now implemented to handle `SparseArray`,
    these were used but not implemented ([GH 17570](https://github.com/pandas-dev/pandas/issues/17570))'
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseArray.all()` 和 `SparseArray.any()` 现在已实现以处理 `SparseArray`，这些功能以前被使用但未实现（[GH
    17570](https://github.com/pandas-dev/pandas/issues/17570)）'
- en: Reshaping
  id: totrans-390
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重塑
- en: Joining/Merging with a non unique `PeriodIndex` raised a `TypeError` ([GH 16871](https://github.com/pandas-dev/pandas/issues/16871))
  id: totrans-391
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用非唯一的 `PeriodIndex` 进行连接/合并会引发 `TypeError`（[GH 16871](https://github.com/pandas-dev/pandas/issues/16871)）
- en: Bug in [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") where non-aligned series of integers were casted to float ([GH
    17005](https://github.com/pandas-dev/pandas/issues/17005))
  id: totrans-392
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    中存在 Bug，其中非对齐的整数系列被转换为浮点数（[GH 17005](https://github.com/pandas-dev/pandas/issues/17005)）
- en: Bug in merging with categorical dtypes with datetimelikes incorrectly raised
    a `TypeError` ([GH 16900](https://github.com/pandas-dev/pandas/issues/16900))
  id: totrans-393
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与日期时间类别数据类型合并存在 Bug，错误地引发了 `TypeError`（[GH 16900](https://github.com/pandas-dev/pandas/issues/16900)）
- en: Bug when using `isin()` on a large object series and large comparison array
    ([GH 16012](https://github.com/pandas-dev/pandas/issues/16012))
  id: totrans-394
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在大型对象系列和大型比较数组上使用 `isin()` 时存在 Bug（[GH 16012](https://github.com/pandas-dev/pandas/issues/16012)）
- en: Fixes regression from 0.20, [`Series.aggregate()`](../reference/api/pandas.Series.aggregate.html#pandas.Series.aggregate
    "pandas.Series.aggregate") and [`DataFrame.aggregate()`](../reference/api/pandas.DataFrame.aggregate.html#pandas.DataFrame.aggregate
    "pandas.DataFrame.aggregate") allow dictionaries as return values again ([GH 16741](https://github.com/pandas-dev/pandas/issues/16741))
  id: totrans-395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 0.20 中的回归修复，[`Series.aggregate()`](../reference/api/pandas.Series.aggregate.html#pandas.Series.aggregate
    "pandas.Series.aggregate") 和 [`DataFrame.aggregate()`](../reference/api/pandas.DataFrame.aggregate.html#pandas.DataFrame.aggregate
    "pandas.DataFrame.aggregate") 再次允许将字典作为返回值（[GH 16741](https://github.com/pandas-dev/pandas/issues/16741)）
- en: Fixes dtype of result with integer dtype input, from [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") when called with `margins=True` ([GH 17013](https://github.com/pandas-dev/pandas/issues/17013))
  id: totrans-396
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了整数类型输入的结果的 dtype，来自 [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") 在调用时使用 `margins=True` 时（[GH 17013](https://github.com/pandas-dev/pandas/issues/17013)）
- en: Bug in [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") where passing two `Series` with the same name raised a `KeyError`
    ([GH 13279](https://github.com/pandas-dev/pandas/issues/13279))
  id: totrans-397
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    中出现的 Bug，当传入两个具有相同名称的 `Series` 时引发 `KeyError` ([GH 13279](https://github.com/pandas-dev/pandas/issues/13279))
- en: '[`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin"), [`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax"), and their counterparts on `DataFrame` and groupby objects
    work correctly with floating point data that contains infinite values ([GH 13595](https://github.com/pandas-dev/pandas/issues/13595)).'
  id: totrans-398
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin")，[`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax")，以及它们在 `DataFrame` 和 groupby 对象上的对应函数，在包含无穷值的浮点数据上能够正常工作
    ([GH 13595](https://github.com/pandas-dev/pandas/issues/13595)).'
- en: Bug in [`unique()`](../reference/api/pandas.unique.html#pandas.unique "pandas.unique")
    where checking a tuple of strings raised a `TypeError` ([GH 17108](https://github.com/pandas-dev/pandas/issues/17108))
  id: totrans-399
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 [`unique()`](../reference/api/pandas.unique.html#pandas.unique "pandas.unique")
    中出现的 Bug，检查字符串元组时引发 `TypeError` ([GH 17108](https://github.com/pandas-dev/pandas/issues/17108))
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    where order of result index was unpredictable if it contained non-comparable elements
    ([GH 17344](https://github.com/pandas-dev/pandas/issues/17344))
  id: totrans-400
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    中出现的 Bug，如果结果索引包含不可比较的元素，则其顺序是不可预测的 ([GH 17344](https://github.com/pandas-dev/pandas/issues/17344))
- en: Fixes regression when sorting by multiple columns on a `datetime64` dtype `Series`
    with `NaT` values ([GH 16836](https://github.com/pandas-dev/pandas/issues/16836))
  id: totrans-401
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了在具有 `datetime64` dtype 的 `Series` 上按多个列排序时出现的回归问题，其中包含 `NaT` 值 ([GH 16836](https://github.com/pandas-dev/pandas/issues/16836))
- en: Bug in [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") where the result’s columns did not preserve the categorical
    dtype of `columns` when `dropna` was `False` ([GH 17842](https://github.com/pandas-dev/pandas/issues/17842))
  id: totrans-402
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") 中出现的 Bug，当 `dropna` 为 `False` 时，结果的列未保留 `columns` 的分类 dtype
    ([GH 17842](https://github.com/pandas-dev/pandas/issues/17842))
- en: Bug in `DataFrame.drop_duplicates` where dropping with non-unique column names
    raised a `ValueError` ([GH 17836](https://github.com/pandas-dev/pandas/issues/17836))
  id: totrans-403
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `DataFrame.drop_duplicates` 中出现的 Bug，当具有非唯一列名时引发 `ValueError` ([GH 17836](https://github.com/pandas-dev/pandas/issues/17836))
- en: Bug in `unstack()` which, when called on a list of levels, would discard the
    `fillna` argument ([GH 13971](https://github.com/pandas-dev/pandas/issues/13971))
  id: totrans-404
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `unstack()` 中出现的 Bug，在一个级别列表上调用时，会丢弃 `fillna` 参数 ([GH 13971](https://github.com/pandas-dev/pandas/issues/13971))
- en: Bug in the alignment of `range` objects and other list-likes with `DataFrame`
    leading to operations being performed row-wise instead of column-wise ([GH 17901](https://github.com/pandas-dev/pandas/issues/17901))
  id: totrans-405
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`range` 对象与其他类似列表在与 `DataFrame` 对齐时出现的 Bug，导致操作按行而不是按列执行 ([GH 17901](https://github.com/pandas-dev/pandas/issues/17901))'
- en: Numeric
  id: totrans-406
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数字
- en: Bug in `.clip()` with `axis=1` and a list-like for `threshold` is passed; previously
    this raised `ValueError` ([GH 15390](https://github.com/pandas-dev/pandas/issues/15390))
  id: totrans-407
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用 `.clip()` 时，当 `axis=1` 并且 `threshold` 传入一个类似列表时出现的 Bug；之前会引发 `ValueError`
    ([GH 15390](https://github.com/pandas-dev/pandas/issues/15390))
- en: '[`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip") and [`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip") now treat NA values for upper and lower arguments as
    `None` instead of raising `ValueError` ([GH 17276](https://github.com/pandas-dev/pandas/issues/17276)).'
  id: totrans-408
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip") 和 [`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip") 现在将上限和下限参数的 NA 值视为 `None`，而不是引发 `ValueError` ([GH 17276](https://github.com/pandas-dev/pandas/issues/17276))'
- en: Categorical
  id: totrans-409
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分类
- en: Bug in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") when called with a categorical ([GH 16639](https://github.com/pandas-dev/pandas/issues/16639))
  id: totrans-410
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") 中出现的 Bug，当与一个分类一起调用时 ([GH 16639](https://github.com/pandas-dev/pandas/issues/16639))
- en: Bug in the categorical constructor with empty values and categories causing
    the `.categories` to be an empty `Float64Index` rather than an empty `Index` with
    object dtype ([GH 17248](https://github.com/pandas-dev/pandas/issues/17248))
  id: totrans-411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当空值和类别造成分类构造函数中的bug时，`.categories`会是一个空的`Float64Index`，而不是一个空的具有对象dtype的`Index`（[GH
    17248](https://github.com/pandas-dev/pandas/issues/17248)）
- en: Bug in categorical operations with [Series.cat](../user_guide/categorical.html#categorical-cat)
    not preserving the original Series’ name ([GH 17509](https://github.com/pandas-dev/pandas/issues/17509))
  id: totrans-412
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与[Series.cat](../user_guide/categorical.html#categorical-cat)中的分类操作bug，未保留原始Series的名称（[GH
    17509](https://github.com/pandas-dev/pandas/issues/17509)）
- en: Bug in [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") failing for categorical columns with boolean/int data
    types ([GH 17187](https://github.com/pandas-dev/pandas/issues/17187))
  id: totrans-413
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge")中的bug，对于布尔/整数数据类型的分类列失败（[GH 17187](https://github.com/pandas-dev/pandas/issues/17187)）'
- en: Bug in constructing a `Categorical`/`CategoricalDtype` when the specified `categories`
    are of categorical type ([GH 17884](https://github.com/pandas-dev/pandas/issues/17884)).
  id: totrans-414
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当指定的`categories`是分类类型时，在构建`Categorical`/`CategoricalDtype`时存在bug，导致错误（[GH 17884](https://github.com/pandas-dev/pandas/issues/17884)）。
- en: '### PyPy'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: '### PyPy'
- en: Compatibility with PyPy in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `usecols=[<unsorted ints>]` and [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") ([GH 17351](https://github.com/pandas-dev/pandas/issues/17351))
  id: totrans-416
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`read_csv()`和`usecols=[<unsorted ints>]`以及`read_json()`中与PyPy的兼容性（[GH 17351](https://github.com/pandas-dev/pandas/issues/17351)）
- en: Split tests into cases for CPython and PyPy where needed, which highlights the
    fragility of index matching with `float('nan')`, `np.nan` and `NAT` ([GH 17351](https://github.com/pandas-dev/pandas/issues/17351))
  id: totrans-417
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在必要时将测试拆分为CPython和PyPy的情况，这凸显了使用`float('nan')`、`np.nan`和`NAT`进行索引匹配的脆弱性（[GH
    17351](https://github.com/pandas-dev/pandas/issues/17351)）
- en: Fix [`DataFrame.memory_usage()`](../reference/api/pandas.DataFrame.memory_usage.html#pandas.DataFrame.memory_usage
    "pandas.DataFrame.memory_usage") to support PyPy. Objects on PyPy do not have
    a fixed size, so an approximation is used instead ([GH 17228](https://github.com/pandas-dev/pandas/issues/17228))
  id: totrans-418
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了支持PyPy的[`DataFrame.memory_usage()`](../reference/api/pandas.DataFrame.memory_usage.html#pandas.DataFrame.memory_usage
    "pandas.DataFrame.memory_usage")。 PyPy上的对象没有固定大小，因此使用近似值（[GH 17228](https://github.com/pandas-dev/pandas/issues/17228)）
- en: Other
  id: totrans-419
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他
- en: Bug where some inplace operators were not being wrapped and produced a copy
    when invoked ([GH 12962](https://github.com/pandas-dev/pandas/issues/12962))
  id: totrans-420
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些inplace操作符没有被正确包装并在调用时产生了副本的bug（[GH 12962](https://github.com/pandas-dev/pandas/issues/12962)）
- en: 'Bug in [`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval")
    where the `inplace` parameter was being incorrectly handled ([GH 16732](https://github.com/pandas-dev/pandas/issues/16732))  ##
    Contributors'
  id: totrans-421
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval")中的bug，`inplace`参数被错误处理（[GH
    16732](https://github.com/pandas-dev/pandas/issues/16732)）  ## 贡献者'
- en: A total of 206 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 共有206人为此版本做出了贡献。 带有“+”符号的人是第一次贡献代码。
- en: 3553x +
  id: totrans-423
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3553x +
- en: Aaron Barber
  id: totrans-424
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Aaron Barber
- en: Adam Gleave +
  id: totrans-425
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Adam Gleave +
- en: Adam Smith +
  id: totrans-426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Adam Smith +
- en: AdamShamlian +
  id: totrans-427
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AdamShamlian +
- en: Adrian Liaw +
  id: totrans-428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Adrian Liaw +
- en: Alan Velasco +
  id: totrans-429
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alan Velasco +
- en: Alan Yee +
  id: totrans-430
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alan Yee +
- en: Alex B +
  id: totrans-431
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alex B +
- en: Alex Lubbock +
  id: totrans-432
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alex Lubbock +
- en: Alex Marchenko +
  id: totrans-433
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alex Marchenko +
- en: Alex Rychyk +
  id: totrans-434
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alex Rychyk +
- en: Amol K +
  id: totrans-435
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amol K +
- en: Andreas Winkler
  id: totrans-436
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Andreas Winkler
- en: Andrew +
  id: totrans-437
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Andrew +
- en: Andrew 亮
  id: totrans-438
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Andrew 亮
- en: André Jonasson +
  id: totrans-439
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: André Jonasson +
- en: Becky Sweger
  id: totrans-440
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Becky Sweger
- en: Berkay +
  id: totrans-441
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Berkay +
- en: Bob Haffner +
  id: totrans-442
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bob Haffner +
- en: Bran Yang
  id: totrans-443
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bran Yang
- en: Brian Tu +
  id: totrans-444
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Brian Tu +
- en: Brock Mendel +
  id: totrans-445
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Brock Mendel +
- en: Carol Willing +
  id: totrans-446
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Carol Willing +
- en: Carter Green +
  id: totrans-447
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Carter Green +
- en: Chankey Pathak +
  id: totrans-448
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chankey Pathak +
- en: Chris
  id: totrans-449
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chris
- en: Chris Billington
  id: totrans-450
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chris Billington
- en: Chris Filo Gorgolewski +
  id: totrans-451
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chris Filo Gorgolewski +
- en: Chris Kerr
  id: totrans-452
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chris Kerr
- en: Chris M +
  id: totrans-453
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chris M +
- en: Chris Mazzullo +
  id: totrans-454
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chris Mazzullo +
- en: Christian Prinoth
  id: totrans-455
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Christian Prinoth
- en: Christian Stade-Schuldt
  id: totrans-456
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Christian Stade-Schuldt
- en: Christoph Moehl +
  id: totrans-457
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Christoph Moehl +
- en: DSM
  id: totrans-458
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DSM
- en: Daniel Chen +
  id: totrans-459
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Daniel Chen +
- en: Daniel Grady
  id: totrans-460
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Daniel Grady
- en: Daniel Himmelstein
  id: totrans-461
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Daniel Himmelstein
- en: Dave Willmer
  id: totrans-462
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dave Willmer
- en: David Cook
  id: totrans-463
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: David Cook
- en: David Gwynne
  id: totrans-464
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: David Gwynne
- en: David Read +
  id: totrans-465
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: David Read +
- en: Dillon Niederhut +
  id: totrans-466
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dillon Niederhut +
- en: Douglas Rudd
  id: totrans-467
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Douglas Rudd
- en: Eric Stein +
  id: totrans-468
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eric Stein +
- en: Eric Wieser +
  id: totrans-469
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eric Wieser +
- en: Erik Fredriksen
  id: totrans-470
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Erik Fredriksen
- en: Florian Wilhelm +
  id: totrans-471
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Florian Wilhelm +
- en: Floris Kint +
  id: totrans-472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Floris Kint +
- en: Forbidden Donut
  id: totrans-473
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁忌甜甜圈
- en: Gabe F +
  id: totrans-474
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gabe F +
- en: Giftlin +
  id: totrans-475
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Giftlin +
- en: Giftlin Rajaiah +
  id: totrans-476
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Giftlin Rajaiah +
- en: Giulio Pepe +
  id: totrans-477
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Giulio Pepe +
- en: Guilherme Beltramini
  id: totrans-478
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Guilherme Beltramini
- en: Guillem Borrell +
  id: totrans-479
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Guillem Borrell +
- en: Hanmin Qin +
  id: totrans-480
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hanmin Qin +
- en: Hendrik Makait +
  id: totrans-481
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hendrik Makait +
- en: Hugues Valois
  id: totrans-482
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hugues Valois
- en: Hussain Tamboli +
  id: totrans-483
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hussain Tamboli +
- en: Iva Miholic +
  id: totrans-484
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Iva Miholic +
- en: Jan Novotný +
  id: totrans-485
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jan Novotný +
- en: Jan Rudolph
  id: totrans-486
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jan Rudolph
- en: Jean Helie +
  id: totrans-487
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jean Helie +
- en: Jean-Baptiste Schiratti +
  id: totrans-488
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jean-Baptiste Schiratti +
- en: Jean-Mathieu Deschenes
  id: totrans-489
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jean-Mathieu Deschenes
- en: Jeff Knupp +
  id: totrans-490
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jeff Knupp +
- en: Jeff Reback
  id: totrans-491
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jeff Reback
- en: Jeff Tratner
  id: totrans-492
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jeff Tratner
- en: JennaVergeynst
  id: totrans-493
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JennaVergeynst
- en: JimStearns206
  id: totrans-494
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JimStearns206
- en: Joel Nothman
  id: totrans-495
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Joel Nothman
- en: John W. O’Brien
  id: totrans-496
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: John W. O’Brien
- en: Jon Crall +
  id: totrans-497
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jon Crall +
- en: Jon Mease
  id: totrans-498
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jon Mease
- en: Jonathan J. Helmus +
  id: totrans-499
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jonathan J. Helmus +
- en: Joris Van den Bossche
  id: totrans-500
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Joris Van den Bossche
- en: JosephWagner
  id: totrans-501
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JosephWagner
- en: Juarez Bochi
  id: totrans-502
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Juarez Bochi
- en: Julian Kuhlmann +
  id: totrans-503
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Julian Kuhlmann +
- en: Karel De Brabandere
  id: totrans-504
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Karel De Brabandere
- en: Kassandra Keeton +
  id: totrans-505
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kassandra Keeton +
- en: Keiron Pizzey +
  id: totrans-506
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Keiron Pizzey +
- en: Keith Webber
  id: totrans-507
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Keith Webber
- en: Kernc
  id: totrans-508
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kernc
- en: Kevin Sheppard
  id: totrans-509
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kevin Sheppard
- en: Kirk Hansen +
  id: totrans-510
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kirk Hansen +
- en: Licht Takeuchi +
  id: totrans-511
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Licht Takeuchi +
- en: Lucas Kushner +
  id: totrans-512
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lucas Kushner +
- en: Mahdi Ben Jelloul +
  id: totrans-513
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mahdi Ben Jelloul +
- en: Makarov Andrey +
  id: totrans-514
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Makarov Andrey +
- en: Malgorzata Turzanska +
  id: totrans-515
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Malgorzata Turzanska +
- en: Marc Garcia +
  id: totrans-516
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Marc Garcia +
- en: Margaret Sy +
  id: totrans-517
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Margaret Sy +
- en: MarsGuy +
  id: totrans-518
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MarsGuy +
- en: Matt Bark +
  id: totrans-519
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Matt Bark +
- en: Matthew Roeschke
  id: totrans-520
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Matthew Roeschke
- en: Matti Picus
  id: totrans-521
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Matti Picus
- en: Mehmet Ali “Mali” Akmanalp
  id: totrans-522
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mehmet Ali “Mali” Akmanalp
- en: Michael Gasvoda +
  id: totrans-523
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Michael Gasvoda +
- en: Michael Penkov +
  id: totrans-524
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Michael Penkov +
- en: Milo +
  id: totrans-525
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Milo +
- en: Morgan Stuart +
  id: totrans-526
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Morgan Stuart +
- en: Morgan243 +
  id: totrans-527
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Morgan243 +
- en: Nathan Ford +
  id: totrans-528
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nathan Ford +
- en: Nick Eubank
  id: totrans-529
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nick Eubank
- en: Nick Garvey +
  id: totrans-530
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nick Garvey +
- en: Oleg Shteynbuk +
  id: totrans-531
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Oleg Shteynbuk +
- en: P-Tillmann +
  id: totrans-532
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: P-Tillmann +
- en: Pankaj Pandey
  id: totrans-533
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pankaj Pandey
- en: Patrick Luo
  id: totrans-534
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Patrick Luo
- en: Patrick O’Melveny
  id: totrans-535
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Patrick O’Melveny
- en: Paul Reidy +
  id: totrans-536
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Paul Reidy +
- en: Paula +
  id: totrans-537
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Paula +
- en: Peter Quackenbush
  id: totrans-538
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Peter Quackenbush
- en: Peter Yanovich +
  id: totrans-539
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Peter Yanovich +
- en: Phillip Cloud
  id: totrans-540
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Phillip Cloud
- en: Pierre Haessig
  id: totrans-541
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pierre Haessig
- en: Pietro Battiston
  id: totrans-542
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pietro Battiston
- en: Pradyumna Reddy Chinthala
  id: totrans-543
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pradyumna Reddy Chinthala
- en: Prasanjit Prakash
  id: totrans-544
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Prasanjit Prakash
- en: RobinFiveWords
  id: totrans-545
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RobinFiveWords
- en: Ryan Hendrickson
  id: totrans-546
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ryan Hendrickson
- en: Sam Foo
  id: totrans-547
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sam Foo
- en: Sangwoong Yoon +
  id: totrans-548
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sangwoong Yoon +
- en: Simon Gibbons +
  id: totrans-549
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Simon Gibbons +
- en: SimonBaron
  id: totrans-550
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SimonBaron
- en: Steven Cutting +
  id: totrans-551
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Steven Cutting +
- en: Sudeep +
  id: totrans-552
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sudeep +
- en: Sylvia +
  id: totrans-553
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sylvia +
- en: T N +
  id: totrans-554
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: T N +
- en: Telt
  id: totrans-555
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Telt
- en: Thomas A Caswell
  id: totrans-556
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Thomas A Caswell
- en: Tim Swast +
  id: totrans-557
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tim Swast +
- en: Tom Augspurger
  id: totrans-558
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tom Augspurger
- en: Tong SHEN
  id: totrans-559
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tong SHEN
- en: Tuan +
  id: totrans-560
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tuan +
- en: Utkarsh Upadhyay +
  id: totrans-561
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Utkarsh Upadhyay +
- en: Vincent La +
  id: totrans-562
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vincent La +
- en: Vivek +
  id: totrans-563
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vivek +
- en: WANG Aiyong
  id: totrans-564
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WANG Aiyong
- en: WBare
  id: totrans-565
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WBare
- en: Wes McKinney
  id: totrans-566
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wes McKinney
- en: XF +
  id: totrans-567
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: XF +
- en: Yi Liu +
  id: totrans-568
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yi Liu +
- en: Yosuke Nakabayashi +
  id: totrans-569
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yosuke Nakabayashi +
- en: aaron315 +
  id: totrans-570
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: aaron315 +
- en: abarber4gh +
  id: totrans-571
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: abarber4gh +
- en: aernlund +
  id: totrans-572
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: aernlund +
- en: agustín méndez +
  id: totrans-573
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: agustín méndez +
- en: andymaheshw +
  id: totrans-574
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: andymaheshw +
- en: ante328 +
  id: totrans-575
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ante328 +
- en: aviolov +
  id: totrans-576
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: aviolov +
- en: bpraggastis
  id: totrans-577
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: bpraggastis
- en: cbertinato +
  id: totrans-578
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cbertinato +
- en: cclauss +
  id: totrans-579
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cclauss +
- en: chernrick
  id: totrans-580
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: chernrick
- en: chris-b1
  id: totrans-581
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: chris-b1
- en: dkamm +
  id: totrans-582
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: dkamm +
- en: dwkenefick
  id: totrans-583
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: dwkenefick
- en: economy
  id: totrans-584
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: economy
- en: faic +
  id: totrans-585
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: faic +
- en: fding253 +
  id: totrans-586
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: fding253 +
- en: gfyoung
  id: totrans-587
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: gfyoung
- en: guygoldberg +
  id: totrans-588
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: guygoldberg +
- en: hhuuggoo +
  id: totrans-589
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: hhuuggoo +
- en: huashuai +
  id: totrans-590
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: huashuai +
- en: ian
  id: totrans-591
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ian
- en: iulia +
  id: totrans-592
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iulia +
- en: jaredsnyder
  id: totrans-593
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jaredsnyder
- en: jbrockmendel +
  id: totrans-594
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jbrockmendel +
- en: jdeschenes
  id: totrans-595
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jdeschenes
- en: jebob +
  id: totrans-596
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jebob +
- en: jschendel +
  id: totrans-597
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jschendel +
- en: keitakurita
  id: totrans-598
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: keitakurita
- en: kernc +
  id: totrans-599
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: kernc +
- en: kiwirob +
  id: totrans-600
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: kiwirob +
- en: kjford
  id: totrans-601
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: kjford
- en: linebp
  id: totrans-602
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: linebp
- en: lloydkirk
  id: totrans-603
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: lloydkirk
- en: louispotok +
  id: totrans-604
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: louispotok +
- en: majiang +
  id: totrans-605
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: majiang +
- en: manikbhandari +
  id: totrans-606
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: manikbhandari +
- en: margotphoenix +
  id: totrans-607
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: margotphoenix +
- en: matthiashuschle +
  id: totrans-608
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: matthiashuschle +
- en: mattip
  id: totrans-609
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: mattip
- en: mjlove12 +
  id: totrans-610
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: mjlove12 +
- en: nmartensen +
  id: totrans-611
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: nmartensen +
- en: pandas-docs-bot +
  id: totrans-612
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas-docs-bot +
- en: parchd-1 +
  id: totrans-613
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: parchd-1 +
- en: philipphanemann +
  id: totrans-614
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: philipphanemann +
- en: rdk1024 +
  id: totrans-615
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: rdk1024 +
- en: reidy-p +
  id: totrans-616
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: reidy-p +
- en: ri938
  id: totrans-617
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ri938
- en: ruiann +
  id: totrans-618
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ruiann +
- en: rvernica +
  id: totrans-619
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: rvernica +
- en: s-weigand +
  id: totrans-620
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: s-weigand +
- en: scotthavard92 +
  id: totrans-621
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: scotthavard92 +
- en: skwbc +
  id: totrans-622
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: skwbc +
- en: step4me +
  id: totrans-623
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: step4me +
- en: tobycheese +
  id: totrans-624
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: tobycheese +
- en: topper-123 +
  id: totrans-625
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: topper-123 +
- en: tsdlovell
  id: totrans-626
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: tsdlovell
- en: ysau +
  id: totrans-627
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ysau +
- en: 'zzgao +  ## New features'
  id: totrans-628
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'zzgao +  ## 新功能'
- en: '### Integration with Apache Parquet file format'
  id: totrans-629
  prefs: []
  type: TYPE_NORMAL
  zh: '### 与Apache Parquet文件格式的集成'
- en: Integration with [Apache Parquet](https://parquet.apache.org/), including a
    new top-level [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") and [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") method, see [here](../user_guide/io.html#io-parquet)
    ([GH 15838](https://github.com/pandas-dev/pandas/issues/15838), [GH 17438](https://github.com/pandas-dev/pandas/issues/17438)).
  id: totrans-630
  prefs: []
  type: TYPE_NORMAL
  zh: 与[Apache Parquet](https://parquet.apache.org/)的集成，包括一个新的顶级[`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet")和[`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet")方法，参见[此处](../user_guide/io.html#io-parquet)（[GH
    15838](https://github.com/pandas-dev/pandas/issues/15838)，[GH 17438](https://github.com/pandas-dev/pandas/issues/17438)）。
- en: '[Apache Parquet](https://parquet.apache.org/) provides a cross-language, binary
    file format for reading and writing data frames efficiently. Parquet is designed
    to faithfully serialize and de-serialize `DataFrame` s, supporting all of the
    pandas dtypes, including extension dtypes such as datetime with timezones.'
  id: totrans-631
  prefs: []
  type: TYPE_NORMAL
  zh: '[Apache Parquet](https://parquet.apache.org/)提供了一种跨语言的二进制文件格式，用于高效地读取和写入数据帧。Parquet旨在忠实地序列化和反序列化`DataFrame`，支持所有pandas的数据类型，包括带时区的日期时间等扩展数据类型。'
- en: 'This functionality depends on either the [pyarrow](http://arrow.apache.org/docs/python/)
    or [fastparquet](https://fastparquet.readthedocs.io/en/latest/) library. For more
    details, see [the IO docs on Parquet](../user_guide/io.html#io-parquet).  ###
    Method `infer_objects` type conversion'
  id: totrans-632
  prefs: []
  type: TYPE_NORMAL
  zh: 此功能取决于[pyarrow](http://arrow.apache.org/docs/python/)或[fastparquet](https://fastparquet.readthedocs.io/en/latest/)库。有关更多详细信息，请参阅关于Parquet的IO文档[（原文已失效）](../user_guide/io.html#io-parquet)。###
    方法`infer_objects`类型转换
- en: The [`DataFrame.infer_objects()`](../reference/api/pandas.DataFrame.infer_objects.html#pandas.DataFrame.infer_objects
    "pandas.DataFrame.infer_objects") and [`Series.infer_objects()`](../reference/api/pandas.Series.infer_objects.html#pandas.Series.infer_objects
    "pandas.Series.infer_objects") methods have been added to perform dtype inference
    on object columns, replacing some of the functionality of the deprecated `convert_objects`
    method. See the documentation [here](../user_guide/basics.html#basics-object-conversion)
    for more details. ([GH 11221](https://github.com/pandas-dev/pandas/issues/11221))
  id: totrans-633
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.infer_objects()`](../reference/api/pandas.DataFrame.infer_objects.html#pandas.DataFrame.infer_objects
    "pandas.DataFrame.infer_objects")和[`Series.infer_objects()`](../reference/api/pandas.Series.infer_objects.html#pandas.Series.infer_objects
    "pandas.Series.infer_objects")方法已添加以执行对象列的dtype推断，替换了已弃用的`convert_objects`方法的部分功能。有关更多详细信息，请参阅此处的文档[（原文已失效）](../user_guide/basics.html#basics-object-conversion)（[GH
    11221](https://github.com/pandas-dev/pandas/issues/11221)）。'
- en: 'This method only performs soft conversions on object columns, converting Python
    objects to native types, but not any coercive conversions. For example:'
  id: totrans-634
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法仅对对象列执行软转换，将Python对象转换为本机类型，但不执行任何强制转换。例如：
- en: '[PRE65]'
  id: totrans-635
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: Note that column `'C'` was not converted - only scalar numeric types will be
    converted to a new type. Other types of conversion should be accomplished using
    the [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") function (or [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime"), [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta")).
  id: totrans-636
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，列`'C'`未转换 - 只有标量数值类型将被转换为新类型。其他类型的转换应使用[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric")函数（或[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime")，[`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta")）完成。
- en: '[PRE66]  ### Improved warnings when attempting to create columns'
  id: totrans-637
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE66]### 当尝试创建列时改进了警告。'
- en: 'New users are often puzzled by the relationship between column operations and
    attribute access on `DataFrame` instances ([GH 7175](https://github.com/pandas-dev/pandas/issues/7175)).
    One specific instance of this confusion is attempting to create a new column by
    setting an attribute on the `DataFrame`:'
  id: totrans-638
  prefs: []
  type: TYPE_NORMAL
  zh: 新用户经常困惑于`DataFrame`实例上的列操作与属性访问之间的关系（[GH 7175](https://github.com/pandas-dev/pandas/issues/7175)）。这种困惑的一个具体实例是尝试通过在`DataFrame`上设置属性来创建新列：
- en: '[PRE67]'
  id: totrans-639
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'This does not raise any obvious exceptions, but also does not create a new
    column:'
  id: totrans-640
  prefs: []
  type: TYPE_NORMAL
  zh: 这不会引发任何明显的异常，但也不会创建新列：
- en: '[PRE68]'
  id: totrans-641
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'Setting a list-like data structure into a new attribute now raises a `UserWarning`
    about the potential for unexpected behavior. See [Attribute Access](../user_guide/indexing.html#indexing-attribute-access).  ###
    Method `drop` now also accepts index/columns keywords'
  id: totrans-642
  prefs: []
  type: TYPE_NORMAL
  zh: 将类似列表的数据结构设置为新属性现在会引发`UserWarning`，提示可能出现意外行为。请参阅[属性访问](../user_guide/indexing.html#indexing-attribute-access)。###
    方法`drop`现在还接受索引/列关键字。
- en: The [`drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") method has gained `index`/`columns` keywords as an alternative
    to specifying the `axis`. This is similar to the behavior of `reindex` ([GH 12392](https://github.com/pandas-dev/pandas/issues/12392)).
  id: totrans-643
  prefs: []
  type: TYPE_NORMAL
  zh: '[`drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop")方法增加了`index`/`columns`关键字，作为指定`axis`的替代方案。这类似于`reindex`的行为（[GH
    12392](https://github.com/pandas-dev/pandas/issues/12392)）。'
- en: 'For example:'
  id: totrans-644
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE69]  ### Methods `rename`, `reindex` now also accept axis keyword'
  id: totrans-645
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE69]### 方法`rename`，`reindex`现在还接受轴关键字。'
- en: The [`DataFrame.rename()`](../reference/api/pandas.DataFrame.rename.html#pandas.DataFrame.rename
    "pandas.DataFrame.rename") and [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") methods have gained the `axis` keyword to specify
    the axis to target with the operation ([GH 12392](https://github.com/pandas-dev/pandas/issues/12392)).
  id: totrans-646
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.rename()`](../reference/api/pandas.DataFrame.rename.html#pandas.DataFrame.rename
    "pandas.DataFrame.rename") 和 [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") 方法现已添加 `axis` 关键字，用于指定要使用操作的轴（[GH 12392](https://github.com/pandas-dev/pandas/issues/12392)）。'
- en: 'Here’s `rename`:'
  id: totrans-647
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 `rename`：
- en: '[PRE70]'
  id: totrans-648
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'And `reindex`:'
  id: totrans-649
  prefs: []
  type: TYPE_NORMAL
  zh: 并且 `reindex`：
- en: '[PRE71]'
  id: totrans-650
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: The “index, columns” style continues to work as before.
  id: totrans-651
  prefs: []
  type: TYPE_NORMAL
  zh: “index, columns” 样式仍然像以前一样工作。
- en: '[PRE72]'
  id: totrans-652
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'We *highly* encourage using named arguments to avoid confusion when using either
    style.  ### `CategoricalDtype` for specifying categoricals'
  id: totrans-653
  prefs: []
  type: TYPE_NORMAL
  zh: 我们*强烈*鼓励使用命名参数，以避免在使用任何一种样式时产生混淆。### 用于指定分类的 `CategoricalDtype`
- en: '`pandas.api.types.CategoricalDtype` has been added to the public API and expanded
    to include the `categories` and `ordered` attributes. A `CategoricalDtype` can
    be used to specify the set of categories and orderedness of an array, independent
    of the data. This can be useful for example, when converting string data to a
    `Categorical` ([GH 14711](https://github.com/pandas-dev/pandas/issues/14711),
    [GH 15078](https://github.com/pandas-dev/pandas/issues/15078), [GH 16015](https://github.com/pandas-dev/pandas/issues/16015),
    [GH 17643](https://github.com/pandas-dev/pandas/issues/17643)):'
  id: totrans-654
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas.api.types.CategoricalDtype` 已添加到公共 API 并扩展以包括 `categories` 和 `ordered`
    属性。`CategoricalDtype` 可用于指定数组的类别集和顺序性，与数据独立。例如，将字符串数据转换为 `Categorical` 时可以很有用（[GH
    14711](https://github.com/pandas-dev/pandas/issues/14711)，[GH 15078](https://github.com/pandas-dev/pandas/issues/15078)，[GH
    16015](https://github.com/pandas-dev/pandas/issues/16015)，[GH 17643](https://github.com/pandas-dev/pandas/issues/17643)）：'
- en: '[PRE73]'
  id: totrans-655
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'One place that deserves special mention is in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"). Previously, with `dtype={''col'': ''category''}`, the returned
    values and categories would always be strings.'
  id: totrans-656
  prefs: []
  type: TYPE_NORMAL
  zh: '一个值得特别提及的地方在 [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") 中。以前，使用 `dtype={''col'': ''category''}`，返回的值和类别总是字符串。'
- en: '[PRE74]'
  id: totrans-657
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: Notice the “object” dtype.
  id: totrans-658
  prefs: []
  type: TYPE_NORMAL
  zh: 注意“object” dtype。
- en: With a `CategoricalDtype` of all numerics, datetimes, or timedeltas, we can
    automatically convert to the correct type
  id: totrans-659
  prefs: []
  type: TYPE_NORMAL
  zh: 有了所有数字、日期时间或时间增量的 `CategoricalDtype`，我们可以自动转换为正确的类型。
- en: '[PRE75]'
  id: totrans-660
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: The values have been correctly interpreted as integers.
  id: totrans-661
  prefs: []
  type: TYPE_NORMAL
  zh: 值已正确解释为整数。
- en: The `.dtype` property of a `Categorical`, `CategoricalIndex` or a `Series` with
    categorical type will now return an instance of `CategoricalDtype`. While the
    repr has changed, `str(CategoricalDtype())` is still the string `'category'`.
    We’ll take this moment to remind users that the *preferred* way to detect categorical
    data is to use [`pandas.api.types.is_categorical_dtype()`](../reference/api/pandas.api.types.is_categorical_dtype.html#pandas.api.types.is_categorical_dtype
    "pandas.api.types.is_categorical_dtype"), and not `str(dtype) == 'category'`.
  id: totrans-662
  prefs: []
  type: TYPE_NORMAL
  zh: '`Categorical`、`CategoricalIndex` 或具有分类类型的 `Series` 的 `.dtype` 属性现在将返回 `CategoricalDtype`
    的实例。虽然 repr 已经改变，`str(CategoricalDtype())` 仍然是字符串 `''category''`。我们将在此提醒用户，检测分类数据的*首选*方式是使用[`pandas.api.types.is_categorical_dtype()`](../reference/api/pandas.api.types.is_categorical_dtype.html#pandas.api.types.is_categorical_dtype
    "pandas.api.types.is_categorical_dtype")，而不是 `str(dtype) == ''category''`。'
- en: 'See the [CategoricalDtype docs](../user_guide/categorical.html#categorical-categoricaldtype)
    for more.  ### `GroupBy` objects now have a `pipe` method'
  id: totrans-663
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息请参阅[CategoricalDtype 文档](../user_guide/categorical.html#categorical-categoricaldtype)。###
    `GroupBy` 对象现在具有 `pipe` 方法
- en: '`GroupBy` objects now have a `pipe` method, similar to the one on `DataFrame`
    and `Series`, that allow for functions that take a `GroupBy` to be composed in
    a clean, readable syntax. ([GH 17871](https://github.com/pandas-dev/pandas/issues/17871))'
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
  zh: '`GroupBy` 对象现在具有 `pipe` 方法，类似于 `DataFrame` 和 `Series` 上的方法，允许以清晰、可读的语法组合接受
    `GroupBy` 的函数。([GH 17871](https://github.com/pandas-dev/pandas/issues/17871))'
- en: For a concrete example on combining `.groupby` and `.pipe` , imagine having
    a DataFrame with columns for stores, products, revenue and sold quantity. We’d
    like to do a groupwise calculation of *prices* (i.e. revenue/quantity) per store
    and per product. We could do this in a multi-step operation, but expressing it
    in terms of piping can make the code more readable.
  id: totrans-665
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一个将 `.groupby` 和 `.pipe` 结合起来的具体示例，请想象一个具有店铺、产品、收入和销售数量列的 DataFrame。我们想要对每个店铺和每个产品进行分组计算*价格*（即收入/数量）。我们可以通过多步操作来实现这个目标，但是使用管道来表达会使代码更易读。
- en: 'First we set the data:'
  id: totrans-666
  prefs: []
  type: TYPE_NORMAL
  zh: 首先我们设置数据：
- en: '[PRE76]'
  id: totrans-667
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'Now, to find prices per store/product, we can simply do:'
  id: totrans-668
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，要找到每个商店/产品的价格，我们可以简单地执行：
- en: '[PRE77]'
  id: totrans-669
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'See the [documentation](../user_guide/groupby.html#groupby-pipe) for more.  ###
    `Categorical.rename_categories` accepts a dict-like'
  id: totrans-670
  prefs: []
  type: TYPE_NORMAL
  zh: 查看更多内容，请参阅[文档](../user_guide/groupby.html#groupby-pipe)。### `Categorical.rename_categories`
    接受类似字典的对象
- en: '[`rename_categories()`](../reference/api/pandas.Series.cat.rename_categories.html#pandas.Series.cat.rename_categories
    "pandas.Series.cat.rename_categories") now accepts a dict-like argument for `new_categories`.
    The previous categories are looked up in the dictionary’s keys and replaced if
    found. The behavior of missing and extra keys is the same as in [`DataFrame.rename()`](../reference/api/pandas.DataFrame.rename.html#pandas.DataFrame.rename
    "pandas.DataFrame.rename").'
  id: totrans-671
  prefs: []
  type: TYPE_NORMAL
  zh: '[`rename_categories()`](../reference/api/pandas.Series.cat.rename_categories.html#pandas.Series.cat.rename_categories
    "pandas.Series.cat.rename_categories") 现在接受类似字典的参数作为 `new_categories`。先前的类别将在字典的键中查找并进行替换。与
    [`DataFrame.rename()`](../reference/api/pandas.DataFrame.rename.html#pandas.DataFrame.rename
    "pandas.DataFrame.rename") 中的缺失和额外键的行为相同。'
- en: '[PRE78]'
  id: totrans-672
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: Warning
  id: totrans-673
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: To assist with upgrading pandas, `rename_categories` treats `Series` as list-like.
    Typically, Series are considered to be dict-like (e.g. in `.rename`, `.map`).
    In a future version of pandas `rename_categories` will change to treat them as
    dict-like. Follow the warning message’s recommendations for writing future-proof
    code.
  id: totrans-674
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助升级 pandas，`rename_categories` 将 `Series` 视为类似列表的对象。通常，Series 被视为类似字典的对象（例如在
    `.rename`、`.map` 中）。在未来的 pandas 版本中，`rename_categories` 将会更改为将其视为类似字典的对象。请遵循警告消息中的建议编写具有未来兼容性的代码。
- en: '[PRE79]  ### Other enhancements'
  id: totrans-675
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE79]  ### 其他增强功能'
- en: New functions or methods
  id: totrans-676
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 新函数或方法
- en: '[`Resampler.nearest()`](../reference/api/pandas.core.resample.Resampler.nearest.html#pandas.core.resample.Resampler.nearest
    "pandas.core.resample.Resampler.nearest") is added to support nearest-neighbor
    upsampling ([GH 17496](https://github.com/pandas-dev/pandas/issues/17496)).'
  id: totrans-677
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Resampler.nearest()`](../reference/api/pandas.core.resample.Resampler.nearest.html#pandas.core.resample.Resampler.nearest
    "pandas.core.resample.Resampler.nearest") 被添加以支持最近邻上采样（[GH 17496](https://github.com/pandas-dev/pandas/issues/17496)）。'
- en: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") has
    added support for a `to_frame` method ([GH 15230](https://github.com/pandas-dev/pandas/issues/15230)).'
  id: totrans-678
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") 现在支持
    `to_frame` 方法（[GH 15230](https://github.com/pandas-dev/pandas/issues/15230)）。'
- en: New keywords
  id: totrans-679
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 新关键字
- en: Added a `skipna` parameter to [`infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") to support type inference in the presence of missing
    values ([GH 17059](https://github.com/pandas-dev/pandas/issues/17059)).
  id: totrans-680
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 [`infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") 中添加了一个 `skipna` 参数，以支持在存在缺失值时进行类型推断（[GH 17059](https://github.com/pandas-dev/pandas/issues/17059)）。
- en: '[`Series.to_dict()`](../reference/api/pandas.Series.to_dict.html#pandas.Series.to_dict
    "pandas.Series.to_dict") and [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") now support an `into` keyword which allows you to
    specify the `collections.Mapping` subclass that you would like returned. The default
    is `dict`, which is backwards compatible. ([GH 16122](https://github.com/pandas-dev/pandas/issues/16122))'
  id: totrans-681
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.to_dict()`](../reference/api/pandas.Series.to_dict.html#pandas.Series.to_dict
    "pandas.Series.to_dict") 和 [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") 现在支持 `into` 关键字，允许您指定要返回的 `collections.Mapping` 子类。默认为
    `dict`，向后兼容。([GH 16122](https://github.com/pandas-dev/pandas/issues/16122))'
- en: '[`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") and [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") now support the `inplace` parameter. ([GH 14636](https://github.com/pandas-dev/pandas/issues/14636))'
  id: totrans-682
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") 和 [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") 现在支持 `inplace` 参数。([GH 14636](https://github.com/pandas-dev/pandas/issues/14636))'
- en: '[`Series.to_pickle()`](../reference/api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle") and [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle") have gained a `protocol` parameter ([GH 16252](https://github.com/pandas-dev/pandas/issues/16252)).
    By default, this parameter is set to [HIGHEST_PROTOCOL](https://docs.python.org/3/library/pickle.html#data-stream-format)'
  id: totrans-683
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.to_pickle()`](../reference/api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle") 和 [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle") 增加了一个 `protocol` 参数 ([GH 16252](https://github.com/pandas-dev/pandas/issues/16252))。默认情况下，该参数设置为[HIGHEST_PROTOCOL](https://docs.python.org/3/library/pickle.html#data-stream-format)'
- en: '[`read_feather()`](../reference/api/pandas.read_feather.html#pandas.read_feather
    "pandas.read_feather") has gained the `nthreads` parameter for multi-threaded
    operations ([GH 16359](https://github.com/pandas-dev/pandas/issues/16359))'
  id: totrans-684
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_feather()`](../reference/api/pandas.read_feather.html#pandas.read_feather
    "pandas.read_feather") 增加了 `nthreads` 参数，用于多线程操作 ([GH 16359](https://github.com/pandas-dev/pandas/issues/16359))'
- en: '[`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip") and [`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip") have gained an `inplace` argument. ([GH 15388](https://github.com/pandas-dev/pandas/issues/15388))'
  id: totrans-685
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip") 和 [`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip") 增加了一个 `inplace` 参数。([GH 15388](https://github.com/pandas-dev/pandas/issues/15388))'
- en: '[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    has gained a `margins_name` parameter to define the name of the row / column that
    will contain the totals when `margins=True`. ([GH 15972](https://github.com/pandas-dev/pandas/issues/15972))'
  id: totrans-686
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    增加了一个 `margins_name` 参数，用于定义当 `margins=True` 时包含总计的行/列的名称。([GH 15972](https://github.com/pandas-dev/pandas/issues/15972))'
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    now accepts a `chunksize` parameter that can be used when `lines=True`. If `chunksize`
    is passed, read_json now returns an iterator which reads in `chunksize` lines
    with each iteration. ([GH 17048](https://github.com/pandas-dev/pandas/issues/17048))'
  id: totrans-687
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    现在接受一个 `chunksize` 参数，当 `lines=True` 时可用。如果传递了 `chunksize`，read_json 现在将返回一个迭代器，每次迭代读取
    `chunksize` 行。([GH 17048](https://github.com/pandas-dev/pandas/issues/17048))'
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    and [`to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") now accept a `compression` argument which allows them
    to transparently handle compressed files. ([GH 17798](https://github.com/pandas-dev/pandas/issues/17798))'
  id: totrans-688
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    和 [`to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") 现在接受一个 `compression` 参数，允许它们透明地处理压缩文件。 ([GH 17798](https://github.com/pandas-dev/pandas/issues/17798))'
- en: Various enhancements
  id: totrans-689
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 各种增强
- en: Improved the import time of pandas by about 2.25x. ([GH 16764](https://github.com/pandas-dev/pandas/issues/16764))
  id: totrans-690
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提高了 pandas 的导入时间约 2.25 倍。([GH 16764](https://github.com/pandas-dev/pandas/issues/16764))
- en: Support for [PEP 519 – Adding a file system path protocol](https://www.python.org/dev/peps/pep-0519/)
    on most readers (e.g. [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")) and writers (e.g. [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv")) ([GH 13823](https://github.com/pandas-dev/pandas/issues/13823)).
  id: totrans-691
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对大多数读取器（例如 [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")）和写入器（例如 [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv")）添加了对[PEP 519 – 添加文件系统路径协议](https://www.python.org/dev/peps/pep-0519/)的支持。
    ([GH 13823](https://github.com/pandas-dev/pandas/issues/13823)).
- en: Added a `__fspath__` method to `pd.HDFStore`, `pd.ExcelFile`, and `pd.ExcelWriter`
    to work properly with the file system path protocol ([GH 13823](https://github.com/pandas-dev/pandas/issues/13823)).
  id: totrans-692
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向 `pd.HDFStore`、`pd.ExcelFile` 和 `pd.ExcelWriter` 添加了一个 `__fspath__` 方法，以正确处理文件系统路径协议
    ([GH 13823](https://github.com/pandas-dev/pandas/issues/13823)).
- en: The `validate` argument for [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") now checks whether a merge is one-to-one, one-to-many, many-to-one,
    or many-to-many. If a merge is found to not be an example of specified merge type,
    an exception of type `MergeError` will be raised. For more, see [here](../user_guide/merging.html#merging-validation)
    ([GH 16270](https://github.com/pandas-dev/pandas/issues/16270))
  id: totrans-693
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    的 `validate` 参数现在检查合并是一对一、一对多、多对一还是多对多。如果发现合并不符合指定的合并类型，将引发 `MergeError` 类型的异常。更多信息，请参见[这里](../user_guide/merging.html#merging-validation)
    ([GH 16270](https://github.com/pandas-dev/pandas/issues/16270))'
- en: Added support for [PEP 518](https://www.python.org/dev/peps/pep-0518/) (`pyproject.toml`)
    to the build system ([GH 16745](https://github.com/pandas-dev/pandas/issues/16745))
  id: totrans-694
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增加对[PEP 518](https://www.python.org/dev/peps/pep-0518/) (`pyproject.toml`)的构建系统支持
    ([GH 16745](https://github.com/pandas-dev/pandas/issues/16745))
- en: '`RangeIndex.append()` now returns a `RangeIndex` object when possible ([GH
    16212](https://github.com/pandas-dev/pandas/issues/16212))'
  id: totrans-695
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RangeIndex.append()` 现在在可能的情况下返回一个 `RangeIndex` 对象 ([GH 16212](https://github.com/pandas-dev/pandas/issues/16212))'
- en: '[`Series.rename_axis()`](../reference/api/pandas.Series.rename_axis.html#pandas.Series.rename_axis
    "pandas.Series.rename_axis") and [`DataFrame.rename_axis()`](../reference/api/pandas.DataFrame.rename_axis.html#pandas.DataFrame.rename_axis
    "pandas.DataFrame.rename_axis") with `inplace=True` now return `None` while renaming
    the axis inplace. ([GH 15704](https://github.com/pandas-dev/pandas/issues/15704))'
  id: totrans-696
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.rename_axis()`](../reference/api/pandas.Series.rename_axis.html#pandas.Series.rename_axis
    "pandas.Series.rename_axis") 和 [`DataFrame.rename_axis()`](../reference/api/pandas.DataFrame.rename_axis.html#pandas.DataFrame.rename_axis
    "pandas.DataFrame.rename_axis") 在 `inplace=True` 的情况下，重命名轴时返回 `None`。([GH 15704](https://github.com/pandas-dev/pandas/issues/15704))'
- en: '[`api.types.infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") now infers decimals. ([GH 15690](https://github.com/pandas-dev/pandas/issues/15690))'
  id: totrans-697
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`api.types.infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") 现在推断小数。([GH 15690](https://github.com/pandas-dev/pandas/issues/15690))'
- en: '[`DataFrame.select_dtypes()`](../reference/api/pandas.DataFrame.select_dtypes.html#pandas.DataFrame.select_dtypes
    "pandas.DataFrame.select_dtypes") now accepts scalar values for include/exclude
    as well as list-like. ([GH 16855](https://github.com/pandas-dev/pandas/issues/16855))'
  id: totrans-698
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.select_dtypes()`](../reference/api/pandas.DataFrame.select_dtypes.html#pandas.DataFrame.select_dtypes
    "pandas.DataFrame.select_dtypes") 现在接受标量值作为包含/排除，以及类似列表的值。([GH 16855](https://github.com/pandas-dev/pandas/issues/16855))'
- en: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") now accepts ‘YS’ in addition to ‘AS’ as an alias for start
    of year. ([GH 9313](https://github.com/pandas-dev/pandas/issues/9313))'
  id: totrans-699
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") 现在接受‘YS’作为年初的别名，与‘AS’一起。([GH 9313](https://github.com/pandas-dev/pandas/issues/9313))'
- en: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") now accepts ‘Y’ in addition to ‘A’ as an alias for end of
    year. ([GH 9313](https://github.com/pandas-dev/pandas/issues/9313))'
  id: totrans-700
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") 现在接受‘Y’作为年末的别名，与‘A’一起。([GH 9313](https://github.com/pandas-dev/pandas/issues/9313))'
- en: '[`DataFrame.add_prefix()`](../reference/api/pandas.DataFrame.add_prefix.html#pandas.DataFrame.add_prefix
    "pandas.DataFrame.add_prefix") and [`DataFrame.add_suffix()`](../reference/api/pandas.DataFrame.add_suffix.html#pandas.DataFrame.add_suffix
    "pandas.DataFrame.add_suffix") now accept strings containing the ‘%’ character.
    ([GH 17151](https://github.com/pandas-dev/pandas/issues/17151))'
  id: totrans-701
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.add_prefix()`](../reference/api/pandas.DataFrame.add_prefix.html#pandas.DataFrame.add_prefix
    "pandas.DataFrame.add_prefix") 和 [`DataFrame.add_suffix()`](../reference/api/pandas.DataFrame.add_suffix.html#pandas.DataFrame.add_suffix
    "pandas.DataFrame.add_suffix") 现在接受包含‘%’字符的字符串。([GH 17151](https://github.com/pandas-dev/pandas/issues/17151))'
- en: Read/write methods that infer compression ([`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), [`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle"), and [`to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle")) can now infer from path-like objects, such as `pathlib.Path`.
    ([GH 17206](https://github.com/pandas-dev/pandas/issues/17206))
  id: totrans-702
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从路径样式对象（例如 `pathlib.Path`）推断压缩的读/写方法（[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), [`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle") 和 [`to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle")）现在可以推断压缩。([GH 17206](https://github.com/pandas-dev/pandas/issues/17206))
- en: '[`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    now recognizes much more of the most frequently used date (datetime) formats in
    SAS7BDAT files. ([GH 15871](https://github.com/pandas-dev/pandas/issues/15871))'
  id: totrans-703
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    现在可以识别 SAS7BDAT 文件中最常用的日期（时间）格式的更多内容。([GH 15871](https://github.com/pandas-dev/pandas/issues/15871))'
- en: '[`DataFrame.items()`](../reference/api/pandas.DataFrame.items.html#pandas.DataFrame.items
    "pandas.DataFrame.items") and [`Series.items()`](../reference/api/pandas.Series.items.html#pandas.Series.items
    "pandas.Series.items") are now present in both Python 2 and 3 and is lazy in all
    cases. ([GH 13918](https://github.com/pandas-dev/pandas/issues/13918), [GH 17213](https://github.com/pandas-dev/pandas/issues/17213))'
  id: totrans-704
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.items()`](../reference/api/pandas.DataFrame.items.html#pandas.DataFrame.items
    "pandas.DataFrame.items") 和 [`Series.items()`](../reference/api/pandas.Series.items.html#pandas.Series.items
    "pandas.Series.items") 现在在 Python 2 和 3 中都存在，并且在所有情况下都是惰性的。([GH 13918](https://github.com/pandas-dev/pandas/issues/13918),
    [GH 17213](https://github.com/pandas-dev/pandas/issues/17213))'
- en: '`pandas.io.formats.style.Styler.where()` has been implemented as a convenience
    for `pandas.io.formats.style.Styler.applymap()`. ([GH 17474](https://github.com/pandas-dev/pandas/issues/17474))'
  id: totrans-705
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas.io.formats.style.Styler.where()` 已实现为 `pandas.io.formats.style.Styler.applymap()`
    的一种便利。([GH 17474](https://github.com/pandas-dev/pandas/issues/17474))'
- en: '`MultiIndex.is_monotonic_decreasing()` has been implemented. Previously returned
    `False` in all cases. ([GH 16554](https://github.com/pandas-dev/pandas/issues/16554))'
  id: totrans-706
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MultiIndex.is_monotonic_decreasing()` 已实现。先前在所有情况下返回 `False`。([GH 16554](https://github.com/pandas-dev/pandas/issues/16554))'
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") raises `ImportError` with a better message if `xlrd` is not
    installed. ([GH 17613](https://github.com/pandas-dev/pandas/issues/17613))'
  id: totrans-707
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") 如果未安装 `xlrd`，将引发 `ImportError` 并显示更好的消息。([GH 17613](https://github.com/pandas-dev/pandas/issues/17613))'
- en: '[`DataFrame.assign()`](../reference/api/pandas.DataFrame.assign.html#pandas.DataFrame.assign
    "pandas.DataFrame.assign") will preserve the original order of `**kwargs` for
    Python 3.6+ users instead of sorting the column names. ([GH 14207](https://github.com/pandas-dev/pandas/issues/14207))'
  id: totrans-708
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.assign()`](../reference/api/pandas.DataFrame.assign.html#pandas.DataFrame.assign
    "pandas.DataFrame.assign") 将保留 Python 3.6+ 用户的 `**kwargs` 的原始顺序，而不是对列名进行排序。([GH
    14207](https://github.com/pandas-dev/pandas/issues/14207))'
- en: '[`Series.reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex"), [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex"), [`Index.get_indexer()`](../reference/api/pandas.Index.get_indexer.html#pandas.Index.get_indexer
    "pandas.Index.get_indexer") now support list-like argument for `tolerance`. ([GH
    17367](https://github.com/pandas-dev/pandas/issues/17367))  ### Integration with
    Apache Parquet file format'
  id: totrans-709
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex"), [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex"), [`Index.get_indexer()`](../reference/api/pandas.Index.get_indexer.html#pandas.Index.get_indexer
    "pandas.Index.get_indexer") 现在支持 `tolerance` 的类似列表的参数。([GH 17367](https://github.com/pandas-dev/pandas/issues/17367))  ###
    与 Apache Parquet 文件格式的集成'
- en: Integration with [Apache Parquet](https://parquet.apache.org/), including a
    new top-level [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") and [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") method, see [here](../user_guide/io.html#io-parquet)
    ([GH 15838](https://github.com/pandas-dev/pandas/issues/15838), [GH 17438](https://github.com/pandas-dev/pandas/issues/17438)).
  id: totrans-710
  prefs: []
  type: TYPE_NORMAL
  zh: 与[Apache Parquet](https://parquet.apache.org/)集成，包括一个新的顶级[`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet")和[`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet")方法，见[这里](../user_guide/io.html#io-parquet)（[GH 15838](https://github.com/pandas-dev/pandas/issues/15838)，[GH
    17438](https://github.com/pandas-dev/pandas/issues/17438))。
- en: '[Apache Parquet](https://parquet.apache.org/) provides a cross-language, binary
    file format for reading and writing data frames efficiently. Parquet is designed
    to faithfully serialize and de-serialize `DataFrame` s, supporting all of the
    pandas dtypes, including extension dtypes such as datetime with timezones.'
  id: totrans-711
  prefs: []
  type: TYPE_NORMAL
  zh: '[Apache Parquet](https://parquet.apache.org/)提供了一个跨语言的二进制文件格式，用于高效读写数据框。Parquet旨在忠实地序列化和反序列化`DataFrame`，支持所有pandas
    dtypes，包括带时区的datetime等扩展dtypes。'
- en: This functionality depends on either the [pyarrow](http://arrow.apache.org/docs/python/)
    or [fastparquet](https://fastparquet.readthedocs.io/en/latest/) library. For more
    details, see [the IO docs on Parquet](../user_guide/io.html#io-parquet).
  id: totrans-712
  prefs: []
  type: TYPE_NORMAL
  zh: 此功能取决于[pyarrow](http://arrow.apache.org/docs/python/)或[fastparquet](https://fastparquet.readthedocs.io/en/latest/)库。有关更多详情，请参阅[Parquet上的IO文档](../user_guide/io.html#io-parquet)。
- en: '### Method `infer_objects` type conversion'
  id: totrans-713
  prefs: []
  type: TYPE_NORMAL
  zh: '### 方法`infer_objects`类型转换'
- en: The [`DataFrame.infer_objects()`](../reference/api/pandas.DataFrame.infer_objects.html#pandas.DataFrame.infer_objects
    "pandas.DataFrame.infer_objects") and [`Series.infer_objects()`](../reference/api/pandas.Series.infer_objects.html#pandas.Series.infer_objects
    "pandas.Series.infer_objects") methods have been added to perform dtype inference
    on object columns, replacing some of the functionality of the deprecated `convert_objects`
    method. See the documentation [here](../user_guide/basics.html#basics-object-conversion)
    for more details. ([GH 11221](https://github.com/pandas-dev/pandas/issues/11221))
  id: totrans-714
  prefs: []
  type: TYPE_NORMAL
  zh: 已添加[`DataFrame.infer_objects()`](../reference/api/pandas.DataFrame.infer_objects.html#pandas.DataFrame.infer_objects
    "pandas.DataFrame.infer_objects")和[`Series.infer_objects()`](../reference/api/pandas.Series.infer_objects.html#pandas.Series.infer_objects
    "pandas.Series.infer_objects")方法，在对象列上执行dtype推断，取代了已弃用的`convert_objects`方法的部分功能。有关更多详情，请参阅[这里的文档](../user_guide/basics.html#basics-object-conversion)（[GH
    11221](https://github.com/pandas-dev/pandas/issues/11221)）。
- en: 'This method only performs soft conversions on object columns, converting Python
    objects to native types, but not any coercive conversions. For example:'
  id: totrans-715
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法仅对对象列执行软转换，将Python对象转换为本机类型，而不进行任何强制转换。例如：
- en: '[PRE80]'
  id: totrans-716
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Note that column `'C'` was not converted - only scalar numeric types will be
    converted to a new type. Other types of conversion should be accomplished using
    the [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") function (or [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime"), [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta")).
  id: totrans-717
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，列`'C'`未被转换 - 只有标量数值类型将被转换为新类型。其他类型的转换应使用[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric")函数（或[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime")、[`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta")）来完成。
- en: '[PRE81]'
  id: totrans-718
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '### Improved warnings when attempting to create columns'
  id: totrans-719
  prefs: []
  type: TYPE_NORMAL
  zh: '### 尝试创建列时改进的警告'
- en: 'New users are often puzzled by the relationship between column operations and
    attribute access on `DataFrame` instances ([GH 7175](https://github.com/pandas-dev/pandas/issues/7175)).
    One specific instance of this confusion is attempting to create a new column by
    setting an attribute on the `DataFrame`:'
  id: totrans-720
  prefs: []
  type: TYPE_NORMAL
  zh: 新用户经常对`DataFrame`实例上的列操作和属性访问之间的关系感到困惑（[GH 7175](https://github.com/pandas-dev/pandas/issues/7175)）。此混淆的一个具体实例是尝试通过设置`DataFrame`上的属性来创建新列：
- en: '[PRE82]'
  id: totrans-721
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'This does not raise any obvious exceptions, but also does not create a new
    column:'
  id: totrans-722
  prefs: []
  type: TYPE_NORMAL
  zh: 这不会引发任何明显的异常，但也不会创建新列：
- en: '[PRE83]'
  id: totrans-723
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: Setting a list-like data structure into a new attribute now raises a `UserWarning`
    about the potential for unexpected behavior. See [Attribute Access](../user_guide/indexing.html#indexing-attribute-access).
  id: totrans-724
  prefs: []
  type: TYPE_NORMAL
  zh: 将类似于列表的数据结构设置为新属性现在会引发一个`UserWarning`，指出可能会出现意外行为。请参阅[Attribute Access](../user_guide/indexing.html#indexing-attribute-access)。
- en: '### Method `drop` now also accepts index/columns keywords'
  id: totrans-725
  prefs: []
  type: TYPE_NORMAL
  zh: '### 方法 `drop` 现在也接受 index/columns 关键字'
- en: The [`drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") method has gained `index`/`columns` keywords as an alternative
    to specifying the `axis`. This is similar to the behavior of `reindex` ([GH 12392](https://github.com/pandas-dev/pandas/issues/12392)).
  id: totrans-726
  prefs: []
  type: TYPE_NORMAL
  zh: '[`drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") 方法现在可以使用 `index`/`columns` 关键字作为指定 `axis` 的替代方法。这类似于
    `reindex` 的行为（[GH 12392](https://github.com/pandas-dev/pandas/issues/12392)）。'
- en: 'For example:'
  id: totrans-727
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE84]'
  id: totrans-728
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: '### Methods `rename`, `reindex` now also accept axis keyword'
  id: totrans-729
  prefs: []
  type: TYPE_NORMAL
  zh: '### 方法 `rename`、`reindex` 现在也接受 axis 关键字'
- en: The [`DataFrame.rename()`](../reference/api/pandas.DataFrame.rename.html#pandas.DataFrame.rename
    "pandas.DataFrame.rename") and [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") methods have gained the `axis` keyword to specify
    the axis to target with the operation ([GH 12392](https://github.com/pandas-dev/pandas/issues/12392)).
  id: totrans-730
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.rename()`](../reference/api/pandas.DataFrame.rename.html#pandas.DataFrame.rename
    "pandas.DataFrame.rename") 和 [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") 方法现在增加了 `axis` 关键字来指定操作的轴（[GH 12392](https://github.com/pandas-dev/pandas/issues/12392)）。'
- en: 'Here’s `rename`:'
  id: totrans-731
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 `rename`：
- en: '[PRE85]'
  id: totrans-732
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: 'And `reindex`:'
  id: totrans-733
  prefs: []
  type: TYPE_NORMAL
  zh: 还有 `reindex`：
- en: '[PRE86]'
  id: totrans-734
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: The “index, columns” style continues to work as before.
  id: totrans-735
  prefs: []
  type: TYPE_NORMAL
  zh: “index, columns” 风格的方式仍然像以前一样有效。
- en: '[PRE87]'
  id: totrans-736
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: We *highly* encourage using named arguments to avoid confusion when using either
    style.
  id: totrans-737
  prefs: []
  type: TYPE_NORMAL
  zh: 我们*强烈*建议使用命名参数以避免在使用任一风格时产生混淆。
- en: '### `CategoricalDtype` for specifying categoricals'
  id: totrans-738
  prefs: []
  type: TYPE_NORMAL
  zh: '### 用于指定分类的 `CategoricalDtype`'
- en: '`pandas.api.types.CategoricalDtype` has been added to the public API and expanded
    to include the `categories` and `ordered` attributes. A `CategoricalDtype` can
    be used to specify the set of categories and orderedness of an array, independent
    of the data. This can be useful for example, when converting string data to a
    `Categorical` ([GH 14711](https://github.com/pandas-dev/pandas/issues/14711),
    [GH 15078](https://github.com/pandas-dev/pandas/issues/15078), [GH 16015](https://github.com/pandas-dev/pandas/issues/16015),
    [GH 17643](https://github.com/pandas-dev/pandas/issues/17643)):'
  id: totrans-739
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas.api.types.CategoricalDtype` 已添加到公共 API，并扩展以包括 `categories` 和 `ordered`
    属性。`CategoricalDtype` 可以用于指定数组的类别集和排序，独立于数据。例如，在将字符串数据转换为 `Categorical` 时这可能会很有用（[GH
    14711](https://github.com/pandas-dev/pandas/issues/14711)，[GH 15078](https://github.com/pandas-dev/pandas/issues/15078)，[GH
    16015](https://github.com/pandas-dev/pandas/issues/16015)，[GH 17643](https://github.com/pandas-dev/pandas/issues/17643)）：'
- en: '[PRE88]'
  id: totrans-740
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: 'One place that deserves special mention is in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"). Previously, with `dtype={''col'': ''category''}`, the returned
    values and categories would always be strings.'
  id: totrans-741
  prefs: []
  type: TYPE_NORMAL
  zh: '有一个特别需要提及的地方是在 [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") 中。以前，使用 `dtype={''col'': ''category''}`，返回的值和类别总是字符串。'
- en: '[PRE89]'
  id: totrans-742
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: Notice the “object” dtype.
  id: totrans-743
  prefs: []
  type: TYPE_NORMAL
  zh: 注意“object” dtype。
- en: With a `CategoricalDtype` of all numerics, datetimes, or timedeltas, we can
    automatically convert to the correct type
  id: totrans-744
  prefs: []
  type: TYPE_NORMAL
  zh: 有了包含所有数字、日期时间或时间差的 `CategoricalDtype`，我们可以自动转换为正确的类型
- en: '[PRE90]'
  id: totrans-745
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: The values have been correctly interpreted as integers.
  id: totrans-746
  prefs: []
  type: TYPE_NORMAL
  zh: 值已经被正确解释为整数。
- en: The `.dtype` property of a `Categorical`, `CategoricalIndex` or a `Series` with
    categorical type will now return an instance of `CategoricalDtype`. While the
    repr has changed, `str(CategoricalDtype())` is still the string `'category'`.
    We’ll take this moment to remind users that the *preferred* way to detect categorical
    data is to use [`pandas.api.types.is_categorical_dtype()`](../reference/api/pandas.api.types.is_categorical_dtype.html#pandas.api.types.is_categorical_dtype
    "pandas.api.types.is_categorical_dtype"), and not `str(dtype) == 'category'`.
  id: totrans-747
  prefs: []
  type: TYPE_NORMAL
  zh: '`Categorical`、`CategoricalIndex` 或具有分类类型的 `Series` 的 `.dtype` 属性现在将返回 `CategoricalDtype`
    的实例。虽然 repr 已更改，但 `str(CategoricalDtype())` 仍然是字符串 `''category''`。我们在此提醒用户，检测分类数据的*首选*方式是使用
    [`pandas.api.types.is_categorical_dtype()`](../reference/api/pandas.api.types.is_categorical_dtype.html#pandas.api.types.is_categorical_dtype
    "pandas.api.types.is_categorical_dtype")，而不是 `str(dtype) == ''category''`。'
- en: See the [CategoricalDtype docs](../user_guide/categorical.html#categorical-categoricaldtype)
    for more.
  id: totrans-748
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息请参阅 [CategoricalDtype 文档](../user_guide/categorical.html#categorical-categoricaldtype)。
- en: '### `GroupBy` objects now have a `pipe` method'
  id: totrans-749
  prefs: []
  type: TYPE_NORMAL
  zh: '### `GroupBy` 对象现在具有 `pipe` 方法'
- en: '`GroupBy` objects now have a `pipe` method, similar to the one on `DataFrame`
    and `Series`, that allow for functions that take a `GroupBy` to be composed in
    a clean, readable syntax. ([GH 17871](https://github.com/pandas-dev/pandas/issues/17871))'
  id: totrans-750
  prefs: []
  type: TYPE_NORMAL
  zh: 现在 `GroupBy` 对象也具有 `pipe` 方法，类似于 `DataFrame` 和 `Series` 上的方法，可以以清晰、可读的语法组合接受
    `GroupBy` 的函数。([GH 17871](https://github.com/pandas-dev/pandas/issues/17871))
- en: For a concrete example on combining `.groupby` and `.pipe` , imagine having
    a DataFrame with columns for stores, products, revenue and sold quantity. We’d
    like to do a groupwise calculation of *prices* (i.e. revenue/quantity) per store
    and per product. We could do this in a multi-step operation, but expressing it
    in terms of piping can make the code more readable.
  id: totrans-751
  prefs: []
  type: TYPE_NORMAL
  zh: 一个结合了 `.groupby` 和 `.pipe` 的具体例子是，想象有一个包含了店铺、产品、收入和销售数量列的 DataFrame。我们想要对每个店铺和每个产品进行组内价格计算（即收入/数量）。我们可以通过多步操作来实现这一点，但是用管道的方式表达可以使代码更具可读性。
- en: 'First we set the data:'
  id: totrans-752
  prefs: []
  type: TYPE_NORMAL
  zh: 首先我们设置了数据：
- en: '[PRE91]'
  id: totrans-753
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: 'Now, to find prices per store/product, we can simply do:'
  id: totrans-754
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，要找到每个店铺/产品的价格，我们可以简单地执行：
- en: '[PRE92]'
  id: totrans-755
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: See the [documentation](../user_guide/groupby.html#groupby-pipe) for more.
  id: totrans-756
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅[文档](../user_guide/groupby.html#groupby-pipe)。
- en: '### `Categorical.rename_categories` accepts a dict-like'
  id: totrans-757
  prefs: []
  type: TYPE_NORMAL
  zh: '### `Categorical.rename_categories` 接受类似于字典的参数'
- en: '[`rename_categories()`](../reference/api/pandas.Series.cat.rename_categories.html#pandas.Series.cat.rename_categories
    "pandas.Series.cat.rename_categories") now accepts a dict-like argument for `new_categories`.
    The previous categories are looked up in the dictionary’s keys and replaced if
    found. The behavior of missing and extra keys is the same as in [`DataFrame.rename()`](../reference/api/pandas.DataFrame.rename.html#pandas.DataFrame.rename
    "pandas.DataFrame.rename").'
  id: totrans-758
  prefs: []
  type: TYPE_NORMAL
  zh: '[`rename_categories()`](../reference/api/pandas.Series.cat.rename_categories.html#pandas.Series.cat.rename_categories
    "pandas.Series.cat.rename_categories") 现在接受类似于字典的参数作为 `new_categories`。之前的类别将在字典的键中查找并进行替换。与
    [`DataFrame.rename()`](../reference/api/pandas.DataFrame.rename.html#pandas.DataFrame.rename
    "pandas.DataFrame.rename") 中的行为相同，缺失和额外的键的行为也相同。'
- en: '[PRE93]'
  id: totrans-759
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: Warning
  id: totrans-760
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: To assist with upgrading pandas, `rename_categories` treats `Series` as list-like.
    Typically, Series are considered to be dict-like (e.g. in `.rename`, `.map`).
    In a future version of pandas `rename_categories` will change to treat them as
    dict-like. Follow the warning message’s recommendations for writing future-proof
    code.
  id: totrans-761
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助升级 pandas，`rename_categories` 现在将 `Series` 视为类似于列表的对象。通常，Series 被认为类似于字典（例如，在
    `.rename`，`.map` 中）。在 pandas 的将来版本中，`rename_categories` 将更改为将其视为类似于字典的对象。请遵循警告消息中的建议编写具有未来兼容性的代码。
- en: '[PRE94]'
  id: totrans-762
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: '### Other enhancements'
  id: totrans-763
  prefs: []
  type: TYPE_NORMAL
  zh: '### 其他增强'
- en: New functions or methods
  id: totrans-764
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 新增的函数或方法
- en: '[`Resampler.nearest()`](../reference/api/pandas.core.resample.Resampler.nearest.html#pandas.core.resample.Resampler.nearest
    "pandas.core.resample.Resampler.nearest") is added to support nearest-neighbor
    upsampling ([GH 17496](https://github.com/pandas-dev/pandas/issues/17496)).'
  id: totrans-765
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Resampler.nearest()`](../reference/api/pandas.core.resample.Resampler.nearest.html#pandas.core.resample.Resampler.nearest
    "pandas.core.resample.Resampler.nearest") 现在支持最近邻上采样（[GH 17496](https://github.com/pandas-dev/pandas/issues/17496)）。'
- en: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") has
    added support for a `to_frame` method ([GH 15230](https://github.com/pandas-dev/pandas/issues/15230)).'
  id: totrans-766
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") 已添加了对
    `to_frame` 方法的支持（[GH 15230](https://github.com/pandas-dev/pandas/issues/15230)）。'
- en: New keywords
  id: totrans-767
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 新增的关键字
- en: Added a `skipna` parameter to [`infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") to support type inference in the presence of missing
    values ([GH 17059](https://github.com/pandas-dev/pandas/issues/17059)).
  id: totrans-768
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 [`infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") 中添加了一个 `skipna` 参数，以支持在存在缺失值时进行类型推断（[GH 17059](https://github.com/pandas-dev/pandas/issues/17059)）。
- en: '[`Series.to_dict()`](../reference/api/pandas.Series.to_dict.html#pandas.Series.to_dict
    "pandas.Series.to_dict") and [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") now support an `into` keyword which allows you to
    specify the `collections.Mapping` subclass that you would like returned. The default
    is `dict`, which is backwards compatible. ([GH 16122](https://github.com/pandas-dev/pandas/issues/16122))'
  id: totrans-769
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.to_dict()`](../reference/api/pandas.Series.to_dict.html#pandas.Series.to_dict
    "pandas.Series.to_dict") 和 [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") 现在支持 `into` 关键字，允许您指定要返回的 `collections.Mapping` 子类。默认为
    `dict`，向后兼容。([GH 16122](https://github.com/pandas-dev/pandas/issues/16122))'
- en: '[`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") and [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") now support the `inplace` parameter. ([GH 14636](https://github.com/pandas-dev/pandas/issues/14636))'
  id: totrans-770
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis")和[`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis")现在支持`inplace`参数（[GH 14636](https://github.com/pandas-dev/pandas/issues/14636)）。'
- en: '[`Series.to_pickle()`](../reference/api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle") and [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle") have gained a `protocol` parameter ([GH 16252](https://github.com/pandas-dev/pandas/issues/16252)).
    By default, this parameter is set to [HIGHEST_PROTOCOL](https://docs.python.org/3/library/pickle.html#data-stream-format)'
  id: totrans-771
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.to_pickle()`](../reference/api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle")和[`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle")现在增加了一个`protocol`参数（[GH 16252](https://github.com/pandas-dev/pandas/issues/16252)）。默认情况下，此参数设置为[HIGHEST_PROTOCOL](https://docs.python.org/3/library/pickle.html#data-stream-format)。'
- en: '[`read_feather()`](../reference/api/pandas.read_feather.html#pandas.read_feather
    "pandas.read_feather") has gained the `nthreads` parameter for multi-threaded
    operations ([GH 16359](https://github.com/pandas-dev/pandas/issues/16359))'
  id: totrans-772
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_feather()`](../reference/api/pandas.read_feather.html#pandas.read_feather
    "pandas.read_feather")增加了`nthreads`参数用于多线程操作（[GH 16359](https://github.com/pandas-dev/pandas/issues/16359)）。'
- en: '[`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip") and [`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip") have gained an `inplace` argument. ([GH 15388](https://github.com/pandas-dev/pandas/issues/15388))'
  id: totrans-773
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip")和[`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip")现在增加了一个`inplace`参数（[GH 15388](https://github.com/pandas-dev/pandas/issues/15388)）。'
- en: '[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    has gained a `margins_name` parameter to define the name of the row / column that
    will contain the totals when `margins=True`. ([GH 15972](https://github.com/pandas-dev/pandas/issues/15972))'
  id: totrans-774
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")现在增加了一个`margins_name`参数，用于在`margins=True`时定义包含总计的行/列的名称（[GH
    15972](https://github.com/pandas-dev/pandas/issues/15972)）。'
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    now accepts a `chunksize` parameter that can be used when `lines=True`. If `chunksize`
    is passed, read_json now returns an iterator which reads in `chunksize` lines
    with each iteration. ([GH 17048](https://github.com/pandas-dev/pandas/issues/17048))'
  id: totrans-775
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")现在接受一个`chunksize`参数，当`lines=True`时可以使用。如果传递了`chunksize`，read_json现在返回一个迭代器，每次迭代读取`chunksize`行。（[GH
    17048](https://github.com/pandas-dev/pandas/issues/17048)）。'
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    and [`to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") now accept a `compression` argument which allows them
    to transparently handle compressed files. ([GH 17798](https://github.com/pandas-dev/pandas/issues/17798))'
  id: totrans-776
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")和[`to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json")现在接受一个`compression`参数，允许它们透明地处理压缩文件（[GH 17798](https://github.com/pandas-dev/pandas/issues/17798)）。'
- en: Various enhancements
  id: totrans-777
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 各种增强功能。
- en: Improved the import time of pandas by about 2.25x. ([GH 16764](https://github.com/pandas-dev/pandas/issues/16764))
  id: totrans-778
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将pandas的导入时间提高了约2.25倍（[GH 16764](https://github.com/pandas-dev/pandas/issues/16764)）。
- en: Support for [PEP 519 – Adding a file system path protocol](https://www.python.org/dev/peps/pep-0519/)
    on most readers (e.g. [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")) and writers (e.g. [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv")) ([GH 13823](https://github.com/pandas-dev/pandas/issues/13823)).
  id: totrans-779
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持[PEP 519 – 添加文件系统路径协议](https://www.python.org/dev/peps/pep-0519/)的大多数读取器（例如[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"））和写入器（例如[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv"））（[GH 13823](https://github.com/pandas-dev/pandas/issues/13823)）。
- en: Added a `__fspath__` method to `pd.HDFStore`, `pd.ExcelFile`, and `pd.ExcelWriter`
    to work properly with the file system path protocol ([GH 13823](https://github.com/pandas-dev/pandas/issues/13823)).
  id: totrans-780
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了 `pd.HDFStore`，`pd.ExcelFile` 和 `pd.ExcelWriter` 的 `__fspath__` 方法，以便与文件系统路径协议正常工作
    ([GH 13823](https://github.com/pandas-dev/pandas/issues/13823)).
- en: The `validate` argument for [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") now checks whether a merge is one-to-one, one-to-many, many-to-one,
    or many-to-many. If a merge is found to not be an example of specified merge type,
    an exception of type `MergeError` will be raised. For more, see [here](../user_guide/merging.html#merging-validation)
    ([GH 16270](https://github.com/pandas-dev/pandas/issues/16270))
  id: totrans-781
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    的 `validate` 参数现在检查合并是一对一、一对多、多对一还是多对多。如果发现合并不是指定的合并类型的示例，则会引发 `MergeError` 类型的异常。详情请参阅[这里](../user_guide/merging.html#merging-validation)
    ([GH 16270](https://github.com/pandas-dev/pandas/issues/16270))'
- en: Added support for [PEP 518](https://www.python.org/dev/peps/pep-0518/) (`pyproject.toml`)
    to the build system ([GH 16745](https://github.com/pandas-dev/pandas/issues/16745))
  id: totrans-782
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为[PEP 518](https://www.python.org/dev/peps/pep-0518/) (`pyproject.toml`)添加了构建系统的支持
    ([GH 16745](https://github.com/pandas-dev/pandas/issues/16745))
- en: '`RangeIndex.append()` now returns a `RangeIndex` object when possible ([GH
    16212](https://github.com/pandas-dev/pandas/issues/16212))'
  id: totrans-783
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RangeIndex.append()` 现在在可能时返回 `RangeIndex` 对象 ([GH 16212](https://github.com/pandas-dev/pandas/issues/16212))'
- en: '[`Series.rename_axis()`](../reference/api/pandas.Series.rename_axis.html#pandas.Series.rename_axis
    "pandas.Series.rename_axis") and [`DataFrame.rename_axis()`](../reference/api/pandas.DataFrame.rename_axis.html#pandas.DataFrame.rename_axis
    "pandas.DataFrame.rename_axis") with `inplace=True` now return `None` while renaming
    the axis inplace. ([GH 15704](https://github.com/pandas-dev/pandas/issues/15704))'
  id: totrans-784
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.rename_axis()`](../reference/api/pandas.Series.rename_axis.html#pandas.Series.rename_axis
    "pandas.Series.rename_axis") 和 [`DataFrame.rename_axis()`](../reference/api/pandas.DataFrame.rename_axis.html#pandas.DataFrame.rename_axis
    "pandas.DataFrame.rename_axis") 使用 `inplace=True` 时，现在在原地重命名轴时返回 `None`。 ([GH
    15704](https://github.com/pandas-dev/pandas/issues/15704))'
- en: '[`api.types.infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") now infers decimals. ([GH 15690](https://github.com/pandas-dev/pandas/issues/15690))'
  id: totrans-785
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`api.types.infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") 现在推断十进制。 ([GH 15690](https://github.com/pandas-dev/pandas/issues/15690))'
- en: '[`DataFrame.select_dtypes()`](../reference/api/pandas.DataFrame.select_dtypes.html#pandas.DataFrame.select_dtypes
    "pandas.DataFrame.select_dtypes") now accepts scalar values for include/exclude
    as well as list-like. ([GH 16855](https://github.com/pandas-dev/pandas/issues/16855))'
  id: totrans-786
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.select_dtypes()`](../reference/api/pandas.DataFrame.select_dtypes.html#pandas.DataFrame.select_dtypes
    "pandas.DataFrame.select_dtypes") 现在接受标量值作为 include/exclude，也可以是类似列表的对象。 ([GH
    16855](https://github.com/pandas-dev/pandas/issues/16855))'
- en: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") now accepts ‘YS’ in addition to ‘AS’ as an alias for start
    of year. ([GH 9313](https://github.com/pandas-dev/pandas/issues/9313))'
  id: totrans-787
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") 现在除了‘AS’之外还接受‘YS’作为年初的别名。 ([GH 9313](https://github.com/pandas-dev/pandas/issues/9313))'
- en: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") now accepts ‘Y’ in addition to ‘A’ as an alias for end of
    year. ([GH 9313](https://github.com/pandas-dev/pandas/issues/9313))'
  id: totrans-788
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") 现在除了‘A’之外还接受‘Y’作为年末的别名。 ([GH 9313](https://github.com/pandas-dev/pandas/issues/9313))'
- en: '[`DataFrame.add_prefix()`](../reference/api/pandas.DataFrame.add_prefix.html#pandas.DataFrame.add_prefix
    "pandas.DataFrame.add_prefix") and [`DataFrame.add_suffix()`](../reference/api/pandas.DataFrame.add_suffix.html#pandas.DataFrame.add_suffix
    "pandas.DataFrame.add_suffix") now accept strings containing the ‘%’ character.
    ([GH 17151](https://github.com/pandas-dev/pandas/issues/17151))'
  id: totrans-789
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.add_prefix()`](../reference/api/pandas.DataFrame.add_prefix.html#pandas.DataFrame.add_prefix
    "pandas.DataFrame.add_prefix") 和 [`DataFrame.add_suffix()`](../reference/api/pandas.DataFrame.add_suffix.html#pandas.DataFrame.add_suffix
    "pandas.DataFrame.add_suffix") 现在接受包含‘%’字符的字符串。 ([GH 17151](https://github.com/pandas-dev/pandas/issues/17151))'
- en: Read/write methods that infer compression ([`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), [`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle"), and [`to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle")) can now infer from path-like objects, such as `pathlib.Path`.
    ([GH 17206](https://github.com/pandas-dev/pandas/issues/17206))
  id: totrans-790
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以从路径类对象（如`pathlib.Path`）推断压缩的读/写方法([`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), [`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle"), 和 [`to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle"))。([GH 17206](https://github.com/pandas-dev/pandas/issues/17206))
- en: '[`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    now recognizes much more of the most frequently used date (datetime) formats in
    SAS7BDAT files. ([GH 15871](https://github.com/pandas-dev/pandas/issues/15871))'
  id: totrans-791
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")现在可以识别SAS7BDAT文件中最常用的日期（时间）格式。([GH
    15871](https://github.com/pandas-dev/pandas/issues/15871))'
- en: '[`DataFrame.items()`](../reference/api/pandas.DataFrame.items.html#pandas.DataFrame.items
    "pandas.DataFrame.items") and [`Series.items()`](../reference/api/pandas.Series.items.html#pandas.Series.items
    "pandas.Series.items") are now present in both Python 2 and 3 and is lazy in all
    cases. ([GH 13918](https://github.com/pandas-dev/pandas/issues/13918), [GH 17213](https://github.com/pandas-dev/pandas/issues/17213))'
  id: totrans-792
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.items()`](../reference/api/pandas.DataFrame.items.html#pandas.DataFrame.items
    "pandas.DataFrame.items")和[`Series.items()`](../reference/api/pandas.Series.items.html#pandas.Series.items
    "pandas.Series.items")现在在Python 2和3中都存在，并且在所有情况下都是惰性的。([GH 13918](https://github.com/pandas-dev/pandas/issues/13918),
    [GH 17213](https://github.com/pandas-dev/pandas/issues/17213))'
- en: '`pandas.io.formats.style.Styler.where()` has been implemented as a convenience
    for `pandas.io.formats.style.Styler.applymap()`. ([GH 17474](https://github.com/pandas-dev/pandas/issues/17474))'
  id: totrans-793
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas.io.formats.style.Styler.where()`已实现为`pandas.io.formats.style.Styler.applymap()`的便利方法。([GH
    17474](https://github.com/pandas-dev/pandas/issues/17474))'
- en: '`MultiIndex.is_monotonic_decreasing()` has been implemented. Previously returned
    `False` in all cases. ([GH 16554](https://github.com/pandas-dev/pandas/issues/16554))'
  id: totrans-794
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MultiIndex.is_monotonic_decreasing()`已实现。以前在所有情况下返回`False`。([GH 16554](https://github.com/pandas-dev/pandas/issues/16554))'
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") raises `ImportError` with a better message if `xlrd` is not
    installed. ([GH 17613](https://github.com/pandas-dev/pandas/issues/17613))'
  id: totrans-795
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果未安装`xlrd`，[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel")将引发`ImportError`并提供更好的消息。([GH 17613](https://github.com/pandas-dev/pandas/issues/17613))
- en: '[`DataFrame.assign()`](../reference/api/pandas.DataFrame.assign.html#pandas.DataFrame.assign
    "pandas.DataFrame.assign") will preserve the original order of `**kwargs` for
    Python 3.6+ users instead of sorting the column names. ([GH 14207](https://github.com/pandas-dev/pandas/issues/14207))'
  id: totrans-796
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.assign()`](../reference/api/pandas.DataFrame.assign.html#pandas.DataFrame.assign
    "pandas.DataFrame.assign")将保留`**kwargs`的原始顺序，而不是对列名进行排序，适用于Python 3.6+用户。([GH
    14207](https://github.com/pandas-dev/pandas/issues/14207))'
- en: '[`Series.reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex"), [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex"), [`Index.get_indexer()`](../reference/api/pandas.Index.get_indexer.html#pandas.Index.get_indexer
    "pandas.Index.get_indexer") now support list-like argument for `tolerance`. ([GH
    17367](https://github.com/pandas-dev/pandas/issues/17367))'
  id: totrans-797
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex"), [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex"), [`Index.get_indexer()`](../reference/api/pandas.Index.get_indexer.html#pandas.Index.get_indexer
    "pandas.Index.get_indexer")现在支持`tolerance`的类似列表参数。([GH 17367](https://github.com/pandas-dev/pandas/issues/17367))'
- en: New functions or methods
  id: totrans-798
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 新函数或方法
- en: '[`Resampler.nearest()`](../reference/api/pandas.core.resample.Resampler.nearest.html#pandas.core.resample.Resampler.nearest
    "pandas.core.resample.Resampler.nearest") is added to support nearest-neighbor
    upsampling ([GH 17496](https://github.com/pandas-dev/pandas/issues/17496)).'
  id: totrans-799
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Resampler.nearest()`](../reference/api/pandas.core.resample.Resampler.nearest.html#pandas.core.resample.Resampler.nearest
    "pandas.core.resample.Resampler.nearest")被添加以支持最近邻上采样。([GH 17496](https://github.com/pandas-dev/pandas/issues/17496))'
- en: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") has
    added support for a `to_frame` method ([GH 15230](https://github.com/pandas-dev/pandas/issues/15230)).'
  id: totrans-800
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") 现在支持
    `to_frame` 方法 ([GH 15230](https://github.com/pandas-dev/pandas/issues/15230)).'
- en: New keywords
  id: totrans-801
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 新的关键字
- en: Added a `skipna` parameter to [`infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") to support type inference in the presence of missing
    values ([GH 17059](https://github.com/pandas-dev/pandas/issues/17059)).
  id: totrans-802
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 [`infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") 中添加了一个 `skipna` 参数，以支持在存在缺失值时进行类型推断 ([GH 17059](https://github.com/pandas-dev/pandas/issues/17059)).
- en: '[`Series.to_dict()`](../reference/api/pandas.Series.to_dict.html#pandas.Series.to_dict
    "pandas.Series.to_dict") and [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") now support an `into` keyword which allows you to
    specify the `collections.Mapping` subclass that you would like returned. The default
    is `dict`, which is backwards compatible. ([GH 16122](https://github.com/pandas-dev/pandas/issues/16122))'
  id: totrans-803
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.to_dict()`](../reference/api/pandas.Series.to_dict.html#pandas.Series.to_dict
    "pandas.Series.to_dict") 和 [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") 现在支持一个 `into` 关键字，允许您指定要返回的 `collections.Mapping`
    子类。默认为 `dict`，与向后兼容。([GH 16122](https://github.com/pandas-dev/pandas/issues/16122))'
- en: '[`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") and [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") now support the `inplace` parameter. ([GH 14636](https://github.com/pandas-dev/pandas/issues/14636))'
  id: totrans-804
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") 和 [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") 现在支持 `inplace` 参数。([GH 14636](https://github.com/pandas-dev/pandas/issues/14636))'
- en: '[`Series.to_pickle()`](../reference/api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle") and [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle") have gained a `protocol` parameter ([GH 16252](https://github.com/pandas-dev/pandas/issues/16252)).
    By default, this parameter is set to [HIGHEST_PROTOCOL](https://docs.python.org/3/library/pickle.html#data-stream-format)'
  id: totrans-805
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.to_pickle()`](../reference/api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle") 和 [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle") 增加了一个 `protocol` 参数 ([GH 16252](https://github.com/pandas-dev/pandas/issues/16252))。默认情况下，此参数设置为
    [HIGHEST_PROTOCOL](https://docs.python.org/3/library/pickle.html#data-stream-format)'
- en: '[`read_feather()`](../reference/api/pandas.read_feather.html#pandas.read_feather
    "pandas.read_feather") has gained the `nthreads` parameter for multi-threaded
    operations ([GH 16359](https://github.com/pandas-dev/pandas/issues/16359))'
  id: totrans-806
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_feather()`](../reference/api/pandas.read_feather.html#pandas.read_feather
    "pandas.read_feather") 现在增加了 `nthreads` 参数以支持多线程操作 ([GH 16359](https://github.com/pandas-dev/pandas/issues/16359))'
- en: '[`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip") and [`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip") have gained an `inplace` argument. ([GH 15388](https://github.com/pandas-dev/pandas/issues/15388))'
  id: totrans-807
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip") 和 [`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip") 增加了一个 `inplace` 参数。([GH 15388](https://github.com/pandas-dev/pandas/issues/15388))'
- en: '[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    has gained a `margins_name` parameter to define the name of the row / column that
    will contain the totals when `margins=True`. ([GH 15972](https://github.com/pandas-dev/pandas/issues/15972))'
  id: totrans-808
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    增加了一个 `margins_name` 参数，用于在 `margins=True` 时定义包含总计的行/列的名称。([GH 15972](https://github.com/pandas-dev/pandas/issues/15972))'
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    now accepts a `chunksize` parameter that can be used when `lines=True`. If `chunksize`
    is passed, read_json now returns an iterator which reads in `chunksize` lines
    with each iteration. ([GH 17048](https://github.com/pandas-dev/pandas/issues/17048))'
  id: totrans-809
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    现在在 `lines=True` 时接受一个 `chunksize` 参数。如果传入 `chunksize`，read_json 现在会返回一个迭代器，每次迭代读入
    `chunksize` 行。([GH 17048](https://github.com/pandas-dev/pandas/issues/17048))'
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    and [`to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") now accept a `compression` argument which allows them
    to transparently handle compressed files. ([GH 17798](https://github.com/pandas-dev/pandas/issues/17798))'
  id: totrans-810
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    和 [`to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") 现在接受一个 `compression` 参数，使它们能够透明地处理压缩文件。 ([GH 17798](https://github.com/pandas-dev/pandas/issues/17798))'
- en: Various enhancements
  id: totrans-811
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 各种增强功能
- en: Improved the import time of pandas by about 2.25x. ([GH 16764](https://github.com/pandas-dev/pandas/issues/16764))
  id: totrans-812
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提高了 pandas 的导入时间约 2.25 倍。 ([GH 16764](https://github.com/pandas-dev/pandas/issues/16764))
- en: Support for [PEP 519 – Adding a file system path protocol](https://www.python.org/dev/peps/pep-0519/)
    on most readers (e.g. [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")) and writers (e.g. [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv")) ([GH 13823](https://github.com/pandas-dev/pandas/issues/13823)).
  id: totrans-813
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在大多数读取器（例如 [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")）和写入器（例如 [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv")）上添加了对 [PEP 519 – 添加文件系统路径协议](https://www.python.org/dev/peps/pep-0519/)
    的支持 ([GH 13823](https://github.com/pandas-dev/pandas/issues/13823)).
- en: Added a `__fspath__` method to `pd.HDFStore`, `pd.ExcelFile`, and `pd.ExcelWriter`
    to work properly with the file system path protocol ([GH 13823](https://github.com/pandas-dev/pandas/issues/13823)).
  id: totrans-814
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向 `pd.HDFStore`、`pd.ExcelFile` 和 `pd.ExcelWriter` 添加了一个 `__fspath__` 方法，以便与文件系统路径协议正常工作
    ([GH 13823](https://github.com/pandas-dev/pandas/issues/13823)).
- en: The `validate` argument for [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") now checks whether a merge is one-to-one, one-to-many, many-to-one,
    or many-to-many. If a merge is found to not be an example of specified merge type,
    an exception of type `MergeError` will be raised. For more, see [here](../user_guide/merging.html#merging-validation)
    ([GH 16270](https://github.com/pandas-dev/pandas/issues/16270))
  id: totrans-815
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    的 `validate` 参数现在检查合并是一对一、一对多、多对一还是多对多。 如果发现合并不是指定合并类型的示例，将引发 `MergeError` 类型的异常。
    更多信息请参见[此处](../user_guide/merging.html#merging-validation) ([GH 16270](https://github.com/pandas-dev/pandas/issues/16270))'
- en: Added support for [PEP 518](https://www.python.org/dev/peps/pep-0518/) (`pyproject.toml`)
    to the build system ([GH 16745](https://github.com/pandas-dev/pandas/issues/16745))
  id: totrans-816
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对构建系统添加了对 [PEP 518](https://www.python.org/dev/peps/pep-0518/) (`pyproject.toml`)
    的支持 ([GH 16745](https://github.com/pandas-dev/pandas/issues/16745))
- en: '`RangeIndex.append()` now returns a `RangeIndex` object when possible ([GH
    16212](https://github.com/pandas-dev/pandas/issues/16212))'
  id: totrans-817
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RangeIndex.append()` 现在在可能的情况下返回一个 `RangeIndex` 对象 ([GH 16212](https://github.com/pandas-dev/pandas/issues/16212))'
- en: '[`Series.rename_axis()`](../reference/api/pandas.Series.rename_axis.html#pandas.Series.rename_axis
    "pandas.Series.rename_axis") and [`DataFrame.rename_axis()`](../reference/api/pandas.DataFrame.rename_axis.html#pandas.DataFrame.rename_axis
    "pandas.DataFrame.rename_axis") with `inplace=True` now return `None` while renaming
    the axis inplace. ([GH 15704](https://github.com/pandas-dev/pandas/issues/15704))'
  id: totrans-818
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.rename_axis()`](../reference/api/pandas.Series.rename_axis.html#pandas.Series.rename_axis
    "pandas.Series.rename_axis") 和 [`DataFrame.rename_axis()`](../reference/api/pandas.DataFrame.rename_axis.html#pandas.DataFrame.rename_axis
    "pandas.DataFrame.rename_axis") 在 `inplace=True` 时，将轴重命名为 `None`。 ([GH 15704](https://github.com/pandas-dev/pandas/issues/15704))'
- en: '[`api.types.infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") now infers decimals. ([GH 15690](https://github.com/pandas-dev/pandas/issues/15690))'
  id: totrans-819
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`api.types.infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") 现在推断小数。 ([GH 15690](https://github.com/pandas-dev/pandas/issues/15690))'
- en: '[`DataFrame.select_dtypes()`](../reference/api/pandas.DataFrame.select_dtypes.html#pandas.DataFrame.select_dtypes
    "pandas.DataFrame.select_dtypes") now accepts scalar values for include/exclude
    as well as list-like. ([GH 16855](https://github.com/pandas-dev/pandas/issues/16855))'
  id: totrans-820
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.select_dtypes()`](../reference/api/pandas.DataFrame.select_dtypes.html#pandas.DataFrame.select_dtypes
    "pandas.DataFrame.select_dtypes") 现在接受标量值作为包含/排除以及类似列表的参数。 ([GH 16855](https://github.com/pandas-dev/pandas/issues/16855))'
- en: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") now accepts ‘YS’ in addition to ‘AS’ as an alias for start
    of year. ([GH 9313](https://github.com/pandas-dev/pandas/issues/9313))'
  id: totrans-821
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") 现在除了‘AS’之外还接受‘YS’作为年初的别名。([GH 9313](https://github.com/pandas-dev/pandas/issues/9313))'
- en: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") now accepts ‘Y’ in addition to ‘A’ as an alias for end of
    year. ([GH 9313](https://github.com/pandas-dev/pandas/issues/9313))'
  id: totrans-822
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") 现在除了‘A’之外还接受‘Y’作为年末的别名。([GH 9313](https://github.com/pandas-dev/pandas/issues/9313))'
- en: '[`DataFrame.add_prefix()`](../reference/api/pandas.DataFrame.add_prefix.html#pandas.DataFrame.add_prefix
    "pandas.DataFrame.add_prefix") and [`DataFrame.add_suffix()`](../reference/api/pandas.DataFrame.add_suffix.html#pandas.DataFrame.add_suffix
    "pandas.DataFrame.add_suffix") now accept strings containing the ‘%’ character.
    ([GH 17151](https://github.com/pandas-dev/pandas/issues/17151))'
  id: totrans-823
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.add_prefix()`](../reference/api/pandas.DataFrame.add_prefix.html#pandas.DataFrame.add_prefix
    "pandas.DataFrame.add_prefix") 和 [`DataFrame.add_suffix()`](../reference/api/pandas.DataFrame.add_suffix.html#pandas.DataFrame.add_suffix
    "pandas.DataFrame.add_suffix") 现在接受包含‘%’字符的字符串。([GH 17151](https://github.com/pandas-dev/pandas/issues/17151))'
- en: Read/write methods that infer compression ([`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), [`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle"), and [`to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle")) can now infer from path-like objects, such as `pathlib.Path`.
    ([GH 17206](https://github.com/pandas-dev/pandas/issues/17206))
  id: totrans-824
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从推断压缩的读/写方法（[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), [`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle"), 和 [`to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle")）现在可以从类似 `pathlib.Path` 的路径对象中推断。([GH 17206](https://github.com/pandas-dev/pandas/issues/17206))
- en: '[`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    now recognizes much more of the most frequently used date (datetime) formats in
    SAS7BDAT files. ([GH 15871](https://github.com/pandas-dev/pandas/issues/15871))'
  id: totrans-825
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    现在可以识别更多在 SAS7BDAT 文件中最常用的日期（时间）格式。([GH 15871](https://github.com/pandas-dev/pandas/issues/15871))'
- en: '[`DataFrame.items()`](../reference/api/pandas.DataFrame.items.html#pandas.DataFrame.items
    "pandas.DataFrame.items") and [`Series.items()`](../reference/api/pandas.Series.items.html#pandas.Series.items
    "pandas.Series.items") are now present in both Python 2 and 3 and is lazy in all
    cases. ([GH 13918](https://github.com/pandas-dev/pandas/issues/13918), [GH 17213](https://github.com/pandas-dev/pandas/issues/17213))'
  id: totrans-826
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.items()`](../reference/api/pandas.DataFrame.items.html#pandas.DataFrame.items
    "pandas.DataFrame.items") 和 [`Series.items()`](../reference/api/pandas.Series.items.html#pandas.Series.items
    "pandas.Series.items") 现在在 Python 2 和 3 中都存在，并且在所有情况下都是惰性的。([GH 13918](https://github.com/pandas-dev/pandas/issues/13918),
    [GH 17213](https://github.com/pandas-dev/pandas/issues/17213))'
- en: '`pandas.io.formats.style.Styler.where()` has been implemented as a convenience
    for `pandas.io.formats.style.Styler.applymap()`. ([GH 17474](https://github.com/pandas-dev/pandas/issues/17474))'
  id: totrans-827
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas.io.formats.style.Styler.where()` 已经实现，作为 `pandas.io.formats.style.Styler.applymap()`
    的便利。([GH 17474](https://github.com/pandas-dev/pandas/issues/17474))'
- en: '`MultiIndex.is_monotonic_decreasing()` has been implemented. Previously returned
    `False` in all cases. ([GH 16554](https://github.com/pandas-dev/pandas/issues/16554))'
  id: totrans-828
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MultiIndex.is_monotonic_decreasing()` 已经实现。以前在所有情况下返回 `False`。([GH 16554](https://github.com/pandas-dev/pandas/issues/16554))'
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") raises `ImportError` with a better message if `xlrd` is not
    installed. ([GH 17613](https://github.com/pandas-dev/pandas/issues/17613))'
  id: totrans-829
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") 如果未安装 `xlrd`，将引发 `ImportError` 并提供更好的消息。([GH 17613](https://github.com/pandas-dev/pandas/issues/17613))'
- en: '[`DataFrame.assign()`](../reference/api/pandas.DataFrame.assign.html#pandas.DataFrame.assign
    "pandas.DataFrame.assign") will preserve the original order of `**kwargs` for
    Python 3.6+ users instead of sorting the column names. ([GH 14207](https://github.com/pandas-dev/pandas/issues/14207))'
  id: totrans-830
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.assign()`](../reference/api/pandas.DataFrame.assign.html#pandas.DataFrame.assign
    "pandas.DataFrame.assign") 将为 Python 3.6+ 用户保留 `**kwargs` 的原始顺序，而不是对列名进行排序。([GH
    14207](https://github.com/pandas-dev/pandas/issues/14207))'
- en: '[`Series.reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex"), [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex"), [`Index.get_indexer()`](../reference/api/pandas.Index.get_indexer.html#pandas.Index.get_indexer
    "pandas.Index.get_indexer") now support list-like argument for `tolerance`. ([GH
    17367](https://github.com/pandas-dev/pandas/issues/17367))'
  id: totrans-831
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex"), [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex"), [`Index.get_indexer()`](../reference/api/pandas.Index.get_indexer.html#pandas.Index.get_indexer
    "pandas.Index.get_indexer") 现在支持`tolerance`的类似列表参数。 ([GH 17367](https://github.com/pandas-dev/pandas/issues/17367))'
- en: '## Backwards incompatible API changes'
  id: totrans-832
  prefs: []
  type: TYPE_NORMAL
  zh: '## 不向后兼容的 API 更改'
- en: '### Dependencies have increased minimum versions'
  id: totrans-833
  prefs: []
  type: TYPE_NORMAL
  zh: '### 依赖关系已增加最低版本'
- en: 'We have updated our minimum supported versions of dependencies ([GH 15206](https://github.com/pandas-dev/pandas/issues/15206),
    [GH 15543](https://github.com/pandas-dev/pandas/issues/15543), [GH 15214](https://github.com/pandas-dev/pandas/issues/15214)).
    If installed, we now require:'
  id: totrans-834
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经更新了我们所支持的依赖项的最低版本（[GH 15206](https://github.com/pandas-dev/pandas/issues/15206),
    [GH 15543](https://github.com/pandas-dev/pandas/issues/15543), [GH 15214](https://github.com/pandas-dev/pandas/issues/15214)）。如果已安装，我们现在需要：
- en: '| Package | Minimum Version | Required |'
  id: totrans-835
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| Package | Minimum Version | Required |'
- en: '| --- | --- | --- |'
  id: totrans-836
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Numpy | 1.9.0 | X |'
  id: totrans-837
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| Numpy | 1.9.0 | X |'
- en: '| Matplotlib | 1.4.3 |  |'
  id: totrans-838
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| Matplotlib | 1.4.3 |  |'
- en: '| Scipy | 0.14.0 |  |'
  id: totrans-839
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| Scipy | 0.14.0 |  |'
- en: '| Bottleneck | 1.0.0 |  |'
  id: totrans-840
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| Bottleneck | 1.0.0 |  |'
- en: 'Additionally, support has been dropped for Python 3.4 ([GH 15251](https://github.com/pandas-dev/pandas/issues/15251)).  ###
    Sum/prod of all-NaN or empty Series/DataFrames is now consistently NaN'
  id: totrans-841
  prefs: []
  type: TYPE_NORMAL
  zh: '另外，支持已放弃 Python 3.4 ([GH 15251](https://github.com/pandas-dev/pandas/issues/15251))。  ###
    所有-NaN或空系列/数据框的和/乘积现在一致为 NaN'
- en: Note
  id: totrans-842
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The changes described here have been partially reverted. See the [v0.22.0 Whatsnew](v0.22.0.html#whatsnew-0220)
    for more.
  id: totrans-843
  prefs: []
  type: TYPE_NORMAL
  zh: 此处描述的更改已部分回滚。有关更多信息，请参见 [v0.22.0 Whatsnew](v0.22.0.html#whatsnew-0220) 。
- en: The behavior of `sum` and `prod` on all-NaN Series/DataFrames no longer depends
    on whether [bottleneck](https://bottleneck.readthedocs.io) is installed, and return
    value of `sum` and `prod` on an empty Series has changed ([GH 9422](https://github.com/pandas-dev/pandas/issues/9422),
    [GH 15507](https://github.com/pandas-dev/pandas/issues/15507)).
  id: totrans-844
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有NaN的Series/DataFrames上`sum`和`prod`的行为不再取决于是否安装了 [bottleneck](https://bottleneck.readthedocs.io)，并且空Series的`sum`和`prod`的返回值已更改
    ([GH 9422](https://github.com/pandas-dev/pandas/issues/9422), [GH 15507](https://github.com/pandas-dev/pandas/issues/15507))。
- en: Calling `sum` or `prod` on an empty or all-`NaN` `Series`, or columns of a `DataFrame`,
    will result in `NaN`. See the [docs](../user_guide/missing_data.html#missing-data-calculations).
  id: totrans-845
  prefs: []
  type: TYPE_NORMAL
  zh: 在空或所有 `NaN` 的 `Series`，或 `DataFrame` 的列上调用 `sum` 或 `prod` 将导致 `NaN`。请参阅 [文档](../user_guide/missing_data.html#missing-data-calculations)。
- en: '[PRE95]'
  id: totrans-846
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: 'Previously WITHOUT `bottleneck` installed:'
  id: totrans-847
  prefs: []
  type: TYPE_NORMAL
  zh: 以前未安装 `bottleneck` 时：
- en: '[PRE96]'
  id: totrans-848
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: 'Previously WITH `bottleneck`:'
  id: totrans-849
  prefs: []
  type: TYPE_NORMAL
  zh: 以前使用`bottleneck`时：
- en: '[PRE97]'
  id: totrans-850
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: 'New behavior, without regard to the bottleneck installation:'
  id: totrans-851
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为，不考虑瓶颈安装：
- en: '[PRE98]'
  id: totrans-852
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: 'Note that this also changes the sum of an empty `Series`. Previously this always
    returned 0 regardless of a `bottleneck` installation:'
  id: totrans-853
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这也更改了空 `Series` 的总和。以前，无论是否安装了 `bottleneck`，这总是返回0：
- en: '[PRE99]'
  id: totrans-854
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: 'but for consistency with the all-NaN case, this was changed to return 0 as
    well:'
  id: totrans-855
  prefs: []
  type: TYPE_NORMAL
  zh: 但是为了与全NaN情况保持一致，这也被更改为返回0：
- en: '[PRE100]  ### Indexing with a list with missing labels is deprecated'
  id: totrans-856
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE100]  ### 使用带有缺失标签的列表进行索引已被弃用'
- en: Previously, selecting with a list of labels, where one or more labels were missing
    would always succeed, returning `NaN` for missing labels. This will now show a
    `FutureWarning`. In the future this will raise a `KeyError` ([GH 15747](https://github.com/pandas-dev/pandas/issues/15747)).
    This warning will trigger on a `DataFrame` or a `Series` for using `.loc[]` or
    `[[]]` when passing a list-of-labels with at least 1 missing label.
  id: totrans-857
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，选择使用标签列表，其中一个或多个标签丢失，将总是成功，并返回 `NaN` 以表示缺失标签。现在将显示一个 `FutureWarning`。将来这将引发一个
    `KeyError` ([GH 15747](https://github.com/pandas-dev/pandas/issues/15747))。当传递至少有一个缺失标签的标签列表时，此警告将在使用
    `.loc[]` 或 `[[]]` 选择 `DataFrame` 或 `Series` 时触发。
- en: '[PRE101]'
  id: totrans-858
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: Previous behavior
  id: totrans-859
  prefs: []
  type: TYPE_NORMAL
  zh: 先前的行为
- en: '[PRE102]'
  id: totrans-860
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: Current behavior
  id: totrans-861
  prefs: []
  type: TYPE_NORMAL
  zh: 当前行为
- en: '[PRE103]'
  id: totrans-862
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: The idiomatic way to achieve selecting potentially not-found elements is via
    `.reindex()`
  id: totrans-863
  prefs: []
  type: TYPE_NORMAL
  zh: 实现选择可能不存在的元素的惯用方法是通过 `.reindex()`
- en: '[PRE104]'
  id: totrans-864
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: Selection with all keys found is unchanged.
  id: totrans-865
  prefs: []
  type: TYPE_NORMAL
  zh: 选择所有找到的键的行为未更改。
- en: '[PRE105]  ### NA naming changes'
  id: totrans-866
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE105]  ### NA 命名更改'
- en: In order to promote more consistency among the pandas API, we have added additional
    top-level functions [`isna()`](../reference/api/pandas.isna.html#pandas.isna "pandas.isna")
    and [`notna()`](../reference/api/pandas.notna.html#pandas.notna "pandas.notna")
    that are aliases for [`isnull()`](../reference/api/pandas.isnull.html#pandas.isnull
    "pandas.isnull") and [`notnull()`](../reference/api/pandas.notnull.html#pandas.notnull
    "pandas.notnull"). The naming scheme is now more consistent with methods like
    `.dropna()` and `.fillna()`. Furthermore in all cases where `.isnull()` and `.notnull()`
    methods are defined, these have additional methods named `.isna()` and `.notna()`,
    these are included for classes `Categorical`, `Index`, `Series`, and `DataFrame`.
    ([GH 15001](https://github.com/pandas-dev/pandas/issues/15001)).
  id: totrans-867
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在pandas API中促进更一致性，我们添加了额外的顶层函数[`isna()`](../reference/api/pandas.isna.html#pandas.isna
    "pandas.isna")和[`notna()`](../reference/api/pandas.notna.html#pandas.notna "pandas.notna")，它们是[`isnull()`](../reference/api/pandas.isnull.html#pandas.isnull
    "pandas.isnull")和[`notnull()`](../reference/api/pandas.notnull.html#pandas.notnull)的别名。命名方案现在更符合`.dropna()`和`.fillna()`等方法。此外，在定义了`.isnull()`和`.notnull()`方法的所有情况下，这些方法还有名为`.isna()`和`.notna()`的附加方法，这些方法适用于类别`Categorical`、`Index`、`Series`和`DataFrame`。([GH
    15001](https://github.com/pandas-dev/pandas/issues/15001))。
- en: 'The configuration option `pd.options.mode.use_inf_as_null` is deprecated, and
    `pd.options.mode.use_inf_as_na` is added as a replacement.  ### Iteration of Series/Index
    will now return Python scalars'
  id: totrans-868
  prefs: []
  type: TYPE_NORMAL
  zh: 配置选项`pd.options.mode.use_inf_as_null`已被弃用，添加了`pd.options.mode.use_inf_as_na`作为替代。###
    Series/Index的迭代现在将返回Python标量
- en: Previously, when using certain iteration methods for a `Series` with dtype `int`
    or `float`, you would receive a `numpy` scalar, e.g. a `np.int64`, rather than
    a Python `int`. Issue ([GH 10904](https://github.com/pandas-dev/pandas/issues/10904))
    corrected this for `Series.tolist()` and `list(Series)`. This change makes all
    iteration methods consistent, in particular, for `__iter__()` and `.map()`; note
    that this only affects int/float dtypes. ([GH 13236](https://github.com/pandas-dev/pandas/issues/13236),
    [GH 13258](https://github.com/pandas-dev/pandas/issues/13258), [GH 14216](https://github.com/pandas-dev/pandas/issues/14216)).
  id: totrans-869
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，当对具有`int`或`float`类型的`Series`使用某些迭代方法时，您将收到一个`numpy`标量，例如`np.int64`，而不是Python的`int`。问题（[GH
    10904](https://github.com/pandas-dev/pandas/issues/10904)）已为`Series.tolist()`和`list(Series)`进行了更正。此更改使所有迭代方法保持一致，特别是对于`__iter__()`和`.map()`；请注意，这仅影响int/float类型。([GH
    13236](https://github.com/pandas-dev/pandas/issues/13236), [GH 13258](https://github.com/pandas-dev/pandas/issues/13258),
    [GH 14216](https://github.com/pandas-dev/pandas/issues/14216))。
- en: '[PRE106]'
  id: totrans-870
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: 'Previously:'
  id: totrans-871
  prefs: []
  type: TYPE_NORMAL
  zh: 以前：
- en: '[PRE107]'
  id: totrans-872
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: 'New behavior:'
  id: totrans-873
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为：
- en: '[PRE108]'
  id: totrans-874
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: Furthermore this will now correctly box the results of iteration for [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") as well.
  id: totrans-875
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，现在这将正确地对[`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict")的迭代结果进行封装。
- en: '[PRE109]'
  id: totrans-876
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: 'Previously:'
  id: totrans-877
  prefs: []
  type: TYPE_NORMAL
  zh: 以前：
- en: '[PRE110]'
  id: totrans-878
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: 'New behavior:'
  id: totrans-879
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为：
- en: '[PRE111]  ### Indexing with a Boolean Index'
  id: totrans-880
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE111]  ### 使用布尔索引进行索引'
- en: Previously when passing a boolean `Index` to `.loc`, if the index of the `Series/DataFrame`
    had `boolean` labels, you would get a label based selection, potentially duplicating
    result labels, rather than a boolean indexing selection (where `True` selects
    elements), this was inconsistent how a boolean numpy array indexed. The new behavior
    is to act like a boolean numpy array indexer. ([GH 17738](https://github.com/pandas-dev/pandas/issues/17738))
  id: totrans-881
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，当将布尔`Index`传递给`.loc`时，如果`Series/DataFrame`的索引具有`boolean`标签，则会获得基于标签的选择，可能会重复结果标签，而不是布尔索引选择（其中`True`选择元素），这与布尔numpy数组索引的方式不一致。新行为是像布尔numpy数组索引器一样操作。([GH
    17738](https://github.com/pandas-dev/pandas/issues/17738))
- en: 'Previous behavior:'
  id: totrans-882
  prefs: []
  type: TYPE_NORMAL
  zh: 先前行为：
- en: '[PRE112]'
  id: totrans-883
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: '[PRE113]'
  id: totrans-884
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: Current behavior
  id: totrans-885
  prefs: []
  type: TYPE_NORMAL
  zh: 当前行为
- en: '[PRE114]'
  id: totrans-886
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: Furthermore, previously if you had an index that was non-numeric (e.g. strings),
    then a boolean Index would raise a `KeyError`. This will now be treated as a boolean
    indexer.
  id: totrans-887
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，以前如果您有一个非数字索引（例如字符串），那么布尔索引将引发`KeyError`。现在将被视为布尔索引器。
- en: 'Previously behavior:'
  id: totrans-888
  prefs: []
  type: TYPE_NORMAL
  zh: 先前行为：
- en: '[PRE115]'
  id: totrans-889
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: '[PRE116]'
  id: totrans-890
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: Current behavior
  id: totrans-891
  prefs: []
  type: TYPE_NORMAL
  zh: 当前行为
- en: '[PRE117]  ### `PeriodIndex` resampling'
  id: totrans-892
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE117]  ### `PeriodIndex` 重新采样'
- en: In previous versions of pandas, resampling a `Series`/`DataFrame` indexed by
    a `PeriodIndex` returned a `DatetimeIndex` in some cases ([GH 12884](https://github.com/pandas-dev/pandas/issues/12884)).
    Resampling to a multiplied frequency now returns a `PeriodIndex` ([GH 15944](https://github.com/pandas-dev/pandas/issues/15944)).
    As a minor enhancement, resampling a `PeriodIndex` can now handle `NaT` values
    ([GH 13224](https://github.com/pandas-dev/pandas/issues/13224))
  id: totrans-893
  prefs: []
  type: TYPE_NORMAL
  zh: 在 pandas 的先前版本中，对由 `PeriodIndex` 索引的 `Series`/`DataFrame` 进行重新采样，在某些情况下会返回 `DatetimeIndex`
    ([GH 12884](https://github.com/pandas-dev/pandas/issues/12884))。现在，对倍频率进行重新采样将返回
    `PeriodIndex` ([GH 15944](https://github.com/pandas-dev/pandas/issues/15944))。作为一个小的增强，对
    `PeriodIndex` 进行重新采样现在可以处理 `NaT` 值 ([GH 13224](https://github.com/pandas-dev/pandas/issues/13224))。
- en: 'Previous behavior:'
  id: totrans-894
  prefs: []
  type: TYPE_NORMAL
  zh: 先前的行为：
- en: '[PRE118]'
  id: totrans-895
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: 'New behavior:'
  id: totrans-896
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为：
- en: '[PRE119]'
  id: totrans-897
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: Upsampling and calling `.ohlc()` previously returned a `Series`, basically identical
    to calling `.asfreq()`. OHLC upsampling now returns a DataFrame with columns `open`,
    `high`, `low` and `close` ([GH 13083](https://github.com/pandas-dev/pandas/issues/13083)).
    This is consistent with downsampling and `DatetimeIndex` behavior.
  id: totrans-898
  prefs: []
  type: TYPE_NORMAL
  zh: 上采样并调用 `.ohlc()` 先前返回一个 `Series`，基本上与调用 `.asfreq()` 相同。OHLC 上采样现在返回一个带有列 `open`、`high`、`low`
    和 `close` 的 DataFrame ([GH 13083](https://github.com/pandas-dev/pandas/issues/13083))。这与下采样和
    `DatetimeIndex` 的行为一致。
- en: 'Previous behavior:'
  id: totrans-899
  prefs: []
  type: TYPE_NORMAL
  zh: 先前的行为：
- en: '[PRE120]'
  id: totrans-900
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: 'New behavior:'
  id: totrans-901
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为：
- en: '[PRE121]  ### Improved error handling during item assignment in pd.eval'
  id: totrans-902
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE121]  ### 在 pd.eval 中的项赋值改进的错误处理'
- en: '[`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval") will
    now raise a `ValueError` when item assignment malfunctions, or inplace operations
    are specified, but there is no item assignment in the expression ([GH 16732](https://github.com/pandas-dev/pandas/issues/16732))'
  id: totrans-903
  prefs: []
  type: TYPE_NORMAL
  zh: '[`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval") 当项赋值失败或指定了原地操作但在表达式中没有项赋值时，现在会引发
    `ValueError` ([GH 16732](https://github.com/pandas-dev/pandas/issues/16732))'
- en: '[PRE122]'
  id: totrans-904
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: 'Previously, if you attempted the following expression, you would get a not
    very helpful error message:'
  id: totrans-905
  prefs: []
  type: TYPE_NORMAL
  zh: 先前，如果尝试以下表达式，将会得到一个不太有用的错误消息：
- en: '[PRE123]'
  id: totrans-906
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: 'This is a very long way of saying numpy arrays don’t support string-item indexing.
    With this change, the error message is now this:'
  id: totrans-907
  prefs: []
  type: TYPE_NORMAL
  zh: 这是说 numpy 数组不支持字符串项索引的一种非常长的方式。随着这个变化，错误消息现在是这样的：
- en: '[PRE124]'
  id: totrans-908
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: 'It also used to be possible to evaluate expressions inplace, even if there
    was no item assignment:'
  id: totrans-909
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以在没有项赋值的情况下进行表达式的原地求值：
- en: '[PRE125]'
  id: totrans-910
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: 'However, this input does not make much sense because the output is not being
    assigned to the target. Now, a `ValueError` will be raised when such an input
    is passed in:'
  id: totrans-911
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这个输入并没有太多意义，因为输出没有被分配给目标。现在，当传入这样的输入时，将会引发 `ValueError`：
- en: '[PRE126]  ### Dtype conversions'
  id: totrans-912
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE126]  ### Dtype 转换'
- en: Previously assignments, `.where()` and `.fillna()` with a `bool` assignment,
    would coerce to same the type (e.g. int / float), or raise for datetimelikes.
    These will now preserve the bools with `object` dtypes. ([GH 16821](https://github.com/pandas-dev/pandas/issues/16821)).
  id: totrans-913
  prefs: []
  type: TYPE_NORMAL
  zh: 先前的赋值、`.where()` 和 `.fillna()` 与 `bool` 赋值一起使用，会强制转换为相同类型（例如 int / float），或者对于日期时间型会引发错误。现在，这些将保留具有
    `object` dtype 的 bools。([GH 16821](https://github.com/pandas-dev/pandas/issues/16821))。
- en: '[PRE127]'
  id: totrans-914
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: '[PRE128]'
  id: totrans-915
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: New behavior
  id: totrans-916
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为
- en: '[PRE129]'
  id: totrans-917
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: Previously, as assignment to a datetimelike with a non-datetimelike would coerce
    the non-datetime-like item being assigned ([GH 14145](https://github.com/pandas-dev/pandas/issues/14145)).
  id: totrans-918
  prefs: []
  type: TYPE_NORMAL
  zh: 先前，对于具有非日期时间型的 datetimelike 的赋值会强制转换被赋值的非日期时间型项 ([GH 14145](https://github.com/pandas-dev/pandas/issues/14145))。
- en: '[PRE130]'
  id: totrans-919
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: '[PRE131]'
  id: totrans-920
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: These now coerce to `object` dtype.
  id: totrans-921
  prefs: []
  type: TYPE_NORMAL
  zh: 这些现在强制转换为 `object` dtype。
- en: '[PRE132]'
  id: totrans-922
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: Inconsistent behavior in `.where()` with datetimelikes which would raise rather
    than coerce to `object` ([GH 16402](https://github.com/pandas-dev/pandas/issues/16402))
  id: totrans-923
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `.where()` 中使用 datetimelikes 的不一致行为，会引发而不是强制转换为 `object` ([GH 16402](https://github.com/pandas-dev/pandas/issues/16402))
- en: 'Bug in assignment against `int64` data with `np.ndarray` with `float64` dtype
    may keep `int64` dtype ([GH 14001](https://github.com/pandas-dev/pandas/issues/14001))  ###
    MultiIndex constructor with a single level'
  id: totrans-924
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '在使用 `np.ndarray` 的 `float64` dtype 的 `int64` 数据进行赋值时可能会保持 `int64` dtype 的错误（[GH
    14001](https://github.com/pandas-dev/pandas/issues/14001))  ### 具有单个级别的 MultiIndex
    构造函数'
- en: The `MultiIndex` constructors no longer squeezes a MultiIndex with all length-one
    levels down to a regular `Index`. This affects all the `MultiIndex` constructors.
    ([GH 17178](https://github.com/pandas-dev/pandas/issues/17178))
  id: totrans-925
  prefs: []
  type: TYPE_NORMAL
  zh: '`MultiIndex` 构造函数不再将所有长度为一的级别的 MultiIndex 压缩为常规的 `Index`。这影响所有 `MultiIndex`
    构造函数。([GH 17178](https://github.com/pandas-dev/pandas/issues/17178))'
- en: 'Previous behavior:'
  id: totrans-926
  prefs: []
  type: TYPE_NORMAL
  zh: 先前的行为：
- en: '[PRE133]'
  id: totrans-927
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: 'Length 1 levels are no longer special-cased. They behave exactly as if you
    had length 2+ levels, so a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") is always returned from all of the `MultiIndex` constructors:'
  id: totrans-928
  prefs: []
  type: TYPE_NORMAL
  zh: 长度为 1 的级别不再特殊处理。它们的行为与长度为 2+ 的级别完全相同，因此 [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") 构造函数始终返回 `MultiIndex`：
- en: '[PRE134]  ### UTC localization with Series'
  id: totrans-929
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE134]  ### Series 的 UTC 本地化'
- en: Previously, [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") did not localize datetime `Series` data when `utc=True`
    was passed. Now, [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") will correctly localize `Series` with a `datetime64[ns,
    UTC]` dtype to be consistent with how list-like and `Index` data are handled.
    ([GH 6415](https://github.com/pandas-dev/pandas/issues/6415)).
  id: totrans-930
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，当传递 `utc=True` 时，[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") 不会本地化日期时间 `Series` 数据。现在，[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") 将正确地本地化具有 `datetime64[ns, UTC]` dtype 的 `Series`，以使其与列表样式和
    `Index` 数据的处理方式保持一致。 ([GH 6415](https://github.com/pandas-dev/pandas/issues/6415)).
- en: Previous behavior
  id: totrans-931
  prefs: []
  type: TYPE_NORMAL
  zh: 先前的行为
- en: '[PRE135]'
  id: totrans-932
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: '[PRE136]'
  id: totrans-933
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: New behavior
  id: totrans-934
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为
- en: '[PRE137]'
  id: totrans-935
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: 'Additionally, DataFrames with datetime columns that were parsed by [`read_sql_table()`](../reference/api/pandas.read_sql_table.html#pandas.read_sql_table
    "pandas.read_sql_table") and [`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query") will also be localized to UTC only if the original SQL
    columns were timezone aware datetime columns.  ### Consistency of range functions'
  id: totrans-936
  prefs: []
  type: TYPE_NORMAL
  zh: '此外，通过 [`read_sql_table()`](../reference/api/pandas.read_sql_table.html#pandas.read_sql_table
    "pandas.read_sql_table") 和 [`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query") 解析的具有日期时间列的 DataFrame 将仅在原始 SQL 列是时区感知日期时间列时本地化为 UTC。  ###
    范围函数的一致性'
- en: 'In previous versions, there were some inconsistencies between the various range
    functions: [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range"), [`bdate_range()`](../reference/api/pandas.bdate_range.html#pandas.bdate_range
    "pandas.bdate_range"), [`period_range()`](../reference/api/pandas.period_range.html#pandas.period_range
    "pandas.period_range"), [`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range"), and [`interval_range()`](../reference/api/pandas.interval_range.html#pandas.interval_range
    "pandas.interval_range"). ([GH 17471](https://github.com/pandas-dev/pandas/issues/17471)).'
  id: totrans-937
  prefs: []
  type: TYPE_NORMAL
  zh: 在以前的版本中，各种范围函数之间存在一些不一致性：[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range"), [`bdate_range()`](../reference/api/pandas.bdate_range.html#pandas.bdate_range
    "pandas.bdate_range"), [`period_range()`](../reference/api/pandas.period_range.html#pandas.period_range
    "pandas.period_range"), [`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range"), 和 [`interval_range()`](../reference/api/pandas.interval_range.html#pandas.interval_range
    "pandas.interval_range"). ([GH 17471](https://github.com/pandas-dev/pandas/issues/17471)).
- en: One of the inconsistent behaviors occurred when the `start`, `end` and `period`
    parameters were all specified, potentially leading to ambiguous ranges. When all
    three parameters were passed, `interval_range` ignored the `period` parameter,
    `period_range` ignored the `end` parameter, and the other range functions raised.
    To promote consistency among the range functions, and avoid potentially ambiguous
    ranges, `interval_range` and `period_range` will now raise when all three parameters
    are passed.
  id: totrans-938
  prefs: []
  type: TYPE_NORMAL
  zh: 其中不一致的行为之一是当同时指定 `start`、`end` 和 `period` 参数时，可能导致模糊的范围。当传递了所有三个参数时，`interval_range`
    忽略 `period` 参数，`period_range` 忽略 `end` 参数，而其他范围函数则引发异常。为了促进范围函数之间的一致性，并避免潜在的模糊范围，当传递所有三个参数时，`interval_range`
    和 `period_range` 现在会引发异常。
- en: 'Previous behavior:'
  id: totrans-939
  prefs: []
  type: TYPE_NORMAL
  zh: 先前的行为：
- en: '[PRE138]'
  id: totrans-940
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: 'New behavior:'
  id: totrans-941
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为：
- en: '[PRE139]'
  id: totrans-942
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: Additionally, the endpoint parameter `end` was not included in the intervals
    produced by `interval_range`. However, all other range functions include `end`
    in their output. To promote consistency among the range functions, `interval_range`
    will now include `end` as the right endpoint of the final interval, except if
    `freq` is specified in a way which skips `end`.
  id: totrans-943
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，`interval_range` 生成的区间不包括终点参数 `end`。然而，所有其他范围函数都将 `end` 包含在其输出中。为了促进范围函数之间的一致性，`interval_range`
    现在将 `end` 包括在最后一个区间的右端点，除非以跳过 `end` 的方式指定了 `freq`。
- en: 'Previous behavior:'
  id: totrans-944
  prefs: []
  type: TYPE_NORMAL
  zh: 先前的行为：
- en: '[PRE140]'
  id: totrans-945
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: 'New behavior:'
  id: totrans-946
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为：
- en: '[PRE141]  ### No automatic Matplotlib converters'
  id: totrans-947
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE141]  ### 没有自动的 Matplotlib 转换器'
- en: 'pandas no longer registers our `date`, `time`, `datetime`, `datetime64`, and
    `Period` converters with matplotlib when pandas is imported. Matplotlib plot methods
    (`plt.plot`, `ax.plot`, …), will not nicely format the x-axis for `DatetimeIndex`
    or `PeriodIndex` values. You must explicitly register these methods:'
  id: totrans-948
  prefs: []
  type: TYPE_NORMAL
  zh: 当导入pandas时，pandas不再向matplotlib注册我们的`date`、`time`、`datetime`、`datetime64`和`Period`转换器。Matplotlib绘图方法（`plt.plot`、`ax.plot`等）将不会为`DatetimeIndex`或`PeriodIndex`值格式化x轴。您必须显式注册这些方法：
- en: pandas built-in `Series.plot` and `DataFrame.plot` *will* register these converters
    on first-use ([GH 17710](https://github.com/pandas-dev/pandas/issues/17710)).
  id: totrans-949
  prefs: []
  type: TYPE_NORMAL
  zh: pandas内置的`Series.plot`和`DataFrame.plot` *将*在首次使用时注册这些转换器（[GH 17710](https://github.com/pandas-dev/pandas/issues/17710)）。
- en: Note
  id: totrans-950
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'This change has been temporarily reverted in pandas 0.21.1, for more details
    see [here](v0.21.1.html#whatsnew-0211-converters).  ### Other API changes'
  id: totrans-951
  prefs: []
  type: TYPE_NORMAL
  zh: 这一变更在pandas 0.21.1中暂时被撤销，更多详情请参见[这里](v0.21.1.html#whatsnew-0211-converters)。###
    其他API变更
- en: The Categorical constructor no longer accepts a scalar for the `categories`
    keyword. ([GH 16022](https://github.com/pandas-dev/pandas/issues/16022))
  id: totrans-952
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Categorical构造函数不再接受`categories`关键字的标量。([GH 16022](https://github.com/pandas-dev/pandas/issues/16022))
- en: Accessing a non-existent attribute on a closed `HDFStore` will now raise an
    `AttributeError` rather than a `ClosedFileError` ([GH 16301](https://github.com/pandas-dev/pandas/issues/16301))
  id: totrans-953
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在在关闭的`HDFStore`上访问不存在的属性将引发`AttributeError`而不是`ClosedFileError` ([GH 16301](https://github.com/pandas-dev/pandas/issues/16301))
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now issues a `UserWarning` if the `names` parameter contains duplicates ([GH 17095](https://github.com/pandas-dev/pandas/issues/17095))'
  id: totrans-954
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")现在会在`names`参数包含重复值时发出`UserWarning`（[GH
    17095](https://github.com/pandas-dev/pandas/issues/17095)）'
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now treats `''null''` and `''n/a''` strings as missing values by default ([GH
    16471](https://github.com/pandas-dev/pandas/issues/16471), [GH 16078](https://github.com/pandas-dev/pandas/issues/16078))'
  id: totrans-955
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")现在默认将`''null''`和`''n/a''`字符串视为缺失值
    ([GH 16471](https://github.com/pandas-dev/pandas/issues/16471), [GH 16078](https://github.com/pandas-dev/pandas/issues/16078))'
- en: '`pandas.HDFStore`’s string representation is now faster and less detailed.
    For the previous behavior, use `pandas.HDFStore.info()`. ([GH 16503](https://github.com/pandas-dev/pandas/issues/16503)).'
  id: totrans-956
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas.HDFStore`的字符串表示现在更快且更简洁。要恢复以前的行为，请使用`pandas.HDFStore.info()`。([GH 16503](https://github.com/pandas-dev/pandas/issues/16503))'
- en: Compression defaults in HDF stores now follow pytables standards. Default is
    no compression and if `complib` is missing and `complevel` > 0 `zlib` is used
    ([GH 15943](https://github.com/pandas-dev/pandas/issues/15943))
  id: totrans-957
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HDF存储中的压缩默认值现在遵循pytables标准。默认值为无压缩，如果`complib`缺失且`complevel` > 0，则使用`zlib` ([GH
    15943](https://github.com/pandas-dev/pandas/issues/15943))
- en: '`Index.get_indexer_non_unique()` now returns a ndarray indexer rather than
    an `Index`; this is consistent with `Index.get_indexer()` ([GH 16819](https://github.com/pandas-dev/pandas/issues/16819))'
  id: totrans-958
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Index.get_indexer_non_unique()`现在返回一个ndarray索引器而��是`Index`；这与`Index.get_indexer()`保持一致
    ([GH 16819](https://github.com/pandas-dev/pandas/issues/16819))'
- en: Removed the `@slow` decorator from `pandas._testing`, which caused issues for
    some downstream packages’ test suites. Use `@pytest.mark.slow` instead, which
    achieves the same thing ([GH 16850](https://github.com/pandas-dev/pandas/issues/16850))
  id: totrans-959
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`pandas._testing`中删除了`@slow`装饰器，这导致一些下游软件包的测试套件出现问题。改用`@pytest.mark.slow`，它可以实现相同的效果（[GH
    16850](https://github.com/pandas-dev/pandas/issues/16850)）
- en: Moved definition of `MergeError` to the `pandas.errors` module.
  id: totrans-960
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将`MergeError`的定义移至`pandas.errors`模块。
- en: The signature of [`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") and [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") has been changed from `set_axis(axis, labels)` to
    `set_axis(labels, axis=0)`, for consistency with the rest of the API. The old
    signature is deprecated and will show a `FutureWarning` ([GH 14636](https://github.com/pandas-dev/pandas/issues/14636))
  id: totrans-961
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis")和[`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis")的签名已从`set_axis(axis, labels)`更改为`set_axis(labels,
    axis=0)`，以保持与API的一致性。旧的签名已被弃用，并将显示`FutureWarning` ([GH 14636](https://github.com/pandas-dev/pandas/issues/14636))'
- en: '[`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin") and [`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax") will now raise a `TypeError` when used with `object` dtypes,
    instead of a `ValueError` ([GH 13595](https://github.com/pandas-dev/pandas/issues/13595))'
  id: totrans-962
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当使用`object` dtypes时，[`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin")和[`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax")现在将引发`TypeError`，而不是`ValueError`（[GH 13595](https://github.com/pandas-dev/pandas/issues/13595)）
- en: '[`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    is now immutable, and will now raise an `AttributeError` when a user tries to
    assign a new value to the `ordinal` or `freq` attributes ([GH 17116](https://github.com/pandas-dev/pandas/issues/17116)).'
  id: totrans-963
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")现在是不可变的，当用户尝试为`ordinal`或`freq`属性分配新值时，将引发`AttributeError`（[GH
    17116](https://github.com/pandas-dev/pandas/issues/17116)）。'
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when passed a tz-aware `origin=` kwarg will now raise a
    more informative `ValueError` rather than a `TypeError` ([GH 16842](https://github.com/pandas-dev/pandas/issues/16842))'
  id: totrans-964
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当传递了一个带有时区信息的`origin=`关键字参数给[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime")时，现在会引发一个更具信息性的`ValueError`而不是`TypeError`（[GH 16842](https://github.com/pandas-dev/pandas/issues/16842)）
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") now raises a `ValueError` when format includes `%W` or `%U`
    without also including day of the week and calendar year ([GH 16774](https://github.com/pandas-dev/pandas/issues/16774))'
  id: totrans-965
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当格式包含`%W`或`%U`而没有包括星期几和日历年时，[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime")现在会引发一个`ValueError`（[GH 16774](https://github.com/pandas-dev/pandas/issues/16774)）
- en: Renamed non-functional `index` to `index_col` in [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") to improve API consistency ([GH 16342](https://github.com/pandas-dev/pandas/issues/16342))
  id: totrans-966
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata")中将非功能性的`index`重命名为`index_col`，以改善API一致性（[GH 16342](https://github.com/pandas-dev/pandas/issues/16342)）
- en: Bug in [`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") caused boolean labels `False` and `True` to be treated
    as labels 0 and 1 respectively when dropping indices from a numeric index. This
    will now raise a ValueError ([GH 16877](https://github.com/pandas-dev/pandas/issues/16877))
  id: totrans-967
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop")中存在一个错误，导致布尔标签`False`和`True`在从数值索引中删除索引时分别被视为标签0和1。现在将引发一个ValueError（[GH
    16877](https://github.com/pandas-dev/pandas/issues/16877)）
- en: 'Restricted DateOffset keyword arguments. Previously, `DateOffset` subclasses
    allowed arbitrary keyword arguments which could lead to unexpected behavior. Now,
    only valid arguments will be accepted. ([GH 17176](https://github.com/pandas-dev/pandas/issues/17176)).  ###
    Dependencies have increased minimum versions'
  id: totrans-968
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制了`DateOffset`关键字参数。以前，`DateOffset`子类允许任意关键字参数，这可能导致意外行为。现在，只有有效的参数将被接受。([GH
    17176](https://github.com/pandas-dev/pandas/issues/17176))。### 依赖项已增加最低版本
- en: 'We have updated our minimum supported versions of dependencies ([GH 15206](https://github.com/pandas-dev/pandas/issues/15206),
    [GH 15543](https://github.com/pandas-dev/pandas/issues/15543), [GH 15214](https://github.com/pandas-dev/pandas/issues/15214)).
    If installed, we now require:'
  id: totrans-969
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已更新了我们的依赖项的最低支持版本（[GH 15206](https://github.com/pandas-dev/pandas/issues/15206)，[GH
    15543](https://github.com/pandas-dev/pandas/issues/15543)，[GH 15214](https://github.com/pandas-dev/pandas/issues/15214)）。如果已安装，我们现在要求：
- en: '| Package | Minimum Version | Required |'
  id: totrans-970
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| Package | Minimum Version | Required |'
- en: '| --- | --- | --- |'
  id: totrans-971
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Numpy | 1.9.0 | X |'
  id: totrans-972
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| Numpy | 1.9.0 | X |'
- en: '| Matplotlib | 1.4.3 |  |'
  id: totrans-973
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| Matplotlib | 1.4.3 |  |'
- en: '| Scipy | 0.14.0 |  |'
  id: totrans-974
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| Scipy | 0.14.0 |  |'
- en: '| Bottleneck | 1.0.0 |  |'
  id: totrans-975
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| Bottleneck | 1.0.0 |  |'
- en: Additionally, support has been dropped for Python 3.4 ([GH 15251](https://github.com/pandas-dev/pandas/issues/15251)).
  id: totrans-976
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，不再支持Python 3.4（[GH 15251](https://github.com/pandas-dev/pandas/issues/15251)）。
- en: '### Sum/prod of all-NaN or empty Series/DataFrames is now consistently NaN'
  id: totrans-977
  prefs: []
  type: TYPE_NORMAL
  zh: '### 所有-NaN或空Series/DataFrames的sum/prod现在一致为NaN'
- en: Note
  id: totrans-978
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The changes described here have been partially reverted. See the [v0.22.0 Whatsnew](v0.22.0.html#whatsnew-0220)
    for more.
  id: totrans-979
  prefs: []
  type: TYPE_NORMAL
  zh: 此处描述的更改已经部分回滚。更多信息请参阅[v0.22.0 Whatsnew](v0.22.0.html#whatsnew-0220)。
- en: The behavior of `sum` and `prod` on all-NaN Series/DataFrames no longer depends
    on whether [bottleneck](https://bottleneck.readthedocs.io) is installed, and return
    value of `sum` and `prod` on an empty Series has changed ([GH 9422](https://github.com/pandas-dev/pandas/issues/9422),
    [GH 15507](https://github.com/pandas-dev/pandas/issues/15507)).
  id: totrans-980
  prefs: []
  type: TYPE_NORMAL
  zh: '`sum`和`prod`在所有NaN Series/DataFrames上的行为不再取决于是否安装了[bottleneck](https://bottleneck.readthedocs.io)，并且空Series上`sum`和`prod`的返回值已更改([GH
    9422](https://github.com/pandas-dev/pandas/issues/9422)，[GH 15507](https://github.com/pandas-dev/pandas/issues/15507))。'
- en: Calling `sum` or `prod` on an empty or all-`NaN` `Series`, or columns of a `DataFrame`,
    will result in `NaN`. See the [docs](../user_guide/missing_data.html#missing-data-calculations).
  id: totrans-981
  prefs: []
  type: TYPE_NORMAL
  zh: 在空的或全部为`NaN`的`Series`或`DataFrame`上调用`sum`或`prod`将导致`NaN`。参见[文档](../user_guide/missing_data.html#missing-data-calculations)。
- en: '[PRE142]'
  id: totrans-982
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: 'Previously WITHOUT `bottleneck` installed:'
  id: totrans-983
  prefs: []
  type: TYPE_NORMAL
  zh: 先前未安装`bottleneck`：
- en: '[PRE143]'
  id: totrans-984
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: 'Previously WITH `bottleneck`:'
  id: totrans-985
  prefs: []
  type: TYPE_NORMAL
  zh: 先前使用`bottleneck`：
- en: '[PRE144]'
  id: totrans-986
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: 'New behavior, without regard to the bottleneck installation:'
  id: totrans-987
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为，不考虑bottleneck的安装：
- en: '[PRE145]'
  id: totrans-988
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: 'Note that this also changes the sum of an empty `Series`. Previously this always
    returned 0 regardless of a `bottleneck` installation:'
  id: totrans-989
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这也更改了空`Series`的总和。先前，无论是否安装了`bottleneck`，这总是返回0：
- en: '[PRE146]'
  id: totrans-990
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: 'but for consistency with the all-NaN case, this was changed to return 0 as
    well:'
  id: totrans-991
  prefs: []
  type: TYPE_NORMAL
  zh: 但是为了与所有NaN情况保持一致，这也被更改为返回0：
- en: '[PRE147]'
  id: totrans-992
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: '### Indexing with a list with missing labels is deprecated'
  id: totrans-993
  prefs: []
  type: TYPE_NORMAL
  zh: '### 使用缺失标签的列表进行索引已被弃用'
- en: Previously, selecting with a list of labels, where one or more labels were missing
    would always succeed, returning `NaN` for missing labels. This will now show a
    `FutureWarning`. In the future this will raise a `KeyError` ([GH 15747](https://github.com/pandas-dev/pandas/issues/15747)).
    This warning will trigger on a `DataFrame` or a `Series` for using `.loc[]` or
    `[[]]` when passing a list-of-labels with at least 1 missing label.
  id: totrans-994
  prefs: []
  type: TYPE_NORMAL
  zh: 先前，在选择缺少一个或多个标签的标签列表时，总是成功的，对于缺失的标签返回`NaN`。这现在将显示一个`FutureWarning`。未来将在使用`.loc[]`或`[[]]`时触发此警告，当传递至少有1个缺失标签的标签列表时，将在`DataFrame`或`Series`上引发`KeyError`
    ([GH 15747](https://github.com/pandas-dev/pandas/issues/15747))。
- en: '[PRE148]'
  id: totrans-995
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: Previous behavior
  id: totrans-996
  prefs: []
  type: TYPE_NORMAL
  zh: 先前的行为
- en: '[PRE149]'
  id: totrans-997
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: Current behavior
  id: totrans-998
  prefs: []
  type: TYPE_NORMAL
  zh: 当前行为
- en: '[PRE150]'
  id: totrans-999
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: The idiomatic way to achieve selecting potentially not-found elements is via
    `.reindex()`
  id: totrans-1000
  prefs: []
  type: TYPE_NORMAL
  zh: 实现选择可能未找到的元素的惯用方法是通过`.reindex()`。
- en: '[PRE151]'
  id: totrans-1001
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: Selection with all keys found is unchanged.
  id: totrans-1002
  prefs: []
  type: TYPE_NORMAL
  zh: 使用所有找到的键的选择未更改。
- en: '[PRE152]'
  id: totrans-1003
  prefs: []
  type: TYPE_PRE
  zh: '[PRE152]'
- en: '### NA naming changes'
  id: totrans-1004
  prefs: []
  type: TYPE_NORMAL
  zh: '### NA命名更改'
- en: In order to promote more consistency among the pandas API, we have added additional
    top-level functions [`isna()`](../reference/api/pandas.isna.html#pandas.isna "pandas.isna")
    and [`notna()`](../reference/api/pandas.notna.html#pandas.notna "pandas.notna")
    that are aliases for [`isnull()`](../reference/api/pandas.isnull.html#pandas.isnull
    "pandas.isnull") and [`notnull()`](../reference/api/pandas.notnull.html#pandas.notnull
    "pandas.notnull"). The naming scheme is now more consistent with methods like
    `.dropna()` and `.fillna()`. Furthermore in all cases where `.isnull()` and `.notnull()`
    methods are defined, these have additional methods named `.isna()` and `.notna()`,
    these are included for classes `Categorical`, `Index`, `Series`, and `DataFrame`.
    ([GH 15001](https://github.com/pandas-dev/pandas/issues/15001)).
  id: totrans-1005
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在pandas API中提升更多一致性，我们添加了额外的顶级函数[`isna()`](../reference/api/pandas.isna.html#pandas.isna
    "pandas.isna")和[`notna()`](../reference/api/pandas.notna.html#pandas.notna "pandas.notna")，它们是[`isnull()`](../reference/api/pandas.isnull.html#pandas.isnull
    "pandas.isnull")和[`notnull()`](../reference/api/pandas.notnull.html#pandas.notnull
    "pandas.notnull")的别名。现在的命名方案与`.dropna()`和`.fillna()`等方法更一致。此外，在定义了`.isnull()`和`.notnull()`方法的所有情况下，这些方法都有额外的名为`.isna()`和`.notna()`的方法，这些方法包括类`Categorical`、`Index`、`Series`和`DataFrame`。([GH
    15001](https://github.com/pandas-dev/pandas/issues/15001))。
- en: The configuration option `pd.options.mode.use_inf_as_null` is deprecated, and
    `pd.options.mode.use_inf_as_na` is added as a replacement.
  id: totrans-1006
  prefs: []
  type: TYPE_NORMAL
  zh: 配置选项`pd.options.mode.use_inf_as_null`已被弃用，添加了`pd.options.mode.use_inf_as_na`作为替代。
- en: '### Iteration of Series/Index will now return Python scalars'
  id: totrans-1007
  prefs: []
  type: TYPE_NORMAL
  zh: '### 现在Series/Index的迭代将返回Python标量'
- en: Previously, when using certain iteration methods for a `Series` with dtype `int`
    or `float`, you would receive a `numpy` scalar, e.g. a `np.int64`, rather than
    a Python `int`. Issue ([GH 10904](https://github.com/pandas-dev/pandas/issues/10904))
    corrected this for `Series.tolist()` and `list(Series)`. This change makes all
    iteration methods consistent, in particular, for `__iter__()` and `.map()`; note
    that this only affects int/float dtypes. ([GH 13236](https://github.com/pandas-dev/pandas/issues/13236),
    [GH 13258](https://github.com/pandas-dev/pandas/issues/13258), [GH 14216](https://github.com/pandas-dev/pandas/issues/14216)).
  id: totrans-1008
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，当对 dtype 为`int`或`float`的`Series`使用某些迭代方法时，会收到一个`numpy`标量，例如`np.int64`，而不是
    Python 的`int`。问题 ([GH 10904](https://github.com/pandas-dev/pandas/issues/10904))
    为`Series.tolist()`和`list(Series)`进行了修正。此更改使所有迭代方法一致，特别是对于`__iter__()`和`.map()`；请注意，这仅影响
    int/float dtype。 ([GH 13236](https://github.com/pandas-dev/pandas/issues/13236),
    [GH 13258](https://github.com/pandas-dev/pandas/issues/13258), [GH 14216](https://github.com/pandas-dev/pandas/issues/14216))。
- en: '[PRE153]'
  id: totrans-1009
  prefs: []
  type: TYPE_PRE
  zh: '[PRE153]'
- en: 'Previously:'
  id: totrans-1010
  prefs: []
  type: TYPE_NORMAL
  zh: 以前：
- en: '[PRE154]'
  id: totrans-1011
  prefs: []
  type: TYPE_PRE
  zh: '[PRE154]'
- en: 'New behavior:'
  id: totrans-1012
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为：
- en: '[PRE155]'
  id: totrans-1013
  prefs: []
  type: TYPE_PRE
  zh: '[PRE155]'
- en: Furthermore this will now correctly box the results of iteration for [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") as well.
  id: totrans-1014
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，这现在还将正确地对[`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict")的迭代结果进行包装。
- en: '[PRE156]'
  id: totrans-1015
  prefs: []
  type: TYPE_PRE
  zh: '[PRE156]'
- en: 'Previously:'
  id: totrans-1016
  prefs: []
  type: TYPE_NORMAL
  zh: 以前：
- en: '[PRE157]'
  id: totrans-1017
  prefs: []
  type: TYPE_PRE
  zh: '[PRE157]'
- en: 'New behavior:'
  id: totrans-1018
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为：
- en: '[PRE158]'
  id: totrans-1019
  prefs: []
  type: TYPE_PRE
  zh: '[PRE158]'
- en: '### Indexing with a Boolean Index'
  id: totrans-1020
  prefs: []
  type: TYPE_NORMAL
  zh: '### 使用布尔索引进行索引'
- en: Previously when passing a boolean `Index` to `.loc`, if the index of the `Series/DataFrame`
    had `boolean` labels, you would get a label based selection, potentially duplicating
    result labels, rather than a boolean indexing selection (where `True` selects
    elements), this was inconsistent how a boolean numpy array indexed. The new behavior
    is to act like a boolean numpy array indexer. ([GH 17738](https://github.com/pandas-dev/pandas/issues/17738))
  id: totrans-1021
  prefs: []
  type: TYPE_NORMAL
  zh: 以前当将布尔值`Index`传递给`.loc`时，如果`Series/DataFrame`的索引具有`boolean`标签，则会获得基于标签的选择，而不是布尔索引选择（其中`True`选择元素），这与布尔
    numpy 数组索引的方式不一致。新行为是像布尔 numpy 数组索引器一样运行。 ([GH 17738](https://github.com/pandas-dev/pandas/issues/17738))
- en: 'Previous behavior:'
  id: totrans-1022
  prefs: []
  type: TYPE_NORMAL
  zh: 先前的行为：
- en: '[PRE159]'
  id: totrans-1023
  prefs: []
  type: TYPE_PRE
  zh: '[PRE159]'
- en: '[PRE160]'
  id: totrans-1024
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: Current behavior
  id: totrans-1025
  prefs: []
  type: TYPE_NORMAL
  zh: 当前行为
- en: '[PRE161]'
  id: totrans-1026
  prefs: []
  type: TYPE_PRE
  zh: '[PRE161]'
- en: Furthermore, previously if you had an index that was non-numeric (e.g. strings),
    then a boolean Index would raise a `KeyError`. This will now be treated as a boolean
    indexer.
  id: totrans-1027
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，以前如果你有一个非数字的索引（例如字符串），那么布尔索引会引发一个`KeyError`。现在将把它视为布尔索引。
- en: 'Previously behavior:'
  id: totrans-1028
  prefs: []
  type: TYPE_NORMAL
  zh: 以前行为：
- en: '[PRE162]'
  id: totrans-1029
  prefs: []
  type: TYPE_PRE
  zh: '[PRE162]'
- en: '[PRE163]'
  id: totrans-1030
  prefs: []
  type: TYPE_PRE
  zh: '[PRE163]'
- en: Current behavior
  id: totrans-1031
  prefs: []
  type: TYPE_NORMAL
  zh: 当前行为
- en: '[PRE164]'
  id: totrans-1032
  prefs: []
  type: TYPE_PRE
  zh: '[PRE164]'
- en: '### `PeriodIndex` resampling'
  id: totrans-1033
  prefs: []
  type: TYPE_NORMAL
  zh: '### `PeriodIndex` 重新采样'
- en: In previous versions of pandas, resampling a `Series`/`DataFrame` indexed by
    a `PeriodIndex` returned a `DatetimeIndex` in some cases ([GH 12884](https://github.com/pandas-dev/pandas/issues/12884)).
    Resampling to a multiplied frequency now returns a `PeriodIndex` ([GH 15944](https://github.com/pandas-dev/pandas/issues/15944)).
    As a minor enhancement, resampling a `PeriodIndex` can now handle `NaT` values
    ([GH 13224](https://github.com/pandas-dev/pandas/issues/13224))
  id: totrans-1034
  prefs: []
  type: TYPE_NORMAL
  zh: 在 pandas 的早期版本中，对由`PeriodIndex`索引的`Series`/`DataFrame`进行重新采样，在某些情况下返回一个`DatetimeIndex`
    ([GH 12884](https://github.com/pandas-dev/pandas/issues/12884))。现在重新采样为倍频率将返回一个`PeriodIndex`
    ([GH 15944](https://github.com/pandas-dev/pandas/issues/15944))。作为一个小的增强，现在重新采样`PeriodIndex`可以处理`NaT`值
    ([GH 13224](https://github.com/pandas-dev/pandas/issues/13224))
- en: 'Previous behavior:'
  id: totrans-1035
  prefs: []
  type: TYPE_NORMAL
  zh: 先前的行为：
- en: '[PRE165]'
  id: totrans-1036
  prefs: []
  type: TYPE_PRE
  zh: '[PRE165]'
- en: 'New behavior:'
  id: totrans-1037
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为：
- en: '[PRE166]'
  id: totrans-1038
  prefs: []
  type: TYPE_PRE
  zh: '[PRE166]'
- en: Upsampling and calling `.ohlc()` previously returned a `Series`, basically identical
    to calling `.asfreq()`. OHLC upsampling now returns a DataFrame with columns `open`,
    `high`, `low` and `close` ([GH 13083](https://github.com/pandas-dev/pandas/issues/13083)).
    This is consistent with downsampling and `DatetimeIndex` behavior.
  id: totrans-1039
  prefs: []
  type: TYPE_NORMAL
  zh: 上采样并调用`.ohlc()`之前返回一个`Series`，基本上与调用`.asfreq()`相同。OHLC 上采样现在返回一个具有列`open`、`high`、`low`和`close`的
    DataFrame ([GH 13083](https://github.com/pandas-dev/pandas/issues/13083))。这与下采样和`DatetimeIndex`的行为一致。
- en: 'Previous behavior:'
  id: totrans-1040
  prefs: []
  type: TYPE_NORMAL
  zh: 以前行为：
- en: '[PRE167]'
  id: totrans-1041
  prefs: []
  type: TYPE_PRE
  zh: '[PRE167]'
- en: 'New behavior:'
  id: totrans-1042
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为：
- en: '[PRE168]'
  id: totrans-1043
  prefs: []
  type: TYPE_PRE
  zh: '[PRE168]'
- en: '### Improved error handling during item assignment in pd.eval'
  id: totrans-1044
  prefs: []
  type: TYPE_NORMAL
  zh: '### 在 pd.eval 中改进的错误处理'
- en: '[`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval") will
    now raise a `ValueError` when item assignment malfunctions, or inplace operations
    are specified, but there is no item assignment in the expression ([GH 16732](https://github.com/pandas-dev/pandas/issues/16732))'
  id: totrans-1045
  prefs: []
  type: TYPE_NORMAL
  zh: '[`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval") 现在将在项分配失效或指定了原地操作但表达式中没有项分配时引发`ValueError`
    ([GH 16732](https://github.com/pandas-dev/pandas/issues/16732))'
- en: '[PRE169]'
  id: totrans-1046
  prefs: []
  type: TYPE_PRE
  zh: '[PRE169]'
- en: 'Previously, if you attempted the following expression, you would get a not
    very helpful error message:'
  id: totrans-1047
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，如果尝试以下表达式，则会收到一个不是很有用的错误消息：
- en: '[PRE170]'
  id: totrans-1048
  prefs: []
  type: TYPE_PRE
  zh: '[PRE170]'
- en: 'This is a very long way of saying numpy arrays don’t support string-item indexing.
    With this change, the error message is now this:'
  id: totrans-1049
  prefs: []
  type: TYPE_NORMAL
  zh: 这是说 numpy 数组不支持字符串项索引的一种很长的方式。随着这个改变，错误消息现在是这样的：
- en: '[PRE171]'
  id: totrans-1050
  prefs: []
  type: TYPE_PRE
  zh: '[PRE171]'
- en: 'It also used to be possible to evaluate expressions inplace, even if there
    was no item assignment:'
  id: totrans-1051
  prefs: []
  type: TYPE_NORMAL
  zh: 即使没有项目赋值，也曾经可以对表达式进行原地评估：
- en: '[PRE172]'
  id: totrans-1052
  prefs: []
  type: TYPE_PRE
  zh: '[PRE172]'
- en: 'However, this input does not make much sense because the output is not being
    assigned to the target. Now, a `ValueError` will be raised when such an input
    is passed in:'
  id: totrans-1053
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这个输入并没有太多意义，因为输出没有被分配给目标。现在，当传入这样的输入时，将会引发`ValueError`：
- en: '[PRE173]'
  id: totrans-1054
  prefs: []
  type: TYPE_PRE
  zh: '[PRE173]'
- en: '### Dtype conversions'
  id: totrans-1055
  prefs: []
  type: TYPE_NORMAL
  zh: '### Dtype 转换'
- en: Previously assignments, `.where()` and `.fillna()` with a `bool` assignment,
    would coerce to same the type (e.g. int / float), or raise for datetimelikes.
    These will now preserve the bools with `object` dtypes. ([GH 16821](https://github.com/pandas-dev/pandas/issues/16821)).
  id: totrans-1056
  prefs: []
  type: TYPE_NORMAL
  zh: 先前的分配、`.where()`和`.fillna()`与`bool`赋值，会强制转换为相同的类型（例如 int / float），或对于 datetimelikes
    会引发错误。这些现在将保留具有`object` dtypes的布尔值。 ([GH 16821](https://github.com/pandas-dev/pandas/issues/16821)).
- en: '[PRE174]'
  id: totrans-1057
  prefs: []
  type: TYPE_PRE
  zh: '[PRE174]'
- en: '[PRE175]'
  id: totrans-1058
  prefs: []
  type: TYPE_PRE
  zh: '[PRE175]'
- en: New behavior
  id: totrans-1059
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为
- en: '[PRE176]'
  id: totrans-1060
  prefs: []
  type: TYPE_PRE
  zh: '[PRE176]'
- en: Previously, as assignment to a datetimelike with a non-datetimelike would coerce
    the non-datetime-like item being assigned ([GH 14145](https://github.com/pandas-dev/pandas/issues/14145)).
  id: totrans-1061
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，对具有非 datetimelike 的 datetimelike 进行赋值会强制转换为正在分配的非 datetimelike 项 ([GH 14145](https://github.com/pandas-dev/pandas/issues/14145)).
- en: '[PRE177]'
  id: totrans-1062
  prefs: []
  type: TYPE_PRE
  zh: '[PRE177]'
- en: '[PRE178]'
  id: totrans-1063
  prefs: []
  type: TYPE_PRE
  zh: '[PRE178]'
- en: These now coerce to `object` dtype.
  id: totrans-1064
  prefs: []
  type: TYPE_NORMAL
  zh: 这些现在会强制转换为`object` dtype。
- en: '[PRE179]'
  id: totrans-1065
  prefs: []
  type: TYPE_PRE
  zh: '[PRE179]'
- en: Inconsistent behavior in `.where()` with datetimelikes which would raise rather
    than coerce to `object` ([GH 16402](https://github.com/pandas-dev/pandas/issues/16402))
  id: totrans-1066
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.where()`中的datetimelike存在不一致的行为，会引发而不是强制转换为`object` ([GH 16402](https://github.com/pandas-dev/pandas/issues/16402))'
- en: Bug in assignment against `int64` data with `np.ndarray` with `float64` dtype
    may keep `int64` dtype ([GH 14001](https://github.com/pandas-dev/pandas/issues/14001))
  id: totrans-1067
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对`float64` dtype 的`np.ndarray`进行`int64`数据的赋值可能会保持`int64` dtype ([GH 14001](https://github.com/pandas-dev/pandas/issues/14001))
- en: '### MultiIndex constructor with a single level'
  id: totrans-1068
  prefs: []
  type: TYPE_NORMAL
  zh: '### 单级别的 MultiIndex 构造函数'
- en: The `MultiIndex` constructors no longer squeezes a MultiIndex with all length-one
    levels down to a regular `Index`. This affects all the `MultiIndex` constructors.
    ([GH 17178](https://github.com/pandas-dev/pandas/issues/17178))
  id: totrans-1069
  prefs: []
  type: TYPE_NORMAL
  zh: '`MultiIndex` 构造函数不再将具有所有长度为一级别的 MultiIndex 压缩为常规`Index`。这会影响到所有`MultiIndex`
    构造函数。 ([GH 17178](https://github.com/pandas-dev/pandas/issues/17178))'
- en: 'Previous behavior:'
  id: totrans-1070
  prefs: []
  type: TYPE_NORMAL
  zh: '先前的行为:'
- en: '[PRE180]'
  id: totrans-1071
  prefs: []
  type: TYPE_PRE
  zh: '[PRE180]'
- en: 'Length 1 levels are no longer special-cased. They behave exactly as if you
    had length 2+ levels, so a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") is always returned from all of the `MultiIndex` constructors:'
  id: totrans-1072
  prefs: []
  type: TYPE_NORMAL
  zh: '长度为 1 的级别不再被特殊处理。它们的行为与长度为 2+ 级别的行为完全相同，因此所有`MultiIndex` 构造函数都将返回[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"):'
- en: '[PRE181]'
  id: totrans-1073
  prefs: []
  type: TYPE_PRE
  zh: '[PRE181]'
- en: '### UTC localization with Series'
  id: totrans-1074
  prefs: []
  type: TYPE_NORMAL
  zh: '### Series 的 UTC 本地化'
- en: Previously, [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") did not localize datetime `Series` data when `utc=True`
    was passed. Now, [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") will correctly localize `Series` with a `datetime64[ns,
    UTC]` dtype to be consistent with how list-like and `Index` data are handled.
    ([GH 6415](https://github.com/pandas-dev/pandas/issues/6415)).
  id: totrans-1075
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，当传递`utc=True`时，[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime")不会对 datetime `Series` 数据进行本地化。现在，当`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime")将正确地对 `datetime64[ns, UTC]` dtype 的`Series` 进行本地化，以与处理类似列表和`Index`数据的方式保持一致。
    ([GH 6415](https://github.com/pandas-dev/pandas/issues/6415)).
- en: Previous behavior
  id: totrans-1076
  prefs: []
  type: TYPE_NORMAL
  zh: 先前的行为
- en: '[PRE182]'
  id: totrans-1077
  prefs: []
  type: TYPE_PRE
  zh: '[PRE182]'
- en: '[PRE183]'
  id: totrans-1078
  prefs: []
  type: TYPE_PRE
  zh: '[PRE183]'
- en: New behavior
  id: totrans-1079
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为
- en: '[PRE184]'
  id: totrans-1080
  prefs: []
  type: TYPE_PRE
  zh: '[PRE184]'
- en: Additionally, DataFrames with datetime columns that were parsed by [`read_sql_table()`](../reference/api/pandas.read_sql_table.html#pandas.read_sql_table
    "pandas.read_sql_table") and [`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query") will also be localized to UTC only if the original SQL
    columns were timezone aware datetime columns.
  id: totrans-1081
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，由[`read_sql_table()`](../reference/api/pandas.read_sql_table.html#pandas.read_sql_table
    "pandas.read_sql_table")和[`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query")解析的具有 datetime 列的 DataFrame，如果原始 SQL 列是时区感知的 datetime
    列，则也将被本地化为 UTC。
- en: '### Consistency of range functions'
  id: totrans-1082
  prefs: []
  type: TYPE_NORMAL
  zh: '### 范围函数的一致性'
- en: 'In previous versions, there were some inconsistencies between the various range
    functions: [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range"), [`bdate_range()`](../reference/api/pandas.bdate_range.html#pandas.bdate_range
    "pandas.bdate_range"), [`period_range()`](../reference/api/pandas.period_range.html#pandas.period_range
    "pandas.period_range"), [`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range"), and [`interval_range()`](../reference/api/pandas.interval_range.html#pandas.interval_range
    "pandas.interval_range"). ([GH 17471](https://github.com/pandas-dev/pandas/issues/17471)).'
  id: totrans-1083
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的版本中，各种范围函数之间存在一些不一致性：[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range")、[`bdate_range()`](../reference/api/pandas.bdate_range.html#pandas.bdate_range
    "pandas.bdate_range")、[`period_range()`](../reference/api/pandas.period_range.html#pandas.period_range
    "pandas.period_range")、[`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range")和[`interval_range()`](../reference/api/pandas.interval_range.html#pandas.interval_range
    "pandas.interval_range")。 ([GH 17471](https://github.com/pandas-dev/pandas/issues/17471))。
- en: One of the inconsistent behaviors occurred when the `start`, `end` and `period`
    parameters were all specified, potentially leading to ambiguous ranges. When all
    three parameters were passed, `interval_range` ignored the `period` parameter,
    `period_range` ignored the `end` parameter, and the other range functions raised.
    To promote consistency among the range functions, and avoid potentially ambiguous
    ranges, `interval_range` and `period_range` will now raise when all three parameters
    are passed.
  id: totrans-1084
  prefs: []
  type: TYPE_NORMAL
  zh: 当`start`、`end`和`period`参数都指定时，出现了不一致的行为，可能导致范围模糊不清。当传递了所有三个参数时，`interval_range`忽略了`period`参数，`period_range`忽略了`end`参数，而其他范围函数则会引发错误。为了促进范围函数之间的一致性，并避免潜在的模糊范围，当传递了所有三个参数时，`interval_range`和`period_range`现在将引发错误。
- en: 'Previous behavior:'
  id: totrans-1085
  prefs: []
  type: TYPE_NORMAL
  zh: 以前的行为：
- en: '[PRE185]'
  id: totrans-1086
  prefs: []
  type: TYPE_PRE
  zh: '[PRE185]'
- en: 'New behavior:'
  id: totrans-1087
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为：
- en: '[PRE186]'
  id: totrans-1088
  prefs: []
  type: TYPE_PRE
  zh: '[PRE186]'
- en: Additionally, the endpoint parameter `end` was not included in the intervals
    produced by `interval_range`. However, all other range functions include `end`
    in their output. To promote consistency among the range functions, `interval_range`
    will now include `end` as the right endpoint of the final interval, except if
    `freq` is specified in a way which skips `end`.
  id: totrans-1089
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，`interval_range`产生的间隔中未包括端点参数`end`。然而，所有其他范围函数都包括`end`在它们的输出中。为了促进范围函数之间的一致性，`interval_range`现在将`end`包括在最后一个间隔的右端点中，除非以一种跳过`end`的方式指定了`freq`。
- en: 'Previous behavior:'
  id: totrans-1090
  prefs: []
  type: TYPE_NORMAL
  zh: 以前的行为：
- en: '[PRE187]'
  id: totrans-1091
  prefs: []
  type: TYPE_PRE
  zh: '[PRE187]'
- en: 'New behavior:'
  id: totrans-1092
  prefs: []
  type: TYPE_NORMAL
  zh: 新行为：
- en: '[PRE188]'
  id: totrans-1093
  prefs: []
  type: TYPE_PRE
  zh: '[PRE188]'
- en: '### No automatic Matplotlib converters'
  id: totrans-1094
  prefs: []
  type: TYPE_NORMAL
  zh: '### 没有自动的Matplotlib转换器'
- en: 'pandas no longer registers our `date`, `time`, `datetime`, `datetime64`, and
    `Period` converters with matplotlib when pandas is imported. Matplotlib plot methods
    (`plt.plot`, `ax.plot`, …), will not nicely format the x-axis for `DatetimeIndex`
    or `PeriodIndex` values. You must explicitly register these methods:'
  id: totrans-1095
  prefs: []
  type: TYPE_NORMAL
  zh: 当pandas被导入时，pandas不再注册我们的`date`、`time`、`datetime`、`datetime64`和`Period`转换器到matplotlib。Matplotlib绘图方法（`plt.plot`、`ax.plot`等）不会对`DatetimeIndex`或`PeriodIndex`值的x轴进行漂亮的格式化。您必须显式注册这些方法：
- en: pandas built-in `Series.plot` and `DataFrame.plot` *will* register these converters
    on first-use ([GH 17710](https://github.com/pandas-dev/pandas/issues/17710)).
  id: totrans-1096
  prefs: []
  type: TYPE_NORMAL
  zh: pandas内置的`Series.plot`和`DataFrame.plot`在首次使用时*会*注册这些转换器 ([GH 17710](https://github.com/pandas-dev/pandas/issues/17710))。
- en: Note
  id: totrans-1097
  prefs: []
  type: TYPE_NORMAL
  zh: 注：
- en: This change has been temporarily reverted in pandas 0.21.1, for more details
    see [here](v0.21.1.html#whatsnew-0211-converters).
  id: totrans-1098
  prefs: []
  type: TYPE_NORMAL
  zh: 这个改变在pandas 0.21.1中暂时被撤销，更多详情请参见[这里](v0.21.1.html#whatsnew-0211-converters)。
- en: '### Other API changes'
  id: totrans-1099
  prefs: []
  type: TYPE_NORMAL
  zh: '### 其他API变更'
- en: The Categorical constructor no longer accepts a scalar for the `categories`
    keyword. ([GH 16022](https://github.com/pandas-dev/pandas/issues/16022))
  id: totrans-1100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Categorical构造函数不再接受`categories`关键字的标量。 ([GH 16022](https://github.com/pandas-dev/pandas/issues/16022))
- en: Accessing a non-existent attribute on a closed `HDFStore` will now raise an
    `AttributeError` rather than a `ClosedFileError` ([GH 16301](https://github.com/pandas-dev/pandas/issues/16301))
  id: totrans-1101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在关闭的`HDFStore`上访问不存在的属性将引发`AttributeError`，而不是`ClosedFileError` ([GH 16301](https://github.com/pandas-dev/pandas/issues/16301))
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now issues a `UserWarning` if the `names` parameter contains duplicates ([GH 17095](https://github.com/pandas-dev/pandas/issues/17095))'
  id: totrans-1102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")现在如果`names`参数包含重复项，会发出`UserWarning`
    ([GH 17095](https://github.com/pandas-dev/pandas/issues/17095))'
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now treats `''null''` and `''n/a''` strings as missing values by default ([GH
    16471](https://github.com/pandas-dev/pandas/issues/16471), [GH 16078](https://github.com/pandas-dev/pandas/issues/16078))'
  id: totrans-1103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")现在默认将`''null''`和`''n/a''`字符串视为缺失值
    ([GH 16471](https://github.com/pandas-dev/pandas/issues/16471), [GH 16078](https://github.com/pandas-dev/pandas/issues/16078))'
- en: '`pandas.HDFStore`’s string representation is now faster and less detailed.
    For the previous behavior, use `pandas.HDFStore.info()`. ([GH 16503](https://github.com/pandas-dev/pandas/issues/16503)).'
  id: totrans-1104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas.HDFStore`的字符串表示现在更快且更简洁。要保留以前的行为，请使用`pandas.HDFStore.info()`。([GH 16503](https://github.com/pandas-dev/pandas/issues/16503)).'
- en: Compression defaults in HDF stores now follow pytables standards. Default is
    no compression and if `complib` is missing and `complevel` > 0 `zlib` is used
    ([GH 15943](https://github.com/pandas-dev/pandas/issues/15943))
  id: totrans-1105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HDF存储中的压缩默认值现在遵循pytables标准。默认情况下不压缩，如果`complib`缺失且`complevel` > 0，则使用`zlib`
    ([GH 15943](https://github.com/pandas-dev/pandas/issues/15943))
- en: '`Index.get_indexer_non_unique()` now returns a ndarray indexer rather than
    an `Index`; this is consistent with `Index.get_indexer()` ([GH 16819](https://github.com/pandas-dev/pandas/issues/16819))'
  id: totrans-1106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Index.get_indexer_non_unique()`现在返回一个ndarray索引器，而不是一个`Index`；这与`Index.get_indexer()`保持一致
    ([GH 16819](https://github.com/pandas-dev/pandas/issues/16819))'
- en: Removed the `@slow` decorator from `pandas._testing`, which caused issues for
    some downstream packages’ test suites. Use `@pytest.mark.slow` instead, which
    achieves the same thing ([GH 16850](https://github.com/pandas-dev/pandas/issues/16850))
  id: totrans-1107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`pandas._testing`中删除了`@slow`装饰器，这导致一些下游软件包的测试套件出现问题。改用`@pytest.mark.slow`，它可以实现相同的功能
    ([GH 16850](https://github.com/pandas-dev/pandas/issues/16850))
- en: Moved definition of `MergeError` to the `pandas.errors` module.
  id: totrans-1108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将`MergeError`的定义移动到`pandas.errors`模块中。
- en: The signature of [`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") and [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") has been changed from `set_axis(axis, labels)` to
    `set_axis(labels, axis=0)`, for consistency with the rest of the API. The old
    signature is deprecated and will show a `FutureWarning` ([GH 14636](https://github.com/pandas-dev/pandas/issues/14636))
  id: totrans-1109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis")和[`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis")的签名已从`set_axis(axis, labels)`更改为`set_axis(labels,
    axis=0)`，以保持与API的一致性。旧的签名已被弃用，并将显示`FutureWarning` ([GH 14636](https://github.com/pandas-dev/pandas/issues/14636))'
- en: '[`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin") and [`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax") will now raise a `TypeError` when used with `object` dtypes,
    instead of a `ValueError` ([GH 13595](https://github.com/pandas-dev/pandas/issues/13595))'
  id: totrans-1110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin")和[`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax")现在在与`object` dtypes一起使用时会引发`TypeError`，而不是`ValueError`
    ([GH 13595](https://github.com/pandas-dev/pandas/issues/13595))'
- en: '[`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    is now immutable, and will now raise an `AttributeError` when a user tries to
    assign a new value to the `ordinal` or `freq` attributes ([GH 17116](https://github.com/pandas-dev/pandas/issues/17116)).'
  id: totrans-1111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")现在是不可变的，当用户尝试为`ordinal`或`freq`属性分配新值时，将引发`AttributeError`
    ([GH 17116](https://github.com/pandas-dev/pandas/issues/17116)).'
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when passed a tz-aware `origin=` kwarg will now raise a
    more informative `ValueError` rather than a `TypeError` ([GH 16842](https://github.com/pandas-dev/pandas/issues/16842))'
  id: totrans-1112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime")在传递了tz-aware `origin=` kwarg时，现在会引发更具信息性的`ValueError`而不是`TypeError`
    ([GH 16842](https://github.com/pandas-dev/pandas/issues/16842))'
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") now raises a `ValueError` when format includes `%W` or `%U`
    without also including day of the week and calendar year ([GH 16774](https://github.com/pandas-dev/pandas/issues/16774))'
  id: totrans-1113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime")现在在格式中包含`%W`或`%U`但没有包含星期几和日历年时会引发`ValueError` ([GH 16774](https://github.com/pandas-dev/pandas/issues/16774))'
- en: Renamed non-functional `index` to `index_col` in [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") to improve API consistency ([GH 16342](https://github.com/pandas-dev/pandas/issues/16342))
  id: totrans-1114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") 中将非功能性的 `index` 重命名为 `index_col`，以提高 API 的一致性（[GH 16342](https://github.com/pandas-dev/pandas/issues/16342)）。
- en: Bug in [`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") caused boolean labels `False` and `True` to be treated
    as labels 0 and 1 respectively when dropping indices from a numeric index. This
    will now raise a ValueError ([GH 16877](https://github.com/pandas-dev/pandas/issues/16877))
  id: totrans-1115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 [`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") 中的错误导致布尔标签 `False` 和 `True` 被视为分别从数字索引中删除索引 0 和 1。现在将引发
    ValueError 错误（[GH 16877](https://github.com/pandas-dev/pandas/issues/16877)）。
- en: Restricted DateOffset keyword arguments. Previously, `DateOffset` subclasses
    allowed arbitrary keyword arguments which could lead to unexpected behavior. Now,
    only valid arguments will be accepted. ([GH 17176](https://github.com/pandas-dev/pandas/issues/17176)).
  id: totrans-1116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制了 DateOffset 关键字参数。以前，`DateOffset` 子类允许任意关键字参数，这可能导致意外行为。现在，只有有效的参数将被接受（[GH
    17176](https://github.com/pandas-dev/pandas/issues/17176)）。
- en: '## Deprecations'
  id: totrans-1117
  prefs: []
  type: TYPE_NORMAL
  zh: '## 弃用'
- en: '`DataFrame.from_csv()` and `Series.from_csv()` have been deprecated in favor
    of [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    ([GH 4191](https://github.com/pandas-dev/pandas/issues/4191))'
  id: totrans-1118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.from_csv()` 和 `Series.from_csv()` 已经弃用，改为使用 [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")（[GH 4191](https://github.com/pandas-dev/pandas/issues/4191)）。'
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") has deprecated `sheetname` in favor of `sheet_name` for consistency
    with `.to_excel()` ([GH 10559](https://github.com/pandas-dev/pandas/issues/10559)).'
  id: totrans-1119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") 已经弃用了 `sheetname`，改为使用 `sheet_name` 以保持与 `.to_excel()` 的一致性（[GH
    10559](https://github.com/pandas-dev/pandas/issues/10559)）。'
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") has deprecated `parse_cols` in favor of `usecols` for consistency
    with [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    ([GH 4988](https://github.com/pandas-dev/pandas/issues/4988))'
  id: totrans-1120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") 已经弃用了 `parse_cols`，改为使用 `usecols` 以保持与 [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") 的一致性（[GH 4988](https://github.com/pandas-dev/pandas/issues/4988)）。'
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    has deprecated the `tupleize_cols` argument. Column tuples will always be converted
    to a `MultiIndex` ([GH 17060](https://github.com/pandas-dev/pandas/issues/17060))'
  id: totrans-1121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    已经弃用了 `tupleize_cols` 参数。列元组将始终转换为 `MultiIndex`（[GH 17060](https://github.com/pandas-dev/pandas/issues/17060)）。'
- en: '[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") has deprecated the `tupleize_cols` argument. MultiIndex
    columns will be always written as rows in the CSV file ([GH 17060](https://github.com/pandas-dev/pandas/issues/17060))'
  id: totrans-1122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") 已经弃用了 `tupleize_cols` 参数。MultiIndex 列将始终以行的形式写入 CSV
    文件中（[GH 17060](https://github.com/pandas-dev/pandas/issues/17060)）。'
- en: The `convert` parameter has been deprecated in the `.take()` method, as it was
    not being respected ([GH 16948](https://github.com/pandas-dev/pandas/issues/16948))
  id: totrans-1123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.take()` 方法中的 `convert` 参数已被弃用，因为它没有被遵守（[GH 16948](https://github.com/pandas-dev/pandas/issues/16948)）。'
- en: '`pd.options.html.border` has been deprecated in favor of `pd.options.display.html.border`
    ([GH 15793](https://github.com/pandas-dev/pandas/issues/15793)).'
  id: totrans-1124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.options.html.border` 已经弃用，改为使用 `pd.options.display.html.border`（[GH 15793](https://github.com/pandas-dev/pandas/issues/15793)）。'
- en: '`SeriesGroupBy.nth()` has deprecated `True` in favor of `''all''` for its kwarg
    `dropna` ([GH 11038](https://github.com/pandas-dev/pandas/issues/11038)).'
  id: totrans-1125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SeriesGroupBy.nth()` 已经弃用 `True`，而是使用了 `dropna` 的关键字参数 `‘all’`（[GH 11038](https://github.com/pandas-dev/pandas/issues/11038)）。'
- en: '`DataFrame.as_blocks()` is deprecated, as this is exposing the internal implementation
    ([GH 17302](https://github.com/pandas-dev/pandas/issues/17302))'
  id: totrans-1126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.as_blocks()` 已经弃用，因为这暴露了内部实现（[GH 17302](https://github.com/pandas-dev/pandas/issues/17302)）。'
- en: '`pd.TimeGrouper` is deprecated in favor of [`pandas.Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper") ([GH 16747](https://github.com/pandas-dev/pandas/issues/16747))'
  id: totrans-1127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.TimeGrouper` 已被弃用，建议使用 [`pandas.Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper") ([GH 16747](https://github.com/pandas-dev/pandas/issues/16747))'
- en: '`cdate_range` has been deprecated in favor of [`bdate_range()`](../reference/api/pandas.bdate_range.html#pandas.bdate_range
    "pandas.bdate_range"), which has gained `weekmask` and `holidays` parameters for
    building custom frequency date ranges. See the [documentation](../user_guide/timeseries.html#timeseries-custom-freq-ranges)
    for more details ([GH 17596](https://github.com/pandas-dev/pandas/issues/17596))'
  id: totrans-1128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cdate_range` 已被弃用，建议使用 [`bdate_range()`](../reference/api/pandas.bdate_range.html#pandas.bdate_range
    "pandas.bdate_range")，它已获得 `weekmask` 和 `holidays` 参数，用于构建自定义频率日期范围。详细信息请参见[文档](../user_guide/timeseries.html#timeseries-custom-freq-ranges)
    ([GH 17596](https://github.com/pandas-dev/pandas/issues/17596))'
- en: passing `categories` or `ordered` kwargs to [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") is deprecated, in favor of passing a [CategoricalDtype](#whatsnew-0210-enhancements-categorical-dtype)
    ([GH 17636](https://github.com/pandas-dev/pandas/issues/17636))
  id: totrans-1129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") 中传递 `categories` 或 `ordered` kwargs 已被弃用，建议传递 [CategoricalDtype](#whatsnew-0210-enhancements-categorical-dtype)
    ([GH 17636](https://github.com/pandas-dev/pandas/issues/17636))
- en: '`.get_value` and `.set_value` on `Series`, `DataFrame`, `Panel`, `SparseSeries`,
    and `SparseDataFrame` are deprecated in favor of using `.iat[]` or `.at[]` accessors
    ([GH 15269](https://github.com/pandas-dev/pandas/issues/15269))'
  id: totrans-1130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series`、`DataFrame`、`Panel`、`SparseSeries` 和 `SparseDataFrame` 上的 `.get_value`
    和 `.set_value` 已被弃用，建议使用 `.iat[]` 或 `.at[]` 访问器 ([GH 15269](https://github.com/pandas-dev/pandas/issues/15269))'
- en: Passing a non-existent column in `.to_excel(..., columns=)` is deprecated and
    will raise a `KeyError` in the future ([GH 17295](https://github.com/pandas-dev/pandas/issues/17295))
  id: totrans-1131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `.to_excel(..., columns=)` 中传递一个不存在的列已被弃用，并将在未来引发 `KeyError` ([GH 17295](https://github.com/pandas-dev/pandas/issues/17295))
- en: '`raise_on_error` parameter to [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where"), [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask"), [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where"), [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask") is deprecated, in favor of `errors=` ([GH 14968](https://github.com/pandas-dev/pandas/issues/14968))'
  id: totrans-1132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`raise_on_error` 参数已被弃用，建议使用 `errors=`，适用于 [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where")、[`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask")、[`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") 和 [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask") ([GH 14968](https://github.com/pandas-dev/pandas/issues/14968))'
- en: Using [`DataFrame.rename_axis()`](../reference/api/pandas.DataFrame.rename_axis.html#pandas.DataFrame.rename_axis
    "pandas.DataFrame.rename_axis") and [`Series.rename_axis()`](../reference/api/pandas.Series.rename_axis.html#pandas.Series.rename_axis
    "pandas.Series.rename_axis") to alter index or column *labels* is now deprecated
    in favor of using `.rename`. `rename_axis` may still be used to alter the name
    of the index or columns ([GH 17833](https://github.com/pandas-dev/pandas/issues/17833)).
  id: totrans-1133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在已弃用使用 [`DataFrame.rename_axis()`](../reference/api/pandas.DataFrame.rename_axis.html#pandas.DataFrame.rename_axis
    "pandas.DataFrame.rename_axis") 和 [`Series.rename_axis()`](../reference/api/pandas.Series.rename_axis.html#pandas.Series.rename_axis
    "pandas.Series.rename_axis") 修改索引或列 *标签*，建议使用 `.rename`。`rename_axis` 仍可用于修改索引或列的名称
    ([GH 17833](https://github.com/pandas-dev/pandas/issues/17833)).
- en: '`reindex_axis()` has been deprecated in favor of [`reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex"). See [here](#whatsnew-0210-enhancements-rename-reindex-axis)
    for more ([GH 17833](https://github.com/pandas-dev/pandas/issues/17833)).'
  id: totrans-1134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`reindex_axis()` 已被弃用，建议使用 [`reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex")。详见[此处](#whatsnew-0210-enhancements-rename-reindex-axis)
    ([GH 17833](https://github.com/pandas-dev/pandas/issues/17833)).'
- en: '### Series.select and DataFrame.select'
  id: totrans-1135
  prefs: []
  type: TYPE_NORMAL
  zh: '### Series.select 和 DataFrame.select'
- en: The `Series.select()` and `DataFrame.select()` methods are deprecated in favor
    of using `df.loc[labels.map(crit)]` ([GH 12401](https://github.com/pandas-dev/pandas/issues/12401))
  id: totrans-1136
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series.select()` 和 `DataFrame.select()` 方法已被弃用，建议使用 `df.loc[labels.map(crit)]`
    ([GH 12401](https://github.com/pandas-dev/pandas/issues/12401))'
- en: '[PRE189]'
  id: totrans-1137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE189]'
- en: '[PRE190]'
  id: totrans-1138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE190]'
- en: '[PRE191]  ### Series.argmax and Series.argmin'
  id: totrans-1139
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE191]  ### Series.argmax 和 Series.argmin'
- en: The behavior of [`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax") and [`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin") have been deprecated in favor of [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax") and [`Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin"), respectively ([GH 16830](https://github.com/pandas-dev/pandas/issues/16830)).
  id: totrans-1140
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax") 和 [`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin") 的行为已弃用，推荐使用 [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax") 和 [`Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin") ([GH 16830](https://github.com/pandas-dev/pandas/issues/16830))。'
- en: For compatibility with NumPy arrays, `pd.Series` implements `argmax` and `argmin`.
    Since pandas 0.13.0, `argmax` has been an alias for [`pandas.Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax"), and `argmin` has been an alias for [`pandas.Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin"). They return the *label* of the maximum or minimum, rather
    than the *position*.
  id: totrans-1141
  prefs: []
  type: TYPE_NORMAL
  zh: 为了与 NumPy 数组兼容，`pd.Series` 实现了 `argmax` 和 `argmin`。自 pandas 0.13.0 起，`argmax`
    成为 [`pandas.Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax") 的别名，`argmin` 成为 [`pandas.Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin") 的别名。它们返回的是*标签*，而不是*位置*。
- en: 'We’ve deprecated the current behavior of `Series.argmax` and `Series.argmin`.
    Using either of these will emit a `FutureWarning`. Use [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax") if you want the label of the maximum. Use `Series.values.argmax()`
    if you want the position of the maximum. Likewise for the minimum. In a future
    release `Series.argmax` and `Series.argmin` will return the position of the maximum
    or minimum.  ### Series.select and DataFrame.select'
  id: totrans-1142
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已弃用了 `Series.argmax` 和 `Series.argmin` 的当前行为。使用其中任何一个将会发出 `FutureWarning`。如果你想要最大值的标签，请使用
    [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax")。如果你想要最大值的位置，请使用 `Series.values.argmax()`。最小值同理。在未来的发布中，`Series.argmax`
    和 `Series.argmin` 将返回最大值或最小值的位置。### Series.select 和 DataFrame.select
- en: The `Series.select()` and `DataFrame.select()` methods are deprecated in favor
    of using `df.loc[labels.map(crit)]` ([GH 12401](https://github.com/pandas-dev/pandas/issues/12401))
  id: totrans-1143
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series.select()` 和 `DataFrame.select()` 方法已弃用，推荐使用 `df.loc[labels.map(crit)]`
    ([GH 12401](https://github.com/pandas-dev/pandas/issues/12401))'
- en: '[PRE192]'
  id: totrans-1144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE192]'
- en: '[PRE193]'
  id: totrans-1145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE193]'
- en: '[PRE194]'
  id: totrans-1146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE194]'
- en: '### Series.argmax and Series.argmin'
  id: totrans-1147
  prefs: []
  type: TYPE_NORMAL
  zh: '### Series.argmax 和 Series.argmin'
- en: The behavior of [`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax") and [`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin") have been deprecated in favor of [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax") and [`Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin"), respectively ([GH 16830](https://github.com/pandas-dev/pandas/issues/16830)).
  id: totrans-1148
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax") 和 [`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin") 的行为已弃用，推荐使用 [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax") 和 [`Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin") ([GH 16830](https://github.com/pandas-dev/pandas/issues/16830))。'
- en: For compatibility with NumPy arrays, `pd.Series` implements `argmax` and `argmin`.
    Since pandas 0.13.0, `argmax` has been an alias for [`pandas.Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax"), and `argmin` has been an alias for [`pandas.Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin"). They return the *label* of the maximum or minimum, rather
    than the *position*.
  id: totrans-1149
  prefs: []
  type: TYPE_NORMAL
  zh: 为了与 NumPy 数组兼容，`pd.Series` 实现了 `argmax` 和 `argmin`。自 pandas 0.13.0 起，`argmax`
    成为 [`pandas.Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax") 的别名，`argmin` 成为 [`pandas.Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin") 的别名。它们返回的是*标签*，而不是*位置*。
- en: We’ve deprecated the current behavior of `Series.argmax` and `Series.argmin`.
    Using either of these will emit a `FutureWarning`. Use [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax") if you want the label of the maximum. Use `Series.values.argmax()`
    if you want the position of the maximum. Likewise for the minimum. In a future
    release `Series.argmax` and `Series.argmin` will return the position of the maximum
    or minimum.
  id: totrans-1150
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经废弃了 `Series.argmax` 和 `Series.argmin` 的当前行为。使用任何一个将会发出 `FutureWarning`。如果你想要最大值的标签，请使用
    [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax")。如果你想要最大值的位置，请使用 `Series.values.argmax()`。最小值同理。在将来的版本中，`Series.argmax`
    和 `Series.argmin` 将返回最大值或最小值的位置。
- en: '## Removal of prior version deprecations/changes'
  id: totrans-1151
  prefs: []
  type: TYPE_NORMAL
  zh: '## 移除之前版本的废弃/更改'
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") has dropped the `has_index_names` parameter ([GH 10967](https://github.com/pandas-dev/pandas/issues/10967))'
  id: totrans-1152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") 放弃了 `has_index_names` 参数 ([GH 10967](https://github.com/pandas-dev/pandas/issues/10967))'
- en: The `pd.options.display.height` configuration has been dropped ([GH 3663](https://github.com/pandas-dev/pandas/issues/3663))
  id: totrans-1153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.options.display.height` 配置已经被移除 ([GH 3663](https://github.com/pandas-dev/pandas/issues/3663))'
- en: The `pd.options.display.line_width` configuration has been dropped ([GH 2881](https://github.com/pandas-dev/pandas/issues/2881))
  id: totrans-1154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.options.display.line_width` 配置已经被移除 ([GH 2881](https://github.com/pandas-dev/pandas/issues/2881))'
- en: The `pd.options.display.mpl_style` configuration has been dropped ([GH 12190](https://github.com/pandas-dev/pandas/issues/12190))
  id: totrans-1155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.options.display.mpl_style` 配置已经被移除 ([GH 12190](https://github.com/pandas-dev/pandas/issues/12190))'
- en: '`Index` has dropped the `.sym_diff()` method in favor of `.symmetric_difference()`
    ([GH 12591](https://github.com/pandas-dev/pandas/issues/12591))'
  id: totrans-1156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Index` 已经放弃了 `.sym_diff()` 方法，转而使用 `.symmetric_difference()` ([GH 12591](https://github.com/pandas-dev/pandas/issues/12591))'
- en: '`Categorical` has dropped the `.order()` and `.sort()` methods in favor of
    `.sort_values()` ([GH 12882](https://github.com/pandas-dev/pandas/issues/12882))'
  id: totrans-1157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Categorical` 放弃了 `.order()` 和 `.sort()` 方法，转而使用 `.sort_values()` ([GH 12882](https://github.com/pandas-dev/pandas/issues/12882))'
- en: '[`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval") and
    [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") have changed the default of `inplace` from `None` to
    `False` ([GH 11149](https://github.com/pandas-dev/pandas/issues/11149))'
  id: totrans-1158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval") 和 [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") 将 `inplace` 的默认值从 `None` 更改为 `False` ([GH 11149](https://github.com/pandas-dev/pandas/issues/11149))'
- en: The function `get_offset_name` has been dropped in favor of the `.freqstr` attribute
    for an offset ([GH 11834](https://github.com/pandas-dev/pandas/issues/11834))
  id: totrans-1159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数 `get_offset_name` 已被放弃，转而使用偏移量的 `.freqstr` 属性 ([GH 11834](https://github.com/pandas-dev/pandas/issues/11834))
- en: pandas no longer tests for compatibility with hdf5-files created with pandas
    < 0.11 ([GH 17404](https://github.com/pandas-dev/pandas/issues/17404)).
  id: totrans-1160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas 不再测试与 pandas < 0.11 创建的 hdf5 文件兼容性 ([GH 17404](https://github.com/pandas-dev/pandas/issues/17404)).
- en: '## Performance improvements'
  id: totrans-1161
  prefs: []
  type: TYPE_NORMAL
  zh: '## 性能改进'
- en: Improved performance of instantiating `SparseDataFrame` ([GH 16773](https://github.com/pandas-dev/pandas/issues/16773))
  id: totrans-1162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实例化 `SparseDataFrame` 的性能得到了提升 ([GH 16773](https://github.com/pandas-dev/pandas/issues/16773))
- en: '[`Series.dt`](../reference/api/pandas.Series.dt.html#pandas.Series.dt "pandas.Series.dt")
    no longer performs frequency inference, yielding a large speedup when accessing
    the attribute ([GH 17210](https://github.com/pandas-dev/pandas/issues/17210))'
  id: totrans-1163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.dt`](../reference/api/pandas.Series.dt.html#pandas.Series.dt "pandas.Series.dt")
    不再进行频率推断，访问属性时速度大幅提升 ([GH 17210](https://github.com/pandas-dev/pandas/issues/17210))'
- en: Improved performance of [`set_categories()`](../reference/api/pandas.Series.cat.set_categories.html#pandas.Series.cat.set_categories
    "pandas.Series.cat.set_categories") by not materializing the values ([GH 17508](https://github.com/pandas-dev/pandas/issues/17508))
  id: totrans-1164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过不实例化值来提升 [`set_categories()`](../reference/api/pandas.Series.cat.set_categories.html#pandas.Series.cat.set_categories
    "pandas.Series.cat.set_categories") 的性能 ([GH 17508](https://github.com/pandas-dev/pandas/issues/17508))
- en: '[`Timestamp.microsecond`](../reference/api/pandas.Timestamp.microsecond.html#pandas.Timestamp.microsecond
    "pandas.Timestamp.microsecond") no longer re-computes on attribute access ([GH
    17331](https://github.com/pandas-dev/pandas/issues/17331))'
  id: totrans-1165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Timestamp.microsecond`](../reference/api/pandas.Timestamp.microsecond.html#pandas.Timestamp.microsecond
    "pandas.Timestamp.microsecond") 不再在属性访问时重新计算 ([GH 17331](https://github.com/pandas-dev/pandas/issues/17331))'
- en: Improved performance of the [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") for data that is already categorical dtype ([GH 17513](https://github.com/pandas-dev/pandas/issues/17513))
  id: totrans-1166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了对已经是分类数据类型的数据的[`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex")的性能（[GH 17513](https://github.com/pandas-dev/pandas/issues/17513)）
- en: Improved performance of `RangeIndex.min()` and `RangeIndex.max()` by using `RangeIndex`
    properties to perform the computations ([GH 17607](https://github.com/pandas-dev/pandas/issues/17607))
  id: totrans-1167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用`RangeIndex`属性执行计算，改进了`RangeIndex.min()`和`RangeIndex.max()`的性能（[GH 17607](https://github.com/pandas-dev/pandas/issues/17607)）
- en: '## Documentation changes'
  id: totrans-1168
  prefs: []
  type: TYPE_NORMAL
  zh: '## 文档更改'
- en: Several `NaT` method docstrings (e.g. `NaT.ctime()`) were incorrect ([GH 17327](https://github.com/pandas-dev/pandas/issues/17327))
  id: totrans-1169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 几个`NaT`方法的文档字符串（例如`NaT.ctime()`）是不正确的（[GH 17327](https://github.com/pandas-dev/pandas/issues/17327)）
- en: The documentation has had references to versions < v0.17 removed and cleaned
    up ([GH 17442](https://github.com/pandas-dev/pandas/issues/17442), [GH 17442](https://github.com/pandas-dev/pandas/issues/17442),
    [GH 17404](https://github.com/pandas-dev/pandas/issues/17404) & [GH 17504](https://github.com/pandas-dev/pandas/issues/17504))
  id: totrans-1170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档已删除并清理了对版本小于v0.17的引用（[GH 17442](https://github.com/pandas-dev/pandas/issues/17442)，[GH
    17442](https://github.com/pandas-dev/pandas/issues/17442)，[GH 17404](https://github.com/pandas-dev/pandas/issues/17404)
    & [GH 17504](https://github.com/pandas-dev/pandas/issues/17504))
- en: '## Bug fixes'
  id: totrans-1171
  prefs: []
  type: TYPE_NORMAL
  zh: '## Bug修复'
- en: Conversion
  id: totrans-1172
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 转换
- en: Bug in assignment against datetime-like data with `int` may incorrectly convert
    to datetime-like ([GH 14145](https://github.com/pandas-dev/pandas/issues/14145))
  id: totrans-1173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当对类似于日期时间的数据进行整数赋值时可能会错误地转换为日期时间类型（[GH 14145](https://github.com/pandas-dev/pandas/issues/14145)）
- en: Bug in assignment against `int64` data with `np.ndarray` with `float64` dtype
    may keep `int64` dtype ([GH 14001](https://github.com/pandas-dev/pandas/issues/14001))
  id: totrans-1174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当使用`float64`数据类型的`np.ndarray`对`int64`数据进行赋值时可能会保留`int64`数据类型（[GH 14001](https://github.com/pandas-dev/pandas/issues/14001)）
- en: Fixed the return type of `IntervalIndex.is_non_overlapping_monotonic` to be
    a Python `bool` for consistency with similar attributes/methods. Previously returned
    a `numpy.bool_`. ([GH 17237](https://github.com/pandas-dev/pandas/issues/17237))
  id: totrans-1175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将`IntervalIndex.is_non_overlapping_monotonic`的返回类型更改为Python的`bool`，以保持与类似属性/方法的一致性。之前返回的是`numpy.bool_`（[GH
    17237](https://github.com/pandas-dev/pandas/issues/17237)）
- en: Bug in `IntervalIndex.is_non_overlapping_monotonic` when intervals are closed
    on both sides and overlap at a point ([GH 16560](https://github.com/pandas-dev/pandas/issues/16560))
  id: totrans-1176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当区间两端都闭合且在某一点重叠时，`IntervalIndex.is_non_overlapping_monotonic`存在bug（[GH 16560](https://github.com/pandas-dev/pandas/issues/16560)）
- en: Bug in [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") returns frame when `inplace=True` and `value` is dict
    ([GH 16156](https://github.com/pandas-dev/pandas/issues/16156))
  id: totrans-1177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当`inplace=True`且`value`为字典时，修复了[`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna")在返回帧时的bug（[GH 16156](https://github.com/pandas-dev/pandas/issues/16156)）
- en: Bug in `Timestamp.weekday_name` returning a UTC-based weekday name when localized
    to a timezone ([GH 17354](https://github.com/pandas-dev/pandas/issues/17354))
  id: totrans-1178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当本地化到时区时，`Timestamp.weekday_name`存在bug，返回基于UTC的星期几名称（[GH 17354](https://github.com/pandas-dev/pandas/issues/17354)）
- en: Bug in `Timestamp.replace` when replacing `tzinfo` around DST changes ([GH 15683](https://github.com/pandas-dev/pandas/issues/15683))
  id: totrans-1179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在替换`tzinfo`时`Timestamp.replace`存在bug，特别是在夏令时变化时（[GH 15683](https://github.com/pandas-dev/pandas/issues/15683)）
- en: Bug in `Timedelta` construction and arithmetic that would not propagate the
    `Overflow` exception ([GH 17367](https://github.com/pandas-dev/pandas/issues/17367))
  id: totrans-1180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了`Timedelta`构造和算术中不会传播`Overflow`异常的bug（[GH 17367](https://github.com/pandas-dev/pandas/issues/17367)）
- en: Bug in [`astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") converting to object dtype when passed extension type
    classes (`DatetimeTZDtype`, `CategoricalDtype`) rather than instances. Now a `TypeError`
    is raised when a class is passed ([GH 17780](https://github.com/pandas-dev/pandas/issues/17780)).
  id: totrans-1181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当传递扩展类型类（`DatetimeTZDtype`，`CategoricalDtype`）而不是实例时，修复了[`astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype")转换为对象数据类型的bug。现在当传递类时会引发`TypeError`（[GH 17780](https://github.com/pandas-dev/pandas/issues/17780)）
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") in which elements were not always being coerced to numeric
    when `errors='coerce'` ([GH 17007](https://github.com/pandas-dev/pandas/issues/17007),
    [GH 17125](https://github.com/pandas-dev/pandas/issues/17125))
  id: totrans-1182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") 中的 Bug，在使用 `errors=''coerce''` 时，元素并非始终被强制转换为数值类型 ([GH 17007](https://github.com/pandas-dev/pandas/issues/17007),
    [GH 17125](https://github.com/pandas-dev/pandas/issues/17125))'
- en: Bug in `DataFrame` and `Series` constructors where `range` objects are converted
    to `int32` dtype on Windows instead of `int64` ([GH 16804](https://github.com/pandas-dev/pandas/issues/16804))
  id: totrans-1183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `DataFrame` 和 `Series` 构造函数中，将 `range` 对象转换为 `int32` dtype 而不是 `int64` 在 Windows
    上 ([GH 16804](https://github.com/pandas-dev/pandas/issues/16804))
- en: Indexing
  id: totrans-1184
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 索引
- en: When called with a null slice (e.g. `df.iloc[:]`), the `.iloc` and `.loc` indexers
    return a shallow copy of the original object. Previously they returned the original
    object. ([GH 13873](https://github.com/pandas-dev/pandas/issues/13873)).
  id: totrans-1185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当使用空切片调用时（例如 `df.iloc[:]`），`.iloc` 和 `.loc` 索引器将返回原始对象的浅拷贝。之前它们返回的是原始对象。([GH
    13873](https://github.com/pandas-dev/pandas/issues/13873)).
- en: When called on an unsorted `MultiIndex`, the `loc` indexer now will raise `UnsortedIndexError`
    only if proper slicing is used on non-sorted levels ([GH 16734](https://github.com/pandas-dev/pandas/issues/16734)).
  id: totrans-1186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当在未排序的 `MultiIndex` 上调用时，`loc` 索引器现在只会在非排序级别上使用适当的切片时引发 `UnsortedIndexError`
    ([GH 16734](https://github.com/pandas-dev/pandas/issues/16734)).
- en: Fixes regression in 0.20.3 when indexing with a string on a `TimedeltaIndex`
    ([GH 16896](https://github.com/pandas-dev/pandas/issues/16896)).
  id: totrans-1187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 0.20.3 中，使用字符串进行 `TimedeltaIndex` 索引时，修复了回归问题 ([GH 16896](https://github.com/pandas-dev/pandas/issues/16896)).
- en: Fixed `TimedeltaIndex.get_loc()` handling of `np.timedelta64` inputs ([GH 16909](https://github.com/pandas-dev/pandas/issues/16909)).
  id: totrans-1188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了 `TimedeltaIndex.get_loc()` 对 `np.timedelta64` 输入的处理问题 ([GH 16909](https://github.com/pandas-dev/pandas/issues/16909)).
- en: Fix `MultiIndex.sort_index()` ordering when `ascending` argument is a list,
    but not all levels are specified, or are in a different order ([GH 16934](https://github.com/pandas-dev/pandas/issues/16934)).
  id: totrans-1189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了在 `MultiIndex.sort_index()` 中，当 `ascending` 参数为列表，但未指定所有级别，或者级别顺序不同时的排序问题
    ([GH 16934](https://github.com/pandas-dev/pandas/issues/16934)).
- en: Fixes bug where indexing with `np.inf` caused an `OverflowError` to be raised
    ([GH 16957](https://github.com/pandas-dev/pandas/issues/16957))
  id: totrans-1190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了使用 `np.inf` 进行索引时引发 `OverflowError` 的 bug ([GH 16957](https://github.com/pandas-dev/pandas/issues/16957))
- en: Bug in reindexing on an empty `CategoricalIndex` ([GH 16770](https://github.com/pandas-dev/pandas/issues/16770))
  id: totrans-1191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在空的 `CategoricalIndex` 上重新索引的 bug ([GH 16770](https://github.com/pandas-dev/pandas/issues/16770))
- en: Fixes `DataFrame.loc` for setting with alignment and tz-aware `DatetimeIndex`
    ([GH 16889](https://github.com/pandas-dev/pandas/issues/16889))
  id: totrans-1192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了使用对齐和具有时区感知的 `DatetimeIndex` 进行设置的 `DataFrame.loc` ([GH 16889](https://github.com/pandas-dev/pandas/issues/16889))
- en: Avoids `IndexError` when passing an Index or Series to `.iloc` with older numpy
    ([GH 17193](https://github.com/pandas-dev/pandas/issues/17193))
  id: totrans-1193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当向 `.iloc` 传递 Index 或 Series 时，避免了旧版本 numpy 中的 `IndexError` ([GH 17193](https://github.com/pandas-dev/pandas/issues/17193))
- en: Allow unicode empty strings as placeholders in multilevel columns in Python
    2 ([GH 17099](https://github.com/pandas-dev/pandas/issues/17099))
  id: totrans-1194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许在 Python 2 中，多级列中使用 Unicode 空字符串作为占位符 ([GH 17099](https://github.com/pandas-dev/pandas/issues/17099))
- en: Bug in `.iloc` when used with inplace addition or assignment and an int indexer
    on a `MultiIndex` causing the wrong indexes to be read from and written to ([GH
    17148](https://github.com/pandas-dev/pandas/issues/17148))
  id: totrans-1195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `.iloc` 与 `MultiIndex` 结合使用时，进行就地加法或赋值，并使用整数索引器时，会导致从错误的索引中读取和写入 ([GH 17148](https://github.com/pandas-dev/pandas/issues/17148))。
- en: Bug in `.isin()` in which checking membership in empty `Series` objects raised
    an error ([GH 16991](https://github.com/pandas-dev/pandas/issues/16991))
  id: totrans-1196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.isin()` 中的 bug，当检查空 `Series` 对象中的成员资格时，引发错误 ([GH 16991](https://github.com/pandas-dev/pandas/issues/16991))'
- en: Bug in `CategoricalIndex` reindexing in which specified indices containing duplicates
    were not being respected ([GH 17323](https://github.com/pandas-dev/pandas/issues/17323))
  id: totrans-1197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `CategoricalIndex` 重新索引中的 bug，在指定包含重复的索引时未被尊重 ([GH 17323](https://github.com/pandas-dev/pandas/issues/17323))
- en: Bug in intersection of `RangeIndex` with negative step ([GH 17296](https://github.com/pandas-dev/pandas/issues/17296))
  id: totrans-1198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与负步长的 `RangeIndex` 的交集中的 bug ([GH 17296](https://github.com/pandas-dev/pandas/issues/17296))
- en: Bug in `IntervalIndex` where performing a scalar lookup fails for included right
    endpoints of non-overlapping monotonic decreasing indexes ([GH 16417](https://github.com/pandas-dev/pandas/issues/16417),
    [GH 17271](https://github.com/pandas-dev/pandas/issues/17271))
  id: totrans-1199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`IntervalIndex` 中存在的 bug，在执行标量查找时，对于非重叠的单调递减索引的包含右端点会失败 ([GH 16417](https://github.com/pandas-dev/pandas/issues/16417),
    [GH 17271](https://github.com/pandas-dev/pandas/issues/17271))'
- en: Bug in [`DataFrame.first_valid_index()`](../reference/api/pandas.DataFrame.first_valid_index.html#pandas.DataFrame.first_valid_index
    "pandas.DataFrame.first_valid_index") and [`DataFrame.last_valid_index()`](../reference/api/pandas.DataFrame.last_valid_index.html#pandas.DataFrame.last_valid_index
    "pandas.DataFrame.last_valid_index") when no valid entry ([GH 17400](https://github.com/pandas-dev/pandas/issues/17400))
  id: totrans-1200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.first_valid_index()`](../reference/api/pandas.DataFrame.first_valid_index.html#pandas.DataFrame.first_valid_index
    "pandas.DataFrame.first_valid_index") 和 [`DataFrame.last_valid_index()`](../reference/api/pandas.DataFrame.last_valid_index.html#pandas.DataFrame.last_valid_index
    "pandas.DataFrame.last_valid_index") 存在的 bug，当不存在有效条目时 ([GH 17400](https://github.com/pandas-dev/pandas/issues/17400))'
- en: Bug in [`Series.rename()`](../reference/api/pandas.Series.rename.html#pandas.Series.rename
    "pandas.Series.rename") when called with a callable, incorrectly alters the name
    of the `Series`, rather than the name of the `Index`. ([GH 17407](https://github.com/pandas-dev/pandas/issues/17407))
  id: totrans-1201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.rename()`](../reference/api/pandas.Series.rename.html#pandas.Series.rename
    "pandas.Series.rename") 中存在的 bug，在使用可调用对象调用时，会错误地改变 `Series` 的名称，而不是 `Index` 的名称。
    ([GH 17407](https://github.com/pandas-dev/pandas/issues/17407))'
- en: Bug in `String.str_get()` raises `IndexError` instead of inserting NaNs when
    using a negative index. ([GH 17704](https://github.com/pandas-dev/pandas/issues/17704))
  id: totrans-1202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`String.str_get()` 中存在的 bug，在使用负索引时，会引发 `IndexError`，而不是插入 NaNs。 ([GH 17704](https://github.com/pandas-dev/pandas/issues/17704))'
- en: IO
  id: totrans-1203
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: IO
- en: Bug in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") when reading a timezone aware index from `fixed` format HDFStore
    ([GH 17618](https://github.com/pandas-dev/pandas/issues/17618))
  id: totrans-1204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf "pandas.read_hdf")
    在从 `fixed` 格式 HDFStore 读取时，存在 bug，读取时区感知索引时出现问题 ([GH 17618](https://github.com/pandas-dev/pandas/issues/17618))'
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") in which columns were not being thoroughly de-duplicated ([GH
    17060](https://github.com/pandas-dev/pandas/issues/17060))
  id: totrans-1205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    存在的 bug，列没有彻底去重 ([GH 17060](https://github.com/pandas-dev/pandas/issues/17060))'
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") in which specified column names were not being thoroughly de-duplicated
    ([GH 17095](https://github.com/pandas-dev/pandas/issues/17095))
  id: totrans-1206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    中存在的 bug，指定的列名没有彻底去重 ([GH 17095](https://github.com/pandas-dev/pandas/issues/17095))'
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") in which non integer values for the header argument generated
    an unhelpful / unrelated error message ([GH 16338](https://github.com/pandas-dev/pandas/issues/16338))
  id: totrans-1207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    中存在的 bug，对于头部参数的非整数值会生成一个无用/无关的错误消息 ([GH 16338](https://github.com/pandas-dev/pandas/issues/16338))'
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") in which memory management issues in exception handling, under
    certain conditions, would cause the interpreter to segfault ([GH 14696](https://github.com/pandas-dev/pandas/issues/14696),
    [GH 16798](https://github.com/pandas-dev/pandas/issues/16798)).
  id: totrans-1208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    中存在的 bug，在异常处理中存在内存管理问题，特定条件下会导致解释器发生段错误 ([GH 14696](https://github.com/pandas-dev/pandas/issues/14696),
    [GH 16798](https://github.com/pandas-dev/pandas/issues/16798)).'
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when called with `low_memory=False` in which a CSV with at
    least one column > 2GB in size would incorrectly raise a `MemoryError` ([GH 16798](https://github.com/pandas-dev/pandas/issues/16798)).
  id: totrans-1209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    中存在的 bug，使用 `low_memory=False` 调用时，如果 CSV 中至少有一列的大小超过 2GB，会错误地引发 `MemoryError`
    ([GH 16798](https://github.com/pandas-dev/pandas/issues/16798)).'
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when called with a single-element list `header` would return
    a `DataFrame` of all NaN values ([GH 7757](https://github.com/pandas-dev/pandas/issues/7757))
  id: totrans-1210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    中存在的 bug，使用单元素列表 `header` 调用时会返回所有 NaN 值的 `DataFrame` ([GH 7757](https://github.com/pandas-dev/pandas/issues/7757))'
- en: Bug in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") defaulting to ‘ascii’ encoding in Python 3, instead
    of ‘utf-8’ ([GH 17097](https://github.com/pandas-dev/pandas/issues/17097))
  id: totrans-1211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Python 3 中，默认为‘ascii’编码，而不是‘utf-8’的[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv")中存在错误 ([GH 17097](https://github.com/pandas-dev/pandas/issues/17097))
- en: Bug in [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") where value labels could not be read when using an iterator
    ([GH 16923](https://github.com/pandas-dev/pandas/issues/16923))
  id: totrans-1212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用迭代器时，[`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata")中无法读取值标签 ([GH 16923](https://github.com/pandas-dev/pandas/issues/16923))
- en: Bug in [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") where the index was not set ([GH 16342](https://github.com/pandas-dev/pandas/issues/16342))
  id: totrans-1213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata")中未设置索引 ([GH 16342](https://github.com/pandas-dev/pandas/issues/16342))
- en: Bug in [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") where import check fails when run in multiple threads ([GH
    16928](https://github.com/pandas-dev/pandas/issues/16928))
  id: totrans-1214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在多线程运行时，[`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html")中的导入检查失败 ([GH 16928](https://github.com/pandas-dev/pandas/issues/16928))
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where automatic delimiter detection caused a `TypeError` to
    be thrown when a bad line was encountered rather than the correct error message
    ([GH 13374](https://github.com/pandas-dev/pandas/issues/13374))
  id: totrans-1215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在自动分隔符检测引发`TypeError`而不是正确的错误消息时，在[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")中存在错误 ([GH 13374](https://github.com/pandas-dev/pandas/issues/13374))
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") with `notebook=True` where DataFrames with named indices
    or non-MultiIndex indices had undesired horizontal or vertical alignment for column
    or row labels, respectively ([GH 16792](https://github.com/pandas-dev/pandas/issues/16792))
  id: totrans-1216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`DataFrame.to_html()`中，当`notebook=True`时，具有命名索引或非多重索引索引的 DataFrame 对于列或行标签的水平或垂直对齐不符合预期
    ([GH 16792](https://github.com/pandas-dev/pandas/issues/16792))
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") in which there was no validation of the `justify`
    parameter ([GH 17527](https://github.com/pandas-dev/pandas/issues/17527))
  id: totrans-1217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html")中存在错误，没有验证`justify`参数 ([GH 17527](https://github.com/pandas-dev/pandas/issues/17527))
- en: Bug in [`HDFStore.select()`](../reference/api/pandas.HDFStore.select.html#pandas.HDFStore.select
    "pandas.HDFStore.select") when reading a contiguous mixed-data table featuring
    VLArray ([GH 17021](https://github.com/pandas-dev/pandas/issues/17021))
  id: totrans-1218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在读取包含 VLArray 的连续混合数据表时，[`HDFStore.select()`](../reference/api/pandas.HDFStore.select.html#pandas.HDFStore.select
    "pandas.HDFStore.select")中存在错误 ([GH 17021](https://github.com/pandas-dev/pandas/issues/17021))
- en: Bug in `to_json()` where several conditions (including objects with unprintable
    symbols, objects with deep recursion, overlong labels) caused segfaults instead
    of raising the appropriate exception ([GH 14256](https://github.com/pandas-dev/pandas/issues/14256))
  id: totrans-1219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`to_json()`中存在错误，其中几种条件（包括具有不可打印符号的对象、具有深度递归的对象、过长的标签等）导致段错误而不是引发适当的异常 ([GH
    14256](https://github.com/pandas-dev/pandas/issues/14256))
- en: Plotting
  id: totrans-1220
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 绘图
- en: Bug in plotting methods using `secondary_y` and `fontsize` not setting secondary
    axis font size ([GH 12565](https://github.com/pandas-dev/pandas/issues/12565))
  id: totrans-1221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`secondary_y`和`fontsize`的绘图方法中存在错误，未设置次要轴字体大小 ([GH 12565](https://github.com/pandas-dev/pandas/issues/12565))
- en: Bug when plotting `timedelta` and `datetime` dtypes on y-axis ([GH 16953](https://github.com/pandas-dev/pandas/issues/16953))
  id: totrans-1222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当在 y 轴上绘制`timedelta`和`datetime`类型时出现错误 ([GH 16953](https://github.com/pandas-dev/pandas/issues/16953))
- en: Line plots no longer assume monotonic x data when calculating xlims, they show
    the entire lines now even for unsorted x data. ([GH 11310](https://github.com/pandas-dev/pandas/issues/11310),
    [GH 11471](https://github.com/pandas-dev/pandas/issues/11471))
  id: totrans-1223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在计算 xlims 时，线图不再假定 x 数据单调递增，它们现在会显示整个线条，即使 x 数据未排序。 ([GH 11310](https://github.com/pandas-dev/pandas/issues/11310),
    [GH 11471](https://github.com/pandas-dev/pandas/issues/11471))
- en: With matplotlib 2.0.0 and above, calculation of x limits for line plots is left
    to matplotlib, so that its new default settings are applied. ([GH 15495](https://github.com/pandas-dev/pandas/issues/15495))
  id: totrans-1224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 matplotlib 2.0.0 及以上版本中，对于线图的 x 轴限制的计算由 matplotlib 处理，以便应用其新的默认设置。（[GH 15495](https://github.com/pandas-dev/pandas/issues/15495)）
- en: Bug in `Series.plot.bar` or `DataFrame.plot.bar` with `y` not respecting user-passed
    `color` ([GH 16822](https://github.com/pandas-dev/pandas/issues/16822))
  id: totrans-1225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `Series.plot.bar` 或 `DataFrame.plot.bar` 中，`y` 参数不遵循用户传递的 `color` 的 Bug（[GH
    16822](https://github.com/pandas-dev/pandas/issues/16822)）
- en: Bug causing `plotting.parallel_coordinates` to reset the random seed when using
    random colors ([GH 17525](https://github.com/pandas-dev/pandas/issues/17525))
  id: totrans-1226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当使用随机颜色时，`plotting.parallel_coordinates` 导致重置随机种子的 Bug（[GH 17525](https://github.com/pandas-dev/pandas/issues/17525)）
- en: GroupBy/resample/rolling
  id: totrans-1227
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: GroupBy/resample/rolling
- en: Bug in `DataFrame.resample(...).size()` where an empty `DataFrame` did not return
    a `Series` ([GH 14962](https://github.com/pandas-dev/pandas/issues/14962))
  id: totrans-1228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `DataFrame.resample(...).size()` 中存在 Bug，其中空 `DataFrame` 没有返回 `Series`（[GH
    14962](https://github.com/pandas-dev/pandas/issues/14962)）
- en: Bug in [`infer_freq()`](../reference/api/pandas.infer_freq.html#pandas.infer_freq
    "pandas.infer_freq") causing indices with 2-day gaps during the working week to
    be wrongly inferred as business daily ([GH 16624](https://github.com/pandas-dev/pandas/issues/16624))
  id: totrans-1229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`infer_freq()`](../reference/api/pandas.infer_freq.html#pandas.infer_freq
    "pandas.infer_freq") 中的 Bug 导致在工作周内具有 2 天间隔的索引被错误地推断为工作日（[GH 16624](https://github.com/pandas-dev/pandas/issues/16624)）'
- en: Bug in `.rolling(...).quantile()` which incorrectly used different defaults
    than [`Series.quantile()`](../reference/api/pandas.Series.quantile.html#pandas.Series.quantile
    "pandas.Series.quantile") and [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile") ([GH 9413](https://github.com/pandas-dev/pandas/issues/9413),
    [GH 16211](https://github.com/pandas-dev/pandas/issues/16211))
  id: totrans-1230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `.rolling(...).quantile()` 中，使用的默认值与 [`Series.quantile()`](../reference/api/pandas.Series.quantile.html#pandas.Series.quantile
    "pandas.Series.quantile") 和 [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile") 不同（[GH 9413](https://github.com/pandas-dev/pandas/issues/9413),
    [GH 16211](https://github.com/pandas-dev/pandas/issues/16211)）
- en: Bug in `groupby.transform()` that would coerce boolean dtypes back to float
    ([GH 16875](https://github.com/pandas-dev/pandas/issues/16875))
  id: totrans-1231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`groupby.transform()` 中存在的 Bug 会将布尔类型的数据强制转换为浮点数（[GH 16875](https://github.com/pandas-dev/pandas/issues/16875)）'
- en: Bug in `Series.resample(...).apply()` where an empty `Series` modified the source
    index and did not return the name of a `Series` ([GH 14313](https://github.com/pandas-dev/pandas/issues/14313))
  id: totrans-1232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `Series.resample(...).apply()` 中存在 Bug，其中空 `Series` 修改了源索引并且没有返回 `Series`
    的名称（[GH 14313](https://github.com/pandas-dev/pandas/issues/14313)）
- en: Bug in `.rolling(...).apply(...)` with a `DataFrame` with a `DatetimeIndex`,
    a `window` of a timedelta-convertible and `min_periods >= 1` ([GH 15305](https://github.com/pandas-dev/pandas/issues/15305))
  id: totrans-1233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在具有 `DatetimeIndex`、时间间隔可转换的 `window` 和 `min_periods >= 1` 的 `DataFrame` 上使用
    `.rolling(...).apply(...)` 存在 Bug（[GH 15305](https://github.com/pandas-dev/pandas/issues/15305)）
- en: Bug in `DataFrame.groupby` where index and column keys were not recognized correctly
    when the number of keys equaled the number of elements on the groupby axis ([GH
    16859](https://github.com/pandas-dev/pandas/issues/16859))
  id: totrans-1234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `DataFrame.groupby` 中，当键的数量等于分组轴上的元素数量时，无法正确识别索引和列键（[GH 16859](https://github.com/pandas-dev/pandas/issues/16859)）
- en: Bug in `groupby.nunique()` with `TimeGrouper` which cannot handle `NaT` correctly
    ([GH 17575](https://github.com/pandas-dev/pandas/issues/17575))
  id: totrans-1235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TimeGrouper` 中的 `groupby.nunique()` 存在 Bug，无法正确处理 `NaT`（[GH 17575](https://github.com/pandas-dev/pandas/issues/17575)）'
- en: Bug in `DataFrame.groupby` where a single level selection from a `MultiIndex`
    unexpectedly sorts ([GH 17537](https://github.com/pandas-dev/pandas/issues/17537))
  id: totrans-1236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `DataFrame.groupby` 中，从 `MultiIndex` 进行单级选择时，会意外地进行排序（[GH 17537](https://github.com/pandas-dev/pandas/issues/17537)）
- en: Bug in `DataFrame.groupby` where spurious warning is raised when `Grouper` object
    is used to override ambiguous column name ([GH 17383](https://github.com/pandas-dev/pandas/issues/17383))
  id: totrans-1237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `DataFrame.groupby` 中，当使用 `Grouper` 对象来覆盖模糊的列名时，会引发虚假警告的 Bug（[GH 17383](https://github.com/pandas-dev/pandas/issues/17383)）
- en: Bug in `TimeGrouper` differs when passes as a list and as a scalar ([GH 17530](https://github.com/pandas-dev/pandas/issues/17530))
  id: totrans-1238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TimeGrouper` 中的 Bug 在作为列表和标量传递时会有所不同（[GH 17530](https://github.com/pandas-dev/pandas/issues/17530)）'
- en: Sparse
  id: totrans-1239
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Sparse
- en: Bug in `SparseSeries` raises `AttributeError` when a dictionary is passed in
    as data ([GH 16905](https://github.com/pandas-dev/pandas/issues/16905))
  id: totrans-1240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当将字典传递给 `SparseSeries` 时，会引发 `AttributeError` 的 Bug（[GH 16905](https://github.com/pandas-dev/pandas/issues/16905)）
- en: Bug in `SparseDataFrame.fillna()` not filling all NaNs when frame was instantiated
    from SciPy sparse matrix ([GH 16112](https://github.com/pandas-dev/pandas/issues/16112))
  id: totrans-1241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`SparseDataFrame.fillna()`中存在错误，当框架是从SciPy稀疏矩阵实例化时，未填充所有NaN值（[GH 16112](https://github.com/pandas-dev/pandas/issues/16112)）。
- en: Bug in `SparseSeries.unstack()` and `SparseDataFrame.stack()` ([GH 16614](https://github.com/pandas-dev/pandas/issues/16614),
    [GH 15045](https://github.com/pandas-dev/pandas/issues/15045))
  id: totrans-1242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`SparseSeries.unstack()`和`SparseDataFrame.stack()`中存在错误（[GH 16614](https://github.com/pandas-dev/pandas/issues/16614)，[GH
    15045](https://github.com/pandas-dev/pandas/issues/15045)）。
- en: Bug in `make_sparse()` treating two numeric/boolean data, which have same bits,
    as same when array `dtype` is `object` ([GH 17574](https://github.com/pandas-dev/pandas/issues/17574))
  id: totrans-1243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`make_sparse()`中存在错误，当数组`dtype`为`object`时，处理两个具有相同位的数字/布尔数据时被视为相同（[GH 17574](https://github.com/pandas-dev/pandas/issues/17574)）。
- en: '`SparseArray.all()` and `SparseArray.any()` are now implemented to handle `SparseArray`,
    these were used but not implemented ([GH 17570](https://github.com/pandas-dev/pandas/issues/17570))'
  id: totrans-1244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseArray.all()`和`SparseArray.any()`现在已实现以处理`SparseArray`，这些函数以前被使用但未实现（[GH
    17570](https://github.com/pandas-dev/pandas/issues/17570)）。'
- en: Reshaping
  id: totrans-1245
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重塑
- en: Joining/Merging with a non unique `PeriodIndex` raised a `TypeError` ([GH 16871](https://github.com/pandas-dev/pandas/issues/16871))
  id: totrans-1246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用非唯一`PeriodIndex`进行连接/合并引发了`TypeError`（[GH 16871](https://github.com/pandas-dev/pandas/issues/16871)）。
- en: Bug in [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") where non-aligned series of integers were casted to float ([GH
    17005](https://github.com/pandas-dev/pandas/issues/17005))
  id: totrans-1247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")中存在错误，当整数的非对齐系列被转换为浮点数时（[GH
    17005](https://github.com/pandas-dev/pandas/issues/17005)）。
- en: Bug in merging with categorical dtypes with datetimelikes incorrectly raised
    a `TypeError` ([GH 16900](https://github.com/pandas-dev/pandas/issues/16900))
  id: totrans-1248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在与分类数据类型和datetimelikes合并时，存在错误，错误地引发了`TypeError`（[GH 16900](https://github.com/pandas-dev/pandas/issues/16900)）。
- en: Bug when using `isin()` on a large object series and large comparison array
    ([GH 16012](https://github.com/pandas-dev/pandas/issues/16012))
  id: totrans-1249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当在大型对象系列和大型比较数组上使用`isin()`时存在错误（[GH 16012](https://github.com/pandas-dev/pandas/issues/16012)）。
- en: Fixes regression from 0.20, [`Series.aggregate()`](../reference/api/pandas.Series.aggregate.html#pandas.Series.aggregate
    "pandas.Series.aggregate") and [`DataFrame.aggregate()`](../reference/api/pandas.DataFrame.aggregate.html#pandas.DataFrame.aggregate
    "pandas.DataFrame.aggregate") allow dictionaries as return values again ([GH 16741](https://github.com/pandas-dev/pandas/issues/16741))
  id: totrans-1250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从0.20版本开始的回归修复，[`Series.aggregate()`](../reference/api/pandas.Series.aggregate.html#pandas.Series.aggregate
    "pandas.Series.aggregate")和[`DataFrame.aggregate()`](../reference/api/pandas.DataFrame.aggregate.html#pandas.DataFrame.aggregate
    "pandas.DataFrame.aggregate")再次允许字典作为返回值（[GH 16741](https://github.com/pandas-dev/pandas/issues/16741)）。
- en: Fixes dtype of result with integer dtype input, from [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") when called with `margins=True` ([GH 17013](https://github.com/pandas-dev/pandas/issues/17013))
  id: totrans-1251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了输入具有整数dtype的结果的dtype，在使用`margins=True`调用时从[`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table")返回了正确的值（[GH 17013](https://github.com/pandas-dev/pandas/issues/17013)）。
- en: Bug in [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") where passing two `Series` with the same name raised a `KeyError`
    ([GH 13279](https://github.com/pandas-dev/pandas/issues/13279))
  id: totrans-1252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")中存在错误，当传递具有相同名称的两个`Series`时引发了`KeyError`（[GH
    13279](https://github.com/pandas-dev/pandas/issues/13279)）。
- en: '[`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin"), [`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax"), and their counterparts on `DataFrame` and groupby objects
    work correctly with floating point data that contains infinite values ([GH 13595](https://github.com/pandas-dev/pandas/issues/13595)).'
  id: totrans-1253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin")，[`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax")，以及它们在`DataFrame`和groupby对象上的对应功能，对包含无穷值的浮点数据的处理已经正确（[GH
    13595](https://github.com/pandas-dev/pandas/issues/13595)）。'
- en: Bug in [`unique()`](../reference/api/pandas.unique.html#pandas.unique "pandas.unique")
    where checking a tuple of strings raised a `TypeError` ([GH 17108](https://github.com/pandas-dev/pandas/issues/17108))
  id: totrans-1254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[`unique()`](../reference/api/pandas.unique.html#pandas.unique "pandas.unique")中存在错误，检查字符串元组时引发了`TypeError`（[GH
    17108](https://github.com/pandas-dev/pandas/issues/17108)）。
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    where order of result index was unpredictable if it contained non-comparable elements
    ([GH 17344](https://github.com/pandas-dev/pandas/issues/17344))
  id: totrans-1255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")中存在的错误，如果包含不可比较元素，则结果索引的顺序是不可预测的（[GH
    17344](https://github.com/pandas-dev/pandas/issues/17344)）
- en: Fixes regression when sorting by multiple columns on a `datetime64` dtype `Series`
    with `NaT` values ([GH 16836](https://github.com/pandas-dev/pandas/issues/16836))
  id: totrans-1256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了在`datetime64` dtype `Series`上按多列排序时出现的回归问题，其中包含`NaT`值（[GH 16836](https://github.com/pandas-dev/pandas/issues/16836)）
- en: Bug in [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") where the result’s columns did not preserve the categorical
    dtype of `columns` when `dropna` was `False` ([GH 17842](https://github.com/pandas-dev/pandas/issues/17842))
  id: totrans-1257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table")中存在的错误，当`dropna`为`False`时，结果的列未保留`columns`的分类数据类型（[GH 17842](https://github.com/pandas-dev/pandas/issues/17842)）
- en: Bug in `DataFrame.drop_duplicates` where dropping with non-unique column names
    raised a `ValueError` ([GH 17836](https://github.com/pandas-dev/pandas/issues/17836))
  id: totrans-1258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`DataFrame.drop_duplicates`中存在的错误，当使用非唯一列名进行删除时会引发`ValueError`错误（[GH 17836](https://github.com/pandas-dev/pandas/issues/17836)）
- en: Bug in `unstack()` which, when called on a list of levels, would discard the
    `fillna` argument ([GH 13971](https://github.com/pandas-dev/pandas/issues/13971))
  id: totrans-1259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`unstack()`中存在的错误，当在一组级别上调用时，会丢弃`fillna`参数（[GH 13971](https://github.com/pandas-dev/pandas/issues/13971)）
- en: Bug in the alignment of `range` objects and other list-likes with `DataFrame`
    leading to operations being performed row-wise instead of column-wise ([GH 17901](https://github.com/pandas-dev/pandas/issues/17901))
  id: totrans-1260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`DataFrame`中对`range`对象和其他类似列表进行对齐时出现的错误，导致操作是按行而不是按列执行（[GH 17901](https://github.com/pandas-dev/pandas/issues/17901)）
- en: Numeric
  id: totrans-1261
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数值
- en: Bug in `.clip()` with `axis=1` and a list-like for `threshold` is passed; previously
    this raised `ValueError` ([GH 15390](https://github.com/pandas-dev/pandas/issues/15390))
  id: totrans-1262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`.clip()`时，当`axis=1`且`threshold`为类似列表时出现的错误；之前会引发`ValueError`错误（[GH 15390](https://github.com/pandas-dev/pandas/issues/15390)）
- en: '[`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip") and [`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip") now treat NA values for upper and lower arguments as
    `None` instead of raising `ValueError` ([GH 17276](https://github.com/pandas-dev/pandas/issues/17276)).'
  id: totrans-1263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip")和[`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip")现在将上限和下限参数的NA值视为`None`，而不是引发`ValueError`错误（[GH 17276](https://github.com/pandas-dev/pandas/issues/17276)）'
- en: Categorical
  id: totrans-1264
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分类数据类型
- en: Bug in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") when called with a categorical ([GH 16639](https://github.com/pandas-dev/pandas/issues/16639))
  id: totrans-1265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在调用带有分类的[`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin")时出现的错误（[GH 16639](https://github.com/pandas-dev/pandas/issues/16639)）
- en: Bug in the categorical constructor with empty values and categories causing
    the `.categories` to be an empty `Float64Index` rather than an empty `Index` with
    object dtype ([GH 17248](https://github.com/pandas-dev/pandas/issues/17248))
  id: totrans-1266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在分类构造函数中存在的错误，当空值和类别导致`.categories`为一个空的`Float64Index`而不是一个空的对象dtype为`Index`时（[GH
    17248](https://github.com/pandas-dev/pandas/issues/17248)）
- en: Bug in categorical operations with [Series.cat](../user_guide/categorical.html#categorical-cat)
    not preserving the original Series’ name ([GH 17509](https://github.com/pandas-dev/pandas/issues/17509))
  id: totrans-1267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用[Series.cat](../user_guide/categorical.html#categorical-cat)进行分类操作时，未保留原始Series的名称的错误（[GH
    17509](https://github.com/pandas-dev/pandas/issues/17509)）
- en: Bug in [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") failing for categorical columns with boolean/int data
    types ([GH 17187](https://github.com/pandas-dev/pandas/issues/17187))
  id: totrans-1268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用[`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge")时，对具有布尔/整数数据类型的分类列进行合并时出现的错误（[GH 17187](https://github.com/pandas-dev/pandas/issues/17187)）
- en: Bug in constructing a `Categorical`/`CategoricalDtype` when the specified `categories`
    are of categorical type ([GH 17884](https://github.com/pandas-dev/pandas/issues/17884)).
  id: totrans-1269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在构建`Categorical`/`CategoricalDtype`时，当指定的`categories`为分类类型时出现的错误（[GH 17884](https://github.com/pandas-dev/pandas/issues/17884)）
- en: '### PyPy'
  id: totrans-1270
  prefs: []
  type: TYPE_NORMAL
  zh: '### PyPy'
- en: Compatibility with PyPy in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `usecols=[<unsorted ints>]` and [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") ([GH 17351](https://github.com/pandas-dev/pandas/issues/17351))
  id: totrans-1271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `read_csv()` 中与 PyPy 的兼容性，使用 `usecols=[<unsorted ints>]` 和 [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") ([GH 17351](https://github.com/pandas-dev/pandas/issues/17351))
- en: Split tests into cases for CPython and PyPy where needed, which highlights the
    fragility of index matching with `float('nan')`, `np.nan` and `NAT` ([GH 17351](https://github.com/pandas-dev/pandas/issues/17351))
  id: totrans-1272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在需要时将测试拆分为 CPython 和 PyPy 用例，突出了与 `float('nan')`，`np.nan` 和 `NAT` 的索引匹配的脆弱性
    ([GH 17351](https://github.com/pandas-dev/pandas/issues/17351))
- en: Fix [`DataFrame.memory_usage()`](../reference/api/pandas.DataFrame.memory_usage.html#pandas.DataFrame.memory_usage
    "pandas.DataFrame.memory_usage") to support PyPy. Objects on PyPy do not have
    a fixed size, so an approximation is used instead ([GH 17228](https://github.com/pandas-dev/pandas/issues/17228))
  id: totrans-1273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复 [`DataFrame.memory_usage()`](../reference/api/pandas.DataFrame.memory_usage.html#pandas.DataFrame.memory_usage
    "pandas.DataFrame.memory_usage") 以支持 PyPy。PyPy 上的对象没有固定大小，因此使用了近似值 ([GH 17228](https://github.com/pandas-dev/pandas/issues/17228))
- en: Other
  id: totrans-1274
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他
- en: Bug where some inplace operators were not being wrapped and produced a copy
    when invoked ([GH 12962](https://github.com/pandas-dev/pandas/issues/12962))
  id: totrans-1275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些 inplace 运算符未被包装并在调用时生成副本的 Bug ([GH 12962](https://github.com/pandas-dev/pandas/issues/12962))
- en: Bug in [`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval")
    where the `inplace` parameter was being incorrectly handled ([GH 16732](https://github.com/pandas-dev/pandas/issues/16732))
  id: totrans-1276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`eval()` 中 `inplace` 参数的处理错误的 Bug ([GH 16732](https://github.com/pandas-dev/pandas/issues/16732))'
- en: Conversion
  id: totrans-1277
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 转换
- en: Bug in assignment against datetime-like data with `int` may incorrectly convert
    to datetime-like ([GH 14145](https://github.com/pandas-dev/pandas/issues/14145))
  id: totrans-1278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用 `int` 进行赋值时可能会错误地转换为 datetime-like 的 Bug ([GH 14145](https://github.com/pandas-dev/pandas/issues/14145))
- en: Bug in assignment against `int64` data with `np.ndarray` with `float64` dtype
    may keep `int64` dtype ([GH 14001](https://github.com/pandas-dev/pandas/issues/14001))
  id: totrans-1279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用 `np.ndarray` 和 `float64` dtype 的 `int64` 数据进行赋值时可能会保持 `int64` dtype 的 Bug
    ([GH 14001](https://github.com/pandas-dev/pandas/issues/14001))
- en: Fixed the return type of `IntervalIndex.is_non_overlapping_monotonic` to be
    a Python `bool` for consistency with similar attributes/methods. Previously returned
    a `numpy.bool_`. ([GH 17237](https://github.com/pandas-dev/pandas/issues/17237))
  id: totrans-1280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复 `IntervalIndex.is_non_overlapping_monotonic` 的返回类型为 Python `bool` 以保持与类似属性/方法的一致性。之前返回了
    `numpy.bool_`。 ([GH 17237](https://github.com/pandas-dev/pandas/issues/17237))
- en: Bug in `IntervalIndex.is_non_overlapping_monotonic` when intervals are closed
    on both sides and overlap at a point ([GH 16560](https://github.com/pandas-dev/pandas/issues/16560))
  id: totrans-1281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当区间两端都关闭并在某一点重叠时 `IntervalIndex.is_non_overlapping_monotonic` 存在 Bug ([GH 16560](https://github.com/pandas-dev/pandas/issues/16560))
- en: Bug in [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") returns frame when `inplace=True` and `value` is dict
    ([GH 16156](https://github.com/pandas-dev/pandas/issues/16156))
  id: totrans-1282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") 的 Bug 在 `inplace=True` 且 `value` 为字典时返回数据框 ([GH 16156](https://github.com/pandas-dev/pandas/issues/16156))'
- en: Bug in `Timestamp.weekday_name` returning a UTC-based weekday name when localized
    to a timezone ([GH 17354](https://github.com/pandas-dev/pandas/issues/17354))
  id: totrans-1283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Timestamp.weekday_name` 返回基于 UTC 的工作日名称的 Bug 当本地化为时区时 ([GH 17354](https://github.com/pandas-dev/pandas/issues/17354))'
- en: Bug in `Timestamp.replace` when replacing `tzinfo` around DST changes ([GH 15683](https://github.com/pandas-dev/pandas/issues/15683))
  id: totrans-1284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Timestamp.replace` 在替换 `tzinfo` 时围绕 DST 变更时存在 Bug ([GH 15683](https://github.com/pandas-dev/pandas/issues/15683))'
- en: Bug in `Timedelta` construction and arithmetic that would not propagate the
    `Overflow` exception ([GH 17367](https://github.com/pandas-dev/pandas/issues/17367))
  id: totrans-1285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Timedelta` 构造和算术中不会传播 `Overflow` 异常的 Bug ([GH 17367](https://github.com/pandas-dev/pandas/issues/17367))'
- en: Bug in [`astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") converting to object dtype when passed extension type
    classes (`DatetimeTZDtype`, `CategoricalDtype`) rather than instances. Now a `TypeError`
    is raised when a class is passed ([GH 17780](https://github.com/pandas-dev/pandas/issues/17780)).
  id: totrans-1286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在传递扩展类型类（`DatetimeTZDtype`，`CategoricalDtype`）而不是实例时，[`astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") 转换为对象 dtype 的 Bug。现在当传递类时会引发 `TypeError` ([GH 17780](https://github.com/pandas-dev/pandas/issues/17780)).
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") in which elements were not always being coerced to numeric
    when `errors='coerce'` ([GH 17007](https://github.com/pandas-dev/pandas/issues/17007),
    [GH 17125](https://github.com/pandas-dev/pandas/issues/17125))
  id: totrans-1287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`to_numeric()`中的bug修复，当`errors='coerce'`时，元素不总是被强制转换为数值（[GH 17007](https://github.com/pandas-dev/pandas/issues/17007)，[GH
    17125](https://github.com/pandas-dev/pandas/issues/17125)）。
- en: Bug in `DataFrame` and `Series` constructors where `range` objects are converted
    to `int32` dtype on Windows instead of `int64` ([GH 16804](https://github.com/pandas-dev/pandas/issues/16804))
  id: totrans-1288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Windows上，`DataFrame`和`Series`构造函数中的`range`对象现在会转换为`int32` dtype，而不是`int64`（[GH
    16804](https://github.com/pandas-dev/pandas/issues/16804)）。
- en: Indexing
  id: totrans-1289
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 索引
- en: When called with a null slice (e.g. `df.iloc[:]`), the `.iloc` and `.loc` indexers
    return a shallow copy of the original object. Previously they returned the original
    object. ([GH 13873](https://github.com/pandas-dev/pandas/issues/13873)).
  id: totrans-1290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当使用空切片（例如`df.iloc[:]`）调用时，`.iloc`和`.loc`索引器返回原始对象的浅层副本。之前它们返回原始对象（[GH 13873](https://github.com/pandas-dev/pandas/issues/13873)）。
- en: When called on an unsorted `MultiIndex`, the `loc` indexer now will raise `UnsortedIndexError`
    only if proper slicing is used on non-sorted levels ([GH 16734](https://github.com/pandas-dev/pandas/issues/16734)).
  id: totrans-1291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当在未排序的`MultiIndex`上调用时，`loc`索引器现在仅在对非排序级别使用正确切片时才会引发`UnsortedIndexError`（[GH
    16734](https://github.com/pandas-dev/pandas/issues/16734)）。
- en: Fixes regression in 0.20.3 when indexing with a string on a `TimedeltaIndex`
    ([GH 16896](https://github.com/pandas-dev/pandas/issues/16896)).
  id: totrans-1292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了在0.20.3版本中，使用字符串索引`TimedeltaIndex`时引发的回归问题（[GH 16896](https://github.com/pandas-dev/pandas/issues/16896)）。
- en: Fixed `TimedeltaIndex.get_loc()` handling of `np.timedelta64` inputs ([GH 16909](https://github.com/pandas-dev/pandas/issues/16909)).
  id: totrans-1293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了`TimedeltaIndex.get_loc()`对`np.timedelta64`输入的处理问题（[GH 16909](https://github.com/pandas-dev/pandas/issues/16909)）。
- en: Fix `MultiIndex.sort_index()` ordering when `ascending` argument is a list,
    but not all levels are specified, or are in a different order ([GH 16934](https://github.com/pandas-dev/pandas/issues/16934)).
  id: totrans-1294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了在`ascending`参数为列表但未指定全部级别或顺序不同的情况下，`MultiIndex.sort_index()`排序的顺序问题（[GH 16934](https://github.com/pandas-dev/pandas/issues/16934)）。
- en: Fixes bug where indexing with `np.inf` caused an `OverflowError` to be raised
    ([GH 16957](https://github.com/pandas-dev/pandas/issues/16957))
  id: totrans-1295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了使用`np.inf`进行索引时引发`OverflowError`的bug（[GH 16957](https://github.com/pandas-dev/pandas/issues/16957)）。
- en: Bug in reindexing on an empty `CategoricalIndex` ([GH 16770](https://github.com/pandas-dev/pandas/issues/16770))
  id: totrans-1296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在空`CategoricalIndex`上重新索引时修复了bug（[GH 16770](https://github.com/pandas-dev/pandas/issues/16770)）。
- en: Fixes `DataFrame.loc` for setting with alignment and tz-aware `DatetimeIndex`
    ([GH 16889](https://github.com/pandas-dev/pandas/issues/16889))
  id: totrans-1297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了在设置对齐和tz-aware `DatetimeIndex`时的`DataFrame.loc`问题（[GH 16889](https://github.com/pandas-dev/pandas/issues/16889)）。
- en: Avoids `IndexError` when passing an Index or Series to `.iloc` with older numpy
    ([GH 17193](https://github.com/pandas-dev/pandas/issues/17193))
  id: totrans-1298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当使用较旧的numpy将Index或Series传递给`.iloc`时，避免了`IndexError`（[GH 17193](https://github.com/pandas-dev/pandas/issues/17193)）。
- en: Allow unicode empty strings as placeholders in multilevel columns in Python
    2 ([GH 17099](https://github.com/pandas-dev/pandas/issues/17099))
  id: totrans-1299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许Python 2中多级列中使用Unicode空字符串作为占位符（[GH 17099](https://github.com/pandas-dev/pandas/issues/17099)）。
- en: Bug in `.iloc` when used with inplace addition or assignment and an int indexer
    on a `MultiIndex` causing the wrong indexes to be read from and written to ([GH
    17148](https://github.com/pandas-dev/pandas/issues/17148))
  id: totrans-1300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`MultiIndex`上使用就地加法或赋值和int索引器时引起错误的bug修复，导致从错误的索引器读取和写入（[GH 17148](https://github.com/pandas-dev/pandas/issues/17148)）。
- en: Bug in `.isin()` in which checking membership in empty `Series` objects raised
    an error ([GH 16991](https://github.com/pandas-dev/pandas/issues/16991))
  id: totrans-1301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`isin()`中的bug修复，其中检查空`Series`对象的成员资格引发错误（[GH 16991](https://github.com/pandas-dev/pandas/issues/16991)）。
- en: Bug in `CategoricalIndex` reindexing in which specified indices containing duplicates
    were not being respected ([GH 17323](https://github.com/pandas-dev/pandas/issues/17323))
  id: totrans-1302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在重新索引`CategoricalIndex`时修复了指定包含重复项的索引未被尊重的问题（[GH 17323](https://github.com/pandas-dev/pandas/issues/17323)）。
- en: Bug in intersection of `RangeIndex` with negative step ([GH 17296](https://github.com/pandas-dev/pandas/issues/17296))
  id: totrans-1303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RangeIndex`与负步长的交集中的bug修复（[GH 17296](https://github.com/pandas-dev/pandas/issues/17296)）。'
- en: Bug in `IntervalIndex` where performing a scalar lookup fails for included right
    endpoints of non-overlapping monotonic decreasing indexes ([GH 16417](https://github.com/pandas-dev/pandas/issues/16417),
    [GH 17271](https://github.com/pandas-dev/pandas/issues/17271))
  id: totrans-1304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`IntervalIndex` 中的错误，在非重叠单调递减索引的右端点中执行标量查找会失败。([GH 16417](https://github.com/pandas-dev/pandas/issues/16417),
    [GH 17271](https://github.com/pandas-dev/pandas/issues/17271))'
- en: Bug in [`DataFrame.first_valid_index()`](../reference/api/pandas.DataFrame.first_valid_index.html#pandas.DataFrame.first_valid_index
    "pandas.DataFrame.first_valid_index") and [`DataFrame.last_valid_index()`](../reference/api/pandas.DataFrame.last_valid_index.html#pandas.DataFrame.last_valid_index
    "pandas.DataFrame.last_valid_index") when no valid entry ([GH 17400](https://github.com/pandas-dev/pandas/issues/17400))
  id: totrans-1305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.first_valid_index()`](../reference/api/pandas.DataFrame.first_valid_index.html#pandas.DataFrame.first_valid_index
    "pandas.DataFrame.first_valid_index") 和 [`DataFrame.last_valid_index()`](../reference/api/pandas.DataFrame.last_valid_index.html#pandas.DataFrame.last_valid_index
    "pandas.DataFrame.last_valid_index") 中的错误，当没有有效条目时。([GH 17400](https://github.com/pandas-dev/pandas/issues/17400))'
- en: Bug in [`Series.rename()`](../reference/api/pandas.Series.rename.html#pandas.Series.rename
    "pandas.Series.rename") when called with a callable, incorrectly alters the name
    of the `Series`, rather than the name of the `Index`. ([GH 17407](https://github.com/pandas-dev/pandas/issues/17407))
  id: totrans-1306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.rename()`](../reference/api/pandas.Series.rename.html#pandas.Series.rename
    "pandas.Series.rename") 中的错误，当调用一个可调用对象时，错误地更改了 `Series` 的名称，而不是 `Index` 的名称。([GH
    17407](https://github.com/pandas-dev/pandas/issues/17407))'
- en: Bug in `String.str_get()` raises `IndexError` instead of inserting NaNs when
    using a negative index. ([GH 17704](https://github.com/pandas-dev/pandas/issues/17704))
  id: totrans-1307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`String.str_get()` 中的错误导致在使用负索引时引发 `IndexError` 而不是插入 NaN。([GH 17704](https://github.com/pandas-dev/pandas/issues/17704))'
- en: IO
  id: totrans-1308
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: IO
- en: Bug in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") when reading a timezone aware index from `fixed` format HDFStore
    ([GH 17618](https://github.com/pandas-dev/pandas/issues/17618))
  id: totrans-1309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf "pandas.read_hdf")
    中的错误，在从 `fixed` 格式的 HDFStore 中读取时，读取一个时区感知的索引。([GH 17618](https://github.com/pandas-dev/pandas/issues/17618))'
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") in which columns were not being thoroughly de-duplicated ([GH
    17060](https://github.com/pandas-dev/pandas/issues/17060))
  id: totrans-1310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    中的错误，列没有彻底去重。([GH 17060](https://github.com/pandas-dev/pandas/issues/17060))'
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") in which specified column names were not being thoroughly de-duplicated
    ([GH 17095](https://github.com/pandas-dev/pandas/issues/17095))
  id: totrans-1311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    中的错误，指定的列名没有彻底去重。([GH 17095](https://github.com/pandas-dev/pandas/issues/17095))'
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") in which non integer values for the header argument generated
    an unhelpful / unrelated error message ([GH 16338](https://github.com/pandas-dev/pandas/issues/16338))
  id: totrans-1312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    中的错误，对于头参数的非整数值会生成一个无关的错误消息。([GH 16338](https://github.com/pandas-dev/pandas/issues/16338))'
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") in which memory management issues in exception handling, under
    certain conditions, would cause the interpreter to segfault ([GH 14696](https://github.com/pandas-dev/pandas/issues/14696),
    [GH 16798](https://github.com/pandas-dev/pandas/issues/16798)).
  id: totrans-1313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    中的错误，当内存管理问题在某些条件下引发异常处理时，解释器会段错误。([GH 14696](https://github.com/pandas-dev/pandas/issues/14696),
    [GH 16798](https://github.com/pandas-dev/pandas/issues/16798)).'
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when called with `low_memory=False` in which a CSV with at
    least one column > 2GB in size would incorrectly raise a `MemoryError` ([GH 16798](https://github.com/pandas-dev/pandas/issues/16798)).
  id: totrans-1314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    中的错误，当以 `low_memory=False` 调用时，至少一个列大小 > 2GB 的 CSV 会错误地引发 `MemoryError`。([GH 16798](https://github.com/pandas-dev/pandas/issues/16798)).'
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when called with a single-element list `header` would return
    a `DataFrame` of all NaN values ([GH 7757](https://github.com/pandas-dev/pandas/issues/7757))
  id: totrans-1315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    中的错误，当使用单元素列表 `header` 调用时，会返回所有 NaN 值的 `DataFrame`。([GH 7757](https://github.com/pandas-dev/pandas/issues/7757))'
- en: Bug in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") defaulting to ‘ascii’ encoding in Python 3, instead
    of ‘utf-8’ ([GH 17097](https://github.com/pandas-dev/pandas/issues/17097))
  id: totrans-1316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") 中的一个 Bug，在 Python 3 中默认使用 ''ascii'' 编码，而不是 ''utf-8''（[GH
    17097](https://github.com/pandas-dev/pandas/issues/17097)）'
- en: Bug in [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") where value labels could not be read when using an iterator
    ([GH 16923](https://github.com/pandas-dev/pandas/issues/16923))
  id: totrans-1317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") 中的一个 Bug，使用迭代器时无法读取值标签（[GH 16923](https://github.com/pandas-dev/pandas/issues/16923)）'
- en: Bug in [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") where the index was not set ([GH 16342](https://github.com/pandas-dev/pandas/issues/16342))
  id: totrans-1318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") 中的一个 Bug，未设置索引（[GH 16342](https://github.com/pandas-dev/pandas/issues/16342)）'
- en: Bug in [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") where import check fails when run in multiple threads ([GH
    16928](https://github.com/pandas-dev/pandas/issues/16928))
  id: totrans-1319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html "pandas.read_html")
    中的一个 Bug，在多线程运行时导入检查失败（[GH 16928](https://github.com/pandas-dev/pandas/issues/16928)）'
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where automatic delimiter detection caused a `TypeError` to
    be thrown when a bad line was encountered rather than the correct error message
    ([GH 13374](https://github.com/pandas-dev/pandas/issues/13374))
  id: totrans-1320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    中的一个 Bug，自动检测分隔符导致在遇到错误行时抛出 `TypeError` 而不是正确的错误消息（[GH 13374](https://github.com/pandas-dev/pandas/issues/13374)）'
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") with `notebook=True` where DataFrames with named indices
    or non-MultiIndex indices had undesired horizontal or vertical alignment for column
    or row labels, respectively ([GH 16792](https://github.com/pandas-dev/pandas/issues/16792))
  id: totrans-1321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") 中的一个 Bug，当 `notebook=True` 时，具有命名索引或非 MultiIndex 索引的
    DataFrame 的列或行标签具有不希望的水平或垂直对齐（[GH 16792](https://github.com/pandas-dev/pandas/issues/16792)）'
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") in which there was no validation of the `justify`
    parameter ([GH 17527](https://github.com/pandas-dev/pandas/issues/17527))
  id: totrans-1322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") 存在一个 Bug，即 `justify` 参数没有验证（[GH 17527](https://github.com/pandas-dev/pandas/issues/17527)）'
- en: Bug in [`HDFStore.select()`](../reference/api/pandas.HDFStore.select.html#pandas.HDFStore.select
    "pandas.HDFStore.select") when reading a contiguous mixed-data table featuring
    VLArray ([GH 17021](https://github.com/pandas-dev/pandas/issues/17021))
  id: totrans-1323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在读取包含 VLArray 的连续混合数据表时，[`HDFStore.select()`](../reference/api/pandas.HDFStore.select.html#pandas.HDFStore.select
    "pandas.HDFStore.select") 中存在一个 Bug（[GH 17021](https://github.com/pandas-dev/pandas/issues/17021)）
- en: Bug in `to_json()` where several conditions (including objects with unprintable
    symbols, objects with deep recursion, overlong labels) caused segfaults instead
    of raising the appropriate exception ([GH 14256](https://github.com/pandas-dev/pandas/issues/14256))
  id: totrans-1324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`to_json()` 中的一个 Bug，包括具有不可打印符号的对象、具有深度递归的对象、标签过长等多种条件导致的段错误，而不是引发适当的异常（[GH
    14256](https://github.com/pandas-dev/pandas/issues/14256)）'
- en: Plotting
  id: totrans-1325
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 绘图
- en: Bug in plotting methods using `secondary_y` and `fontsize` not setting secondary
    axis font size ([GH 12565](https://github.com/pandas-dev/pandas/issues/12565))
  id: totrans-1326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `secondary_y` 和 `fontsize` 的绘图方法中存在一个 Bug，未设置次要轴的字体大小（[GH 12565](https://github.com/pandas-dev/pandas/issues/12565)）
- en: Bug when plotting `timedelta` and `datetime` dtypes on y-axis ([GH 16953](https://github.com/pandas-dev/pandas/issues/16953))
  id: totrans-1327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 y 轴绘制 `timedelta` 和 `datetime` 数据类型时存在一个 Bug（[GH 16953](https://github.com/pandas-dev/pandas/issues/16953)）
- en: Line plots no longer assume monotonic x data when calculating xlims, they show
    the entire lines now even for unsorted x data. ([GH 11310](https://github.com/pandas-dev/pandas/issues/11310),
    [GH 11471](https://github.com/pandas-dev/pandas/issues/11471))
  id: totrans-1328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线图在计算 xlims 时不再假设 x 数据单调递增，现在即使是未排序的 x 数据也会显示整条线。([GH 11310](https://github.com/pandas-dev/pandas/issues/11310),
    [GH 11471](https://github.com/pandas-dev/pandas/issues/11471))
- en: With matplotlib 2.0.0 and above, calculation of x limits for line plots is left
    to matplotlib, so that its new default settings are applied. ([GH 15495](https://github.com/pandas-dev/pandas/issues/15495))
  id: totrans-1329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 matplotlib 2.0.0 及以上版本，线图的 x 范围计算由 matplotlib 处理，以便应用其新的默认设置。([GH 15495](https://github.com/pandas-dev/pandas/issues/15495))
- en: Bug in `Series.plot.bar` or `DataFrame.plot.bar` with `y` not respecting user-passed
    `color` ([GH 16822](https://github.com/pandas-dev/pandas/issues/16822))
  id: totrans-1330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series.plot.bar` 或 `DataFrame.plot.bar` 中的 bug，`y` 不尊重用户传递的 `color` ([GH 16822](https://github.com/pandas-dev/pandas/issues/16822))'
- en: Bug causing `plotting.parallel_coordinates` to reset the random seed when using
    random colors ([GH 17525](https://github.com/pandas-dev/pandas/issues/17525))
  id: totrans-1331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用随机颜色时，`plotting.parallel_coordinates` 中的 bug 会重置随机种子 ([GH 17525](https://github.com/pandas-dev/pandas/issues/17525))
- en: GroupBy/resample/rolling
  id: totrans-1332
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: GroupBy/resample/rolling
- en: Bug in `DataFrame.resample(...).size()` where an empty `DataFrame` did not return
    a `Series` ([GH 14962](https://github.com/pandas-dev/pandas/issues/14962))
  id: totrans-1333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.resample(...).size()` 中的 bug，一个空的 `DataFrame` 没有返回一个 `Series` ([GH
    14962](https://github.com/pandas-dev/pandas/issues/14962))'
- en: Bug in [`infer_freq()`](../reference/api/pandas.infer_freq.html#pandas.infer_freq
    "pandas.infer_freq") causing indices with 2-day gaps during the working week to
    be wrongly inferred as business daily ([GH 16624](https://github.com/pandas-dev/pandas/issues/16624))
  id: totrans-1334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`infer_freq()` 中的 bug 导致工作日之间间隔为 2 天的索引被错误地推断为工作日频率 ([GH 16624](https://github.com/pandas-dev/pandas/issues/16624))'
- en: Bug in `.rolling(...).quantile()` which incorrectly used different defaults
    than [`Series.quantile()`](../reference/api/pandas.Series.quantile.html#pandas.Series.quantile
    "pandas.Series.quantile") and [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile") ([GH 9413](https://github.com/pandas-dev/pandas/issues/9413),
    [GH 16211](https://github.com/pandas-dev/pandas/issues/16211))
  id: totrans-1335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.rolling(...).quantile()` 中的 bug 不正确地使用了与 [`Series.quantile()`](../reference/api/pandas.Series.quantile.html#pandas.Series.quantile
    "pandas.Series.quantile") 和 [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile") 不同的默认值 ([GH 9413](https://github.com/pandas-dev/pandas/issues/9413),
    [GH 16211](https://github.com/pandas-dev/pandas/issues/16211))'
- en: Bug in `groupby.transform()` that would coerce boolean dtypes back to float
    ([GH 16875](https://github.com/pandas-dev/pandas/issues/16875))
  id: totrans-1336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`groupby.transform()` 中的 bug，会将布尔值的 dtype 强制转换为浮点数 ([GH 16875](https://github.com/pandas-dev/pandas/issues/16875))'
- en: Bug in `Series.resample(...).apply()` where an empty `Series` modified the source
    index and did not return the name of a `Series` ([GH 14313](https://github.com/pandas-dev/pandas/issues/14313))
  id: totrans-1337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series.resample(...).apply()` 中的 bug，其中一个空的 `Series` 修改了源索引并且没有返回一个 `Series`
    的名称 ([GH 14313](https://github.com/pandas-dev/pandas/issues/14313))'
- en: Bug in `.rolling(...).apply(...)` with a `DataFrame` with a `DatetimeIndex`,
    a `window` of a timedelta-convertible and `min_periods >= 1` ([GH 15305](https://github.com/pandas-dev/pandas/issues/15305))
  id: totrans-1338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在具有 `DatetimeIndex`、`window` 为 timedelta 可转换且 `min_periods >= 1` 的 `DataFrame`
    上使用 `.rolling(...).apply(...)` 中的 bug ([GH 15305](https://github.com/pandas-dev/pandas/issues/15305))
- en: Bug in `DataFrame.groupby` where index and column keys were not recognized correctly
    when the number of keys equaled the number of elements on the groupby axis ([GH
    16859](https://github.com/pandas-dev/pandas/issues/16859))
  id: totrans-1339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.groupby` 中的 bug，当键的数量等于 groupby 轴上的元素数量时，索引和列键没有被正确识别 ([GH 16859](https://github.com/pandas-dev/pandas/issues/16859))'
- en: Bug in `groupby.nunique()` with `TimeGrouper` which cannot handle `NaT` correctly
    ([GH 17575](https://github.com/pandas-dev/pandas/issues/17575))
  id: totrans-1340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`groupby.nunique()` 中的 bug，使用 `TimeGrouper` 无法正确处理 `NaT` ([GH 17575](https://github.com/pandas-dev/pandas/issues/17575))'
- en: Bug in `DataFrame.groupby` where a single level selection from a `MultiIndex`
    unexpectedly sorts ([GH 17537](https://github.com/pandas-dev/pandas/issues/17537))
  id: totrans-1341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.groupby` 中的 bug，当从 `MultiIndex` 中选择单个级别时，意外地进行排序 ([GH 17537](https://github.com/pandas-dev/pandas/issues/17537))'
- en: Bug in `DataFrame.groupby` where spurious warning is raised when `Grouper` object
    is used to override ambiguous column name ([GH 17383](https://github.com/pandas-dev/pandas/issues/17383))
  id: totrans-1342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.groupby` 中的 bug，在使用 `Grouper` 对象覆盖模糊的列名时会引发不明确的警告 ([GH 17383](https://github.com/pandas-dev/pandas/issues/17383))'
- en: Bug in `TimeGrouper` differs when passes as a list and as a scalar ([GH 17530](https://github.com/pandas-dev/pandas/issues/17530))
  id: totrans-1343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TimeGrouper` 中的 bug 在作为列表和标量传递时会有所不同 ([GH 17530](https://github.com/pandas-dev/pandas/issues/17530))'
- en: Sparse
  id: totrans-1344
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Sparse
- en: Bug in `SparseSeries` raises `AttributeError` when a dictionary is passed in
    as data ([GH 16905](https://github.com/pandas-dev/pandas/issues/16905))
  id: totrans-1345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在将字典作为数据传入时，`SparseSeries` 中的 bug 会引发 `AttributeError` ([GH 16905](https://github.com/pandas-dev/pandas/issues/16905))
- en: Bug in `SparseDataFrame.fillna()` not filling all NaNs when frame was instantiated
    from SciPy sparse matrix ([GH 16112](https://github.com/pandas-dev/pandas/issues/16112))
  id: totrans-1346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在从SciPy稀疏矩阵实例化的情况下，`SparseDataFrame.fillna()`未填充所有NaN值的错误（[GH 16112](https://github.com/pandas-dev/pandas/issues/16112)）
- en: Bug in `SparseSeries.unstack()` and `SparseDataFrame.stack()` ([GH 16614](https://github.com/pandas-dev/pandas/issues/16614),
    [GH 15045](https://github.com/pandas-dev/pandas/issues/15045))
  id: totrans-1347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`SparseSeries.unstack()`和`SparseDataFrame.stack()`中的错误（[GH 16614](https://github.com/pandas-dev/pandas/issues/16614)，[GH
    15045](https://github.com/pandas-dev/pandas/issues/15045)）
- en: Bug in `make_sparse()` treating two numeric/boolean data, which have same bits,
    as same when array `dtype` is `object` ([GH 17574](https://github.com/pandas-dev/pandas/issues/17574))
  id: totrans-1348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`make_sparse()`中的错误处理两个具有相同位的数值/布尔数据，当数组`dtype`为`object`时被视为相同的错误（[GH 17574](https://github.com/pandas-dev/pandas/issues/17574)）
- en: '`SparseArray.all()` and `SparseArray.any()` are now implemented to handle `SparseArray`,
    these were used but not implemented ([GH 17570](https://github.com/pandas-dev/pandas/issues/17570))'
  id: totrans-1349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseArray.all()`和`SparseArray.any()`现在已实现以处理`SparseArray`，这些方法以前被使用但未实现（[GH
    17570](https://github.com/pandas-dev/pandas/issues/17570)）'
- en: Reshaping
  id: totrans-1350
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重塑
- en: Joining/Merging with a non unique `PeriodIndex` raised a `TypeError` ([GH 16871](https://github.com/pandas-dev/pandas/issues/16871))
  id: totrans-1351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用非唯一`PeriodIndex`进行连接/合并引发`TypeError`的错误��[GH 16871](https://github.com/pandas-dev/pandas/issues/16871)）
- en: Bug in [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") where non-aligned series of integers were casted to float ([GH
    17005](https://github.com/pandas-dev/pandas/issues/17005))
  id: totrans-1352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")中的错误，非对齐的整数序列被转换为浮点数的错误（[GH
    17005](https://github.com/pandas-dev/pandas/issues/17005)）
- en: Bug in merging with categorical dtypes with datetimelikes incorrectly raised
    a `TypeError` ([GH 16900](https://github.com/pandas-dev/pandas/issues/16900))
  id: totrans-1353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在与类别数据类型和日期时间数据类型合并时出现错误引发`TypeError`的错误（[GH 16900](https://github.com/pandas-dev/pandas/issues/16900)）
- en: Bug when using `isin()` on a large object series and large comparison array
    ([GH 16012](https://github.com/pandas-dev/pandas/issues/16012))
  id: totrans-1354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在大型对象序列和大型比较数组上使用`isin()`时出现的错误（[GH 16012](https://github.com/pandas-dev/pandas/issues/16012)）
- en: Fixes regression from 0.20, [`Series.aggregate()`](../reference/api/pandas.Series.aggregate.html#pandas.Series.aggregate
    "pandas.Series.aggregate") and [`DataFrame.aggregate()`](../reference/api/pandas.DataFrame.aggregate.html#pandas.DataFrame.aggregate
    "pandas.DataFrame.aggregate") allow dictionaries as return values again ([GH 16741](https://github.com/pandas-dev/pandas/issues/16741))
  id: totrans-1355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从0.20版本中修复的问题，[`Series.aggregate()`](../reference/api/pandas.Series.aggregate.html#pandas.Series.aggregate
    "pandas.Series.aggregate")和[`DataFrame.aggregate()`](../reference/api/pandas.DataFrame.aggregate.html#pandas.DataFrame.aggregate
    "pandas.DataFrame.aggregate")再次允许字典作为返回值（[GH 16741](https://github.com/pandas-dev/pandas/issues/16741)）
- en: Fixes dtype of result with integer dtype input, from [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") when called with `margins=True` ([GH 17013](https://github.com/pandas-dev/pandas/issues/17013))
  id: totrans-1356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了在使用`pivot_table()`时，当调用`margins=True`时，结果的数据类型为整数数据类型输入的问题（[GH 17013](https://github.com/pandas-dev/pandas/issues/17013))
- en: Bug in [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") where passing two `Series` with the same name raised a `KeyError`
    ([GH 13279](https://github.com/pandas-dev/pandas/issues/13279))
  id: totrans-1357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")中的错误，传递两个具有相同名称的`Series`引发`KeyError`的错误（[GH
    13279](https://github.com/pandas-dev/pandas/issues/13279)）
- en: '[`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin"), [`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax"), and their counterparts on `DataFrame` and groupby objects
    work correctly with floating point data that contains infinite values ([GH 13595](https://github.com/pandas-dev/pandas/issues/13595)).'
  id: totrans-1358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin")，[`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax")以及它们在`DataFrame`和groupby对象上的对应项在包含无限值的浮点数据上能够正确工作（[GH 13595](https://github.com/pandas-dev/pandas/issues/13595)）'
- en: Bug in [`unique()`](../reference/api/pandas.unique.html#pandas.unique "pandas.unique")
    where checking a tuple of strings raised a `TypeError` ([GH 17108](https://github.com/pandas-dev/pandas/issues/17108))
  id: totrans-1359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[`unique()`](../reference/api/pandas.unique.html#pandas.unique "pandas.unique")中，检查字符串元组引发`TypeError`的错误（[GH
    17108](https://github.com/pandas-dev/pandas/issues/17108)）
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    where order of result index was unpredictable if it contained non-comparable elements
    ([GH 17344](https://github.com/pandas-dev/pandas/issues/17344))
  id: totrans-1360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")中的一个错误，如果包含不可比较元素，则结果索引的顺序是不可预测的（[GH
    17344](https://github.com/pandas-dev/pandas/issues/17344)）'
- en: Fixes regression when sorting by multiple columns on a `datetime64` dtype `Series`
    with `NaT` values ([GH 16836](https://github.com/pandas-dev/pandas/issues/16836))
  id: totrans-1361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了在`datetime64` dtype `Series`上按多列排序时出现的回归问题，其中包含`NaT`值（[GH 16836](https://github.com/pandas-dev/pandas/issues/16836)）
- en: Bug in [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") where the result’s columns did not preserve the categorical
    dtype of `columns` when `dropna` was `False` ([GH 17842](https://github.com/pandas-dev/pandas/issues/17842))
  id: totrans-1362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table")中的一个错误，当`dropna`为`False`时，结果的列未保留`columns`的分类dtype（[GH 17842](https://github.com/pandas-dev/pandas/issues/17842)）'
- en: Bug in `DataFrame.drop_duplicates` where dropping with non-unique column names
    raised a `ValueError` ([GH 17836](https://github.com/pandas-dev/pandas/issues/17836))
  id: totrans-1363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`DataFrame.drop_duplicates`中的一个错误，当使用非唯一列名进行删除时会引发`ValueError`（[GH 17836](https://github.com/pandas-dev/pandas/issues/17836)）
- en: Bug in `unstack()` which, when called on a list of levels, would discard the
    `fillna` argument ([GH 13971](https://github.com/pandas-dev/pandas/issues/13971))
  id: totrans-1364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`unstack()`中的一个错误，当在级别列表上调用时，会丢弃`fillna`参数（[GH 13971](https://github.com/pandas-dev/pandas/issues/13971)）
- en: Bug in the alignment of `range` objects and other list-likes with `DataFrame`
    leading to operations being performed row-wise instead of column-wise ([GH 17901](https://github.com/pandas-dev/pandas/issues/17901))
  id: totrans-1365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`range`对象和其他类似列表与`DataFrame`对齐时的一个错误，导致操作是按行而不是按列执行（[GH 17901](https://github.com/pandas-dev/pandas/issues/17901)）
- en: Numeric
  id: totrans-1366
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数值
- en: Bug in `.clip()` with `axis=1` and a list-like for `threshold` is passed; previously
    this raised `ValueError` ([GH 15390](https://github.com/pandas-dev/pandas/issues/15390))
  id: totrans-1367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`.clip()`中，当`axis=1`且传递了类似列表的`threshold`时的一个错误；之前会引发`ValueError`（[GH 15390](https://github.com/pandas-dev/pandas/issues/15390)）
- en: '[`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip") and [`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip") now treat NA values for upper and lower arguments as
    `None` instead of raising `ValueError` ([GH 17276](https://github.com/pandas-dev/pandas/issues/17276)).'
  id: totrans-1368
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip")和[`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip")现在将上限和下限参数的NA值视为`None`而不是引发`ValueError`（[GH 17276](https://github.com/pandas-dev/pandas/issues/17276)）'
- en: Categorical
  id: totrans-1369
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分类
- en: Bug in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") when called with a categorical ([GH 16639](https://github.com/pandas-dev/pandas/issues/16639))
  id: totrans-1370
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用分类调用[`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin")时的一个错误（[GH 16639](https://github.com/pandas-dev/pandas/issues/16639)）
- en: Bug in the categorical constructor with empty values and categories causing
    the `.categories` to be an empty `Float64Index` rather than an empty `Index` with
    object dtype ([GH 17248](https://github.com/pandas-dev/pandas/issues/17248))
  id: totrans-1371
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分类构造函数中的一个错误，当空值和类别导致`.categories`是一个空的`Float64Index`而不是一个带有对象dtype的空`Index`（[GH
    17248](https://github.com/pandas-dev/pandas/issues/17248)）
- en: Bug in categorical operations with [Series.cat](../user_guide/categorical.html#categorical-cat)
    not preserving the original Series’ name ([GH 17509](https://github.com/pandas-dev/pandas/issues/17509))
  id: totrans-1372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在分类操作中，[Series.cat](../user_guide/categorical.html#categorical-cat)未保留原始Series名称的一个错误（[GH
    17509](https://github.com/pandas-dev/pandas/issues/17509)）
- en: Bug in [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") failing for categorical columns with boolean/int data
    types ([GH 17187](https://github.com/pandas-dev/pandas/issues/17187))
  id: totrans-1373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge")中的一个错误，对于布尔/整数数据类型的分类列会失败（[GH 17187](https://github.com/pandas-dev/pandas/issues/17187)）
- en: Bug in constructing a `Categorical`/`CategoricalDtype` when the specified `categories`
    are of categorical type ([GH 17884](https://github.com/pandas-dev/pandas/issues/17884)).
  id: totrans-1374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在指定的`categories`是分类类型时构造`Categorical`/`CategoricalDtype`的一个错误（[GH 17884](https://github.com/pandas-dev/pandas/issues/17884)）
- en: '### PyPy'
  id: totrans-1375
  prefs: []
  type: TYPE_NORMAL
  zh: '### PyPy'
- en: Compatibility with PyPy in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `usecols=[<unsorted ints>]` and [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") ([GH 17351](https://github.com/pandas-dev/pandas/issues/17351))
  id: totrans-1376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与 PyPy 在 [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") 中的兼容性，使用 `usecols=[<unsorted ints>]` 和 [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") ([GH 17351](https://github.com/pandas-dev/pandas/issues/17351))
- en: Split tests into cases for CPython and PyPy where needed, which highlights the
    fragility of index matching with `float('nan')`, `np.nan` and `NAT` ([GH 17351](https://github.com/pandas-dev/pandas/issues/17351))
  id: totrans-1377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将拆分测试案例为 CPython 和 PyPy 的情况，其中需要强调使用 `float('nan')`、`np.nan` 和 `NAT` 进行索引匹配的脆弱性
    ([GH 17351](https://github.com/pandas-dev/pandas/issues/17351))
- en: Fix [`DataFrame.memory_usage()`](../reference/api/pandas.DataFrame.memory_usage.html#pandas.DataFrame.memory_usage
    "pandas.DataFrame.memory_usage") to support PyPy. Objects on PyPy do not have
    a fixed size, so an approximation is used instead ([GH 17228](https://github.com/pandas-dev/pandas/issues/17228))
  id: totrans-1378
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复 [`DataFrame.memory_usage()`](../reference/api/pandas.DataFrame.memory_usage.html#pandas.DataFrame.memory_usage
    "pandas.DataFrame.memory_usage") 以支持 PyPy。PyPy 上的对象没有固定大小，因此使用近似值代替 ([GH 17228](https://github.com/pandas-dev/pandas/issues/17228))
- en: Other
  id: totrans-1379
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他
- en: Bug where some inplace operators were not being wrapped and produced a copy
    when invoked ([GH 12962](https://github.com/pandas-dev/pandas/issues/12962))
  id: totrans-1380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种bug，一些原地操作符在调用时未被包装并生成了副本 ([GH 12962](https://github.com/pandas-dev/pandas/issues/12962))
- en: Bug in [`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval")
    where the `inplace` parameter was being incorrectly handled ([GH 16732](https://github.com/pandas-dev/pandas/issues/16732))
  id: totrans-1381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval") 中的一个bug，`inplace`
    参数被错误处理 ([GH 16732](https://github.com/pandas-dev/pandas/issues/16732))'
- en: '## Contributors'
  id: totrans-1382
  prefs: []
  type: TYPE_NORMAL
  zh: '## 贡献者'
- en: A total of 206 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  id: totrans-1383
  prefs: []
  type: TYPE_NORMAL
  zh: 本版本共有 206 人贡献了补丁。带有“+”符号的人是第一次贡献补丁的。
- en: 3553x +
  id: totrans-1384
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3553x +
- en: Aaron Barber
  id: totrans-1385
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Aaron Barber
- en: Adam Gleave +
  id: totrans-1386
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Adam Gleave +
- en: Adam Smith +
  id: totrans-1387
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Adam Smith +
- en: AdamShamlian +
  id: totrans-1388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AdamShamlian +
- en: Adrian Liaw +
  id: totrans-1389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Adrian Liaw +
- en: Alan Velasco +
  id: totrans-1390
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alan Velasco +
- en: Alan Yee +
  id: totrans-1391
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alan Yee +
- en: Alex B +
  id: totrans-1392
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alex B +
- en: Alex Lubbock +
  id: totrans-1393
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alex Lubbock +
- en: Alex Marchenko +
  id: totrans-1394
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alex Marchenko +
- en: Alex Rychyk +
  id: totrans-1395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alex Rychyk +
- en: Amol K +
  id: totrans-1396
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amol K +
- en: Andreas Winkler
  id: totrans-1397
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Andreas Winkler
- en: Andrew +
  id: totrans-1398
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Andrew +
- en: Andrew 亮
  id: totrans-1399
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Andrew 亮
- en: André Jonasson +
  id: totrans-1400
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: André Jonasson +
- en: Becky Sweger
  id: totrans-1401
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Becky Sweger
- en: Berkay +
  id: totrans-1402
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Berkay +
- en: Bob Haffner +
  id: totrans-1403
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bob Haffner +
- en: Bran Yang
  id: totrans-1404
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bran Yang
- en: Brian Tu +
  id: totrans-1405
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Brian Tu +
- en: Brock Mendel +
  id: totrans-1406
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Brock Mendel +
- en: Carol Willing +
  id: totrans-1407
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Carol Willing +
- en: Carter Green +
  id: totrans-1408
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Carter Green +
- en: Chankey Pathak +
  id: totrans-1409
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chankey Pathak +
- en: Chris
  id: totrans-1410
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chris
- en: Chris Billington
  id: totrans-1411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chris Billington
- en: Chris Filo Gorgolewski +
  id: totrans-1412
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chris Filo Gorgolewski +
- en: Chris Kerr
  id: totrans-1413
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chris Kerr
- en: Chris M +
  id: totrans-1414
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chris M +
- en: Chris Mazzullo +
  id: totrans-1415
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chris Mazzullo +
- en: Christian Prinoth
  id: totrans-1416
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Christian Prinoth
- en: Christian Stade-Schuldt
  id: totrans-1417
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Christian Stade-Schuldt
- en: Christoph Moehl +
  id: totrans-1418
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Christoph Moehl +
- en: DSM
  id: totrans-1419
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DSM
- en: Daniel Chen +
  id: totrans-1420
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Daniel Chen +
- en: Daniel Grady
  id: totrans-1421
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Daniel Grady
- en: Daniel Himmelstein
  id: totrans-1422
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Daniel Himmelstein
- en: Dave Willmer
  id: totrans-1423
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dave Willmer
- en: David Cook
  id: totrans-1424
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: David Cook
- en: David Gwynne
  id: totrans-1425
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: David Gwynne
- en: David Read +
  id: totrans-1426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: David Read +
- en: Dillon Niederhut +
  id: totrans-1427
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dillon Niederhut +
- en: Douglas Rudd
  id: totrans-1428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Douglas Rudd
- en: Eric Stein +
  id: totrans-1429
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eric Stein +
- en: Eric Wieser +
  id: totrans-1430
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eric Wieser +
- en: Erik Fredriksen
  id: totrans-1431
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Erik Fredriksen
- en: Florian Wilhelm +
  id: totrans-1432
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Florian Wilhelm +
- en: Floris Kint +
  id: totrans-1433
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Floris Kint +
- en: Forbidden Donut
  id: totrans-1434
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Forbidden Donut
- en: Gabe F +
  id: totrans-1435
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gabe F +
- en: Giftlin +
  id: totrans-1436
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Giftlin +
- en: Giftlin Rajaiah +
  id: totrans-1437
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Giftlin Rajaiah +
- en: Giulio Pepe +
  id: totrans-1438
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Giulio Pepe +
- en: Guilherme Beltramini
  id: totrans-1439
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Guilherme Beltramini
- en: Guillem Borrell +
  id: totrans-1440
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Guillem Borrell +
- en: Hanmin Qin +
  id: totrans-1441
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hanmin Qin +
- en: Hendrik Makait +
  id: totrans-1442
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hendrik Makait +
- en: Hugues Valois
  id: totrans-1443
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hugues Valois
- en: Hussain Tamboli +
  id: totrans-1444
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hussain Tamboli +
- en: Iva Miholic +
  id: totrans-1445
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Iva Miholic +
- en: Jan Novotný +
  id: totrans-1446
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jan Novotný +
- en: Jan Rudolph
  id: totrans-1447
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jan Rudolph
- en: Jean Helie +
  id: totrans-1448
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jean Helie +
- en: Jean-Baptiste Schiratti +
  id: totrans-1449
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jean-Baptiste Schiratti +
- en: Jean-Mathieu Deschenes
  id: totrans-1450
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jean-Mathieu Deschenes
- en: Jeff Knupp +
  id: totrans-1451
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jeff Knupp +
- en: Jeff Reback
  id: totrans-1452
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jeff Reback
- en: Jeff Tratner
  id: totrans-1453
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jeff Tratner
- en: JennaVergeynst
  id: totrans-1454
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JennaVergeynst
- en: JimStearns206
  id: totrans-1455
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JimStearns206
- en: Joel Nothman
  id: totrans-1456
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Joel Nothman
- en: John W. O’Brien
  id: totrans-1457
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: John W. O’Brien
- en: Jon Crall +
  id: totrans-1458
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jon Crall +
- en: Jon Mease
  id: totrans-1459
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jon Mease
- en: Jonathan J. Helmus +
  id: totrans-1460
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jonathan J. Helmus +
- en: Joris Van den Bossche
  id: totrans-1461
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Joris Van den Bossche
- en: JosephWagner
  id: totrans-1462
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JosephWagner
- en: Juarez Bochi
  id: totrans-1463
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Juarez Bochi
- en: Julian Kuhlmann +
  id: totrans-1464
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Julian Kuhlmann +
- en: Karel De Brabandere
  id: totrans-1465
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Karel De Brabandere
- en: Kassandra Keeton +
  id: totrans-1466
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kassandra Keeton +
- en: Keiron Pizzey +
  id: totrans-1467
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Keiron Pizzey +
- en: Keith Webber
  id: totrans-1468
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Keith Webber
- en: Kernc
  id: totrans-1469
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kernc
- en: Kevin Sheppard
  id: totrans-1470
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kevin Sheppard
- en: Kirk Hansen +
  id: totrans-1471
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kirk Hansen +
- en: Licht Takeuchi +
  id: totrans-1472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Licht Takeuchi +
- en: Lucas Kushner +
  id: totrans-1473
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lucas Kushner +
- en: Mahdi Ben Jelloul +
  id: totrans-1474
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mahdi Ben Jelloul +
- en: Makarov Andrey +
  id: totrans-1475
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Makarov Andrey +
- en: Malgorzata Turzanska +
  id: totrans-1476
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Malgorzata Turzanska +
- en: Marc Garcia +
  id: totrans-1477
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Marc Garcia +
- en: Margaret Sy +
  id: totrans-1478
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Margaret Sy +
- en: MarsGuy +
  id: totrans-1479
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MarsGuy +
- en: Matt Bark +
  id: totrans-1480
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Matt Bark +
- en: Matthew Roeschke
  id: totrans-1481
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Matthew Roeschke
- en: Matti Picus
  id: totrans-1482
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Matti Picus
- en: Mehmet Ali “Mali” Akmanalp
  id: totrans-1483
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mehmet Ali “Mali” Akmanalp
- en: Michael Gasvoda +
  id: totrans-1484
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Michael Gasvoda +
- en: Michael Penkov +
  id: totrans-1485
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Michael Penkov +
- en: Milo +
  id: totrans-1486
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Milo +
- en: Morgan Stuart +
  id: totrans-1487
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Morgan Stuart +
- en: Morgan243 +
  id: totrans-1488
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Morgan243 +
- en: Nathan Ford +
  id: totrans-1489
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nathan Ford +
- en: Nick Eubank
  id: totrans-1490
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nick Eubank
- en: Nick Garvey +
  id: totrans-1491
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nick Garvey +
- en: Oleg Shteynbuk +
  id: totrans-1492
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Oleg Shteynbuk +
- en: P-Tillmann +
  id: totrans-1493
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: P-Tillmann +
- en: Pankaj Pandey
  id: totrans-1494
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pankaj Pandey
- en: Patrick Luo
  id: totrans-1495
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Patrick Luo
- en: Patrick O’Melveny
  id: totrans-1496
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Patrick O’Melveny
- en: Paul Reidy +
  id: totrans-1497
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Paul Reidy +
- en: Paula +
  id: totrans-1498
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Paula +
- en: Peter Quackenbush
  id: totrans-1499
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Peter Quackenbush
- en: Peter Yanovich +
  id: totrans-1500
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Peter Yanovich +
- en: Phillip Cloud
  id: totrans-1501
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Phillip Cloud
- en: Pierre Haessig
  id: totrans-1502
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pierre Haessig
- en: Pietro Battiston
  id: totrans-1503
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pietro Battiston
- en: Pradyumna Reddy Chinthala
  id: totrans-1504
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pradyumna Reddy Chinthala
- en: Prasanjit Prakash
  id: totrans-1505
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Prasanjit Prakash
- en: RobinFiveWords
  id: totrans-1506
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RobinFiveWords
- en: Ryan Hendrickson
  id: totrans-1507
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ryan Hendrickson
- en: Sam Foo
  id: totrans-1508
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sam Foo
- en: Sangwoong Yoon +
  id: totrans-1509
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sangwoong Yoon +
- en: Simon Gibbons +
  id: totrans-1510
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Simon Gibbons +
- en: SimonBaron
  id: totrans-1511
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SimonBaron
- en: Steven Cutting +
  id: totrans-1512
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Steven Cutting +
- en: Sudeep +
  id: totrans-1513
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sudeep +
- en: Sylvia +
  id: totrans-1514
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sylvia +
- en: T N +
  id: totrans-1515
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: T N +
- en: Telt
  id: totrans-1516
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Telt
- en: Thomas A Caswell
  id: totrans-1517
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Thomas A Caswell
- en: Tim Swast +
  id: totrans-1518
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tim Swast +
- en: Tom Augspurger
  id: totrans-1519
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tom Augspurger
- en: Tong SHEN
  id: totrans-1520
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tong SHEN
- en: Tuan +
  id: totrans-1521
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tuan +
- en: Utkarsh Upadhyay +
  id: totrans-1522
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Utkarsh Upadhyay +
- en: Vincent La +
  id: totrans-1523
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vincent La +
- en: Vivek +
  id: totrans-1524
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vivek +
- en: WANG Aiyong
  id: totrans-1525
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WANG Aiyong
- en: WBare
  id: totrans-1526
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WBare
- en: Wes McKinney
  id: totrans-1527
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wes McKinney
- en: XF +
  id: totrans-1528
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: XF +
- en: Yi Liu +
  id: totrans-1529
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yi Liu +
- en: Yosuke Nakabayashi +
  id: totrans-1530
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yosuke Nakabayashi +
- en: aaron315 +
  id: totrans-1531
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: aaron315 +
- en: abarber4gh +
  id: totrans-1532
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: abarber4gh +
- en: aernlund +
  id: totrans-1533
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: aernlund +
- en: agustín méndez +
  id: totrans-1534
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: agustín méndez +
- en: andymaheshw +
  id: totrans-1535
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: andymaheshw +
- en: ante328 +
  id: totrans-1536
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ante328 +
- en: aviolov +
  id: totrans-1537
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: aviolov +
- en: bpraggastis
  id: totrans-1538
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: bpraggastis
- en: cbertinato +
  id: totrans-1539
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cbertinato +
- en: cclauss +
  id: totrans-1540
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cclauss +
- en: chernrick
  id: totrans-1541
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: chernrick
- en: chris-b1
  id: totrans-1542
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: chris-b1
- en: dkamm +
  id: totrans-1543
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: dkamm +
- en: dwkenefick
  id: totrans-1544
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: dwkenefick
- en: economy
  id: totrans-1545
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: economy
- en: faic +
  id: totrans-1546
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: faic +
- en: fding253 +
  id: totrans-1547
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: fding253 +
- en: gfyoung
  id: totrans-1548
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: gfyoung
- en: guygoldberg +
  id: totrans-1549
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: guygoldberg +
- en: hhuuggoo +
  id: totrans-1550
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: hhuuggoo +
- en: huashuai +
  id: totrans-1551
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: huashuai +
- en: ian
  id: totrans-1552
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ian
- en: iulia +
  id: totrans-1553
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iulia +
- en: jaredsnyder
  id: totrans-1554
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jaredsnyder
- en: jbrockmendel +
  id: totrans-1555
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jbrockmendel +
- en: jdeschenes
  id: totrans-1556
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jdeschenes
- en: jebob +
  id: totrans-1557
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jebob +
- en: jschendel +
  id: totrans-1558
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jschendel +
- en: keitakurita
  id: totrans-1559
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: keitakurita
- en: kernc +
  id: totrans-1560
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: kernc +
- en: kiwirob +
  id: totrans-1561
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: kiwirob +
- en: kjford
  id: totrans-1562
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: kjford
- en: linebp
  id: totrans-1563
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: linebp
- en: lloydkirk
  id: totrans-1564
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: lloydkirk
- en: louispotok +
  id: totrans-1565
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: louispotok +
- en: majiang +
  id: totrans-1566
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: majiang +
- en: manikbhandari +
  id: totrans-1567
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: manikbhandari +
- en: margotphoenix +
  id: totrans-1568
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: margotphoenix +
- en: matthiashuschle +
  id: totrans-1569
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: matthiashuschle +
- en: mattip
  id: totrans-1570
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: mattip
- en: mjlove12 +
  id: totrans-1571
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: mjlove12 +
- en: nmartensen +
  id: totrans-1572
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: nmartensen +
- en: pandas-docs-bot +
  id: totrans-1573
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas-docs-bot +
- en: parchd-1 +
  id: totrans-1574
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: parchd-1 +
- en: philipphanemann +
  id: totrans-1575
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: philipphanemann +
- en: rdk1024 +
  id: totrans-1576
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: rdk1024 +
- en: reidy-p +
  id: totrans-1577
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: reidy-p +
- en: ri938
  id: totrans-1578
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ri938
- en: ruiann +
  id: totrans-1579
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ruiann +
- en: rvernica +
  id: totrans-1580
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: rvernica +
- en: s-weigand +
  id: totrans-1581
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: s-weigand +
- en: scotthavard92 +
  id: totrans-1582
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: scotthavard92 +
- en: skwbc +
  id: totrans-1583
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: skwbc +
- en: step4me +
  id: totrans-1584
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: step4me +
- en: tobycheese +
  id: totrans-1585
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: tobycheese +
- en: topper-123 +
  id: totrans-1586
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: topper-123 +
- en: tsdlovell
  id: totrans-1587
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: tsdlovell
- en: ysau +
  id: totrans-1588
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ysau +
- en: zzgao +
  id: totrans-1589
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: zzgao +
