- en: scipy.special.comb
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.comb.html#scipy.special.comb](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.comb.html#scipy.special.comb)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The number of combinations of N things taken k at a time.
  prefs: []
  type: TYPE_NORMAL
- en: This is often expressed as “N choose k”.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**N**int, ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Number of things.
  prefs: []
  type: TYPE_NORMAL
- en: '**k**int, ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Number of elements taken.
  prefs: []
  type: TYPE_NORMAL
- en: '**exact**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: For integers, if *exact* is False, then floating point precision is used, otherwise
    the result is computed exactly. For non-integers, if *exact* is True, is disregarded.
  prefs: []
  type: TYPE_NORMAL
- en: '**repetition**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If *repetition* is True, then the number of combinations with repetition is
    computed.
  prefs: []
  type: TYPE_NORMAL
- en: '**legacy**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If *legacy* is True and *exact* is True, then non-integral arguments are cast
    to ints; if *legacy* is False, the result for non-integral arguments is unaffected
    by the value of *exact*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 1.9.0: Using *legacy* is deprecated and will removed
    by Scipy 1.14.0\. If you want to keep the legacy behaviour, cast your inputs directly,
    e.g. `comb(int(your_N), int(your_k), exact=True)`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**val**int, float, ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The total number of combinations.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`binom`](scipy.special.binom.html#scipy.special.binom "scipy.special.binom")'
  prefs: []
  type: TYPE_NORMAL
- en: Binomial coefficient considered as a function of two real variables.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Array arguments accepted only for exact=False case.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If N < 0, or k < 0, then 0 is returned.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If k > N and repetition=False, then 0 is returned.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
