- en: scipy.fftpack.dct
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.fftpack.dct
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fftpack.dct.html#scipy.fftpack.dct](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fftpack.dct.html#scipy.fftpack.dct)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fftpack.dct.html#scipy.fftpack.dct](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fftpack.dct.html#scipy.fftpack.dct)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Return the Discrete Cosine Transform of arbitrary type sequence x.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 返回任意类型序列 x 的离散余弦变换。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '参数:'
- en: '**x**array_like'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**类似数组'
- en: The input array.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数组。
- en: '**type**{1, 2, 3, 4}, optional'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**type**{1, 2, 3, 4}, 可选'
- en: Type of the DCT (see Notes). Default type is 2.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: DCT 的类型（见注意）。默认类型为 2。
- en: '**n**int, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**整数, 可选'
- en: Length of the transform. If `n < x.shape[axis]`, *x* is truncated. If `n > x.shape[axis]`,
    *x* is zero-padded. The default results in `n = x.shape[axis]`.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 变换的长度。如果 `n < x.shape[axis]`，则 *x* 被截断。如果 `n > x.shape[axis]`，则 *x* 被零填充。默认结果为
    `n = x.shape[axis]`。
- en: '**axis**int, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**axis**整数, 可选'
- en: Axis along which the dct is computed; the default is over the last axis (i.e.,
    `axis=-1`).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 dct 的轴；默认为最后一个轴（即 `axis=-1`）。
- en: '**norm**{None, ‘ortho’}, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**norm**{None, ‘ortho’}, 可选'
- en: Normalization mode (see Notes). Default is None.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 归一化模式（见注意）。默认为 None。
- en: '**overwrite_x**bool, optional'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**overwrite_x**bool, 可选'
- en: If True, the contents of *x* can be destroyed; the default is False.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为 True，则 *x* 的内容可以被破坏；默认为 False。
- en: 'Returns:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '返回:'
- en: '**y**ndarray of real'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**y**实数的 ndarray'
- en: The transformed input array.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 转换后的输入数组。
- en: See also
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`idct`](scipy.fftpack.idct.html#scipy.fftpack.idct "scipy.fftpack.idct")'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[`idct`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fftpack.idct.html#scipy.fftpack.idct
    "scipy.fftpack.idct")'
- en: Inverse DCT
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 逆 DCT
- en: Notes
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For a single dimension array `x`, `dct(x, norm='ortho')` is equal to MATLAB
    `dct(x)`.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 对于单维数组 `x`，`dct(x, norm='ortho')` 等同于 MATLAB 中的 `dct(x)`。
- en: There are, theoretically, 8 types of the DCT, only the first 4 types are implemented
    in scipy. ‘The’ DCT generally refers to DCT type 2, and ‘the’ Inverse DCT generally
    refers to DCT type 3.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 理论上有 8 种 DCT，但在 scipy 中只实现了前 4 种。‘The’ DCT 通常指 DCT 类型 2，而‘the’ Inverse DCT 通常指
    DCT 类型 3。
- en: '**Type I**'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**Type I**'
- en: There are several definitions of the DCT-I; we use the following (for `norm=None`)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种 DCT-I 的定义；我们使用以下定义（对于 `norm=None`）
- en: \[y_k = x_0 + (-1)^k x_{N-1} + 2 \sum_{n=1}^{N-2} x_n \cos\left( \frac{\pi k
    n}{N-1} \right)\]
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: \[y_k = x_0 + (-1)^k x_{N-1} + 2 \sum_{n=1}^{N-2} x_n \cos\left( \frac{\pi k
    n}{N-1} \right)\]
- en: If `norm='ortho'`, `x[0]` and `x[N-1]` are multiplied by a scaling factor of
    \(\sqrt{2}\), and `y[k]` is multiplied by a scaling factor `f`
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `norm='ortho'`，`x[0]` 和 `x[N-1]` 被乘以缩放因子 \(\sqrt{2}\)，而 `y[k]` 被乘以缩放因子 `f`
- en: \[\begin{split}f = \begin{cases} \frac{1}{2}\sqrt{\frac{1}{N-1}} & \text{if
    }k=0\text{ or }N-1, \\ \frac{1}{2}\sqrt{\frac{2}{N-1}} & \text{otherwise} \end{cases}\end{split}\]
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}f = \begin{cases} \frac{1}{2}\sqrt{\frac{1}{N-1}} & \text{如果
    }k=0\text{ 或 }N-1, \\ \frac{1}{2}\sqrt{\frac{2}{N-1}} & \text{否则} \end{cases}\end{split}\]
- en: 'New in version 1.2.0: Orthonormalization in DCT-I.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 1.2.0 版本新增：在 DCT-I 中进行正交化。
- en: Note
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The DCT-I is only supported for input size > 1.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 仅支持输入大小 > 1 的 DCT-I。
- en: '**Type II**'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**Type II**'
- en: There are several definitions of the DCT-II; we use the following (for `norm=None`)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种 DCT-II 的定义；我们使用以下定义（对于 `norm=None`）
- en: \[y_k = 2 \sum_{n=0}^{N-1} x_n \cos\left(\frac{\pi k(2n+1)}{2N} \right)\]
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: \[y_k = 2 \sum_{n=0}^{N-1} x_n \cos\left(\frac{\pi k(2n+1)}{2N} \right)\]
- en: If `norm='ortho'`, `y[k]` is multiplied by a scaling factor `f`
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `norm='ortho'`，`y[k]` 被乘以缩放因子 `f`
- en: \[\begin{split}f = \begin{cases} \sqrt{\frac{1}{4N}} & \text{if }k=0, \\ \sqrt{\frac{1}{2N}}
    & \text{otherwise} \end{cases}\end{split}\]
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}f = \begin{cases} \sqrt{\frac{1}{4N}} & \text{如果 }k=0, \\ \sqrt{\frac{1}{2N}}
    & \text{否则} \end{cases}\end{split}\]
- en: which makes the corresponding matrix of coefficients orthonormal (`O @ O.T =
    np.eye(N)`).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 使得对应的系数矩阵正交化 (`O @ O.T = np.eye(N)`).
- en: '**Type III**'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**Type III**'
- en: There are several definitions, we use the following (for `norm=None`)
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种定义，我们使用以下定义（对于 `norm=None`）
- en: \[y_k = x_0 + 2 \sum_{n=1}^{N-1} x_n \cos\left(\frac{\pi(2k+1)n}{2N}\right)\]
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: \[y_k = x_0 + 2 \sum_{n=1}^{N-1} x_n \cos\left(\frac{\pi(2k+1)n}{2N}\right)\]
- en: or, for `norm='ortho'`
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 或者对于 `norm='ortho'`
- en: \[y_k = \frac{x_0}{\sqrt{N}} + \sqrt{\frac{2}{N}} \sum_{n=1}^{N-1} x_n \cos\left(\frac{\pi(2k+1)n}{2N}\right)\]
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: \[y_k = \frac{x_0}{\sqrt{N}} + \sqrt{\frac{2}{N}} \sum_{n=1}^{N-1} x_n \cos\left(\frac{\pi(2k+1)n}{2N}\right)\]
- en: The (unnormalized) DCT-III is the inverse of the (unnormalized) DCT-II, up to
    a factor *2N*. The orthonormalized DCT-III is exactly the inverse of the orthonormalized
    DCT-II.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: (未标准化的) DCT-III 是 (未标准化的) DCT-II 的逆，乘以 *2N* 的因子。正交化的 DCT-III 正好是正交化的 DCT-II
    的逆。
- en: '**Type IV**'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**Type IV**'
- en: There are several definitions of the DCT-IV; we use the following (for `norm=None`)
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种 DCT-IV 的定义；我们使用以下定义（对于 `norm=None`）
- en: \[y_k = 2 \sum_{n=0}^{N-1} x_n \cos\left(\frac{\pi(2k+1)(2n+1)}{4N} \right)\]
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: \[y_k = 2 \sum_{n=0}^{N-1} x_n \cos\left(\frac{\pi(2k+1)(2n+1)}{4N} \right)\]
- en: If `norm='ortho'`, `y[k]` is multiplied by a scaling factor `f`
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `norm='ortho'`，`y[k]` 会乘以一个缩放因子 `f`
- en: \[f = \frac{1}{\sqrt{2N}}\]
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: \[f = \frac{1}{\sqrt{2N}}\]
- en: 'New in version 1.2.0: Support for DCT-IV.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本 1.2.0 中：支持 DCT-IV。
- en: References
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: References
- en: '[1]'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[1]'
- en: ‘A Fast Cosine Transform in One and Two Dimensions’, by J. Makhoul, *IEEE Transactions
    on acoustics, speech and signal processing* vol. 28(1), pp. 27-34, [DOI:10.1109/TASSP.1980.1163351](https://doi.org/10.1109/TASSP.1980.1163351)
    (1980).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: ‘一维和二维快速余弦变换’, 作者 J. Makhoul, *IEEE Transactions on acoustics, speech and signal
    processing* vol. 28(1), pp. 27-34, [DOI:10.1109/TASSP.1980.1163351](https://doi.org/10.1109/TASSP.1980.1163351)
    (1980).
- en: '[2]'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[2]'
- en: Wikipedia, “Discrete cosine transform”, [https://en.wikipedia.org/wiki/Discrete_cosine_transform](https://en.wikipedia.org/wiki/Discrete_cosine_transform)
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Wikipedia，“离散余弦变换”，[https://en.wikipedia.org/wiki/Discrete_cosine_transform](https://en.wikipedia.org/wiki/Discrete_cosine_transform)
- en: Examples
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: 'The Type 1 DCT is equivalent to the FFT (though faster) for real, even-symmetrical
    inputs. The output is also real and even-symmetrical. Half of the FFT input is
    used to generate half of the FFT output:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Type 1 DCT 对于实数、偶对称输入等效于 FFT（尽管更快）。 输出也是实数和偶对称的。 FFT 输入的一半用于生成 FFT 输出的一半：
- en: '[PRE1]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
