["```py\nscipy.optimize.lsq_linear(A, b, bounds=(-inf, inf), method='trf', tol=1e-10, lsq_solver=None, lsmr_tol=None, max_iter=None, verbose=0, *, lsmr_maxiter=None)\n```", "```py\nminimize 0.5 * ||A x - b||**2\nsubject to lb <= x <= ub \n```", "```py\n>>> import numpy as np\n>>> from scipy.sparse import rand\n>>> from scipy.optimize import lsq_linear\n>>> rng = np.random.default_rng()\n...\n>>> m = 20000\n>>> n = 10000\n...\n>>> A = rand(m, n, density=1e-4, random_state=rng)\n>>> b = rng.standard_normal(m)\n...\n>>> lb = rng.standard_normal(n)\n>>> ub = lb + 1\n...\n>>> res = lsq_linear(A, b, bounds=(lb, ub), lsmr_tol='auto', verbose=1)\n# may vary\nThe relative change of the cost function is less than `tol`.\nNumber of iterations 16, initial cost 1.5039e+04, final cost 1.1112e+04,\nfirst-order optimality 4.66e-08. \n```"]