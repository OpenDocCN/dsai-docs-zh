- en: pandas.Series.array
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.Series.array.html](https://pandas.pydata.org/docs/reference/api/pandas.Series.array.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The ExtensionArray of the data backing this Series or Index.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs: []
  type: TYPE_NORMAL
- en: An ExtensionArray of the values stored within. For extension types, this is
    the actual array. For NumPy native types, this is a thin (no copy) wrapper around
    [`numpy.ndarray`](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray
    "(in NumPy v1.26)").
  prefs: []
  type: TYPE_NORMAL
- en: '`.array` differs from `.values`, which may require converting the data to a
    different form.'
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '`Index.to_numpy`'
  prefs: []
  type: TYPE_NORMAL
- en: Similar method that always returns a NumPy array.
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.to_numpy`](pandas.Series.to_numpy.html#pandas.Series.to_numpy "pandas.Series.to_numpy")'
  prefs: []
  type: TYPE_NORMAL
- en: Similar method that always returns a NumPy array.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This table lays out the different array types for each extension dtype within
    pandas.
  prefs: []
  type: TYPE_NORMAL
- en: '| dtype | array type |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| category | Categorical |'
  prefs: []
  type: TYPE_TB
- en: '| period | PeriodArray |'
  prefs: []
  type: TYPE_TB
- en: '| interval | IntervalArray |'
  prefs: []
  type: TYPE_TB
- en: '| IntegerNA | IntegerArray |'
  prefs: []
  type: TYPE_TB
- en: '| string | StringArray |'
  prefs: []
  type: TYPE_TB
- en: '| boolean | BooleanArray |'
  prefs: []
  type: TYPE_TB
- en: '| datetime64[ns, tz] | DatetimeArray |'
  prefs: []
  type: TYPE_TB
- en: For any 3rd-party extension types, the array type will be an ExtensionArray.
  prefs: []
  type: TYPE_NORMAL
- en: For all remaining dtypes `.array` will be a [`arrays.NumpyExtensionArray`](pandas.arrays.NumpyExtensionArray.html#pandas.arrays.NumpyExtensionArray
    "pandas.arrays.NumpyExtensionArray") wrapping the actual ndarray stored within.
    If you absolutely need a NumPy array (possibly with copying / coercing data),
    then use [`Series.to_numpy()`](pandas.Series.to_numpy.html#pandas.Series.to_numpy
    "pandas.Series.to_numpy") instead.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: For regular NumPy types like int, and float, a NumpyExtensionArray is returned.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: For extension types, like Categorical, the actual ExtensionArray is returned
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
