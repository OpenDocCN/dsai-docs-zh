- en: Workouts Monitoring using Ultralytics YOLOv8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[`docs.ultralytics.com/guides/workouts-monitoring/`](https://docs.ultralytics.com/guides/workouts-monitoring/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Monitoring workouts through pose estimation with [Ultralytics YOLOv8](https://github.com/ultralytics/ultralytics/)
    enhances exercise assessment by accurately tracking key body landmarks and joints
    in real-time. This technology provides instant feedback on exercise form, tracks
    workout routines, and measures performance metrics, optimizing training sessions
    for users and trainers alike.
  prefs: []
  type: TYPE_NORMAL
- en: '[`www.youtube.com/embed/LGGxqLZtvuw`](https://www.youtube.com/embed/LGGxqLZtvuw)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Watch:** Workouts Monitoring using Ultralytics YOLOv8 | Pushups, Pullups,
    Ab Workouts'
  prefs: []
  type: TYPE_NORMAL
- en: Advantages of Workouts Monitoring?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Optimized Performance:** Tailoring workouts based on monitoring data for
    better results.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Goal Achievement:** Track and adjust fitness goals for measurable progress.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Personalization:** Customized workout plans based on individual data for
    effectiveness.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Health Awareness:** Early detection of patterns indicating health issues
    or over-training.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Informed Decisions:** Data-driven decisions for adjusting routines and setting
    realistic goals.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Real World Applications
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| Workouts Monitoring | Workouts Monitoring |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| ![PushUps Counting](img/5a38cc37406ed6c3975131cd827883b6.png) | ![PullUps
    Counting](img/01058167829eb5610763d89ca812e97f.png) |'
  prefs: []
  type: TYPE_TB
- en: '| PushUps Counting | PullUps Counting |'
  prefs: []
  type: TYPE_TB
- en: Workouts Monitoring Example
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: <details class="tip" open="open"><summary>Support</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '"pushup", "pullup" and "abworkout" supported</details>'
  prefs: []
  type: TYPE_NORMAL
- en: KeyPoints Map
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![keyPoints Order Ultralytics YOLOv8 Pose](img/ed8b8071fda887f4d4ef49e0499ccd80.png)'
  prefs: []
  type: TYPE_IMG
- en: Arguments `AIGym`
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| Name | Type | Default | Description |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `kpts_to_check` | `list` | `None` | List of three keypoints index, for counting
    specific workout, followed by keypoint Map |'
  prefs: []
  type: TYPE_TB
- en: '| `line_thickness` | `int` | `2` | Thickness of the lines drawn. |'
  prefs: []
  type: TYPE_TB
- en: '| `view_img` | `bool` | `False` | Flag to display the image. |'
  prefs: []
  type: TYPE_TB
- en: '| `pose_up_angle` | `float` | `145.0` | Angle threshold for the ''up'' pose.
    |'
  prefs: []
  type: TYPE_TB
- en: '| `pose_down_angle` | `float` | `90.0` | Angle threshold for the ''down'' pose.
    |'
  prefs: []
  type: TYPE_TB
- en: '| `pose_type` | `str` | `pullup` | Type of pose to detect (`''pullup`'', `pushup`,
    `abworkout`, `squat`). |'
  prefs: []
  type: TYPE_TB
- en: Arguments `model.predict`
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| Name | Type | Default | Description |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `source` | `str` | `''ultralytics/assets''` | source directory for images
    or videos |'
  prefs: []
  type: TYPE_TB
- en: '| `conf` | `float` | `0.25` | object confidence threshold for detection |'
  prefs: []
  type: TYPE_TB
- en: '| `iou` | `float` | `0.7` | intersection over union (IoU) threshold for NMS
    |'
  prefs: []
  type: TYPE_TB
- en: '| `imgsz` | `int or tuple` | `640` | image size as scalar or (h, w) list, i.e.
    (640, 480) |'
  prefs: []
  type: TYPE_TB
- en: '| `half` | `bool` | `False` | use half precision (FP16) |'
  prefs: []
  type: TYPE_TB
- en: '| `device` | `None or str` | `None` | device to run on, i.e. cuda device=0/1/2/3
    or device=cpu |'
  prefs: []
  type: TYPE_TB
- en: '| `max_det` | `int` | `300` | maximum number of detections per image |'
  prefs: []
  type: TYPE_TB
- en: '| `vid_stride` | `bool` | `False` | video frame-rate stride |'
  prefs: []
  type: TYPE_TB
- en: '| `stream_buffer` | `bool` | `False` | buffer all streaming frames (True) or
    return the most recent frame (False) |'
  prefs: []
  type: TYPE_TB
- en: '| `visualize` | `bool` | `False` | visualize model features |'
  prefs: []
  type: TYPE_TB
- en: '| `augment` | `bool` | `False` | apply image augmentation to prediction sources
    |'
  prefs: []
  type: TYPE_TB
- en: '| `agnostic_nms` | `bool` | `False` | class-agnostic NMS |'
  prefs: []
  type: TYPE_TB
- en: '| `classes` | `list[int]` | `None` | filter results by class, i.e. classes=0,
    or classes=[0,2,3] |'
  prefs: []
  type: TYPE_TB
- en: '| `retina_masks` | `bool` | `False` | use high-resolution segmentation masks
    |'
  prefs: []
  type: TYPE_TB
- en: '| `embed` | `list[int]` | `None` | return feature vectors/embeddings from given
    layers |'
  prefs: []
  type: TYPE_TB
- en: Arguments `model.track`
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| Name | Type | Default | Description |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `source` | `im0` | `None` | source directory for images or videos |'
  prefs: []
  type: TYPE_TB
- en: '| `persist` | `bool` | `False` | persisting tracks between frames |'
  prefs: []
  type: TYPE_TB
- en: '| `tracker` | `str` | `botsort.yaml` | Tracking method ''bytetrack'' or ''botsort''
    |'
  prefs: []
  type: TYPE_TB
- en: '| `conf` | `float` | `0.3` | Confidence Threshold |'
  prefs: []
  type: TYPE_TB
- en: '| `iou` | `float` | `0.5` | IOU Threshold |'
  prefs: []
  type: TYPE_TB
- en: '| `classes` | `list` | `None` | filter results by class, i.e. classes=0, or
    classes=[0,2,3] |'
  prefs: []
  type: TYPE_TB
- en: '| `verbose` | `bool` | `True` | Display the object tracking results |'
  prefs: []
  type: TYPE_TB
- en: FAQ
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: How do I monitor my workouts using Ultralytics YOLOv8?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To monitor your workouts using Ultralytics YOLOv8, you can utilize the pose
    estimation capabilities to track and analyze key body landmarks and joints in
    real-time. This allows you to receive instant feedback on your exercise form,
    count repetitions, and measure performance metrics. You can start by using the
    provided example code for pushups, pullups, or ab workouts as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: For further customization and settings, you can refer to the AIGym section in
    the documentation.
  prefs: []
  type: TYPE_NORMAL
- en: What are the benefits of using Ultralytics YOLOv8 for workout monitoring?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Using Ultralytics YOLOv8 for workout monitoring provides several key benefits:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Optimized Performance:** By tailoring workouts based on monitoring data,
    you can achieve better results.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Goal Achievement:** Easily track and adjust fitness goals for measurable
    progress.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Personalization:** Get customized workout plans based on your individual
    data for optimal effectiveness.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Health Awareness:** Early detection of patterns that indicate potential health
    issues or over-training.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Informed Decisions:** Make data-driven decisions to adjust routines and set
    realistic goals.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can watch a [YouTube video demonstration](https://www.youtube.com/watch?v=LGGxqLZtvuw)
    to see these benefits in action.
  prefs: []
  type: TYPE_NORMAL
- en: How accurate is Ultralytics YOLOv8 in detecting and tracking exercises?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Ultralytics YOLOv8 is highly accurate in detecting and tracking exercises due
    to its state-of-the-art pose estimation capabilities. It can accurately track
    key body landmarks and joints, providing real-time feedback on exercise form and
    performance metrics. The model's pretrained weights and robust architecture ensure
    high precision and reliability. For real-world examples, check out the real-world
    applications section in the documentation, which showcases pushups and pullups
    counting.
  prefs: []
  type: TYPE_NORMAL
- en: Can I use Ultralytics YOLOv8 for custom workout routines?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Yes, Ultralytics YOLOv8 can be adapted for custom workout routines. The `AIGym`
    class supports different pose types such as "pushup", "pullup", and "abworkout."
    You can specify keypoints and angles to detect specific exercises. Here is an
    example setup:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: For more details on setting arguments, refer to the Arguments `AIGym` section.
    This flexibility allows you to monitor various exercises and customize routines
    based on your needs.
  prefs: []
  type: TYPE_NORMAL
- en: How can I save the workout monitoring output using Ultralytics YOLOv8?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To save the workout monitoring output, you can modify the code to include a
    video writer that saves the processed frames. Here''s an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: This setup writes the monitored video to an output file. For more details, refer
    to the Workouts Monitoring with Save Output section.
  prefs: []
  type: TYPE_NORMAL
