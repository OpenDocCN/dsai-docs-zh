- en: pandas.DataFrame.assign
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.assign.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.assign.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Assign new columns to a DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: Returns a new object with all original columns in addition to new ones. Existing
    columns that are re-assigned will be overwritten.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '****kwargs**dict of {str: callable or Series}'
  prefs: []
  type: TYPE_NORMAL
- en: The column names are keywords. If the values are callable, they are computed
    on the DataFrame and assigned to the new columns. The callable must not change
    input DataFrame (though pandas doesn’t check it). If the values are not callable,
    (e.g. a Series, scalar, or array), they are simply assigned.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: A new DataFrame with the new columns in addition to all the existing columns.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Assigning multiple columns within the same `assign` is possible. Later items
    in ‘**kwargs’ may refer to newly created or modified columns in ‘df’; items are
    computed and assigned into ‘df’ in order.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Where the value is a callable, evaluated on df:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Alternatively, the same behavior can be achieved by directly referencing an
    existing Series or sequence:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'You can create multiple columns within the same assign where one of the columns
    depends on another one defined within the same assign:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
