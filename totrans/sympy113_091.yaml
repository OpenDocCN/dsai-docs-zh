- en: Inequality Solvers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/solvers/inequalities.html](https://docs.sympy.org/latest/modules/solvers/inequalities.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: For general cases [`reduce_inequalities()`](#sympy.solvers.inequalities.reduce_inequalities
    "sympy.solvers.inequalities.reduce_inequalities") should be used. Other functions
    are the subcategories useful for special dedicated operations, and will be called
    internally as needed by `reduce_inequalities`.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: For a beginner-friendly guide focused on solving inequalities, refer to [Reduce
    One or a System of Inequalities for a Single Variable Algebraically](../../guides/solving/reduce-inequalities-algebraically.html#solving-guide-inequalities).
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Some of the examples below use [`poly()`](../polys/reference.html#sympy.polys.polytools.poly
    "sympy.polys.polytools.poly"), which simply transforms an expression into a polynomial;
    it does not change the mathematical meaning of the expression.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Solve a system of rational inequalities with rational coefficients.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`solve_poly_inequality`](#sympy.solvers.inequalities.solve_poly_inequality
    "sympy.solvers.inequalities.solve_poly_inequality")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Solve a polynomial inequality with rational coefficients.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`solve_poly_inequalities`](#sympy.solvers.inequalities.solve_poly_inequalities
    "sympy.solvers.inequalities.solve_poly_inequalities")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Solve polynomial inequalities with rational coefficients.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Reduce a system of rational inequalities with rational coefficients.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'This function find the non-infinite solution set so if the unknown symbol is
    declared as extended real rather than real then the result may include finiteness
    conditions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Reduce an inequality with nested absolute values.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`reduce_abs_inequalities`](#sympy.solvers.inequalities.reduce_abs_inequalities
    "sympy.solvers.inequalities.reduce_abs_inequalities")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Reduce a system of inequalities with nested absolute values.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`reduce_abs_inequality`](#sympy.solvers.inequalities.reduce_abs_inequality
    "sympy.solvers.inequalities.reduce_abs_inequality")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: Reduce a system of inequalities with rational coefficients.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: Solves a real univariate inequality.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**expr** : Relational'
  prefs: []
  type: TYPE_NORMAL
- en: The target inequality
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**gen** : Symbol'
  prefs: []
  type: TYPE_NORMAL
- en: The variable for which the inequality is solved
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**relational** : bool'
  prefs: []
  type: TYPE_NORMAL
- en: A Relational type output is expected or not
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**domain** : Set'
  prefs: []
  type: TYPE_NORMAL
- en: The domain over which the equation is solved
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**continuous: bool**'
  prefs: []
  type: TYPE_NORMAL
- en: True if expr is known to be continuous over the given domain (and so continuous_domain()
    does not need to be called on it)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: '**NotImplementedError**'
  prefs: []
  type: TYPE_NORMAL
- en: The solution of the inequality cannot be determined due to limitation in [`sympy.solvers.solveset.solvify()`](solveset.html#sympy.solvers.solveset.solvify
    "sympy.solvers.solveset.solvify").
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Currently, we cannot solve all the inequalities due to limitations in [`sympy.solvers.solveset.solvify()`](solveset.html#sympy.solvers.solveset.solvify
    "sympy.solvers.solveset.solvify"). Also, the solution returned for trigonometric
    inequalities are restricted in its periodic interval.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.solvers.solveset.solvify`](solveset.html#sympy.solvers.solveset.solvify
    "sympy.solvers.solveset.solvify")'
  prefs: []
  type: TYPE_NORMAL
- en: solver returning solveset solutions with solve’s output API
  prefs: []
  type: TYPE_NORMAL
