["```py\nint PyArray_NDIM( *arr)\n```", "```py\nint PyArray_FLAGS( *arr)\n```", "```py\nint PyArray_TYPE( *arr)\n```", "```py\nint PyArray_SETITEM( *arr, void *itemptr, *obj)\n```", "```py\nvoid PyArray_ENABLEFLAGS( *arr, int flags)\n```", "```py\nvoid PyArray_CLEARFLAGS( *arr, int flags)\n```", "```py\nvoid *PyArray_DATA( *arr)\n```", "```py\nchar *PyArray_BYTES( *arr)\n```", "```py\n*PyArray_DIMS( *arr)\n```", "```py\n*PyArray_SHAPE( *arr)\n```", "```py\n*PyArray_STRIDES( *arr)\n```", "```py\nPyArray_DIM( *arr, int n)\n```", "```py\nPyArray_STRIDE( *arr, int n)\n```", "```py\nPyArray_ITEMSIZE( *arr)\n```", "```py\nPyArray_SIZE( *arr)\n```", "```py\nPyArray_Size( *obj)\n```", "```py\nPyArray_NBYTES( *arr)\n```", "```py\n*PyArray_BASE( *arr)\n```", "```py\n*PyArray_DESCR( *arr)\n```", "```py\n*PyArray_DTYPE( *arr)\n```", "```py\n*PyArray_GETITEM( *arr, void *itemptr)\n```", "```py\nint PyArray_FinalizeFunc( *arr, *obj)\n```", "```py\nvoid *PyArray_GetPtr( *aobj, *ind)\n```", "```py\nvoid *PyArray_GETPTR1( *obj, i)\n```", "```py\nvoid *PyArray_GETPTR2( *obj, i, j)\n```", "```py\nvoid *PyArray_GETPTR3( *obj, i, j, k)\n```", "```py\nvoid *PyArray_GETPTR4( *obj, i, j, k, l)\n```", "```py\n*PyArray_NewFromDescr( *subtype, *descr, int nd, const *dims, const *strides, void *data, int flags, *obj)\n```", "```py\n*PyArray_NewLikeArray( *prototype, order, *descr, int subok)\n```", "```py\n*PyArray_New( *subtype, int nd, const *dims, int type_num, const *strides, void *data, int itemsize, int flags, *obj)\n```", "```py\n*PyArray_SimpleNew(int nd, const *dims, int typenum)\n```", "```py\n*PyArray_SimpleNewFromData(int nd, const *dims, int typenum, void *data)\n```", "```py\n*PyArray_SimpleNewFromDescr(int nd, const *dims, *descr)\n```", "```py\nvoid PyArray_FILLWBYTE( *obj, int val)\n```", "```py\n*PyArray_Zeros(int nd, const *dims, *dtype, int fortran)\n```", "```py\n*PyArray_ZEROS(int nd, const *dims, int type_num, int fortran)\n```", "```py\n*PyArray_Empty(int nd, const *dims, *dtype, int fortran)\n```", "```py\n*PyArray_EMPTY(int nd, const *dims, int typenum, int fortran)\n```", "```py\n*PyArray_Arange(double start, double stop, double step, int typenum)\n```", "```py\n*PyArray_ArangeObj( *start, *stop, *step, *descr)\n```", "```py\nint PyArray_SetBaseObject( *arr, *obj)\n```", "```py\n*PyArray_FromAny( *op, *dtype, int min_depth, int max_depth, int requirements, *context)\n```", "```py\nNPY_ARRAY_C_CONTIGUOUS\n```", "```py\nNPY_ARRAY_F_CONTIGUOUS\n```", "```py\nNPY_ARRAY_ALIGNED\n```", "```py\nNPY_ARRAY_WRITEABLE\n```", "```py\nNPY_ARRAY_ENSURECOPY\n```", "```py\nNPY_ARRAY_ENSUREARRAY\n```", "```py\nNPY_ARRAY_FORCECAST\n```", "```py\nNPY_ARRAY_WRITEBACKIFCOPY\n```", "```py\nNPY_ARRAY_BEHAVED\n```", "```py\nNPY_ARRAY_CARRAY\n```", "```py\nNPY_ARRAY_CARRAY_RO\n```", "```py\nNPY_ARRAY_FARRAY\n```", "```py\nNPY_ARRAY_FARRAY_RO\n```", "```py\nNPY_ARRAY_DEFAULT\n```", "```py\nNPY_ARRAY_IN_ARRAY\n```", "```py\nNPY_ARRAY_IN_FARRAY\n```", "```py\nNPY_OUT_ARRAY\n```", "```py\nNPY_ARRAY_OUT_ARRAY\n```", "```py\nNPY_ARRAY_OUT_FARRAY\n```", "```py\nNPY_ARRAY_INOUT_ARRAY\n```", "```py\nNPY_ARRAY_INOUT_FARRAY\n```", "```py\n*PyArray_CheckFromAny( *op, *dtype, int min_depth, int max_depth, int requirements, *context)\n```", "```py\nNPY_ARRAY_NOTSWAPPED\n```", "```py\nNPY_ARRAY_BEHAVED_NS\n```", "```py\nNPY_ARRAY_ELEMENTSTRIDES\n```", "```py\n*PyArray_FromArray( *op, *newtype, int requirements)\n```", "```py\n*PyArray_FromStructInterface( *op)\n```", "```py\n*PyArray_FromInterface( *op)\n```", "```py\n*PyArray_FromArrayAttr( *op, *dtype, *context)\n```", "```py\n*PyArray_ContiguousFromAny( *op, int typenum, int min_depth, int max_depth)\n```", "```py\n*PyArray_ContiguousFromObject( *op, int typenum, int min_depth, int max_depth)\n```", "```py\n*PyArray_FromObject( *op, int typenum, int min_depth, int max_depth)\n```", "```py\n*PyArray_EnsureArray( *op)\n```", "```py\n*PyArray_FromString(char *string, slen, *dtype, num, char *sep)\n```", "```py\n*PyArray_FromFile(FILE *fp, *dtype, num, char *sep)\n```", "```py\n*PyArray_FromBuffer( *buf, *dtype, count, offset)\n```", "```py\nint PyArray_CopyInto( *dest, *src)\n```", "```py\nint PyArray_CopyObject( *dest, *src)\n```", "```py\nint PyArray_MoveInto( *dest, *src)\n```", "```py\n*PyArray_GETCONTIGUOUS( *op)\n```", "```py\n*PyArray_FROM_O( *obj)\n```", "```py\n*PyArray_FROM_OF( *obj, int requirements)\n```", "```py\n*PyArray_FROM_OT( *obj, int typenum)\n```", "```py\n*PyArray_FROM_OTF( *obj, int typenum, int requirements)\n```", "```py\n*PyArray_FROMANY( *obj, int typenum, int min, int max, int requirements)\n```", "```py\n*PyArray_CheckAxis( *obj, int *axis, int requirements)\n```", "```py\nint PyArray_Check( *op)\n```", "```py\nint PyArray_CheckExact( *op)\n```", "```py\nint PyArray_HasArrayInterface( *op, *out)\n```", "```py\nint PyArray_HasArrayInterfaceType( *op, *dtype, *context, *out)\n```", "```py\nint PyArray_IsZeroDim( *op)\n```", "```py\nPyArray_IsScalar(op, cls)\n```", "```py\nint PyArray_CheckScalar( *op)\n```", "```py\nint PyArray_IsPythonNumber( *op)\n```", "```py\nint PyArray_IsPythonScalar( *op)\n```", "```py\nint PyArray_IsAnyScalar( *op)\n```", "```py\nint PyArray_CheckAnyScalar( *op)\n```", "```py\nint PyTypeNum_ISUNSIGNED(int num)\n```", "```py\nint PyDataType_ISUNSIGNED( *descr)\n```", "```py\nint PyArray_ISUNSIGNED( *obj)\n```", "```py\nint PyTypeNum_ISSIGNED(int num)\n```", "```py\nint PyDataType_ISSIGNED( *descr)\n```", "```py\nint PyArray_ISSIGNED( *obj)\n```", "```py\nint PyTypeNum_ISINTEGER(int num)\n```", "```py\nint PyDataType_ISINTEGER( *descr)\n```", "```py\nint PyArray_ISINTEGER( *obj)\n```", "```py\nint PyTypeNum_ISFLOAT(int num)\n```", "```py\nint PyDataType_ISFLOAT( *descr)\n```", "```py\nint PyArray_ISFLOAT( *obj)\n```", "```py\nint PyTypeNum_ISCOMPLEX(int num)\n```", "```py\nint PyDataType_ISCOMPLEX( *descr)\n```", "```py\nint PyArray_ISCOMPLEX( *obj)\n```", "```py\nint PyTypeNum_ISNUMBER(int num)\n```", "```py\nint PyDataType_ISNUMBER( *descr)\n```", "```py\nint PyArray_ISNUMBER( *obj)\n```", "```py\nint PyTypeNum_ISSTRING(int num)\n```", "```py\nint PyDataType_ISSTRING( *descr)\n```", "```py\nint PyArray_ISSTRING( *obj)\n```", "```py\nint PyTypeNum_ISPYTHON(int num)\n```", "```py\nint PyDataType_ISPYTHON( *descr)\n```", "```py\nint PyArray_ISPYTHON( *obj)\n```", "```py\nint PyTypeNum_ISFLEXIBLE(int num)\n```", "```py\nint PyDataType_ISFLEXIBLE( *descr)\n```", "```py\nint PyArray_ISFLEXIBLE( *obj)\n```", "```py\nint PyDataType_ISUNSIZED( *descr)\n```", "```py\nint PyTypeNum_ISUSERDEF(int num)\n```", "```py\nint PyDataType_ISUSERDEF( *descr)\n```", "```py\nint PyArray_ISUSERDEF( *obj)\n```", "```py\nint PyTypeNum_ISEXTENDED(int num)\n```", "```py\nint PyDataType_ISEXTENDED( *descr)\n```", "```py\nint PyArray_ISEXTENDED( *obj)\n```", "```py\nint PyTypeNum_ISOBJECT(int num)\n```", "```py\nint PyDataType_ISOBJECT( *descr)\n```", "```py\nint PyArray_ISOBJECT( *obj)\n```", "```py\nint PyTypeNum_ISBOOL(int num)\n```", "```py\nint PyDataType_ISBOOL( *descr)\n```", "```py\nint PyArray_ISBOOL( *obj)\n```", "```py\nint PyDataType_HASFIELDS( *descr)\n```", "```py\nint PyArray_HASFIELDS( *obj)\n```", "```py\nint PyArray_ISNOTSWAPPED( *m)\n```", "```py\nint PyArray_ISBYTESWAPPED( *m)\n```", "```py\nPyArray_EquivTypes( *type1, *type2)\n```", "```py\nPyArray_EquivArrTypes( *a1, *a2)\n```", "```py\nPyArray_EquivTypenums(int typenum1, int typenum2)\n```", "```py\nint PyArray_EquivByteorders(int b1, int b2)\n```", "```py\n*PyArray_Cast( *arr, int typenum)\n```", "```py\n*PyArray_CastToType( *arr, *type, int fortran)\n```", "```py\nint PyArray_CastTo( *out, *in)\n```", "```py\nPyArray_VectorUnaryFunc *PyArray_GetCastFunc( *from, int totype)\n```", "```py\nint PyArray_CanCastSafely(int fromtype, int totype)\n```", "```py\nint PyArray_CanCastTo( *fromtype, *totype)\n```", "```py\nint PyArray_CanCastTypeTo( *fromtype, *totype, casting)\n```", "```py\nint PyArray_CanCastArrayTo( *arr, *totype, casting)\n```", "```py\n*PyArray_MinScalarType( *arr)\n```", "```py\n*PyArray_PromoteTypes( *type1, *type2)\n```", "```py\n*PyArray_ResultType( narrs, **arrs, ndtypes, **dtypes)\n```", "```py\nint PyArray_ObjectType( *op, int mintype)\n```", "```py\n**PyArray_ConvertToCommonType( *op, int *n)\n```", "```py\nmps  =  PyArray_ConvertToCommonType(obj,  &n);\nif  (mps==NULL)  return  NULL;\n{code}\n<before  return>\nfor  (i=0;  i<n;  i++)  Py_DECREF(mps[i]);\nPyDataMem_FREE(mps);\n{return} \n```", "```py\nchar *PyArray_Zero( *arr)\n```", "```py\nchar *PyArray_One( *arr)\n```", "```py\nint PyArray_ValidType(int typenum)\n```", "```py\nvoid PyArray_InitArrFuncs( *f)\n```", "```py\nint PyArray_RegisterDataType( *dtype)\n```", "```py\nint PyArray_RegisterCastFunc( *descr, int totype, PyArray_VectorUnaryFunc *castfunc)\n```", "```py\nint PyArray_RegisterCanCast( *descr, int totype, scalar)\n```", "```py\nint PyArray_TypeNumFromName(char const *str)\n```", "```py\nint PyArray_INCREF( *op)\n```", "```py\nvoid PyArray_Item_INCREF(char *ptr, *dtype)\n```", "```py\nint PyArray_XDECREF( *op)\n```", "```py\nvoid PyArray_Item_XDECREF(char *ptr, *dtype)\n```", "```py\nvoid PyArray_FillObjectArray( *arr, *obj)\n```", "```py\nint PyArray_SetWritebackIfCopyBase( *arr, *base)\n```", "```py\nNPY_ARRAY_C_CONTIGUOUS\n```", "```py\nNPY_ARRAY_F_CONTIGUOUS\n```", "```py\nNPY_ARRAY_OWNDATA\n```", "```py\nNPY_ARRAY_ALIGNED\n```", "```py\nNPY_ARRAY_WRITEABLE\n```", "```py\nNPY_ARRAY_WRITEBACKIFCOPY\n```", "```py\nNPY_ARRAY_BEHAVED\n```", "```py\nNPY_ARRAY_CARRAY\n```", "```py\nNPY_ARRAY_CARRAY_RO\n```", "```py\nNPY_ARRAY_FARRAY\n```", "```py\nNPY_ARRAY_FARRAY_RO\n```", "```py\nNPY_ARRAY_DEFAULT\n```", "```py\nNPY_ARRAY_UPDATE_ALL\n```", "```py\nNPY_ARRAY_FORCECAST\n```", "```py\nNPY_ARRAY_ENSURECOPY\n```", "```py\nNPY_ARRAY_ENSUREARRAY\n```", "```py\nint PyArray_CHKFLAGS( *arr, int flags)\n```", "```py\nint PyArray_IS_C_CONTIGUOUS( *arr)\n```", "```py\nint PyArray_IS_F_CONTIGUOUS( *arr)\n```", "```py\nint PyArray_ISFORTRAN( *arr)\n```", "```py\nint PyArray_ISWRITEABLE( *arr)\n```", "```py\nint PyArray_ISALIGNED( *arr)\n```", "```py\nint PyArray_ISBEHAVED( *arr)\n```", "```py\nint PyArray_ISBEHAVED_RO( *arr)\n```", "```py\nint PyArray_ISCARRAY( *arr)\n```", "```py\nint PyArray_ISFARRAY( *arr)\n```", "```py\nint PyArray_ISCARRAY_RO( *arr)\n```", "```py\nint PyArray_ISFARRAY_RO( *arr)\n```", "```py\nint PyArray_ISONESEGMENT( *arr)\n```", "```py\nvoid PyArray_UpdateFlags( *arr, int flagmask)\n```", "```py\nint PyArray_FailUnlessWriteable( *obj, const char *name)\n```", "```py\n*PyArray_GetField( *self, *dtype, int offset)\n```", "```py\nint PyArray_SetField( *self, *dtype, int offset, *val)\n```", "```py\n*PyArray_Byteswap( *self, inplace)\n```", "```py\n*PyArray_NewCopy( *old, order)\n```", "```py\n*PyArray_ToList( *self)\n```", "```py\n*PyArray_ToString( *self, order)\n```", "```py\n*PyArray_ToFile( *self, FILE *fp, char *sep, char *format)\n```", "```py\nint PyArray_Dump( *self, *file, int protocol)\n```", "```py\n*PyArray_Dumps( *self, int protocol)\n```", "```py\nint PyArray_FillWithScalar( *arr, *obj)\n```", "```py\n*PyArray_View( *self, *dtype, *ptype)\n```", "```py\n*PyArray_Newshape( *self, *newshape, order)\n```", "```py\n*PyArray_Reshape( *self, *shape)\n```", "```py\n*PyArray_Squeeze( *self)\n```", "```py\n*PyArray_SwapAxes( *self, int a1, int a2)\n```", "```py\n*PyArray_Resize( *self, *newshape, int refcheck, fortran)\n```", "```py\n*PyArray_Transpose( *self, *permute)\n```", "```py\n*PyArray_Flatten( *self, order)\n```", "```py\n*PyArray_Ravel( *self, order)\n```", "```py\n*PyArray_TakeFrom( *self, *indices, int axis, *ret, clipmode)\n```", "```py\n*PyArray_PutTo( *self, *values, *indices, clipmode)\n```", "```py\n*PyArray_PutMask( *self, *values, *mask)\n```", "```py\n*PyArray_Repeat( *self, *op, int axis)\n```", "```py\n*PyArray_Choose( *self, *op, *ret, clipmode)\n```", "```py\nNPY_RAISE\n```", "```py\nNPY_WRAP\n```", "```py\nNPY_CLIP\n```", "```py\n*PyArray_Sort( *self, int axis, kind)\n```", "```py\n*PyArray_ArgSort( *self, int axis)\n```", "```py\n*PyArray_LexSort( *sort_keys, int axis)\n```", "```py\n*PyArray_SearchSorted( *self, *values, side, *perm)\n```", "```py\nint PyArray_Partition( *self, *ktharray, int axis, which)\n```", "```py\n*PyArray_ArgPartition( *op, *ktharray, int axis, which)\n```", "```py\n*PyArray_Diagonal( *self, int offset, int axis1, int axis2)\n```", "```py\nPyArray_CountNonzero( *self)\n```", "```py\n*PyArray_Nonzero( *self)\n```", "```py\n*PyArray_Compress( *self, *condition, int axis, *out)\n```", "```py\n*PyArray_ArgMax( *self, int axis, *out)\n```", "```py\n*PyArray_ArgMin( *self, int axis, *out)\n```", "```py\n*PyArray_Max( *self, int axis, *out)\n```", "```py\n*PyArray_Min( *self, int axis, *out)\n```", "```py\n*PyArray_Ptp( *self, int axis, *out)\n```", "```py\n*PyArray_Mean( *self, int axis, int rtype, *out)\n```", "```py\n*PyArray_Trace( *self, int offset, int axis1, int axis2, int rtype, *out)\n```", "```py\n*PyArray_Clip( *self, *min, *max)\n```", "```py\n*PyArray_Conjugate( *self)\n```", "```py\n*PyArray_Round( *self, int decimals, *out)\n```", "```py\n*PyArray_Std( *self, int axis, int rtype, *out)\n```", "```py\n*PyArray_Sum( *self, int axis, int rtype, *out)\n```", "```py\n*PyArray_CumSum( *self, int axis, int rtype, *out)\n```", "```py\n*PyArray_Prod( *self, int axis, int rtype, *out)\n```", "```py\n*PyArray_CumProd( *self, int axis, int rtype, *out)\n```", "```py\n*PyArray_All( *self, int axis, *out)\n```", "```py\n*PyArray_Any( *self, int axis, *out)\n```", "```py\nint PyArray_AsCArray( **op, void *ptr, *dims, int nd, *typedescr)\n```", "```py\nint PyArray_Free( *op, void *ptr)\n```", "```py\n*PyArray_Concatenate( *obj, int axis)\n```", "```py\n*PyArray_InnerProduct( *obj1, *obj2)\n```", "```py\n*PyArray_MatrixProduct( *obj1, *obj)\n```", "```py\n*PyArray_MatrixProduct2( *obj1, *obj, *out)\n```", "```py\n*PyArray_EinsteinSum(char *subscripts, nop, **op_in, *dtype, order, casting, *out)\n```", "```py\n*PyArray_CopyAndTranspose( *op)\n```", "```py\n*PyArray_Correlate( *op1, *op2, int mode)\n```", "```py\n*PyArray_Correlate2( *op1, *op2, int mode)\n```", "```py\nz[k] = sum_n op1[n] * conj(op2[n+k]) \n```", "```py\n*PyArray_Where( *condition, *x, *y)\n```", "```py\nPyArray_CheckStrides(int elsize, int nd, numbytes, const *dims, const *newstrides)\n```", "```py\nPyArray_MultiplyList( const *seq, int n)\n```", "```py\nint PyArray_MultiplyIntList(int const *seq, int n)\n```", "```py\nint PyArray_CompareLists( const *l1, const *l2, int n)\n```", "```py\ntype NpyAuxData\n```", "```py\ntypedef  struct  {\n  NpyAuxData  base;\n  ElementCopier_Func  *func;\n  NpyAuxData  *funcdata;\n}  eldoubler_aux_data;\n\nvoid  free_element_doubler_aux_data(NpyAuxData  *data)\n{\n  eldoubler_aux_data  *d  =  (eldoubler_aux_data  *)data;\n  /* Free the memory owned by this auxdata */\n  NPY_AUXDATA_FREE(d->funcdata);\n  PyArray_free(d);\n}\n\nNpyAuxData  *clone_element_doubler_aux_data(NpyAuxData  *data)\n{\n  eldoubler_aux_data  *ret  =  PyArray_malloc(sizeof(eldoubler_aux_data));\n  if  (ret  ==  NULL)  {\n  return  NULL;\n  }\n\n  /* Raw copy of all data */\n  memcpy(ret,  data,  sizeof(eldoubler_aux_data));\n\n  /* Fix up the owned auxdata so we have our own copy */\n  ret->funcdata  =  NPY_AUXDATA_CLONE(ret->funcdata);\n  if  (ret->funcdata  ==  NULL)  {\n  PyArray_free(ret);\n  return  NULL;\n  }\n\n  return  (NpyAuxData  *)ret;\n}\n\nNpyAuxData  *create_element_doubler_aux_data(\n  ElementCopier_Func  *func,\n  NpyAuxData  *funcdata)\n{\n  eldoubler_aux_data  *ret  =  PyArray_malloc(sizeof(eldoubler_aux_data));\n  if  (ret  ==  NULL)  {\n  PyErr_NoMemory();\n  return  NULL;\n  }\n  memset(&ret,  0,  sizeof(eldoubler_aux_data));\n  ret->base->free  =  &free_element_doubler_aux_data;\n  ret->base->clone  =  &clone_element_doubler_aux_data;\n  ret->func  =  func;\n  ret->funcdata  =  funcdata;\n\n  return  (NpyAuxData  *)ret;\n} \n```", "```py\ntype NpyAuxData_FreeFunc\n```", "```py\ntype NpyAuxData_CloneFunc\n```", "```py\nvoid NPY_AUXDATA_FREE( *auxdata)\n```", "```py\n*NPY_AUXDATA_CLONE( *auxdata)\n```", "```py\n*PyArray_IterNew( *arr)\n```", "```py\n*PyArray_IterAllButAxis( *arr, int *axis)\n```", "```py\n*PyArray_BroadcastToShape( *arr, const *dimensions, int nd)\n```", "```py\nint PyArrayIter_Check( *op)\n```", "```py\nvoid PyArray_ITER_RESET( *iterator)\n```", "```py\nvoid PyArray_ITER_NEXT( *iterator)\n```", "```py\nvoid *PyArray_ITER_DATA( *iterator)\n```", "```py\nvoid PyArray_ITER_GOTO( *iterator, *destination)\n```", "```py\nvoid PyArray_ITER_GOTO1D( *iterator, index)\n```", "```py\nint PyArray_ITER_NOTDONE( *iterator)\n```", "```py\n*PyArray_MultiIterNew(int num, ...)\n```", "```py\nvoid PyArray_MultiIter_RESET( *multi)\n```", "```py\nvoid PyArray_MultiIter_NEXT( *multi)\n```", "```py\nvoid *PyArray_MultiIter_DATA( *multi, int i)\n```", "```py\nvoid PyArray_MultiIter_NEXTi( *multi, int i)\n```", "```py\nvoid PyArray_MultiIter_GOTO( *multi, *destination)\n```", "```py\nvoid PyArray_MultiIter_GOTO1D( *multi, index)\n```", "```py\nint PyArray_MultiIter_NOTDONE( *multi)\n```", "```py\nint PyArray_Broadcast( *mit)\n```", "```py\nint PyArray_RemoveSmallest( *mit)\n```", "```py\n*PyArray_NeighborhoodIterNew( *iter, bounds, int mode, *fill_value)\n```", "```py\nNPY_NEIGHBORHOOD_ITER_ZERO_PADDING\n```", "```py\nNPY_NEIGHBORHOOD_ITER_ONE_PADDING\n```", "```py\nNPY_NEIGHBORHOOD_ITER_CONSTANT_PADDING\n```", "```py\nNPY_NEIGHBORHOOD_ITER_MIRROR_PADDING\n```", "```py\nNPY_NEIGHBORHOOD_ITER_CIRCULAR_PADDING\n```", "```py\nPyArrayIterObject  *iter;\nPyArrayNeighborhoodIterObject  *neigh_iter;\niter  =  PyArray_IterNew(x);\n\n/*For a 3x3 kernel */\nbounds  =  {-1,  1,  -1,  1};\nneigh_iter  =  (PyArrayNeighborhoodIterObject*)PyArray_NeighborhoodIterNew(\n  iter,  bounds,  NPY_NEIGHBORHOOD_ITER_ZERO_PADDING,  NULL);\n\nfor(i  =  0;  i  <  iter->size;  ++i)  {\n  for  (j  =  0;  j  <  neigh_iter->size;  ++j)  {\n  /* Walk around the item currently pointed by iter->dataptr */\n  PyArrayNeighborhoodIter_Next(neigh_iter);\n  }\n\n  /* Move to the next point of iter */\n  PyArrayIter_Next(iter);\n  PyArrayNeighborhoodIter_Reset(neigh_iter);\n} \n```", "```py\nint PyArrayNeighborhoodIter_Reset( *iter)\n```", "```py\nint PyArrayNeighborhoodIter_Next( *iter)\n```", "```py\n*PyArray_MapIterArray( *a, *index)\n```", "```py\nvoid PyArray_MapIterSwapAxes( *mit, **ret, int getmap)\n```", "```py\nvoid PyArray_MapIterNext( *mit)\n```", "```py\n*PyArray_MapIterArrayCopyIfOverlap( *a, *index, int copy_if_overlap, *extra_op)\n```", "```py\n*PyArray_Return( *arr)\n```", "```py\n*PyArray_Scalar(void *data, *dtype, *base)\n```", "```py\n*PyArray_ToScalar(void *data, *arr)\n```", "```py\n*PyArray_FromScalar( *scalar, *outcode)\n```", "```py\nvoid PyArray_ScalarAsCtype( *scalar, void *ctypeptr)\n```", "```py\nvoid PyArray_CastScalarToCtype( *scalar, void *ctypeptr, *outcode)\n```", "```py\n*PyArray_TypeObjectFromType(int type)\n```", "```py\nPyArray_ScalarKind(int typenum, **arr)\n```", "```py\nint PyArray_CanCoerceScalar(char thistype, char neededtype, scalar)\n```", "```py\nint PyArray_DescrCheck( *obj)\n```", "```py\n*PyArray_DescrNew( *obj)\n```", "```py\n*PyArray_DescrNewFromType(int typenum)\n```", "```py\n*PyArray_DescrNewByteorder( *obj, char newendian)\n```", "```py\nNPY_IGNORE\n```", "```py\nNPY_SWAP\n```", "```py\nNPY_NATIVE\n```", "```py\nNPY_LITTLE\n```", "```py\nNPY_BIG\n```", "```py\n*PyArray_DescrFromObject( *op, *mintype)\n```", "```py\n*PyArray_DescrFromScalar( *scalar)\n```", "```py\n*PyArray_DescrFromType(int typenum)\n```", "```py\nint PyArray_DescrConverter( *obj, **dtype)\n```", "```py\nint PyArray_DescrConverter2( *obj, **dtype)\n```", "```py\nint Pyarray_DescrAlignConverter( *obj, **dtype)\n```", "```py\nint Pyarray_DescrAlignConverter2( *obj, **dtype)\n```", "```py\n*PyArray_FieldNames( *dict)\n```", "```py\nint PyArray_Converter( *obj, **address)\n```", "```py\nint PyArray_OutputConverter( *obj, **address)\n```", "```py\nint PyArray_IntpConverter( *obj, *seq)\n```", "```py\nint PyArray_BufferConverter( *obj, *buf)\n```", "```py\nint PyArray_AxisConverter( *obj, int *axis)\n```", "```py\nint PyArray_BoolConverter( *obj, *value)\n```", "```py\nint PyArray_ByteorderConverter( *obj, char *endian)\n```", "```py\nint PyArray_SortkindConverter( *obj, *sort)\n```", "```py\nint PyArray_SearchsideConverter( *obj, *side)\n```", "```py\nint PyArray_OrderConverter( *obj, *order)\n```", "```py\nint PyArray_CastingConverter( *obj, *casting)\n```", "```py\nint PyArray_ClipmodeConverter( *object, *val)\n```", "```py\nint PyArray_ConvertClipmodeSequence( *object, *modes, int n)\n```", "```py\nint PyArray_PyIntAsInt( *op)\n```", "```py\n#define error_converting(x) (((x) == -1) && PyErr_Occurred()) \n```", "```py\nPyArray_PyIntAsIntp( *op)\n```", "```py\nint PyArray_IntpFromSequence( *seq, *vals, int maxvals)\n```", "```py\nint PyArray_TypestrConvert(int itemsize, int gentype)\n```", "```py\nvoid import_array(void)\n```", "```py\nPY_ARRAY_UNIQUE_SYMBOL\n```", "```py\nNO_IMPORT_ARRAY\n```", "```py\n#define PY_ARRAY_UNIQUE_SYMBOL cool_ARRAY_API\n#include numpy/arrayobject.h \n```", "```py\n#define NO_IMPORT_ARRAY\n#define PY_ARRAY_UNIQUE_SYMBOL cool_ARRAY_API\n#include numpy/arrayobject.h \n```", "```py\nNPY_VERSION\n```", "```py\nNPY_FEATURE_VERSION\n```", "```py\nunsigned int PyArray_GetNDArrayCVersion(void)\n```", "```py\nunsigned int PyArray_GetNDArrayCFeatureVersion(void)\n```", "```py\nint PyArray_SetNumericOps( *dict)\n```", "```py\n*PyArray_GetNumericOps(void)\n```", "```py\nvoid PyArray_SetStringFunction( *op, int repr)\n```", "```py\nchar *PyDataMem_NEW(size_t nbytes)\n```", "```py\nvoid PyDataMem_FREE(char *ptr)\n```", "```py\nchar *PyDataMem_RENEW(void *ptr, size_t newbytes)\n```", "```py\n*PyDimMem_NEW(int nd)\n```", "```py\nvoid PyDimMem_FREE(char *ptr)\n```", "```py\n*PyDimMem_RENEW(void *ptr, size_t newnd)\n```", "```py\nvoid *PyArray_malloc(size_t nbytes)\n```", "```py\nvoid PyArray_free(void *ptr)\n```", "```py\nvoid *PyArray_realloc( *ptr, size_t nbytes)\n```", "```py\nNPY_USE_PYMEM\n```", "```py\nint PyArray_ResolveWritebackIfCopy( *obj)\n```", "```py\nNPY_ALLOW_THREADS\n```", "```py\nWITH_THREADS\n```", "```py\n> NPY_BEGIN_ALLOW_THREADS\n> ```", "```py\n> NPY_END_ALLOW_THREADS\n> ```", "```py\n> NPY_BEGIN_THREADS_DEF\n> ```", "```py\n> NPY_BEGIN_THREADS\n> ```", "```py\n> NPY_END_THREADS\n> ```", "```py\n> void NPY_BEGIN_THREADS_DESCR( *dtype)\n> ```", "```py\n> void NPY_END_THREADS_DESCR( *dtype)\n> ```", "```py\n> void NPY_BEGIN_THREADS_THRESHOLDED(int loop_size)\n> ```", "```py\n> NPY_ALLOW_C_API_DEF\n> ```", "```py\n> NPY_ALLOW_C_API\n> ```", "```py\n> NPY_DISABLE_C_API\n> ```", "```py\nNPY_PRIORITY\n```", "```py\nNPY_SUBTYPE_PRIORITY\n```", "```py\nNPY_SCALAR_PRIORITY\n```", "```py\ndouble PyArray_GetPriority( *obj, double def)\n```", "```py\nNPY_BUFSIZE\n```", "```py\nNPY_MIN_BUFSIZE\n```", "```py\nNPY_MAX_BUFSIZE\n```", "```py\nNPY_NUM_FLOATTYPE\n```", "```py\nNPY_MAXDIMS\n```", "```py\nNPY_MAXARGS\n```", "```py\nNPY_FALSE\n```", "```py\nNPY_TRUE\n```", "```py\nNPY_FAIL\n```", "```py\nNPY_SUCCEED\n```", "```py\nint PyArray_SAMESHAPE( *a1, *a2)\n```", "```py\nPyArray_MAX(a, b)\n```", "```py\nPyArray_MIN(a, b)\n```", "```py\nPyArray_CLT(a, b)\n```", "```py\nPyArray_CGT(a, b)\n```", "```py\nPyArray_CLE(a, b)\n```", "```py\nPyArray_CGE(a, b)\n```", "```py\nPyArray_CEQ(a, b)\n```", "```py\nPyArray_CNE(a, b)\n```", "```py\nPyArray_REFCOUNT( *op)\n```", "```py\nvoid PyArray_DiscardWritebackIfCopy( *obj)\n```", "```py\nenum NPY_SORTKIND\n```", "```py\nenumerator NPY_QUICKSORT\n```", "```py\nenumerator NPY_HEAPSORT\n```", "```py\nenumerator NPY_MERGESORT\n```", "```py\nenumerator NPY_STABLESORT\n```", "```py\nenumerator NPY_NSORTS\n```", "```py\nenum NPY_SCALARKIND\n```", "```py\nenumerator NPY_NOSCALAR\n```", "```py\nenumerator NPY_BOOL_SCALAR\n```", "```py\nenumerator NPY_INTPOS_SCALAR\n```", "```py\nenumerator NPY_INTNEG_SCALAR\n```", "```py\nenumerator NPY_FLOAT_SCALAR\n```", "```py\nenumerator NPY_COMPLEX_SCALAR\n```", "```py\nenumerator NPY_OBJECT_SCALAR\n```", "```py\nenumerator NPY_NSCALARKINDS\n```", "```py\nenum NPY_ORDER\n```", "```py\nenumerator NPY_ANYORDER\n```", "```py\nenumerator NPY_CORDER\n```", "```py\nenumerator NPY_FORTRANORDER\n```", "```py\nenumerator NPY_KEEPORDER\n```", "```py\nenum NPY_CLIPMODE\n```", "```py\nenumerator NPY_RAISE\n```", "```py\nenumerator NPY_CLIP\n```", "```py\nenumerator NPY_WRAP\n```", "```py\nenum NPY_SEARCHSIDE\n```", "```py\nenumerator NPY_SEARCHLEFT\n```", "```py\nenumerator NPY_SEARCHRIGHT\n```", "```py\nenum NPY_SELECTKIND\n```", "```py\nenumerator NPY_INTROSELECT\n```", "```py\nenum NPY_CASTING\n```", "```py\nenumerator NPY_NO_CASTING\n```", "```py\nenumerator NPY_EQUIV_CASTING\n```", "```py\nenumerator NPY_SAFE_CASTING\n```", "```py\nenumerator NPY_SAME_KIND_CASTING\n```", "```py\nenumerator NPY_UNSAFE_CASTING\n```", "```py\nint PyArray_NDIM( *arr)\n```", "```py\nint PyArray_FLAGS( *arr)\n```", "```py\nint PyArray_TYPE( *arr)\n```", "```py\nint PyArray_SETITEM( *arr, void *itemptr, *obj)\n```", "```py\nvoid PyArray_ENABLEFLAGS( *arr, int flags)\n```", "```py\nvoid PyArray_CLEARFLAGS( *arr, int flags)\n```", "```py\nvoid *PyArray_DATA( *arr)\n```", "```py\nchar *PyArray_BYTES( *arr)\n```", "```py\n*PyArray_DIMS( *arr)\n```", "```py\n*PyArray_SHAPE( *arr)\n```", "```py\n*PyArray_STRIDES( *arr)\n```", "```py\nPyArray_DIM( *arr, int n)\n```", "```py\nPyArray_STRIDE( *arr, int n)\n```", "```py\nPyArray_ITEMSIZE( *arr)\n```", "```py\nPyArray_SIZE( *arr)\n```", "```py\nPyArray_Size( *obj)\n```", "```py\nPyArray_NBYTES( *arr)\n```", "```py\n*PyArray_BASE( *arr)\n```", "```py\n*PyArray_DESCR( *arr)\n```", "```py\n*PyArray_DTYPE( *arr)\n```", "```py\n*PyArray_GETITEM( *arr, void *itemptr)\n```", "```py\nint PyArray_FinalizeFunc( *arr, *obj)\n```", "```py\nvoid *PyArray_GetPtr( *aobj, *ind)\n```", "```py\nvoid *PyArray_GETPTR1( *obj, i)\n```", "```py\nvoid *PyArray_GETPTR2( *obj, i, j)\n```", "```py\nvoid *PyArray_GETPTR3( *obj, i, j, k)\n```", "```py\nvoid *PyArray_GETPTR4( *obj, i, j, k, l)\n```", "```py\nvoid *PyArray_GetPtr( *aobj, *ind)\n```", "```py\nvoid *PyArray_GETPTR1( *obj, i)\n```", "```py\nvoid *PyArray_GETPTR2( *obj, i, j)\n```", "```py\nvoid *PyArray_GETPTR3( *obj, i, j, k)\n```", "```py\nvoid *PyArray_GETPTR4( *obj, i, j, k, l)\n```", "```py\n*PyArray_NewFromDescr( *subtype, *descr, int nd, const *dims, const *strides, void *data, int flags, *obj)\n```", "```py\n*PyArray_NewLikeArray( *prototype, order, *descr, int subok)\n```", "```py\n*PyArray_New( *subtype, int nd, const *dims, int type_num, const *strides, void *data, int itemsize, int flags, *obj)\n```", "```py\n*PyArray_SimpleNew(int nd, const *dims, int typenum)\n```", "```py\n*PyArray_SimpleNewFromData(int nd, const *dims, int typenum, void *data)\n```", "```py\n*PyArray_SimpleNewFromDescr(int nd, const *dims, *descr)\n```", "```py\nvoid PyArray_FILLWBYTE( *obj, int val)\n```", "```py\n*PyArray_Zeros(int nd, const *dims, *dtype, int fortran)\n```", "```py\n*PyArray_ZEROS(int nd, const *dims, int type_num, int fortran)\n```", "```py\n*PyArray_Empty(int nd, const *dims, *dtype, int fortran)\n```", "```py\n*PyArray_EMPTY(int nd, const *dims, int typenum, int fortran)\n```", "```py\n*PyArray_Arange(double start, double stop, double step, int typenum)\n```", "```py\n*PyArray_ArangeObj( *start, *stop, *step, *descr)\n```", "```py\nint PyArray_SetBaseObject( *arr, *obj)\n```", "```py\n*PyArray_FromAny( *op, *dtype, int min_depth, int max_depth, int requirements, *context)\n```", "```py\nNPY_ARRAY_C_CONTIGUOUS\n```", "```py\nNPY_ARRAY_F_CONTIGUOUS\n```", "```py\nNPY_ARRAY_ALIGNED\n```", "```py\nNPY_ARRAY_WRITEABLE\n```", "```py\nNPY_ARRAY_ENSURECOPY\n```", "```py\nNPY_ARRAY_ENSUREARRAY\n```", "```py\nNPY_ARRAY_FORCECAST\n```", "```py\nNPY_ARRAY_WRITEBACKIFCOPY\n```", "```py\nNPY_ARRAY_BEHAVED\n```", "```py\nNPY_ARRAY_CARRAY\n```", "```py\nNPY_ARRAY_CARRAY_RO\n```", "```py\nNPY_ARRAY_FARRAY\n```", "```py\nNPY_ARRAY_FARRAY_RO\n```", "```py\nNPY_ARRAY_DEFAULT\n```", "```py\nNPY_ARRAY_IN_ARRAY\n```", "```py\nNPY_ARRAY_IN_FARRAY\n```", "```py\nNPY_OUT_ARRAY\n```", "```py\nNPY_ARRAY_OUT_ARRAY\n```", "```py\nNPY_ARRAY_OUT_FARRAY\n```", "```py\nNPY_ARRAY_INOUT_ARRAY\n```", "```py\nNPY_ARRAY_INOUT_FARRAY\n```", "```py\n*PyArray_CheckFromAny( *op, *dtype, int min_depth, int max_depth, int requirements, *context)\n```", "```py\nNPY_ARRAY_NOTSWAPPED\n```", "```py\nNPY_ARRAY_BEHAVED_NS\n```", "```py\nNPY_ARRAY_ELEMENTSTRIDES\n```", "```py\n*PyArray_FromArray( *op, *newtype, int requirements)\n```", "```py\n*PyArray_FromStructInterface( *op)\n```", "```py\n*PyArray_FromInterface( *op)\n```", "```py\n*PyArray_FromArrayAttr( *op, *dtype, *context)\n```", "```py\n*PyArray_ContiguousFromAny( *op, int typenum, int min_depth, int max_depth)\n```", "```py\n*PyArray_ContiguousFromObject( *op, int typenum, int min_depth, int max_depth)\n```", "```py\n*PyArray_FromObject( *op, int typenum, int min_depth, int max_depth)\n```", "```py\n*PyArray_EnsureArray( *op)\n```", "```py\n*PyArray_FromString(char *string, slen, *dtype, num, char *sep)\n```", "```py\n*PyArray_FromFile(FILE *fp, *dtype, num, char *sep)\n```", "```py\n*PyArray_FromBuffer( *buf, *dtype, count, offset)\n```", "```py\nint PyArray_CopyInto( *dest, *src)\n```", "```py\nint PyArray_CopyObject( *dest, *src)\n```", "```py\nint PyArray_MoveInto( *dest, *src)\n```", "```py\n*PyArray_GETCONTIGUOUS( *op)\n```", "```py\n*PyArray_FROM_O( *obj)\n```", "```py\n*PyArray_FROM_OF( *obj, int requirements)\n```", "```py\n*PyArray_FROM_OT( *obj, int typenum)\n```", "```py\n*PyArray_FROM_OTF( *obj, int typenum, int requirements)\n```", "```py\n*PyArray_FROMANY( *obj, int typenum, int min, int max, int requirements)\n```", "```py\n*PyArray_CheckAxis( *obj, int *axis, int requirements)\n```", "```py\n*PyArray_NewFromDescr( *subtype, *descr, int nd, const *dims, const *strides, void *data, int flags, *obj)\n```", "```py\n*PyArray_NewLikeArray( *prototype, order, *descr, int subok)\n```", "```py\n*PyArray_New( *subtype, int nd, const *dims, int type_num, const *strides, void *data, int itemsize, int flags, *obj)\n```", "```py\n*PyArray_SimpleNew(int nd, const *dims, int typenum)\n```", "```py\n*PyArray_SimpleNewFromData(int nd, const *dims, int typenum, void *data)\n```", "```py\n*PyArray_SimpleNewFromDescr(int nd, const *dims, *descr)\n```", "```py\nvoid PyArray_FILLWBYTE( *obj, int val)\n```", "```py\n*PyArray_Zeros(int nd, const *dims, *dtype, int fortran)\n```", "```py\n*PyArray_ZEROS(int nd, const *dims, int type_num, int fortran)\n```", "```py\n*PyArray_Empty(int nd, const *dims, *dtype, int fortran)\n```", "```py\n*PyArray_EMPTY(int nd, const *dims, int typenum, int fortran)\n```", "```py\n*PyArray_Arange(double start, double stop, double step, int typenum)\n```", "```py\n*PyArray_ArangeObj( *start, *stop, *step, *descr)\n```", "```py\nint PyArray_SetBaseObject( *arr, *obj)\n```", "```py\n*PyArray_FromAny( *op, *dtype, int min_depth, int max_depth, int requirements, *context)\n```", "```py\nNPY_ARRAY_C_CONTIGUOUS\n```", "```py\nNPY_ARRAY_F_CONTIGUOUS\n```", "```py\nNPY_ARRAY_ALIGNED\n```", "```py\nNPY_ARRAY_WRITEABLE\n```", "```py\nNPY_ARRAY_ENSURECOPY\n```", "```py\nNPY_ARRAY_ENSUREARRAY\n```", "```py\nNPY_ARRAY_FORCECAST\n```", "```py\nNPY_ARRAY_WRITEBACKIFCOPY\n```", "```py\nNPY_ARRAY_BEHAVED\n```", "```py\nNPY_ARRAY_CARRAY\n```", "```py\nNPY_ARRAY_CARRAY_RO\n```", "```py\nNPY_ARRAY_FARRAY\n```", "```py\nNPY_ARRAY_FARRAY_RO\n```", "```py\nNPY_ARRAY_DEFAULT\n```", "```py\nNPY_ARRAY_IN_ARRAY\n```", "```py\nNPY_ARRAY_IN_FARRAY\n```", "```py\nNPY_OUT_ARRAY\n```", "```py\nNPY_ARRAY_OUT_ARRAY\n```", "```py\nNPY_ARRAY_OUT_FARRAY\n```", "```py\nNPY_ARRAY_INOUT_ARRAY\n```", "```py\nNPY_ARRAY_INOUT_FARRAY\n```", "```py\n*PyArray_CheckFromAny( *op, *dtype, int min_depth, int max_depth, int requirements, *context)\n```", "```py\nNPY_ARRAY_NOTSWAPPED\n```", "```py\nNPY_ARRAY_BEHAVED_NS\n```", "```py\nNPY_ARRAY_ELEMENTSTRIDES\n```", "```py\n*PyArray_FromArray( *op, *newtype, int requirements)\n```", "```py\n*PyArray_FromStructInterface( *op)\n```", "```py\n*PyArray_FromInterface( *op)\n```", "```py\n*PyArray_FromArrayAttr( *op, *dtype, *context)\n```", "```py\n*PyArray_ContiguousFromAny( *op, int typenum, int min_depth, int max_depth)\n```", "```py\n*PyArray_ContiguousFromObject( *op, int typenum, int min_depth, int max_depth)\n```", "```py\n*PyArray_FromObject( *op, int typenum, int min_depth, int max_depth)\n```", "```py\n*PyArray_EnsureArray( *op)\n```", "```py\n*PyArray_FromString(char *string, slen, *dtype, num, char *sep)\n```", "```py\n*PyArray_FromFile(FILE *fp, *dtype, num, char *sep)\n```", "```py\n*PyArray_FromBuffer( *buf, *dtype, count, offset)\n```", "```py\nint PyArray_CopyInto( *dest, *src)\n```", "```py\nint PyArray_CopyObject( *dest, *src)\n```", "```py\nint PyArray_MoveInto( *dest, *src)\n```", "```py\n*PyArray_GETCONTIGUOUS( *op)\n```", "```py\n*PyArray_FROM_O( *obj)\n```", "```py\n*PyArray_FROM_OF( *obj, int requirements)\n```", "```py\n*PyArray_FROM_OT( *obj, int typenum)\n```", "```py\n*PyArray_FROM_OTF( *obj, int typenum, int requirements)\n```", "```py\n*PyArray_FROMANY( *obj, int typenum, int min, int max, int requirements)\n```", "```py\n*PyArray_CheckAxis( *obj, int *axis, int requirements)\n```", "```py\nint PyArray_Check( *op)\n```", "```py\nint PyArray_CheckExact( *op)\n```", "```py\nint PyArray_HasArrayInterface( *op, *out)\n```", "```py\nint PyArray_HasArrayInterfaceType( *op, *dtype, *context, *out)\n```", "```py\nint PyArray_IsZeroDim( *op)\n```", "```py\nPyArray_IsScalar(op, cls)\n```", "```py\nint PyArray_CheckScalar( *op)\n```", "```py\nint PyArray_IsPythonNumber( *op)\n```", "```py\nint PyArray_IsPythonScalar( *op)\n```", "```py\nint PyArray_IsAnyScalar( *op)\n```", "```py\nint PyArray_CheckAnyScalar( *op)\n```", "```py\nint PyTypeNum_ISUNSIGNED(int num)\n```", "```py\nint PyDataType_ISUNSIGNED( *descr)\n```", "```py\nint PyArray_ISUNSIGNED( *obj)\n```", "```py\nint PyTypeNum_ISSIGNED(int num)\n```", "```py\nint PyDataType_ISSIGNED( *descr)\n```", "```py\nint PyArray_ISSIGNED( *obj)\n```", "```py\nint PyTypeNum_ISINTEGER(int num)\n```", "```py\nint PyDataType_ISINTEGER( *descr)\n```", "```py\nint PyArray_ISINTEGER( *obj)\n```", "```py\nint PyTypeNum_ISFLOAT(int num)\n```", "```py\nint PyDataType_ISFLOAT( *descr)\n```", "```py\nint PyArray_ISFLOAT( *obj)\n```", "```py\nint PyTypeNum_ISCOMPLEX(int num)\n```", "```py\nint PyDataType_ISCOMPLEX( *descr)\n```", "```py\nint PyArray_ISCOMPLEX( *obj)\n```", "```py\nint PyTypeNum_ISNUMBER(int num)\n```", "```py\nint PyDataType_ISNUMBER( *descr)\n```", "```py\nint PyArray_ISNUMBER( *obj)\n```", "```py\nint PyTypeNum_ISSTRING(int num)\n```", "```py\nint PyDataType_ISSTRING( *descr)\n```", "```py\nint PyArray_ISSTRING( *obj)\n```", "```py\nint PyTypeNum_ISPYTHON(int num)\n```", "```py\nint PyDataType_ISPYTHON( *descr)\n```", "```py\nint PyArray_ISPYTHON( *obj)\n```", "```py\nint PyTypeNum_ISFLEXIBLE(int num)\n```", "```py\nint PyDataType_ISFLEXIBLE( *descr)\n```", "```py\nint PyArray_ISFLEXIBLE( *obj)\n```", "```py\nint PyDataType_ISUNSIZED( *descr)\n```", "```py\nint PyTypeNum_ISUSERDEF(int num)\n```", "```py\nint PyDataType_ISUSERDEF( *descr)\n```", "```py\nint PyArray_ISUSERDEF( *obj)\n```", "```py\nint PyTypeNum_ISEXTENDED(int num)\n```", "```py\nint PyDataType_ISEXTENDED( *descr)\n```", "```py\nint PyArray_ISEXTENDED( *obj)\n```", "```py\nint PyTypeNum_ISOBJECT(int num)\n```", "```py\nint PyDataType_ISOBJECT( *descr)\n```", "```py\nint PyArray_ISOBJECT( *obj)\n```", "```py\nint PyTypeNum_ISBOOL(int num)\n```", "```py\nint PyDataType_ISBOOL( *descr)\n```", "```py\nint PyArray_ISBOOL( *obj)\n```", "```py\nint PyDataType_HASFIELDS( *descr)\n```", "```py\nint PyArray_HASFIELDS( *obj)\n```", "```py\nint PyArray_ISNOTSWAPPED( *m)\n```", "```py\nint PyArray_ISBYTESWAPPED( *m)\n```", "```py\nPyArray_EquivTypes( *type1, *type2)\n```", "```py\nPyArray_EquivArrTypes( *a1, *a2)\n```", "```py\nPyArray_EquivTypenums(int typenum1, int typenum2)\n```", "```py\nint PyArray_EquivByteorders(int b1, int b2)\n```", "```py\n*PyArray_Cast( *arr, int typenum)\n```", "```py\n*PyArray_CastToType( *arr, *type, int fortran)\n```", "```py\nint PyArray_CastTo( *out, *in)\n```", "```py\nPyArray_VectorUnaryFunc *PyArray_GetCastFunc( *from, int totype)\n```", "```py\nint PyArray_CanCastSafely(int fromtype, int totype)\n```", "```py\nint PyArray_CanCastTo( *fromtype, *totype)\n```", "```py\nint PyArray_CanCastTypeTo( *fromtype, *totype, casting)\n```", "```py\nint PyArray_CanCastArrayTo( *arr, *totype, casting)\n```", "```py\n*PyArray_MinScalarType( *arr)\n```", "```py\n*PyArray_PromoteTypes( *type1, *type2)\n```", "```py\n*PyArray_ResultType( narrs, **arrs, ndtypes, **dtypes)\n```", "```py\nint PyArray_ObjectType( *op, int mintype)\n```", "```py\n**PyArray_ConvertToCommonType( *op, int *n)\n```", "```py\nmps  =  PyArray_ConvertToCommonType(obj,  &n);\nif  (mps==NULL)  return  NULL;\n{code}\n<before  return>\nfor  (i=0;  i<n;  i++)  Py_DECREF(mps[i]);\nPyDataMem_FREE(mps);\n{return} \n```", "```py\nchar *PyArray_Zero( *arr)\n```", "```py\nchar *PyArray_One( *arr)\n```", "```py\nint PyArray_ValidType(int typenum)\n```", "```py\nvoid PyArray_InitArrFuncs( *f)\n```", "```py\nint PyArray_RegisterDataType( *dtype)\n```", "```py\nint PyArray_RegisterCastFunc( *descr, int totype, PyArray_VectorUnaryFunc *castfunc)\n```", "```py\nint PyArray_RegisterCanCast( *descr, int totype, scalar)\n```", "```py\nint PyArray_TypeNumFromName(char const *str)\n```", "```py\nint PyArray_INCREF( *op)\n```", "```py\nvoid PyArray_Item_INCREF(char *ptr, *dtype)\n```", "```py\nint PyArray_XDECREF( *op)\n```", "```py\nvoid PyArray_Item_XDECREF(char *ptr, *dtype)\n```", "```py\nvoid PyArray_FillObjectArray( *arr, *obj)\n```", "```py\nint PyArray_SetWritebackIfCopyBase( *arr, *base)\n```", "```py\nint PyArray_Check( *op)\n```", "```py\nint PyArray_CheckExact( *op)\n```", "```py\nint PyArray_HasArrayInterface( *op, *out)\n```", "```py\nint PyArray_HasArrayInterfaceType( *op, *dtype, *context, *out)\n```", "```py\nint PyArray_IsZeroDim( *op)\n```", "```py\nPyArray_IsScalar(op, cls)\n```", "```py\nint PyArray_CheckScalar( *op)\n```", "```py\nint PyArray_IsPythonNumber( *op)\n```", "```py\nint PyArray_IsPythonScalar( *op)\n```", "```py\nint PyArray_IsAnyScalar( *op)\n```", "```py\nint PyArray_CheckAnyScalar( *op)\n```", "```py\nint PyTypeNum_ISUNSIGNED(int num)\n```", "```py\nint PyDataType_ISUNSIGNED( *descr)\n```", "```py\nint PyArray_ISUNSIGNED( *obj)\n```", "```py\nint PyTypeNum_ISSIGNED(int num)\n```", "```py\nint PyDataType_ISSIGNED( *descr)\n```", "```py\nint PyArray_ISSIGNED( *obj)\n```", "```py\nint PyTypeNum_ISINTEGER(int num)\n```", "```py\nint PyDataType_ISINTEGER( *descr)\n```", "```py\nint PyArray_ISINTEGER( *obj)\n```", "```py\nint PyTypeNum_ISFLOAT(int num)\n```", "```py\nint PyDataType_ISFLOAT( *descr)\n```", "```py\nint PyArray_ISFLOAT( *obj)\n```", "```py\nint PyTypeNum_ISCOMPLEX(int num)\n```", "```py\nint PyDataType_ISCOMPLEX( *descr)\n```", "```py\nint PyArray_ISCOMPLEX( *obj)\n```", "```py\nint PyTypeNum_ISNUMBER(int num)\n```", "```py\nint PyDataType_ISNUMBER( *descr)\n```", "```py\nint PyArray_ISNUMBER( *obj)\n```", "```py\nint PyTypeNum_ISSTRING(int num)\n```", "```py\nint PyDataType_ISSTRING( *descr)\n```", "```py\nint PyArray_ISSTRING( *obj)\n```", "```py\nint PyTypeNum_ISPYTHON(int num)\n```", "```py\nint PyDataType_ISPYTHON( *descr)\n```", "```py\nint PyArray_ISPYTHON( *obj)\n```", "```py\nint PyTypeNum_ISFLEXIBLE(int num)\n```", "```py\nint PyDataType_ISFLEXIBLE( *descr)\n```", "```py\nint PyArray_ISFLEXIBLE( *obj)\n```", "```py\nint PyDataType_ISUNSIZED( *descr)\n```", "```py\nint PyTypeNum_ISUSERDEF(int num)\n```", "```py\nint PyDataType_ISUSERDEF( *descr)\n```", "```py\nint PyArray_ISUSERDEF( *obj)\n```", "```py\nint PyTypeNum_ISEXTENDED(int num)\n```", "```py\nint PyDataType_ISEXTENDED( *descr)\n```", "```py\nint PyArray_ISEXTENDED( *obj)\n```", "```py\nint PyTypeNum_ISOBJECT(int num)\n```", "```py\nint PyDataType_ISOBJECT( *descr)\n```", "```py\nint PyArray_ISOBJECT( *obj)\n```", "```py\nint PyTypeNum_ISBOOL(int num)\n```", "```py\nint PyDataType_ISBOOL( *descr)\n```", "```py\nint PyArray_ISBOOL( *obj)\n```", "```py\nint PyDataType_HASFIELDS( *descr)\n```", "```py\nint PyArray_HASFIELDS( *obj)\n```", "```py\nint PyArray_ISNOTSWAPPED( *m)\n```", "```py\nint PyArray_ISBYTESWAPPED( *m)\n```", "```py\nPyArray_EquivTypes( *type1, *type2)\n```", "```py\nPyArray_EquivArrTypes( *a1, *a2)\n```", "```py\nPyArray_EquivTypenums(int typenum1, int typenum2)\n```", "```py\nint PyArray_EquivByteorders(int b1, int b2)\n```", "```py\n*PyArray_Cast( *arr, int typenum)\n```", "```py\n*PyArray_CastToType( *arr, *type, int fortran)\n```", "```py\nint PyArray_CastTo( *out, *in)\n```", "```py\nPyArray_VectorUnaryFunc *PyArray_GetCastFunc( *from, int totype)\n```", "```py\nint PyArray_CanCastSafely(int fromtype, int totype)\n```", "```py\nint PyArray_CanCastTo( *fromtype, *totype)\n```", "```py\nint PyArray_CanCastTypeTo( *fromtype, *totype, casting)\n```", "```py\nint PyArray_CanCastArrayTo( *arr, *totype, casting)\n```", "```py\n*PyArray_MinScalarType( *arr)\n```", "```py\n*PyArray_PromoteTypes( *type1, *type2)\n```", "```py\n*PyArray_ResultType( narrs, **arrs, ndtypes, **dtypes)\n```", "```py\nint PyArray_ObjectType( *op, int mintype)\n```", "```py\n**PyArray_ConvertToCommonType( *op, int *n)\n```", "```py\nmps  =  PyArray_ConvertToCommonType(obj,  &n);\nif  (mps==NULL)  return  NULL;\n{code}\n<before  return>\nfor  (i=0;  i<n;  i++)  Py_DECREF(mps[i]);\nPyDataMem_FREE(mps);\n{return} \n```", "```py\nchar *PyArray_Zero( *arr)\n```", "```py\nchar *PyArray_One( *arr)\n```", "```py\nint PyArray_ValidType(int typenum)\n```", "```py\nvoid PyArray_InitArrFuncs( *f)\n```", "```py\nint PyArray_RegisterDataType( *dtype)\n```", "```py\nint PyArray_RegisterCastFunc( *descr, int totype, PyArray_VectorUnaryFunc *castfunc)\n```", "```py\nint PyArray_RegisterCanCast( *descr, int totype, scalar)\n```", "```py\nint PyArray_TypeNumFromName(char const *str)\n```", "```py\nint PyArray_INCREF( *op)\n```", "```py\nvoid PyArray_Item_INCREF(char *ptr, *dtype)\n```", "```py\nint PyArray_XDECREF( *op)\n```", "```py\nvoid PyArray_Item_XDECREF(char *ptr, *dtype)\n```", "```py\nvoid PyArray_FillObjectArray( *arr, *obj)\n```", "```py\nint PyArray_SetWritebackIfCopyBase( *arr, *base)\n```", "```py\nNPY_ARRAY_C_CONTIGUOUS\n```", "```py\nNPY_ARRAY_F_CONTIGUOUS\n```", "```py\nNPY_ARRAY_OWNDATA\n```", "```py\nNPY_ARRAY_ALIGNED\n```", "```py\nNPY_ARRAY_WRITEABLE\n```", "```py\nNPY_ARRAY_WRITEBACKIFCOPY\n```", "```py\nNPY_ARRAY_BEHAVED\n```", "```py\nNPY_ARRAY_CARRAY\n```", "```py\nNPY_ARRAY_CARRAY_RO\n```", "```py\nNPY_ARRAY_FARRAY\n```", "```py\nNPY_ARRAY_FARRAY_RO\n```", "```py\nNPY_ARRAY_DEFAULT\n```", "```py\nNPY_ARRAY_UPDATE_ALL\n```", "```py\nNPY_ARRAY_FORCECAST\n```", "```py\nNPY_ARRAY_ENSURECOPY\n```", "```py\nNPY_ARRAY_ENSUREARRAY\n```", "```py\nint PyArray_CHKFLAGS( *arr, int flags)\n```", "```py\nint PyArray_IS_C_CONTIGUOUS( *arr)\n```", "```py\nint PyArray_IS_F_CONTIGUOUS( *arr)\n```", "```py\nint PyArray_ISFORTRAN( *arr)\n```", "```py\nint PyArray_ISWRITEABLE( *arr)\n```", "```py\nint PyArray_ISALIGNED( *arr)\n```", "```py\nint PyArray_ISBEHAVED( *arr)\n```", "```py\nint PyArray_ISBEHAVED_RO( *arr)\n```", "```py\nint PyArray_ISCARRAY( *arr)\n```", "```py\nint PyArray_ISFARRAY( *arr)\n```", "```py\nint PyArray_ISCARRAY_RO( *arr)\n```", "```py\nint PyArray_ISFARRAY_RO( *arr)\n```", "```py\nint PyArray_ISONESEGMENT( *arr)\n```", "```py\nvoid PyArray_UpdateFlags( *arr, int flagmask)\n```", "```py\nint PyArray_FailUnlessWriteable( *obj, const char *name)\n```", "```py\nNPY_ARRAY_C_CONTIGUOUS\n```", "```py\nNPY_ARRAY_F_CONTIGUOUS\n```", "```py\nNPY_ARRAY_OWNDATA\n```", "```py\nNPY_ARRAY_ALIGNED\n```", "```py\nNPY_ARRAY_WRITEABLE\n```", "```py\nNPY_ARRAY_WRITEBACKIFCOPY\n```", "```py\nNPY_ARRAY_BEHAVED\n```", "```py\nNPY_ARRAY_CARRAY\n```", "```py\nNPY_ARRAY_CARRAY_RO\n```", "```py\nNPY_ARRAY_FARRAY\n```", "```py\nNPY_ARRAY_FARRAY_RO\n```", "```py\nNPY_ARRAY_DEFAULT\n```", "```py\nNPY_ARRAY_UPDATE_ALL\n```", "```py\nNPY_ARRAY_FORCECAST\n```", "```py\nNPY_ARRAY_ENSURECOPY\n```", "```py\nNPY_ARRAY_ENSUREARRAY\n```", "```py\nint PyArray_CHKFLAGS( *arr, int flags)\n```", "```py\nint PyArray_IS_C_CONTIGUOUS( *arr)\n```", "```py\nint PyArray_IS_F_CONTIGUOUS( *arr)\n```", "```py\nint PyArray_ISFORTRAN( *arr)\n```", "```py\nint PyArray_ISWRITEABLE( *arr)\n```", "```py\nint PyArray_ISALIGNED( *arr)\n```", "```py\nint PyArray_ISBEHAVED( *arr)\n```", "```py\nint PyArray_ISBEHAVED_RO( *arr)\n```", "```py\nint PyArray_ISCARRAY( *arr)\n```", "```py\nint PyArray_ISFARRAY( *arr)\n```", "```py\nint PyArray_ISCARRAY_RO( *arr)\n```", "```py\nint PyArray_ISFARRAY_RO( *arr)\n```", "```py\nint PyArray_ISONESEGMENT( *arr)\n```", "```py\nvoid PyArray_UpdateFlags( *arr, int flagmask)\n```", "```py\nint PyArray_FailUnlessWriteable( *obj, const char *name)\n```", "```py\n*PyArray_GetField( *self, *dtype, int offset)\n```", "```py\nint PyArray_SetField( *self, *dtype, int offset, *val)\n```", "```py\n*PyArray_Byteswap( *self, inplace)\n```", "```py\n*PyArray_NewCopy( *old, order)\n```", "```py\n*PyArray_ToList( *self)\n```", "```py\n*PyArray_ToString( *self, order)\n```", "```py\n*PyArray_ToFile( *self, FILE *fp, char *sep, char *format)\n```", "```py\nint PyArray_Dump( *self, *file, int protocol)\n```", "```py\n*PyArray_Dumps( *self, int protocol)\n```", "```py\nint PyArray_FillWithScalar( *arr, *obj)\n```", "```py\n*PyArray_View( *self, *dtype, *ptype)\n```", "```py\n*PyArray_Newshape( *self, *newshape, order)\n```", "```py\n*PyArray_Reshape( *self, *shape)\n```", "```py\n*PyArray_Squeeze( *self)\n```", "```py\n*PyArray_SwapAxes( *self, int a1, int a2)\n```", "```py\n*PyArray_Resize( *self, *newshape, int refcheck, fortran)\n```", "```py\n*PyArray_Transpose( *self, *permute)\n```", "```py\n*PyArray_Flatten( *self, order)\n```", "```py\n*PyArray_Ravel( *self, order)\n```", "```py\n*PyArray_TakeFrom( *self, *indices, int axis, *ret, clipmode)\n```", "```py\n*PyArray_PutTo( *self, *values, *indices, clipmode)\n```", "```py\n*PyArray_PutMask( *self, *values, *mask)\n```", "```py\n*PyArray_Repeat( *self, *op, int axis)\n```", "```py\n*PyArray_Choose( *self, *op, *ret, clipmode)\n```", "```py\nNPY_RAISE\n```", "```py\nNPY_WRAP\n```", "```py\nNPY_CLIP\n```", "```py\n*PyArray_Sort( *self, int axis, kind)\n```", "```py\n*PyArray_ArgSort( *self, int axis)\n```", "```py\n*PyArray_LexSort( *sort_keys, int axis)\n```", "```py\n*PyArray_SearchSorted( *self, *values, side, *perm)\n```", "```py\nint PyArray_Partition( *self, *ktharray, int axis, which)\n```", "```py\n*PyArray_ArgPartition( *op, *ktharray, int axis, which)\n```", "```py\n*PyArray_Diagonal( *self, int offset, int axis1, int axis2)\n```", "```py\nPyArray_CountNonzero( *self)\n```", "```py\n*PyArray_Nonzero( *self)\n```", "```py\n*PyArray_Compress( *self, *condition, int axis, *out)\n```", "```py\n*PyArray_ArgMax( *self, int axis, *out)\n```", "```py\n*PyArray_ArgMin( *self, int axis, *out)\n```", "```py\n*PyArray_Max( *self, int axis, *out)\n```", "```py\n*PyArray_Min( *self, int axis, *out)\n```", "```py\n*PyArray_Ptp( *self, int axis, *out)\n```", "```py\n*PyArray_Mean( *self, int axis, int rtype, *out)\n```", "```py\n*PyArray_Trace( *self, int offset, int axis1, int axis2, int rtype, *out)\n```", "```py\n*PyArray_Clip( *self, *min, *max)\n```", "```py\n*PyArray_Conjugate( *self)\n```", "```py\n*PyArray_Round( *self, int decimals, *out)\n```", "```py\n*PyArray_Std( *self, int axis, int rtype, *out)\n```", "```py\n*PyArray_Sum( *self, int axis, int rtype, *out)\n```", "```py\n*PyArray_CumSum( *self, int axis, int rtype, *out)\n```", "```py\n*PyArray_Prod( *self, int axis, int rtype, *out)\n```", "```py\n*PyArray_CumProd( *self, int axis, int rtype, *out)\n```", "```py\n*PyArray_All( *self, int axis, *out)\n```", "```py\n*PyArray_Any( *self, int axis, *out)\n```", "```py\n*PyArray_GetField( *self, *dtype, int offset)\n```", "```py\nint PyArray_SetField( *self, *dtype, int offset, *val)\n```", "```py\n*PyArray_Byteswap( *self, inplace)\n```", "```py\n*PyArray_NewCopy( *old, order)\n```", "```py\n*PyArray_ToList( *self)\n```", "```py\n*PyArray_ToString( *self, order)\n```", "```py\n*PyArray_ToFile( *self, FILE *fp, char *sep, char *format)\n```", "```py\nint PyArray_Dump( *self, *file, int protocol)\n```", "```py\n*PyArray_Dumps( *self, int protocol)\n```", "```py\nint PyArray_FillWithScalar( *arr, *obj)\n```", "```py\n*PyArray_View( *self, *dtype, *ptype)\n```", "```py\n*PyArray_Newshape( *self, *newshape, order)\n```", "```py\n*PyArray_Reshape( *self, *shape)\n```", "```py\n*PyArray_Squeeze( *self)\n```", "```py\n*PyArray_SwapAxes( *self, int a1, int a2)\n```", "```py\n*PyArray_Resize( *self, *newshape, int refcheck, fortran)\n```", "```py\n*PyArray_Transpose( *self, *permute)\n```", "```py\n*PyArray_Flatten( *self, order)\n```", "```py\n*PyArray_Ravel( *self, order)\n```", "```py\n*PyArray_TakeFrom( *self, *indices, int axis, *ret, clipmode)\n```", "```py\n*PyArray_PutTo( *self, *values, *indices, clipmode)\n```", "```py\n*PyArray_PutMask( *self, *values, *mask)\n```", "```py\n*PyArray_Repeat( *self, *op, int axis)\n```", "```py\n*PyArray_Choose( *self, *op, *ret, clipmode)\n```", "```py\nNPY_RAISE\n```", "```py\nNPY_WRAP\n```", "```py\nNPY_CLIP\n```", "```py\n*PyArray_Sort( *self, int axis, kind)\n```", "```py\n*PyArray_ArgSort( *self, int axis)\n```", "```py\n*PyArray_LexSort( *sort_keys, int axis)\n```", "```py\n*PyArray_SearchSorted( *self, *values, side, *perm)\n```", "```py\nint PyArray_Partition( *self, *ktharray, int axis, which)\n```", "```py\n*PyArray_ArgPartition( *op, *ktharray, int axis, which)\n```", "```py\n*PyArray_Diagonal( *self, int offset, int axis1, int axis2)\n```", "```py\nPyArray_CountNonzero( *self)\n```", "```py\n*PyArray_Nonzero( *self)\n```", "```py\n*PyArray_Compress( *self, *condition, int axis, *out)\n```", "```py\n*PyArray_ArgMax( *self, int axis, *out)\n```", "```py\n*PyArray_ArgMin( *self, int axis, *out)\n```", "```py\n*PyArray_Max( *self, int axis, *out)\n```", "```py\n*PyArray_Min( *self, int axis, *out)\n```", "```py\n*PyArray_Ptp( *self, int axis, *out)\n```", "```py\n*PyArray_Mean( *self, int axis, int rtype, *out)\n```", "```py\n*PyArray_Trace( *self, int offset, int axis1, int axis2, int rtype, *out)\n```", "```py\n*PyArray_Clip( *self, *min, *max)\n```", "```py\n*PyArray_Conjugate( *self)\n```", "```py\n*PyArray_Round( *self, int decimals, *out)\n```", "```py\n*PyArray_Std( *self, int axis, int rtype, *out)\n```", "```py\n*PyArray_Sum( *self, int axis, int rtype, *out)\n```", "```py\n*PyArray_CumSum( *self, int axis, int rtype, *out)\n```", "```py\n*PyArray_Prod( *self, int axis, int rtype, *out)\n```", "```py\n*PyArray_CumProd( *self, int axis, int rtype, *out)\n```", "```py\n*PyArray_All( *self, int axis, *out)\n```", "```py\n*PyArray_Any( *self, int axis, *out)\n```", "```py\nint PyArray_AsCArray( **op, void *ptr, *dims, int nd, *typedescr)\n```", "```py\nint PyArray_Free( *op, void *ptr)\n```", "```py\n*PyArray_Concatenate( *obj, int axis)\n```", "```py\n*PyArray_InnerProduct( *obj1, *obj2)\n```", "```py\n*PyArray_MatrixProduct( *obj1, *obj)\n```", "```py\n*PyArray_MatrixProduct2( *obj1, *obj, *out)\n```", "```py\n*PyArray_EinsteinSum(char *subscripts, nop, **op_in, *dtype, order, casting, *out)\n```", "```py\n*PyArray_CopyAndTranspose( *op)\n```", "```py\n*PyArray_Correlate( *op1, *op2, int mode)\n```", "```py\n*PyArray_Correlate2( *op1, *op2, int mode)\n```", "```py\nz[k] = sum_n op1[n] * conj(op2[n+k]) \n```", "```py\n*PyArray_Where( *condition, *x, *y)\n```", "```py\nPyArray_CheckStrides(int elsize, int nd, numbytes, const *dims, const *newstrides)\n```", "```py\nPyArray_MultiplyList( const *seq, int n)\n```", "```py\nint PyArray_MultiplyIntList(int const *seq, int n)\n```", "```py\nint PyArray_CompareLists( const *l1, const *l2, int n)\n```", "```py\nint PyArray_AsCArray( **op, void *ptr, *dims, int nd, *typedescr)\n```", "```py\nint PyArray_Free( *op, void *ptr)\n```", "```py\n*PyArray_Concatenate( *obj, int axis)\n```", "```py\n*PyArray_InnerProduct( *obj1, *obj2)\n```", "```py\n*PyArray_MatrixProduct( *obj1, *obj)\n```", "```py\n*PyArray_MatrixProduct2( *obj1, *obj, *out)\n```", "```py\n*PyArray_EinsteinSum(char *subscripts, nop, **op_in, *dtype, order, casting, *out)\n```", "```py\n*PyArray_CopyAndTranspose( *op)\n```", "```py\n*PyArray_Correlate( *op1, *op2, int mode)\n```", "```py\n*PyArray_Correlate2( *op1, *op2, int mode)\n```", "```py\nz[k] = sum_n op1[n] * conj(op2[n+k]) \n```", "```py\n*PyArray_Where( *condition, *x, *y)\n```", "```py\nPyArray_CheckStrides(int elsize, int nd, numbytes, const *dims, const *newstrides)\n```", "```py\nPyArray_MultiplyList( const *seq, int n)\n```", "```py\nint PyArray_MultiplyIntList(int const *seq, int n)\n```", "```py\nint PyArray_CompareLists( const *l1, const *l2, int n)\n```", "```py\ntype NpyAuxData\n```", "```py\ntypedef  struct  {\n  NpyAuxData  base;\n  ElementCopier_Func  *func;\n  NpyAuxData  *funcdata;\n}  eldoubler_aux_data;\n\nvoid  free_element_doubler_aux_data(NpyAuxData  *data)\n{\n  eldoubler_aux_data  *d  =  (eldoubler_aux_data  *)data;\n  /* Free the memory owned by this auxdata */\n  NPY_AUXDATA_FREE(d->funcdata);\n  PyArray_free(d);\n}\n\nNpyAuxData  *clone_element_doubler_aux_data(NpyAuxData  *data)\n{\n  eldoubler_aux_data  *ret  =  PyArray_malloc(sizeof(eldoubler_aux_data));\n  if  (ret  ==  NULL)  {\n  return  NULL;\n  }\n\n  /* Raw copy of all data */\n  memcpy(ret,  data,  sizeof(eldoubler_aux_data));\n\n  /* Fix up the owned auxdata so we have our own copy */\n  ret->funcdata  =  NPY_AUXDATA_CLONE(ret->funcdata);\n  if  (ret->funcdata  ==  NULL)  {\n  PyArray_free(ret);\n  return  NULL;\n  }\n\n  return  (NpyAuxData  *)ret;\n}\n\nNpyAuxData  *create_element_doubler_aux_data(\n  ElementCopier_Func  *func,\n  NpyAuxData  *funcdata)\n{\n  eldoubler_aux_data  *ret  =  PyArray_malloc(sizeof(eldoubler_aux_data));\n  if  (ret  ==  NULL)  {\n  PyErr_NoMemory();\n  return  NULL;\n  }\n  memset(&ret,  0,  sizeof(eldoubler_aux_data));\n  ret->base->free  =  &free_element_doubler_aux_data;\n  ret->base->clone  =  &clone_element_doubler_aux_data;\n  ret->func  =  func;\n  ret->funcdata  =  funcdata;\n\n  return  (NpyAuxData  *)ret;\n} \n```", "```py\ntype NpyAuxData_FreeFunc\n```", "```py\ntype NpyAuxData_CloneFunc\n```", "```py\nvoid NPY_AUXDATA_FREE( *auxdata)\n```", "```py\n*NPY_AUXDATA_CLONE( *auxdata)\n```", "```py\n*PyArray_IterNew( *arr)\n```", "```py\n*PyArray_IterAllButAxis( *arr, int *axis)\n```", "```py\n*PyArray_BroadcastToShape( *arr, const *dimensions, int nd)\n```", "```py\nint PyArrayIter_Check( *op)\n```", "```py\nvoid PyArray_ITER_RESET( *iterator)\n```", "```py\nvoid PyArray_ITER_NEXT( *iterator)\n```", "```py\nvoid *PyArray_ITER_DATA( *iterator)\n```", "```py\nvoid PyArray_ITER_GOTO( *iterator, *destination)\n```", "```py\nvoid PyArray_ITER_GOTO1D( *iterator, index)\n```", "```py\nint PyArray_ITER_NOTDONE( *iterator)\n```", "```py\n*PyArray_MultiIterNew(int num, ...)\n```", "```py\nvoid PyArray_MultiIter_RESET( *multi)\n```", "```py\nvoid PyArray_MultiIter_NEXT( *multi)\n```", "```py\nvoid *PyArray_MultiIter_DATA( *multi, int i)\n```", "```py\nvoid PyArray_MultiIter_NEXTi( *multi, int i)\n```", "```py\nvoid PyArray_MultiIter_GOTO( *multi, *destination)\n```", "```py\nvoid PyArray_MultiIter_GOTO1D( *multi, index)\n```", "```py\nint PyArray_MultiIter_NOTDONE( *multi)\n```", "```py\nint PyArray_Broadcast( *mit)\n```", "```py\nint PyArray_RemoveSmallest( *mit)\n```", "```py\n*PyArray_NeighborhoodIterNew( *iter, bounds, int mode, *fill_value)\n```", "```py\nNPY_NEIGHBORHOOD_ITER_ZERO_PADDING\n```", "```py\nNPY_NEIGHBORHOOD_ITER_ONE_PADDING\n```", "```py\nNPY_NEIGHBORHOOD_ITER_CONSTANT_PADDING\n```", "```py\nNPY_NEIGHBORHOOD_ITER_MIRROR_PADDING\n```", "```py\nNPY_NEIGHBORHOOD_ITER_CIRCULAR_PADDING\n```", "```py\nPyArrayIterObject  *iter;\nPyArrayNeighborhoodIterObject  *neigh_iter;\niter  =  PyArray_IterNew(x);\n\n/*For a 3x3 kernel */\nbounds  =  {-1,  1,  -1,  1};\nneigh_iter  =  (PyArrayNeighborhoodIterObject*)PyArray_NeighborhoodIterNew(\n  iter,  bounds,  NPY_NEIGHBORHOOD_ITER_ZERO_PADDING,  NULL);\n\nfor(i  =  0;  i  <  iter->size;  ++i)  {\n  for  (j  =  0;  j  <  neigh_iter->size;  ++j)  {\n  /* Walk around the item currently pointed by iter->dataptr */\n  PyArrayNeighborhoodIter_Next(neigh_iter);\n  }\n\n  /* Move to the next point of iter */\n  PyArrayIter_Next(iter);\n  PyArrayNeighborhoodIter_Reset(neigh_iter);\n} \n```", "```py\nint PyArrayNeighborhoodIter_Reset( *iter)\n```", "```py\nint PyArrayNeighborhoodIter_Next( *iter)\n```", "```py\n*PyArray_MapIterArray( *a, *index)\n```", "```py\nvoid PyArray_MapIterSwapAxes( *mit, **ret, int getmap)\n```", "```py\nvoid PyArray_MapIterNext( *mit)\n```", "```py\n*PyArray_MapIterArrayCopyIfOverlap( *a, *index, int copy_if_overlap, *extra_op)\n```", "```py\n*PyArray_Return( *arr)\n```", "```py\n*PyArray_Scalar(void *data, *dtype, *base)\n```", "```py\n*PyArray_ToScalar(void *data, *arr)\n```", "```py\n*PyArray_FromScalar( *scalar, *outcode)\n```", "```py\nvoid PyArray_ScalarAsCtype( *scalar, void *ctypeptr)\n```", "```py\nvoid PyArray_CastScalarToCtype( *scalar, void *ctypeptr, *outcode)\n```", "```py\n*PyArray_TypeObjectFromType(int type)\n```", "```py\nPyArray_ScalarKind(int typenum, **arr)\n```", "```py\nint PyArray_CanCoerceScalar(char thistype, char neededtype, scalar)\n```", "```py\nint PyArray_DescrCheck( *obj)\n```", "```py\n*PyArray_DescrNew( *obj)\n```", "```py\n*PyArray_DescrNewFromType(int typenum)\n```", "```py\n*PyArray_DescrNewByteorder( *obj, char newendian)\n```", "```py\nNPY_IGNORE\n```", "```py\nNPY_SWAP\n```", "```py\nNPY_NATIVE\n```", "```py\nNPY_LITTLE\n```", "```py\nNPY_BIG\n```", "```py\n*PyArray_DescrFromObject( *op, *mintype)\n```", "```py\n*PyArray_DescrFromScalar( *scalar)\n```", "```py\n*PyArray_DescrFromType(int typenum)\n```", "```py\nint PyArray_DescrConverter( *obj, **dtype)\n```", "```py\nint PyArray_DescrConverter2( *obj, **dtype)\n```", "```py\nint Pyarray_DescrAlignConverter( *obj, **dtype)\n```", "```py\nint Pyarray_DescrAlignConverter2( *obj, **dtype)\n```", "```py\n*PyArray_FieldNames( *dict)\n```", "```py\nint PyArray_Converter( *obj, **address)\n```", "```py\nint PyArray_OutputConverter( *obj, **address)\n```", "```py\nint PyArray_IntpConverter( *obj, *seq)\n```", "```py\nint PyArray_BufferConverter( *obj, *buf)\n```", "```py\nint PyArray_AxisConverter( *obj, int *axis)\n```", "```py\nint PyArray_BoolConverter( *obj, *value)\n```", "```py\nint PyArray_ByteorderConverter( *obj, char *endian)\n```", "```py\nint PyArray_SortkindConverter( *obj, *sort)\n```", "```py\nint PyArray_SearchsideConverter( *obj, *side)\n```", "```py\nint PyArray_OrderConverter( *obj, *order)\n```", "```py\nint PyArray_CastingConverter( *obj, *casting)\n```", "```py\nint PyArray_ClipmodeConverter( *object, *val)\n```", "```py\nint PyArray_ConvertClipmodeSequence( *object, *modes, int n)\n```", "```py\nint PyArray_PyIntAsInt( *op)\n```", "```py\n#define error_converting(x) (((x) == -1) && PyErr_Occurred()) \n```", "```py\nPyArray_PyIntAsIntp( *op)\n```", "```py\nint PyArray_IntpFromSequence( *seq, *vals, int maxvals)\n```", "```py\nint PyArray_TypestrConvert(int itemsize, int gentype)\n```", "```py\nint PyArray_Converter( *obj, **address)\n```", "```py\nint PyArray_OutputConverter( *obj, **address)\n```", "```py\nint PyArray_IntpConverter( *obj, *seq)\n```", "```py\nint PyArray_BufferConverter( *obj, *buf)\n```", "```py\nint PyArray_AxisConverter( *obj, int *axis)\n```", "```py\nint PyArray_BoolConverter( *obj, *value)\n```", "```py\nint PyArray_ByteorderConverter( *obj, char *endian)\n```", "```py\nint PyArray_SortkindConverter( *obj, *sort)\n```", "```py\nint PyArray_SearchsideConverter( *obj, *side)\n```", "```py\nint PyArray_OrderConverter( *obj, *order)\n```", "```py\nint PyArray_CastingConverter( *obj, *casting)\n```", "```py\nint PyArray_ClipmodeConverter( *object, *val)\n```", "```py\nint PyArray_ConvertClipmodeSequence( *object, *modes, int n)\n```", "```py\nint PyArray_PyIntAsInt( *op)\n```", "```py\n#define error_converting(x) (((x) == -1) && PyErr_Occurred()) \n```", "```py\nPyArray_PyIntAsIntp( *op)\n```", "```py\nint PyArray_IntpFromSequence( *seq, *vals, int maxvals)\n```", "```py\nint PyArray_TypestrConvert(int itemsize, int gentype)\n```", "```py\nvoid import_array(void)\n```", "```py\nPY_ARRAY_UNIQUE_SYMBOL\n```", "```py\nNO_IMPORT_ARRAY\n```", "```py\n#define PY_ARRAY_UNIQUE_SYMBOL cool_ARRAY_API\n#include numpy/arrayobject.h \n```", "```py\n#define NO_IMPORT_ARRAY\n#define PY_ARRAY_UNIQUE_SYMBOL cool_ARRAY_API\n#include numpy/arrayobject.h \n```", "```py\nNPY_VERSION\n```", "```py\nNPY_FEATURE_VERSION\n```", "```py\nunsigned int PyArray_GetNDArrayCVersion(void)\n```", "```py\nunsigned int PyArray_GetNDArrayCFeatureVersion(void)\n```", "```py\nint PyArray_SetNumericOps( *dict)\n```", "```py\n*PyArray_GetNumericOps(void)\n```", "```py\nvoid PyArray_SetStringFunction( *op, int repr)\n```", "```py\nchar *PyDataMem_NEW(size_t nbytes)\n```", "```py\nvoid PyDataMem_FREE(char *ptr)\n```", "```py\nchar *PyDataMem_RENEW(void *ptr, size_t newbytes)\n```", "```py\n*PyDimMem_NEW(int nd)\n```", "```py\nvoid PyDimMem_FREE(char *ptr)\n```", "```py\n*PyDimMem_RENEW(void *ptr, size_t newnd)\n```", "```py\nvoid *PyArray_malloc(size_t nbytes)\n```", "```py\nvoid PyArray_free(void *ptr)\n```", "```py\nvoid *PyArray_realloc( *ptr, size_t nbytes)\n```", "```py\nNPY_USE_PYMEM\n```", "```py\nint PyArray_ResolveWritebackIfCopy( *obj)\n```", "```py\nNPY_ALLOW_THREADS\n```", "```py\nWITH_THREADS\n```", "```py\n> NPY_BEGIN_ALLOW_THREADS\n> ```", "```py\n> NPY_END_ALLOW_THREADS\n> ```", "```py\n> NPY_BEGIN_THREADS_DEF\n> ```", "```py\n> NPY_BEGIN_THREADS\n> ```", "```py\n> NPY_END_THREADS\n> ```", "```py\n> void NPY_BEGIN_THREADS_DESCR( *dtype)\n> ```", "```py\n> void NPY_END_THREADS_DESCR( *dtype)\n> ```", "```py\n> void NPY_BEGIN_THREADS_THRESHOLDED(int loop_size)\n> ```", "```py\n> NPY_ALLOW_C_API_DEF\n> ```", "```py\n> NPY_ALLOW_C_API\n> ```", "```py\n> NPY_DISABLE_C_API\n> ```", "```py\nNPY_PRIORITY\n```", "```py\nNPY_SUBTYPE_PRIORITY\n```", "```py\nNPY_SCALAR_PRIORITY\n```", "```py\ndouble PyArray_GetPriority( *obj, double def)\n```", "```py\nNPY_BUFSIZE\n```", "```py\nNPY_MIN_BUFSIZE\n```", "```py\nNPY_MAX_BUFSIZE\n```", "```py\nNPY_NUM_FLOATTYPE\n```", "```py\nNPY_MAXDIMS\n```", "```py\nNPY_MAXARGS\n```", "```py\nNPY_FALSE\n```", "```py\nNPY_TRUE\n```", "```py\nNPY_FAIL\n```", "```py\nNPY_SUCCEED\n```", "```py\nint PyArray_SAMESHAPE( *a1, *a2)\n```", "```py\nPyArray_MAX(a, b)\n```", "```py\nPyArray_MIN(a, b)\n```", "```py\nPyArray_CLT(a, b)\n```", "```py\nPyArray_CGT(a, b)\n```", "```py\nPyArray_CLE(a, b)\n```", "```py\nPyArray_CGE(a, b)\n```", "```py\nPyArray_CEQ(a, b)\n```", "```py\nPyArray_CNE(a, b)\n```", "```py\nPyArray_REFCOUNT( *op)\n```", "```py\nvoid PyArray_DiscardWritebackIfCopy( *obj)\n```", "```py\nenum NPY_SORTKIND\n```", "```py\nenumerator NPY_QUICKSORT\n```", "```py\nenumerator NPY_HEAPSORT\n```", "```py\nenumerator NPY_MERGESORT\n```", "```py\nenumerator NPY_STABLESORT\n```", "```py\nenumerator NPY_NSORTS\n```", "```py\nenum NPY_SCALARKIND\n```", "```py\nenumerator NPY_NOSCALAR\n```", "```py\nenumerator NPY_BOOL_SCALAR\n```", "```py\nenumerator NPY_INTPOS_SCALAR\n```", "```py\nenumerator NPY_INTNEG_SCALAR\n```", "```py\nenumerator NPY_FLOAT_SCALAR\n```", "```py\nenumerator NPY_COMPLEX_SCALAR\n```", "```py\nenumerator NPY_OBJECT_SCALAR\n```", "```py\nenumerator NPY_NSCALARKINDS\n```", "```py\nenum NPY_ORDER\n```", "```py\nenumerator NPY_ANYORDER\n```", "```py\nenumerator NPY_CORDER\n```", "```py\nenumerator NPY_FORTRANORDER\n```", "```py\nenumerator NPY_KEEPORDER\n```", "```py\nenum NPY_CLIPMODE\n```", "```py\nenumerator NPY_RAISE\n```", "```py\nenumerator NPY_CLIP\n```", "```py\nenumerator NPY_WRAP\n```", "```py\nenum NPY_SEARCHSIDE\n```", "```py\nenumerator NPY_SEARCHLEFT\n```", "```py\nenumerator NPY_SEARCHRIGHT\n```", "```py\nenum NPY_SELECTKIND\n```", "```py\nenumerator NPY_INTROSELECT\n```", "```py\nenum NPY_CASTING\n```", "```py\nenumerator NPY_NO_CASTING\n```", "```py\nenumerator NPY_EQUIV_CASTING\n```", "```py\nenumerator NPY_SAFE_CASTING\n```", "```py\nenumerator NPY_SAME_KIND_CASTING\n```", "```py\nenumerator NPY_UNSAFE_CASTING\n```", "```py\nvoid import_array(void)\n```", "```py\nPY_ARRAY_UNIQUE_SYMBOL\n```", "```py\nNO_IMPORT_ARRAY\n```", "```py\n#define PY_ARRAY_UNIQUE_SYMBOL cool_ARRAY_API\n#include numpy/arrayobject.h \n```", "```py\n#define NO_IMPORT_ARRAY\n#define PY_ARRAY_UNIQUE_SYMBOL cool_ARRAY_API\n#include numpy/arrayobject.h \n```", "```py\nNPY_VERSION\n```", "```py\nNPY_FEATURE_VERSION\n```", "```py\nunsigned int PyArray_GetNDArrayCVersion(void)\n```", "```py\nunsigned int PyArray_GetNDArrayCFeatureVersion(void)\n```", "```py\nint PyArray_SetNumericOps( *dict)\n```", "```py\n*PyArray_GetNumericOps(void)\n```", "```py\nvoid PyArray_SetStringFunction( *op, int repr)\n```", "```py\nchar *PyDataMem_NEW(size_t nbytes)\n```", "```py\nvoid PyDataMem_FREE(char *ptr)\n```", "```py\nchar *PyDataMem_RENEW(void *ptr, size_t newbytes)\n```", "```py\n*PyDimMem_NEW(int nd)\n```", "```py\nvoid PyDimMem_FREE(char *ptr)\n```", "```py\n*PyDimMem_RENEW(void *ptr, size_t newnd)\n```", "```py\nvoid *PyArray_malloc(size_t nbytes)\n```", "```py\nvoid PyArray_free(void *ptr)\n```", "```py\nvoid *PyArray_realloc( *ptr, size_t nbytes)\n```", "```py\nNPY_USE_PYMEM\n```", "```py\nint PyArray_ResolveWritebackIfCopy( *obj)\n```", "```py\nNPY_ALLOW_THREADS\n```", "```py\nWITH_THREADS\n```", "```py\n> NPY_BEGIN_ALLOW_THREADS\n> ```", "```py\n> NPY_END_ALLOW_THREADS\n> ```", "```py\n> NPY_BEGIN_THREADS_DEF\n> ```", "```py\n> NPY_BEGIN_THREADS\n> ```", "```py\n> NPY_END_THREADS\n> ```", "```py\n> void NPY_BEGIN_THREADS_DESCR( *dtype)\n> ```", "```py\n> void NPY_END_THREADS_DESCR( *dtype)\n> ```", "```py\n> void NPY_BEGIN_THREADS_THRESHOLDED(int loop_size)\n> ```", "```py\n> NPY_ALLOW_C_API_DEF\n> ```", "```py\n> NPY_ALLOW_C_API\n> ```", "```py\n> NPY_DISABLE_C_API\n> ```", "```py\n> NPY_BEGIN_ALLOW_THREADS\n> ```", "```py\n> NPY_END_ALLOW_THREADS\n> ```", "```py\n> NPY_BEGIN_THREADS_DEF\n> ```", "```py\n> NPY_BEGIN_THREADS\n> ```", "```py\n> NPY_END_THREADS\n> ```", "```py\n> void NPY_BEGIN_THREADS_DESCR( *dtype)\n> ```", "```py\n> void NPY_END_THREADS_DESCR( *dtype)\n> ```", "```py\n> void NPY_BEGIN_THREADS_THRESHOLDED(int loop_size)\n> ```", "```py\n> NPY_ALLOW_C_API_DEF\n> ```", "```py\n> NPY_ALLOW_C_API\n> ```", "```py\n> NPY_DISABLE_C_API\n> ```", "```py\nNPY_PRIORITY\n```", "```py\nNPY_SUBTYPE_PRIORITY\n```", "```py\nNPY_SCALAR_PRIORITY\n```", "```py\ndouble PyArray_GetPriority( *obj, double def)\n```", "```py\nNPY_BUFSIZE\n```", "```py\nNPY_MIN_BUFSIZE\n```", "```py\nNPY_MAX_BUFSIZE\n```", "```py\nNPY_NUM_FLOATTYPE\n```", "```py\nNPY_MAXDIMS\n```", "```py\nNPY_MAXARGS\n```", "```py\nNPY_FALSE\n```", "```py\nNPY_TRUE\n```", "```py\nNPY_FAIL\n```", "```py\nNPY_SUCCEED\n```", "```py\nint PyArray_SAMESHAPE( *a1, *a2)\n```", "```py\nPyArray_MAX(a, b)\n```", "```py\nPyArray_MIN(a, b)\n```", "```py\nPyArray_CLT(a, b)\n```", "```py\nPyArray_CGT(a, b)\n```", "```py\nPyArray_CLE(a, b)\n```", "```py\nPyArray_CGE(a, b)\n```", "```py\nPyArray_CEQ(a, b)\n```", "```py\nPyArray_CNE(a, b)\n```", "```py\nPyArray_REFCOUNT( *op)\n```", "```py\nvoid PyArray_DiscardWritebackIfCopy( *obj)\n```", "```py\nenum NPY_SORTKIND\n```", "```py\nenumerator NPY_QUICKSORT\n```", "```py\nenumerator NPY_HEAPSORT\n```", "```py\nenumerator NPY_MERGESORT\n```", "```py\nenumerator NPY_STABLESORT\n```", "```py\nenumerator NPY_NSORTS\n```", "```py\nenum NPY_SCALARKIND\n```", "```py\nenumerator NPY_NOSCALAR\n```", "```py\nenumerator NPY_BOOL_SCALAR\n```", "```py\nenumerator NPY_INTPOS_SCALAR\n```", "```py\nenumerator NPY_INTNEG_SCALAR\n```", "```py\nenumerator NPY_FLOAT_SCALAR\n```", "```py\nenumerator NPY_COMPLEX_SCALAR\n```", "```py\nenumerator NPY_OBJECT_SCALAR\n```", "```py\nenumerator NPY_NSCALARKINDS\n```", "```py\nenum NPY_ORDER\n```", "```py\nenumerator NPY_ANYORDER\n```", "```py\nenumerator NPY_CORDER\n```", "```py\nenumerator NPY_FORTRANORDER\n```", "```py\nenumerator NPY_KEEPORDER\n```", "```py\nenum NPY_CLIPMODE\n```", "```py\nenumerator NPY_RAISE\n```", "```py\nenumerator NPY_CLIP\n```", "```py\nenumerator NPY_WRAP\n```", "```py\nenum NPY_SEARCHSIDE\n```", "```py\nenumerator NPY_SEARCHLEFT\n```", "```py\nenumerator NPY_SEARCHRIGHT\n```", "```py\nenum NPY_SELECTKIND\n```", "```py\nenumerator NPY_INTROSELECT\n```", "```py\nenum NPY_CASTING\n```", "```py\nenumerator NPY_NO_CASTING\n```", "```py\nenumerator NPY_EQUIV_CASTING\n```", "```py\nenumerator NPY_SAFE_CASTING\n```", "```py\nenumerator NPY_SAME_KIND_CASTING\n```", "```py\nenumerator NPY_UNSAFE_CASTING\n```"]