- en: Merge, join, concatenate and compare
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 合并，连接，串联和比较
- en: 原文：[https://pandas.pydata.org/docs/user_guide/merging.html](https://pandas.pydata.org/docs/user_guide/merging.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/user_guide/merging.html](https://pandas.pydata.org/docs/user_guide/merging.html)
- en: pandas provides various methods for combining and comparing [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame").
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: pandas提供了各种方法来合并和比较[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")或[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")。
- en: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat"):
    Merge multiple [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    objects along a shared index or column'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat"):
    将多个[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")或[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")对象沿着共享的索引或列合并'
- en: '[`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join"): Merge multiple [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects along the columns'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join"): 沿着列合并多个[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")对象'
- en: '[`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first"): Update missing values with non-missing values
    in the same location'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first"): 在相同位置使用非缺失值更新缺失值'
- en: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge"):
    Combine two [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    objects with SQL-style joining'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge"):
    用类似 SQL 的方式合并两个[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")或[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")对象'
- en: '[`merge_ordered()`](../reference/api/pandas.merge_ordered.html#pandas.merge_ordered
    "pandas.merge_ordered"): Combine two [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects along an ordered axis'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`merge_ordered()`](../reference/api/pandas.merge_ordered.html#pandas.merge_ordered
    "pandas.merge_ordered"): 沿着有序轴合并两个[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")或[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")对象'
- en: '[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof"): Combine two [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects by near instead of exact matching keys'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof"): 通过近似匹配键而不是精确匹配键来合并两个[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")或[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")对象'
- en: '[`Series.compare()`](../reference/api/pandas.Series.compare.html#pandas.Series.compare
    "pandas.Series.compare") and [`DataFrame.compare()`](../reference/api/pandas.DataFrame.compare.html#pandas.DataFrame.compare
    "pandas.DataFrame.compare"): Show differences in values between two [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.compare()`](../reference/api/pandas.Series.compare.html#pandas.Series.compare
    "pandas.Series.compare")和[`DataFrame.compare()`](../reference/api/pandas.DataFrame.compare.html#pandas.DataFrame.compare
    "pandas.DataFrame.compare"): 显示两个[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")或[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")对象之间的值差异'
- en: '## [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '## [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")'
- en: The [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    function concatenates an arbitrary amount of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects along an axis while performing optional set logic
    (union or intersection) of the indexes on the other axes. Like `numpy.concatenate`,
    [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    takes a list or dict of homogeneously-typed objects and concatenates them.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")函数沿着一个轴连接任意数量的[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")或[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")对象，同时在其他轴上执行可选的集合逻辑（并集或交集）索引。与`numpy.concatenate`类似，[`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat")接受一个同类型对象的列表或字典，并将它们连接起来。'
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![../_images/merging_concat_basic.png](../Images/197770ddfae446f6c9a3b471d42f8669.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_basic.png](../Images/197770ddfae446f6c9a3b471d42f8669.png)'
- en: Note
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    makes a full copy of the data, and iteratively reusing [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") can create unnecessary copies. Collect all [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") objects in a list before using [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat").'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")会对数据进行完全复制，并且反复使用[`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat")可能会创建不必要的副本。在使用[`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat")之前，先将所有[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")或[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")对象收集到一个列表中。'
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Note
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When concatenating [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with named axes, pandas will attempt to preserve these index/column
    names whenever possible. In the case where all inputs share a common name, this
    name will be assigned to the result. When the input names do not all agree, the
    result will be unnamed. The same is true for [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"), but the logic is applied separately on a level-by-level
    basis.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 当连接具有命名轴的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")时，pandas会尽可能保留这些索引/列名称。在所有输入共享一个公共名称的情况下，该名称将分配给结果。当输入名称不完全一致时，结果将没有名称。对于[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")也是如此，但逻辑是逐级别分别应用的。
- en: Joining logic of the resulting axis
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结果轴的连接逻辑
- en: The `join` keyword specifies how to handle axis values that don’t exist in the
    first [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame").
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`join`关键字指定如何处理第一个[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")中不存在的轴值。'
- en: '`join=''outer''` takes the union of all axis values'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`join=''outer''`取所有轴值的并集'
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![../_images/merging_concat_axis1.png](../Images/e0a246f6ecd997eeab68391ea5b9af68.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_axis1.png](../Images/e0a246f6ecd997eeab68391ea5b9af68.png)'
- en: '`join=''inner''` takes the intersection of the axis values'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '`join=''inner''`取轴值的交集'
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![../_images/merging_concat_axis1_inner.png](../Images/4ee4f3cb678d35fab2c005e31ec737be.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_axis1_inner.png](../Images/4ee4f3cb678d35fab2c005e31ec737be.png)'
- en: To perform an effective “left” join using the *exact index* from the original
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame"),
    result can be reindexed.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用原始[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")的*确切索引*执行有效的“左”连接，结果可以重新索引。
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![../_images/merging_concat_axis1_join_axes.png](../Images/cb9604d242237ed6938c5e927b2fa4ae.png)
    ### Ignoring indexes on the concatenation axis'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '![../_images/merging_concat_axis1_join_axes.png](../Images/cb9604d242237ed6938c5e927b2fa4ae.png)
    ### 在连接轴上忽略索引'
- en: For [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    objects which don’t have a meaningful index, the `ignore_index` ignores overlapping
    indexes.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 对于没有有意义索引的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")对象，`ignore_index`会忽略重叠的索引。
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![../_images/merging_concat_ignore_index.png](../Images/2686a54b2c5df0d2d2d8aa37c9022d30.png)
    ### Concatenating [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") together'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '![../_images/merging_concat_ignore_index.png](../Images/2686a54b2c5df0d2d2d8aa37c9022d30.png)
    ### 将[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")和[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")连接在一起'
- en: You can concatenate a mix of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects. The [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") will be transformed to [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with the column name as the name of the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series").
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以连接一组[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")和[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")对象。[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")将转换为具��列名的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")，列名为[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")的名称。
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![../_images/merging_concat_mixed_ndim.png](../Images/abb00ea5c6e5767b44562e9a6d9903bb.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_mixed_ndim.png](../Images/abb00ea5c6e5767b44562e9a6d9903bb.png)'
- en: Unnamed [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    will be numbered consecutively.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 未命名的[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")将按顺序编号。
- en: '[PRE7]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![../_images/merging_concat_unnamed_series.png](../Images/63664821a48db8b69bbc1964bb3c5b2f.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_unnamed_series.png](../Images/63664821a48db8b69bbc1964bb3c5b2f.png)'
- en: '`ignore_index=True` will drop all name references.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '`ignore_index=True` 将删除所有名称引用。'
- en: '[PRE8]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![../_images/merging_concat_series_ignore_index.png](../Images/79ee3ad5dcb5904fec9497b9e15eb143.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_series_ignore_index.png](../Images/79ee3ad5dcb5904fec9497b9e15eb143.png)'
- en: Resulting `keys`
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结果的`keys`
- en: The `keys` argument adds another axis level to the resulting index or column
    (creating a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")) associate specific keys with each original [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame").
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`keys` 参数将向结果索引或列添加另一个轴级别（创建一个[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")），将特定键与每个原始[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")关联。'
- en: '[PRE9]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![../_images/merging_concat_keys.png](../Images/d6a46e6554d82ae5b512a02bfcf175ae.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_keys.png](../Images/d6a46e6554d82ae5b512a02bfcf175ae.png)'
- en: The `keys` argument cane override the column names when creating a new [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") based on existing [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series").
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`keys` 参数可以在基于现有[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")创建新[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")时覆盖列名。'
- en: '[PRE10]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You can also pass a dict to [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") in which case the dict keys will be used for the `keys` argument
    unless other `keys` argument is specified:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以将字典传递给[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")，在这种情况下，除非指定了其他`keys`参数，否则将使用字典键作为`keys`参数：
- en: '[PRE11]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![../_images/merging_concat_dict.png](../Images/15dbb4b38b5d1d27ea2558f176a0cbcc.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_dict.png](../Images/15dbb4b38b5d1d27ea2558f176a0cbcc.png)'
- en: '[PRE12]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![../_images/merging_concat_dict_keys.png](../Images/0cfb0a5b40f00a0b835166985e8b07d2.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_dict_keys.png](../Images/0cfb0a5b40f00a0b835166985e8b07d2.png)'
- en: 'The [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") created has levels that are constructed from the passed keys
    and the index of the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") pieces:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 创建的[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")具有从传递的键和[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")片段的索引构建的级别：
- en: '[PRE13]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '`levels` argument allows specifying resulting levels associated with the `keys`'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '`levels` 参数允许指定与`keys`相关联的结果级别'
- en: '[PRE14]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![../_images/merging_concat_dict_keys_names.png](../Images/1c96e034f06f6b7a0b5712c611dc9eaa.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_dict_keys_names.png](../Images/1c96e034f06f6b7a0b5712c611dc9eaa.png)'
- en: '[PRE15]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '### Appending rows to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '### 将行附加到[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")'
- en: If you have a [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    that you want to append as a single row to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), you can convert the row into a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and use [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat")
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有一个要附加为单行到 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 的 [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")，您可以将该行转换为 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 并使用 [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat")
- en: '[PRE16]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![../_images/merging_append_series_as_row.png](../Images/77fde4bb7a02c92ae6eb25ada45b7d30.png)
    ## [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_append_series_as_row.png](../Images/77fde4bb7a02c92ae6eb25ada45b7d30.png)
    ## [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")'
- en: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    performs join operations similar to relational databases like SQL. Users who are
    familiar with SQL but new to pandas can reference a [comparison with SQL](../getting_started/comparison/comparison_with_sql.html#compare-with-sql-join).'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    执行类似于关系数据库（如 SQL）的连接操作。熟悉 SQL 但是对 pandas 新手的用户可以参考与 SQL 的[比较](../getting_started/comparison/comparison_with_sql.html#compare-with-sql-join)。'
- en: Merge types
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 连接类型
- en: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    implements common SQL style joining operations.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    实现了常见的 SQL 风格的连接操作。'
- en: '**one-to-one**: joining two [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects on their indexes which must contain unique values.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一对一**：在它们的索引上连接两个 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 对象，这些索引必须包含唯一值。'
- en: '**many-to-one**: joining a unique index to one or more columns in a different
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame").'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一对多**：将唯一索引与不同 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 中的一个或多个列进行连接。'
- en: '**many-to-many** : joining columns on columns.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多对多**：在列上连接列。'
- en: Note
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When joining columns on columns, potentially a many-to-many join, any indexes
    on the passed [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects **will be discarded**.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 当在列上连接列时，可能是多对多的连接，传递的 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 对象上的任何索引**将被丢弃**。
- en: For a **many-to-many** join, if a key combination appears more than once in
    both tables, the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") will have the **Cartesian product** of the associated data.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 对于**多对多**的连接，如果一个键组合在两个表中出现多次，[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 将具有相关数据的**笛卡尔积**。
- en: '[PRE17]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![../_images/merging_merge_on_key.png](../Images/d6b1819ca63e08197b1b784609ad8a00.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_on_key.png](../Images/d6b1819ca63e08197b1b784609ad8a00.png)'
- en: 'The `how` argument to [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") specifies which keys are included in the resulting table. If a
    key combination **does not appear** in either the left or right tables, the values
    in the joined table will be `NA`. Here is a summary of the `how` options and their
    SQL equivalent names:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    的 `how` 参数指定了哪些键包含在结果表中。如果一个键组合**不存在**于左表或右表中，连接表中的值将为 `NA`。以下是 `how` 选项及其 SQL
    等效名称的摘要：
- en: '| Merge method | SQL Join Name | Description |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| 合并方法 | SQL 连接名称 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `left` | `LEFT OUTER JOIN` | Use keys from left frame only |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| `left` | `LEFT OUTER JOIN` | 仅使用左框架中的键 |'
- en: '| `right` | `RIGHT OUTER JOIN` | Use keys from right frame only |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| `right` | `RIGHT OUTER JOIN` | 仅使用右框架中的键 |'
- en: '| `outer` | `FULL OUTER JOIN` | Use union of keys from both frames |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| `outer` | `FULL OUTER JOIN` | 使用两个框架的键的并集 |'
- en: '| `inner` | `INNER JOIN` | Use intersection of keys from both frames |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| `inner` | `INNER JOIN` | 使用两个框架中键的交集 |'
- en: '| `cross` | `CROSS JOIN` | Create the cartesian product of rows of both frames
    |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| `cross` | `CROSS JOIN` | 创建两个框架行的笛卡尔积 |'
- en: '[PRE18]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '![../_images/merging_merge_on_key_left.png](../Images/253bd4aaabe02d0bcdd272f9731ce2ac.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_on_key_left.png](../Images/253bd4aaabe02d0bcdd272f9731ce2ac.png)'
- en: '[PRE19]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![../_images/merging_merge_on_key_right.png](../Images/a3483bb3808d5fb8e615597ae350a683.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_on_key_right.png](../Images/a3483bb3808d5fb8e615597ae350a683.png)'
- en: '[PRE20]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![../_images/merging_merge_on_key_outer.png](../Images/eeddf21647b87d1651568da32a0be109.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_on_key_outer.png](../Images/eeddf21647b87d1651568da32a0be109.png)'
- en: '[PRE21]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '![../_images/merging_merge_on_key_inner.png](../Images/5498faa79b3230a481f502ef680b88bd.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_on_key_inner.png](../Images/5498faa79b3230a481f502ef680b88bd.png)'
- en: '[PRE22]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![../_images/merging_merge_cross.png](../Images/827cef2fb97ff68b18aa8afafcb58f6b.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_cross.png](../Images/827cef2fb97ff68b18aa8afafcb58f6b.png)'
- en: You can [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") if the names of the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") correspond to the columns from the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"). Transform the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") using [`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index") before merging
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")的名称与[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")中的列名对应，则可以使用[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")和具有[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")。在合并之前，使用[`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index")将[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")转换为[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")
- en: '[PRE23]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Performing an outer join with duplicate join keys in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在具有重复连接键的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")中执行外连接
- en: '[PRE24]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '![../_images/merging_merge_on_key_dup.png](../Images/ace1e3045f1df8ac6a20d19356459687.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_on_key_dup.png](../Images/ace1e3045f1df8ac6a20d19356459687.png)'
- en: Warning
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Merging on duplicate keys significantly increase the dimensions of the result
    and can cause a memory overflow.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在重复键上进行合并会显著增加结果的维度，并可能导致内存溢出。
- en: '### Merge key uniqueness'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '### 合并键的唯一性'
- en: The `validate` argument checks whether the uniqueness of merge keys. Key uniqueness
    is checked before merge operations and can protect against memory overflows and
    unexpected key duplication.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '`validate`参数检查合并键的唯一性。在执行合并操作之前检查键的唯一性可以防止内存溢出和意外键重复。'
- en: '[PRE25]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: If the user is aware of the duplicates in the right [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") but wants to ensure there are no duplicates in the left [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), one can use the `validate='one_to_many'` argument instead,
    which will not raise an exception.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户意识到右侧[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")中存在重复项，但希望确保左侧[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")中没有重复项，则可以使用`validate='one_to_many'`参数，这样不会引发异常。
- en: '[PRE26]  ### Merge result indicator'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE26]  ### 合并结果指示器'
- en: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    accepts the argument `indicator`. If `True`, a Categorical-type column called
    `_merge` will be added to the output object that takes on values:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")接受参数`indicator`。如果为`True`，则将向输出对象添加一个名为`_merge`的分类列，其取值为：'
- en: '| Observation Origin | `_merge` value |'
  id: totrans-105
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| 观察来源 | `_merge`值 |'
- en: '| --- | --- |'
  id: totrans-106
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Merge key only in `''left''` frame | `left_only` |'
  id: totrans-107
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| 仅在`''left''`数据框中的合并键 | `left_only` |'
- en: '| Merge key only in `''right''` frame | `right_only` |'
  id: totrans-108
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| 仅在`''right''`数据框中的合并键 | `right_only` |'
- en: '| Merge key in both frames | `both` |'
  id: totrans-109
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| 两个数据框中的合并键 | `both` |'
- en: '[PRE27]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: A string argument to `indicator` will use the value as the name for the indicator
    column.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 字符串参数`indicator`将使用该值作为指示器列的名称。
- en: '[PRE28]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Overlapping value columns
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重叠值列
- en: 'The merge `suffixes` argument takes a tuple of list of strings to append to
    overlapping column names in the input [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to disambiguate the result columns:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 合并`suffixes`参数接受一个字符串列表的元组，用于附加到输入[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")中重叠列名以消除结果列的歧义：
- en: '[PRE29]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '![../_images/merging_merge_overlapped.png](../Images/8c37a04a49eefe5656851f9861af467d.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_overlapped.png](../Images/8c37a04a49eefe5656851f9861af467d.png)'
- en: '[PRE30]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '![../_images/merging_merge_overlapped_suffix.png](../Images/861ebb2092353e7e4692c58cca1395fe.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_overlapped_suffix.png](../Images/861ebb2092353e7e4692c58cca1395fe.png)'
- en: '[`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join")'
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join")'
- en: '[`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") combines the columns of multiple, potentially differently-indexed
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    into a single result [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame").'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join")将多个可能具有不同索引的列的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")合并为单个结果[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")。'
- en: '[PRE31]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '![../_images/merging_join.png](../Images/958e38166937d7b3995bdf9922d4c2cb.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_join.png](../Images/958e38166937d7b3995bdf9922d4c2cb.png)'
- en: '[PRE32]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '![../_images/merging_join_outer.png](../Images/b9190cb19f0e22525642dc93dba6a5b8.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_join_outer.png](../Images/b9190cb19f0e22525642dc93dba6a5b8.png)'
- en: '[PRE33]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '![../_images/merging_join_inner.png](../Images/36c80fb763b9198ec32e85eec57c495e.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_join_inner.png](../Images/36c80fb763b9198ec32e85eec57c495e.png)'
- en: '[`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") takes an optional `on` argument which may be a column
    or multiple column names that the passed [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") is to be aligned.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join")接受一个可选的`on`参数，可以是要对齐的列或多个列名。'
- en: '[PRE34]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '![../_images/merging_join_key_columns.png](../Images/f4a5bcb443bc503a385b8f36db80a2ea.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_join_key_columns.png](../Images/f4a5bcb443bc503a385b8f36db80a2ea.png)'
- en: '[PRE35]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '![../_images/merging_merge_key_columns.png](../Images/835ae7c7cab842287fc2e7b5544e6233.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_key_columns.png](../Images/835ae7c7cab842287fc2e7b5544e6233.png)'
- en: 'To join on multiple keys, the passed [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") must have a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"):'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '要在多个键上连接，传递的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")必须具有[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"):'
- en: '[PRE36]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '![../_images/merging_join_multikeys.png](../Images/3159cfc1f3a8e84e6f77a34c3ac0db12.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_join_multikeys.png](../Images/3159cfc1f3a8e84e6f77a34c3ac0db12.png)'
- en: The default for [`DataFrame.join`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") is to perform a left join which uses only the keys found
    in the calling [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"). Other join types can be specified with `how`.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.join`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join")的默认行为是执行左连接，仅使用调用[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")中找到的键。其他连接类型可以通过`how`指定。'
- en: '[PRE37]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '![../_images/merging_join_multikeys_inner.png](../Images/058604df4940b8437cb695ea2b1bfe5e.png)
    ### Joining a single Index to a MultiIndex'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '![../_images/merging_join_multikeys_inner.png](../Images/058604df4940b8437cb695ea2b1bfe5e.png)
    ### 将单个索引连接到多重索引'
- en: You can join a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") on a level. The `name` of the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with match the level name of the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex").
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将一个具有[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")与具有[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")在一个级别上连接。[`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index")的`name`将与[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")的级别名称匹配。
- en: '[PRE38]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '![../_images/merging_join_multiindex_inner.png](../Images/3e6cd56d549619ebb7011eb0f63eea27.png)
    ### Joining with two [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_join_multiindex_inner.png](../Images/3e6cd56d549619ebb7011eb0f63eea27.png)
    ### 与两个[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")连接'
- en: The [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") of the input argument must be completely used in the join
    and is a subset of the indices in the left argument.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 输入参数的[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")必须完全用于连接，并且是左参数中索引的子集。
- en: '[PRE39]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '![../_images/merging_merge_two_multiindex.png](../Images/3086dd016d56c1223fc9b9f2d53e2a04.png)
    ### Merging on a combination of columns and index levels'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '![../_images/merging_merge_two_multiindex.png](../Images/3086dd016d56c1223fc9b9f2d53e2a04.png)
    ### 在列和索引级别的组合上合并'
- en: Strings passed as the `on`, `left_on`, and `right_on` parameters may refer to
    either column names or index level names. This enables merging [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") instances on a combination of index levels and columns without
    resetting indexes.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 作为`on`、`left_on`和`right_on`参数传递的字符串可以引用列名或索引级别名。这使得在不重置索引的情况下，可以在索引级别和列的组合上合并[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")实例。
- en: '[PRE41]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '![../_images/merge_on_index_and_column.png](../Images/c378e41324f59aa100c6d738821c0e90.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merge_on_index_and_column.png](../Images/c378e41324f59aa100c6d738821c0e90.png)'
- en: Note
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    are joined on a string that matches an index level in both arguments, the index
    level is preserved as an index level in the resulting [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame").
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 当[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")在匹配两个参数中的索引级别的字符串上进行连接时，索引级别将保留为结果[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")中的索引级别。
- en: Note
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'When [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") are joined using only some of the levels of a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"), the extra levels will be dropped from the resulting join.
    To preserve those levels, use [`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") on those level names to move those levels to columns
    prior to the join.  ### Joining multiple [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '当只使用[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")的一些级别连接[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")时，多余的级别将从结果连接中删除。要保留这些级别，请在连接之前对这些级别名称使用[`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index")将这些级别移动到列中。  ### 连接多个[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")'
- en: A list or tuple of `:class:`DataFrame`` can also be passed to [`join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") to join them together on their indexes.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以将`DataFrame`的列表或元组传递给[`join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join")，以在它们的索引上将它们连接在一起。
- en: '[PRE42]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '![../_images/merging_join_multi_df.png](../Images/635c66ddbfd5b984d8d9adbfaca4c009.png)
    ### [`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first")'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_join_multi_df.png](../Images/635c66ddbfd5b984d8d9adbfaca4c009.png)
    ### [`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first")'
- en: '[`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first") update missing values from one [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with the non-missing values in another [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") in the corresponding location.'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first") 用另一个[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")中的非缺失值更新一个[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")中的缺失值，位置对应。'
- en: '[PRE43]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '![../_images/merging_combine_first.png](../Images/80f33f5d7d088a4b5535f04d8d06b6f7.png)
    ## [`merge_ordered()`](../reference/api/pandas.merge_ordered.html#pandas.merge_ordered
    "pandas.merge_ordered")'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_combine_first.png](../Images/80f33f5d7d088a4b5535f04d8d06b6f7.png)
    ## [`merge_ordered()`](../reference/api/pandas.merge_ordered.html#pandas.merge_ordered
    "pandas.merge_ordered")'
- en: '[`merge_ordered()`](../reference/api/pandas.merge_ordered.html#pandas.merge_ordered
    "pandas.merge_ordered") combines order data such as numeric or time series data
    with optional filling of missing data with `fill_method`.'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '[`merge_ordered()`](../reference/api/pandas.merge_ordered.html#pandas.merge_ordered
    "pandas.merge_ordered") 将有序数据（如数值或时间序列数据）与可选的使用`fill_method`填充缺失数据合并。'
- en: '[PRE44]  ## [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof")'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE44]  ## [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof")'
- en: '[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") is similar to an ordered left-join except that mactches are
    on the nearest key rather than equal keys. For each row in the `left` [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), the last row in the `right` [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") are selected where the `on` key is less than the left’s key.
    Both [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    must be sorted by the key.'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") 类似于有序的左连接，不同之处在于匹配的是最近的键而不是相等的键。对于`left` [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")中的每一行，选择`right` [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")中最后一行，其中`on`键小于左侧的键。两个[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")必须按键排序。'
- en: Optionally an [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") can perform a group-wise merge by matching the `by` key in
    addition to the nearest match on the `on` key.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 可选地，[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof")可以通过在`by`键上匹配来执行分组合并，同时在`on`键上找到最近的匹配。
- en: '[PRE45]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") within `2ms` between the quote time and the trade time.'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") 在报价时间和交易时间之间的`2ms`内合并。'
- en: '[PRE46]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") within `10ms` between the quote time and the trade time and
    exclude exact matches on time. Note that though we exclude the exact matches (of
    the quotes), prior quotes **do** propagate to that point in time.'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") 在报价时间和交易时间之间的`10ms`内合并，并排除时间上的精确匹配。请注意，尽管我们排除了精确匹配（报价），但之前的报价**确实**传播到那个时间点。'
- en: '[PRE47]  ## [`compare()`](../reference/api/pandas.Series.compare.html#pandas.Series.compare
    "pandas.Series.compare")'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE47]  ## [`compare()`](../reference/api/pandas.Series.compare.html#pandas.Series.compare
    "pandas.Series.compare")'
- en: The [`Series.compare()`](../reference/api/pandas.Series.compare.html#pandas.Series.compare
    "pandas.Series.compare") and [`DataFrame.compare()`](../reference/api/pandas.DataFrame.compare.html#pandas.DataFrame.compare
    "pandas.DataFrame.compare") methods allow you to compare two [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), respectively, and summarize their differences.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Series.compare()`](../reference/api/pandas.Series.compare.html#pandas.Series.compare
    "pandas.Series.compare") 和 [`DataFrame.compare()`](../reference/api/pandas.DataFrame.compare.html#pandas.DataFrame.compare
    "pandas.DataFrame.compare") 方法允许您比较两个分别是[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")或[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")的对象，并总结它们的差异。'
- en: '[PRE48]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: By default, if two corresponding values are equal, they will be shown as `NaN`.
    Furthermore, if all values in an entire row / column, the row / column will be
    omitted from the result. The remaining differences will be aligned on columns.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，如果两个对应的值相等，它们将显示为`NaN`。此外，如果整行/列中的所有值都相等，则该行/列将从结果中省略。剩余的差异将对齐在列上。
- en: Stack the differences on rows.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在行上堆叠差异。
- en: '[PRE49]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Keep all original rows and columns with `keep_shape=True`
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 保持所有原始行和列，使用`keep_shape=True`。
- en: '[PRE50]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Keep all the original values even if they are equal.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 保留所有原始值，即使它们相等。
- en: '[PRE51]  ## [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat")'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE51]  ## [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat")'
- en: The [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    function concatenates an arbitrary amount of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects along an axis while performing optional set logic
    (union or intersection) of the indexes on the other axes. Like `numpy.concatenate`,
    [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    takes a list or dict of homogeneously-typed objects and concatenates them.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")函数沿着一个轴连接任意数量的[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")或[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")对象，同时在其他轴上执行可选的集合逻辑（并集或交集）索引。像`numpy.concatenate`一样，[`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat")接受同类型对象的列表或字典，并将它们连接起来。'
- en: '[PRE52]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '![../_images/merging_concat_basic.png](../Images/197770ddfae446f6c9a3b471d42f8669.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_basic.png](../Images/197770ddfae446f6c9a3b471d42f8669.png)'
- en: Note
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    makes a full copy of the data, and iteratively reusing [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") can create unnecessary copies. Collect all [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") objects in a list before using [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat").'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")会对数据进行完全复制，并且反复使用[`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat")可能会创建不必要的副本。在使用[`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat")之前，先将所有[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")或[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")对象收集到一个列表中。'
- en: '[PRE53]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Note
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When concatenating [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with named axes, pandas will attempt to preserve these index/column
    names whenever possible. In the case where all inputs share a common name, this
    name will be assigned to the result. When the input names do not all agree, the
    result will be unnamed. The same is true for [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"), but the logic is applied separately on a level-by-level
    basis.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 当连接具有命名轴的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")时，pandas会尽可能保留这些索引/列名称。在所有输入共享一个公共名称的情况下，该名称将分配给结果。当输入名称不完全一致时，结果将不具有名称。对于[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")也是如此，但逻辑是逐级别分别应用的。
- en: Joining logic of the resulting axis
  id: totrans-184
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结果轴的连接逻辑
- en: The `join` keyword specifies how to handle axis values that don’t exist in the
    first [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame").
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '`join`关键字指定如何处理第一个[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")中不存在的轴值。'
- en: '`join=''outer''` takes the union of all axis values'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '`join=''outer''`取所有轴值的并集'
- en: '[PRE54]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '![../_images/merging_concat_axis1.png](../Images/e0a246f6ecd997eeab68391ea5b9af68.png)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_axis1.png](../Images/e0a246f6ecd997eeab68391ea5b9af68.png)'
- en: '`join=''inner''` takes the intersection of the axis values'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '`join=''inner''`取轴值的交集'
- en: '[PRE55]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '![../_images/merging_concat_axis1_inner.png](../Images/4ee4f3cb678d35fab2c005e31ec737be.png)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_axis1_inner.png](../Images/4ee4f3cb678d35fab2c005e31ec737be.png)'
- en: To perform an effective “left” join using the *exact index* from the original
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame"),
    result can be reindexed.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用原始[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")的*精确索引*执行有效的“左连接”，结果可以重新索引。
- en: '[PRE56]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '![../_images/merging_concat_axis1_join_axes.png](../Images/cb9604d242237ed6938c5e927b2fa4ae.png)
    ### Ignoring indexes on the concatenation axis'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '![../_images/merging_concat_axis1_join_axes.png](../Images/cb9604d242237ed6938c5e927b2fa4ae.png)
    ### 在连接轴上忽略索引'
- en: For [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    objects which don’t have a meaningful index, the `ignore_index` ignores overlapping
    indexes.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 对于没有有意义索引的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")对象，`ignore_index`会忽略重叠的索引。
- en: '[PRE57]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '![../_images/merging_concat_ignore_index.png](../Images/2686a54b2c5df0d2d2d8aa37c9022d30.png)
    ### Concatenating [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") together'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '![../_images/merging_concat_ignore_index.png](../Images/2686a54b2c5df0d2d2d8aa37c9022d30.png)
    ### 将[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")和[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")连接在一起'
- en: You can concatenate a mix of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects. The [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") will be transformed to [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with the column name as the name of the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series").
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以连接一组[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")和[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")对象。[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")将被转换为[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")，列名为[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")的名称。
- en: '[PRE58]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '![../_images/merging_concat_mixed_ndim.png](../Images/abb00ea5c6e5767b44562e9a6d9903bb.png)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_mixed_ndim.png](../Images/abb00ea5c6e5767b44562e9a6d9903bb.png)'
- en: Unnamed [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    will be numbered consecutively.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 未命名的[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")将按顺序编号。
- en: '[PRE59]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '![../_images/merging_concat_unnamed_series.png](../Images/63664821a48db8b69bbc1964bb3c5b2f.png)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_unnamed_series.png](../Images/63664821a48db8b69bbc1964bb3c5b2f.png)'
- en: '`ignore_index=True` will drop all name references.'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '`ignore_index=True`将删除所有名称引用。'
- en: '[PRE60]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: '![../_images/merging_concat_series_ignore_index.png](../Images/79ee3ad5dcb5904fec9497b9e15eb143.png)'
  id: totrans-206
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_series_ignore_index.png](../Images/79ee3ad5dcb5904fec9497b9e15eb143.png)'
- en: Resulting `keys`
  id: totrans-207
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结果的`keys`
- en: The `keys` argument adds another axis level to the resulting index or column
    (creating a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")) associate specific keys with each original [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame").
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '`keys`参数会为结果的索引或列添加另一个轴级别（创建一个[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")），将特定键与每个原始[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")关联起来。'
- en: '[PRE61]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '![../_images/merging_concat_keys.png](../Images/d6a46e6554d82ae5b512a02bfcf175ae.png)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_keys.png](../Images/d6a46e6554d82ae5b512a02bfcf175ae.png)'
- en: The `keys` argument cane override the column names when creating a new [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") based on existing [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series").
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '`keys`参数可以在基于现有[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")创建新[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")时覆盖列名。'
- en: '[PRE62]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'You can also pass a dict to [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") in which case the dict keys will be used for the `keys` argument
    unless other `keys` argument is specified:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以向[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")传递一个字典，此时字典键将用于`keys`参数，除非指定了其他`keys`参数：
- en: '[PRE63]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: '![../_images/merging_concat_dict.png](../Images/15dbb4b38b5d1d27ea2558f176a0cbcc.png)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_dict.png](../Images/15dbb4b38b5d1d27ea2558f176a0cbcc.png)'
- en: '[PRE64]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '![../_images/merging_concat_dict_keys.png](../Images/0cfb0a5b40f00a0b835166985e8b07d2.png)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_dict_keys.png](../Images/0cfb0a5b40f00a0b835166985e8b07d2.png)'
- en: 'The [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") created has levels that are constructed from the passed keys
    and the index of the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") pieces:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 创建的[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")具有从传递的键和[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")片段的索引构建的级别：
- en: '[PRE65]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '`levels` argument allows specifying resulting levels associated with the `keys`'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '`levels`参数允许指定与`keys`关联的结果级别'
- en: '[PRE66]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: '![../_images/merging_concat_dict_keys_names.png](../Images/1c96e034f06f6b7a0b5712c611dc9eaa.png)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_dict_keys_names.png](../Images/1c96e034f06f6b7a0b5712c611dc9eaa.png)'
- en: '[PRE67]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: '### Appending rows to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '### 将行附加到[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")'
- en: If you have a [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    that you want to append as a single row to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), you can convert the row into a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and use [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat")
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有一个想要附加为单行到[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")的[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")，您可以将行转换为[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")并使用[`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat")
- en: '[PRE68]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: '![../_images/merging_append_series_as_row.png](../Images/77fde4bb7a02c92ae6eb25ada45b7d30.png)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_append_series_as_row.png](../Images/77fde4bb7a02c92ae6eb25ada45b7d30.png)'
- en: Joining logic of the resulting axis
  id: totrans-228
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结果轴的连接逻辑
- en: The `join` keyword specifies how to handle axis values that don’t exist in the
    first [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame").
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '`join` 关键字指定如何处理第一个[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")中不存在的轴值。'
- en: '`join=''outer''` takes the union of all axis values'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '`join=''outer''`取所有轴值的并集'
- en: '[PRE69]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '![../_images/merging_concat_axis1.png](../Images/e0a246f6ecd997eeab68391ea5b9af68.png)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_axis1.png](../Images/e0a246f6ecd997eeab68391ea5b9af68.png)'
- en: '`join=''inner''` takes the intersection of the axis values'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '`join=''inner''`取轴值的交集'
- en: '[PRE70]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '![../_images/merging_concat_axis1_inner.png](../Images/4ee4f3cb678d35fab2c005e31ec737be.png)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_axis1_inner.png](../Images/4ee4f3cb678d35fab2c005e31ec737be.png)'
- en: To perform an effective “left” join using the *exact index* from the original
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame"),
    result can be reindexed.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用原始[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")的*确切索引*执行有效的“左”连接，结果可以重新索引。
- en: '[PRE71]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: '![../_images/merging_concat_axis1_join_axes.png](../Images/cb9604d242237ed6938c5e927b2fa4ae.png)
    ### Ignoring indexes on the concatenation axis'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '![../_images/merging_concat_axis1_join_axes.png](../Images/cb9604d242237ed6938c5e927b2fa4ae.png)
    ### 在连接轴上忽略索引'
- en: For [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    objects which don’t have a meaningful index, the `ignore_index` ignores overlapping
    indexes.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 对于没有有意义索引的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")对象，`ignore_index`会忽略重叠的索引。
- en: '[PRE72]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: '![../_images/merging_concat_ignore_index.png](../Images/2686a54b2c5df0d2d2d8aa37c9022d30.png)
    ### Concatenating [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") together'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '![../_images/merging_concat_ignore_index.png](../Images/2686a54b2c5df0d2d2d8aa37c9022d30.png)
    ### 将[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")和[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")连接在一起'
- en: You can concatenate a mix of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects. The [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") will be transformed to [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with the column name as the name of the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series").
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以连接一组[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")和[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")对象。[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")将转换为具有列名的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")，列名为[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")的名称。
- en: '[PRE73]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: '![../_images/merging_concat_mixed_ndim.png](../Images/abb00ea5c6e5767b44562e9a6d9903bb.png)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_mixed_ndim.png](../Images/abb00ea5c6e5767b44562e9a6d9903bb.png)'
- en: Unnamed [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    will be numbered consecutively.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 未命名的[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")将按顺序编号。
- en: '[PRE74]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: '![../_images/merging_concat_unnamed_series.png](../Images/63664821a48db8b69bbc1964bb3c5b2f.png)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_unnamed_series.png](../Images/63664821a48db8b69bbc1964bb3c5b2f.png)'
- en: '`ignore_index=True` will drop all name references.'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '`ignore_index=True`将删除所有名称引用。'
- en: '[PRE75]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '![../_images/merging_concat_series_ignore_index.png](../Images/79ee3ad5dcb5904fec9497b9e15eb143.png)'
  id: totrans-250
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_series_ignore_index.png](../Images/79ee3ad5dcb5904fec9497b9e15eb143.png)'
- en: Resulting `keys`
  id: totrans-251
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结果`keys`
- en: The `keys` argument adds another axis level to the resulting index or column
    (creating a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")) associate specific keys with each original [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame").
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '`keys`参数将另一个轴级别添加到结果索引或列（创建一个[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")），将特定键与每个原始[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")关联起来。'
- en: '[PRE76]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: '![../_images/merging_concat_keys.png](../Images/d6a46e6554d82ae5b512a02bfcf175ae.png)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_keys.png](../Images/d6a46e6554d82ae5b512a02bfcf175ae.png)'
- en: The `keys` argument cane override the column names when creating a new [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") based on existing [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series").
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '`keys`参数可以在基于现有[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")创建新[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")时覆盖列名。'
- en: '[PRE77]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'You can also pass a dict to [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") in which case the dict keys will be used for the `keys` argument
    unless other `keys` argument is specified:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以将字典传递给[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")，在这种情况下，除非指定了其他`keys`参数，否则字典键将用于`keys`参数：
- en: '[PRE78]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '![../_images/merging_concat_dict.png](../Images/15dbb4b38b5d1d27ea2558f176a0cbcc.png)'
  id: totrans-259
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_dict.png](../Images/15dbb4b38b5d1d27ea2558f176a0cbcc.png)'
- en: '[PRE79]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '![../_images/merging_concat_dict_keys.png](../Images/0cfb0a5b40f00a0b835166985e8b07d2.png)'
  id: totrans-261
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_dict_keys.png](../Images/0cfb0a5b40f00a0b835166985e8b07d2.png)'
- en: 'The [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") created has levels that are constructed from the passed keys
    and the index of the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") pieces:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 创建的[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")具有从传递的键和[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")片段的索引构造的级别：
- en: '[PRE80]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: '`levels` argument allows specifying resulting levels associated with the `keys`'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '`levels`参数允许指定与`keys`关联的结果级别'
- en: '[PRE81]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '![../_images/merging_concat_dict_keys_names.png](../Images/1c96e034f06f6b7a0b5712c611dc9eaa.png)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_concat_dict_keys_names.png](../Images/1c96e034f06f6b7a0b5712c611dc9eaa.png)'
- en: '[PRE82]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: '### Appending rows to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '### 将行附加到[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")'
- en: If you have a [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    that you want to append as a single row to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), you can convert the row into a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and use [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat")
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一个要附加为单行到[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")的[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")，你可以将该行转换为[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")并使用[`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat")
- en: '[PRE83]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: '![../_images/merging_append_series_as_row.png](../Images/77fde4bb7a02c92ae6eb25ada45b7d30.png)
    ## [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")'
  id: totrans-271
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_append_series_as_row.png](../Images/77fde4bb7a02c92ae6eb25ada45b7d30.png)
    ## [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")'
- en: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    performs join operations similar to relational databases like SQL. Users who are
    familiar with SQL but new to pandas can reference a [comparison with SQL](../getting_started/comparison/comparison_with_sql.html#compare-with-sql-join).'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")执行类似于关系数据库（如SQL）的连接操作。熟悉SQL但是对pandas新手的用户可以参考与SQL的[比较](../getting_started/comparison/comparison_with_sql.html#compare-with-sql-join)。'
- en: Merge types
  id: totrans-273
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 合并类型
- en: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    implements common SQL style joining operations.'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")实现常见的SQL风格连接操作。'
- en: '**one-to-one**: joining two [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects on their indexes which must contain unique values.'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一对一**：在它们的索引上连接两个[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")对象，这些索引必须包含唯一值。'
- en: '**many-to-one**: joining a unique index to one or more columns in a different
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame").'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多对一**：将唯一索引与不同[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")中的一个或多个列连接。'
- en: '**many-to-many** : joining columns on columns.'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多对多**：在列上进行列连接。'
- en: Note
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When joining columns on columns, potentially a many-to-many join, any indexes
    on the passed [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects **will be discarded**.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 当在列上进行列连接时，可能是多对多的连接，传递的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")对象上的任何索引**将被丢弃**。
- en: For a **many-to-many** join, if a key combination appears more than once in
    both tables, the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") will have the **Cartesian product** of the associated data.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 对于**多对多**连接，如果一个键组合在两个表中出现多次，则[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")将具有相关数据的**笛卡尔积**。
- en: '[PRE84]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: '![../_images/merging_merge_on_key.png](../Images/d6b1819ca63e08197b1b784609ad8a00.png)'
  id: totrans-282
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_on_key.png](../Images/d6b1819ca63e08197b1b784609ad8a00.png)'
- en: 'The `how` argument to [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") specifies which keys are included in the resulting table. If a
    key combination **does not appear** in either the left or right tables, the values
    in the joined table will be `NA`. Here is a summary of the `how` options and their
    SQL equivalent names:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")的`how`参数指定了包含在结果表中的键。如果一个键组合**不存在**于左表或右表中，那么连接表中的值将为`NA`。以下是`how`选项及其SQL等效名称的摘要：'
- en: '| Merge method | SQL Join Name | Description |'
  id: totrans-284
  prefs: []
  type: TYPE_TB
  zh: '| 合并方法 | SQL连接名称 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-285
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `left` | `LEFT OUTER JOIN` | Use keys from left frame only |'
  id: totrans-286
  prefs: []
  type: TYPE_TB
  zh: '| `left` | `LEFT OUTER JOIN` | 仅使用左侧框架的键 |'
- en: '| `right` | `RIGHT OUTER JOIN` | Use keys from right frame only |'
  id: totrans-287
  prefs: []
  type: TYPE_TB
  zh: '| `right` | `RIGHT OUTER JOIN` | 仅使用右侧框架的键 |'
- en: '| `outer` | `FULL OUTER JOIN` | Use union of keys from both frames |'
  id: totrans-288
  prefs: []
  type: TYPE_TB
  zh: '| `outer` | `FULL OUTER JOIN` | 使用两个框架的键的并集 |'
- en: '| `inner` | `INNER JOIN` | Use intersection of keys from both frames |'
  id: totrans-289
  prefs: []
  type: TYPE_TB
  zh: '| `inner` | `INNER JOIN` | 使用两个框架键的交集 |'
- en: '| `cross` | `CROSS JOIN` | Create the cartesian product of rows of both frames
    |'
  id: totrans-290
  prefs: []
  type: TYPE_TB
  zh: '| `cross` | `CROSS JOIN` | 创建两个框架行的笛卡尔积 |'
- en: '[PRE85]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: '![../_images/merging_merge_on_key_left.png](../Images/253bd4aaabe02d0bcdd272f9731ce2ac.png)'
  id: totrans-292
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_on_key_left.png](../Images/253bd4aaabe02d0bcdd272f9731ce2ac.png)'
- en: '[PRE86]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: '![../_images/merging_merge_on_key_right.png](../Images/a3483bb3808d5fb8e615597ae350a683.png)'
  id: totrans-294
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_on_key_right.png](../Images/a3483bb3808d5fb8e615597ae350a683.png)'
- en: '[PRE87]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '![../_images/merging_merge_on_key_outer.png](../Images/eeddf21647b87d1651568da32a0be109.png)'
  id: totrans-296
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_on_key_outer.png](../Images/eeddf21647b87d1651568da32a0be109.png)'
- en: '[PRE88]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: '![../_images/merging_merge_on_key_inner.png](../Images/5498faa79b3230a481f502ef680b88bd.png)'
  id: totrans-298
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_on_key_inner.png](../Images/5498faa79b3230a481f502ef680b88bd.png)'
- en: '[PRE89]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: '![../_images/merging_merge_cross.png](../Images/827cef2fb97ff68b18aa8afafcb58f6b.png)'
  id: totrans-300
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_cross.png](../Images/827cef2fb97ff68b18aa8afafcb58f6b.png)'
- en: You can [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") if the names of the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") correspond to the columns from the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"). Transform the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") using [`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index") before merging
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 如果[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")的名称与[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")的列对应，则可以使用[`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index")将[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")转换为[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")，然后再进行合并。
- en: '[PRE90]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: Performing an outer join with duplicate join keys in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 在[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")中具有重复连接键执行外连接
- en: '[PRE91]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '![../_images/merging_merge_on_key_dup.png](../Images/ace1e3045f1df8ac6a20d19356459687.png)'
  id: totrans-305
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_on_key_dup.png](../Images/ace1e3045f1df8ac6a20d19356459687.png)'
- en: Warning
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Merging on duplicate keys significantly increase the dimensions of the result
    and can cause a memory overflow.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 在重复键上合并会显著增加结果的维度，并可能导致内存溢出。
- en: '### Merge key uniqueness'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '### 合并键的唯一性'
- en: The `validate` argument checks whether the uniqueness of merge keys. Key uniqueness
    is checked before merge operations and can protect against memory overflows and
    unexpected key duplication.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '`validate` 参数检查合并键的唯一性。在合并操作之前检查键的唯一性，可以防止内存溢出和意外键重复。'
- en: '[PRE92]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: If the user is aware of the duplicates in the right [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") but wants to ensure there are no duplicates in the left [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), one can use the `validate='one_to_many'` argument instead,
    which will not raise an exception.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户知道右侧 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 中存在重复项，但希望确保左侧 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 中没有重复项，可以使用 `validate='one_to_many'` 参数，而不会引发异常。
- en: '[PRE93]  ### Merge result indicator'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE93]  ### 合并结果指示器'
- en: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    accepts the argument `indicator`. If `True`, a Categorical-type column called
    `_merge` will be added to the output object that takes on values:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    接受参数 `indicator`。如果为 `True`，则将添加一个名为 `_merge` 的分类列到输出对象中，其值为：'
- en: '| Observation Origin | `_merge` value |'
  id: totrans-314
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| 观察来源 | `_merge` 值 |'
- en: '| --- | --- |'
  id: totrans-315
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Merge key only in `''left''` frame | `left_only` |'
  id: totrans-316
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| 仅在 `''left''` 框架中的合并键 | `left_only` |'
- en: '| Merge key only in `''right''` frame | `right_only` |'
  id: totrans-317
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| 仅在 `''right''` 框架中的合并键 | `right_only` |'
- en: '| Merge key in both frames | `both` |'
  id: totrans-318
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| 两个框架中的合并键 | `both` |'
- en: '[PRE94]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: A string argument to `indicator` will use the value as the name for the indicator
    column.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '`indicator` 的字符串参数将用作指示器列的名称。'
- en: '[PRE95]'
  id: totrans-321
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: Overlapping value columns
  id: totrans-322
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重叠值列
- en: 'The merge `suffixes` argument takes a tuple of list of strings to append to
    overlapping column names in the input [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to disambiguate the result columns:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 合并 `suffixes` 参数接受一个字符串列表元组，以附加到输入 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 中重叠列名称以消除结果列的歧义：
- en: '[PRE96]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: '![../_images/merging_merge_overlapped.png](../Images/8c37a04a49eefe5656851f9861af467d.png)'
  id: totrans-325
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_overlapped.png](../Images/8c37a04a49eefe5656851f9861af467d.png)'
- en: '[PRE97]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: '![../_images/merging_merge_overlapped_suffix.png](../Images/861ebb2092353e7e4692c58cca1395fe.png)'
  id: totrans-327
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_overlapped_suffix.png](../Images/861ebb2092353e7e4692c58cca1395fe.png)'
- en: Merge types
  id: totrans-328
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 合并类型
- en: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    implements common SQL style joining operations.'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    实现常见的 SQL 风格连接操作。'
- en: '**one-to-one**: joining two [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects on their indexes which must contain unique values.'
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一对一**：在它们的索引上连接两个 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 对象，这些对象必须包含唯一值。'
- en: '**many-to-one**: joining a unique index to one or more columns in a different
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame").'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多对一**：将唯一索引与不同 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 中的一个或多个列连接。'
- en: '**many-to-many** : joining columns on columns.'
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多对多**：在列上连接列。'
- en: Note
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When joining columns on columns, potentially a many-to-many join, any indexes
    on the passed [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects **will be discarded**.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 在列上连接列时，可能是多对多连接，传递的 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 对象上的任何索引**将被丢弃**。
- en: For a **many-to-many** join, if a key combination appears more than once in
    both tables, the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") will have the **Cartesian product** of the associated data.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 对于**多对多**连接，如果在两个表中一个键组合出现多次，[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 将具有相关数据的**笛卡尔积**。
- en: '[PRE98]'
  id: totrans-336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: '![../_images/merging_merge_on_key.png](../Images/d6b1819ca63e08197b1b784609ad8a00.png)'
  id: totrans-337
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_on_key.png](../Images/d6b1819ca63e08197b1b784609ad8a00.png)'
- en: 'The `how` argument to [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") specifies which keys are included in the resulting table. If a
    key combination **does not appear** in either the left or right tables, the values
    in the joined table will be `NA`. Here is a summary of the `how` options and their
    SQL equivalent names:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")的`how`参数指定了哪些键包含在结果表中。如果一个键组合**在左表或右表中都不存在**，则连接表中的值将为`NA`。以下是`how`选项及其SQL等效名称的摘要：'
- en: '| Merge method | SQL Join Name | Description |'
  id: totrans-339
  prefs: []
  type: TYPE_TB
  zh: '| 合并方法 | SQL连接名称 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-340
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `left` | `LEFT OUTER JOIN` | Use keys from left frame only |'
  id: totrans-341
  prefs: []
  type: TYPE_TB
  zh: '| `left` | `LEFT OUTER JOIN` | 仅使用左侧框架的键 |'
- en: '| `right` | `RIGHT OUTER JOIN` | Use keys from right frame only |'
  id: totrans-342
  prefs: []
  type: TYPE_TB
  zh: '| `right` | `RIGHT OUTER JOIN` | 仅使用右侧框架的键 |'
- en: '| `outer` | `FULL OUTER JOIN` | Use union of keys from both frames |'
  id: totrans-343
  prefs: []
  type: TYPE_TB
  zh: '| `outer` | `FULL OUTER JOIN` | 使用两个框架的键的并集 |'
- en: '| `inner` | `INNER JOIN` | Use intersection of keys from both frames |'
  id: totrans-344
  prefs: []
  type: TYPE_TB
  zh: '| `inner` | `INNER JOIN` | 使用两个框架的键的交集 |'
- en: '| `cross` | `CROSS JOIN` | Create the cartesian product of rows of both frames
    |'
  id: totrans-345
  prefs: []
  type: TYPE_TB
  zh: '| `cross` | `CROSS JOIN` | 创建两个框架行的笛卡尔积 |'
- en: '[PRE99]'
  id: totrans-346
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: '![../_images/merging_merge_on_key_left.png](../Images/253bd4aaabe02d0bcdd272f9731ce2ac.png)'
  id: totrans-347
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_on_key_left.png](../Images/253bd4aaabe02d0bcdd272f9731ce2ac.png)'
- en: '[PRE100]'
  id: totrans-348
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: '![../_images/merging_merge_on_key_right.png](../Images/a3483bb3808d5fb8e615597ae350a683.png)'
  id: totrans-349
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_on_key_right.png](../Images/a3483bb3808d5fb8e615597ae350a683.png)'
- en: '[PRE101]'
  id: totrans-350
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: '![../_images/merging_merge_on_key_outer.png](../Images/eeddf21647b87d1651568da32a0be109.png)'
  id: totrans-351
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_on_key_outer.png](../Images/eeddf21647b87d1651568da32a0be109.png)'
- en: '[PRE102]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: '![../_images/merging_merge_on_key_inner.png](../Images/5498faa79b3230a481f502ef680b88bd.png)'
  id: totrans-353
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_on_key_inner.png](../Images/5498faa79b3230a481f502ef680b88bd.png)'
- en: '[PRE103]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: '![../_images/merging_merge_cross.png](../Images/827cef2fb97ff68b18aa8afafcb58f6b.png)'
  id: totrans-355
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_cross.png](../Images/827cef2fb97ff68b18aa8afafcb58f6b.png)'
- en: You can [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") if the names of the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") correspond to the columns from the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"). Transform the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") using [`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index") before merging
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 如果[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")的名称与[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")中的列对应，则可以使用[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")和[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")。在合并之前，使用[`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index")将[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")转换为[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")
- en: '[PRE104]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: Performing an outer join with duplicate join keys in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 在[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")中执行具有重复连接键的外部连接
- en: '[PRE105]'
  id: totrans-359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: '![../_images/merging_merge_on_key_dup.png](../Images/ace1e3045f1df8ac6a20d19356459687.png)'
  id: totrans-360
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_on_key_dup.png](../Images/ace1e3045f1df8ac6a20d19356459687.png)'
- en: Warning
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Merging on duplicate keys significantly increase the dimensions of the result
    and can cause a memory overflow.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 在重复键上合并会显著增加结果的维度，并可能导致内存溢出。
- en: '### Merge key uniqueness'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: '### 合并键唯一性'
- en: The `validate` argument checks whether the uniqueness of merge keys. Key uniqueness
    is checked before merge operations and can protect against memory overflows and
    unexpected key duplication.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '`validate`参数检查合并键的唯一性。在合并操作之前检查键的唯一性，可以防止内存溢出和意外键重复。'
- en: '[PRE106]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: If the user is aware of the duplicates in the right [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") but wants to ensure there are no duplicates in the left [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), one can use the `validate='one_to_many'` argument instead,
    which will not raise an exception.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户意识到右侧 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 中存在重复项，但希望确保左侧 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 中没有重复项，则可以使用 `validate='one_to_many'` 参数，而不会引发异常。
- en: '[PRE107]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: '### Merge result indicator'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: '### 合并结果指示器'
- en: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    accepts the argument `indicator`. If `True`, a Categorical-type column called
    `_merge` will be added to the output object that takes on values:'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '[`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    接受参数 `indicator`。如果为 `True`，则会向输出对象添加一个名为 `_merge` 的分类列，其取值为：'
- en: '| Observation Origin | `_merge` value |'
  id: totrans-370
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| 观察来源 | `_merge` 值 |'
- en: '| --- | --- |'
  id: totrans-371
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Merge key only in `''left''` frame | `left_only` |'
  id: totrans-372
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| 仅在 `''left''` 框架中的合并键 | `left_only` |'
- en: '| Merge key only in `''right''` frame | `right_only` |'
  id: totrans-373
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| 仅在 `''right''` 框架中的合并键 | `right_only` |'
- en: '| Merge key in both frames | `both` |'
  id: totrans-374
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| 两个框架中的合并键 | `both` |'
- en: '[PRE108]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: A string argument to `indicator` will use the value as the name for the indicator
    column.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: '`indicator` 的字符串参数将使用该值作为指示器列的名称。'
- en: '[PRE109]'
  id: totrans-377
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: Overlapping value columns
  id: totrans-378
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重叠值列
- en: 'The merge `suffixes` argument takes a tuple of list of strings to append to
    overlapping column names in the input [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to disambiguate the result columns:'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 合并 `suffixes` 参数接受一个字符串列表的元组，以附加到输入 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 中重叠列名称以消除结果列的歧义：
- en: '[PRE110]'
  id: totrans-380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: '![../_images/merging_merge_overlapped.png](../Images/8c37a04a49eefe5656851f9861af467d.png)'
  id: totrans-381
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_overlapped.png](../Images/8c37a04a49eefe5656851f9861af467d.png)'
- en: '[PRE111]'
  id: totrans-382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: '![../_images/merging_merge_overlapped_suffix.png](../Images/861ebb2092353e7e4692c58cca1395fe.png)'
  id: totrans-383
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_overlapped_suffix.png](../Images/861ebb2092353e7e4692c58cca1395fe.png)'
- en: '[`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join")'
  id: totrans-384
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join")'
- en: '[`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") combines the columns of multiple, potentially differently-indexed
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    into a single result [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame").'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") 将多个、可能具有不同索引的 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 的列合并为单个结果 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")。'
- en: '[PRE112]'
  id: totrans-386
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: '![../_images/merging_join.png](../Images/958e38166937d7b3995bdf9922d4c2cb.png)'
  id: totrans-387
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_join.png](../Images/958e38166937d7b3995bdf9922d4c2cb.png)'
- en: '[PRE113]'
  id: totrans-388
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: '![../_images/merging_join_outer.png](../Images/b9190cb19f0e22525642dc93dba6a5b8.png)'
  id: totrans-389
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_join_outer.png](../Images/b9190cb19f0e22525642dc93dba6a5b8.png)'
- en: '[PRE114]'
  id: totrans-390
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: '![../_images/merging_join_inner.png](../Images/36c80fb763b9198ec32e85eec57c495e.png)'
  id: totrans-391
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_join_inner.png](../Images/36c80fb763b9198ec32e85eec57c495e.png)'
- en: '[`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") takes an optional `on` argument which may be a column
    or multiple column names that the passed [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") is to be aligned.'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") 接受一个可选的 `on` 参数，该参数可以是要对齐的列或多个列名，传递的 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 将对齐。'
- en: '[PRE115]'
  id: totrans-393
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: '![../_images/merging_join_key_columns.png](../Images/f4a5bcb443bc503a385b8f36db80a2ea.png)'
  id: totrans-394
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_join_key_columns.png](../Images/f4a5bcb443bc503a385b8f36db80a2ea.png)'
- en: '[PRE116]'
  id: totrans-395
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: '![../_images/merging_merge_key_columns.png](../Images/835ae7c7cab842287fc2e7b5544e6233.png)'
  id: totrans-396
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_merge_key_columns.png](../Images/835ae7c7cab842287fc2e7b5544e6233.png)'
- en: 'To join on multiple keys, the passed [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") must have a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"):'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 要根据多个键进行连接，传递的 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 必须具有 [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")：
- en: '[PRE117]'
  id: totrans-398
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: '![../_images/merging_join_multikeys.png](../Images/3159cfc1f3a8e84e6f77a34c3ac0db12.png)'
  id: totrans-399
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_join_multikeys.png](../Images/3159cfc1f3a8e84e6f77a34c3ac0db12.png)'
- en: The default for [`DataFrame.join`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") is to perform a left join which uses only the keys found
    in the calling [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"). Other join types can be specified with `how`.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.join`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join")的默认行为是执行左连接，仅使用调用[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")中找到的键。可以使用`how`指定其他连接类型。'
- en: '[PRE118]'
  id: totrans-401
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: '![../_images/merging_join_multikeys_inner.png](../Images/058604df4940b8437cb695ea2b1bfe5e.png)
    ### Joining a single Index to a MultiIndex'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: '![../_images/merging_join_multikeys_inner.png](../Images/058604df4940b8437cb695ea2b1bfe5e.png)
    ### 将单个索引连接到多重索引'
- en: You can join a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") on a level. The `name` of the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with match the level name of the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex").
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将具有[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")的[`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index")与具有级别的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")连接。[`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index")的`name`将与[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")的级别名称匹配。
- en: '[PRE119]'
  id: totrans-404
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: '![../_images/merging_join_multiindex_inner.png](../Images/3e6cd56d549619ebb7011eb0f63eea27.png)
    ### Joining with two [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")'
  id: totrans-405
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merging_join_multiindex_inner.png](../Images/3e6cd56d549619ebb7011eb0f63eea27.png)
    ### 与两个[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")连接'
- en: The [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") of the input argument must be completely used in the join
    and is a subset of the indices in the left argument.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 输入参数的[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")必须完全在连接中使用，并且是左参数中索引的子集。
- en: '[PRE120]'
  id: totrans-407
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: '[PRE121]'
  id: totrans-408
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: '![../_images/merging_merge_two_multiindex.png](../Images/3086dd016d56c1223fc9b9f2d53e2a04.png)
    ### Merging on a combination of columns and index levels'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: '![../_images/merging_merge_two_multiindex.png](../Images/3086dd016d56c1223fc9b9f2d53e2a04.png)
    ### 在列和索引级别的组合上合并'
- en: Strings passed as the `on`, `left_on`, and `right_on` parameters may refer to
    either column names or index level names. This enables merging [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") instances on a combination of index levels and columns without
    resetting indexes.
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 作为`on`、`left_on`和`right_on`参数传递的字符串可以引用列名或索引级别名称。这使得在不重置索引的情况下，可以在索引级别和列的组合上合并[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")实例。
- en: '[PRE122]'
  id: totrans-411
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: '![../_images/merge_on_index_and_column.png](../Images/c378e41324f59aa100c6d738821c0e90.png)'
  id: totrans-412
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/merge_on_index_and_column.png](../Images/c378e41324f59aa100c6d738821c0e90.png)'
- en: Note
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    are joined on a string that matches an index level in both arguments, the index
    level is preserved as an index level in the resulting [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame").
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 当[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")在两个参数中匹配索引级别的字符串上进行连接时，索引级别将保留为结果[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")中的索引级别。
- en: Note
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'When [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") are joined using only some of the levels of a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"), the extra levels will be dropped from the resulting join.
    To preserve those levels, use [`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") on those level names to move those levels to columns
    prior to the join.  ### Joining multiple [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")'
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
- en: A list or tuple of `:class:`DataFrame`` can also be passed to [`join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") to join them together on their indexes.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE123]'
  id: totrans-418
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: '![../_images/merging_join_multi_df.png](../Images/635c66ddbfd5b984d8d9adbfaca4c009.png)
    ### [`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first")'
  id: totrans-419
  prefs: []
  type: TYPE_IMG
- en: '[`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first") update missing values from one [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with the non-missing values in another [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") in the corresponding location.'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE124]'
  id: totrans-421
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: '![../_images/merging_combine_first.png](../Images/80f33f5d7d088a4b5535f04d8d06b6f7.png)
    ### Joining a single Index to a MultiIndex'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
- en: You can join a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") on a level. The `name` of the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with match the level name of the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex").
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE125]'
  id: totrans-424
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: '![../_images/merging_join_multiindex_inner.png](../Images/3e6cd56d549619ebb7011eb0f63eea27.png)
    ### Joining with two [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")'
  id: totrans-425
  prefs: []
  type: TYPE_IMG
- en: The [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") of the input argument must be completely used in the join
    and is a subset of the indices in the left argument.
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE126]'
  id: totrans-427
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: '[PRE127]'
  id: totrans-428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: '![../_images/merging_merge_two_multiindex.png](../Images/3086dd016d56c1223fc9b9f2d53e2a04.png)
    ### Merging on a combination of columns and index levels'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
- en: Strings passed as the `on`, `left_on`, and `right_on` parameters may refer to
    either column names or index level names. This enables merging [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") instances on a combination of index levels and columns without
    resetting indexes.
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE128]'
  id: totrans-431
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: '![../_images/merge_on_index_and_column.png](../Images/c378e41324f59aa100c6d738821c0e90.png)'
  id: totrans-432
  prefs: []
  type: TYPE_IMG
- en: Note
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
- en: When [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    are joined on a string that matches an index level in both arguments, the index
    level is preserved as an index level in the resulting [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame").
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
- en: When [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    are joined using only some of the levels of a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"), the extra levels will be dropped from the resulting join.
    To preserve those levels, use [`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") on those level names to move those levels to columns
    prior to the join.
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
- en: '### Joining multiple [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
- en: A list or tuple of `:class:`DataFrame`` can also be passed to [`join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") to join them together on their indexes.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE129]'
  id: totrans-439
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: '![../_images/merging_join_multi_df.png](../Images/635c66ddbfd5b984d8d9adbfaca4c009.png)
    ### [`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first")'
  id: totrans-440
  prefs: []
  type: TYPE_IMG
- en: '[`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first") update missing values from one [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with the non-missing values in another [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") in the corresponding location.'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE130]'
  id: totrans-442
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: '![../_images/merging_combine_first.png](../Images/80f33f5d7d088a4b5535f04d8d06b6f7.png)
    ## [`merge_ordered()`](../reference/api/pandas.merge_ordered.html#pandas.merge_ordered
    "pandas.merge_ordered")'
  id: totrans-443
  prefs: []
  type: TYPE_IMG
- en: '[`merge_ordered()`](../reference/api/pandas.merge_ordered.html#pandas.merge_ordered
    "pandas.merge_ordered") combines order data such as numeric or time series data
    with optional filling of missing data with `fill_method`.'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE131]'
  id: totrans-445
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: '## [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof")'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
- en: '[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") is similar to an ordered left-join except that mactches are
    on the nearest key rather than equal keys. For each row in the `left` [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), the last row in the `right` [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") are selected where the `on` key is less than the left’s key.
    Both [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    must be sorted by the key.'
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
- en: Optionally an [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") can perform a group-wise merge by matching the `by` key in
    addition to the nearest match on the `on` key.
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE132]'
  id: totrans-449
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: '[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") within `2ms` between the quote time and the trade time.'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE133]'
  id: totrans-451
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: '[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") within `10ms` between the quote time and the trade time and
    exclude exact matches on time. Note that though we exclude the exact matches (of
    the quotes), prior quotes **do** propagate to that point in time.'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE134]'
  id: totrans-453
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: '## [`compare()`](../reference/api/pandas.Series.compare.html#pandas.Series.compare
    "pandas.Series.compare")'
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
- en: The [`Series.compare()`](../reference/api/pandas.Series.compare.html#pandas.Series.compare
    "pandas.Series.compare") and [`DataFrame.compare()`](../reference/api/pandas.DataFrame.compare.html#pandas.DataFrame.compare
    "pandas.DataFrame.compare") methods allow you to compare two [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), respectively, and summarize their differences.
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE135]'
  id: totrans-456
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: By default, if two corresponding values are equal, they will be shown as `NaN`.
    Furthermore, if all values in an entire row / column, the row / column will be
    omitted from the result. The remaining differences will be aligned on columns.
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
- en: Stack the differences on rows.
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE136]'
  id: totrans-459
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: Keep all original rows and columns with `keep_shape=True`
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE137]'
  id: totrans-461
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: Keep all the original values even if they are equal.
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE138]'
  id: totrans-463
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
