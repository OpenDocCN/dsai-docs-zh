- en: Contributor quickstart guide
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/dev/dev_quickstart.html](https://docs.scipy.org/doc/scipy-1.12.0/dev/dev_quickstart.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'After [getting the source code from GitHub](gitwash/development_setup.html#git-start),
    there are three steps to start contributing:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Set up a development environment**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using `mamba`, or some flavor of the many virtual environment management tools,
    you can make sure the development version of SciPy does not interfere with any
    other local installations of SciPy on your machine.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Build SciPy**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: SciPy uses compiled code for speed, which means you might need extra dependencies
    to complete this step depending on your system - see [Building from source](../building/index.html#building-from-source).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Perform development tasks**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: These can include any changes you want to make to the source code, running tests,
    building the documentation, running benchmarks, etc.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Basic workflow
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: We **strongly** recommend using a user-activated environment setup, such as
    a conda or virtual environment.
  prefs: []
  type: TYPE_NORMAL
- en: Since SciPy contains parts written in C, C++, and Fortran that need to be compiled
    before use, make sure you have the necessary compilers and Python development
    headers installed. If you are using `mamba`, these will be installed automatically.
    If you are using `pip`, check which [system-level dependencies](../building/index.html#system-level)
    you might need.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, fork a copy of the main SciPy repository in GitHub onto your own account
    and then create your local repository via:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, set up your development environment. **With** [system-level dependencies](../building/index.html#system-level)
    **installed**, execute the following commands at the terminal from the base directory
    of your [SciPy](https://github.com/scipy/scipy) clone:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Your command prompt now lists the name of your new environment, like so: `(scipy-dev)$`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, build SciPy for development and run the test suite with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Notice that this will take a few minutes (and some really slow tests are disabled
    by default), so you might want to test only the part of SciPy you will be working
    on. For details on how to do that, see the more complete setup walkthrough in
    [Development workflow](contributor/development_workflow.html#development-workflow),
    or `python dev.py test --help`.
  prefs: []
  type: TYPE_NORMAL
- en: Other workflows
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is only one possible way to set up your development environment out of
    many. For more detailed instructions, see the [SciPy contributor guide](contributor/contributor_toc.html#contributor-toc).
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: If you are having trouble building SciPy from source or setting up your local
    development environment, you can try to build SciPy with GitHub Codespaces. It
    allows you to create the correct development environment right in your browser,
    reducing the need to install local development environments and deal with incompatible
    dependencies.
  prefs: []
  type: TYPE_NORMAL
- en: If you have good internet connectivity and want a temporary set-up, it is often
    faster to work on SciPy in a Codespaces environment. For documentation on how
    to get started with Codespaces, see [the Codespaces docs](https://docs.github.com/en/codespaces).
    When creating a codespace for the `scipy/scipy` repository, the default 2-core
    machine type works; 4-core will build and work a bit faster (but of course at
    a cost of halving your number of free usage hours). Once your codespace has started,
    you can run `conda activate scipy-dev` and your development environment is completely
    set up - you can then follow the relevant parts of the SciPy documentation to
    build, test, develop, write docs, and contribute to SciPy.
  prefs: []
  type: TYPE_NORMAL
- en: Another alternative is to use [Gitpod](https://www.gitpod.io). We do not maintain
    this solution anymore but some information can be found in previous versions of
    our [docs](https://docs.scipy.org/doc/scipy-1.10.1/dev/contributor/quickstart_gitpod.html).
  prefs: []
  type: TYPE_NORMAL
