- en: numpy.format_parser
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.format_parser.html](https://numpy.org/doc/1.26/reference/generated/numpy.format_parser.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Class to convert formats, names, titles description to a dtype.
  prefs: []
  type: TYPE_NORMAL
- en: 'After constructing the format_parser object, the dtype attribute is the converted
    data-type: `dtype = format_parser(formats, names, titles).dtype`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**formats**str or list of str'
  prefs: []
  type: TYPE_NORMAL
- en: The format description, either specified as a string with comma-separated format
    descriptions in the form `'f8, i4, a5'`, or a list of format description strings
    in the form `['f8', 'i4', 'a5']`.
  prefs: []
  type: TYPE_NORMAL
- en: '**names**str or list/tuple of str'
  prefs: []
  type: TYPE_NORMAL
- en: The field names, either specified as a comma-separated string in the form `'col1,
    col2, col3'`, or as a list or tuple of strings in the form `['col1', 'col2', 'col3']`.
    An empty list can be used, in that case default field names (‘f0’, ‘f1’, …) are
    used.
  prefs: []
  type: TYPE_NORMAL
- en: '**titles**sequence'
  prefs: []
  type: TYPE_NORMAL
- en: Sequence of title strings. An empty list can be used to leave titles out.
  prefs: []
  type: TYPE_NORMAL
- en: '**aligned**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True, align the fields by padding as the C-compiler would. Default is False.
  prefs: []
  type: TYPE_NORMAL
- en: '**byteorder**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If specified, all the fields will be changed to the provided byte-order. Otherwise,
    the default byte-order is used. For all available string specifiers, see [`dtype.newbyteorder`](numpy.dtype.newbyteorder.html#numpy.dtype.newbyteorder
    "numpy.dtype.newbyteorder").
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`dtype`](numpy.dtype.html#numpy.dtype "numpy.dtype"), [`typename`](numpy.typename.html#numpy.typename
    "numpy.typename"), [`sctype2char`](numpy.sctype2char.html#numpy.sctype2char "numpy.sctype2char")'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '*names* and/or *titles* can be empty lists. If *titles* is an empty list, titles
    will simply not appear. If *names* is empty, default field names will be used.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype**dtype'
  prefs: []
  type: TYPE_NORMAL
- en: The converted data-type.
  prefs: []
  type: TYPE_NORMAL
