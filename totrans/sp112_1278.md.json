["```py\nscipy.stats.bayes_mvs(data, alpha=0.9)\n```", "```py\n(center, (lower, upper)) \n```", "```py\n>>> from scipy import stats\n>>> data = [6, 9, 12, 7, 8, 8, 13]\n>>> mean, var, std = stats.bayes_mvs(data)\n>>> mean\nMean(statistic=9.0, minmax=(7.103650222612533, 10.896349777387467))\n>>> var\nVariance(statistic=10.0, minmax=(3.176724206..., 24.45910382...))\n>>> std\nStd_dev(statistic=2.9724954732045084,\n minmax=(1.7823367265645143, 4.945614605014631)) \n```", "```py\n>>> n_samples = 100000\n>>> data = stats.norm.rvs(size=n_samples)\n>>> res_mean, res_var, res_std = stats.bayes_mvs(data, alpha=0.95) \n```", "```py\n>>> import matplotlib.pyplot as plt\n>>> fig = plt.figure()\n>>> ax = fig.add_subplot(111)\n>>> ax.hist(data, bins=100, density=True, label='Histogram of data')\n>>> ax.vlines(res_mean.statistic, 0, 0.5, colors='r', label='Estimated mean')\n>>> ax.axvspan(res_mean.minmax[0],res_mean.minmax[1], facecolor='r',\n...            alpha=0.2, label=r'Estimated mean (95% limits)')\n>>> ax.vlines(res_std.statistic, 0, 0.5, colors='g', label='Estimated scale')\n>>> ax.axvspan(res_std.minmax[0],res_std.minmax[1], facecolor='g', alpha=0.2,\n...            label=r'Estimated scale (95% limits)') \n```", "```py\n>>> ax.legend(fontsize=10)\n>>> ax.set_xlim([-4, 4])\n>>> ax.set_ylim([0, 0.5])\n>>> plt.show() \n```"]