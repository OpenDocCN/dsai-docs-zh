- en: Potential Issues/Advanced Topics/Future Features in Physics/Vector Module
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 物理学中的潜在问题/高级主题/未来功能/向量模块
- en: Original text：[https://docs.sympy.org/latest/modules/physics/vector/advanced.html](https://docs.sympy.org/latest/modules/physics/vector/advanced.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.sympy.org/latest/modules/physics/vector/advanced.html](https://docs.sympy.org/latest/modules/physics/vector/advanced.html)
- en: This document will describe some of the more advanced functionality that this
    module offers but which is not part of the “official” interface. Here, some of
    the features that will be implemented in the future will also be covered, along
    with unanswered questions about proper functionality. Also, common problems will
    be discussed, along with some solutions.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本文将描述此模块提供但不是“官方”接口的一些更高级功能。此外，将涵盖一些将来将实施的功能，以及关于正确功能的未解答问题。还将讨论常见问题及其解决方案。
- en: '## Dyadic'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '## 二元向量'
- en: 'In [`sympy.physics.mechanics`](../mechanics/index.html#module-sympy.physics.mechanics
    "sympy.physics.mechanics"), dyadics are used to represent inertia ([[Kane1985]](../mechanics/reference.html#kane1985),
    [[WikiDyadics]](index.html#wikidyadics), [[WikiDyadicProducts]](index.html#wikidyadicproducts)).
    A dyadic is a linear polynomial of component unit dyadics, similar to a vector
    being a linear polynomial of component unit vectors. A dyadic is the outer product
    between two vectors which returns a new quantity representing the juxtaposition
    of these two vectors. For example:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [`sympy.physics.mechanics`](../mechanics/index.html#module-sympy.physics.mechanics
    "sympy.physics.mechanics") 中，二元用于表示惯性 ([[Kane1985]](../mechanics/reference.html#kane1985),
    [[WikiDyadics]](index.html#wikidyadics), [[WikiDyadicProducts]](index.html#wikidyadicproducts))。二元是由分量单位二元的线性多项式，类似于向量是由分量单位向量的线性多项式。二元是两个向量的外积，返回一个新的量，表示这两个向量的并置。例如：
- en: \[\begin{split}\mathbf{\hat{a}_x} \otimes \mathbf{\hat{a}_x} &= \mathbf{\hat{a}_x}
    \mathbf{\hat{a}_x}\\ \mathbf{\hat{a}_x} \otimes \mathbf{\hat{a}_y} &= \mathbf{\hat{a}_x}
    \mathbf{\hat{a}_y}\\\end{split}\]
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}\mathbf{\hat{a}_x} \otimes \mathbf{\hat{a}_x} &= \mathbf{\hat{a}_x}
    \mathbf{\hat{a}_x}\\ \mathbf{\hat{a}_x} \otimes \mathbf{\hat{a}_y} &= \mathbf{\hat{a}_x}
    \mathbf{\hat{a}_y}\\\end{split}\]
- en: Where \(\mathbf{\hat{a}_x}\mathbf{\hat{a}_x}\) and \(\mathbf{\hat{a}_x}\mathbf{\hat{a}_y}\)
    are the outer products obtained by multiplying the left side as a column vector
    by the right side as a row vector. Note that the order is significant.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 \(\mathbf{\hat{a}_x}\mathbf{\hat{a}_x}\) 和 \(\mathbf{\hat{a}_x}\mathbf{\hat{a}_y}\)
    是通过将左侧作为列向量乘以右侧作为行向量获得的外积。注意顺序很重要。
- en: 'Some additional properties of a dyadic are:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 一些二元向量的额外属性包括：
- en: \[\begin{split}(x \mathbf{v}) \otimes \mathbf{w} &= \mathbf{v} \otimes (x \mathbf{w})
    = x (\mathbf{v} \otimes \mathbf{w})\\ \mathbf{v} \otimes (\mathbf{w} + \mathbf{u})
    &= \mathbf{v} \otimes \mathbf{w} + \mathbf{v} \otimes \mathbf{u}\\ (\mathbf{v}
    + \mathbf{w}) \otimes \mathbf{u} &= \mathbf{v} \otimes \mathbf{u} + \mathbf{w}
    \otimes \mathbf{u}\\\end{split}\]
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}(x \mathbf{v}) \otimes \mathbf{w} &= \mathbf{v} \otimes (x \mathbf{w})
    = x (\mathbf{v} \otimes \mathbf{w})\\ \mathbf{v} \otimes (\mathbf{w} + \mathbf{u})
    &= \mathbf{v} \otimes \mathbf{w} + \mathbf{v} \otimes \mathbf{u}\\ (\mathbf{v}
    + \mathbf{w}) \otimes \mathbf{u} &= \mathbf{v} \otimes \mathbf{u} + \mathbf{w}
    \otimes \mathbf{u}\\\end{split}\]
- en: 'A vector in a reference frame can be represented as \(\begin{bmatrix}a\\b\\c\end{bmatrix}\)
    or \(a \mathbf{\hat{i}} + b \mathbf{\hat{j}} + c \mathbf{\hat{k}}\). Similarly,
    a dyadic can be represented in tensor form:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 参考系中的向量可以表示为 \(\begin{bmatrix}a\\b\\c\end{bmatrix}\) 或 \(a \mathbf{\hat{i}}
    + b \mathbf{\hat{j}} + c \mathbf{\hat{k}}\)。类似地，二元可以用张量形式表示：
- en: \[\begin{split}\begin{bmatrix} a_{11} & a_{12} & a_{13} \\ a_{21} & a_{22} &
    a_{23} \\ a_{31} & a_{32} & a_{33} \end{bmatrix}\\\end{split}\]
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}\begin{bmatrix} a_{11} & a_{12} & a_{13} \\ a_{21} & a_{22} &
    a_{23} \\ a_{31} & a_{32} & a_{33} \end{bmatrix}\\\end{split}\]
- en: 'or in dyadic form:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 或以二元形式：
- en: \[\begin{split}a_{11} \mathbf{\hat{a}_x}\mathbf{\hat{a}_x} + a_{12} \mathbf{\hat{a}_x}\mathbf{\hat{a}_y}
    + a_{13} \mathbf{\hat{a}_x}\mathbf{\hat{a}_z} + a_{21} \mathbf{\hat{a}_y}\mathbf{\hat{a}_x}
    + a_{22} \mathbf{\hat{a}_y}\mathbf{\hat{a}_y} + a_{23} \mathbf{\hat{a}_y}\mathbf{\hat{a}_z}
    + a_{31} \mathbf{\hat{a}_z}\mathbf{\hat{a}_x} + a_{32} \mathbf{\hat{a}_z}\mathbf{\hat{a}_y}
    + a_{33} \mathbf{\hat{a}_z}\mathbf{\hat{a}_z}\\\end{split}\]
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}a_{11} \mathbf{\hat{a}_x}\mathbf{\hat{a}_x} + a_{12} \mathbf{\hat{a}_x}\mathbf{\hat{a}_y}
    + a_{13} \mathbf{\hat{a}_x}\mathbf{\hat{a}_z} + a_{21} \mathbf{\hat{a}_y}\mathbf{\hat{a}_x}
    + a_{22} \mathbf{\hat{a}_y}\mathbf{\hat{a}_y} + a_{23} \mathbf{\hat{a}_y}\mathbf{\hat{a}_z}
    + a_{31} \mathbf{\hat{a}_z}\mathbf{\hat{a}_x} + a_{32} \mathbf{\hat{a}_z}\mathbf{\hat{a}_y}
    + a_{33} \mathbf{\hat{a}_z}\mathbf{\hat{a}_z}\\\end{split}\]
- en: 'Just as with vectors, the later representation makes it possible to keep track
    of which frames the dyadic is defined with respect to. Also, the two components
    of each term in the dyadic need not be in the same frame. The following is valid:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 就像向量一样，后续的表示使得可以跟踪张量与哪些参考系有关。此外，张量每项的两个分量不必在同一个参考系中。以下是有效的：
- en: \[\mathbf{\hat{a}_x} \otimes \mathbf{\hat{b}_y} = \mathbf{\hat{a}_x} \mathbf{\hat{b}_y}\]
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: \[\mathbf{\hat{a}_x} \otimes \mathbf{\hat{b}_y} = \mathbf{\hat{a}_x} \mathbf{\hat{b}_y}\]
- en: 'Dyadics can also be crossed and dotted with vectors; again, order matters:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 二阶张量也可以与向量进行叉乘和点乘；再次强调顺序的重要性：
- en: \[\begin{split}\mathbf{\hat{a}_x}\mathbf{\hat{a}_x} \cdot \mathbf{\hat{a}_x}
    &= \mathbf{\hat{a}_x}\\ \mathbf{\hat{a}_y}\mathbf{\hat{a}_x} \cdot \mathbf{\hat{a}_x}
    &= \mathbf{\hat{a}_y}\\ \mathbf{\hat{a}_x}\mathbf{\hat{a}_y} \cdot \mathbf{\hat{a}_x}
    &= 0\\ \mathbf{\hat{a}_x} \cdot \mathbf{\hat{a}_x}\mathbf{\hat{a}_x} &= \mathbf{\hat{a}_x}\\
    \mathbf{\hat{a}_x} \cdot \mathbf{\hat{a}_x}\mathbf{\hat{a}_y} &= \mathbf{\hat{a}_y}\\
    \mathbf{\hat{a}_x} \cdot \mathbf{\hat{a}_y}\mathbf{\hat{a}_x} &= 0\\ \mathbf{\hat{a}_x}
    \times \mathbf{\hat{a}_y}\mathbf{\hat{a}_x} &= \mathbf{\hat{a}_z}\mathbf{\hat{a}_x}\\
    \mathbf{\hat{a}_x} \times \mathbf{\hat{a}_x}\mathbf{\hat{a}_x} &= 0\\ \mathbf{\hat{a}_y}\mathbf{\hat{a}_x}
    \times \mathbf{\hat{a}_z} &= - \mathbf{\hat{a}_y}\mathbf{\hat{a}_y}\\\end{split}\]
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}\mathbf{\hat{a}_x}\mathbf{\hat{a}_x} \cdot \mathbf{\hat{a}_x}
    &= \mathbf{\hat{a}_x}\\ \mathbf{\hat{a}_y}\mathbf{\hat{a}_x} \cdot \mathbf{\hat{a}_x}
    &= \mathbf{\hat{a}_y}\\ \mathbf{\hat{a}_x}\mathbf{\hat{a}_y} \cdot \mathbf{\hat{a}_x}
    &= 0\\ \mathbf{\hat{a}_x} \cdot \mathbf{\hat{a}_x}\mathbf{\hat{a}_x} &= \mathbf{\hat{a}_x}\\
    \mathbf{\hat{a}_x} \cdot \mathbf{\hat{a}_x}\mathbf{\hat{a}_y} &= \mathbf{\hat{a}_y}\\
    \mathbf{\hat{a}_x} \cdot \mathbf{\hat{a}_y}\mathbf{\hat{a}_x} &= 0\\ \mathbf{\hat{a}_x}
    \times \mathbf{\hat{a}_y}\mathbf{\hat{a}_x} &= \mathbf{\hat{a}_z}\mathbf{\hat{a}_x}\\
    \mathbf{\hat{a}_x} \times \mathbf{\hat{a}_x}\mathbf{\hat{a}_x} &= 0\\ \mathbf{\hat{a}_y}\mathbf{\hat{a}_x}
    \times \mathbf{\hat{a}_z} &= - \mathbf{\hat{a}_y}\mathbf{\hat{a}_y}\\\end{split}\]
- en: One can also take the time derivative of dyadics or express them in different
    frames, just like with vectors.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以对二阶张量进行时间导数，或者在不同参考系中表示它们，就像对向量一样。
- en: Common Issues
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常见问题
- en: Here issues with numerically integrating code, choice of \(dynamicsymbols\)
    for coordinate and speed representation, printing, differentiating, and substitution
    will occur.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，可能会出现与数值积分代码、坐标和速度表示的 `dynamicsymbols` 选择、打印、微分和替换相关的问题。
- en: Printing
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 打印
- en: The default printing options are to use sorting for `Vector` and `Dyadic` measure
    numbers, and have unsorted output from the `vprint`, `vpprint`, and `vlatex` functions.
    If you are printing something large, please use one of those functions, as the
    sorting can increase printing time from seconds to minutes.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的打印选项是对`Vector`和`Dyadic`测量数使用排序，并且从`vprint`、`vpprint`和`vlatex`函数有未排序的输出。如果要打印大量内容，请使用这些函数之一，因为排序可能会将打印时间从几秒钟增加到几分钟。
- en: Substitution
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 替换
- en: Substitution into large expressions can be slow, and take a few minutes.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 替换到大表达式中可能会很慢，并且需要几分钟的时间。
- en: Acceleration of Points
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 点的加速度
- en: At a minimum, points need to have their velocities defined, as the acceleration
    can be calculated by taking the time derivative of the velocity in the same frame.
    If the 1 point or 2 point theorems were used to compute the velocity, the time
    derivative of the velocity expression will most likely be more complex than if
    you were to use the acceleration level 1 point and 2 point theorems. Using the
    acceleration level methods can result in shorted expressions at this point, which
    will result in shorter expressions later (such as when forming Kane’s equations).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 至少，点需要定义它们的速度，因为加速度可以通过在相同参考系中对速度的时间导数来计算。如果使用一点或两点定理来计算速度，那么速度表达式的时间导数很可能比使用一级和二级定理来计算的更复杂。使用加速度级别的方法可以在这一点上导致较短的表达式，这将在形成Kane方程时导致较短的表达式。
- en: Advanced Interfaces
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 高级接口
- en: 'Here we will cover advanced options in: `ReferenceFrame`, `dynamicsymbols`,
    and some associated functionality.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们将涵盖`ReferenceFrame`、`dynamicsymbols`和一些相关功能的高级选项。
- en: ReferenceFrame
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参考系
- en: '`ReferenceFrame` is shown as having a `.name` attribute and `.x`, `.y`, and
    `.z` attributes for accessing the basis vectors, as well as a fairly rigidly defined
    print output. If you wish to have a different set of indices defined, there is
    an option for this. This will also require a different interface for accessing
    the basis vectors.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '`ReferenceFrame` 被显示为具有 `.name` 属性和 `.x`, `.y`, 和 `.z` 属性用于访问基向量，并且有一个相当严格定义的打印输出。如果你希望有一个不同的索引集定义，这也是可以的。这也将需要一个不同的接口来访问基向量。'
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Also, the latex output can have custom strings; rather than just indices though,
    the entirety of each basis vector can be specified. The custom latex strings can
    occur without custom indices, and also overwrites the latex string that would
    be used if there were custom indices.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，latex输出可以有自定义字符串；而不仅仅是指标，每个基向量的整体都可以指定。自定义latex字符串可以不带自定义指标而发生，也覆盖了如果有自定义指标则将使用的latex字符串。
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: dynamicsymbols
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 动态符号
- en: The `dynamicsymbols` function also has ‘hidden’ functionality; the variable
    which is associated with time can be changed, as well as the notation for printing
    derivatives.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`dynamicsymbols`函数还具有‘隐藏’功能；与时间相关联的变量可以更改，以及用于打印导数的符号。'
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Note that only dynamic symbols created after the change are different. The same
    is not true for the \(._str\) attribute; this affects the printing output only,
    so dynamic symbols created before or after will print the same way.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，仅在更改后创建的动态符号不同。这对于\(._str\)属性并非如此；这仅影响打印输出，因此在更改前后创建的动态符号将以相同的方式打印。
- en: Also note that `Vector`’s `.dt` method uses the `._t` attribute of `dynamicsymbols`,
    along with a number of other important functions and methods. Don’t mix and match
    symbols representing time.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 还要注意，`Vector`的`.dt`方法使用`dynamicsymbols`的`._t`属性，以及其他一些重要的函数和方法。不要混合表示时间的符号。
- en: Solving Vector Equations
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解向量方程
- en: To solve equations involving vectors, you cannot directly use the solve functions
    on a vector. Instead, you must convert the vector to a set of scalar equations.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要解决涉及向量的方程，不能直接使用向量上的解函数。相反，必须将向量转换为一组标量方程。
- en: Suppose that we have two frames `N` and `A`, where `A` is rotated 30 degrees
    about the z-axis with respect to `N`.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有两个框架`N`和`A`，其中`A`相对于`N`绕z轴旋转30度。
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Suppose that we have two vectors `v1` and `v2`, which represent the same vector
    using different symbols.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有两个向量`v1`和`v2`，它们用不同的符号表示相同的向量。
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Our goal is to find the relationship between the symbols used in `v2` and the
    symbols used in `v1`. We can achieve this by converting the vector to a matrix
    and then solving the matrix using [`sympy.solvers.solvers.solve()`](../../solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve").
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的目标是找到`v2`中使用的符号与`v1`中使用的符号之间的关系。我们可以通过将向量转换为矩阵，然后使用[`sympy.solvers.solvers.solve()`](../../solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve")来实现这一点。
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
