- en: pandas.tseries.offsets.CustomBusinessDay
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.tseries.offsets.CustomBusinessDay.html](https://pandas.pydata.org/docs/reference/api/pandas.tseries.offsets.CustomBusinessDay.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: DateOffset subclass representing possibly n custom business days.
  prefs: []
  type: TYPE_NORMAL
- en: In CustomBusinessDay we can use custom weekmask, holidays, and calendar.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**n**int, default 1'
  prefs: []
  type: TYPE_NORMAL
- en: The number of days represented.
  prefs: []
  type: TYPE_NORMAL
- en: '**normalize**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Normalize start/end dates to midnight before generating date range.
  prefs: []
  type: TYPE_NORMAL
- en: '**weekmask**str, Default ‘Mon Tue Wed Thu Fri’'
  prefs: []
  type: TYPE_NORMAL
- en: Weekmask of valid business days, passed to `numpy.busdaycalendar`.
  prefs: []
  type: TYPE_NORMAL
- en: '**holidays**list'
  prefs: []
  type: TYPE_NORMAL
- en: List/array of dates to exclude from the set of valid business days, passed to
    `numpy.busdaycalendar`.
  prefs: []
  type: TYPE_NORMAL
- en: '**calendar**np.busdaycalendar'
  prefs: []
  type: TYPE_NORMAL
- en: Calendar to integrate.
  prefs: []
  type: TYPE_NORMAL
- en: '**offset**timedelta, default timedelta(0)'
  prefs: []
  type: TYPE_NORMAL
- en: Time offset to apply.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: In the example below the default parameters give the next business day.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Business days can be specified by `weekmask` parameter. To convert the returned
    datetime object to its string representation the function strftime() is used in
    the next example.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Using NumPy business day calendar you can define custom holidays.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: If you want to shift the result on n day you can use the parameter `offset`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs: []
  type: TYPE_NORMAL
- en: '| `base` | Returns a copy of the calling offset object with n=1 and all other
    attributes equal. |'
  prefs: []
  type: TYPE_TB
- en: '| [`calendar`](pandas.tseries.offsets.CustomBusinessDay.calendar.html#pandas.tseries.offsets.CustomBusinessDay.calendar
    "pandas.tseries.offsets.CustomBusinessDay.calendar") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`freqstr`](pandas.tseries.offsets.CustomBusinessDay.freqstr.html#pandas.tseries.offsets.CustomBusinessDay.freqstr
    "pandas.tseries.offsets.CustomBusinessDay.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`holidays`](pandas.tseries.offsets.CustomBusinessDay.holidays.html#pandas.tseries.offsets.CustomBusinessDay.holidays
    "pandas.tseries.offsets.CustomBusinessDay.holidays") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`kwds`](pandas.tseries.offsets.CustomBusinessDay.kwds.html#pandas.tseries.offsets.CustomBusinessDay.kwds
    "pandas.tseries.offsets.CustomBusinessDay.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`n`](pandas.tseries.offsets.CustomBusinessDay.n.html#pandas.tseries.offsets.CustomBusinessDay.n
    "pandas.tseries.offsets.CustomBusinessDay.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`name`](pandas.tseries.offsets.CustomBusinessDay.name.html#pandas.tseries.offsets.CustomBusinessDay.name
    "pandas.tseries.offsets.CustomBusinessDay.name") | Return a string representing
    the base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`nanos`](pandas.tseries.offsets.CustomBusinessDay.nanos.html#pandas.tseries.offsets.CustomBusinessDay.nanos
    "pandas.tseries.offsets.CustomBusinessDay.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`normalize`](pandas.tseries.offsets.CustomBusinessDay.normalize.html#pandas.tseries.offsets.CustomBusinessDay.normalize
    "pandas.tseries.offsets.CustomBusinessDay.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| `offset` | Alias for self._offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`rule_code`](pandas.tseries.offsets.CustomBusinessDay.rule_code.html#pandas.tseries.offsets.CustomBusinessDay.rule_code
    "pandas.tseries.offsets.CustomBusinessDay.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`weekmask`](pandas.tseries.offsets.CustomBusinessDay.weekmask.html#pandas.tseries.offsets.CustomBusinessDay.weekmask
    "pandas.tseries.offsets.CustomBusinessDay.weekmask") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`copy`](pandas.tseries.offsets.CustomBusinessDay.copy.html#pandas.tseries.offsets.CustomBusinessDay.copy
    "pandas.tseries.offsets.CustomBusinessDay.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_anchored`](pandas.tseries.offsets.CustomBusinessDay.is_anchored.html#pandas.tseries.offsets.CustomBusinessDay.is_anchored
    "pandas.tseries.offsets.CustomBusinessDay.is_anchored")() | (DEPRECATED) Return
    boolean whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_month_end`](pandas.tseries.offsets.CustomBusinessDay.is_month_end.html#pandas.tseries.offsets.CustomBusinessDay.is_month_end
    "pandas.tseries.offsets.CustomBusinessDay.is_month_end")(ts) | Return boolean
    whether a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_month_start`](pandas.tseries.offsets.CustomBusinessDay.is_month_start.html#pandas.tseries.offsets.CustomBusinessDay.is_month_start
    "pandas.tseries.offsets.CustomBusinessDay.is_month_start")(ts) | Return boolean
    whether a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_on_offset`](pandas.tseries.offsets.CustomBusinessDay.is_on_offset.html#pandas.tseries.offsets.CustomBusinessDay.is_on_offset
    "pandas.tseries.offsets.CustomBusinessDay.is_on_offset")(dt) | Return boolean
    whether a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_quarter_end`](pandas.tseries.offsets.CustomBusinessDay.is_quarter_end.html#pandas.tseries.offsets.CustomBusinessDay.is_quarter_end
    "pandas.tseries.offsets.CustomBusinessDay.is_quarter_end")(ts) | Return boolean
    whether a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_quarter_start`](pandas.tseries.offsets.CustomBusinessDay.is_quarter_start.html#pandas.tseries.offsets.CustomBusinessDay.is_quarter_start
    "pandas.tseries.offsets.CustomBusinessDay.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_year_end`](pandas.tseries.offsets.CustomBusinessDay.is_year_end.html#pandas.tseries.offsets.CustomBusinessDay.is_year_end
    "pandas.tseries.offsets.CustomBusinessDay.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_year_start`](pandas.tseries.offsets.CustomBusinessDay.is_year_start.html#pandas.tseries.offsets.CustomBusinessDay.is_year_start
    "pandas.tseries.offsets.CustomBusinessDay.is_year_start")(ts) | Return boolean
    whether a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| `rollback`(dt) | Roll provided date backward to next offset only if not on
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| `rollforward`(dt) | Roll provided date forward to next offset only if not
    on offset. |'
  prefs: []
  type: TYPE_TB
