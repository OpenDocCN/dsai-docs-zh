- en: numpy.resize
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.resize.html](https://numpy.org/doc/1.26/reference/generated/numpy.resize.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return a new array with the specified shape.
  prefs: []
  type: TYPE_NORMAL
- en: If the new array is larger than the original array, then the new array is filled
    with repeated copies of *a*. Note that this behavior is different from a.resize(new_shape)
    which fills with zeros instead of repeated copies of *a*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Array to be resized.
  prefs: []
  type: TYPE_NORMAL
- en: '**new_shape**int or tuple of int'
  prefs: []
  type: TYPE_NORMAL
- en: Shape of resized array.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**reshaped_array**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The new array is formed from the data in the old array, repeated if necessary
    to fill out the required number of elements. The data are repeated iterating over
    the array in C-order.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.reshape`](numpy.reshape.html#numpy.reshape "numpy.reshape")'
  prefs: []
  type: TYPE_NORMAL
- en: Reshape an array without changing the total size.
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.pad`](numpy.pad.html#numpy.pad "numpy.pad")'
  prefs: []
  type: TYPE_NORMAL
- en: Enlarge and pad an array.
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.repeat`](numpy.repeat.html#numpy.repeat "numpy.repeat")'
  prefs: []
  type: TYPE_NORMAL
- en: Repeat elements of an array.
  prefs: []
  type: TYPE_NORMAL
- en: '[`ndarray.resize`](numpy.ndarray.resize.html#numpy.ndarray.resize "numpy.ndarray.resize")'
  prefs: []
  type: TYPE_NORMAL
- en: resize an array in-place.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: When the total size of the array does not change [`reshape`](numpy.reshape.html#numpy.reshape
    "numpy.reshape") should be used. In most other cases either indexing (to reduce
    the size) or padding (to increase the size) may be a more appropriate solution.
  prefs: []
  type: TYPE_NORMAL
- en: 'Warning: This functionality does **not** consider axes separately, i.e. it
    does not apply interpolation/extrapolation. It fills the return array with the
    required number of elements, iterating over *a* in C-order, disregarding axes
    (and cycling back from the start if the new shape is larger). This functionality
    is therefore not suitable to resize images, or data where each axis represents
    a separate and distinct entity.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
