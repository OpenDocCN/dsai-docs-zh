- en: Category Theory
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 范畴论
- en: Original text：[https://docs.sympy.org/latest/modules/categories.html](https://docs.sympy.org/latest/modules/categories.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.sympy.org/latest/modules/categories.html](https://docs.sympy.org/latest/modules/categories.html)
- en: Introduction
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引言
- en: The category theory module for SymPy will allow manipulating diagrams within
    a single category, including drawing them in TikZ and deciding whether they are
    commutative or not.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: SymPy 的范畴论模块将允许在单一范畴内操作图表，包括在 TikZ 中绘制它们并判断它们是否可交换。
- en: The general reference work this module tries to follow is
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 此模块试图遵循的一般参考工作是
- en: '[JoyOfCats]'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[JoyOfCats]'
- en: 'Adamek, H. Herrlich. G. E. Strecker: Abstract and Concrete Categories. The
    Joy of Cats.'
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Adamek, H. Herrlich. G. E. Strecker: 抽象和具体范畴。猫的乐趣。'
- en: The latest version of this book should be available for free download from
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 最新版本的这本书可以免费下载。
- en: '[katmat.math.uni-bremen.de/acc/acc.pdf](https://web.archive.org/web/20220811222404/http://katmat.math.uni-bremen.de/acc/acc.pdf)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[katmat.math.uni-bremen.de/acc/acc.pdf](https://web.archive.org/web/20220811222404/http://katmat.math.uni-bremen.de/acc/acc.pdf)'
- en: The module is still in its pre-embryonic stage.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 此模块仍处于前胚阶段。
- en: '## Base Class Reference'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '## 基类参考'
- en: 'This section lists the classes which implement some of the basic notions in
    category theory: objects, morphisms, categories, and diagrams.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 此部分列出了实现范畴论基本概念的类别的类：对象，态射，范畴和图表。
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The base class for any kind of object in an abstract category.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 任何抽象范畴中任何类型对象的基类。
- en: Explanation
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: While technically any instance of [`Basic`](core.html#sympy.core.basic.Basic
    "sympy.core.basic.Basic") will do, this class is the recommended way to create
    abstract objects in abstract categories.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管技术上任何 [`Basic`](core.html#sympy.core.basic.Basic "sympy.core.basic.Basic")
    的实例都可以，但这个类是在抽象范畴中创建抽象对象的推荐方式。
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The base class for any morphism in an abstract category.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 抽象范畴中任何态射的基类。
- en: Explanation
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: In abstract categories, a morphism is an arrow between two category objects.
    The object where the arrow starts is called the domain, while the object where
    the arrow ends is called the codomain.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在抽象范畴中，态射是两个范畴对象之间的箭头。箭头起点的对象称为定义域，而终点的对象称为值域。
- en: Two morphisms between the same pair of objects are considered to be the same
    morphisms. To distinguish between morphisms between the same objects use [`NamedMorphism`](#sympy.categories.NamedMorphism
    "sympy.categories.NamedMorphism").
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 相同对象之间的两个态射被认为是相同的态射。要区分相同对象之间的态射，请使用 [`NamedMorphism`](#sympy.categories.NamedMorphism
    "sympy.categories.NamedMorphism")。
- en: It is prohibited to instantiate this class. Use one of the derived classes instead.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 禁止实例化此类。请改用其中一个派生类。
- en: See also
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`IdentityMorphism`](#sympy.categories.IdentityMorphism "sympy.categories.IdentityMorphism"),
    [`NamedMorphism`](#sympy.categories.NamedMorphism "sympy.categories.NamedMorphism"),
    [`CompositeMorphism`](#sympy.categories.CompositeMorphism "sympy.categories.CompositeMorphism")'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[`IdentityMorphism`](#sympy.categories.IdentityMorphism "sympy.categories.IdentityMorphism"),
    [`NamedMorphism`](#sympy.categories.NamedMorphism "sympy.categories.NamedMorphism"),
    [`CompositeMorphism`](#sympy.categories.CompositeMorphism "sympy.categories.CompositeMorphism")'
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Returns the codomain of the morphism.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 返回态射的值域。
- en: Examples
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Composes self with the supplied morphism.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 与提供的态射组合自身。
- en: The order of elements in the composition is the usual order, i.e., to construct
    \(g\circ f\) use `g.compose(f)`.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 构成组合的元素顺序是通常的顺序，即构造 \(g\circ f\) 使用 `g.compose(f)`。
- en: Examples
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Returns the domain of the morphism.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 返回态射的定义域。
- en: Examples
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE7]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Represents a morphism which has a name.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 表示具有名称的态射。
- en: Explanation
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'Names are used to distinguish between morphisms which have the same domain
    and codomain: two named morphisms are equal if they have the same domains, codomains,
    and names.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 名称用于区分具有相同定义域和值域的态射：如果它们具有相同的定义域，值域和名称，则两个命名的态射相等。
- en: Examples
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE9]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: See also
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`Morphism`](#sympy.categories.Morphism "sympy.categories.Morphism")'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Morphism`](#sympy.categories.Morphism "sympy.categories.Morphism")'
- en: '[PRE10]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Returns the name of the morphism.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 返回态射的名称。
- en: Examples
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE11]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Represents a morphism which is a composition of other morphisms.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 表示一个由其他态射组成的态射。
- en: Explanation
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Two composite morphisms are equal if the morphisms they were obtained from (components)
    are the same and were listed in the same order.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果它们从中获得的态射（组件）相同并以相同顺序列出，则两个复合态射相等。
- en: 'The arguments to the constructor for this class should be listed in diagram
    order: to obtain the composition \(g\circ f\) from the instances of [`Morphism`](#sympy.categories.Morphism
    "sympy.categories.Morphism") `g` and `f` use `CompositeMorphism(f, g)`.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 此类的构造函数的参数应按图表顺序列出：从 [`Morphism`](#sympy.categories.Morphism "sympy.categories.Morphism")
    实例 `g` 和 `f` 获取复合态射 \(g\circ f\)。
- en: Examples
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE13]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Returns the codomain of this composite morphism.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 返回这个复合态射的余域。
- en: The codomain of the composite morphism is the codomain of its last component.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 复合态射的余域是其最后组成部分的余域。
- en: Examples
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE15]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Returns the components of this composite morphism.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此复合态射的组件。
- en: Examples
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE17]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Returns the domain of this composite morphism.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 返回这个复合态射的定义域。
- en: The domain of the composite morphism is the domain of its first component.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 复合态射的定义域是其第一个组成部分的定义域。
- en: Examples
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE19]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Forgets the composite structure of this morphism.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 忘记了这个态射的复合结构。
- en: Explanation
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: If `new_name` is not empty, returns a [`NamedMorphism`](#sympy.categories.NamedMorphism
    "sympy.categories.NamedMorphism") with the supplied name, otherwise returns a
    [`Morphism`](#sympy.categories.Morphism "sympy.categories.Morphism"). In both
    cases the domain of the new morphism is the domain of this composite morphism
    and the codomain of the new morphism is the codomain of this composite morphism.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `new_name` 不为空，则返回一个带有提供名称的 [`NamedMorphism`](#sympy.categories.NamedMorphism
    "sympy.categories.NamedMorphism")，否则返回一个 [`Morphism`](#sympy.categories.Morphism
    "sympy.categories.Morphism")。在两种情况下，新态射的定义域是此复合态射的定义域，新态射的余域是此复合态射的余域。
- en: Examples
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE21]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Represents an identity morphism.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 表示一个恒等态射。
- en: Explanation
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: An identity morphism is a morphism with equal domain and codomain, which acts
    as an identity with respect to composition.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 恒等态射是具有相同定义域和余域的态射，其在复合方面作为恒等元素。
- en: Examples
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE23]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: See also
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`Morphism`](#sympy.categories.Morphism "sympy.categories.Morphism")'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Morphism`](#sympy.categories.Morphism "sympy.categories.Morphism")'
- en: '[PRE24]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: An (abstract) category.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 一个（抽象）范畴。
- en: Explanation
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: A category [JoyOfCats] is a quadruple \(\mbox{K} = (O, \hom, id, \circ)\) consisting
    of
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 一个范畴 [JoyOfCats] 是一个四元组 \(\mbox{K} = (O, \hom, id, \circ)\)，由以下组成：
- en: a (set-theoretical) class \(O\), whose members are called \(K\)-objects,
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个（集合论上的）类 \(O\)，其成员称为 \(K\)-对象，
- en: for each pair \((A, B)\) of \(K\)-objects, a set \(\hom(A, B)\) whose members
    are called \(K\)-morphisms from \(A\) to \(B\),
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于每对 \(K\)-对象 \((A, B)\)，一个集合 \(\hom(A, B)\)，其成员称为从 \(A\) 到 \(B\) 的 \(K\)-态射，
- en: for a each \(K\)-object \(A\), a morphism \(id:A\rightarrow A\), called the
    \(K\)-identity of \(A\),
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于每个 \(K\)-对象 \(A\)，一个态射 \(id:A\rightarrow A\)，称为 \(A\) 的 \(K\)-恒等态射，
- en: a composition law \(\circ\) associating with every \(K\)-morphisms \(f:A\rightarrow
    B\) and \(g:B\rightarrow C\) a \(K\)-morphism \(g\circ f:A\rightarrow C\), called
    the composite of \(f\) and \(g\).
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个复合法则 \(\circ\)，将每个 \(K\)-态射 \(f:A\rightarrow B\) 和 \(g:B\rightarrow C\) 关联到一个
    \(K\)-态射 \(g\circ f:A\rightarrow C\)，称为 \(f\) 和 \(g\) 的复合。
- en: Composition is associative, \(K\)-identities are identities with respect to
    composition, and the sets \(\hom(A, B)\) are pairwise disjoint.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 复合是可结合的，\(K\)-恒等式在复合方面是单位元，并且集合 \(\hom(A, B)\) 是两两不相交的。
- en: This class knows nothing about its objects and morphisms. Concrete cases of
    (abstract) categories should be implemented as classes derived from this one.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这个类对其对象和态射一无所知。应将（抽象）范畴的具体情况实现为从此类派生的类。
- en: Certain instances of [`Diagram`](#sympy.categories.Diagram "sympy.categories.Diagram")
    can be asserted to be commutative in a [`Category`](#sympy.categories.Category
    "sympy.categories.Category") by supplying the argument `commutative_diagrams`
    in the constructor.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在构造函数中提供参数 `commutative_diagrams`，可以断言某些实例的 [`Diagram`](#sympy.categories.Diagram
    "sympy.categories.Diagram") 在 [`Category`](#sympy.categories.Category "sympy.categories.Category")
    中是交换的。
- en: Examples
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE25]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: See also
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`Diagram`](#sympy.categories.Diagram "sympy.categories.Diagram")'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Diagram`](#sympy.categories.Diagram "sympy.categories.Diagram")'
- en: '[PRE26]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Returns the [`FiniteSet`](sets.html#sympy.sets.sets.FiniteSet "sympy.sets.sets.FiniteSet")
    of diagrams which are known to be commutative in this category.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 返回已知在此范畴中为交换的图表的 [`FiniteSet`](sets.html#sympy.sets.sets.FiniteSet "sympy.sets.sets.FiniteSet")。
- en: Examples
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE27]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Returns the name of this category.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此范畴的名称。
- en: Examples
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE29]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Returns the class of objects of this category.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此范畴的对象类。
- en: Examples
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE31]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Represents a diagram in a certain category.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 表示某个范畴中的图表。
- en: Explanation
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Informally, a diagram is a collection of objects of a category and certain morphisms
    between them. A diagram is still a monoid with respect to morphism composition;
    i.e., identity morphisms, as well as all composites of morphisms included in the
    diagram belong to the diagram. For a more formal approach to this notion see [Pare1970].
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 非正式地说，一个图表是一个类别中对象和某些它们之间的态射的集合。一个图表仍然是关于态射组合的幺半群；即，包括在图表中的所有态射的恒等态射以及所有复合态射属于图表。有关此概念的更正式方法，请参见[Pare1970]。
- en: The components of composite morphisms are also added to the diagram. No properties
    are assigned to such morphisms by default.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 复合态射的组成部分也添加到图表中。此类态射默认不分配属性。
- en: 'A commutative diagram is often accompanied by a statement of the following
    kind: “if such morphisms with such properties exist, then such morphisms which
    such properties exist and the diagram is commutative”. To represent this, an instance
    of [`Diagram`](#sympy.categories.Diagram "sympy.categories.Diagram") includes
    a collection of morphisms which are the premises and another collection of conclusions.
    `premises` and `conclusions` associate morphisms belonging to the corresponding
    categories with the [`FiniteSet`](sets.html#sympy.sets.sets.FiniteSet "sympy.sets.sets.FiniteSet")’s
    of their properties.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，一个交换图表伴随着以下类型的声明：“如果存在这样的具有这样的属性的态射，则存在这样的具有这样的属性的态射，并且图表是交换的”。为了表示这一点，[`图表`](#sympy.categories.Diagram
    "sympy.categories.Diagram")的一个实例包括属于相应类别的态射的集合，其具有[`FiniteSet`](sets.html#sympy.sets.sets.FiniteSet
    "sympy.sets.sets.FiniteSet")的属性的集合。
- en: The set of properties of a composite morphism is the intersection of the sets
    of properties of its components. The domain and codomain of a conclusion morphism
    should be among the domains and codomains of the morphisms listed as the premises
    of a diagram.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 复合态射的属性集是其组成部分的属性集的交集。结论态射的定义域和值域应该是图表前提中列出的态射的定义域和值域之一。
- en: No checks are carried out of whether the supplied object and morphisms do belong
    to one and the same category.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 不检查所提供的对象和态射是否属于同一类别。
- en: Examples
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE33]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: References
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[Pare1970] B. Pareigis: Categories and functors. Academic Press, 1970.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '[Pare1970] B. Pareigis: 类别与函子。学术出版社，1970年。'
- en: '[PRE34]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Returns the conclusions of this diagram.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此图表的结论。
- en: Examples
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE35]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Returns a 2-tuple of sets of morphisms between objects `A` and `B`: one set
    of morphisms listed as premises, and the other set of morphisms listed as conclusions.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 返回对象`A`和`B`之间的态射集的2元组：一个作为前提列出的态射集，另一个作为结论列出的态射集。
- en: Examples
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE37]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: See also
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`Object`](#sympy.categories.Object "sympy.categories.Object"), [`Morphism`](#sympy.categories.Morphism
    "sympy.categories.Morphism")'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '[`对象`](#sympy.categories.Object "sympy.categories.Object")，[`态射`](#sympy.categories.Morphism
    "sympy.categories.Morphism")'
- en: '[PRE38]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Checks whether `diagram` is a subdiagram of `self`. Diagram \(D'\) is a subdiagram
    of \(D\) if all premises (conclusions) of \(D'\) are contained in the premises
    (conclusions) of \(D\). The morphisms contained both in \(D'\) and \(D\) should
    have the same properties for \(D'\) to be a subdiagram of \(D\).
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 检查`diagram`是否是`self`的子图。如果图表\(D'\)的所有前提（结论）都包含在图表\(D\)的前提（结论）中，则图表\(D'\)是图表\(D\)的子图。对于\(D'\)成为\(D\)的子图，\(D'\)和\(D\)中包含的态射应具有相同的属性。
- en: Examples
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE39]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Returns the [`FiniteSet`](sets.html#sympy.sets.sets.FiniteSet "sympy.sets.sets.FiniteSet")
    of objects that appear in this diagram.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 返回出现在此图表中的对象的[`FiniteSet`](sets.html#sympy.sets.sets.FiniteSet "sympy.sets.sets.FiniteSet")。
- en: Examples
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE41]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Returns the premises of this diagram.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此图表的前提。
- en: Examples
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE43]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: If `objects` is a subset of the objects of `self`, returns a diagram which has
    as premises all those premises of `self` which have a domains and codomains in
    `objects`, likewise for conclusions. Properties are preserved.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`objects`是`self`对象的子集，则返回一个图表，其前提是所有具有`objects`中的域和值域的前提，类似于结论。属性被保留。
- en: Examples
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE45]  ## Diagram Drawing'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE45]  ## 图表绘制'
- en: This section lists the classes which allow automatic drawing of diagrams.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 本节列出了允许自动绘制图表的类别。
- en: '[PRE46]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Constructs and holds the fitting of the diagram into a grid.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 构造并保存图表适合网格中。
- en: Explanation
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The mission of this class is to analyse the structure of the supplied diagram
    and to place its objects on a grid such that, when the objects and the morphisms
    are actually drawn, the diagram would be “readable”, in the sense that there will
    not be many intersections of moprhisms. This class does not perform any actual
    drawing. It does strive nevertheless to offer sufficient metadata to draw a diagram.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 本课程的任务是分析所提供的图表结构，并将其对象放置在网格上，使得当对象和态射实际绘制时，图表将“可读”，即不会有太多态射的交叉。本课程不执行任何实际绘图。尽管如此，它仍努力提供足够的元数据来绘制图表。
- en: Consider the following simple diagram.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下简单图表。
- en: '[PRE47]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'The simplest way to have a diagram laid out is the following:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 将图表布局最简单的方法如下：
- en: '[PRE48]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Sometimes one sees the diagram as consisting of logical groups. One can advise
    `DiagramGrid` as to such groups by employing the `groups` keyword argument.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 有时人们将图表视为由逻辑分组组成。可以通过使用 `groups` 关键字参数向 `DiagramGrid` 提供此类分组建议。
- en: 'Consider the following diagram:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下图表：
- en: '[PRE49]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Lay it out with generic layout:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 使用通用布局排列：
- en: '[PRE50]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Now, we can group the objects \(A\) and \(D\) to have them near one another:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以将对象 \(A\) 和 \(D\) 分组，使它们彼此靠近：
- en: '[PRE51]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Note how the positioning of the other objects changes.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 注意其他对象的定位如何改变。
- en: Further indications can be supplied to the constructor of [`DiagramGrid`](#sympy.categories.diagram_drawing.DiagramGrid
    "sympy.categories.diagram_drawing.DiagramGrid") using keyword arguments. The currently
    supported hints are explained in the following paragraphs.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用关键字参数向 [`DiagramGrid`](#sympy.categories.diagram_drawing.DiagramGrid "sympy.categories.diagram_drawing.DiagramGrid")
    的构造函数提供进一步的指示。当前支持的提示在以下段落中解释。
- en: '[`DiagramGrid`](#sympy.categories.diagram_drawing.DiagramGrid "sympy.categories.diagram_drawing.DiagramGrid")
    does not automatically guess which layout would suit the supplied diagram better.
    Consider, for example, the following linear diagram:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DiagramGrid`](#sympy.categories.diagram_drawing.DiagramGrid "sympy.categories.diagram_drawing.DiagramGrid")
    不会自动猜测哪种布局更适合所提供的图表。例如，考虑以下线性图表：'
- en: '[PRE52]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'When laid out with the generic layout, it does not get to look linear:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用通用布局排列时，它不会呈线性外观：
- en: '[PRE53]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'To get it laid out in a line, use `layout="sequential"`:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 要将其布置在一条线上，请使用`layout="sequential"`：
- en: '[PRE54]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'One may sometimes need to transpose the resulting layout. While this can always
    be done by hand, [`DiagramGrid`](#sympy.categories.diagram_drawing.DiagramGrid
    "sympy.categories.diagram_drawing.DiagramGrid") provides a hint for that purpose:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 有时可能需要转置结果布局。虽然这可以手动完成，但 [`DiagramGrid`](#sympy.categories.diagram_drawing.DiagramGrid
    "sympy.categories.diagram_drawing.DiagramGrid") 提供了一个用于此目的的提示：
- en: '[PRE55]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Separate hints can also be provided for each group. For an example, refer to
    `tests/test_drawing.py`, and see the different ways in which the five lemma [FiveLemma]
    can be laid out.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以为每个组提供单独的提示。例如，请参考 `tests/test_drawing.py`，查看如何布置五引理 [FiveLemma] 的不同方法。
- en: See also
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`Diagram`](#sympy.categories.Diagram "sympy.categories.Diagram")'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Diagram`](#sympy.categories.Diagram "sympy.categories.Diagram")'
- en: References
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[FiveLemma](#id1)]'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '[[FiveLemma](https://en.wikipedia.org/wiki/Five_lemma)]'
- en: '[https://en.wikipedia.org/wiki/Five_lemma](https://en.wikipedia.org/wiki/Five_lemma)'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Five_lemma](https://en.wikipedia.org/wiki/Five_lemma)'
- en: '[PRE56]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Returns the number of rows in this diagram layout.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此图表布局中的行数。
- en: Examples
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE57]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '[PRE58]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Returns those morphisms (and their properties) which are sufficiently meaningful
    to be drawn.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 返回那些足够有意义以进行绘制的态射（及其属性）。
- en: Examples
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE59]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '[PRE60]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Returns the number of columns in this diagram layout.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此图表布局中的列数。
- en: Examples
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE61]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '[PRE62]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Stores the information necessary for producing an Xy-pic description of an arrow.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 存储生成箭头的 Xy-pic 描述所需的信息。
- en: The principal goal of this class is to abstract away the string representation
    of an arrow and to also provide the functionality to produce the actual Xy-pic
    string.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 本课程的主要目标是抽象化箭头的字符串表示，并提供生成实际 Xy-pic 字符串的功能。
- en: '`unit` sets the unit which will be used to specify the amount of curving and
    other distances. `horizontal_direction` should be a string of `"r"` or `"l"` specifying
    the horizontal offset of the target cell of the arrow relatively to the current
    one. `vertical_direction` should specify the vertical offset using a series of
    either `"d"` or `"u"`. `label_position` should be either `"^"`, `"_"`, or `"|"`
    to specify that the label should be positioned above the arrow, below the arrow
    or just over the arrow, in a break. Note that the notions “above” and “below”
    are relative to arrow direction. `label` stores the morphism label.'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '`unit` 设置用于指定弯曲量和其他距离的单位。`horizontal_direction` 应该是 `"r"` 或 `"l"` 的字符串，指定相对于当前箭头的水平偏移量。`vertical_direction`
    应该使用一系列 `"d"` 或 `"u"` 指定垂直偏移量。`label_position` 应该是 `"^"`、`"_"` 或 `"|"` 中的一个，指定标签应位于箭头上方、下方或正好在箭头上方的位置，在此期间请注意“上方”和“下方”概念是相对于箭头方向的。`label`
    存储了态射标签。'
- en: 'This works as follows (disregard the yet unexplained arguments):'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法的操作如下（忽略尚未解释的参数）：
- en: '[PRE63]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: '`curving` should be one of `"^"`, `"_"` to specify in which direction the arrow
    is going to curve. `curving_amount` is a number describing how many `unit`’s the
    morphism is going to curve:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '`curving` 应该是 `"^"` 或 `"_"` 中的一个，用于指定箭头弯曲的方向。`curving_amount` 是一个数字，描述箭头弯曲的单位数目：'
- en: '[PRE64]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '`looping_start` and `looping_end` are currently only used for loop morphisms,
    those which have the same domain and codomain. These two attributes should store
    a valid Xy-pic direction and specify, correspondingly, the direction the arrow
    gets out into and the direction the arrow gets back from:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '`looping_start` 和 `looping_end` 目前仅用于环形态射，即具有相同定义域和值域的态射。这两个属性应存储有效的 Xy-pic
    方向，并相应地指定箭头向外和向内的方向：'
- en: '[PRE65]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '`label_displacement` controls how far the arrow label is from the ends of the
    arrow. For example, to position the arrow label near the arrow head, use “>”:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '`label_displacement` 控制箭头标签离箭头末端的距离。例如，要将箭头标签定位在箭头头部附近，请使用“>”：'
- en: '[PRE66]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'Finally, `arrow_style` is used to specify the arrow style. To get a dashed
    arrow, for example, use “{–>}” as arrow style:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，`arrow_style` 用于指定箭头样式。例如，要获得虚线箭头，请使用“{–>}”作为箭头样式：
- en: '[PRE67]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Notes
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: Instances of [`ArrowStringDescription`](#sympy.categories.diagram_drawing.ArrowStringDescription
    "sympy.categories.diagram_drawing.ArrowStringDescription") will be constructed
    by [`XypicDiagramDrawer`](#sympy.categories.diagram_drawing.XypicDiagramDrawer
    "sympy.categories.diagram_drawing.XypicDiagramDrawer") and provided for further
    use in formatters. The user is not expected to construct instances of [`ArrowStringDescription`](#sympy.categories.diagram_drawing.ArrowStringDescription
    "sympy.categories.diagram_drawing.ArrowStringDescription") themselves.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '[`XypicDiagramDrawer`](#sympy.categories.diagram_drawing.XypicDiagramDrawer
    "sympy.categories.diagram_drawing.XypicDiagramDrawer") 将构造 [`ArrowStringDescription`](#sympy.categories.diagram_drawing.ArrowStringDescription
    "sympy.categories.diagram_drawing.ArrowStringDescription") 的实例，并提供给格式化程序进一步使用。用户不应自行构造
    [`ArrowStringDescription`](#sympy.categories.diagram_drawing.ArrowStringDescription
    "sympy.categories.diagram_drawing.ArrowStringDescription") 的实例。'
- en: To be able to properly utilise this class, the reader is encouraged to checkout
    the Xy-pic user guide, available at [Xypic].
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够正确使用此类，请读者查看 Xy-pic 用户指南，可在 [Xypic] 上获取。
- en: See also
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`XypicDiagramDrawer`](#sympy.categories.diagram_drawing.XypicDiagramDrawer
    "sympy.categories.diagram_drawing.XypicDiagramDrawer")'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '[`XypicDiagramDrawer`](#sympy.categories.diagram_drawing.XypicDiagramDrawer
    "sympy.categories.diagram_drawing.XypicDiagramDrawer")'
- en: References
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[Xypic](#id2)]'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Xypic](#id2)]'
- en: '[https://xy-pic.sourceforge.net/](https://xy-pic.sourceforge.net/)'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://xy-pic.sourceforge.net/](https://xy-pic.sourceforge.net/)'
- en: '[PRE68]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Given a [`Diagram`](#sympy.categories.Diagram "sympy.categories.Diagram") and
    the corresponding [`DiagramGrid`](#sympy.categories.diagram_drawing.DiagramGrid
    "sympy.categories.diagram_drawing.DiagramGrid"), produces the Xy-pic representation
    of the diagram.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 给定一个 [`Diagram`](#sympy.categories.Diagram "sympy.categories.Diagram") 及其对应的
    [`DiagramGrid`](#sympy.categories.diagram_drawing.DiagramGrid "sympy.categories.diagram_drawing.DiagramGrid")，生成该图示的
    Xy-pic 表示。
- en: 'The most important method in this class is `draw`. Consider the following triangle
    diagram:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 此类中最重要的方法是 `draw`。考虑以下三角形图示：
- en: '[PRE69]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'To draw this diagram, its objects need to be laid out with a [`DiagramGrid`](#sympy.categories.diagram_drawing.DiagramGrid
    "sympy.categories.diagram_drawing.DiagramGrid"):'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 要绘制此图，需要使用 [`DiagramGrid`](#sympy.categories.diagram_drawing.DiagramGrid "sympy.categories.diagram_drawing.DiagramGrid")
    将其对象布局出来：
- en: '[PRE70]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'Finally, the drawing:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，绘制如下：
- en: '[PRE71]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: For further details see the docstring of this method.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 更多细节请参阅此方法的文档字符串。
- en: 'To control the appearance of the arrows, formatters are used. The dictionary
    `arrow_formatters` maps morphisms to formatter functions. A formatter is accepts
    an [`ArrowStringDescription`](#sympy.categories.diagram_drawing.ArrowStringDescription
    "sympy.categories.diagram_drawing.ArrowStringDescription") and is allowed to modify
    any of the arrow properties exposed thereby. For example, to have all morphisms
    with the property `unique` appear as dashed arrows, and to have their names prepended
    with \(\exists !\), the following should be done:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 要控制箭头的外观，需要使用格式化器。字典 `arrow_formatters` 将态射映射到格式化函数。格式化器接受一个 [`ArrowStringDescription`](#sympy.categories.diagram_drawing.ArrowStringDescription
    "sympy.categories.diagram_drawing.ArrowStringDescription") 并允许修改其中公开的任何箭头属性。例如，要使所有具有
    `unique` 属性的态射显示为虚线箭头，并在它们的名称前加上 \(\exists !\)，应按如下方式操作：
- en: '[PRE72]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'To modify the appearance of all arrows in the diagram, set `default_arrow_formatter`.
    For example, to place all morphism labels a little bit farther from the arrow
    head so that they look more centred, do as follows:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 要修改图示中所有箭头的外观，设置 `default_arrow_formatter`。例如，要将所有态射标签稍微远离箭头头部，使它们看起来更加居中，可以按如下方式操作：
- en: '[PRE73]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'In some diagrams some morphisms are drawn as curved arrows. Consider the following
    diagram:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在一些图示中，一些态射被绘制为弯曲箭头。考虑以下图示：
- en: '[PRE74]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'To control how far the morphisms are curved by default, one can use the `unit`
    and `default_curving_amount` attributes:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 要控制态射的默认弯曲程度，可以使用 `unit` 和 `default_curving_amount` 属性：
- en: '[PRE75]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'In some diagrams, there are multiple curved morphisms between the same two
    objects. To control by how much the curving changes between two such successive
    morphisms, use `default_curving_step`:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些图示中，同一两个对象之间可能存在多个弯曲态射。要控制这些连续态射之间的弯曲程度变化，使用 `default_curving_step`：
- en: '[PRE76]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: The default value of `default_curving_step` is 4 units.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '`default_curving_step` 的默认值为 4 单位。'
- en: See also
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`draw`](#sympy.categories.diagram_drawing.XypicDiagramDrawer.draw "sympy.categories.diagram_drawing.XypicDiagramDrawer.draw"),
    [`ArrowStringDescription`](#sympy.categories.diagram_drawing.ArrowStringDescription
    "sympy.categories.diagram_drawing.ArrowStringDescription")'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '[`draw`](#sympy.categories.diagram_drawing.XypicDiagramDrawer.draw "sympy.categories.diagram_drawing.XypicDiagramDrawer.draw")，[`ArrowStringDescription`](#sympy.categories.diagram_drawing.ArrowStringDescription
    "sympy.categories.diagram_drawing.ArrowStringDescription")'
- en: '[PRE77]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: Returns the Xy-pic representation of `diagram` laid out in `grid`.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 返回在 `grid` 中布局的 `diagram` 的 Xy-pic 表示。
- en: Consider the following simple triangle diagram.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下简单的三角形图示。
- en: '[PRE78]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'To draw this diagram, its objects need to be laid out with a [`DiagramGrid`](#sympy.categories.diagram_drawing.DiagramGrid
    "sympy.categories.diagram_drawing.DiagramGrid"):'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 要绘制此图示，需要使用 [`DiagramGrid`](#sympy.categories.diagram_drawing.DiagramGrid "sympy.categories.diagram_drawing.DiagramGrid")
    对其对象进行布局：
- en: '[PRE79]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'Finally, the drawing:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，绘制：
- en: '[PRE80]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'The argument `masked` can be used to skip morphisms in the presentation of
    the diagram:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 参数 `masked` 可用于在图示的表示中跳过态射：
- en: '[PRE81]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'Finally, the `diagram_format` argument can be used to specify the format string
    of the diagram. For example, to increase the spacing by 1 cm, proceeding as follows:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，`diagram_format` 参数可用于指定图示的格式字符串。例如，要增加 1 厘米的间距，可以按以下步骤进行：
- en: '[PRE82]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: '[PRE83]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: Provides a shortcut combining [`DiagramGrid`](#sympy.categories.diagram_drawing.DiagramGrid
    "sympy.categories.diagram_drawing.DiagramGrid") and [`XypicDiagramDrawer`](#sympy.categories.diagram_drawing.XypicDiagramDrawer
    "sympy.categories.diagram_drawing.XypicDiagramDrawer"). Returns an Xy-pic presentation
    of `diagram`. The argument `masked` is a list of morphisms which will be not be
    drawn. The argument `diagram_format` is the format string inserted after “xymatrix”.
    `groups` should be a set of logical groups. The `hints` will be passed directly
    to the constructor of [`DiagramGrid`](#sympy.categories.diagram_drawing.DiagramGrid
    "sympy.categories.diagram_drawing.DiagramGrid").
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 提供了一个快捷方式，结合了 [`DiagramGrid`](#sympy.categories.diagram_drawing.DiagramGrid
    "sympy.categories.diagram_drawing.DiagramGrid") 和 [`XypicDiagramDrawer`](#sympy.categories.diagram_drawing.XypicDiagramDrawer
    "sympy.categories.diagram_drawing.XypicDiagramDrawer")。返回 `diagram` 的 Xy-pic 表示。参数
    `masked` 是一个不绘制的态射列表。参数 `diagram_format` 是插入到“xymatrix”之后的格式字符串。`groups` 应该是一组逻辑组。`hints`
    将直接传递给 [`DiagramGrid`](#sympy.categories.diagram_drawing.DiagramGrid "sympy.categories.diagram_drawing.DiagramGrid")
    的构造函数。
- en: For more information about the arguments, see the docstrings of [`DiagramGrid`](#sympy.categories.diagram_drawing.DiagramGrid
    "sympy.categories.diagram_drawing.DiagramGrid") and `XypicDiagramDrawer.draw`.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 有关参数的更多信息，请参见 [`DiagramGrid`](#sympy.categories.diagram_drawing.DiagramGrid
    "sympy.categories.diagram_drawing.DiagramGrid") 和 `XypicDiagramDrawer.draw` 的文档字符串。
- en: Examples
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE84]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: See also
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`XypicDiagramDrawer`](#sympy.categories.diagram_drawing.XypicDiagramDrawer
    "sympy.categories.diagram_drawing.XypicDiagramDrawer"), [`DiagramGrid`](#sympy.categories.diagram_drawing.DiagramGrid
    "sympy.categories.diagram_drawing.DiagramGrid")'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '[`XypicDiagramDrawer`](#sympy.categories.diagram_drawing.XypicDiagramDrawer
    "sympy.categories.diagram_drawing.XypicDiagramDrawer"), [`DiagramGrid`](#sympy.categories.diagram_drawing.DiagramGrid
    "sympy.categories.diagram_drawing.DiagramGrid")'
- en: '[PRE85]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: Combines the functionality of `xypic_draw_diagram` and `sympy.printing.preview`.
    The arguments `masked`, `diagram_format`, `groups`, and `hints` are passed to
    `xypic_draw_diagram`, while `output`, [PRE86] are passed to `preview`.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 结合了`xypic_draw_diagram`和`sympy.printing.preview`的功能。参数`masked`、`diagram_format`、`groups`和`hints`被传递给`xypic_draw_diagram`，而`output`，[PRE86]被传递给`preview`。
- en: Examples
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE87]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: See also
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`XypicDiagramDrawer`](#sympy.categories.diagram_drawing.XypicDiagramDrawer
    "sympy.categories.diagram_drawing.XypicDiagramDrawer")'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '[`XypicDiagramDrawer`](#sympy.categories.diagram_drawing.XypicDiagramDrawer
    "sympy.categories.diagram_drawing.XypicDiagramDrawer")'
