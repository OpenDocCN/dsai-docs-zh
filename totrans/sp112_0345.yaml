- en: scipy.ndimage.correlate
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.correlate.html#scipy.ndimage.correlate](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.correlate.html#scipy.ndimage.correlate)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Multidimensional correlation.
  prefs: []
  type: TYPE_NORMAL
- en: The array is correlated with the given kernel.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**input**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The input array.
  prefs: []
  type: TYPE_NORMAL
- en: '**weights**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: array of weights, same number of dimensions as input
  prefs: []
  type: TYPE_NORMAL
- en: '**output**array or dtype, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The array in which to place the output, or the dtype of the returned array.
    By default an array of the same dtype as input will be created.
  prefs: []
  type: TYPE_NORMAL
- en: '**mode**{‘reflect’, ‘constant’, ‘nearest’, ‘mirror’, ‘wrap’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'The *mode* parameter determines how the input array is extended beyond its
    boundaries. Default is ‘reflect’. Behavior for each valid value is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: ‘reflect’ (*d c b a | a b c d | d c b a*)
  prefs: []
  type: TYPE_NORMAL
- en: The input is extended by reflecting about the edge of the last pixel. This mode
    is also sometimes referred to as half-sample symmetric.
  prefs: []
  type: TYPE_NORMAL
- en: ‘constant’ (*k k k k | a b c d | k k k k*)
  prefs: []
  type: TYPE_NORMAL
- en: The input is extended by filling all values beyond the edge with the same constant
    value, defined by the *cval* parameter.
  prefs: []
  type: TYPE_NORMAL
- en: ‘nearest’ (*a a a a | a b c d | d d d d*)
  prefs: []
  type: TYPE_NORMAL
- en: The input is extended by replicating the last pixel.
  prefs: []
  type: TYPE_NORMAL
- en: ‘mirror’ (*d c b | a b c d | c b a*)
  prefs: []
  type: TYPE_NORMAL
- en: The input is extended by reflecting about the center of the last pixel. This
    mode is also sometimes referred to as whole-sample symmetric.
  prefs: []
  type: TYPE_NORMAL
- en: ‘wrap’ (*a b c d | a b c d | a b c d*)
  prefs: []
  type: TYPE_NORMAL
- en: The input is extended by wrapping around to the opposite edge.
  prefs: []
  type: TYPE_NORMAL
- en: 'For consistency with the interpolation functions, the following mode names
    can also be used:'
  prefs: []
  type: TYPE_NORMAL
- en: ‘grid-mirror’
  prefs: []
  type: TYPE_NORMAL
- en: This is a synonym for ‘reflect’.
  prefs: []
  type: TYPE_NORMAL
- en: ‘grid-constant’
  prefs: []
  type: TYPE_NORMAL
- en: This is a synonym for ‘constant’.
  prefs: []
  type: TYPE_NORMAL
- en: ‘grid-wrap’
  prefs: []
  type: TYPE_NORMAL
- en: This is a synonym for ‘wrap’.
  prefs: []
  type: TYPE_NORMAL
- en: '**cval**scalar, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Value to fill past edges of input if *mode* is ‘constant’. Default is 0.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**origin**int or sequence, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Controls the placement of the filter on the input array’s pixels. A value of
    0 (the default) centers the filter over the pixel, with positive values shifting
    the filter to the left, and negative ones to the right. By passing a sequence
    of origins with length equal to the number of dimensions of the input array, different
    shifts can be specified along each axis.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**result**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The result of correlation of *input* with *weights*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`convolve`](scipy.ndimage.convolve.html#scipy.ndimage.convolve "scipy.ndimage.convolve")'
  prefs: []
  type: TYPE_NORMAL
- en: Convolve an image with a kernel.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Correlation is the process of moving a filter mask often referred to as kernel
    over the image and computing the sum of products at each location.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Define a kernel (weights) for correlation. In this example, it is for sum of
    center and up, down, left and right next elements.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'We can calculate a correlation result: For example, element `[2,2]` is `7 +
    11 + 12 + 13 + 17 = 60`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
