- en: Kane’s Method & Lagrange’s Method (Docstrings)
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Kane方法与Lagrange方法（文档字符串）
- en: Original text：[https://docs.sympy.org/latest/modules/physics/mechanics/api/kane_lagrange.html](https://docs.sympy.org/latest/modules/physics/mechanics/api/kane_lagrange.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.sympy.org/latest/modules/physics/mechanics/api/kane_lagrange.html](https://docs.sympy.org/latest/modules/physics/mechanics/api/kane_lagrange.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Kane’s method object.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Kane方法对象。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**frame** : ReferenceFrame'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**frame**：参考系'
- en: The inertial reference frame for the system.
  id: totrans-6
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 系统的惯性参考系。
- en: '**q_ind** : iterable of dynamicsymbols'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**q_ind**：动力学符号的可迭代对象。'
- en: Independent generalized coordinates.
  id: totrans-8
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 独立广义坐标。
- en: '**u_ind** : iterable of dynamicsymbols'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**u_ind**：动力学符号的可迭代对象。'
- en: Independent generalized speeds.
  id: totrans-10
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 独立广义速度。
- en: '**kd_eqs** : iterable of Expr, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**kd_eqs**：表达式的可迭代对象，可选。'
- en: Kinematic differential equations, which linearly relate the generalized speeds
    to the time-derivatives of the generalized coordinates.
  id: totrans-12
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 运动学微分方程，将广义速度线性相关到广义坐标的时间导数。
- en: '**q_dependent** : iterable of dynamicsymbols, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**q_dependent**：动力学符号的可迭代对象，可选。'
- en: Dependent generalized coordinates.
  id: totrans-14
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 依赖广义坐标。
- en: '**configuration_constraints** : iterable of Expr, optional'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**configuration_constraints**：表达式的可迭代对象，可选。'
- en: Constraints on the system’s configuration, i.e. holonomic constraints.
  id: totrans-16
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 系统配置的约束，即全息约束。
- en: '**u_dependent** : iterable of dynamicsymbols, optional'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**u_dependent**：动力学符号的可迭代对象，可选。'
- en: Dependent generalized speeds.
  id: totrans-18
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 依赖广义速度。
- en: '**velocity_constraints** : iterable of Expr, optional'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**velocity_constraints**：表达式的可迭代对象，可选。'
- en: Constraints on the system’s velocity, i.e. the combination of the nonholonomic
    constraints and the time-derivative of the holonomic constraints.
  id: totrans-20
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 系统速度的约束，即非全息约束与全息约束时间导数的组合。
- en: '**acceleration_constraints** : iterable of Expr, optional'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**acceleration_constraints**：表达式的可迭代对象，可选。'
- en: Constraints on the system’s acceleration, by default these are the time-derivative
    of the velocity constraints.
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 系统加速度的约束，默认为速度约束的时间导数。
- en: '**u_auxiliary** : iterable of dynamicsymbols, optional'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**u_auxiliary**：动力学符号的可迭代对象，可选。'
- en: Auxiliary generalized speeds.
  id: totrans-24
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 辅助广义速度。
- en: '**bodies** : iterable of Particle and/or RigidBody, optional'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**bodies**：粒子和/或刚体的可迭代对象，可选。'
- en: The particles and rigid bodies in the system.
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 系统中的粒子和刚体。
- en: '**forcelist** : iterable of tuple[Point | ReferenceFrame, Vector], optional'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**forcelist**：元组的可迭代对象，格式为[Point | ReferenceFrame, Vector]，可选。'
- en: Forces and torques applied on the system.
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 施加在系统上的力和力矩。
- en: '**explicit_kinematics** : bool'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**explicit_kinematics**：布尔值'
- en: Boolean whether the mass matrices and forcing vectors should use the explicit
    form (default) or implicit form for kinematics. See the notes for more details.
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 布尔值，指示质量矩阵和迫使向量应使用显式形式（默认）还是隐式形式的运动学。详细信息请参阅备注。
- en: '**kd_eqs_solver** : str, callable'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**kd_eqs_solver**：字符串，可调用对象'
- en: Method used to solve the kinematic differential equations. If a string is supplied,
    it should be a valid method that can be used with the [`sympy.matrices.matrixbase.MatrixBase.solve()`](../../../matrices/matrices.html#sympy.matrices.matrixbase.MatrixBase.solve
    "sympy.matrices.matrixbase.MatrixBase.solve"). If a callable is supplied, it should
    have the format `f(A, rhs)`, where it solves the equations and returns the solution.
    The default utilizes LU solve. See the notes for more information.
  id: totrans-32
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 用于解决运动学微分方程的方法。如果提供了字符串，则应为可用于 [`sympy.matrices.matrixbase.MatrixBase.solve()`](../../../matrices/matrices.html#sympy.matrices.matrixbase.MatrixBase.solve
    "sympy.matrices.matrixbase.MatrixBase.solve") 的有效方法。如果提供了可调用对象，则应具有格式 `f(A, rhs)`，其中解决方程并返回解决方案。默认情况下使用LU解法。更多信息请参阅备注。
- en: '**constraint_solver** : str, callable'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**constraint_solver**：字符串，可调用对象'
- en: Method used to solve the velocity constraints. If a string is supplied, it should
    be a valid method that can be used with the [`sympy.matrices.matrixbase.MatrixBase.solve()`](../../../matrices/matrices.html#sympy.matrices.matrixbase.MatrixBase.solve
    "sympy.matrices.matrixbase.MatrixBase.solve"). If a callable is supplied, it should
    have the format `f(A, rhs)`, where it solves the equations and returns the solution.
    The default utilizes LU solve. See the notes for more information.
  id: totrans-34
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 用于解决速度约束的方法。如果提供了字符串，则应为可用于 [`sympy.matrices.matrixbase.MatrixBase.solve()`](../../../matrices/matrices.html#sympy.matrices.matrixbase.MatrixBase.solve
    "sympy.matrices.matrixbase.MatrixBase.solve") 的有效方法。如果提供了可调用对象，则应具有格式 `f(A, rhs)`，其中解决方程并返回解决方案。默认情况下使用LU解法。更多信息请参阅备注。
- en: Explanation
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'This object is used to do the “book-keeping” as you go through and form equations
    of motion in the way Kane presents in: Kane, T., Levinson, D. Dynamics Theory
    and Applications. 1985 McGraw-Hill'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 此对象用于在进行动力学方程的形成时进行“账务处理”，方式如Kane在《Kane, T., Levinson, D. Dynamics Theory and
    Applications. 1985 McGraw-Hill》中所述。
- en: The attributes are for equations in the form [M] udot = forcing.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 方程的属性是形如[M] udot = forcing。
- en: Notes
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: The mass matrices and forcing vectors related to kinematic equations are given
    in the explicit form by default. In other words, the kinematic mass matrix is
    \(\mathbf{k_{k\dot{q}}} = \mathbf{I}\). In order to get the implicit form of those
    matrices/vectors, you can set the `explicit_kinematics` attribute to `False`.
    So \(\mathbf{k_{k\dot{q}}}\) is not necessarily an identity matrix. This can provide
    more compact equations for non-simple kinematics.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 与运动学方程相关的质量矩阵和作用力矢量默认以显式形式给出。换句话说，运动学质量矩阵为\(\mathbf{k_{k\dot{q}}} = \mathbf{I}\)。为了得到这些矩阵/矢量的隐式形式，您可以将`explicit_kinematics`属性设置为`False`。因此，\(\mathbf{k_{k\dot{q}}}\)不一定是单位矩阵。这可以为非简单运动学提供更紧凑的方程。
- en: 'Two linear solvers can be supplied to `KanesMethod`: one for solving the kinematic
    differential equations and one to solve the velocity constraints. Both of these
    sets of equations can be expressed as a linear system `Ax = rhs`, which have to
    be solved in order to obtain the equations of motion.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 可以为`KanesMethod`提供两个线性求解器：一个用于解决运动微分方程，另一个用于解决速度约束。这两组方程均可表示为线性系统`Ax = rhs`，必须按顺序解决以获取动力学方程。
- en: The default solver `'LU'`, which stands for LU solve, results relatively low
    number of operations. The weakness of this method is that it can result in zero
    division errors.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 默认求解器`'LU'`，即LU求解，操作数相对较低。该方法的弱点在于可能导致零除错误。
- en: If zero divisions are encountered, a possible solver which may solve the problem
    is `"CRAMER"`. This method uses Cramer’s rule to solve the system. This method
    is slower and results in more operations than the default solver. However it only
    uses a single division by default per entry of the solution.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果遇到零除错误，可能的求解器是`"CRAMER"`。该方法使用克拉默法则来解决系统。该方法比默认求解器慢，操作数更多。然而，默认情况下每个解条目仅使用单个除法。
- en: 'While a valid list of solvers can be found at [`sympy.matrices.matrixbase.MatrixBase.solve()`](../../../matrices/matrices.html#sympy.matrices.matrixbase.MatrixBase.solve
    "sympy.matrices.matrixbase.MatrixBase.solve"), it is also possible to supply a
    \(callable\). This way it is possible to use a different solver routine. If the
    kinematic differential equations are not too complex it can be worth it to simplify
    the solution by using `lambda A, b: simplify(Matrix.LUsolve(A, b))`. Another option
    solver one may use is [`sympy.solvers.solveset.linsolve()`](../../../solvers/solveset.html#sympy.solvers.solveset.linsolve
    "sympy.solvers.solveset.linsolve"). This can be done using \(lambda A, b: tuple(linsolve((A,
    b)))[0]\), where we select the first solution as our system should have only one
    unique solution.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '虽然可以在[`sympy.matrices.matrixbase.MatrixBase.solve()`](../../../matrices/matrices.html#sympy.matrices.matrixbase.MatrixBase.solve
    "sympy.matrices.matrixbase.MatrixBase.solve")找到有效的求解器列表，但也可以提供一个\(callable\)。这样可以使用不同的求解器程序。如果运动微分方程不太复杂，可以通过使用`simplify(Matrix.LUsolve(A,
    b))`来简化解决方案。另一个可用的求解器选项是[`sympy.solvers.solveset.linsolve()`](../../../solvers/solveset.html#sympy.solvers.solveset.linsolve
    "sympy.solvers.solveset.linsolve")。这可以通过\(lambda A, b: tuple(linsolve((A, b)))[0]\)来实现，其中我们选择第一个解作为我们的系统应该有唯一解。'
- en: Examples
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: This is a simple example for a one degree of freedom translational spring-mass-damper.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的一自由度平移弹簧-质量-阻尼器的示例。
- en: In this example, we first need to do the kinematics. This involves creating
    generalized speeds and coordinates and their derivatives. Then we create a point
    and set its velocity in a frame.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我们首先需要进行运动学。这涉及创建广义速度和坐标及其导数。然后我们创建一个点并在一个参考系中设置其速度。
- en: '[PRE1]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Next we need to arrange/store information in the way that KanesMethod requires.
    The kinematic differential equations should be an iterable of expressions. A list
    of forces/torques must be constructed, where each entry in the list is a (Point,
    Vector) or (ReferenceFrame, Vector) tuple, where the Vectors represent the Force
    or Torque. Next a particle needs to be created, and it needs to have a point and
    mass assigned to it. Finally, a list of all bodies and particles needs to be created.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们需要按照KanesMethod所需的方式安排/存储信息。运动微分方程应该是表达式的可迭代对象。必须构建一个力/力矩的列表，其中列表中的每个条目都是(Point,
    Vector)或(ReferenceFrame, Vector)元组，其中向量表示力或力矩。接下来需要创建一个质点，并为其分配点和质量。最后，需要创建所有物体和粒子的列表。
- en: '[PRE2]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Finally we can generate the equations of motion. First we create the KanesMethod
    object and supply an inertial frame, coordinates, generalized speeds, and the
    kinematic differential equations. Additional quantities such as configuration
    and motion constraints, dependent coordinates and speeds, and auxiliary speeds
    are also supplied here (see the online documentation). Next we form FR* and FR
    to complete: Fr + Fr* = 0. We have the equations of motion at this point. It makes
    sense to rearrange them though, so we calculate the mass matrix and the forcing
    terms, for E.o.M. in the form: [MM] udot = forcing, where MM is the mass matrix,
    udot is a vector of the time derivatives of the generalized speeds, and forcing
    is a vector representing “forcing” terms.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以生成运动方程。首先创建KanesMethod对象，提供一个惯性参考系、坐标、广义速度和运动微分方程。此处还提供了其他量，如配置和运动约束、依赖坐标和速度、辅助速度（请参阅在线文档）。接下来形成FR*和FR来完成：Fr
    + Fr* = 0。此时我们得到了运动方程。不过，重新排列它们是有意义的，因此我们计算质量矩阵和强迫项，以E.o.M.的形式表示：[MM] udot = forcing，其中MM是质量矩阵，udot是广义速度的时间导数向量，forcing是表示“强迫”项的向量。
- en: '[PRE3]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Please look at the documentation pages for more information on how to perform
    linearization and how to deal with dependent coordinates & speeds, and how do
    deal with bringing non-contributing forces into evidence.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 请查看文档页面，了解如何进行线性化、处理依赖坐标和速度，以及如何处理非贡献力。
- en: Attributes
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 属性
- en: '| q, u | (Matrix) Matrices of the generalized coordinates and speeds |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| q, u | (Matrix) 广义坐标和速度的矩阵 |'
- en: '| bodies | (iterable) Iterable of Particle and RigidBody objects in the system.
    |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| bodies | (iterable) 系统中的粒子和刚体对象的可迭代对象。 |'
- en: '| loads | (iterable) Iterable of (Point, vector) or (ReferenceFrame, vector)
    tuples describing the forces on the system. |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| loads | (iterable) 描述系统上的力的(Point, vector)或(ReferenceFrame, vector)元组的可迭代对象。
    |'
- en: '| auxiliary_eqs | (Matrix) If applicable, the set of auxiliary Kane’s equations
    used to solve for non-contributing forces. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| auxiliary_eqs | (Matrix) 如果适用，用于解算非贡献力的辅助Kane方程集合。 '
- en: '| mass_matrix | (Matrix) The system’s dynamics mass matrix: [k_d; k_dnh] |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| mass_matrix | (Matrix) 系统动力学质量矩阵：[k_d; k_dnh] |'
- en: '| forcing | (Matrix) The system’s dynamics forcing vector: -[f_d; f_dnh] |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| forcing | (Matrix) 系统动力学强迫向量：-[f_d; f_dnh] |'
- en: '| mass_matrix_kin | (Matrix) The “mass matrix” for kinematic differential equations:
    k_kqdot |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| mass_matrix_kin | (Matrix) 运动微分方程的“质量矩阵”：k_kqdot |'
- en: '| forcing_kin | (Matrix) The forcing vector for kinematic differential equations:
    -(k_ku*u + f_k) |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| forcing_kin | (Matrix) 运动微分方程的“强迫向量”：-(k_ku*u + f_k) |'
- en: '| mass_matrix_full | (Matrix) The “mass matrix” for the u’s and q’s with dynamics
    and kinematics |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| mass_matrix_full | (Matrix) 带有动力学和运动学u和q的“质量矩阵” |'
- en: '| forcing_full | (Matrix) The “forcing vector” for the u’s and q’s with dynamics
    and kinematics |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| forcing_full | (Matrix) 带有动力学和运动学u和q的“强迫向量” |'
- en: '[PRE4]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: A matrix containing the auxiliary equations.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 包含辅助方程的矩阵。
- en: '[PRE5]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The forcing vector of the system.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 系统的强迫向量。
- en: '[PRE6]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The forcing vector of the system, augmented by the kinematic differential equations
    in explicit or implicit form.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 系统的强迫向量，由显式或隐式形式的运动微分方程增广。
- en: '[PRE7]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The kinematic “forcing vector” of the system.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 系统的运动“强迫向量”。
- en: '[PRE8]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Method to form Kane’s equations, Fr + Fr* = 0.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 形成Kane方程Fr + Fr* = 0的方法。
- en: 'Parameters:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '参数:'
- en: '**bodies** : iterable'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**bodies** : iterable'
- en: An iterable of all RigidBody’s and Particle’s in the system. A system must have
    at least one body.
  id: totrans-76
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 系统中所有刚体和质点的可迭代对象。系统至少必须有一个物体。
- en: '**loads** : iterable'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**loads** : iterable'
- en: Takes in an iterable of (Particle, Vector) or (ReferenceFrame, Vector) tuples
    which represent the force at a point or torque on a frame. Must be either a non-empty
    iterable of tuples or None which corresponds to a system with no constraints.
  id: totrans-78
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 接受一个 (Particle, Vector) 或 (ReferenceFrame, Vector) 元组的可迭代对象，表示点上的力或框架上的扭矩。必须是一个非空元组的可迭代对象或
    None，对应于没有约束的系统。
- en: Explanation
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Returns (Fr, Fr*). In the case where auxiliary generalized speeds are present
    (say, s auxiliary speeds, o generalized speeds, and m motion constraints) the
    length of the returned vectors will be o - m + s in length. The first o - m equations
    will be the constrained Kane’s equations, then the s auxiliary Kane’s equations.
    These auxiliary equations can be accessed with the auxiliary_eqs property.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 (Fr, Fr*)。在存在辅助广义速度的情况下（例如 s 个辅助速度，o 个广义速度和 m 个运动约束），返回向量的长度将是 o - m + s。前
    o - m 个方程将是约束的 Kane 方程，然后是 s 个辅助 Kane 方程。可以使用 auxiliary_eqs 属性访问这些辅助方程。
- en: '[PRE9]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Returns a dictionary mapping q’ to u.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个将 q’ 映射到 u 的字典。
- en: '[PRE10]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Linearize the equations of motion about a symbolic operating point.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在符号操作点周围线性化运动方程。
- en: 'Parameters:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**new_method**'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**new_method**'
- en: Deprecated, does nothing and will be removed.
  id: totrans-87
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 弃用，无作用并将被移除。
- en: '**linear_solver** : str, callable'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**linear_solver** : str, callable'
- en: Method used to solve the several symbolic linear systems of the form `A*x=b`
    in the linearization process. If a string is supplied, it should be a valid method
    that can be used with the [`sympy.matrices.matrixbase.MatrixBase.solve()`](../../../matrices/matrices.html#sympy.matrices.matrixbase.MatrixBase.solve
    "sympy.matrices.matrixbase.MatrixBase.solve"). If a callable is supplied, it should
    have the format `x = f(A, b)`, where it solves the equations and returns the solution.
    The default is `'LU'` which corresponds to SymPy’s `A.LUsolve(b)`. `LUsolve()`
    is fast to compute but will often result in divide-by-zero and thus `nan` results.
  id: totrans-89
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在线性化过程中用于解决形如`A*x=b`的几个符号线性系统的方法。如果提供了一个字符串，它应该是一个可以与[`sympy.matrices.matrixbase.MatrixBase.solve()`](../../../matrices/matrices.html#sympy.matrices.matrixbase.MatrixBase.solve
    "sympy.matrices.matrixbase.MatrixBase.solve")一起使用的有效方法。如果提供了一个可调用对象，它应具有格式`x =
    f(A, b)`，其中它解决方程并返回解。默认值为`'LU'`，对应于SymPy的`A.LUsolve(b)`。`LUsolve()`计算速度快，但通常会导致除以零并因此得到`nan`结果。
- en: '****kwargs**'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '****kwargs**'
- en: Extra keyword arguments are passed to [`sympy.physics.mechanics.linearize.Linearizer.linearize()`](linearize.html#sympy.physics.mechanics.linearize.Linearizer.linearize
    "sympy.physics.mechanics.linearize.Linearizer.linearize").
  id: totrans-91
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 额外的关键字参数传递给[`sympy.physics.mechanics.linearize.Linearizer.linearize()`](linearize.html#sympy.physics.mechanics.linearize.Linearizer.linearize
    "sympy.physics.mechanics.linearize.Linearizer.linearize")。
- en: Explanation
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: If kwarg A_and_B is False (default), returns M, A, B, r for the linearized form,
    M*[q’, u’]^T = A*[q_ind, u_ind]^T + B*r.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 kwarg A_and_B 为 False（默认），则返回 M、A、B、r，用于线性化形式 M*[q’, u’]^T = A*[q_ind, u_ind]^T
    + B*r。
- en: If kwarg A_and_B is True, returns A, B, r for the linearized form dx = A*x +
    B*r, where x = [q_ind, u_ind]^T. Note that this is computationally intensive if
    there are many symbolic parameters. For this reason, it may be more desirable
    to use the default A_and_B=False, returning M, A, and B. Values may then be substituted
    in to these matrices, and the state space form found as A = P.T*M.inv()*A, B =
    P.T*M.inv()*B, where P = Linearizer.perm_mat.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 kwarg A_and_B 为 True，则返回线性化形式 dx = A*x + B*r 的 A、B、r，其中 x = [q_ind, u_ind]^T。如果有许多符号参数，则计算量大。因此，如果使用默认值
    A_and_B=False，则更希望返回 M、A 和 B。然后可以将值替换到这些矩阵中，并找到状态空间形式 A = P.T*M.inv()*A、B = P.T*M.inv()*B，其中
    P = Linearizer.perm_mat。
- en: In both cases, r is found as all dynamicsymbols in the equations of motion that
    are not part of q, u, q’, or u’. They are sorted in canonical form.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两种情况下，r 是在运动方程中找到的所有不属于 q、u、q’ 或 u’ 的动态符号，它们以规范形式排序。
- en: 'The operating points may be also entered using the `op_point` kwarg. This takes
    a dictionary of {symbol: value}, or a an iterable of such dictionaries. The values
    may be numeric or symbolic. The more values you can specify beforehand, the faster
    this computation will run.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '也可以使用 `op_point` kwarg 输入操作点。这需要一个 {symbol: value} 字典或这样的可迭代对象。值可以是数值或符号。您能事先指定的值越多，计算速度就越快。'
- en: For more documentation, please see the `Linearizer` class.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 更多文档，请参阅`Linearizer`类。
- en: '[PRE11]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The mass matrix of the system.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 系统的质量矩阵。
- en: '[PRE12]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The mass matrix of the system, augmented by the kinematic differential equations
    in explicit or implicit form.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 系统的质量矩阵，通过显式或隐式形式的运动微分方程进行扩展。
- en: '[PRE13]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The kinematic “mass matrix” \(\mathbf{k_{k\dot{q}}}\) of the system.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 系统的运动“质量矩阵” \(\mathbf{k_{k\dot{q}}}\)。
- en: '[PRE14]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Returns the system’s equations of motion in first order form. The output is
    the right hand side of:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 返回第一阶形式的系统运动方程。输出是：
- en: '[PRE15]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The right hand side is what is needed by most numerical ODE integrators.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数数值ODE积分器所需的右手边。
- en: 'Parameters:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**inv_method** : str'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '**inv_method**：str'
- en: The specific sympy inverse matrix calculation method to use. For a list of valid
    methods, see [`inv()`](../../../matrices/matrices.html#sympy.matrices.matrixbase.MatrixBase.inv
    "sympy.matrices.matrixbase.MatrixBase.inv")
  id: totrans-110
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 要使用的具体sympy逆矩阵计算方法。有关有效方法的列表，请参见[`inv()`](../../../matrices/matrices.html#sympy.matrices.matrixbase.MatrixBase.inv
    "sympy.matrices.matrixbase.MatrixBase.inv")
- en: '[PRE16]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Returns an instance of the Linearizer class, initiated from the data in the
    KanesMethod class. This may be more desirable than using the linearize class method,
    as the Linearizer object will allow more efficient recalculation (i.e. about varying
    operating points).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 返回由KanesMethod类中的数据初始化的Linearizer类的实例。这可能比使用linearize类方法更可取，因为Linearizer对象将允许更高效的重新计算（即在不同操作点周围）。
- en: 'Parameters:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**linear_solver** : str, callable'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '**linear_solver**：str，可调用'
- en: Method used to solve the several symbolic linear systems of the form `A*x=b`
    in the linearization process. If a string is supplied, it should be a valid method
    that can be used with the [`sympy.matrices.matrixbase.MatrixBase.solve()`](../../../matrices/matrices.html#sympy.matrices.matrixbase.MatrixBase.solve
    "sympy.matrices.matrixbase.MatrixBase.solve"). If a callable is supplied, it should
    have the format `x = f(A, b)`, where it solves the equations and returns the solution.
    The default is `'LU'` which corresponds to SymPy’s `A.LUsolve(b)`. `LUsolve()`
    is fast to compute but will often result in divide-by-zero and thus `nan` results.
  id: totrans-115
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在线性化过程中用来解决形式为`A*x=b`的几个符号线性系统的方法。如果提供了字符串，它应该是可以与[`sympy.matrices.matrixbase.MatrixBase.solve()`](../../../matrices/matrices.html#sympy.matrices.matrixbase.MatrixBase.solve
    "sympy.matrices.matrixbase.MatrixBase.solve")一起使用的有效方法。如果提供了一个可调用对象，则它应该具有格式`x
    = f(A, b)`，其中它解决方程并返回解。默认值为`'LU'`，对应于SymPy的`A.LUsolve(b)`。`LUsolve()`计算快速但通常会导致除以零，因此结果为`nan`。
- en: 'Returns:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: Linearizer
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Linearizer
- en: An instantiated [`sympy.physics.mechanics.linearize.Linearizer`](linearize.html#sympy.physics.mechanics.linearize.Linearizer
    "sympy.physics.mechanics.linearize.Linearizer").
  id: totrans-118
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一个实例化的[`sympy.physics.mechanics.linearize.Linearizer`](linearize.html#sympy.physics.mechanics.linearize.Linearizer
    "sympy.physics.mechanics.linearize.Linearizer")。
- en: '[PRE17]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Lagrange’s method object.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 拉格朗日方法对象。
- en: Explanation
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This object generates the equations of motion in a two step procedure. The first
    step involves the initialization of LagrangesMethod by supplying the Lagrangian
    and the generalized coordinates, at the bare minimum. If there are any constraint
    equations, they can be supplied as keyword arguments. The Lagrange multipliers
    are automatically generated and are equal in number to the constraint equations.
    Similarly any non-conservative forces can be supplied in an iterable (as described
    below and also shown in the example) along with a ReferenceFrame. This is also
    discussed further in the __init__ method.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 该对象通过两步过程生成运动方程。第一步涉及通过提供最小限度的拉格朗日和广义坐标来初始化LagrangesMethod。如果有任何约束方程，它们可以作为关键字参数提供。拉格朗日乘数会自动生成，并且与约束方程的数量相等。同样，任何非保守力可以与参考框架一起作为可迭代对象（如下所述并在示例中显示）。这也在__init__方法中进一步讨论。
- en: Examples
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: This is a simple example for a one degree of freedom translational spring-mass-damper.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个一自由度传动弹簧-质量-阻尼器的简单示例。
- en: In this example, we first need to do the kinematics. This involves creating
    generalized coordinates and their derivatives. Then we create a point and set
    its velocity in a frame.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们首先需要进行运动学分析。这涉及创建广义坐标及其导数。然后我们创建一个点并在一个参考框架中设置其速度。
- en: '[PRE18]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: We need to then prepare the information as required by LagrangesMethod to generate
    equations of motion. First we create the Particle, which has a point attached
    to it. Following this the lagrangian is created from the kinetic and potential
    energies. Then, an iterable of nonconservative forces/torques must be constructed,
    where each item is a (Point, Vector) or (ReferenceFrame, Vector) tuple, with the
    Vectors representing the nonconservative forces or torques.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 随后需要准备LagrangesMethod所需的信息来生成运动方程。首先创建粒子，其附有一个点。然后，从动能和势能创建拉格朗日量。接下来必须构建非保守力/力矩的可迭代对象，其中每个项是
    (Point, Vector) 或 (ReferenceFrame, Vector) 元组，其中向量表示非保守力或力矩。
- en: '[PRE19]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Finally we can generate the equations of motion. First we create the LagrangesMethod
    object. To do this one must supply the Lagrangian, and the generalized coordinates.
    The constraint equations, the forcelist, and the inertial frame may also be provided,
    if relevant. Next we generate Lagrange’s equations of motion, such that: Lagrange’s
    equations of motion = 0. We have the equations of motion at this point.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 最后我们可以生成运动方程。首先创建LagrangesMethod对象。为此，必须提供拉格朗日量和广义坐标。如果适用，还可以提供约束方程、力列表和惯性参考系。接下来生成拉格朗日运动方程，即：拉格朗日运动方程
    = 0。此时我们得到了运动方程。
- en: '[PRE20]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: We can also solve for the states using the ‘rhs’ method.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用 'rhs' 方法求解状态。
- en: '[PRE21]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Please refer to the docstrings on each method for more details.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考每个方法的文档字符串获取更多细节。
- en: Attributes
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 属性
- en: '| q, u | (Matrix) Matrices of the generalized coordinates and speeds |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| q, u | (矩阵) 广义坐标和速度的矩阵 |'
- en: '| loads | (iterable) Iterable of (Point, vector) or (ReferenceFrame, vector)
    tuples describing the forces on the system. |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| 负载 | (可迭代的) 描述系统受力的 (Point, vector) 或 (ReferenceFrame, vector) 元组。 |'
- en: '| bodies | (iterable) Iterable containing the rigid bodies and particles of
    the system. |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| bodies | (可迭代的) 包含系统的刚体和粒子。 |'
- en: '| mass_matrix | (Matrix) The system’s mass matrix |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| mass_matrix | (矩阵) 系统的质量矩阵 |'
- en: '| forcing | (Matrix) The system’s forcing vector |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| forcing | (矩阵) 系统的迫使向量 |'
- en: '| mass_matrix_full | (Matrix) The “mass matrix” for the qdot’s, qdoubledot’s,
    and the lagrange multipliers (lam) |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| mass_matrix_full | (矩阵) qdot、qdoubledot 和拉格朗日乘子（lam）的“质量矩阵” |'
- en: '| forcing_full | (Matrix) The forcing vector for the qdot’s, qdoubledot’s and
    lagrange multipliers (lam) |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| forcing_full | (矩阵) qdot、qdoubledot 和拉格朗日乘子（lam）的完整迫使向量 |'
- en: '[PRE22]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Returns the forcing vector from ‘lagranges_equations’ method.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 从 'lagranges_equations' 方法返回迫使向量。
- en: '[PRE23]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Augments qdots to the forcing vector above.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 将 qdots 添加到上述迫使向量。
- en: '[PRE24]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Method to form Lagrange’s equations of motion.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 形成拉格朗日运动方程的方法。
- en: Returns a vector of equations of motion using Lagrange’s equations of the second
    kind.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 使用拉格朗日第二类方程返回运动方程的向量。
- en: '[PRE25]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Linearize the equations of motion about a symbolic operating point.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在符号操作点附近线性化运动方程。
- en: 'Parameters:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**linear_solver** : str, callable'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '**线性求解器** : 字符串, 可调用对象'
- en: Method used to solve the several symbolic linear systems of the form `A*x=b`
    in the linearization process. If a string is supplied, it should be a valid method
    that can be used with the [`sympy.matrices.matrixbase.MatrixBase.solve()`](../../../matrices/matrices.html#sympy.matrices.matrixbase.MatrixBase.solve
    "sympy.matrices.matrixbase.MatrixBase.solve"). If a callable is supplied, it should
    have the format `x = f(A, b)`, where it solves the equations and returns the solution.
    The default is `'LU'` which corresponds to SymPy’s `A.LUsolve(b)`. `LUsolve()`
    is fast to compute but will often result in divide-by-zero and thus `nan` results.
  id: totrans-153
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 用于解决线性化过程中形如 `A*x=b` 的多个符号线性系统的方法。如果提供了字符串，则应该是可用于 [`sympy.matrices.matrixbase.MatrixBase.solve()`](../../../matrices/matrices.html#sympy.matrices.matrixbase.MatrixBase.solve
    "sympy.matrices.matrixbase.MatrixBase.solve") 的有效方法之一。如果提供了可调用对象，则其格式应为 `x = f(A,
    b)`，其中它解决方程并返回解。默认为 `'LU'`，对应于SymPy的 `A.LUsolve(b)`。 `LUsolve()` 计算速度快，但通常会导致除以零，从而得到
    `nan` 结果。
- en: '****kwargs**'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '****kwargs**'
- en: Extra keyword arguments are passed to [`sympy.physics.mechanics.linearize.Linearizer.linearize()`](linearize.html#sympy.physics.mechanics.linearize.Linearizer.linearize
    "sympy.physics.mechanics.linearize.Linearizer.linearize").
  id: totrans-155
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 额外的关键字参数传递给 [`sympy.physics.mechanics.linearize.Linearizer.linearize()`](linearize.html#sympy.physics.mechanics.linearize.Linearizer.linearize
    "sympy.physics.mechanics.linearize.Linearizer.linearize")。
- en: Explanation
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: If kwarg A_and_B is False (default), returns M, A, B, r for the linearized form,
    M*[q’, u’]^T = A*[q_ind, u_ind]^T + B*r.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 kwarg A_and_B 为 False（默认值），则返回线性化形式的 M、A、B 和 r，即 M*[q’, u’]^T = A*[q_ind,
    u_ind]^T + B*r。
- en: If kwarg A_and_B is True, returns A, B, r for the linearized form dx = A*x +
    B*r, where x = [q_ind, u_ind]^T. Note that this is computationally intensive if
    there are many symbolic parameters. For this reason, it may be more desirable
    to use the default A_and_B=False, returning M, A, and B. Values may then be substituted
    in to these matrices, and the state space form found as A = P.T*M.inv()*A, B =
    P.T*M.inv()*B, where P = Linearizer.perm_mat.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 如果kwarg A_and_B为True，则返回线性化形式dx = A*x + B*r的A、B、r，其中x = [q_ind, u_ind]^T。请注意，如果有许多符号参数，这在计算上是很密集的。因此，如果A_and_B=False，则更希望返回M、A和B。然后可以将这些矩阵的值代入，并找到状态空间形式，如A
    = P.T*M.inv()*A，B = P.T*M.inv()*B，其中P = Linearizer.perm_mat。
- en: In both cases, r is found as all dynamicsymbols in the equations of motion that
    are not part of q, u, q’, or u’. They are sorted in canonical form.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两种情况下，r被发现为运动方程中的所有动力符号，这些符号不是q、u、q’或u’的一部分。它们以规范形式排序。
- en: 'The operating points may be also entered using the `op_point` kwarg. This takes
    a dictionary of {symbol: value}, or a an iterable of such dictionaries. The values
    may be numeric or symbolic. The more values you can specify beforehand, the faster
    this computation will run.'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '操作点也可以使用`op_point`关键字输入。这需要一个{symbol: value}的字典，或这样的字典的可迭代对象。值可以是数值或符号。您能够预先指定的值越多，这个计算就会越快。'
- en: For more documentation, please see the `Linearizer` class.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 更多文档，请参阅`Linearizer`类。
- en: '[PRE26]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Returns the mass matrix, which is augmented by the Lagrange multipliers, if
    necessary.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 返回mass matrix，如果必要，会增加Lagrange乘子。
- en: Explanation
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: If the system is described by ‘n’ generalized coordinates and there are no constraint
    equations then an n X n matrix is returned.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 如果系统由'n'个广义坐标描述，并且没有约束方程，则返回一个n x n矩阵。
- en: If there are ‘n’ generalized coordinates and ‘m’ constraint equations have been
    supplied during initialization then an n X (n+m) matrix is returned. The (n +
    m - 1)th and (n + m)th columns contain the coefficients of the Lagrange multipliers.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有'n'个广义坐标和'm'个约束方程在初始化期间提供，则返回一个n x (n+m)矩阵。第(n + m - 1)列和第(n + m)列包含Lagrange乘子的系数。
- en: '[PRE27]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Augments the coefficients of qdots to the mass_matrix.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 将qdots的系数增加到mass_matrix中。
- en: '[PRE28]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Returns equations that can be solved numerically.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 返回可以数值解的方程。
- en: 'Parameters:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**inv_method** : str'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '**inv_method**：str'
- en: The specific sympy inverse matrix calculation method to use. For a list of valid
    methods, see [`inv()`](../../../matrices/matrices.html#sympy.matrices.matrixbase.MatrixBase.inv
    "sympy.matrices.matrixbase.MatrixBase.inv")
  id: totrans-173
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 用于计算具体的sympy逆矩阵的方法。有关有效方法的列表，请参见[`inv()`](../../../matrices/matrices.html#sympy.matrices.matrixbase.MatrixBase.inv
    "sympy.matrices.matrixbase.MatrixBase.inv")
- en: '[PRE29]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Solves for the values of the lagrange multipliers symbolically at the specified
    operating point.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在指定的操作点符号地解决Lagrange乘子的值。
- en: 'Parameters:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**op_point** : dict or iterable of dicts, optional'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '**op_point**：dict或字典的可迭代对象，可选'
- en: 'Point at which to solve at. The operating point is specified as a dictionary
    or iterable of dictionaries of {symbol: value}. The value may be numeric or symbolic
    itself.'
  id: totrans-178
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '要解决的点。操作点被指定为{symbol: value}的字典或字典的可迭代对象。该值本身可以是数值或符号。'
- en: '**sol_type** : str, optional'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '**sol_type**：str，可选'
- en: 'Solution return type. Valid options are: - ‘dict’: A dict of {symbol : value}
    (default) - ‘Matrix’: An ordered column matrix of the solution'
  id: totrans-180
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '解决方案返回类型。有效选项为：- ‘dict’：{symbol : value}的字典（默认）- ‘Matrix’：解的有序列矩阵'
- en: '[PRE30]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Returns an instance of the Linearizer class, initiated from the data in the
    LagrangesMethod class. This may be more desirable than using the linearize class
    method, as the Linearizer object will allow more efficient recalculation (i.e.
    about varying operating points).
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个Linearizer类的实例，从LagrangesMethod类中的数据初始化。这可能比使用linearize类方法更可取，因为Linearizer对象将允许更有效的重新计算（即关于不同操作点的变化）。
- en: 'Parameters:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**q_ind, qd_ind** : array_like, optional'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '**q_ind, qd_ind**：array_like，可选'
- en: The independent generalized coordinates and speeds.
  id: totrans-185
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 独立的广义坐标和速度。
- en: '**q_dep, qd_dep** : array_like, optional'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '**q_dep, qd_dep**：array_like，可选'
- en: The dependent generalized coordinates and speeds.
  id: totrans-187
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 依赖的广义坐标和速度。
- en: '**linear_solver** : str, callable'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '**linear_solver**：str，可调用的'
- en: Method used to solve the several symbolic linear systems of the form `A*x=b`
    in the linearization process. If a string is supplied, it should be a valid method
    that can be used with the [`sympy.matrices.matrixbase.MatrixBase.solve()`](../../../matrices/matrices.html#sympy.matrices.matrixbase.MatrixBase.solve
    "sympy.matrices.matrixbase.MatrixBase.solve"). If a callable is supplied, it should
    have the format `x = f(A, b)`, where it solves the equations and returns the solution.
    The default is `'LU'` which corresponds to SymPy’s `A.LUsolve(b)`. `LUsolve()`
    is fast to compute but will often result in divide-by-zero and thus `nan` results.
  id: totrans-189
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 用于在线性化过程中解决形如`A*x=b`的多个符号线性系统的方法。如果提供了一个字符串，则应该是可以与[`sympy.matrices.matrixbase.MatrixBase.solve()`](../../../matrices/matrices.html#sympy.matrices.matrixbase.MatrixBase.solve
    "sympy.matrices.matrixbase.MatrixBase.solve")一起使用的有效方法。如果提供了一个可调用对象，则应该具有`x =
    f(A, b)`的格式，其中它解决方程并返回解。默认值是`'LU'`，对应于SymPy的`A.LUsolve(b)`。`LUsolve()`计算速度快，但通常会导致除零错误，从而得到`nan`结果。
- en: 'Returns:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: Linearizer
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: Linearizer
- en: An instantiated [`sympy.physics.mechanics.linearize.Linearizer`](linearize.html#sympy.physics.mechanics.linearize.Linearizer
    "sympy.physics.mechanics.linearize.Linearizer").
  id: totrans-192
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 已实例化的[`sympy.physics.mechanics.linearize.Linearizer`](linearize.html#sympy.physics.mechanics.linearize.Linearizer
    "sympy.physics.mechanics.linearize.Linearizer")。
