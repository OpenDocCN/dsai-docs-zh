- en: scipy.optimize.Bounds
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.Bounds.html#scipy.optimize.Bounds](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.Bounds.html#scipy.optimize.Bounds)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Bounds constraint on the variables.
  prefs: []
  type: TYPE_NORMAL
- en: 'The constraint has the general inequality form:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: It is possible to use equal bounds to represent an equality constraint or infinite
    bounds to represent a one-sided constraint.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**lb, ub**dense array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Lower and upper bounds on independent variables. *lb*, *ub*, and *keep_feasible*
    must be the same shape or broadcastable. Set components of *lb* and *ub* equal
    to fix a variable. Use `np.inf` with an appropriate sign to disable bounds on
    all or some variables. Note that you can mix constraints of different types: interval,
    one-sided or equality, by setting different components of *lb* and *ub* as necessary.
    Defaults to `lb = -np.inf` and `ub = np.inf` (no bounds).'
  prefs: []
  type: TYPE_NORMAL
- en: '**keep_feasible**dense array_like of bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to keep the constraint components feasible throughout iterations. Must
    be broadcastable with *lb* and *ub*. Default is False. Has no effect for equality
    constraints.
  prefs: []
  type: TYPE_NORMAL
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`residual`](scipy.optimize.Bounds.residual.html#scipy.optimize.Bounds.residual
    "scipy.optimize.Bounds.residual")(x) | Calculate the residual (slack) between
    the input and the bounds |'
  prefs: []
  type: TYPE_TB
