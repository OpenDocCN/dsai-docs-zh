- en: Solve Equations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/guides/solving/index.html](https://docs.sympy.org/latest/guides/solving/index.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The Python package SymPy can symbolically solve equations, differential equations,
    linear equations, nonlinear equations, matrix problems, inequalities, Diophantine
    equations, and evaluate integrals. SymPy can also solve numerically.
  prefs: []
  type: TYPE_NORMAL
- en: The [Solving Guidance](solving-guidance.html) page provides recommendations
    applicable to many types of solving tasks.
  prefs: []
  type: TYPE_NORMAL
- en: 'Learn how to use SymPy computer algebra system to:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Description | Example | Solution |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| [Solve an equation algebraically](solve-equation-algebraically.html) | \(x^2
    = y\) | \(x \in \{-\sqrt{y},\sqrt{y}\}\) |'
  prefs: []
  type: TYPE_TB
- en: '| [Solve a system of equations algebraically](solve-system-of-equations-algebraically.html)
    | \(x^2 + y = 2z, y = -4z\) | \(\{(x = -\sqrt{6z}, y = -4z),\) \({(x = \sqrt{6z},
    y = -4z)\}}\) |'
  prefs: []
  type: TYPE_TB
- en: '| [Solve one or a system of equations numerically](solve-numerically.html)
    | \(\cos(x) = x \) | \( x \approx 0.739085133215161\) |'
  prefs: []
  type: TYPE_TB
- en: '| [Solve an ordinary differential equation algebraically](solve-ode.html) |
    \(y''''(x) + 9y(x)=0 \) | \( y(x)=C_{1} \sin(3x)+ C_{2} \cos(3x)\) |'
  prefs: []
  type: TYPE_TB
- en: '| [Find the roots of a polynomial algebraically or numerically](find-roots-polynomial.html)
    | \( ax^2 + bx + c = 0 \) | \( x = \frac{-b\pm\sqrt{b^2 - 4ac}}{2a} \) |'
  prefs: []
  type: TYPE_TB
- en: '| [Solve a matrix equation algebraically](solve-matrix-equation.html) | \(
    \left[\begin{array}{cc} c & d\\1 & -e\end{array}\right] \left[\begin{array}{cc}
    x\\y\end{array}\right] = \left[\begin{array}{cc} 2\\0\end{array}\right] \) | \(
    \left[\begin{array}{cc} x\\y\end{array}\right] = \left[\begin{array}{cc} \frac{2e}{ce+d}\\\frac{2}{ce+d}\end{array}\right]\)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [Reduce one or a system of inequalities for a single variable algebraically](reduce-inequalities-algebraically.html)
    | \( x^2 < \pi, x > 0 \) | \( 0 < x < \sqrt{\pi} \) |'
  prefs: []
  type: TYPE_TB
- en: '| [Solve a Diophantine equation algebraically](solve-diophantine-equation.html)
    | \(a^2 + b^2 = c^2\) | \((a=2pq, b=p^2-q^2, c=p^2+q^2)\) |'
  prefs: []
  type: TYPE_TB
- en: 'Notes:'
  prefs: []
  type: TYPE_NORMAL
- en: SymPy has a function called [`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve") which is designed to find the solutions of an equation
    or system of equations, or the roots of a function. SymPy [`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve") may or may not be what you need for a particular
    problem, so we recommend you use the links on this page to learn how to “solve”
    your problem.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: While a common, colloquial expression is, for example, “[solve an integral](../../modules/integrals/integrals.html),”
    in SymPy’s terminology it would be “[evaluate an integral](../../modules/integrals/integrals.html).”
    This page does not provide guidance for such tasks. Please search the documentation
    for the type of expression you want to evaluate.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
