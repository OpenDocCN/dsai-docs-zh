- en: scipy.linalg.qr_update
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.qr_update.html#scipy.linalg.qr_update](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.qr_update.html#scipy.linalg.qr_update)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Rank-k QR update
  prefs: []
  type: TYPE_NORMAL
- en: If `A = Q R` is the QR factorization of `A`, return the QR factorization of
    `A + u v**T` for real `A` or `A + u v**H` for complex `A`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Q**(M, M) or (M, N) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Unitary/orthogonal matrix from the qr decomposition of A.
  prefs: []
  type: TYPE_NORMAL
- en: '**R**(M, N) or (N, N) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Upper triangular matrix from the qr decomposition of A.
  prefs: []
  type: TYPE_NORMAL
- en: '**u**(M,) or (M, k) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Left update vector
  prefs: []
  type: TYPE_NORMAL
- en: '**v**(N,) or (N, k) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Right update vector
  prefs: []
  type: TYPE_NORMAL
- en: '**overwrite_qruv**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True, consume Q, R, u, and v, if possible, while performing the update, otherwise
    make copies as necessary. Defaults to False.
  prefs: []
  type: TYPE_NORMAL
- en: '**check_finite**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to check that the input matrix contains only finite numbers. Disabling
    may give a performance gain, but may result in problems (crashes, non-termination)
    if the inputs do contain infinities or NaNs. Default is True.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Q1**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Updated unitary/orthogonal factor
  prefs: []
  type: TYPE_NORMAL
- en: '**R1**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Updated upper triangular factor
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`qr`](scipy.linalg.qr.html#scipy.linalg.qr "scipy.linalg.qr"), [`qr_multiply`](scipy.linalg.qr_multiply.html#scipy.linalg.qr_multiply
    "scipy.linalg.qr_multiply"), [`qr_delete`](scipy.linalg.qr_delete.html#scipy.linalg.qr_delete
    "scipy.linalg.qr_delete"), [`qr_insert`](scipy.linalg.qr_insert.html#scipy.linalg.qr_insert
    "scipy.linalg.qr_insert")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This routine does not guarantee that the diagonal entries of *R1* are real or
    positive.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.16.0.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1]'
  prefs: []
  type: TYPE_NORMAL
- en: Golub, G. H. & Van Loan, C. F. Matrix Computations, 3rd Ed. (Johns Hopkins University
    Press, 1996).
  prefs: []
  type: TYPE_NORMAL
- en: '[2]'
  prefs: []
  type: TYPE_NORMAL
- en: Daniel, J. W., Gragg, W. B., Kaufman, L. & Stewart, G. W. Reorthogonalization
    and stable algorithms for updating the Gram-Schmidt QR factorization. Math. Comput.
    30, 772-795 (1976).
  prefs: []
  type: TYPE_NORMAL
- en: '[3]'
  prefs: []
  type: TYPE_NORMAL
- en: 'Reichel, L. & Gragg, W. B. Algorithm 686: FORTRAN Subroutines for Updating
    the QR Decomposition. ACM Trans. Math. Softw. 16, 369-377 (1990).'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Given this q, r decomposition, perform a rank 1 update.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The update is equivalent, but faster than the following.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Check that we have equivalent results:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'And the updated Q is still unitary:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Updating economic (reduced, thin) decompositions is also possible:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Similarly to the above, perform a rank 2 update.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: This update is also a valid qr decomposition of `A + U V**T`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
