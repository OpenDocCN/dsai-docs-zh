- en: pandas.DataFrame.sort_index
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.sort_index.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.sort_index.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Sort object by labels (along an axis).
  prefs: []
  type: TYPE_NORMAL
- en: Returns a new DataFrame sorted by label if inplace argument is `False`, otherwise
    updates the original DataFrame and returns None.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**{0 or ‘index’, 1 or ‘columns’}, default 0'
  prefs: []
  type: TYPE_NORMAL
- en: The axis along which to sort. The value 0 identifies the rows, and 1 identifies
    the columns.
  prefs: []
  type: TYPE_NORMAL
- en: '**level**int or level name or list of ints or list of level names'
  prefs: []
  type: TYPE_NORMAL
- en: If not None, sort on values in specified index level(s).
  prefs: []
  type: TYPE_NORMAL
- en: '**ascending**bool or list-like of bools, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Sort ascending vs. descending. When the index is a MultiIndex the sort direction
    can be controlled for each level individually.
  prefs: []
  type: TYPE_NORMAL
- en: '**inplace**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to modify the DataFrame rather than creating a new one.
  prefs: []
  type: TYPE_NORMAL
- en: '**kind**{‘quicksort’, ‘mergesort’, ‘heapsort’, ‘stable’}, default ‘quicksort’'
  prefs: []
  type: TYPE_NORMAL
- en: Choice of sorting algorithm. See also [`numpy.sort()`](https://numpy.org/doc/stable/reference/generated/numpy.sort.html#numpy.sort
    "(in NumPy v1.26)") for more information. mergesort and stable are the only stable
    algorithms. For DataFrames, this option is only applied when sorting on a single
    column or label.
  prefs: []
  type: TYPE_NORMAL
- en: '**na_position**{‘first’, ‘last’}, default ‘last’'
  prefs: []
  type: TYPE_NORMAL
- en: Puts NaNs at the beginning if first; last puts NaNs at the end. Not implemented
    for MultiIndex.
  prefs: []
  type: TYPE_NORMAL
- en: '**sort_remaining**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: If True and sorting by level and index is multilevel, sort by other levels too
    (in order) after sorting by specified level.
  prefs: []
  type: TYPE_NORMAL
- en: '**ignore_index**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: If True, the resulting axis will be labeled 0, 1, …, n - 1.
  prefs: []
  type: TYPE_NORMAL
- en: '**key**callable, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If not None, apply the key function to the index values before sorting. This
    is similar to the key argument in the builtin `sorted()` function, with the notable
    difference that this key function should be *vectorized*. It should expect an
    `Index` and return an `Index` of the same shape. For MultiIndex inputs, the key
    is applied *per level*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: DataFrame or None
  prefs: []
  type: TYPE_NORMAL
- en: The original DataFrame sorted by the labels or None if `inplace=True`.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.sort_index`](pandas.Series.sort_index.html#pandas.Series.sort_index
    "pandas.Series.sort_index")'
  prefs: []
  type: TYPE_NORMAL
- en: Sort Series by the index.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.sort_values`](pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values")'
  prefs: []
  type: TYPE_NORMAL
- en: Sort DataFrame by the value.
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.sort_values`](pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values")'
  prefs: []
  type: TYPE_NORMAL
- en: Sort Series by the value.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: By default, it sorts in ascending order, to sort in descending order, use `ascending=False`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: A key function can be specified which is applied to the index before sorting.
    For a `MultiIndex` this is applied to each level separately.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
