- en: numpy.ma.MaskedArray.reshape
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.MaskedArray.reshape.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.MaskedArray.reshape.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: method
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Give a new shape to the array without changing its data.
  prefs: []
  type: TYPE_NORMAL
- en: Returns a masked array containing the same data, but with a new shape. The result
    is a view on the original array; if this is not possible, a ValueError is raised.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**shape**int or tuple of ints'
  prefs: []
  type: TYPE_NORMAL
- en: The new shape should be compatible with the original shape. If an integer is
    supplied, then the result will be a 1-D array of that length.
  prefs: []
  type: TYPE_NORMAL
- en: '**order**{‘C’, ‘F’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Determines whether the array data should be viewed as in C (row-major) or FORTRAN
    (column-major) order.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**reshaped_array**array'
  prefs: []
  type: TYPE_NORMAL
- en: A new view on the array.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`reshape`](numpy.reshape.html#numpy.reshape "numpy.reshape")'
  prefs: []
  type: TYPE_NORMAL
- en: Equivalent function in the masked array module.
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.ndarray.reshape`](numpy.ndarray.reshape.html#numpy.ndarray.reshape
    "numpy.ndarray.reshape")'
  prefs: []
  type: TYPE_NORMAL
- en: Equivalent method on ndarray object.
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.reshape`](numpy.reshape.html#numpy.reshape "numpy.reshape")'
  prefs: []
  type: TYPE_NORMAL
- en: Equivalent function in the NumPy module.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The reshaping operation cannot guarantee that a copy will not be made, to modify
    the shape in place, use `a.shape = s`
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
