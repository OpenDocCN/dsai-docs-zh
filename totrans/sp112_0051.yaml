- en: scipy.fft.rfft2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.rfft2.html#scipy.fft.rfft2](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.rfft2.html#scipy.fft.rfft2)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute the 2-D FFT of a real array.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array'
  prefs: []
  type: TYPE_NORMAL
- en: Input array, taken to be real.
  prefs: []
  type: TYPE_NORMAL
- en: '**s**sequence of ints, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Shape of the FFT.
  prefs: []
  type: TYPE_NORMAL
- en: '**axes**sequence of ints, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axes over which to compute the FFT.
  prefs: []
  type: TYPE_NORMAL
- en: '**norm**{“backward”, “ortho”, “forward”}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Normalization mode (see [`fft`](scipy.fft.fft.html#scipy.fft.fft "scipy.fft.fft")).
    Default is “backward”.
  prefs: []
  type: TYPE_NORMAL
- en: '**overwrite_x**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True, the contents of *x* can be destroyed; the default is False. See [`fft`](scipy.fft.fft.html#scipy.fft.fft
    "scipy.fft.fft") for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '**workers**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Maximum number of workers to use for parallel computation. If negative, the
    value wraps around from `os.cpu_count()`. See [`fft`](scipy.fft.fft.html#scipy.fft.fft
    "scipy.fft.fft") for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '**plan**object, optional'
  prefs: []
  type: TYPE_NORMAL
- en: This argument is reserved for passing in a precomputed plan provided by downstream
    FFT vendors. It is currently not used in SciPy.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.5.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The result of the real 2-D FFT.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`irfft2`](scipy.fft.irfft2.html#scipy.fft.irfft2 "scipy.fft.irfft2")'
  prefs: []
  type: TYPE_NORMAL
- en: The inverse of the 2-D FFT of real input.
  prefs: []
  type: TYPE_NORMAL
- en: '[`rfft`](scipy.fft.rfft.html#scipy.fft.rfft "scipy.fft.rfft")'
  prefs: []
  type: TYPE_NORMAL
- en: The 1-D FFT of real input.
  prefs: []
  type: TYPE_NORMAL
- en: '[`rfftn`](scipy.fft.rfftn.html#scipy.fft.rfftn "scipy.fft.rfftn")'
  prefs: []
  type: TYPE_NORMAL
- en: Compute the N-D discrete Fourier Transform for real input.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This is really just [`rfftn`](scipy.fft.rfftn.html#scipy.fft.rfftn "scipy.fft.rfftn")
    with different default behavior. For more details see [`rfftn`](scipy.fft.rfftn.html#scipy.fft.rfftn
    "scipy.fft.rfftn").
  prefs: []
  type: TYPE_NORMAL
