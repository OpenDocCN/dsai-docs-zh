- en: numpy.argpartition
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.argpartition.html](https://numpy.org/doc/1.26/reference/generated/numpy.argpartition.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Perform an indirect partition along the given axis using the algorithm specified
    by the *kind* keyword. It returns an array of indices of the same shape as *a*
    that index data along the given axis in partitioned order.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.8.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Array to sort.
  prefs: []
  type: TYPE_NORMAL
- en: '**kth**int or sequence of ints'
  prefs: []
  type: TYPE_NORMAL
- en: Element index to partition by. The k-th element will be in its final sorted
    position and all smaller elements will be moved before it and all larger elements
    behind it. The order of all elements in the partitions is undefined. If provided
    with a sequence of k-th it will partition all of them into their sorted position
    at once.
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 1.22.0: Passing booleans as index is deprecated.'
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int or None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axis along which to sort. The default is -1 (the last axis). If None, the flattened
    array is used.
  prefs: []
  type: TYPE_NORMAL
- en: '**kind**{‘introselect’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Selection algorithm. Default is ‘introselect’
  prefs: []
  type: TYPE_NORMAL
- en: '**order**str or list of str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: When *a* is an array with fields defined, this argument specifies which fields
    to compare first, second, etc. A single field can be specified as a string, and
    not all fields need be specified, but unspecified fields will still be used, in
    the order in which they come up in the dtype, to break ties.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**index_array**ndarray, int'
  prefs: []
  type: TYPE_NORMAL
- en: Array of indices that partition *a* along the specified axis. If *a* is one-dimensional,
    `a[index_array]` yields a partitioned *a*. More generally, `np.take_along_axis(a,
    index_array, axis=axis)` always yields the partitioned *a*, irrespective of dimensionality.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`partition`](numpy.partition.html#numpy.partition "numpy.partition")'
  prefs: []
  type: TYPE_NORMAL
- en: Describes partition algorithms used.
  prefs: []
  type: TYPE_NORMAL
- en: '[`ndarray.partition`](numpy.ndarray.partition.html#numpy.ndarray.partition
    "numpy.ndarray.partition")'
  prefs: []
  type: TYPE_NORMAL
- en: Inplace partition.
  prefs: []
  type: TYPE_NORMAL
- en: '[`argsort`](numpy.argsort.html#numpy.argsort "numpy.argsort")'
  prefs: []
  type: TYPE_NORMAL
- en: Full indirect sort.
  prefs: []
  type: TYPE_NORMAL
- en: '[`take_along_axis`](numpy.take_along_axis.html#numpy.take_along_axis "numpy.take_along_axis")'
  prefs: []
  type: TYPE_NORMAL
- en: Apply `index_array` from argpartition to an array as if by calling partition.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: See [`partition`](numpy.partition.html#numpy.partition "numpy.partition") for
    notes on the different selection algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'One dimensional array:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Multi-dimensional array:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
