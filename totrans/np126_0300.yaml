- en: numpy.copy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.copy.html](https://numpy.org/doc/1.26/reference/generated/numpy.copy.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return an array copy of the given object.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input data.
  prefs: []
  type: TYPE_NORMAL
- en: '**order**{‘C’, ‘F’, ‘A’, ‘K’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Controls the memory layout of the copy. ‘C’ means C-order, ‘F’ means F-order,
    ‘A’ means ‘F’ if *a* is Fortran contiguous, ‘C’ otherwise. ‘K’ means match the
    layout of *a* as closely as possible. (Note that this function and [`ndarray.copy`](numpy.ndarray.copy.html#numpy.ndarray.copy
    "numpy.ndarray.copy") are very similar, but have different default values for
    their order= arguments.)
  prefs: []
  type: TYPE_NORMAL
- en: '**subok**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True, then sub-classes will be passed-through, otherwise the returned array
    will be forced to be a base-class array (defaults to False).
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.19.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**arr**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Array interpretation of *a*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`ndarray.copy`](numpy.ndarray.copy.html#numpy.ndarray.copy "numpy.ndarray.copy")'
  prefs: []
  type: TYPE_NORMAL
- en: Preferred method for creating an array copy
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'This is equivalent to:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Create an array x, with a reference y and a copy z:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Note that, when we modify x, y changes, but not z:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Note that, np.copy clears previously set WRITEABLE=False flag.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Note that np.copy is a shallow copy and will not copy object elements within
    arrays. This is mainly important for arrays containing Python objects. The new
    array will contain the same object which may lead to surprises if that object
    can be modified (is mutable):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'To ensure all elements within an `object` array are copied, use [`copy.deepcopy`](https://docs.python.org/3/library/copy.html#copy.deepcopy
    "(in Python v3.11)"):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
