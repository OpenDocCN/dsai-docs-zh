- en: numpy.bincount
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.bincount.html](https://numpy.org/doc/1.26/reference/generated/numpy.bincount.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Count number of occurrences of each value in array of non-negative ints.
  prefs: []
  type: TYPE_NORMAL
- en: The number of bins (of size 1) is one larger than the largest value in *x*.
    If *minlength* is specified, there will be at least this number of bins in the
    output array (though it will be longer if necessary, depending on the contents
    of *x*). Each bin gives the number of occurrences of its index value in *x*. If
    *weights* is specified the input array is weighted by it, i.e. if a value `n`
    is found at position `i`, `out[n] += weight[i]` instead of `out[n] += 1`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like, 1 dimension, nonnegative ints'
  prefs: []
  type: TYPE_NORMAL
- en: Input array.
  prefs: []
  type: TYPE_NORMAL
- en: '**weights**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Weights, array of the same shape as *x*.
  prefs: []
  type: TYPE_NORMAL
- en: '**minlength**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A minimum number of bins for the output array.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.6.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray of ints'
  prefs: []
  type: TYPE_NORMAL
- en: The result of binning the input array. The length of *out* is equal to `np.amax(x)+1`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: ValueError
  prefs: []
  type: TYPE_NORMAL
- en: If the input is not 1-dimensional, or contains elements with negative values,
    or if *minlength* is negative.
  prefs: []
  type: TYPE_NORMAL
- en: TypeError
  prefs: []
  type: TYPE_NORMAL
- en: If the type of the input is float or complex.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`histogram`](numpy.histogram.html#numpy.histogram "numpy.histogram"), [`digitize`](numpy.digitize.html#numpy.digitize
    "numpy.digitize"), [`unique`](numpy.unique.html#numpy.unique "numpy.unique")'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The input array needs to be of integer dtype, otherwise a TypeError is raised:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: A possible use of `bincount` is to perform sums over variable-size chunks of
    an array, using the `weights` keyword.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
