- en: numpy.broadcast_to
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.broadcast_to.html](https://numpy.org/doc/1.26/reference/generated/numpy.broadcast_to.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Broadcast an array to a new shape.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**array**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The array to broadcast.
  prefs: []
  type: TYPE_NORMAL
- en: '**shape**tuple or int'
  prefs: []
  type: TYPE_NORMAL
- en: The shape of the desired array. A single integer `i` is interpreted as `(i,)`.
  prefs: []
  type: TYPE_NORMAL
- en: '**subok**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True, then sub-classes will be passed-through, otherwise the returned array
    will be forced to be a base-class array (default).
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**broadcast**array'
  prefs: []
  type: TYPE_NORMAL
- en: A readonly view on the original array with the given shape. It is typically
    not contiguous. Furthermore, more than one element of a broadcasted array may
    refer to a single memory location.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: ValueError
  prefs: []
  type: TYPE_NORMAL
- en: If the array is not compatible with the new shape according to NumPy’s broadcasting
    rules.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`broadcast`](numpy.broadcast.html#numpy.broadcast "numpy.broadcast")'
  prefs: []
  type: TYPE_NORMAL
- en: '[`broadcast_arrays`](numpy.broadcast_arrays.html#numpy.broadcast_arrays "numpy.broadcast_arrays")'
  prefs: []
  type: TYPE_NORMAL
- en: '[`broadcast_shapes`](numpy.broadcast_shapes.html#numpy.broadcast_shapes "numpy.broadcast_shapes")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.10.0.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
