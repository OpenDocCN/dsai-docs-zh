- en: scipy.interpolate.insert
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.interpolate.insert
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.insert.html#scipy.interpolate.insert](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.insert.html#scipy.interpolate.insert)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.insert.html#scipy.interpolate.insert](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.insert.html#scipy.interpolate.insert)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Insert knots into a B-spline.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Insert knots into a B-spline.
- en: Given the knots and coefficients of a B-spline representation, create a new
    B-spline with a knot inserted *m* times at point *x*. This is a wrapper around
    the FORTRAN routine insert of FITPACK.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Given the knots and coefficients of a B-spline representation, create a new
    B-spline with a knot inserted *m* times at point *x*. This is a wrapper around
    the FORTRAN routine insert of FITPACK.
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 'Parameters:'
- en: '**x (u)**array_like'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**x (u)**array_like'
- en: A 1-D point at which to insert a new knot(s). If *tck* was returned from `splprep`,
    then the parameter values, u should be given.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: A 1-D point at which to insert a new knot(s). If *tck* was returned from `splprep`,
    then the parameter values, u should be given.
- en: '**tck**a [`BSpline`](scipy.interpolate.BSpline.html#scipy.interpolate.BSpline
    "scipy.interpolate.BSpline") instance or a tuple'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**tck**a [`BSpline`](scipy.interpolate.BSpline.html#scipy.interpolate.BSpline
    "scipy.interpolate.BSpline") instance or a tuple'
- en: If tuple, then it is expected to be a tuple (t,c,k) containing the vector of
    knots, the B-spline coefficients, and the degree of the spline.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: If tuple, then it is expected to be a tuple (t,c,k) containing the vector of
    knots, the B-spline coefficients, and the degree of the spline.
- en: '**m**int, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**m**int, optional'
- en: The number of times to insert the given knot (its multiplicity). Default is
    1.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: The number of times to insert the given knot (its multiplicity). Default is
    1.
- en: '**per**int, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**per**int, optional'
- en: If non-zero, the input spline is considered periodic.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: If non-zero, the input spline is considered periodic.
- en: 'Returns:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 'Returns:'
- en: BSpline instance or a tuple
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: BSpline instance or a tuple
- en: A new B-spline with knots t, coefficients c, and degree k. `t(k+1) <= x <= t(n-k)`,
    where k is the degree of the spline. In case of a periodic spline (`per != 0`)
    there must be either at least k interior knots t(j) satisfying `t(k+1)<t(j)<=x`
    or at least k interior knots t(j) satisfying `x<=t(j)<t(n-k)`. A tuple is returned
    iff the input argument *tck* is a tuple, otherwise a BSpline object is constructed
    and returned.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: A new B-spline with knots t, coefficients c, and degree k. `t(k+1) <= x <= t(n-k)`,
    where k is the degree of the spline. In case of a periodic spline (`per != 0`)
    there must be either at least k interior knots t(j) satisfying `t(k+1)<t(j)<=x`
    or at least k interior knots t(j) satisfying `x<=t(j)<t(n-k)`. A tuple is returned
    iff the input argument *tck* is a tuple, otherwise a BSpline object is constructed
    and returned.
- en: Notes
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Notes
- en: Based on algorithms from [[1]](#r3bcffb685bbb-1) and [[2]](#r3bcffb685bbb-2).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Based on algorithms from [[1]](#r3bcffb685bbb-1) and [[2]](#r3bcffb685bbb-2).
- en: Manipulating the tck-tuples directly is not recommended. In new code, prefer
    using the [`BSpline`](scipy.interpolate.BSpline.html#scipy.interpolate.BSpline
    "scipy.interpolate.BSpline") objects.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Manipulating the tck-tuples directly is not recommended. In new code, prefer
    using the [`BSpline`](scipy.interpolate.BSpline.html#scipy.interpolate.BSpline
    "scipy.interpolate.BSpline") objects.
- en: References
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: References
- en: '[[1](#id1)]'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[[1](#id1)]'
- en: W. Boehm, “Inserting new knots into b-spline curves.”, Computer Aided Design,
    12, p.199-201, 1980.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: W. Boehm, “Inserting new knots into b-spline curves.”, Computer Aided Design,
    12, p.199-201, 1980.
- en: '[[2](#id2)]'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[[2](#id2)]'
- en: P. Dierckx, “Curve and surface fitting with splines, Monographs on Numerical
    Analysis”, Oxford University Press, 1993.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: P. Dierckx, “Curve and surface fitting with splines, Monographs on Numerical
    Analysis”, Oxford University Press, 1993.
- en: Examples
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: You can insert knots into a B-spline.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: You can insert knots into a B-spline.
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'A knot is inserted:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 'A knot is inserted:'
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Some knots are inserted:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 'Some knots are inserted:'
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
