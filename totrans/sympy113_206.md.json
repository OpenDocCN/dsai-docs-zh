["```py\nclass sympy.physics.quantum.commutator.Commutator(A, B)\n```", "```py\n>>> from sympy.physics.quantum import Commutator, Dagger, Operator\n>>> from sympy.abc import x, y\n>>> A = Operator('A')\n>>> B = Operator('B')\n>>> C = Operator('C') \n```", "```py\n>>> comm = Commutator(A, B)\n>>> comm\n[A,B]\n>>> comm.doit()\nA*B - B*A \n```", "```py\n>>> comm = Commutator(B, A); comm\n-[A,B] \n```", "```py\n>>> Commutator(3*x*A, x*y*B)\n3*x**2*y*[A,B] \n```", "```py\n>>> Commutator(A+B, C).expand(commutator=True)\n[A,C] + [B,C]\n>>> Commutator(A, B+C).expand(commutator=True)\n[A,B] + [A,C]\n>>> Commutator(A*B, C).expand(commutator=True)\n[A,C]*B + A*[B,C]\n>>> Commutator(A, B*C).expand(commutator=True)\n[A,B]*C + B*[A,C] \n```", "```py\n>>> Dagger(Commutator(A, B))\n-[Dagger(A),Dagger(B)] \n```", "```py\ndoit(**hints)\n```"]