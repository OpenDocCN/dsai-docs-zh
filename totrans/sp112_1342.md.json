["```py\nscipy.stats.median_test(*samples, ties='below', correction=True, lambda_=1, nan_policy='propagate')\n```", "```py\n\"below\":\n    Values equal to the grand median are counted as \"below\".\n\"above\":\n    Values equal to the grand median are counted as \"above\".\n\"ignore\":\n    Values equal to the grand median are not counted. \n```", "```py\nGroup 1: 10 14 14 18 20 22 24 25 31 31 32 39 43 43 48 49\nGroup 2: 28 30 31 33 34 35 36 40 44 55 57 61 91 92 99\nGroup 3:  0  3  9 22 23 25 25 33 34 34 40 45 46 48 62 67 84 \n```", "```py\n>>> g1 = [10, 14, 14, 18, 20, 22, 24, 25, 31, 31, 32, 39, 43, 43, 48, 49]\n>>> g2 = [28, 30, 31, 33, 34, 35, 36, 40, 44, 55, 57, 61, 91, 92, 99]\n>>> g3 = [0, 3, 9, 22, 23, 25, 25, 33, 34, 34, 40, 45, 46, 48, 62, 67, 84]\n>>> from scipy.stats import median_test\n>>> res = median_test(g1, g2, g3) \n```", "```py\n>>> res.median\n34.0 \n```", "```py\n>>> res.table\narray([[ 5, 10,  7],\n [11,  5, 10]]) \n```", "```py\n>>> res.pvalue\n0.12609082774093244 \n```", "```py\n>>> res = median_test(g1, g2, g3, lambda_=\"log-likelihood\")\n>>> res.pvalue\n0.12224779737117837 \n```", "```py\n>>> res = median_test(g1, g2, g3, ties=\"above\")\n>>> res.pvalue\n0.063873276069553273 \n```", "```py\n>>> res.table\narray([[ 5, 11,  9],\n [11,  4,  8]]) \n```"]