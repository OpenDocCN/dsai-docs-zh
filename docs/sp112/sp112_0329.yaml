- en: scipy.linalg.pascal
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.linalg.pascal
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.pascal.html#scipy.linalg.pascal](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.pascal.html#scipy.linalg.pascal)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.pascal.html#scipy.linalg.pascal](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.pascal.html#scipy.linalg.pascal)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Returns the n x n Pascal matrix.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 n x n Pascal 矩阵。
- en: The Pascal matrix is a matrix containing the binomial coefficients as its elements.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Pascal 矩阵是一个包含其元素为二项式系数的矩阵。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 'Parameters:'
- en: '**n**int'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**int'
- en: The size of the matrix to create; that is, the result is an n x n matrix.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: The size of the matrix to create; that is, the result is an n x n matrix.
- en: '**kind**str, optional'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**kind**str, optional'
- en: Must be one of ‘symmetric’, ‘lower’, or ‘upper’. Default is ‘symmetric’.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Must be one of ‘symmetric’, ‘lower’, or ‘upper’. Default is ‘symmetric’.
- en: '**exact**bool, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**exact**bool, optional'
- en: If *exact* is True, the result is either an array of type numpy.uint64 (if n
    < 35) or an object array of Python long integers. If *exact* is False, the coefficients
    in the matrix are computed using [`scipy.special.comb`](scipy.special.comb.html#scipy.special.comb
    "scipy.special.comb") with *exact=False*. The result will be a floating point
    array, and the values in the array will not be the exact coefficients, but this
    version is much faster than *exact=True*.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: If *exact* is True, the result is either an array of type numpy.uint64 (if n
    < 35) or an object array of Python long integers. If *exact* is False, the coefficients
    in the matrix are computed using [`scipy.special.comb`](scipy.special.comb.html#scipy.special.comb
    "scipy.special.comb") with *exact=False*. The result will be a floating point
    array, and the values in the array will not be the exact coefficients, but this
    version is much faster than *exact=True*.
- en: 'Returns:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 'Returns:'
- en: '**p**(n, n) ndarray'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**p**(n, n) ndarray'
- en: The Pascal matrix.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Pascal 矩阵。
- en: See also
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: See also
- en: '[`invpascal`](scipy.linalg.invpascal.html#scipy.linalg.invpascal "scipy.linalg.invpascal")'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[`invpascal`](scipy.linalg.invpascal.html#scipy.linalg.invpascal "scipy.linalg.invpascal")'
- en: Notes
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Notes
- en: See [https://en.wikipedia.org/wiki/Pascal_matrix](https://en.wikipedia.org/wiki/Pascal_matrix)
    for more information about Pascal matrices.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: See [https://en.wikipedia.org/wiki/Pascal_matrix](https://en.wikipedia.org/wiki/Pascal_matrix)
    for more information about Pascal matrices.
- en: New in version 0.11.0.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: New in version 0.11.0.
- en: Examples
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
