- en: numpy.frombuffer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.frombuffer.html](https://numpy.org/doc/1.26/reference/generated/numpy.frombuffer.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Interpret a buffer as a 1-dimensional array.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**buffer**buffer_like'
  prefs: []
  type: TYPE_NORMAL
- en: An object that exposes the buffer interface.
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype**data-type, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Data-type of the returned array; default: float.'
  prefs: []
  type: TYPE_NORMAL
- en: '**count**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Number of items to read. `-1` means all data in the buffer.
  prefs: []
  type: TYPE_NORMAL
- en: '**offset**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Start reading the buffer from this offset (in bytes); default: 0.'
  prefs: []
  type: TYPE_NORMAL
- en: '**like**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Reference object to allow the creation of arrays which are not NumPy arrays.
    If an array-like passed in as `like` supports the `__array_function__` protocol,
    the result will be defined by it. In this case, it ensures the creation of an
    array object compatible with that passed in via this argument.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.20.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`ndarray.tobytes`](numpy.ndarray.tobytes.html#numpy.ndarray.tobytes "numpy.ndarray.tobytes")'
  prefs: []
  type: TYPE_NORMAL
- en: Inverse of this operation, construct Python bytes from the raw data bytes in
    the array.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'If the buffer has data that is not in machine byte-order, this should be specified
    as part of the data-type, e.g.:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The data of the resulting array will not be byteswapped, but will be interpreted
    correctly.
  prefs: []
  type: TYPE_NORMAL
- en: This function creates a view into the original object. This should be safe in
    general, but it may make sense to copy the result when the original object is
    mutable or untrusted.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
