["```py\nfrom numpy.polynomial import Polynomial \n```", "```py\n>>> p1d = np.poly1d([1, 2, 3])\n>>> p = np.polynomial.Polynomial(p1d.coef[::-1]) \n```", "```py\n>>> p1 = np.polynomial.Polynomial([1, 2, 3])\n>>> p1\nPolynomial([1., 2., 3.], domain=[-1,  1], window=[-1,  1], symbol='x')\n>>> p2 = np.polynomial.Polynomial([1, 2, 3], domain=[-2, 2])\n>>> p1 == p2\nFalse\n>>> p1 + p2\nTraceback (most recent call last):\n  ...\nTypeError: Domains differ \n```", "```py\nIn [1]: rng = np.random.default_rng()\n\nIn [2]: x = np.arange(10)\n\nIn [3]: y = np.arange(10) + rng.standard_normal(10) \n```", "```py\nIn [4]: np.polyfit(x, y, deg=1)\nOut[4]: array([0.89217112, 0.20829838]) \n```", "```py\nIn [5]: p_fitted = np.polynomial.Polynomial.fit(x, y, deg=1)\n\nIn [6]: p_fitted\nOut[6]: Polynomial([4.22306843, 4.01477004], domain=[0., 9.], window=[-1.,  1.], symbol='x') \n```", "```py\nIn [7]: p_fitted.convert()\nOut[7]: Polynomial([0.20829838, 0.89217112], domain=[-1.,  1.], window=[-1.,  1.], symbol='x') \n```", "```py\nfrom numpy.polynomial import Polynomial \n```", "```py\n>>> p1d = np.poly1d([1, 2, 3])\n>>> p = np.polynomial.Polynomial(p1d.coef[::-1]) \n```", "```py\n>>> p1 = np.polynomial.Polynomial([1, 2, 3])\n>>> p1\nPolynomial([1., 2., 3.], domain=[-1,  1], window=[-1,  1], symbol='x')\n>>> p2 = np.polynomial.Polynomial([1, 2, 3], domain=[-2, 2])\n>>> p1 == p2\nFalse\n>>> p1 + p2\nTraceback (most recent call last):\n  ...\nTypeError: Domains differ \n```", "```py\nIn [1]: rng = np.random.default_rng()\n\nIn [2]: x = np.arange(10)\n\nIn [3]: y = np.arange(10) + rng.standard_normal(10) \n```", "```py\nIn [4]: np.polyfit(x, y, deg=1)\nOut[4]: array([0.89217112, 0.20829838]) \n```", "```py\nIn [5]: p_fitted = np.polynomial.Polynomial.fit(x, y, deg=1)\n\nIn [6]: p_fitted\nOut[6]: Polynomial([4.22306843, 4.01477004], domain=[0., 9.], window=[-1.,  1.], symbol='x') \n```", "```py\nIn [7]: p_fitted.convert()\nOut[7]: Polynomial([0.20829838, 0.89217112], domain=[-1.,  1.], window=[-1.,  1.], symbol='x') \n```", "```py\nfrom numpy.polynomial import Polynomial \n```", "```py\n>>> p1d = np.poly1d([1, 2, 3])\n>>> p = np.polynomial.Polynomial(p1d.coef[::-1]) \n```", "```py\n>>> p1 = np.polynomial.Polynomial([1, 2, 3])\n>>> p1\nPolynomial([1., 2., 3.], domain=[-1,  1], window=[-1,  1], symbol='x')\n>>> p2 = np.polynomial.Polynomial([1, 2, 3], domain=[-2, 2])\n>>> p1 == p2\nFalse\n>>> p1 + p2\nTraceback (most recent call last):\n  ...\nTypeError: Domains differ \n```", "```py\nIn [1]: rng = np.random.default_rng()\n\nIn [2]: x = np.arange(10)\n\nIn [3]: y = np.arange(10) + rng.standard_normal(10) \n```", "```py\nIn [4]: np.polyfit(x, y, deg=1)\nOut[4]: array([0.89217112, 0.20829838]) \n```", "```py\nIn [5]: p_fitted = np.polynomial.Polynomial.fit(x, y, deg=1)\n\nIn [6]: p_fitted\nOut[6]: Polynomial([4.22306843, 4.01477004], domain=[0., 9.], window=[-1.,  1.], symbol='x') \n```", "```py\nIn [7]: p_fitted.convert()\nOut[7]: Polynomial([0.20829838, 0.89217112], domain=[-1.,  1.], window=[-1.,  1.], symbol='x') \n```"]