- en: numpy.ndarray.flags
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.ndarray.flags
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.flags.html](https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.flags.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.flags.html](https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.flags.html)
- en: attribute
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 属性
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Information about the memory layout of the array.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 数组的内存布局信息。
- en: Notes
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: The [`flags`](#numpy.ndarray.flags "numpy.ndarray.flags") object can be accessed
    dictionary-like (as in `a.flags['WRITEABLE']`), or by using lowercased attribute
    names (as in `a.flags.writeable`). Short flag names are only supported in dictionary
    access.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[`flags`](#numpy.ndarray.flags "numpy.ndarray.flags") 对象可以像字典一样访问（如`a.flags[''WRITEABLE'']`），也可以使用小写属性名称（如`a.flags.writeable`）。只支持字典访问的短标志名称。'
- en: Only the WRITEBACKIFCOPY, WRITEABLE, and ALIGNED flags can be changed by the
    user, via direct assignment to the attribute or dictionary entry, or by calling
    [`ndarray.setflags`](numpy.ndarray.setflags.html#numpy.ndarray.setflags "numpy.ndarray.setflags").
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 只能通过直接分配给属性或字典条目，或通过调用[`ndarray.setflags`](numpy.ndarray.setflags.html#numpy.ndarray.setflags
    "numpy.ndarray.setflags")来更改 WRITEBACKIFCOPY、WRITEABLE 和 ALIGNED 标志。
- en: 'The array flags cannot be set arbitrarily:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 数组的标志不能随意设置：
- en: WRITEBACKIFCOPY can only be set `False`.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WRITEBACKIFCOPY 只能设置为`False`。
- en: ALIGNED can only be set `True` if the data is truly aligned.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有数据真正对齐时，ALIGNED 才能设置为`True`。
- en: WRITEABLE can only be set `True` if the array owns its own memory or the ultimate
    owner of the memory exposes a writeable buffer interface or is a string.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有当数组拥有自己的内存或内存的最终所有者暴露了可写入的缓冲区接口，或者是一个字符串时，WRITEABLE 才能设置为`True`。
- en: Arrays can be both C-style and Fortran-style contiguous simultaneously. This
    is clear for 1-dimensional arrays, but can also be true for higher dimensional
    arrays.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 数组可以同时是 C 风格和 Fortran 风格连续的。这对于 1 维数组是清楚的，但对于更高维数组也可能为真。
- en: Even for contiguous arrays a stride for a given dimension `arr.strides[dim]`
    may be *arbitrary* if `arr.shape[dim] == 1` or the array has no elements. It does
    *not* generally hold that `self.strides[-1] == self.itemsize` for C-style contiguous
    arrays or `self.strides[0] == self.itemsize` for Fortran-style contiguous arrays
    is true.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 即使对于连续的数组，对于给定维度`arr.strides[dim]`的步幅可能是*任意*的，如果`arr.shape[dim] == 1`或数组没有元素。对于
    C 风格连续数组或 Fortran 风格连续数组，通常不成立`self.strides[-1] == self.itemsize`（对于 C 风格连续数组）或`self.strides[0]
    == self.itemsize`（对于 Fortran 风格连续数组）。
- en: 'Attributes:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 属性：
- en: '**C_CONTIGUOUS (C)**'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**C_CONTIGUOUS (C)**'
- en: The data is in a single, C-style contiguous segment.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 数据在一个单一的、符合 C 风格的连续段中。
- en: '**F_CONTIGUOUS (F)**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**F_CONTIGUOUS (F)**'
- en: The data is in a single, Fortran-style contiguous segment.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 数据在一个单一的、符合 Fortran 风格的连续段中。
- en: '**OWNDATA (O)**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**OWNDATA (O)**'
- en: The array owns the memory it uses or borrows it from another object.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 数组拥有它使用的内存或从另一个对象借用它。
- en: '**WRITEABLE (W)**'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**WRITEABLE (W)**'
- en: The data area can be written to. Setting this to False locks the data, making
    it read-only. A view (slice, etc.) inherits WRITEABLE from its base array at creation
    time, but a view of a writeable array may be subsequently locked while the base
    array remains writeable. (The opposite is not true, in that a view of a locked
    array may not be made writeable. However, currently, locking a base object does
    not lock any views that already reference it, so under that circumstance it is
    possible to alter the contents of a locked array via a previously created writeable
    view onto it.) Attempting to change a non-writeable array raises a RuntimeError
    exception.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 数据区域可以被写入。将其设置为 False 会锁定数据，使之为只读。视图（切片等）在创建时从其基础数组继承 WRITEABLE，但对于可写数组的视图可以随后被锁定，而基础数组保持可写。
    （相反则不成立，即不能将视图从只读数组改为可写。但是，目前锁定基对象不会锁定已引用它的任何视图，因此在这种情况下，通过之前创建的视图可以更改被锁定数组的内容。）尝试更改不可写数组会引发
    RuntimeError 异常。
- en: '**ALIGNED (A)**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**ALIGNED (A)**'
- en: The data and all elements are aligned appropriately for the hardware.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 数据和所有元素都与硬件适当地对齐。
- en: '**WRITEBACKIFCOPY (X)**'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**WRITEBACKIFCOPY (X)**'
- en: This array is a copy of some other array. The C-API function PyArray_ResolveWritebackIfCopy
    must be called before deallocating to the base array will be updated with the
    contents of this array.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数组是另一个数组的副本。在释放内存之前必须调用 C-API 函数 PyArray_ResolveWritebackIfCopy，以便将基础数组更新为此数组的内容。
- en: '**FNC**'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**FNC**'
- en: F_CONTIGUOUS and not C_CONTIGUOUS.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: F_CONTIGUOUS 而不是 C_CONTIGUOUS。
- en: '**FORC**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**FORC**'
- en: F_CONTIGUOUS or C_CONTIGUOUS (one-segment test).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: F_CONTIGUOUS 或 C_CONTIGUOUS���单一段测试）。
- en: '**BEHAVED (B)**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**BEHAVED (B)**'
- en: ALIGNED and WRITEABLE.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: ALIGNED 和 WRITEABLE。
- en: '**CARRAY (CA)**'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**CARRAY (CA)**'
- en: BEHAVED and C_CONTIGUOUS.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: BEHAVED 和 C_CONTIGUOUS。
- en: '**FARRAY (FA)**'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**FARRAY (FA)**'
- en: BEHAVED and F_CONTIGUOUS and not C_CONTIGUOUS.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: BEHAVED 和 F_CONTIGUOUS，但不是 C_CONTIGUOUS。
