- en: scipy.linalg.solve_circulant
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.linalg.solve_circulant
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.solve_circulant.html#scipy.linalg.solve_circulant](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.solve_circulant.html#scipy.linalg.solve_circulant)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.solve_circulant.html#scipy.linalg.solve_circulant](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.solve_circulant.html#scipy.linalg.solve_circulant)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Solve C x = b for x, where C is a circulant matrix.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 解决 C x = b，其中 C 是循环矩阵。
- en: '*C* is the circulant matrix associated with the vector *c*.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '*C*是与向量*c*相关联的循环矩阵。'
- en: 'The system is solved by doing division in Fourier space. The calculation is:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在Fourier空间进行除法来解决系统。计算方法如下：
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: where *fft* and *ifft* are the fast Fourier transform and its inverse, respectively.
    For a large vector *c*, this is *much* faster than solving the system with the
    full circulant matrix.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 其中*fft*和*ifft*分别是快速傅里叶变换及其逆变换。对于一个大向量*c*，这比使用完整的循环矩阵解系统要*快得多*。
- en: 'Parameters:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**c**array_like'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**c**类似数组'
- en: The coefficients of the circulant matrix.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 循环矩阵的系数。
- en: '**b**array_like'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**b**类似数组'
- en: Right-hand side matrix in `a x = b`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '`a x = b`中的右手边矩阵。'
- en: '**singular**str, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**singular**字符串，可选'
- en: This argument controls how a near singular circulant matrix is handled. If *singular*
    is “raise” and the circulant matrix is near singular, a [`LinAlgError`](scipy.linalg.LinAlgError.html#scipy.linalg.LinAlgError
    "scipy.linalg.LinAlgError") is raised. If *singular* is “lstsq”, the least squares
    solution is returned. Default is “raise”.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 此参数控制如何处理接近奇异的循环矩阵。如果*singular*为“raise”且循环矩阵接近奇异，则会引发[`LinAlgError`](scipy.linalg.LinAlgError.html#scipy.linalg.LinAlgError
    "scipy.linalg.LinAlgError")。如果*singular*为“lstsq”，则返回最小二乘解。默认为“raise”。
- en: '**tol**float, optional'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**tol**浮点数，可选'
- en: 'If any eigenvalue of the circulant matrix has an absolute value that is less
    than or equal to *tol*, the matrix is considered to be near singular. If not given,
    *tol* is set to:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果循环矩阵的任何特征值的绝对值小于或等于*tol*，则矩阵被视为接近奇异。如果未给出，*tol*被设置为：
- en: '[PRE2]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: where *abs_eigs* is the array of absolute values of the eigenvalues of the circulant
    matrix.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 其中*abs_eigs*是循环矩阵特征值的绝对值数组。
- en: '**caxis**int'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**caxis**整数'
- en: When *c* has dimension greater than 1, it is viewed as a collection of circulant
    vectors. In this case, *caxis* is the axis of *c* that holds the vectors of circulant
    coefficients.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当*c*的维度大于1时，它被视为循环向量的集合。在这种情况下，*caxis*是保持循环系数向量的*c*的轴。
- en: '**baxis**int'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**baxis**整数'
- en: When *b* has dimension greater than 1, it is viewed as a collection of vectors.
    In this case, *baxis* is the axis of *b* that holds the right-hand side vectors.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当*b*的维度大于1时，它被视为向量的集合。在这种情况下，*baxis*是保持右侧向量的*b*的轴。
- en: '**outaxis**int'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**outaxis**整数'
- en: When *c* or *b* are multidimensional, the value returned by [`solve_circulant`](#scipy.linalg.solve_circulant
    "scipy.linalg.solve_circulant") is multidimensional. In this case, *outaxis* is
    the axis of the result that holds the solution vectors.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 当*c*或*b*是多维的时，由[`solve_circulant`](#scipy.linalg.solve_circulant "scipy.linalg.solve_circulant")返回的值也是多维的。在这种情况下，*outaxis*是结果中保存解向量的轴。
- en: 'Returns:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**x**ndarray'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**数组'
- en: Solution to the system `C x = b`.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 解决系统`C x = b`。
- en: 'Raises:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: LinAlgError
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 线性代数错误
- en: If the circulant matrix associated with *c* is near singular.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果与*c*相关联的循环矩阵接近奇异。
- en: See also
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`circulant`](scipy.linalg.circulant.html#scipy.linalg.circulant "scipy.linalg.circulant")'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[`circulant`](scipy.linalg.circulant.html#scipy.linalg.circulant "scipy.linalg.circulant")'
- en: circulant matrix
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 循环矩阵
- en: Notes
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: For a 1-D vector *c* with length *m*, and an array *b* with shape `(m, ...)`,
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 对于长度为*m*的一维向量*c*，和形状为`(m, ...)`的数组*b*，
- en: solve_circulant(c, b)
  id: totrans-36
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: solve_circulant(c, b)
- en: returns the same result as
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与相同的结果
- en: solve(circulant(c), b)
  id: totrans-38
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: solve(circulant(c), b)
- en: where [`solve`](scipy.linalg.solve.html#scipy.linalg.solve "scipy.linalg.solve")
    and [`circulant`](scipy.linalg.circulant.html#scipy.linalg.circulant "scipy.linalg.circulant")
    are from [`scipy.linalg`](../linalg.html#module-scipy.linalg "scipy.linalg").
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 其中[`solve`](scipy.linalg.solve.html#scipy.linalg.solve "scipy.linalg.solve")和[`circulant`](scipy.linalg.circulant.html#scipy.linalg.circulant
    "scipy.linalg.circulant")来自[`scipy.linalg`](../linalg.html#module-scipy.linalg
    "scipy.linalg")。
- en: New in version 0.16.0.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 版本0.16.0中的新功能。
- en: Examples
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Compare that result to solving the system with [`scipy.linalg.solve`](scipy.linalg.solve.html#scipy.linalg.solve
    "scipy.linalg.solve"):'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 将该结果与使用[`scipy.linalg.solve`](scipy.linalg.solve.html#scipy.linalg.solve "scipy.linalg.solve")解决系统进行比较：
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'A singular example:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 一个奇异的例子：
- en: '[PRE6]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Calling `solve_circulant(c, b)` will raise a [`LinAlgError`](scipy.linalg.LinAlgError.html#scipy.linalg.LinAlgError
    "scipy.linalg.LinAlgError"). For the least square solution, use the option `singular=''lstsq''`:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 调用 `solve_circulant(c, b)` 将引发 [`LinAlgError`](scipy.linalg.LinAlgError.html#scipy.linalg.LinAlgError
    "scipy.linalg.LinAlgError")。对于最小二乘解法，请使用选项 `singular='lstsq'`：
- en: '[PRE7]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Compare to [`scipy.linalg.lstsq`](scipy.linalg.lstsq.html#scipy.linalg.lstsq
    "scipy.linalg.lstsq"):'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 与 [`scipy.linalg.lstsq`](scipy.linalg.lstsq.html#scipy.linalg.lstsq "scipy.linalg.lstsq")
    进行比较：
- en: '[PRE8]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'A broadcasting example:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 广播示例：
- en: Suppose we have the vectors of two circulant matrices stored in an array with
    shape (2, 5), and three *b* vectors stored in an array with shape (3, 5). For
    example,
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有存储在形状为（2，5）的数组中的两个循环矩阵的向量，并且存储在形状为（3，5）的数组中的三个*b*向量。例如，
- en: '[PRE9]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'We want to solve all combinations of circulant matrices and *b* vectors, with
    the result stored in an array with shape (2, 3, 5). When we disregard the axes
    of *c* and *b* that hold the vectors of coefficients, the shapes of the collections
    are (2,) and (3,), respectively, which are not compatible for broadcasting. To
    have a broadcast result with shape (2, 3), we add a trivial dimension to *c*:
    `c[:, np.newaxis, :]` has shape (2, 1, 5). The last dimension holds the coefficients
    of the circulant matrices, so when we call [`solve_circulant`](#scipy.linalg.solve_circulant
    "scipy.linalg.solve_circulant"), we can use the default `caxis=-1`. The coefficients
    of the *b* vectors are in the last dimension of the array *b*, so we use `baxis=-1`.
    If we use the default *outaxis*, the result will have shape (5, 2, 3), so we’ll
    use `outaxis=-1` to put the solution vectors in the last dimension.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望解决所有循环矩阵和*b*向量的组合，并将结果存储在形状为（2，3，5）的数组中。当我们忽略保存系数向量的*c*和*b*轴时，集合的形状分别为（2，）和（3，），这两者在广播时不兼容。为了获得形状为（2，3）的广播结果，我们向*c*添加一个无关紧要的维度：`c[:,
    np.newaxis, :]` 的形状为（2，1，5）。最后一个维度保存循环矩阵的系数，因此当我们调用 [`solve_circulant`](#scipy.linalg.solve_circulant
    "scipy.linalg.solve_circulant") 时，可以使用默认的 `caxis=-1`。*b*向量的系数位于数组*b*的最后一个维度中，因此我们使用
    `baxis=-1`。如果使用默认的 *outaxis*，则结果将具有形状（5，2，3），因此我们将使用 `outaxis=-1` 将解向量放在最后一个维度中。
- en: '[PRE10]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Check by solving one pair of *c* and *b* vectors (cf. `x[1, 1, :]`):'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 通过解决一对*c*和*b*向量来检查（参见 `x[1, 1, :]`）：
- en: '[PRE11]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
