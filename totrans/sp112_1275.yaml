- en: scipy.stats.gstd
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.gstd.html#scipy.stats.gstd](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.gstd.html#scipy.stats.gstd)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Calculate the geometric standard deviation of an array.
  prefs: []
  type: TYPE_NORMAL
- en: The geometric standard deviation describes the spread of a set of numbers where
    the geometric mean is preferred. It is a multiplicative factor, and so a dimensionless
    quantity.
  prefs: []
  type: TYPE_NORMAL
- en: 'It is defined as the exponent of the standard deviation of `log(a)`. Mathematically
    the population geometric standard deviation can be evaluated as:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: New in version 1.3.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: An array like object containing the sample data.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int, tuple or None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axis along which to operate. Default is 0\. If None, compute over the whole
    array *a*.
  prefs: []
  type: TYPE_NORMAL
- en: '**ddof**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Degree of freedom correction in the calculation of the geometric standard deviation.
    Default is 1.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**gstd**ndarray or float'
  prefs: []
  type: TYPE_NORMAL
- en: An array of the geometric standard deviation. If *axis* is None or *a* is a
    1d array a float is returned.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`gmean`](scipy.stats.gmean.html#scipy.stats.gmean "scipy.stats.gmean")'
  prefs: []
  type: TYPE_NORMAL
- en: Geometric mean
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.std`](https://numpy.org/devdocs/reference/generated/numpy.std.html#numpy.std
    "(in NumPy v2.0.dev0)")'
  prefs: []
  type: TYPE_NORMAL
- en: Standard deviation
  prefs: []
  type: TYPE_NORMAL
- en: '[`gzscore`](scipy.stats.gzscore.html#scipy.stats.gzscore "scipy.stats.gzscore")'
  prefs: []
  type: TYPE_NORMAL
- en: Geometric standard score
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: As the calculation requires the use of logarithms the geometric standard deviation
    only supports strictly positive values. Any non-positive or infinite values will
    raise a *ValueError*. The geometric standard deviation is sometimes confused with
    the exponent of the standard deviation, `exp(std(a))`. Instead the geometric standard
    deviation is `exp(std(log(a)))`. The default value for *ddof* is different to
    the default value (0) used by other ddof containing functions, such as `np.std`
    and `np.nanstd`.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1]'
  prefs: []
  type: TYPE_NORMAL
- en: “Geometric standard deviation”, *Wikipedia*, [https://en.wikipedia.org/wiki/Geometric_standard_deviation](https://en.wikipedia.org/wiki/Geometric_standard_deviation).
  prefs: []
  type: TYPE_NORMAL
- en: '[2]'
  prefs: []
  type: TYPE_NORMAL
- en: Kirkwood, T. B., “Geometric means and measures of dispersion”, Biometrics, vol.
    35, pp. 908-909, 1979
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Find the geometric standard deviation of a log-normally distributed sample.
    Note that the standard deviation of the distribution is one, on a log scale this
    evaluates to approximately `exp(1)`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Compute the geometric standard deviation of a multidimensional array and of
    a given axis.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The geometric standard deviation further handles masked arrays.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
