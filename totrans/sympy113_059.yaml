- en: Polyhedron
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/combinatorics/polyhedron.html](https://docs.sympy.org/latest/modules/combinatorics/polyhedron.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Represents the polyhedral symmetry group (PSG).
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: 'The PSG is one of the symmetry groups of the Platonic solids. There are three
    polyhedral groups: the tetrahedral group of order 12, the octahedral group of
    order 24, and the icosahedral group of order 60.'
  prefs: []
  type: TYPE_NORMAL
- en: All doctests have been given in the docstring of the constructor of the object.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[R92](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://mathworld.wolfram.com/PolyhedralGroup.html](https://mathworld.wolfram.com/PolyhedralGroup.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Return the indices of the corners.
  prefs: []
  type: TYPE_NORMAL
- en: The indices are given relative to the original position of corners.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`corners`](#sympy.combinatorics.polyhedron.Polyhedron.corners "sympy.combinatorics.polyhedron.Polyhedron.corners"),
    [`cyclic_form`](#sympy.combinatorics.polyhedron.Polyhedron.cyclic_form "sympy.combinatorics.polyhedron.Polyhedron.cyclic_form")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Get the corners of the Polyhedron.
  prefs: []
  type: TYPE_NORMAL
- en: The method `vertices` is an alias for `corners`.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`array_form`](#sympy.combinatorics.polyhedron.Polyhedron.array_form "sympy.combinatorics.polyhedron.Polyhedron.array_form"),
    [`cyclic_form`](#sympy.combinatorics.polyhedron.Polyhedron.cyclic_form "sympy.combinatorics.polyhedron.Polyhedron.cyclic_form")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Return the indices of the corners in cyclic notation.
  prefs: []
  type: TYPE_NORMAL
- en: The indices are given relative to the original position of corners.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`corners`](#sympy.combinatorics.polyhedron.Polyhedron.corners "sympy.combinatorics.polyhedron.Polyhedron.corners"),
    [`array_form`](#sympy.combinatorics.polyhedron.Polyhedron.array_form "sympy.combinatorics.polyhedron.Polyhedron.array_form")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Given the faces of the polyhedra we can get the edges.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Get the faces of the Polyhedron.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Get the permutations of the Polyhedron.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Return corners to their original positions.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Apply a permutation to the polyhedron *in place*. The permutation may be given
    as a Permutation instance or an integer indicating which permutation from pgroup
    of the Polyhedron should be applied.
  prefs: []
  type: TYPE_NORMAL
- en: This is an operation that is analogous to rotation about an axis by a fixed
    increment.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: When a Permutation is applied, no check is done to see if that is a valid permutation
    for the Polyhedron. For example, a cube could be given a permutation which effectively
    swaps only 2 vertices. A valid permutation (that rotates the object in a physical
    way) will be obtained if one only uses permutations from the `pgroup` of the Polyhedron.
    On the other hand, allowing arbitrary rotations (applications of permutations)
    gives a way to follow named elements rather than indices since Polyhedron allows
    vertices to be named while Permutation works only with indices.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'A non-physical “rotation” that is not prohibited by this method:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Polyhedron can be used to follow elements of set that are identified by letters
    instead of integers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Get the number of corners of the Polyhedron.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Get the corners of the Polyhedron.
  prefs: []
  type: TYPE_NORMAL
- en: The method `vertices` is an alias for `corners`.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`array_form`](#sympy.combinatorics.polyhedron.Polyhedron.array_form "sympy.combinatorics.polyhedron.Polyhedron.array_form"),
    [`cyclic_form`](#sympy.combinatorics.polyhedron.Polyhedron.cyclic_form "sympy.combinatorics.polyhedron.Polyhedron.cyclic_form")'
  prefs: []
  type: TYPE_NORMAL
