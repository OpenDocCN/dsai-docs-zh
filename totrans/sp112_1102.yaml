- en: scipy.special.logsumexp
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.logsumexp.html#scipy.special.logsumexp](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.logsumexp.html#scipy.special.logsumexp)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute the log of the sum of exponentials of input elements.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input array.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**None or int or tuple of ints, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axis or axes over which the sum is taken. By default *axis* is None, and all
    elements are summed.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.11.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**b**array-like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Scaling factor for exp(*a*) must be of the same shape as *a* or broadcastable
    to *a*. These values may be negative in order to implement subtraction.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.12.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**keepdims**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If this is set to True, the axes which are reduced are left in the result as
    dimensions with size one. With this option, the result will broadcast correctly
    against the original array.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.15.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**return_sign**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If this is set to True, the result will be a pair containing sign information;
    if False, results that are negative will be returned as NaN. Default is False
    (no sign information).
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.16.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**res**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The result, `np.log(np.sum(np.exp(a)))` calculated in a numerically more stable
    way. If *b* is given then `np.log(np.sum(b*np.exp(a)))` is returned.
  prefs: []
  type: TYPE_NORMAL
- en: '**sgn**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: If return_sign is True, this will be an array of floating-point numbers matching
    res and +1, 0, or -1 depending on the sign of the result. If False, only one result
    is returned.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.logaddexp`](https://numpy.org/devdocs/reference/generated/numpy.logaddexp.html#numpy.logaddexp
    "(in NumPy v2.0.dev0)"), [`numpy.logaddexp2`](https://numpy.org/devdocs/reference/generated/numpy.logaddexp2.html#numpy.logaddexp2
    "(in NumPy v2.0.dev0)")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: NumPy has a logaddexp function which is very similar to [`logsumexp`](#scipy.special.logsumexp
    "scipy.special.logsumexp"), but only handles two arguments. *logaddexp.reduce*
    is similar to this function, but may be less stable.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: With weights
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Returning a sign flag
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Notice that [`logsumexp`](#scipy.special.logsumexp "scipy.special.logsumexp")
    does not directly support masked arrays. To use it on a masked array, convert
    the mask into zero weights:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
