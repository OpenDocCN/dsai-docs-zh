["```py\n>>> from sympy.physics.mechanics import *\n>>> mechanics_printing(pretty_print=False)\n>>> q, u = dynamicsymbols('q, u')\n>>> parent = RigidBody('parent')\n>>> child = RigidBody('child')\n>>> joint = PinJoint(\n...     'hinge', parent, child, coordinates=q, speeds=u,\n...     parent_point=3 * parent.frame.x,\n...     child_point=-3 * child.frame.x,\n...     joint_axis=parent.frame.z)\n>>> joint.kdes\nMatrix([[u - q']])\n>>> joint.parent_point.pos_from(parent.masscenter)\n3*parent_frame.x\n>>> joint.parent_interframe\nparent_frame\n>>> joint.joint_axis.express(child.frame)\nchild_frame.z\n>>> child.masscenter.pos_from(parent.masscenter)\n3*parent_frame.x + 3*child_frame.x\n>>> child.masscenter.vel(parent.frame)\n3*u*child_frame.y \n```", "```py\n>>> system = System.from_newtonian(parent)\n>>> system.add_joints(joint)\n>>> system.form_eoms()\nMatrix([[-(child_izz + 9*child_mass)*u']])\n>>> type(system.eom_method)  # The method working in the backend\n<class 'sympy.physics.mechanics.kane.KanesMethod'> \n```"]