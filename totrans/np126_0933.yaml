- en: numpy.deprecate
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.deprecate.html](https://numpy.org/doc/1.26/reference/generated/numpy.deprecate.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Issues a DeprecationWarning, adds warning to *old_name*’s docstring, rebinds
    `old_name.__name__` and returns the new function object.
  prefs: []
  type: TYPE_NORMAL
- en: This function may also be used as a decorator.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**func**function'
  prefs: []
  type: TYPE_NORMAL
- en: The function to be deprecated.
  prefs: []
  type: TYPE_NORMAL
- en: '**old_name**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The name of the function to be deprecated. Default is None, in which case the
    name of *func* is used.
  prefs: []
  type: TYPE_NORMAL
- en: '**new_name**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The new name for the function. Default is None, in which case the deprecation
    message is that *old_name* is deprecated. If given, the deprecation message is
    that *old_name* is deprecated and *new_name* should be used instead.
  prefs: []
  type: TYPE_NORMAL
- en: '**message**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Additional explanation of the deprecation. Displayed in the docstring after
    the warning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**old_func**function'
  prefs: []
  type: TYPE_NORMAL
- en: The deprecated function.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that `olduint` returns a value after printing Deprecation Warning:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
