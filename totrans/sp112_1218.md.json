["```py\nscipy.stats.dirichlet = <scipy.stats._multivariate.dirichlet_gen object>\n```", "```py\n>>> import numpy as np\n>>> from scipy.stats import dirichlet \n```", "```py\n>>> quantiles = np.array([0.2, 0.2, 0.6])  # specify quantiles\n>>> alpha = np.array([0.4, 5, 15])  # specify concentration parameters\n>>> dirichlet.pdf(quantiles, alpha)\n0.2843831684937255 \n```", "```py\n>>> dirichlet.logpdf(quantiles, alpha)\n-1.2574327653159187 \n```", "```py\n>>> dirichlet.mean(alpha)  # get the mean of the distribution\narray([0.01960784, 0.24509804, 0.73529412])\n>>> dirichlet.var(alpha) # get variance\narray([0.00089829, 0.00864603, 0.00909517])\n>>> dirichlet.entropy(alpha)  # calculate the differential entropy\n-4.3280162474082715 \n```", "```py\n>>> dirichlet.rvs(alpha, size=1, random_state=1)\narray([[0.00766178, 0.24670518, 0.74563305]])\n>>> dirichlet.rvs(alpha, size=2, random_state=2)\narray([[0.01639427, 0.1292273 , 0.85437844],\n [0.00156917, 0.19033695, 0.80809388]]) \n```", "```py\n>>> rv = dirichlet(alpha)\n>>> # Frozen object with the same methods but holding the given\n>>> # concentration parameters fixed. \n```"]