- en: Statistics
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 统计学
- en: 原文：[https://numpy.org/doc/1.26/reference/routines.statistics.html](https://numpy.org/doc/1.26/reference/routines.statistics.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/routines.statistics.html](https://numpy.org/doc/1.26/reference/routines.statistics.html)
- en: Order statistics
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 顺序统计
- en: '| [`ptp`](generated/numpy.ptp.html#numpy.ptp "numpy.ptp")(a[, axis, out, keepdims])
    | Range of values (maximum - minimum) along an axis. |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '| [`ptp`](generated/numpy.ptp.html#numpy.ptp "numpy.ptp")(a[, axis, out, keepdims])
    | 沿轴的值范围（最大值 - 最小值）。 |'
- en: '| [`percentile`](generated/numpy.percentile.html#numpy.percentile "numpy.percentile")(a, q[, axis, out, ...])
    | Compute the q-th percentile of the data along the specified axis. |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| [`percentile`](generated/numpy.percentile.html#numpy.percentile "numpy.percentile")(a, q[, axis, out, ...])
    | 计算沿指定轴的数据的第q个百分位数。 |'
- en: '| [`nanpercentile`](generated/numpy.nanpercentile.html#numpy.nanpercentile
    "numpy.nanpercentile")(a, q[, axis, out, ...]) | Compute the qth percentile of
    the data along the specified axis, while ignoring nan values. |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| [`nanpercentile`](generated/numpy.nanpercentile.html#numpy.nanpercentile
    "numpy.nanpercentile")(a, q[, axis, out, ...]) | 计算沿指定轴的数据的第q个百分位数，同时忽略nan值。 |'
- en: '| [`quantile`](generated/numpy.quantile.html#numpy.quantile "numpy.quantile")(a, q[, axis, out, overwrite_input, ...])
    | Compute the q-th quantile of the data along the specified axis. |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| [`quantile`](generated/numpy.quantile.html#numpy.quantile "numpy.quantile")(a, q[, axis, out, overwrite_input, ...])
    | 计算沿指定轴的数据的第q个分位数。 |'
- en: '| [`nanquantile`](generated/numpy.nanquantile.html#numpy.nanquantile "numpy.nanquantile")(a, q[, axis, out, ...])
    | Compute the qth quantile of the data along the specified axis, while ignoring
    nan values. |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [`nanquantile`](generated/numpy.nanquantile.html#numpy.nanquantile "numpy.nanquantile")(a, q[, axis, out, ...])
    | 计算沿指定轴的数据的第q个分位数，同时忽略nan值。 |'
- en: Averages and variances
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 平均值和方差
- en: '| [`median`](generated/numpy.median.html#numpy.median "numpy.median")(a[, axis, out, overwrite_input, keepdims])
    | Compute the median along the specified axis. |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| [`median`](generated/numpy.median.html#numpy.median "numpy.median")(a[, axis, out, overwrite_input, keepdims])
    | 计算沿指定轴的中位数。 |'
- en: '| [`average`](generated/numpy.average.html#numpy.average "numpy.average")(a[, axis, weights, returned, keepdims])
    | Compute the weighted average along the specified axis. |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| [`average`](generated/numpy.average.html#numpy.average "numpy.average")(a[, axis, weights, returned, keepdims])
    | 计算沿指定轴的加权平均值。 |'
- en: '| [`mean`](generated/numpy.mean.html#numpy.mean "numpy.mean")(a[, axis, dtype, out, keepdims, where])
    | Compute the arithmetic mean along the specified axis. |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| [`mean`](generated/numpy.mean.html#numpy.mean "numpy.mean")(a[, axis, dtype, out, keepdims, where])
    | 计算沿指定轴的算术平均值。 |'
- en: '| [`std`](generated/numpy.std.html#numpy.std "numpy.std")(a[, axis, dtype, out, ddof, keepdims, where])
    | Compute the standard deviation along the specified axis. |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| [`std`](generated/numpy.std.html#numpy.std "numpy.std")(a[, axis, dtype, out, ddof, keepdims, where])
    | 计算沿指定轴的标准差。 |'
- en: '| [`var`](generated/numpy.var.html#numpy.var "numpy.var")(a[, axis, dtype, out, ddof, keepdims, where])
    | Compute the variance along the specified axis. |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| [`var`](generated/numpy.var.html#numpy.var "numpy.var")(a[, axis, dtype, out, ddof, keepdims, where])
    | 计算沿指定轴的方差。 |'
- en: '| [`nanmedian`](generated/numpy.nanmedian.html#numpy.nanmedian "numpy.nanmedian")(a[, axis, out, overwrite_input, ...])
    | Compute the median along the specified axis, while ignoring NaNs. |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [`nanmedian`](generated/numpy.nanmedian.html#numpy.nanmedian "numpy.nanmedian")(a[, axis, out, overwrite_input, ...])
    | 计算沿指定轴的中位数，同时忽略NaN值。 |'
- en: '| [`nanmean`](generated/numpy.nanmean.html#numpy.nanmean "numpy.nanmean")(a[, axis, dtype, out, keepdims, where])
    | Compute the arithmetic mean along the specified axis, ignoring NaNs. |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| [`nanmean`](generated/numpy.nanmean.html#numpy.nanmean "numpy.nanmean")(a[, axis, dtype, out, keepdims, where])
    | 计算沿指定轴的算术平均值，忽略NaN值。 |'
- en: '| [`nanstd`](generated/numpy.nanstd.html#numpy.nanstd "numpy.nanstd")(a[, axis, dtype, out, ddof, ...])
    | Compute the standard deviation along the specified axis, while ignoring NaNs.
    |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [`nanstd`](generated/numpy.nanstd.html#numpy.nanstd "numpy.nanstd")(a[, axis, dtype, out, ddof, ...])
    | 计算沿指定轴的标准差，同时忽略NaN值。 |'
- en: '| [`nanvar`](generated/numpy.nanvar.html#numpy.nanvar "numpy.nanvar")(a[, axis, dtype, out, ddof, ...])
    | Compute the variance along the specified axis, while ignoring NaNs. |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [`nanvar`](generated/numpy.nanvar.html#numpy.nanvar "numpy.nanvar")(a[, axis, dtype, out, ddof, ...])
    | 计算沿指定轴的方差，同时忽略NaN值。 |'
- en: Correlating
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关性
- en: '| [`corrcoef`](generated/numpy.corrcoef.html#numpy.corrcoef "numpy.corrcoef")(x[, y, rowvar, bias, ddof, dtype])
    | Return Pearson product-moment correlation coefficients. |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [`corrcoef`](generated/numpy.corrcoef.html#numpy.corrcoef "numpy.corrcoef")(x[, y, rowvar, bias, ddof, dtype])
    | 返回Pearson积矩相关系数。 |'
- en: '| [`correlate`](generated/numpy.correlate.html#numpy.correlate "numpy.correlate")(a, v[, mode])
    | Cross-correlation of two 1-dimensional sequences. |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`correlate`](generated/numpy.correlate.html#numpy.correlate "numpy.correlate")(a, v[, mode])
    | 计算两个一维序列的交叉相关性。 |'
- en: '| [`cov`](generated/numpy.cov.html#numpy.cov "numpy.cov")(m[, y, rowvar, bias, ddof, fweights, ...])
    | Estimate a covariance matrix, given data and weights. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`cov`](generated/numpy.cov.html#numpy.cov "numpy.cov")(m[, y, rowvar, bias, ddof, fweights, ...])
    | 给定数据和权重，估计协方差矩阵。 |'
- en: Histograms
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 直方图
- en: '| [`histogram`](generated/numpy.histogram.html#numpy.histogram "numpy.histogram")(a[, bins, range, density, weights])
    | Compute the histogram of a dataset. |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [`histogram`](generated/numpy.histogram.html#numpy.histogram "numpy.histogram")(a[, bins, range, density, weights])
    | 计算数据集的直方图。 |'
- en: '| [`histogram2d`](generated/numpy.histogram2d.html#numpy.histogram2d "numpy.histogram2d")(x, y[, bins, range, density, ...])
    | Compute the bi-dimensional histogram of two data samples. |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [`histogram2d`](generated/numpy.histogram2d.html#numpy.histogram2d "numpy.histogram2d")(x, y[, bins, range, density, ...])
    | 计算两个数据样本的二维直方图。 |'
- en: '| [`histogramdd`](generated/numpy.histogramdd.html#numpy.histogramdd "numpy.histogramdd")(sample[, bins, range, density, ...])
    | Compute the multidimensional histogram of some data. |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [`histogramdd`](generated/numpy.histogramdd.html#numpy.histogramdd "numpy.histogramdd")(sample[, bins, range, density, ...])
    | 计算一些数据的多维直方图。 |'
- en: '| [`bincount`](generated/numpy.bincount.html#numpy.bincount "numpy.bincount")(x, /[, weights, minlength])
    | Count number of occurrences of each value in array of non-negative ints. |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [`bincount`](generated/numpy.bincount.html#numpy.bincount "numpy.bincount")(x, /[, weights, minlength])
    | 计算非负整数数组中每个值的出现次数。 |'
- en: '| [`histogram_bin_edges`](generated/numpy.histogram_bin_edges.html#numpy.histogram_bin_edges
    "numpy.histogram_bin_edges")(a[, bins, range, weights]) | Function to calculate
    only the edges of the bins used by the [`histogram`](generated/numpy.histogram.html#numpy.histogram
    "numpy.histogram") function. |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| [`histogram_bin_edges`](generated/numpy.histogram_bin_edges.html#numpy.histogram_bin_edges
    "numpy.histogram_bin_edges")(a[, bins, range, weights]) | 仅计算由 [`histogram`](generated/numpy.histogram.html#numpy.histogram
    "numpy.histogram") 函数使用的箱的边缘的函数。 |'
- en: '| [`digitize`](generated/numpy.digitize.html#numpy.digitize "numpy.digitize")(x, bins[, right])
    | Return the indices of the bins to which each value in input array belongs. |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [`digitize`](generated/numpy.digitize.html#numpy.digitize "numpy.digitize")(x, bins[, right])
    | 返回输入数组中每个值所属的箱的索引。 |'
- en: Order statistics
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 顺序统计量
- en: '| [`ptp`](generated/numpy.ptp.html#numpy.ptp "numpy.ptp")(a[, axis, out, keepdims])
    | Range of values (maximum - minimum) along an axis. |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [`ptp`](generated/numpy.ptp.html#numpy.ptp "numpy.ptp")(a[, axis, out, keepdims])
    | 沿轴的值范围（最大值 - 最小值）。 |'
- en: '| [`percentile`](generated/numpy.percentile.html#numpy.percentile "numpy.percentile")(a, q[, axis, out, ...])
    | Compute the q-th percentile of the data along the specified axis. |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [`percentile`](generated/numpy.percentile.html#numpy.percentile "numpy.percentile")(a, q[, axis, out, ...])
    | 计算沿指定轴的数据的第 q 个百分位数。 |'
- en: '| [`nanpercentile`](generated/numpy.nanpercentile.html#numpy.nanpercentile
    "numpy.nanpercentile")(a, q[, axis, out, ...]) | Compute the qth percentile of
    the data along the specified axis, while ignoring nan values. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`nanpercentile`](generated/numpy.nanpercentile.html#numpy.nanpercentile
    "numpy.nanpercentile")(a, q[, axis, out, ...]) | 计算沿指定轴的数据的第 q 个百分位数，同时忽略 nan
    值。 |'
- en: '| [`quantile`](generated/numpy.quantile.html#numpy.quantile "numpy.quantile")(a, q[, axis, out, overwrite_input, ...])
    | Compute the q-th quantile of the data along the specified axis. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [`quantile`](generated/numpy.quantile.html#numpy.quantile "numpy.quantile")(a, q[, axis, out, overwrite_input, ...])
    | 计算沿指定轴的数据的第 q 个分位数。 |'
- en: '| [`nanquantile`](generated/numpy.nanquantile.html#numpy.nanquantile "numpy.nanquantile")(a, q[, axis, out, ...])
    | Compute the qth quantile of the data along the specified axis, while ignoring
    nan values. |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [`nanquantile`](generated/numpy.nanquantile.html#numpy.nanquantile "numpy.nanquantile")(a, q[, axis, out, ...])
    | 计算沿指定轴的数据的第 q 个分位数，同时忽略 nan 值。 |'
- en: Averages and variances
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 平均值和方差
- en: '| [`median`](generated/numpy.median.html#numpy.median "numpy.median")(a[, axis, out, overwrite_input, keepdims])
    | Compute the median along the specified axis. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| [`median`](generated/numpy.median.html#numpy.median "numpy.median")(a[, axis, out, overwrite_input, keepdims])
    | 沿指定轴计算中位数。 |'
- en: '| [`average`](generated/numpy.average.html#numpy.average "numpy.average")(a[, axis, weights, returned, keepdims])
    | Compute the weighted average along the specified axis. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| [`average`](generated/numpy.average.html#numpy.average "numpy.average")(a[, axis, weights, returned, keepdims])
    | 沿指定轴计算加权平均值。 |'
- en: '| [`mean`](generated/numpy.mean.html#numpy.mean "numpy.mean")(a[, axis, dtype, out, keepdims, where])
    | Compute the arithmetic mean along the specified axis. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| [`mean`](generated/numpy.mean.html#numpy.mean "numpy.mean")(a[, axis, dtype, out, keepdims, where])
    | 沿指定轴计算算术平均值。 |'
- en: '| [`std`](generated/numpy.std.html#numpy.std "numpy.std")(a[, axis, dtype, out, ddof, keepdims, where])
    | Compute the standard deviation along the specified axis. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [`std`](generated/numpy.std.html#numpy.std "numpy.std")(a[, axis, dtype, out, ddof, keepdims, where])
    | 沿指定轴计算标准差。 |'
- en: '| [`var`](generated/numpy.var.html#numpy.var "numpy.var")(a[, axis, dtype, out, ddof, keepdims, where])
    | Compute the variance along the specified axis. |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| [`var`](generated/numpy.var.html#numpy.var "numpy.var")(a[, axis, dtype, out, ddof, keepdims, where])
    | 沿指定轴计算方差。'
- en: '| [`nanmedian`](generated/numpy.nanmedian.html#numpy.nanmedian "numpy.nanmedian")(a[, axis, out, overwrite_input, ...])
    | Compute the median along the specified axis, while ignoring NaNs. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| [`nanmedian`](generated/numpy.nanmedian.html#numpy.nanmedian "numpy.nanmedian")(a[, axis, out, overwrite_input, ...])
    | 计算沿指定轴的中位数，忽略NaN值。'
- en: '| [`nanmean`](generated/numpy.nanmean.html#numpy.nanmean "numpy.nanmean")(a[, axis, dtype, out, keepdims, where])
    | Compute the arithmetic mean along the specified axis, ignoring NaNs. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| [`nanmean`](generated/numpy.nanmean.html#numpy.nanmean "numpy.nanmean")(a[, axis, dtype, out, keepdims, where])
    | 计算沿指定轴的算术平均值，忽略NaN值。'
- en: '| [`nanstd`](generated/numpy.nanstd.html#numpy.nanstd "numpy.nanstd")(a[, axis, dtype, out, ddof, ...])
    | Compute the standard deviation along the specified axis, while ignoring NaNs.
    |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| [`nanstd`](generated/numpy.nanstd.html#numpy.nanstd "numpy.nanstd")(a[, axis, dtype, out, ddof, ...])
    | 计算沿指定轴的标准差，忽略NaN值。'
- en: '| [`nanvar`](generated/numpy.nanvar.html#numpy.nanvar "numpy.nanvar")(a[, axis, dtype, out, ddof, ...])
    | Compute the variance along the specified axis, while ignoring NaNs. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| [`nanvar`](generated/numpy.nanvar.html#numpy.nanvar "numpy.nanvar")(a[, axis, dtype, out, ddof, ...])
    | 计算沿指定轴的方差，忽略NaN值。'
- en: Correlating
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Correlating
- en: '| [`corrcoef`](generated/numpy.corrcoef.html#numpy.corrcoef "numpy.corrcoef")(x[, y, rowvar, bias, ddof, dtype])
    | Return Pearson product-moment correlation coefficients. |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| [`corrcoef`](generated/numpy.corrcoef.html#numpy.corrcoef "numpy.corrcoef")(x[, y, rowvar, bias, ddof, dtype])
    | 返回皮尔逊积矩相关系数。'
- en: '| [`correlate`](generated/numpy.correlate.html#numpy.correlate "numpy.correlate")(a, v[, mode])
    | Cross-correlation of two 1-dimensional sequences. |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| [`correlate`](generated/numpy.correlate.html#numpy.correlate "numpy.correlate")(a, v[, mode])
    | 两个一维序列的交叉相关。'
- en: '| [`cov`](generated/numpy.cov.html#numpy.cov "numpy.cov")(m[, y, rowvar, bias, ddof, fweights, ...])
    | Estimate a covariance matrix, given data and weights. |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| [`cov`](generated/numpy.cov.html#numpy.cov "numpy.cov")(m[, y, rowvar, bias, ddof, fweights, ...])
    | 给定数据和权重，估计协方差矩阵。'
- en: Histograms
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 直方图
- en: '| [`histogram`](generated/numpy.histogram.html#numpy.histogram "numpy.histogram")(a[, bins, range, density, weights])
    | Compute the histogram of a dataset. |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| [`histogram`](generated/numpy.histogram.html#numpy.histogram "numpy.histogram")(a[, bins, range, density, weights])
    | 计算数据集的直方图。'
- en: '| [`histogram2d`](generated/numpy.histogram2d.html#numpy.histogram2d "numpy.histogram2d")(x, y[, bins, range, density, ...])
    | Compute the bi-dimensional histogram of two data samples. |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| [`histogram2d`](generated/numpy.histogram2d.html#numpy.histogram2d "numpy.histogram2d")(x, y[, bins, range, density, ...])
    | 计算两个数据样本的二维直方图。'
- en: '| [`histogramdd`](generated/numpy.histogramdd.html#numpy.histogramdd "numpy.histogramdd")(sample[, bins, range, density, ...])
    | Compute the multidimensional histogram of some data. |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| [`histogramdd`](generated/numpy.histogramdd.html#numpy.histogramdd "numpy.histogramdd")(sample[, bins, range, density, ...])
    | 计算一些数据的多维直方图。'
- en: '| [`bincount`](generated/numpy.bincount.html#numpy.bincount "numpy.bincount")(x, /[, weights, minlength])
    | Count number of occurrences of each value in array of non-negative ints. |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| [`bincount`](generated/numpy.bincount.html#numpy.bincount "numpy.bincount")(x, /[, weights, minlength])
    | 计算非负整数数组中每个值的出现次数。'
- en: '| [`histogram_bin_edges`](generated/numpy.histogram_bin_edges.html#numpy.histogram_bin_edges
    "numpy.histogram_bin_edges")(a[, bins, range, weights]) | Function to calculate
    only the edges of the bins used by the [`histogram`](generated/numpy.histogram.html#numpy.histogram
    "numpy.histogram") function. |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| [`histogram_bin_edges`](generated/numpy.histogram_bin_edges.html#numpy.histogram_bin_edges
    "numpy.histogram_bin_edges")(a[, bins, range, weights]) | 用于计算[`histogram`](generated/numpy.histogram.html#numpy.histogram
    "numpy.histogram")函数使用的箱子边缘的函数。'
- en: '| [`digitize`](generated/numpy.digitize.html#numpy.digitize "numpy.digitize")(x, bins[, right])
    | Return the indices of the bins to which each value in input array belongs. |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| [`digitize`](generated/numpy.digitize.html#numpy.digitize "numpy.digitize")(x, bins[, right])
    | 返回输入数组中每个值所属的箱子的索引。'
