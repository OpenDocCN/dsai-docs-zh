- en: Ultralytics Explorer API
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ultralytics Explorer API
- en: 原文：[`docs.ultralytics.com/datasets/explorer/api/`](https://docs.ultralytics.com/datasets/explorer/api/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[`docs.ultralytics.com/datasets/explorer/api/`](https://docs.ultralytics.com/datasets/explorer/api/)
- en: Introduction
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简介
- en: '![Open In Colab](https://colab.research.google.com/github/ultralytics/ultralytics/blob/main/docs/en/datasets/explorer/explorer.ipynb)
    The Explorer API is a Python API for exploring your datasets. It supports filtering
    and searching your dataset using SQL queries, vector similarity search and semantic
    search.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '![在 Colab 中打开](https://colab.research.google.com/github/ultralytics/ultralytics/blob/main/docs/en/datasets/explorer/explorer.ipynb)
    Explorer API 是一个用于探索数据集的 Python API。它支持使用 SQL 查询、向量相似性搜索和语义搜索对数据集进行过滤和搜索。'
- en: '[`www.youtube.com/embed/3VryynorQeo?start=279`](https://www.youtube.com/embed/3VryynorQeo?start=279)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[`www.youtube.com/embed/3VryynorQeo?start=279`](https://www.youtube.com/embed/3VryynorQeo?start=279)'
- en: '**Watch:** Ultralytics Explorer API Overview'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**观看：** Ultralytics Explorer API 概述'
- en: Installation
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装
- en: 'Explorer depends on external libraries for some of its functionality. These
    are automatically installed on usage. To manually install these dependencies,
    use the following command:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Explorer 依赖于一些外部库来完成其功能。在使用时会自动安装这些依赖项。要手动安装这些依赖项，请使用以下命令：
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Usage
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用方法
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Note
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Embeddings table for a given dataset and model pair is only created once and
    reused. These use [LanceDB](https://lancedb.github.io/lancedb/) under the hood,
    which scales on-disk, so you can create and reuse embeddings for large datasets
    like COCO without running out of memory.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对于给定的数据集和模型对，嵌入表仅创建一次并重复使用。这些在幕后使用 [LanceDB](https://lancedb.github.io/lancedb/)，它在磁盘上扩展，因此您可以在不耗尽内存的情况下为诸如
    COCO 等大型数据集创建和重用嵌入。
- en: In case you want to force update the embeddings table, you can pass `force=True`
    to `create_embeddings_table` method.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想强制更新嵌入表，可以将 `force=True` 传递给 `create_embeddings_table` 方法。
- en: You can directly access the LanceDB table object to perform advanced analysis.
    Learn more about it in the Working with Embeddings Table section
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以直接访问 LanceDB 表对象进行高级分析。在“使用嵌入表”部分了解更多信息
- en: 1\. Similarity Search
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 相似性搜索
- en: 'Similarity search is a technique for finding similar images to a given image.
    It is based on the idea that similar images will have similar embeddings. Once
    the embeddings table is built, you can get run semantic search in any of the following
    ways:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 相似性搜索是一种寻找与给定图像相似的图像的技术。它基于相似图像将具有相似嵌入的想法。一旦建立了嵌入表，您可以以以下任何方式之一运行语义搜索：
- en: 'On a given index or list of indices in the dataset: `exp.get_similar(idx=[1,10],
    limit=10)`'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于数据集中的给定索引或索引列表：`exp.get_similar(idx=[1,10], limit=10)`
- en: 'On any image or list of images not in the dataset: `exp.get_similar(img=["path/to/img1",
    "path/to/img2"], limit=10)`'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于数据集中不存在的任何图像或图像列表：`exp.get_similar(img=["path/to/img1", "path/to/img2"], limit=10)`
- en: In case of multiple inputs, the aggregate of their embeddings is used.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有多个输入，则使用它们的嵌入的聚合。
- en: You get a pandas dataframe with the `limit` number of most similar data points
    to the input, along with their distance in the embedding space. You can use this
    dataset to perform further filtering
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您将获得一个带有 `limit` 数量最相似数据点的 pandas dataframe，以及它们在嵌入空间中的距离。您可以使用此数据集进行进一步的筛选
- en: Semantic Search
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 语义搜索
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Plotting Similar Images
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 绘制相似图像
- en: You can also plot the similar images using the `plot_similar` method. This method
    takes the same arguments as `get_similar` and plots the similar images in a grid.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用 `plot_similar` 方法绘制相似图像。此方法接受与 `get_similar` 相同的参数，并在网格中绘制相似图像。
- en: Plotting Similar Images
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制相似图像
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 2\. Ask AI (Natural Language Querying)
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 询问 AI（自然语言查询）
- en: 'This allows you to write how you want to filter your dataset using natural
    language. You don''t have to be proficient in writing SQL queries. Our AI powered
    query generator will automatically do that under the hood. For example - you can
    say - "show me 100 images with exactly one person and 2 dogs. There can be other
    objects too" and it''ll internally generate the query and show you those results.
    Note: This works using LLMs under the hood so the results are probabilistic and
    might get things wrong sometimes'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这使您可以使用自然语言编写您想要过滤数据集的方式。您不必精通编写 SQL 查询。我们的 AI 动力查询生成器将在幕后自动执行此操作。例如，您可以说：“显示
    100 张只有一个人和 2 只狗的图像。也可能有其他物体”，它会在内部生成查询并显示结果。注意：这使用 LLMs 在幕后工作，因此结果是概率性的，有时可能出错。
- en: Ask AI
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 询问 AI
- en: '[PRE6]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 3\. SQL Querying
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. SQL 查询
- en: You can run SQL queries on your dataset using the `sql_query` method. This method
    takes a SQL query as input and returns a pandas dataframe with the results.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: SQL Query
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Plotting SQL Query Results
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also plot the results of a SQL query using the `plot_sql_query` method.
    This method takes the same arguments as `sql_query` and plots the results in a
    grid.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: Plotting SQL Query Results
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 4\. Working with Embeddings Table
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can also work with the embeddings table directly. Once the embeddings table
    is created, you can access it using the `Explorer.table`
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: Explorer works on [LanceDB](https://lancedb.github.io/lancedb/) tables internally.
    You can access this table directly, using `Explorer.table` object and run raw
    queries, push down pre- and post-filters, etc.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Here are some examples of what you can do with the table:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: Get raw Embeddings
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Example
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Advanced Querying with pre- and post-filters
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Example
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Create Vector Index
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When using large datasets, you can also create a dedicated vector index for
    faster querying. This is done using the `create_index` method on LanceDB table.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Find more details on the type vector indices available and parameters [here](https://lancedb.github.io/lancedb/ann_indexes/#types-of-index)
    In the future, we will add support for creating vector indices directly from Explorer
    API.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: 5\. Embeddings Applications
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can use the embeddings table to perform a variety of exploratory analysis.
    Here are some examples:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: Similarity Index
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Explorer comes with a `similarity_index` operation:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: It tries to estimate how similar each data point is with the rest of the dataset.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It does that by counting how many image embeddings lie closer than `max_dist`
    to the current image in the generated embedding space, considering `top_k` similar
    images at a time.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'It returns a pandas dataframe with the following columns:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: '`idx`: Index of the image in the dataset'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`im_file`: Path to the image file'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`count`: Number of images in the dataset that are closer than `max_dist` to
    the current image'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sim_im_files`: List of paths to the `count` similar images'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: For a given dataset, model, `max_dist` & `top_k` the similarity index once generated
    will be reused. In case, your dataset has changed, or you simply need to regenerate
    the similarity index, you can pass `force=True`.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: Similarity Index
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'You can use similarity index to build custom conditions to filter out the dataset.
    For example, you can filter out images that are not similar to any other image
    in the dataset using the following code:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Visualize Embedding Space
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can also visualize the embedding space using the plotting tool of your
    choice. For example here is a simple example using matplotlib:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Start creating your own CV dataset exploration reports using the Explorer API.
    For inspiration, check out the
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: Apps Built Using Ultralytics Explorer
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Try our GUI Demo based on Explorer API
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: Coming Soon
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[ ] Merge specific labels from datasets. Example - Import all `person` labels
    from COCO and `car` labels from Cityscapes'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ ] Remove images that have a higher similarity index than the given threshold'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ ] 删除具有比给定阈值更高相似性索引的图像'
- en: '[ ] Automatically persist new datasets after merging/removing entries'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ ] 在合并/移除条目后自动持久化新数据集'
- en: '[ ] Advanced Dataset Visualizations'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ ] 高级数据集可视化'
- en: FAQ
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常见问题解答
- en: What is the Ultralytics Explorer API used for?
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Ultralytics Explorer API 用于什么目的？
- en: The Ultralytics Explorer API is designed for comprehensive dataset exploration.
    It allows users to filter and search datasets using SQL queries, vector similarity
    search, and semantic search. This powerful Python API can handle large datasets,
    making it ideal for various computer vision tasks using Ultralytics models.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: Ultralytics Explorer API 旨在进行全面的数据集探索。它允许用户使用 SQL 查询、向量相似性搜索和语义搜索来过滤和搜索数据集。这个功能强大的
    Python API 可以处理大型数据集，非常适合使用 Ultralytics 模型进行各种计算机视觉任务。
- en: How do I install the Ultralytics Explorer API?
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何安装 Ultralytics Explorer API？
- en: 'To install the Ultralytics Explorer API along with its dependencies, use the
    following command:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 Ultralytics Explorer API 及其依赖项，请使用以下命令：
- en: '[PRE16]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: This will automatically install all necessary external libraries for the Explorer
    API functionality. For additional setup details, refer to the installation section
    of our documentation.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这将自动安装探索器 API 功能所需的所有外部库。有关其他设置详细信息，请参阅我们文档的安装部分。
- en: How can I use the Ultralytics Explorer API for similarity search?
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何使用 Ultralytics Explorer API 进行相似性搜索？
- en: 'You can use the Ultralytics Explorer API to perform similarity searches by
    creating an embeddings table and querying it for similar images. Here''s a basic
    example:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用 Ultralytics 探索器 API 创建嵌入表，并查询类似图像进行相似性搜索。以下是一个基本示例：
- en: '[PRE17]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: For more details, please visit the Similarity Search section.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多详情，请访问相似性搜索部分。
- en: What are the benefits of using LanceDB with Ultralytics Explorer?
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 LanceDB 与 Ultralytics Explorer 有什么好处？
- en: LanceDB, used under the hood by Ultralytics Explorer, provides scalable, on-disk
    embeddings tables. This ensures that you can create and reuse embeddings for large
    datasets like COCO without running out of memory. These tables are only created
    once and can be reused, enhancing efficiency in data handling.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Ultralytics Explorer 内部使用的 LanceDB 提供可扩展的磁盘嵌入表。这确保您可以为诸如 COCO 这样的大型数据集创建和重用嵌入，而无需担心内存不足问题。这些表仅创建一次，并可重复使用，提升数据处理效率。
- en: How does the Ask AI feature work in the Ultralytics Explorer API?
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Ultralytics Explorer API 中的 Ask AI 功能是如何工作的？
- en: 'The Ask AI feature allows users to filter datasets using natural language queries.
    This feature leverages LLMs to convert these queries into SQL queries behind the
    scenes. Here''s an example:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Ask AI 功能允许用户使用自然语言查询来过滤数据集。此功能利用 LLMs 在后台将这些查询转换为 SQL 查询。以下是一个示例：
- en: '[PRE18]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: For more examples, check out the Ask AI section.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多示例，请查看 Ask AI 部分。
