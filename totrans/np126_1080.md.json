["```py\ncd /path/to/numpy\npython setup.py build --cpu-baseline=\"avx2 fma3\" install --user \n```", "```py\ncd /path/to/numpy\npython setup.py build_ext --cpu-baseline=\"avx2 fma3\" install --user \n```", "```py\ncd /path/to/numpy\npython setup.py build_clib --cpu-baseline=\"avx2 fma3\" install --user \n```", "```py\npip install --no-use-pep517 --global-option=build \\\n--global-option=\"--cpu-baseline=avx2 fma3\" \\\n--global-option=\"--cpu-dispatch=max\" ./ \n```", "```py\npython setup.py build --cpu-baseline=\"native\" bdist \n```", "```py\npython setup.py build --cpu-baseline=native --cpu-dispatch=none bdist \n```", "```py\npython setup.py build --cpu-baseline=\"avx f16c\" bdist \n```", "```py\npython setup.py build --cpu-baseline=\"vsx2\" bdist \n```", "```py\npython setup.py build --cpu-dispatch=\"max -avx512f -avx512cd \\\n-avx512_knl -avx512_knm -avx512_skx -avx512_clx -avx512_cnl -avx512_icl\" \\\nbdist \n```", "```py\n    python setup.py build --cpu-dispatch=\"SSE41 avx2 FMA3\" \n    ```", "```py\n    python setup.py build --cpu-dispatch=\"SSE41 AVX2 FMA3\"\n    # equivalent to\n    python setup.py build --cpu-dispatch=\"FMA3 AVX2 SSE41\" \n    ```", "```py\n    python setup.py build --cpu-dispatch=\"avx2 avx512f\"\n    # or\n    python setup.py build --cpu-dispatch=avx2,avx512f\n    # or\n    python setup.py build --cpu-dispatch=\"avx2+avx512f\" \n    ```", "```py\n    python setup.py build --cpu-baseline=sse42\n    # equivalent to\n    python setup.py build --cpu-baseline=\"sse sse2 sse3 ssse3 sse41 popcnt sse42\" \n    ```", "```py\n    export CFLAGS=\"-march=native\"\n    python setup.py install --user\n    # is equivalent to\n    python setup.py build --cpu-baseline=native install --user \n    ```", "```py\n    > # Requesting `AVX2,FMA3` but the compiler only support **SSE** features\n    > python setup.py build --cpu-baseline=\"avx2 fma3\"\n    > # is equivalent to\n    > python setup.py build --cpu-baseline=\"sse sse2 sse3 ssse3 sse41 popcnt sse42\" \n    > ```", "```py\n    # Only dispatches AVX2 and FMA3\n    python setup.py build --cpu-dispatch=avx2,fma3\n    # Dispatches AVX and SSE features\n    python setup.py build --cpu-baseline=ssse3,sse41,sse42,avx,avx2,fma3 \n    ```", "```py\n# On ARMv8/A64, specify NEON is going to enable Advanced SIMD\n# and all predecessor extensions\npython setup.py build --cpu-baseline=neon\n# which equivalent to\npython setup.py build --cpu-baseline=\"neon neon_fp16 neon_vfpv4 asimd\" \n```", "```py\n# Specify AVX2 will force enables FMA3 on Intel compilers\npython setup.py build --cpu-baseline=avx2\n# which equivalent to\npython setup.py build --cpu-baseline=\"avx2 fma3\" \n```", "```py\n########### EXT COMPILER OPTIMIZATION ###########\nPlatform  :\n  Architecture:  x64\n  Compiler  :  gcc\n\nCPU  baseline  :\n  Requested  :  'min'\n  Enabled  :  SSE  SSE2  SSE3\n  Flags  :  -msse  -msse2  -msse3\n  Extra  checks:  none\n\nCPU  dispatch  :\n  Requested  :  'max -xop -fma4'\n  Enabled  :  SSSE3  SSE41  POPCNT  SSE42  AVX  F16C  FMA3  AVX2  AVX512F  AVX512CD  AVX512_KNL  AVX512_KNM  AVX512_SKX  AVX512_CLX  AVX512_CNL  AVX512_ICL\n  Generated  :\n  :\n  SSE41  :  SSE  SSE2  SSE3  SSSE3\n  Flags  :  -msse  -msse2  -msse3  -mssse3  -msse4.1\n  Extra  checks:  none\n  Detect  :  SSE  SSE2  SSE3  SSSE3  SSE41\n  :  build/src.linux-x86_64-3.9/numpy/core/src/umath/loops_arithmetic.dispatch.c\n  :  numpy/core/src/umath/_umath_tests.dispatch.c\n  :\n  SSE42  :  SSE  SSE2  SSE3  SSSE3  SSE41  POPCNT\n  Flags  :  -msse  -msse2  -msse3  -mssse3  -msse4.1  -mpopcnt  -msse4.2\n  Extra  checks:  none\n  Detect  :  SSE  SSE2  SSE3  SSSE3  SSE41  POPCNT  SSE42\n  :  build/src.linux-x86_64-3.9/numpy/core/src/_simd/_simd.dispatch.c\n  :\n  AVX2  :  SSE  SSE2  SSE3  SSSE3  SSE41  POPCNT  SSE42  AVX  F16C\n  Flags  :  -msse  -msse2  -msse3  -mssse3  -msse4.1  -mpopcnt  -msse4.2  -mavx  -mf16c  -mavx2\n  Extra  checks:  none\n  Detect  :  AVX  F16C  AVX2\n  :  build/src.linux-x86_64-3.9/numpy/core/src/umath/loops_arithm_fp.dispatch.c\n  :  build/src.linux-x86_64-3.9/numpy/core/src/umath/loops_arithmetic.dispatch.c\n  :  numpy/core/src/umath/_umath_tests.dispatch.c\n  :\n  (FMA3  AVX2)  :  SSE  SSE2  SSE3  SSSE3  SSE41  POPCNT  SSE42  AVX  F16C\n  Flags  :  -msse  -msse2  -msse3  -mssse3  -msse4.1  -mpopcnt  -msse4.2  -mavx  -mf16c  -mfma  -mavx2\n  Extra  checks:  none\n  Detect  :  AVX  F16C  FMA3  AVX2\n  :  build/src.linux-x86_64-3.9/numpy/core/src/_simd/_simd.dispatch.c\n  :  build/src.linux-x86_64-3.9/numpy/core/src/umath/loops_exponent_log.dispatch.c\n  :  build/src.linux-x86_64-3.9/numpy/core/src/umath/loops_trigonometric.dispatch.c\n  :\n  AVX512F  :  SSE  SSE2  SSE3  SSSE3  SSE41  POPCNT  SSE42  AVX  F16C  FMA3  AVX2\n  Flags  :  -msse  -msse2  -msse3  -mssse3  -msse4.1  -mpopcnt  -msse4.2  -mavx  -mf16c  -mfma  -mavx2  -mavx512f\n  Extra  checks:  AVX512F_REDUCE\n  Detect  :  AVX512F\n  :  build/src.linux-x86_64-3.9/numpy/core/src/_simd/_simd.dispatch.c\n  :  build/src.linux-x86_64-3.9/numpy/core/src/umath/loops_arithm_fp.dispatch.c\n  :  build/src.linux-x86_64-3.9/numpy/core/src/umath/loops_arithmetic.dispatch.c\n  :  build/src.linux-x86_64-3.9/numpy/core/src/umath/loops_exponent_log.dispatch.c\n  :  build/src.linux-x86_64-3.9/numpy/core/src/umath/loops_trigonometric.dispatch.c\n  :\n  AVX512_SKX  :  SSE  SSE2  SSE3  SSSE3  SSE41  POPCNT  SSE42  AVX  F16C  FMA3  AVX2  AVX512F  AVX512CD\n  Flags  :  -msse  -msse2  -msse3  -mssse3  -msse4.1  -mpopcnt  -msse4.2  -mavx  -mf16c  -mfma  -mavx2  -mavx512f  -mavx512cd  -mavx512vl  -mavx512bw  -mavx512dq\n  Extra  checks:  AVX512BW_MASK  AVX512DQ_MASK\n  Detect  :  AVX512_SKX\n  :  build/src.linux-x86_64-3.9/numpy/core/src/_simd/_simd.dispatch.c\n  :  build/src.linux-x86_64-3.9/numpy/core/src/umath/loops_arithmetic.dispatch.c\n  :  build/src.linux-x86_64-3.9/numpy/core/src/umath/loops_exponent_log.dispatch.c\nCCompilerOpt.cache_flush[804]  :  write  cache  to  path  ->  /home/seiko/work/repos/numpy/build/temp.linux-x86_64-3.9/ccompiler_opt_cache_ext.py\n\n########### CLIB COMPILER OPTIMIZATION ###########\nPlatform  :\n  Architecture:  x64\n  Compiler  :  gcc\n\nCPU  baseline  :\n  Requested  :  'min'\n  Enabled  :  SSE  SSE2  SSE3\n  Flags  :  -msse  -msse2  -msse3\n  Extra  checks:  none\n\nCPU  dispatch  :\n  Requested  :  'max -xop -fma4'\n  Enabled  :  SSSE3  SSE41  POPCNT  SSE42  AVX  F16C  FMA3  AVX2  AVX512F  AVX512CD  AVX512_KNL  AVX512_KNM  AVX512_SKX  AVX512_CLX  AVX512_CNL  AVX512_ICL\n  Generated  :  none \n```", "```py\nNPY_DISABLE_CPU_FEATURES=\"AVX2,FMA3\" \n```", "```py\ncd /path/to/numpy\npython setup.py build --cpu-baseline=\"avx2 fma3\" install --user \n```", "```py\ncd /path/to/numpy\npython setup.py build_ext --cpu-baseline=\"avx2 fma3\" install --user \n```", "```py\ncd /path/to/numpy\npython setup.py build_clib --cpu-baseline=\"avx2 fma3\" install --user \n```", "```py\npip install --no-use-pep517 --global-option=build \\\n--global-option=\"--cpu-baseline=avx2 fma3\" \\\n--global-option=\"--cpu-dispatch=max\" ./ \n```", "```py\npython setup.py build --cpu-baseline=\"native\" bdist \n```", "```py\npython setup.py build --cpu-baseline=native --cpu-dispatch=none bdist \n```", "```py\npython setup.py build --cpu-baseline=\"avx f16c\" bdist \n```", "```py\npython setup.py build --cpu-baseline=\"vsx2\" bdist \n```", "```py\npython setup.py build --cpu-dispatch=\"max -avx512f -avx512cd \\\n-avx512_knl -avx512_knm -avx512_skx -avx512_clx -avx512_cnl -avx512_icl\" \\\nbdist \n```", "```py\npython setup.py build --cpu-baseline=\"native\" bdist \n```", "```py\npython setup.py build --cpu-baseline=native --cpu-dispatch=none bdist \n```", "```py\npython setup.py build --cpu-baseline=\"avx f16c\" bdist \n```", "```py\npython setup.py build --cpu-baseline=\"vsx2\" bdist \n```", "```py\npython setup.py build --cpu-dispatch=\"max -avx512f -avx512cd \\\n-avx512_knl -avx512_knm -avx512_skx -avx512_clx -avx512_cnl -avx512_icl\" \\\nbdist \n```", "```py\n    python setup.py build --cpu-dispatch=\"SSE41 avx2 FMA3\" \n    ```", "```py\n    python setup.py build --cpu-dispatch=\"SSE41 AVX2 FMA3\"\n    # equivalent to\n    python setup.py build --cpu-dispatch=\"FMA3 AVX2 SSE41\" \n    ```", "```py\n    python setup.py build --cpu-dispatch=\"avx2 avx512f\"\n    # or\n    python setup.py build --cpu-dispatch=avx2,avx512f\n    # or\n    python setup.py build --cpu-dispatch=\"avx2+avx512f\" \n    ```", "```py\n    python setup.py build --cpu-baseline=sse42\n    # equivalent to\n    python setup.py build --cpu-baseline=\"sse sse2 sse3 ssse3 sse41 popcnt sse42\" \n    ```", "```py\n    export CFLAGS=\"-march=native\"\n    python setup.py install --user\n    # is equivalent to\n    python setup.py build --cpu-baseline=native install --user \n    ```", "```py\n    > # Requesting `AVX2,FMA3` but the compiler only support **SSE** features\n    > python setup.py build --cpu-baseline=\"avx2 fma3\"\n    > # is equivalent to\n    > python setup.py build --cpu-baseline=\"sse sse2 sse3 ssse3 sse41 popcnt sse42\" \n    > ```", "```py\n    # Only dispatches AVX2 and FMA3\n    python setup.py build --cpu-dispatch=avx2,fma3\n    # Dispatches AVX and SSE features\n    python setup.py build --cpu-baseline=ssse3,sse41,sse42,avx,avx2,fma3 \n    ```", "```py\n# On ARMv8/A64, specify NEON is going to enable Advanced SIMD\n# and all predecessor extensions\npython setup.py build --cpu-baseline=neon\n# which equivalent to\npython setup.py build --cpu-baseline=\"neon neon_fp16 neon_vfpv4 asimd\" \n```", "```py\n# Specify AVX2 will force enables FMA3 on Intel compilers\npython setup.py build --cpu-baseline=avx2\n# which equivalent to\npython setup.py build --cpu-baseline=\"avx2 fma3\" \n```", "```py\n########### EXT COMPILER OPTIMIZATION ###########\nPlatform  :\n  Architecture:  x64\n  Compiler  :  gcc\n\nCPU  baseline  :\n  Requested  :  'min'\n  Enabled  :  SSE  SSE2  SSE3\n  Flags  :  -msse  -msse2  -msse3\n  Extra  checks:  none\n\nCPU  dispatch  :\n  Requested  :  'max -xop -fma4'\n  Enabled  :  SSSE3  SSE41  POPCNT  SSE42  AVX  F16C  FMA3  AVX2  AVX512F  AVX512CD  AVX512_KNL  AVX512_KNM  AVX512_SKX  AVX512_CLX  AVX512_CNL  AVX512_ICL\n  Generated  :\n  :\n  SSE41  :  SSE  SSE2  SSE3  SSSE3\n  Flags  :  -msse  -msse2  -msse3  -mssse3  -msse4.1\n  Extra  checks:  none\n  Detect  :  SSE  SSE2  SSE3  SSSE3  SSE41\n  :  build/src.linux-x86_64-3.9/numpy/core/src/umath/loops_arithmetic.dispatch.c\n  :  numpy/core/src/umath/_umath_tests.dispatch.c\n  :\n  SSE42  :  SSE  SSE2  SSE3  SSSE3  SSE41  POPCNT\n  Flags  :  -msse  -msse2  -msse3  -mssse3  -msse4.1  -mpopcnt  -msse4.2\n  Extra  checks:  none\n  Detect  :  SSE  SSE2  SSE3  SSSE3  SSE41  POPCNT  SSE42\n  :  build/src.linux-x86_64-3.9/numpy/core/src/_simd/_simd.dispatch.c\n  :\n  AVX2  :  SSE  SSE2  SSE3  SSSE3  SSE41  POPCNT  SSE42  AVX  F16C\n  Flags  :  -msse  -msse2  -msse3  -mssse3  -msse4.1  -mpopcnt  -msse4.2  -mavx  -mf16c  -mavx2\n  Extra  checks:  none\n  Detect  :  AVX  F16C  AVX2\n  :  build/src.linux-x86_64-3.9/numpy/core/src/umath/loops_arithm_fp.dispatch.c\n  :  build/src.linux-x86_64-3.9/numpy/core/src/umath/loops_arithmetic.dispatch.c\n  :  numpy/core/src/umath/_umath_tests.dispatch.c\n  :\n  (FMA3  AVX2)  :  SSE  SSE2  SSE3  SSSE3  SSE41  POPCNT  SSE42  AVX  F16C\n  Flags  :  -msse  -msse2  -msse3  -mssse3  -msse4.1  -mpopcnt  -msse4.2  -mavx  -mf16c  -mfma  -mavx2\n  Extra  checks:  none\n  Detect  :  AVX  F16C  FMA3  AVX2\n  :  build/src.linux-x86_64-3.9/numpy/core/src/_simd/_simd.dispatch.c\n  :  build/src.linux-x86_64-3.9/numpy/core/src/umath/loops_exponent_log.dispatch.c\n  :  build/src.linux-x86_64-3.9/numpy/core/src/umath/loops_trigonometric.dispatch.c\n  :\n  AVX512F  :  SSE  SSE2  SSE3  SSSE3  SSE41  POPCNT  SSE42  AVX  F16C  FMA3  AVX2\n  Flags  :  -msse  -msse2  -msse3  -mssse3  -msse4.1  -mpopcnt  -msse4.2  -mavx  -mf16c  -mfma  -mavx2  -mavx512f\n  Extra  checks:  AVX512F_REDUCE\n  Detect  :  AVX512F\n  :  build/src.linux-x86_64-3.9/numpy/core/src/_simd/_simd.dispatch.c\n  :  build/src.linux-x86_64-3.9/numpy/core/src/umath/loops_arithm_fp.dispatch.c\n  :  build/src.linux-x86_64-3.9/numpy/core/src/umath/loops_arithmetic.dispatch.c\n  :  build/src.linux-x86_64-3.9/numpy/core/src/umath/loops_exponent_log.dispatch.c\n  :  build/src.linux-x86_64-3.9/numpy/core/src/umath/loops_trigonometric.dispatch.c\n  :\n  AVX512_SKX  :  SSE  SSE2  SSE3  SSSE3  SSE41  POPCNT  SSE42  AVX  F16C  FMA3  AVX2  AVX512F  AVX512CD\n  Flags  :  -msse  -msse2  -msse3  -mssse3  -msse4.1  -mpopcnt  -msse4.2  -mavx  -mf16c  -mfma  -mavx2  -mavx512f  -mavx512cd  -mavx512vl  -mavx512bw  -mavx512dq\n  Extra  checks:  AVX512BW_MASK  AVX512DQ_MASK\n  Detect  :  AVX512_SKX\n  :  build/src.linux-x86_64-3.9/numpy/core/src/_simd/_simd.dispatch.c\n  :  build/src.linux-x86_64-3.9/numpy/core/src/umath/loops_arithmetic.dispatch.c\n  :  build/src.linux-x86_64-3.9/numpy/core/src/umath/loops_exponent_log.dispatch.c\nCCompilerOpt.cache_flush[804]  :  write  cache  to  path  ->  /home/seiko/work/repos/numpy/build/temp.linux-x86_64-3.9/ccompiler_opt_cache_ext.py\n\n########### CLIB COMPILER OPTIMIZATION ###########\nPlatform  :\n  Architecture:  x64\n  Compiler  :  gcc\n\nCPU  baseline  :\n  Requested  :  'min'\n  Enabled  :  SSE  SSE2  SSE3\n  Flags  :  -msse  -msse2  -msse3\n  Extra  checks:  none\n\nCPU  dispatch  :\n  Requested  :  'max -xop -fma4'\n  Enabled  :  SSSE3  SSE41  POPCNT  SSE42  AVX  F16C  FMA3  AVX2  AVX512F  AVX512CD  AVX512_KNL  AVX512_KNM  AVX512_SKX  AVX512_CLX  AVX512_CNL  AVX512_ICL\n  Generated  :  none \n```", "```py\nNPY_DISABLE_CPU_FEATURES=\"AVX2,FMA3\" \n```"]