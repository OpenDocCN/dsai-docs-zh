- en: Indexed Objects
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 索引对象
- en: Original text：[https://docs.sympy.org/latest/modules/tensor/indexed.html](https://docs.sympy.org/latest/modules/tensor/indexed.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.sympy.org/latest/modules/tensor/indexed.html](https://docs.sympy.org/latest/modules/tensor/indexed.html)
- en: Module that defines indexed objects.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 定义索引对象的模块。
- en: 'The classes `IndexedBase`, `Indexed`, and `Idx` represent a matrix element
    `M[i, j]` as in the following diagram:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 类`IndexedBase`、`Indexed`和`Idx`表示矩阵元素`M[i, j]`如下图所示：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: There can be any number of indices on an Indexed object. No transformation properties
    are implemented in these Base objects, but implicit contraction of repeated indices
    is supported.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`Indexed`对象上可以有任意数量的索引。这些基础对象中未实现任何转换属性，但支持重复索引的隐式收缩。'
- en: Note that the support for complicated (i.e. non-atomic) integer expressions
    as indices is limited. (This should be improved in future releases.)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，对于复杂（即非原子）整数表达式作为索引的支持有限。（在未来版本中应进行改进。）
- en: Examples
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例
- en: 'To express the above matrix element example you would write:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 要表示上述矩阵元素示例，您可以这样写：
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Repeated indices in a product implies a summation, so to express a matrix-vector
    product in terms of Indexed objects:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 乘积中的重复索引意味着求和，因此要使用`Indexed`对象来表示矩阵向量乘积：
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If the indexed objects will be converted to component based arrays, e.g. with
    the code printers or the autowrap framework, you also need to provide (symbolic
    or numerical) dimensions. This can be done by passing an optional shape parameter
    to IndexedBase upon construction:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果索引对象将转换为基于组件的数组，例如使用代码打印机或自动包装框架，则还需要提供（符号或数值）维度。可以通过在构建`IndexedBase`时传递可选的形状参数来完成：
- en: '[PRE3]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'If an IndexedBase object has no shape information, it is assumed that the array
    is as large as the ranges of its indices:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`IndexedBase`对象没有形状信息，则假定数组大小与其索引的范围一样大：
- en: '[PRE4]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The above can be compared with the following:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 可与以下进行比较：
- en: '[PRE5]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'To analyze the structure of indexed expressions, you can use the methods get_indices()
    and get_contraction_structure():'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要分析索引表达式的结构，可以使用`get_indices()`和`get_contraction_structure()`方法：
- en: '[PRE6]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: See the appropriate docstrings for a detailed explanation of the output.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 查看相应的文档字符串以详细了解输出。
- en: '[PRE7]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Represents an integer index as an `Integer` or integer expression.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 表示整数索引作为`Integer`或整数表达式。
- en: 'There are a number of ways to create an `Idx` object. The constructor takes
    two arguments:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种方法可以创建`Idx`对象。构造函数接受两个参数：
- en: '`label`'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '`label`'
- en: An integer or a symbol that labels the index.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 整数或符号用于标记索引。
- en: '`range`'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '`range`'
- en: Optionally you can specify a range as either
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 可选地可以将范围指定为
- en: '`Symbol` or integer: This is interpreted as a dimension. Lower and upper bounds
    are set to `0` and `range - 1`, respectively.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Symbol`或整数：被解释为维度。下界和上界分别设置为`0`和`range - 1`。'
- en: '`tuple`: The two elements are interpreted as the lower and upper bounds of
    the range, respectively.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tuple`：两个元素分别解释为范围的下限和上限。'
- en: 'Note: bounds of the range are assumed to be either integer or infinite (oo
    and -oo are allowed to specify an unbounded range). If `n` is given as a bound,
    then `n.is_integer` must not return false.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：范围的边界假定为整数或无穷大（允许使用oo和-oo指定无界范围）。如果边界给定为`n`，则`n.is_integer`不能返回false。
- en: 'For convenience, if the label is given as a string it is automatically converted
    to an integer symbol. (Note: this conversion is not done for range or dimension
    arguments.)'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 为方便起见，如果标签是字符串，则自动转换为整数符号。（注意：不会对范围或维度参数进行此转换。）
- en: Examples
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE8]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'If a string is given for the label an integer `Symbol` is created and the bounds
    are both `None`:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果标签是字符串，则创建一个整数`Symbol`，且边界都是`None`：
- en: '[PRE9]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Both upper and lower bounds can be specified:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 可以指定上界和下界：
- en: '[PRE10]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'When only a single bound is given it is interpreted as the dimension and the
    lower bound defaults to 0:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当只给出单个边界时，它被解释为维度，下界默认为0：
- en: '[PRE11]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Returns the label (Integer or integer expression) of the Idx object.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`Idx`对象的标签（整数或整数表达式）。
- en: Examples
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE13]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Returns the lower bound of the `Idx`.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`Idx`的下界。
- en: Examples
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE15]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Returns the upper bound of the `Idx`.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`Idx`的上界。
- en: Examples
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE17]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Represents a mathematical object with indices.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 表示具有索引的数学对象。
- en: '[PRE19]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'It is recommended that `Indexed` objects be created by indexing `IndexedBase`:
    `IndexedBase(''A'')[i, j]` instead of `Indexed(IndexedBase(''A''), i, j)`.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 建议通过索引`IndexedBase`创建`Indexed`对象：`IndexedBase('A')[i, j]`而不是`Indexed(IndexedBase('A'),
    i, j)`。
- en: '[PRE20]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Returns the `IndexedBase` of the `Indexed` object.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`Indexed`对象的`IndexedBase`。
- en: Examples
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE22]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Returns the indices of the `Indexed` object.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `Indexed` 对象的索引。
- en: Examples
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE24]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Returns a list of tuples with lower and upper range of each index.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 返回带有每个索引的下限和上限范围的元组列表。
- en: If an index does not define the data members upper and lower, the corresponding
    slot in the list contains `None` instead of a tuple.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果索引未定义数据成员的上限和下限，则列表中的相应位置包含`None`而不是元组。
- en: Examples
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE26]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Returns the rank of the `Indexed` object.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `Indexed` 对象的秩。
- en: Examples
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE28]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Returns a list with dimensions of each index.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 返回每个索引的维度列表。
- en: Dimensions is a property of the array, not of the indices. Still, if the `IndexedBase`
    does not define a shape attribute, it is assumed that the ranges of the indices
    correspond to the shape of the array.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 维度是数组的属性，而不是索引的属性。但是，如果 `IndexedBase` 未定义形状属性，则假定索引的范围对应于数组的形状。
- en: '[PRE30]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Represent the base or stem of an indexed object
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 表示索引对象的基础或干扰
- en: 'The IndexedBase class represent an array that contains elements. The main purpose
    of this class is to allow the convenient creation of objects of the Indexed class.
    The __getitem__ method of IndexedBase returns an instance of Indexed. Alone, without
    indices, the IndexedBase class can be used as a notation for e.g. matrix equations,
    resembling what you could do with the Symbol class. But, the IndexedBase class
    adds functionality that is not available for Symbol instances:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`IndexedBase` 类表示一个包含元素的数组。该类的主要目的是允许方便地创建 `Indexed` 类的对象。`IndexedBase` 的`__getitem__`方法返回
    `Indexed` 的实例。单独使用，即没有索引，`IndexedBase` 类可以用作例如矩阵方程的标记，类似于使用 `Symbol` 类可以做的事情。但是，`IndexedBase`
    类增加了 `Symbol` 实例不可用的功能：'
- en: An IndexedBase object can optionally store shape information. This can be used
    in to check array conformance and conditions for numpy broadcasting. (TODO)
  id: totrans-81
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`IndexedBase` 对象可以选择性地存储形状信息。这可用于检查数组的一致性和 numpy 广播的条件。（TODO）'
- en: ''
  id: totrans-82
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-83
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: An IndexedBase object implements syntactic sugar that allows easy symbolic representation
    of array operations, using implicit summation of repeated indices.
  id: totrans-84
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`IndexedBase` 对象实现了语法糖，允许使用重复索引的隐式求和来轻松表示数组操作。'
- en: ''
  id: totrans-85
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-86
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: The IndexedBase object symbolizes a mathematical structure equivalent to arrays,
    and is recognized as such for code generation and automatic compilation and wrapping.
  id: totrans-87
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`IndexedBase` 对象象征着一个数学结构，相当于数组，因此被用于代码生成和自动编译和包装。'
- en: '[PRE32]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'When an IndexedBase object receives indices, it returns an array with named
    axes, represented by an Indexed object:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 当 `IndexedBase` 对象接收到索引时，它返回一个带有命名轴的数组，由 `Indexed` 对象表示：
- en: '[PRE33]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: The IndexedBase constructor takes an optional shape argument. If given, it overrides
    any shape information in the indices. (But not the index ranges!)
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '`IndexedBase` 构造函数接受一个可选的形状参数。如果给定，则会覆盖索引中的任何形状信息。（但不覆盖索引范围！）'
- en: '[PRE34]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Assumptions can be specified with keyword arguments the same way as for Symbol:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 假设可以与关键字参数一起指定，方式与 `Symbol` 相同：
- en: '[PRE35]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Assumptions can also be inherited if a Symbol is used to initialize the IndexedBase:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 假设也可以通过使用 `Symbol` 初始化 `IndexedBase` 来继承：
- en: '[PRE36]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Returns the label of the `IndexedBase` object.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `IndexedBase` 对象的标签。
- en: Examples
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE38]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Returns the offset for the `IndexedBase` object.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `IndexedBase` 对象的偏移量。
- en: This is the value added to the resulting index when the 2D Indexed object is
    unrolled to a 1D form. Used in code generation.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 当将2D `Indexed` 对象展开为1D形式时，添加到结果索引的值。用于代码生成。
- en: Examples
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE40]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[PRE41]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Returns the shape of the `IndexedBase` object.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `IndexedBase` 对象的形状。
- en: Examples
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE42]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Note: If the shape of the `IndexedBase` is specified, it will override any
    shape information given by the indices.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：如果指定了 `IndexedBase` 的形状，它将覆盖索引给出的任何形状信息。
- en: '[PRE43]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Returns the strided scheme for the `IndexedBase` object.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `IndexedBase` 对象的步进方案。
- en: Normally this is a tuple denoting the number of steps to take in the respective
    dimension when traversing an array. For code generation purposes strides=’C’ and
    strides=’F’ can also be used.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，这是一个元组，表示遍历数组时在相应维度上要采取的步数。为了代码生成的目的，也可以使用 `strides='C'` 和 `strides='F'`。
- en: strides=’C’ would mean that code printer would unroll in row-major order and
    ‘F’ means unroll in column major order.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '`strides=''C''` 意味着代码打印器将按行主序展开，而`''F''`表示按列主序展开。'
