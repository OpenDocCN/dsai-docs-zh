- en: pandas.DataFrame.any
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.any.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.any.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return whether any element is True, potentially over an axis.
  prefs: []
  type: TYPE_NORMAL
- en: Returns False unless there is at least one element within a series or along
    a Dataframe axis that is True or equivalent (e.g. non-zero or non-empty).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**{0 or ‘index’, 1 or ‘columns’, None}, default 0'
  prefs: []
  type: TYPE_NORMAL
- en: Indicate which axis or axes should be reduced. For Series this parameter is
    unused and defaults to 0.
  prefs: []
  type: TYPE_NORMAL
- en: '0 / ‘index’ : reduce the index, return a Series whose index is the original
    column labels.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '1 / ‘columns’ : reduce the columns, return a Series whose index is the original
    index.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'None : reduce all axes, return a scalar.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**bool_only**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Include only boolean columns. Not implemented for Series.
  prefs: []
  type: TYPE_NORMAL
- en: '**skipna**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Exclude NA/null values. If the entire row/column is NA and skipna is True, then
    the result will be False, as for an empty row/column. If skipna is False, then
    NA are treated as True, because these are not equal to zero.
  prefs: []
  type: TYPE_NORMAL
- en: '****kwargs**any, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Additional keywords have no effect but might be accepted for compatibility with
    NumPy.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: Series or DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: If level is specified, then, DataFrame is returned; otherwise, Series is returned.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.any`](https://numpy.org/doc/stable/reference/generated/numpy.any.html#numpy.any
    "(in NumPy v1.26)")'
  prefs: []
  type: TYPE_NORMAL
- en: Numpy version of this method.
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.any`](pandas.Series.any.html#pandas.Series.any "pandas.Series.any")'
  prefs: []
  type: TYPE_NORMAL
- en: Return whether any element is True.
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.all`](pandas.Series.all.html#pandas.Series.all "pandas.Series.all")'
  prefs: []
  type: TYPE_NORMAL
- en: Return whether all elements are True.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.any`](#pandas.DataFrame.any "pandas.DataFrame.any")'
  prefs: []
  type: TYPE_NORMAL
- en: Return whether any element is True over requested axis.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.all`](pandas.DataFrame.all.html#pandas.DataFrame.all "pandas.DataFrame.all")'
  prefs: []
  type: TYPE_NORMAL
- en: Return whether all elements are True over requested axis.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '**Series**'
  prefs: []
  type: TYPE_NORMAL
- en: For Series input, the output is a scalar indicating whether any element is True.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**DataFrame**'
  prefs: []
  type: TYPE_NORMAL
- en: Whether each column contains at least one True element (the default).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Aggregating over the columns.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Aggregating over the entire DataFrame with `axis=None`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: any for an empty DataFrame is an empty Series.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
