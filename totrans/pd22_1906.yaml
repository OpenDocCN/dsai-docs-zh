- en: What’s new in 1.5.0 (September 19, 2022)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/whatsnew/v1.5.0.html](https://pandas.pydata.org/docs/whatsnew/v1.5.0.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: These are the changes in pandas 1.5.0\. See [Release notes](index.html#release)
    for a full changelog including other versions of pandas.
  prefs: []
  type: TYPE_NORMAL
- en: '## Enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '### `pandas-stubs`'
  prefs: []
  type: TYPE_NORMAL
- en: The `pandas-stubs` library is now supported by the pandas development team,
    providing type stubs for the pandas API. Please visit [pandas-dev/pandas-stubs](https://github.com/pandas-dev/pandas-stubs)
    for more information.
  prefs: []
  type: TYPE_NORMAL
- en: 'We thank VirtusLab and Microsoft for their initial, significant contributions
    to `pandas-stubs`  ### Native PyArrow-backed ExtensionArray'
  prefs: []
  type: TYPE_NORMAL
- en: With [Pyarrow](https://arrow.apache.org/docs/python/index.html) installed, users
    can now create pandas objects that are backed by a `pyarrow.ChunkedArray` and
    `pyarrow.DataType`.
  prefs: []
  type: TYPE_NORMAL
- en: The `dtype` argument can accept a string of a [pyarrow data type](https://arrow.apache.org/docs/python/api/datatypes.html)
    with `pyarrow` in brackets e.g. `"int64[pyarrow]"` or, for pyarrow data types
    that take parameters, a [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") initialized with a `pyarrow.DataType`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Most operations are supported and have been implemented using [pyarrow compute](https://arrow.apache.org/docs/python/api/compute.html)
    functions. We recommend installing the latest version of PyArrow to access the
    most recently implemented compute functions.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: 'This feature is experimental, and the API can change in a future release without
    warning.  ### DataFrame interchange protocol implementation'
  prefs: []
  type: TYPE_NORMAL
- en: Pandas now implement the DataFrame interchange API spec. See the full details
    on the API at [https://data-apis.org/dataframe-protocol/latest/index.html](https://data-apis.org/dataframe-protocol/latest/index.html)
  prefs: []
  type: TYPE_NORMAL
- en: 'The protocol consists of two parts:'
  prefs: []
  type: TYPE_NORMAL
- en: New method [`DataFrame.__dataframe__()`](../reference/api/pandas.DataFrame.__dataframe__.html#pandas.DataFrame.__dataframe__
    "pandas.DataFrame.__dataframe__") which produces the interchange object. It effectively
    “exports” the pandas dataframe as an interchange object so any other library which
    has the protocol implemented can “import” that dataframe without knowing anything
    about the producer except that it makes an interchange object.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'New function [`pandas.api.interchange.from_dataframe()`](../reference/api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe
    "pandas.api.interchange.from_dataframe") which can take an arbitrary interchange
    object from any conformant library and construct a pandas DataFrame out of it.  ###
    Styler'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The most notable development is the new method [`Styler.concat()`](../reference/api/pandas.io.formats.style.Styler.concat.html#pandas.io.formats.style.Styler.concat
    "pandas.io.formats.style.Styler.concat") which allows adding customised footer
    rows to visualise additional calculations on the data, e.g. totals and counts
    etc. ([GH 43875](https://github.com/pandas-dev/pandas/issues/43875), [GH 46186](https://github.com/pandas-dev/pandas/issues/46186))
  prefs: []
  type: TYPE_NORMAL
- en: Additionally there is an alternative output method [`Styler.to_string()`](../reference/api/pandas.io.formats.style.Styler.to_string.html#pandas.io.formats.style.Styler.to_string
    "pandas.io.formats.style.Styler.to_string"), which allows using the Styler’s formatting
    methods to create, for example, CSVs ([GH 44502](https://github.com/pandas-dev/pandas/issues/44502)).
  prefs: []
  type: TYPE_NORMAL
- en: A new feature [`Styler.relabel_index()`](../reference/api/pandas.io.formats.style.Styler.relabel_index.html#pandas.io.formats.style.Styler.relabel_index
    "pandas.io.formats.style.Styler.relabel_index") is also made available to provide
    full customisation of the display of index or column headers ([GH 47864](https://github.com/pandas-dev/pandas/issues/47864))
  prefs: []
  type: TYPE_NORMAL
- en: 'Minor feature improvements are:'
  prefs: []
  type: TYPE_NORMAL
- en: Adding the ability to render `border` and `border-{side}` CSS properties in
    Excel ([GH 42276](https://github.com/pandas-dev/pandas/issues/42276))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Making keyword arguments consist: [`Styler.highlight_null()`](../reference/api/pandas.io.formats.style.Styler.highlight_null.html#pandas.io.formats.style.Styler.highlight_null
    "pandas.io.formats.style.Styler.highlight_null") now accepts `color` and deprecates
    `null_color` although this remains backwards compatible ([GH 45907](https://github.com/pandas-dev/pandas/issues/45907))  ###
    Control of index with `group_keys` in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample")'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: The argument `group_keys` has been added to the method [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample"). As with [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby"), this argument controls the whether each group is
    added to the index in the resample when [`Resampler.apply()`](../reference/api/pandas.core.resample.Resampler.apply.html#pandas.core.resample.Resampler.apply
    "pandas.core.resample.Resampler.apply") is used.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: Not specifying the `group_keys` argument will retain the previous behavior and
    emit a warning if the result will change by specifying `group_keys=False`. In
    a future version of pandas, not specifying `group_keys` will default to the same
    behavior as `group_keys=False`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Previously, the resulting index would depend upon the values returned by `apply`,
    as seen in the following example.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]  ### from_dummies'
  prefs: []
  type: TYPE_NORMAL
- en: Added new function [`from_dummies()`](../reference/api/pandas.from_dummies.html#pandas.from_dummies
    "pandas.from_dummies") to convert a dummy coded [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") into a categorical [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]  ### Writing to ORC files'
  prefs: []
  type: TYPE_NORMAL
- en: The new method [`DataFrame.to_orc()`](../reference/api/pandas.DataFrame.to_orc.html#pandas.DataFrame.to_orc
    "pandas.DataFrame.to_orc") allows writing to ORC files ([GH 43864](https://github.com/pandas-dev/pandas/issues/43864)).
  prefs: []
  type: TYPE_NORMAL
- en: This functionality depends the [pyarrow](http://arrow.apache.org/docs/python/)
    library. For more details, see [the IO docs on ORC](../user_guide/io.html#io-orc).
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: It is *highly recommended* to install pyarrow using conda due to some issues
    occurred by pyarrow.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_orc()`](../reference/api/pandas.DataFrame.to_orc.html#pandas.DataFrame.to_orc
    "pandas.DataFrame.to_orc") requires pyarrow>=7.0.0.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_orc()`](../reference/api/pandas.DataFrame.to_orc.html#pandas.DataFrame.to_orc
    "pandas.DataFrame.to_orc") is not supported on Windows yet, you can find valid
    environments on [install optional dependencies](../getting_started/install.html#install-warn-orc).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For supported dtypes please refer to [supported ORC features in Arrow](https://arrow.apache.org/docs/cpp/orc.html#data-types).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Currently timezones in datetime columns are not preserved when a dataframe is
    converted into ORC files.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE4]  ### Reading directly from TAR archives'
  prefs: []
  type: TYPE_NORMAL
- en: I/O methods like [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") or [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") now allow reading and writing directly on TAR archives
    ([GH 44787](https://github.com/pandas-dev/pandas/issues/44787)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'This supports `.tar`, `.tar.gz`, `.tar.bz` and `.tar.xz2` archives. The used
    compression method is inferred from the filename. If the compression method cannot
    be inferred, use the `compression` argument:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '(`mode` being one of `tarfile.open`’s modes: [https://docs.python.org/3/library/tarfile.html#tarfile.open](https://docs.python.org/3/library/tarfile.html#tarfile.open))  ###
    read_xml now supports `dtype`, `converters`, and `parse_dates`'
  prefs: []
  type: TYPE_NORMAL
- en: Similar to other IO methods, [`pandas.read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") now supports assigning specific dtypes to columns, apply converter
    methods, and parse dates ([GH 43567](https://github.com/pandas-dev/pandas/issues/43567)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]  ### read_xml now supports large XML using `iterparse`'
  prefs: []
  type: TYPE_NORMAL
- en: For very large XML files that can range in hundreds of megabytes to gigabytes,
    [`pandas.read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml "pandas.read_xml")
    now supports parsing such sizeable files using [lxml’s iterparse](https://lxml.de/3.2/parsing.html#iterparse-and-iterwalk)
    and [etree’s iterparse](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.iterparse)
    which are memory-efficient methods to iterate through XML trees and extract specific
    elements and attributes without holding entire tree in memory ([GH 45442](https://github.com/pandas-dev/pandas/issues/45442)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]  ### Copy on Write'
  prefs: []
  type: TYPE_NORMAL
- en: A new feature `copy_on_write` was added ([GH 46958](https://github.com/pandas-dev/pandas/issues/46958)).
    Copy on write ensures that any DataFrame or Series derived from another in any
    way always behaves as a copy. Copy on write disallows updating any other object
    than the object the method was applied to.
  prefs: []
  type: TYPE_NORMAL
- en: 'Copy on write can be enabled through:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Alternatively, copy on write can be enabled locally through:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Without copy on write, the parent [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") is updated when updating a child [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") that was derived from this [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'With copy on write enabled, df won’t be updated anymore:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'A more detailed explanation can be found [here](https://phofl.github.io/cow-introduction.html).  ###
    Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") now raises when `arg` is dict but `na_action` is not either
    `None` or `''ignore''` ([GH 46588](https://github.com/pandas-dev/pandas/issues/46588))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.to_frame()`](../reference/api/pandas.MultiIndex.to_frame.html#pandas.MultiIndex.to_frame
    "pandas.MultiIndex.to_frame") now supports the argument `allow_duplicates` and
    raises on duplicate labels if it is missing or False ([GH 45245](https://github.com/pandas-dev/pandas/issues/45245))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`StringArray`](../reference/api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray") now accepts array-likes containing nan-likes (`None`,
    `np.nan`) for the `values` parameter in its constructor in addition to strings
    and [`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA "pandas.NA"). ([GH
    40839](https://github.com/pandas-dev/pandas/issues/40839))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved the rendering of `categories` in [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 45218](https://github.com/pandas-dev/pandas/issues/45218))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") will now allow the `subplots` parameter to be a list
    of iterables specifying column groups, so that columns may be grouped together
    in the same subplot ([GH 29688](https://github.com/pandas-dev/pandas/issues/29688)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") now preserves float64 arrays when downcasting would generate
    values not representable in float32 ([GH 43693](https://github.com/pandas-dev/pandas/issues/43693))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index") and [`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") now support the argument `allow_duplicates` ([GH
    44410](https://github.com/pandas-dev/pandas/issues/44410))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.min()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.min.html#pandas.core.groupby.DataFrameGroupBy.min
    "pandas.core.groupby.DataFrameGroupBy.min"), [`SeriesGroupBy.min()`](../reference/api/pandas.core.groupby.SeriesGroupBy.min.html#pandas.core.groupby.SeriesGroupBy.min
    "pandas.core.groupby.SeriesGroupBy.min"), [`DataFrameGroupBy.max()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.max.html#pandas.core.groupby.DataFrameGroupBy.max
    "pandas.core.groupby.DataFrameGroupBy.max"), and [`SeriesGroupBy.max()`](../reference/api/pandas.core.groupby.SeriesGroupBy.max.html#pandas.core.groupby.SeriesGroupBy.max
    "pandas.core.groupby.SeriesGroupBy.max") now supports [Numba](https://numba.pydata.org/)
    execution with the `engine` keyword ([GH 45428](https://github.com/pandas-dev/pandas/issues/45428))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now supports `defaultdict` as a `dtype` parameter ([GH 41574](https://github.com/pandas-dev/pandas/issues/41574))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") and [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") now support a `step` parameter with fixed-length windows
    ([GH 15354](https://github.com/pandas-dev/pandas/issues/15354))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented a `bool`-dtype [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), passing a bool-dtype array-like to `pd.Index` will now retain
    `bool` dtype instead of casting to `object` ([GH 45061](https://github.com/pandas-dev/pandas/issues/45061))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented a complex-dtype [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), passing a complex-dtype array-like to `pd.Index` will now retain
    complex dtype instead of casting to `object` ([GH 45845](https://github.com/pandas-dev/pandas/issues/45845))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    with `IntegerDtype` now supports bitwise operations ([GH 34463](https://github.com/pandas-dev/pandas/issues/34463))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add `milliseconds` field support for [`DateOffset`](../reference/api/pandas.tseries.offsets.DateOffset.html#pandas.tseries.offsets.DateOffset
    "pandas.tseries.offsets.DateOffset") ([GH 43371](https://github.com/pandas-dev/pandas/issues/43371))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") tries to maintain dtype of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") if fill value can be cast without loss of precision ([GH 45582](https://github.com/pandas-dev/pandas/issues/45582))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") now accepts a `names` argument which renames the
    index names ([GH 6878](https://github.com/pandas-dev/pandas/issues/6878))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    now raises when `levels` is given but `keys` is None ([GH 46653](https://github.com/pandas-dev/pandas/issues/46653))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    now raises when `levels` contains duplicate values ([GH 46653](https://github.com/pandas-dev/pandas/issues/46653))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `numeric_only` argument to [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr"), [`DataFrame.corrwith()`](../reference/api/pandas.DataFrame.corrwith.html#pandas.DataFrame.corrwith
    "pandas.DataFrame.corrwith"), [`DataFrame.cov()`](../reference/api/pandas.DataFrame.cov.html#pandas.DataFrame.cov
    "pandas.DataFrame.cov"), [`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin"), [`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax"), [`DataFrameGroupBy.idxmin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin"), [`DataFrameGroupBy.idxmax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax"), [`DataFrameGroupBy.var()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.var.html#pandas.core.groupby.DataFrameGroupBy.var
    "pandas.core.groupby.DataFrameGroupBy.var"), [`SeriesGroupBy.var()`](../reference/api/pandas.core.groupby.SeriesGroupBy.var.html#pandas.core.groupby.SeriesGroupBy.var
    "pandas.core.groupby.SeriesGroupBy.var"), [`DataFrameGroupBy.std()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.std.html#pandas.core.groupby.DataFrameGroupBy.std
    "pandas.core.groupby.DataFrameGroupBy.std"), [`SeriesGroupBy.std()`](../reference/api/pandas.core.groupby.SeriesGroupBy.std.html#pandas.core.groupby.SeriesGroupBy.std
    "pandas.core.groupby.SeriesGroupBy.std"), [`DataFrameGroupBy.sem()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sem.html#pandas.core.groupby.DataFrameGroupBy.sem
    "pandas.core.groupby.DataFrameGroupBy.sem"), [`SeriesGroupBy.sem()`](../reference/api/pandas.core.groupby.SeriesGroupBy.sem.html#pandas.core.groupby.SeriesGroupBy.sem
    "pandas.core.groupby.SeriesGroupBy.sem"), and [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") ([GH 46560](https://github.com/pandas-dev/pandas/issues/46560))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A [`errors.PerformanceWarning`](../reference/api/pandas.errors.PerformanceWarning.html#pandas.errors.PerformanceWarning
    "pandas.errors.PerformanceWarning") is now thrown when using `string[pyarrow]`
    dtype with methods that don’t dispatch to `pyarrow.compute` methods ([GH 42613](https://github.com/pandas-dev/pandas/issues/42613),
    [GH 46725](https://github.com/pandas-dev/pandas/issues/46725))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `validate` argument to [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") ([GH 46622](https://github.com/pandas-dev/pandas/issues/46622))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `numeric_only` argument to [`Resampler.sum()`](../reference/api/pandas.core.resample.Resampler.sum.html#pandas.core.resample.Resampler.sum
    "pandas.core.resample.Resampler.sum"), [`Resampler.prod()`](../reference/api/pandas.core.resample.Resampler.prod.html#pandas.core.resample.Resampler.prod
    "pandas.core.resample.Resampler.prod"), [`Resampler.min()`](../reference/api/pandas.core.resample.Resampler.min.html#pandas.core.resample.Resampler.min
    "pandas.core.resample.Resampler.min"), [`Resampler.max()`](../reference/api/pandas.core.resample.Resampler.max.html#pandas.core.resample.Resampler.max
    "pandas.core.resample.Resampler.max"), [`Resampler.first()`](../reference/api/pandas.core.resample.Resampler.first.html#pandas.core.resample.Resampler.first
    "pandas.core.resample.Resampler.first"), and [`Resampler.last()`](../reference/api/pandas.core.resample.Resampler.last.html#pandas.core.resample.Resampler.last
    "pandas.core.resample.Resampler.last") ([GH 46442](https://github.com/pandas-dev/pandas/issues/46442))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`times` argument in `ExponentialMovingWindow` now accepts `np.timedelta64`
    ([GH 47003](https://github.com/pandas-dev/pandas/issues/47003))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataError`](../reference/api/pandas.errors.DataError.html#pandas.errors.DataError
    "pandas.errors.DataError"), [`SpecificationError`](../reference/api/pandas.errors.SpecificationError.html#pandas.errors.SpecificationError
    "pandas.errors.SpecificationError"), [`SettingWithCopyError`](../reference/api/pandas.errors.SettingWithCopyError.html#pandas.errors.SettingWithCopyError
    "pandas.errors.SettingWithCopyError"), [`SettingWithCopyWarning`](../reference/api/pandas.errors.SettingWithCopyWarning.html#pandas.errors.SettingWithCopyWarning
    "pandas.errors.SettingWithCopyWarning"), [`NumExprClobberingError`](../reference/api/pandas.errors.NumExprClobberingError.html#pandas.errors.NumExprClobberingError
    "pandas.errors.NumExprClobberingError"), [`UndefinedVariableError`](../reference/api/pandas.errors.UndefinedVariableError.html#pandas.errors.UndefinedVariableError
    "pandas.errors.UndefinedVariableError"), [`IndexingError`](../reference/api/pandas.errors.IndexingError.html#pandas.errors.IndexingError
    "pandas.errors.IndexingError"), [`PyperclipException`](../reference/api/pandas.errors.PyperclipException.html#pandas.errors.PyperclipException
    "pandas.errors.PyperclipException"), [`PyperclipWindowsException`](../reference/api/pandas.errors.PyperclipWindowsException.html#pandas.errors.PyperclipWindowsException
    "pandas.errors.PyperclipWindowsException"), [`CSSWarning`](../reference/api/pandas.errors.CSSWarning.html#pandas.errors.CSSWarning
    "pandas.errors.CSSWarning"), [`PossibleDataLossError`](../reference/api/pandas.errors.PossibleDataLossError.html#pandas.errors.PossibleDataLossError
    "pandas.errors.PossibleDataLossError"), [`ClosedFileError`](../reference/api/pandas.errors.ClosedFileError.html#pandas.errors.ClosedFileError
    "pandas.errors.ClosedFileError"), [`IncompatibilityWarning`](../reference/api/pandas.errors.IncompatibilityWarning.html#pandas.errors.IncompatibilityWarning
    "pandas.errors.IncompatibilityWarning"), [`AttributeConflictWarning`](../reference/api/pandas.errors.AttributeConflictWarning.html#pandas.errors.AttributeConflictWarning
    "pandas.errors.AttributeConflictWarning"), [`DatabaseError`](../reference/api/pandas.errors.DatabaseError.html#pandas.errors.DatabaseError
    "pandas.errors.DatabaseError"), [`PossiblePrecisionLoss`](../reference/api/pandas.errors.PossiblePrecisionLoss.html#pandas.errors.PossiblePrecisionLoss
    "pandas.errors.PossiblePrecisionLoss"), [`ValueLabelTypeMismatch`](../reference/api/pandas.errors.ValueLabelTypeMismatch.html#pandas.errors.ValueLabelTypeMismatch
    "pandas.errors.ValueLabelTypeMismatch"), [`InvalidColumnName`](../reference/api/pandas.errors.InvalidColumnName.html#pandas.errors.InvalidColumnName
    "pandas.errors.InvalidColumnName"), and [`CategoricalConversionWarning`](../reference/api/pandas.errors.CategoricalConversionWarning.html#pandas.errors.CategoricalConversionWarning
    "pandas.errors.CategoricalConversionWarning") are now exposed in `pandas.errors`
    ([GH 27656](https://github.com/pandas-dev/pandas/issues/27656))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `check_like` argument to [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") ([GH 47247](https://github.com/pandas-dev/pandas/issues/47247))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add support for [`DataFrameGroupBy.ohlc()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.ohlc.html#pandas.core.groupby.DataFrameGroupBy.ohlc
    "pandas.core.groupby.DataFrameGroupBy.ohlc") and [`SeriesGroupBy.ohlc()`](../reference/api/pandas.core.groupby.SeriesGroupBy.ohlc.html#pandas.core.groupby.SeriesGroupBy.ohlc
    "pandas.core.groupby.SeriesGroupBy.ohlc") for extension array dtypes ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow reading compressed SAS files with [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") (e.g., `.sas7bdat.gz` files)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") now supports extracting links from table cells ([GH 13141](https://github.com/pandas-dev/pandas/issues/13141))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.astype()` now supports casting timezone-naive indexes to `datetime64[s]`,
    `datetime64[ms]`, and `datetime64[us]`, and timezone-aware indexes to the corresponding
    `datetime64[unit, tzname]` dtypes ([GH 47579](https://github.com/pandas-dev/pandas/issues/47579))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    reducers (e.g. `min`, `max`, `sum`, `mean`) will now successfully operate when
    the dtype is numeric and `numeric_only=True` is provided; previously this would
    raise a `NotImplementedError` ([GH 47500](https://github.com/pandas-dev/pandas/issues/47500))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`RangeIndex.union()` now can return a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") instead of a `Int64Index` if the resulting values are equally
    spaced ([GH 47557](https://github.com/pandas-dev/pandas/issues/47557), [GH 43885](https://github.com/pandas-dev/pandas/issues/43885))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.compare()`](../reference/api/pandas.DataFrame.compare.html#pandas.DataFrame.compare
    "pandas.DataFrame.compare") now accepts an argument `result_names` to allow the
    user to specify the result’s names of both left and right DataFrame which are
    being compared. This is by default `''self''` and `''other''` ([GH 44354](https://github.com/pandas-dev/pandas/issues/44354))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile") gained a `method` argument that can accept `table`
    to evaluate multi-column quantiles ([GH 43881](https://github.com/pandas-dev/pandas/issues/43881))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Interval`](../reference/api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    now supports checking whether one interval is contained by another interval ([GH
    46613](https://github.com/pandas-dev/pandas/issues/46613))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `copy` keyword to [`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") and [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") to allow user to set axis on a new object without
    necessarily copying the underlying data ([GH 47932](https://github.com/pandas-dev/pandas/issues/47932))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The method [`ExtensionArray.factorize()`](../reference/api/pandas.api.extensions.ExtensionArray.factorize.html#pandas.api.extensions.ExtensionArray.factorize
    "pandas.api.extensions.ExtensionArray.factorize") accepts `use_na_sentinel=False`
    for determining how null values are to be treated ([GH 46601](https://github.com/pandas-dev/pandas/issues/46601))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The `Dockerfile` now installs a dedicated `pandas-dev` virtual environment
    for pandas development instead of using the `base` environment ([GH 48427](https://github.com/pandas-dev/pandas/issues/48427))  ##
    Notable bug fixes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are bug fixes that might have notable behavior changes.
  prefs: []
  type: TYPE_NORMAL
- en: '### Using `dropna=True` with `groupby` transforms'
  prefs: []
  type: TYPE_NORMAL
- en: A transform is an operation whose result has the same size as its input. When
    the result is a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), it is also required that the index of the result matches that
    of the input. In pandas 1.4, using [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") or [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") with null values in the groups
    and `dropna=True` gave incorrect results. Demonstrated by the examples below,
    the incorrect results either contained incorrect values, or the result did not
    have the same index as the input.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '*Old behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]  ### Serializing tz-naive Timestamps with to_json() with `iso_dates=True`'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json"), [`Series.to_json()`](../reference/api/pandas.Series.to_json.html#pandas.Series.to_json
    "pandas.Series.to_json"), and `Index.to_json()` would incorrectly localize DatetimeArrays/DatetimeIndexes
    with tz-naive Timestamps to UTC. ([GH 38760](https://github.com/pandas-dev/pandas/issues/38760))'
  prefs: []
  type: TYPE_NORMAL
- en: Note that this patch does not fix the localization of tz-aware Timestamps to
    UTC upon serialization. (Related issue [GH 12997](https://github.com/pandas-dev/pandas/issues/12997))
  prefs: []
  type: TYPE_NORMAL
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]  ### DataFrameGroupBy.value_counts with non-grouping categorical columns
    and `observed=True`'
  prefs: []
  type: TYPE_NORMAL
- en: Calling [`DataFrameGroupBy.value_counts()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.value_counts.html#pandas.core.groupby.DataFrameGroupBy.value_counts
    "pandas.core.groupby.DataFrameGroupBy.value_counts") with `observed=True` would
    incorrectly drop non-observed categories of non-grouping columns ([GH 46357](https://github.com/pandas-dev/pandas/issues/46357)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]  ## Backwards incompatible API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '### Increased minimum versions for dependencies'
  prefs: []
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated. If installed,
    we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.20.3 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| mypy (dev) | 0.971 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.9.3 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| blosc | 1.21.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.3.2 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 2021.07.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| hypothesis | 6.13.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 2021.07.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| jinja2 | 3.0.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 4.6.3 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.53.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.7.3 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 3.0.7 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas-gbq | 0.15.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| psycopg2 | 2.8.6 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 1.0.2 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyreadstat | 1.1.2 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyxlsb | 1.0.8 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 2021.08.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.7.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.4.16 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| tabulate | 0.8.9 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.19.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 1.4.3 |  | X |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.9.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| blosc | 1.21.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.3.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| brotlipy | 0.7.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.4.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 2021.08.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| html5lib | 1.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| hypothesis | 6.13.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 2021.08.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| jinja2 | 3.0.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 4.6.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 3.3.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.53.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.7.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| odfpy | 1.4.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 3.0.7 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas-gbq | 0.15.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| psycopg2 | 2.8.6 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 1.0.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 1.0.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyreadstat | 1.1.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.6.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| python-snappy | 0.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pyxlsb | 1.0.8 | X |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 2021.08.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.7.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.4.16 | X |'
  prefs: []
  type: TYPE_TB
- en: '| tabulate | 0.8.9 | X |'
  prefs: []
  type: TYPE_TB
- en: '| tzdata | 2022a |  |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.19.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlrd | 2.0.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 1.4.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlwt | 1.3.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| zstandard | 0.15.2 |  |'
  prefs: []
  type: TYPE_TB
- en: 'See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.  ### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: BigQuery I/O methods [`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq
    "pandas.read_gbq") and [`DataFrame.to_gbq()`](../reference/api/pandas.DataFrame.to_gbq.html#pandas.DataFrame.to_gbq
    "pandas.DataFrame.to_gbq") default to `auth_local_webserver = True`. Google has
    deprecated the `auth_local_webserver = False` [“out of band” (copy-paste) flow](https://developers.googleblog.com/2022/02/making-oauth-flows-safer.html?m=1#disallowed-oob).
    The `auth_local_webserver = False` option is planned to stop working in October
    2022\. ([GH 46312](https://github.com/pandas-dev/pandas/issues/46312))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    now raises `FileNotFoundError` (previously `ValueError`) when input is a string
    ending in `.json`, `.json.gz`, `.json.bz2`, etc. but no such file exists. ([GH
    29102](https://github.com/pandas-dev/pandas/issues/29102))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Operations with [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") or [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") that would previously raise `OverflowError` instead raise
    `OutOfBoundsDatetime` or `OutOfBoundsTimedelta` where appropriate ([GH 47268](https://github.com/pandas-dev/pandas/issues/47268))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    previously returned `None`, it now returns an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 47410](https://github.com/pandas-dev/pandas/issues/47410))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor raises if `index` or `columns` arguments are sets ([GH 47215](https://github.com/pandas-dev/pandas/issues/47215))  ##
    Deprecations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: In the next major version release, 2.0, several larger API changes are being
    considered without a formal deprecation such as making the standard library [zoneinfo](https://docs.python.org/3/library/zoneinfo.html)
    the default timezone implementation instead of `pytz`, having the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") support all data types instead of having multiple subclasses ([`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex"), `Int64Index`, etc.), and more. The changes under consideration
    are logged in [this GitHub issue](https://github.com/pandas-dev/pandas/issues/44823),
    and any feedback or concerns are welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '### Label-based integer slicing on a Series with an Int64Index or RangeIndex'
  prefs: []
  type: TYPE_NORMAL
- en: In a future version, integer slicing on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a `Int64Index` or [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") will be treated as *label-based*, not positional. This will
    make the behavior consistent with other `Series.__getitem__()` and `Series.__setitem__()`
    behaviors ([GH 45162](https://github.com/pandas-dev/pandas/issues/45162)).
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'In the old behavior, `ser[2:4]` treats the slice as positional:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Old behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'In a future version, this will be treated as label-based:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Future behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: To retain the old behavior, use `series.iloc[i:j]`. To get the future behavior,
    use `series.loc[i:j]`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Slicing on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") will not be affected.  ### [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") attributes'
  prefs: []
  type: TYPE_NORMAL
- en: All attributes of [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") were previously documented as not public. However some third
    party Excel engines documented accessing `ExcelWriter.book` or `ExcelWriter.sheets`,
    and users were utilizing these and possibly other attributes. Previously these
    attributes were not safe to use; e.g. modifications to `ExcelWriter.book` would
    not update `ExcelWriter.sheets` and conversely. In order to support this, pandas
    has made some attributes public and improved their implementations so that they
    may now be safely used. ([GH 45572](https://github.com/pandas-dev/pandas/issues/45572))
  prefs: []
  type: TYPE_NORMAL
- en: The following attributes are now public and considered safe to access.
  prefs: []
  type: TYPE_NORMAL
- en: '`book`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`check_extension`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`close`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`date_format`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`datetime_format`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`engine`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`if_sheet_exists`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`sheets`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`supported_extensions`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: The following attributes have been deprecated. They now raise a `FutureWarning`
    when accessed and will be removed in a future version. Users should be aware that
    their usage is considered unsafe, and can lead to unexpected results.
  prefs: []
  type: TYPE_NORMAL
- en: '`cur_sheet`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`handles`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`path`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`save`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`write_cells`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: 'See the documentation of [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") for further details.  ### Using `group_keys` with transformers
    in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply")'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions of pandas, if it was inferred that the function passed
    to [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") or [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") was a transformer (i.e. the resulting
    index was equal to the input index), the `group_keys` argument of [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") was ignored and the group keys would never be added to
    the index of the result. In the future, the group keys will be added to the index
    when the user specifies `group_keys=True`.
  prefs: []
  type: TYPE_NORMAL
- en: As `group_keys=True` is the default value of [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby"), not specifying `group_keys` with a transformer will
    raise a `FutureWarning`. This can be silenced and the previous behavior retained
    by specifying `group_keys=False`.
  prefs: []
  type: TYPE_NORMAL
- en: Inplace operation when setting values with `loc` and `iloc`
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Most of the time setting values with [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") attempts to set values inplace, only falling back to
    inserting a new array if necessary. There are some cases where this rule is not
    followed, for example when setting an entire column from an array with different
    dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: '*Old behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: This behavior is deprecated. In a future version, setting an entire column with
    iloc will attempt to operate inplace.
  prefs: []
  type: TYPE_NORMAL
- en: '*Future behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'To get the old behavior, use `DataFrame.__setitem__()` directly:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'To get the old behaviour when `df.columns` is not unique and you want to change
    a single column by index, you can use `DataFrame.isetitem()`, which has been added
    in pandas 1.5:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: '### `numeric_only` default value'
  prefs: []
  type: TYPE_NORMAL
- en: Across the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), `DataFrameGroupBy`, and `Resampler` operations such as `min`,
    `sum`, and `idxmax`, the default value of the `numeric_only` argument, if it exists
    at all, was inconsistent. Furthermore, operations with the default value `None`
    can lead to surprising results. ([GH 46560](https://github.com/pandas-dev/pandas/issues/46560))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: To avoid this behavior, the specifying the value `numeric_only=None` has been
    deprecated, and will be removed in a future version of pandas. In the future,
    all operations with a `numeric_only` argument will default to `False`. Users should
    either call the operation only with columns that can be operated on, or specify
    `numeric_only=True` to operate only on Boolean, integer, and float columns.
  prefs: []
  type: TYPE_NORMAL
- en: In order to support the transition to the new behavior, the following methods
    have gained the `numeric_only` argument.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.corrwith()`](../reference/api/pandas.DataFrame.corrwith.html#pandas.DataFrame.corrwith
    "pandas.DataFrame.corrwith")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.cov()`](../reference/api/pandas.DataFrame.cov.html#pandas.DataFrame.cov
    "pandas.DataFrame.cov")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.cummin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.idxmin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.idxmax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.var()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.var.html#pandas.core.groupby.DataFrameGroupBy.var
    "pandas.core.groupby.DataFrameGroupBy.var")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.std()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.std.html#pandas.core.groupby.DataFrameGroupBy.std
    "pandas.core.groupby.DataFrameGroupBy.std")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.sem()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sem.html#pandas.core.groupby.DataFrameGroupBy.sem
    "pandas.core.groupby.DataFrameGroupBy.sem")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Resampler.mean()`](../reference/api/pandas.core.resample.Resampler.mean.html#pandas.core.resample.Resampler.mean
    "pandas.core.resample.Resampler.mean")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Resampler.median()`](../reference/api/pandas.core.resample.Resampler.median.html#pandas.core.resample.Resampler.median
    "pandas.core.resample.Resampler.median")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Resampler.sem()`](../reference/api/pandas.core.resample.Resampler.sem.html#pandas.core.resample.Resampler.sem
    "pandas.core.resample.Resampler.sem")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Resampler.std()`](../reference/api/pandas.core.resample.Resampler.std.html#pandas.core.resample.Resampler.std
    "pandas.core.resample.Resampler.std")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Resampler.var()`](../reference/api/pandas.core.resample.Resampler.var.html#pandas.core.resample.Resampler.var
    "pandas.core.resample.Resampler.var")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") operations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.expanding()`](../reference/api/pandas.DataFrame.expanding.html#pandas.DataFrame.expanding
    "pandas.DataFrame.expanding") operations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm") operations  ### Other Deprecations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the keyword `line_terminator` in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") and [`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv"), use `lineterminator` instead; this is for consistency
    with [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    and the standard library ‘csv’ module ([GH 9568](https://github.com/pandas-dev/pandas/issues/9568))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of `SparseArray.astype()`, [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype"), and [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") with [`SparseDtype`](../reference/api/pandas.SparseDtype.html#pandas.SparseDtype
    "pandas.SparseDtype") when passing a non-sparse `dtype`. In a future version,
    this will cast to that non-sparse dtype instead of wrapping it in a [`SparseDtype`](../reference/api/pandas.SparseDtype.html#pandas.SparseDtype
    "pandas.SparseDtype") ([GH 34457](https://github.com/pandas-dev/pandas/issues/34457))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of `DatetimeIndex.intersection()` and `DatetimeIndex.symmetric_difference()`
    (`union` behavior was already deprecated in version 1.3.0) with mixed time zones;
    in a future version both will be cast to UTC instead of object dtype ([GH 39328](https://github.com/pandas-dev/pandas/issues/39328),
    [GH 45357](https://github.com/pandas-dev/pandas/issues/45357))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `DataFrame.iteritems()`, `Series.iteritems()`, `HDFStore.iteritems()`
    in favor of [`DataFrame.items()`](../reference/api/pandas.DataFrame.items.html#pandas.DataFrame.items
    "pandas.DataFrame.items"), [`Series.items()`](../reference/api/pandas.Series.items.html#pandas.Series.items
    "pandas.Series.items"), `HDFStore.items()` ([GH 45321](https://github.com/pandas-dev/pandas/issues/45321))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Series.is_monotonic()` and `Index.is_monotonic()` in favor of [`Series.is_monotonic_increasing()`](../reference/api/pandas.Series.is_monotonic_increasing.html#pandas.Series.is_monotonic_increasing
    "pandas.Series.is_monotonic_increasing") and [`Index.is_monotonic_increasing()`](../reference/api/pandas.Index.is_monotonic_increasing.html#pandas.Index.is_monotonic_increasing
    "pandas.Index.is_monotonic_increasing") ([GH 45422](https://github.com/pandas-dev/pandas/issues/45422),
    [GH 21335](https://github.com/pandas-dev/pandas/issues/21335))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of `DatetimeIndex.astype()`, `TimedeltaIndex.astype()`,
    `PeriodIndex.astype()` when converting to an integer dtype other than `int64`.
    In a future version, these will convert to exactly the specified dtype (instead
    of always `int64`) and will raise if the conversion overflows ([GH 45034](https://github.com/pandas-dev/pandas/issues/45034))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `__array_wrap__` method of DataFrame and Series, rely on standard
    numpy ufuncs instead ([GH 45451](https://github.com/pandas-dev/pandas/issues/45451))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated treating float-dtype data as wall-times when passed with a timezone
    to [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    or [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 45573](https://github.com/pandas-dev/pandas/issues/45573))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") and [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") with `timedelta64[ns]` dtype and incompatible fill
    value; in a future version this will cast to a common dtype (usually object) instead
    of raising, matching the behavior of other dtypes ([GH 45746](https://github.com/pandas-dev/pandas/issues/45746))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `warn` parameter in [`infer_freq()`](../reference/api/pandas.infer_freq.html#pandas.infer_freq
    "pandas.infer_freq") ([GH 45947](https://github.com/pandas-dev/pandas/issues/45947))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`ExtensionArray.argsort()`](../reference/api/pandas.api.extensions.ExtensionArray.argsort.html#pandas.api.extensions.ExtensionArray.argsort
    "pandas.api.extensions.ExtensionArray.argsort") ([GH 46134](https://github.com/pandas-dev/pandas/issues/46134))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated treating all-bool `object`-dtype columns as bool-like in [`DataFrame.any()`](../reference/api/pandas.DataFrame.any.html#pandas.DataFrame.any
    "pandas.DataFrame.any") and [`DataFrame.all()`](../reference/api/pandas.DataFrame.all.html#pandas.DataFrame.all
    "pandas.DataFrame.all") with `bool_only=True`, explicitly cast to bool instead
    ([GH 46188](https://github.com/pandas-dev/pandas/issues/46188))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of method [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile"), attribute `numeric_only` will default False. Including
    datetime/timedelta columns in the result ([GH 7308](https://github.com/pandas-dev/pandas/issues/7308)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Timedelta.freq` and `Timedelta.is_populated` ([GH 46430](https://github.com/pandas-dev/pandas/issues/46430))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Timedelta.delta` ([GH 46476](https://github.com/pandas-dev/pandas/issues/46476))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing arguments as positional in [`DataFrame.any()`](../reference/api/pandas.DataFrame.any.html#pandas.DataFrame.any
    "pandas.DataFrame.any") and [`Series.any()`](../reference/api/pandas.Series.any.html#pandas.Series.any
    "pandas.Series.any") ([GH 44802](https://github.com/pandas-dev/pandas/issues/44802))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing positional arguments to [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") and [`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot
    "pandas.pivot") except `data` ([GH 30228](https://github.com/pandas-dev/pandas/issues/30228))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the methods `DataFrame.mad()`, `Series.mad()`, and the corresponding
    groupby methods ([GH 11787](https://github.com/pandas-dev/pandas/issues/11787))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated positional arguments to [`Index.join()`](../reference/api/pandas.Index.join.html#pandas.Index.join
    "pandas.Index.join") except for `other`, use keyword-only arguments instead of
    positional arguments ([GH 46518](https://github.com/pandas-dev/pandas/issues/46518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated positional arguments to `StringMethods.rsplit()` and `StringMethods.split()`
    except for `pat`, use keyword-only arguments instead of positional arguments ([GH
    47423](https://github.com/pandas-dev/pandas/issues/47423))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated indexing on a timezone-naive [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") using a string representing a timezone-aware datetime
    ([GH 46903](https://github.com/pandas-dev/pandas/issues/46903), [GH 36148](https://github.com/pandas-dev/pandas/issues/36148))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing `unit="M"` or `unit="Y"` in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") constructor with a non-round float value ([GH 47267](https://github.com/pandas-dev/pandas/issues/47267))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `display.column_space` global configuration option ([GH 7576](https://github.com/pandas-dev/pandas/issues/7576))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the argument `na_sentinel` in [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize"), [`Index.factorize()`](../reference/api/pandas.Index.factorize.html#pandas.Index.factorize
    "pandas.Index.factorize"), and [`ExtensionArray.factorize()`](../reference/api/pandas.api.extensions.ExtensionArray.factorize.html#pandas.api.extensions.ExtensionArray.factorize
    "pandas.api.extensions.ExtensionArray.factorize"); pass `use_na_sentinel=True`
    instead to use the sentinel `-1` for NaN values and `use_na_sentinel=False` instead
    of `na_sentinel=None` to encode NaN values ([GH 46910](https://github.com/pandas-dev/pandas/issues/46910))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") not aligning the result when
    the UDF returned DataFrame ([GH 45648](https://github.com/pandas-dev/pandas/issues/45648))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clarified warning from [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when delimited dates can’t be parsed in accordance to specified
    `dayfirst` argument ([GH 46210](https://github.com/pandas-dev/pandas/issues/46210))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Emit warning from [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when delimited dates can’t be parsed in accordance to specified
    `dayfirst` argument even for dates where leading zero is omitted (e.g. `31/1/2001`)
    ([GH 47880](https://github.com/pandas-dev/pandas/issues/47880))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and `Resampler` reducers (e.g. `min`, `max`, `sum`, `mean`) raising a `NotImplementedError`
    when the dtype is non-numric and `numeric_only=True` is provided; this will raise
    a `TypeError` in a future version ([GH 47500](https://github.com/pandas-dev/pandas/issues/47500))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.rank()`](../reference/api/pandas.Series.rank.html#pandas.Series.rank
    "pandas.Series.rank") returning an empty result when the dtype is non-numeric
    and `numeric_only=True` is provided; this will raise a `TypeError` in a future
    version ([GH 47500](https://github.com/pandas-dev/pandas/issues/47500))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated argument `errors` for [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask"), [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where"), [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask"), and [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") as `errors` had no effect on this methods ([GH 47728](https://github.com/pandas-dev/pandas/issues/47728))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated arguments `*args` and `**kwargs` in `Rolling`, `Expanding`, and `ExponentialMovingWindow`
    ops. ([GH 47836](https://github.com/pandas-dev/pandas/issues/47836))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `inplace` keyword in `Categorical.set_ordered()`, `Categorical.as_ordered()`,
    and `Categorical.as_unordered()` ([GH 37643](https://github.com/pandas-dev/pandas/issues/37643))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated setting a categorical’s categories with `cat.categories = ['a', 'b',
    'c']`, use `Categorical.rename_categories()` instead ([GH 37643](https://github.com/pandas-dev/pandas/issues/37643))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated unused arguments `encoding` and `verbose` in [`Series.to_excel()`](../reference/api/pandas.Series.to_excel.html#pandas.Series.to_excel
    "pandas.Series.to_excel") and [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") ([GH 47912](https://github.com/pandas-dev/pandas/issues/47912))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `inplace` keyword in [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") and [`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis"), use `obj = obj.set_axis(..., copy=False)` instead ([GH
    48130](https://github.com/pandas-dev/pandas/issues/48130))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated producing a single element when iterating over a `DataFrameGroupBy`
    or a `SeriesGroupBy` that has been grouped by a list of length 1; A tuple of length
    one will be returned instead ([GH 42795](https://github.com/pandas-dev/pandas/issues/42795))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed up warning message of deprecation of `MultiIndex.lesort_depth()` as public
    method, as the message previously referred to `MultiIndex.is_lexsorted()` instead
    ([GH 38701](https://github.com/pandas-dev/pandas/issues/38701))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `sort_columns` argument in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") and [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") ([GH 47563](https://github.com/pandas-dev/pandas/issues/47563)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated positional arguments for all but the first argument of [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") and [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata"), use keyword arguments instead ([GH 48128](https://github.com/pandas-dev/pandas/issues/48128)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `mangle_dupe_cols` argument in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf"), [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") and [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"). The argument was never implemented, and a new argument where
    the renaming pattern can be specified will be added instead ([GH 47718](https://github.com/pandas-dev/pandas/issues/47718))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deprecated allowing `dtype=''datetime64''` or `dtype=np.datetime64` in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype"), use “datetime64[ns]” instead ([GH 47844](https://github.com/pandas-dev/pandas/issues/47844))  ##
    Performance improvements'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.corrwith()`](../reference/api/pandas.DataFrame.corrwith.html#pandas.DataFrame.corrwith
    "pandas.DataFrame.corrwith") for column-wise (axis=0) Pearson and Spearman correlation
    when other is a [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    ([GH 46174](https://github.com/pandas-dev/pandas/issues/46174))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") for some user-defined DataFrame
    -> Series functions ([GH 45387](https://github.com/pandas-dev/pandas/issues/45387))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.duplicated()`](../reference/api/pandas.DataFrame.duplicated.html#pandas.DataFrame.duplicated
    "pandas.DataFrame.duplicated") when subset consists of only one column ([GH 45236](https://github.com/pandas-dev/pandas/issues/45236))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.diff()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.diff.html#pandas.core.groupby.DataFrameGroupBy.diff
    "pandas.core.groupby.DataFrameGroupBy.diff") and [`SeriesGroupBy.diff()`](../reference/api/pandas.core.groupby.SeriesGroupBy.diff.html#pandas.core.groupby.SeriesGroupBy.diff
    "pandas.core.groupby.SeriesGroupBy.diff") ([GH 16706](https://github.com/pandas-dev/pandas/issues/16706))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") when broadcasting values for user-defined
    functions ([GH 45708](https://github.com/pandas-dev/pandas/issues/45708))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") for user-defined functions when
    only a single group exists ([GH 44977](https://github.com/pandas-dev/pandas/issues/44977))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") when grouping on a non-unique unsorted
    index ([GH 46527](https://github.com/pandas-dev/pandas/issues/46527))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") for tuple-based indexing of a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 45681](https://github.com/pandas-dev/pandas/issues/45681),
    [GH 46040](https://github.com/pandas-dev/pandas/issues/46040), [GH 46330](https://github.com/pandas-dev/pandas/issues/46330))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.var()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.var.html#pandas.core.groupby.DataFrameGroupBy.var
    "pandas.core.groupby.DataFrameGroupBy.var") and [`SeriesGroupBy.var()`](../reference/api/pandas.core.groupby.SeriesGroupBy.var.html#pandas.core.groupby.SeriesGroupBy.var
    "pandas.core.groupby.SeriesGroupBy.var") with `ddof` other than one ([GH 48152](https://github.com/pandas-dev/pandas/issues/48152))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.to_records()`](../reference/api/pandas.DataFrame.to_records.html#pandas.DataFrame.to_records
    "pandas.DataFrame.to_records") when the index is a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 47263](https://github.com/pandas-dev/pandas/issues/47263))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `MultiIndex.values` when the MultiIndex contains
    levels of type DatetimeIndex, TimedeltaIndex or ExtensionDtypes ([GH 46288](https://github.com/pandas-dev/pandas/issues/46288))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") when left and/or right are empty ([GH 45838](https://github.com/pandas-dev/pandas/issues/45838))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") when left and/or right are empty ([GH 46015](https://github.com/pandas-dev/pandas/issues/46015))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") and [`Series.reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex") when target is a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 46235](https://github.com/pandas-dev/pandas/issues/46235))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when setting values in a pyarrow backed string array
    ([GH 46400](https://github.com/pandas-dev/pandas/issues/46400))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") ([GH 46109](https://github.com/pandas-dev/pandas/issues/46109))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") constructors for extension dtype scalars ([GH 45854](https://github.com/pandas-dev/pandas/issues/45854))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") when `nrows` argument provided ([GH 32727](https://github.com/pandas-dev/pandas/issues/32727))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Styler.to_excel()`](../reference/api/pandas.io.formats.style.Styler.to_excel.html#pandas.io.formats.style.Styler.to_excel
    "pandas.io.formats.style.Styler.to_excel") when applying repeated CSS formats
    ([GH 47371](https://github.com/pandas-dev/pandas/issues/47371))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `MultiIndex.is_monotonic_increasing()` ([GH 47458](https://github.com/pandas-dev/pandas/issues/47458))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `BusinessHour` `str` and `repr` ([GH 44764](https://github.com/pandas-dev/pandas/issues/44764))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in datetime arrays string formatting when one of the
    default strftime formats `"%Y-%m-%d %H:%M:%S"` or `"%Y-%m-%d %H:%M:%S.%f"` is
    used. ([GH 44764](https://github.com/pandas-dev/pandas/issues/44764))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.to_sql()`](../reference/api/pandas.Series.to_sql.html#pandas.Series.to_sql
    "pandas.Series.to_sql") and [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") (`SQLiteTable`) when processing time arrays. ([GH 44764](https://github.com/pandas-dev/pandas/issues/44764))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement to [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") ([GH 47404](https://github.com/pandas-dev/pandas/issues/47404))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Performance improvement in `argmax` and `argmin` for [`arrays.SparseArray`](../reference/api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray") ([GH 34197](https://github.com/pandas-dev/pandas/issues/34197))  ##
    Bug fixes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Categorical.view()` not accepting integer dtypes ([GH 25464](https://github.com/pandas-dev/pandas/issues/25464))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CategoricalIndex.union()` when the index’s categories are integer-dtype
    and the index contains `NaN` values incorrectly raising instead of casting to
    `float64` ([GH 45362](https://github.com/pandas-dev/pandas/issues/45362))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    when concatenating two (or more) unordered [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") variables, whose categories are permutations, yields
    incorrect index values ([GH 24845](https://github.com/pandas-dev/pandas/issues/24845))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile") with datetime-like dtypes and no rows incorrectly
    returning `float64` dtype instead of retaining datetime-like dtype ([GH 41544](https://github.com/pandas-dev/pandas/issues/41544))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with sequences of `np.str_` objects incorrectly raising
    ([GH 32264](https://github.com/pandas-dev/pandas/issues/32264))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") construction when passing datetime components as positional
    arguments and `tzinfo` as a keyword argument incorrectly raising ([GH 31929](https://github.com/pandas-dev/pandas/issues/31929))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype") when casting from object dtype to `timedelta64[ns]` dtype
    incorrectly casting `np.datetime64("NaT")` values to `np.timedelta64("NaT")` instead
    of raising ([GH 45722](https://github.com/pandas-dev/pandas/issues/45722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") index when passing categorical
    column ([GH 44324](https://github.com/pandas-dev/pandas/issues/44324))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex.tz_localize()`](../reference/api/pandas.DatetimeIndex.tz_localize.html#pandas.DatetimeIndex.tz_localize
    "pandas.DatetimeIndex.tz_localize") localizing to UTC failing to make a copy of
    the underlying data ([GH 46460](https://github.com/pandas-dev/pandas/issues/46460))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.resolution()` incorrectly returning “day” instead of “nanosecond”
    for nanosecond-resolution indexes ([GH 46903](https://github.com/pandas-dev/pandas/issues/46903))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with an integer or float value and `unit="Y"` or `unit="M"`
    giving slightly-wrong results ([GH 47266](https://github.com/pandas-dev/pandas/issues/47266))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeArray`](../reference/api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") construction when passed another [`DatetimeArray`](../reference/api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") and `freq=None` incorrectly inferring the freq
    from the given array ([GH 47296](https://github.com/pandas-dev/pandas/issues/47296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") where `OutOfBoundsDatetime` would be thrown even if `errors=coerce`
    if there were more than 50 rows ([GH 45319](https://github.com/pandas-dev/pandas/issues/45319))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when adding a `DateOffset` to a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") would not add the `nanoseconds` field ([GH 47856](https://github.com/pandas-dev/pandas/issues/47856))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `astype_nansafe()` astype(“timedelta64[ns]”) fails when np.nan is included
    ([GH 45798](https://github.com/pandas-dev/pandas/issues/45798))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") with a `np.timedelta64` object and a `unit` sometimes silently
    overflowing and returning incorrect results instead of raising `OutOfBoundsTimedelta`
    ([GH 46827](https://github.com/pandas-dev/pandas/issues/46827))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") from a large integer or float with `unit="W"` silently overflowing
    and returning incorrect results instead of raising `OutOfBoundsTimedelta` ([GH
    47268](https://github.com/pandas-dev/pandas/issues/47268))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Time Zones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") constructor raising when passed a `ZoneInfo` tzinfo object
    ([GH 46425](https://github.com/pandas-dev/pandas/issues/46425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in operations with array-likes with `dtype="boolean"` and [`NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") incorrectly altering the array in-place ([GH 45421](https://github.com/pandas-dev/pandas/issues/45421))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in arithmetic operations with nullable types without [`NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") values not matching the same operation with non-nullable types ([GH
    48223](https://github.com/pandas-dev/pandas/issues/48223))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `floordiv` when dividing by `IntegerDtype` `0` would return `0` instead
    of `inf` ([GH 48223](https://github.com/pandas-dev/pandas/issues/48223))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in division, `pow` and `mod` operations on array-likes with `dtype="boolean"`
    not being like their `np.bool_` counterparts ([GH 46063](https://github.com/pandas-dev/pandas/issues/46063))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in multiplying a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `IntegerDtype` or `FloatingDtype` by an array-like with
    `timedelta64[ns]` dtype incorrectly raising ([GH 45622](https://github.com/pandas-dev/pandas/issues/45622))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `mean()` where the optional dependency `bottleneck` causes precision
    loss linear in the length of the array. `bottleneck` has been disabled for `mean()`
    improving the loss to log-linear but may result in a performance decrease. ([GH
    42878](https://github.com/pandas-dev/pandas/issues/42878))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") not preserving subclasses ([GH 40810](https://github.com/pandas-dev/pandas/issues/40810))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") from a float-containing list or a floating-dtype ndarray-like
    (e.g. `dask.Array`) and an integer dtype raising instead of casting like we would
    with an `np.ndarray` ([GH 40110](https://github.com/pandas-dev/pandas/issues/40110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Float64Index.astype()` to unsigned integer dtype incorrectly casting
    to `np.int64` dtype ([GH 45309](https://github.com/pandas-dev/pandas/issues/45309))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") and [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") from floating dtype to unsigned integer dtype failing
    to raise in the presence of negative values ([GH 45151](https://github.com/pandas-dev/pandas/issues/45151))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    with `FloatingDtype` and values containing float-castable strings incorrectly
    raising ([GH 45424](https://github.com/pandas-dev/pandas/issues/45424))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when comparing string and datetime64ns objects causing `OverflowError` exception.
    ([GH 45506](https://github.com/pandas-dev/pandas/issues/45506))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in metaclass of generic abstract dtypes causing [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") and [`Series.apply()`](../reference/api/pandas.Series.apply.html#pandas.Series.apply
    "pandas.Series.apply") to raise for the built-in function `type` ([GH 46684](https://github.com/pandas-dev/pandas/issues/46684))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_records()`](../reference/api/pandas.DataFrame.to_records.html#pandas.DataFrame.to_records
    "pandas.DataFrame.to_records") returning inconsistent numpy types if the index
    was a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 47263](https://github.com/pandas-dev/pandas/issues/47263))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") for `orient="list"` or `orient="index"` was not returning
    native types ([GH 46751](https://github.com/pandas-dev/pandas/issues/46751))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") that returns a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") instead of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") when applied to an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and `axis=1` ([GH 39111](https://github.com/pandas-dev/pandas/issues/39111))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when inferring the dtype from an iterable that is *not* a NumPy `ndarray`
    consisting of all NumPy unsigned integer scalars did not result in an unsigned
    integer dtype ([GH 47294](https://github.com/pandas-dev/pandas/issues/47294))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") when pandas objects (e.g. `'Timestamp'`) were column
    names ([GH 44603](https://github.com/pandas-dev/pandas/issues/44603))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`str.startswith()`](https://docs.python.org/3/library/stdtypes.html#str.startswith
    "(in Python v3.12)") and [`str.endswith()`](https://docs.python.org/3/library/stdtypes.html#str.endswith
    "(in Python v3.12)") when using other series as parameter _pat_. Now raises `TypeError`
    ([GH 3485](https://github.com/pandas-dev/pandas/issues/3485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.zfill()`](../reference/api/pandas.Series.str.zfill.html#pandas.Series.str.zfill
    "pandas.Series.str.zfill") when strings contain leading signs, padding ‘0’ before
    the sign character rather than after as `str.zfill` from standard library ([GH
    20868](https://github.com/pandas-dev/pandas/issues/20868))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `IntervalArray.__setitem__()` when setting `np.nan` into an integer-backed
    array raising `ValueError` instead of `TypeError` ([GH 45484](https://github.com/pandas-dev/pandas/issues/45484))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") when using datetime64[ns, tz] as a dtype string ([GH 46999](https://github.com/pandas-dev/pandas/issues/46999))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") where indexing a single row on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a single ExtensionDtype column gave a copy instead of
    a view on the underlying data ([GH 45241](https://github.com/pandas-dev/pandas/issues/45241))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__getitem__()` returning copy when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has duplicated columns even if a unique column is selected
    ([GH 45316](https://github.com/pandas-dev/pandas/issues/45316), [GH 41062](https://github.com/pandas-dev/pandas/issues/41062))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.align()`](../reference/api/pandas.Series.align.html#pandas.Series.align
    "pandas.Series.align") does not create [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with union of levels when both MultiIndexes intersections
    are identical ([GH 45224](https://github.com/pandas-dev/pandas/issues/45224))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting a NA value (`None` or `np.nan`) into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with int-based [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") incorrectly casting to object dtype instead of a float-based
    [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") ([GH 45568](https://github.com/pandas-dev/pandas/issues/45568))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing setting values into an `ExtensionDtype` column with `df.iloc[:,
    i] = values` with `values` having the same dtype as `df.iloc[:, i]` incorrectly
    inserting a new array instead of setting in-place ([GH 33457](https://github.com/pandas-dev/pandas/issues/33457))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` with a non-integer [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") when using an integer key to set a value that cannot be set inplace
    where a `ValueError` was raised instead of casting to a common dtype ([GH 45070](https://github.com/pandas-dev/pandas/issues/45070))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") not casting `None` to `NA` when setting value as a list
    into [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    ([GH 47987](https://github.com/pandas-dev/pandas/issues/47987))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` when setting incompatible values into a `PeriodDtype`
    or `IntervalDtype` [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") raising when indexing with a boolean mask but coercing when indexing
    with otherwise-equivalent indexers; these now consistently coerce, along with
    [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask") and [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") ([GH 45768](https://github.com/pandas-dev/pandas/issues/45768))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") with multiple columns with datetime-like dtypes failing
    to downcast results consistent with other dtypes ([GH 45837](https://github.com/pandas-dev/pandas/issues/45837))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `isin()` upcasting to `float64` with unsigned integer dtype and list-like
    argument without a dtype ([GH 46485](https://github.com/pandas-dev/pandas/issues/46485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.loc.__setitem__()` and `Series.loc.__getitem__()` not raising
    when using multiple keys without using a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 13831](https://github.com/pandas-dev/pandas/issues/13831))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.reindex()`](../reference/api/pandas.Index.reindex.html#pandas.Index.reindex
    "pandas.Index.reindex") raising `AssertionError` when `level` was specified but
    no [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    was given; level is ignored now ([GH 35132](https://github.com/pandas-dev/pandas/issues/35132))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when setting a value too large for a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") dtype failing to coerce to a common type ([GH 26049](https://github.com/pandas-dev/pandas/issues/26049),
    [GH 32878](https://github.com/pandas-dev/pandas/issues/32878))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `loc.__setitem__()` treating `range` keys as positional instead of label-based
    ([GH 45479](https://github.com/pandas-dev/pandas/issues/45479))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` casting extension array dtypes to object when
    setting with a scalar key and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") as value ([GH 46896](https://github.com/pandas-dev/pandas/issues/46896))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` when setting a scalar to a nullable pandas dtype
    would not raise a `TypeError` if the scalar could not be cast (losslessly) to
    the nullable type ([GH 45404](https://github.com/pandas-dev/pandas/issues/45404))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` when setting `boolean` dtype values containing
    `NA` incorrectly raising instead of casting to `boolean` dtype ([GH 45462](https://github.com/pandas-dev/pandas/issues/45462))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") raising with boolean indexer containing `NA` when [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") did not match ([GH 46551](https://github.com/pandas-dev/pandas/issues/46551))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` where setting [`NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") into a numeric-dtype [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") would incorrectly upcast to object-dtype rather than treating
    the value as `np.nan` ([GH 44199](https://github.com/pandas-dev/pandas/issues/44199))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") when setting values to a column and right hand side is
    a dictionary ([GH 47216](https://github.com/pandas-dev/pandas/issues/47216))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` with `datetime64[ns]` dtype, an all-`False` boolean
    mask, and an incompatible value incorrectly casting to `object` instead of retaining
    `datetime64[ns]` dtype ([GH 45967](https://github.com/pandas-dev/pandas/issues/45967))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index.__getitem__()` raising `ValueError` when indexer is from boolean
    dtype with `NA` ([GH 45806](https://github.com/pandas-dev/pandas/issues/45806))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` losing precision when enlarging [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with scalar ([GH 32346](https://github.com/pandas-dev/pandas/issues/32346))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask") with `inplace=True` or setting values with a boolean mask
    with small integer dtypes incorrectly raising ([GH 45750](https://github.com/pandas-dev/pandas/issues/45750))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask") with `inplace=True` and `ExtensionDtype` columns incorrectly
    raising ([GH 45577](https://github.com/pandas-dev/pandas/issues/45577))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in getting a column from a DataFrame with an object-dtype row index with
    datetime-like values: the resulting Series now preserves the exact object-dtype
    Index from the parent DataFrame ([GH 42950](https://github.com/pandas-dev/pandas/issues/42950))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__getattribute__()` raising `AttributeError` if columns have
    `"string"` dtype ([GH 46185](https://github.com/pandas-dev/pandas/issues/46185))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.compare()`](../reference/api/pandas.DataFrame.compare.html#pandas.DataFrame.compare
    "pandas.DataFrame.compare") returning all `NaN` column when comparing extension
    array dtype and numpy dtype ([GH 44014](https://github.com/pandas-dev/pandas/issues/44014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") setting wrong values with `"boolean"` mask for numpy
    dtype ([GH 44014](https://github.com/pandas-dev/pandas/issues/44014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with a `np.str_` key incorrectly raising ([GH 45580](https://github.com/pandas-dev/pandas/issues/45580))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CategoricalIndex.get_indexer()` when index contains `NaN` values, resulting
    in elements that are in target but not present in the index to be mapped to the
    index of the NaN element, instead of -1 ([GH 45361](https://github.com/pandas-dev/pandas/issues/45361))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting large integer values into [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `float32` or `float16` dtype incorrectly altering these
    values instead of coercing to `float64` dtype ([GH 45844](https://github.com/pandas-dev/pandas/issues/45844))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.asof()`](../reference/api/pandas.Series.asof.html#pandas.Series.asof
    "pandas.Series.asof") and [`DataFrame.asof()`](../reference/api/pandas.DataFrame.asof.html#pandas.DataFrame.asof
    "pandas.DataFrame.asof") incorrectly casting bool-dtype results to `float64` dtype
    ([GH 16063](https://github.com/pandas-dev/pandas/issues/16063))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `NDFrame.xs()`, [`DataFrame.iterrows()`](../reference/api/pandas.DataFrame.iterrows.html#pandas.DataFrame.iterrows
    "pandas.DataFrame.iterrows"), [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") not always propagating metadata ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sum()`](../reference/api/pandas.DataFrame.sum.html#pandas.DataFrame.sum
    "pandas.DataFrame.sum") min_count changes dtype if input contains NaNs ([GH 46947](https://github.com/pandas-dev/pandas/issues/46947))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalTree` that lead to an infinite recursion. ([GH 46658](https://github.com/pandas-dev/pandas/issues/46658))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") raising `AttributeError` when indexing on `NA`, rather than
    putting `NaT` in its place. ([GH 46673](https://github.com/pandas-dev/pandas/issues/46673))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.at()`](../reference/api/pandas.DataFrame.at.html#pandas.DataFrame.at
    "pandas.DataFrame.at") would allow the modification of multiple columns ([GH 48296](https://github.com/pandas-dev/pandas/issues/48296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") and [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") with `downcast` keyword not being respected in some
    cases where there are no NA values present ([GH 45423](https://github.com/pandas-dev/pandas/issues/45423))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") and [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") with [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") and incompatible value raising instead of casting to a
    common (usually object) dtype ([GH 45796](https://github.com/pandas-dev/pandas/issues/45796))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") not respecting `na_action` argument if mapper is a `dict`
    or [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    ([GH 47527](https://github.com/pandas-dev/pandas/issues/47527))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") with object-dtype column not returning a copy
    with `inplace=False` ([GH 45791](https://github.com/pandas-dev/pandas/issues/45791))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") allows to set both `how` and `thresh` incompatible
    arguments ([GH 46575](https://github.com/pandas-dev/pandas/issues/46575))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") ignored `axis` when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") is single block ([GH 47713](https://github.com/pandas-dev/pandas/issues/47713))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") returning empty result when slicing a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with a negative step size and non-null start/stop values
    ([GH 46156](https://github.com/pandas-dev/pandas/issues/46156))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raising when slicing a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with a negative step size other than -1 ([GH 46156](https://github.com/pandas-dev/pandas/issues/46156))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raising when slicing a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with a negative step size and slicing a non-int labeled index
    level ([GH 46156](https://github.com/pandas-dev/pandas/issues/46156))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.to_numpy()`](../reference/api/pandas.Series.to_numpy.html#pandas.Series.to_numpy
    "pandas.Series.to_numpy") where multiindexed Series could not be converted to
    numpy arrays when an `na_value` was supplied ([GH 45774](https://github.com/pandas-dev/pandas/issues/45774))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.equals` not commutative when only one side has extension
    array dtype ([GH 46026](https://github.com/pandas-dev/pandas/issues/46026))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.from_tuples()`](../reference/api/pandas.MultiIndex.from_tuples.html#pandas.MultiIndex.from_tuples
    "pandas.MultiIndex.from_tuples") cannot construct Index of empty tuples ([GH 45608](https://github.com/pandas-dev/pandas/issues/45608))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I/O
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") where no error is raised if the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") contains `-np.inf` ([GH 45350](https://github.com/pandas-dev/pandas/issues/45350))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") results in an infinite loop with certain `skiprows` callables
    ([GH 45585](https://github.com/pandas-dev/pandas/issues/45585))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.info()`](../reference/api/pandas.DataFrame.info.html#pandas.DataFrame.info
    "pandas.DataFrame.info") where a new line at the end of the output is omitted
    when called on an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 45494](https://github.com/pandas-dev/pandas/issues/45494))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not recognizing line break for `on_bad_lines="warn"` for `engine="c"`
    ([GH 41710](https://github.com/pandas-dev/pandas/issues/41710))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") not respecting `float_format` for `Float64` dtype ([GH
    45991](https://github.com/pandas-dev/pandas/issues/45991))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not respecting a specified converter to index columns in all
    cases ([GH 40589](https://github.com/pandas-dev/pandas/issues/40589))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") interpreting second row as [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") names even when `index_col=False` ([GH 46569](https://github.com/pandas-dev/pandas/issues/46569))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") when `engine="pyarrow"` which caused partial write to disk
    when column of unsupported datatype was passed ([GH 44914](https://github.com/pandas-dev/pandas/issues/44914))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") and [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") would raise when writing an empty DataFrame to a `.ods`
    file ([GH 45793](https://github.com/pandas-dev/pandas/issues/45793))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") ignoring non-existing header row for `engine="python"` ([GH
    47400](https://github.com/pandas-dev/pandas/issues/47400))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") raising uncontrolled `IndexError` when `header` references
    non-existing rows ([GH 43143](https://github.com/pandas-dev/pandas/issues/43143))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") where elements surrounding `<br>` were joined without a space
    between them ([GH 29528](https://github.com/pandas-dev/pandas/issues/29528))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when data is longer than header leading to issues with callables
    in `usecols` expecting strings ([GH 46997](https://github.com/pandas-dev/pandas/issues/46997))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in Parquet roundtrip for Interval dtype with `datetime64[ns]` subtype ([GH
    45881](https://github.com/pandas-dev/pandas/issues/45881))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") when reading a `.ods` file with newlines between xml elements
    ([GH 45598](https://github.com/pandas-dev/pandas/issues/45598))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") when `engine="fastparquet"` where the file was not closed
    on error ([GH 46555](https://github.com/pandas-dev/pandas/issues/46555))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") now excludes the `border` attribute from `<table>`
    elements when `border` keyword is set to `False`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") with certain types of compressed SAS7BDAT files ([GH 35545](https://github.com/pandas-dev/pandas/issues/35545))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") not forward filling [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") when no names were given ([GH 47487](https://github.com/pandas-dev/pandas/issues/47487))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") returned `None` rather than an empty DataFrame for SAS7BDAT
    files with zero rows ([GH 18198](https://github.com/pandas-dev/pandas/issues/18198))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") using wrong missing value with extension arrays
    in [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    ([GH 47986](https://github.com/pandas-dev/pandas/issues/47986))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `StataWriter` where value labels were always written with default encoding
    ([GH 46750](https://github.com/pandas-dev/pandas/issues/46750))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `StataWriterUTF8` where some valid characters were removed from variable
    names ([GH 47276](https://github.com/pandas-dev/pandas/issues/47276))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") when writing an empty dataframe with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 19543](https://github.com/pandas-dev/pandas/issues/19543))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") with RLE-compressed SAS7BDAT files that contain 0x40 control
    bytes ([GH 31243](https://github.com/pandas-dev/pandas/issues/31243))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") that scrambled column names ([GH 31243](https://github.com/pandas-dev/pandas/issues/31243))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") with RLE-compressed SAS7BDAT files that contain 0x00 control
    bytes ([GH 47099](https://github.com/pandas-dev/pandas/issues/47099))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") with `use_nullable_dtypes=True` where `float64` dtype was
    returned instead of nullable `Float64` dtype ([GH 45694](https://github.com/pandas-dev/pandas/issues/45694))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") where `PeriodDtype` would not make the serialization
    roundtrip when read back with [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") ([GH 44720](https://github.com/pandas-dev/pandas/issues/44720))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") when reading XML files with Chinese character tags and would
    raise `XMLSyntaxError` ([GH 47902](https://github.com/pandas-dev/pandas/issues/47902))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Period
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in subtraction of [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") from [`PeriodArray`](../reference/api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray") returning wrong results ([GH 45999](https://github.com/pandas-dev/pandas/issues/45999))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period.strftime()`](../reference/api/pandas.Period.strftime.html#pandas.Period.strftime
    "pandas.Period.strftime") and [`PeriodIndex.strftime()`](../reference/api/pandas.PeriodIndex.strftime.html#pandas.PeriodIndex.strftime
    "pandas.PeriodIndex.strftime"), directives `%l` and `%u` were giving wrong results
    ([GH 46252](https://github.com/pandas-dev/pandas/issues/46252))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in inferring an incorrect `freq` when passing a string to [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") microseconds that are a multiple of 1000 ([GH 46811](https://github.com/pandas-dev/pandas/issues/46811))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") from a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") or `np.datetime64` object with non-zero nanoseconds and `freq="ns"`
    incorrectly truncating the nanoseconds ([GH 46811](https://github.com/pandas-dev/pandas/issues/46811))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in adding `np.timedelta64("NaT", "ns")` to a [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") with a timedelta-like freq incorrectly raising `IncompatibleFrequency`
    instead of returning `NaT` ([GH 47196](https://github.com/pandas-dev/pandas/issues/47196))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in adding an array of integers to an array with [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") giving incorrect results when `dtype.freq.n > 1` ([GH 47209](https://github.com/pandas-dev/pandas/issues/47209))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in subtracting a [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") from an array with [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") returning incorrect results instead of raising `OverflowError`
    when the operation overflows ([GH 47538](https://github.com/pandas-dev/pandas/issues/47538))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.barh()`](../reference/api/pandas.DataFrame.plot.barh.html#pandas.DataFrame.plot.barh
    "pandas.DataFrame.plot.barh") that prevented labeling the x-axis and `xlabel`
    updating the y-axis label ([GH 45144](https://github.com/pandas-dev/pandas/issues/45144))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.box()`](../reference/api/pandas.DataFrame.plot.box.html#pandas.DataFrame.plot.box
    "pandas.DataFrame.plot.box") that prevented labeling the x-axis ([GH 45463](https://github.com/pandas-dev/pandas/issues/45463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.boxplot()`](../reference/api/pandas.DataFrame.boxplot.html#pandas.DataFrame.boxplot
    "pandas.DataFrame.boxplot") that prevented passing in `xlabel` and `ylabel` ([GH
    45463](https://github.com/pandas-dev/pandas/issues/45463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.boxplot()`](../reference/api/pandas.DataFrame.boxplot.html#pandas.DataFrame.boxplot
    "pandas.DataFrame.boxplot") that prevented specifying `vert=False` ([GH 36918](https://github.com/pandas-dev/pandas/issues/36918))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") that prevented specifying `norm` ([GH 45809](https://github.com/pandas-dev/pandas/issues/45809))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fix showing “None” as ylabel in [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") when not setting ylabel ([GH 46129](https://github.com/pandas-dev/pandas/issues/46129))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") that led to xticks and vertical grids being improperly
    placed when plotting a quarterly series ([GH 47602](https://github.com/pandas-dev/pandas/issues/47602))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") that prevented setting y-axis label, limits and ticks
    for a secondary y-axis ([GH 47753](https://github.com/pandas-dev/pandas/issues/47753))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") ignoring `closed="right"` on [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") ([GH 45414](https://github.com/pandas-dev/pandas/issues/45414))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") fails when `func="size"` and
    the input DataFrame has multiple columns ([GH 27469](https://github.com/pandas-dev/pandas/issues/27469))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.size()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.size.html#pandas.core.groupby.DataFrameGroupBy.size
    "pandas.core.groupby.DataFrameGroupBy.size") and [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") with `func="size"` produced
    incorrect results when `axis=1` ([GH 45715](https://github.com/pandas-dev/pandas/issues/45715))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`ExponentialMovingWindow.mean()`](../reference/api/pandas.core.window.ewm.ExponentialMovingWindow.mean.html#pandas.core.window.ewm.ExponentialMovingWindow.mean
    "pandas.core.window.ewm.ExponentialMovingWindow.mean") with `axis=1` and `engine='numba'`
    when the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has more columns than rows ([GH 46086](https://github.com/pandas-dev/pandas/issues/46086))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when using `engine="numba"` would return the same jitted function when modifying
    `engine_kwargs` ([GH 46086](https://github.com/pandas-dev/pandas/issues/46086))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") fails when `axis=1` and `func`
    is `"first"` or `"last"` ([GH 45986](https://github.com/pandas-dev/pandas/issues/45986))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cumsum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum") with `skipna=False` giving incorrect
    results ([GH 46216](https://github.com/pandas-dev/pandas/issues/46216))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.sum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum"), [`SeriesGroupBy.sum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.sum.html#pandas.core.groupby.SeriesGroupBy.sum
    "pandas.core.groupby.SeriesGroupBy.sum"), [`DataFrameGroupBy.prod()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.prod.html#pandas.core.groupby.DataFrameGroupBy.prod
    "pandas.core.groupby.DataFrameGroupBy.prod"), `SeriesGroupBy.prod, :meth:()`.DataFrameGroupBy.cumsum`,
    and [`SeriesGroupBy.cumsum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cumsum.html#pandas.core.groupby.SeriesGroupBy.cumsum
    "pandas.core.groupby.SeriesGroupBy.cumsum") with integer dtypes losing precision
    ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cumsum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum") and [`SeriesGroupBy.cumsum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cumsum.html#pandas.core.groupby.SeriesGroupBy.cumsum
    "pandas.core.groupby.SeriesGroupBy.cumsum") with `timedelta64[ns]` dtype failing
    to recognize `NaT` as a null value ([GH 46216](https://github.com/pandas-dev/pandas/issues/46216))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cumsum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum") and [`SeriesGroupBy.cumsum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cumsum.html#pandas.core.groupby.SeriesGroupBy.cumsum
    "pandas.core.groupby.SeriesGroupBy.cumsum") with integer dtypes causing overflows
    when sum was bigger than maximum of dtype ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cummin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin"), [`SeriesGroupBy.cummin()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummin.html#pandas.core.groupby.SeriesGroupBy.cummin
    "pandas.core.groupby.SeriesGroupBy.cummin"), [`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax") and [`SeriesGroupBy.cummax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummax.html#pandas.core.groupby.SeriesGroupBy.cummax
    "pandas.core.groupby.SeriesGroupBy.cummax") with nullable dtypes incorrectly altering
    the original data in place ([GH 46220](https://github.com/pandas-dev/pandas/issues/46220))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") raising error when `None` is in first level of [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 47348](https://github.com/pandas-dev/pandas/issues/47348))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax") and [`SeriesGroupBy.cummax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummax.html#pandas.core.groupby.SeriesGroupBy.cummax
    "pandas.core.groupby.SeriesGroupBy.cummax") with `int64` dtype with leading value
    being the smallest possible int64 ([GH 46382](https://github.com/pandas-dev/pandas/issues/46382))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cumprod()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumprod.html#pandas.core.groupby.DataFrameGroupBy.cumprod
    "pandas.core.groupby.DataFrameGroupBy.cumprod") and [`SeriesGroupBy.cumprod()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cumprod.html#pandas.core.groupby.SeriesGroupBy.cumprod
    "pandas.core.groupby.SeriesGroupBy.cumprod") `NaN` influences calculation in different
    columns with `skipna=False` ([GH 48064](https://github.com/pandas-dev/pandas/issues/48064))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.max()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.max.html#pandas.core.groupby.DataFrameGroupBy.max
    "pandas.core.groupby.DataFrameGroupBy.max") and [`SeriesGroupBy.max()`](../reference/api/pandas.core.groupby.SeriesGroupBy.max.html#pandas.core.groupby.SeriesGroupBy.max
    "pandas.core.groupby.SeriesGroupBy.max") with empty groups and `uint64` dtype
    incorrectly raising `RuntimeError` ([GH 46408](https://github.com/pandas-dev/pandas/issues/46408))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") would fail when `func` was a string
    and args or kwargs were supplied ([GH 46479](https://github.com/pandas-dev/pandas/issues/46479))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SeriesGroupBy.apply()` would incorrectly name its result when there
    was a unique group ([GH 46369](https://github.com/pandas-dev/pandas/issues/46369))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.sum()`](../reference/api/pandas.core.window.rolling.Rolling.sum.html#pandas.core.window.rolling.Rolling.sum
    "pandas.core.window.rolling.Rolling.sum") and [`Rolling.mean()`](../reference/api/pandas.core.window.rolling.Rolling.mean.html#pandas.core.window.rolling.Rolling.mean
    "pandas.core.window.rolling.Rolling.mean") would give incorrect result with window
    of same values ([GH 42064](https://github.com/pandas-dev/pandas/issues/42064),
    [GH 46431](https://github.com/pandas-dev/pandas/issues/46431))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.var()`](../reference/api/pandas.core.window.rolling.Rolling.var.html#pandas.core.window.rolling.Rolling.var
    "pandas.core.window.rolling.Rolling.var") and [`Rolling.std()`](../reference/api/pandas.core.window.rolling.Rolling.std.html#pandas.core.window.rolling.Rolling.std
    "pandas.core.window.rolling.Rolling.std") would give non-zero result with window
    of same values ([GH 42064](https://github.com/pandas-dev/pandas/issues/42064))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.skew()`](../reference/api/pandas.core.window.rolling.Rolling.skew.html#pandas.core.window.rolling.Rolling.skew
    "pandas.core.window.rolling.Rolling.skew") and [`Rolling.kurt()`](../reference/api/pandas.core.window.rolling.Rolling.kurt.html#pandas.core.window.rolling.Rolling.kurt
    "pandas.core.window.rolling.Rolling.kurt") would give NaN with window of same
    values ([GH 30993](https://github.com/pandas-dev/pandas/issues/30993))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.var()`](../reference/api/pandas.core.window.rolling.Rolling.var.html#pandas.core.window.rolling.Rolling.var
    "pandas.core.window.rolling.Rolling.var") would segfault calculating weighted
    variance when window size was larger than data size ([GH 46760](https://github.com/pandas-dev/pandas/issues/46760))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Grouper.__repr__()` where `dropna` was not included. Now it is ([GH
    46754](https://github.com/pandas-dev/pandas/issues/46754))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") gives ValueError when center=True, axis=1 and win_type
    is specified ([GH 46135](https://github.com/pandas-dev/pandas/issues/46135))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.describe()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.describe.html#pandas.core.groupby.DataFrameGroupBy.describe
    "pandas.core.groupby.DataFrameGroupBy.describe") and [`SeriesGroupBy.describe()`](../reference/api/pandas.core.groupby.SeriesGroupBy.describe.html#pandas.core.groupby.SeriesGroupBy.describe
    "pandas.core.groupby.SeriesGroupBy.describe") produces inconsistent results for
    empty datasets ([GH 41575](https://github.com/pandas-dev/pandas/issues/41575))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") reduction methods when used with `on` would attempt
    to aggregate the provided column ([GH 47079](https://github.com/pandas-dev/pandas/issues/47079))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") would not respect `dropna=False` when the input DataFrame/Series
    had a NaN values in a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 46783](https://github.com/pandas-dev/pandas/issues/46783))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.resample()` raises `KeyError` when getting the result
    from a key list which misses the resample key ([GH 47362](https://github.com/pandas-dev/pandas/issues/47362))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") would lose index columns when the DataFrame is empty
    for transforms, like fillna ([GH 47787](https://github.com/pandas-dev/pandas/issues/47787))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") with `dropna=False` and `sort=False` would put any null
    groups at the end instead the order that they are encountered ([GH 46584](https://github.com/pandas-dev/pandas/issues/46584))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    between a [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    with integer dtype and another with [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") with integer categories and containing `NaN` values
    casting to object dtype instead of `float64` ([GH 45359](https://github.com/pandas-dev/pandas/issues/45359))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") that selected object and categorical dtypes but not string
    ([GH 44965](https://github.com/pandas-dev/pandas/issues/44965))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.align()`](../reference/api/pandas.DataFrame.align.html#pandas.DataFrame.align
    "pandas.DataFrame.align") when aligning a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") to a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with another [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 46001](https://github.com/pandas-dev/pandas/issues/46001))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in concatenation with `IntegerDtype`, or `FloatingDtype` arrays where the
    resulting dtype did not mirror the behavior of the non-nullable dtypes ([GH 46379](https://github.com/pandas-dev/pandas/issues/46379))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    losing dtype of columns when `join="outer"` and `sort=True` ([GH 47329](https://github.com/pandas-dev/pandas/issues/47329))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    not sorting the column names when `None` is included ([GH 47331](https://github.com/pandas-dev/pandas/issues/47331))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    with identical key leads to error when indexing [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 46519](https://github.com/pandas-dev/pandas/issues/46519))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") raising `TypeError` when `dropna=True` and aggregation column
    has extension array dtype ([GH 47477](https://github.com/pandas-dev/pandas/issues/47477))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    raising error for `how="cross"` when using `FIPS` mode in ssl library ([GH 48024](https://github.com/pandas-dev/pandas/issues/48024))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") with a list when using suffixes to join DataFrames with
    duplicate column names ([GH 46396](https://github.com/pandas-dev/pandas/issues/46396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") with `sort=False` results in sorted index ([GH
    17041](https://github.com/pandas-dev/pandas/issues/17041))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    when `axis=1` and `sort=False` where the resulting Index was a `Int64Index` instead
    of a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") ([GH 46675](https://github.com/pandas-dev/pandas/issues/46675))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`wide_to_long()`](../reference/api/pandas.wide_to_long.html#pandas.wide_to_long
    "pandas.wide_to_long") raises when `stubnames` is missing in columns and `i` contains
    string dtype column ([GH 46044](https://github.com/pandas-dev/pandas/issues/46044))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") with categorical index results in unexpected reordering
    ([GH 47812](https://github.com/pandas-dev/pandas/issues/47812))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") and [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") with `SparseDtype` failing to retain the array’s `fill_value`
    ([GH 45691](https://github.com/pandas-dev/pandas/issues/45691))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseArray.unique()` fails to keep original elements order ([GH 47809](https://github.com/pandas-dev/pandas/issues/47809))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `IntegerArray.searchsorted()` and `FloatingArray.searchsorted()` returning
    inconsistent results when acting on `np.nan` ([GH 45255](https://github.com/pandas-dev/pandas/issues/45255))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styler
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug when attempting to apply styling functions to an empty DataFrame subset
    ([GH 45313](https://github.com/pandas-dev/pandas/issues/45313))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CSSToExcelConverter` leading to `TypeError` when border color provided
    without border style for `xlsxwriter` engine ([GH 42276](https://github.com/pandas-dev/pandas/issues/42276))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Styler.set_sticky()` leading to white text on white background in dark
    mode ([GH 46984](https://github.com/pandas-dev/pandas/issues/46984))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Styler.to_latex()` causing `UnboundLocalError` when `clines="all;data"`
    and the `DataFrame` has no rows. ([GH 47203](https://github.com/pandas-dev/pandas/issues/47203))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in `Styler.to_excel()` when using `vertical-align: middle;` with `xlsxwriter`
    engine ([GH 30107](https://github.com/pandas-dev/pandas/issues/30107))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when applying styles to a DataFrame with boolean column labels ([GH 47838](https://github.com/pandas-dev/pandas/issues/47838))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metadata
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fixed metadata propagation in [`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed metadata propagation in [`DataFrame.explode()`](../reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode
    "pandas.DataFrame.explode") ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Bug in [`assert_index_equal()`](../reference/api/pandas.testing.assert_index_equal.html#pandas.testing.assert_index_equal
    "pandas.testing.assert_index_equal") with `names=True` and `check_order=False`
    not checking names ([GH 47328](https://github.com/pandas-dev/pandas/issues/47328))  ##
    Contributors'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A total of 271 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: Aadharsh Acharya +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aadharsh-Acharya +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aadhi Manivannan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam Bowden
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aditya Agarwal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ahmed Ibrahim +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alastair Porter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Povel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex-Blade
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexandra Sciocchetti +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AlonMenczer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andras Deak +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Hawyrluk
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andy Grigg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aneta Kahleová +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anthony Givans +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anton Shevtsov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: B. J. Potter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: BarkotBeyene +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben Beasley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben Wozniak +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bernhard Wagner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Boris Rumyantsev
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brian Gollop +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CCXXXI +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chandrasekaran Anirudh Bhardwaj +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Charles Blackmon-Luca +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Moradi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ChrisAlbertsen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compro Prasad +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DaPy15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Damian Barabonkov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel I +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Isaac +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Schmidt
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Danil Iashchenko +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dare Adewumi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dennis Chukwunta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dennis J. Gray +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Derek Sharp +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dhruv Samdani +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dimitra Karadima +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dmitry Savostyanov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dmytro Litvinov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do Young Kim +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dries Schaumont +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Edward Huang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eirik +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ekaterina +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eli Dourado +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ezra Brauner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fabian Gabel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: FactorizeD +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fangchen Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Francesco Romandini +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Greg Gandenberger +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guo Ci +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hiroaki Ogasawara
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hood Chatham +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ian Alexander Joiner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Irv Lustig
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ivan Ng +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire (MBP)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire (iMac)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JMBurley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jack Goldsmith +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Freeman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Lamb
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Moro +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Janosh Riebesell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jarrod Millman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jason Jia +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeremy Tuloup +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Johannes Mueller
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John Bencina +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John Mantios +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John Zangwill
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jon Bramley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonas Haag
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jordan Hicks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jose Ortiz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JosephParampathu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: José Duarte
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julian Steger +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kai Priester +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kapil E. Iyer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Karthik Velayutham +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kashif Khan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kazuki Igeta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Jan Anker +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Khor Chean Wei
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kian Eliasi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kian S +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kim, KwonHyun +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kinza-Raza +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Konjeti Maruthi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leonardus Chen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Linxiao Francis Cong +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Loïc Estève
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LucasG0 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lucy Jiménez +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luis Pinto
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luke Manley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Garcia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Edward Gorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Gorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MarcoGorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Margarete Dippel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mariam-ke +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Fleischmann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marvin John Walter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marvin Walter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mateusz
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matilda M +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthias Bussonnier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MeeseeksMachine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mehgarg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Melissa Weber Mendonça +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Milton +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Wang
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mike McCarty +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Miloni Atal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mitlasóczki Bence +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Moritz Schreiber +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Morten Canth Hels +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nick Crews +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NickFillot +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nicolas Hug +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nima Sarang
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Noa Tamir +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas Development Team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parfait Gasana
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parthi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Partho +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patrick Hoefler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter Hawkins +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Philipp A
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Philipp Schaefer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pierrot +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pratik Patel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prithvijit
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Purna Chandra Mansingh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Radoslaw Lemiec +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: RaphSku +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reinert Huseby Karlsen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Shadrach
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Shadrach +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robbie Palmer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert de Vries
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roger +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roger Murray +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ruizhe Deng +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SELEE +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sachin Yadav +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Saiwing Yeung +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sam Rao +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sandro Casagrande +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastiaan Vermeulen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shaghayegh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shantanu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shashank Shet +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shawn Zhong +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shuangchi He +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Hawkins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Knott +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Solomon Song +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Somtochi Umeh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefan Krawczyk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefanie Molin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steffen Rehberg
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steven Bamford +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steven Rotondo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steven Schaerer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sylvain MARIE +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sylvain Marié
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tarun Raghunandan Kaushik +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Taylor Packard +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terji Petersen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thierry Moisan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Grainger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Hunter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim McFarland +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Swast
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Yang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tobias Pitters
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Aarsen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Augspurger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Torsten Wörtwein
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: TraverseTowner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tyler Reddy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Valentin Iovene
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Varun Sharma +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vasily Litvinov
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Venaturum
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vinicius Akira Imaizumi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vladimir Fokow +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wenjun Si
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Will Lachance +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Andrea
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wolfgang F. Riedl +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Xingrong Chen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yago González
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yikun Jiang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yuanhao Geng
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yuval +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zero
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhengfei Wang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: abmyii
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alexondor +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alm
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: andjhall +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: anilbey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: arnaudlegout +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: asv-bot +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ateki +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: auderson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bherwerth +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bicarlsen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: carbonleakage +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: charles +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: charlogazzo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: code-review-doctor +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dataxerik +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: deponovo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dimitra-karadima +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dospix +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ehallam +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ehsan shirvanian +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ember91 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: eshirvana
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: fractionalhare +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gaotian98 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gesoos
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: github-actions[bot]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gunghub +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: hasan-yaman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: iansheng +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: iasoon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: joshuabello2550 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jyuv +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kouya takahashi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mariana-LJ +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: matt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mattB1989 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nealxm +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: partev
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: poloso +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: realead
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: roib20 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rtpsw
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ryangilmour +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: shourya5 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: srotondo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: stanleycai95 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: staticdev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tehunter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: theidexisted +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tobias.pitters +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: uncjackg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vernetya
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: wany-oh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: wfr +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'z3c0 +  ## Enhancements'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### `pandas-stubs`'
  prefs: []
  type: TYPE_NORMAL
- en: The `pandas-stubs` library is now supported by the pandas development team,
    providing type stubs for the pandas API. Please visit [pandas-dev/pandas-stubs](https://github.com/pandas-dev/pandas-stubs)
    for more information.
  prefs: []
  type: TYPE_NORMAL
- en: 'We thank VirtusLab and Microsoft for their initial, significant contributions
    to `pandas-stubs`  ### Native PyArrow-backed ExtensionArray'
  prefs: []
  type: TYPE_NORMAL
- en: With [Pyarrow](https://arrow.apache.org/docs/python/index.html) installed, users
    can now create pandas objects that are backed by a `pyarrow.ChunkedArray` and
    `pyarrow.DataType`.
  prefs: []
  type: TYPE_NORMAL
- en: The `dtype` argument can accept a string of a [pyarrow data type](https://arrow.apache.org/docs/python/api/datatypes.html)
    with `pyarrow` in brackets e.g. `"int64[pyarrow]"` or, for pyarrow data types
    that take parameters, a [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") initialized with a `pyarrow.DataType`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: Most operations are supported and have been implemented using [pyarrow compute](https://arrow.apache.org/docs/python/api/compute.html)
    functions. We recommend installing the latest version of PyArrow to access the
    most recently implemented compute functions.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: 'This feature is experimental, and the API can change in a future release without
    warning.  ### DataFrame interchange protocol implementation'
  prefs: []
  type: TYPE_NORMAL
- en: Pandas now implement the DataFrame interchange API spec. See the full details
    on the API at [https://data-apis.org/dataframe-protocol/latest/index.html](https://data-apis.org/dataframe-protocol/latest/index.html)
  prefs: []
  type: TYPE_NORMAL
- en: 'The protocol consists of two parts:'
  prefs: []
  type: TYPE_NORMAL
- en: New method [`DataFrame.__dataframe__()`](../reference/api/pandas.DataFrame.__dataframe__.html#pandas.DataFrame.__dataframe__
    "pandas.DataFrame.__dataframe__") which produces the interchange object. It effectively
    “exports” the pandas dataframe as an interchange object so any other library which
    has the protocol implemented can “import” that dataframe without knowing anything
    about the producer except that it makes an interchange object.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'New function [`pandas.api.interchange.from_dataframe()`](../reference/api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe
    "pandas.api.interchange.from_dataframe") which can take an arbitrary interchange
    object from any conformant library and construct a pandas DataFrame out of it.  ###
    Styler'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The most notable development is the new method [`Styler.concat()`](../reference/api/pandas.io.formats.style.Styler.concat.html#pandas.io.formats.style.Styler.concat
    "pandas.io.formats.style.Styler.concat") which allows adding customised footer
    rows to visualise additional calculations on the data, e.g. totals and counts
    etc. ([GH 43875](https://github.com/pandas-dev/pandas/issues/43875), [GH 46186](https://github.com/pandas-dev/pandas/issues/46186))
  prefs: []
  type: TYPE_NORMAL
- en: Additionally there is an alternative output method [`Styler.to_string()`](../reference/api/pandas.io.formats.style.Styler.to_string.html#pandas.io.formats.style.Styler.to_string
    "pandas.io.formats.style.Styler.to_string"), which allows using the Styler’s formatting
    methods to create, for example, CSVs ([GH 44502](https://github.com/pandas-dev/pandas/issues/44502)).
  prefs: []
  type: TYPE_NORMAL
- en: A new feature [`Styler.relabel_index()`](../reference/api/pandas.io.formats.style.Styler.relabel_index.html#pandas.io.formats.style.Styler.relabel_index
    "pandas.io.formats.style.Styler.relabel_index") is also made available to provide
    full customisation of the display of index or column headers ([GH 47864](https://github.com/pandas-dev/pandas/issues/47864))
  prefs: []
  type: TYPE_NORMAL
- en: 'Minor feature improvements are:'
  prefs: []
  type: TYPE_NORMAL
- en: Adding the ability to render `border` and `border-{side}` CSS properties in
    Excel ([GH 42276](https://github.com/pandas-dev/pandas/issues/42276))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Making keyword arguments consist: [`Styler.highlight_null()`](../reference/api/pandas.io.formats.style.Styler.highlight_null.html#pandas.io.formats.style.Styler.highlight_null
    "pandas.io.formats.style.Styler.highlight_null") now accepts `color` and deprecates
    `null_color` although this remains backwards compatible ([GH 45907](https://github.com/pandas-dev/pandas/issues/45907))  ###
    Control of index with `group_keys` in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample")'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: The argument `group_keys` has been added to the method [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample"). As with [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby"), this argument controls the whether each group is
    added to the index in the resample when [`Resampler.apply()`](../reference/api/pandas.core.resample.Resampler.apply.html#pandas.core.resample.Resampler.apply
    "pandas.core.resample.Resampler.apply") is used.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: Not specifying the `group_keys` argument will retain the previous behavior and
    emit a warning if the result will change by specifying `group_keys=False`. In
    a future version of pandas, not specifying `group_keys` will default to the same
    behavior as `group_keys=False`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: Previously, the resulting index would depend upon the values returned by `apply`,
    as seen in the following example.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]  ### from_dummies'
  prefs: []
  type: TYPE_NORMAL
- en: Added new function [`from_dummies()`](../reference/api/pandas.from_dummies.html#pandas.from_dummies
    "pandas.from_dummies") to convert a dummy coded [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") into a categorical [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]  ### Writing to ORC files'
  prefs: []
  type: TYPE_NORMAL
- en: The new method [`DataFrame.to_orc()`](../reference/api/pandas.DataFrame.to_orc.html#pandas.DataFrame.to_orc
    "pandas.DataFrame.to_orc") allows writing to ORC files ([GH 43864](https://github.com/pandas-dev/pandas/issues/43864)).
  prefs: []
  type: TYPE_NORMAL
- en: This functionality depends the [pyarrow](http://arrow.apache.org/docs/python/)
    library. For more details, see [the IO docs on ORC](../user_guide/io.html#io-orc).
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: It is *highly recommended* to install pyarrow using conda due to some issues
    occurred by pyarrow.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_orc()`](../reference/api/pandas.DataFrame.to_orc.html#pandas.DataFrame.to_orc
    "pandas.DataFrame.to_orc") requires pyarrow>=7.0.0.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_orc()`](../reference/api/pandas.DataFrame.to_orc.html#pandas.DataFrame.to_orc
    "pandas.DataFrame.to_orc") is not supported on Windows yet, you can find valid
    environments on [install optional dependencies](../getting_started/install.html#install-warn-orc).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For supported dtypes please refer to [supported ORC features in Arrow](https://arrow.apache.org/docs/cpp/orc.html#data-types).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Currently timezones in datetime columns are not preserved when a dataframe is
    converted into ORC files.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE34]  ### Reading directly from TAR archives'
  prefs: []
  type: TYPE_NORMAL
- en: I/O methods like [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") or [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") now allow reading and writing directly on TAR archives
    ([GH 44787](https://github.com/pandas-dev/pandas/issues/44787)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'This supports `.tar`, `.tar.gz`, `.tar.bz` and `.tar.xz2` archives. The used
    compression method is inferred from the filename. If the compression method cannot
    be inferred, use the `compression` argument:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: '(`mode` being one of `tarfile.open`’s modes: [https://docs.python.org/3/library/tarfile.html#tarfile.open](https://docs.python.org/3/library/tarfile.html#tarfile.open))  ###
    read_xml now supports `dtype`, `converters`, and `parse_dates`'
  prefs: []
  type: TYPE_NORMAL
- en: Similar to other IO methods, [`pandas.read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") now supports assigning specific dtypes to columns, apply converter
    methods, and parse dates ([GH 43567](https://github.com/pandas-dev/pandas/issues/43567)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]  ### read_xml now supports large XML using `iterparse`'
  prefs: []
  type: TYPE_NORMAL
- en: For very large XML files that can range in hundreds of megabytes to gigabytes,
    [`pandas.read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml "pandas.read_xml")
    now supports parsing such sizeable files using [lxml’s iterparse](https://lxml.de/3.2/parsing.html#iterparse-and-iterwalk)
    and [etree’s iterparse](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.iterparse)
    which are memory-efficient methods to iterate through XML trees and extract specific
    elements and attributes without holding entire tree in memory ([GH 45442](https://github.com/pandas-dev/pandas/issues/45442)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]  ### Copy on Write'
  prefs: []
  type: TYPE_NORMAL
- en: A new feature `copy_on_write` was added ([GH 46958](https://github.com/pandas-dev/pandas/issues/46958)).
    Copy on write ensures that any DataFrame or Series derived from another in any
    way always behaves as a copy. Copy on write disallows updating any other object
    than the object the method was applied to.
  prefs: []
  type: TYPE_NORMAL
- en: 'Copy on write can be enabled through:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: 'Alternatively, copy on write can be enabled locally through:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: Without copy on write, the parent [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") is updated when updating a child [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") that was derived from this [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: 'With copy on write enabled, df won’t be updated anymore:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'A more detailed explanation can be found [here](https://phofl.github.io/cow-introduction.html).  ###
    Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") now raises when `arg` is dict but `na_action` is not either
    `None` or `''ignore''` ([GH 46588](https://github.com/pandas-dev/pandas/issues/46588))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.to_frame()`](../reference/api/pandas.MultiIndex.to_frame.html#pandas.MultiIndex.to_frame
    "pandas.MultiIndex.to_frame") now supports the argument `allow_duplicates` and
    raises on duplicate labels if it is missing or False ([GH 45245](https://github.com/pandas-dev/pandas/issues/45245))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`StringArray`](../reference/api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray") now accepts array-likes containing nan-likes (`None`,
    `np.nan`) for the `values` parameter in its constructor in addition to strings
    and [`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA "pandas.NA"). ([GH
    40839](https://github.com/pandas-dev/pandas/issues/40839))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved the rendering of `categories` in [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 45218](https://github.com/pandas-dev/pandas/issues/45218))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") will now allow the `subplots` parameter to be a list
    of iterables specifying column groups, so that columns may be grouped together
    in the same subplot ([GH 29688](https://github.com/pandas-dev/pandas/issues/29688)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") now preserves float64 arrays when downcasting would generate
    values not representable in float32 ([GH 43693](https://github.com/pandas-dev/pandas/issues/43693))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index") and [`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") now support the argument `allow_duplicates` ([GH
    44410](https://github.com/pandas-dev/pandas/issues/44410))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.min()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.min.html#pandas.core.groupby.DataFrameGroupBy.min
    "pandas.core.groupby.DataFrameGroupBy.min"), [`SeriesGroupBy.min()`](../reference/api/pandas.core.groupby.SeriesGroupBy.min.html#pandas.core.groupby.SeriesGroupBy.min
    "pandas.core.groupby.SeriesGroupBy.min"), [`DataFrameGroupBy.max()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.max.html#pandas.core.groupby.DataFrameGroupBy.max
    "pandas.core.groupby.DataFrameGroupBy.max"), and [`SeriesGroupBy.max()`](../reference/api/pandas.core.groupby.SeriesGroupBy.max.html#pandas.core.groupby.SeriesGroupBy.max
    "pandas.core.groupby.SeriesGroupBy.max") now supports [Numba](https://numba.pydata.org/)
    execution with the `engine` keyword ([GH 45428](https://github.com/pandas-dev/pandas/issues/45428))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now supports `defaultdict` as a `dtype` parameter ([GH 41574](https://github.com/pandas-dev/pandas/issues/41574))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") and [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") now support a `step` parameter with fixed-length windows
    ([GH 15354](https://github.com/pandas-dev/pandas/issues/15354))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented a `bool`-dtype [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), passing a bool-dtype array-like to `pd.Index` will now retain
    `bool` dtype instead of casting to `object` ([GH 45061](https://github.com/pandas-dev/pandas/issues/45061))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented a complex-dtype [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), passing a complex-dtype array-like to `pd.Index` will now retain
    complex dtype instead of casting to `object` ([GH 45845](https://github.com/pandas-dev/pandas/issues/45845))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    with `IntegerDtype` now supports bitwise operations ([GH 34463](https://github.com/pandas-dev/pandas/issues/34463))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add `milliseconds` field support for [`DateOffset`](../reference/api/pandas.tseries.offsets.DateOffset.html#pandas.tseries.offsets.DateOffset
    "pandas.tseries.offsets.DateOffset") ([GH 43371](https://github.com/pandas-dev/pandas/issues/43371))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") tries to maintain dtype of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") if fill value can be cast without loss of precision ([GH 45582](https://github.com/pandas-dev/pandas/issues/45582))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") now accepts a `names` argument which renames the
    index names ([GH 6878](https://github.com/pandas-dev/pandas/issues/6878))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    now raises when `levels` is given but `keys` is None ([GH 46653](https://github.com/pandas-dev/pandas/issues/46653))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    now raises when `levels` contains duplicate values ([GH 46653](https://github.com/pandas-dev/pandas/issues/46653))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `numeric_only` argument to [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr"), [`DataFrame.corrwith()`](../reference/api/pandas.DataFrame.corrwith.html#pandas.DataFrame.corrwith
    "pandas.DataFrame.corrwith"), [`DataFrame.cov()`](../reference/api/pandas.DataFrame.cov.html#pandas.DataFrame.cov
    "pandas.DataFrame.cov"), [`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin"), [`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax"), [`DataFrameGroupBy.idxmin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin"), [`DataFrameGroupBy.idxmax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax"), [`DataFrameGroupBy.var()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.var.html#pandas.core.groupby.DataFrameGroupBy.var
    "pandas.core.groupby.DataFrameGroupBy.var"), [`SeriesGroupBy.var()`](../reference/api/pandas.core.groupby.SeriesGroupBy.var.html#pandas.core.groupby.SeriesGroupBy.var
    "pandas.core.groupby.SeriesGroupBy.var"), [`DataFrameGroupBy.std()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.std.html#pandas.core.groupby.DataFrameGroupBy.std
    "pandas.core.groupby.DataFrameGroupBy.std"), [`SeriesGroupBy.std()`](../reference/api/pandas.core.groupby.SeriesGroupBy.std.html#pandas.core.groupby.SeriesGroupBy.std
    "pandas.core.groupby.SeriesGroupBy.std"), [`DataFrameGroupBy.sem()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sem.html#pandas.core.groupby.DataFrameGroupBy.sem
    "pandas.core.groupby.DataFrameGroupBy.sem"), [`SeriesGroupBy.sem()`](../reference/api/pandas.core.groupby.SeriesGroupBy.sem.html#pandas.core.groupby.SeriesGroupBy.sem
    "pandas.core.groupby.SeriesGroupBy.sem"), and [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") ([GH 46560](https://github.com/pandas-dev/pandas/issues/46560))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A [`errors.PerformanceWarning`](../reference/api/pandas.errors.PerformanceWarning.html#pandas.errors.PerformanceWarning
    "pandas.errors.PerformanceWarning") is now thrown when using `string[pyarrow]`
    dtype with methods that don’t dispatch to `pyarrow.compute` methods ([GH 42613](https://github.com/pandas-dev/pandas/issues/42613),
    [GH 46725](https://github.com/pandas-dev/pandas/issues/46725))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `validate` argument to [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") ([GH 46622](https://github.com/pandas-dev/pandas/issues/46622))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `numeric_only` argument to [`Resampler.sum()`](../reference/api/pandas.core.resample.Resampler.sum.html#pandas.core.resample.Resampler.sum
    "pandas.core.resample.Resampler.sum"), [`Resampler.prod()`](../reference/api/pandas.core.resample.Resampler.prod.html#pandas.core.resample.Resampler.prod
    "pandas.core.resample.Resampler.prod"), [`Resampler.min()`](../reference/api/pandas.core.resample.Resampler.min.html#pandas.core.resample.Resampler.min
    "pandas.core.resample.Resampler.min"), [`Resampler.max()`](../reference/api/pandas.core.resample.Resampler.max.html#pandas.core.resample.Resampler.max
    "pandas.core.resample.Resampler.max"), [`Resampler.first()`](../reference/api/pandas.core.resample.Resampler.first.html#pandas.core.resample.Resampler.first
    "pandas.core.resample.Resampler.first"), and [`Resampler.last()`](../reference/api/pandas.core.resample.Resampler.last.html#pandas.core.resample.Resampler.last
    "pandas.core.resample.Resampler.last") ([GH 46442](https://github.com/pandas-dev/pandas/issues/46442))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`times` argument in `ExponentialMovingWindow` now accepts `np.timedelta64`
    ([GH 47003](https://github.com/pandas-dev/pandas/issues/47003))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataError`](../reference/api/pandas.errors.DataError.html#pandas.errors.DataError
    "pandas.errors.DataError"), [`SpecificationError`](../reference/api/pandas.errors.SpecificationError.html#pandas.errors.SpecificationError
    "pandas.errors.SpecificationError"), [`SettingWithCopyError`](../reference/api/pandas.errors.SettingWithCopyError.html#pandas.errors.SettingWithCopyError
    "pandas.errors.SettingWithCopyError"), [`SettingWithCopyWarning`](../reference/api/pandas.errors.SettingWithCopyWarning.html#pandas.errors.SettingWithCopyWarning
    "pandas.errors.SettingWithCopyWarning"), [`NumExprClobberingError`](../reference/api/pandas.errors.NumExprClobberingError.html#pandas.errors.NumExprClobberingError
    "pandas.errors.NumExprClobberingError"), [`UndefinedVariableError`](../reference/api/pandas.errors.UndefinedVariableError.html#pandas.errors.UndefinedVariableError
    "pandas.errors.UndefinedVariableError"), [`IndexingError`](../reference/api/pandas.errors.IndexingError.html#pandas.errors.IndexingError
    "pandas.errors.IndexingError"), [`PyperclipException`](../reference/api/pandas.errors.PyperclipException.html#pandas.errors.PyperclipException
    "pandas.errors.PyperclipException"), [`PyperclipWindowsException`](../reference/api/pandas.errors.PyperclipWindowsException.html#pandas.errors.PyperclipWindowsException
    "pandas.errors.PyperclipWindowsException"), [`CSSWarning`](../reference/api/pandas.errors.CSSWarning.html#pandas.errors.CSSWarning
    "pandas.errors.CSSWarning"), [`PossibleDataLossError`](../reference/api/pandas.errors.PossibleDataLossError.html#pandas.errors.PossibleDataLossError
    "pandas.errors.PossibleDataLossError"), [`ClosedFileError`](../reference/api/pandas.errors.ClosedFileError.html#pandas.errors.ClosedFileError
    "pandas.errors.ClosedFileError"), [`IncompatibilityWarning`](../reference/api/pandas.errors.IncompatibilityWarning.html#pandas.errors.IncompatibilityWarning
    "pandas.errors.IncompatibilityWarning"), [`AttributeConflictWarning`](../reference/api/pandas.errors.AttributeConflictWarning.html#pandas.errors.AttributeConflictWarning
    "pandas.errors.AttributeConflictWarning"), [`DatabaseError`](../reference/api/pandas.errors.DatabaseError.html#pandas.errors.DatabaseError
    "pandas.errors.DatabaseError"), [`PossiblePrecisionLoss`](../reference/api/pandas.errors.PossiblePrecisionLoss.html#pandas.errors.PossiblePrecisionLoss
    "pandas.errors.PossiblePrecisionLoss"), [`ValueLabelTypeMismatch`](../reference/api/pandas.errors.ValueLabelTypeMismatch.html#pandas.errors.ValueLabelTypeMismatch
    "pandas.errors.ValueLabelTypeMismatch"), [`InvalidColumnName`](../reference/api/pandas.errors.InvalidColumnName.html#pandas.errors.InvalidColumnName
    "pandas.errors.InvalidColumnName"), and [`CategoricalConversionWarning`](../reference/api/pandas.errors.CategoricalConversionWarning.html#pandas.errors.CategoricalConversionWarning
    "pandas.errors.CategoricalConversionWarning") are now exposed in `pandas.errors`
    ([GH 27656](https://github.com/pandas-dev/pandas/issues/27656))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `check_like` argument to [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") ([GH 47247](https://github.com/pandas-dev/pandas/issues/47247))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add support for [`DataFrameGroupBy.ohlc()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.ohlc.html#pandas.core.groupby.DataFrameGroupBy.ohlc
    "pandas.core.groupby.DataFrameGroupBy.ohlc") and [`SeriesGroupBy.ohlc()`](../reference/api/pandas.core.groupby.SeriesGroupBy.ohlc.html#pandas.core.groupby.SeriesGroupBy.ohlc
    "pandas.core.groupby.SeriesGroupBy.ohlc") for extension array dtypes ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow reading compressed SAS files with [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") (e.g., `.sas7bdat.gz` files)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") now supports extracting links from table cells ([GH 13141](https://github.com/pandas-dev/pandas/issues/13141))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.astype()` now supports casting timezone-naive indexes to `datetime64[s]`,
    `datetime64[ms]`, and `datetime64[us]`, and timezone-aware indexes to the corresponding
    `datetime64[unit, tzname]` dtypes ([GH 47579](https://github.com/pandas-dev/pandas/issues/47579))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    reducers (e.g. `min`, `max`, `sum`, `mean`) will now successfully operate when
    the dtype is numeric and `numeric_only=True` is provided; previously this would
    raise a `NotImplementedError` ([GH 47500](https://github.com/pandas-dev/pandas/issues/47500))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`RangeIndex.union()` now can return a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") instead of a `Int64Index` if the resulting values are equally
    spaced ([GH 47557](https://github.com/pandas-dev/pandas/issues/47557), [GH 43885](https://github.com/pandas-dev/pandas/issues/43885))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.compare()`](../reference/api/pandas.DataFrame.compare.html#pandas.DataFrame.compare
    "pandas.DataFrame.compare") now accepts an argument `result_names` to allow the
    user to specify the result’s names of both left and right DataFrame which are
    being compared. This is by default `''self''` and `''other''` ([GH 44354](https://github.com/pandas-dev/pandas/issues/44354))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile") gained a `method` argument that can accept `table`
    to evaluate multi-column quantiles ([GH 43881](https://github.com/pandas-dev/pandas/issues/43881))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Interval`](../reference/api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    now supports checking whether one interval is contained by another interval ([GH
    46613](https://github.com/pandas-dev/pandas/issues/46613))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `copy` keyword to [`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") and [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") to allow user to set axis on a new object without
    necessarily copying the underlying data ([GH 47932](https://github.com/pandas-dev/pandas/issues/47932))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The method [`ExtensionArray.factorize()`](../reference/api/pandas.api.extensions.ExtensionArray.factorize.html#pandas.api.extensions.ExtensionArray.factorize
    "pandas.api.extensions.ExtensionArray.factorize") accepts `use_na_sentinel=False`
    for determining how null values are to be treated ([GH 46601](https://github.com/pandas-dev/pandas/issues/46601))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The `Dockerfile` now installs a dedicated `pandas-dev` virtual environment
    for pandas development instead of using the `base` environment ([GH 48427](https://github.com/pandas-dev/pandas/issues/48427))  ###
    `pandas-stubs`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `pandas-stubs` library is now supported by the pandas development team,
    providing type stubs for the pandas API. Please visit [pandas-dev/pandas-stubs](https://github.com/pandas-dev/pandas-stubs)
    for more information.
  prefs: []
  type: TYPE_NORMAL
- en: We thank VirtusLab and Microsoft for their initial, significant contributions
    to `pandas-stubs`
  prefs: []
  type: TYPE_NORMAL
- en: '### Native PyArrow-backed ExtensionArray'
  prefs: []
  type: TYPE_NORMAL
- en: With [Pyarrow](https://arrow.apache.org/docs/python/index.html) installed, users
    can now create pandas objects that are backed by a `pyarrow.ChunkedArray` and
    `pyarrow.DataType`.
  prefs: []
  type: TYPE_NORMAL
- en: The `dtype` argument can accept a string of a [pyarrow data type](https://arrow.apache.org/docs/python/api/datatypes.html)
    with `pyarrow` in brackets e.g. `"int64[pyarrow]"` or, for pyarrow data types
    that take parameters, a [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") initialized with a `pyarrow.DataType`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: Most operations are supported and have been implemented using [pyarrow compute](https://arrow.apache.org/docs/python/api/compute.html)
    functions. We recommend installing the latest version of PyArrow to access the
    most recently implemented compute functions.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: This feature is experimental, and the API can change in a future release without
    warning.
  prefs: []
  type: TYPE_NORMAL
- en: '### DataFrame interchange protocol implementation'
  prefs: []
  type: TYPE_NORMAL
- en: Pandas now implement the DataFrame interchange API spec. See the full details
    on the API at [https://data-apis.org/dataframe-protocol/latest/index.html](https://data-apis.org/dataframe-protocol/latest/index.html)
  prefs: []
  type: TYPE_NORMAL
- en: 'The protocol consists of two parts:'
  prefs: []
  type: TYPE_NORMAL
- en: New method [`DataFrame.__dataframe__()`](../reference/api/pandas.DataFrame.__dataframe__.html#pandas.DataFrame.__dataframe__
    "pandas.DataFrame.__dataframe__") which produces the interchange object. It effectively
    “exports” the pandas dataframe as an interchange object so any other library which
    has the protocol implemented can “import” that dataframe without knowing anything
    about the producer except that it makes an interchange object.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New function [`pandas.api.interchange.from_dataframe()`](../reference/api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe
    "pandas.api.interchange.from_dataframe") which can take an arbitrary interchange
    object from any conformant library and construct a pandas DataFrame out of it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Styler'
  prefs: []
  type: TYPE_NORMAL
- en: The most notable development is the new method [`Styler.concat()`](../reference/api/pandas.io.formats.style.Styler.concat.html#pandas.io.formats.style.Styler.concat
    "pandas.io.formats.style.Styler.concat") which allows adding customised footer
    rows to visualise additional calculations on the data, e.g. totals and counts
    etc. ([GH 43875](https://github.com/pandas-dev/pandas/issues/43875), [GH 46186](https://github.com/pandas-dev/pandas/issues/46186))
  prefs: []
  type: TYPE_NORMAL
- en: Additionally there is an alternative output method [`Styler.to_string()`](../reference/api/pandas.io.formats.style.Styler.to_string.html#pandas.io.formats.style.Styler.to_string
    "pandas.io.formats.style.Styler.to_string"), which allows using the Styler’s formatting
    methods to create, for example, CSVs ([GH 44502](https://github.com/pandas-dev/pandas/issues/44502)).
  prefs: []
  type: TYPE_NORMAL
- en: A new feature [`Styler.relabel_index()`](../reference/api/pandas.io.formats.style.Styler.relabel_index.html#pandas.io.formats.style.Styler.relabel_index
    "pandas.io.formats.style.Styler.relabel_index") is also made available to provide
    full customisation of the display of index or column headers ([GH 47864](https://github.com/pandas-dev/pandas/issues/47864))
  prefs: []
  type: TYPE_NORMAL
- en: 'Minor feature improvements are:'
  prefs: []
  type: TYPE_NORMAL
- en: Adding the ability to render `border` and `border-{side}` CSS properties in
    Excel ([GH 42276](https://github.com/pandas-dev/pandas/issues/42276))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Making keyword arguments consist: [`Styler.highlight_null()`](../reference/api/pandas.io.formats.style.Styler.highlight_null.html#pandas.io.formats.style.Styler.highlight_null
    "pandas.io.formats.style.Styler.highlight_null") now accepts `color` and deprecates
    `null_color` although this remains backwards compatible ([GH 45907](https://github.com/pandas-dev/pandas/issues/45907))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Control of index with `group_keys` in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample")'
  prefs: []
  type: TYPE_NORMAL
- en: The argument `group_keys` has been added to the method [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample"). As with [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby"), this argument controls the whether each group is
    added to the index in the resample when [`Resampler.apply()`](../reference/api/pandas.core.resample.Resampler.apply.html#pandas.core.resample.Resampler.apply
    "pandas.core.resample.Resampler.apply") is used.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: Not specifying the `group_keys` argument will retain the previous behavior and
    emit a warning if the result will change by specifying `group_keys=False`. In
    a future version of pandas, not specifying `group_keys` will default to the same
    behavior as `group_keys=False`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: Previously, the resulting index would depend upon the values returned by `apply`,
    as seen in the following example.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: '### from_dummies'
  prefs: []
  type: TYPE_NORMAL
- en: Added new function [`from_dummies()`](../reference/api/pandas.from_dummies.html#pandas.from_dummies
    "pandas.from_dummies") to convert a dummy coded [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") into a categorical [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: '### Writing to ORC files'
  prefs: []
  type: TYPE_NORMAL
- en: The new method [`DataFrame.to_orc()`](../reference/api/pandas.DataFrame.to_orc.html#pandas.DataFrame.to_orc
    "pandas.DataFrame.to_orc") allows writing to ORC files ([GH 43864](https://github.com/pandas-dev/pandas/issues/43864)).
  prefs: []
  type: TYPE_NORMAL
- en: This functionality depends the [pyarrow](http://arrow.apache.org/docs/python/)
    library. For more details, see [the IO docs on ORC](../user_guide/io.html#io-orc).
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: It is *highly recommended* to install pyarrow using conda due to some issues
    occurred by pyarrow.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_orc()`](../reference/api/pandas.DataFrame.to_orc.html#pandas.DataFrame.to_orc
    "pandas.DataFrame.to_orc") requires pyarrow>=7.0.0.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_orc()`](../reference/api/pandas.DataFrame.to_orc.html#pandas.DataFrame.to_orc
    "pandas.DataFrame.to_orc") is not supported on Windows yet, you can find valid
    environments on [install optional dependencies](../getting_started/install.html#install-warn-orc).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For supported dtypes please refer to [supported ORC features in Arrow](https://arrow.apache.org/docs/cpp/orc.html#data-types).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Currently timezones in datetime columns are not preserved when a dataframe is
    converted into ORC files.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: '### Reading directly from TAR archives'
  prefs: []
  type: TYPE_NORMAL
- en: I/O methods like [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") or [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") now allow reading and writing directly on TAR archives
    ([GH 44787](https://github.com/pandas-dev/pandas/issues/44787)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: 'This supports `.tar`, `.tar.gz`, `.tar.bz` and `.tar.xz2` archives. The used
    compression method is inferred from the filename. If the compression method cannot
    be inferred, use the `compression` argument:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: '(`mode` being one of `tarfile.open`’s modes: [https://docs.python.org/3/library/tarfile.html#tarfile.open](https://docs.python.org/3/library/tarfile.html#tarfile.open))'
  prefs: []
  type: TYPE_NORMAL
- en: '### read_xml now supports `dtype`, `converters`, and `parse_dates`'
  prefs: []
  type: TYPE_NORMAL
- en: Similar to other IO methods, [`pandas.read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") now supports assigning specific dtypes to columns, apply converter
    methods, and parse dates ([GH 43567](https://github.com/pandas-dev/pandas/issues/43567)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: '### read_xml now supports large XML using `iterparse`'
  prefs: []
  type: TYPE_NORMAL
- en: For very large XML files that can range in hundreds of megabytes to gigabytes,
    [`pandas.read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml "pandas.read_xml")
    now supports parsing such sizeable files using [lxml’s iterparse](https://lxml.de/3.2/parsing.html#iterparse-and-iterwalk)
    and [etree’s iterparse](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.iterparse)
    which are memory-efficient methods to iterate through XML trees and extract specific
    elements and attributes without holding entire tree in memory ([GH 45442](https://github.com/pandas-dev/pandas/issues/45442)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: '### Copy on Write'
  prefs: []
  type: TYPE_NORMAL
- en: A new feature `copy_on_write` was added ([GH 46958](https://github.com/pandas-dev/pandas/issues/46958)).
    Copy on write ensures that any DataFrame or Series derived from another in any
    way always behaves as a copy. Copy on write disallows updating any other object
    than the object the method was applied to.
  prefs: []
  type: TYPE_NORMAL
- en: 'Copy on write can be enabled through:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: 'Alternatively, copy on write can be enabled locally through:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: Without copy on write, the parent [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") is updated when updating a child [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") that was derived from this [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: 'With copy on write enabled, df won’t be updated anymore:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: A more detailed explanation can be found [here](https://phofl.github.io/cow-introduction.html).
  prefs: []
  type: TYPE_NORMAL
- en: '### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") now raises when `arg` is dict but `na_action` is not either
    `None` or `''ignore''` ([GH 46588](https://github.com/pandas-dev/pandas/issues/46588))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.to_frame()`](../reference/api/pandas.MultiIndex.to_frame.html#pandas.MultiIndex.to_frame
    "pandas.MultiIndex.to_frame") now supports the argument `allow_duplicates` and
    raises on duplicate labels if it is missing or False ([GH 45245](https://github.com/pandas-dev/pandas/issues/45245))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`StringArray`](../reference/api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray") now accepts array-likes containing nan-likes (`None`,
    `np.nan`) for the `values` parameter in its constructor in addition to strings
    and [`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA "pandas.NA"). ([GH
    40839](https://github.com/pandas-dev/pandas/issues/40839))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved the rendering of `categories` in [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 45218](https://github.com/pandas-dev/pandas/issues/45218))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") will now allow the `subplots` parameter to be a list
    of iterables specifying column groups, so that columns may be grouped together
    in the same subplot ([GH 29688](https://github.com/pandas-dev/pandas/issues/29688)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") now preserves float64 arrays when downcasting would generate
    values not representable in float32 ([GH 43693](https://github.com/pandas-dev/pandas/issues/43693))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index") and [`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") now support the argument `allow_duplicates` ([GH
    44410](https://github.com/pandas-dev/pandas/issues/44410))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.min()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.min.html#pandas.core.groupby.DataFrameGroupBy.min
    "pandas.core.groupby.DataFrameGroupBy.min"), [`SeriesGroupBy.min()`](../reference/api/pandas.core.groupby.SeriesGroupBy.min.html#pandas.core.groupby.SeriesGroupBy.min
    "pandas.core.groupby.SeriesGroupBy.min"), [`DataFrameGroupBy.max()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.max.html#pandas.core.groupby.DataFrameGroupBy.max
    "pandas.core.groupby.DataFrameGroupBy.max"), and [`SeriesGroupBy.max()`](../reference/api/pandas.core.groupby.SeriesGroupBy.max.html#pandas.core.groupby.SeriesGroupBy.max
    "pandas.core.groupby.SeriesGroupBy.max") now supports [Numba](https://numba.pydata.org/)
    execution with the `engine` keyword ([GH 45428](https://github.com/pandas-dev/pandas/issues/45428))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now supports `defaultdict` as a `dtype` parameter ([GH 41574](https://github.com/pandas-dev/pandas/issues/41574))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") and [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") now support a `step` parameter with fixed-length windows
    ([GH 15354](https://github.com/pandas-dev/pandas/issues/15354))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented a `bool`-dtype [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), passing a bool-dtype array-like to `pd.Index` will now retain
    `bool` dtype instead of casting to `object` ([GH 45061](https://github.com/pandas-dev/pandas/issues/45061))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented a complex-dtype [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), passing a complex-dtype array-like to `pd.Index` will now retain
    complex dtype instead of casting to `object` ([GH 45845](https://github.com/pandas-dev/pandas/issues/45845))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    with `IntegerDtype` now supports bitwise operations ([GH 34463](https://github.com/pandas-dev/pandas/issues/34463))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add `milliseconds` field support for [`DateOffset`](../reference/api/pandas.tseries.offsets.DateOffset.html#pandas.tseries.offsets.DateOffset
    "pandas.tseries.offsets.DateOffset") ([GH 43371](https://github.com/pandas-dev/pandas/issues/43371))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") tries to maintain dtype of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") if fill value can be cast without loss of precision ([GH 45582](https://github.com/pandas-dev/pandas/issues/45582))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") now accepts a `names` argument which renames the
    index names ([GH 6878](https://github.com/pandas-dev/pandas/issues/6878))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    now raises when `levels` is given but `keys` is None ([GH 46653](https://github.com/pandas-dev/pandas/issues/46653))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    now raises when `levels` contains duplicate values ([GH 46653](https://github.com/pandas-dev/pandas/issues/46653))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `numeric_only` argument to [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr"), [`DataFrame.corrwith()`](../reference/api/pandas.DataFrame.corrwith.html#pandas.DataFrame.corrwith
    "pandas.DataFrame.corrwith"), [`DataFrame.cov()`](../reference/api/pandas.DataFrame.cov.html#pandas.DataFrame.cov
    "pandas.DataFrame.cov"), [`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin"), [`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax"), [`DataFrameGroupBy.idxmin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin"), [`DataFrameGroupBy.idxmax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax"), [`DataFrameGroupBy.var()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.var.html#pandas.core.groupby.DataFrameGroupBy.var
    "pandas.core.groupby.DataFrameGroupBy.var"), [`SeriesGroupBy.var()`](../reference/api/pandas.core.groupby.SeriesGroupBy.var.html#pandas.core.groupby.SeriesGroupBy.var
    "pandas.core.groupby.SeriesGroupBy.var"), [`DataFrameGroupBy.std()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.std.html#pandas.core.groupby.DataFrameGroupBy.std
    "pandas.core.groupby.DataFrameGroupBy.std"), [`SeriesGroupBy.std()`](../reference/api/pandas.core.groupby.SeriesGroupBy.std.html#pandas.core.groupby.SeriesGroupBy.std
    "pandas.core.groupby.SeriesGroupBy.std"), [`DataFrameGroupBy.sem()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sem.html#pandas.core.groupby.DataFrameGroupBy.sem
    "pandas.core.groupby.DataFrameGroupBy.sem"), [`SeriesGroupBy.sem()`](../reference/api/pandas.core.groupby.SeriesGroupBy.sem.html#pandas.core.groupby.SeriesGroupBy.sem
    "pandas.core.groupby.SeriesGroupBy.sem"), and [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") ([GH 46560](https://github.com/pandas-dev/pandas/issues/46560))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A [`errors.PerformanceWarning`](../reference/api/pandas.errors.PerformanceWarning.html#pandas.errors.PerformanceWarning
    "pandas.errors.PerformanceWarning") is now thrown when using `string[pyarrow]`
    dtype with methods that don’t dispatch to `pyarrow.compute` methods ([GH 42613](https://github.com/pandas-dev/pandas/issues/42613),
    [GH 46725](https://github.com/pandas-dev/pandas/issues/46725))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `validate` argument to [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") ([GH 46622](https://github.com/pandas-dev/pandas/issues/46622))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `numeric_only` argument to [`Resampler.sum()`](../reference/api/pandas.core.resample.Resampler.sum.html#pandas.core.resample.Resampler.sum
    "pandas.core.resample.Resampler.sum"), [`Resampler.prod()`](../reference/api/pandas.core.resample.Resampler.prod.html#pandas.core.resample.Resampler.prod
    "pandas.core.resample.Resampler.prod"), [`Resampler.min()`](../reference/api/pandas.core.resample.Resampler.min.html#pandas.core.resample.Resampler.min
    "pandas.core.resample.Resampler.min"), [`Resampler.max()`](../reference/api/pandas.core.resample.Resampler.max.html#pandas.core.resample.Resampler.max
    "pandas.core.resample.Resampler.max"), [`Resampler.first()`](../reference/api/pandas.core.resample.Resampler.first.html#pandas.core.resample.Resampler.first
    "pandas.core.resample.Resampler.first"), and [`Resampler.last()`](../reference/api/pandas.core.resample.Resampler.last.html#pandas.core.resample.Resampler.last
    "pandas.core.resample.Resampler.last") ([GH 46442](https://github.com/pandas-dev/pandas/issues/46442))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`times` argument in `ExponentialMovingWindow` now accepts `np.timedelta64`
    ([GH 47003](https://github.com/pandas-dev/pandas/issues/47003))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataError`](../reference/api/pandas.errors.DataError.html#pandas.errors.DataError
    "pandas.errors.DataError"), [`SpecificationError`](../reference/api/pandas.errors.SpecificationError.html#pandas.errors.SpecificationError
    "pandas.errors.SpecificationError"), [`SettingWithCopyError`](../reference/api/pandas.errors.SettingWithCopyError.html#pandas.errors.SettingWithCopyError
    "pandas.errors.SettingWithCopyError"), [`SettingWithCopyWarning`](../reference/api/pandas.errors.SettingWithCopyWarning.html#pandas.errors.SettingWithCopyWarning
    "pandas.errors.SettingWithCopyWarning"), [`NumExprClobberingError`](../reference/api/pandas.errors.NumExprClobberingError.html#pandas.errors.NumExprClobberingError
    "pandas.errors.NumExprClobberingError"), [`UndefinedVariableError`](../reference/api/pandas.errors.UndefinedVariableError.html#pandas.errors.UndefinedVariableError
    "pandas.errors.UndefinedVariableError"), [`IndexingError`](../reference/api/pandas.errors.IndexingError.html#pandas.errors.IndexingError
    "pandas.errors.IndexingError"), [`PyperclipException`](../reference/api/pandas.errors.PyperclipException.html#pandas.errors.PyperclipException
    "pandas.errors.PyperclipException"), [`PyperclipWindowsException`](../reference/api/pandas.errors.PyperclipWindowsException.html#pandas.errors.PyperclipWindowsException
    "pandas.errors.PyperclipWindowsException"), [`CSSWarning`](../reference/api/pandas.errors.CSSWarning.html#pandas.errors.CSSWarning
    "pandas.errors.CSSWarning"), [`PossibleDataLossError`](../reference/api/pandas.errors.PossibleDataLossError.html#pandas.errors.PossibleDataLossError
    "pandas.errors.PossibleDataLossError"), [`ClosedFileError`](../reference/api/pandas.errors.ClosedFileError.html#pandas.errors.ClosedFileError
    "pandas.errors.ClosedFileError"), [`IncompatibilityWarning`](../reference/api/pandas.errors.IncompatibilityWarning.html#pandas.errors.IncompatibilityWarning
    "pandas.errors.IncompatibilityWarning"), [`AttributeConflictWarning`](../reference/api/pandas.errors.AttributeConflictWarning.html#pandas.errors.AttributeConflictWarning
    "pandas.errors.AttributeConflictWarning"), [`DatabaseError`](../reference/api/pandas.errors.DatabaseError.html#pandas.errors.DatabaseError
    "pandas.errors.DatabaseError"), [`PossiblePrecisionLoss`](../reference/api/pandas.errors.PossiblePrecisionLoss.html#pandas.errors.PossiblePrecisionLoss
    "pandas.errors.PossiblePrecisionLoss"), [`ValueLabelTypeMismatch`](../reference/api/pandas.errors.ValueLabelTypeMismatch.html#pandas.errors.ValueLabelTypeMismatch
    "pandas.errors.ValueLabelTypeMismatch"), [`InvalidColumnName`](../reference/api/pandas.errors.InvalidColumnName.html#pandas.errors.InvalidColumnName
    "pandas.errors.InvalidColumnName"), and [`CategoricalConversionWarning`](../reference/api/pandas.errors.CategoricalConversionWarning.html#pandas.errors.CategoricalConversionWarning
    "pandas.errors.CategoricalConversionWarning") are now exposed in `pandas.errors`
    ([GH 27656](https://github.com/pandas-dev/pandas/issues/27656))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `check_like` argument to [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") ([GH 47247](https://github.com/pandas-dev/pandas/issues/47247))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add support for [`DataFrameGroupBy.ohlc()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.ohlc.html#pandas.core.groupby.DataFrameGroupBy.ohlc
    "pandas.core.groupby.DataFrameGroupBy.ohlc") and [`SeriesGroupBy.ohlc()`](../reference/api/pandas.core.groupby.SeriesGroupBy.ohlc.html#pandas.core.groupby.SeriesGroupBy.ohlc
    "pandas.core.groupby.SeriesGroupBy.ohlc") for extension array dtypes ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow reading compressed SAS files with [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") (e.g., `.sas7bdat.gz` files)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") now supports extracting links from table cells ([GH 13141](https://github.com/pandas-dev/pandas/issues/13141))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.astype()` now supports casting timezone-naive indexes to `datetime64[s]`,
    `datetime64[ms]`, and `datetime64[us]`, and timezone-aware indexes to the corresponding
    `datetime64[unit, tzname]` dtypes ([GH 47579](https://github.com/pandas-dev/pandas/issues/47579))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    reducers (e.g. `min`, `max`, `sum`, `mean`) will now successfully operate when
    the dtype is numeric and `numeric_only=True` is provided; previously this would
    raise a `NotImplementedError` ([GH 47500](https://github.com/pandas-dev/pandas/issues/47500))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`RangeIndex.union()` now can return a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") instead of a `Int64Index` if the resulting values are equally
    spaced ([GH 47557](https://github.com/pandas-dev/pandas/issues/47557), [GH 43885](https://github.com/pandas-dev/pandas/issues/43885))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.compare()`](../reference/api/pandas.DataFrame.compare.html#pandas.DataFrame.compare
    "pandas.DataFrame.compare") now accepts an argument `result_names` to allow the
    user to specify the result’s names of both left and right DataFrame which are
    being compared. This is by default `''self''` and `''other''` ([GH 44354](https://github.com/pandas-dev/pandas/issues/44354))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile") gained a `method` argument that can accept `table`
    to evaluate multi-column quantiles ([GH 43881](https://github.com/pandas-dev/pandas/issues/43881))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Interval`](../reference/api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    now supports checking whether one interval is contained by another interval ([GH
    46613](https://github.com/pandas-dev/pandas/issues/46613))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `copy` keyword to [`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") and [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") to allow user to set axis on a new object without
    necessarily copying the underlying data ([GH 47932](https://github.com/pandas-dev/pandas/issues/47932))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The method [`ExtensionArray.factorize()`](../reference/api/pandas.api.extensions.ExtensionArray.factorize.html#pandas.api.extensions.ExtensionArray.factorize
    "pandas.api.extensions.ExtensionArray.factorize") accepts `use_na_sentinel=False`
    for determining how null values are to be treated ([GH 46601](https://github.com/pandas-dev/pandas/issues/46601))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Dockerfile` now installs a dedicated `pandas-dev` virtual environment for
    pandas development instead of using the `base` environment ([GH 48427](https://github.com/pandas-dev/pandas/issues/48427))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Notable bug fixes'
  prefs: []
  type: TYPE_NORMAL
- en: These are bug fixes that might have notable behavior changes.
  prefs: []
  type: TYPE_NORMAL
- en: '### Using `dropna=True` with `groupby` transforms'
  prefs: []
  type: TYPE_NORMAL
- en: A transform is an operation whose result has the same size as its input. When
    the result is a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), it is also required that the index of the result matches that
    of the input. In pandas 1.4, using [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") or [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") with null values in the groups
    and `dropna=True` gave incorrect results. Demonstrated by the examples below,
    the incorrect results either contained incorrect values, or the result did not
    have the same index as the input.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: '*Old behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]  ### Serializing tz-naive Timestamps with to_json() with `iso_dates=True`'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json"), [`Series.to_json()`](../reference/api/pandas.Series.to_json.html#pandas.Series.to_json
    "pandas.Series.to_json"), and `Index.to_json()` would incorrectly localize DatetimeArrays/DatetimeIndexes
    with tz-naive Timestamps to UTC. ([GH 38760](https://github.com/pandas-dev/pandas/issues/38760))'
  prefs: []
  type: TYPE_NORMAL
- en: Note that this patch does not fix the localization of tz-aware Timestamps to
    UTC upon serialization. (Related issue [GH 12997](https://github.com/pandas-dev/pandas/issues/12997))
  prefs: []
  type: TYPE_NORMAL
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]  ### DataFrameGroupBy.value_counts with non-grouping categorical columns
    and `observed=True`'
  prefs: []
  type: TYPE_NORMAL
- en: Calling [`DataFrameGroupBy.value_counts()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.value_counts.html#pandas.core.groupby.DataFrameGroupBy.value_counts
    "pandas.core.groupby.DataFrameGroupBy.value_counts") with `observed=True` would
    incorrectly drop non-observed categories of non-grouping columns ([GH 46357](https://github.com/pandas-dev/pandas/issues/46357)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]  ### Using `dropna=True` with `groupby` transforms'
  prefs: []
  type: TYPE_NORMAL
- en: A transform is an operation whose result has the same size as its input. When
    the result is a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), it is also required that the index of the result matches that
    of the input. In pandas 1.4, using [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") or [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") with null values in the groups
    and `dropna=True` gave incorrect results. Demonstrated by the examples below,
    the incorrect results either contained incorrect values, or the result did not
    have the same index as the input.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: '*Old behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: '### Serializing tz-naive Timestamps with to_json() with `iso_dates=True`'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json"), [`Series.to_json()`](../reference/api/pandas.Series.to_json.html#pandas.Series.to_json
    "pandas.Series.to_json"), and `Index.to_json()` would incorrectly localize DatetimeArrays/DatetimeIndexes
    with tz-naive Timestamps to UTC. ([GH 38760](https://github.com/pandas-dev/pandas/issues/38760))'
  prefs: []
  type: TYPE_NORMAL
- en: Note that this patch does not fix the localization of tz-aware Timestamps to
    UTC upon serialization. (Related issue [GH 12997](https://github.com/pandas-dev/pandas/issues/12997))
  prefs: []
  type: TYPE_NORMAL
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: '### DataFrameGroupBy.value_counts with non-grouping categorical columns and
    `observed=True`'
  prefs: []
  type: TYPE_NORMAL
- en: Calling [`DataFrameGroupBy.value_counts()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.value_counts.html#pandas.core.groupby.DataFrameGroupBy.value_counts
    "pandas.core.groupby.DataFrameGroupBy.value_counts") with `observed=True` would
    incorrectly drop non-observed categories of non-grouping columns ([GH 46357](https://github.com/pandas-dev/pandas/issues/46357)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: '## Backwards incompatible API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '### Increased minimum versions for dependencies'
  prefs: []
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated. If installed,
    we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.20.3 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| mypy (dev) | 0.971 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.9.3 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| blosc | 1.21.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.3.2 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 2021.07.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| hypothesis | 6.13.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 2021.07.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| jinja2 | 3.0.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 4.6.3 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.53.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.7.3 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 3.0.7 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas-gbq | 0.15.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| psycopg2 | 2.8.6 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 1.0.2 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyreadstat | 1.1.2 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyxlsb | 1.0.8 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 2021.08.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.7.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.4.16 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| tabulate | 0.8.9 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.19.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 1.4.3 |  | X |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.9.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| blosc | 1.21.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.3.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| brotlipy | 0.7.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.4.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 2021.08.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| html5lib | 1.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| hypothesis | 6.13.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 2021.08.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| jinja2 | 3.0.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 4.6.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 3.3.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.53.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.7.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| odfpy | 1.4.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 3.0.7 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas-gbq | 0.15.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| psycopg2 | 2.8.6 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 1.0.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 1.0.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyreadstat | 1.1.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.6.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| python-snappy | 0.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pyxlsb | 1.0.8 | X |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 2021.08.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.7.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.4.16 | X |'
  prefs: []
  type: TYPE_TB
- en: '| tabulate | 0.8.9 | X |'
  prefs: []
  type: TYPE_TB
- en: '| tzdata | 2022a |  |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.19.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlrd | 2.0.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 1.4.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlwt | 1.3.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| zstandard | 0.15.2 |  |'
  prefs: []
  type: TYPE_TB
- en: 'See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.  ### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: BigQuery I/O methods [`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq
    "pandas.read_gbq") and [`DataFrame.to_gbq()`](../reference/api/pandas.DataFrame.to_gbq.html#pandas.DataFrame.to_gbq
    "pandas.DataFrame.to_gbq") default to `auth_local_webserver = True`. Google has
    deprecated the `auth_local_webserver = False` [“out of band” (copy-paste) flow](https://developers.googleblog.com/2022/02/making-oauth-flows-safer.html?m=1#disallowed-oob).
    The `auth_local_webserver = False` option is planned to stop working in October
    2022\. ([GH 46312](https://github.com/pandas-dev/pandas/issues/46312))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    now raises `FileNotFoundError` (previously `ValueError`) when input is a string
    ending in `.json`, `.json.gz`, `.json.bz2`, etc. but no such file exists. ([GH
    29102](https://github.com/pandas-dev/pandas/issues/29102))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Operations with [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") or [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") that would previously raise `OverflowError` instead raise
    `OutOfBoundsDatetime` or `OutOfBoundsTimedelta` where appropriate ([GH 47268](https://github.com/pandas-dev/pandas/issues/47268))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    previously returned `None`, it now returns an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 47410](https://github.com/pandas-dev/pandas/issues/47410))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor raises if `index` or `columns` arguments are sets ([GH 47215](https://github.com/pandas-dev/pandas/issues/47215))  ###
    Increased minimum versions for dependencies'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated. If installed,
    we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.20.3 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| mypy (dev) | 0.971 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.9.3 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| blosc | 1.21.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.3.2 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 2021.07.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| hypothesis | 6.13.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 2021.07.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| jinja2 | 3.0.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 4.6.3 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.53.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.7.3 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 3.0.7 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas-gbq | 0.15.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| psycopg2 | 2.8.6 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 1.0.2 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyreadstat | 1.1.2 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyxlsb | 1.0.8 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 2021.08.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.7.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.4.16 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| tabulate | 0.8.9 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.19.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 1.4.3 |  | X |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.9.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| blosc | 1.21.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.3.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| brotlipy | 0.7.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.4.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 2021.08.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| html5lib | 1.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| hypothesis | 6.13.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 2021.08.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| jinja2 | 3.0.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 4.6.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 3.3.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.53.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.7.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| odfpy | 1.4.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 3.0.7 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas-gbq | 0.15.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| psycopg2 | 2.8.6 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 1.0.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 1.0.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyreadstat | 1.1.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.6.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| python-snappy | 0.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pyxlsb | 1.0.8 | X |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 2021.08.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.7.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.4.16 | X |'
  prefs: []
  type: TYPE_TB
- en: '| tabulate | 0.8.9 | X |'
  prefs: []
  type: TYPE_TB
- en: '| tzdata | 2022a |  |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.19.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlrd | 2.0.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 1.4.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlwt | 1.3.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| zstandard | 0.15.2 |  |'
  prefs: []
  type: TYPE_TB
- en: See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: '### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: BigQuery I/O methods [`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq
    "pandas.read_gbq") and [`DataFrame.to_gbq()`](../reference/api/pandas.DataFrame.to_gbq.html#pandas.DataFrame.to_gbq
    "pandas.DataFrame.to_gbq") default to `auth_local_webserver = True`. Google has
    deprecated the `auth_local_webserver = False` [“out of band” (copy-paste) flow](https://developers.googleblog.com/2022/02/making-oauth-flows-safer.html?m=1#disallowed-oob).
    The `auth_local_webserver = False` option is planned to stop working in October
    2022\. ([GH 46312](https://github.com/pandas-dev/pandas/issues/46312))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    now raises `FileNotFoundError` (previously `ValueError`) when input is a string
    ending in `.json`, `.json.gz`, `.json.bz2`, etc. but no such file exists. ([GH
    29102](https://github.com/pandas-dev/pandas/issues/29102))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Operations with [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") or [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") that would previously raise `OverflowError` instead raise
    `OutOfBoundsDatetime` or `OutOfBoundsTimedelta` where appropriate ([GH 47268](https://github.com/pandas-dev/pandas/issues/47268))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    previously returned `None`, it now returns an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 47410](https://github.com/pandas-dev/pandas/issues/47410))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor raises if `index` or `columns` arguments are sets ([GH 47215](https://github.com/pandas-dev/pandas/issues/47215))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: In the next major version release, 2.0, several larger API changes are being
    considered without a formal deprecation such as making the standard library [zoneinfo](https://docs.python.org/3/library/zoneinfo.html)
    the default timezone implementation instead of `pytz`, having the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") support all data types instead of having multiple subclasses ([`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex"), `Int64Index`, etc.), and more. The changes under consideration
    are logged in [this GitHub issue](https://github.com/pandas-dev/pandas/issues/44823),
    and any feedback or concerns are welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '### Label-based integer slicing on a Series with an Int64Index or RangeIndex'
  prefs: []
  type: TYPE_NORMAL
- en: In a future version, integer slicing on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a `Int64Index` or [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") will be treated as *label-based*, not positional. This will
    make the behavior consistent with other `Series.__getitem__()` and `Series.__setitem__()`
    behaviors ([GH 45162](https://github.com/pandas-dev/pandas/issues/45162)).
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: 'In the old behavior, `ser[2:4]` treats the slice as positional:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Old behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: 'In a future version, this will be treated as label-based:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Future behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: To retain the old behavior, use `series.iloc[i:j]`. To get the future behavior,
    use `series.loc[i:j]`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Slicing on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") will not be affected.  ### [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") attributes'
  prefs: []
  type: TYPE_NORMAL
- en: All attributes of [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") were previously documented as not public. However some third
    party Excel engines documented accessing `ExcelWriter.book` or `ExcelWriter.sheets`,
    and users were utilizing these and possibly other attributes. Previously these
    attributes were not safe to use; e.g. modifications to `ExcelWriter.book` would
    not update `ExcelWriter.sheets` and conversely. In order to support this, pandas
    has made some attributes public and improved their implementations so that they
    may now be safely used. ([GH 45572](https://github.com/pandas-dev/pandas/issues/45572))
  prefs: []
  type: TYPE_NORMAL
- en: The following attributes are now public and considered safe to access.
  prefs: []
  type: TYPE_NORMAL
- en: '`book`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`check_extension`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`close`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`date_format`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`datetime_format`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`engine`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`if_sheet_exists`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`sheets`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`supported_extensions`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: The following attributes have been deprecated. They now raise a `FutureWarning`
    when accessed and will be removed in a future version. Users should be aware that
    their usage is considered unsafe, and can lead to unexpected results.
  prefs: []
  type: TYPE_NORMAL
- en: '`cur_sheet`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`handles`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`path`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`save`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`write_cells`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: 'See the documentation of [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") for further details.  ### Using `group_keys` with transformers
    in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply")'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions of pandas, if it was inferred that the function passed
    to [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") or [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") was a transformer (i.e. the resulting
    index was equal to the input index), the `group_keys` argument of [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") was ignored and the group keys would never be added to
    the index of the result. In the future, the group keys will be added to the index
    when the user specifies `group_keys=True`.
  prefs: []
  type: TYPE_NORMAL
- en: As `group_keys=True` is the default value of [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby"), not specifying `group_keys` with a transformer will
    raise a `FutureWarning`. This can be silenced and the previous behavior retained
    by specifying `group_keys=False`.
  prefs: []
  type: TYPE_NORMAL
- en: Inplace operation when setting values with `loc` and `iloc`
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Most of the time setting values with [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") attempts to set values inplace, only falling back to
    inserting a new array if necessary. There are some cases where this rule is not
    followed, for example when setting an entire column from an array with different
    dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: '*Old behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: This behavior is deprecated. In a future version, setting an entire column with
    iloc will attempt to operate inplace.
  prefs: []
  type: TYPE_NORMAL
- en: '*Future behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: 'To get the old behavior, use `DataFrame.__setitem__()` directly:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: 'To get the old behaviour when `df.columns` is not unique and you want to change
    a single column by index, you can use `DataFrame.isetitem()`, which has been added
    in pandas 1.5:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: '### `numeric_only` default value'
  prefs: []
  type: TYPE_NORMAL
- en: Across the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), `DataFrameGroupBy`, and `Resampler` operations such as `min`,
    `sum`, and `idxmax`, the default value of the `numeric_only` argument, if it exists
    at all, was inconsistent. Furthermore, operations with the default value `None`
    can lead to surprising results. ([GH 46560](https://github.com/pandas-dev/pandas/issues/46560))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: To avoid this behavior, the specifying the value `numeric_only=None` has been
    deprecated, and will be removed in a future version of pandas. In the future,
    all operations with a `numeric_only` argument will default to `False`. Users should
    either call the operation only with columns that can be operated on, or specify
    `numeric_only=True` to operate only on Boolean, integer, and float columns.
  prefs: []
  type: TYPE_NORMAL
- en: In order to support the transition to the new behavior, the following methods
    have gained the `numeric_only` argument.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.corrwith()`](../reference/api/pandas.DataFrame.corrwith.html#pandas.DataFrame.corrwith
    "pandas.DataFrame.corrwith")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.cov()`](../reference/api/pandas.DataFrame.cov.html#pandas.DataFrame.cov
    "pandas.DataFrame.cov")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.cummin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.idxmin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.idxmax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.var()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.var.html#pandas.core.groupby.DataFrameGroupBy.var
    "pandas.core.groupby.DataFrameGroupBy.var")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.std()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.std.html#pandas.core.groupby.DataFrameGroupBy.std
    "pandas.core.groupby.DataFrameGroupBy.std")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.sem()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sem.html#pandas.core.groupby.DataFrameGroupBy.sem
    "pandas.core.groupby.DataFrameGroupBy.sem")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Resampler.mean()`](../reference/api/pandas.core.resample.Resampler.mean.html#pandas.core.resample.Resampler.mean
    "pandas.core.resample.Resampler.mean")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Resampler.median()`](../reference/api/pandas.core.resample.Resampler.median.html#pandas.core.resample.Resampler.median
    "pandas.core.resample.Resampler.median")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Resampler.sem()`](../reference/api/pandas.core.resample.Resampler.sem.html#pandas.core.resample.Resampler.sem
    "pandas.core.resample.Resampler.sem")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Resampler.std()`](../reference/api/pandas.core.resample.Resampler.std.html#pandas.core.resample.Resampler.std
    "pandas.core.resample.Resampler.std")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Resampler.var()`](../reference/api/pandas.core.resample.Resampler.var.html#pandas.core.resample.Resampler.var
    "pandas.core.resample.Resampler.var")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") operations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.expanding()`](../reference/api/pandas.DataFrame.expanding.html#pandas.DataFrame.expanding
    "pandas.DataFrame.expanding") operations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm") operations  ### Other Deprecations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the keyword `line_terminator` in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") and [`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv"), use `lineterminator` instead; this is for consistency
    with [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    and the standard library ‘csv’ module ([GH 9568](https://github.com/pandas-dev/pandas/issues/9568))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of `SparseArray.astype()`, [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype"), and [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") with [`SparseDtype`](../reference/api/pandas.SparseDtype.html#pandas.SparseDtype
    "pandas.SparseDtype") when passing a non-sparse `dtype`. In a future version,
    this will cast to that non-sparse dtype instead of wrapping it in a [`SparseDtype`](../reference/api/pandas.SparseDtype.html#pandas.SparseDtype
    "pandas.SparseDtype") ([GH 34457](https://github.com/pandas-dev/pandas/issues/34457))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of `DatetimeIndex.intersection()` and `DatetimeIndex.symmetric_difference()`
    (`union` behavior was already deprecated in version 1.3.0) with mixed time zones;
    in a future version both will be cast to UTC instead of object dtype ([GH 39328](https://github.com/pandas-dev/pandas/issues/39328),
    [GH 45357](https://github.com/pandas-dev/pandas/issues/45357))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `DataFrame.iteritems()`, `Series.iteritems()`, `HDFStore.iteritems()`
    in favor of [`DataFrame.items()`](../reference/api/pandas.DataFrame.items.html#pandas.DataFrame.items
    "pandas.DataFrame.items"), [`Series.items()`](../reference/api/pandas.Series.items.html#pandas.Series.items
    "pandas.Series.items"), `HDFStore.items()` ([GH 45321](https://github.com/pandas-dev/pandas/issues/45321))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Series.is_monotonic()` and `Index.is_monotonic()` in favor of [`Series.is_monotonic_increasing()`](../reference/api/pandas.Series.is_monotonic_increasing.html#pandas.Series.is_monotonic_increasing
    "pandas.Series.is_monotonic_increasing") and [`Index.is_monotonic_increasing()`](../reference/api/pandas.Index.is_monotonic_increasing.html#pandas.Index.is_monotonic_increasing
    "pandas.Index.is_monotonic_increasing") ([GH 45422](https://github.com/pandas-dev/pandas/issues/45422),
    [GH 21335](https://github.com/pandas-dev/pandas/issues/21335))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of `DatetimeIndex.astype()`, `TimedeltaIndex.astype()`,
    `PeriodIndex.astype()` when converting to an integer dtype other than `int64`.
    In a future version, these will convert to exactly the specified dtype (instead
    of always `int64`) and will raise if the conversion overflows ([GH 45034](https://github.com/pandas-dev/pandas/issues/45034))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `__array_wrap__` method of DataFrame and Series, rely on standard
    numpy ufuncs instead ([GH 45451](https://github.com/pandas-dev/pandas/issues/45451))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated treating float-dtype data as wall-times when passed with a timezone
    to [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    or [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 45573](https://github.com/pandas-dev/pandas/issues/45573))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") and [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") with `timedelta64[ns]` dtype and incompatible fill
    value; in a future version this will cast to a common dtype (usually object) instead
    of raising, matching the behavior of other dtypes ([GH 45746](https://github.com/pandas-dev/pandas/issues/45746))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `warn` parameter in [`infer_freq()`](../reference/api/pandas.infer_freq.html#pandas.infer_freq
    "pandas.infer_freq") ([GH 45947](https://github.com/pandas-dev/pandas/issues/45947))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`ExtensionArray.argsort()`](../reference/api/pandas.api.extensions.ExtensionArray.argsort.html#pandas.api.extensions.ExtensionArray.argsort
    "pandas.api.extensions.ExtensionArray.argsort") ([GH 46134](https://github.com/pandas-dev/pandas/issues/46134))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated treating all-bool `object`-dtype columns as bool-like in [`DataFrame.any()`](../reference/api/pandas.DataFrame.any.html#pandas.DataFrame.any
    "pandas.DataFrame.any") and [`DataFrame.all()`](../reference/api/pandas.DataFrame.all.html#pandas.DataFrame.all
    "pandas.DataFrame.all") with `bool_only=True`, explicitly cast to bool instead
    ([GH 46188](https://github.com/pandas-dev/pandas/issues/46188))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of method [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile"), attribute `numeric_only` will default False. Including
    datetime/timedelta columns in the result ([GH 7308](https://github.com/pandas-dev/pandas/issues/7308)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Timedelta.freq` and `Timedelta.is_populated` ([GH 46430](https://github.com/pandas-dev/pandas/issues/46430))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Timedelta.delta` ([GH 46476](https://github.com/pandas-dev/pandas/issues/46476))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing arguments as positional in [`DataFrame.any()`](../reference/api/pandas.DataFrame.any.html#pandas.DataFrame.any
    "pandas.DataFrame.any") and [`Series.any()`](../reference/api/pandas.Series.any.html#pandas.Series.any
    "pandas.Series.any") ([GH 44802](https://github.com/pandas-dev/pandas/issues/44802))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing positional arguments to [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") and [`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot
    "pandas.pivot") except `data` ([GH 30228](https://github.com/pandas-dev/pandas/issues/30228))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the methods `DataFrame.mad()`, `Series.mad()`, and the corresponding
    groupby methods ([GH 11787](https://github.com/pandas-dev/pandas/issues/11787))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated positional arguments to [`Index.join()`](../reference/api/pandas.Index.join.html#pandas.Index.join
    "pandas.Index.join") except for `other`, use keyword-only arguments instead of
    positional arguments ([GH 46518](https://github.com/pandas-dev/pandas/issues/46518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated positional arguments to `StringMethods.rsplit()` and `StringMethods.split()`
    except for `pat`, use keyword-only arguments instead of positional arguments ([GH
    47423](https://github.com/pandas-dev/pandas/issues/47423))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated indexing on a timezone-naive [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") using a string representing a timezone-aware datetime
    ([GH 46903](https://github.com/pandas-dev/pandas/issues/46903), [GH 36148](https://github.com/pandas-dev/pandas/issues/36148))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing `unit="M"` or `unit="Y"` in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") constructor with a non-round float value ([GH 47267](https://github.com/pandas-dev/pandas/issues/47267))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `display.column_space` global configuration option ([GH 7576](https://github.com/pandas-dev/pandas/issues/7576))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the argument `na_sentinel` in [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize"), [`Index.factorize()`](../reference/api/pandas.Index.factorize.html#pandas.Index.factorize
    "pandas.Index.factorize"), and [`ExtensionArray.factorize()`](../reference/api/pandas.api.extensions.ExtensionArray.factorize.html#pandas.api.extensions.ExtensionArray.factorize
    "pandas.api.extensions.ExtensionArray.factorize"); pass `use_na_sentinel=True`
    instead to use the sentinel `-1` for NaN values and `use_na_sentinel=False` instead
    of `na_sentinel=None` to encode NaN values ([GH 46910](https://github.com/pandas-dev/pandas/issues/46910))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") not aligning the result when
    the UDF returned DataFrame ([GH 45648](https://github.com/pandas-dev/pandas/issues/45648))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clarified warning from [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when delimited dates can’t be parsed in accordance to specified
    `dayfirst` argument ([GH 46210](https://github.com/pandas-dev/pandas/issues/46210))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Emit warning from [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when delimited dates can’t be parsed in accordance to specified
    `dayfirst` argument even for dates where leading zero is omitted (e.g. `31/1/2001`)
    ([GH 47880](https://github.com/pandas-dev/pandas/issues/47880))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and `Resampler` reducers (e.g. `min`, `max`, `sum`, `mean`) raising a `NotImplementedError`
    when the dtype is non-numric and `numeric_only=True` is provided; this will raise
    a `TypeError` in a future version ([GH 47500](https://github.com/pandas-dev/pandas/issues/47500))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.rank()`](../reference/api/pandas.Series.rank.html#pandas.Series.rank
    "pandas.Series.rank") returning an empty result when the dtype is non-numeric
    and `numeric_only=True` is provided; this will raise a `TypeError` in a future
    version ([GH 47500](https://github.com/pandas-dev/pandas/issues/47500))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated argument `errors` for [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask"), [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where"), [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask"), and [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") as `errors` had no effect on this methods ([GH 47728](https://github.com/pandas-dev/pandas/issues/47728))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated arguments `*args` and `**kwargs` in `Rolling`, `Expanding`, and `ExponentialMovingWindow`
    ops. ([GH 47836](https://github.com/pandas-dev/pandas/issues/47836))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `inplace` keyword in `Categorical.set_ordered()`, `Categorical.as_ordered()`,
    and `Categorical.as_unordered()` ([GH 37643](https://github.com/pandas-dev/pandas/issues/37643))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated setting a categorical’s categories with `cat.categories = ['a', 'b',
    'c']`, use `Categorical.rename_categories()` instead ([GH 37643](https://github.com/pandas-dev/pandas/issues/37643))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated unused arguments `encoding` and `verbose` in [`Series.to_excel()`](../reference/api/pandas.Series.to_excel.html#pandas.Series.to_excel
    "pandas.Series.to_excel") and [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") ([GH 47912](https://github.com/pandas-dev/pandas/issues/47912))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `inplace` keyword in [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") and [`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis"), use `obj = obj.set_axis(..., copy=False)` instead ([GH
    48130](https://github.com/pandas-dev/pandas/issues/48130))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated producing a single element when iterating over a `DataFrameGroupBy`
    or a `SeriesGroupBy` that has been grouped by a list of length 1; A tuple of length
    one will be returned instead ([GH 42795](https://github.com/pandas-dev/pandas/issues/42795))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed up warning message of deprecation of `MultiIndex.lesort_depth()` as public
    method, as the message previously referred to `MultiIndex.is_lexsorted()` instead
    ([GH 38701](https://github.com/pandas-dev/pandas/issues/38701))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `sort_columns` argument in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") and [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") ([GH 47563](https://github.com/pandas-dev/pandas/issues/47563)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated positional arguments for all but the first argument of [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") and [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata"), use keyword arguments instead ([GH 48128](https://github.com/pandas-dev/pandas/issues/48128)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `mangle_dupe_cols` argument in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf"), [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") and [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"). The argument was never implemented, and a new argument where
    the renaming pattern can be specified will be added instead ([GH 47718](https://github.com/pandas-dev/pandas/issues/47718))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deprecated allowing `dtype=''datetime64''` or `dtype=np.datetime64` in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype"), use “datetime64[ns]” instead ([GH 47844](https://github.com/pandas-dev/pandas/issues/47844))  ###
    Label-based integer slicing on a Series with an Int64Index or RangeIndex'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In a future version, integer slicing on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a `Int64Index` or [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") will be treated as *label-based*, not positional. This will
    make the behavior consistent with other `Series.__getitem__()` and `Series.__setitem__()`
    behaviors ([GH 45162](https://github.com/pandas-dev/pandas/issues/45162)).
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: 'In the old behavior, `ser[2:4]` treats the slice as positional:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Old behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: 'In a future version, this will be treated as label-based:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Future behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: To retain the old behavior, use `series.iloc[i:j]`. To get the future behavior,
    use `series.loc[i:j]`.
  prefs: []
  type: TYPE_NORMAL
- en: Slicing on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") will not be affected.
  prefs: []
  type: TYPE_NORMAL
- en: '### [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") attributes'
  prefs: []
  type: TYPE_NORMAL
- en: All attributes of [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") were previously documented as not public. However some third
    party Excel engines documented accessing `ExcelWriter.book` or `ExcelWriter.sheets`,
    and users were utilizing these and possibly other attributes. Previously these
    attributes were not safe to use; e.g. modifications to `ExcelWriter.book` would
    not update `ExcelWriter.sheets` and conversely. In order to support this, pandas
    has made some attributes public and improved their implementations so that they
    may now be safely used. ([GH 45572](https://github.com/pandas-dev/pandas/issues/45572))
  prefs: []
  type: TYPE_NORMAL
- en: The following attributes are now public and considered safe to access.
  prefs: []
  type: TYPE_NORMAL
- en: '`book`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`check_extension`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`close`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`date_format`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`datetime_format`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`engine`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`if_sheet_exists`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`sheets`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`supported_extensions`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: The following attributes have been deprecated. They now raise a `FutureWarning`
    when accessed and will be removed in a future version. Users should be aware that
    their usage is considered unsafe, and can lead to unexpected results.
  prefs: []
  type: TYPE_NORMAL
- en: '`cur_sheet`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`handles`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`path`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`save`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`write_cells`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: See the documentation of [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") for further details.
  prefs: []
  type: TYPE_NORMAL
- en: '### Using `group_keys` with transformers in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply")'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions of pandas, if it was inferred that the function passed
    to [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") or [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") was a transformer (i.e. the resulting
    index was equal to the input index), the `group_keys` argument of [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") was ignored and the group keys would never be added to
    the index of the result. In the future, the group keys will be added to the index
    when the user specifies `group_keys=True`.
  prefs: []
  type: TYPE_NORMAL
- en: As `group_keys=True` is the default value of [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby"), not specifying `group_keys` with a transformer will
    raise a `FutureWarning`. This can be silenced and the previous behavior retained
    by specifying `group_keys=False`.
  prefs: []
  type: TYPE_NORMAL
- en: Inplace operation when setting values with `loc` and `iloc`
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Most of the time setting values with [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") attempts to set values inplace, only falling back to
    inserting a new array if necessary. There are some cases where this rule is not
    followed, for example when setting an entire column from an array with different
    dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: '*Old behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: This behavior is deprecated. In a future version, setting an entire column with
    iloc will attempt to operate inplace.
  prefs: []
  type: TYPE_NORMAL
- en: '*Future behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: 'To get the old behavior, use `DataFrame.__setitem__()` directly:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]'
  prefs: []
  type: TYPE_PRE
- en: 'To get the old behaviour when `df.columns` is not unique and you want to change
    a single column by index, you can use `DataFrame.isetitem()`, which has been added
    in pandas 1.5:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: '### `numeric_only` default value'
  prefs: []
  type: TYPE_NORMAL
- en: Across the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), `DataFrameGroupBy`, and `Resampler` operations such as `min`,
    `sum`, and `idxmax`, the default value of the `numeric_only` argument, if it exists
    at all, was inconsistent. Furthermore, operations with the default value `None`
    can lead to surprising results. ([GH 46560](https://github.com/pandas-dev/pandas/issues/46560))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]'
  prefs: []
  type: TYPE_PRE
- en: To avoid this behavior, the specifying the value `numeric_only=None` has been
    deprecated, and will be removed in a future version of pandas. In the future,
    all operations with a `numeric_only` argument will default to `False`. Users should
    either call the operation only with columns that can be operated on, or specify
    `numeric_only=True` to operate only on Boolean, integer, and float columns.
  prefs: []
  type: TYPE_NORMAL
- en: In order to support the transition to the new behavior, the following methods
    have gained the `numeric_only` argument.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.corrwith()`](../reference/api/pandas.DataFrame.corrwith.html#pandas.DataFrame.corrwith
    "pandas.DataFrame.corrwith")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.cov()`](../reference/api/pandas.DataFrame.cov.html#pandas.DataFrame.cov
    "pandas.DataFrame.cov")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.cummin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.idxmin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.idxmax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.var()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.var.html#pandas.core.groupby.DataFrameGroupBy.var
    "pandas.core.groupby.DataFrameGroupBy.var")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.std()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.std.html#pandas.core.groupby.DataFrameGroupBy.std
    "pandas.core.groupby.DataFrameGroupBy.std")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.sem()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sem.html#pandas.core.groupby.DataFrameGroupBy.sem
    "pandas.core.groupby.DataFrameGroupBy.sem")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Resampler.mean()`](../reference/api/pandas.core.resample.Resampler.mean.html#pandas.core.resample.Resampler.mean
    "pandas.core.resample.Resampler.mean")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Resampler.median()`](../reference/api/pandas.core.resample.Resampler.median.html#pandas.core.resample.Resampler.median
    "pandas.core.resample.Resampler.median")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Resampler.sem()`](../reference/api/pandas.core.resample.Resampler.sem.html#pandas.core.resample.Resampler.sem
    "pandas.core.resample.Resampler.sem")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Resampler.std()`](../reference/api/pandas.core.resample.Resampler.std.html#pandas.core.resample.Resampler.std
    "pandas.core.resample.Resampler.std")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Resampler.var()`](../reference/api/pandas.core.resample.Resampler.var.html#pandas.core.resample.Resampler.var
    "pandas.core.resample.Resampler.var")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") operations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.expanding()`](../reference/api/pandas.DataFrame.expanding.html#pandas.DataFrame.expanding
    "pandas.DataFrame.expanding") operations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm") operations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Other Deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: Deprecated the keyword `line_terminator` in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") and [`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv"), use `lineterminator` instead; this is for consistency
    with [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    and the standard library ‘csv’ module ([GH 9568](https://github.com/pandas-dev/pandas/issues/9568))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of `SparseArray.astype()`, [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype"), and [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") with [`SparseDtype`](../reference/api/pandas.SparseDtype.html#pandas.SparseDtype
    "pandas.SparseDtype") when passing a non-sparse `dtype`. In a future version,
    this will cast to that non-sparse dtype instead of wrapping it in a [`SparseDtype`](../reference/api/pandas.SparseDtype.html#pandas.SparseDtype
    "pandas.SparseDtype") ([GH 34457](https://github.com/pandas-dev/pandas/issues/34457))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of `DatetimeIndex.intersection()` and `DatetimeIndex.symmetric_difference()`
    (`union` behavior was already deprecated in version 1.3.0) with mixed time zones;
    in a future version both will be cast to UTC instead of object dtype ([GH 39328](https://github.com/pandas-dev/pandas/issues/39328),
    [GH 45357](https://github.com/pandas-dev/pandas/issues/45357))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `DataFrame.iteritems()`, `Series.iteritems()`, `HDFStore.iteritems()`
    in favor of [`DataFrame.items()`](../reference/api/pandas.DataFrame.items.html#pandas.DataFrame.items
    "pandas.DataFrame.items"), [`Series.items()`](../reference/api/pandas.Series.items.html#pandas.Series.items
    "pandas.Series.items"), `HDFStore.items()` ([GH 45321](https://github.com/pandas-dev/pandas/issues/45321))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Series.is_monotonic()` and `Index.is_monotonic()` in favor of [`Series.is_monotonic_increasing()`](../reference/api/pandas.Series.is_monotonic_increasing.html#pandas.Series.is_monotonic_increasing
    "pandas.Series.is_monotonic_increasing") and [`Index.is_monotonic_increasing()`](../reference/api/pandas.Index.is_monotonic_increasing.html#pandas.Index.is_monotonic_increasing
    "pandas.Index.is_monotonic_increasing") ([GH 45422](https://github.com/pandas-dev/pandas/issues/45422),
    [GH 21335](https://github.com/pandas-dev/pandas/issues/21335))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of `DatetimeIndex.astype()`, `TimedeltaIndex.astype()`,
    `PeriodIndex.astype()` when converting to an integer dtype other than `int64`.
    In a future version, these will convert to exactly the specified dtype (instead
    of always `int64`) and will raise if the conversion overflows ([GH 45034](https://github.com/pandas-dev/pandas/issues/45034))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `__array_wrap__` method of DataFrame and Series, rely on standard
    numpy ufuncs instead ([GH 45451](https://github.com/pandas-dev/pandas/issues/45451))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated treating float-dtype data as wall-times when passed with a timezone
    to [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    or [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 45573](https://github.com/pandas-dev/pandas/issues/45573))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") and [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") with `timedelta64[ns]` dtype and incompatible fill
    value; in a future version this will cast to a common dtype (usually object) instead
    of raising, matching the behavior of other dtypes ([GH 45746](https://github.com/pandas-dev/pandas/issues/45746))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `warn` parameter in [`infer_freq()`](../reference/api/pandas.infer_freq.html#pandas.infer_freq
    "pandas.infer_freq") ([GH 45947](https://github.com/pandas-dev/pandas/issues/45947))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`ExtensionArray.argsort()`](../reference/api/pandas.api.extensions.ExtensionArray.argsort.html#pandas.api.extensions.ExtensionArray.argsort
    "pandas.api.extensions.ExtensionArray.argsort") ([GH 46134](https://github.com/pandas-dev/pandas/issues/46134))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated treating all-bool `object`-dtype columns as bool-like in [`DataFrame.any()`](../reference/api/pandas.DataFrame.any.html#pandas.DataFrame.any
    "pandas.DataFrame.any") and [`DataFrame.all()`](../reference/api/pandas.DataFrame.all.html#pandas.DataFrame.all
    "pandas.DataFrame.all") with `bool_only=True`, explicitly cast to bool instead
    ([GH 46188](https://github.com/pandas-dev/pandas/issues/46188))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of method [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile"), attribute `numeric_only` will default False. Including
    datetime/timedelta columns in the result ([GH 7308](https://github.com/pandas-dev/pandas/issues/7308)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Timedelta.freq` and `Timedelta.is_populated` ([GH 46430](https://github.com/pandas-dev/pandas/issues/46430))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Timedelta.delta` ([GH 46476](https://github.com/pandas-dev/pandas/issues/46476))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing arguments as positional in [`DataFrame.any()`](../reference/api/pandas.DataFrame.any.html#pandas.DataFrame.any
    "pandas.DataFrame.any") and [`Series.any()`](../reference/api/pandas.Series.any.html#pandas.Series.any
    "pandas.Series.any") ([GH 44802](https://github.com/pandas-dev/pandas/issues/44802))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing positional arguments to [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") and [`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot
    "pandas.pivot") except `data` ([GH 30228](https://github.com/pandas-dev/pandas/issues/30228))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the methods `DataFrame.mad()`, `Series.mad()`, and the corresponding
    groupby methods ([GH 11787](https://github.com/pandas-dev/pandas/issues/11787))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated positional arguments to [`Index.join()`](../reference/api/pandas.Index.join.html#pandas.Index.join
    "pandas.Index.join") except for `other`, use keyword-only arguments instead of
    positional arguments ([GH 46518](https://github.com/pandas-dev/pandas/issues/46518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated positional arguments to `StringMethods.rsplit()` and `StringMethods.split()`
    except for `pat`, use keyword-only arguments instead of positional arguments ([GH
    47423](https://github.com/pandas-dev/pandas/issues/47423))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated indexing on a timezone-naive [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") using a string representing a timezone-aware datetime
    ([GH 46903](https://github.com/pandas-dev/pandas/issues/46903), [GH 36148](https://github.com/pandas-dev/pandas/issues/36148))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing `unit="M"` or `unit="Y"` in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") constructor with a non-round float value ([GH 47267](https://github.com/pandas-dev/pandas/issues/47267))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `display.column_space` global configuration option ([GH 7576](https://github.com/pandas-dev/pandas/issues/7576))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the argument `na_sentinel` in [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize"), [`Index.factorize()`](../reference/api/pandas.Index.factorize.html#pandas.Index.factorize
    "pandas.Index.factorize"), and [`ExtensionArray.factorize()`](../reference/api/pandas.api.extensions.ExtensionArray.factorize.html#pandas.api.extensions.ExtensionArray.factorize
    "pandas.api.extensions.ExtensionArray.factorize"); pass `use_na_sentinel=True`
    instead to use the sentinel `-1` for NaN values and `use_na_sentinel=False` instead
    of `na_sentinel=None` to encode NaN values ([GH 46910](https://github.com/pandas-dev/pandas/issues/46910))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") not aligning the result when
    the UDF returned DataFrame ([GH 45648](https://github.com/pandas-dev/pandas/issues/45648))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clarified warning from [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when delimited dates can’t be parsed in accordance to specified
    `dayfirst` argument ([GH 46210](https://github.com/pandas-dev/pandas/issues/46210))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Emit warning from [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when delimited dates can’t be parsed in accordance to specified
    `dayfirst` argument even for dates where leading zero is omitted (e.g. `31/1/2001`)
    ([GH 47880](https://github.com/pandas-dev/pandas/issues/47880))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and `Resampler` reducers (e.g. `min`, `max`, `sum`, `mean`) raising a `NotImplementedError`
    when the dtype is non-numric and `numeric_only=True` is provided; this will raise
    a `TypeError` in a future version ([GH 47500](https://github.com/pandas-dev/pandas/issues/47500))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.rank()`](../reference/api/pandas.Series.rank.html#pandas.Series.rank
    "pandas.Series.rank") returning an empty result when the dtype is non-numeric
    and `numeric_only=True` is provided; this will raise a `TypeError` in a future
    version ([GH 47500](https://github.com/pandas-dev/pandas/issues/47500))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated argument `errors` for [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask"), [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where"), [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask"), and [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") as `errors` had no effect on this methods ([GH 47728](https://github.com/pandas-dev/pandas/issues/47728))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated arguments `*args` and `**kwargs` in `Rolling`, `Expanding`, and `ExponentialMovingWindow`
    ops. ([GH 47836](https://github.com/pandas-dev/pandas/issues/47836))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `inplace` keyword in `Categorical.set_ordered()`, `Categorical.as_ordered()`,
    and `Categorical.as_unordered()` ([GH 37643](https://github.com/pandas-dev/pandas/issues/37643))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated setting a categorical’s categories with `cat.categories = ['a', 'b',
    'c']`, use `Categorical.rename_categories()` instead ([GH 37643](https://github.com/pandas-dev/pandas/issues/37643))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated unused arguments `encoding` and `verbose` in [`Series.to_excel()`](../reference/api/pandas.Series.to_excel.html#pandas.Series.to_excel
    "pandas.Series.to_excel") and [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") ([GH 47912](https://github.com/pandas-dev/pandas/issues/47912))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `inplace` keyword in [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") and [`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis"), use `obj = obj.set_axis(..., copy=False)` instead ([GH
    48130](https://github.com/pandas-dev/pandas/issues/48130))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated producing a single element when iterating over a `DataFrameGroupBy`
    or a `SeriesGroupBy` that has been grouped by a list of length 1; A tuple of length
    one will be returned instead ([GH 42795](https://github.com/pandas-dev/pandas/issues/42795))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed up warning message of deprecation of `MultiIndex.lesort_depth()` as public
    method, as the message previously referred to `MultiIndex.is_lexsorted()` instead
    ([GH 38701](https://github.com/pandas-dev/pandas/issues/38701))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `sort_columns` argument in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") and [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") ([GH 47563](https://github.com/pandas-dev/pandas/issues/47563)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated positional arguments for all but the first argument of [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") and [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata"), use keyword arguments instead ([GH 48128](https://github.com/pandas-dev/pandas/issues/48128)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `mangle_dupe_cols` argument in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf"), [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") and [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"). The argument was never implemented, and a new argument where
    the renaming pattern can be specified will be added instead ([GH 47718](https://github.com/pandas-dev/pandas/issues/47718))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing `dtype='datetime64'` or `dtype=np.datetime64` in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype"), use “datetime64[ns]” instead ([GH 47844](https://github.com/pandas-dev/pandas/issues/47844))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Performance improvements'
  prefs: []
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.corrwith()`](../reference/api/pandas.DataFrame.corrwith.html#pandas.DataFrame.corrwith
    "pandas.DataFrame.corrwith") for column-wise (axis=0) Pearson and Spearman correlation
    when other is a [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    ([GH 46174](https://github.com/pandas-dev/pandas/issues/46174))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") for some user-defined DataFrame
    -> Series functions ([GH 45387](https://github.com/pandas-dev/pandas/issues/45387))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.duplicated()`](../reference/api/pandas.DataFrame.duplicated.html#pandas.DataFrame.duplicated
    "pandas.DataFrame.duplicated") when subset consists of only one column ([GH 45236](https://github.com/pandas-dev/pandas/issues/45236))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.diff()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.diff.html#pandas.core.groupby.DataFrameGroupBy.diff
    "pandas.core.groupby.DataFrameGroupBy.diff") and [`SeriesGroupBy.diff()`](../reference/api/pandas.core.groupby.SeriesGroupBy.diff.html#pandas.core.groupby.SeriesGroupBy.diff
    "pandas.core.groupby.SeriesGroupBy.diff") ([GH 16706](https://github.com/pandas-dev/pandas/issues/16706))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") when broadcasting values for user-defined
    functions ([GH 45708](https://github.com/pandas-dev/pandas/issues/45708))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") for user-defined functions when
    only a single group exists ([GH 44977](https://github.com/pandas-dev/pandas/issues/44977))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") when grouping on a non-unique unsorted
    index ([GH 46527](https://github.com/pandas-dev/pandas/issues/46527))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") for tuple-based indexing of a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 45681](https://github.com/pandas-dev/pandas/issues/45681),
    [GH 46040](https://github.com/pandas-dev/pandas/issues/46040), [GH 46330](https://github.com/pandas-dev/pandas/issues/46330))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.var()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.var.html#pandas.core.groupby.DataFrameGroupBy.var
    "pandas.core.groupby.DataFrameGroupBy.var") and [`SeriesGroupBy.var()`](../reference/api/pandas.core.groupby.SeriesGroupBy.var.html#pandas.core.groupby.SeriesGroupBy.var
    "pandas.core.groupby.SeriesGroupBy.var") with `ddof` other than one ([GH 48152](https://github.com/pandas-dev/pandas/issues/48152))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.to_records()`](../reference/api/pandas.DataFrame.to_records.html#pandas.DataFrame.to_records
    "pandas.DataFrame.to_records") when the index is a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 47263](https://github.com/pandas-dev/pandas/issues/47263))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `MultiIndex.values` when the MultiIndex contains
    levels of type DatetimeIndex, TimedeltaIndex or ExtensionDtypes ([GH 46288](https://github.com/pandas-dev/pandas/issues/46288))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") when left and/or right are empty ([GH 45838](https://github.com/pandas-dev/pandas/issues/45838))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") when left and/or right are empty ([GH 46015](https://github.com/pandas-dev/pandas/issues/46015))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") and [`Series.reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex") when target is a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 46235](https://github.com/pandas-dev/pandas/issues/46235))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when setting values in a pyarrow backed string array
    ([GH 46400](https://github.com/pandas-dev/pandas/issues/46400))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") ([GH 46109](https://github.com/pandas-dev/pandas/issues/46109))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") constructors for extension dtype scalars ([GH 45854](https://github.com/pandas-dev/pandas/issues/45854))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") when `nrows` argument provided ([GH 32727](https://github.com/pandas-dev/pandas/issues/32727))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Styler.to_excel()`](../reference/api/pandas.io.formats.style.Styler.to_excel.html#pandas.io.formats.style.Styler.to_excel
    "pandas.io.formats.style.Styler.to_excel") when applying repeated CSS formats
    ([GH 47371](https://github.com/pandas-dev/pandas/issues/47371))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `MultiIndex.is_monotonic_increasing()` ([GH 47458](https://github.com/pandas-dev/pandas/issues/47458))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `BusinessHour` `str` and `repr` ([GH 44764](https://github.com/pandas-dev/pandas/issues/44764))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in datetime arrays string formatting when one of the
    default strftime formats `"%Y-%m-%d %H:%M:%S"` or `"%Y-%m-%d %H:%M:%S.%f"` is
    used. ([GH 44764](https://github.com/pandas-dev/pandas/issues/44764))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.to_sql()`](../reference/api/pandas.Series.to_sql.html#pandas.Series.to_sql
    "pandas.Series.to_sql") and [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") (`SQLiteTable`) when processing time arrays. ([GH 44764](https://github.com/pandas-dev/pandas/issues/44764))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement to [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") ([GH 47404](https://github.com/pandas-dev/pandas/issues/47404))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `argmax` and `argmin` for [`arrays.SparseArray`](../reference/api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray") ([GH 34197](https://github.com/pandas-dev/pandas/issues/34197))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Bug fixes'
  prefs: []
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Categorical.view()` not accepting integer dtypes ([GH 25464](https://github.com/pandas-dev/pandas/issues/25464))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CategoricalIndex.union()` when the index’s categories are integer-dtype
    and the index contains `NaN` values incorrectly raising instead of casting to
    `float64` ([GH 45362](https://github.com/pandas-dev/pandas/issues/45362))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    when concatenating two (or more) unordered [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") variables, whose categories are permutations, yields
    incorrect index values ([GH 24845](https://github.com/pandas-dev/pandas/issues/24845))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile") with datetime-like dtypes and no rows incorrectly
    returning `float64` dtype instead of retaining datetime-like dtype ([GH 41544](https://github.com/pandas-dev/pandas/issues/41544))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with sequences of `np.str_` objects incorrectly raising
    ([GH 32264](https://github.com/pandas-dev/pandas/issues/32264))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") construction when passing datetime components as positional
    arguments and `tzinfo` as a keyword argument incorrectly raising ([GH 31929](https://github.com/pandas-dev/pandas/issues/31929))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype") when casting from object dtype to `timedelta64[ns]` dtype
    incorrectly casting `np.datetime64("NaT")` values to `np.timedelta64("NaT")` instead
    of raising ([GH 45722](https://github.com/pandas-dev/pandas/issues/45722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") index when passing categorical
    column ([GH 44324](https://github.com/pandas-dev/pandas/issues/44324))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex.tz_localize()`](../reference/api/pandas.DatetimeIndex.tz_localize.html#pandas.DatetimeIndex.tz_localize
    "pandas.DatetimeIndex.tz_localize") localizing to UTC failing to make a copy of
    the underlying data ([GH 46460](https://github.com/pandas-dev/pandas/issues/46460))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.resolution()` incorrectly returning “day” instead of “nanosecond”
    for nanosecond-resolution indexes ([GH 46903](https://github.com/pandas-dev/pandas/issues/46903))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with an integer or float value and `unit="Y"` or `unit="M"`
    giving slightly-wrong results ([GH 47266](https://github.com/pandas-dev/pandas/issues/47266))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeArray`](../reference/api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") construction when passed another [`DatetimeArray`](../reference/api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") and `freq=None` incorrectly inferring the freq
    from the given array ([GH 47296](https://github.com/pandas-dev/pandas/issues/47296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") where `OutOfBoundsDatetime` would be thrown even if `errors=coerce`
    if there were more than 50 rows ([GH 45319](https://github.com/pandas-dev/pandas/issues/45319))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when adding a `DateOffset` to a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") would not add the `nanoseconds` field ([GH 47856](https://github.com/pandas-dev/pandas/issues/47856))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `astype_nansafe()` astype(“timedelta64[ns]”) fails when np.nan is included
    ([GH 45798](https://github.com/pandas-dev/pandas/issues/45798))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") with a `np.timedelta64` object and a `unit` sometimes silently
    overflowing and returning incorrect results instead of raising `OutOfBoundsTimedelta`
    ([GH 46827](https://github.com/pandas-dev/pandas/issues/46827))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") from a large integer or float with `unit="W"` silently overflowing
    and returning incorrect results instead of raising `OutOfBoundsTimedelta` ([GH
    47268](https://github.com/pandas-dev/pandas/issues/47268))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Time Zones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") constructor raising when passed a `ZoneInfo` tzinfo object
    ([GH 46425](https://github.com/pandas-dev/pandas/issues/46425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in operations with array-likes with `dtype="boolean"` and [`NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") incorrectly altering the array in-place ([GH 45421](https://github.com/pandas-dev/pandas/issues/45421))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in arithmetic operations with nullable types without [`NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") values not matching the same operation with non-nullable types ([GH
    48223](https://github.com/pandas-dev/pandas/issues/48223))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `floordiv` when dividing by `IntegerDtype` `0` would return `0` instead
    of `inf` ([GH 48223](https://github.com/pandas-dev/pandas/issues/48223))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in division, `pow` and `mod` operations on array-likes with `dtype="boolean"`
    not being like their `np.bool_` counterparts ([GH 46063](https://github.com/pandas-dev/pandas/issues/46063))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in multiplying a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `IntegerDtype` or `FloatingDtype` by an array-like with
    `timedelta64[ns]` dtype incorrectly raising ([GH 45622](https://github.com/pandas-dev/pandas/issues/45622))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `mean()` where the optional dependency `bottleneck` causes precision
    loss linear in the length of the array. `bottleneck` has been disabled for `mean()`
    improving the loss to log-linear but may result in a performance decrease. ([GH
    42878](https://github.com/pandas-dev/pandas/issues/42878))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") not preserving subclasses ([GH 40810](https://github.com/pandas-dev/pandas/issues/40810))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") from a float-containing list or a floating-dtype ndarray-like
    (e.g. `dask.Array`) and an integer dtype raising instead of casting like we would
    with an `np.ndarray` ([GH 40110](https://github.com/pandas-dev/pandas/issues/40110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Float64Index.astype()` to unsigned integer dtype incorrectly casting
    to `np.int64` dtype ([GH 45309](https://github.com/pandas-dev/pandas/issues/45309))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") and [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") from floating dtype to unsigned integer dtype failing
    to raise in the presence of negative values ([GH 45151](https://github.com/pandas-dev/pandas/issues/45151))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    with `FloatingDtype` and values containing float-castable strings incorrectly
    raising ([GH 45424](https://github.com/pandas-dev/pandas/issues/45424))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when comparing string and datetime64ns objects causing `OverflowError` exception.
    ([GH 45506](https://github.com/pandas-dev/pandas/issues/45506))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in metaclass of generic abstract dtypes causing [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") and [`Series.apply()`](../reference/api/pandas.Series.apply.html#pandas.Series.apply
    "pandas.Series.apply") to raise for the built-in function `type` ([GH 46684](https://github.com/pandas-dev/pandas/issues/46684))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_records()`](../reference/api/pandas.DataFrame.to_records.html#pandas.DataFrame.to_records
    "pandas.DataFrame.to_records") returning inconsistent numpy types if the index
    was a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 47263](https://github.com/pandas-dev/pandas/issues/47263))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") for `orient="list"` or `orient="index"` was not returning
    native types ([GH 46751](https://github.com/pandas-dev/pandas/issues/46751))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") that returns a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") instead of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") when applied to an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and `axis=1` ([GH 39111](https://github.com/pandas-dev/pandas/issues/39111))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when inferring the dtype from an iterable that is *not* a NumPy `ndarray`
    consisting of all NumPy unsigned integer scalars did not result in an unsigned
    integer dtype ([GH 47294](https://github.com/pandas-dev/pandas/issues/47294))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") when pandas objects (e.g. `'Timestamp'`) were column
    names ([GH 44603](https://github.com/pandas-dev/pandas/issues/44603))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`str.startswith()`](https://docs.python.org/3/library/stdtypes.html#str.startswith
    "(in Python v3.12)") and [`str.endswith()`](https://docs.python.org/3/library/stdtypes.html#str.endswith
    "(in Python v3.12)") when using other series as parameter _pat_. Now raises `TypeError`
    ([GH 3485](https://github.com/pandas-dev/pandas/issues/3485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.zfill()`](../reference/api/pandas.Series.str.zfill.html#pandas.Series.str.zfill
    "pandas.Series.str.zfill") when strings contain leading signs, padding ‘0’ before
    the sign character rather than after as `str.zfill` from standard library ([GH
    20868](https://github.com/pandas-dev/pandas/issues/20868))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `IntervalArray.__setitem__()` when setting `np.nan` into an integer-backed
    array raising `ValueError` instead of `TypeError` ([GH 45484](https://github.com/pandas-dev/pandas/issues/45484))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") when using datetime64[ns, tz] as a dtype string ([GH 46999](https://github.com/pandas-dev/pandas/issues/46999))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") where indexing a single row on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a single ExtensionDtype column gave a copy instead of
    a view on the underlying data ([GH 45241](https://github.com/pandas-dev/pandas/issues/45241))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__getitem__()` returning copy when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has duplicated columns even if a unique column is selected
    ([GH 45316](https://github.com/pandas-dev/pandas/issues/45316), [GH 41062](https://github.com/pandas-dev/pandas/issues/41062))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.align()`](../reference/api/pandas.Series.align.html#pandas.Series.align
    "pandas.Series.align") does not create [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with union of levels when both MultiIndexes intersections
    are identical ([GH 45224](https://github.com/pandas-dev/pandas/issues/45224))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting a NA value (`None` or `np.nan`) into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with int-based [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") incorrectly casting to object dtype instead of a float-based
    [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") ([GH 45568](https://github.com/pandas-dev/pandas/issues/45568))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing setting values into an `ExtensionDtype` column with `df.iloc[:,
    i] = values` with `values` having the same dtype as `df.iloc[:, i]` incorrectly
    inserting a new array instead of setting in-place ([GH 33457](https://github.com/pandas-dev/pandas/issues/33457))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` with a non-integer [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") when using an integer key to set a value that cannot be set inplace
    where a `ValueError` was raised instead of casting to a common dtype ([GH 45070](https://github.com/pandas-dev/pandas/issues/45070))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") not casting `None` to `NA` when setting value as a list
    into [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    ([GH 47987](https://github.com/pandas-dev/pandas/issues/47987))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` when setting incompatible values into a `PeriodDtype`
    or `IntervalDtype` [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") raising when indexing with a boolean mask but coercing when indexing
    with otherwise-equivalent indexers; these now consistently coerce, along with
    [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask") and [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") ([GH 45768](https://github.com/pandas-dev/pandas/issues/45768))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") with multiple columns with datetime-like dtypes failing
    to downcast results consistent with other dtypes ([GH 45837](https://github.com/pandas-dev/pandas/issues/45837))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `isin()` upcasting to `float64` with unsigned integer dtype and list-like
    argument without a dtype ([GH 46485](https://github.com/pandas-dev/pandas/issues/46485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.loc.__setitem__()` and `Series.loc.__getitem__()` not raising
    when using multiple keys without using a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 13831](https://github.com/pandas-dev/pandas/issues/13831))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.reindex()`](../reference/api/pandas.Index.reindex.html#pandas.Index.reindex
    "pandas.Index.reindex") raising `AssertionError` when `level` was specified but
    no [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    was given; level is ignored now ([GH 35132](https://github.com/pandas-dev/pandas/issues/35132))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when setting a value too large for a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") dtype failing to coerce to a common type ([GH 26049](https://github.com/pandas-dev/pandas/issues/26049),
    [GH 32878](https://github.com/pandas-dev/pandas/issues/32878))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `loc.__setitem__()` treating `range` keys as positional instead of label-based
    ([GH 45479](https://github.com/pandas-dev/pandas/issues/45479))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` casting extension array dtypes to object when
    setting with a scalar key and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") as value ([GH 46896](https://github.com/pandas-dev/pandas/issues/46896))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` when setting a scalar to a nullable pandas dtype
    would not raise a `TypeError` if the scalar could not be cast (losslessly) to
    the nullable type ([GH 45404](https://github.com/pandas-dev/pandas/issues/45404))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` when setting `boolean` dtype values containing
    `NA` incorrectly raising instead of casting to `boolean` dtype ([GH 45462](https://github.com/pandas-dev/pandas/issues/45462))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") raising with boolean indexer containing `NA` when [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") did not match ([GH 46551](https://github.com/pandas-dev/pandas/issues/46551))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` where setting [`NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") into a numeric-dtype [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") would incorrectly upcast to object-dtype rather than treating
    the value as `np.nan` ([GH 44199](https://github.com/pandas-dev/pandas/issues/44199))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") when setting values to a column and right hand side is
    a dictionary ([GH 47216](https://github.com/pandas-dev/pandas/issues/47216))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` with `datetime64[ns]` dtype, an all-`False` boolean
    mask, and an incompatible value incorrectly casting to `object` instead of retaining
    `datetime64[ns]` dtype ([GH 45967](https://github.com/pandas-dev/pandas/issues/45967))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index.__getitem__()` raising `ValueError` when indexer is from boolean
    dtype with `NA` ([GH 45806](https://github.com/pandas-dev/pandas/issues/45806))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` losing precision when enlarging [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with scalar ([GH 32346](https://github.com/pandas-dev/pandas/issues/32346))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask") with `inplace=True` or setting values with a boolean mask
    with small integer dtypes incorrectly raising ([GH 45750](https://github.com/pandas-dev/pandas/issues/45750))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask") with `inplace=True` and `ExtensionDtype` columns incorrectly
    raising ([GH 45577](https://github.com/pandas-dev/pandas/issues/45577))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in getting a column from a DataFrame with an object-dtype row index with
    datetime-like values: the resulting Series now preserves the exact object-dtype
    Index from the parent DataFrame ([GH 42950](https://github.com/pandas-dev/pandas/issues/42950))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__getattribute__()` raising `AttributeError` if columns have
    `"string"` dtype ([GH 46185](https://github.com/pandas-dev/pandas/issues/46185))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.compare()`](../reference/api/pandas.DataFrame.compare.html#pandas.DataFrame.compare
    "pandas.DataFrame.compare") returning all `NaN` column when comparing extension
    array dtype and numpy dtype ([GH 44014](https://github.com/pandas-dev/pandas/issues/44014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") setting wrong values with `"boolean"` mask for numpy
    dtype ([GH 44014](https://github.com/pandas-dev/pandas/issues/44014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with a `np.str_` key incorrectly raising ([GH 45580](https://github.com/pandas-dev/pandas/issues/45580))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CategoricalIndex.get_indexer()` when index contains `NaN` values, resulting
    in elements that are in target but not present in the index to be mapped to the
    index of the NaN element, instead of -1 ([GH 45361](https://github.com/pandas-dev/pandas/issues/45361))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting large integer values into [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `float32` or `float16` dtype incorrectly altering these
    values instead of coercing to `float64` dtype ([GH 45844](https://github.com/pandas-dev/pandas/issues/45844))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.asof()`](../reference/api/pandas.Series.asof.html#pandas.Series.asof
    "pandas.Series.asof") and [`DataFrame.asof()`](../reference/api/pandas.DataFrame.asof.html#pandas.DataFrame.asof
    "pandas.DataFrame.asof") incorrectly casting bool-dtype results to `float64` dtype
    ([GH 16063](https://github.com/pandas-dev/pandas/issues/16063))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `NDFrame.xs()`, [`DataFrame.iterrows()`](../reference/api/pandas.DataFrame.iterrows.html#pandas.DataFrame.iterrows
    "pandas.DataFrame.iterrows"), [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") not always propagating metadata ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sum()`](../reference/api/pandas.DataFrame.sum.html#pandas.DataFrame.sum
    "pandas.DataFrame.sum") min_count changes dtype if input contains NaNs ([GH 46947](https://github.com/pandas-dev/pandas/issues/46947))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalTree` that lead to an infinite recursion. ([GH 46658](https://github.com/pandas-dev/pandas/issues/46658))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") raising `AttributeError` when indexing on `NA`, rather than
    putting `NaT` in its place. ([GH 46673](https://github.com/pandas-dev/pandas/issues/46673))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.at()`](../reference/api/pandas.DataFrame.at.html#pandas.DataFrame.at
    "pandas.DataFrame.at") would allow the modification of multiple columns ([GH 48296](https://github.com/pandas-dev/pandas/issues/48296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") and [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") with `downcast` keyword not being respected in some
    cases where there are no NA values present ([GH 45423](https://github.com/pandas-dev/pandas/issues/45423))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") and [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") with [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") and incompatible value raising instead of casting to a
    common (usually object) dtype ([GH 45796](https://github.com/pandas-dev/pandas/issues/45796))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") not respecting `na_action` argument if mapper is a `dict`
    or [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    ([GH 47527](https://github.com/pandas-dev/pandas/issues/47527))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") with object-dtype column not returning a copy
    with `inplace=False` ([GH 45791](https://github.com/pandas-dev/pandas/issues/45791))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") allows to set both `how` and `thresh` incompatible
    arguments ([GH 46575](https://github.com/pandas-dev/pandas/issues/46575))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") ignored `axis` when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") is single block ([GH 47713](https://github.com/pandas-dev/pandas/issues/47713))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") returning empty result when slicing a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with a negative step size and non-null start/stop values
    ([GH 46156](https://github.com/pandas-dev/pandas/issues/46156))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raising when slicing a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with a negative step size other than -1 ([GH 46156](https://github.com/pandas-dev/pandas/issues/46156))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raising when slicing a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with a negative step size and slicing a non-int labeled index
    level ([GH 46156](https://github.com/pandas-dev/pandas/issues/46156))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.to_numpy()`](../reference/api/pandas.Series.to_numpy.html#pandas.Series.to_numpy
    "pandas.Series.to_numpy") where multiindexed Series could not be converted to
    numpy arrays when an `na_value` was supplied ([GH 45774](https://github.com/pandas-dev/pandas/issues/45774))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.equals` not commutative when only one side has extension
    array dtype ([GH 46026](https://github.com/pandas-dev/pandas/issues/46026))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.from_tuples()`](../reference/api/pandas.MultiIndex.from_tuples.html#pandas.MultiIndex.from_tuples
    "pandas.MultiIndex.from_tuples") cannot construct Index of empty tuples ([GH 45608](https://github.com/pandas-dev/pandas/issues/45608))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I/O
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") where no error is raised if the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") contains `-np.inf` ([GH 45350](https://github.com/pandas-dev/pandas/issues/45350))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") results in an infinite loop with certain `skiprows` callables
    ([GH 45585](https://github.com/pandas-dev/pandas/issues/45585))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.info()`](../reference/api/pandas.DataFrame.info.html#pandas.DataFrame.info
    "pandas.DataFrame.info") where a new line at the end of the output is omitted
    when called on an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 45494](https://github.com/pandas-dev/pandas/issues/45494))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not recognizing line break for `on_bad_lines="warn"` for `engine="c"`
    ([GH 41710](https://github.com/pandas-dev/pandas/issues/41710))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") not respecting `float_format` for `Float64` dtype ([GH
    45991](https://github.com/pandas-dev/pandas/issues/45991))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not respecting a specified converter to index columns in all
    cases ([GH 40589](https://github.com/pandas-dev/pandas/issues/40589))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") interpreting second row as [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") names even when `index_col=False` ([GH 46569](https://github.com/pandas-dev/pandas/issues/46569))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") when `engine="pyarrow"` which caused partial write to disk
    when column of unsupported datatype was passed ([GH 44914](https://github.com/pandas-dev/pandas/issues/44914))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") and [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") would raise when writing an empty DataFrame to a `.ods`
    file ([GH 45793](https://github.com/pandas-dev/pandas/issues/45793))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") ignoring non-existing header row for `engine="python"` ([GH
    47400](https://github.com/pandas-dev/pandas/issues/47400))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") raising uncontrolled `IndexError` when `header` references
    non-existing rows ([GH 43143](https://github.com/pandas-dev/pandas/issues/43143))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") where elements surrounding `<br>` were joined without a space
    between them ([GH 29528](https://github.com/pandas-dev/pandas/issues/29528))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when data is longer than header leading to issues with callables
    in `usecols` expecting strings ([GH 46997](https://github.com/pandas-dev/pandas/issues/46997))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in Parquet roundtrip for Interval dtype with `datetime64[ns]` subtype ([GH
    45881](https://github.com/pandas-dev/pandas/issues/45881))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") when reading a `.ods` file with newlines between xml elements
    ([GH 45598](https://github.com/pandas-dev/pandas/issues/45598))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") when `engine="fastparquet"` where the file was not closed
    on error ([GH 46555](https://github.com/pandas-dev/pandas/issues/46555))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") now excludes the `border` attribute from `<table>`
    elements when `border` keyword is set to `False`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") with certain types of compressed SAS7BDAT files ([GH 35545](https://github.com/pandas-dev/pandas/issues/35545))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") not forward filling [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") when no names were given ([GH 47487](https://github.com/pandas-dev/pandas/issues/47487))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") returned `None` rather than an empty DataFrame for SAS7BDAT
    files with zero rows ([GH 18198](https://github.com/pandas-dev/pandas/issues/18198))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") using wrong missing value with extension arrays
    in [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    ([GH 47986](https://github.com/pandas-dev/pandas/issues/47986))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `StataWriter` where value labels were always written with default encoding
    ([GH 46750](https://github.com/pandas-dev/pandas/issues/46750))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `StataWriterUTF8` where some valid characters were removed from variable
    names ([GH 47276](https://github.com/pandas-dev/pandas/issues/47276))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") when writing an empty dataframe with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 19543](https://github.com/pandas-dev/pandas/issues/19543))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") with RLE-compressed SAS7BDAT files that contain 0x40 control
    bytes ([GH 31243](https://github.com/pandas-dev/pandas/issues/31243))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") that scrambled column names ([GH 31243](https://github.com/pandas-dev/pandas/issues/31243))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") with RLE-compressed SAS7BDAT files that contain 0x00 control
    bytes ([GH 47099](https://github.com/pandas-dev/pandas/issues/47099))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") with `use_nullable_dtypes=True` where `float64` dtype was
    returned instead of nullable `Float64` dtype ([GH 45694](https://github.com/pandas-dev/pandas/issues/45694))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") where `PeriodDtype` would not make the serialization
    roundtrip when read back with [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") ([GH 44720](https://github.com/pandas-dev/pandas/issues/44720))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") when reading XML files with Chinese character tags and would
    raise `XMLSyntaxError` ([GH 47902](https://github.com/pandas-dev/pandas/issues/47902))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Period
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in subtraction of [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") from [`PeriodArray`](../reference/api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray") returning wrong results ([GH 45999](https://github.com/pandas-dev/pandas/issues/45999))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period.strftime()`](../reference/api/pandas.Period.strftime.html#pandas.Period.strftime
    "pandas.Period.strftime") and [`PeriodIndex.strftime()`](../reference/api/pandas.PeriodIndex.strftime.html#pandas.PeriodIndex.strftime
    "pandas.PeriodIndex.strftime"), directives `%l` and `%u` were giving wrong results
    ([GH 46252](https://github.com/pandas-dev/pandas/issues/46252))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in inferring an incorrect `freq` when passing a string to [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") microseconds that are a multiple of 1000 ([GH 46811](https://github.com/pandas-dev/pandas/issues/46811))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") from a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") or `np.datetime64` object with non-zero nanoseconds and `freq="ns"`
    incorrectly truncating the nanoseconds ([GH 46811](https://github.com/pandas-dev/pandas/issues/46811))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in adding `np.timedelta64("NaT", "ns")` to a [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") with a timedelta-like freq incorrectly raising `IncompatibleFrequency`
    instead of returning `NaT` ([GH 47196](https://github.com/pandas-dev/pandas/issues/47196))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in adding an array of integers to an array with [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") giving incorrect results when `dtype.freq.n > 1` ([GH 47209](https://github.com/pandas-dev/pandas/issues/47209))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in subtracting a [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") from an array with [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") returning incorrect results instead of raising `OverflowError`
    when the operation overflows ([GH 47538](https://github.com/pandas-dev/pandas/issues/47538))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.barh()`](../reference/api/pandas.DataFrame.plot.barh.html#pandas.DataFrame.plot.barh
    "pandas.DataFrame.plot.barh") that prevented labeling the x-axis and `xlabel`
    updating the y-axis label ([GH 45144](https://github.com/pandas-dev/pandas/issues/45144))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.box()`](../reference/api/pandas.DataFrame.plot.box.html#pandas.DataFrame.plot.box
    "pandas.DataFrame.plot.box") that prevented labeling the x-axis ([GH 45463](https://github.com/pandas-dev/pandas/issues/45463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.boxplot()`](../reference/api/pandas.DataFrame.boxplot.html#pandas.DataFrame.boxplot
    "pandas.DataFrame.boxplot") that prevented passing in `xlabel` and `ylabel` ([GH
    45463](https://github.com/pandas-dev/pandas/issues/45463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.boxplot()`](../reference/api/pandas.DataFrame.boxplot.html#pandas.DataFrame.boxplot
    "pandas.DataFrame.boxplot") that prevented specifying `vert=False` ([GH 36918](https://github.com/pandas-dev/pandas/issues/36918))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") that prevented specifying `norm` ([GH 45809](https://github.com/pandas-dev/pandas/issues/45809))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fix showing “None” as ylabel in [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") when not setting ylabel ([GH 46129](https://github.com/pandas-dev/pandas/issues/46129))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") that led to xticks and vertical grids being improperly
    placed when plotting a quarterly series ([GH 47602](https://github.com/pandas-dev/pandas/issues/47602))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") that prevented setting y-axis label, limits and ticks
    for a secondary y-axis ([GH 47753](https://github.com/pandas-dev/pandas/issues/47753))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") ignoring `closed="right"` on [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") ([GH 45414](https://github.com/pandas-dev/pandas/issues/45414))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") fails when `func="size"` and
    the input DataFrame has multiple columns ([GH 27469](https://github.com/pandas-dev/pandas/issues/27469))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.size()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.size.html#pandas.core.groupby.DataFrameGroupBy.size
    "pandas.core.groupby.DataFrameGroupBy.size") and [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") with `func="size"` produced
    incorrect results when `axis=1` ([GH 45715](https://github.com/pandas-dev/pandas/issues/45715))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`ExponentialMovingWindow.mean()`](../reference/api/pandas.core.window.ewm.ExponentialMovingWindow.mean.html#pandas.core.window.ewm.ExponentialMovingWindow.mean
    "pandas.core.window.ewm.ExponentialMovingWindow.mean") with `axis=1` and `engine='numba'`
    when the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has more columns than rows ([GH 46086](https://github.com/pandas-dev/pandas/issues/46086))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when using `engine="numba"` would return the same jitted function when modifying
    `engine_kwargs` ([GH 46086](https://github.com/pandas-dev/pandas/issues/46086))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") fails when `axis=1` and `func`
    is `"first"` or `"last"` ([GH 45986](https://github.com/pandas-dev/pandas/issues/45986))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cumsum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum") with `skipna=False` giving incorrect
    results ([GH 46216](https://github.com/pandas-dev/pandas/issues/46216))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.sum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum"), [`SeriesGroupBy.sum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.sum.html#pandas.core.groupby.SeriesGroupBy.sum
    "pandas.core.groupby.SeriesGroupBy.sum"), [`DataFrameGroupBy.prod()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.prod.html#pandas.core.groupby.DataFrameGroupBy.prod
    "pandas.core.groupby.DataFrameGroupBy.prod"), `SeriesGroupBy.prod, :meth:()`.DataFrameGroupBy.cumsum`,
    and [`SeriesGroupBy.cumsum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cumsum.html#pandas.core.groupby.SeriesGroupBy.cumsum
    "pandas.core.groupby.SeriesGroupBy.cumsum") with integer dtypes losing precision
    ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cumsum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum") and [`SeriesGroupBy.cumsum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cumsum.html#pandas.core.groupby.SeriesGroupBy.cumsum
    "pandas.core.groupby.SeriesGroupBy.cumsum") with `timedelta64[ns]` dtype failing
    to recognize `NaT` as a null value ([GH 46216](https://github.com/pandas-dev/pandas/issues/46216))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cumsum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum") and [`SeriesGroupBy.cumsum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cumsum.html#pandas.core.groupby.SeriesGroupBy.cumsum
    "pandas.core.groupby.SeriesGroupBy.cumsum") with integer dtypes causing overflows
    when sum was bigger than maximum of dtype ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cummin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin"), [`SeriesGroupBy.cummin()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummin.html#pandas.core.groupby.SeriesGroupBy.cummin
    "pandas.core.groupby.SeriesGroupBy.cummin"), [`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax") and [`SeriesGroupBy.cummax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummax.html#pandas.core.groupby.SeriesGroupBy.cummax
    "pandas.core.groupby.SeriesGroupBy.cummax") with nullable dtypes incorrectly altering
    the original data in place ([GH 46220](https://github.com/pandas-dev/pandas/issues/46220))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") raising error when `None` is in first level of [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 47348](https://github.com/pandas-dev/pandas/issues/47348))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax") and [`SeriesGroupBy.cummax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummax.html#pandas.core.groupby.SeriesGroupBy.cummax
    "pandas.core.groupby.SeriesGroupBy.cummax") with `int64` dtype with leading value
    being the smallest possible int64 ([GH 46382](https://github.com/pandas-dev/pandas/issues/46382))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cumprod()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumprod.html#pandas.core.groupby.DataFrameGroupBy.cumprod
    "pandas.core.groupby.DataFrameGroupBy.cumprod") and [`SeriesGroupBy.cumprod()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cumprod.html#pandas.core.groupby.SeriesGroupBy.cumprod
    "pandas.core.groupby.SeriesGroupBy.cumprod") `NaN` influences calculation in different
    columns with `skipna=False` ([GH 48064](https://github.com/pandas-dev/pandas/issues/48064))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.max()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.max.html#pandas.core.groupby.DataFrameGroupBy.max
    "pandas.core.groupby.DataFrameGroupBy.max") and [`SeriesGroupBy.max()`](../reference/api/pandas.core.groupby.SeriesGroupBy.max.html#pandas.core.groupby.SeriesGroupBy.max
    "pandas.core.groupby.SeriesGroupBy.max") with empty groups and `uint64` dtype
    incorrectly raising `RuntimeError` ([GH 46408](https://github.com/pandas-dev/pandas/issues/46408))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") would fail when `func` was a string
    and args or kwargs were supplied ([GH 46479](https://github.com/pandas-dev/pandas/issues/46479))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SeriesGroupBy.apply()` would incorrectly name its result when there
    was a unique group ([GH 46369](https://github.com/pandas-dev/pandas/issues/46369))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.sum()`](../reference/api/pandas.core.window.rolling.Rolling.sum.html#pandas.core.window.rolling.Rolling.sum
    "pandas.core.window.rolling.Rolling.sum") and [`Rolling.mean()`](../reference/api/pandas.core.window.rolling.Rolling.mean.html#pandas.core.window.rolling.Rolling.mean
    "pandas.core.window.rolling.Rolling.mean") would give incorrect result with window
    of same values ([GH 42064](https://github.com/pandas-dev/pandas/issues/42064),
    [GH 46431](https://github.com/pandas-dev/pandas/issues/46431))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.var()`](../reference/api/pandas.core.window.rolling.Rolling.var.html#pandas.core.window.rolling.Rolling.var
    "pandas.core.window.rolling.Rolling.var") and [`Rolling.std()`](../reference/api/pandas.core.window.rolling.Rolling.std.html#pandas.core.window.rolling.Rolling.std
    "pandas.core.window.rolling.Rolling.std") would give non-zero result with window
    of same values ([GH 42064](https://github.com/pandas-dev/pandas/issues/42064))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.skew()`](../reference/api/pandas.core.window.rolling.Rolling.skew.html#pandas.core.window.rolling.Rolling.skew
    "pandas.core.window.rolling.Rolling.skew") and [`Rolling.kurt()`](../reference/api/pandas.core.window.rolling.Rolling.kurt.html#pandas.core.window.rolling.Rolling.kurt
    "pandas.core.window.rolling.Rolling.kurt") would give NaN with window of same
    values ([GH 30993](https://github.com/pandas-dev/pandas/issues/30993))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.var()`](../reference/api/pandas.core.window.rolling.Rolling.var.html#pandas.core.window.rolling.Rolling.var
    "pandas.core.window.rolling.Rolling.var") would segfault calculating weighted
    variance when window size was larger than data size ([GH 46760](https://github.com/pandas-dev/pandas/issues/46760))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Grouper.__repr__()` where `dropna` was not included. Now it is ([GH
    46754](https://github.com/pandas-dev/pandas/issues/46754))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") gives ValueError when center=True, axis=1 and win_type
    is specified ([GH 46135](https://github.com/pandas-dev/pandas/issues/46135))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.describe()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.describe.html#pandas.core.groupby.DataFrameGroupBy.describe
    "pandas.core.groupby.DataFrameGroupBy.describe") and [`SeriesGroupBy.describe()`](../reference/api/pandas.core.groupby.SeriesGroupBy.describe.html#pandas.core.groupby.SeriesGroupBy.describe
    "pandas.core.groupby.SeriesGroupBy.describe") produces inconsistent results for
    empty datasets ([GH 41575](https://github.com/pandas-dev/pandas/issues/41575))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") reduction methods when used with `on` would attempt
    to aggregate the provided column ([GH 47079](https://github.com/pandas-dev/pandas/issues/47079))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") would not respect `dropna=False` when the input DataFrame/Series
    had a NaN values in a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 46783](https://github.com/pandas-dev/pandas/issues/46783))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.resample()` raises `KeyError` when getting the result
    from a key list which misses the resample key ([GH 47362](https://github.com/pandas-dev/pandas/issues/47362))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") would lose index columns when the DataFrame is empty
    for transforms, like fillna ([GH 47787](https://github.com/pandas-dev/pandas/issues/47787))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") with `dropna=False` and `sort=False` would put any null
    groups at the end instead the order that they are encountered ([GH 46584](https://github.com/pandas-dev/pandas/issues/46584))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    between a [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    with integer dtype and another with [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") with integer categories and containing `NaN` values
    casting to object dtype instead of `float64` ([GH 45359](https://github.com/pandas-dev/pandas/issues/45359))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") that selected object and categorical dtypes but not string
    ([GH 44965](https://github.com/pandas-dev/pandas/issues/44965))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.align()`](../reference/api/pandas.DataFrame.align.html#pandas.DataFrame.align
    "pandas.DataFrame.align") when aligning a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") to a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with another [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 46001](https://github.com/pandas-dev/pandas/issues/46001))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in concatenation with `IntegerDtype`, or `FloatingDtype` arrays where the
    resulting dtype did not mirror the behavior of the non-nullable dtypes ([GH 46379](https://github.com/pandas-dev/pandas/issues/46379))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    losing dtype of columns when `join="outer"` and `sort=True` ([GH 47329](https://github.com/pandas-dev/pandas/issues/47329))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    not sorting the column names when `None` is included ([GH 47331](https://github.com/pandas-dev/pandas/issues/47331))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    with identical key leads to error when indexing [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 46519](https://github.com/pandas-dev/pandas/issues/46519))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") raising `TypeError` when `dropna=True` and aggregation column
    has extension array dtype ([GH 47477](https://github.com/pandas-dev/pandas/issues/47477))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    raising error for `how="cross"` when using `FIPS` mode in ssl library ([GH 48024](https://github.com/pandas-dev/pandas/issues/48024))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") with a list when using suffixes to join DataFrames with
    duplicate column names ([GH 46396](https://github.com/pandas-dev/pandas/issues/46396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") with `sort=False` results in sorted index ([GH
    17041](https://github.com/pandas-dev/pandas/issues/17041))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    when `axis=1` and `sort=False` where the resulting Index was a `Int64Index` instead
    of a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") ([GH 46675](https://github.com/pandas-dev/pandas/issues/46675))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`wide_to_long()`](../reference/api/pandas.wide_to_long.html#pandas.wide_to_long
    "pandas.wide_to_long") raises when `stubnames` is missing in columns and `i` contains
    string dtype column ([GH 46044](https://github.com/pandas-dev/pandas/issues/46044))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") with categorical index results in unexpected reordering
    ([GH 47812](https://github.com/pandas-dev/pandas/issues/47812))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") and [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") with `SparseDtype` failing to retain the array’s `fill_value`
    ([GH 45691](https://github.com/pandas-dev/pandas/issues/45691))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseArray.unique()` fails to keep original elements order ([GH 47809](https://github.com/pandas-dev/pandas/issues/47809))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `IntegerArray.searchsorted()` and `FloatingArray.searchsorted()` returning
    inconsistent results when acting on `np.nan` ([GH 45255](https://github.com/pandas-dev/pandas/issues/45255))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styler
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug when attempting to apply styling functions to an empty DataFrame subset
    ([GH 45313](https://github.com/pandas-dev/pandas/issues/45313))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CSSToExcelConverter` leading to `TypeError` when border color provided
    without border style for `xlsxwriter` engine ([GH 42276](https://github.com/pandas-dev/pandas/issues/42276))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Styler.set_sticky()` leading to white text on white background in dark
    mode ([GH 46984](https://github.com/pandas-dev/pandas/issues/46984))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Styler.to_latex()` causing `UnboundLocalError` when `clines="all;data"`
    and the `DataFrame` has no rows. ([GH 47203](https://github.com/pandas-dev/pandas/issues/47203))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in `Styler.to_excel()` when using `vertical-align: middle;` with `xlsxwriter`
    engine ([GH 30107](https://github.com/pandas-dev/pandas/issues/30107))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when applying styles to a DataFrame with boolean column labels ([GH 47838](https://github.com/pandas-dev/pandas/issues/47838))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metadata
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fixed metadata propagation in [`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed metadata propagation in [`DataFrame.explode()`](../reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode
    "pandas.DataFrame.explode") ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`assert_index_equal()`](../reference/api/pandas.testing.assert_index_equal.html#pandas.testing.assert_index_equal
    "pandas.testing.assert_index_equal") with `names=True` and `check_order=False`
    not checking names ([GH 47328](https://github.com/pandas-dev/pandas/issues/47328))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Categorical.view()` not accepting integer dtypes ([GH 25464](https://github.com/pandas-dev/pandas/issues/25464))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CategoricalIndex.union()` when the index’s categories are integer-dtype
    and the index contains `NaN` values incorrectly raising instead of casting to
    `float64` ([GH 45362](https://github.com/pandas-dev/pandas/issues/45362))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    when concatenating two (or more) unordered [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") variables, whose categories are permutations, yields
    incorrect index values ([GH 24845](https://github.com/pandas-dev/pandas/issues/24845))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile") with datetime-like dtypes and no rows incorrectly
    returning `float64` dtype instead of retaining datetime-like dtype ([GH 41544](https://github.com/pandas-dev/pandas/issues/41544))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with sequences of `np.str_` objects incorrectly raising
    ([GH 32264](https://github.com/pandas-dev/pandas/issues/32264))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") construction when passing datetime components as positional
    arguments and `tzinfo` as a keyword argument incorrectly raising ([GH 31929](https://github.com/pandas-dev/pandas/issues/31929))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype") when casting from object dtype to `timedelta64[ns]` dtype
    incorrectly casting `np.datetime64("NaT")` values to `np.timedelta64("NaT")` instead
    of raising ([GH 45722](https://github.com/pandas-dev/pandas/issues/45722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") index when passing categorical
    column ([GH 44324](https://github.com/pandas-dev/pandas/issues/44324))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex.tz_localize()`](../reference/api/pandas.DatetimeIndex.tz_localize.html#pandas.DatetimeIndex.tz_localize
    "pandas.DatetimeIndex.tz_localize") localizing to UTC failing to make a copy of
    the underlying data ([GH 46460](https://github.com/pandas-dev/pandas/issues/46460))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.resolution()` incorrectly returning “day” instead of “nanosecond”
    for nanosecond-resolution indexes ([GH 46903](https://github.com/pandas-dev/pandas/issues/46903))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with an integer or float value and `unit="Y"` or `unit="M"`
    giving slightly-wrong results ([GH 47266](https://github.com/pandas-dev/pandas/issues/47266))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeArray`](../reference/api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") construction when passed another [`DatetimeArray`](../reference/api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") and `freq=None` incorrectly inferring the freq
    from the given array ([GH 47296](https://github.com/pandas-dev/pandas/issues/47296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") where `OutOfBoundsDatetime` would be thrown even if `errors=coerce`
    if there were more than 50 rows ([GH 45319](https://github.com/pandas-dev/pandas/issues/45319))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when adding a `DateOffset` to a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") would not add the `nanoseconds` field ([GH 47856](https://github.com/pandas-dev/pandas/issues/47856))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `astype_nansafe()` astype(“timedelta64[ns]”) fails when np.nan is included
    ([GH 45798](https://github.com/pandas-dev/pandas/issues/45798))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") with a `np.timedelta64` object and a `unit` sometimes silently
    overflowing and returning incorrect results instead of raising `OutOfBoundsTimedelta`
    ([GH 46827](https://github.com/pandas-dev/pandas/issues/46827))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") from a large integer or float with `unit="W"` silently overflowing
    and returning incorrect results instead of raising `OutOfBoundsTimedelta` ([GH
    47268](https://github.com/pandas-dev/pandas/issues/47268))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Time Zones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") constructor raising when passed a `ZoneInfo` tzinfo object
    ([GH 46425](https://github.com/pandas-dev/pandas/issues/46425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in operations with array-likes with `dtype="boolean"` and [`NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") incorrectly altering the array in-place ([GH 45421](https://github.com/pandas-dev/pandas/issues/45421))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in arithmetic operations with nullable types without [`NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") values not matching the same operation with non-nullable types ([GH
    48223](https://github.com/pandas-dev/pandas/issues/48223))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `floordiv` when dividing by `IntegerDtype` `0` would return `0` instead
    of `inf` ([GH 48223](https://github.com/pandas-dev/pandas/issues/48223))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in division, `pow` and `mod` operations on array-likes with `dtype="boolean"`
    not being like their `np.bool_` counterparts ([GH 46063](https://github.com/pandas-dev/pandas/issues/46063))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in multiplying a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `IntegerDtype` or `FloatingDtype` by an array-like with
    `timedelta64[ns]` dtype incorrectly raising ([GH 45622](https://github.com/pandas-dev/pandas/issues/45622))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `mean()` where the optional dependency `bottleneck` causes precision
    loss linear in the length of the array. `bottleneck` has been disabled for `mean()`
    improving the loss to log-linear but may result in a performance decrease. ([GH
    42878](https://github.com/pandas-dev/pandas/issues/42878))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") not preserving subclasses ([GH 40810](https://github.com/pandas-dev/pandas/issues/40810))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") from a float-containing list or a floating-dtype ndarray-like
    (e.g. `dask.Array`) and an integer dtype raising instead of casting like we would
    with an `np.ndarray` ([GH 40110](https://github.com/pandas-dev/pandas/issues/40110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Float64Index.astype()` to unsigned integer dtype incorrectly casting
    to `np.int64` dtype ([GH 45309](https://github.com/pandas-dev/pandas/issues/45309))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") and [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") from floating dtype to unsigned integer dtype failing
    to raise in the presence of negative values ([GH 45151](https://github.com/pandas-dev/pandas/issues/45151))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    with `FloatingDtype` and values containing float-castable strings incorrectly
    raising ([GH 45424](https://github.com/pandas-dev/pandas/issues/45424))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when comparing string and datetime64ns objects causing `OverflowError` exception.
    ([GH 45506](https://github.com/pandas-dev/pandas/issues/45506))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in metaclass of generic abstract dtypes causing [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") and [`Series.apply()`](../reference/api/pandas.Series.apply.html#pandas.Series.apply
    "pandas.Series.apply") to raise for the built-in function `type` ([GH 46684](https://github.com/pandas-dev/pandas/issues/46684))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_records()`](../reference/api/pandas.DataFrame.to_records.html#pandas.DataFrame.to_records
    "pandas.DataFrame.to_records") returning inconsistent numpy types if the index
    was a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 47263](https://github.com/pandas-dev/pandas/issues/47263))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") for `orient="list"` or `orient="index"` was not returning
    native types ([GH 46751](https://github.com/pandas-dev/pandas/issues/46751))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") that returns a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") instead of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") when applied to an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and `axis=1` ([GH 39111](https://github.com/pandas-dev/pandas/issues/39111))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when inferring the dtype from an iterable that is *not* a NumPy `ndarray`
    consisting of all NumPy unsigned integer scalars did not result in an unsigned
    integer dtype ([GH 47294](https://github.com/pandas-dev/pandas/issues/47294))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") when pandas objects (e.g. `'Timestamp'`) were column
    names ([GH 44603](https://github.com/pandas-dev/pandas/issues/44603))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`str.startswith()`](https://docs.python.org/3/library/stdtypes.html#str.startswith
    "(in Python v3.12)") and [`str.endswith()`](https://docs.python.org/3/library/stdtypes.html#str.endswith
    "(in Python v3.12)") when using other series as parameter _pat_. Now raises `TypeError`
    ([GH 3485](https://github.com/pandas-dev/pandas/issues/3485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.zfill()`](../reference/api/pandas.Series.str.zfill.html#pandas.Series.str.zfill
    "pandas.Series.str.zfill") when strings contain leading signs, padding ‘0’ before
    the sign character rather than after as `str.zfill` from standard library ([GH
    20868](https://github.com/pandas-dev/pandas/issues/20868))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `IntervalArray.__setitem__()` when setting `np.nan` into an integer-backed
    array raising `ValueError` instead of `TypeError` ([GH 45484](https://github.com/pandas-dev/pandas/issues/45484))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") when using datetime64[ns, tz] as a dtype string ([GH 46999](https://github.com/pandas-dev/pandas/issues/46999))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") where indexing a single row on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a single ExtensionDtype column gave a copy instead of
    a view on the underlying data ([GH 45241](https://github.com/pandas-dev/pandas/issues/45241))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__getitem__()` returning copy when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has duplicated columns even if a unique column is selected
    ([GH 45316](https://github.com/pandas-dev/pandas/issues/45316), [GH 41062](https://github.com/pandas-dev/pandas/issues/41062))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.align()`](../reference/api/pandas.Series.align.html#pandas.Series.align
    "pandas.Series.align") does not create [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with union of levels when both MultiIndexes intersections
    are identical ([GH 45224](https://github.com/pandas-dev/pandas/issues/45224))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting a NA value (`None` or `np.nan`) into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with int-based [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") incorrectly casting to object dtype instead of a float-based
    [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") ([GH 45568](https://github.com/pandas-dev/pandas/issues/45568))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing setting values into an `ExtensionDtype` column with `df.iloc[:,
    i] = values` with `values` having the same dtype as `df.iloc[:, i]` incorrectly
    inserting a new array instead of setting in-place ([GH 33457](https://github.com/pandas-dev/pandas/issues/33457))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` with a non-integer [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") when using an integer key to set a value that cannot be set inplace
    where a `ValueError` was raised instead of casting to a common dtype ([GH 45070](https://github.com/pandas-dev/pandas/issues/45070))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") not casting `None` to `NA` when setting value as a list
    into [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    ([GH 47987](https://github.com/pandas-dev/pandas/issues/47987))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` when setting incompatible values into a `PeriodDtype`
    or `IntervalDtype` [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") raising when indexing with a boolean mask but coercing when indexing
    with otherwise-equivalent indexers; these now consistently coerce, along with
    [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask") and [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") ([GH 45768](https://github.com/pandas-dev/pandas/issues/45768))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") with multiple columns with datetime-like dtypes failing
    to downcast results consistent with other dtypes ([GH 45837](https://github.com/pandas-dev/pandas/issues/45837))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `isin()` upcasting to `float64` with unsigned integer dtype and list-like
    argument without a dtype ([GH 46485](https://github.com/pandas-dev/pandas/issues/46485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.loc.__setitem__()` and `Series.loc.__getitem__()` not raising
    when using multiple keys without using a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 13831](https://github.com/pandas-dev/pandas/issues/13831))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.reindex()`](../reference/api/pandas.Index.reindex.html#pandas.Index.reindex
    "pandas.Index.reindex") raising `AssertionError` when `level` was specified but
    no [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    was given; level is ignored now ([GH 35132](https://github.com/pandas-dev/pandas/issues/35132))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when setting a value too large for a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") dtype failing to coerce to a common type ([GH 26049](https://github.com/pandas-dev/pandas/issues/26049),
    [GH 32878](https://github.com/pandas-dev/pandas/issues/32878))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `loc.__setitem__()` treating `range` keys as positional instead of label-based
    ([GH 45479](https://github.com/pandas-dev/pandas/issues/45479))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` casting extension array dtypes to object when
    setting with a scalar key and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") as value ([GH 46896](https://github.com/pandas-dev/pandas/issues/46896))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` when setting a scalar to a nullable pandas dtype
    would not raise a `TypeError` if the scalar could not be cast (losslessly) to
    the nullable type ([GH 45404](https://github.com/pandas-dev/pandas/issues/45404))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` when setting `boolean` dtype values containing
    `NA` incorrectly raising instead of casting to `boolean` dtype ([GH 45462](https://github.com/pandas-dev/pandas/issues/45462))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") raising with boolean indexer containing `NA` when [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") did not match ([GH 46551](https://github.com/pandas-dev/pandas/issues/46551))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` where setting [`NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") into a numeric-dtype [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") would incorrectly upcast to object-dtype rather than treating
    the value as `np.nan` ([GH 44199](https://github.com/pandas-dev/pandas/issues/44199))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") when setting values to a column and right hand side is
    a dictionary ([GH 47216](https://github.com/pandas-dev/pandas/issues/47216))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` with `datetime64[ns]` dtype, an all-`False` boolean
    mask, and an incompatible value incorrectly casting to `object` instead of retaining
    `datetime64[ns]` dtype ([GH 45967](https://github.com/pandas-dev/pandas/issues/45967))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index.__getitem__()` raising `ValueError` when indexer is from boolean
    dtype with `NA` ([GH 45806](https://github.com/pandas-dev/pandas/issues/45806))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` losing precision when enlarging [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with scalar ([GH 32346](https://github.com/pandas-dev/pandas/issues/32346))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask") with `inplace=True` or setting values with a boolean mask
    with small integer dtypes incorrectly raising ([GH 45750](https://github.com/pandas-dev/pandas/issues/45750))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask") with `inplace=True` and `ExtensionDtype` columns incorrectly
    raising ([GH 45577](https://github.com/pandas-dev/pandas/issues/45577))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in getting a column from a DataFrame with an object-dtype row index with
    datetime-like values: the resulting Series now preserves the exact object-dtype
    Index from the parent DataFrame ([GH 42950](https://github.com/pandas-dev/pandas/issues/42950))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__getattribute__()` raising `AttributeError` if columns have
    `"string"` dtype ([GH 46185](https://github.com/pandas-dev/pandas/issues/46185))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.compare()`](../reference/api/pandas.DataFrame.compare.html#pandas.DataFrame.compare
    "pandas.DataFrame.compare") returning all `NaN` column when comparing extension
    array dtype and numpy dtype ([GH 44014](https://github.com/pandas-dev/pandas/issues/44014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") setting wrong values with `"boolean"` mask for numpy
    dtype ([GH 44014](https://github.com/pandas-dev/pandas/issues/44014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with a `np.str_` key incorrectly raising ([GH 45580](https://github.com/pandas-dev/pandas/issues/45580))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CategoricalIndex.get_indexer()` when index contains `NaN` values, resulting
    in elements that are in target but not present in the index to be mapped to the
    index of the NaN element, instead of -1 ([GH 45361](https://github.com/pandas-dev/pandas/issues/45361))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting large integer values into [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `float32` or `float16` dtype incorrectly altering these
    values instead of coercing to `float64` dtype ([GH 45844](https://github.com/pandas-dev/pandas/issues/45844))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.asof()`](../reference/api/pandas.Series.asof.html#pandas.Series.asof
    "pandas.Series.asof") and [`DataFrame.asof()`](../reference/api/pandas.DataFrame.asof.html#pandas.DataFrame.asof
    "pandas.DataFrame.asof") incorrectly casting bool-dtype results to `float64` dtype
    ([GH 16063](https://github.com/pandas-dev/pandas/issues/16063))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `NDFrame.xs()`, [`DataFrame.iterrows()`](../reference/api/pandas.DataFrame.iterrows.html#pandas.DataFrame.iterrows
    "pandas.DataFrame.iterrows"), [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") not always propagating metadata ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sum()`](../reference/api/pandas.DataFrame.sum.html#pandas.DataFrame.sum
    "pandas.DataFrame.sum") min_count changes dtype if input contains NaNs ([GH 46947](https://github.com/pandas-dev/pandas/issues/46947))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalTree` that lead to an infinite recursion. ([GH 46658](https://github.com/pandas-dev/pandas/issues/46658))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") raising `AttributeError` when indexing on `NA`, rather than
    putting `NaT` in its place. ([GH 46673](https://github.com/pandas-dev/pandas/issues/46673))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.at()`](../reference/api/pandas.DataFrame.at.html#pandas.DataFrame.at
    "pandas.DataFrame.at") would allow the modification of multiple columns ([GH 48296](https://github.com/pandas-dev/pandas/issues/48296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") and [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") with `downcast` keyword not being respected in some
    cases where there are no NA values present ([GH 45423](https://github.com/pandas-dev/pandas/issues/45423))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") and [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") with [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") and incompatible value raising instead of casting to a
    common (usually object) dtype ([GH 45796](https://github.com/pandas-dev/pandas/issues/45796))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") not respecting `na_action` argument if mapper is a `dict`
    or [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    ([GH 47527](https://github.com/pandas-dev/pandas/issues/47527))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") with object-dtype column not returning a copy
    with `inplace=False` ([GH 45791](https://github.com/pandas-dev/pandas/issues/45791))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") allows to set both `how` and `thresh` incompatible
    arguments ([GH 46575](https://github.com/pandas-dev/pandas/issues/46575))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") ignored `axis` when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") is single block ([GH 47713](https://github.com/pandas-dev/pandas/issues/47713))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") returning empty result when slicing a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with a negative step size and non-null start/stop values
    ([GH 46156](https://github.com/pandas-dev/pandas/issues/46156))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raising when slicing a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with a negative step size other than -1 ([GH 46156](https://github.com/pandas-dev/pandas/issues/46156))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raising when slicing a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with a negative step size and slicing a non-int labeled index
    level ([GH 46156](https://github.com/pandas-dev/pandas/issues/46156))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.to_numpy()`](../reference/api/pandas.Series.to_numpy.html#pandas.Series.to_numpy
    "pandas.Series.to_numpy") where multiindexed Series could not be converted to
    numpy arrays when an `na_value` was supplied ([GH 45774](https://github.com/pandas-dev/pandas/issues/45774))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.equals` not commutative when only one side has extension
    array dtype ([GH 46026](https://github.com/pandas-dev/pandas/issues/46026))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.from_tuples()`](../reference/api/pandas.MultiIndex.from_tuples.html#pandas.MultiIndex.from_tuples
    "pandas.MultiIndex.from_tuples") cannot construct Index of empty tuples ([GH 45608](https://github.com/pandas-dev/pandas/issues/45608))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I/O
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") where no error is raised if the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") contains `-np.inf` ([GH 45350](https://github.com/pandas-dev/pandas/issues/45350))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") results in an infinite loop with certain `skiprows` callables
    ([GH 45585](https://github.com/pandas-dev/pandas/issues/45585))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.info()`](../reference/api/pandas.DataFrame.info.html#pandas.DataFrame.info
    "pandas.DataFrame.info") where a new line at the end of the output is omitted
    when called on an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 45494](https://github.com/pandas-dev/pandas/issues/45494))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not recognizing line break for `on_bad_lines="warn"` for `engine="c"`
    ([GH 41710](https://github.com/pandas-dev/pandas/issues/41710))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") not respecting `float_format` for `Float64` dtype ([GH
    45991](https://github.com/pandas-dev/pandas/issues/45991))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not respecting a specified converter to index columns in all
    cases ([GH 40589](https://github.com/pandas-dev/pandas/issues/40589))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") interpreting second row as [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") names even when `index_col=False` ([GH 46569](https://github.com/pandas-dev/pandas/issues/46569))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") when `engine="pyarrow"` which caused partial write to disk
    when column of unsupported datatype was passed ([GH 44914](https://github.com/pandas-dev/pandas/issues/44914))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") and [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") would raise when writing an empty DataFrame to a `.ods`
    file ([GH 45793](https://github.com/pandas-dev/pandas/issues/45793))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") ignoring non-existing header row for `engine="python"` ([GH
    47400](https://github.com/pandas-dev/pandas/issues/47400))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") raising uncontrolled `IndexError` when `header` references
    non-existing rows ([GH 43143](https://github.com/pandas-dev/pandas/issues/43143))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") where elements surrounding `<br>` were joined without a space
    between them ([GH 29528](https://github.com/pandas-dev/pandas/issues/29528))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when data is longer than header leading to issues with callables
    in `usecols` expecting strings ([GH 46997](https://github.com/pandas-dev/pandas/issues/46997))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in Parquet roundtrip for Interval dtype with `datetime64[ns]` subtype ([GH
    45881](https://github.com/pandas-dev/pandas/issues/45881))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") when reading a `.ods` file with newlines between xml elements
    ([GH 45598](https://github.com/pandas-dev/pandas/issues/45598))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") when `engine="fastparquet"` where the file was not closed
    on error ([GH 46555](https://github.com/pandas-dev/pandas/issues/46555))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") now excludes the `border` attribute from `<table>`
    elements when `border` keyword is set to `False`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") with certain types of compressed SAS7BDAT files ([GH 35545](https://github.com/pandas-dev/pandas/issues/35545))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") not forward filling [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") when no names were given ([GH 47487](https://github.com/pandas-dev/pandas/issues/47487))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") returned `None` rather than an empty DataFrame for SAS7BDAT
    files with zero rows ([GH 18198](https://github.com/pandas-dev/pandas/issues/18198))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") using wrong missing value with extension arrays
    in [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    ([GH 47986](https://github.com/pandas-dev/pandas/issues/47986))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `StataWriter` where value labels were always written with default encoding
    ([GH 46750](https://github.com/pandas-dev/pandas/issues/46750))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `StataWriterUTF8` where some valid characters were removed from variable
    names ([GH 47276](https://github.com/pandas-dev/pandas/issues/47276))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") when writing an empty dataframe with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 19543](https://github.com/pandas-dev/pandas/issues/19543))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") with RLE-compressed SAS7BDAT files that contain 0x40 control
    bytes ([GH 31243](https://github.com/pandas-dev/pandas/issues/31243))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") that scrambled column names ([GH 31243](https://github.com/pandas-dev/pandas/issues/31243))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") with RLE-compressed SAS7BDAT files that contain 0x00 control
    bytes ([GH 47099](https://github.com/pandas-dev/pandas/issues/47099))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") with `use_nullable_dtypes=True` where `float64` dtype was
    returned instead of nullable `Float64` dtype ([GH 45694](https://github.com/pandas-dev/pandas/issues/45694))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") where `PeriodDtype` would not make the serialization
    roundtrip when read back with [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") ([GH 44720](https://github.com/pandas-dev/pandas/issues/44720))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") when reading XML files with Chinese character tags and would
    raise `XMLSyntaxError` ([GH 47902](https://github.com/pandas-dev/pandas/issues/47902))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Period
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in subtraction of [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") from [`PeriodArray`](../reference/api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray") returning wrong results ([GH 45999](https://github.com/pandas-dev/pandas/issues/45999))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period.strftime()`](../reference/api/pandas.Period.strftime.html#pandas.Period.strftime
    "pandas.Period.strftime") and [`PeriodIndex.strftime()`](../reference/api/pandas.PeriodIndex.strftime.html#pandas.PeriodIndex.strftime
    "pandas.PeriodIndex.strftime"), directives `%l` and `%u` were giving wrong results
    ([GH 46252](https://github.com/pandas-dev/pandas/issues/46252))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in inferring an incorrect `freq` when passing a string to [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") microseconds that are a multiple of 1000 ([GH 46811](https://github.com/pandas-dev/pandas/issues/46811))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") from a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") or `np.datetime64` object with non-zero nanoseconds and `freq="ns"`
    incorrectly truncating the nanoseconds ([GH 46811](https://github.com/pandas-dev/pandas/issues/46811))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in adding `np.timedelta64("NaT", "ns")` to a [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") with a timedelta-like freq incorrectly raising `IncompatibleFrequency`
    instead of returning `NaT` ([GH 47196](https://github.com/pandas-dev/pandas/issues/47196))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in adding an array of integers to an array with [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") giving incorrect results when `dtype.freq.n > 1` ([GH 47209](https://github.com/pandas-dev/pandas/issues/47209))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in subtracting a [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") from an array with [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") returning incorrect results instead of raising `OverflowError`
    when the operation overflows ([GH 47538](https://github.com/pandas-dev/pandas/issues/47538))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.barh()`](../reference/api/pandas.DataFrame.plot.barh.html#pandas.DataFrame.plot.barh
    "pandas.DataFrame.plot.barh") that prevented labeling the x-axis and `xlabel`
    updating the y-axis label ([GH 45144](https://github.com/pandas-dev/pandas/issues/45144))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.box()`](../reference/api/pandas.DataFrame.plot.box.html#pandas.DataFrame.plot.box
    "pandas.DataFrame.plot.box") that prevented labeling the x-axis ([GH 45463](https://github.com/pandas-dev/pandas/issues/45463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.boxplot()`](../reference/api/pandas.DataFrame.boxplot.html#pandas.DataFrame.boxplot
    "pandas.DataFrame.boxplot") that prevented passing in `xlabel` and `ylabel` ([GH
    45463](https://github.com/pandas-dev/pandas/issues/45463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.boxplot()`](../reference/api/pandas.DataFrame.boxplot.html#pandas.DataFrame.boxplot
    "pandas.DataFrame.boxplot") that prevented specifying `vert=False` ([GH 36918](https://github.com/pandas-dev/pandas/issues/36918))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") that prevented specifying `norm` ([GH 45809](https://github.com/pandas-dev/pandas/issues/45809))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fix showing “None” as ylabel in [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") when not setting ylabel ([GH 46129](https://github.com/pandas-dev/pandas/issues/46129))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") that led to xticks and vertical grids being improperly
    placed when plotting a quarterly series ([GH 47602](https://github.com/pandas-dev/pandas/issues/47602))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") that prevented setting y-axis label, limits and ticks
    for a secondary y-axis ([GH 47753](https://github.com/pandas-dev/pandas/issues/47753))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") ignoring `closed="right"` on [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") ([GH 45414](https://github.com/pandas-dev/pandas/issues/45414))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") fails when `func="size"` and
    the input DataFrame has multiple columns ([GH 27469](https://github.com/pandas-dev/pandas/issues/27469))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.size()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.size.html#pandas.core.groupby.DataFrameGroupBy.size
    "pandas.core.groupby.DataFrameGroupBy.size") and [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") with `func="size"` produced
    incorrect results when `axis=1` ([GH 45715](https://github.com/pandas-dev/pandas/issues/45715))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`ExponentialMovingWindow.mean()`](../reference/api/pandas.core.window.ewm.ExponentialMovingWindow.mean.html#pandas.core.window.ewm.ExponentialMovingWindow.mean
    "pandas.core.window.ewm.ExponentialMovingWindow.mean") with `axis=1` and `engine='numba'`
    when the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has more columns than rows ([GH 46086](https://github.com/pandas-dev/pandas/issues/46086))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when using `engine="numba"` would return the same jitted function when modifying
    `engine_kwargs` ([GH 46086](https://github.com/pandas-dev/pandas/issues/46086))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") fails when `axis=1` and `func`
    is `"first"` or `"last"` ([GH 45986](https://github.com/pandas-dev/pandas/issues/45986))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cumsum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum") with `skipna=False` giving incorrect
    results ([GH 46216](https://github.com/pandas-dev/pandas/issues/46216))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.sum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum"), [`SeriesGroupBy.sum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.sum.html#pandas.core.groupby.SeriesGroupBy.sum
    "pandas.core.groupby.SeriesGroupBy.sum"), [`DataFrameGroupBy.prod()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.prod.html#pandas.core.groupby.DataFrameGroupBy.prod
    "pandas.core.groupby.DataFrameGroupBy.prod"), `SeriesGroupBy.prod, :meth:()`.DataFrameGroupBy.cumsum`,
    and [`SeriesGroupBy.cumsum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cumsum.html#pandas.core.groupby.SeriesGroupBy.cumsum
    "pandas.core.groupby.SeriesGroupBy.cumsum") with integer dtypes losing precision
    ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cumsum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum") and [`SeriesGroupBy.cumsum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cumsum.html#pandas.core.groupby.SeriesGroupBy.cumsum
    "pandas.core.groupby.SeriesGroupBy.cumsum") with `timedelta64[ns]` dtype failing
    to recognize `NaT` as a null value ([GH 46216](https://github.com/pandas-dev/pandas/issues/46216))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cumsum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum") and [`SeriesGroupBy.cumsum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cumsum.html#pandas.core.groupby.SeriesGroupBy.cumsum
    "pandas.core.groupby.SeriesGroupBy.cumsum") with integer dtypes causing overflows
    when sum was bigger than maximum of dtype ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cummin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin"), [`SeriesGroupBy.cummin()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummin.html#pandas.core.groupby.SeriesGroupBy.cummin
    "pandas.core.groupby.SeriesGroupBy.cummin"), [`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax") and [`SeriesGroupBy.cummax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummax.html#pandas.core.groupby.SeriesGroupBy.cummax
    "pandas.core.groupby.SeriesGroupBy.cummax") with nullable dtypes incorrectly altering
    the original data in place ([GH 46220](https://github.com/pandas-dev/pandas/issues/46220))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") raising error when `None` is in first level of [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 47348](https://github.com/pandas-dev/pandas/issues/47348))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax") and [`SeriesGroupBy.cummax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummax.html#pandas.core.groupby.SeriesGroupBy.cummax
    "pandas.core.groupby.SeriesGroupBy.cummax") with `int64` dtype with leading value
    being the smallest possible int64 ([GH 46382](https://github.com/pandas-dev/pandas/issues/46382))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cumprod()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumprod.html#pandas.core.groupby.DataFrameGroupBy.cumprod
    "pandas.core.groupby.DataFrameGroupBy.cumprod") and [`SeriesGroupBy.cumprod()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cumprod.html#pandas.core.groupby.SeriesGroupBy.cumprod
    "pandas.core.groupby.SeriesGroupBy.cumprod") `NaN` influences calculation in different
    columns with `skipna=False` ([GH 48064](https://github.com/pandas-dev/pandas/issues/48064))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.max()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.max.html#pandas.core.groupby.DataFrameGroupBy.max
    "pandas.core.groupby.DataFrameGroupBy.max") and [`SeriesGroupBy.max()`](../reference/api/pandas.core.groupby.SeriesGroupBy.max.html#pandas.core.groupby.SeriesGroupBy.max
    "pandas.core.groupby.SeriesGroupBy.max") with empty groups and `uint64` dtype
    incorrectly raising `RuntimeError` ([GH 46408](https://github.com/pandas-dev/pandas/issues/46408))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") would fail when `func` was a string
    and args or kwargs were supplied ([GH 46479](https://github.com/pandas-dev/pandas/issues/46479))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SeriesGroupBy.apply()` would incorrectly name its result when there
    was a unique group ([GH 46369](https://github.com/pandas-dev/pandas/issues/46369))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.sum()`](../reference/api/pandas.core.window.rolling.Rolling.sum.html#pandas.core.window.rolling.Rolling.sum
    "pandas.core.window.rolling.Rolling.sum") and [`Rolling.mean()`](../reference/api/pandas.core.window.rolling.Rolling.mean.html#pandas.core.window.rolling.Rolling.mean
    "pandas.core.window.rolling.Rolling.mean") would give incorrect result with window
    of same values ([GH 42064](https://github.com/pandas-dev/pandas/issues/42064),
    [GH 46431](https://github.com/pandas-dev/pandas/issues/46431))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.var()`](../reference/api/pandas.core.window.rolling.Rolling.var.html#pandas.core.window.rolling.Rolling.var
    "pandas.core.window.rolling.Rolling.var") and [`Rolling.std()`](../reference/api/pandas.core.window.rolling.Rolling.std.html#pandas.core.window.rolling.Rolling.std
    "pandas.core.window.rolling.Rolling.std") would give non-zero result with window
    of same values ([GH 42064](https://github.com/pandas-dev/pandas/issues/42064))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.skew()`](../reference/api/pandas.core.window.rolling.Rolling.skew.html#pandas.core.window.rolling.Rolling.skew
    "pandas.core.window.rolling.Rolling.skew") and [`Rolling.kurt()`](../reference/api/pandas.core.window.rolling.Rolling.kurt.html#pandas.core.window.rolling.Rolling.kurt
    "pandas.core.window.rolling.Rolling.kurt") would give NaN with window of same
    values ([GH 30993](https://github.com/pandas-dev/pandas/issues/30993))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.var()`](../reference/api/pandas.core.window.rolling.Rolling.var.html#pandas.core.window.rolling.Rolling.var
    "pandas.core.window.rolling.Rolling.var") would segfault calculating weighted
    variance when window size was larger than data size ([GH 46760](https://github.com/pandas-dev/pandas/issues/46760))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Grouper.__repr__()` where `dropna` was not included. Now it is ([GH
    46754](https://github.com/pandas-dev/pandas/issues/46754))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") gives ValueError when center=True, axis=1 and win_type
    is specified ([GH 46135](https://github.com/pandas-dev/pandas/issues/46135))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.describe()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.describe.html#pandas.core.groupby.DataFrameGroupBy.describe
    "pandas.core.groupby.DataFrameGroupBy.describe") and [`SeriesGroupBy.describe()`](../reference/api/pandas.core.groupby.SeriesGroupBy.describe.html#pandas.core.groupby.SeriesGroupBy.describe
    "pandas.core.groupby.SeriesGroupBy.describe") produces inconsistent results for
    empty datasets ([GH 41575](https://github.com/pandas-dev/pandas/issues/41575))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") reduction methods when used with `on` would attempt
    to aggregate the provided column ([GH 47079](https://github.com/pandas-dev/pandas/issues/47079))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") would not respect `dropna=False` when the input DataFrame/Series
    had a NaN values in a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 46783](https://github.com/pandas-dev/pandas/issues/46783))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.resample()` raises `KeyError` when getting the result
    from a key list which misses the resample key ([GH 47362](https://github.com/pandas-dev/pandas/issues/47362))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") would lose index columns when the DataFrame is empty
    for transforms, like fillna ([GH 47787](https://github.com/pandas-dev/pandas/issues/47787))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") with `dropna=False` and `sort=False` would put any null
    groups at the end instead the order that they are encountered ([GH 46584](https://github.com/pandas-dev/pandas/issues/46584))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    between a [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    with integer dtype and another with [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") with integer categories and containing `NaN` values
    casting to object dtype instead of `float64` ([GH 45359](https://github.com/pandas-dev/pandas/issues/45359))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") that selected object and categorical dtypes but not string
    ([GH 44965](https://github.com/pandas-dev/pandas/issues/44965))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.align()`](../reference/api/pandas.DataFrame.align.html#pandas.DataFrame.align
    "pandas.DataFrame.align") when aligning a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") to a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with another [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 46001](https://github.com/pandas-dev/pandas/issues/46001))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in concatenation with `IntegerDtype`, or `FloatingDtype` arrays where the
    resulting dtype did not mirror the behavior of the non-nullable dtypes ([GH 46379](https://github.com/pandas-dev/pandas/issues/46379))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    losing dtype of columns when `join="outer"` and `sort=True` ([GH 47329](https://github.com/pandas-dev/pandas/issues/47329))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    not sorting the column names when `None` is included ([GH 47331](https://github.com/pandas-dev/pandas/issues/47331))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    with identical key leads to error when indexing [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 46519](https://github.com/pandas-dev/pandas/issues/46519))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") raising `TypeError` when `dropna=True` and aggregation column
    has extension array dtype ([GH 47477](https://github.com/pandas-dev/pandas/issues/47477))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    raising error for `how="cross"` when using `FIPS` mode in ssl library ([GH 48024](https://github.com/pandas-dev/pandas/issues/48024))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") with a list when using suffixes to join DataFrames with
    duplicate column names ([GH 46396](https://github.com/pandas-dev/pandas/issues/46396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") with `sort=False` results in sorted index ([GH
    17041](https://github.com/pandas-dev/pandas/issues/17041))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    when `axis=1` and `sort=False` where the resulting Index was a `Int64Index` instead
    of a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") ([GH 46675](https://github.com/pandas-dev/pandas/issues/46675))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`wide_to_long()`](../reference/api/pandas.wide_to_long.html#pandas.wide_to_long
    "pandas.wide_to_long") raises when `stubnames` is missing in columns and `i` contains
    string dtype column ([GH 46044](https://github.com/pandas-dev/pandas/issues/46044))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") with categorical index results in unexpected reordering
    ([GH 47812](https://github.com/pandas-dev/pandas/issues/47812))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") and [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") with `SparseDtype` failing to retain the array’s `fill_value`
    ([GH 45691](https://github.com/pandas-dev/pandas/issues/45691))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseArray.unique()` fails to keep original elements order ([GH 47809](https://github.com/pandas-dev/pandas/issues/47809))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `IntegerArray.searchsorted()` and `FloatingArray.searchsorted()` returning
    inconsistent results when acting on `np.nan` ([GH 45255](https://github.com/pandas-dev/pandas/issues/45255))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styler
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug when attempting to apply styling functions to an empty DataFrame subset
    ([GH 45313](https://github.com/pandas-dev/pandas/issues/45313))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CSSToExcelConverter` leading to `TypeError` when border color provided
    without border style for `xlsxwriter` engine ([GH 42276](https://github.com/pandas-dev/pandas/issues/42276))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Styler.set_sticky()` leading to white text on white background in dark
    mode ([GH 46984](https://github.com/pandas-dev/pandas/issues/46984))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Styler.to_latex()` causing `UnboundLocalError` when `clines="all;data"`
    and the `DataFrame` has no rows. ([GH 47203](https://github.com/pandas-dev/pandas/issues/47203))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in `Styler.to_excel()` when using `vertical-align: middle;` with `xlsxwriter`
    engine ([GH 30107](https://github.com/pandas-dev/pandas/issues/30107))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when applying styles to a DataFrame with boolean column labels ([GH 47838](https://github.com/pandas-dev/pandas/issues/47838))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metadata
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fixed metadata propagation in [`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed metadata propagation in [`DataFrame.explode()`](../reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode
    "pandas.DataFrame.explode") ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`assert_index_equal()`](../reference/api/pandas.testing.assert_index_equal.html#pandas.testing.assert_index_equal
    "pandas.testing.assert_index_equal") with `names=True` and `check_order=False`
    not checking names ([GH 47328](https://github.com/pandas-dev/pandas/issues/47328))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Contributors'
  prefs: []
  type: TYPE_NORMAL
- en: A total of 271 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: Aadharsh Acharya +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aadharsh-Acharya +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aadhi Manivannan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam Bowden
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aditya Agarwal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ahmed Ibrahim +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alastair Porter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Povel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex-Blade
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexandra Sciocchetti +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AlonMenczer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andras Deak +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Hawyrluk
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andy Grigg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aneta Kahleová +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anthony Givans +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anton Shevtsov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: B. J. Potter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: BarkotBeyene +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben Beasley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben Wozniak +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bernhard Wagner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Boris Rumyantsev
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brian Gollop +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CCXXXI +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chandrasekaran Anirudh Bhardwaj +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Charles Blackmon-Luca +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Moradi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ChrisAlbertsen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compro Prasad +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DaPy15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Damian Barabonkov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel I +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Isaac +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Schmidt
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Danil Iashchenko +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dare Adewumi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dennis Chukwunta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dennis J. Gray +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Derek Sharp +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dhruv Samdani +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dimitra Karadima +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dmitry Savostyanov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dmytro Litvinov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do Young Kim +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dries Schaumont +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Edward Huang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eirik +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ekaterina +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eli Dourado +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ezra Brauner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fabian Gabel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: FactorizeD +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fangchen Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Francesco Romandini +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Greg Gandenberger +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guo Ci +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hiroaki Ogasawara
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hood Chatham +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ian Alexander Joiner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Irv Lustig
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ivan Ng +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire (MBP)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire (iMac)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JMBurley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jack Goldsmith +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Freeman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Lamb
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Moro +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Janosh Riebesell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jarrod Millman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jason Jia +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeremy Tuloup +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Johannes Mueller
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John Bencina +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John Mantios +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John Zangwill
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jon Bramley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonas Haag
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jordan Hicks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jose Ortiz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JosephParampathu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: José Duarte
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julian Steger +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kai Priester +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kapil E. Iyer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Karthik Velayutham +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kashif Khan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kazuki Igeta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Jan Anker +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Khor Chean Wei
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kian Eliasi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kian S +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kim, KwonHyun +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kinza-Raza +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Konjeti Maruthi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leonardus Chen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Linxiao Francis Cong +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Loïc Estève
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LucasG0 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lucy Jiménez +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luis Pinto
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luke Manley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Garcia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Edward Gorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Gorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MarcoGorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Margarete Dippel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mariam-ke +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Fleischmann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marvin John Walter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marvin Walter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mateusz
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matilda M +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthias Bussonnier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MeeseeksMachine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mehgarg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Melissa Weber Mendonça +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Milton +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Wang
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mike McCarty +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Miloni Atal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mitlasóczki Bence +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Moritz Schreiber +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Morten Canth Hels +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nick Crews +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NickFillot +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nicolas Hug +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nima Sarang
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Noa Tamir +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas Development Team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parfait Gasana
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parthi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Partho +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patrick Hoefler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter Hawkins +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Philipp A
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Philipp Schaefer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pierrot +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pratik Patel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prithvijit
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Purna Chandra Mansingh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Radoslaw Lemiec +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: RaphSku +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reinert Huseby Karlsen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Shadrach
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Shadrach +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robbie Palmer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert de Vries
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roger +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roger Murray +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ruizhe Deng +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SELEE +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sachin Yadav +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Saiwing Yeung +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sam Rao +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sandro Casagrande +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastiaan Vermeulen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shaghayegh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shantanu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shashank Shet +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shawn Zhong +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shuangchi He +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Hawkins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Knott +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Solomon Song +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Somtochi Umeh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefan Krawczyk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefanie Molin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steffen Rehberg
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steven Bamford +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steven Rotondo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steven Schaerer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sylvain MARIE +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sylvain Marié
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tarun Raghunandan Kaushik +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Taylor Packard +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terji Petersen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thierry Moisan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Grainger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Hunter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim McFarland +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Swast
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Yang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tobias Pitters
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Aarsen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Augspurger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Torsten Wörtwein
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: TraverseTowner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tyler Reddy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Valentin Iovene
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Varun Sharma +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vasily Litvinov
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Venaturum
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vinicius Akira Imaizumi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vladimir Fokow +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wenjun Si
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Will Lachance +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Andrea
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wolfgang F. Riedl +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Xingrong Chen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yago González
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yikun Jiang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yuanhao Geng
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yuval +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zero
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhengfei Wang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: abmyii
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alexondor +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alm
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: andjhall +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: anilbey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: arnaudlegout +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: asv-bot +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ateki +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: auderson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bherwerth +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bicarlsen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: carbonleakage +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: charles +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: charlogazzo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: code-review-doctor +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dataxerik +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: deponovo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dimitra-karadima +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dospix +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ehallam +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ehsan shirvanian +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ember91 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: eshirvana
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: fractionalhare +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gaotian98 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gesoos
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: github-actions[bot]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gunghub +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: hasan-yaman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: iansheng +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: iasoon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: joshuabello2550 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jyuv +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kouya takahashi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mariana-LJ +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: matt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mattB1989 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nealxm +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: partev
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: poloso +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: realead
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: roib20 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rtpsw
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ryangilmour +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: shourya5 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: srotondo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: stanleycai95 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: staticdev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tehunter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: theidexisted +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tobias.pitters +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: uncjackg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vernetya
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: wany-oh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: wfr +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: z3c0 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
