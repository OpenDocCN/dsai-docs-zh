- en: pandas.Index.reindex
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas.Index.reindex
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.Index.reindex.html](https://pandas.pydata.org/docs/reference/api/pandas.Index.reindex.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.Index.reindex.html](https://pandas.pydata.org/docs/reference/api/pandas.Index.reindex.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Create index with target’s values.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Create index with target’s values.
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 'Parameters:'
- en: '**target**an iterable'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**target**an iterable'
- en: '**method**{None, ‘pad’/’ffill’, ‘backfill’/’bfill’, ‘nearest’}, optional'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**method**{None, ‘pad’/’ffill’, ‘backfill’/’bfill’, ‘nearest’}, optional'
- en: 'default: exact matches only.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'default: exact matches only.'
- en: 'pad / ffill: find the PREVIOUS index value if no exact match.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'pad / ffill: find the PREVIOUS index value if no exact match.'
- en: 'backfill / bfill: use NEXT index value if no exact match'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'backfill / bfill: use NEXT index value if no exact match'
- en: 'nearest: use the NEAREST index value if no exact match. Tied distances are
    broken by preferring the larger index value.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'nearest: use the NEAREST index value if no exact match. Tied distances are
    broken by preferring the larger index value.'
- en: '**level**int, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**level**int, optional'
- en: Level of multiindex.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Level of multiindex.
- en: '**limit**int, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**limit**int, optional'
- en: Maximum number of consecutive labels in `target` to match for inexact matches.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Maximum number of consecutive labels in `target` to match for inexact matches.
- en: '**tolerance**int or float, optional'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**tolerance**int or float, optional'
- en: Maximum distance between original and new labels for inexact matches. The values
    of the index at the matching locations must satisfy the equation `abs(index[indexer]
    - target) <= tolerance`.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Maximum distance between original and new labels for inexact matches. The values
    of the index at the matching locations must satisfy the equation `abs(index[indexer]
    - target) <= tolerance`.
- en: Tolerance may be a scalar value, which applies the same tolerance to all values,
    or list-like, which applies variable tolerance per element. List-like includes
    list, tuple, array, Series, and must be the same size as the index and its dtype
    must exactly match the index’s type.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Tolerance may be a scalar value, which applies the same tolerance to all values,
    or list-like, which applies variable tolerance per element. List-like includes
    list, tuple, array, Series, and must be the same size as the index and its dtype
    must exactly match the index’s type.
- en: 'Returns:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 'Returns:'
- en: '**new_index**pd.Index'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**new_index**pd.Index'
- en: Resulting index.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Resulting index.
- en: '**indexer**np.ndarray[np.intp] or None'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**indexer**np.ndarray[np.intp] or None'
- en: Indices of output values in original index.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Indices of output values in original index.
- en: 'Raises:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 'Raises:'
- en: TypeError
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: TypeError
- en: If `method` passed along with `level`.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: If `method` passed along with `level`.
- en: ValueError
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: ValueError
- en: If non-unique multi-index
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: If non-unique multi-index
- en: ValueError
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: ValueError
- en: If non-unique index and `method` or `limit` passed.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: If non-unique index and `method` or `limit` passed.
- en: See also
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: See also
- en: '[`Series.reindex`](pandas.Series.reindex.html#pandas.Series.reindex "pandas.Series.reindex")'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Series.reindex`](pandas.Series.reindex.html#pandas.Series.reindex "pandas.Series.reindex")'
- en: Conform Series to new index with optional filling logic.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Conform Series to new index with optional filling logic.
- en: '[`DataFrame.reindex`](pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex")'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.reindex`](pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex")'
- en: Conform DataFrame to new index with optional filling logic.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Conform DataFrame to new index with optional filling logic.
- en: Examples
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
