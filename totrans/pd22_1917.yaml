- en: What’s new in 1.3.0 (July 2, 2021)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/whatsnew/v1.3.0.html](https://pandas.pydata.org/docs/whatsnew/v1.3.0.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: These are the changes in pandas 1.3.0\. See [Release notes](index.html#release)
    for a full changelog including other versions of pandas.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: When reading new Excel 2007+ (`.xlsx`) files, the default argument `engine=None`
    to [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") will now result in using the [openpyxl](https://openpyxl.readthedocs.io/en/stable/)
    engine in all cases when the option `io.excel.xlsx.reader` is set to `"auto"`.
    Previously, some cases would use the [xlrd](https://xlrd.readthedocs.io/en/latest/)
    engine instead. See [What’s new 1.2.0](v1.2.0.html#whatsnew-120) for background
    on this change.
  prefs: []
  type: TYPE_NORMAL
- en: '## Enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '### Custom HTTP(s) headers when reading csv or json files'
  prefs: []
  type: TYPE_NORMAL
- en: 'When reading from a remote URL that is not handled by fsspec (e.g. HTTP and
    HTTPS) the dictionary passed to `storage_options` will be used to create the headers
    included in the request. This can be used to control the User-Agent header or
    send other custom headers ([GH 36688](https://github.com/pandas-dev/pandas/issues/36688)).
    For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]  ### Read and write XML documents'
  prefs: []
  type: TYPE_NORMAL
- en: We added I/O support to read and render shallow versions of [XML](https://www.w3.org/standards/xml/core)
    documents with [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") and [`DataFrame.to_xml()`](../reference/api/pandas.DataFrame.to_xml.html#pandas.DataFrame.to_xml
    "pandas.DataFrame.to_xml"). Using [lxml](https://lxml.de) as parser, both XPath
    1.0 and XSLT 1.0 are available. ([GH 27554](https://github.com/pandas-dev/pandas/issues/27554))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'For more, see [Writing XML](../user_guide/io.html#io-xml) in the user guide
    on IO tools.  ### Styler enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: We provided some focused development on [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler"). See also the [Styler documentation](../user_guide/style.html)
    which has been revised and improved ([GH 39720](https://github.com/pandas-dev/pandas/issues/39720),
    [GH 39317](https://github.com/pandas-dev/pandas/issues/39317), [GH 40493](https://github.com/pandas-dev/pandas/issues/40493)).
  prefs: []
  type: TYPE_NORMAL
- en: The method [`Styler.set_table_styles()`](../reference/api/pandas.io.formats.style.Styler.set_table_styles.html#pandas.io.formats.style.Styler.set_table_styles
    "pandas.io.formats.style.Styler.set_table_styles") can now accept more natural
    CSS language for arguments, such as `'color:red;'` instead of `[('color', 'red')]`
    ([GH 39563](https://github.com/pandas-dev/pandas/issues/39563))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: The methods [`Styler.highlight_null()`](../reference/api/pandas.io.formats.style.Styler.highlight_null.html#pandas.io.formats.style.Styler.highlight_null
    "pandas.io.formats.style.Styler.highlight_null"), [`Styler.highlight_min()`](../reference/api/pandas.io.formats.style.Styler.highlight_min.html#pandas.io.formats.style.Styler.highlight_min
    "pandas.io.formats.style.Styler.highlight_min"), and [`Styler.highlight_max()`](../reference/api/pandas.io.formats.style.Styler.highlight_max.html#pandas.io.formats.style.Styler.highlight_max
    "pandas.io.formats.style.Styler.highlight_max") now allow custom CSS highlighting
    instead of the default background coloring ([GH 40242](https://github.com/pandas-dev/pandas/issues/40242))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Styler.apply()`](../reference/api/pandas.io.formats.style.Styler.apply.html#pandas.io.formats.style.Styler.apply
    "pandas.io.formats.style.Styler.apply") now accepts functions that return an `ndarray`
    when `axis=None`, making it now consistent with the `axis=0` and `axis=1` behavior
    ([GH 39359](https://github.com/pandas-dev/pandas/issues/39359))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: When incorrectly formatted CSS is given via [`Styler.apply()`](../reference/api/pandas.io.formats.style.Styler.apply.html#pandas.io.formats.style.Styler.apply
    "pandas.io.formats.style.Styler.apply") or `Styler.applymap()`, an error is now
    raised upon rendering ([GH 39660](https://github.com/pandas-dev/pandas/issues/39660))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Styler.format()`](../reference/api/pandas.io.formats.style.Styler.format.html#pandas.io.formats.style.Styler.format
    "pandas.io.formats.style.Styler.format") now accepts the keyword argument `escape`
    for optional HTML and LaTeX escaping ([GH 40388](https://github.com/pandas-dev/pandas/issues/40388),
    [GH 41619](https://github.com/pandas-dev/pandas/issues/41619))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Styler.background_gradient()`](../reference/api/pandas.io.formats.style.Styler.background_gradient.html#pandas.io.formats.style.Styler.background_gradient
    "pandas.io.formats.style.Styler.background_gradient") has gained the argument
    `gmap` to supply a specific gradient map for shading ([GH 22727](https://github.com/pandas-dev/pandas/issues/22727))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Styler.clear()`](../reference/api/pandas.io.formats.style.Styler.clear.html#pandas.io.formats.style.Styler.clear
    "pandas.io.formats.style.Styler.clear") now clears `Styler.hidden_index` and `Styler.hidden_columns`
    as well ([GH 40484](https://github.com/pandas-dev/pandas/issues/40484))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the method [`Styler.highlight_between()`](../reference/api/pandas.io.formats.style.Styler.highlight_between.html#pandas.io.formats.style.Styler.highlight_between
    "pandas.io.formats.style.Styler.highlight_between") ([GH 39821](https://github.com/pandas-dev/pandas/issues/39821))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the method [`Styler.highlight_quantile()`](../reference/api/pandas.io.formats.style.Styler.highlight_quantile.html#pandas.io.formats.style.Styler.highlight_quantile
    "pandas.io.formats.style.Styler.highlight_quantile") ([GH 40926](https://github.com/pandas-dev/pandas/issues/40926))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the method [`Styler.text_gradient()`](../reference/api/pandas.io.formats.style.Styler.text_gradient.html#pandas.io.formats.style.Styler.text_gradient
    "pandas.io.formats.style.Styler.text_gradient") ([GH 41098](https://github.com/pandas-dev/pandas/issues/41098))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the method [`Styler.set_tooltips()`](../reference/api/pandas.io.formats.style.Styler.set_tooltips.html#pandas.io.formats.style.Styler.set_tooltips
    "pandas.io.formats.style.Styler.set_tooltips") to allow hover tooltips; this can
    be used enhance interactive displays ([GH 21266](https://github.com/pandas-dev/pandas/issues/21266),
    [GH 40284](https://github.com/pandas-dev/pandas/issues/40284))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the parameter `precision` to the method [`Styler.format()`](../reference/api/pandas.io.formats.style.Styler.format.html#pandas.io.formats.style.Styler.format
    "pandas.io.formats.style.Styler.format") to control the display of floating point
    numbers ([GH 40134](https://github.com/pandas-dev/pandas/issues/40134))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") rendered HTML output now follows the [w3 HTML
    Style Guide](https://www.w3schools.com/html/html5_syntax.asp) ([GH 39626](https://github.com/pandas-dev/pandas/issues/39626))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Many features of the [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") class are now either partially or fully usable
    on a DataFrame with a non-unique indexes or columns ([GH 41143](https://github.com/pandas-dev/pandas/issues/41143))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: One has greater control of the display through separate sparsification of the
    index or columns using the [new styler options](../user_guide/options.html#options-available),
    which are also usable via [`option_context()`](../reference/api/pandas.option_context.html#pandas.option_context
    "pandas.option_context") ([GH 41142](https://github.com/pandas-dev/pandas/issues/41142))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the option `styler.render.max_elements` to avoid browser overload when
    styling large DataFrames ([GH 40712](https://github.com/pandas-dev/pandas/issues/40712))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the method [`Styler.to_latex()`](../reference/api/pandas.io.formats.style.Styler.to_latex.html#pandas.io.formats.style.Styler.to_latex
    "pandas.io.formats.style.Styler.to_latex") ([GH 21673](https://github.com/pandas-dev/pandas/issues/21673),
    [GH 42320](https://github.com/pandas-dev/pandas/issues/42320)), which also allows
    some limited CSS conversion ([GH 40731](https://github.com/pandas-dev/pandas/issues/40731))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the method [`Styler.to_html()`](../reference/api/pandas.io.formats.style.Styler.to_html.html#pandas.io.formats.style.Styler.to_html
    "pandas.io.formats.style.Styler.to_html") ([GH 13379](https://github.com/pandas-dev/pandas/issues/13379))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Added the method [`Styler.set_sticky()`](../reference/api/pandas.io.formats.style.Styler.set_sticky.html#pandas.io.formats.style.Styler.set_sticky
    "pandas.io.formats.style.Styler.set_sticky") to make index and column headers
    permanently visible in scrolling HTML frames ([GH 29072](https://github.com/pandas-dev/pandas/issues/29072))  ###
    DataFrame constructor honors `copy=False` with dict'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: When passing a dictionary to [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `copy=False`, a copy will no longer be made ([GH 32960](https://github.com/pandas-dev/pandas/issues/32960)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '`df["A"]` remains a view on `arr`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The default behavior when not passing `copy` will remain unchanged, i.e. a
    copy will be made.  ### PyArrow backed string data type'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve enhanced the [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype"), an extension type dedicated to string data. ([GH 39908](https://github.com/pandas-dev/pandas/issues/39908))
  prefs: []
  type: TYPE_NORMAL
- en: It is now possible to specify a `storage` keyword option to [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype"). Use pandas options or specify the dtype using `dtype='string[pyarrow]'`
    to allow the StringArray to be backed by a PyArrow array instead of a NumPy array
    of Python objects.
  prefs: []
  type: TYPE_NORMAL
- en: The PyArrow backed StringArray requires pyarrow 1.0.0 or greater to be installed.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: '`string[pyarrow]` is currently considered experimental. The implementation
    and parts of the API may change without warning.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: You can use the alias `"string[pyarrow]"` as well.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: You can also create a PyArrow backed string array using pandas options.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The usual string accessor methods work. Where appropriate, the return type of
    the Series or columns of a DataFrame will also have string dtype.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: String accessor methods returning integers will return a value with [`Int64Dtype`](../reference/api/pandas.Int64Dtype.html#pandas.Int64Dtype
    "pandas.Int64Dtype")
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]  ### Centered datetime-like rolling windows'
  prefs: []
  type: TYPE_NORMAL
- en: 'When performing rolling calculations on DataFrame and Series objects with a
    datetime-like index, a centered datetime-like window can now be used ([GH 38780](https://github.com/pandas-dev/pandas/issues/38780)).
    For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]  ### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling"), [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling"), [`DataFrame.expanding()`](../reference/api/pandas.DataFrame.expanding.html#pandas.DataFrame.expanding
    "pandas.DataFrame.expanding"), and [`Series.expanding()`](../reference/api/pandas.Series.expanding.html#pandas.Series.expanding
    "pandas.Series.expanding") now support a `method` argument with a `''table''`
    option that performs the windowing operation over an entire [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"). See [Window Overview](../user_guide/window.html#window-overview)
    for performance and functional benefits ([GH 15095](https://github.com/pandas-dev/pandas/issues/15095),
    [GH 38995](https://github.com/pandas-dev/pandas/issues/38995))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExponentialMovingWindow` now support a `online` method that can perform `mean`
    calculations in an online fashion. See [Window Overview](../user_guide/window.html#window-overview)
    ([GH 41673](https://github.com/pandas-dev/pandas/issues/41673))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`MultiIndex.dtypes()`](../reference/api/pandas.MultiIndex.dtypes.html#pandas.MultiIndex.dtypes
    "pandas.MultiIndex.dtypes") ([GH 37062](https://github.com/pandas-dev/pandas/issues/37062))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `end` and `end_day` options for the `origin` argument in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") ([GH 37804](https://github.com/pandas-dev/pandas/issues/37804))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when `usecols` and `names` do not match for [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and `engine="c"` ([GH 29042](https://github.com/pandas-dev/pandas/issues/29042))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved consistency of error messages when passing an invalid `win_type` argument
    in [Window methods](../reference/window.html#api-window) ([GH 15969](https://github.com/pandas-dev/pandas/issues/15969))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query") now accepts a `dtype` argument to cast the columnar data
    from the SQL database based on user input ([GH 10285](https://github.com/pandas-dev/pandas/issues/10285))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now raising `ParserWarning` if length of header or given names does not match
    length of data when `usecols` is not specified ([GH 21768](https://github.com/pandas-dev/pandas/issues/21768))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved integer type mapping from pandas to SQLAlchemy when using [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") ([GH 35076](https://github.com/pandas-dev/pandas/issues/35076))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") now supports downcasting of nullable `ExtensionDtype` objects
    ([GH 33013](https://github.com/pandas-dev/pandas/issues/33013))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for dict-like names in `MultiIndex.set_names` and `MultiIndex.rename`
    ([GH 20421](https://github.com/pandas-dev/pandas/issues/20421))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") can now auto-detect .xlsb files and older .xls files ([GH
    35416](https://github.com/pandas-dev/pandas/issues/35416), [GH 41225](https://github.com/pandas-dev/pandas/issues/41225))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") now accepts an `if_sheet_exists` parameter to control the
    behavior of append mode when writing to existing sheets ([GH 40230](https://github.com/pandas-dev/pandas/issues/40230))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Rolling.sum()`](../reference/api/pandas.core.window.rolling.Rolling.sum.html#pandas.core.window.rolling.Rolling.sum
    "pandas.core.window.rolling.Rolling.sum"), [`Expanding.sum()`](../reference/api/pandas.core.window.expanding.Expanding.sum.html#pandas.core.window.expanding.Expanding.sum
    "pandas.core.window.expanding.Expanding.sum"), [`Rolling.mean()`](../reference/api/pandas.core.window.rolling.Rolling.mean.html#pandas.core.window.rolling.Rolling.mean
    "pandas.core.window.rolling.Rolling.mean"), [`Expanding.mean()`](../reference/api/pandas.core.window.expanding.Expanding.mean.html#pandas.core.window.expanding.Expanding.mean
    "pandas.core.window.expanding.Expanding.mean"), [`ExponentialMovingWindow.mean()`](../reference/api/pandas.core.window.ewm.ExponentialMovingWindow.mean.html#pandas.core.window.ewm.ExponentialMovingWindow.mean
    "pandas.core.window.ewm.ExponentialMovingWindow.mean"), [`Rolling.median()`](../reference/api/pandas.core.window.rolling.Rolling.median.html#pandas.core.window.rolling.Rolling.median
    "pandas.core.window.rolling.Rolling.median"), [`Expanding.median()`](../reference/api/pandas.core.window.expanding.Expanding.median.html#pandas.core.window.expanding.Expanding.median
    "pandas.core.window.expanding.Expanding.median"), [`Rolling.max()`](../reference/api/pandas.core.window.rolling.Rolling.max.html#pandas.core.window.rolling.Rolling.max
    "pandas.core.window.rolling.Rolling.max"), [`Expanding.max()`](../reference/api/pandas.core.window.expanding.Expanding.max.html#pandas.core.window.expanding.Expanding.max
    "pandas.core.window.expanding.Expanding.max"), [`Rolling.min()`](../reference/api/pandas.core.window.rolling.Rolling.min.html#pandas.core.window.rolling.Rolling.min
    "pandas.core.window.rolling.Rolling.min"), and [`Expanding.min()`](../reference/api/pandas.core.window.expanding.Expanding.min.html#pandas.core.window.expanding.Expanding.min
    "pandas.core.window.expanding.Expanding.min") now support [Numba](http://numba.pydata.org/)
    execution with the `engine` keyword ([GH 38895](https://github.com/pandas-dev/pandas/issues/38895),
    [GH 41267](https://github.com/pandas-dev/pandas/issues/41267))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") can now accept NumPy unary operators as strings, e.g.
    `df.apply("sqrt")`, which was already the case for [`Series.apply()`](../reference/api/pandas.Series.apply.html#pandas.Series.apply
    "pandas.Series.apply") ([GH 39116](https://github.com/pandas-dev/pandas/issues/39116))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") can now accept non-callable DataFrame properties as
    strings, e.g. `df.apply("size")`, which was already the case for [`Series.apply()`](../reference/api/pandas.Series.apply.html#pandas.Series.apply
    "pandas.Series.apply") ([GH 39116](https://github.com/pandas-dev/pandas/issues/39116))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.applymap()`](../reference/api/pandas.DataFrame.applymap.html#pandas.DataFrame.applymap
    "pandas.DataFrame.applymap") can now accept kwargs to pass on to the user-provided
    `func` ([GH 39987](https://github.com/pandas-dev/pandas/issues/39987))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") indexer to `iloc` is now disallowed for `Series.__getitem__()`
    and `DataFrame.__getitem__()` ([GH 39004](https://github.com/pandas-dev/pandas/issues/39004))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.apply()`](../reference/api/pandas.Series.apply.html#pandas.Series.apply
    "pandas.Series.apply") can now accept list-like or dictionary-like arguments that
    aren’t lists or dictionaries, e.g. `ser.apply(np.array(["sum", "mean"]))`, which
    was already the case for [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") ([GH 39140](https://github.com/pandas-dev/pandas/issues/39140))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") can now accept a categorical column for the argument
    `c` ([GH 12380](https://github.com/pandas-dev/pandas/issues/12380), [GH 31357](https://github.com/pandas-dev/pandas/issues/31357))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") now raises a helpful error message when the Series has a
    [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    and the indexer has too many dimensions ([GH 35349](https://github.com/pandas-dev/pandas/issues/35349))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") now supports reading data from compressed files ([GH 26599](https://github.com/pandas-dev/pandas/issues/26599))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for parsing `ISO 8601`-like timestamps with negative signs to
    [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    ([GH 37172](https://github.com/pandas-dev/pandas/issues/37172))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for unary operators in `FloatingArray` ([GH 38749](https://github.com/pandas-dev/pandas/issues/38749))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex "pandas.RangeIndex")
    can now be constructed by passing a `range` object directly e.g. `pd.RangeIndex(range(3))`
    ([GH 12067](https://github.com/pandas-dev/pandas/issues/12067))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.round()`](../reference/api/pandas.Series.round.html#pandas.Series.round
    "pandas.Series.round") and [`DataFrame.round()`](../reference/api/pandas.DataFrame.round.html#pandas.DataFrame.round
    "pandas.DataFrame.round") now work with nullable integer and floating dtypes ([GH
    38844](https://github.com/pandas-dev/pandas/issues/38844))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    and [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    expose the argument `encoding_errors` to control how encoding errors are handled
    ([GH 39450](https://github.com/pandas-dev/pandas/issues/39450))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.any()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any"), [`SeriesGroupBy.any()`](../reference/api/pandas.core.groupby.SeriesGroupBy.any.html#pandas.core.groupby.SeriesGroupBy.any
    "pandas.core.groupby.SeriesGroupBy.any"), [`DataFrameGroupBy.all()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all"), and [`SeriesGroupBy.all()`](../reference/api/pandas.core.groupby.SeriesGroupBy.all.html#pandas.core.groupby.SeriesGroupBy.all
    "pandas.core.groupby.SeriesGroupBy.all") use Kleene logic with nullable data types
    ([GH 37506](https://github.com/pandas-dev/pandas/issues/37506))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.any()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any"), [`SeriesGroupBy.any()`](../reference/api/pandas.core.groupby.SeriesGroupBy.any.html#pandas.core.groupby.SeriesGroupBy.any
    "pandas.core.groupby.SeriesGroupBy.any"), [`DataFrameGroupBy.all()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all"), and [`SeriesGroupBy.all()`](../reference/api/pandas.core.groupby.SeriesGroupBy.all.html#pandas.core.groupby.SeriesGroupBy.all
    "pandas.core.groupby.SeriesGroupBy.all") return a `BooleanDtype` for columns with
    nullable data types ([GH 33449](https://github.com/pandas-dev/pandas/issues/33449))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.any()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any"), [`SeriesGroupBy.any()`](../reference/api/pandas.core.groupby.SeriesGroupBy.any.html#pandas.core.groupby.SeriesGroupBy.any
    "pandas.core.groupby.SeriesGroupBy.any"), [`DataFrameGroupBy.all()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all"), and [`SeriesGroupBy.all()`](../reference/api/pandas.core.groupby.SeriesGroupBy.all.html#pandas.core.groupby.SeriesGroupBy.all
    "pandas.core.groupby.SeriesGroupBy.all") raising with `object` data containing
    `pd.NA` even when `skipna=True` ([GH 37501](https://github.com/pandas-dev/pandas/issues/37501))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.rank()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank") and [`SeriesGroupBy.rank()`](../reference/api/pandas.core.groupby.SeriesGroupBy.rank.html#pandas.core.groupby.SeriesGroupBy.rank
    "pandas.core.groupby.SeriesGroupBy.rank") now supports object-dtype data ([GH
    38278](https://github.com/pandas-dev/pandas/issues/38278))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Constructing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with the `data` argument being a Python iterable that is *not*
    a NumPy `ndarray` consisting of NumPy scalars will now result in a dtype with
    a precision the maximum of the NumPy scalars; this was already the case when `data`
    is a NumPy `ndarray` ([GH 40908](https://github.com/pandas-dev/pandas/issues/40908))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add keyword `sort` to [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") to allow non-sorting of the result ([GH 39143](https://github.com/pandas-dev/pandas/issues/39143))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add keyword `dropna` to [`DataFrame.value_counts()`](../reference/api/pandas.DataFrame.value_counts.html#pandas.DataFrame.value_counts
    "pandas.DataFrame.value_counts") to allow counting rows that include `NA` values
    ([GH 41325](https://github.com/pandas-dev/pandas/issues/41325))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") will now cast results to `PeriodDtype` where possible
    instead of `object` dtype ([GH 41526](https://github.com/pandas-dev/pandas/issues/41526))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message in `corr` and `cov` methods on `Rolling`, `Expanding`,
    and `ExponentialMovingWindow` when `other` is not a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 41741](https://github.com/pandas-dev/pandas/issues/41741))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.between()`](../reference/api/pandas.Series.between.html#pandas.Series.between
    "pandas.Series.between") can now accept `left` or `right` as arguments to `inclusive`
    to include only the left or right boundary ([GH 40245](https://github.com/pandas-dev/pandas/issues/40245))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.explode()`](../reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode
    "pandas.DataFrame.explode") now supports exploding multiple columns. Its `column`
    argument now also accepts a list of str or tuples for exploding on multiple columns
    at the same time ([GH 39240](https://github.com/pandas-dev/pandas/issues/39240))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.sample()`](../reference/api/pandas.DataFrame.sample.html#pandas.DataFrame.sample
    "pandas.DataFrame.sample") now accepts the `ignore_index` argument to reset the
    index after sampling, similar to [`DataFrame.drop_duplicates()`](../reference/api/pandas.DataFrame.drop_duplicates.html#pandas.DataFrame.drop_duplicates
    "pandas.DataFrame.drop_duplicates") and [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") ([GH 38581](https://github.com/pandas-dev/pandas/issues/38581))  ##
    Notable bug fixes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are bug fixes that might have notable behavior changes.
  prefs: []
  type: TYPE_NORMAL
- en: '### `Categorical.unique` now always maintains same dtype as original'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, when calling `Categorical.unique()` with categorical data, unused
    categories in the new array would be removed, making the dtype of the new array
    different than the original ([GH 18291](https://github.com/pandas-dev/pandas/issues/18291))
  prefs: []
  type: TYPE_NORMAL
- en: 'As an example of this, given:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]  ### Preserve dtypes in [`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first")'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first") will now preserve dtypes ([GH 7509](https://github.com/pandas-dev/pandas/issues/7509))'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]  ### Groupby methods agg and transform no longer changes return dtype
    for callables'
  prefs: []
  type: TYPE_NORMAL
- en: Previously the methods [`DataFrameGroupBy.aggregate()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.aggregate.html#pandas.core.groupby.DataFrameGroupBy.aggregate
    "pandas.core.groupby.DataFrameGroupBy.aggregate"), [`SeriesGroupBy.aggregate()`](../reference/api/pandas.core.groupby.SeriesGroupBy.aggregate.html#pandas.core.groupby.SeriesGroupBy.aggregate
    "pandas.core.groupby.SeriesGroupBy.aggregate"), [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform"), and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") might cast the result dtype when
    the argument `func` is callable, possibly leading to undesirable results ([GH
    21240](https://github.com/pandas-dev/pandas/issues/21240)). The cast would occur
    if the result is numeric and casting back to the input dtype does not change any
    values as measured by `np.allclose`. Now no such casting occurs.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]  ### `float` result for [`DataFrameGroupBy.mean()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean"), [`DataFrameGroupBy.median()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.median.html#pandas.core.groupby.DataFrameGroupBy.median
    "pandas.core.groupby.DataFrameGroupBy.median"), and `GDataFrameGroupBy.var()`,
    [`SeriesGroupBy.mean()`](../reference/api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean"), [`SeriesGroupBy.median()`](../reference/api/pandas.core.groupby.SeriesGroupBy.median.html#pandas.core.groupby.SeriesGroupBy.median
    "pandas.core.groupby.SeriesGroupBy.median"), and [`SeriesGroupBy.var()`](../reference/api/pandas.core.groupby.SeriesGroupBy.var.html#pandas.core.groupby.SeriesGroupBy.var
    "pandas.core.groupby.SeriesGroupBy.var")'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, these methods could result in different dtypes depending on the
    input values. Now, these methods will always return a float dtype. ([GH 41137](https://github.com/pandas-dev/pandas/issues/41137))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]  ### Try operating inplace when setting values with `loc` and `iloc`'
  prefs: []
  type: TYPE_NORMAL
- en: When setting an entire column using `loc` or `iloc`, pandas will try to insert
    the values into the existing data rather than create an entirely new array.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: In both the new and old behavior, the data in `values` is overwritten, but in
    the old behavior the dtype of `df["A"]` changed to `int64`.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: In pandas 1.3.0, `df` continues to share data with `values`
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]  ### Never operate inplace when setting `frame[keys] = values`'
  prefs: []
  type: TYPE_NORMAL
- en: When setting multiple columns using `frame[keys] = values` new arrays will replace
    pre-existing arrays for these keys, which will *not* be over-written ([GH 39510](https://github.com/pandas-dev/pandas/issues/39510)).
    As a result, the columns will retain the dtype(s) of `values`, never casting to
    the dtypes of the existing arrays.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'In the old behavior, `5` was cast to `float64` and inserted into the existing
    array backing `df`:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'In the new behavior, we get a new array, and retain an integer-dtyped `5`:'
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]  ### Consistent casting with setting into Boolean Series'
  prefs: []
  type: TYPE_NORMAL
- en: Setting non-boolean values into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `dtype=bool` now consistently casts to `dtype=object` ([GH
    38709](https://github.com/pandas-dev/pandas/issues/38709))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]  ### DataFrameGroupBy.rolling and SeriesGroupBy.rolling no longer return
    grouped-by column in values'
  prefs: []
  type: TYPE_NORMAL
- en: The group-by column will now be dropped from the result of a `groupby.rolling`
    operation ([GH 32262](https://github.com/pandas-dev/pandas/issues/32262))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]  ### Removed artificial truncation in rolling variance and standard
    deviation'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Rolling.std()`](../reference/api/pandas.core.window.rolling.Rolling.std.html#pandas.core.window.rolling.Rolling.std
    "pandas.core.window.rolling.Rolling.std") and [`Rolling.var()`](../reference/api/pandas.core.window.rolling.Rolling.var.html#pandas.core.window.rolling.Rolling.var
    "pandas.core.window.rolling.Rolling.var") will no longer artificially truncate
    results that are less than `~1e-8` and `~1e-15` respectively to zero ([GH 37051](https://github.com/pandas-dev/pandas/issues/37051),
    [GH 40448](https://github.com/pandas-dev/pandas/issues/40448), [GH 39872](https://github.com/pandas-dev/pandas/issues/39872)).'
  prefs: []
  type: TYPE_NORMAL
- en: However, floating point artifacts may now exist in the results when rolling
    over larger values.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]  ### DataFrameGroupBy.rolling and SeriesGroupBy.rolling with MultiIndex
    no longer drop levels in the result'
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrameGroupBy.rolling()` and `SeriesGroupBy.rolling()` will no longer drop
    levels of a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") in the result. This can lead to a perceived duplication of
    levels in the resulting [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"), but this change restores the behavior that was present in
    version 1.1.3 ([GH 38787](https://github.com/pandas-dev/pandas/issues/38787),
    [GH 38523](https://github.com/pandas-dev/pandas/issues/38523)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]  ## Backwards incompatible API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '### Increased minimum versions for dependencies'
  prefs: []
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated. If installed,
    we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.17.3 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytz | 2017.3 | X |  |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.7.3 | X |  |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.2.1 |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.7.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytest (dev) | 6.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| mypy (dev) | 0.812 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| setuptools | 38.6.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.4.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 0.7.4 |  |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 0.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 4.3.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 2.2.3 |  |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.46.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 3.0.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 0.17.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 0.8.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.5.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 0.4.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.2.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.3.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| tabulate | 0.8.7 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.12.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlrd | 1.2.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 1.0.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlwt | 1.3.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas-gbq | 0.12.0 |  |'
  prefs: []
  type: TYPE_TB
- en: 'See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.  ### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: Partially initialized [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") objects (i.e. those with `categories=None`) will no
    longer compare as equal to fully initialized dtype objects ([GH 38516](https://github.com/pandas-dev/pandas/issues/38516))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Accessing `_constructor_expanddim` on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and `_constructor_sliced` on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") now raise an `AttributeError`. Previously a `NotImplementedError`
    was raised ([GH 38782](https://github.com/pandas-dev/pandas/issues/38782))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added new `engine` and `**engine_kwargs` parameters to [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") to support other future “SQL engines”. Currently we
    still only use `SQLAlchemy` under the hood, but more engines are planned to be
    supported such as [turbodbc](https://turbodbc.readthedocs.io/en/latest/) ([GH
    36893](https://github.com/pandas-dev/pandas/issues/36893))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed redundant `freq` from [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") string representation ([GH 41653](https://github.com/pandas-dev/pandas/issues/41653))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExtensionDtype.construct_array_type()` is now a required method instead of
    an optional one for `ExtensionDtype` subclasses ([GH 24860](https://github.com/pandas-dev/pandas/issues/24860))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Calling `hash` on non-hashable pandas objects will now raise `TypeError` with
    the built-in error message (e.g. `unhashable type: ''Series''`). Previously it
    would raise a custom message such as `''Series'' objects are mutable, thus they
    cannot be hashed`. Furthermore, `isinstance(<Series>, abc.collections.Hashable)`
    will now return `False` ([GH 40013](https://github.com/pandas-dev/pandas/issues/40013))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Styler.from_custom_template()`](../reference/api/pandas.io.formats.style.Styler.from_custom_template.html#pandas.io.formats.style.Styler.from_custom_template
    "pandas.io.formats.style.Styler.from_custom_template") now has two new arguments
    for template names, and removed the old `name`, due to template inheritance having
    been introducing for better parsing ([GH 42053](https://github.com/pandas-dev/pandas/issues/42053)).
    Subclassing modifications to Styler attributes are also needed.  ### Build'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Documentation in `.pptx` and `.pdf` formats are no longer included in wheels
    or source distributions. ([GH 30741](https://github.com/pandas-dev/pandas/issues/30741))  ##
    Deprecations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Deprecated dropping nuisance columns in DataFrame reductions and DataFrameGroupBy
    operations'
  prefs: []
  type: TYPE_NORMAL
- en: Calling a reduction (e.g. `.min`, `.max`, `.sum`) on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `numeric_only=None` (the default), columns where the
    reduction raises a `TypeError` are silently ignored and dropped from the result.
  prefs: []
  type: TYPE_NORMAL
- en: This behavior is deprecated. In a future version, the `TypeError` will be raised,
    and users will need to select only valid columns before calling the function.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: '*Old behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: '*Future behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: Similarly, when applying a function to `DataFrameGroupBy`, columns on which
    the function raises `TypeError` are currently silently ignored and dropped from
    the result.
  prefs: []
  type: TYPE_NORMAL
- en: This behavior is deprecated. In a future version, the `TypeError` will be raised,
    and users will need to select only valid columns before calling the function.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: '*Old behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: '*Future behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]  ### Other Deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: Deprecated allowing scalars to be passed to the [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") constructor ([GH 38433](https://github.com/pandas-dev/pandas/issues/38433))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated constructing [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") without passing list-like data ([GH 38944](https://github.com/pandas-dev/pandas/issues/38944))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing subclass-specific keyword arguments in the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") constructor, use the specific subclass directly instead ([GH 14093](https://github.com/pandas-dev/pandas/issues/14093),
    [GH 21311](https://github.com/pandas-dev/pandas/issues/21311), [GH 22315](https://github.com/pandas-dev/pandas/issues/22315),
    [GH 26974](https://github.com/pandas-dev/pandas/issues/26974))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `astype()` method of datetimelike (`timedelta64[ns]`, `datetime64[ns]`,
    `Datetime64TZDtype`, `PeriodDtype`) to convert to integer dtypes, use `values.view(...)`
    instead ([GH 38544](https://github.com/pandas-dev/pandas/issues/38544)). This
    deprecation was later reverted in pandas 1.4.0.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `MultiIndex.is_lexsorted()` and `MultiIndex.lexsort_depth()`, use
    `MultiIndex.is_monotonic_increasing()` instead ([GH 32259](https://github.com/pandas-dev/pandas/issues/32259))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated keyword `try_cast` in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where"), [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask"), [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where"), [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask"); cast results manually if desired ([GH 38836](https://github.com/pandas-dev/pandas/issues/38836))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated comparison of [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") objects with `datetime.date` objects. Instead of e.g. `ts
    <= mydate` use `ts <= pd.Timestamp(mydate)` or `ts.date() <= mydate` ([GH 36131](https://github.com/pandas-dev/pandas/issues/36131))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Rolling.win_type` returning `"freq"` ([GH 38963](https://github.com/pandas-dev/pandas/issues/38963))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Rolling.is_datetimelike` ([GH 38963](https://github.com/pandas-dev/pandas/issues/38963))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") indexer for `Series.__setitem__()` and `DataFrame.__setitem__()`
    ([GH 39004](https://github.com/pandas-dev/pandas/issues/39004))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `ExponentialMovingWindow.vol()` ([GH 39220](https://github.com/pandas-dev/pandas/issues/39220))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using `.astype` to convert between `datetime64[ns]` dtype and [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") is deprecated and will raise in a future version, use
    `obj.tz_localize` or `obj.dt.tz_localize` instead ([GH 38622](https://github.com/pandas-dev/pandas/issues/38622))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated casting `datetime.date` objects to `datetime64` when used as `fill_value`
    in [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack"), [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift"), [`Series.shift()`](../reference/api/pandas.Series.shift.html#pandas.Series.shift
    "pandas.Series.shift"), and [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex"), pass `pd.Timestamp(dateobj)` instead ([GH 39767](https://github.com/pandas-dev/pandas/issues/39767))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Styler.set_na_rep()` and `Styler.set_precision()` in favor of [`Styler.format()`](../reference/api/pandas.io.formats.style.Styler.format.html#pandas.io.formats.style.Styler.format
    "pandas.io.formats.style.Styler.format") with `na_rep` and `precision` as existing
    and new input arguments respectively ([GH 40134](https://github.com/pandas-dev/pandas/issues/40134),
    [GH 40425](https://github.com/pandas-dev/pandas/issues/40425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Styler.where()` in favor of using an alternative formulation with
    `Styler.applymap()` ([GH 40821](https://github.com/pandas-dev/pandas/issues/40821))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing partial failure in [`Series.transform()`](../reference/api/pandas.Series.transform.html#pandas.Series.transform
    "pandas.Series.transform") and [`DataFrame.transform()`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform") when `func` is list-like or dict-like and raises
    anything but `TypeError`; `func` raising anything but a `TypeError` will raise
    in a future version ([GH 40211](https://github.com/pandas-dev/pandas/issues/40211))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated arguments `error_bad_lines` and `warn_bad_lines` in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") in favor of argument `on_bad_lines` ([GH 15122](https://github.com/pandas-dev/pandas/issues/15122))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deprecated support for `np.ma.mrecords.MaskedRecords` in the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor, pass `{name: data[name] for name in data.dtype.names}`
    instead ([GH 40363](https://github.com/pandas-dev/pandas/issues/40363))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated using [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge"), [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge"), and [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") on a different number of levels ([GH 34862](https://github.com/pandas-dev/pandas/issues/34862))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the use of `**kwargs` in [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter"); use the keyword argument `engine_kwargs` instead ([GH 40430](https://github.com/pandas-dev/pandas/issues/40430))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `level` keyword for [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") aggregations; use groupby instead ([GH 39983](https://github.com/pandas-dev/pandas/issues/39983))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `inplace` parameter of `Categorical.remove_categories()`, `Categorical.add_categories()`,
    `Categorical.reorder_categories()`, `Categorical.rename_categories()`, `Categorical.set_categories()`
    and will be removed in a future version ([GH 37643](https://github.com/pandas-dev/pandas/issues/37643))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    producing duplicated columns through the `suffixes` keyword and already existing
    columns ([GH 22818](https://github.com/pandas-dev/pandas/issues/22818))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated setting `Categorical._codes`, create a new [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") with the desired codes instead ([GH 40606](https://github.com/pandas-dev/pandas/issues/40606))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `convert_float` optional argument in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") and [`ExcelFile.parse()`](../reference/api/pandas.ExcelFile.parse.html#pandas.ExcelFile.parse
    "pandas.ExcelFile.parse") ([GH 41127](https://github.com/pandas-dev/pandas/issues/41127))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of `DatetimeIndex.union()` with mixed timezones; in a future
    version both will be cast to UTC instead of object dtype ([GH 39328](https://github.com/pandas-dev/pandas/issues/39328))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated using `usecols` with out of bounds indices for [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `engine="c"` ([GH 25623](https://github.com/pandas-dev/pandas/issues/25623))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deprecated special treatment of lists with first element a Categorical in the
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor; pass as `pd.DataFrame({col: categorical, ...})` instead ([GH 38845](https://github.com/pandas-dev/pandas/issues/38845))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor when a `dtype` is passed and the data cannot be
    cast to that dtype. In a future version, this will raise instead of being silently
    ignored ([GH 24435](https://github.com/pandas-dev/pandas/issues/24435))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `Timestamp.freq` attribute. For the properties that use it (`is_month_start`,
    `is_month_end`, `is_quarter_start`, `is_quarter_end`, `is_year_start`, `is_year_end`),
    when you have a `freq`, use e.g. `freq.is_month_start(ts)` ([GH 15146](https://github.com/pandas-dev/pandas/issues/15146))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated construction of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `DatetimeTZDtype` data and `datetime64[ns]` dtype. Use
    `Series(data).dt.tz_localize(None)` instead ([GH 41555](https://github.com/pandas-dev/pandas/issues/41555),
    [GH 33401](https://github.com/pandas-dev/pandas/issues/33401))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") construction with large-integer values and small-integer dtype
    silently overflowing; use `Series(data).astype(dtype)` instead ([GH 41734](https://github.com/pandas-dev/pandas/issues/41734))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") construction with floating data and integer dtype casting
    even when lossy; in a future version this will remain floating, matching [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") behavior ([GH 41770](https://github.com/pandas-dev/pandas/issues/41770))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated inference of `timedelta64[ns]`, `datetime64[ns]`, or `DatetimeTZDtype`
    dtypes in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    construction when data containing strings is passed and no `dtype` is passed ([GH
    33558](https://github.com/pandas-dev/pandas/issues/33558))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In a future version, constructing [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `datetime64[ns]` data and `DatetimeTZDtype` will treat
    the data as wall-times instead of as UTC times (matching DatetimeIndex behavior).
    To treat the data as UTC times, use `pd.Series(data).dt.tz_localize("UTC").dt.tz_convert(dtype.tz)`
    or `pd.Series(data.view("int64"), dtype=dtype)` ([GH 33401](https://github.com/pandas-dev/pandas/issues/33401))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing lists as `key` to [`DataFrame.xs()`](../reference/api/pandas.DataFrame.xs.html#pandas.DataFrame.xs
    "pandas.DataFrame.xs") and [`Series.xs()`](../reference/api/pandas.Series.xs.html#pandas.Series.xs
    "pandas.Series.xs") ([GH 41760](https://github.com/pandas-dev/pandas/issues/41760))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated boolean arguments of `inclusive` in [`Series.between()`](../reference/api/pandas.Series.between.html#pandas.Series.between
    "pandas.Series.between") to have `{"left", "right", "neither", "both"}` as standard
    argument values ([GH 40628](https://github.com/pandas-dev/pandas/issues/40628))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deprecated passing arguments as positional for all of the following, with exceptions
    noted ([GH 41485](https://github.com/pandas-dev/pandas/issues/41485)):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    (other than `objs`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    (other than `filepath_or_buffer`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") (other than `filepath_or_buffer`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip") and [`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip") (other than `upper` and `lower`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.drop_duplicates()`](../reference/api/pandas.DataFrame.drop_duplicates.html#pandas.DataFrame.drop_duplicates
    "pandas.DataFrame.drop_duplicates") (except for `subset`), [`Series.drop_duplicates()`](../reference/api/pandas.Series.drop_duplicates.html#pandas.Series.drop_duplicates
    "pandas.Series.drop_duplicates"), [`Index.drop_duplicates()`](../reference/api/pandas.Index.drop_duplicates.html#pandas.Index.drop_duplicates
    "pandas.Index.drop_duplicates") and `MultiIndex.drop_duplicates()`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") (other than `labels`) and [`Series.drop()`](../reference/api/pandas.Series.drop.html#pandas.Series.drop
    "pandas.Series.drop")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") and [`Series.dropna()`](../reference/api/pandas.Series.dropna.html#pandas.Series.dropna
    "pandas.Series.dropna")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.ffill()`](../reference/api/pandas.DataFrame.ffill.html#pandas.DataFrame.ffill
    "pandas.DataFrame.ffill"), [`Series.ffill()`](../reference/api/pandas.Series.ffill.html#pandas.Series.ffill
    "pandas.Series.ffill"), [`DataFrame.bfill()`](../reference/api/pandas.DataFrame.bfill.html#pandas.DataFrame.bfill
    "pandas.DataFrame.bfill"), and [`Series.bfill()`](../reference/api/pandas.Series.bfill.html#pandas.Series.bfill
    "pandas.Series.bfill")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") and [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") (apart from `value`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") and [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") (other than `method`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask") and [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask") (other than `cond` and `other`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") (other than `level`) and [`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") and [`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") (other than `labels`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.set_index()`](../reference/api/pandas.DataFrame.set_index.html#pandas.DataFrame.set_index
    "pandas.DataFrame.set_index") (other than `keys`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index") and [`Series.sort_index()`](../reference/api/pandas.Series.sort_index.html#pandas.Series.sort_index
    "pandas.Series.sort_index")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") (other than `by`) and [`Series.sort_values()`](../reference/api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") and [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") (other than `cond` and `other`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.set_names()`](../reference/api/pandas.Index.set_names.html#pandas.Index.set_names
    "pandas.Index.set_names") and `MultiIndex.set_names()` (except for `names`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.codes()`](../reference/api/pandas.MultiIndex.codes.html#pandas.MultiIndex.codes
    "pandas.MultiIndex.codes") (except for `codes`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.set_levels()`](../reference/api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels") (except for `levels`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Resampler.interpolate()` (other than `method`)  ## Performance improvements'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `IntervalIndex.isin()` ([GH 38353](https://github.com/pandas-dev/pandas/issues/38353))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.mean()`](../reference/api/pandas.Series.mean.html#pandas.Series.mean
    "pandas.Series.mean") for nullable data types ([GH 34814](https://github.com/pandas-dev/pandas/issues/34814))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") for nullable data types ([GH 38340](https://github.com/pandas-dev/pandas/issues/38340))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") with `method="pad"` or `method="backfill"` for nullable
    floating and nullable integer dtypes ([GH 39953](https://github.com/pandas-dev/pandas/issues/39953))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr") for `method=kendall` ([GH 28329](https://github.com/pandas-dev/pandas/issues/28329))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr") for `method=spearman` ([GH 40956](https://github.com/pandas-dev/pandas/issues/40956),
    [GH 41885](https://github.com/pandas-dev/pandas/issues/41885))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Rolling.corr()`](../reference/api/pandas.core.window.rolling.Rolling.corr.html#pandas.core.window.rolling.Rolling.corr
    "pandas.core.window.rolling.Rolling.corr") and [`Rolling.cov()`](../reference/api/pandas.core.window.rolling.Rolling.cov.html#pandas.core.window.rolling.Rolling.cov
    "pandas.core.window.rolling.Rolling.cov") ([GH 39388](https://github.com/pandas-dev/pandas/issues/39388))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `RollingGroupby.corr()`, `ExpandingGroupby.corr()`,
    `ExpandingGroupby.corr()` and `ExpandingGroupby.cov()` ([GH 39591](https://github.com/pandas-dev/pandas/issues/39591))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`unique()`](../reference/api/pandas.unique.html#pandas.unique
    "pandas.unique") for object data type ([GH 37615](https://github.com/pandas-dev/pandas/issues/37615))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") for basic cases (including separators) ([GH 40035](https://github.com/pandas-dev/pandas/issues/40035)
    [GH 15621](https://github.com/pandas-dev/pandas/issues/15621))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `ExpandingGroupby` aggregation methods ([GH 39664](https://github.com/pandas-dev/pandas/issues/39664))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") where render times are more than 50% reduced
    and now matches [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") ([GH 39972](https://github.com/pandas-dev/pandas/issues/39972)
    [GH 39952](https://github.com/pandas-dev/pandas/issues/39952), [GH 40425](https://github.com/pandas-dev/pandas/issues/40425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The method [`Styler.set_td_classes()`](../reference/api/pandas.io.formats.style.Styler.set_td_classes.html#pandas.io.formats.style.Styler.set_td_classes
    "pandas.io.formats.style.Styler.set_td_classes") is now as performant as [`Styler.apply()`](../reference/api/pandas.io.formats.style.Styler.apply.html#pandas.io.formats.style.Styler.apply
    "pandas.io.formats.style.Styler.apply") and `Styler.applymap()`, and even more
    so in some cases ([GH 40453](https://github.com/pandas-dev/pandas/issues/40453))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`ExponentialMovingWindow.mean()`](../reference/api/pandas.core.window.ewm.ExponentialMovingWindow.mean.html#pandas.core.window.ewm.ExponentialMovingWindow.mean
    "pandas.core.window.ewm.ExponentialMovingWindow.mean") with `times` ([GH 39784](https://github.com/pandas-dev/pandas/issues/39784))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") when requiring the Python fallback
    implementation ([GH 40176](https://github.com/pandas-dev/pandas/issues/40176))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in the conversion of a PyArrow Boolean array to a pandas
    nullable Boolean array ([GH 41051](https://github.com/pandas-dev/pandas/issues/41051))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for concatenation of data with type [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") ([GH 40193](https://github.com/pandas-dev/pandas/issues/40193))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.cummin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin"), [`SeriesGroupBy.cummin()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummin.html#pandas.core.groupby.SeriesGroupBy.cummin
    "pandas.core.groupby.SeriesGroupBy.cummin"), [`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax"), and [`SeriesGroupBy.cummax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummax.html#pandas.core.groupby.SeriesGroupBy.cummax
    "pandas.core.groupby.SeriesGroupBy.cummax") with nullable data types ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.nunique()`](../reference/api/pandas.Series.nunique.html#pandas.Series.nunique
    "pandas.Series.nunique") with nan values ([GH 40865](https://github.com/pandas-dev/pandas/issues/40865))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.transpose()`](../reference/api/pandas.DataFrame.transpose.html#pandas.DataFrame.transpose
    "pandas.DataFrame.transpose"), [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack") with `DatetimeTZDtype` ([GH 40149](https://github.com/pandas-dev/pandas/issues/40149))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Performance improvement in [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") and [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") with entry point lazy loading ([GH 41492](https://github.com/pandas-dev/pandas/issues/41492))  ##
    Bug fixes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") incorrectly failing to raise `TypeError` when scalar
    data is passed ([GH 38614](https://github.com/pandas-dev/pandas/issues/38614))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CategoricalIndex.reindex` failed when the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") passed was not categorical but whose values were all labels in
    the category ([GH 28690](https://github.com/pandas-dev/pandas/issues/28690))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where constructing a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") from an object-dtype array of `date` objects did not round-trip
    correctly with `astype` ([GH 38552](https://github.com/pandas-dev/pandas/issues/38552))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from an `ndarray` and a [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") ([GH 38857](https://github.com/pandas-dev/pandas/issues/38857))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting categorical values into an object-dtype column in a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 39136](https://github.com/pandas-dev/pandas/issues/39136))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") was raising an `IndexError` when the new index contained
    duplicates and the old index was a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 38906](https://github.com/pandas-dev/pandas/issues/38906))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.fillna()` with a tuple-like category raising `NotImplementedError`
    instead of `ValueError` when filling with a non-category tuple ([GH 41914](https://github.com/pandas-dev/pandas/issues/41914))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") constructors sometimes dropping nanoseconds from [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") (resp. [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta")) `data`, with `dtype=datetime64[ns]` (resp. `timedelta64[ns]`)
    ([GH 38032](https://github.com/pandas-dev/pandas/issues/38032))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.first()`](../reference/api/pandas.DataFrame.first.html#pandas.DataFrame.first
    "pandas.DataFrame.first") and [`Series.first()`](../reference/api/pandas.Series.first.html#pandas.Series.first
    "pandas.Series.first") with an offset of one month returning an incorrect result
    when the first day is the last day of a month ([GH 29623](https://github.com/pandas-dev/pandas/issues/29623))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with mismatched `datetime64` data and `timedelta64` dtype, or
    vice-versa, failing to raise a `TypeError` ([GH 38575](https://github.com/pandas-dev/pandas/issues/38575),
    [GH 38764](https://github.com/pandas-dev/pandas/issues/38764), [GH 38792](https://github.com/pandas-dev/pandas/issues/38792))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a `datetime` object out of bounds for `datetime64[ns]`
    dtype or a `timedelta` object out of bounds for `timedelta64[ns]` dtype ([GH 38792](https://github.com/pandas-dev/pandas/issues/38792),
    [GH 38965](https://github.com/pandas-dev/pandas/issues/38965))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.intersection()`, `DatetimeIndex.symmetric_difference()`,
    `PeriodIndex.intersection()`, `PeriodIndex.symmetric_difference()` always returning
    object-dtype when operating with [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 38741](https://github.com/pandas-dev/pandas/issues/38741))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.intersection()` giving incorrect results with non-Tick
    frequencies with `n != 1` ([GH 42104](https://github.com/pandas-dev/pandas/issues/42104))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") incorrectly casting `datetime64` values to `int64` ([GH
    37682](https://github.com/pandas-dev/pandas/issues/37682))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") incorrectly typecasting `datetime` object to `Timestamp`
    ([GH 38878](https://github.com/pandas-dev/pandas/issues/38878))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in comparisons between [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") object and `datetime64` objects just outside the implementation
    bounds for nanosecond `datetime64` ([GH 39221](https://github.com/pandas-dev/pandas/issues/39221))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.round()`](../reference/api/pandas.Timestamp.round.html#pandas.Timestamp.round
    "pandas.Timestamp.round"), [`Timestamp.floor()`](../reference/api/pandas.Timestamp.floor.html#pandas.Timestamp.floor
    "pandas.Timestamp.floor"), [`Timestamp.ceil()`](../reference/api/pandas.Timestamp.ceil.html#pandas.Timestamp.ceil
    "pandas.Timestamp.ceil") for values near the implementation bounds of [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") ([GH 39244](https://github.com/pandas-dev/pandas/issues/39244))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta.round()`](../reference/api/pandas.Timedelta.round.html#pandas.Timedelta.round
    "pandas.Timedelta.round"), [`Timedelta.floor()`](../reference/api/pandas.Timedelta.floor.html#pandas.Timedelta.floor
    "pandas.Timedelta.floor"), [`Timedelta.ceil()`](../reference/api/pandas.Timedelta.ceil.html#pandas.Timedelta.ceil
    "pandas.Timedelta.ceil") for values near the implementation bounds of [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") ([GH 38964](https://github.com/pandas-dev/pandas/issues/38964))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") incorrectly creating [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") containing `NaT` instead of raising `OutOfBoundsDatetime`
    in corner cases ([GH 24124](https://github.com/pandas-dev/pandas/issues/24124))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`infer_freq()`](../reference/api/pandas.infer_freq.html#pandas.infer_freq
    "pandas.infer_freq") incorrectly fails to infer ‘H’ frequency of [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") if the latter has a timezone and crosses DST boundaries
    ([GH 39556](https://github.com/pandas-dev/pandas/issues/39556))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    backed by `DatetimeArray` or `TimedeltaArray` sometimes failing to set the array’s
    `freq` to `None` ([GH 41425](https://github.com/pandas-dev/pandas/issues/41425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in constructing [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") from `np.timedelta64` objects with non-nanosecond units that
    are out of bounds for `timedelta64[ns]` ([GH 38965](https://github.com/pandas-dev/pandas/issues/38965))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") incorrectly accepting `np.datetime64("NaT")` objects
    ([GH 39462](https://github.com/pandas-dev/pandas/issues/39462))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") from an input string with only symbols and no digits failed
    to raise an error ([GH 39710](https://github.com/pandas-dev/pandas/issues/39710))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") and [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") failing to raise when passed non-nanosecond `timedelta64`
    arrays that overflow when converting to `timedelta64[ns]` ([GH 40008](https://github.com/pandas-dev/pandas/issues/40008))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in different `tzinfo` objects representing UTC not being treated as equivalent
    ([GH 39216](https://github.com/pandas-dev/pandas/issues/39216))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `dateutil.tz.gettz("UTC")` not being recognized as equivalent to other
    UTC-representing tzinfos ([GH 39276](https://github.com/pandas-dev/pandas/issues/39276))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile"), [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") causing incorrect subsequent indexing behavior
    ([GH 38351](https://github.com/pandas-dev/pandas/issues/38351))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") raising an [`IndexError`](https://docs.python.org/3/library/exceptions.html#IndexError
    "(in Python v3.12)") for empty `by` ([GH 40258](https://github.com/pandas-dev/pandas/issues/40258))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.select_dtypes()`](../reference/api/pandas.DataFrame.select_dtypes.html#pandas.DataFrame.select_dtypes
    "pandas.DataFrame.select_dtypes") with `include=np.number` would drop numeric
    `ExtensionDtype` columns ([GH 35340](https://github.com/pandas-dev/pandas/issues/35340))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.mode()`](../reference/api/pandas.DataFrame.mode.html#pandas.DataFrame.mode
    "pandas.DataFrame.mode") and [`Series.mode()`](../reference/api/pandas.Series.mode.html#pandas.Series.mode
    "pandas.Series.mode") not keeping consistent integer [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") for empty input ([GH 33321](https://github.com/pandas-dev/pandas/issues/33321))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank") when the DataFrame contained `np.inf` ([GH 32593](https://github.com/pandas-dev/pandas/issues/32593))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank") with `axis=0` and columns holding incomparable types
    raising an `IndexError` ([GH 38932](https://github.com/pandas-dev/pandas/issues/38932))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rank()`](../reference/api/pandas.Series.rank.html#pandas.Series.rank
    "pandas.Series.rank"), [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank"), [`DataFrameGroupBy.rank()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank"), and [`SeriesGroupBy.rank()`](../reference/api/pandas.core.groupby.SeriesGroupBy.rank.html#pandas.core.groupby.SeriesGroupBy.rank
    "pandas.core.groupby.SeriesGroupBy.rank") treating the most negative `int64` value
    as missing ([GH 32859](https://github.com/pandas-dev/pandas/issues/32859))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.select_dtypes()`](../reference/api/pandas.DataFrame.select_dtypes.html#pandas.DataFrame.select_dtypes
    "pandas.DataFrame.select_dtypes") different behavior between Windows and Linux
    with `include="int"` ([GH 36596](https://github.com/pandas-dev/pandas/issues/36596))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") and [`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") when passed the argument `func="size"` would operate on
    the entire `DataFrame` instead of rows or columns ([GH 39934](https://github.com/pandas-dev/pandas/issues/39934))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.transform()`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform") would raise a `SpecificationError` when passed a
    dictionary and columns were missing; will now raise a `KeyError` instead ([GH
    40004](https://github.com/pandas-dev/pandas/issues/40004))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.rank()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank") and [`SeriesGroupBy.rank()`](../reference/api/pandas.core.groupby.SeriesGroupBy.rank.html#pandas.core.groupby.SeriesGroupBy.rank
    "pandas.core.groupby.SeriesGroupBy.rank") giving incorrect results with `pct=True`
    and equal values between consecutive groups ([GH 40518](https://github.com/pandas-dev/pandas/issues/40518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.count()`](../reference/api/pandas.Series.count.html#pandas.Series.count
    "pandas.Series.count") would result in an `int32` result on 32-bit platforms when
    argument `level=None` ([GH 40908](https://github.com/pandas-dev/pandas/issues/40908))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    reductions with methods `any` and `all` not returning Boolean results for object
    data ([GH 12863](https://github.com/pandas-dev/pandas/issues/12863), [GH 35450](https://github.com/pandas-dev/pandas/issues/35450),
    [GH 27709](https://github.com/pandas-dev/pandas/issues/27709))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip") would fail if the Series contains NA values and has nullable
    int or float as a data type ([GH 40851](https://github.com/pandas-dev/pandas/issues/40851))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `UInt64Index.where()` and `UInt64Index.putmask()` with an `np.int64`
    dtype `other` incorrectly raising `TypeError` ([GH 41974](https://github.com/pandas-dev/pandas/issues/41974))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") not sorting the aggregated axis in the order of the provided
    aggregation functions when one or more aggregation function fails to produce results
    ([GH 33634](https://github.com/pandas-dev/pandas/issues/33634))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip") not interpreting missing values as no threshold ([GH
    40420](https://github.com/pandas-dev/pandas/issues/40420))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.to_dict()`](../reference/api/pandas.Series.to_dict.html#pandas.Series.to_dict
    "pandas.Series.to_dict") with `orient='records'` now returns Python native types
    ([GH 25969](https://github.com/pandas-dev/pandas/issues/25969))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.view()`](../reference/api/pandas.Series.view.html#pandas.Series.view
    "pandas.Series.view") and [`Index.view()`](../reference/api/pandas.Index.view.html#pandas.Index.view
    "pandas.Index.view") when converting between datetime-like (`datetime64[ns]`,
    `datetime64[ns, tz]`, `timedelta64`, `period`) dtypes ([GH 39788](https://github.com/pandas-dev/pandas/issues/39788))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in creating a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from an empty `np.recarray` not retaining the original dtypes
    ([GH 40121](https://github.com/pandas-dev/pandas/issues/40121))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") failing to raise a `TypeError` when constructing from a `frozenset`
    ([GH 40163](https://github.com/pandas-dev/pandas/issues/40163))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    construction silently ignoring a passed `dtype` when the data cannot be cast to
    that dtype ([GH 21311](https://github.com/pandas-dev/pandas/issues/21311))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `StringArray.astype()` falling back to NumPy and raising when converting
    to `dtype='categorical'` ([GH 40450](https://github.com/pandas-dev/pandas/issues/40450))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") where, when given an array with a numeric NumPy dtype lower
    than int64, uint64 and float64, the unique values did not keep their original
    dtype ([GH 41132](https://github.com/pandas-dev/pandas/issues/41132))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") construction with a dictionary containing an array-like with
    `ExtensionDtype` and `copy=True` failing to make a copy ([GH 38939](https://github.com/pandas-dev/pandas/issues/38939))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`qcut()`](../reference/api/pandas.qcut.html#pandas.qcut "pandas.qcut")
    raising error when taking `Float64DType` as input ([GH 40730](https://github.com/pandas-dev/pandas/issues/40730))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") construction with `datetime64[ns]` data and `dtype=object` resulting
    in `datetime` objects instead of [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") objects ([GH 41599](https://github.com/pandas-dev/pandas/issues/41599))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") construction with `timedelta64[ns]` data and `dtype=object` resulting
    in `np.timedelta64` objects instead of [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") objects ([GH 41599](https://github.com/pandas-dev/pandas/issues/41599))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") construction when given a two-dimensional object-dtype `np.ndarray`
    of [`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    or [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    objects failing to cast to [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") or [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype"), respectively ([GH 41812](https://github.com/pandas-dev/pandas/issues/41812))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") from a list and a `PandasDtype` ([GH 39357](https://github.com/pandas-dev/pandas/issues/39357))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in creating a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") from a `range` object that does not fit in the bounds of `int64`
    dtype ([GH 30173](https://github.com/pandas-dev/pandas/issues/30173))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in creating a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") from a `dict` with all-tuple keys and an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") that requires reindexing ([GH 41707](https://github.com/pandas-dev/pandas/issues/41707))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") not recognizing Series, Index, or array with a
    Period dtype ([GH 23553](https://github.com/pandas-dev/pandas/issues/23553))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") raising an error for general [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") objects. It will now return `"unknown-array"`
    instead of raising ([GH 37367](https://github.com/pandas-dev/pandas/issues/37367))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.convert_dtypes()`](../reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes
    "pandas.DataFrame.convert_dtypes") incorrectly raised a `ValueError` when called
    on an empty DataFrame ([GH 40393](https://github.com/pandas-dev/pandas/issues/40393))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in the conversion from `pyarrow.ChunkedArray` to [`StringArray`](../reference/api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray") when the original had zero chunks ([GH 41040](https://github.com/pandas-dev/pandas/issues/41040))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") and [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") ignoring replacements with `regex=True` for `StringDType`
    data ([GH 41333](https://github.com/pandas-dev/pandas/issues/41333), [GH 35977](https://github.com/pandas-dev/pandas/issues/35977))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.extract()`](../reference/api/pandas.Series.str.extract.html#pandas.Series.str.extract
    "pandas.Series.str.extract") with [`StringArray`](../reference/api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray") returning object dtype for an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 41441](https://github.com/pandas-dev/pandas/issues/41441))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.replace()`](../reference/api/pandas.Series.str.replace.html#pandas.Series.str.replace
    "pandas.Series.str.replace") where the `case` argument was ignored when `regex=False`
    ([GH 41602](https://github.com/pandas-dev/pandas/issues/41602))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.intersection()` and `IntervalIndex.symmetric_difference()`
    always returning object-dtype when operating with [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 38653](https://github.com/pandas-dev/pandas/issues/38653),
    [GH 38741](https://github.com/pandas-dev/pandas/issues/38741))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.intersection()` returning duplicates when at least one
    of the [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    objects have duplicates which are present in the other ([GH 38743](https://github.com/pandas-dev/pandas/issues/38743))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntervalIndex.union()`, `IntervalIndex.intersection()`, `IntervalIndex.difference()`,
    and `IntervalIndex.symmetric_difference()` now cast to the appropriate dtype instead
    of raising a `TypeError` when operating with another [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") with incompatible dtype ([GH 39267](https://github.com/pandas-dev/pandas/issues/39267))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`PeriodIndex.union()`, `PeriodIndex.intersection()`, `PeriodIndex.symmetric_difference()`,
    `PeriodIndex.difference()` now cast to object dtype instead of raising `IncompatibleFrequency`
    when operating with another [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") with incompatible dtype ([GH 39306](https://github.com/pandas-dev/pandas/issues/39306))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.is_monotonic()`, [`IntervalIndex.get_loc()`](../reference/api/pandas.IntervalIndex.get_loc.html#pandas.IntervalIndex.get_loc
    "pandas.IntervalIndex.get_loc"), `IntervalIndex.get_indexer_for()`, and `IntervalIndex.__contains__()`
    when NA values are present ([GH 41831](https://github.com/pandas-dev/pandas/issues/41831))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") and `MultiIndex.union()` dropping duplicate `Index` values
    when `Index` was not monotonic or `sort` was set to `False` ([GH 36289](https://github.com/pandas-dev/pandas/issues/36289),
    [GH 31326](https://github.com/pandas-dev/pandas/issues/31326), [GH 40862](https://github.com/pandas-dev/pandas/issues/40862))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CategoricalIndex.get_indexer()` failing to raise `InvalidIndexError`
    when non-unique ([GH 38372](https://github.com/pandas-dev/pandas/issues/38372))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.get_indexer()`](../reference/api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer") when `target` has `CategoricalDtype` and both
    the index and the target contain NA values ([GH 41934](https://github.com/pandas-dev/pandas/issues/41934))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") raising a `ValueError` when input was filtered with a Boolean
    list and values to set were a list with lower dimension ([GH 20438](https://github.com/pandas-dev/pandas/issues/20438))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in inserting many new columns into a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") causing incorrect subsequent indexing behavior ([GH 38380](https://github.com/pandas-dev/pandas/issues/38380))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` raising a `ValueError` when setting multiple
    values to duplicate columns ([GH 15695](https://github.com/pandas-dev/pandas/issues/15695))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc"), [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc"), `DataFrame.__getitem__()` and `Series.__getitem__()` returning
    incorrect elements for non-monotonic [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") for string slices ([GH 33146](https://github.com/pandas-dev/pandas/issues/33146))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") and [`Series.reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex") with timezone aware indexes raising a `TypeError` for
    `method="ffill"` and `method="bfill"` and specified `tolerance` ([GH 38566](https://github.com/pandas-dev/pandas/issues/38566))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") with `datetime64[ns]` or `timedelta64[ns]` incorrectly
    casting to integers when the `fill_value` requires casting to object dtype ([GH
    39755](https://github.com/pandas-dev/pandas/issues/39755))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` raising a `ValueError` when setting on an empty
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    using specified columns and a nonempty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") value ([GH 38831](https://github.com/pandas-dev/pandas/issues/38831))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc.__setitem__()` raising a `ValueError` when operating on
    a unique column when the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has duplicate columns ([GH 38521](https://github.com/pandas-dev/pandas/issues/38521))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.iloc.__setitem__()` and `DataFrame.loc.__setitem__()` with
    mixed dtypes when setting with a dictionary value ([GH 38335](https://github.com/pandas-dev/pandas/issues/38335))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.loc.__setitem__()` and `DataFrame.loc.__setitem__()` raising
    `KeyError` when provided a Boolean generator ([GH 39614](https://github.com/pandas-dev/pandas/issues/39614))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.iloc()`](../reference/api/pandas.Series.iloc.html#pandas.Series.iloc
    "pandas.Series.iloc") and [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") raising a `KeyError` when provided a generator ([GH 39614](https://github.com/pandas-dev/pandas/issues/39614))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` not raising a `ValueError` when the right hand
    side is a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with wrong number of columns ([GH 38604](https://github.com/pandas-dev/pandas/issues/38604))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` raising a `ValueError` when setting a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a scalar indexer ([GH 38303](https://github.com/pandas-dev/pandas/issues/38303))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") dropping levels of a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") when the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") used as input has only one row ([GH 10521](https://github.com/pandas-dev/pandas/issues/10521))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__getitem__()` and `Series.__getitem__()` always raising `KeyError`
    when slicing with existing strings where the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") has milliseconds ([GH 33589](https://github.com/pandas-dev/pandas/issues/33589))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting `timedelta64` or `datetime64` values into numeric [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") failing to cast to object dtype ([GH 39086](https://github.com/pandas-dev/pandas/issues/39086),
    [GH 39619](https://github.com/pandas-dev/pandas/issues/39619))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") values into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with mismatched [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") incorrectly casting the new values to the existing dtype
    ([GH 39120](https://github.com/pandas-dev/pandas/issues/39120))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting `datetime64` values into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with integer-dtype incorrectly casting the datetime64 values
    to integers ([GH 39266](https://github.com/pandas-dev/pandas/issues/39266))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting `np.datetime64("NaT")` into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `Datetime64TZDtype` incorrectly treating the timezone-naive
    value as timezone-aware ([GH 39769](https://github.com/pandas-dev/pandas/issues/39769))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.get_loc()`](../reference/api/pandas.Index.get_loc.html#pandas.Index.get_loc
    "pandas.Index.get_loc") not raising `KeyError` when `key=NaN` and `method` is
    specified but `NaN` is not in the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 39382](https://github.com/pandas-dev/pandas/issues/39382))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.insert()` when inserting `np.datetime64("NaT")` into a
    timezone-aware index incorrectly treating the timezone-naive value as timezone-aware
    ([GH 39769](https://github.com/pandas-dev/pandas/issues/39769))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in incorrectly raising in [`Index.insert()`](../reference/api/pandas.Index.insert.html#pandas.Index.insert
    "pandas.Index.insert"), when setting a new column that cannot be held in the existing
    `frame.columns`, or in [`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index") or [`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") instead of casting to a compatible dtype ([GH
    39068](https://github.com/pandas-dev/pandas/issues/39068))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RangeIndex.append()` where a single object of length 1 was concatenated
    incorrectly ([GH 39401](https://github.com/pandas-dev/pandas/issues/39401))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RangeIndex.astype()` where when converting to [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex"), the categories became a `Int64Index` instead of a
    [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex "pandas.RangeIndex")
    ([GH 41263](https://github.com/pandas-dev/pandas/issues/41263))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting `numpy.timedelta64` values into an object-dtype [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") using a Boolean indexer ([GH 39488](https://github.com/pandas-dev/pandas/issues/39488))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting numeric values into a into a boolean-dtypes [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") using `at` or `iat` failing to cast to object-dtype ([GH 39582](https://github.com/pandas-dev/pandas/issues/39582))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` and `DataFrame.iloc.__setitem__()` raising
    `ValueError` when trying to index with a row-slice and setting a list as values
    ([GH 40440](https://github.com/pandas-dev/pandas/issues/40440))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") not raising `KeyError` when the key was not found in [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and the levels were not fully specified ([GH 41170](https://github.com/pandas-dev/pandas/issues/41170))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc.__setitem__()` when setting-with-expansion incorrectly
    raising when the index in the expanding axis contained duplicates ([GH 40096](https://github.com/pandas-dev/pandas/issues/40096))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc.__getitem__()` with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") casting to float when at least one index column has float
    dtype and we retrieve a scalar ([GH 41369](https://github.com/pandas-dev/pandas/issues/41369))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") incorrectly matching non-Boolean index elements ([GH 20432](https://github.com/pandas-dev/pandas/issues/20432))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing with `np.nan` on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") incorrectly raising `KeyError` when `np.nan` keys are
    present ([GH 41933](https://github.com/pandas-dev/pandas/issues/41933))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__delitem__()` with `ExtensionDtype` incorrectly casting to `ndarray`
    ([GH 40386](https://github.com/pandas-dev/pandas/issues/40386))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.at()`](../reference/api/pandas.DataFrame.at.html#pandas.DataFrame.at
    "pandas.DataFrame.at") with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") returning incorrect results when passed integer keys
    ([GH 41846](https://github.com/pandas-dev/pandas/issues/41846))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") returning a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") in the wrong order if an indexer has duplicates ([GH 40978](https://github.com/pandas-dev/pandas/issues/40978))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` raising a `TypeError` when using a `str` subclass
    as the column name with a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 37366](https://github.com/pandas-dev/pandas/issues/37366))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `PeriodIndex.get_loc()` failing to raise a `KeyError` when given a [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") with a mismatched `freq` ([GH 41670](https://github.com/pandas-dev/pandas/issues/41670))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug `.loc.__getitem__` with a `UInt64Index` and negative-integer keys raising
    `OverflowError` instead of `KeyError` in some cases, wrapping around to positive
    integers in others ([GH 41777](https://github.com/pandas-dev/pandas/issues/41777))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.get_indexer()`](../reference/api/pandas.Index.get_indexer.html#pandas.Index.get_indexer
    "pandas.Index.get_indexer") failing to raise `ValueError` in some cases with invalid
    `method`, `limit`, or `tolerance` arguments ([GH 41918](https://github.com/pandas-dev/pandas/issues/41918))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when slicing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") when passing an invalid string raising `ValueError` instead
    of a `TypeError` ([GH 41821](https://github.com/pandas-dev/pandas/issues/41821))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    constructor sometimes silently ignoring a specified `dtype` ([GH 38879](https://github.com/pandas-dev/pandas/issues/38879))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.where()`](../reference/api/pandas.Index.where.html#pandas.Index.where
    "pandas.Index.where") behavior now mirrors [`Index.putmask()`](../reference/api/pandas.Index.putmask.html#pandas.Index.putmask
    "pandas.Index.putmask") behavior, i.e. `index.where(mask, other)` matches `index.putmask(~mask,
    other)` ([GH 39412](https://github.com/pandas-dev/pandas/issues/39412))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper "pandas.Grouper")
    did not correctly propagate the `dropna` argument; [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") now correctly handles missing
    values for `dropna=True` ([GH 35612](https://github.com/pandas-dev/pandas/issues/35612))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`isna()`](../reference/api/pandas.isna.html#pandas.isna "pandas.isna"),
    [`Series.isna()`](../reference/api/pandas.Series.isna.html#pandas.Series.isna
    "pandas.Series.isna"), [`Index.isna()`](../reference/api/pandas.Index.isna.html#pandas.Index.isna
    "pandas.Index.isna"), [`DataFrame.isna()`](../reference/api/pandas.DataFrame.isna.html#pandas.DataFrame.isna
    "pandas.DataFrame.isna"), and the corresponding `notna` functions not recognizing
    `Decimal("NaN")` objects ([GH 39409](https://github.com/pandas-dev/pandas/issues/39409))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") not accepting a dictionary for the `downcast` keyword
    ([GH 40809](https://github.com/pandas-dev/pandas/issues/40809))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`isna()`](../reference/api/pandas.isna.html#pandas.isna "pandas.isna")
    not returning a copy of the mask for nullable types, causing any subsequent mask
    modification to change the original array ([GH 40935](https://github.com/pandas-dev/pandas/issues/40935))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") construction with float data containing `NaN` and an integer
    `dtype` casting instead of retaining the `NaN` ([GH 26919](https://github.com/pandas-dev/pandas/issues/26919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") and `MultiIndex.isin()` didn’t treat all nans as equivalent
    if they were in tuples ([GH 41836](https://github.com/pandas-dev/pandas/issues/41836))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") raising a `TypeError` when the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") is non-unique and `level` is not provided ([GH 36293](https://github.com/pandas-dev/pandas/issues/36293))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.intersection()` duplicating `NaN` in the result ([GH 38623](https://github.com/pandas-dev/pandas/issues/38623))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.equals()` incorrectly returning `True` when the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") contained `NaN` even when they are differently ordered ([GH
    38439](https://github.com/pandas-dev/pandas/issues/38439))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.intersection()` always returning an empty result when intersecting
    with [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 38653](https://github.com/pandas-dev/pandas/issues/38653))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.difference()` incorrectly raising `TypeError` when indexes
    contain non-sortable entries ([GH 41915](https://github.com/pandas-dev/pandas/issues/41915))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.reindex()` raising a `ValueError` when used on an empty [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and indexing only a specific level ([GH 41170](https://github.com/pandas-dev/pandas/issues/41170))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.reindex()` raising `TypeError` when reindexing against a
    flat [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    ([GH 41707](https://github.com/pandas-dev/pandas/issues/41707))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I/O
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Index.__repr__()` when `display.max_seq_items=1` ([GH 38415](https://github.com/pandas-dev/pandas/issues/38415))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not recognizing scientific notation if the argument `decimal`
    is set and `engine="python"` ([GH 31920](https://github.com/pandas-dev/pandas/issues/31920))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") interpreting `NA` value as comment, when `NA` does contain
    the comment string fixed for `engine="python"` ([GH 34002](https://github.com/pandas-dev/pandas/issues/34002))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") raising an `IndexError` with multiple header columns and `index_col`
    is specified when the file has no data rows ([GH 38292](https://github.com/pandas-dev/pandas/issues/38292))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not accepting `usecols` with a different length than `names`
    for `engine="python"` ([GH 16469](https://github.com/pandas-dev/pandas/issues/16469))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") returning object dtype when `delimiter=","` with `usecols`
    and `parse_dates` specified for `engine="python"` ([GH 35873](https://github.com/pandas-dev/pandas/issues/35873))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") raising a `TypeError` when `names` and `parse_dates` is specified
    for `engine="c"` ([GH 33699](https://github.com/pandas-dev/pandas/issues/33699))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_clipboard()`](../reference/api/pandas.read_clipboard.html#pandas.read_clipboard
    "pandas.read_clipboard") and [`DataFrame.to_clipboard()`](../reference/api/pandas.DataFrame.to_clipboard.html#pandas.DataFrame.to_clipboard
    "pandas.DataFrame.to_clipboard") not working in WSL ([GH 38527](https://github.com/pandas-dev/pandas/issues/38527))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow custom error values for the `parse_dates` argument of [`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql
    "pandas.read_sql"), [`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query") and [`read_sql_table()`](../reference/api/pandas.read_sql_table.html#pandas.read_sql_table
    "pandas.read_sql_table") ([GH 35185](https://github.com/pandas-dev/pandas/issues/35185))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_hdf()`](../reference/api/pandas.DataFrame.to_hdf.html#pandas.DataFrame.to_hdf
    "pandas.DataFrame.to_hdf") and [`Series.to_hdf()`](../reference/api/pandas.Series.to_hdf.html#pandas.Series.to_hdf
    "pandas.Series.to_hdf") raising a `KeyError` when trying to apply for subclasses
    of `DataFrame` or `Series` ([GH 33748](https://github.com/pandas-dev/pandas/issues/33748))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`HDFStore.put()`](../reference/api/pandas.HDFStore.put.html#pandas.HDFStore.put
    "pandas.HDFStore.put") raising a wrong `TypeError` when saving a DataFrame with
    non-string dtype ([GH 34274](https://github.com/pandas-dev/pandas/issues/34274))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") resulting in the first element of a generator object
    not being included in the returned DataFrame ([GH 35923](https://github.com/pandas-dev/pandas/issues/35923))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") applying the thousands separator to date columns when the column
    should be parsed for dates and `usecols` is specified for `engine="python"` ([GH
    39365](https://github.com/pandas-dev/pandas/issues/39365))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") forward filling [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") names when multiple header and index columns are specified
    ([GH 34673](https://github.com/pandas-dev/pandas/issues/34673))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") not respecting [`set_option()`](../reference/api/pandas.set_option.html#pandas.set_option
    "pandas.set_option") ([GH 34252](https://github.com/pandas-dev/pandas/issues/34252))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not switching `true_values` and `false_values` for nullable
    Boolean dtype ([GH 34655](https://github.com/pandas-dev/pandas/issues/34655))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") when `orient="split"` not maintaining a numeric string index
    ([GH 28556](https://github.com/pandas-dev/pandas/issues/28556))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql "pandas.read_sql")
    returned an empty generator if `chunksize` was non-zero and the query returned
    no results. Now returns a generator with a single empty DataFrame ([GH 34411](https://github.com/pandas-dev/pandas/issues/34411))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") returning unexpected records when filtering on categorical
    string columns using the `where` parameter ([GH 39189](https://github.com/pandas-dev/pandas/issues/39189))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") raising a `ValueError` when `datetimes` were null ([GH 39725](https://github.com/pandas-dev/pandas/issues/39725))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") dropping empty values from single-column spreadsheets ([GH
    39808](https://github.com/pandas-dev/pandas/issues/39808))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") loading trailing empty rows/columns for some filetypes ([GH
    41167](https://github.com/pandas-dev/pandas/issues/41167))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") raising an `AttributeError` when the excel file had a `MultiIndex`
    header followed by two empty rows and no index ([GH 40442](https://github.com/pandas-dev/pandas/issues/40442))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"), [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf"), and [`read_clipboard()`](../reference/api/pandas.read_clipboard.html#pandas.read_clipboard
    "pandas.read_clipboard") where one blank row after a `MultiIndex` header with
    no index would be dropped ([GH 40442](https://github.com/pandas-dev/pandas/issues/40442))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") misplacing the truncation column when `index=False`
    ([GH 40904](https://github.com/pandas-dev/pandas/issues/40904))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") adding an extra dot and misaligning the truncation
    row when `index=False` ([GH 40904](https://github.com/pandas-dev/pandas/issues/40904))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_orc()`](../reference/api/pandas.read_orc.html#pandas.read_orc
    "pandas.read_orc") always raising an `AttributeError` ([GH 40918](https://github.com/pandas-dev/pandas/issues/40918))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") silently ignoring `prefix` if `names` and `prefix` are defined,
    now raising a `ValueError` ([GH 39123](https://github.com/pandas-dev/pandas/issues/39123))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") not respecting the dtype for a duplicated column name when
    `mangle_dupe_cols` is set to `True` ([GH 35211](https://github.com/pandas-dev/pandas/issues/35211))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") silently ignoring `sep` if `delimiter` and `sep` are defined,
    now raising a `ValueError` ([GH 39823](https://github.com/pandas-dev/pandas/issues/39823))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") misinterpreting arguments when `sys.setprofile` had been
    previously called ([GH 41069](https://github.com/pandas-dev/pandas/issues/41069))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the conversion from PyArrow to pandas (e.g. for reading Parquet) with
    nullable dtypes and a PyArrow array whose data buffer size is not a multiple of
    the dtype size ([GH 40896](https://github.com/pandas-dev/pandas/issues/40896))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") would raise an error when pandas could not determine the
    file type even though the user specified the `engine` argument ([GH 41225](https://github.com/pandas-dev/pandas/issues/41225))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_clipboard()`](../reference/api/pandas.read_clipboard.html#pandas.read_clipboard
    "pandas.read_clipboard") copying from an excel file shifts values into the wrong
    column if there are null values in first column ([GH 41108](https://github.com/pandas-dev/pandas/issues/41108))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_hdf()`](../reference/api/pandas.DataFrame.to_hdf.html#pandas.DataFrame.to_hdf
    "pandas.DataFrame.to_hdf") and [`Series.to_hdf()`](../reference/api/pandas.Series.to_hdf.html#pandas.Series.to_hdf
    "pandas.Series.to_hdf") raising a `TypeError` when trying to append a string column
    to an incompatible column ([GH 41897](https://github.com/pandas-dev/pandas/issues/41897))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Period
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Comparisons of [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") objects or [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with mismatched `PeriodDtype` now behave like other mismatched-type
    comparisons, returning `False` for equals, `True` for not-equal, and raising `TypeError`
    for inequality checks ([GH 39274](https://github.com/pandas-dev/pandas/issues/39274))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`plotting.scatter_matrix()`](../reference/api/pandas.plotting.scatter_matrix.html#pandas.plotting.scatter_matrix
    "pandas.plotting.scatter_matrix") raising when 2d `ax` argument passed ([GH 16253](https://github.com/pandas-dev/pandas/issues/16253))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prevent warnings when Matplotlib’s `constrained_layout` is enabled ([GH 25261](https://github.com/pandas-dev/pandas/issues/25261))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") was showing the wrong colors in the legend if the function
    was called repeatedly and some calls used `yerr` while others didn’t ([GH 39522](https://github.com/pandas-dev/pandas/issues/39522))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") was showing the wrong colors in the legend if the function
    was called repeatedly and some calls used `secondary_y` and others use `legend=False`
    ([GH 40044](https://github.com/pandas-dev/pandas/issues/40044))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.box()`](../reference/api/pandas.DataFrame.plot.box.html#pandas.DataFrame.plot.box
    "pandas.DataFrame.plot.box") when `dark_background` theme was selected, caps or
    min/max markers for the plot were not visible ([GH 40769](https://github.com/pandas-dev/pandas/issues/40769))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") and [`SeriesGroupBy.agg()`](../reference/api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg") with [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") columns incorrectly casting results too aggressively ([GH
    38254](https://github.com/pandas-dev/pandas/issues/38254))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") where unobserved categories
    in a grouped categorical Series were not tallied ([GH 38672](https://github.com/pandas-dev/pandas/issues/38672))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") where an error was raised on
    an empty Series ([GH 39172](https://github.com/pandas-dev/pandas/issues/39172))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.indices()` would contain non-existent indices when null values
    were present in the groupby keys ([GH 9304](https://github.com/pandas-dev/pandas/issues/9304))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`DataFrameGroupBy.sum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum") and [`SeriesGroupBy.sum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.sum.html#pandas.core.groupby.SeriesGroupBy.sum
    "pandas.core.groupby.SeriesGroupBy.sum") causing a loss of precision by now using
    Kahan summation ([GH 38778](https://github.com/pandas-dev/pandas/issues/38778))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`DataFrameGroupBy.cumsum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum"), [`SeriesGroupBy.cumsum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cumsum.html#pandas.core.groupby.SeriesGroupBy.cumsum
    "pandas.core.groupby.SeriesGroupBy.cumsum"), [`DataFrameGroupBy.mean()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean"), and [`SeriesGroupBy.mean()`](../reference/api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean") causing loss of precision through using
    Kahan summation ([GH 38934](https://github.com/pandas-dev/pandas/issues/38934))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Resampler.aggregate()`](../reference/api/pandas.core.resample.Resampler.aggregate.html#pandas.core.resample.Resampler.aggregate
    "pandas.core.resample.Resampler.aggregate") and [`DataFrame.transform()`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform") raising a `TypeError` instead of `SpecificationError`
    when missing keys had mixed dtypes ([GH 39025](https://github.com/pandas-dev/pandas/issues/39025))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.idxmin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin") and [`DataFrameGroupBy.idxmax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax") with `ExtensionDtype` columns ([GH
    38733](https://github.com/pandas-dev/pandas/issues/38733))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") would raise when the index was a [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") consisting of `NaT` ([GH 39227](https://github.com/pandas-dev/pandas/issues/39227))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RollingGroupby.corr()` and `ExpandingGroupby.corr()` where the groupby
    column would return `0` instead of `np.nan` when providing `other` that was longer
    than each group ([GH 39591](https://github.com/pandas-dev/pandas/issues/39591))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ExpandingGroupby.corr()` and `ExpandingGroupby.cov()` where `1` would
    be returned instead of `np.nan` when providing `other` that was longer than each
    group ([GH 39591](https://github.com/pandas-dev/pandas/issues/39591))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.mean()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean"), [`SeriesGroupBy.mean()`](../reference/api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean"), [`DataFrameGroupBy.median()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.median.html#pandas.core.groupby.DataFrameGroupBy.median
    "pandas.core.groupby.DataFrameGroupBy.median"), [`SeriesGroupBy.median()`](../reference/api/pandas.core.groupby.SeriesGroupBy.median.html#pandas.core.groupby.SeriesGroupBy.median
    "pandas.core.groupby.SeriesGroupBy.median"), and [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") not propagating metadata ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") and [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") not calculating window bounds correctly when window
    is an offset and dates are in descending order ([GH 40002](https://github.com/pandas-dev/pandas/issues/40002))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") and [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") on an empty `Series` or `DataFrame` would lose index,
    columns, and/or data types when directly using the methods `idxmax`, `idxmin`,
    `mad`, `min`, `max`, `sum`, `prod`, and `skew` or using them through `apply`,
    `aggregate`, or `resample` ([GH 26411](https://github.com/pandas-dev/pandas/issues/26411))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") where a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") would be created instead of an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") when used on a `RollingGroupby` object ([GH 39732](https://github.com/pandas-dev/pandas/issues/39732))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.sample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sample.html#pandas.core.groupby.DataFrameGroupBy.sample
    "pandas.core.groupby.DataFrameGroupBy.sample") where an error was raised when
    `weights` was specified and the index was an `Int64Index` ([GH 39927](https://github.com/pandas-dev/pandas/issues/39927))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.aggregate()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.aggregate.html#pandas.core.groupby.DataFrameGroupBy.aggregate
    "pandas.core.groupby.DataFrameGroupBy.aggregate") and [`Resampler.aggregate()`](../reference/api/pandas.core.resample.Resampler.aggregate.html#pandas.core.resample.Resampler.aggregate
    "pandas.core.resample.Resampler.aggregate") would sometimes raise a `SpecificationError`
    when passed a dictionary and columns were missing; will now always raise a `KeyError`
    instead ([GH 40004](https://github.com/pandas-dev/pandas/issues/40004))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.sample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sample.html#pandas.core.groupby.DataFrameGroupBy.sample
    "pandas.core.groupby.DataFrameGroupBy.sample") where column selection was not
    applied before computing the result ([GH 39928](https://github.com/pandas-dev/pandas/issues/39928))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ExponentialMovingWindow` when calling `__getitem__` would incorrectly
    raise a `ValueError` when providing `times` ([GH 40164](https://github.com/pandas-dev/pandas/issues/40164))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ExponentialMovingWindow` when calling `__getitem__` would not retain
    `com`, `span`, `alpha` or `halflife` attributes ([GH 40164](https://github.com/pandas-dev/pandas/issues/40164))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExponentialMovingWindow` now raises a `NotImplementedError` when specifying
    `times` with `adjust=False` due to an incorrect calculation ([GH 40098](https://github.com/pandas-dev/pandas/issues/40098))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ExponentialMovingWindowGroupby.mean()` where the `times` argument was
    ignored when `engine='numba'` ([GH 40951](https://github.com/pandas-dev/pandas/issues/40951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ExponentialMovingWindowGroupby.mean()` where the wrong times were used
    the in case of multiple groups ([GH 40951](https://github.com/pandas-dev/pandas/issues/40951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ExponentialMovingWindowGroupby` where the times vector and values became
    out of sync for non-trivial groups ([GH 40951](https://github.com/pandas-dev/pandas/issues/40951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.asfreq()`](../reference/api/pandas.Series.asfreq.html#pandas.Series.asfreq
    "pandas.Series.asfreq") and [`DataFrame.asfreq()`](../reference/api/pandas.DataFrame.asfreq.html#pandas.DataFrame.asfreq
    "pandas.DataFrame.asfreq") dropping rows when the index was not sorted ([GH 39805](https://github.com/pandas-dev/pandas/issues/39805))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in aggregation functions for [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") not respecting `numeric_only` argument when `level` keyword
    was given ([GH 40660](https://github.com/pandas-dev/pandas/issues/40660))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.aggregate()`](../reference/api/pandas.core.groupby.SeriesGroupBy.aggregate.html#pandas.core.groupby.SeriesGroupBy.aggregate
    "pandas.core.groupby.SeriesGroupBy.aggregate") where using a user-defined function
    to aggregate a Series with an object-typed [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") causes an incorrect [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") shape ([GH 40014](https://github.com/pandas-dev/pandas/issues/40014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RollingGroupby` where `as_index=False` argument in `groupby` was ignored
    ([GH 39433](https://github.com/pandas-dev/pandas/issues/39433))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.any()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any"), [`SeriesGroupBy.any()`](../reference/api/pandas.core.groupby.SeriesGroupBy.any.html#pandas.core.groupby.SeriesGroupBy.any
    "pandas.core.groupby.SeriesGroupBy.any"), [`DataFrameGroupBy.all()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all") and [`SeriesGroupBy.all()`](../reference/api/pandas.core.groupby.SeriesGroupBy.all.html#pandas.core.groupby.SeriesGroupBy.all
    "pandas.core.groupby.SeriesGroupBy.all") raising a `ValueError` when using with
    nullable type columns holding `NA` even with `skipna=True` ([GH 40585](https://github.com/pandas-dev/pandas/issues/40585))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cummin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin"), [`SeriesGroupBy.cummin()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummin.html#pandas.core.groupby.SeriesGroupBy.cummin
    "pandas.core.groupby.SeriesGroupBy.cummin"), [`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax") and [`SeriesGroupBy.cummax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummax.html#pandas.core.groupby.SeriesGroupBy.cummax
    "pandas.core.groupby.SeriesGroupBy.cummax") incorrectly rounding integer values
    near the `int64` implementations bounds ([GH 40767](https://github.com/pandas-dev/pandas/issues/40767))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.rank()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank") and [`SeriesGroupBy.rank()`](../reference/api/pandas.core.groupby.SeriesGroupBy.rank.html#pandas.core.groupby.SeriesGroupBy.rank
    "pandas.core.groupby.SeriesGroupBy.rank") with nullable dtypes incorrectly raising
    a `TypeError` ([GH 41010](https://github.com/pandas-dev/pandas/issues/41010))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cummin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin"), [`SeriesGroupBy.cummin()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummin.html#pandas.core.groupby.SeriesGroupBy.cummin
    "pandas.core.groupby.SeriesGroupBy.cummin"), [`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax") and [`SeriesGroupBy.cummax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummax.html#pandas.core.groupby.SeriesGroupBy.cummax
    "pandas.core.groupby.SeriesGroupBy.cummax") computing wrong result with nullable
    data types too large to roundtrip when casting to float ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") returning mean zero for all `NaN` window with `min_periods=0`
    if calculation is not numerical stable ([GH 41053](https://github.com/pandas-dev/pandas/issues/41053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") returning sum not zero for all `NaN` window with `min_periods=0`
    if calculation is not numerical stable ([GH 41053](https://github.com/pandas-dev/pandas/issues/41053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.agg()`](../reference/api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg") failing to retain ordered [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") on order-preserving aggregations ([GH 41147](https://github.com/pandas-dev/pandas/issues/41147))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.min()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.min.html#pandas.core.groupby.DataFrameGroupBy.min
    "pandas.core.groupby.DataFrameGroupBy.min"), [`SeriesGroupBy.min()`](../reference/api/pandas.core.groupby.SeriesGroupBy.min.html#pandas.core.groupby.SeriesGroupBy.min
    "pandas.core.groupby.SeriesGroupBy.min"), [`DataFrameGroupBy.max()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.max.html#pandas.core.groupby.DataFrameGroupBy.max
    "pandas.core.groupby.DataFrameGroupBy.max") and [`SeriesGroupBy.max()`](../reference/api/pandas.core.groupby.SeriesGroupBy.max.html#pandas.core.groupby.SeriesGroupBy.max
    "pandas.core.groupby.SeriesGroupBy.max") with multiple object-dtype columns and
    `numeric_only=False` incorrectly raising a `ValueError` ([GH 41111](https://github.com/pandas-dev/pandas/issues/41111))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.rank()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank") with the GroupBy object’s `axis=0`
    and the `rank` method’s keyword `axis=1` ([GH 41320](https://github.com/pandas-dev/pandas/issues/41320))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.__getitem__()` with non-unique columns incorrectly
    returning a malformed `SeriesGroupBy` instead of `DataFrameGroupBy` ([GH 41427](https://github.com/pandas-dev/pandas/issues/41427))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") with non-unique columns incorrectly
    raising an `AttributeError` ([GH 41427](https://github.com/pandas-dev/pandas/issues/41427))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Resampler.apply()`](../reference/api/pandas.core.resample.Resampler.apply.html#pandas.core.resample.Resampler.apply
    "pandas.core.resample.Resampler.apply") with non-unique columns incorrectly dropping
    duplicated columns ([GH 41445](https://github.com/pandas-dev/pandas/issues/41445))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") aggregations incorrectly returning empty [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") instead of raising `TypeError` on aggregations that are invalid
    for its dtype, e.g. `.prod` with `datetime64[ns]` dtype ([GH 41342](https://github.com/pandas-dev/pandas/issues/41342))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy` aggregations incorrectly failing to drop columns with
    invalid dtypes for that aggregation when there are no valid columns ([GH 41291](https://github.com/pandas-dev/pandas/issues/41291))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.rolling.__iter__()` where `on` was not assigned to the index
    of the resulting objects ([GH 40373](https://github.com/pandas-dev/pandas/issues/40373))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") with `engine="numba"` where `*args`
    were being cached with the user passed function ([GH 41647](https://github.com/pandas-dev/pandas/issues/41647))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy` methods `agg`, `transform`, `sum`, `bfill`, `ffill`,
    `pad`, `pct_change`, `shift`, `ohlc` dropping `.columns.names` ([GH 41497](https://github.com/pandas-dev/pandas/issues/41497))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    raising error when performing an inner join with partial index and `right_index=True`
    when there was no overlap between indices ([GH 33814](https://github.com/pandas-dev/pandas/issues/33814))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") with missing levels led to incorrect index names ([GH
    37510](https://github.com/pandas-dev/pandas/issues/37510))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") propagating the right Index with `left_index=True` and `right_on`
    specification instead of left Index ([GH 33463](https://github.com/pandas-dev/pandas/issues/33463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") on a DataFrame with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") returned the wrong result when one of both indexes had only
    one level ([GH 36909](https://github.com/pandas-dev/pandas/issues/36909))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") now raises a `ValueError` instead of a cryptic `TypeError`
    in case of non-numerical merge columns ([GH 29130](https://github.com/pandas-dev/pandas/issues/29130))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") not assigning values correctly when the DataFrame had
    a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    where at least one dimension had dtype `Categorical` with non-alphabetically sorted
    categories ([GH 38502](https://github.com/pandas-dev/pandas/issues/38502))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts") and [`Series.mode()`](../reference/api/pandas.Series.mode.html#pandas.Series.mode
    "pandas.Series.mode") now return consistent keys in original order ([GH 12679](https://github.com/pandas-dev/pandas/issues/12679),
    [GH 11227](https://github.com/pandas-dev/pandas/issues/11227) and [GH 39007](https://github.com/pandas-dev/pandas/issues/39007))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") not handling `NaN` in [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") columns correctly ([GH 39481](https://github.com/pandas-dev/pandas/issues/39481))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") would give incorrect results when the argument `func`
    was a string, `axis=1`, and the axis argument was not supported; now raises a
    `ValueError` instead ([GH 39211](https://github.com/pandas-dev/pandas/issues/39211))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") not reshaping the index correctly after sorting
    on columns when `ignore_index=True` ([GH 39464](https://github.com/pandas-dev/pandas/issues/39464))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` returning incorrect dtypes with combinations of
    `ExtensionDtype` dtypes ([GH 39454](https://github.com/pandas-dev/pandas/issues/39454))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` returning incorrect dtypes when used with combinations
    of `datetime64` and `timedelta64` dtypes ([GH 39574](https://github.com/pandas-dev/pandas/issues/39574))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` with a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and appending a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") whose [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") is not a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 41707](https://github.com/pandas-dev/pandas/issues/41707))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") returning a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") for a single value when operating on an empty DataFrame ([GH
    13483](https://github.com/pandas-dev/pandas/issues/13483))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") can
    now be passed to the [`numpy.all()`](https://numpy.org/doc/stable/reference/generated/numpy.all.html#numpy.all
    "(in NumPy v1.26)") function ([GH 40180](https://github.com/pandas-dev/pandas/issues/40180))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") not preserving `CategoricalDtype` in a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 36991](https://github.com/pandas-dev/pandas/issues/36991))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") raising an error when the input sequence contained unhashable
    items ([GH 39756](https://github.com/pandas-dev/pandas/issues/39756))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode") preserving the index when `ignore_index` was `True` and
    values were scalars ([GH 40487](https://github.com/pandas-dev/pandas/issues/40487))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") raising a `ValueError` when [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") contains `None` and `NaT` and has more than 50 elements ([GH
    39882](https://github.com/pandas-dev/pandas/issues/39882))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack") and [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") with object-dtype values containing timezone-aware
    datetime objects incorrectly raising `TypeError` ([GH 41875](https://github.com/pandas-dev/pandas/issues/41875))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") raising `InvalidIndexError` when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has duplicate columns used as `value_vars` ([GH 41951](https://github.com/pandas-dev/pandas/issues/41951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sparse.to_coo()`](../reference/api/pandas.DataFrame.sparse.to_coo.html#pandas.DataFrame.sparse.to_coo
    "pandas.DataFrame.sparse.to_coo") raising a `KeyError` with columns that are a
    numeric [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    without a `0` ([GH 18414](https://github.com/pandas-dev/pandas/issues/18414))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseArray.astype()` with `copy=False` producing incorrect results
    when going from integer dtype to floating dtype ([GH 34456](https://github.com/pandas-dev/pandas/issues/34456))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseArray.max()` and `SparseArray.min()` would always return an empty
    result ([GH 40921](https://github.com/pandas-dev/pandas/issues/40921))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") when `other` is a Series with an `ExtensionDtype` ([GH
    38729](https://github.com/pandas-dev/pandas/issues/38729))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax"), [`Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin"), [`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax"), and [`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin") would fail when the underlying data is an `ExtensionArray`
    ([GH 32749](https://github.com/pandas-dev/pandas/issues/32749), [GH 33719](https://github.com/pandas-dev/pandas/issues/33719),
    [GH 36566](https://github.com/pandas-dev/pandas/issues/36566))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where some properties of subclasses of `PandasExtensionDtype` where
    improperly cached ([GH 40329](https://github.com/pandas-dev/pandas/issues/40329))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask") where masking a DataFrame with an `ExtensionDtype` raises
    a `ValueError` ([GH 40941](https://github.com/pandas-dev/pandas/issues/40941))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styler
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") where the `subset` argument in methods raised
    an error for some valid MultiIndex slices ([GH 33562](https://github.com/pandas-dev/pandas/issues/33562))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") rendered HTML output has seen minor alterations
    to support w3 good code standards ([GH 39626](https://github.com/pandas-dev/pandas/issues/39626))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") where rendered HTML was missing a column class
    identifier for certain header cells ([GH 39716](https://github.com/pandas-dev/pandas/issues/39716))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Styler.background_gradient()`](../reference/api/pandas.io.formats.style.Styler.background_gradient.html#pandas.io.formats.style.Styler.background_gradient
    "pandas.io.formats.style.Styler.background_gradient") where text-color was not
    determined correctly ([GH 39888](https://github.com/pandas-dev/pandas/issues/39888))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Styler.set_table_styles()`](../reference/api/pandas.io.formats.style.Styler.set_table_styles.html#pandas.io.formats.style.Styler.set_table_styles
    "pandas.io.formats.style.Styler.set_table_styles") where multiple elements in
    CSS-selectors of the `table_styles` argument were not correctly added ([GH 34061](https://github.com/pandas-dev/pandas/issues/34061))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") where copying from Jupyter dropped the top left
    cell and misaligned headers ([GH 12147](https://github.com/pandas-dev/pandas/issues/12147))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Styler.where` where `kwargs` were not passed to the applicable callable
    ([GH 40845](https://github.com/pandas-dev/pandas/issues/40845))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") causing CSS to duplicate on multiple renders
    ([GH 39395](https://github.com/pandas-dev/pandas/issues/39395), [GH 40334](https://github.com/pandas-dev/pandas/issues/40334))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`inspect.getmembers(Series)` no longer raises an `AbstractMethodError` ([GH
    38782](https://github.com/pandas-dev/pandas/issues/38782))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") with numeric dtype and `other=None` not casting to `nan`
    ([GH 39761](https://github.com/pandas-dev/pandas/issues/39761))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal"), [`assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal"), [`assert_index_equal()`](../reference/api/pandas.testing.assert_index_equal.html#pandas.testing.assert_index_equal
    "pandas.testing.assert_index_equal") and [`assert_extension_array_equal()`](../reference/api/pandas.testing.assert_extension_array_equal.html#pandas.testing.assert_extension_array_equal
    "pandas.testing.assert_extension_array_equal") incorrectly raising when an attribute
    has an unrecognized NA type ([GH 39461](https://github.com/pandas-dev/pandas/issues/39461))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`assert_index_equal()`](../reference/api/pandas.testing.assert_index_equal.html#pandas.testing.assert_index_equal
    "pandas.testing.assert_index_equal") with `exact=True` not raising when comparing
    [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") instances with `Int64Index` and `RangeIndex` categories
    ([GH 41263](https://github.com/pandas-dev/pandas/issues/41263))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.equals()`](../reference/api/pandas.DataFrame.equals.html#pandas.DataFrame.equals
    "pandas.DataFrame.equals"), [`Series.equals()`](../reference/api/pandas.Series.equals.html#pandas.Series.equals
    "pandas.Series.equals"), and [`Index.equals()`](../reference/api/pandas.Index.equals.html#pandas.Index.equals
    "pandas.Index.equals") with object-dtype containing `np.datetime64("NaT")` or
    `np.timedelta64("NaT")` ([GH 39650](https://github.com/pandas-dev/pandas/issues/39650))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`show_versions()`](../reference/api/pandas.show_versions.html#pandas.show_versions
    "pandas.show_versions") where console JSON output was not proper JSON ([GH 39701](https://github.com/pandas-dev/pandas/issues/39701))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pandas can now compile on z/OS when using [xlc](https://www.ibm.com/products/xl-cpp-compiler-zos)
    ([GH 35826](https://github.com/pandas-dev/pandas/issues/35826))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in [`pandas.util.hash_pandas_object()`](../reference/api/pandas.util.hash_pandas_object.html#pandas.util.hash_pandas_object
    "pandas.util.hash_pandas_object") not recognizing `hash_key`, `encoding` and `categorize`
    when the input object type is a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 41404](https://github.com/pandas-dev/pandas/issues/41404))  ##
    Contributors'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A total of 251 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: Abhishek R +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ada Draginda
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam J. Stewart
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam Turner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aidan Feldman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ajitesh Singh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Akshat Jain +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Albert Villanova del Moral
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexandre Prince-Levasseur +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Hawyrluk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Wieteska
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AnglinaBhambra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ankush Dua +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anna Daglis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ashlan Parker +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ashwani +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avinash Pancham
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ayushman Kumar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: BeanNan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Benoît Vinot
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bharat Raghunathan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bijay Regmi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bobin Mathew +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bogdan Pilyavets +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brian Hulette +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brian Sun +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brock +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bryan Cutler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Caleb +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calvin Ho +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chathura Widanage +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chinmay Rane +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Lynch
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Withers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christos Petropoulos
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Corentin Girard +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DaPy15 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Damodara Puddu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Hrisca
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Saxton
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DanielFEvans
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dare Adewumi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dave Willmer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Schlachter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David-dmh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deepang Raval +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Doris Lee +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dr. Jan-Philip Gehrcke +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DriesS +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dylan Percy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Erfan Nariman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eric Leung
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: EricLeer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eve
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fangchen Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Felix Divo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Florian Jetter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fred Reiss
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GFJ138 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gaurav Sheni +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Geoffrey B. Eisenbarth +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gesa Stupperich +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Griffin Ansel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gustavo C. Maciel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Heidi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Henry +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hung-Yi Wu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ian Ozsvald +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Irv Lustig
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Isaac Chung +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Isaac Virshup
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire (MBP) +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire (iMac) +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jack Liu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Lamb +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeet Parekh
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jiezheng2018 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jody Klymak
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Johan Kåhrström +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John McGuigan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jose
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JoseNavy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josh Dimarsky
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josh Friedlander
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joshua Klein +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julia Signell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julian Schnitzler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kaiqi Dong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kasim Panjri +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Katie Smith +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kelly +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kenil +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keppler, Kyle +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Khor Chean Wei +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kiley Hewitt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Larry Wong +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lightyears +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lucas Holtz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lucas Rodés-Guirao
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lucky Sivagurunathan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luis Pinto
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maciej Kos +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Garcia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Edward Gorelli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Gorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MarcoGorelli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mark Graham
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Dengler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Grigorov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marty Rudolf +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Zeitlin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Max Bolingbroke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maxim Ivanov
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maxim Kupfer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mayur +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MeeseeksMachine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Micael Jarniac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Hsieh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michel de Ruiter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mike Roberts +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Miroslav Šedivý
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mohammad Jafar Mashhadi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Morisa Manzella +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mortada Mehyar
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Muktan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Naveen Agrawal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Noah
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nofar Mishraki +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oleh Kozynets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Olga Matoula +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Omar Afifi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Omer Ozarslan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Owen Lamont +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ozan Öğreden +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas Development Team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paolo Lammens
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parfait Gasana +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patrick Hoefler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul McCarthy +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paulo S. Costa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pav A
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pradyumna Rahul +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Punitvara +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: QP Hou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rahul Chauhan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rahul Sathanapalli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Shadrach
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert Bradshaw
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robin to Roxel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rohit Gupta
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sam Purkis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Samuel GIFFARD +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sean M. Law +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shahar Naveh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ShaharNaveh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shiv Gupta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shrey Dixit +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shudong Yang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Boehm +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Hawkins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sioned Baker +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefan Mejlgaard +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steven Pitman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steven Schaerer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stéphane Guillou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: TLouf +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tegar D Pratama +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terji Petersen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Theodoros Nikolaou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Dickson
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Smith
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Yu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ThomasBlauthQC +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Hoffmann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Augspurger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Torsten Wörtwein
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tyler Reddy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: UrielMaD
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Uwe L. Korn
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Venaturum +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VirosaLi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vladimir Podolskiy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vyom Pathak +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: WANG Aiyong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Waltteri Koskinen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wenjun Si +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Ayd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yeshwanth N +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yuanhao Geng
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zito Relova +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: aflah02 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: arredond +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: attack68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cdknox +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: chinggg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: fathomer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ftrihardjo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: github-actions[bot] +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gunjan-solanki +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: guru kiran
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: hasan-yaman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: i-aki-y +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jmholzer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jordi-crespo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jotasi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jreback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: juliansmidek +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kylekeppler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lrepiton +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lucasrodes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maroth96 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mikeronayne +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mlondschien
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: moink +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: morrme
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mschmookler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mzeitlin11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: na2 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nofarmishraki +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: partev
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: patrick
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ptype
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: realead
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rhshadrach
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rlukevie +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rosagold +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: saucoide +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sdementen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: shawnbrown
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sstiijn +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: stphnlyd +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sukriti1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: taytzehao
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: theOehrly +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: theodorju +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: thordisstella +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tonyyyyip +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tsinggggg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tushushu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vangorade +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vladu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'wertha +  ## Enhancements'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Custom HTTP(s) headers when reading csv or json files'
  prefs: []
  type: TYPE_NORMAL
- en: 'When reading from a remote URL that is not handled by fsspec (e.g. HTTP and
    HTTPS) the dictionary passed to `storage_options` will be used to create the headers
    included in the request. This can be used to control the User-Agent header or
    send other custom headers ([GH 36688](https://github.com/pandas-dev/pandas/issues/36688)).
    For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]  ### Read and write XML documents'
  prefs: []
  type: TYPE_NORMAL
- en: We added I/O support to read and render shallow versions of [XML](https://www.w3.org/standards/xml/core)
    documents with [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") and [`DataFrame.to_xml()`](../reference/api/pandas.DataFrame.to_xml.html#pandas.DataFrame.to_xml
    "pandas.DataFrame.to_xml"). Using [lxml](https://lxml.de) as parser, both XPath
    1.0 and XSLT 1.0 are available. ([GH 27554](https://github.com/pandas-dev/pandas/issues/27554))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: 'For more, see [Writing XML](../user_guide/io.html#io-xml) in the user guide
    on IO tools.  ### Styler enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: We provided some focused development on [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler"). See also the [Styler documentation](../user_guide/style.html)
    which has been revised and improved ([GH 39720](https://github.com/pandas-dev/pandas/issues/39720),
    [GH 39317](https://github.com/pandas-dev/pandas/issues/39317), [GH 40493](https://github.com/pandas-dev/pandas/issues/40493)).
  prefs: []
  type: TYPE_NORMAL
- en: The method [`Styler.set_table_styles()`](../reference/api/pandas.io.formats.style.Styler.set_table_styles.html#pandas.io.formats.style.Styler.set_table_styles
    "pandas.io.formats.style.Styler.set_table_styles") can now accept more natural
    CSS language for arguments, such as `'color:red;'` instead of `[('color', 'red')]`
    ([GH 39563](https://github.com/pandas-dev/pandas/issues/39563))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: The methods [`Styler.highlight_null()`](../reference/api/pandas.io.formats.style.Styler.highlight_null.html#pandas.io.formats.style.Styler.highlight_null
    "pandas.io.formats.style.Styler.highlight_null"), [`Styler.highlight_min()`](../reference/api/pandas.io.formats.style.Styler.highlight_min.html#pandas.io.formats.style.Styler.highlight_min
    "pandas.io.formats.style.Styler.highlight_min"), and [`Styler.highlight_max()`](../reference/api/pandas.io.formats.style.Styler.highlight_max.html#pandas.io.formats.style.Styler.highlight_max
    "pandas.io.formats.style.Styler.highlight_max") now allow custom CSS highlighting
    instead of the default background coloring ([GH 40242](https://github.com/pandas-dev/pandas/issues/40242))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Styler.apply()`](../reference/api/pandas.io.formats.style.Styler.apply.html#pandas.io.formats.style.Styler.apply
    "pandas.io.formats.style.Styler.apply") now accepts functions that return an `ndarray`
    when `axis=None`, making it now consistent with the `axis=0` and `axis=1` behavior
    ([GH 39359](https://github.com/pandas-dev/pandas/issues/39359))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: When incorrectly formatted CSS is given via [`Styler.apply()`](../reference/api/pandas.io.formats.style.Styler.apply.html#pandas.io.formats.style.Styler.apply
    "pandas.io.formats.style.Styler.apply") or `Styler.applymap()`, an error is now
    raised upon rendering ([GH 39660](https://github.com/pandas-dev/pandas/issues/39660))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Styler.format()`](../reference/api/pandas.io.formats.style.Styler.format.html#pandas.io.formats.style.Styler.format
    "pandas.io.formats.style.Styler.format") now accepts the keyword argument `escape`
    for optional HTML and LaTeX escaping ([GH 40388](https://github.com/pandas-dev/pandas/issues/40388),
    [GH 41619](https://github.com/pandas-dev/pandas/issues/41619))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Styler.background_gradient()`](../reference/api/pandas.io.formats.style.Styler.background_gradient.html#pandas.io.formats.style.Styler.background_gradient
    "pandas.io.formats.style.Styler.background_gradient") has gained the argument
    `gmap` to supply a specific gradient map for shading ([GH 22727](https://github.com/pandas-dev/pandas/issues/22727))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Styler.clear()`](../reference/api/pandas.io.formats.style.Styler.clear.html#pandas.io.formats.style.Styler.clear
    "pandas.io.formats.style.Styler.clear") now clears `Styler.hidden_index` and `Styler.hidden_columns`
    as well ([GH 40484](https://github.com/pandas-dev/pandas/issues/40484))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the method [`Styler.highlight_between()`](../reference/api/pandas.io.formats.style.Styler.highlight_between.html#pandas.io.formats.style.Styler.highlight_between
    "pandas.io.formats.style.Styler.highlight_between") ([GH 39821](https://github.com/pandas-dev/pandas/issues/39821))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the method [`Styler.highlight_quantile()`](../reference/api/pandas.io.formats.style.Styler.highlight_quantile.html#pandas.io.formats.style.Styler.highlight_quantile
    "pandas.io.formats.style.Styler.highlight_quantile") ([GH 40926](https://github.com/pandas-dev/pandas/issues/40926))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the method [`Styler.text_gradient()`](../reference/api/pandas.io.formats.style.Styler.text_gradient.html#pandas.io.formats.style.Styler.text_gradient
    "pandas.io.formats.style.Styler.text_gradient") ([GH 41098](https://github.com/pandas-dev/pandas/issues/41098))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the method [`Styler.set_tooltips()`](../reference/api/pandas.io.formats.style.Styler.set_tooltips.html#pandas.io.formats.style.Styler.set_tooltips
    "pandas.io.formats.style.Styler.set_tooltips") to allow hover tooltips; this can
    be used enhance interactive displays ([GH 21266](https://github.com/pandas-dev/pandas/issues/21266),
    [GH 40284](https://github.com/pandas-dev/pandas/issues/40284))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the parameter `precision` to the method [`Styler.format()`](../reference/api/pandas.io.formats.style.Styler.format.html#pandas.io.formats.style.Styler.format
    "pandas.io.formats.style.Styler.format") to control the display of floating point
    numbers ([GH 40134](https://github.com/pandas-dev/pandas/issues/40134))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") rendered HTML output now follows the [w3 HTML
    Style Guide](https://www.w3schools.com/html/html5_syntax.asp) ([GH 39626](https://github.com/pandas-dev/pandas/issues/39626))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Many features of the [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") class are now either partially or fully usable
    on a DataFrame with a non-unique indexes or columns ([GH 41143](https://github.com/pandas-dev/pandas/issues/41143))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: One has greater control of the display through separate sparsification of the
    index or columns using the [new styler options](../user_guide/options.html#options-available),
    which are also usable via [`option_context()`](../reference/api/pandas.option_context.html#pandas.option_context
    "pandas.option_context") ([GH 41142](https://github.com/pandas-dev/pandas/issues/41142))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the option `styler.render.max_elements` to avoid browser overload when
    styling large DataFrames ([GH 40712](https://github.com/pandas-dev/pandas/issues/40712))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the method [`Styler.to_latex()`](../reference/api/pandas.io.formats.style.Styler.to_latex.html#pandas.io.formats.style.Styler.to_latex
    "pandas.io.formats.style.Styler.to_latex") ([GH 21673](https://github.com/pandas-dev/pandas/issues/21673),
    [GH 42320](https://github.com/pandas-dev/pandas/issues/42320)), which also allows
    some limited CSS conversion ([GH 40731](https://github.com/pandas-dev/pandas/issues/40731))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the method [`Styler.to_html()`](../reference/api/pandas.io.formats.style.Styler.to_html.html#pandas.io.formats.style.Styler.to_html
    "pandas.io.formats.style.Styler.to_html") ([GH 13379](https://github.com/pandas-dev/pandas/issues/13379))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Added the method [`Styler.set_sticky()`](../reference/api/pandas.io.formats.style.Styler.set_sticky.html#pandas.io.formats.style.Styler.set_sticky
    "pandas.io.formats.style.Styler.set_sticky") to make index and column headers
    permanently visible in scrolling HTML frames ([GH 29072](https://github.com/pandas-dev/pandas/issues/29072))  ###
    DataFrame constructor honors `copy=False` with dict'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: When passing a dictionary to [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `copy=False`, a copy will no longer be made ([GH 32960](https://github.com/pandas-dev/pandas/issues/32960)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: '`df["A"]` remains a view on `arr`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: 'The default behavior when not passing `copy` will remain unchanged, i.e. a
    copy will be made.  ### PyArrow backed string data type'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve enhanced the [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype"), an extension type dedicated to string data. ([GH 39908](https://github.com/pandas-dev/pandas/issues/39908))
  prefs: []
  type: TYPE_NORMAL
- en: It is now possible to specify a `storage` keyword option to [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype"). Use pandas options or specify the dtype using `dtype='string[pyarrow]'`
    to allow the StringArray to be backed by a PyArrow array instead of a NumPy array
    of Python objects.
  prefs: []
  type: TYPE_NORMAL
- en: The PyArrow backed StringArray requires pyarrow 1.0.0 or greater to be installed.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: '`string[pyarrow]` is currently considered experimental. The implementation
    and parts of the API may change without warning.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: You can use the alias `"string[pyarrow]"` as well.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: You can also create a PyArrow backed string array using pandas options.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: The usual string accessor methods work. Where appropriate, the return type of
    the Series or columns of a DataFrame will also have string dtype.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: String accessor methods returning integers will return a value with [`Int64Dtype`](../reference/api/pandas.Int64Dtype.html#pandas.Int64Dtype
    "pandas.Int64Dtype")
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]  ### Centered datetime-like rolling windows'
  prefs: []
  type: TYPE_NORMAL
- en: 'When performing rolling calculations on DataFrame and Series objects with a
    datetime-like index, a centered datetime-like window can now be used ([GH 38780](https://github.com/pandas-dev/pandas/issues/38780)).
    For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]  ### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling"), [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling"), [`DataFrame.expanding()`](../reference/api/pandas.DataFrame.expanding.html#pandas.DataFrame.expanding
    "pandas.DataFrame.expanding"), and [`Series.expanding()`](../reference/api/pandas.Series.expanding.html#pandas.Series.expanding
    "pandas.Series.expanding") now support a `method` argument with a `''table''`
    option that performs the windowing operation over an entire [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"). See [Window Overview](../user_guide/window.html#window-overview)
    for performance and functional benefits ([GH 15095](https://github.com/pandas-dev/pandas/issues/15095),
    [GH 38995](https://github.com/pandas-dev/pandas/issues/38995))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExponentialMovingWindow` now support a `online` method that can perform `mean`
    calculations in an online fashion. See [Window Overview](../user_guide/window.html#window-overview)
    ([GH 41673](https://github.com/pandas-dev/pandas/issues/41673))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`MultiIndex.dtypes()`](../reference/api/pandas.MultiIndex.dtypes.html#pandas.MultiIndex.dtypes
    "pandas.MultiIndex.dtypes") ([GH 37062](https://github.com/pandas-dev/pandas/issues/37062))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `end` and `end_day` options for the `origin` argument in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") ([GH 37804](https://github.com/pandas-dev/pandas/issues/37804))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when `usecols` and `names` do not match for [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and `engine="c"` ([GH 29042](https://github.com/pandas-dev/pandas/issues/29042))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved consistency of error messages when passing an invalid `win_type` argument
    in [Window methods](../reference/window.html#api-window) ([GH 15969](https://github.com/pandas-dev/pandas/issues/15969))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query") now accepts a `dtype` argument to cast the columnar data
    from the SQL database based on user input ([GH 10285](https://github.com/pandas-dev/pandas/issues/10285))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now raising `ParserWarning` if length of header or given names does not match
    length of data when `usecols` is not specified ([GH 21768](https://github.com/pandas-dev/pandas/issues/21768))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved integer type mapping from pandas to SQLAlchemy when using [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") ([GH 35076](https://github.com/pandas-dev/pandas/issues/35076))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") now supports downcasting of nullable `ExtensionDtype` objects
    ([GH 33013](https://github.com/pandas-dev/pandas/issues/33013))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for dict-like names in `MultiIndex.set_names` and `MultiIndex.rename`
    ([GH 20421](https://github.com/pandas-dev/pandas/issues/20421))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") can now auto-detect .xlsb files and older .xls files ([GH
    35416](https://github.com/pandas-dev/pandas/issues/35416), [GH 41225](https://github.com/pandas-dev/pandas/issues/41225))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") now accepts an `if_sheet_exists` parameter to control the
    behavior of append mode when writing to existing sheets ([GH 40230](https://github.com/pandas-dev/pandas/issues/40230))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Rolling.sum()`](../reference/api/pandas.core.window.rolling.Rolling.sum.html#pandas.core.window.rolling.Rolling.sum
    "pandas.core.window.rolling.Rolling.sum"), [`Expanding.sum()`](../reference/api/pandas.core.window.expanding.Expanding.sum.html#pandas.core.window.expanding.Expanding.sum
    "pandas.core.window.expanding.Expanding.sum"), [`Rolling.mean()`](../reference/api/pandas.core.window.rolling.Rolling.mean.html#pandas.core.window.rolling.Rolling.mean
    "pandas.core.window.rolling.Rolling.mean"), [`Expanding.mean()`](../reference/api/pandas.core.window.expanding.Expanding.mean.html#pandas.core.window.expanding.Expanding.mean
    "pandas.core.window.expanding.Expanding.mean"), [`ExponentialMovingWindow.mean()`](../reference/api/pandas.core.window.ewm.ExponentialMovingWindow.mean.html#pandas.core.window.ewm.ExponentialMovingWindow.mean
    "pandas.core.window.ewm.ExponentialMovingWindow.mean"), [`Rolling.median()`](../reference/api/pandas.core.window.rolling.Rolling.median.html#pandas.core.window.rolling.Rolling.median
    "pandas.core.window.rolling.Rolling.median"), [`Expanding.median()`](../reference/api/pandas.core.window.expanding.Expanding.median.html#pandas.core.window.expanding.Expanding.median
    "pandas.core.window.expanding.Expanding.median"), [`Rolling.max()`](../reference/api/pandas.core.window.rolling.Rolling.max.html#pandas.core.window.rolling.Rolling.max
    "pandas.core.window.rolling.Rolling.max"), [`Expanding.max()`](../reference/api/pandas.core.window.expanding.Expanding.max.html#pandas.core.window.expanding.Expanding.max
    "pandas.core.window.expanding.Expanding.max"), [`Rolling.min()`](../reference/api/pandas.core.window.rolling.Rolling.min.html#pandas.core.window.rolling.Rolling.min
    "pandas.core.window.rolling.Rolling.min"), and [`Expanding.min()`](../reference/api/pandas.core.window.expanding.Expanding.min.html#pandas.core.window.expanding.Expanding.min
    "pandas.core.window.expanding.Expanding.min") now support [Numba](http://numba.pydata.org/)
    execution with the `engine` keyword ([GH 38895](https://github.com/pandas-dev/pandas/issues/38895),
    [GH 41267](https://github.com/pandas-dev/pandas/issues/41267))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") can now accept NumPy unary operators as strings, e.g.
    `df.apply("sqrt")`, which was already the case for [`Series.apply()`](../reference/api/pandas.Series.apply.html#pandas.Series.apply
    "pandas.Series.apply") ([GH 39116](https://github.com/pandas-dev/pandas/issues/39116))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") can now accept non-callable DataFrame properties as
    strings, e.g. `df.apply("size")`, which was already the case for [`Series.apply()`](../reference/api/pandas.Series.apply.html#pandas.Series.apply
    "pandas.Series.apply") ([GH 39116](https://github.com/pandas-dev/pandas/issues/39116))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.applymap()`](../reference/api/pandas.DataFrame.applymap.html#pandas.DataFrame.applymap
    "pandas.DataFrame.applymap") can now accept kwargs to pass on to the user-provided
    `func` ([GH 39987](https://github.com/pandas-dev/pandas/issues/39987))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") indexer to `iloc` is now disallowed for `Series.__getitem__()`
    and `DataFrame.__getitem__()` ([GH 39004](https://github.com/pandas-dev/pandas/issues/39004))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.apply()`](../reference/api/pandas.Series.apply.html#pandas.Series.apply
    "pandas.Series.apply") can now accept list-like or dictionary-like arguments that
    aren’t lists or dictionaries, e.g. `ser.apply(np.array(["sum", "mean"]))`, which
    was already the case for [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") ([GH 39140](https://github.com/pandas-dev/pandas/issues/39140))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") can now accept a categorical column for the argument
    `c` ([GH 12380](https://github.com/pandas-dev/pandas/issues/12380), [GH 31357](https://github.com/pandas-dev/pandas/issues/31357))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") now raises a helpful error message when the Series has a
    [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    and the indexer has too many dimensions ([GH 35349](https://github.com/pandas-dev/pandas/issues/35349))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") now supports reading data from compressed files ([GH 26599](https://github.com/pandas-dev/pandas/issues/26599))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for parsing `ISO 8601`-like timestamps with negative signs to
    [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    ([GH 37172](https://github.com/pandas-dev/pandas/issues/37172))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for unary operators in `FloatingArray` ([GH 38749](https://github.com/pandas-dev/pandas/issues/38749))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex "pandas.RangeIndex")
    can now be constructed by passing a `range` object directly e.g. `pd.RangeIndex(range(3))`
    ([GH 12067](https://github.com/pandas-dev/pandas/issues/12067))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.round()`](../reference/api/pandas.Series.round.html#pandas.Series.round
    "pandas.Series.round") and [`DataFrame.round()`](../reference/api/pandas.DataFrame.round.html#pandas.DataFrame.round
    "pandas.DataFrame.round") now work with nullable integer and floating dtypes ([GH
    38844](https://github.com/pandas-dev/pandas/issues/38844))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    and [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    expose the argument `encoding_errors` to control how encoding errors are handled
    ([GH 39450](https://github.com/pandas-dev/pandas/issues/39450))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.any()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any"), [`SeriesGroupBy.any()`](../reference/api/pandas.core.groupby.SeriesGroupBy.any.html#pandas.core.groupby.SeriesGroupBy.any
    "pandas.core.groupby.SeriesGroupBy.any"), [`DataFrameGroupBy.all()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all"), and [`SeriesGroupBy.all()`](../reference/api/pandas.core.groupby.SeriesGroupBy.all.html#pandas.core.groupby.SeriesGroupBy.all
    "pandas.core.groupby.SeriesGroupBy.all") use Kleene logic with nullable data types
    ([GH 37506](https://github.com/pandas-dev/pandas/issues/37506))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.any()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any"), [`SeriesGroupBy.any()`](../reference/api/pandas.core.groupby.SeriesGroupBy.any.html#pandas.core.groupby.SeriesGroupBy.any
    "pandas.core.groupby.SeriesGroupBy.any"), [`DataFrameGroupBy.all()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all"), and [`SeriesGroupBy.all()`](../reference/api/pandas.core.groupby.SeriesGroupBy.all.html#pandas.core.groupby.SeriesGroupBy.all
    "pandas.core.groupby.SeriesGroupBy.all") return a `BooleanDtype` for columns with
    nullable data types ([GH 33449](https://github.com/pandas-dev/pandas/issues/33449))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.any()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any"), [`SeriesGroupBy.any()`](../reference/api/pandas.core.groupby.SeriesGroupBy.any.html#pandas.core.groupby.SeriesGroupBy.any
    "pandas.core.groupby.SeriesGroupBy.any"), [`DataFrameGroupBy.all()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all"), and [`SeriesGroupBy.all()`](../reference/api/pandas.core.groupby.SeriesGroupBy.all.html#pandas.core.groupby.SeriesGroupBy.all
    "pandas.core.groupby.SeriesGroupBy.all") raising with `object` data containing
    `pd.NA` even when `skipna=True` ([GH 37501](https://github.com/pandas-dev/pandas/issues/37501))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.rank()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank") and [`SeriesGroupBy.rank()`](../reference/api/pandas.core.groupby.SeriesGroupBy.rank.html#pandas.core.groupby.SeriesGroupBy.rank
    "pandas.core.groupby.SeriesGroupBy.rank") now supports object-dtype data ([GH
    38278](https://github.com/pandas-dev/pandas/issues/38278))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Constructing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with the `data` argument being a Python iterable that is *not*
    a NumPy `ndarray` consisting of NumPy scalars will now result in a dtype with
    a precision the maximum of the NumPy scalars; this was already the case when `data`
    is a NumPy `ndarray` ([GH 40908](https://github.com/pandas-dev/pandas/issues/40908))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add keyword `sort` to [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") to allow non-sorting of the result ([GH 39143](https://github.com/pandas-dev/pandas/issues/39143))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add keyword `dropna` to [`DataFrame.value_counts()`](../reference/api/pandas.DataFrame.value_counts.html#pandas.DataFrame.value_counts
    "pandas.DataFrame.value_counts") to allow counting rows that include `NA` values
    ([GH 41325](https://github.com/pandas-dev/pandas/issues/41325))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") will now cast results to `PeriodDtype` where possible
    instead of `object` dtype ([GH 41526](https://github.com/pandas-dev/pandas/issues/41526))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message in `corr` and `cov` methods on `Rolling`, `Expanding`,
    and `ExponentialMovingWindow` when `other` is not a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 41741](https://github.com/pandas-dev/pandas/issues/41741))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.between()`](../reference/api/pandas.Series.between.html#pandas.Series.between
    "pandas.Series.between") can now accept `left` or `right` as arguments to `inclusive`
    to include only the left or right boundary ([GH 40245](https://github.com/pandas-dev/pandas/issues/40245))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.explode()`](../reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode
    "pandas.DataFrame.explode") now supports exploding multiple columns. Its `column`
    argument now also accepts a list of str or tuples for exploding on multiple columns
    at the same time ([GH 39240](https://github.com/pandas-dev/pandas/issues/39240))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.sample()`](../reference/api/pandas.DataFrame.sample.html#pandas.DataFrame.sample
    "pandas.DataFrame.sample") now accepts the `ignore_index` argument to reset the
    index after sampling, similar to [`DataFrame.drop_duplicates()`](../reference/api/pandas.DataFrame.drop_duplicates.html#pandas.DataFrame.drop_duplicates
    "pandas.DataFrame.drop_duplicates") and [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") ([GH 38581](https://github.com/pandas-dev/pandas/issues/38581))  ###
    Custom HTTP(s) headers when reading csv or json files'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'When reading from a remote URL that is not handled by fsspec (e.g. HTTP and
    HTTPS) the dictionary passed to `storage_options` will be used to create the headers
    included in the request. This can be used to control the User-Agent header or
    send other custom headers ([GH 36688](https://github.com/pandas-dev/pandas/issues/36688)).
    For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: '### Read and write XML documents'
  prefs: []
  type: TYPE_NORMAL
- en: We added I/O support to read and render shallow versions of [XML](https://www.w3.org/standards/xml/core)
    documents with [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") and [`DataFrame.to_xml()`](../reference/api/pandas.DataFrame.to_xml.html#pandas.DataFrame.to_xml
    "pandas.DataFrame.to_xml"). Using [lxml](https://lxml.de) as parser, both XPath
    1.0 and XSLT 1.0 are available. ([GH 27554](https://github.com/pandas-dev/pandas/issues/27554))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: For more, see [Writing XML](../user_guide/io.html#io-xml) in the user guide
    on IO tools.
  prefs: []
  type: TYPE_NORMAL
- en: '### Styler enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: We provided some focused development on [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler"). See also the [Styler documentation](../user_guide/style.html)
    which has been revised and improved ([GH 39720](https://github.com/pandas-dev/pandas/issues/39720),
    [GH 39317](https://github.com/pandas-dev/pandas/issues/39317), [GH 40493](https://github.com/pandas-dev/pandas/issues/40493)).
  prefs: []
  type: TYPE_NORMAL
- en: The method [`Styler.set_table_styles()`](../reference/api/pandas.io.formats.style.Styler.set_table_styles.html#pandas.io.formats.style.Styler.set_table_styles
    "pandas.io.formats.style.Styler.set_table_styles") can now accept more natural
    CSS language for arguments, such as `'color:red;'` instead of `[('color', 'red')]`
    ([GH 39563](https://github.com/pandas-dev/pandas/issues/39563))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: The methods [`Styler.highlight_null()`](../reference/api/pandas.io.formats.style.Styler.highlight_null.html#pandas.io.formats.style.Styler.highlight_null
    "pandas.io.formats.style.Styler.highlight_null"), [`Styler.highlight_min()`](../reference/api/pandas.io.formats.style.Styler.highlight_min.html#pandas.io.formats.style.Styler.highlight_min
    "pandas.io.formats.style.Styler.highlight_min"), and [`Styler.highlight_max()`](../reference/api/pandas.io.formats.style.Styler.highlight_max.html#pandas.io.formats.style.Styler.highlight_max
    "pandas.io.formats.style.Styler.highlight_max") now allow custom CSS highlighting
    instead of the default background coloring ([GH 40242](https://github.com/pandas-dev/pandas/issues/40242))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Styler.apply()`](../reference/api/pandas.io.formats.style.Styler.apply.html#pandas.io.formats.style.Styler.apply
    "pandas.io.formats.style.Styler.apply") now accepts functions that return an `ndarray`
    when `axis=None`, making it now consistent with the `axis=0` and `axis=1` behavior
    ([GH 39359](https://github.com/pandas-dev/pandas/issues/39359))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: When incorrectly formatted CSS is given via [`Styler.apply()`](../reference/api/pandas.io.formats.style.Styler.apply.html#pandas.io.formats.style.Styler.apply
    "pandas.io.formats.style.Styler.apply") or `Styler.applymap()`, an error is now
    raised upon rendering ([GH 39660](https://github.com/pandas-dev/pandas/issues/39660))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Styler.format()`](../reference/api/pandas.io.formats.style.Styler.format.html#pandas.io.formats.style.Styler.format
    "pandas.io.formats.style.Styler.format") now accepts the keyword argument `escape`
    for optional HTML and LaTeX escaping ([GH 40388](https://github.com/pandas-dev/pandas/issues/40388),
    [GH 41619](https://github.com/pandas-dev/pandas/issues/41619))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Styler.background_gradient()`](../reference/api/pandas.io.formats.style.Styler.background_gradient.html#pandas.io.formats.style.Styler.background_gradient
    "pandas.io.formats.style.Styler.background_gradient") has gained the argument
    `gmap` to supply a specific gradient map for shading ([GH 22727](https://github.com/pandas-dev/pandas/issues/22727))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Styler.clear()`](../reference/api/pandas.io.formats.style.Styler.clear.html#pandas.io.formats.style.Styler.clear
    "pandas.io.formats.style.Styler.clear") now clears `Styler.hidden_index` and `Styler.hidden_columns`
    as well ([GH 40484](https://github.com/pandas-dev/pandas/issues/40484))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the method [`Styler.highlight_between()`](../reference/api/pandas.io.formats.style.Styler.highlight_between.html#pandas.io.formats.style.Styler.highlight_between
    "pandas.io.formats.style.Styler.highlight_between") ([GH 39821](https://github.com/pandas-dev/pandas/issues/39821))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the method [`Styler.highlight_quantile()`](../reference/api/pandas.io.formats.style.Styler.highlight_quantile.html#pandas.io.formats.style.Styler.highlight_quantile
    "pandas.io.formats.style.Styler.highlight_quantile") ([GH 40926](https://github.com/pandas-dev/pandas/issues/40926))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the method [`Styler.text_gradient()`](../reference/api/pandas.io.formats.style.Styler.text_gradient.html#pandas.io.formats.style.Styler.text_gradient
    "pandas.io.formats.style.Styler.text_gradient") ([GH 41098](https://github.com/pandas-dev/pandas/issues/41098))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the method [`Styler.set_tooltips()`](../reference/api/pandas.io.formats.style.Styler.set_tooltips.html#pandas.io.formats.style.Styler.set_tooltips
    "pandas.io.formats.style.Styler.set_tooltips") to allow hover tooltips; this can
    be used enhance interactive displays ([GH 21266](https://github.com/pandas-dev/pandas/issues/21266),
    [GH 40284](https://github.com/pandas-dev/pandas/issues/40284))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the parameter `precision` to the method [`Styler.format()`](../reference/api/pandas.io.formats.style.Styler.format.html#pandas.io.formats.style.Styler.format
    "pandas.io.formats.style.Styler.format") to control the display of floating point
    numbers ([GH 40134](https://github.com/pandas-dev/pandas/issues/40134))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") rendered HTML output now follows the [w3 HTML
    Style Guide](https://www.w3schools.com/html/html5_syntax.asp) ([GH 39626](https://github.com/pandas-dev/pandas/issues/39626))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Many features of the [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") class are now either partially or fully usable
    on a DataFrame with a non-unique indexes or columns ([GH 41143](https://github.com/pandas-dev/pandas/issues/41143))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: One has greater control of the display through separate sparsification of the
    index or columns using the [new styler options](../user_guide/options.html#options-available),
    which are also usable via [`option_context()`](../reference/api/pandas.option_context.html#pandas.option_context
    "pandas.option_context") ([GH 41142](https://github.com/pandas-dev/pandas/issues/41142))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the option `styler.render.max_elements` to avoid browser overload when
    styling large DataFrames ([GH 40712](https://github.com/pandas-dev/pandas/issues/40712))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the method [`Styler.to_latex()`](../reference/api/pandas.io.formats.style.Styler.to_latex.html#pandas.io.formats.style.Styler.to_latex
    "pandas.io.formats.style.Styler.to_latex") ([GH 21673](https://github.com/pandas-dev/pandas/issues/21673),
    [GH 42320](https://github.com/pandas-dev/pandas/issues/42320)), which also allows
    some limited CSS conversion ([GH 40731](https://github.com/pandas-dev/pandas/issues/40731))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the method [`Styler.to_html()`](../reference/api/pandas.io.formats.style.Styler.to_html.html#pandas.io.formats.style.Styler.to_html
    "pandas.io.formats.style.Styler.to_html") ([GH 13379](https://github.com/pandas-dev/pandas/issues/13379))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added the method [`Styler.set_sticky()`](../reference/api/pandas.io.formats.style.Styler.set_sticky.html#pandas.io.formats.style.Styler.set_sticky
    "pandas.io.formats.style.Styler.set_sticky") to make index and column headers
    permanently visible in scrolling HTML frames ([GH 29072](https://github.com/pandas-dev/pandas/issues/29072))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '### DataFrame constructor honors `copy=False` with dict'
  prefs: []
  type: TYPE_NORMAL
- en: When passing a dictionary to [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `copy=False`, a copy will no longer be made ([GH 32960](https://github.com/pandas-dev/pandas/issues/32960)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: '`df["A"]` remains a view on `arr`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: The default behavior when not passing `copy` will remain unchanged, i.e. a copy
    will be made.
  prefs: []
  type: TYPE_NORMAL
- en: '### PyArrow backed string data type'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve enhanced the [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype"), an extension type dedicated to string data. ([GH 39908](https://github.com/pandas-dev/pandas/issues/39908))
  prefs: []
  type: TYPE_NORMAL
- en: It is now possible to specify a `storage` keyword option to [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype"). Use pandas options or specify the dtype using `dtype='string[pyarrow]'`
    to allow the StringArray to be backed by a PyArrow array instead of a NumPy array
    of Python objects.
  prefs: []
  type: TYPE_NORMAL
- en: The PyArrow backed StringArray requires pyarrow 1.0.0 or greater to be installed.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: '`string[pyarrow]` is currently considered experimental. The implementation
    and parts of the API may change without warning.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: You can use the alias `"string[pyarrow]"` as well.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: You can also create a PyArrow backed string array using pandas options.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: The usual string accessor methods work. Where appropriate, the return type of
    the Series or columns of a DataFrame will also have string dtype.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: String accessor methods returning integers will return a value with [`Int64Dtype`](../reference/api/pandas.Int64Dtype.html#pandas.Int64Dtype
    "pandas.Int64Dtype")
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: '### Centered datetime-like rolling windows'
  prefs: []
  type: TYPE_NORMAL
- en: 'When performing rolling calculations on DataFrame and Series objects with a
    datetime-like index, a centered datetime-like window can now be used ([GH 38780](https://github.com/pandas-dev/pandas/issues/38780)).
    For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: '### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling"), [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling"), [`DataFrame.expanding()`](../reference/api/pandas.DataFrame.expanding.html#pandas.DataFrame.expanding
    "pandas.DataFrame.expanding"), and [`Series.expanding()`](../reference/api/pandas.Series.expanding.html#pandas.Series.expanding
    "pandas.Series.expanding") now support a `method` argument with a `''table''`
    option that performs the windowing operation over an entire [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"). See [Window Overview](../user_guide/window.html#window-overview)
    for performance and functional benefits ([GH 15095](https://github.com/pandas-dev/pandas/issues/15095),
    [GH 38995](https://github.com/pandas-dev/pandas/issues/38995))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExponentialMovingWindow` now support a `online` method that can perform `mean`
    calculations in an online fashion. See [Window Overview](../user_guide/window.html#window-overview)
    ([GH 41673](https://github.com/pandas-dev/pandas/issues/41673))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`MultiIndex.dtypes()`](../reference/api/pandas.MultiIndex.dtypes.html#pandas.MultiIndex.dtypes
    "pandas.MultiIndex.dtypes") ([GH 37062](https://github.com/pandas-dev/pandas/issues/37062))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `end` and `end_day` options for the `origin` argument in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") ([GH 37804](https://github.com/pandas-dev/pandas/issues/37804))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when `usecols` and `names` do not match for [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and `engine="c"` ([GH 29042](https://github.com/pandas-dev/pandas/issues/29042))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved consistency of error messages when passing an invalid `win_type` argument
    in [Window methods](../reference/window.html#api-window) ([GH 15969](https://github.com/pandas-dev/pandas/issues/15969))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query") now accepts a `dtype` argument to cast the columnar data
    from the SQL database based on user input ([GH 10285](https://github.com/pandas-dev/pandas/issues/10285))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now raising `ParserWarning` if length of header or given names does not match
    length of data when `usecols` is not specified ([GH 21768](https://github.com/pandas-dev/pandas/issues/21768))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved integer type mapping from pandas to SQLAlchemy when using [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") ([GH 35076](https://github.com/pandas-dev/pandas/issues/35076))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") now supports downcasting of nullable `ExtensionDtype` objects
    ([GH 33013](https://github.com/pandas-dev/pandas/issues/33013))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for dict-like names in `MultiIndex.set_names` and `MultiIndex.rename`
    ([GH 20421](https://github.com/pandas-dev/pandas/issues/20421))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") can now auto-detect .xlsb files and older .xls files ([GH
    35416](https://github.com/pandas-dev/pandas/issues/35416), [GH 41225](https://github.com/pandas-dev/pandas/issues/41225))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") now accepts an `if_sheet_exists` parameter to control the
    behavior of append mode when writing to existing sheets ([GH 40230](https://github.com/pandas-dev/pandas/issues/40230))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Rolling.sum()`](../reference/api/pandas.core.window.rolling.Rolling.sum.html#pandas.core.window.rolling.Rolling.sum
    "pandas.core.window.rolling.Rolling.sum"), [`Expanding.sum()`](../reference/api/pandas.core.window.expanding.Expanding.sum.html#pandas.core.window.expanding.Expanding.sum
    "pandas.core.window.expanding.Expanding.sum"), [`Rolling.mean()`](../reference/api/pandas.core.window.rolling.Rolling.mean.html#pandas.core.window.rolling.Rolling.mean
    "pandas.core.window.rolling.Rolling.mean"), [`Expanding.mean()`](../reference/api/pandas.core.window.expanding.Expanding.mean.html#pandas.core.window.expanding.Expanding.mean
    "pandas.core.window.expanding.Expanding.mean"), [`ExponentialMovingWindow.mean()`](../reference/api/pandas.core.window.ewm.ExponentialMovingWindow.mean.html#pandas.core.window.ewm.ExponentialMovingWindow.mean
    "pandas.core.window.ewm.ExponentialMovingWindow.mean"), [`Rolling.median()`](../reference/api/pandas.core.window.rolling.Rolling.median.html#pandas.core.window.rolling.Rolling.median
    "pandas.core.window.rolling.Rolling.median"), [`Expanding.median()`](../reference/api/pandas.core.window.expanding.Expanding.median.html#pandas.core.window.expanding.Expanding.median
    "pandas.core.window.expanding.Expanding.median"), [`Rolling.max()`](../reference/api/pandas.core.window.rolling.Rolling.max.html#pandas.core.window.rolling.Rolling.max
    "pandas.core.window.rolling.Rolling.max"), [`Expanding.max()`](../reference/api/pandas.core.window.expanding.Expanding.max.html#pandas.core.window.expanding.Expanding.max
    "pandas.core.window.expanding.Expanding.max"), [`Rolling.min()`](../reference/api/pandas.core.window.rolling.Rolling.min.html#pandas.core.window.rolling.Rolling.min
    "pandas.core.window.rolling.Rolling.min"), and [`Expanding.min()`](../reference/api/pandas.core.window.expanding.Expanding.min.html#pandas.core.window.expanding.Expanding.min
    "pandas.core.window.expanding.Expanding.min") now support [Numba](http://numba.pydata.org/)
    execution with the `engine` keyword ([GH 38895](https://github.com/pandas-dev/pandas/issues/38895),
    [GH 41267](https://github.com/pandas-dev/pandas/issues/41267))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") can now accept NumPy unary operators as strings, e.g.
    `df.apply("sqrt")`, which was already the case for [`Series.apply()`](../reference/api/pandas.Series.apply.html#pandas.Series.apply
    "pandas.Series.apply") ([GH 39116](https://github.com/pandas-dev/pandas/issues/39116))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") can now accept non-callable DataFrame properties as
    strings, e.g. `df.apply("size")`, which was already the case for [`Series.apply()`](../reference/api/pandas.Series.apply.html#pandas.Series.apply
    "pandas.Series.apply") ([GH 39116](https://github.com/pandas-dev/pandas/issues/39116))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.applymap()`](../reference/api/pandas.DataFrame.applymap.html#pandas.DataFrame.applymap
    "pandas.DataFrame.applymap") can now accept kwargs to pass on to the user-provided
    `func` ([GH 39987](https://github.com/pandas-dev/pandas/issues/39987))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") indexer to `iloc` is now disallowed for `Series.__getitem__()`
    and `DataFrame.__getitem__()` ([GH 39004](https://github.com/pandas-dev/pandas/issues/39004))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.apply()`](../reference/api/pandas.Series.apply.html#pandas.Series.apply
    "pandas.Series.apply") can now accept list-like or dictionary-like arguments that
    aren’t lists or dictionaries, e.g. `ser.apply(np.array(["sum", "mean"]))`, which
    was already the case for [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") ([GH 39140](https://github.com/pandas-dev/pandas/issues/39140))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") can now accept a categorical column for the argument
    `c` ([GH 12380](https://github.com/pandas-dev/pandas/issues/12380), [GH 31357](https://github.com/pandas-dev/pandas/issues/31357))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") now raises a helpful error message when the Series has a
    [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    and the indexer has too many dimensions ([GH 35349](https://github.com/pandas-dev/pandas/issues/35349))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") now supports reading data from compressed files ([GH 26599](https://github.com/pandas-dev/pandas/issues/26599))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for parsing `ISO 8601`-like timestamps with negative signs to
    [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    ([GH 37172](https://github.com/pandas-dev/pandas/issues/37172))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for unary operators in `FloatingArray` ([GH 38749](https://github.com/pandas-dev/pandas/issues/38749))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex "pandas.RangeIndex")
    can now be constructed by passing a `range` object directly e.g. `pd.RangeIndex(range(3))`
    ([GH 12067](https://github.com/pandas-dev/pandas/issues/12067))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.round()`](../reference/api/pandas.Series.round.html#pandas.Series.round
    "pandas.Series.round") and [`DataFrame.round()`](../reference/api/pandas.DataFrame.round.html#pandas.DataFrame.round
    "pandas.DataFrame.round") now work with nullable integer and floating dtypes ([GH
    38844](https://github.com/pandas-dev/pandas/issues/38844))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    and [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    expose the argument `encoding_errors` to control how encoding errors are handled
    ([GH 39450](https://github.com/pandas-dev/pandas/issues/39450))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.any()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any"), [`SeriesGroupBy.any()`](../reference/api/pandas.core.groupby.SeriesGroupBy.any.html#pandas.core.groupby.SeriesGroupBy.any
    "pandas.core.groupby.SeriesGroupBy.any"), [`DataFrameGroupBy.all()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all"), and [`SeriesGroupBy.all()`](../reference/api/pandas.core.groupby.SeriesGroupBy.all.html#pandas.core.groupby.SeriesGroupBy.all
    "pandas.core.groupby.SeriesGroupBy.all") use Kleene logic with nullable data types
    ([GH 37506](https://github.com/pandas-dev/pandas/issues/37506))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.any()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any"), [`SeriesGroupBy.any()`](../reference/api/pandas.core.groupby.SeriesGroupBy.any.html#pandas.core.groupby.SeriesGroupBy.any
    "pandas.core.groupby.SeriesGroupBy.any"), [`DataFrameGroupBy.all()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all"), and [`SeriesGroupBy.all()`](../reference/api/pandas.core.groupby.SeriesGroupBy.all.html#pandas.core.groupby.SeriesGroupBy.all
    "pandas.core.groupby.SeriesGroupBy.all") return a `BooleanDtype` for columns with
    nullable data types ([GH 33449](https://github.com/pandas-dev/pandas/issues/33449))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.any()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any"), [`SeriesGroupBy.any()`](../reference/api/pandas.core.groupby.SeriesGroupBy.any.html#pandas.core.groupby.SeriesGroupBy.any
    "pandas.core.groupby.SeriesGroupBy.any"), [`DataFrameGroupBy.all()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all"), and [`SeriesGroupBy.all()`](../reference/api/pandas.core.groupby.SeriesGroupBy.all.html#pandas.core.groupby.SeriesGroupBy.all
    "pandas.core.groupby.SeriesGroupBy.all") raising with `object` data containing
    `pd.NA` even when `skipna=True` ([GH 37501](https://github.com/pandas-dev/pandas/issues/37501))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.rank()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank") and [`SeriesGroupBy.rank()`](../reference/api/pandas.core.groupby.SeriesGroupBy.rank.html#pandas.core.groupby.SeriesGroupBy.rank
    "pandas.core.groupby.SeriesGroupBy.rank") now supports object-dtype data ([GH
    38278](https://github.com/pandas-dev/pandas/issues/38278))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Constructing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with the `data` argument being a Python iterable that is *not*
    a NumPy `ndarray` consisting of NumPy scalars will now result in a dtype with
    a precision the maximum of the NumPy scalars; this was already the case when `data`
    is a NumPy `ndarray` ([GH 40908](https://github.com/pandas-dev/pandas/issues/40908))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add keyword `sort` to [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") to allow non-sorting of the result ([GH 39143](https://github.com/pandas-dev/pandas/issues/39143))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add keyword `dropna` to [`DataFrame.value_counts()`](../reference/api/pandas.DataFrame.value_counts.html#pandas.DataFrame.value_counts
    "pandas.DataFrame.value_counts") to allow counting rows that include `NA` values
    ([GH 41325](https://github.com/pandas-dev/pandas/issues/41325))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") will now cast results to `PeriodDtype` where possible
    instead of `object` dtype ([GH 41526](https://github.com/pandas-dev/pandas/issues/41526))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message in `corr` and `cov` methods on `Rolling`, `Expanding`,
    and `ExponentialMovingWindow` when `other` is not a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 41741](https://github.com/pandas-dev/pandas/issues/41741))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.between()`](../reference/api/pandas.Series.between.html#pandas.Series.between
    "pandas.Series.between") can now accept `left` or `right` as arguments to `inclusive`
    to include only the left or right boundary ([GH 40245](https://github.com/pandas-dev/pandas/issues/40245))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.explode()`](../reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode
    "pandas.DataFrame.explode") now supports exploding multiple columns. Its `column`
    argument now also accepts a list of str or tuples for exploding on multiple columns
    at the same time ([GH 39240](https://github.com/pandas-dev/pandas/issues/39240))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.sample()`](../reference/api/pandas.DataFrame.sample.html#pandas.DataFrame.sample
    "pandas.DataFrame.sample") now accepts the `ignore_index` argument to reset the
    index after sampling, similar to [`DataFrame.drop_duplicates()`](../reference/api/pandas.DataFrame.drop_duplicates.html#pandas.DataFrame.drop_duplicates
    "pandas.DataFrame.drop_duplicates") and [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") ([GH 38581](https://github.com/pandas-dev/pandas/issues/38581))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Notable bug fixes'
  prefs: []
  type: TYPE_NORMAL
- en: These are bug fixes that might have notable behavior changes.
  prefs: []
  type: TYPE_NORMAL
- en: '### `Categorical.unique` now always maintains same dtype as original'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, when calling `Categorical.unique()` with categorical data, unused
    categories in the new array would be removed, making the dtype of the new array
    different than the original ([GH 18291](https://github.com/pandas-dev/pandas/issues/18291))
  prefs: []
  type: TYPE_NORMAL
- en: 'As an example of this, given:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]  ### Preserve dtypes in [`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first")'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first") will now preserve dtypes ([GH 7509](https://github.com/pandas-dev/pandas/issues/7509))'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]  ### Groupby methods agg and transform no longer changes return dtype
    for callables'
  prefs: []
  type: TYPE_NORMAL
- en: Previously the methods [`DataFrameGroupBy.aggregate()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.aggregate.html#pandas.core.groupby.DataFrameGroupBy.aggregate
    "pandas.core.groupby.DataFrameGroupBy.aggregate"), [`SeriesGroupBy.aggregate()`](../reference/api/pandas.core.groupby.SeriesGroupBy.aggregate.html#pandas.core.groupby.SeriesGroupBy.aggregate
    "pandas.core.groupby.SeriesGroupBy.aggregate"), [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform"), and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") might cast the result dtype when
    the argument `func` is callable, possibly leading to undesirable results ([GH
    21240](https://github.com/pandas-dev/pandas/issues/21240)). The cast would occur
    if the result is numeric and casting back to the input dtype does not change any
    values as measured by `np.allclose`. Now no such casting occurs.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]  ### `float` result for [`DataFrameGroupBy.mean()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean"), [`DataFrameGroupBy.median()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.median.html#pandas.core.groupby.DataFrameGroupBy.median
    "pandas.core.groupby.DataFrameGroupBy.median"), and `GDataFrameGroupBy.var()`,
    [`SeriesGroupBy.mean()`](../reference/api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean"), [`SeriesGroupBy.median()`](../reference/api/pandas.core.groupby.SeriesGroupBy.median.html#pandas.core.groupby.SeriesGroupBy.median
    "pandas.core.groupby.SeriesGroupBy.median"), and [`SeriesGroupBy.var()`](../reference/api/pandas.core.groupby.SeriesGroupBy.var.html#pandas.core.groupby.SeriesGroupBy.var
    "pandas.core.groupby.SeriesGroupBy.var")'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, these methods could result in different dtypes depending on the
    input values. Now, these methods will always return a float dtype. ([GH 41137](https://github.com/pandas-dev/pandas/issues/41137))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]  ### Try operating inplace when setting values with `loc` and `iloc`'
  prefs: []
  type: TYPE_NORMAL
- en: When setting an entire column using `loc` or `iloc`, pandas will try to insert
    the values into the existing data rather than create an entirely new array.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: In both the new and old behavior, the data in `values` is overwritten, but in
    the old behavior the dtype of `df["A"]` changed to `int64`.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: In pandas 1.3.0, `df` continues to share data with `values`
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]  ### Never operate inplace when setting `frame[keys] = values`'
  prefs: []
  type: TYPE_NORMAL
- en: When setting multiple columns using `frame[keys] = values` new arrays will replace
    pre-existing arrays for these keys, which will *not* be over-written ([GH 39510](https://github.com/pandas-dev/pandas/issues/39510)).
    As a result, the columns will retain the dtype(s) of `values`, never casting to
    the dtypes of the existing arrays.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: 'In the old behavior, `5` was cast to `float64` and inserted into the existing
    array backing `df`:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: 'In the new behavior, we get a new array, and retain an integer-dtyped `5`:'
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]  ### Consistent casting with setting into Boolean Series'
  prefs: []
  type: TYPE_NORMAL
- en: Setting non-boolean values into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `dtype=bool` now consistently casts to `dtype=object` ([GH
    38709](https://github.com/pandas-dev/pandas/issues/38709))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]  ### DataFrameGroupBy.rolling and SeriesGroupBy.rolling no longer return
    grouped-by column in values'
  prefs: []
  type: TYPE_NORMAL
- en: The group-by column will now be dropped from the result of a `groupby.rolling`
    operation ([GH 32262](https://github.com/pandas-dev/pandas/issues/32262))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]  ### Removed artificial truncation in rolling variance and standard
    deviation'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Rolling.std()`](../reference/api/pandas.core.window.rolling.Rolling.std.html#pandas.core.window.rolling.Rolling.std
    "pandas.core.window.rolling.Rolling.std") and [`Rolling.var()`](../reference/api/pandas.core.window.rolling.Rolling.var.html#pandas.core.window.rolling.Rolling.var
    "pandas.core.window.rolling.Rolling.var") will no longer artificially truncate
    results that are less than `~1e-8` and `~1e-15` respectively to zero ([GH 37051](https://github.com/pandas-dev/pandas/issues/37051),
    [GH 40448](https://github.com/pandas-dev/pandas/issues/40448), [GH 39872](https://github.com/pandas-dev/pandas/issues/39872)).'
  prefs: []
  type: TYPE_NORMAL
- en: However, floating point artifacts may now exist in the results when rolling
    over larger values.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]  ### DataFrameGroupBy.rolling and SeriesGroupBy.rolling with MultiIndex
    no longer drop levels in the result'
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrameGroupBy.rolling()` and `SeriesGroupBy.rolling()` will no longer drop
    levels of a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") in the result. This can lead to a perceived duplication of
    levels in the resulting [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"), but this change restores the behavior that was present in
    version 1.1.3 ([GH 38787](https://github.com/pandas-dev/pandas/issues/38787),
    [GH 38523](https://github.com/pandas-dev/pandas/issues/38523)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]  ### `Categorical.unique` now always maintains same dtype as original'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, when calling `Categorical.unique()` with categorical data, unused
    categories in the new array would be removed, making the dtype of the new array
    different than the original ([GH 18291](https://github.com/pandas-dev/pandas/issues/18291))
  prefs: []
  type: TYPE_NORMAL
- en: 'As an example of this, given:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE93]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE94]'
  prefs: []
  type: TYPE_PRE
- en: '### Preserve dtypes in [`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first")'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first") will now preserve dtypes ([GH 7509](https://github.com/pandas-dev/pandas/issues/7509))'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE96]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE97]'
  prefs: []
  type: TYPE_PRE
- en: '### Groupby methods agg and transform no longer changes return dtype for callables'
  prefs: []
  type: TYPE_NORMAL
- en: Previously the methods [`DataFrameGroupBy.aggregate()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.aggregate.html#pandas.core.groupby.DataFrameGroupBy.aggregate
    "pandas.core.groupby.DataFrameGroupBy.aggregate"), [`SeriesGroupBy.aggregate()`](../reference/api/pandas.core.groupby.SeriesGroupBy.aggregate.html#pandas.core.groupby.SeriesGroupBy.aggregate
    "pandas.core.groupby.SeriesGroupBy.aggregate"), [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform"), and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") might cast the result dtype when
    the argument `func` is callable, possibly leading to undesirable results ([GH
    21240](https://github.com/pandas-dev/pandas/issues/21240)). The cast would occur
    if the result is numeric and casting back to the input dtype does not change any
    values as measured by `np.allclose`. Now no such casting occurs.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE98]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE99]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE100]'
  prefs: []
  type: TYPE_PRE
- en: '### `float` result for [`DataFrameGroupBy.mean()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean"), [`DataFrameGroupBy.median()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.median.html#pandas.core.groupby.DataFrameGroupBy.median
    "pandas.core.groupby.DataFrameGroupBy.median"), and `GDataFrameGroupBy.var()`,
    [`SeriesGroupBy.mean()`](../reference/api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean"), [`SeriesGroupBy.median()`](../reference/api/pandas.core.groupby.SeriesGroupBy.median.html#pandas.core.groupby.SeriesGroupBy.median
    "pandas.core.groupby.SeriesGroupBy.median"), and [`SeriesGroupBy.var()`](../reference/api/pandas.core.groupby.SeriesGroupBy.var.html#pandas.core.groupby.SeriesGroupBy.var
    "pandas.core.groupby.SeriesGroupBy.var")'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, these methods could result in different dtypes depending on the
    input values. Now, these methods will always return a float dtype. ([GH 41137](https://github.com/pandas-dev/pandas/issues/41137))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE101]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE102]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE103]'
  prefs: []
  type: TYPE_PRE
- en: '### Try operating inplace when setting values with `loc` and `iloc`'
  prefs: []
  type: TYPE_NORMAL
- en: When setting an entire column using `loc` or `iloc`, pandas will try to insert
    the values into the existing data rather than create an entirely new array.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE104]'
  prefs: []
  type: TYPE_PRE
- en: In both the new and old behavior, the data in `values` is overwritten, but in
    the old behavior the dtype of `df["A"]` changed to `int64`.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE105]'
  prefs: []
  type: TYPE_PRE
- en: In pandas 1.3.0, `df` continues to share data with `values`
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE106]'
  prefs: []
  type: TYPE_PRE
- en: '### Never operate inplace when setting `frame[keys] = values`'
  prefs: []
  type: TYPE_NORMAL
- en: When setting multiple columns using `frame[keys] = values` new arrays will replace
    pre-existing arrays for these keys, which will *not* be over-written ([GH 39510](https://github.com/pandas-dev/pandas/issues/39510)).
    As a result, the columns will retain the dtype(s) of `values`, never casting to
    the dtypes of the existing arrays.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE107]'
  prefs: []
  type: TYPE_PRE
- en: 'In the old behavior, `5` was cast to `float64` and inserted into the existing
    array backing `df`:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE108]'
  prefs: []
  type: TYPE_PRE
- en: 'In the new behavior, we get a new array, and retain an integer-dtyped `5`:'
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE109]'
  prefs: []
  type: TYPE_PRE
- en: '### Consistent casting with setting into Boolean Series'
  prefs: []
  type: TYPE_NORMAL
- en: Setting non-boolean values into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `dtype=bool` now consistently casts to `dtype=object` ([GH
    38709](https://github.com/pandas-dev/pandas/issues/38709))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE110]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE111]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE112]'
  prefs: []
  type: TYPE_PRE
- en: '### DataFrameGroupBy.rolling and SeriesGroupBy.rolling no longer return grouped-by
    column in values'
  prefs: []
  type: TYPE_NORMAL
- en: The group-by column will now be dropped from the result of a `groupby.rolling`
    operation ([GH 32262](https://github.com/pandas-dev/pandas/issues/32262))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE113]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE114]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE115]'
  prefs: []
  type: TYPE_PRE
- en: '### Removed artificial truncation in rolling variance and standard deviation'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Rolling.std()`](../reference/api/pandas.core.window.rolling.Rolling.std.html#pandas.core.window.rolling.Rolling.std
    "pandas.core.window.rolling.Rolling.std") and [`Rolling.var()`](../reference/api/pandas.core.window.rolling.Rolling.var.html#pandas.core.window.rolling.Rolling.var
    "pandas.core.window.rolling.Rolling.var") will no longer artificially truncate
    results that are less than `~1e-8` and `~1e-15` respectively to zero ([GH 37051](https://github.com/pandas-dev/pandas/issues/37051),
    [GH 40448](https://github.com/pandas-dev/pandas/issues/40448), [GH 39872](https://github.com/pandas-dev/pandas/issues/39872)).'
  prefs: []
  type: TYPE_NORMAL
- en: However, floating point artifacts may now exist in the results when rolling
    over larger values.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE116]'
  prefs: []
  type: TYPE_PRE
- en: '### DataFrameGroupBy.rolling and SeriesGroupBy.rolling with MultiIndex no longer
    drop levels in the result'
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrameGroupBy.rolling()` and `SeriesGroupBy.rolling()` will no longer drop
    levels of a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") in the result. This can lead to a perceived duplication of
    levels in the resulting [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"), but this change restores the behavior that was present in
    version 1.1.3 ([GH 38787](https://github.com/pandas-dev/pandas/issues/38787),
    [GH 38523](https://github.com/pandas-dev/pandas/issues/38523)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE117]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE118]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE119]'
  prefs: []
  type: TYPE_PRE
- en: '## Backwards incompatible API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '### Increased minimum versions for dependencies'
  prefs: []
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated. If installed,
    we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.17.3 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytz | 2017.3 | X |  |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.7.3 | X |  |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.2.1 |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.7.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytest (dev) | 6.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| mypy (dev) | 0.812 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| setuptools | 38.6.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.4.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 0.7.4 |  |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 0.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 4.3.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 2.2.3 |  |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.46.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 3.0.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 0.17.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 0.8.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.5.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 0.4.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.2.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.3.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| tabulate | 0.8.7 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.12.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlrd | 1.2.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 1.0.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlwt | 1.3.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas-gbq | 0.12.0 |  |'
  prefs: []
  type: TYPE_TB
- en: 'See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.  ### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: Partially initialized [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") objects (i.e. those with `categories=None`) will no
    longer compare as equal to fully initialized dtype objects ([GH 38516](https://github.com/pandas-dev/pandas/issues/38516))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Accessing `_constructor_expanddim` on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and `_constructor_sliced` on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") now raise an `AttributeError`. Previously a `NotImplementedError`
    was raised ([GH 38782](https://github.com/pandas-dev/pandas/issues/38782))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added new `engine` and `**engine_kwargs` parameters to [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") to support other future “SQL engines”. Currently we
    still only use `SQLAlchemy` under the hood, but more engines are planned to be
    supported such as [turbodbc](https://turbodbc.readthedocs.io/en/latest/) ([GH
    36893](https://github.com/pandas-dev/pandas/issues/36893))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed redundant `freq` from [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") string representation ([GH 41653](https://github.com/pandas-dev/pandas/issues/41653))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExtensionDtype.construct_array_type()` is now a required method instead of
    an optional one for `ExtensionDtype` subclasses ([GH 24860](https://github.com/pandas-dev/pandas/issues/24860))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Calling `hash` on non-hashable pandas objects will now raise `TypeError` with
    the built-in error message (e.g. `unhashable type: ''Series''`). Previously it
    would raise a custom message such as `''Series'' objects are mutable, thus they
    cannot be hashed`. Furthermore, `isinstance(<Series>, abc.collections.Hashable)`
    will now return `False` ([GH 40013](https://github.com/pandas-dev/pandas/issues/40013))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Styler.from_custom_template()`](../reference/api/pandas.io.formats.style.Styler.from_custom_template.html#pandas.io.formats.style.Styler.from_custom_template
    "pandas.io.formats.style.Styler.from_custom_template") now has two new arguments
    for template names, and removed the old `name`, due to template inheritance having
    been introducing for better parsing ([GH 42053](https://github.com/pandas-dev/pandas/issues/42053)).
    Subclassing modifications to Styler attributes are also needed.  ### Build'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Documentation in `.pptx` and `.pdf` formats are no longer included in wheels
    or source distributions. ([GH 30741](https://github.com/pandas-dev/pandas/issues/30741))  ###
    Increased minimum versions for dependencies'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated. If installed,
    we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.17.3 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytz | 2017.3 | X |  |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.7.3 | X |  |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.2.1 |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.7.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytest (dev) | 6.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| mypy (dev) | 0.812 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| setuptools | 38.6.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.4.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 0.7.4 |  |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 0.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 4.3.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 2.2.3 |  |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.46.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 3.0.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 0.17.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 0.8.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.5.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 0.4.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.2.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.3.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| tabulate | 0.8.7 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.12.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlrd | 1.2.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 1.0.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlwt | 1.3.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas-gbq | 0.12.0 |  |'
  prefs: []
  type: TYPE_TB
- en: See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: '### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: Partially initialized [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") objects (i.e. those with `categories=None`) will no
    longer compare as equal to fully initialized dtype objects ([GH 38516](https://github.com/pandas-dev/pandas/issues/38516))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Accessing `_constructor_expanddim` on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and `_constructor_sliced` on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") now raise an `AttributeError`. Previously a `NotImplementedError`
    was raised ([GH 38782](https://github.com/pandas-dev/pandas/issues/38782))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added new `engine` and `**engine_kwargs` parameters to [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") to support other future “SQL engines”. Currently we
    still only use `SQLAlchemy` under the hood, but more engines are planned to be
    supported such as [turbodbc](https://turbodbc.readthedocs.io/en/latest/) ([GH
    36893](https://github.com/pandas-dev/pandas/issues/36893))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed redundant `freq` from [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") string representation ([GH 41653](https://github.com/pandas-dev/pandas/issues/41653))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExtensionDtype.construct_array_type()` is now a required method instead of
    an optional one for `ExtensionDtype` subclasses ([GH 24860](https://github.com/pandas-dev/pandas/issues/24860))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Calling `hash` on non-hashable pandas objects will now raise `TypeError` with
    the built-in error message (e.g. `unhashable type: ''Series''`). Previously it
    would raise a custom message such as `''Series'' objects are mutable, thus they
    cannot be hashed`. Furthermore, `isinstance(<Series>, abc.collections.Hashable)`
    will now return `False` ([GH 40013](https://github.com/pandas-dev/pandas/issues/40013))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Styler.from_custom_template()`](../reference/api/pandas.io.formats.style.Styler.from_custom_template.html#pandas.io.formats.style.Styler.from_custom_template
    "pandas.io.formats.style.Styler.from_custom_template") now has two new arguments
    for template names, and removed the old `name`, due to template inheritance having
    been introducing for better parsing ([GH 42053](https://github.com/pandas-dev/pandas/issues/42053)).
    Subclassing modifications to Styler attributes are also needed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Build'
  prefs: []
  type: TYPE_NORMAL
- en: Documentation in `.pptx` and `.pdf` formats are no longer included in wheels
    or source distributions. ([GH 30741](https://github.com/pandas-dev/pandas/issues/30741))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: '### Deprecated dropping nuisance columns in DataFrame reductions and DataFrameGroupBy
    operations'
  prefs: []
  type: TYPE_NORMAL
- en: Calling a reduction (e.g. `.min`, `.max`, `.sum`) on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `numeric_only=None` (the default), columns where the
    reduction raises a `TypeError` are silently ignored and dropped from the result.
  prefs: []
  type: TYPE_NORMAL
- en: This behavior is deprecated. In a future version, the `TypeError` will be raised,
    and users will need to select only valid columns before calling the function.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE120]'
  prefs: []
  type: TYPE_PRE
- en: '*Old behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE121]'
  prefs: []
  type: TYPE_PRE
- en: '*Future behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE122]'
  prefs: []
  type: TYPE_PRE
- en: Similarly, when applying a function to `DataFrameGroupBy`, columns on which
    the function raises `TypeError` are currently silently ignored and dropped from
    the result.
  prefs: []
  type: TYPE_NORMAL
- en: This behavior is deprecated. In a future version, the `TypeError` will be raised,
    and users will need to select only valid columns before calling the function.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE123]'
  prefs: []
  type: TYPE_PRE
- en: '*Old behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE124]'
  prefs: []
  type: TYPE_PRE
- en: '*Future behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE125]  ### Other Deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: Deprecated allowing scalars to be passed to the [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") constructor ([GH 38433](https://github.com/pandas-dev/pandas/issues/38433))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated constructing [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") without passing list-like data ([GH 38944](https://github.com/pandas-dev/pandas/issues/38944))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing subclass-specific keyword arguments in the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") constructor, use the specific subclass directly instead ([GH 14093](https://github.com/pandas-dev/pandas/issues/14093),
    [GH 21311](https://github.com/pandas-dev/pandas/issues/21311), [GH 22315](https://github.com/pandas-dev/pandas/issues/22315),
    [GH 26974](https://github.com/pandas-dev/pandas/issues/26974))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `astype()` method of datetimelike (`timedelta64[ns]`, `datetime64[ns]`,
    `Datetime64TZDtype`, `PeriodDtype`) to convert to integer dtypes, use `values.view(...)`
    instead ([GH 38544](https://github.com/pandas-dev/pandas/issues/38544)). This
    deprecation was later reverted in pandas 1.4.0.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `MultiIndex.is_lexsorted()` and `MultiIndex.lexsort_depth()`, use
    `MultiIndex.is_monotonic_increasing()` instead ([GH 32259](https://github.com/pandas-dev/pandas/issues/32259))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated keyword `try_cast` in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where"), [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask"), [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where"), [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask"); cast results manually if desired ([GH 38836](https://github.com/pandas-dev/pandas/issues/38836))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated comparison of [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") objects with `datetime.date` objects. Instead of e.g. `ts
    <= mydate` use `ts <= pd.Timestamp(mydate)` or `ts.date() <= mydate` ([GH 36131](https://github.com/pandas-dev/pandas/issues/36131))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Rolling.win_type` returning `"freq"` ([GH 38963](https://github.com/pandas-dev/pandas/issues/38963))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Rolling.is_datetimelike` ([GH 38963](https://github.com/pandas-dev/pandas/issues/38963))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") indexer for `Series.__setitem__()` and `DataFrame.__setitem__()`
    ([GH 39004](https://github.com/pandas-dev/pandas/issues/39004))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `ExponentialMovingWindow.vol()` ([GH 39220](https://github.com/pandas-dev/pandas/issues/39220))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using `.astype` to convert between `datetime64[ns]` dtype and [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") is deprecated and will raise in a future version, use
    `obj.tz_localize` or `obj.dt.tz_localize` instead ([GH 38622](https://github.com/pandas-dev/pandas/issues/38622))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated casting `datetime.date` objects to `datetime64` when used as `fill_value`
    in [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack"), [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift"), [`Series.shift()`](../reference/api/pandas.Series.shift.html#pandas.Series.shift
    "pandas.Series.shift"), and [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex"), pass `pd.Timestamp(dateobj)` instead ([GH 39767](https://github.com/pandas-dev/pandas/issues/39767))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Styler.set_na_rep()` and `Styler.set_precision()` in favor of [`Styler.format()`](../reference/api/pandas.io.formats.style.Styler.format.html#pandas.io.formats.style.Styler.format
    "pandas.io.formats.style.Styler.format") with `na_rep` and `precision` as existing
    and new input arguments respectively ([GH 40134](https://github.com/pandas-dev/pandas/issues/40134),
    [GH 40425](https://github.com/pandas-dev/pandas/issues/40425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Styler.where()` in favor of using an alternative formulation with
    `Styler.applymap()` ([GH 40821](https://github.com/pandas-dev/pandas/issues/40821))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing partial failure in [`Series.transform()`](../reference/api/pandas.Series.transform.html#pandas.Series.transform
    "pandas.Series.transform") and [`DataFrame.transform()`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform") when `func` is list-like or dict-like and raises
    anything but `TypeError`; `func` raising anything but a `TypeError` will raise
    in a future version ([GH 40211](https://github.com/pandas-dev/pandas/issues/40211))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated arguments `error_bad_lines` and `warn_bad_lines` in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") in favor of argument `on_bad_lines` ([GH 15122](https://github.com/pandas-dev/pandas/issues/15122))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deprecated support for `np.ma.mrecords.MaskedRecords` in the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor, pass `{name: data[name] for name in data.dtype.names}`
    instead ([GH 40363](https://github.com/pandas-dev/pandas/issues/40363))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated using [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge"), [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge"), and [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") on a different number of levels ([GH 34862](https://github.com/pandas-dev/pandas/issues/34862))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the use of `**kwargs` in [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter"); use the keyword argument `engine_kwargs` instead ([GH 40430](https://github.com/pandas-dev/pandas/issues/40430))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `level` keyword for [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") aggregations; use groupby instead ([GH 39983](https://github.com/pandas-dev/pandas/issues/39983))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `inplace` parameter of `Categorical.remove_categories()`, `Categorical.add_categories()`,
    `Categorical.reorder_categories()`, `Categorical.rename_categories()`, `Categorical.set_categories()`
    and will be removed in a future version ([GH 37643](https://github.com/pandas-dev/pandas/issues/37643))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    producing duplicated columns through the `suffixes` keyword and already existing
    columns ([GH 22818](https://github.com/pandas-dev/pandas/issues/22818))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated setting `Categorical._codes`, create a new [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") with the desired codes instead ([GH 40606](https://github.com/pandas-dev/pandas/issues/40606))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `convert_float` optional argument in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") and [`ExcelFile.parse()`](../reference/api/pandas.ExcelFile.parse.html#pandas.ExcelFile.parse
    "pandas.ExcelFile.parse") ([GH 41127](https://github.com/pandas-dev/pandas/issues/41127))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of `DatetimeIndex.union()` with mixed timezones; in a future
    version both will be cast to UTC instead of object dtype ([GH 39328](https://github.com/pandas-dev/pandas/issues/39328))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated using `usecols` with out of bounds indices for [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `engine="c"` ([GH 25623](https://github.com/pandas-dev/pandas/issues/25623))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deprecated special treatment of lists with first element a Categorical in the
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor; pass as `pd.DataFrame({col: categorical, ...})` instead ([GH 38845](https://github.com/pandas-dev/pandas/issues/38845))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor when a `dtype` is passed and the data cannot be
    cast to that dtype. In a future version, this will raise instead of being silently
    ignored ([GH 24435](https://github.com/pandas-dev/pandas/issues/24435))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `Timestamp.freq` attribute. For the properties that use it (`is_month_start`,
    `is_month_end`, `is_quarter_start`, `is_quarter_end`, `is_year_start`, `is_year_end`),
    when you have a `freq`, use e.g. `freq.is_month_start(ts)` ([GH 15146](https://github.com/pandas-dev/pandas/issues/15146))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated construction of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `DatetimeTZDtype` data and `datetime64[ns]` dtype. Use
    `Series(data).dt.tz_localize(None)` instead ([GH 41555](https://github.com/pandas-dev/pandas/issues/41555),
    [GH 33401](https://github.com/pandas-dev/pandas/issues/33401))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") construction with large-integer values and small-integer dtype
    silently overflowing; use `Series(data).astype(dtype)` instead ([GH 41734](https://github.com/pandas-dev/pandas/issues/41734))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") construction with floating data and integer dtype casting
    even when lossy; in a future version this will remain floating, matching [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") behavior ([GH 41770](https://github.com/pandas-dev/pandas/issues/41770))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated inference of `timedelta64[ns]`, `datetime64[ns]`, or `DatetimeTZDtype`
    dtypes in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    construction when data containing strings is passed and no `dtype` is passed ([GH
    33558](https://github.com/pandas-dev/pandas/issues/33558))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In a future version, constructing [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `datetime64[ns]` data and `DatetimeTZDtype` will treat
    the data as wall-times instead of as UTC times (matching DatetimeIndex behavior).
    To treat the data as UTC times, use `pd.Series(data).dt.tz_localize("UTC").dt.tz_convert(dtype.tz)`
    or `pd.Series(data.view("int64"), dtype=dtype)` ([GH 33401](https://github.com/pandas-dev/pandas/issues/33401))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing lists as `key` to [`DataFrame.xs()`](../reference/api/pandas.DataFrame.xs.html#pandas.DataFrame.xs
    "pandas.DataFrame.xs") and [`Series.xs()`](../reference/api/pandas.Series.xs.html#pandas.Series.xs
    "pandas.Series.xs") ([GH 41760](https://github.com/pandas-dev/pandas/issues/41760))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated boolean arguments of `inclusive` in [`Series.between()`](../reference/api/pandas.Series.between.html#pandas.Series.between
    "pandas.Series.between") to have `{"left", "right", "neither", "both"}` as standard
    argument values ([GH 40628](https://github.com/pandas-dev/pandas/issues/40628))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deprecated passing arguments as positional for all of the following, with exceptions
    noted ([GH 41485](https://github.com/pandas-dev/pandas/issues/41485)):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    (other than `objs`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    (other than `filepath_or_buffer`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") (other than `filepath_or_buffer`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip") and [`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip") (other than `upper` and `lower`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.drop_duplicates()`](../reference/api/pandas.DataFrame.drop_duplicates.html#pandas.DataFrame.drop_duplicates
    "pandas.DataFrame.drop_duplicates") (except for `subset`), [`Series.drop_duplicates()`](../reference/api/pandas.Series.drop_duplicates.html#pandas.Series.drop_duplicates
    "pandas.Series.drop_duplicates"), [`Index.drop_duplicates()`](../reference/api/pandas.Index.drop_duplicates.html#pandas.Index.drop_duplicates
    "pandas.Index.drop_duplicates") and `MultiIndex.drop_duplicates()`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") (other than `labels`) and [`Series.drop()`](../reference/api/pandas.Series.drop.html#pandas.Series.drop
    "pandas.Series.drop")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") and [`Series.dropna()`](../reference/api/pandas.Series.dropna.html#pandas.Series.dropna
    "pandas.Series.dropna")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.ffill()`](../reference/api/pandas.DataFrame.ffill.html#pandas.DataFrame.ffill
    "pandas.DataFrame.ffill"), [`Series.ffill()`](../reference/api/pandas.Series.ffill.html#pandas.Series.ffill
    "pandas.Series.ffill"), [`DataFrame.bfill()`](../reference/api/pandas.DataFrame.bfill.html#pandas.DataFrame.bfill
    "pandas.DataFrame.bfill"), and [`Series.bfill()`](../reference/api/pandas.Series.bfill.html#pandas.Series.bfill
    "pandas.Series.bfill")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") and [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") (apart from `value`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") and [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") (other than `method`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask") and [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask") (other than `cond` and `other`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") (other than `level`) and [`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") and [`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") (other than `labels`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.set_index()`](../reference/api/pandas.DataFrame.set_index.html#pandas.DataFrame.set_index
    "pandas.DataFrame.set_index") (other than `keys`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index") and [`Series.sort_index()`](../reference/api/pandas.Series.sort_index.html#pandas.Series.sort_index
    "pandas.Series.sort_index")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") (other than `by`) and [`Series.sort_values()`](../reference/api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") and [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") (other than `cond` and `other`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.set_names()`](../reference/api/pandas.Index.set_names.html#pandas.Index.set_names
    "pandas.Index.set_names") and `MultiIndex.set_names()` (except for `names`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.codes()`](../reference/api/pandas.MultiIndex.codes.html#pandas.MultiIndex.codes
    "pandas.MultiIndex.codes") (except for `codes`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.set_levels()`](../reference/api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels") (except for `levels`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Resampler.interpolate()` (other than `method`)  ### Deprecated dropping nuisance
    columns in DataFrame reductions and DataFrameGroupBy operations'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Calling a reduction (e.g. `.min`, `.max`, `.sum`) on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `numeric_only=None` (the default), columns where the
    reduction raises a `TypeError` are silently ignored and dropped from the result.
  prefs: []
  type: TYPE_NORMAL
- en: This behavior is deprecated. In a future version, the `TypeError` will be raised,
    and users will need to select only valid columns before calling the function.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE126]'
  prefs: []
  type: TYPE_PRE
- en: '*Old behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE127]'
  prefs: []
  type: TYPE_PRE
- en: '*Future behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE128]'
  prefs: []
  type: TYPE_PRE
- en: Similarly, when applying a function to `DataFrameGroupBy`, columns on which
    the function raises `TypeError` are currently silently ignored and dropped from
    the result.
  prefs: []
  type: TYPE_NORMAL
- en: This behavior is deprecated. In a future version, the `TypeError` will be raised,
    and users will need to select only valid columns before calling the function.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE129]'
  prefs: []
  type: TYPE_PRE
- en: '*Old behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE130]'
  prefs: []
  type: TYPE_PRE
- en: '*Future behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE131]'
  prefs: []
  type: TYPE_PRE
- en: '### Other Deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: Deprecated allowing scalars to be passed to the [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") constructor ([GH 38433](https://github.com/pandas-dev/pandas/issues/38433))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated constructing [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") without passing list-like data ([GH 38944](https://github.com/pandas-dev/pandas/issues/38944))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing subclass-specific keyword arguments in the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") constructor, use the specific subclass directly instead ([GH 14093](https://github.com/pandas-dev/pandas/issues/14093),
    [GH 21311](https://github.com/pandas-dev/pandas/issues/21311), [GH 22315](https://github.com/pandas-dev/pandas/issues/22315),
    [GH 26974](https://github.com/pandas-dev/pandas/issues/26974))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `astype()` method of datetimelike (`timedelta64[ns]`, `datetime64[ns]`,
    `Datetime64TZDtype`, `PeriodDtype`) to convert to integer dtypes, use `values.view(...)`
    instead ([GH 38544](https://github.com/pandas-dev/pandas/issues/38544)). This
    deprecation was later reverted in pandas 1.4.0.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `MultiIndex.is_lexsorted()` and `MultiIndex.lexsort_depth()`, use
    `MultiIndex.is_monotonic_increasing()` instead ([GH 32259](https://github.com/pandas-dev/pandas/issues/32259))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated keyword `try_cast` in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where"), [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask"), [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where"), [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask"); cast results manually if desired ([GH 38836](https://github.com/pandas-dev/pandas/issues/38836))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated comparison of [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") objects with `datetime.date` objects. Instead of e.g. `ts
    <= mydate` use `ts <= pd.Timestamp(mydate)` or `ts.date() <= mydate` ([GH 36131](https://github.com/pandas-dev/pandas/issues/36131))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Rolling.win_type` returning `"freq"` ([GH 38963](https://github.com/pandas-dev/pandas/issues/38963))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Rolling.is_datetimelike` ([GH 38963](https://github.com/pandas-dev/pandas/issues/38963))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") indexer for `Series.__setitem__()` and `DataFrame.__setitem__()`
    ([GH 39004](https://github.com/pandas-dev/pandas/issues/39004))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `ExponentialMovingWindow.vol()` ([GH 39220](https://github.com/pandas-dev/pandas/issues/39220))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using `.astype` to convert between `datetime64[ns]` dtype and [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") is deprecated and will raise in a future version, use
    `obj.tz_localize` or `obj.dt.tz_localize` instead ([GH 38622](https://github.com/pandas-dev/pandas/issues/38622))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated casting `datetime.date` objects to `datetime64` when used as `fill_value`
    in [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack"), [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift"), [`Series.shift()`](../reference/api/pandas.Series.shift.html#pandas.Series.shift
    "pandas.Series.shift"), and [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex"), pass `pd.Timestamp(dateobj)` instead ([GH 39767](https://github.com/pandas-dev/pandas/issues/39767))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Styler.set_na_rep()` and `Styler.set_precision()` in favor of [`Styler.format()`](../reference/api/pandas.io.formats.style.Styler.format.html#pandas.io.formats.style.Styler.format
    "pandas.io.formats.style.Styler.format") with `na_rep` and `precision` as existing
    and new input arguments respectively ([GH 40134](https://github.com/pandas-dev/pandas/issues/40134),
    [GH 40425](https://github.com/pandas-dev/pandas/issues/40425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Styler.where()` in favor of using an alternative formulation with
    `Styler.applymap()` ([GH 40821](https://github.com/pandas-dev/pandas/issues/40821))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing partial failure in [`Series.transform()`](../reference/api/pandas.Series.transform.html#pandas.Series.transform
    "pandas.Series.transform") and [`DataFrame.transform()`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform") when `func` is list-like or dict-like and raises
    anything but `TypeError`; `func` raising anything but a `TypeError` will raise
    in a future version ([GH 40211](https://github.com/pandas-dev/pandas/issues/40211))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated arguments `error_bad_lines` and `warn_bad_lines` in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") in favor of argument `on_bad_lines` ([GH 15122](https://github.com/pandas-dev/pandas/issues/15122))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deprecated support for `np.ma.mrecords.MaskedRecords` in the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor, pass `{name: data[name] for name in data.dtype.names}`
    instead ([GH 40363](https://github.com/pandas-dev/pandas/issues/40363))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated using [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge"), [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge"), and [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") on a different number of levels ([GH 34862](https://github.com/pandas-dev/pandas/issues/34862))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the use of `**kwargs` in [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter"); use the keyword argument `engine_kwargs` instead ([GH 40430](https://github.com/pandas-dev/pandas/issues/40430))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `level` keyword for [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") aggregations; use groupby instead ([GH 39983](https://github.com/pandas-dev/pandas/issues/39983))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `inplace` parameter of `Categorical.remove_categories()`, `Categorical.add_categories()`,
    `Categorical.reorder_categories()`, `Categorical.rename_categories()`, `Categorical.set_categories()`
    and will be removed in a future version ([GH 37643](https://github.com/pandas-dev/pandas/issues/37643))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    producing duplicated columns through the `suffixes` keyword and already existing
    columns ([GH 22818](https://github.com/pandas-dev/pandas/issues/22818))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated setting `Categorical._codes`, create a new [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") with the desired codes instead ([GH 40606](https://github.com/pandas-dev/pandas/issues/40606))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `convert_float` optional argument in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") and [`ExcelFile.parse()`](../reference/api/pandas.ExcelFile.parse.html#pandas.ExcelFile.parse
    "pandas.ExcelFile.parse") ([GH 41127](https://github.com/pandas-dev/pandas/issues/41127))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of `DatetimeIndex.union()` with mixed timezones; in a future
    version both will be cast to UTC instead of object dtype ([GH 39328](https://github.com/pandas-dev/pandas/issues/39328))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated using `usecols` with out of bounds indices for [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `engine="c"` ([GH 25623](https://github.com/pandas-dev/pandas/issues/25623))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deprecated special treatment of lists with first element a Categorical in the
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor; pass as `pd.DataFrame({col: categorical, ...})` instead ([GH 38845](https://github.com/pandas-dev/pandas/issues/38845))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor when a `dtype` is passed and the data cannot be
    cast to that dtype. In a future version, this will raise instead of being silently
    ignored ([GH 24435](https://github.com/pandas-dev/pandas/issues/24435))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `Timestamp.freq` attribute. For the properties that use it (`is_month_start`,
    `is_month_end`, `is_quarter_start`, `is_quarter_end`, `is_year_start`, `is_year_end`),
    when you have a `freq`, use e.g. `freq.is_month_start(ts)` ([GH 15146](https://github.com/pandas-dev/pandas/issues/15146))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated construction of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `DatetimeTZDtype` data and `datetime64[ns]` dtype. Use
    `Series(data).dt.tz_localize(None)` instead ([GH 41555](https://github.com/pandas-dev/pandas/issues/41555),
    [GH 33401](https://github.com/pandas-dev/pandas/issues/33401))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") construction with large-integer values and small-integer dtype
    silently overflowing; use `Series(data).astype(dtype)` instead ([GH 41734](https://github.com/pandas-dev/pandas/issues/41734))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") construction with floating data and integer dtype casting
    even when lossy; in a future version this will remain floating, matching [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") behavior ([GH 41770](https://github.com/pandas-dev/pandas/issues/41770))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated inference of `timedelta64[ns]`, `datetime64[ns]`, or `DatetimeTZDtype`
    dtypes in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    construction when data containing strings is passed and no `dtype` is passed ([GH
    33558](https://github.com/pandas-dev/pandas/issues/33558))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In a future version, constructing [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `datetime64[ns]` data and `DatetimeTZDtype` will treat
    the data as wall-times instead of as UTC times (matching DatetimeIndex behavior).
    To treat the data as UTC times, use `pd.Series(data).dt.tz_localize("UTC").dt.tz_convert(dtype.tz)`
    or `pd.Series(data.view("int64"), dtype=dtype)` ([GH 33401](https://github.com/pandas-dev/pandas/issues/33401))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing lists as `key` to [`DataFrame.xs()`](../reference/api/pandas.DataFrame.xs.html#pandas.DataFrame.xs
    "pandas.DataFrame.xs") and [`Series.xs()`](../reference/api/pandas.Series.xs.html#pandas.Series.xs
    "pandas.Series.xs") ([GH 41760](https://github.com/pandas-dev/pandas/issues/41760))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated boolean arguments of `inclusive` in [`Series.between()`](../reference/api/pandas.Series.between.html#pandas.Series.between
    "pandas.Series.between") to have `{"left", "right", "neither", "both"}` as standard
    argument values ([GH 40628](https://github.com/pandas-dev/pandas/issues/40628))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deprecated passing arguments as positional for all of the following, with exceptions
    noted ([GH 41485](https://github.com/pandas-dev/pandas/issues/41485)):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    (other than `objs`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    (other than `filepath_or_buffer`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") (other than `filepath_or_buffer`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip") and [`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip") (other than `upper` and `lower`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.drop_duplicates()`](../reference/api/pandas.DataFrame.drop_duplicates.html#pandas.DataFrame.drop_duplicates
    "pandas.DataFrame.drop_duplicates") (except for `subset`), [`Series.drop_duplicates()`](../reference/api/pandas.Series.drop_duplicates.html#pandas.Series.drop_duplicates
    "pandas.Series.drop_duplicates"), [`Index.drop_duplicates()`](../reference/api/pandas.Index.drop_duplicates.html#pandas.Index.drop_duplicates
    "pandas.Index.drop_duplicates") and `MultiIndex.drop_duplicates()`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") (other than `labels`) and [`Series.drop()`](../reference/api/pandas.Series.drop.html#pandas.Series.drop
    "pandas.Series.drop")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") and [`Series.dropna()`](../reference/api/pandas.Series.dropna.html#pandas.Series.dropna
    "pandas.Series.dropna")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.ffill()`](../reference/api/pandas.DataFrame.ffill.html#pandas.DataFrame.ffill
    "pandas.DataFrame.ffill"), [`Series.ffill()`](../reference/api/pandas.Series.ffill.html#pandas.Series.ffill
    "pandas.Series.ffill"), [`DataFrame.bfill()`](../reference/api/pandas.DataFrame.bfill.html#pandas.DataFrame.bfill
    "pandas.DataFrame.bfill"), and [`Series.bfill()`](../reference/api/pandas.Series.bfill.html#pandas.Series.bfill
    "pandas.Series.bfill")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") and [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") (apart from `value`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") and [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") (other than `method`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask") and [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask") (other than `cond` and `other`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") (other than `level`) and [`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") and [`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") (other than `labels`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.set_index()`](../reference/api/pandas.DataFrame.set_index.html#pandas.DataFrame.set_index
    "pandas.DataFrame.set_index") (other than `keys`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index") and [`Series.sort_index()`](../reference/api/pandas.Series.sort_index.html#pandas.Series.sort_index
    "pandas.Series.sort_index")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") (other than `by`) and [`Series.sort_values()`](../reference/api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") and [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") (other than `cond` and `other`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.set_names()`](../reference/api/pandas.Index.set_names.html#pandas.Index.set_names
    "pandas.Index.set_names") and `MultiIndex.set_names()` (except for `names`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.codes()`](../reference/api/pandas.MultiIndex.codes.html#pandas.MultiIndex.codes
    "pandas.MultiIndex.codes") (except for `codes`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.set_levels()`](../reference/api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels") (except for `levels`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Resampler.interpolate()` (other than `method`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Performance improvements'
  prefs: []
  type: TYPE_NORMAL
- en: Performance improvement in `IntervalIndex.isin()` ([GH 38353](https://github.com/pandas-dev/pandas/issues/38353))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.mean()`](../reference/api/pandas.Series.mean.html#pandas.Series.mean
    "pandas.Series.mean") for nullable data types ([GH 34814](https://github.com/pandas-dev/pandas/issues/34814))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") for nullable data types ([GH 38340](https://github.com/pandas-dev/pandas/issues/38340))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") with `method="pad"` or `method="backfill"` for nullable
    floating and nullable integer dtypes ([GH 39953](https://github.com/pandas-dev/pandas/issues/39953))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr") for `method=kendall` ([GH 28329](https://github.com/pandas-dev/pandas/issues/28329))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr") for `method=spearman` ([GH 40956](https://github.com/pandas-dev/pandas/issues/40956),
    [GH 41885](https://github.com/pandas-dev/pandas/issues/41885))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Rolling.corr()`](../reference/api/pandas.core.window.rolling.Rolling.corr.html#pandas.core.window.rolling.Rolling.corr
    "pandas.core.window.rolling.Rolling.corr") and [`Rolling.cov()`](../reference/api/pandas.core.window.rolling.Rolling.cov.html#pandas.core.window.rolling.Rolling.cov
    "pandas.core.window.rolling.Rolling.cov") ([GH 39388](https://github.com/pandas-dev/pandas/issues/39388))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `RollingGroupby.corr()`, `ExpandingGroupby.corr()`,
    `ExpandingGroupby.corr()` and `ExpandingGroupby.cov()` ([GH 39591](https://github.com/pandas-dev/pandas/issues/39591))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`unique()`](../reference/api/pandas.unique.html#pandas.unique
    "pandas.unique") for object data type ([GH 37615](https://github.com/pandas-dev/pandas/issues/37615))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") for basic cases (including separators) ([GH 40035](https://github.com/pandas-dev/pandas/issues/40035)
    [GH 15621](https://github.com/pandas-dev/pandas/issues/15621))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `ExpandingGroupby` aggregation methods ([GH 39664](https://github.com/pandas-dev/pandas/issues/39664))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") where render times are more than 50% reduced
    and now matches [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") ([GH 39972](https://github.com/pandas-dev/pandas/issues/39972)
    [GH 39952](https://github.com/pandas-dev/pandas/issues/39952), [GH 40425](https://github.com/pandas-dev/pandas/issues/40425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The method [`Styler.set_td_classes()`](../reference/api/pandas.io.formats.style.Styler.set_td_classes.html#pandas.io.formats.style.Styler.set_td_classes
    "pandas.io.formats.style.Styler.set_td_classes") is now as performant as [`Styler.apply()`](../reference/api/pandas.io.formats.style.Styler.apply.html#pandas.io.formats.style.Styler.apply
    "pandas.io.formats.style.Styler.apply") and `Styler.applymap()`, and even more
    so in some cases ([GH 40453](https://github.com/pandas-dev/pandas/issues/40453))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`ExponentialMovingWindow.mean()`](../reference/api/pandas.core.window.ewm.ExponentialMovingWindow.mean.html#pandas.core.window.ewm.ExponentialMovingWindow.mean
    "pandas.core.window.ewm.ExponentialMovingWindow.mean") with `times` ([GH 39784](https://github.com/pandas-dev/pandas/issues/39784))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") when requiring the Python fallback
    implementation ([GH 40176](https://github.com/pandas-dev/pandas/issues/40176))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in the conversion of a PyArrow Boolean array to a pandas
    nullable Boolean array ([GH 41051](https://github.com/pandas-dev/pandas/issues/41051))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for concatenation of data with type [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") ([GH 40193](https://github.com/pandas-dev/pandas/issues/40193))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.cummin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin"), [`SeriesGroupBy.cummin()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummin.html#pandas.core.groupby.SeriesGroupBy.cummin
    "pandas.core.groupby.SeriesGroupBy.cummin"), [`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax"), and [`SeriesGroupBy.cummax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummax.html#pandas.core.groupby.SeriesGroupBy.cummax
    "pandas.core.groupby.SeriesGroupBy.cummax") with nullable data types ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.nunique()`](../reference/api/pandas.Series.nunique.html#pandas.Series.nunique
    "pandas.Series.nunique") with nan values ([GH 40865](https://github.com/pandas-dev/pandas/issues/40865))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.transpose()`](../reference/api/pandas.DataFrame.transpose.html#pandas.DataFrame.transpose
    "pandas.DataFrame.transpose"), [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack") with `DatetimeTZDtype` ([GH 40149](https://github.com/pandas-dev/pandas/issues/40149))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") and [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") with entry point lazy loading ([GH 41492](https://github.com/pandas-dev/pandas/issues/41492))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Bug fixes'
  prefs: []
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") incorrectly failing to raise `TypeError` when scalar
    data is passed ([GH 38614](https://github.com/pandas-dev/pandas/issues/38614))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CategoricalIndex.reindex` failed when the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") passed was not categorical but whose values were all labels in
    the category ([GH 28690](https://github.com/pandas-dev/pandas/issues/28690))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where constructing a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") from an object-dtype array of `date` objects did not round-trip
    correctly with `astype` ([GH 38552](https://github.com/pandas-dev/pandas/issues/38552))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from an `ndarray` and a [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") ([GH 38857](https://github.com/pandas-dev/pandas/issues/38857))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting categorical values into an object-dtype column in a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 39136](https://github.com/pandas-dev/pandas/issues/39136))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") was raising an `IndexError` when the new index contained
    duplicates and the old index was a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 38906](https://github.com/pandas-dev/pandas/issues/38906))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.fillna()` with a tuple-like category raising `NotImplementedError`
    instead of `ValueError` when filling with a non-category tuple ([GH 41914](https://github.com/pandas-dev/pandas/issues/41914))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") constructors sometimes dropping nanoseconds from [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") (resp. [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta")) `data`, with `dtype=datetime64[ns]` (resp. `timedelta64[ns]`)
    ([GH 38032](https://github.com/pandas-dev/pandas/issues/38032))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.first()`](../reference/api/pandas.DataFrame.first.html#pandas.DataFrame.first
    "pandas.DataFrame.first") and [`Series.first()`](../reference/api/pandas.Series.first.html#pandas.Series.first
    "pandas.Series.first") with an offset of one month returning an incorrect result
    when the first day is the last day of a month ([GH 29623](https://github.com/pandas-dev/pandas/issues/29623))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with mismatched `datetime64` data and `timedelta64` dtype, or
    vice-versa, failing to raise a `TypeError` ([GH 38575](https://github.com/pandas-dev/pandas/issues/38575),
    [GH 38764](https://github.com/pandas-dev/pandas/issues/38764), [GH 38792](https://github.com/pandas-dev/pandas/issues/38792))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a `datetime` object out of bounds for `datetime64[ns]`
    dtype or a `timedelta` object out of bounds for `timedelta64[ns]` dtype ([GH 38792](https://github.com/pandas-dev/pandas/issues/38792),
    [GH 38965](https://github.com/pandas-dev/pandas/issues/38965))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.intersection()`, `DatetimeIndex.symmetric_difference()`,
    `PeriodIndex.intersection()`, `PeriodIndex.symmetric_difference()` always returning
    object-dtype when operating with [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 38741](https://github.com/pandas-dev/pandas/issues/38741))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.intersection()` giving incorrect results with non-Tick
    frequencies with `n != 1` ([GH 42104](https://github.com/pandas-dev/pandas/issues/42104))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") incorrectly casting `datetime64` values to `int64` ([GH
    37682](https://github.com/pandas-dev/pandas/issues/37682))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") incorrectly typecasting `datetime` object to `Timestamp`
    ([GH 38878](https://github.com/pandas-dev/pandas/issues/38878))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in comparisons between [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") object and `datetime64` objects just outside the implementation
    bounds for nanosecond `datetime64` ([GH 39221](https://github.com/pandas-dev/pandas/issues/39221))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.round()`](../reference/api/pandas.Timestamp.round.html#pandas.Timestamp.round
    "pandas.Timestamp.round"), [`Timestamp.floor()`](../reference/api/pandas.Timestamp.floor.html#pandas.Timestamp.floor
    "pandas.Timestamp.floor"), [`Timestamp.ceil()`](../reference/api/pandas.Timestamp.ceil.html#pandas.Timestamp.ceil
    "pandas.Timestamp.ceil") for values near the implementation bounds of [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") ([GH 39244](https://github.com/pandas-dev/pandas/issues/39244))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta.round()`](../reference/api/pandas.Timedelta.round.html#pandas.Timedelta.round
    "pandas.Timedelta.round"), [`Timedelta.floor()`](../reference/api/pandas.Timedelta.floor.html#pandas.Timedelta.floor
    "pandas.Timedelta.floor"), [`Timedelta.ceil()`](../reference/api/pandas.Timedelta.ceil.html#pandas.Timedelta.ceil
    "pandas.Timedelta.ceil") for values near the implementation bounds of [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") ([GH 38964](https://github.com/pandas-dev/pandas/issues/38964))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") incorrectly creating [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") containing `NaT` instead of raising `OutOfBoundsDatetime`
    in corner cases ([GH 24124](https://github.com/pandas-dev/pandas/issues/24124))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`infer_freq()`](../reference/api/pandas.infer_freq.html#pandas.infer_freq
    "pandas.infer_freq") incorrectly fails to infer ‘H’ frequency of [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") if the latter has a timezone and crosses DST boundaries
    ([GH 39556](https://github.com/pandas-dev/pandas/issues/39556))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    backed by `DatetimeArray` or `TimedeltaArray` sometimes failing to set the array’s
    `freq` to `None` ([GH 41425](https://github.com/pandas-dev/pandas/issues/41425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in constructing [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") from `np.timedelta64` objects with non-nanosecond units that
    are out of bounds for `timedelta64[ns]` ([GH 38965](https://github.com/pandas-dev/pandas/issues/38965))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") incorrectly accepting `np.datetime64("NaT")` objects
    ([GH 39462](https://github.com/pandas-dev/pandas/issues/39462))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") from an input string with only symbols and no digits failed
    to raise an error ([GH 39710](https://github.com/pandas-dev/pandas/issues/39710))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") and [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") failing to raise when passed non-nanosecond `timedelta64`
    arrays that overflow when converting to `timedelta64[ns]` ([GH 40008](https://github.com/pandas-dev/pandas/issues/40008))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in different `tzinfo` objects representing UTC not being treated as equivalent
    ([GH 39216](https://github.com/pandas-dev/pandas/issues/39216))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `dateutil.tz.gettz("UTC")` not being recognized as equivalent to other
    UTC-representing tzinfos ([GH 39276](https://github.com/pandas-dev/pandas/issues/39276))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile"), [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") causing incorrect subsequent indexing behavior
    ([GH 38351](https://github.com/pandas-dev/pandas/issues/38351))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") raising an [`IndexError`](https://docs.python.org/3/library/exceptions.html#IndexError
    "(in Python v3.12)") for empty `by` ([GH 40258](https://github.com/pandas-dev/pandas/issues/40258))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.select_dtypes()`](../reference/api/pandas.DataFrame.select_dtypes.html#pandas.DataFrame.select_dtypes
    "pandas.DataFrame.select_dtypes") with `include=np.number` would drop numeric
    `ExtensionDtype` columns ([GH 35340](https://github.com/pandas-dev/pandas/issues/35340))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.mode()`](../reference/api/pandas.DataFrame.mode.html#pandas.DataFrame.mode
    "pandas.DataFrame.mode") and [`Series.mode()`](../reference/api/pandas.Series.mode.html#pandas.Series.mode
    "pandas.Series.mode") not keeping consistent integer [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") for empty input ([GH 33321](https://github.com/pandas-dev/pandas/issues/33321))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank") when the DataFrame contained `np.inf` ([GH 32593](https://github.com/pandas-dev/pandas/issues/32593))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank") with `axis=0` and columns holding incomparable types
    raising an `IndexError` ([GH 38932](https://github.com/pandas-dev/pandas/issues/38932))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rank()`](../reference/api/pandas.Series.rank.html#pandas.Series.rank
    "pandas.Series.rank"), [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank"), [`DataFrameGroupBy.rank()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank"), and [`SeriesGroupBy.rank()`](../reference/api/pandas.core.groupby.SeriesGroupBy.rank.html#pandas.core.groupby.SeriesGroupBy.rank
    "pandas.core.groupby.SeriesGroupBy.rank") treating the most negative `int64` value
    as missing ([GH 32859](https://github.com/pandas-dev/pandas/issues/32859))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.select_dtypes()`](../reference/api/pandas.DataFrame.select_dtypes.html#pandas.DataFrame.select_dtypes
    "pandas.DataFrame.select_dtypes") different behavior between Windows and Linux
    with `include="int"` ([GH 36596](https://github.com/pandas-dev/pandas/issues/36596))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") and [`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") when passed the argument `func="size"` would operate on
    the entire `DataFrame` instead of rows or columns ([GH 39934](https://github.com/pandas-dev/pandas/issues/39934))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.transform()`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform") would raise a `SpecificationError` when passed a
    dictionary and columns were missing; will now raise a `KeyError` instead ([GH
    40004](https://github.com/pandas-dev/pandas/issues/40004))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.rank()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank") and [`SeriesGroupBy.rank()`](../reference/api/pandas.core.groupby.SeriesGroupBy.rank.html#pandas.core.groupby.SeriesGroupBy.rank
    "pandas.core.groupby.SeriesGroupBy.rank") giving incorrect results with `pct=True`
    and equal values between consecutive groups ([GH 40518](https://github.com/pandas-dev/pandas/issues/40518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.count()`](../reference/api/pandas.Series.count.html#pandas.Series.count
    "pandas.Series.count") would result in an `int32` result on 32-bit platforms when
    argument `level=None` ([GH 40908](https://github.com/pandas-dev/pandas/issues/40908))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    reductions with methods `any` and `all` not returning Boolean results for object
    data ([GH 12863](https://github.com/pandas-dev/pandas/issues/12863), [GH 35450](https://github.com/pandas-dev/pandas/issues/35450),
    [GH 27709](https://github.com/pandas-dev/pandas/issues/27709))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip") would fail if the Series contains NA values and has nullable
    int or float as a data type ([GH 40851](https://github.com/pandas-dev/pandas/issues/40851))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `UInt64Index.where()` and `UInt64Index.putmask()` with an `np.int64`
    dtype `other` incorrectly raising `TypeError` ([GH 41974](https://github.com/pandas-dev/pandas/issues/41974))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") not sorting the aggregated axis in the order of the provided
    aggregation functions when one or more aggregation function fails to produce results
    ([GH 33634](https://github.com/pandas-dev/pandas/issues/33634))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip") not interpreting missing values as no threshold ([GH
    40420](https://github.com/pandas-dev/pandas/issues/40420))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.to_dict()`](../reference/api/pandas.Series.to_dict.html#pandas.Series.to_dict
    "pandas.Series.to_dict") with `orient='records'` now returns Python native types
    ([GH 25969](https://github.com/pandas-dev/pandas/issues/25969))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.view()`](../reference/api/pandas.Series.view.html#pandas.Series.view
    "pandas.Series.view") and [`Index.view()`](../reference/api/pandas.Index.view.html#pandas.Index.view
    "pandas.Index.view") when converting between datetime-like (`datetime64[ns]`,
    `datetime64[ns, tz]`, `timedelta64`, `period`) dtypes ([GH 39788](https://github.com/pandas-dev/pandas/issues/39788))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in creating a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from an empty `np.recarray` not retaining the original dtypes
    ([GH 40121](https://github.com/pandas-dev/pandas/issues/40121))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") failing to raise a `TypeError` when constructing from a `frozenset`
    ([GH 40163](https://github.com/pandas-dev/pandas/issues/40163))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    construction silently ignoring a passed `dtype` when the data cannot be cast to
    that dtype ([GH 21311](https://github.com/pandas-dev/pandas/issues/21311))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `StringArray.astype()` falling back to NumPy and raising when converting
    to `dtype='categorical'` ([GH 40450](https://github.com/pandas-dev/pandas/issues/40450))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") where, when given an array with a numeric NumPy dtype lower
    than int64, uint64 and float64, the unique values did not keep their original
    dtype ([GH 41132](https://github.com/pandas-dev/pandas/issues/41132))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") construction with a dictionary containing an array-like with
    `ExtensionDtype` and `copy=True` failing to make a copy ([GH 38939](https://github.com/pandas-dev/pandas/issues/38939))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`qcut()`](../reference/api/pandas.qcut.html#pandas.qcut "pandas.qcut")
    raising error when taking `Float64DType` as input ([GH 40730](https://github.com/pandas-dev/pandas/issues/40730))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") construction with `datetime64[ns]` data and `dtype=object` resulting
    in `datetime` objects instead of [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") objects ([GH 41599](https://github.com/pandas-dev/pandas/issues/41599))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") construction with `timedelta64[ns]` data and `dtype=object` resulting
    in `np.timedelta64` objects instead of [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") objects ([GH 41599](https://github.com/pandas-dev/pandas/issues/41599))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") construction when given a two-dimensional object-dtype `np.ndarray`
    of [`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    or [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    objects failing to cast to [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") or [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype"), respectively ([GH 41812](https://github.com/pandas-dev/pandas/issues/41812))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") from a list and a `PandasDtype` ([GH 39357](https://github.com/pandas-dev/pandas/issues/39357))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in creating a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") from a `range` object that does not fit in the bounds of `int64`
    dtype ([GH 30173](https://github.com/pandas-dev/pandas/issues/30173))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in creating a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") from a `dict` with all-tuple keys and an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") that requires reindexing ([GH 41707](https://github.com/pandas-dev/pandas/issues/41707))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") not recognizing Series, Index, or array with a
    Period dtype ([GH 23553](https://github.com/pandas-dev/pandas/issues/23553))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") raising an error for general [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") objects. It will now return `"unknown-array"`
    instead of raising ([GH 37367](https://github.com/pandas-dev/pandas/issues/37367))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.convert_dtypes()`](../reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes
    "pandas.DataFrame.convert_dtypes") incorrectly raised a `ValueError` when called
    on an empty DataFrame ([GH 40393](https://github.com/pandas-dev/pandas/issues/40393))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in the conversion from `pyarrow.ChunkedArray` to [`StringArray`](../reference/api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray") when the original had zero chunks ([GH 41040](https://github.com/pandas-dev/pandas/issues/41040))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") and [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") ignoring replacements with `regex=True` for `StringDType`
    data ([GH 41333](https://github.com/pandas-dev/pandas/issues/41333), [GH 35977](https://github.com/pandas-dev/pandas/issues/35977))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.extract()`](../reference/api/pandas.Series.str.extract.html#pandas.Series.str.extract
    "pandas.Series.str.extract") with [`StringArray`](../reference/api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray") returning object dtype for an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 41441](https://github.com/pandas-dev/pandas/issues/41441))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.replace()`](../reference/api/pandas.Series.str.replace.html#pandas.Series.str.replace
    "pandas.Series.str.replace") where the `case` argument was ignored when `regex=False`
    ([GH 41602](https://github.com/pandas-dev/pandas/issues/41602))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.intersection()` and `IntervalIndex.symmetric_difference()`
    always returning object-dtype when operating with [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 38653](https://github.com/pandas-dev/pandas/issues/38653),
    [GH 38741](https://github.com/pandas-dev/pandas/issues/38741))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.intersection()` returning duplicates when at least one
    of the [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    objects have duplicates which are present in the other ([GH 38743](https://github.com/pandas-dev/pandas/issues/38743))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntervalIndex.union()`, `IntervalIndex.intersection()`, `IntervalIndex.difference()`,
    and `IntervalIndex.symmetric_difference()` now cast to the appropriate dtype instead
    of raising a `TypeError` when operating with another [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") with incompatible dtype ([GH 39267](https://github.com/pandas-dev/pandas/issues/39267))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`PeriodIndex.union()`, `PeriodIndex.intersection()`, `PeriodIndex.symmetric_difference()`,
    `PeriodIndex.difference()` now cast to object dtype instead of raising `IncompatibleFrequency`
    when operating with another [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") with incompatible dtype ([GH 39306](https://github.com/pandas-dev/pandas/issues/39306))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.is_monotonic()`, [`IntervalIndex.get_loc()`](../reference/api/pandas.IntervalIndex.get_loc.html#pandas.IntervalIndex.get_loc
    "pandas.IntervalIndex.get_loc"), `IntervalIndex.get_indexer_for()`, and `IntervalIndex.__contains__()`
    when NA values are present ([GH 41831](https://github.com/pandas-dev/pandas/issues/41831))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") and `MultiIndex.union()` dropping duplicate `Index` values
    when `Index` was not monotonic or `sort` was set to `False` ([GH 36289](https://github.com/pandas-dev/pandas/issues/36289),
    [GH 31326](https://github.com/pandas-dev/pandas/issues/31326), [GH 40862](https://github.com/pandas-dev/pandas/issues/40862))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CategoricalIndex.get_indexer()` failing to raise `InvalidIndexError`
    when non-unique ([GH 38372](https://github.com/pandas-dev/pandas/issues/38372))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.get_indexer()`](../reference/api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer") when `target` has `CategoricalDtype` and both
    the index and the target contain NA values ([GH 41934](https://github.com/pandas-dev/pandas/issues/41934))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") raising a `ValueError` when input was filtered with a Boolean
    list and values to set were a list with lower dimension ([GH 20438](https://github.com/pandas-dev/pandas/issues/20438))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in inserting many new columns into a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") causing incorrect subsequent indexing behavior ([GH 38380](https://github.com/pandas-dev/pandas/issues/38380))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` raising a `ValueError` when setting multiple
    values to duplicate columns ([GH 15695](https://github.com/pandas-dev/pandas/issues/15695))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc"), [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc"), `DataFrame.__getitem__()` and `Series.__getitem__()` returning
    incorrect elements for non-monotonic [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") for string slices ([GH 33146](https://github.com/pandas-dev/pandas/issues/33146))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") and [`Series.reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex") with timezone aware indexes raising a `TypeError` for
    `method="ffill"` and `method="bfill"` and specified `tolerance` ([GH 38566](https://github.com/pandas-dev/pandas/issues/38566))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") with `datetime64[ns]` or `timedelta64[ns]` incorrectly
    casting to integers when the `fill_value` requires casting to object dtype ([GH
    39755](https://github.com/pandas-dev/pandas/issues/39755))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` raising a `ValueError` when setting on an empty
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    using specified columns and a nonempty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") value ([GH 38831](https://github.com/pandas-dev/pandas/issues/38831))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc.__setitem__()` raising a `ValueError` when operating on
    a unique column when the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has duplicate columns ([GH 38521](https://github.com/pandas-dev/pandas/issues/38521))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.iloc.__setitem__()` and `DataFrame.loc.__setitem__()` with
    mixed dtypes when setting with a dictionary value ([GH 38335](https://github.com/pandas-dev/pandas/issues/38335))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.loc.__setitem__()` and `DataFrame.loc.__setitem__()` raising
    `KeyError` when provided a Boolean generator ([GH 39614](https://github.com/pandas-dev/pandas/issues/39614))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.iloc()`](../reference/api/pandas.Series.iloc.html#pandas.Series.iloc
    "pandas.Series.iloc") and [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") raising a `KeyError` when provided a generator ([GH 39614](https://github.com/pandas-dev/pandas/issues/39614))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` not raising a `ValueError` when the right hand
    side is a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with wrong number of columns ([GH 38604](https://github.com/pandas-dev/pandas/issues/38604))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` raising a `ValueError` when setting a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a scalar indexer ([GH 38303](https://github.com/pandas-dev/pandas/issues/38303))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") dropping levels of a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") when the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") used as input has only one row ([GH 10521](https://github.com/pandas-dev/pandas/issues/10521))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__getitem__()` and `Series.__getitem__()` always raising `KeyError`
    when slicing with existing strings where the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") has milliseconds ([GH 33589](https://github.com/pandas-dev/pandas/issues/33589))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting `timedelta64` or `datetime64` values into numeric [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") failing to cast to object dtype ([GH 39086](https://github.com/pandas-dev/pandas/issues/39086),
    [GH 39619](https://github.com/pandas-dev/pandas/issues/39619))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") values into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with mismatched [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") incorrectly casting the new values to the existing dtype
    ([GH 39120](https://github.com/pandas-dev/pandas/issues/39120))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting `datetime64` values into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with integer-dtype incorrectly casting the datetime64 values
    to integers ([GH 39266](https://github.com/pandas-dev/pandas/issues/39266))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting `np.datetime64("NaT")` into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `Datetime64TZDtype` incorrectly treating the timezone-naive
    value as timezone-aware ([GH 39769](https://github.com/pandas-dev/pandas/issues/39769))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.get_loc()`](../reference/api/pandas.Index.get_loc.html#pandas.Index.get_loc
    "pandas.Index.get_loc") not raising `KeyError` when `key=NaN` and `method` is
    specified but `NaN` is not in the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 39382](https://github.com/pandas-dev/pandas/issues/39382))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.insert()` when inserting `np.datetime64("NaT")` into a
    timezone-aware index incorrectly treating the timezone-naive value as timezone-aware
    ([GH 39769](https://github.com/pandas-dev/pandas/issues/39769))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in incorrectly raising in [`Index.insert()`](../reference/api/pandas.Index.insert.html#pandas.Index.insert
    "pandas.Index.insert"), when setting a new column that cannot be held in the existing
    `frame.columns`, or in [`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index") or [`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") instead of casting to a compatible dtype ([GH
    39068](https://github.com/pandas-dev/pandas/issues/39068))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RangeIndex.append()` where a single object of length 1 was concatenated
    incorrectly ([GH 39401](https://github.com/pandas-dev/pandas/issues/39401))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RangeIndex.astype()` where when converting to [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex"), the categories became a `Int64Index` instead of a
    [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex "pandas.RangeIndex")
    ([GH 41263](https://github.com/pandas-dev/pandas/issues/41263))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting `numpy.timedelta64` values into an object-dtype [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") using a Boolean indexer ([GH 39488](https://github.com/pandas-dev/pandas/issues/39488))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting numeric values into a into a boolean-dtypes [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") using `at` or `iat` failing to cast to object-dtype ([GH 39582](https://github.com/pandas-dev/pandas/issues/39582))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` and `DataFrame.iloc.__setitem__()` raising
    `ValueError` when trying to index with a row-slice and setting a list as values
    ([GH 40440](https://github.com/pandas-dev/pandas/issues/40440))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") not raising `KeyError` when the key was not found in [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and the levels were not fully specified ([GH 41170](https://github.com/pandas-dev/pandas/issues/41170))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc.__setitem__()` when setting-with-expansion incorrectly
    raising when the index in the expanding axis contained duplicates ([GH 40096](https://github.com/pandas-dev/pandas/issues/40096))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc.__getitem__()` with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") casting to float when at least one index column has float
    dtype and we retrieve a scalar ([GH 41369](https://github.com/pandas-dev/pandas/issues/41369))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") incorrectly matching non-Boolean index elements ([GH 20432](https://github.com/pandas-dev/pandas/issues/20432))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing with `np.nan` on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") incorrectly raising `KeyError` when `np.nan` keys are
    present ([GH 41933](https://github.com/pandas-dev/pandas/issues/41933))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__delitem__()` with `ExtensionDtype` incorrectly casting to `ndarray`
    ([GH 40386](https://github.com/pandas-dev/pandas/issues/40386))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.at()`](../reference/api/pandas.DataFrame.at.html#pandas.DataFrame.at
    "pandas.DataFrame.at") with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") returning incorrect results when passed integer keys
    ([GH 41846](https://github.com/pandas-dev/pandas/issues/41846))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") returning a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") in the wrong order if an indexer has duplicates ([GH 40978](https://github.com/pandas-dev/pandas/issues/40978))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` raising a `TypeError` when using a `str` subclass
    as the column name with a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 37366](https://github.com/pandas-dev/pandas/issues/37366))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `PeriodIndex.get_loc()` failing to raise a `KeyError` when given a [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") with a mismatched `freq` ([GH 41670](https://github.com/pandas-dev/pandas/issues/41670))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug `.loc.__getitem__` with a `UInt64Index` and negative-integer keys raising
    `OverflowError` instead of `KeyError` in some cases, wrapping around to positive
    integers in others ([GH 41777](https://github.com/pandas-dev/pandas/issues/41777))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.get_indexer()`](../reference/api/pandas.Index.get_indexer.html#pandas.Index.get_indexer
    "pandas.Index.get_indexer") failing to raise `ValueError` in some cases with invalid
    `method`, `limit`, or `tolerance` arguments ([GH 41918](https://github.com/pandas-dev/pandas/issues/41918))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when slicing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") when passing an invalid string raising `ValueError` instead
    of a `TypeError` ([GH 41821](https://github.com/pandas-dev/pandas/issues/41821))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    constructor sometimes silently ignoring a specified `dtype` ([GH 38879](https://github.com/pandas-dev/pandas/issues/38879))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.where()`](../reference/api/pandas.Index.where.html#pandas.Index.where
    "pandas.Index.where") behavior now mirrors [`Index.putmask()`](../reference/api/pandas.Index.putmask.html#pandas.Index.putmask
    "pandas.Index.putmask") behavior, i.e. `index.where(mask, other)` matches `index.putmask(~mask,
    other)` ([GH 39412](https://github.com/pandas-dev/pandas/issues/39412))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper "pandas.Grouper")
    did not correctly propagate the `dropna` argument; [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") now correctly handles missing
    values for `dropna=True` ([GH 35612](https://github.com/pandas-dev/pandas/issues/35612))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`isna()`](../reference/api/pandas.isna.html#pandas.isna "pandas.isna"),
    [`Series.isna()`](../reference/api/pandas.Series.isna.html#pandas.Series.isna
    "pandas.Series.isna"), [`Index.isna()`](../reference/api/pandas.Index.isna.html#pandas.Index.isna
    "pandas.Index.isna"), [`DataFrame.isna()`](../reference/api/pandas.DataFrame.isna.html#pandas.DataFrame.isna
    "pandas.DataFrame.isna"), and the corresponding `notna` functions not recognizing
    `Decimal("NaN")` objects ([GH 39409](https://github.com/pandas-dev/pandas/issues/39409))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") not accepting a dictionary for the `downcast` keyword
    ([GH 40809](https://github.com/pandas-dev/pandas/issues/40809))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`isna()`](../reference/api/pandas.isna.html#pandas.isna "pandas.isna")
    not returning a copy of the mask for nullable types, causing any subsequent mask
    modification to change the original array ([GH 40935](https://github.com/pandas-dev/pandas/issues/40935))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") construction with float data containing `NaN` and an integer
    `dtype` casting instead of retaining the `NaN` ([GH 26919](https://github.com/pandas-dev/pandas/issues/26919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") and `MultiIndex.isin()` didn’t treat all nans as equivalent
    if they were in tuples ([GH 41836](https://github.com/pandas-dev/pandas/issues/41836))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") raising a `TypeError` when the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") is non-unique and `level` is not provided ([GH 36293](https://github.com/pandas-dev/pandas/issues/36293))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.intersection()` duplicating `NaN` in the result ([GH 38623](https://github.com/pandas-dev/pandas/issues/38623))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.equals()` incorrectly returning `True` when the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") contained `NaN` even when they are differently ordered ([GH
    38439](https://github.com/pandas-dev/pandas/issues/38439))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.intersection()` always returning an empty result when intersecting
    with [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 38653](https://github.com/pandas-dev/pandas/issues/38653))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.difference()` incorrectly raising `TypeError` when indexes
    contain non-sortable entries ([GH 41915](https://github.com/pandas-dev/pandas/issues/41915))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.reindex()` raising a `ValueError` when used on an empty [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and indexing only a specific level ([GH 41170](https://github.com/pandas-dev/pandas/issues/41170))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.reindex()` raising `TypeError` when reindexing against a
    flat [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    ([GH 41707](https://github.com/pandas-dev/pandas/issues/41707))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I/O
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Index.__repr__()` when `display.max_seq_items=1` ([GH 38415](https://github.com/pandas-dev/pandas/issues/38415))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not recognizing scientific notation if the argument `decimal`
    is set and `engine="python"` ([GH 31920](https://github.com/pandas-dev/pandas/issues/31920))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") interpreting `NA` value as comment, when `NA` does contain
    the comment string fixed for `engine="python"` ([GH 34002](https://github.com/pandas-dev/pandas/issues/34002))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") raising an `IndexError` with multiple header columns and `index_col`
    is specified when the file has no data rows ([GH 38292](https://github.com/pandas-dev/pandas/issues/38292))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not accepting `usecols` with a different length than `names`
    for `engine="python"` ([GH 16469](https://github.com/pandas-dev/pandas/issues/16469))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") returning object dtype when `delimiter=","` with `usecols`
    and `parse_dates` specified for `engine="python"` ([GH 35873](https://github.com/pandas-dev/pandas/issues/35873))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") raising a `TypeError` when `names` and `parse_dates` is specified
    for `engine="c"` ([GH 33699](https://github.com/pandas-dev/pandas/issues/33699))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_clipboard()`](../reference/api/pandas.read_clipboard.html#pandas.read_clipboard
    "pandas.read_clipboard") and [`DataFrame.to_clipboard()`](../reference/api/pandas.DataFrame.to_clipboard.html#pandas.DataFrame.to_clipboard
    "pandas.DataFrame.to_clipboard") not working in WSL ([GH 38527](https://github.com/pandas-dev/pandas/issues/38527))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow custom error values for the `parse_dates` argument of [`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql
    "pandas.read_sql"), [`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query") and [`read_sql_table()`](../reference/api/pandas.read_sql_table.html#pandas.read_sql_table
    "pandas.read_sql_table") ([GH 35185](https://github.com/pandas-dev/pandas/issues/35185))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_hdf()`](../reference/api/pandas.DataFrame.to_hdf.html#pandas.DataFrame.to_hdf
    "pandas.DataFrame.to_hdf") and [`Series.to_hdf()`](../reference/api/pandas.Series.to_hdf.html#pandas.Series.to_hdf
    "pandas.Series.to_hdf") raising a `KeyError` when trying to apply for subclasses
    of `DataFrame` or `Series` ([GH 33748](https://github.com/pandas-dev/pandas/issues/33748))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`HDFStore.put()`](../reference/api/pandas.HDFStore.put.html#pandas.HDFStore.put
    "pandas.HDFStore.put") raising a wrong `TypeError` when saving a DataFrame with
    non-string dtype ([GH 34274](https://github.com/pandas-dev/pandas/issues/34274))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") resulting in the first element of a generator object
    not being included in the returned DataFrame ([GH 35923](https://github.com/pandas-dev/pandas/issues/35923))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") applying the thousands separator to date columns when the column
    should be parsed for dates and `usecols` is specified for `engine="python"` ([GH
    39365](https://github.com/pandas-dev/pandas/issues/39365))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") forward filling [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") names when multiple header and index columns are specified
    ([GH 34673](https://github.com/pandas-dev/pandas/issues/34673))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") not respecting [`set_option()`](../reference/api/pandas.set_option.html#pandas.set_option
    "pandas.set_option") ([GH 34252](https://github.com/pandas-dev/pandas/issues/34252))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not switching `true_values` and `false_values` for nullable
    Boolean dtype ([GH 34655](https://github.com/pandas-dev/pandas/issues/34655))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") when `orient="split"` not maintaining a numeric string index
    ([GH 28556](https://github.com/pandas-dev/pandas/issues/28556))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql "pandas.read_sql")
    returned an empty generator if `chunksize` was non-zero and the query returned
    no results. Now returns a generator with a single empty DataFrame ([GH 34411](https://github.com/pandas-dev/pandas/issues/34411))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") returning unexpected records when filtering on categorical
    string columns using the `where` parameter ([GH 39189](https://github.com/pandas-dev/pandas/issues/39189))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") raising a `ValueError` when `datetimes` were null ([GH 39725](https://github.com/pandas-dev/pandas/issues/39725))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") dropping empty values from single-column spreadsheets ([GH
    39808](https://github.com/pandas-dev/pandas/issues/39808))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") loading trailing empty rows/columns for some filetypes ([GH
    41167](https://github.com/pandas-dev/pandas/issues/41167))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") raising an `AttributeError` when the excel file had a `MultiIndex`
    header followed by two empty rows and no index ([GH 40442](https://github.com/pandas-dev/pandas/issues/40442))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"), [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf"), and [`read_clipboard()`](../reference/api/pandas.read_clipboard.html#pandas.read_clipboard
    "pandas.read_clipboard") where one blank row after a `MultiIndex` header with
    no index would be dropped ([GH 40442](https://github.com/pandas-dev/pandas/issues/40442))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") misplacing the truncation column when `index=False`
    ([GH 40904](https://github.com/pandas-dev/pandas/issues/40904))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") adding an extra dot and misaligning the truncation
    row when `index=False` ([GH 40904](https://github.com/pandas-dev/pandas/issues/40904))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_orc()`](../reference/api/pandas.read_orc.html#pandas.read_orc
    "pandas.read_orc") always raising an `AttributeError` ([GH 40918](https://github.com/pandas-dev/pandas/issues/40918))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") silently ignoring `prefix` if `names` and `prefix` are defined,
    now raising a `ValueError` ([GH 39123](https://github.com/pandas-dev/pandas/issues/39123))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") not respecting the dtype for a duplicated column name when
    `mangle_dupe_cols` is set to `True` ([GH 35211](https://github.com/pandas-dev/pandas/issues/35211))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") silently ignoring `sep` if `delimiter` and `sep` are defined,
    now raising a `ValueError` ([GH 39823](https://github.com/pandas-dev/pandas/issues/39823))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") misinterpreting arguments when `sys.setprofile` had been
    previously called ([GH 41069](https://github.com/pandas-dev/pandas/issues/41069))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the conversion from PyArrow to pandas (e.g. for reading Parquet) with
    nullable dtypes and a PyArrow array whose data buffer size is not a multiple of
    the dtype size ([GH 40896](https://github.com/pandas-dev/pandas/issues/40896))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") would raise an error when pandas could not determine the
    file type even though the user specified the `engine` argument ([GH 41225](https://github.com/pandas-dev/pandas/issues/41225))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_clipboard()`](../reference/api/pandas.read_clipboard.html#pandas.read_clipboard
    "pandas.read_clipboard") copying from an excel file shifts values into the wrong
    column if there are null values in first column ([GH 41108](https://github.com/pandas-dev/pandas/issues/41108))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_hdf()`](../reference/api/pandas.DataFrame.to_hdf.html#pandas.DataFrame.to_hdf
    "pandas.DataFrame.to_hdf") and [`Series.to_hdf()`](../reference/api/pandas.Series.to_hdf.html#pandas.Series.to_hdf
    "pandas.Series.to_hdf") raising a `TypeError` when trying to append a string column
    to an incompatible column ([GH 41897](https://github.com/pandas-dev/pandas/issues/41897))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Period
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Comparisons of [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") objects or [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with mismatched `PeriodDtype` now behave like other mismatched-type
    comparisons, returning `False` for equals, `True` for not-equal, and raising `TypeError`
    for inequality checks ([GH 39274](https://github.com/pandas-dev/pandas/issues/39274))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`plotting.scatter_matrix()`](../reference/api/pandas.plotting.scatter_matrix.html#pandas.plotting.scatter_matrix
    "pandas.plotting.scatter_matrix") raising when 2d `ax` argument passed ([GH 16253](https://github.com/pandas-dev/pandas/issues/16253))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prevent warnings when Matplotlib’s `constrained_layout` is enabled ([GH 25261](https://github.com/pandas-dev/pandas/issues/25261))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") was showing the wrong colors in the legend if the function
    was called repeatedly and some calls used `yerr` while others didn’t ([GH 39522](https://github.com/pandas-dev/pandas/issues/39522))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") was showing the wrong colors in the legend if the function
    was called repeatedly and some calls used `secondary_y` and others use `legend=False`
    ([GH 40044](https://github.com/pandas-dev/pandas/issues/40044))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.box()`](../reference/api/pandas.DataFrame.plot.box.html#pandas.DataFrame.plot.box
    "pandas.DataFrame.plot.box") when `dark_background` theme was selected, caps or
    min/max markers for the plot were not visible ([GH 40769](https://github.com/pandas-dev/pandas/issues/40769))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") and [`SeriesGroupBy.agg()`](../reference/api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg") with [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") columns incorrectly casting results too aggressively ([GH
    38254](https://github.com/pandas-dev/pandas/issues/38254))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") where unobserved categories
    in a grouped categorical Series were not tallied ([GH 38672](https://github.com/pandas-dev/pandas/issues/38672))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") where an error was raised on
    an empty Series ([GH 39172](https://github.com/pandas-dev/pandas/issues/39172))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.indices()` would contain non-existent indices when null values
    were present in the groupby keys ([GH 9304](https://github.com/pandas-dev/pandas/issues/9304))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`DataFrameGroupBy.sum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum") and [`SeriesGroupBy.sum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.sum.html#pandas.core.groupby.SeriesGroupBy.sum
    "pandas.core.groupby.SeriesGroupBy.sum") causing a loss of precision by now using
    Kahan summation ([GH 38778](https://github.com/pandas-dev/pandas/issues/38778))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`DataFrameGroupBy.cumsum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum"), [`SeriesGroupBy.cumsum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cumsum.html#pandas.core.groupby.SeriesGroupBy.cumsum
    "pandas.core.groupby.SeriesGroupBy.cumsum"), [`DataFrameGroupBy.mean()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean"), and [`SeriesGroupBy.mean()`](../reference/api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean") causing loss of precision through using
    Kahan summation ([GH 38934](https://github.com/pandas-dev/pandas/issues/38934))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Resampler.aggregate()`](../reference/api/pandas.core.resample.Resampler.aggregate.html#pandas.core.resample.Resampler.aggregate
    "pandas.core.resample.Resampler.aggregate") and [`DataFrame.transform()`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform") raising a `TypeError` instead of `SpecificationError`
    when missing keys had mixed dtypes ([GH 39025](https://github.com/pandas-dev/pandas/issues/39025))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.idxmin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin") and [`DataFrameGroupBy.idxmax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax") with `ExtensionDtype` columns ([GH
    38733](https://github.com/pandas-dev/pandas/issues/38733))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") would raise when the index was a [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") consisting of `NaT` ([GH 39227](https://github.com/pandas-dev/pandas/issues/39227))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RollingGroupby.corr()` and `ExpandingGroupby.corr()` where the groupby
    column would return `0` instead of `np.nan` when providing `other` that was longer
    than each group ([GH 39591](https://github.com/pandas-dev/pandas/issues/39591))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ExpandingGroupby.corr()` and `ExpandingGroupby.cov()` where `1` would
    be returned instead of `np.nan` when providing `other` that was longer than each
    group ([GH 39591](https://github.com/pandas-dev/pandas/issues/39591))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.mean()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean"), [`SeriesGroupBy.mean()`](../reference/api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean"), [`DataFrameGroupBy.median()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.median.html#pandas.core.groupby.DataFrameGroupBy.median
    "pandas.core.groupby.DataFrameGroupBy.median"), [`SeriesGroupBy.median()`](../reference/api/pandas.core.groupby.SeriesGroupBy.median.html#pandas.core.groupby.SeriesGroupBy.median
    "pandas.core.groupby.SeriesGroupBy.median"), and [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") not propagating metadata ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") and [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") not calculating window bounds correctly when window
    is an offset and dates are in descending order ([GH 40002](https://github.com/pandas-dev/pandas/issues/40002))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") and [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") on an empty `Series` or `DataFrame` would lose index,
    columns, and/or data types when directly using the methods `idxmax`, `idxmin`,
    `mad`, `min`, `max`, `sum`, `prod`, and `skew` or using them through `apply`,
    `aggregate`, or `resample` ([GH 26411](https://github.com/pandas-dev/pandas/issues/26411))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") where a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") would be created instead of an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") when used on a `RollingGroupby` object ([GH 39732](https://github.com/pandas-dev/pandas/issues/39732))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.sample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sample.html#pandas.core.groupby.DataFrameGroupBy.sample
    "pandas.core.groupby.DataFrameGroupBy.sample") where an error was raised when
    `weights` was specified and the index was an `Int64Index` ([GH 39927](https://github.com/pandas-dev/pandas/issues/39927))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.aggregate()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.aggregate.html#pandas.core.groupby.DataFrameGroupBy.aggregate
    "pandas.core.groupby.DataFrameGroupBy.aggregate") and [`Resampler.aggregate()`](../reference/api/pandas.core.resample.Resampler.aggregate.html#pandas.core.resample.Resampler.aggregate
    "pandas.core.resample.Resampler.aggregate") would sometimes raise a `SpecificationError`
    when passed a dictionary and columns were missing; will now always raise a `KeyError`
    instead ([GH 40004](https://github.com/pandas-dev/pandas/issues/40004))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.sample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sample.html#pandas.core.groupby.DataFrameGroupBy.sample
    "pandas.core.groupby.DataFrameGroupBy.sample") where column selection was not
    applied before computing the result ([GH 39928](https://github.com/pandas-dev/pandas/issues/39928))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ExponentialMovingWindow` when calling `__getitem__` would incorrectly
    raise a `ValueError` when providing `times` ([GH 40164](https://github.com/pandas-dev/pandas/issues/40164))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ExponentialMovingWindow` when calling `__getitem__` would not retain
    `com`, `span`, `alpha` or `halflife` attributes ([GH 40164](https://github.com/pandas-dev/pandas/issues/40164))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExponentialMovingWindow` now raises a `NotImplementedError` when specifying
    `times` with `adjust=False` due to an incorrect calculation ([GH 40098](https://github.com/pandas-dev/pandas/issues/40098))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ExponentialMovingWindowGroupby.mean()` where the `times` argument was
    ignored when `engine='numba'` ([GH 40951](https://github.com/pandas-dev/pandas/issues/40951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ExponentialMovingWindowGroupby.mean()` where the wrong times were used
    the in case of multiple groups ([GH 40951](https://github.com/pandas-dev/pandas/issues/40951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ExponentialMovingWindowGroupby` where the times vector and values became
    out of sync for non-trivial groups ([GH 40951](https://github.com/pandas-dev/pandas/issues/40951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.asfreq()`](../reference/api/pandas.Series.asfreq.html#pandas.Series.asfreq
    "pandas.Series.asfreq") and [`DataFrame.asfreq()`](../reference/api/pandas.DataFrame.asfreq.html#pandas.DataFrame.asfreq
    "pandas.DataFrame.asfreq") dropping rows when the index was not sorted ([GH 39805](https://github.com/pandas-dev/pandas/issues/39805))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in aggregation functions for [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") not respecting `numeric_only` argument when `level` keyword
    was given ([GH 40660](https://github.com/pandas-dev/pandas/issues/40660))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.aggregate()`](../reference/api/pandas.core.groupby.SeriesGroupBy.aggregate.html#pandas.core.groupby.SeriesGroupBy.aggregate
    "pandas.core.groupby.SeriesGroupBy.aggregate") where using a user-defined function
    to aggregate a Series with an object-typed [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") causes an incorrect [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") shape ([GH 40014](https://github.com/pandas-dev/pandas/issues/40014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RollingGroupby` where `as_index=False` argument in `groupby` was ignored
    ([GH 39433](https://github.com/pandas-dev/pandas/issues/39433))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.any()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any"), [`SeriesGroupBy.any()`](../reference/api/pandas.core.groupby.SeriesGroupBy.any.html#pandas.core.groupby.SeriesGroupBy.any
    "pandas.core.groupby.SeriesGroupBy.any"), [`DataFrameGroupBy.all()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all") and [`SeriesGroupBy.all()`](../reference/api/pandas.core.groupby.SeriesGroupBy.all.html#pandas.core.groupby.SeriesGroupBy.all
    "pandas.core.groupby.SeriesGroupBy.all") raising a `ValueError` when using with
    nullable type columns holding `NA` even with `skipna=True` ([GH 40585](https://github.com/pandas-dev/pandas/issues/40585))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cummin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin"), [`SeriesGroupBy.cummin()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummin.html#pandas.core.groupby.SeriesGroupBy.cummin
    "pandas.core.groupby.SeriesGroupBy.cummin"), [`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax") and [`SeriesGroupBy.cummax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummax.html#pandas.core.groupby.SeriesGroupBy.cummax
    "pandas.core.groupby.SeriesGroupBy.cummax") incorrectly rounding integer values
    near the `int64` implementations bounds ([GH 40767](https://github.com/pandas-dev/pandas/issues/40767))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.rank()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank") and [`SeriesGroupBy.rank()`](../reference/api/pandas.core.groupby.SeriesGroupBy.rank.html#pandas.core.groupby.SeriesGroupBy.rank
    "pandas.core.groupby.SeriesGroupBy.rank") with nullable dtypes incorrectly raising
    a `TypeError` ([GH 41010](https://github.com/pandas-dev/pandas/issues/41010))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cummin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin"), [`SeriesGroupBy.cummin()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummin.html#pandas.core.groupby.SeriesGroupBy.cummin
    "pandas.core.groupby.SeriesGroupBy.cummin"), [`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax") and [`SeriesGroupBy.cummax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummax.html#pandas.core.groupby.SeriesGroupBy.cummax
    "pandas.core.groupby.SeriesGroupBy.cummax") computing wrong result with nullable
    data types too large to roundtrip when casting to float ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") returning mean zero for all `NaN` window with `min_periods=0`
    if calculation is not numerical stable ([GH 41053](https://github.com/pandas-dev/pandas/issues/41053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") returning sum not zero for all `NaN` window with `min_periods=0`
    if calculation is not numerical stable ([GH 41053](https://github.com/pandas-dev/pandas/issues/41053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.agg()`](../reference/api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg") failing to retain ordered [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") on order-preserving aggregations ([GH 41147](https://github.com/pandas-dev/pandas/issues/41147))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.min()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.min.html#pandas.core.groupby.DataFrameGroupBy.min
    "pandas.core.groupby.DataFrameGroupBy.min"), [`SeriesGroupBy.min()`](../reference/api/pandas.core.groupby.SeriesGroupBy.min.html#pandas.core.groupby.SeriesGroupBy.min
    "pandas.core.groupby.SeriesGroupBy.min"), [`DataFrameGroupBy.max()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.max.html#pandas.core.groupby.DataFrameGroupBy.max
    "pandas.core.groupby.DataFrameGroupBy.max") and [`SeriesGroupBy.max()`](../reference/api/pandas.core.groupby.SeriesGroupBy.max.html#pandas.core.groupby.SeriesGroupBy.max
    "pandas.core.groupby.SeriesGroupBy.max") with multiple object-dtype columns and
    `numeric_only=False` incorrectly raising a `ValueError` ([GH 41111](https://github.com/pandas-dev/pandas/issues/41111))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.rank()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank") with the GroupBy object’s `axis=0`
    and the `rank` method’s keyword `axis=1` ([GH 41320](https://github.com/pandas-dev/pandas/issues/41320))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.__getitem__()` with non-unique columns incorrectly
    returning a malformed `SeriesGroupBy` instead of `DataFrameGroupBy` ([GH 41427](https://github.com/pandas-dev/pandas/issues/41427))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") with non-unique columns incorrectly
    raising an `AttributeError` ([GH 41427](https://github.com/pandas-dev/pandas/issues/41427))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Resampler.apply()`](../reference/api/pandas.core.resample.Resampler.apply.html#pandas.core.resample.Resampler.apply
    "pandas.core.resample.Resampler.apply") with non-unique columns incorrectly dropping
    duplicated columns ([GH 41445](https://github.com/pandas-dev/pandas/issues/41445))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") aggregations incorrectly returning empty [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") instead of raising `TypeError` on aggregations that are invalid
    for its dtype, e.g. `.prod` with `datetime64[ns]` dtype ([GH 41342](https://github.com/pandas-dev/pandas/issues/41342))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy` aggregations incorrectly failing to drop columns with
    invalid dtypes for that aggregation when there are no valid columns ([GH 41291](https://github.com/pandas-dev/pandas/issues/41291))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.rolling.__iter__()` where `on` was not assigned to the index
    of the resulting objects ([GH 40373](https://github.com/pandas-dev/pandas/issues/40373))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") with `engine="numba"` where `*args`
    were being cached with the user passed function ([GH 41647](https://github.com/pandas-dev/pandas/issues/41647))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy` methods `agg`, `transform`, `sum`, `bfill`, `ffill`,
    `pad`, `pct_change`, `shift`, `ohlc` dropping `.columns.names` ([GH 41497](https://github.com/pandas-dev/pandas/issues/41497))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    raising error when performing an inner join with partial index and `right_index=True`
    when there was no overlap between indices ([GH 33814](https://github.com/pandas-dev/pandas/issues/33814))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") with missing levels led to incorrect index names ([GH
    37510](https://github.com/pandas-dev/pandas/issues/37510))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") propagating the right Index with `left_index=True` and `right_on`
    specification instead of left Index ([GH 33463](https://github.com/pandas-dev/pandas/issues/33463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") on a DataFrame with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") returned the wrong result when one of both indexes had only
    one level ([GH 36909](https://github.com/pandas-dev/pandas/issues/36909))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") now raises a `ValueError` instead of a cryptic `TypeError`
    in case of non-numerical merge columns ([GH 29130](https://github.com/pandas-dev/pandas/issues/29130))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") not assigning values correctly when the DataFrame had
    a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    where at least one dimension had dtype `Categorical` with non-alphabetically sorted
    categories ([GH 38502](https://github.com/pandas-dev/pandas/issues/38502))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts") and [`Series.mode()`](../reference/api/pandas.Series.mode.html#pandas.Series.mode
    "pandas.Series.mode") now return consistent keys in original order ([GH 12679](https://github.com/pandas-dev/pandas/issues/12679),
    [GH 11227](https://github.com/pandas-dev/pandas/issues/11227) and [GH 39007](https://github.com/pandas-dev/pandas/issues/39007))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") not handling `NaN` in [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") columns correctly ([GH 39481](https://github.com/pandas-dev/pandas/issues/39481))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") would give incorrect results when the argument `func`
    was a string, `axis=1`, and the axis argument was not supported; now raises a
    `ValueError` instead ([GH 39211](https://github.com/pandas-dev/pandas/issues/39211))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") not reshaping the index correctly after sorting
    on columns when `ignore_index=True` ([GH 39464](https://github.com/pandas-dev/pandas/issues/39464))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` returning incorrect dtypes with combinations of
    `ExtensionDtype` dtypes ([GH 39454](https://github.com/pandas-dev/pandas/issues/39454))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` returning incorrect dtypes when used with combinations
    of `datetime64` and `timedelta64` dtypes ([GH 39574](https://github.com/pandas-dev/pandas/issues/39574))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` with a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and appending a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") whose [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") is not a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 41707](https://github.com/pandas-dev/pandas/issues/41707))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") returning a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") for a single value when operating on an empty DataFrame ([GH
    13483](https://github.com/pandas-dev/pandas/issues/13483))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") can
    now be passed to the [`numpy.all()`](https://numpy.org/doc/stable/reference/generated/numpy.all.html#numpy.all
    "(in NumPy v1.26)") function ([GH 40180](https://github.com/pandas-dev/pandas/issues/40180))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") not preserving `CategoricalDtype` in a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 36991](https://github.com/pandas-dev/pandas/issues/36991))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") raising an error when the input sequence contained unhashable
    items ([GH 39756](https://github.com/pandas-dev/pandas/issues/39756))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode") preserving the index when `ignore_index` was `True` and
    values were scalars ([GH 40487](https://github.com/pandas-dev/pandas/issues/40487))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") raising a `ValueError` when [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") contains `None` and `NaT` and has more than 50 elements ([GH
    39882](https://github.com/pandas-dev/pandas/issues/39882))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack") and [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") with object-dtype values containing timezone-aware
    datetime objects incorrectly raising `TypeError` ([GH 41875](https://github.com/pandas-dev/pandas/issues/41875))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") raising `InvalidIndexError` when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has duplicate columns used as `value_vars` ([GH 41951](https://github.com/pandas-dev/pandas/issues/41951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sparse.to_coo()`](../reference/api/pandas.DataFrame.sparse.to_coo.html#pandas.DataFrame.sparse.to_coo
    "pandas.DataFrame.sparse.to_coo") raising a `KeyError` with columns that are a
    numeric [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    without a `0` ([GH 18414](https://github.com/pandas-dev/pandas/issues/18414))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseArray.astype()` with `copy=False` producing incorrect results
    when going from integer dtype to floating dtype ([GH 34456](https://github.com/pandas-dev/pandas/issues/34456))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseArray.max()` and `SparseArray.min()` would always return an empty
    result ([GH 40921](https://github.com/pandas-dev/pandas/issues/40921))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") when `other` is a Series with an `ExtensionDtype` ([GH
    38729](https://github.com/pandas-dev/pandas/issues/38729))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax"), [`Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin"), [`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax"), and [`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin") would fail when the underlying data is an `ExtensionArray`
    ([GH 32749](https://github.com/pandas-dev/pandas/issues/32749), [GH 33719](https://github.com/pandas-dev/pandas/issues/33719),
    [GH 36566](https://github.com/pandas-dev/pandas/issues/36566))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where some properties of subclasses of `PandasExtensionDtype` where
    improperly cached ([GH 40329](https://github.com/pandas-dev/pandas/issues/40329))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask") where masking a DataFrame with an `ExtensionDtype` raises
    a `ValueError` ([GH 40941](https://github.com/pandas-dev/pandas/issues/40941))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styler
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") where the `subset` argument in methods raised
    an error for some valid MultiIndex slices ([GH 33562](https://github.com/pandas-dev/pandas/issues/33562))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") rendered HTML output has seen minor alterations
    to support w3 good code standards ([GH 39626](https://github.com/pandas-dev/pandas/issues/39626))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") where rendered HTML was missing a column class
    identifier for certain header cells ([GH 39716](https://github.com/pandas-dev/pandas/issues/39716))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Styler.background_gradient()`](../reference/api/pandas.io.formats.style.Styler.background_gradient.html#pandas.io.formats.style.Styler.background_gradient
    "pandas.io.formats.style.Styler.background_gradient") where text-color was not
    determined correctly ([GH 39888](https://github.com/pandas-dev/pandas/issues/39888))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Styler.set_table_styles()`](../reference/api/pandas.io.formats.style.Styler.set_table_styles.html#pandas.io.formats.style.Styler.set_table_styles
    "pandas.io.formats.style.Styler.set_table_styles") where multiple elements in
    CSS-selectors of the `table_styles` argument were not correctly added ([GH 34061](https://github.com/pandas-dev/pandas/issues/34061))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") where copying from Jupyter dropped the top left
    cell and misaligned headers ([GH 12147](https://github.com/pandas-dev/pandas/issues/12147))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Styler.where` where `kwargs` were not passed to the applicable callable
    ([GH 40845](https://github.com/pandas-dev/pandas/issues/40845))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") causing CSS to duplicate on multiple renders
    ([GH 39395](https://github.com/pandas-dev/pandas/issues/39395), [GH 40334](https://github.com/pandas-dev/pandas/issues/40334))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`inspect.getmembers(Series)` no longer raises an `AbstractMethodError` ([GH
    38782](https://github.com/pandas-dev/pandas/issues/38782))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") with numeric dtype and `other=None` not casting to `nan`
    ([GH 39761](https://github.com/pandas-dev/pandas/issues/39761))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal"), [`assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal"), [`assert_index_equal()`](../reference/api/pandas.testing.assert_index_equal.html#pandas.testing.assert_index_equal
    "pandas.testing.assert_index_equal") and [`assert_extension_array_equal()`](../reference/api/pandas.testing.assert_extension_array_equal.html#pandas.testing.assert_extension_array_equal
    "pandas.testing.assert_extension_array_equal") incorrectly raising when an attribute
    has an unrecognized NA type ([GH 39461](https://github.com/pandas-dev/pandas/issues/39461))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`assert_index_equal()`](../reference/api/pandas.testing.assert_index_equal.html#pandas.testing.assert_index_equal
    "pandas.testing.assert_index_equal") with `exact=True` not raising when comparing
    [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") instances with `Int64Index` and `RangeIndex` categories
    ([GH 41263](https://github.com/pandas-dev/pandas/issues/41263))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.equals()`](../reference/api/pandas.DataFrame.equals.html#pandas.DataFrame.equals
    "pandas.DataFrame.equals"), [`Series.equals()`](../reference/api/pandas.Series.equals.html#pandas.Series.equals
    "pandas.Series.equals"), and [`Index.equals()`](../reference/api/pandas.Index.equals.html#pandas.Index.equals
    "pandas.Index.equals") with object-dtype containing `np.datetime64("NaT")` or
    `np.timedelta64("NaT")` ([GH 39650](https://github.com/pandas-dev/pandas/issues/39650))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`show_versions()`](../reference/api/pandas.show_versions.html#pandas.show_versions
    "pandas.show_versions") where console JSON output was not proper JSON ([GH 39701](https://github.com/pandas-dev/pandas/issues/39701))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pandas can now compile on z/OS when using [xlc](https://www.ibm.com/products/xl-cpp-compiler-zos)
    ([GH 35826](https://github.com/pandas-dev/pandas/issues/35826))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.util.hash_pandas_object()`](../reference/api/pandas.util.hash_pandas_object.html#pandas.util.hash_pandas_object
    "pandas.util.hash_pandas_object") not recognizing `hash_key`, `encoding` and `categorize`
    when the input object type is a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 41404](https://github.com/pandas-dev/pandas/issues/41404))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") incorrectly failing to raise `TypeError` when scalar
    data is passed ([GH 38614](https://github.com/pandas-dev/pandas/issues/38614))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CategoricalIndex.reindex` failed when the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") passed was not categorical but whose values were all labels in
    the category ([GH 28690](https://github.com/pandas-dev/pandas/issues/28690))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where constructing a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") from an object-dtype array of `date` objects did not round-trip
    correctly with `astype` ([GH 38552](https://github.com/pandas-dev/pandas/issues/38552))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from an `ndarray` and a [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") ([GH 38857](https://github.com/pandas-dev/pandas/issues/38857))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting categorical values into an object-dtype column in a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 39136](https://github.com/pandas-dev/pandas/issues/39136))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") was raising an `IndexError` when the new index contained
    duplicates and the old index was a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 38906](https://github.com/pandas-dev/pandas/issues/38906))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.fillna()` with a tuple-like category raising `NotImplementedError`
    instead of `ValueError` when filling with a non-category tuple ([GH 41914](https://github.com/pandas-dev/pandas/issues/41914))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") constructors sometimes dropping nanoseconds from [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") (resp. [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta")) `data`, with `dtype=datetime64[ns]` (resp. `timedelta64[ns]`)
    ([GH 38032](https://github.com/pandas-dev/pandas/issues/38032))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.first()`](../reference/api/pandas.DataFrame.first.html#pandas.DataFrame.first
    "pandas.DataFrame.first") and [`Series.first()`](../reference/api/pandas.Series.first.html#pandas.Series.first
    "pandas.Series.first") with an offset of one month returning an incorrect result
    when the first day is the last day of a month ([GH 29623](https://github.com/pandas-dev/pandas/issues/29623))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with mismatched `datetime64` data and `timedelta64` dtype, or
    vice-versa, failing to raise a `TypeError` ([GH 38575](https://github.com/pandas-dev/pandas/issues/38575),
    [GH 38764](https://github.com/pandas-dev/pandas/issues/38764), [GH 38792](https://github.com/pandas-dev/pandas/issues/38792))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a `datetime` object out of bounds for `datetime64[ns]`
    dtype or a `timedelta` object out of bounds for `timedelta64[ns]` dtype ([GH 38792](https://github.com/pandas-dev/pandas/issues/38792),
    [GH 38965](https://github.com/pandas-dev/pandas/issues/38965))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.intersection()`, `DatetimeIndex.symmetric_difference()`,
    `PeriodIndex.intersection()`, `PeriodIndex.symmetric_difference()` always returning
    object-dtype when operating with [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 38741](https://github.com/pandas-dev/pandas/issues/38741))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.intersection()` giving incorrect results with non-Tick
    frequencies with `n != 1` ([GH 42104](https://github.com/pandas-dev/pandas/issues/42104))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") incorrectly casting `datetime64` values to `int64` ([GH
    37682](https://github.com/pandas-dev/pandas/issues/37682))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") incorrectly typecasting `datetime` object to `Timestamp`
    ([GH 38878](https://github.com/pandas-dev/pandas/issues/38878))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in comparisons between [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") object and `datetime64` objects just outside the implementation
    bounds for nanosecond `datetime64` ([GH 39221](https://github.com/pandas-dev/pandas/issues/39221))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.round()`](../reference/api/pandas.Timestamp.round.html#pandas.Timestamp.round
    "pandas.Timestamp.round"), [`Timestamp.floor()`](../reference/api/pandas.Timestamp.floor.html#pandas.Timestamp.floor
    "pandas.Timestamp.floor"), [`Timestamp.ceil()`](../reference/api/pandas.Timestamp.ceil.html#pandas.Timestamp.ceil
    "pandas.Timestamp.ceil") for values near the implementation bounds of [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") ([GH 39244](https://github.com/pandas-dev/pandas/issues/39244))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta.round()`](../reference/api/pandas.Timedelta.round.html#pandas.Timedelta.round
    "pandas.Timedelta.round"), [`Timedelta.floor()`](../reference/api/pandas.Timedelta.floor.html#pandas.Timedelta.floor
    "pandas.Timedelta.floor"), [`Timedelta.ceil()`](../reference/api/pandas.Timedelta.ceil.html#pandas.Timedelta.ceil
    "pandas.Timedelta.ceil") for values near the implementation bounds of [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") ([GH 38964](https://github.com/pandas-dev/pandas/issues/38964))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") incorrectly creating [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") containing `NaT` instead of raising `OutOfBoundsDatetime`
    in corner cases ([GH 24124](https://github.com/pandas-dev/pandas/issues/24124))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`infer_freq()`](../reference/api/pandas.infer_freq.html#pandas.infer_freq
    "pandas.infer_freq") incorrectly fails to infer ‘H’ frequency of [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") if the latter has a timezone and crosses DST boundaries
    ([GH 39556](https://github.com/pandas-dev/pandas/issues/39556))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    backed by `DatetimeArray` or `TimedeltaArray` sometimes failing to set the array’s
    `freq` to `None` ([GH 41425](https://github.com/pandas-dev/pandas/issues/41425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in constructing [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") from `np.timedelta64` objects with non-nanosecond units that
    are out of bounds for `timedelta64[ns]` ([GH 38965](https://github.com/pandas-dev/pandas/issues/38965))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") incorrectly accepting `np.datetime64("NaT")` objects
    ([GH 39462](https://github.com/pandas-dev/pandas/issues/39462))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") from an input string with only symbols and no digits failed
    to raise an error ([GH 39710](https://github.com/pandas-dev/pandas/issues/39710))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") and [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") failing to raise when passed non-nanosecond `timedelta64`
    arrays that overflow when converting to `timedelta64[ns]` ([GH 40008](https://github.com/pandas-dev/pandas/issues/40008))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in different `tzinfo` objects representing UTC not being treated as equivalent
    ([GH 39216](https://github.com/pandas-dev/pandas/issues/39216))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `dateutil.tz.gettz("UTC")` not being recognized as equivalent to other
    UTC-representing tzinfos ([GH 39276](https://github.com/pandas-dev/pandas/issues/39276))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile"), [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") causing incorrect subsequent indexing behavior
    ([GH 38351](https://github.com/pandas-dev/pandas/issues/38351))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") raising an [`IndexError`](https://docs.python.org/3/library/exceptions.html#IndexError
    "(in Python v3.12)") for empty `by` ([GH 40258](https://github.com/pandas-dev/pandas/issues/40258))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.select_dtypes()`](../reference/api/pandas.DataFrame.select_dtypes.html#pandas.DataFrame.select_dtypes
    "pandas.DataFrame.select_dtypes") with `include=np.number` would drop numeric
    `ExtensionDtype` columns ([GH 35340](https://github.com/pandas-dev/pandas/issues/35340))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.mode()`](../reference/api/pandas.DataFrame.mode.html#pandas.DataFrame.mode
    "pandas.DataFrame.mode") and [`Series.mode()`](../reference/api/pandas.Series.mode.html#pandas.Series.mode
    "pandas.Series.mode") not keeping consistent integer [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") for empty input ([GH 33321](https://github.com/pandas-dev/pandas/issues/33321))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank") when the DataFrame contained `np.inf` ([GH 32593](https://github.com/pandas-dev/pandas/issues/32593))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank") with `axis=0` and columns holding incomparable types
    raising an `IndexError` ([GH 38932](https://github.com/pandas-dev/pandas/issues/38932))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rank()`](../reference/api/pandas.Series.rank.html#pandas.Series.rank
    "pandas.Series.rank"), [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank"), [`DataFrameGroupBy.rank()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank"), and [`SeriesGroupBy.rank()`](../reference/api/pandas.core.groupby.SeriesGroupBy.rank.html#pandas.core.groupby.SeriesGroupBy.rank
    "pandas.core.groupby.SeriesGroupBy.rank") treating the most negative `int64` value
    as missing ([GH 32859](https://github.com/pandas-dev/pandas/issues/32859))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.select_dtypes()`](../reference/api/pandas.DataFrame.select_dtypes.html#pandas.DataFrame.select_dtypes
    "pandas.DataFrame.select_dtypes") different behavior between Windows and Linux
    with `include="int"` ([GH 36596](https://github.com/pandas-dev/pandas/issues/36596))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") and [`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") when passed the argument `func="size"` would operate on
    the entire `DataFrame` instead of rows or columns ([GH 39934](https://github.com/pandas-dev/pandas/issues/39934))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.transform()`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform") would raise a `SpecificationError` when passed a
    dictionary and columns were missing; will now raise a `KeyError` instead ([GH
    40004](https://github.com/pandas-dev/pandas/issues/40004))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.rank()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank") and [`SeriesGroupBy.rank()`](../reference/api/pandas.core.groupby.SeriesGroupBy.rank.html#pandas.core.groupby.SeriesGroupBy.rank
    "pandas.core.groupby.SeriesGroupBy.rank") giving incorrect results with `pct=True`
    and equal values between consecutive groups ([GH 40518](https://github.com/pandas-dev/pandas/issues/40518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.count()`](../reference/api/pandas.Series.count.html#pandas.Series.count
    "pandas.Series.count") would result in an `int32` result on 32-bit platforms when
    argument `level=None` ([GH 40908](https://github.com/pandas-dev/pandas/issues/40908))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    reductions with methods `any` and `all` not returning Boolean results for object
    data ([GH 12863](https://github.com/pandas-dev/pandas/issues/12863), [GH 35450](https://github.com/pandas-dev/pandas/issues/35450),
    [GH 27709](https://github.com/pandas-dev/pandas/issues/27709))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip") would fail if the Series contains NA values and has nullable
    int or float as a data type ([GH 40851](https://github.com/pandas-dev/pandas/issues/40851))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `UInt64Index.where()` and `UInt64Index.putmask()` with an `np.int64`
    dtype `other` incorrectly raising `TypeError` ([GH 41974](https://github.com/pandas-dev/pandas/issues/41974))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") not sorting the aggregated axis in the order of the provided
    aggregation functions when one or more aggregation function fails to produce results
    ([GH 33634](https://github.com/pandas-dev/pandas/issues/33634))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip") not interpreting missing values as no threshold ([GH
    40420](https://github.com/pandas-dev/pandas/issues/40420))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.to_dict()`](../reference/api/pandas.Series.to_dict.html#pandas.Series.to_dict
    "pandas.Series.to_dict") with `orient='records'` now returns Python native types
    ([GH 25969](https://github.com/pandas-dev/pandas/issues/25969))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.view()`](../reference/api/pandas.Series.view.html#pandas.Series.view
    "pandas.Series.view") and [`Index.view()`](../reference/api/pandas.Index.view.html#pandas.Index.view
    "pandas.Index.view") when converting between datetime-like (`datetime64[ns]`,
    `datetime64[ns, tz]`, `timedelta64`, `period`) dtypes ([GH 39788](https://github.com/pandas-dev/pandas/issues/39788))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in creating a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from an empty `np.recarray` not retaining the original dtypes
    ([GH 40121](https://github.com/pandas-dev/pandas/issues/40121))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") failing to raise a `TypeError` when constructing from a `frozenset`
    ([GH 40163](https://github.com/pandas-dev/pandas/issues/40163))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    construction silently ignoring a passed `dtype` when the data cannot be cast to
    that dtype ([GH 21311](https://github.com/pandas-dev/pandas/issues/21311))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `StringArray.astype()` falling back to NumPy and raising when converting
    to `dtype='categorical'` ([GH 40450](https://github.com/pandas-dev/pandas/issues/40450))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") where, when given an array with a numeric NumPy dtype lower
    than int64, uint64 and float64, the unique values did not keep their original
    dtype ([GH 41132](https://github.com/pandas-dev/pandas/issues/41132))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") construction with a dictionary containing an array-like with
    `ExtensionDtype` and `copy=True` failing to make a copy ([GH 38939](https://github.com/pandas-dev/pandas/issues/38939))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`qcut()`](../reference/api/pandas.qcut.html#pandas.qcut "pandas.qcut")
    raising error when taking `Float64DType` as input ([GH 40730](https://github.com/pandas-dev/pandas/issues/40730))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") construction with `datetime64[ns]` data and `dtype=object` resulting
    in `datetime` objects instead of [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") objects ([GH 41599](https://github.com/pandas-dev/pandas/issues/41599))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") construction with `timedelta64[ns]` data and `dtype=object` resulting
    in `np.timedelta64` objects instead of [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") objects ([GH 41599](https://github.com/pandas-dev/pandas/issues/41599))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") construction when given a two-dimensional object-dtype `np.ndarray`
    of [`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    or [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    objects failing to cast to [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") or [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype"), respectively ([GH 41812](https://github.com/pandas-dev/pandas/issues/41812))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") from a list and a `PandasDtype` ([GH 39357](https://github.com/pandas-dev/pandas/issues/39357))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in creating a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") from a `range` object that does not fit in the bounds of `int64`
    dtype ([GH 30173](https://github.com/pandas-dev/pandas/issues/30173))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in creating a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") from a `dict` with all-tuple keys and an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") that requires reindexing ([GH 41707](https://github.com/pandas-dev/pandas/issues/41707))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") not recognizing Series, Index, or array with a
    Period dtype ([GH 23553](https://github.com/pandas-dev/pandas/issues/23553))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") raising an error for general [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") objects. It will now return `"unknown-array"`
    instead of raising ([GH 37367](https://github.com/pandas-dev/pandas/issues/37367))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.convert_dtypes()`](../reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes
    "pandas.DataFrame.convert_dtypes") incorrectly raised a `ValueError` when called
    on an empty DataFrame ([GH 40393](https://github.com/pandas-dev/pandas/issues/40393))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in the conversion from `pyarrow.ChunkedArray` to [`StringArray`](../reference/api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray") when the original had zero chunks ([GH 41040](https://github.com/pandas-dev/pandas/issues/41040))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") and [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") ignoring replacements with `regex=True` for `StringDType`
    data ([GH 41333](https://github.com/pandas-dev/pandas/issues/41333), [GH 35977](https://github.com/pandas-dev/pandas/issues/35977))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.extract()`](../reference/api/pandas.Series.str.extract.html#pandas.Series.str.extract
    "pandas.Series.str.extract") with [`StringArray`](../reference/api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray") returning object dtype for an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 41441](https://github.com/pandas-dev/pandas/issues/41441))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.replace()`](../reference/api/pandas.Series.str.replace.html#pandas.Series.str.replace
    "pandas.Series.str.replace") where the `case` argument was ignored when `regex=False`
    ([GH 41602](https://github.com/pandas-dev/pandas/issues/41602))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.intersection()` and `IntervalIndex.symmetric_difference()`
    always returning object-dtype when operating with [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 38653](https://github.com/pandas-dev/pandas/issues/38653),
    [GH 38741](https://github.com/pandas-dev/pandas/issues/38741))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.intersection()` returning duplicates when at least one
    of the [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    objects have duplicates which are present in the other ([GH 38743](https://github.com/pandas-dev/pandas/issues/38743))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntervalIndex.union()`, `IntervalIndex.intersection()`, `IntervalIndex.difference()`,
    and `IntervalIndex.symmetric_difference()` now cast to the appropriate dtype instead
    of raising a `TypeError` when operating with another [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") with incompatible dtype ([GH 39267](https://github.com/pandas-dev/pandas/issues/39267))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`PeriodIndex.union()`, `PeriodIndex.intersection()`, `PeriodIndex.symmetric_difference()`,
    `PeriodIndex.difference()` now cast to object dtype instead of raising `IncompatibleFrequency`
    when operating with another [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") with incompatible dtype ([GH 39306](https://github.com/pandas-dev/pandas/issues/39306))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.is_monotonic()`, [`IntervalIndex.get_loc()`](../reference/api/pandas.IntervalIndex.get_loc.html#pandas.IntervalIndex.get_loc
    "pandas.IntervalIndex.get_loc"), `IntervalIndex.get_indexer_for()`, and `IntervalIndex.__contains__()`
    when NA values are present ([GH 41831](https://github.com/pandas-dev/pandas/issues/41831))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") and `MultiIndex.union()` dropping duplicate `Index` values
    when `Index` was not monotonic or `sort` was set to `False` ([GH 36289](https://github.com/pandas-dev/pandas/issues/36289),
    [GH 31326](https://github.com/pandas-dev/pandas/issues/31326), [GH 40862](https://github.com/pandas-dev/pandas/issues/40862))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CategoricalIndex.get_indexer()` failing to raise `InvalidIndexError`
    when non-unique ([GH 38372](https://github.com/pandas-dev/pandas/issues/38372))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.get_indexer()`](../reference/api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer") when `target` has `CategoricalDtype` and both
    the index and the target contain NA values ([GH 41934](https://github.com/pandas-dev/pandas/issues/41934))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") raising a `ValueError` when input was filtered with a Boolean
    list and values to set were a list with lower dimension ([GH 20438](https://github.com/pandas-dev/pandas/issues/20438))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in inserting many new columns into a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") causing incorrect subsequent indexing behavior ([GH 38380](https://github.com/pandas-dev/pandas/issues/38380))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` raising a `ValueError` when setting multiple
    values to duplicate columns ([GH 15695](https://github.com/pandas-dev/pandas/issues/15695))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc"), [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc"), `DataFrame.__getitem__()` and `Series.__getitem__()` returning
    incorrect elements for non-monotonic [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") for string slices ([GH 33146](https://github.com/pandas-dev/pandas/issues/33146))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") and [`Series.reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex") with timezone aware indexes raising a `TypeError` for
    `method="ffill"` and `method="bfill"` and specified `tolerance` ([GH 38566](https://github.com/pandas-dev/pandas/issues/38566))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") with `datetime64[ns]` or `timedelta64[ns]` incorrectly
    casting to integers when the `fill_value` requires casting to object dtype ([GH
    39755](https://github.com/pandas-dev/pandas/issues/39755))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` raising a `ValueError` when setting on an empty
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    using specified columns and a nonempty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") value ([GH 38831](https://github.com/pandas-dev/pandas/issues/38831))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc.__setitem__()` raising a `ValueError` when operating on
    a unique column when the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has duplicate columns ([GH 38521](https://github.com/pandas-dev/pandas/issues/38521))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.iloc.__setitem__()` and `DataFrame.loc.__setitem__()` with
    mixed dtypes when setting with a dictionary value ([GH 38335](https://github.com/pandas-dev/pandas/issues/38335))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.loc.__setitem__()` and `DataFrame.loc.__setitem__()` raising
    `KeyError` when provided a Boolean generator ([GH 39614](https://github.com/pandas-dev/pandas/issues/39614))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.iloc()`](../reference/api/pandas.Series.iloc.html#pandas.Series.iloc
    "pandas.Series.iloc") and [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") raising a `KeyError` when provided a generator ([GH 39614](https://github.com/pandas-dev/pandas/issues/39614))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` not raising a `ValueError` when the right hand
    side is a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with wrong number of columns ([GH 38604](https://github.com/pandas-dev/pandas/issues/38604))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` raising a `ValueError` when setting a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a scalar indexer ([GH 38303](https://github.com/pandas-dev/pandas/issues/38303))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") dropping levels of a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") when the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") used as input has only one row ([GH 10521](https://github.com/pandas-dev/pandas/issues/10521))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__getitem__()` and `Series.__getitem__()` always raising `KeyError`
    when slicing with existing strings where the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") has milliseconds ([GH 33589](https://github.com/pandas-dev/pandas/issues/33589))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting `timedelta64` or `datetime64` values into numeric [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") failing to cast to object dtype ([GH 39086](https://github.com/pandas-dev/pandas/issues/39086),
    [GH 39619](https://github.com/pandas-dev/pandas/issues/39619))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") values into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with mismatched [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") incorrectly casting the new values to the existing dtype
    ([GH 39120](https://github.com/pandas-dev/pandas/issues/39120))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting `datetime64` values into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with integer-dtype incorrectly casting the datetime64 values
    to integers ([GH 39266](https://github.com/pandas-dev/pandas/issues/39266))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting `np.datetime64("NaT")` into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `Datetime64TZDtype` incorrectly treating the timezone-naive
    value as timezone-aware ([GH 39769](https://github.com/pandas-dev/pandas/issues/39769))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.get_loc()`](../reference/api/pandas.Index.get_loc.html#pandas.Index.get_loc
    "pandas.Index.get_loc") not raising `KeyError` when `key=NaN` and `method` is
    specified but `NaN` is not in the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 39382](https://github.com/pandas-dev/pandas/issues/39382))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.insert()` when inserting `np.datetime64("NaT")` into a
    timezone-aware index incorrectly treating the timezone-naive value as timezone-aware
    ([GH 39769](https://github.com/pandas-dev/pandas/issues/39769))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in incorrectly raising in [`Index.insert()`](../reference/api/pandas.Index.insert.html#pandas.Index.insert
    "pandas.Index.insert"), when setting a new column that cannot be held in the existing
    `frame.columns`, or in [`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index") or [`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") instead of casting to a compatible dtype ([GH
    39068](https://github.com/pandas-dev/pandas/issues/39068))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RangeIndex.append()` where a single object of length 1 was concatenated
    incorrectly ([GH 39401](https://github.com/pandas-dev/pandas/issues/39401))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RangeIndex.astype()` where when converting to [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex"), the categories became a `Int64Index` instead of a
    [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex "pandas.RangeIndex")
    ([GH 41263](https://github.com/pandas-dev/pandas/issues/41263))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting `numpy.timedelta64` values into an object-dtype [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") using a Boolean indexer ([GH 39488](https://github.com/pandas-dev/pandas/issues/39488))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting numeric values into a into a boolean-dtypes [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") using `at` or `iat` failing to cast to object-dtype ([GH 39582](https://github.com/pandas-dev/pandas/issues/39582))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` and `DataFrame.iloc.__setitem__()` raising
    `ValueError` when trying to index with a row-slice and setting a list as values
    ([GH 40440](https://github.com/pandas-dev/pandas/issues/40440))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") not raising `KeyError` when the key was not found in [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and the levels were not fully specified ([GH 41170](https://github.com/pandas-dev/pandas/issues/41170))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc.__setitem__()` when setting-with-expansion incorrectly
    raising when the index in the expanding axis contained duplicates ([GH 40096](https://github.com/pandas-dev/pandas/issues/40096))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc.__getitem__()` with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") casting to float when at least one index column has float
    dtype and we retrieve a scalar ([GH 41369](https://github.com/pandas-dev/pandas/issues/41369))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") incorrectly matching non-Boolean index elements ([GH 20432](https://github.com/pandas-dev/pandas/issues/20432))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing with `np.nan` on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") incorrectly raising `KeyError` when `np.nan` keys are
    present ([GH 41933](https://github.com/pandas-dev/pandas/issues/41933))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__delitem__()` with `ExtensionDtype` incorrectly casting to `ndarray`
    ([GH 40386](https://github.com/pandas-dev/pandas/issues/40386))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.at()`](../reference/api/pandas.DataFrame.at.html#pandas.DataFrame.at
    "pandas.DataFrame.at") with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") returning incorrect results when passed integer keys
    ([GH 41846](https://github.com/pandas-dev/pandas/issues/41846))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") returning a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") in the wrong order if an indexer has duplicates ([GH 40978](https://github.com/pandas-dev/pandas/issues/40978))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` raising a `TypeError` when using a `str` subclass
    as the column name with a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 37366](https://github.com/pandas-dev/pandas/issues/37366))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `PeriodIndex.get_loc()` failing to raise a `KeyError` when given a [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") with a mismatched `freq` ([GH 41670](https://github.com/pandas-dev/pandas/issues/41670))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug `.loc.__getitem__` with a `UInt64Index` and negative-integer keys raising
    `OverflowError` instead of `KeyError` in some cases, wrapping around to positive
    integers in others ([GH 41777](https://github.com/pandas-dev/pandas/issues/41777))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.get_indexer()`](../reference/api/pandas.Index.get_indexer.html#pandas.Index.get_indexer
    "pandas.Index.get_indexer") failing to raise `ValueError` in some cases with invalid
    `method`, `limit`, or `tolerance` arguments ([GH 41918](https://github.com/pandas-dev/pandas/issues/41918))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when slicing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") when passing an invalid string raising `ValueError` instead
    of a `TypeError` ([GH 41821](https://github.com/pandas-dev/pandas/issues/41821))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    constructor sometimes silently ignoring a specified `dtype` ([GH 38879](https://github.com/pandas-dev/pandas/issues/38879))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.where()`](../reference/api/pandas.Index.where.html#pandas.Index.where
    "pandas.Index.where") behavior now mirrors [`Index.putmask()`](../reference/api/pandas.Index.putmask.html#pandas.Index.putmask
    "pandas.Index.putmask") behavior, i.e. `index.where(mask, other)` matches `index.putmask(~mask,
    other)` ([GH 39412](https://github.com/pandas-dev/pandas/issues/39412))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper "pandas.Grouper")
    did not correctly propagate the `dropna` argument; [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") now correctly handles missing
    values for `dropna=True` ([GH 35612](https://github.com/pandas-dev/pandas/issues/35612))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`isna()`](../reference/api/pandas.isna.html#pandas.isna "pandas.isna"),
    [`Series.isna()`](../reference/api/pandas.Series.isna.html#pandas.Series.isna
    "pandas.Series.isna"), [`Index.isna()`](../reference/api/pandas.Index.isna.html#pandas.Index.isna
    "pandas.Index.isna"), [`DataFrame.isna()`](../reference/api/pandas.DataFrame.isna.html#pandas.DataFrame.isna
    "pandas.DataFrame.isna"), and the corresponding `notna` functions not recognizing
    `Decimal("NaN")` objects ([GH 39409](https://github.com/pandas-dev/pandas/issues/39409))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") not accepting a dictionary for the `downcast` keyword
    ([GH 40809](https://github.com/pandas-dev/pandas/issues/40809))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`isna()`](../reference/api/pandas.isna.html#pandas.isna "pandas.isna")
    not returning a copy of the mask for nullable types, causing any subsequent mask
    modification to change the original array ([GH 40935](https://github.com/pandas-dev/pandas/issues/40935))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") construction with float data containing `NaN` and an integer
    `dtype` casting instead of retaining the `NaN` ([GH 26919](https://github.com/pandas-dev/pandas/issues/26919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") and `MultiIndex.isin()` didn’t treat all nans as equivalent
    if they were in tuples ([GH 41836](https://github.com/pandas-dev/pandas/issues/41836))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") raising a `TypeError` when the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") is non-unique and `level` is not provided ([GH 36293](https://github.com/pandas-dev/pandas/issues/36293))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.intersection()` duplicating `NaN` in the result ([GH 38623](https://github.com/pandas-dev/pandas/issues/38623))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.equals()` incorrectly returning `True` when the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") contained `NaN` even when they are differently ordered ([GH
    38439](https://github.com/pandas-dev/pandas/issues/38439))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.intersection()` always returning an empty result when intersecting
    with [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 38653](https://github.com/pandas-dev/pandas/issues/38653))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.difference()` incorrectly raising `TypeError` when indexes
    contain non-sortable entries ([GH 41915](https://github.com/pandas-dev/pandas/issues/41915))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.reindex()` raising a `ValueError` when used on an empty [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and indexing only a specific level ([GH 41170](https://github.com/pandas-dev/pandas/issues/41170))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.reindex()` raising `TypeError` when reindexing against a
    flat [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    ([GH 41707](https://github.com/pandas-dev/pandas/issues/41707))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I/O
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Index.__repr__()` when `display.max_seq_items=1` ([GH 38415](https://github.com/pandas-dev/pandas/issues/38415))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not recognizing scientific notation if the argument `decimal`
    is set and `engine="python"` ([GH 31920](https://github.com/pandas-dev/pandas/issues/31920))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") interpreting `NA` value as comment, when `NA` does contain
    the comment string fixed for `engine="python"` ([GH 34002](https://github.com/pandas-dev/pandas/issues/34002))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") raising an `IndexError` with multiple header columns and `index_col`
    is specified when the file has no data rows ([GH 38292](https://github.com/pandas-dev/pandas/issues/38292))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not accepting `usecols` with a different length than `names`
    for `engine="python"` ([GH 16469](https://github.com/pandas-dev/pandas/issues/16469))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") returning object dtype when `delimiter=","` with `usecols`
    and `parse_dates` specified for `engine="python"` ([GH 35873](https://github.com/pandas-dev/pandas/issues/35873))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") raising a `TypeError` when `names` and `parse_dates` is specified
    for `engine="c"` ([GH 33699](https://github.com/pandas-dev/pandas/issues/33699))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_clipboard()`](../reference/api/pandas.read_clipboard.html#pandas.read_clipboard
    "pandas.read_clipboard") and [`DataFrame.to_clipboard()`](../reference/api/pandas.DataFrame.to_clipboard.html#pandas.DataFrame.to_clipboard
    "pandas.DataFrame.to_clipboard") not working in WSL ([GH 38527](https://github.com/pandas-dev/pandas/issues/38527))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow custom error values for the `parse_dates` argument of [`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql
    "pandas.read_sql"), [`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query") and [`read_sql_table()`](../reference/api/pandas.read_sql_table.html#pandas.read_sql_table
    "pandas.read_sql_table") ([GH 35185](https://github.com/pandas-dev/pandas/issues/35185))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_hdf()`](../reference/api/pandas.DataFrame.to_hdf.html#pandas.DataFrame.to_hdf
    "pandas.DataFrame.to_hdf") and [`Series.to_hdf()`](../reference/api/pandas.Series.to_hdf.html#pandas.Series.to_hdf
    "pandas.Series.to_hdf") raising a `KeyError` when trying to apply for subclasses
    of `DataFrame` or `Series` ([GH 33748](https://github.com/pandas-dev/pandas/issues/33748))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`HDFStore.put()`](../reference/api/pandas.HDFStore.put.html#pandas.HDFStore.put
    "pandas.HDFStore.put") raising a wrong `TypeError` when saving a DataFrame with
    non-string dtype ([GH 34274](https://github.com/pandas-dev/pandas/issues/34274))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") resulting in the first element of a generator object
    not being included in the returned DataFrame ([GH 35923](https://github.com/pandas-dev/pandas/issues/35923))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") applying the thousands separator to date columns when the column
    should be parsed for dates and `usecols` is specified for `engine="python"` ([GH
    39365](https://github.com/pandas-dev/pandas/issues/39365))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") forward filling [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") names when multiple header and index columns are specified
    ([GH 34673](https://github.com/pandas-dev/pandas/issues/34673))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") not respecting [`set_option()`](../reference/api/pandas.set_option.html#pandas.set_option
    "pandas.set_option") ([GH 34252](https://github.com/pandas-dev/pandas/issues/34252))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not switching `true_values` and `false_values` for nullable
    Boolean dtype ([GH 34655](https://github.com/pandas-dev/pandas/issues/34655))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") when `orient="split"` not maintaining a numeric string index
    ([GH 28556](https://github.com/pandas-dev/pandas/issues/28556))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql "pandas.read_sql")
    returned an empty generator if `chunksize` was non-zero and the query returned
    no results. Now returns a generator with a single empty DataFrame ([GH 34411](https://github.com/pandas-dev/pandas/issues/34411))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") returning unexpected records when filtering on categorical
    string columns using the `where` parameter ([GH 39189](https://github.com/pandas-dev/pandas/issues/39189))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") raising a `ValueError` when `datetimes` were null ([GH 39725](https://github.com/pandas-dev/pandas/issues/39725))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") dropping empty values from single-column spreadsheets ([GH
    39808](https://github.com/pandas-dev/pandas/issues/39808))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") loading trailing empty rows/columns for some filetypes ([GH
    41167](https://github.com/pandas-dev/pandas/issues/41167))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") raising an `AttributeError` when the excel file had a `MultiIndex`
    header followed by two empty rows and no index ([GH 40442](https://github.com/pandas-dev/pandas/issues/40442))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"), [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf"), and [`read_clipboard()`](../reference/api/pandas.read_clipboard.html#pandas.read_clipboard
    "pandas.read_clipboard") where one blank row after a `MultiIndex` header with
    no index would be dropped ([GH 40442](https://github.com/pandas-dev/pandas/issues/40442))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") misplacing the truncation column when `index=False`
    ([GH 40904](https://github.com/pandas-dev/pandas/issues/40904))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") adding an extra dot and misaligning the truncation
    row when `index=False` ([GH 40904](https://github.com/pandas-dev/pandas/issues/40904))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_orc()`](../reference/api/pandas.read_orc.html#pandas.read_orc
    "pandas.read_orc") always raising an `AttributeError` ([GH 40918](https://github.com/pandas-dev/pandas/issues/40918))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") silently ignoring `prefix` if `names` and `prefix` are defined,
    now raising a `ValueError` ([GH 39123](https://github.com/pandas-dev/pandas/issues/39123))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") not respecting the dtype for a duplicated column name when
    `mangle_dupe_cols` is set to `True` ([GH 35211](https://github.com/pandas-dev/pandas/issues/35211))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") silently ignoring `sep` if `delimiter` and `sep` are defined,
    now raising a `ValueError` ([GH 39823](https://github.com/pandas-dev/pandas/issues/39823))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") misinterpreting arguments when `sys.setprofile` had been
    previously called ([GH 41069](https://github.com/pandas-dev/pandas/issues/41069))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the conversion from PyArrow to pandas (e.g. for reading Parquet) with
    nullable dtypes and a PyArrow array whose data buffer size is not a multiple of
    the dtype size ([GH 40896](https://github.com/pandas-dev/pandas/issues/40896))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") would raise an error when pandas could not determine the
    file type even though the user specified the `engine` argument ([GH 41225](https://github.com/pandas-dev/pandas/issues/41225))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_clipboard()`](../reference/api/pandas.read_clipboard.html#pandas.read_clipboard
    "pandas.read_clipboard") copying from an excel file shifts values into the wrong
    column if there are null values in first column ([GH 41108](https://github.com/pandas-dev/pandas/issues/41108))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_hdf()`](../reference/api/pandas.DataFrame.to_hdf.html#pandas.DataFrame.to_hdf
    "pandas.DataFrame.to_hdf") and [`Series.to_hdf()`](../reference/api/pandas.Series.to_hdf.html#pandas.Series.to_hdf
    "pandas.Series.to_hdf") raising a `TypeError` when trying to append a string column
    to an incompatible column ([GH 41897](https://github.com/pandas-dev/pandas/issues/41897))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Period
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Comparisons of [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") objects or [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with mismatched `PeriodDtype` now behave like other mismatched-type
    comparisons, returning `False` for equals, `True` for not-equal, and raising `TypeError`
    for inequality checks ([GH 39274](https://github.com/pandas-dev/pandas/issues/39274))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`plotting.scatter_matrix()`](../reference/api/pandas.plotting.scatter_matrix.html#pandas.plotting.scatter_matrix
    "pandas.plotting.scatter_matrix") raising when 2d `ax` argument passed ([GH 16253](https://github.com/pandas-dev/pandas/issues/16253))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prevent warnings when Matplotlib’s `constrained_layout` is enabled ([GH 25261](https://github.com/pandas-dev/pandas/issues/25261))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") was showing the wrong colors in the legend if the function
    was called repeatedly and some calls used `yerr` while others didn’t ([GH 39522](https://github.com/pandas-dev/pandas/issues/39522))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") was showing the wrong colors in the legend if the function
    was called repeatedly and some calls used `secondary_y` and others use `legend=False`
    ([GH 40044](https://github.com/pandas-dev/pandas/issues/40044))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.box()`](../reference/api/pandas.DataFrame.plot.box.html#pandas.DataFrame.plot.box
    "pandas.DataFrame.plot.box") when `dark_background` theme was selected, caps or
    min/max markers for the plot were not visible ([GH 40769](https://github.com/pandas-dev/pandas/issues/40769))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") and [`SeriesGroupBy.agg()`](../reference/api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg") with [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") columns incorrectly casting results too aggressively ([GH
    38254](https://github.com/pandas-dev/pandas/issues/38254))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") where unobserved categories
    in a grouped categorical Series were not tallied ([GH 38672](https://github.com/pandas-dev/pandas/issues/38672))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") where an error was raised on
    an empty Series ([GH 39172](https://github.com/pandas-dev/pandas/issues/39172))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.indices()` would contain non-existent indices when null values
    were present in the groupby keys ([GH 9304](https://github.com/pandas-dev/pandas/issues/9304))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`DataFrameGroupBy.sum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum") and [`SeriesGroupBy.sum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.sum.html#pandas.core.groupby.SeriesGroupBy.sum
    "pandas.core.groupby.SeriesGroupBy.sum") causing a loss of precision by now using
    Kahan summation ([GH 38778](https://github.com/pandas-dev/pandas/issues/38778))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`DataFrameGroupBy.cumsum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum"), [`SeriesGroupBy.cumsum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cumsum.html#pandas.core.groupby.SeriesGroupBy.cumsum
    "pandas.core.groupby.SeriesGroupBy.cumsum"), [`DataFrameGroupBy.mean()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean"), and [`SeriesGroupBy.mean()`](../reference/api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean") causing loss of precision through using
    Kahan summation ([GH 38934](https://github.com/pandas-dev/pandas/issues/38934))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Resampler.aggregate()`](../reference/api/pandas.core.resample.Resampler.aggregate.html#pandas.core.resample.Resampler.aggregate
    "pandas.core.resample.Resampler.aggregate") and [`DataFrame.transform()`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform") raising a `TypeError` instead of `SpecificationError`
    when missing keys had mixed dtypes ([GH 39025](https://github.com/pandas-dev/pandas/issues/39025))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.idxmin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin") and [`DataFrameGroupBy.idxmax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax") with `ExtensionDtype` columns ([GH
    38733](https://github.com/pandas-dev/pandas/issues/38733))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") would raise when the index was a [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") consisting of `NaT` ([GH 39227](https://github.com/pandas-dev/pandas/issues/39227))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RollingGroupby.corr()` and `ExpandingGroupby.corr()` where the groupby
    column would return `0` instead of `np.nan` when providing `other` that was longer
    than each group ([GH 39591](https://github.com/pandas-dev/pandas/issues/39591))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ExpandingGroupby.corr()` and `ExpandingGroupby.cov()` where `1` would
    be returned instead of `np.nan` when providing `other` that was longer than each
    group ([GH 39591](https://github.com/pandas-dev/pandas/issues/39591))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.mean()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean"), [`SeriesGroupBy.mean()`](../reference/api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean"), [`DataFrameGroupBy.median()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.median.html#pandas.core.groupby.DataFrameGroupBy.median
    "pandas.core.groupby.DataFrameGroupBy.median"), [`SeriesGroupBy.median()`](../reference/api/pandas.core.groupby.SeriesGroupBy.median.html#pandas.core.groupby.SeriesGroupBy.median
    "pandas.core.groupby.SeriesGroupBy.median"), and [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") not propagating metadata ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") and [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") not calculating window bounds correctly when window
    is an offset and dates are in descending order ([GH 40002](https://github.com/pandas-dev/pandas/issues/40002))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") and [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") on an empty `Series` or `DataFrame` would lose index,
    columns, and/or data types when directly using the methods `idxmax`, `idxmin`,
    `mad`, `min`, `max`, `sum`, `prod`, and `skew` or using them through `apply`,
    `aggregate`, or `resample` ([GH 26411](https://github.com/pandas-dev/pandas/issues/26411))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") where a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") would be created instead of an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") when used on a `RollingGroupby` object ([GH 39732](https://github.com/pandas-dev/pandas/issues/39732))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.sample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sample.html#pandas.core.groupby.DataFrameGroupBy.sample
    "pandas.core.groupby.DataFrameGroupBy.sample") where an error was raised when
    `weights` was specified and the index was an `Int64Index` ([GH 39927](https://github.com/pandas-dev/pandas/issues/39927))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.aggregate()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.aggregate.html#pandas.core.groupby.DataFrameGroupBy.aggregate
    "pandas.core.groupby.DataFrameGroupBy.aggregate") and [`Resampler.aggregate()`](../reference/api/pandas.core.resample.Resampler.aggregate.html#pandas.core.resample.Resampler.aggregate
    "pandas.core.resample.Resampler.aggregate") would sometimes raise a `SpecificationError`
    when passed a dictionary and columns were missing; will now always raise a `KeyError`
    instead ([GH 40004](https://github.com/pandas-dev/pandas/issues/40004))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.sample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sample.html#pandas.core.groupby.DataFrameGroupBy.sample
    "pandas.core.groupby.DataFrameGroupBy.sample") where column selection was not
    applied before computing the result ([GH 39928](https://github.com/pandas-dev/pandas/issues/39928))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ExponentialMovingWindow` when calling `__getitem__` would incorrectly
    raise a `ValueError` when providing `times` ([GH 40164](https://github.com/pandas-dev/pandas/issues/40164))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ExponentialMovingWindow` when calling `__getitem__` would not retain
    `com`, `span`, `alpha` or `halflife` attributes ([GH 40164](https://github.com/pandas-dev/pandas/issues/40164))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExponentialMovingWindow` now raises a `NotImplementedError` when specifying
    `times` with `adjust=False` due to an incorrect calculation ([GH 40098](https://github.com/pandas-dev/pandas/issues/40098))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ExponentialMovingWindowGroupby.mean()` where the `times` argument was
    ignored when `engine='numba'` ([GH 40951](https://github.com/pandas-dev/pandas/issues/40951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ExponentialMovingWindowGroupby.mean()` where the wrong times were used
    the in case of multiple groups ([GH 40951](https://github.com/pandas-dev/pandas/issues/40951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ExponentialMovingWindowGroupby` where the times vector and values became
    out of sync for non-trivial groups ([GH 40951](https://github.com/pandas-dev/pandas/issues/40951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.asfreq()`](../reference/api/pandas.Series.asfreq.html#pandas.Series.asfreq
    "pandas.Series.asfreq") and [`DataFrame.asfreq()`](../reference/api/pandas.DataFrame.asfreq.html#pandas.DataFrame.asfreq
    "pandas.DataFrame.asfreq") dropping rows when the index was not sorted ([GH 39805](https://github.com/pandas-dev/pandas/issues/39805))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in aggregation functions for [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") not respecting `numeric_only` argument when `level` keyword
    was given ([GH 40660](https://github.com/pandas-dev/pandas/issues/40660))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.aggregate()`](../reference/api/pandas.core.groupby.SeriesGroupBy.aggregate.html#pandas.core.groupby.SeriesGroupBy.aggregate
    "pandas.core.groupby.SeriesGroupBy.aggregate") where using a user-defined function
    to aggregate a Series with an object-typed [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") causes an incorrect [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") shape ([GH 40014](https://github.com/pandas-dev/pandas/issues/40014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RollingGroupby` where `as_index=False` argument in `groupby` was ignored
    ([GH 39433](https://github.com/pandas-dev/pandas/issues/39433))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.any()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any"), [`SeriesGroupBy.any()`](../reference/api/pandas.core.groupby.SeriesGroupBy.any.html#pandas.core.groupby.SeriesGroupBy.any
    "pandas.core.groupby.SeriesGroupBy.any"), [`DataFrameGroupBy.all()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all") and [`SeriesGroupBy.all()`](../reference/api/pandas.core.groupby.SeriesGroupBy.all.html#pandas.core.groupby.SeriesGroupBy.all
    "pandas.core.groupby.SeriesGroupBy.all") raising a `ValueError` when using with
    nullable type columns holding `NA` even with `skipna=True` ([GH 40585](https://github.com/pandas-dev/pandas/issues/40585))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cummin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin"), [`SeriesGroupBy.cummin()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummin.html#pandas.core.groupby.SeriesGroupBy.cummin
    "pandas.core.groupby.SeriesGroupBy.cummin"), [`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax") and [`SeriesGroupBy.cummax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummax.html#pandas.core.groupby.SeriesGroupBy.cummax
    "pandas.core.groupby.SeriesGroupBy.cummax") incorrectly rounding integer values
    near the `int64` implementations bounds ([GH 40767](https://github.com/pandas-dev/pandas/issues/40767))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.rank()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank") and [`SeriesGroupBy.rank()`](../reference/api/pandas.core.groupby.SeriesGroupBy.rank.html#pandas.core.groupby.SeriesGroupBy.rank
    "pandas.core.groupby.SeriesGroupBy.rank") with nullable dtypes incorrectly raising
    a `TypeError` ([GH 41010](https://github.com/pandas-dev/pandas/issues/41010))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.cummin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin"), [`SeriesGroupBy.cummin()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummin.html#pandas.core.groupby.SeriesGroupBy.cummin
    "pandas.core.groupby.SeriesGroupBy.cummin"), [`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax") and [`SeriesGroupBy.cummax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummax.html#pandas.core.groupby.SeriesGroupBy.cummax
    "pandas.core.groupby.SeriesGroupBy.cummax") computing wrong result with nullable
    data types too large to roundtrip when casting to float ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") returning mean zero for all `NaN` window with `min_periods=0`
    if calculation is not numerical stable ([GH 41053](https://github.com/pandas-dev/pandas/issues/41053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") returning sum not zero for all `NaN` window with `min_periods=0`
    if calculation is not numerical stable ([GH 41053](https://github.com/pandas-dev/pandas/issues/41053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.agg()`](../reference/api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg") failing to retain ordered [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") on order-preserving aggregations ([GH 41147](https://github.com/pandas-dev/pandas/issues/41147))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.min()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.min.html#pandas.core.groupby.DataFrameGroupBy.min
    "pandas.core.groupby.DataFrameGroupBy.min"), [`SeriesGroupBy.min()`](../reference/api/pandas.core.groupby.SeriesGroupBy.min.html#pandas.core.groupby.SeriesGroupBy.min
    "pandas.core.groupby.SeriesGroupBy.min"), [`DataFrameGroupBy.max()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.max.html#pandas.core.groupby.DataFrameGroupBy.max
    "pandas.core.groupby.DataFrameGroupBy.max") and [`SeriesGroupBy.max()`](../reference/api/pandas.core.groupby.SeriesGroupBy.max.html#pandas.core.groupby.SeriesGroupBy.max
    "pandas.core.groupby.SeriesGroupBy.max") with multiple object-dtype columns and
    `numeric_only=False` incorrectly raising a `ValueError` ([GH 41111](https://github.com/pandas-dev/pandas/issues/41111))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.rank()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank") with the GroupBy object’s `axis=0`
    and the `rank` method’s keyword `axis=1` ([GH 41320](https://github.com/pandas-dev/pandas/issues/41320))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.__getitem__()` with non-unique columns incorrectly
    returning a malformed `SeriesGroupBy` instead of `DataFrameGroupBy` ([GH 41427](https://github.com/pandas-dev/pandas/issues/41427))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") with non-unique columns incorrectly
    raising an `AttributeError` ([GH 41427](https://github.com/pandas-dev/pandas/issues/41427))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Resampler.apply()`](../reference/api/pandas.core.resample.Resampler.apply.html#pandas.core.resample.Resampler.apply
    "pandas.core.resample.Resampler.apply") with non-unique columns incorrectly dropping
    duplicated columns ([GH 41445](https://github.com/pandas-dev/pandas/issues/41445))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") aggregations incorrectly returning empty [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") instead of raising `TypeError` on aggregations that are invalid
    for its dtype, e.g. `.prod` with `datetime64[ns]` dtype ([GH 41342](https://github.com/pandas-dev/pandas/issues/41342))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy` aggregations incorrectly failing to drop columns with
    invalid dtypes for that aggregation when there are no valid columns ([GH 41291](https://github.com/pandas-dev/pandas/issues/41291))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.rolling.__iter__()` where `on` was not assigned to the index
    of the resulting objects ([GH 40373](https://github.com/pandas-dev/pandas/issues/40373))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") with `engine="numba"` where `*args`
    were being cached with the user passed function ([GH 41647](https://github.com/pandas-dev/pandas/issues/41647))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy` methods `agg`, `transform`, `sum`, `bfill`, `ffill`,
    `pad`, `pct_change`, `shift`, `ohlc` dropping `.columns.names` ([GH 41497](https://github.com/pandas-dev/pandas/issues/41497))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    raising error when performing an inner join with partial index and `right_index=True`
    when there was no overlap between indices ([GH 33814](https://github.com/pandas-dev/pandas/issues/33814))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") with missing levels led to incorrect index names ([GH
    37510](https://github.com/pandas-dev/pandas/issues/37510))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") propagating the right Index with `left_index=True` and `right_on`
    specification instead of left Index ([GH 33463](https://github.com/pandas-dev/pandas/issues/33463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") on a DataFrame with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") returned the wrong result when one of both indexes had only
    one level ([GH 36909](https://github.com/pandas-dev/pandas/issues/36909))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") now raises a `ValueError` instead of a cryptic `TypeError`
    in case of non-numerical merge columns ([GH 29130](https://github.com/pandas-dev/pandas/issues/29130))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") not assigning values correctly when the DataFrame had
    a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    where at least one dimension had dtype `Categorical` with non-alphabetically sorted
    categories ([GH 38502](https://github.com/pandas-dev/pandas/issues/38502))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts") and [`Series.mode()`](../reference/api/pandas.Series.mode.html#pandas.Series.mode
    "pandas.Series.mode") now return consistent keys in original order ([GH 12679](https://github.com/pandas-dev/pandas/issues/12679),
    [GH 11227](https://github.com/pandas-dev/pandas/issues/11227) and [GH 39007](https://github.com/pandas-dev/pandas/issues/39007))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") not handling `NaN` in [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") columns correctly ([GH 39481](https://github.com/pandas-dev/pandas/issues/39481))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") would give incorrect results when the argument `func`
    was a string, `axis=1`, and the axis argument was not supported; now raises a
    `ValueError` instead ([GH 39211](https://github.com/pandas-dev/pandas/issues/39211))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") not reshaping the index correctly after sorting
    on columns when `ignore_index=True` ([GH 39464](https://github.com/pandas-dev/pandas/issues/39464))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` returning incorrect dtypes with combinations of
    `ExtensionDtype` dtypes ([GH 39454](https://github.com/pandas-dev/pandas/issues/39454))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` returning incorrect dtypes when used with combinations
    of `datetime64` and `timedelta64` dtypes ([GH 39574](https://github.com/pandas-dev/pandas/issues/39574))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` with a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and appending a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") whose [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") is not a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 41707](https://github.com/pandas-dev/pandas/issues/41707))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") returning a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") for a single value when operating on an empty DataFrame ([GH
    13483](https://github.com/pandas-dev/pandas/issues/13483))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") can
    now be passed to the [`numpy.all()`](https://numpy.org/doc/stable/reference/generated/numpy.all.html#numpy.all
    "(in NumPy v1.26)") function ([GH 40180](https://github.com/pandas-dev/pandas/issues/40180))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") not preserving `CategoricalDtype` in a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 36991](https://github.com/pandas-dev/pandas/issues/36991))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") raising an error when the input sequence contained unhashable
    items ([GH 39756](https://github.com/pandas-dev/pandas/issues/39756))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode") preserving the index when `ignore_index` was `True` and
    values were scalars ([GH 40487](https://github.com/pandas-dev/pandas/issues/40487))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") raising a `ValueError` when [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") contains `None` and `NaT` and has more than 50 elements ([GH
    39882](https://github.com/pandas-dev/pandas/issues/39882))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack") and [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") with object-dtype values containing timezone-aware
    datetime objects incorrectly raising `TypeError` ([GH 41875](https://github.com/pandas-dev/pandas/issues/41875))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") raising `InvalidIndexError` when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has duplicate columns used as `value_vars` ([GH 41951](https://github.com/pandas-dev/pandas/issues/41951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sparse.to_coo()`](../reference/api/pandas.DataFrame.sparse.to_coo.html#pandas.DataFrame.sparse.to_coo
    "pandas.DataFrame.sparse.to_coo") raising a `KeyError` with columns that are a
    numeric [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    without a `0` ([GH 18414](https://github.com/pandas-dev/pandas/issues/18414))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseArray.astype()` with `copy=False` producing incorrect results
    when going from integer dtype to floating dtype ([GH 34456](https://github.com/pandas-dev/pandas/issues/34456))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseArray.max()` and `SparseArray.min()` would always return an empty
    result ([GH 40921](https://github.com/pandas-dev/pandas/issues/40921))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") when `other` is a Series with an `ExtensionDtype` ([GH
    38729](https://github.com/pandas-dev/pandas/issues/38729))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax"), [`Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin"), [`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax"), and [`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin") would fail when the underlying data is an `ExtensionArray`
    ([GH 32749](https://github.com/pandas-dev/pandas/issues/32749), [GH 33719](https://github.com/pandas-dev/pandas/issues/33719),
    [GH 36566](https://github.com/pandas-dev/pandas/issues/36566))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where some properties of subclasses of `PandasExtensionDtype` where
    improperly cached ([GH 40329](https://github.com/pandas-dev/pandas/issues/40329))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask") where masking a DataFrame with an `ExtensionDtype` raises
    a `ValueError` ([GH 40941](https://github.com/pandas-dev/pandas/issues/40941))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styler
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") where the `subset` argument in methods raised
    an error for some valid MultiIndex slices ([GH 33562](https://github.com/pandas-dev/pandas/issues/33562))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") rendered HTML output has seen minor alterations
    to support w3 good code standards ([GH 39626](https://github.com/pandas-dev/pandas/issues/39626))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") where rendered HTML was missing a column class
    identifier for certain header cells ([GH 39716](https://github.com/pandas-dev/pandas/issues/39716))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Styler.background_gradient()`](../reference/api/pandas.io.formats.style.Styler.background_gradient.html#pandas.io.formats.style.Styler.background_gradient
    "pandas.io.formats.style.Styler.background_gradient") where text-color was not
    determined correctly ([GH 39888](https://github.com/pandas-dev/pandas/issues/39888))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Styler.set_table_styles()`](../reference/api/pandas.io.formats.style.Styler.set_table_styles.html#pandas.io.formats.style.Styler.set_table_styles
    "pandas.io.formats.style.Styler.set_table_styles") where multiple elements in
    CSS-selectors of the `table_styles` argument were not correctly added ([GH 34061](https://github.com/pandas-dev/pandas/issues/34061))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") where copying from Jupyter dropped the top left
    cell and misaligned headers ([GH 12147](https://github.com/pandas-dev/pandas/issues/12147))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Styler.where` where `kwargs` were not passed to the applicable callable
    ([GH 40845](https://github.com/pandas-dev/pandas/issues/40845))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") causing CSS to duplicate on multiple renders
    ([GH 39395](https://github.com/pandas-dev/pandas/issues/39395), [GH 40334](https://github.com/pandas-dev/pandas/issues/40334))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`inspect.getmembers(Series)` no longer raises an `AbstractMethodError` ([GH
    38782](https://github.com/pandas-dev/pandas/issues/38782))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") with numeric dtype and `other=None` not casting to `nan`
    ([GH 39761](https://github.com/pandas-dev/pandas/issues/39761))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal"), [`assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal"), [`assert_index_equal()`](../reference/api/pandas.testing.assert_index_equal.html#pandas.testing.assert_index_equal
    "pandas.testing.assert_index_equal") and [`assert_extension_array_equal()`](../reference/api/pandas.testing.assert_extension_array_equal.html#pandas.testing.assert_extension_array_equal
    "pandas.testing.assert_extension_array_equal") incorrectly raising when an attribute
    has an unrecognized NA type ([GH 39461](https://github.com/pandas-dev/pandas/issues/39461))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`assert_index_equal()`](../reference/api/pandas.testing.assert_index_equal.html#pandas.testing.assert_index_equal
    "pandas.testing.assert_index_equal") with `exact=True` not raising when comparing
    [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") instances with `Int64Index` and `RangeIndex` categories
    ([GH 41263](https://github.com/pandas-dev/pandas/issues/41263))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.equals()`](../reference/api/pandas.DataFrame.equals.html#pandas.DataFrame.equals
    "pandas.DataFrame.equals"), [`Series.equals()`](../reference/api/pandas.Series.equals.html#pandas.Series.equals
    "pandas.Series.equals"), and [`Index.equals()`](../reference/api/pandas.Index.equals.html#pandas.Index.equals
    "pandas.Index.equals") with object-dtype containing `np.datetime64("NaT")` or
    `np.timedelta64("NaT")` ([GH 39650](https://github.com/pandas-dev/pandas/issues/39650))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`show_versions()`](../reference/api/pandas.show_versions.html#pandas.show_versions
    "pandas.show_versions") where console JSON output was not proper JSON ([GH 39701](https://github.com/pandas-dev/pandas/issues/39701))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pandas can now compile on z/OS when using [xlc](https://www.ibm.com/products/xl-cpp-compiler-zos)
    ([GH 35826](https://github.com/pandas-dev/pandas/issues/35826))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.util.hash_pandas_object()`](../reference/api/pandas.util.hash_pandas_object.html#pandas.util.hash_pandas_object
    "pandas.util.hash_pandas_object") not recognizing `hash_key`, `encoding` and `categorize`
    when the input object type is a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 41404](https://github.com/pandas-dev/pandas/issues/41404))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Contributors'
  prefs: []
  type: TYPE_NORMAL
- en: A total of 251 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: Abhishek R +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ada Draginda
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam J. Stewart
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam Turner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aidan Feldman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ajitesh Singh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Akshat Jain +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Albert Villanova del Moral
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexandre Prince-Levasseur +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Hawyrluk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Wieteska
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AnglinaBhambra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ankush Dua +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anna Daglis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ashlan Parker +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ashwani +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avinash Pancham
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ayushman Kumar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: BeanNan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Benoît Vinot
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bharat Raghunathan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bijay Regmi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bobin Mathew +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bogdan Pilyavets +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brian Hulette +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brian Sun +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brock +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bryan Cutler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Caleb +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calvin Ho +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chathura Widanage +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chinmay Rane +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Lynch
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Withers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christos Petropoulos
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Corentin Girard +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DaPy15 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Damodara Puddu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Hrisca
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Saxton
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DanielFEvans
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dare Adewumi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dave Willmer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Schlachter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David-dmh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deepang Raval +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Doris Lee +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dr. Jan-Philip Gehrcke +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DriesS +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dylan Percy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Erfan Nariman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eric Leung
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: EricLeer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eve
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fangchen Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Felix Divo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Florian Jetter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fred Reiss
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GFJ138 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gaurav Sheni +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Geoffrey B. Eisenbarth +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gesa Stupperich +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Griffin Ansel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gustavo C. Maciel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Heidi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Henry +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hung-Yi Wu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ian Ozsvald +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Irv Lustig
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Isaac Chung +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Isaac Virshup
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire (MBP) +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire (iMac) +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jack Liu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Lamb +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeet Parekh
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jiezheng2018 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jody Klymak
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Johan Kåhrström +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John McGuigan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jose
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JoseNavy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josh Dimarsky
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josh Friedlander
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joshua Klein +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julia Signell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julian Schnitzler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kaiqi Dong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kasim Panjri +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Katie Smith +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kelly +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kenil +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keppler, Kyle +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Khor Chean Wei +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kiley Hewitt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Larry Wong +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lightyears +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lucas Holtz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lucas Rodés-Guirao
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lucky Sivagurunathan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luis Pinto
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maciej Kos +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Garcia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Edward Gorelli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Gorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MarcoGorelli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mark Graham
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Dengler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Grigorov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marty Rudolf +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Zeitlin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Max Bolingbroke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maxim Ivanov
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maxim Kupfer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mayur +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MeeseeksMachine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Micael Jarniac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Hsieh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michel de Ruiter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mike Roberts +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Miroslav Šedivý
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mohammad Jafar Mashhadi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Morisa Manzella +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mortada Mehyar
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Muktan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Naveen Agrawal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Noah
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nofar Mishraki +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oleh Kozynets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Olga Matoula +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Omar Afifi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Omer Ozarslan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Owen Lamont +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ozan Öğreden +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas Development Team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paolo Lammens
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parfait Gasana +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patrick Hoefler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul McCarthy +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paulo S. Costa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pav A
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pradyumna Rahul +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Punitvara +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: QP Hou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rahul Chauhan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rahul Sathanapalli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Shadrach
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert Bradshaw
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robin to Roxel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rohit Gupta
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sam Purkis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Samuel GIFFARD +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sean M. Law +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shahar Naveh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ShaharNaveh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shiv Gupta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shrey Dixit +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shudong Yang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Boehm +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Hawkins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sioned Baker +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefan Mejlgaard +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steven Pitman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steven Schaerer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stéphane Guillou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: TLouf +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tegar D Pratama +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terji Petersen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Theodoros Nikolaou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Dickson
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Smith
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Yu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ThomasBlauthQC +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Hoffmann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Augspurger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Torsten Wörtwein
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tyler Reddy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: UrielMaD
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Uwe L. Korn
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Venaturum +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VirosaLi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vladimir Podolskiy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vyom Pathak +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: WANG Aiyong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Waltteri Koskinen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wenjun Si +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Ayd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yeshwanth N +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yuanhao Geng
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zito Relova +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: aflah02 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: arredond +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: attack68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cdknox +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: chinggg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: fathomer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ftrihardjo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: github-actions[bot] +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gunjan-solanki +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: guru kiran
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: hasan-yaman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: i-aki-y +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jmholzer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jordi-crespo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jotasi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jreback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: juliansmidek +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kylekeppler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lrepiton +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lucasrodes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maroth96 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mikeronayne +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mlondschien
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: moink +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: morrme
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mschmookler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mzeitlin11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: na2 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nofarmishraki +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: partev
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: patrick
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ptype
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: realead
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rhshadrach
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rlukevie +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rosagold +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: saucoide +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sdementen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: shawnbrown
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sstiijn +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: stphnlyd +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sukriti1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: taytzehao
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: theOehrly +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: theodorju +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: thordisstella +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tonyyyyip +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tsinggggg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tushushu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vangorade +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vladu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: wertha +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
