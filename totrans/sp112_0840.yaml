- en: scipy.special.fdtr
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.fdtr.html#scipy.special.fdtr](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.fdtr.html#scipy.special.fdtr)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: F cumulative distribution function.
  prefs: []
  type: TYPE_NORMAL
- en: Returns the value of the cumulative distribution function of the F-distribution,
    also known as Snedecor’s F-distribution or the Fisher-Snedecor distribution.
  prefs: []
  type: TYPE_NORMAL
- en: The F-distribution with parameters \(d_n\) and \(d_d\) is the distribution of
    the random variable,
  prefs: []
  type: TYPE_NORMAL
- en: \[X = \frac{U_n/d_n}{U_d/d_d},\]
  prefs: []
  type: TYPE_NORMAL
- en: where \(U_n\) and \(U_d\) are random variables distributed \(\chi^2\), with
    \(d_n\) and \(d_d\) degrees of freedom, respectively.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**dfn**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: First parameter (positive float).
  prefs: []
  type: TYPE_NORMAL
- en: '**dfd**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Second parameter (positive float).
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Argument (nonnegative float).
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Optional output array for the function values
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**y**scalar or ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The CDF of the F-distribution with parameters *dfn* and *dfd* at *x*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`fdtrc`](scipy.special.fdtrc.html#scipy.special.fdtrc "scipy.special.fdtrc")'
  prefs: []
  type: TYPE_NORMAL
- en: F distribution survival function
  prefs: []
  type: TYPE_NORMAL
- en: '[`fdtri`](scipy.special.fdtri.html#scipy.special.fdtri "scipy.special.fdtri")'
  prefs: []
  type: TYPE_NORMAL
- en: F distribution inverse cumulative distribution
  prefs: []
  type: TYPE_NORMAL
- en: '[`scipy.stats.f`](scipy.stats.f.html#scipy.stats.f "scipy.stats.f")'
  prefs: []
  type: TYPE_NORMAL
- en: F distribution
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The regularized incomplete beta function is used, according to the formula,
  prefs: []
  type: TYPE_NORMAL
- en: \[F(d_n, d_d; x) = I_{xd_n/(d_d + xd_n)}(d_n/2, d_d/2).\]
  prefs: []
  type: TYPE_NORMAL
- en: Wrapper for the Cephes [[1]](#rb06369a6f578-1) routine [`fdtr`](#scipy.special.fdtr
    "scipy.special.fdtr"). The F distribution is also available as [`scipy.stats.f`](scipy.stats.f.html#scipy.stats.f
    "scipy.stats.f"). Calling [`fdtr`](#scipy.special.fdtr "scipy.special.fdtr") directly
    can improve performance compared to the `cdf` method of [`scipy.stats.f`](scipy.stats.f.html#scipy.stats.f
    "scipy.stats.f") (see last example below).
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: Cephes Mathematical Functions Library, [http://www.netlib.org/cephes/](http://www.netlib.org/cephes/)
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Calculate the function for `dfn=1` and `dfd=2` at `x=1`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Calculate the function at several points by providing a NumPy array for *x*.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Plot the function for several parameter sets.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-special-fdtr-1_00_00.png](../Images/feba8d7218da509ecefdcdf35d487ed1.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The F distribution is also available as [`scipy.stats.f`](scipy.stats.f.html#scipy.stats.f
    "scipy.stats.f"). Using [`fdtr`](#scipy.special.fdtr "scipy.special.fdtr") directly
    can be much faster than calling the `cdf` method of [`scipy.stats.f`](scipy.stats.f.html#scipy.stats.f
    "scipy.stats.f"), especially for small arrays or individual values. To get the
    same results one must use the following parametrization: `stats.f(dfn, dfd).cdf(x)=fdtr(dfn,
    dfd, x)`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
