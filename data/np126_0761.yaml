- en: numpy.ma.MaskedArray.prod
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.ma.MaskedArray.prod
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.MaskedArray.prod.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.MaskedArray.prod.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.MaskedArray.prod.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.MaskedArray.prod.html)
- en: method
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Return the product of the array elements over the given axis.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 返回沿给定轴的数组元素的乘积。
- en: Masked elements are set to 1 internally for computation.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 掩码元素在计算时内部设置为1。
- en: Refer to [`numpy.prod`](numpy.prod.html#numpy.prod "numpy.prod") for full documentation.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参考[`numpy.prod`](numpy.prod.html#numpy.prod "numpy.prod")获取完整文档。
- en: See also
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`numpy.ndarray.prod`](numpy.ndarray.prod.html#numpy.ndarray.prod "numpy.ndarray.prod")'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[`numpy.ndarray.prod`](numpy.ndarray.prod.html#numpy.ndarray.prod "numpy.ndarray.prod")'
- en: corresponding function for ndarrays
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 用于ndarrays的对应函数
- en: '[`numpy.prod`](numpy.prod.html#numpy.prod "numpy.prod")'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[`numpy.prod`](numpy.prod.html#numpy.prod "numpy.prod")'
- en: equivalent function
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 等效函数
- en: Notes
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: Arithmetic is modular when using integer types, and no error is raised on overflow.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用整数类型时，算术运算是模运算，溢出时不会引发错误。
