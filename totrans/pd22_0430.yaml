- en: pandas.Timestamp
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.Timestamp.html](https://pandas.pydata.org/docs/reference/api/pandas.Timestamp.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Pandas replacement for python datetime.datetime object.
  prefs: []
  type: TYPE_NORMAL
- en: Timestamp is the pandas equivalent of python’s Datetime and is interchangeable
    with it in most cases. It’s the type used for the entries that make up a DatetimeIndex,
    and other timeseries oriented data structures in pandas.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**ts_input**datetime-like, str, int, float'
  prefs: []
  type: TYPE_NORMAL
- en: Value to be converted to Timestamp.
  prefs: []
  type: TYPE_NORMAL
- en: '**year, month, day**int'
  prefs: []
  type: TYPE_NORMAL
- en: '**hour, minute, second, microsecond**int, optional, default 0'
  prefs: []
  type: TYPE_NORMAL
- en: '**tzinfo**datetime.tzinfo, optional, default None'
  prefs: []
  type: TYPE_NORMAL
- en: '**nanosecond**int, optional, default 0'
  prefs: []
  type: TYPE_NORMAL
- en: '**tz**str, pytz.timezone, dateutil.tz.tzfile or None'
  prefs: []
  type: TYPE_NORMAL
- en: Time zone for time which Timestamp will have.
  prefs: []
  type: TYPE_NORMAL
- en: '**unit**str'
  prefs: []
  type: TYPE_NORMAL
- en: Unit used for conversion if ts_input is of type int or float. The valid values
    are ‘D’, ‘h’, ‘m’, ‘s’, ‘ms’, ‘us’, and ‘ns’. For example, ‘s’ means seconds and
    ‘ms’ means milliseconds.
  prefs: []
  type: TYPE_NORMAL
- en: For float inputs, the result will be stored in nanoseconds, and the unit attribute
    will be set as `'ns'`.
  prefs: []
  type: TYPE_NORMAL
- en: '**fold**{0, 1}, default None, keyword-only'
  prefs: []
  type: TYPE_NORMAL
- en: Due to daylight saving time, one wall clock time can occur twice when shifting
    from summer to winter time; fold describes whether the datetime-like corresponds
    to the first (0) or the second time (1) the wall clock hits the ambiguous time.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: There are essentially three calling conventions for the constructor. The primary
    form accepts four parameters. They can be passed by position or keyword.
  prefs: []
  type: TYPE_NORMAL
- en: The other two forms mimic the parameters from `datetime.datetime`. They can
    be passed by either position or keyword, but not both mixed together.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Using the primary calling convention:'
  prefs: []
  type: TYPE_NORMAL
- en: This converts a datetime-like string
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: This converts a float representing a Unix epoch in units of seconds
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: This converts an int representing a Unix-epoch in units of seconds and for a
    particular timezone
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Using the other two forms that mimic the API for `datetime.datetime`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs: []
  type: TYPE_NORMAL
- en: '| [`asm8`](pandas.Timestamp.asm8.html#pandas.Timestamp.asm8 "pandas.Timestamp.asm8")
    | Return numpy datetime64 format in nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`day`](pandas.Timestamp.day.html#pandas.Timestamp.day "pandas.Timestamp.day")
    |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`day_of_week`](pandas.Timestamp.day_of_week.html#pandas.Timestamp.day_of_week
    "pandas.Timestamp.day_of_week") | Return day of the week. |'
  prefs: []
  type: TYPE_TB
- en: '| [`day_of_year`](pandas.Timestamp.day_of_year.html#pandas.Timestamp.day_of_year
    "pandas.Timestamp.day_of_year") | Return the day of the year. |'
  prefs: []
  type: TYPE_TB
- en: '| [`dayofweek`](pandas.Timestamp.dayofweek.html#pandas.Timestamp.dayofweek
    "pandas.Timestamp.dayofweek") | Return day of the week. |'
  prefs: []
  type: TYPE_TB
- en: '| [`dayofyear`](pandas.Timestamp.dayofyear.html#pandas.Timestamp.dayofyear
    "pandas.Timestamp.dayofyear") | Return the day of the year. |'
  prefs: []
  type: TYPE_TB
- en: '| [`days_in_month`](pandas.Timestamp.days_in_month.html#pandas.Timestamp.days_in_month
    "pandas.Timestamp.days_in_month") | Return the number of days in the month. |'
  prefs: []
  type: TYPE_TB
- en: '| [`daysinmonth`](pandas.Timestamp.daysinmonth.html#pandas.Timestamp.daysinmonth
    "pandas.Timestamp.daysinmonth") | Return the number of days in the month. |'
  prefs: []
  type: TYPE_TB
- en: '| [`fold`](pandas.Timestamp.fold.html#pandas.Timestamp.fold "pandas.Timestamp.fold")
    |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`hour`](pandas.Timestamp.hour.html#pandas.Timestamp.hour "pandas.Timestamp.hour")
    |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_leap_year`](pandas.Timestamp.is_leap_year.html#pandas.Timestamp.is_leap_year
    "pandas.Timestamp.is_leap_year") | Return True if year is a leap year. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_month_end`](pandas.Timestamp.is_month_end.html#pandas.Timestamp.is_month_end
    "pandas.Timestamp.is_month_end") | Check if the date is the last day of the month.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_month_start`](pandas.Timestamp.is_month_start.html#pandas.Timestamp.is_month_start
    "pandas.Timestamp.is_month_start") | Check if the date is the first day of the
    month. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_quarter_end`](pandas.Timestamp.is_quarter_end.html#pandas.Timestamp.is_quarter_end
    "pandas.Timestamp.is_quarter_end") | Check if date is last day of the quarter.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_quarter_start`](pandas.Timestamp.is_quarter_start.html#pandas.Timestamp.is_quarter_start
    "pandas.Timestamp.is_quarter_start") | Check if the date is the first day of the
    quarter. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_year_end`](pandas.Timestamp.is_year_end.html#pandas.Timestamp.is_year_end
    "pandas.Timestamp.is_year_end") | Return True if date is last day of the year.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_year_start`](pandas.Timestamp.is_year_start.html#pandas.Timestamp.is_year_start
    "pandas.Timestamp.is_year_start") | Return True if date is first day of the year.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`max`](pandas.Timestamp.max.html#pandas.Timestamp.max "pandas.Timestamp.max")
    |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`microsecond`](pandas.Timestamp.microsecond.html#pandas.Timestamp.microsecond
    "pandas.Timestamp.microsecond") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`min`](pandas.Timestamp.min.html#pandas.Timestamp.min "pandas.Timestamp.min")
    |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`minute`](pandas.Timestamp.minute.html#pandas.Timestamp.minute "pandas.Timestamp.minute")
    |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`month`](pandas.Timestamp.month.html#pandas.Timestamp.month "pandas.Timestamp.month")
    |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`nanosecond`](pandas.Timestamp.nanosecond.html#pandas.Timestamp.nanosecond
    "pandas.Timestamp.nanosecond") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`quarter`](pandas.Timestamp.quarter.html#pandas.Timestamp.quarter "pandas.Timestamp.quarter")
    | Return the quarter of the year. |'
  prefs: []
  type: TYPE_TB
- en: '| [`resolution`](pandas.Timestamp.resolution.html#pandas.Timestamp.resolution
    "pandas.Timestamp.resolution") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`second`](pandas.Timestamp.second.html#pandas.Timestamp.second "pandas.Timestamp.second")
    |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`tz`](pandas.Timestamp.tz.html#pandas.Timestamp.tz "pandas.Timestamp.tz")
    | Alias for tzinfo. |'
  prefs: []
  type: TYPE_TB
- en: '| [`tzinfo`](pandas.Timestamp.tzinfo.html#pandas.Timestamp.tzinfo "pandas.Timestamp.tzinfo")
    |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`unit`](pandas.Timestamp.unit.html#pandas.Timestamp.unit "pandas.Timestamp.unit")
    | The abbreviation associated with self._creso. |'
  prefs: []
  type: TYPE_TB
- en: '| [`value`](pandas.Timestamp.value.html#pandas.Timestamp.value "pandas.Timestamp.value")
    |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`week`](pandas.Timestamp.week.html#pandas.Timestamp.week "pandas.Timestamp.week")
    | Return the week number of the year. |'
  prefs: []
  type: TYPE_TB
- en: '| [`weekofyear`](pandas.Timestamp.weekofyear.html#pandas.Timestamp.weekofyear
    "pandas.Timestamp.weekofyear") | Return the week number of the year. |'
  prefs: []
  type: TYPE_TB
- en: '| [`year`](pandas.Timestamp.year.html#pandas.Timestamp.year "pandas.Timestamp.year")
    |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`as_unit`](pandas.Timestamp.as_unit.html#pandas.Timestamp.as_unit "pandas.Timestamp.as_unit")(unit[, round_ok])
    | Convert the underlying int64 representaton to the given unit. |'
  prefs: []
  type: TYPE_TB
- en: '| [`astimezone`](pandas.Timestamp.astimezone.html#pandas.Timestamp.astimezone
    "pandas.Timestamp.astimezone")(tz) | Convert timezone-aware Timestamp to another
    time zone. |'
  prefs: []
  type: TYPE_TB
- en: '| [`ceil`](pandas.Timestamp.ceil.html#pandas.Timestamp.ceil "pandas.Timestamp.ceil")(freq[, ambiguous, nonexistent])
    | Return a new Timestamp ceiled to this resolution. |'
  prefs: []
  type: TYPE_TB
- en: '| [`combine`](pandas.Timestamp.combine.html#pandas.Timestamp.combine "pandas.Timestamp.combine")(date, time)
    | Combine date, time into datetime with same date and time fields. |'
  prefs: []
  type: TYPE_TB
- en: '| [`ctime`](pandas.Timestamp.ctime.html#pandas.Timestamp.ctime "pandas.Timestamp.ctime")()
    | Return ctime() style string. |'
  prefs: []
  type: TYPE_TB
- en: '| [`date`](pandas.Timestamp.date.html#pandas.Timestamp.date "pandas.Timestamp.date")()
    | Return date object with same year, month and day. |'
  prefs: []
  type: TYPE_TB
- en: '| [`day_name`](pandas.Timestamp.day_name.html#pandas.Timestamp.day_name "pandas.Timestamp.day_name")([locale])
    | Return the day name of the Timestamp with specified locale. |'
  prefs: []
  type: TYPE_TB
- en: '| [`dst`](pandas.Timestamp.dst.html#pandas.Timestamp.dst "pandas.Timestamp.dst")()
    | Return the daylight saving time (DST) adjustment. |'
  prefs: []
  type: TYPE_TB
- en: '| [`floor`](pandas.Timestamp.floor.html#pandas.Timestamp.floor "pandas.Timestamp.floor")(freq[, ambiguous, nonexistent])
    | Return a new Timestamp floored to this resolution. |'
  prefs: []
  type: TYPE_TB
- en: '| `fromisocalendar` | int, int, int -> Construct a date from the ISO year,
    week number and weekday. |'
  prefs: []
  type: TYPE_TB
- en: '| `fromisoformat` | string -> datetime from datetime.isoformat() output |'
  prefs: []
  type: TYPE_TB
- en: '| [`fromordinal`](pandas.Timestamp.fromordinal.html#pandas.Timestamp.fromordinal
    "pandas.Timestamp.fromordinal")(ordinal[, tz]) | Construct a timestamp from a
    a proleptic Gregorian ordinal. |'
  prefs: []
  type: TYPE_TB
- en: '| [`fromtimestamp`](pandas.Timestamp.fromtimestamp.html#pandas.Timestamp.fromtimestamp
    "pandas.Timestamp.fromtimestamp")(ts) | Transform timestamp[, tz] to tz''s local
    time from POSIX timestamp. |'
  prefs: []
  type: TYPE_TB
- en: '| [`isocalendar`](pandas.Timestamp.isocalendar.html#pandas.Timestamp.isocalendar
    "pandas.Timestamp.isocalendar")() | Return a named tuple containing ISO year,
    week number, and weekday. |'
  prefs: []
  type: TYPE_TB
- en: '| [`isoformat`](pandas.Timestamp.isoformat.html#pandas.Timestamp.isoformat
    "pandas.Timestamp.isoformat")([sep, timespec]) | Return the time formatted according
    to ISO 8601. |'
  prefs: []
  type: TYPE_TB
- en: '| [`isoweekday`](pandas.Timestamp.isoweekday.html#pandas.Timestamp.isoweekday
    "pandas.Timestamp.isoweekday")() | Return the day of the week represented by the
    date. |'
  prefs: []
  type: TYPE_TB
- en: '| [`month_name`](pandas.Timestamp.month_name.html#pandas.Timestamp.month_name
    "pandas.Timestamp.month_name")([locale]) | Return the month name of the Timestamp
    with specified locale. |'
  prefs: []
  type: TYPE_TB
- en: '| [`normalize`](pandas.Timestamp.normalize.html#pandas.Timestamp.normalize
    "pandas.Timestamp.normalize")() | Normalize Timestamp to midnight, preserving
    tz information. |'
  prefs: []
  type: TYPE_TB
- en: '| [`now`](pandas.Timestamp.now.html#pandas.Timestamp.now "pandas.Timestamp.now")([tz])
    | Return new Timestamp object representing current time local to tz. |'
  prefs: []
  type: TYPE_TB
- en: '| [`replace`](pandas.Timestamp.replace.html#pandas.Timestamp.replace "pandas.Timestamp.replace")([year, month, day, hour, minute, ...])
    | Implements datetime.replace, handles nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`round`](pandas.Timestamp.round.html#pandas.Timestamp.round "pandas.Timestamp.round")(freq[, ambiguous, nonexistent])
    | Round the Timestamp to the specified resolution. |'
  prefs: []
  type: TYPE_TB
- en: '| [`strftime`](pandas.Timestamp.strftime.html#pandas.Timestamp.strftime "pandas.Timestamp.strftime")(format)
    | Return a formatted string of the Timestamp. |'
  prefs: []
  type: TYPE_TB
- en: '| [`strptime`](pandas.Timestamp.strptime.html#pandas.Timestamp.strptime "pandas.Timestamp.strptime")(string, format)
    | Function is not implemented. |'
  prefs: []
  type: TYPE_TB
- en: '| [`time`](pandas.Timestamp.time.html#pandas.Timestamp.time "pandas.Timestamp.time")()
    | Return time object with same time but with tzinfo=None. |'
  prefs: []
  type: TYPE_TB
- en: '| [`timestamp`](pandas.Timestamp.timestamp.html#pandas.Timestamp.timestamp
    "pandas.Timestamp.timestamp")() | Return POSIX timestamp as float. |'
  prefs: []
  type: TYPE_TB
- en: '| [`timetuple`](pandas.Timestamp.timetuple.html#pandas.Timestamp.timetuple
    "pandas.Timestamp.timetuple")() | Return time tuple, compatible with time.localtime().
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`timetz`](pandas.Timestamp.timetz.html#pandas.Timestamp.timetz "pandas.Timestamp.timetz")()
    | Return time object with same time and tzinfo. |'
  prefs: []
  type: TYPE_TB
- en: '| [`to_datetime64`](pandas.Timestamp.to_datetime64.html#pandas.Timestamp.to_datetime64
    "pandas.Timestamp.to_datetime64")() | Return a numpy.datetime64 object with same
    precision. |'
  prefs: []
  type: TYPE_TB
- en: '| [`to_julian_date`](pandas.Timestamp.to_julian_date.html#pandas.Timestamp.to_julian_date
    "pandas.Timestamp.to_julian_date")() | Convert TimeStamp to a Julian Date. |'
  prefs: []
  type: TYPE_TB
- en: '| [`to_numpy`](pandas.Timestamp.to_numpy.html#pandas.Timestamp.to_numpy "pandas.Timestamp.to_numpy")([dtype, copy])
    | Convert the Timestamp to a NumPy datetime64. |'
  prefs: []
  type: TYPE_TB
- en: '| [`to_period`](pandas.Timestamp.to_period.html#pandas.Timestamp.to_period
    "pandas.Timestamp.to_period")([freq]) | Return an period of which this timestamp
    is an observation. |'
  prefs: []
  type: TYPE_TB
- en: '| [`to_pydatetime`](pandas.Timestamp.to_pydatetime.html#pandas.Timestamp.to_pydatetime
    "pandas.Timestamp.to_pydatetime")([warn]) | Convert a Timestamp object to a native
    Python datetime object. |'
  prefs: []
  type: TYPE_TB
- en: '| [`today`](pandas.Timestamp.today.html#pandas.Timestamp.today "pandas.Timestamp.today")([tz])
    | Return the current time in the local timezone. |'
  prefs: []
  type: TYPE_TB
- en: '| [`toordinal`](pandas.Timestamp.toordinal.html#pandas.Timestamp.toordinal
    "pandas.Timestamp.toordinal")() | Return proleptic Gregorian ordinal. |'
  prefs: []
  type: TYPE_TB
- en: '| [`tz_convert`](pandas.Timestamp.tz_convert.html#pandas.Timestamp.tz_convert
    "pandas.Timestamp.tz_convert")(tz) | Convert timezone-aware Timestamp to another
    time zone. |'
  prefs: []
  type: TYPE_TB
- en: '| [`tz_localize`](pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize")(tz[, ambiguous, nonexistent]) | Localize the Timestamp
    to a timezone. |'
  prefs: []
  type: TYPE_TB
- en: '| [`tzname`](pandas.Timestamp.tzname.html#pandas.Timestamp.tzname "pandas.Timestamp.tzname")()
    | Return time zone name. |'
  prefs: []
  type: TYPE_TB
- en: '| [`utcfromtimestamp`](pandas.Timestamp.utcfromtimestamp.html#pandas.Timestamp.utcfromtimestamp
    "pandas.Timestamp.utcfromtimestamp")(ts) | Construct a timezone-aware UTC datetime
    from a POSIX timestamp. |'
  prefs: []
  type: TYPE_TB
- en: '| [`utcnow`](pandas.Timestamp.utcnow.html#pandas.Timestamp.utcnow "pandas.Timestamp.utcnow")()
    | Return a new Timestamp representing UTC day and time. |'
  prefs: []
  type: TYPE_TB
- en: '| [`utcoffset`](pandas.Timestamp.utcoffset.html#pandas.Timestamp.utcoffset
    "pandas.Timestamp.utcoffset")() | Return utc offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`utctimetuple`](pandas.Timestamp.utctimetuple.html#pandas.Timestamp.utctimetuple
    "pandas.Timestamp.utctimetuple")() | Return UTC time tuple, compatible with time.localtime().
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`weekday`](pandas.Timestamp.weekday.html#pandas.Timestamp.weekday "pandas.Timestamp.weekday")()
    | Return the day of the week represented by the date. |'
  prefs: []
  type: TYPE_TB
