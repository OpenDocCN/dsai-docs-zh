- en: scipy.fft.dctn
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.dctn.html#scipy.fft.dctn](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.dctn.html#scipy.fft.dctn)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return multidimensional Discrete Cosine Transform along the specified axes.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The input array.
  prefs: []
  type: TYPE_NORMAL
- en: '**type**{1, 2, 3, 4}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Type of the DCT (see Notes). Default type is 2.
  prefs: []
  type: TYPE_NORMAL
- en: '**s**int or array_like of ints or None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The shape of the result. If both *s* and *axes* (see below) are None, *s* is
    `x.shape`; if *s* is None but *axes* is not None, then *s* is `numpy.take(x.shape,
    axes, axis=0)`. If `s[i] > x.shape[i]`, the ith dimension is padded with zeros.
    If `s[i] < x.shape[i]`, the ith dimension is truncated to length `s[i]`. If any
    element of *s* is -1, the size of the corresponding dimension of *x* is used.
  prefs: []
  type: TYPE_NORMAL
- en: '**axes**int or array_like of ints or None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axes over which the DCT is computed. If not given, the last `len(s)` axes are
    used, or all axes if *s* is also not specified.
  prefs: []
  type: TYPE_NORMAL
- en: '**norm**{“backward”, “ortho”, “forward”}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Normalization mode (see Notes). Default is “backward”.
  prefs: []
  type: TYPE_NORMAL
- en: '**overwrite_x**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True, the contents of *x* can be destroyed; the default is False.
  prefs: []
  type: TYPE_NORMAL
- en: '**workers**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Maximum number of workers to use for parallel computation. If negative, the
    value wraps around from `os.cpu_count()`. See [`fft`](scipy.fft.fft.html#scipy.fft.fft
    "scipy.fft.fft") for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '**orthogonalize**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to use the orthogonalized DCT variant (see Notes). Defaults to `True`
    when `norm="ortho"` and `False` otherwise.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.8.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**y**ndarray of real'
  prefs: []
  type: TYPE_NORMAL
- en: The transformed input array.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`idctn`](scipy.fft.idctn.html#scipy.fft.idctn "scipy.fft.idctn")'
  prefs: []
  type: TYPE_NORMAL
- en: Inverse multidimensional DCT
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: For full details of the DCT types and normalization modes, as well as references,
    see [`dct`](scipy.fft.dct.html#scipy.fft.dct "scipy.fft.dct").
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
