- en: numpy.argwhere
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.argwhere.html](https://numpy.org/doc/1.26/reference/generated/numpy.argwhere.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Find the indices of array elements that are non-zero, grouped by element.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**index_array**(N, a.ndim) ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Indices of elements that are non-zero. Indices are grouped by element. This
    array will have shape `(N, a.ndim)` where `N` is the number of non-zero items.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`where`](numpy.where.html#numpy.where "numpy.where"), [`nonzero`](numpy.nonzero.html#numpy.nonzero
    "numpy.nonzero")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: '`np.argwhere(a)` is almost the same as `np.transpose(np.nonzero(a))`, but produces
    a result of the correct shape for a 0D array.'
  prefs: []
  type: TYPE_NORMAL
- en: The output of `argwhere` is not suitable for indexing arrays. For this purpose
    use `nonzero(a)` instead.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
