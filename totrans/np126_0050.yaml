- en: numpy.ndarray.copy
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.ndarray.copy
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.copy.html](https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.copy.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.copy.html](https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.copy.html)
- en: method
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Return a copy of the array.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 返回数组的副本。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**order**{‘C’, ‘F’, ‘A’, ‘K’}, optional'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**order**{‘C’, ‘F’, ‘A’, ‘K’}，可选'
- en: Controls the memory layout of the copy. ‘C’ means C-order, ‘F’ means F-order,
    ‘A’ means ‘F’ if *a* is Fortran contiguous, ‘C’ otherwise. ‘K’ means match the
    layout of *a* as closely as possible. (Note that this function and [`numpy.copy`](numpy.copy.html#numpy.copy
    "numpy.copy") are very similar but have different default values for their order=
    arguments, and this function always passes sub-classes through.)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 控制副本的内存布局。`'C'`表示C顺序，`'F'`表示F顺序，`'A'`表示如果*a*是Fortran连续的，则为`'F'`，否则为`'C'`。`'K'`表示尽可能与*a*的布局匹配。（注意，该函数与[`numpy.copy`](numpy.copy.html#numpy.copy
    "numpy.copy")非常相似，但对于它们的`order=`参数有不同的默认值，该函数始终传递子类。）
- en: See also
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`numpy.copy`](numpy.copy.html#numpy.copy "numpy.copy")'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[`numpy.copy`](numpy.copy.html#numpy.copy "numpy.copy")'
- en: Similar function with different default behavior
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 具有不同默认行为的类似函数
- en: '[`numpy.copyto`](numpy.copyto.html#numpy.copyto "numpy.copyto")'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[`numpy.copyto`](numpy.copyto.html#numpy.copyto "numpy.copyto")'
- en: Notes
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: This function is the preferred method for creating an array copy. The function
    [`numpy.copy`](numpy.copy.html#numpy.copy "numpy.copy") is similar, but it defaults
    to using order ‘K’, and will not pass sub-classes through by default.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数是创建数组副本的首选方法。函数[`numpy.copy`](numpy.copy.html#numpy.copy "numpy.copy")相似，但默认使用`'K'`顺序，并且默认情况下不传递子类。
- en: Examples
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
