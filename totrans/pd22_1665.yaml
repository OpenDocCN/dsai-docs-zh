- en: pandas.core.groupby.DataFrameGroupBy.take
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.core.groupby.DataFrameGroupBy.take.html](https://pandas.pydata.org/docs/reference/api/pandas.core.groupby.DataFrameGroupBy.take.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return the elements in the given *positional* indices in each group.
  prefs: []
  type: TYPE_NORMAL
- en: This means that we are not indexing according to actual values in the index
    attribute of the object. We are indexing according to the actual position of the
    element in the object.
  prefs: []
  type: TYPE_NORMAL
- en: If a requested index does not exist for some group, this method will raise.
    To get similar behavior that ignores indices that don’t exist, see [`DataFrameGroupBy.nth()`](pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth").
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**indices**array-like'
  prefs: []
  type: TYPE_NORMAL
- en: An array of ints indicating which positions to take.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**{0 or ‘index’, 1 or ‘columns’, None}, default 0'
  prefs: []
  type: TYPE_NORMAL
- en: The axis on which to select elements. `0` means that we are selecting rows,
    `1` means that we are selecting columns.
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 2.1.0: For axis=1, operate on the underlying object
    instead. Otherwise the axis keyword is not necessary.'
  prefs: []
  type: TYPE_NORMAL
- en: '****kwargs**'
  prefs: []
  type: TYPE_NORMAL
- en: For compatibility with `numpy.take()`. Has no effect on the output.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: An DataFrame containing the elements taken from each group.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrame.take`'
  prefs: []
  type: TYPE_NORMAL
- en: Take elements from a Series along an axis.
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrame.loc`'
  prefs: []
  type: TYPE_NORMAL
- en: Select a subset of a DataFrame by labels.
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrame.iloc`'
  prefs: []
  type: TYPE_NORMAL
- en: Select a subset of a DataFrame by positions.
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.take`](https://numpy.org/doc/stable/reference/generated/numpy.take.html#numpy.take
    "(in NumPy v1.26)")'
  prefs: []
  type: TYPE_NORMAL
- en: Take elements from an array along an axis.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Take elements at positions 0 and 1 along the axis 0 (default).
  prefs: []
  type: TYPE_NORMAL
- en: Note how the indices selected in the result do not correspond to our input indices
    0 and 1\. That’s because we are selecting the 0th and 1st rows, not rows whose
    indices equal 0 and 1.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The order of the specified indices influences the order in the result. Here,
    the order is swapped from the previous example.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Take elements at indices 1 and 2 along the axis 1 (column selection).
  prefs: []
  type: TYPE_NORMAL
- en: We may take elements using negative integers for positive indices, starting
    from the end of the object, just like with Python lists.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
