- en: pandas.DataFrame.rename_axis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.rename_axis.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.rename_axis.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Set the name of the axis for the index or columns.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**mapper**scalar, list-like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Value to set the axis name attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '**index, columns**scalar, list-like, dict-like or function, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A scalar, list-like, dict-like or functions transformations to apply to that
    axis’ values. Note that the `columns` parameter is not allowed if the object is
    a Series. This parameter only apply for DataFrame type objects.
  prefs: []
  type: TYPE_NORMAL
- en: Use either `mapper` and `axis` to specify the axis to target with `mapper`,
    or `index` and/or `columns`.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**{0 or ‘index’, 1 or ‘columns’}, default 0'
  prefs: []
  type: TYPE_NORMAL
- en: The axis to rename. For Series this parameter is unused and defaults to 0.
  prefs: []
  type: TYPE_NORMAL
- en: '**copy**bool, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Also copy underlying data.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: The copy keyword will change behavior in pandas 3.0. [Copy-on-Write](https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html)
    will be enabled by default, which means that all methods with a copy keyword will
    use a lazy copy mechanism to defer the copy and ignore the copy keyword. The copy
    keyword will be removed in a future version of pandas.
  prefs: []
  type: TYPE_NORMAL
- en: You can already get the future behavior and improvements through enabling copy
    on write `pd.options.mode.copy_on_write = True`
  prefs: []
  type: TYPE_NORMAL
- en: '**inplace**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Modifies the object directly, instead of creating a new Series or DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: Series, DataFrame, or None
  prefs: []
  type: TYPE_NORMAL
- en: The same type as the caller or None if `inplace=True`.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.rename`](pandas.Series.rename.html#pandas.Series.rename "pandas.Series.rename")'
  prefs: []
  type: TYPE_NORMAL
- en: Alter Series index labels or name.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.rename`](pandas.DataFrame.rename.html#pandas.DataFrame.rename "pandas.DataFrame.rename")'
  prefs: []
  type: TYPE_NORMAL
- en: Alter DataFrame index labels or name.
  prefs: []
  type: TYPE_NORMAL
- en: '[`Index.rename`](pandas.Index.rename.html#pandas.Index.rename "pandas.Index.rename")'
  prefs: []
  type: TYPE_NORMAL
- en: Set new names on index.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrame.rename_axis` supports two calling conventions'
  prefs: []
  type: TYPE_NORMAL
- en: '`(index=index_mapper, columns=columns_mapper, ...)`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`(mapper, axis={''index'', ''columns''}, ...)`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The first calling convention will only modify the names of the index and/or
    the names of the Index object that is the columns. In this case, the parameter
    `copy` is ignored.
  prefs: []
  type: TYPE_NORMAL
- en: The second calling convention will modify the names of the corresponding index
    if mapper is a list or a scalar. However, if mapper is dict-like or a function,
    it will use the deprecated behavior of modifying the axis *labels*.
  prefs: []
  type: TYPE_NORMAL
- en: We *highly* recommend using keyword arguments to clarify your intent.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '**Series**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**DataFrame**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**MultiIndex**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
