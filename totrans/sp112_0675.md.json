["```py\nA = csr_array(eye(3)) \n```", "```py\n>>> import numpy as np\n>>> from scipy.sparse import csr_array\n>>> A = csr_array([[1, 2, 0], [0, 0, 3], [4, 0, 5]])\n>>> v = np.array([1, 0, -1])\n>>> A.dot(v)\narray([ 1, -3, -1], dtype=int64) \n```", "```py\n>>> np.dot(A.toarray(), v)\narray([ 1, -3, -1], dtype=int64) \n```", "```py\n>>> from scipy.sparse import lil_array\n>>> from scipy.sparse.linalg import spsolve\n>>> from numpy.linalg import solve, norm\n>>> from numpy.random import rand \n```", "```py\n>>> A = lil_array((1000, 1000))\n>>> A[0, :100] = rand(100)\n>>> A[1, 100:200] = A[0, :100]\n>>> A.setdiag(rand(1000)) \n```", "```py\n>>> A = A.tocsr()\n>>> b = rand(1000)\n>>> x = spsolve(A, b) \n```", "```py\n>>> x_ = solve(A.toarray(), b) \n```", "```py\n>>> err = norm(x-x_)\n>>> err < 1e-10\nTrue \n```", "```py\n>>> from scipy import sparse\n>>> from numpy import array\n>>> I = array([0,3,1,0])\n>>> J = array([0,3,1,2])\n>>> V = array([4,5,7,9])\n>>> A = sparse.coo_array((V,(I,J)),shape=(4,4)) \n```", "```py\n>>> I = array([0,0,1,3,1,0,0])\n>>> J = array([0,2,1,3,1,0,0])\n>>> V = array([1,1,1,1,1,1,1])\n>>> B = sparse.coo_array((V,(I,J)),shape=(4,4)).tocsr() \n```"]