- en: numpy.log2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.log2.html](https://numpy.org/doc/1.26/reference/generated/numpy.log2.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Base-2 logarithm of *x*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input values.
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, None, or tuple of ndarray and None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A location into which the result is stored. If provided, it must have a shape
    that the inputs broadcast to. If not provided or None, a freshly-allocated array
    is returned. A tuple (possible only as a keyword argument) must have length equal
    to the number of outputs.
  prefs: []
  type: TYPE_NORMAL
- en: '**where**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: This condition is broadcast over the input. At locations where the condition
    is True, the *out* array will be set to the ufunc result. Elsewhere, the *out*
    array will retain its original value. Note that if an uninitialized *out* array
    is created via the default `out=None`, locations within it where the condition
    is False will remain uninitialized.
  prefs: []
  type: TYPE_NORMAL
- en: '****kwargs**'
  prefs: []
  type: TYPE_NORMAL
- en: For other keyword-only arguments, see the [ufunc docs](../ufuncs.html#ufuncs-kwargs).
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**y**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Base-2 logarithm of *x*. This is a scalar if *x* is a scalar.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`log`](numpy.log.html#numpy.log "numpy.log"), [`log10`](numpy.log10.html#numpy.log10
    "numpy.log10"), [`log1p`](numpy.log1p.html#numpy.log1p "numpy.log1p"), [`emath.log2`](numpy.emath.log2.html#numpy.emath.log2
    "numpy.emath.log2")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.3.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Logarithm is a multivalued function: for each *x* there is an infinite number
    of *z* such that *2**z = x*. The convention is to return the *z* whose imaginary
    part lies in *(-pi, pi]*.'
  prefs: []
  type: TYPE_NORMAL
- en: For real-valued input data types, [`log2`](#numpy.log2 "numpy.log2") always
    returns real output. For each value that cannot be expressed as a real number
    or infinity, it yields `nan` and sets the *invalid* floating point error flag.
  prefs: []
  type: TYPE_NORMAL
- en: For complex-valued input, [`log2`](#numpy.log2 "numpy.log2") is a complex analytical
    function that has a branch cut *[-inf, 0]* and is continuous from above on it.
    [`log2`](#numpy.log2 "numpy.log2") handles the floating-point negative zero as
    an infinitesimal negative number, conforming to the C99 standard.
  prefs: []
  type: TYPE_NORMAL
- en: In the cases where the input has a negative real part and a very small negative
    complex part (approaching 0), the result is so close to *-pi* that it evaluates
    to exactly *-pi*.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
