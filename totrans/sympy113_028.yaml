- en: Solve an Equation Algebraically
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代数方式解方程
- en: 原文：[https://docs.sympy.org/latest/guides/solving/solve-equation-algebraically.html](https://docs.sympy.org/latest/guides/solving/solve-equation-algebraically.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.sympy.org/latest/guides/solving/solve-equation-algebraically.html](https://docs.sympy.org/latest/guides/solving/solve-equation-algebraically.html)
- en: Use SymPy to solve an equation algebraically (symbolically). For example, solving
    \(x^2 = y\) for \(x\) yields \(x \in \{-\sqrt{y},\sqrt{y}\}\).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 使用SymPy以代数方式（符号方式）解方程。例如，解决 \(x^2 = y\) 对 \(x\) 的方程得出 \(x \in \{-\sqrt{y},\sqrt{y}\}\)。
- en: Alternatives to consider
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 考虑的其他选择
- en: SymPy can also [solve many other types of problems including sets of equations](index.html).
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SymPy还可以[解决许多其他类型的问题，包括方程组](index.html)。
- en: Some equations cannot be solved algebraically (either at all or by SymPy), so
    you may have to [`solve your equation numerically`](../../modules/solvers/solvers.html#sympy.solvers.solvers.nsolve
    "sympy.solvers.solvers.nsolve") instead.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有些方程无法代数方式解决（无论是完全还是通过SymPy），因此您可能需要通过[数值方法解方程](../../modules/solvers/solvers.html#sympy.solvers.solvers.nsolve
    "sympy.solvers.solvers.nsolve")。
- en: Solving Functions
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决函数
- en: 'There are two high-level functions to solve equations, [`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve") and [`solveset()`](../../modules/solvers/solveset.html#sympy.solvers.solveset.solveset
    "sympy.solvers.solveset.solveset"). Here is an example of each:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个高级函数用于解方程，[`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve")和[`solveset()`](../../modules/solvers/solveset.html#sympy.solvers.solveset.solveset
    "sympy.solvers.solveset.solveset")。以下是每个的一个示例：
- en: '[`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve")'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve")'
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[`solveset()`](../../modules/solvers/solveset.html#sympy.solvers.solveset.solveset
    "sympy.solvers.solveset.solveset")'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[`solveset()`](../../modules/solvers/solveset.html#sympy.solvers.solveset.solveset
    "sympy.solvers.solveset.solveset")'
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Here are recommendations on when to use:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是何时使用的建议：
- en: '[`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve")'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve")'
- en: You want to get explicit symbolic representations of the different values a
    variable could take that would satisfy the equation.
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您希望得到变量满足方程的不同值的显式符号表示。
- en: You want to substitute those explicit solution values into other equations or
    expressions involving the same variable using [`subs()`](../../modules/core.html#sympy.core.basic.Basic.subs
    "sympy.core.basic.Basic.subs")
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您希望将这些显式解值替换为涉及相同变量的其他方程或表达式，使用[`subs()`](../../modules/core.html#sympy.core.basic.Basic.subs
    "sympy.core.basic.Basic.subs")。
- en: '[`solveset()`](../../modules/solvers/solveset.html#sympy.solvers.solveset.solveset
    "sympy.solvers.solveset.solveset")'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`solveset()`](../../modules/solvers/solveset.html#sympy.solvers.solveset.solveset
    "sympy.solvers.solveset.solveset")'
- en: You want to represent the solutions in a mathematically precise way, using [mathematical
    sets](../../modules/sets.html).
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您希望以数学上准确的方式表示解，使用[数学集合](../../modules/sets.html)。
- en: You want a representation of all the solutions, including if there are infinitely
    many.
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您希望得到所有解的表示，包括如果存在无限多解时。
- en: You want a consistent input interface.
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您希望一个一致的输入接口。
- en: You want to limit the domain of the solutions to any arbitrary set.
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您希望限制解的定义域为任意集。
- en: 'You do not need to programmatically extract solutions from the solution set:
    solution sets cannot necessarily be interrogated programmatically.'
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您不需要从解集中以程序方式提取解：解集不能以程序方式查询。
- en: Guidance
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 指南
- en: Refer to [Include the Variable to be Solved for in the Function Call](solving-guidance.html#include-the-variable-to-be-solved-for-in-the-function-call)
    and [Ensure Consistent Formatting From solve()](solving-guidance.html#ensure-consistent-formatting-from-solve).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考[在函数调用中包含要解决的变量](solving-guidance.html#include-the-variable-to-be-solved-for-in-the-function-call)和[确保从solve()获得一致的格式](solving-guidance.html#ensure-consistent-formatting-from-solve)。
- en: Solve an Equation Algebraically
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代数方式解方程
- en: You can solve an equation in several ways. The examples below demonstrate using
    both [`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve") and [`solveset()`](../../modules/solvers/solveset.html#sympy.solvers.solveset.solveset
    "sympy.solvers.solveset.solveset") where applicable. You can choose the function
    best suited to your equation.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以用几种方式解方程。以下示例演示了在适用的情况下同时使用 [`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve") 和 [`solveset()`](../../modules/solvers/solveset.html#sympy.solvers.solveset.solveset
    "sympy.solvers.solveset.solveset")。你可以选择最适合你方程的函数。
- en: Make Your Equation Into an Expression That Equals Zero
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将你的方程转化为等于零的表达式。
- en: Use the fact that any expression not in an `Eq` (equation) is automatically
    assumed to equal zero (0) by the solving functions. You can rearrange the equation
    \(x^2 = y\) to \(x^2 - y = 0\), and solve that expression. This approach is convenient
    if you are interactively solving an expression which already equals zero, or an
    equation that you do not mind rearranging to \(expression = 0\).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这样一个事实：任何不在 `Eq`（等式）中的表达式都会被解函数自动假定为等于零（0）。你可以将方程 \(x^2 = y\) 重新排列为 \(x^2
    - y = 0\)，然后解决这个表达式。如果你正在交互地解决一个已经等于零的表达式，或者一个你不介意重新排列成 \(expression = 0\) 的方程，这种方法就很方便。
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Put Your Equation Into `Eq` Form
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将你的方程放入 `Eq` 形式中。
- en: Put your equation into `Eq` form, then solve the `Eq`. This approach is convenient
    if you are interactively solving an equation which you already have in the form
    of an equation, or which you think of as an equality. It also helps to prevent
    sign errors when subtracting one side from the other.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 将你的方程放入 `Eq` 形式中，然后解 `Eq`。如果你正在交互地解决一个你已经有了等式形式的方程，或者你将其视为等式的方程，这种方法很方便。它还有助于在从一边减去另一边时避免符号错误。
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Restrict the Domain of Solutions
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 限制解的域。
- en: 'By default, SymPy will return solutions in the complex domain, which also includes
    purely real and imaginary values. Here, the first two solutions are real, and
    the last two are imaginary:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，SymPy 将在复数域中返回解，这也包括纯实数和纯虚数值。这里，前两个解是实数，最后两个是虚数：
- en: '[PRE4]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: To restrict returned solutions to real numbers, or another domain or range,
    the different solving functions use different methods.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要将返回的解限制为实数，或者另一个域或范围，不同的解函数使用不同的方法。
- en: For [`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve"), place an assumption on the symbol to be solved
    for, \(x\)
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 [`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve")，在要解的符号 \(x\) 上放置一个假设，
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'or restrict the solutions with standard Python techniques for filtering a list
    such as a list comprehension:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 或者使用标准的 Python 过滤列表技术来限制解，例如列表推导式：
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: For [`solveset()`](../../modules/solvers/solveset.html#sympy.solvers.solveset.solveset
    "sympy.solvers.solveset.solveset"), limit the output domain in the function call
    by setting a domain
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 [`solveset()`](../../modules/solvers/solveset.html#sympy.solvers.solveset.solveset
    "sympy.solvers.solveset.solveset")，在函数调用中通过设置一个域来限制输出的定义域。
- en: '[PRE7]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'or by restricting returned solutions to any arbitrary set, including an interval:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 或者通过将返回的解限制为任意集合，包括一个区间：
- en: '[PRE8]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'and if you restrict the solutions to a domain in which there are no solutions,
    [`solveset()`](../../modules/solvers/solveset.html#sympy.solvers.solveset.solveset
    "sympy.solvers.solveset.solveset") will return the empty set, [EmptySet](../../modules/sets.html):'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你将解限制在没有解的域中，[`solveset()`](../../modules/solvers/solveset.html#sympy.solvers.solveset.solveset
    "sympy.solvers.solveset.solveset") 将返回空集合，[EmptySet](../../modules/sets.html)。
- en: '[PRE9]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Explicitly Represent Infinite Sets of Possible Solutions
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 显式地表示可能解的无限集合。
- en: '[`solveset()`](../../modules/solvers/solveset.html#sympy.solvers.solveset.solveset
    "sympy.solvers.solveset.solveset") [can represent infinite sets of possible solutions](../../modules/solvers/solveset.html#why-solveset)
    and express them in standard mathematical notation, for example \(\sin(x) = 0\)
    for \(x = n * \pi\) for every integer value of \(n\):'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[`solveset()`](../../modules/solvers/solveset.html#sympy.solvers.solveset.solveset
    "sympy.solvers.solveset.solveset") [可以表示可能解的无限集合](../../modules/solvers/solveset.html#why-solveset)，并以标准数学符号表示，例如对于每个整数值的
    \(n\)，满足 \(\sin(x) = 0\) 的 \(x = n * \pi\)：'
- en: '[PRE10]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'However, [`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve") will return only a finite number of solutions:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，[`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve") 只会返回有限数量的解：
- en: '[PRE11]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve") tries to return just enough solutions so that all
    (infinitely many) solutions can generated from the returned solutions by adding
    integer multiples of the [`periodicity()`](../../modules/calculus/index.html#sympy.calculus.util.periodicity
    "sympy.calculus.util.periodicity") of the equation, here \(2\pi\).'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve") 尝试返回足够多的解，以便通过添加方程的周期性（此处为\( 2\pi \)的整数倍）生成所有（无穷多个）解。'
- en: Use the Solution Result
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用解结果
- en: Substitute Solutions From [`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve") Into an Expression
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将[`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve")的解代入表达式中
- en: You can substitute solutions from [`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve") into an expression.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将[`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve")的解代入表达式中。
- en: 'A common use case is finding the critical points and values for a function
    \(f\). At the critical points, the [`Derivative`](../../modules/core.html#sympy.core.function.Derivative
    "sympy.core.function.Derivative") equals zero (or is undefined). You can then
    obtain the function values at those critical points by substituting the critical
    points back into the function using [`subs()`](../../modules/core.html#sympy.core.basic.Basic.subs
    "sympy.core.basic.Basic.subs"). You can also tell if the critical point is a maxima
    or minima by substituting the values into the expression for the second derivative:
    a negative value indicates a maximum, and a positive value indicates a minimum.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 一个常见的用例是找到函数\( f \)的临界点和值。在临界点，[`Derivative`](../../modules/core.html#sympy.core.function.Derivative
    "sympy.core.function.Derivative")等于零（或未定义）。然后，您可以通过将临界点代入函数中使用[`subs()`](../../modules/core.html#sympy.core.basic.Basic.subs
    "sympy.core.basic.Basic.subs")来获取这些临界点的函数值。您还可以通过将值代入二阶导数表达式来判断临界点是否为最大值或最小值：负值表示最大值，正值表示最小值。
- en: '[PRE12]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[`solveset()`](../../modules/solvers/solveset.html#sympy.solvers.solveset.solveset
    "sympy.solvers.solveset.solveset") Solution Sets Cannot Necessarily Be Interrogated
    Programmatically'
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[`solveset()`](../../modules/solvers/solveset.html#sympy.solvers.solveset.solveset
    "sympy.solvers.solveset.solveset") 解集可能无法通过编程方式查询。'
- en: 'If [`solveset()`](../../modules/solvers/solveset.html#sympy.solvers.solveset.solveset
    "sympy.solvers.solveset.solveset") returns a finite set (class [`FiniteSet`](../../modules/sets.html#sympy.sets.sets.FiniteSet
    "sympy.sets.sets.FiniteSet")), you can iterate through the solutions:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果[`solveset()`](../../modules/solvers/solveset.html#sympy.solvers.solveset.solveset
    "sympy.solvers.solveset.solveset")返回一个有限集（类[`FiniteSet`](../../modules/sets.html#sympy.sets.sets.FiniteSet
    "sympy.sets.sets.FiniteSet"))，您可以遍历解：
- en: '[PRE13]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'However, for more complex results, it may not be possible to list the solutions:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，对于更复杂的结果，可能无法列出所有解。
- en: '[PRE14]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'In this case, it is because, if \(y\) is negative, its square root would be
    imaginary rather than real and therefore outside the declared domain of the solution
    set. By declaring \(y\) to be real and positive, SymPy can determine that its
    square root is real, and thus resolve the intersection between the solutions and
    the set of real numbers:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，这是因为如果\( y \)为负数，其平方根将是虚数而不是实数，因此超出了解集的声明域。通过声明\( y \)为实数且为正，SymPy 可以确定其平方根为实数，从而解决解集与实数集之间的交集：
- en: '[PRE15]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Alternatively, you can extract the sets from the solution set using [`args`](../../modules/core.html#sympy.core.basic.Basic.args
    "sympy.core.basic.Basic.args"), then create a list from the set containing the
    symbolic solutions:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您可以从解集中提取集合，使用[`args`](../../modules/core.html#sympy.core.basic.Basic.args
    "sympy.core.basic.Basic.args")，然后从包含符号解的集合中创建列表：
- en: '[PRE16]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Options That Can Speed up [`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve")
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可以加快[`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve")的选项
- en: Refer to [solving guidance](solving-guidance.html#options-that-can-speed-up-solve).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 参考[solving guidance](solving-guidance.html#options-that-can-speed-up-solve)。
- en: Not All Equations Can Be Solved
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 并非所有方程都能求解
- en: Equations With No Closed-Form Solution
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 没有封闭形式解的方程
- en: 'Some equations have no closed-form solution, in which case SymPy may return
    an empty set or give an error. For example, the following [transcendental equation](https://en.wikipedia.org/wiki/Transcendental_equation)
    has no closed-form solution:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 有些方程没有闭式解，此时 SymPy 可能返回一个空集或出现错误。例如，下面的[超越方程](https://en.wikipedia.org/wiki/Transcendental_equation)没有闭式解：
- en: '[PRE17]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Equations Which Have a Closed-Form Solution, and SymPy Cannot Solve
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 有闭式解的方程，而 SymPy 无法解决
- en: It is also possible that there is an algebraic solution to your equation, and
    SymPy has not implemented an appropriate algorithm. If that happens, or SymPy
    returns an empty set or list when there is a mathematical solution (indicating
    a bug in SymPy), please post it on the [mailing list](https://groups.google.com/g/sympy),
    or open an issue on [SymPy’s GitHub page](https://github.com/sympy/sympy/issues).
    Until the issue is resolved, you can [`solve your equation numerically`](../../modules/solvers/solvers.html#sympy.solvers.solvers.nsolve
    "sympy.solvers.solvers.nsolve") instead.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 可能也存在一个代数解决方案来解决你的方程，但 SymPy 尚未实现适当的算法。如果发生这种情况，或者当 SymPy 返回一个空集或列表时（表示 SymPy
    中存在 bug），请在[邮件列表](https://groups.google.com/g/sympy)上发布，或在[SymPy 的 GitHub 页面](https://github.com/sympy/sympy/issues)上开一个
    issue。在问题解决之前，你可以[`数值解`](../../modules/solvers/solvers.html#sympy.solvers.solvers.nsolve
    "sympy.solvers.solvers.nsolve")你的方程。
- en: Report a Bug
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 报告 Bug
- en: If you find a bug with a solving function, please post the problem on the [SymPy
    mailing list](https://groups.google.com/g/sympy). Until the issue is resolved,
    you can use a different method listed in [Alternatives to consider](#alternatives-to-consider).
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你发现解决函数存在 bug，请在[SymPy 邮件列表](https://groups.google.com/g/sympy)上发布问题。在问题解决之前，你可以使用[考虑的备选方案](#alternatives-to-consider)中列出的其他方法。
