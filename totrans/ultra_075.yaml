- en: DOTA8 Dataset
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[`docs.ultralytics.com/datasets/obb/dota8/`](https://docs.ultralytics.com/datasets/obb/dota8/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Ultralytics](https://ultralytics.com) DOTA8 is a small, but versatile oriented
    object detection dataset composed of the first 8 images of 8 images of the split
    DOTAv1 set, 4 for training and 4 for validation. This dataset is ideal for testing
    and debugging object detection models, or for experimenting with new detection
    approaches. With 8 images, it is small enough to be easily manageable, yet diverse
    enough to test training pipelines for errors and act as a sanity check before
    training larger datasets.'
  prefs: []
  type: TYPE_NORMAL
- en: This dataset is intended for use with Ultralytics [HUB](https://hub.ultralytics.com)
    and [YOLOv8](https://github.com/ultralytics/ultralytics).
  prefs: []
  type: TYPE_NORMAL
- en: Dataset YAML
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A YAML (Yet Another Markup Language) file is used to define the dataset configuration.
    It contains information about the dataset's paths, classes, and other relevant
    information. In the case of the DOTA8 dataset, the `dota8.yaml` file is maintained
    at [`github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/datasets/dota8.yaml`](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/datasets/dota8.yaml).
  prefs: []
  type: TYPE_NORMAL
- en: ultralytics/cfg/datasets/dota8.yaml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Usage
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To train a YOLOv8n-obb model on the DOTA8 dataset for 100 epochs with an image
    size of 640, you can use the following code snippets. For a comprehensive list
    of available arguments, refer to the model Training page.
  prefs: []
  type: TYPE_NORMAL
- en: Train Example
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Sample Images and Annotations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here are some examples of images from the DOTA8 dataset, along with their corresponding
    annotations:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Dataset sample image](img/5cd5d0e625945634440545003cb955fb.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Mosaiced Image**: This image demonstrates a training batch composed of mosaiced
    dataset images. Mosaicing is a technique used during training that combines multiple
    images into a single image to increase the variety of objects and scenes within
    each training batch. This helps improve the model''s ability to generalize to
    different object sizes, aspect ratios, and contexts.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The example showcases the variety and complexity of the images in the DOTA8
    dataset and the benefits of using mosaicing during the training process.
  prefs: []
  type: TYPE_NORMAL
- en: Citations and Acknowledgments
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you use the DOTA dataset in your research or development work, please cite
    the following paper:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: A special note of gratitude to the team behind the DOTA datasets for their commendable
    effort in curating this dataset. For an exhaustive understanding of the dataset
    and its nuances, please visit the [official DOTA website](https://captain-whu.github.io/DOTA/index.html).
  prefs: []
  type: TYPE_NORMAL
- en: FAQ
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: What is the DOTA8 dataset and how can it be used?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The DOTA8 dataset is a small, versatile oriented object detection dataset made
    up of the first 8 images from the DOTAv1 split set, with 4 images designated for
    training and 4 for validation. It's ideal for testing and debugging object detection
    models like Ultralytics YOLOv8\. Due to its manageable size and diversity, it
    helps in identifying pipeline errors and running sanity checks before deploying
    larger datasets. Learn more about object detection with [Ultralytics YOLOv8](https://github.com/ultralytics/ultralytics).
  prefs: []
  type: TYPE_NORMAL
- en: How do I train a YOLOv8 model using the DOTA8 dataset?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To train a YOLOv8n-obb model on the DOTA8 dataset for 100 epochs with an image
    size of 640, you can use the following code snippets. For comprehensive argument
    options, refer to the model Training page.
  prefs: []
  type: TYPE_NORMAL
- en: Train Example
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: What are the key features of the DOTA dataset and where can I access the YAML
    file?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The DOTA dataset is known for its large-scale benchmark and the challenges it
    presents for object detection in aerial images. The DOTA8 subset is a smaller,
    manageable dataset ideal for initial tests. You can access the `dota8.yaml` file,
    which contains paths, classes, and configuration details, at this [GitHub link](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/datasets/dota8.yaml).
  prefs: []
  type: TYPE_NORMAL
- en: How does mosaicing enhance model training with the DOTA8 dataset?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Mosaicing combines multiple images into one during training, increasing the
    variety of objects and contexts within each batch. This improves a model's ability
    to generalize to different object sizes, aspect ratios, and scenes. This technique
    can be visually demonstrated through a training batch composed of mosaiced DOTA8
    dataset images, helping in robust model development. Explore more about mosaicing
    and training techniques on our Training page.
  prefs: []
  type: TYPE_NORMAL
- en: Why should I use Ultralytics YOLOv8 for object detection tasks?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Ultralytics YOLOv8 provides state-of-the-art real-time object detection capabilities,
    including features like oriented bounding boxes (OBB), instance segmentation,
    and a highly versatile training pipeline. It's suitable for various applications
    and offers pretrained models for efficient fine-tuning. Explore further about
    the advantages and usage in the [Ultralytics YOLOv8 documentation](https://github.com/ultralytics/ultralytics).
  prefs: []
  type: TYPE_NORMAL
