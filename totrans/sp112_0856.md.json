["```py\nscipy.special.nbdtrik(y, n, p, out=None) = <ufunc 'nbdtrik'>\n```", "```py\n>>> import numpy as np\n>>> from scipy.special import nbdtr, nbdtrik\n>>> k, n, p = 5, 2, 0.5\n>>> cdf_value = nbdtr(k, n, p)\n>>> cdf_value\n0.9375 \n```", "```py\n>>> nbdtrik(cdf_value, n, p)\n5.0 \n```", "```py\n>>> import matplotlib.pyplot as plt\n>>> p_parameters = [0.2, 0.5, 0.7, 0.5]\n>>> n_parameters = [30, 30, 30, 80]\n>>> linestyles = ['solid', 'dashed', 'dotted', 'dashdot']\n>>> parameters_list = list(zip(p_parameters, n_parameters, linestyles))\n>>> cdf_vals = np.linspace(0, 1, 1000)\n>>> fig, ax = plt.subplots(figsize=(8, 8))\n>>> for parameter_set in parameters_list:\n...     p, n, style = parameter_set\n...     nbdtrik_vals = nbdtrik(cdf_vals, n, p)\n...     ax.plot(cdf_vals, nbdtrik_vals, label=rf\"$n={n},\\ p={p}$\",\n...             ls=style)\n>>> ax.legend()\n>>> ax.set_ylabel(\"$k$\")\n>>> ax.set_xlabel(\"$CDF$\")\n>>> ax.set_title(\"Negative binomial percentile function\")\n>>> plt.show() \n```", "```py\n>>> from scipy.stats import nbinom\n>>> q, n, p = 0.6, 5, 0.5\n>>> nbinom.ppf(q, n, p), nbdtrik(q, n, p)\n(5.0, 4.800428460273882) \n```"]