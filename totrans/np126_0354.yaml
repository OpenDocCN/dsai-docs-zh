- en: numpy.asfortranarray
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.asfortranarray.html](https://numpy.org/doc/1.26/reference/generated/numpy.asfortranarray.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return an array (ndim >= 1) laid out in Fortran order in memory.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input array.
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype**str or dtype object, optional'
  prefs: []
  type: TYPE_NORMAL
- en: By default, the data-type is inferred from the input data.
  prefs: []
  type: TYPE_NORMAL
- en: '**like**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Reference object to allow the creation of arrays which are not NumPy arrays.
    If an array-like passed in as `like` supports the `__array_function__` protocol,
    the result will be defined by it. In this case, it ensures the creation of an
    array object compatible with that passed in via this argument.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.20.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The input *a* in Fortran, or column-major, order.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`ascontiguousarray`](numpy.ascontiguousarray.html#numpy.ascontiguousarray
    "numpy.ascontiguousarray")'
  prefs: []
  type: TYPE_NORMAL
- en: Convert input to a contiguous (C order) array.
  prefs: []
  type: TYPE_NORMAL
- en: '[`asanyarray`](numpy.asanyarray.html#numpy.asanyarray "numpy.asanyarray")'
  prefs: []
  type: TYPE_NORMAL
- en: Convert input to an ndarray with either row or column-major memory order.
  prefs: []
  type: TYPE_NORMAL
- en: '[`require`](numpy.require.html#numpy.require "numpy.require")'
  prefs: []
  type: TYPE_NORMAL
- en: Return an ndarray that satisfies requirements.
  prefs: []
  type: TYPE_NORMAL
- en: '[`ndarray.flags`](numpy.ndarray.flags.html#numpy.ndarray.flags "numpy.ndarray.flags")'
  prefs: []
  type: TYPE_NORMAL
- en: Information about the memory layout of the array.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Starting with a C-contiguous array:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Calling `asfortranarray` makes a Fortran-contiguous copy:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, starting with a Fortran-contiguous array:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, calling `asfortranarray` returns the same object:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Note: This function returns an array with at least one-dimension (1-d) so it
    will not preserve 0-d arrays.'
  prefs: []
  type: TYPE_NORMAL
