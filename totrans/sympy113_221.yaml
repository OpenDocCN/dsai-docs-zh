- en: Grover’s Algorithm
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/physics/quantum/grover.html](https://docs.sympy.org/latest/modules/physics/quantum/grover.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Grover’s algorithm and helper functions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Todo:'
  prefs: []
  type: TYPE_NORMAL
- en: W gate construction (or perhaps -W gate based on Mermin’s book)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Generalize the algorithm for an unknown function that returns 1 on multiple
    qubit states, not just one.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement _represent_ZGate in OracleGate
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: A black box gate.
  prefs: []
  type: TYPE_NORMAL
- en: The gate marks the desired qubits of an unknown function by flipping the sign
    of the qubits. The unknown function returns true when it finds its desired qubits
    and false otherwise.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**qubits** : int'
  prefs: []
  type: TYPE_NORMAL
- en: Number of qubits.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**oracle** : callable'
  prefs: []
  type: TYPE_NORMAL
- en: A callable function that returns a boolean on a computational basis.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Apply an Oracle gate that flips the sign of `|2>` on different qubits:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The unknown function that helps find the sought after qubits.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: A tuple of target qubits.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: General n qubit W Gate in Grover’s algorithm.
  prefs: []
  type: TYPE_NORMAL
- en: The gate performs the operation `2|phi><phi| - 1` on some qubits. `|phi> = (tensor
    product of n Hadamards)*(|0> with n qubits)`
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**nqubits** : int'
  prefs: []
  type: TYPE_NORMAL
- en: The number of qubits to operate on
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Applies grover’s algorithm.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**oracle** : callable'
  prefs: []
  type: TYPE_NORMAL
- en: The unknown callable function that returns true when applied to the desired
    qubits and false otherwise.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**state** : Expr'
  prefs: []
  type: TYPE_NORMAL
- en: The resulting state after Grover’s algorithm has been iterated.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Apply grover’s algorithm to an even superposition of 2 qubits:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Applies one application of the Oracle and W Gate, WV.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**qstate** : Qubit'
  prefs: []
  type: TYPE_NORMAL
- en: A superposition of qubits.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**oracle** : OracleGate'
  prefs: []
  type: TYPE_NORMAL
- en: The black box operator that flips the sign of the desired basis qubits.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Qubit** : The qubits after applying the Oracle and W gate.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Perform one iteration of grover’s algorithm to see a phase change:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Creates an equal superposition of the computational basis.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**nqubits** : int'
  prefs: []
  type: TYPE_NORMAL
- en: The number of qubits.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**state** : Qubit'
  prefs: []
  type: TYPE_NORMAL
- en: An equal superposition of the computational basis with nqubits.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Create an equal superposition of 2 qubits:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
