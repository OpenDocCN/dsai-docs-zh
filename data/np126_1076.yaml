- en: NumPy core libraries
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NumPy核心库
- en: 原文：[https://numpy.org/doc/1.26/reference/c-api/coremath.html](https://numpy.org/doc/1.26/reference/c-api/coremath.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/c-api/coremath.html](https://numpy.org/doc/1.26/reference/c-api/coremath.html)
- en: 'Starting from numpy 1.3.0, we are working on separating the pure C, “computational”
    code from the python dependent code. The goal is twofolds: making the code cleaner,
    and enabling code reuse by other extensions outside numpy (scipy, etc…).'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 从numpy 1.3.0开始，我们正在致力于将纯C的“计算”代码与依赖于Python的代码分离。目标是使代码更清洁，并使其能够被numpy之外的其他扩展（例如scipy等）重用。
- en: NumPy core math library
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: NumPy核心数学库
- en: The numpy core math library (‘npymath’) is a first step in this direction. This
    library contains most math-related C99 functionality, which can be used on platforms
    where C99 is not well supported. The core math functions have the same API as
    the C99 ones, except for the `npy_*` prefix.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: numpy核心数学库（‘npymath’）是这一方向的第一步。该库包含大多数与数学相关的C99功能，可用于C99支持不佳的平台。核心数学函数与C99函数具有相同的API，除了`npy_`前缀。
- en: The available functions are defined in `<numpy/npy_math.h>` - please refer to
    this header when in doubt.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 可用的函数在`<numpy/npy_math.h>`中定义，疑惑时请参考该头文件。
- en: Note
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: An effort is underway to make `npymath` smaller (since C99 compatibility of
    compilers has improved over time) and more easily vendorable or usable as a header-only
    dependency. That will avoid problems with shipping a static library built with
    a compiler which may not match the compiler used by a downstream package or end
    user. See [gh-20880](https://github.com/numpy/numpy/issues/20880) for details.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 正在进行努力使`npymath`更小（因为随着时间的推移，编译器对C99的兼容性已经提高），并且更容易供应商化或作为仅头文件依赖。这将避免使用与下游包或最终用户使用的编译器不匹配的静态库的问题。详细信息，请参阅[gh-20880](https://github.com/numpy/numpy/issues/20880)。
- en: Floating point classification
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 浮点数分类
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This macro is defined to a NaN (Not a Number), and is guaranteed to have the
    signbit unset (‘positive’ NaN). The corresponding single and extension precision
    macro are available with the suffix F and L.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 此宏定义为NaN（非数），保证符号位未设置（“正”NaN）。相应的单精度和扩展精度宏可分别添加F和L后缀获得。
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This macro is defined to a positive inf. The corresponding single and extension
    precision macro are available with the suffix F and L.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 此宏定义为正无穷大。相应的单精度和扩展精度宏可分别添加F和L后缀获得。
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This macro is defined to positive zero. The corresponding single and extension
    precision macro are available with the suffix F and L.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 此宏定义为正零。相应的单精度和扩展精度宏可添加F和L后缀获得。
- en: '[PRE3]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This macro is defined to negative zero (that is with the sign bit set). The
    corresponding single and extension precision macro are available with the suffix
    F and L.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 此宏定义为负零（即符号位设置）。相应的单精度和扩展精度宏可分别添加F和L后缀获得。
- en: '[PRE4]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This is an alias for C99 isnan: works for single, double and extended precision,
    and return a non 0 value if x is a NaN.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 此为C99 isnan的别名：适用于单精度、双精度和扩展精度，如果x为NaN，则返回非0值。
- en: '[PRE5]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This is an alias for C99 isfinite: works for single, double and extended precision,
    and return a non 0 value if x is neither a NaN nor an infinity.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 此为C99 isfinite的别名：适用于单精度、双精度和扩展精度，如果x既不是NaN也不是无穷大，则返回非0值。
- en: '[PRE6]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This is an alias for C99 isinf: works for single, double and extended precision,
    and return a non 0 value if x is infinite (positive and negative).'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 此为C99 isinf的别名：适用于单精度、双精度和扩展精度，如果x为无穷大（正负均可），则返回非0值。
- en: '[PRE7]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This is an alias for C99 signbit: works for single, double and extended precision,
    and return a non 0 value if x has the signbit set (that is the number is negative).'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 此为C99 signbit的别名：适用于单精度、双精度和扩展精度，如果x的符号位设置（即数为负），则返回非0值。
- en: '[PRE8]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This is an alias for C99 copysign: return x with the same sign as y. Works
    for any value, including inf and nan. Single and extended precisions are available
    with suffix f and l.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 此为C99 copysign的别名：将x的符号设置为y的符号。适用于任何值，包括inf和nan。单精度和扩展精度可添加f和l后缀。
- en: Useful math constants
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 有用的数学常量
- en: The following math constants are available in `npy_math.h`. Single and extended
    precision are also available by adding the `f` and `l` suffixes respectively.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 下列数学常量可在`npy_math.h`中找到。添加`f`和`l`后缀即可获得单精度和扩展精度。
- en: '[PRE9]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Base of natural logarithm (\(e\))
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 自然对数的底数(\(e\))
- en: '[PRE10]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Logarithm to base 2 of the Euler constant (\(\frac{\ln(e)}{\ln(2)}\))
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 自然常数的以2为底的对数(\(\frac{\ln(e)}{\ln(2)}\))
- en: '[PRE11]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Logarithm to base 10 of the Euler constant (\(\frac{\ln(e)}{\ln(10)}\))
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 自然常数的以10为底的对数(\(\frac{\ln(e)}{\ln(10)}\))
- en: '[PRE12]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Natural logarithm of 2 (\(\ln(2)\))
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 2的自然对数 (\(\ln(2)\))
- en: '[PRE13]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Natural logarithm of 10 (\(\ln(10)\))
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 10的自然对数 (\(\ln(10)\))
- en: '[PRE14]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Pi (\(\pi\))
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: π (\(\pi\))
- en: '[PRE15]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Pi divided by 2 (\(\frac{\pi}{2}\))
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: π除以2 (\(\frac{\pi}{2}\))
- en: '[PRE16]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Pi divided by 4 (\(\frac{\pi}{4}\))
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: π除以4 (\(\frac{\pi}{4}\))
- en: '[PRE17]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Reciprocal of pi (\(\frac{1}{\pi}\))
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: π的倒数 (\(\frac{1}{\pi}\))
- en: '[PRE18]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Two times the reciprocal of pi (\(\frac{2}{\pi}\))
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 两倍的π的倒数 (\(\frac{2}{\pi}\))
- en: '[PRE19]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The Euler constant
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 欧拉常数
- en: \(\lim_{n\rightarrow\infty}({\sum_{k=1}^n{\frac{1}{k}}-\ln n})\)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: \(\lim_{n\rightarrow\infty}({\sum_{k=1}^n{\frac{1}{k}}-\ln n})\)
- en: Low-level floating point manipulation
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 低级别的浮点操作
- en: Those can be useful for precise floating point comparison.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这些在精确的浮点比较中很有用。
- en: '[PRE20]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'This is an alias to C99 nextafter: return next representable floating point
    value from x in the direction of y. Single and extended precisions are available
    with suffix f and l.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这是C99 nextafter的别名：返回x方向为y的下一个可表示的浮点值。单精度和扩展精度可使用f和l后缀。
- en: '[PRE21]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: This is a function equivalent to Fortran intrinsic. Return distance between
    x and next representable floating point value from x, e.g. spacing(1) == eps.
    spacing of nan and +/- inf return nan. Single and extended precisions are available
    with suffix f and l.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个等价于Fortran内在函数的函数。返回x和下一个可表示的浮点值之间的距离，例如，spacing(1) == eps。 nan和+/- inf的间距返回nan。单精度和扩展精度可使用f和l后缀。
- en: '[PRE22]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Set the divide by zero floating point exception
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 设置除零浮点异常
- en: '[PRE23]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Set the overflow floating point exception
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 设置浮点溢出异常
- en: '[PRE24]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Set the underflow floating point exception
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 设置下溢浮点异常
- en: '[PRE25]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Set the invalid floating point exception
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 设置无效的浮点异常
- en: '[PRE26]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Get floating point status. Returns a bitmask with following possible flags:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 获取浮点状态。返回一个具有以下可能标志的位掩码：
- en: NPY_FPE_DIVIDEBYZERO
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_DIVIDEBYZERO
- en: NPY_FPE_OVERFLOW
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_OVERFLOW
- en: NPY_FPE_UNDERFLOW
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_UNDERFLOW
- en: NPY_FPE_INVALID
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_INVALID
- en: Note that [`npy_get_floatstatus_barrier`](#c.npy_get_floatstatus_barrier "npy_get_floatstatus_barrier")
    is preferable as it prevents aggressive compiler optimizations reordering the
    call relative to the code setting the status, which could lead to incorrect results.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，[`npy_get_floatstatus_barrier`](#c.npy_get_floatstatus_barrier "npy_get_floatstatus_barrier")
    更可取，因为它可以防止激进的编译器优化重新排列调用相对于设置状态的代码，这可能导致不正确的结果。
- en: '[PRE27]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Get floating point status. A pointer to a local variable is passed in to prevent
    aggressive compiler optimizations from reordering this function call relative
    to the code setting the status, which could lead to incorrect results.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 获取浮点状态。会传递一个指向本地变量的指针，以防止激进的编译器优化重新排列此函数调用相对于设置状态的代码，这可能导致不正确的结果。
- en: 'Returns a bitmask with following possible flags:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个具有以下可能标志的位掩码：
- en: NPY_FPE_DIVIDEBYZERO
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_DIVIDEBYZERO
- en: NPY_FPE_OVERFLOW
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_OVERFLOW
- en: NPY_FPE_UNDERFLOW
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_UNDERFLOW
- en: NPY_FPE_INVALID
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_INVALID
- en: New in version 1.15.0.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本为1.15.0。
- en: '[PRE28]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Clears the floating point status. Returns the previous status mask.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 清除浮点状态。返回先前的状态掩码。
- en: Note that [`npy_clear_floatstatus_barrier`](#c.npy_clear_floatstatus_barrier
    "npy_clear_floatstatus_barrier") is preferable as it prevents aggressive compiler
    optimizations reordering the call relative to the code setting the status, which
    could lead to incorrect results.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，[`npy_clear_floatstatus_barrier`](#c.npy_clear_floatstatus_barrier "npy_clear_floatstatus_barrier")
    更可取，因为它可以防止激进的编译器优化重新排列调用相对于设置状态的代码，这可能导致不正确的结果。
- en: '[PRE29]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Clears the floating point status. A pointer to a local variable is passed in
    to prevent aggressive compiler optimizations from reordering this function call.
    Returns the previous status mask.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 清除浮点状态。会传递一个指向本地变量的指针，以防止激进的编译器优化重新排列此函数调用相对于设置状态的代码。返回先前的状态掩码。
- en: New in version 1.15.0.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本为1.15.0。
- en: Complex functions
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 复数函数
- en: 'C99-like complex functions have been added. Those can be used if you wish to
    implement portable C extensions. Since we still support platforms without C99
    complex type (most importantly Windows, where MSVC doesn’t support C99 complex
    types as of Nov 2022), you need to restrict to C90-compatible syntax, e.g.:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 添加了类似于C99的复数函数。 如果您希望实现可移植的C扩展，则可以使用这些。 由于我们仍然支持不支持C99复数类型的平台（最重要的是Windows，到2022年11月，MSVC不支持C99复数类型），因此您需要限制为C90兼容的语法，例如：
- en: '[PRE30]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '### Linking against the core math library in an extension'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '### 在扩展中链接核心数学库'
- en: 'To use the core math library that NumPy ships as a static library in your own
    Python extension, you need to add the npymath compile and link options to your
    extension. The exact steps to take will depend on the build system you are using.
    The generic steps to take are:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 要在您自己的Python扩展中使用NumPy作为静态库提供的核心数学库，您需要向您的扩展添加npymath编译和链接选项。采取的确切步骤将取决于您使用的构建系统。采取的通用步骤包括：
- en: Add the numpy include directory (= the value of `np.get_include()`) to your
    include directories,
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将numpy包含目录（即`np.get_include()`的值）添加到您的包含目录中，
- en: The `npymath` static library resides in the `lib` directory right next to numpy’s
    include directory (i.e., `pathlib.Path(np.get_include()) / '..' / 'lib'`). Add
    that to your library search directories,
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`npymath`静态库位于紧邻numpy包含目录的`lib`目录中（即`pathlib.Path(np.get_include()) / ''..''
    / ''lib''`）。将其添加到您的库搜索目录中，'
- en: Link with `libnpymath` and `libm`.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 链接到`libnpymath`和`libm`。
- en: Note
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 注
- en: Keep in mind that when you are cross compiling, you must use the `numpy` for
    the platform you are building for, not the native one for the build machine. Otherwise
    you pick up a static library built for the wrong architecture.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，当您进行交叉编译时，必须使用适用于您构建的平台的`numpy`，而不是构建机器的本机平台。否则，您会选择错误架构的静态库。
- en: 'When you build with `numpy.distutils` (deprecated), then use this in your `setup.py`:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 当您使用`numpy.distutils`（已弃用）进行构建时，请在您的`setup.py`中使用：
- en: '[PRE31]'
  id: totrans-98
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE31]'
- en: In other words, the usage of `info` is exactly the same as when using `blas_info`
    and co.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，使用`info`的方式与使用`blas_info`等完全相同。
- en: 'When you are building with [Meson](https://mesonbuild.com), use:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 当您使用[Meson](https://mesonbuild.com)进行构建时，请使用：
- en: '[PRE32]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Half-precision functions
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 半精度函数
- en: The header file `<numpy/halffloat.h>` provides functions to work with IEEE 754-2008
    16-bit floating point values. While this format is not typically used for numerical
    computations, it is useful for storing values which require floating point but
    do not need much precision. It can also be used as an educational tool to understand
    the nature of floating point round-off error.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 头文件`<numpy/halffloat.h>`提供了用于处理IEEE 754-2008 16位浮点值的函数。虽然这种格式通常不用于数值计算，但对于存储需要浮点但不需要太多精度的值是很有用的。它也可以用作理解浮点舍入误差本质的教育工具。
- en: Like for other types, NumPy includes a typedef npy_half for the 16 bit float.
    Unlike for most of the other types, you cannot use this as a normal type in C,
    since it is a typedef for npy_uint16\. For example, 1.0 looks like 0x3c00 to C,
    and if you do an equality comparison between the different signed zeros, you will
    get -0.0 != 0.0 (0x8000 != 0x0000), which is incorrect.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他类型一样，NumPy包含一个用于16位浮点数的npy_half的typedef。与大多数其他类型不同，您不能在C中将其用作普通类型，因为它是npy_uint16的typedef。例如，1.0在C中看起来像0x3c00，如果您在不同的带符号零之间进行相等比较，您会得到-0.0
    != 0.0（0x8000 != 0x0000），这是不正确的。
- en: For these reasons, NumPy provides an API to work with npy_half values accessible
    by including `<numpy/halffloat.h>` and linking to `npymath`. For functions that
    are not provided directly, such as the arithmetic operations, the preferred method
    is to convert to float or double and back again, as in the following example.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 出于这些原因，NumPy提供了一个API来处理通过包括`<numpy/halffloat.h>`和链接到`npymath`可访问的npy_half值。对于没有直接提供的函数，如算术运算，首选方法是转换为float或double，然后再次转换为half，就像以下示例一样。
- en: '[PRE33]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'External Links:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 外部链接：
- en: '[754-2008 IEEE Standard for Floating-Point Arithmetic](https://ieeexplore.ieee.org/document/4610935/)'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[754-2008 IEEE浮点算术标准](https://ieeexplore.ieee.org/document/4610935/)'
- en: '[Half-precision Float Wikipedia Article](https://en.wikipedia.org/wiki/Half-precision_floating-point_format).'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[半精度浮点数维基百科文章](https://en.wikipedia.org/wiki/Half-precision_floating-point_format)。'
- en: '[OpenGL Half Float Pixel Support](https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_half_float_pixel.txt)'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[OpenGL半精度像素支持](https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_half_float_pixel.txt)'
- en: '[The OpenEXR image format](https://www.openexr.com/about.html).'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[OpenEXR图像格式](https://www.openexr.com/about.html)。'
- en: '[PRE34]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: This macro is defined to positive zero.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这个宏被定义为正零。
- en: '[PRE35]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: This macro is defined to positive zero.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 这个宏被定义为正零。
- en: '[PRE36]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: This macro is defined to negative zero.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这个宏被定义为负零。
- en: '[PRE37]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: This macro is defined to 1.0.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 这个宏被定义为1.0。
- en: '[PRE38]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: This macro is defined to -1.0.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 这个宏被定义为-1.0。
- en: '[PRE39]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: This macro is defined to +inf.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 这个宏被定义为正无穷。
- en: '[PRE40]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: This macro is defined to -inf.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 这个宏被定义为负无穷。
- en: '[PRE41]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: This macro is defined to a NaN value, guaranteed to have its sign bit unset.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 这个宏被定义为NaN值，保证其符号位未设置。
- en: '[PRE42]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Converts a half-precision float to a single-precision float.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 将半精度浮点数转换为单精度浮点数。
- en: '[PRE43]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Converts a half-precision float to a double-precision float.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 将半精度浮点数转换为双精度浮点数。
- en: '[PRE44]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Converts a single-precision float to a half-precision float. The value is rounded
    to the nearest representable half, with ties going to the nearest even. If the
    value is too small or too big, the system’s floating point underflow or overflow
    bit will be set.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 将单精度浮点数转换为半精度浮点数。值四舍五入为最接近的可表示的一半，平局取最近的偶数。如果值太小或者太大，系统的浮点下溢或上溢位将被设置。
- en: '[PRE45]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Converts a double-precision float to a half-precision float. The value is rounded
    to the nearest representable half, with ties going to the nearest even. If the
    value is too small or too big, the system’s floating point underflow or overflow
    bit will be set.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 将双精度浮点数转换为半精度浮点数。值四舍五入到最接近的可表示的一半，平局取最近的偶数。如果值太小或太大，系统的浮点下溢或上溢位将被设置。
- en: '[PRE46]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Compares two half-precision floats (h1 == h2).
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个半精度浮点数（h1 == h2）。
- en: '[PRE47]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Compares two half-precision floats (h1 != h2).
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个半精度浮点数（h1 != h2）。
- en: '[PRE48]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Compares two half-precision floats (h1 <= h2).
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个半精度浮点数（h1 <= h2）。
- en: '[PRE49]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Compares two half-precision floats (h1 < h2).
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个半精度浮点数（h1 < h2）。
- en: '[PRE50]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Compares two half-precision floats (h1 >= h2).
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个半精度浮点数（h1 >= h2）。
- en: '[PRE51]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Compares two half-precision floats (h1 > h2).
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个半精度浮点数（h1 > h2）。
- en: '[PRE52]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Compares two half-precision floats that are known to not be NaN (h1 == h2).
    If a value is NaN, the result is undefined.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个已知不是NaN的半精度浮点数（h1 == h2）。如果值是NaN，则结果未定义。
- en: '[PRE53]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Compares two half-precision floats that are known to not be NaN (h1 < h2). If
    a value is NaN, the result is undefined.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个已知不是NaN的半精度浮点数（h1 < h2）。如果值是NaN，则结果未定义。
- en: '[PRE54]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Compares two half-precision floats that are known to not be NaN (h1 <= h2).
    If a value is NaN, the result is undefined.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个已知不是NaN的半精度浮点数（h1 <= h2）。如果值是NaN，则结果未定义。
- en: '[PRE55]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Tests whether the half-precision float has a value equal to zero. This may be
    slightly faster than calling npy_half_eq(h, NPY_ZERO).
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 测试半精度浮点数是否值为零。这可能比调用npy_half_eq(h, NPY_ZERO)要稍快。
- en: '[PRE56]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Tests whether the half-precision float is a NaN.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 测试半精度浮点数是否是NaN。
- en: '[PRE57]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Tests whether the half-precision float is plus or minus Inf.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 测试半精度浮点数是否是正或负无穷大。
- en: '[PRE58]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Tests whether the half-precision float is finite (not NaN or Inf).
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 测试半精度浮点数是否是有限的（不是NaN或Inf）。
- en: '[PRE59]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Returns 1 is h is negative, 0 otherwise.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 返回1，如果h是负数，否则返回0。
- en: '[PRE60]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Returns the value of x with the sign bit copied from y. Works for any value,
    including Inf and NaN.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 返回具有从y复制的符号位的x的值。适用于任何值，包括Inf和NaN。
- en: '[PRE61]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: This is the same for half-precision float as npy_spacing and npy_spacingf described
    in the low-level floating point section.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 这与低级浮点部分中描述的npy_spacing和npy_spacingf对于半精度浮点数是相同的。
- en: '[PRE62]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: This is the same for half-precision float as npy_nextafter and npy_nextafterf
    described in the low-level floating point section.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 这与低级浮点部分中描述的npy_nextafter和npy_nextafterf对于半精度浮点数是相同的。
- en: '[PRE63]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Low-level function which converts a 32-bit single-precision float, stored as
    a uint32, into a 16-bit half-precision float.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 低级函数，将32位单精度浮点数，存储为uint32，转换为16位半精度浮点数。
- en: '[PRE64]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: Low-level function which converts a 64-bit double-precision float, stored as
    a uint64, into a 16-bit half-precision float.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 低级函数，将64位双精度浮点数，存储为uint64，转换为16位半精度浮点数。
- en: '[PRE65]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: Low-level function which converts a 16-bit half-precision float into a 32-bit
    single-precision float, stored as a uint32.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 低级函数，将一个16位半精度浮点数转换为32位单精度浮点数，存储为uint32。
- en: '[PRE66]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Low-level function which converts a 16-bit half-precision float into a 64-bit
    double-precision float, stored as a uint64.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 将一个16位半精度浮点数转换为64位双精度浮点数，存储为uint64的低级函数。
- en: NumPy core math library
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: NumPy核心数学库
- en: The numpy core math library (‘npymath’) is a first step in this direction. This
    library contains most math-related C99 functionality, which can be used on platforms
    where C99 is not well supported. The core math functions have the same API as
    the C99 ones, except for the `npy_*` prefix.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: Numpy核心数学库（‘npymath’）是朝这个方向迈出的第一步。该库包含大多数与数学相关的C99功能，可用于C99支持不佳的平台。核心数学函数的API与C99函数相同，除了`npy_*`前缀。
- en: The available functions are defined in `<numpy/npy_math.h>` - please refer to
    this header when in doubt.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 可用函数在`<numpy/npy_math.h>`中定义-当有疑问时，请参考此头文件。
- en: Note
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: An effort is underway to make `npymath` smaller (since C99 compatibility of
    compilers has improved over time) and more easily vendorable or usable as a header-only
    dependency. That will avoid problems with shipping a static library built with
    a compiler which may not match the compiler used by a downstream package or end
    user. See [gh-20880](https://github.com/numpy/numpy/issues/20880) for details.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 现在正努力使 `npymath` 更小（因为随着时间的推移，编译器的 C99 兼容性已经得到改善），并且更容易供应商使用或作为头文件依赖。这将避免使用与下游包或最终用户所用编译器不匹配的静态库的发货问题。有关详细信息，请参见
    [gh-20880](https://github.com/numpy/numpy/issues/20880)。
- en: Floating point classification
  id: totrans-183
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 浮点数分类
- en: '[PRE67]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: This macro is defined to a NaN (Not a Number), and is guaranteed to have the
    signbit unset (‘positive’ NaN). The corresponding single and extension precision
    macro are available with the suffix F and L.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 此宏被定义为 NaN（不是一个数），并且保证符号位未设置（'正' NaN）。相应的单精度和扩展精度宏可用后缀 F 和 L。
- en: '[PRE68]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: This macro is defined to a positive inf. The corresponding single and extension
    precision macro are available with the suffix F and L.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 此宏被定义为正无穷。相应的单精度和扩展精度宏可用后缀 F 和 L。
- en: '[PRE69]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: This macro is defined to positive zero. The corresponding single and extension
    precision macro are available with the suffix F and L.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 此宏被定义为正零。相应的单精度和扩展精度宏可用后缀 F 和 L。
- en: '[PRE70]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: This macro is defined to negative zero (that is with the sign bit set). The
    corresponding single and extension precision macro are available with the suffix
    F and L.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 此宏被定义为负零（即符号位设置为 1）。相应的单精度和扩展精度宏可用后缀 F 和 L。
- en: '[PRE71]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'This is an alias for C99 isnan: works for single, double and extended precision,
    and return a non 0 value if x is a NaN.'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 C99 的 isnan 的别名：适用于单精度、双精度和扩展精度，并在 x 是 NaN 时返回非零值。
- en: '[PRE72]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'This is an alias for C99 isfinite: works for single, double and extended precision,
    and return a non 0 value if x is neither a NaN nor an infinity.'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 C99 的 isfinite 的别名：适用于单精度、双精度和扩展精度，并且在 x 既不是 NaN 也不是无穷时返回非零值。
- en: '[PRE73]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'This is an alias for C99 isinf: works for single, double and extended precision,
    and return a non 0 value if x is infinite (positive and negative).'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 C99 的 isinf 的别名：适用于单精度、双精度和扩展精度，并且在 x 是无穷（正无穷和负无穷）时返回非零值。
- en: '[PRE74]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'This is an alias for C99 signbit: works for single, double and extended precision,
    and return a non 0 value if x has the signbit set (that is the number is negative).'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 C99 的 signbit 的别名：适用于单精度、双精度和扩展精度，并且在 x 的符号位设置时返回非零值（即数是负数）。
- en: '[PRE75]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'This is an alias for C99 copysign: return x with the same sign as y. Works
    for any value, including inf and nan. Single and extended precisions are available
    with suffix f and l.'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 C99 的 copysign 的别名：返回与 y 相同符号的 x。适用于任何值，包括 inf 和 nan。单精度和扩展精度可用后缀 f 和 l。
- en: Useful math constants
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 有用的数学常数
- en: The following math constants are available in `npy_math.h`. Single and extended
    precision are also available by adding the `f` and `l` suffixes respectively.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 以下数学常数可在 `npy_math.h` 中使用。单精度和扩展精度也可通过添加 `f` 和 `l` 后缀分别使用。
- en: '[PRE76]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: Base of natural logarithm (\(e\))
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 自然对数的底数 (\(e\))
- en: '[PRE77]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: Logarithm to base 2 of the Euler constant (\(\frac{\ln(e)}{\ln(2)}\))
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 欧拉常数的以 2 为底的对数 (\(\frac{\ln(e)}{\ln(2)}\))
- en: '[PRE78]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: Logarithm to base 10 of the Euler constant (\(\frac{\ln(e)}{\ln(10)}\))
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 欧拉常数以 10 为底的对数 (\(\frac{\ln(e)}{\ln(10)}\))
- en: '[PRE79]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: Natural logarithm of 2 (\(\ln(2)\))
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 自然对数的 2 (\(\ln(2)\))
- en: '[PRE80]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Natural logarithm of 10 (\(\ln(10)\))
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 自然对数的 10 (\(\ln(10)\))
- en: '[PRE81]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: Pi (\(\pi\))
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 圆周率 (\(\pi\))
- en: '[PRE82]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: Pi divided by 2 (\(\frac{\pi}{2}\))
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: Pi 除以 2 (\(\frac{\pi}{2}\))
- en: '[PRE83]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: Pi divided by 4 (\(\frac{\pi}{4}\))
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: Pi 除以 4 (\(\frac{\pi}{4}\))
- en: '[PRE84]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: Reciprocal of pi (\(\frac{1}{\pi}\))
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: Pi 的倒数 (\(\frac{1}{\pi}\))
- en: '[PRE85]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: Two times the reciprocal of pi (\(\frac{2}{\pi}\))
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 2 乘以 pi 的倒数 (\(\frac{2}{\pi}\))
- en: '[PRE86]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: The Euler constant
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 欧拉常数
- en: \(\lim_{n\rightarrow\infty}({\sum_{k=1}^n{\frac{1}{k}}-\ln n})\)
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: \(\lim_{n\rightarrow\infty}({\sum_{k=1}^n{\frac{1}{k}}-\ln n})\)
- en: Low-level floating point manipulation
  id: totrans-227
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 低级浮点数操作
- en: Those can be useful for precise floating point comparison.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 这些对精确的浮点数比较很有用。
- en: '[PRE87]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: 'This is an alias to C99 nextafter: return next representable floating point
    value from x in the direction of y. Single and extended precisions are available
    with suffix f and l.'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 这是对 C99 的 nextafter 的别名：返回从 x 向 y 方向的下一个可表示浮点值。后缀 f 和 l 可用于单精度和扩展精度。
- en: '[PRE88]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: This is a function equivalent to Fortran intrinsic. Return distance between
    x and next representable floating point value from x, e.g. spacing(1) == eps.
    spacing of nan and +/- inf return nan. Single and extended precisions are available
    with suffix f and l.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 这是等效于Fortran内置函数的函数。返回与x和下一个可表示的浮点值之间的距离，例如，spacing(1) == eps。 nan和+/- inf的间距返回nan。
    带有后缀f和l的单精度和扩展精度可用。
- en: '[PRE89]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: Set the divide by zero floating point exception
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 设置除零浮点异常
- en: '[PRE90]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: Set the overflow floating point exception
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 设置溢出的浮点异常
- en: '[PRE91]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: Set the underflow floating point exception
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 设置下溢的浮点异常
- en: '[PRE92]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: Set the invalid floating point exception
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 设置无效的浮点异常
- en: '[PRE93]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: 'Get floating point status. Returns a bitmask with following possible flags:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 获取浮点状态。返回具有以下可能标志的位掩码：
- en: NPY_FPE_DIVIDEBYZERO
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_DIVIDEBYZERO
- en: NPY_FPE_OVERFLOW
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_OVERFLOW
- en: NPY_FPE_UNDERFLOW
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_UNDERFLOW
- en: NPY_FPE_INVALID
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_INVALID
- en: Note that [`npy_get_floatstatus_barrier`](#c.npy_get_floatstatus_barrier "npy_get_floatstatus_barrier")
    is preferable as it prevents aggressive compiler optimizations reordering the
    call relative to the code setting the status, which could lead to incorrect results.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，[`npy_get_floatstatus_barrier`](#c.npy_get_floatstatus_barrier "npy_get_floatstatus_barrier")更可取，因为它可以防止激进的编译器优化重新排列调用相对于设置状态的代码，这可能导致不正确的结果。
- en: '[PRE94]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: Get floating point status. A pointer to a local variable is passed in to prevent
    aggressive compiler optimizations from reordering this function call relative
    to the code setting the status, which could lead to incorrect results.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 获取浮点状态。传递到本地变量的指针可防止激进的编译器优化重新排列此函数调用相对于设置状态的代码，这可能导致不正确的结果。
- en: 'Returns a bitmask with following possible flags:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 返回具有以下可能标志的位掩码：
- en: NPY_FPE_DIVIDEBYZERO
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_DIVIDEBYZERO
- en: NPY_FPE_OVERFLOW
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_OVERFLOW
- en: NPY_FPE_UNDERFLOW
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_UNDERFLOW
- en: NPY_FPE_INVALID
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_INVALID
- en: New in version 1.15.0.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 版本1.15.0中新增。
- en: '[PRE95]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: Clears the floating point status. Returns the previous status mask.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 清除浮点状态。返回以前的状态掩码。
- en: Note that [`npy_clear_floatstatus_barrier`](#c.npy_clear_floatstatus_barrier
    "npy_clear_floatstatus_barrier") is preferable as it prevents aggressive compiler
    optimizations reordering the call relative to the code setting the status, which
    could lead to incorrect results.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，[`npy_clear_floatstatus_barrier`](#c.npy_clear_floatstatus_barrier "npy_clear_floatstatus_barrier")更可取，因为它可以防止激进的编译器优化重新排列调用相对于设置状态的代码，这可能导致不正确的结果。
- en: '[PRE96]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: Clears the floating point status. A pointer to a local variable is passed in
    to prevent aggressive compiler optimizations from reordering this function call.
    Returns the previous status mask.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 清除浮点状态。传递给本地变量的指针可以防止激进的编译器优化重新排列此函数调用。返回以前的状态掩码。
- en: New in version 1.15.0.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 版本1.15.0中新增。
- en: Complex functions
  id: totrans-262
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 复杂函数
- en: 'C99-like complex functions have been added. Those can be used if you wish to
    implement portable C extensions. Since we still support platforms without C99
    complex type (most importantly Windows, where MSVC doesn’t support C99 complex
    types as of Nov 2022), you need to restrict to C90-compatible syntax, e.g.:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 添加了类似C99的复杂函数。如果您希望实现可移植的C扩展程序，则可以使用这些。由于我们仍然支持没有C99复杂类型的平台（最重要的是Windows，在那里，截至2022年11月，MSVC不支持C99复杂类型），您需要限制为C90兼容语法，例如：
- en: '[PRE97]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: '### Linking against the core math library in an extension'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '### 在扩展中链接核心数学库'
- en: 'To use the core math library that NumPy ships as a static library in your own
    Python extension, you need to add the npymath compile and link options to your
    extension. The exact steps to take will depend on the build system you are using.
    The generic steps to take are:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 要在自己的Python扩展中使用NumPy提供的核心数学库作为静态库，您需要将npymath编译和链接选项添加到您的扩展程序中。要采取的确切步骤将取决于您正在使用的构建系统。要采取的通用步骤包括：
- en: Add the numpy include directory (= the value of `np.get_include()`) to your
    include directories,
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将numpy包括目录（= `np.get_include()`的值）添加到您的包括目录中，
- en: The `npymath` static library resides in the `lib` directory right next to numpy’s
    include directory (i.e., `pathlib.Path(np.get_include()) / '..' / 'lib'`). Add
    that to your library search directories,
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`npymath`静态库位于紧挨着numpy包括目录的`lib`目录中（即，`pathlib.Path(np.get_include()) / ''..''
    / ''lib''`）。将其添加到您的库搜索目录中，'
- en: Link with `libnpymath` and `libm`.
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`libnpymath`和`libm`进行链接。
- en: Note
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Keep in mind that when you are cross compiling, you must use the `numpy` for
    the platform you are building for, not the native one for the build machine. Otherwise
    you pick up a static library built for the wrong architecture.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，在交叉编译时，必须使用适用于您要构建的平台的`numpy`，而不是适用于构建机器的本机平台的`numpy`。否则，您将获得为错误架构构建的静态库。
- en: 'When you build with `numpy.distutils` (deprecated), then use this in your `setup.py`:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`numpy.distutils`（不推荐）进行构建时，在您的`setup.py`中使用：
- en: '[PRE98]'
  id: totrans-273
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE98]'
- en: In other words, the usage of `info` is exactly the same as when using `blas_info`
    and co.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，使用`info`的方式与使用`blas_info`等完全相同。
- en: 'When you are building with [Meson](https://mesonbuild.com), use:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建时使用[Meson](https://mesonbuild.com)，使用：
- en: '[PRE99]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: Half-precision functions
  id: totrans-277
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 半精度函数
- en: The header file `<numpy/halffloat.h>` provides functions to work with IEEE 754-2008
    16-bit floating point values. While this format is not typically used for numerical
    computations, it is useful for storing values which require floating point but
    do not need much precision. It can also be used as an educational tool to understand
    the nature of floating point round-off error.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 头文件`<numpy/halffloat.h>`提供了处理IEEE 754-2008 16位浮点值的函数。虽然此格式通常不用于数值计算，但对于存储不需要太多精度的值很有用。
    它还可以用作理解浮点数舍入误差性质的教育工具。
- en: Like for other types, NumPy includes a typedef npy_half for the 16 bit float.
    Unlike for most of the other types, you cannot use this as a normal type in C,
    since it is a typedef for npy_uint16\. For example, 1.0 looks like 0x3c00 to C,
    and if you do an equality comparison between the different signed zeros, you will
    get -0.0 != 0.0 (0x8000 != 0x0000), which is incorrect.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他类型一样，NumPy包括一个用于16位浮点数的typedef npy_half。与大多数其他类型不同，您不能在C中将其用作正常类型，因为它是npy_uint16的typedef。
    例如，1.0在C中看起来像0x3c00，如果您在不同的有符号零之间进行相等比较，您将得到-0.0 != 0.0（0x8000 != 0x0000），这是不正确的。
- en: For these reasons, NumPy provides an API to work with npy_half values accessible
    by including `<numpy/halffloat.h>` and linking to `npymath`. For functions that
    are not provided directly, such as the arithmetic operations, the preferred method
    is to convert to float or double and back again, as in the following example.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 出于这些原因，NumPy提供了一个API来处理通过包含`<numpy/halffloat.h>`并链接到`npymath`访问的npy_half值。 对于直接提供的函数，如算术运算，优选方法是转换为float或double，然后再次转换，如下例所示。
- en: '[PRE100]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: 'External Links:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: '外部链接:'
- en: '[754-2008 IEEE Standard for Floating-Point Arithmetic](https://ieeexplore.ieee.org/document/4610935/)'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[754-2008 IEEE浮点算术标准](https://ieeexplore.ieee.org/document/4610935/)'
- en: '[Half-precision Float Wikipedia Article](https://en.wikipedia.org/wiki/Half-precision_floating-point_format).'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[半精度浮点数维基百科文章](https://en.wikipedia.org/wiki/Half-precision_floating-point_format)。'
- en: '[OpenGL Half Float Pixel Support](https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_half_float_pixel.txt)'
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[OpenGL半精度浮点像素支持](https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_half_float_pixel.txt)'
- en: '[The OpenEXR image format](https://www.openexr.com/about.html).'
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[OpenEXR图像格式](https://www.openexr.com/about.html)。'
- en: '[PRE101]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: This macro is defined to positive zero.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 宏定义为正零。
- en: '[PRE102]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: This macro is defined to positive zero.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 宏定义为正零。
- en: '[PRE103]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: This macro is defined to negative zero.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 宏定义为负零。
- en: '[PRE104]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: This macro is defined to 1.0.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 宏定义为1.0。
- en: '[PRE105]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: This macro is defined to -1.0.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 宏定义为-1.0。
- en: '[PRE106]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: This macro is defined to +inf.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 宏定义为+inf。
- en: '[PRE107]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: This macro is defined to -inf.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 宏定义为-inf。
- en: '[PRE108]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: This macro is defined to a NaN value, guaranteed to have its sign bit unset.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 宏定义为NaN值，保证其符号位未设置。
- en: '[PRE109]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: Converts a half-precision float to a single-precision float.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 将半精度浮点数转换为单精度浮点数。
- en: '[PRE110]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: Converts a half-precision float to a double-precision float.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 将半精度浮点数转换为双精度浮点数。
- en: '[PRE111]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: Converts a single-precision float to a half-precision float. The value is rounded
    to the nearest representable half, with ties going to the nearest even. If the
    value is too small or too big, the system’s floating point underflow or overflow
    bit will be set.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 将单精度浮点数转换为半精度浮点数。该值四舍五入为最接近的可表示的半精度数，如果太小或太大，则系统的浮点下溢或溢出位将被设置。
- en: '[PRE112]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: Converts a double-precision float to a half-precision float. The value is rounded
    to the nearest representable half, with ties going to the nearest even. If the
    value is too small or too big, the system’s floating point underflow or overflow
    bit will be set.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 将双精度浮点数转换为半精度浮点数。该值四舍五入为最接近的可表示的半精度数，如果太小或太大，则系统的浮点下溢或溢出位将被设置。
- en: '[PRE113]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: Compares two half-precision floats (h1 == h2).
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个半精度浮点数（h1 == h2）。
- en: '[PRE114]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: Compares two half-precision floats (h1 != h2).
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个半精度浮点数（h1 != h2）。
- en: '[PRE115]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: Compares two half-precision floats (h1 <= h2).
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个半精度浮点数（h1 <= h2）。
- en: '[PRE116]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: Compares two half-precision floats (h1 < h2).
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个半精度浮点数（h1 < h2）。
- en: '[PRE117]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: Compares two half-precision floats (h1 >= h2).
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个半精度浮点数（h1 >= h2）。
- en: '[PRE118]'
  id: totrans-321
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: Compares two half-precision floats (h1 > h2).
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个半精度浮点数（h1 > h2）。
- en: '[PRE119]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: Compares two half-precision floats that are known to not be NaN (h1 == h2).
    If a value is NaN, the result is undefined.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 比较已知不是 NaN 的两个半精度浮点数（h1 == h2）。如果值为 NaN，则结果是未定义的。
- en: '[PRE120]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: Compares two half-precision floats that are known to not be NaN (h1 < h2). If
    a value is NaN, the result is undefined.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 比较已知不是 NaN 的两个半精度浮点数（h1 < h2）。如果值为 NaN，则结果是未定义的。
- en: '[PRE121]'
  id: totrans-327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: Compares two half-precision floats that are known to not be NaN (h1 <= h2).
    If a value is NaN, the result is undefined.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 比较已知不是 NaN 的两个半精度浮点数（h1 <= h2）。如果值为 NaN，则结果是未定义的。
- en: '[PRE122]'
  id: totrans-329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: Tests whether the half-precision float has a value equal to zero. This may be
    slightly faster than calling npy_half_eq(h, NPY_ZERO).
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 测试半精度浮点数是否等于零。这可能比调用 npy_half_eq(h, NPY_ZERO) 更快。
- en: '[PRE123]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: Tests whether the half-precision float is a NaN.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 测试半精度浮点数是否为 NaN。
- en: '[PRE124]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: Tests whether the half-precision float is plus or minus Inf.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 测试半精度浮点数是否为正负无穷。
- en: '[PRE125]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: Tests whether the half-precision float is finite (not NaN or Inf).
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 测试半精度浮点数是否有限（非 NaN 或 Inf）。
- en: '[PRE126]'
  id: totrans-337
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: Returns 1 is h is negative, 0 otherwise.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 h 为负，则返回 1，否则返回 0。
- en: '[PRE127]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: Returns the value of x with the sign bit copied from y. Works for any value,
    including Inf and NaN.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 返回从 y 复制的符号位的 x 值。适用于任何值，包括 Inf 和 NaN。
- en: '[PRE128]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: This is the same for half-precision float as npy_spacing and npy_spacingf described
    in the low-level floating point section.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 这与低级浮点部分中描述的 npy_spacing 和 npy_spacingf 类似。
- en: '[PRE129]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: This is the same for half-precision float as npy_nextafter and npy_nextafterf
    described in the low-level floating point section.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 这与低级浮点部分中描述的 npy_nextafter 和 npy_nextafterf 类似，用于半精度浮点数。
- en: '[PRE130]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: Low-level function which converts a 32-bit single-precision float, stored as
    a uint32, into a 16-bit half-precision float.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 将以 uint32 存储的 32 位单精度浮点数转换为 16 位半精度浮点数的低级功能。
- en: '[PRE131]'
  id: totrans-347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: Low-level function which converts a 64-bit double-precision float, stored as
    a uint64, into a 16-bit half-precision float.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 将以 uint64 存储的 64 位双精度浮点数转换为 16 位半精度浮点数的低级功能。
- en: '[PRE132]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: Low-level function which converts a 16-bit half-precision float into a 32-bit
    single-precision float, stored as a uint32.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 将 16 位半精度浮点数转换为以 uint32 存储的 32 位单精度浮点数的低级功能。
- en: '[PRE133]'
  id: totrans-351
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: Low-level function which converts a 16-bit half-precision float into a 64-bit
    double-precision float, stored as a uint64.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 将 16 位半精度浮点数转换为以 uint64 存储的 64 位双精度浮点数的低级功能。
- en: Floating point classification
  id: totrans-353
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 浮点分类
- en: '[PRE134]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: This macro is defined to a NaN (Not a Number), and is guaranteed to have the
    signbit unset (‘positive’ NaN). The corresponding single and extension precision
    macro are available with the suffix F and L.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 此宏被定义为 NaN（非数字），并保证符号位未设置（'正' NaN）。相应的单精度和扩展精度宏可在后缀 F 和 L 中使用。
- en: '[PRE135]'
  id: totrans-356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: This macro is defined to a positive inf. The corresponding single and extension
    precision macro are available with the suffix F and L.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 此宏被定义为正无穷。相应的单精度和扩展精度宏可在后缀 F 和 L 中使用。
- en: '[PRE136]'
  id: totrans-358
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: This macro is defined to positive zero. The corresponding single and extension
    precision macro are available with the suffix F and L.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 此宏被定义为正零。相应的单精度和扩展精度宏可在后缀 F 和 L 中使用。
- en: '[PRE137]'
  id: totrans-360
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: This macro is defined to negative zero (that is with the sign bit set). The
    corresponding single and extension precision macro are available with the suffix
    F and L.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 此宏被定义为负零（即符号位设置）。相应的单精度和扩展精度宏可在后缀 F 和 L 中使用。
- en: '[PRE138]'
  id: totrans-362
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: 'This is an alias for C99 isnan: works for single, double and extended precision,
    and return a non 0 value if x is a NaN.'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 C99 isnan 的别名：适用于单精度、双精度和扩展精度，并在 x 为 NaN 时返回非零值。
- en: '[PRE139]'
  id: totrans-364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: 'This is an alias for C99 isfinite: works for single, double and extended precision,
    and return a non 0 value if x is neither a NaN nor an infinity.'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 C99 isfinite 的别名：适用于单精度、双精度和扩展精度，并在 x 既非NaN也非无穷时返回非零值。
- en: '[PRE140]'
  id: totrans-366
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: 'This is an alias for C99 isinf: works for single, double and extended precision,
    and return a non 0 value if x is infinite (positive and negative).'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 C99 isinf 的别名：适用于单精度、双精度和扩展精度，并在 x 是无限值（正负）时返回非零值。
- en: '[PRE141]'
  id: totrans-368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: 'This is an alias for C99 signbit: works for single, double and extended precision,
    and return a non 0 value if x has the signbit set (that is the number is negative).'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 C99 signbit 的别名：适用于单精度、双精度和扩展精度，并在 x 有符号位设置时（即数字为负）返回非零值。
- en: '[PRE142]'
  id: totrans-370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: 'This is an alias for C99 copysign: return x with the same sign as y. Works
    for any value, including inf and nan. Single and extended precisions are available
    with suffix f and l.'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 C99 copysign 的别名：返回与 y 相同符号的 x。适用于任何值，包括 inf 和 nan。单精度和扩展精度可在后缀 f 和 l 中使用。
- en: Useful math constants
  id: totrans-372
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 有用的数学常量
- en: The following math constants are available in `npy_math.h`. Single and extended
    precision are also available by adding the `f` and `l` suffixes respectively.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 以下数学常量在`npy_math.h`中可用。也可以通过添加`f`和`l`后缀来使用单精度和扩展精度。
- en: '[PRE143]'
  id: totrans-374
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: Base of natural logarithm (\(e\))
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 自然对数的底（\(e\)\)
- en: '[PRE144]'
  id: totrans-376
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: Logarithm to base 2 of the Euler constant (\(\frac{\ln(e)}{\ln(2)}\))
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 欧拉常数的以2为底的对数（\(\frac{\ln(e)}{\ln(2)}\))
- en: '[PRE145]'
  id: totrans-378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: Logarithm to base 10 of the Euler constant (\(\frac{\ln(e)}{\ln(10)}\))
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 欧拉常数的以10为底的对数（\(\frac{\ln(e)}{\ln(10)}\))
- en: '[PRE146]'
  id: totrans-380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: Natural logarithm of 2 (\(\ln(2)\))
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 自然对数2（\(\ln(2)\)）
- en: '[PRE147]'
  id: totrans-382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: Natural logarithm of 10 (\(\ln(10)\))
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 自然对数10（\(\ln(10)\))
- en: '[PRE148]'
  id: totrans-384
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: Pi (\(\pi\))
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: π（\(\pi\)\)
- en: '[PRE149]'
  id: totrans-386
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: Pi divided by 2 (\(\frac{\pi}{2}\))
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: π除以2（\(\frac{\pi}{2}\)）
- en: '[PRE150]'
  id: totrans-388
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: Pi divided by 4 (\(\frac{\pi}{4}\))
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 常数π除以4（\(\frac{\pi}{4}\)）
- en: '[PRE151]'
  id: totrans-390
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: Reciprocal of pi (\(\frac{1}{\pi}\))
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: π的倒数（\(\frac{1}{\pi}\)）
- en: '[PRE152]'
  id: totrans-392
  prefs: []
  type: TYPE_PRE
  zh: '[PRE152]'
- en: Two times the reciprocal of pi (\(\frac{2}{\pi}\))
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: π的倒数的两倍（\(\frac{2}{\pi}\)）
- en: '[PRE153]'
  id: totrans-394
  prefs: []
  type: TYPE_PRE
  zh: '[PRE153]'
- en: The Euler constant
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 欧拉常数
- en: \(\lim_{n\rightarrow\infty}({\sum_{k=1}^n{\frac{1}{k}}-\ln n})\)
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: \(\lim_{n\rightarrow\infty}({\sum_{k=1}^n{\frac{1}{k}}-\ln n})\)
- en: Low-level floating point manipulation
  id: totrans-397
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 低级浮点操作
- en: Those can be useful for precise floating point comparison.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 这些对于精确的浮点比较可能很有用。
- en: '[PRE154]'
  id: totrans-399
  prefs: []
  type: TYPE_PRE
  zh: '[PRE154]'
- en: 'This is an alias to C99 nextafter: return next representable floating point
    value from x in the direction of y. Single and extended precisions are available
    with suffix f and l.'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 这是C99的nextafter的别名：返回从x到y方向的下一个可表示的浮点值。单精度和扩展精度可用后缀f和l。
- en: '[PRE155]'
  id: totrans-401
  prefs: []
  type: TYPE_PRE
  zh: '[PRE155]'
- en: This is a function equivalent to Fortran intrinsic. Return distance between
    x and next representable floating point value from x, e.g. spacing(1) == eps.
    spacing of nan and +/- inf return nan. Single and extended precisions are available
    with suffix f and l.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个等效于Fortran内在函数的函数。返回x和x的下一个可表示的浮点值之间的距离，例如 spacing(1) == eps。 nan和+/- inf的间距返回nan。单精度和扩展精度可用后缀f和l。
- en: '[PRE156]'
  id: totrans-403
  prefs: []
  type: TYPE_PRE
  zh: '[PRE156]'
- en: Set the divide by zero floating point exception
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 设置除以零的浮点异常
- en: '[PRE157]'
  id: totrans-405
  prefs: []
  type: TYPE_PRE
  zh: '[PRE157]'
- en: Set the overflow floating point exception
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 设置上溢的浮点异常
- en: '[PRE158]'
  id: totrans-407
  prefs: []
  type: TYPE_PRE
  zh: '[PRE158]'
- en: Set the underflow floating point exception
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 设置下溢的浮点异常
- en: '[PRE159]'
  id: totrans-409
  prefs: []
  type: TYPE_PRE
  zh: '[PRE159]'
- en: Set the invalid floating point exception
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 设置无效的浮点异常
- en: '[PRE160]'
  id: totrans-411
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: 'Get floating point status. Returns a bitmask with following possible flags:'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 获取浮点状态。返回具有以下可能标志位的位掩码：
- en: NPY_FPE_DIVIDEBYZERO
  id: totrans-413
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_DIVIDEBYZERO
- en: NPY_FPE_OVERFLOW
  id: totrans-414
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_OVERFLOW
- en: NPY_FPE_UNDERFLOW
  id: totrans-415
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_UNDERFLOW
- en: NPY_FPE_INVALID
  id: totrans-416
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_INVALID
- en: Note that [`npy_get_floatstatus_barrier`](#c.npy_get_floatstatus_barrier "npy_get_floatstatus_barrier")
    is preferable as it prevents aggressive compiler optimizations reordering the
    call relative to the code setting the status, which could lead to incorrect results.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，[`npy_get_floatstatus_barrier`](#c.npy_get_floatstatus_barrier "npy_get_floatstatus_barrier")更可取，因为它会防止编译器优化重新安排调用相对于设置状态的代码，这可能导致不正确的结果。
- en: '[PRE161]'
  id: totrans-418
  prefs: []
  type: TYPE_PRE
  zh: '[PRE161]'
- en: Get floating point status. A pointer to a local variable is passed in to prevent
    aggressive compiler optimizations from reordering this function call relative
    to the code setting the status, which could lead to incorrect results.
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 获取浮点状态。传入一个本地变量的指针以防止过于激进的编译器优化重新安排此函数调用以相对于设置状态的代码，这可能导致不正确的结果。
- en: 'Returns a bitmask with following possible flags:'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 返回具有以下可能标志位的位掩码：
- en: NPY_FPE_DIVIDEBYZERO
  id: totrans-421
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_DIVIDEBYZERO
- en: NPY_FPE_OVERFLOW
  id: totrans-422
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_OVERFLOW
- en: NPY_FPE_UNDERFLOW
  id: totrans-423
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_UNDERFLOW
- en: NPY_FPE_INVALID
  id: totrans-424
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPY_FPE_INVALID
- en: New in version 1.15.0.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 在版本1.15.0中新增。
- en: '[PRE162]'
  id: totrans-426
  prefs: []
  type: TYPE_PRE
  zh: '[PRE162]'
- en: Clears the floating point status. Returns the previous status mask.
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 清除浮点状态。返回先前的状态掩码。
- en: Note that [`npy_clear_floatstatus_barrier`](#c.npy_clear_floatstatus_barrier
    "npy_clear_floatstatus_barrier") is preferable as it prevents aggressive compiler
    optimizations reordering the call relative to the code setting the status, which
    could lead to incorrect results.
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，[`npy_clear_floatstatus_barrier`](#c.npy_clear_floatstatus_barrier "npy_clear_floatstatus_barrier")更可取，因为它会防止编译器优化重新安排调用相对于设置状态的代码，这可能导致不正确的结果。
- en: '[PRE163]'
  id: totrans-429
  prefs: []
  type: TYPE_PRE
  zh: '[PRE163]'
- en: Clears the floating point status. A pointer to a local variable is passed in
    to prevent aggressive compiler optimizations from reordering this function call.
    Returns the previous status mask.
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 清除浮点状态。传入一个本地变量的指针以防止过于激进的编译器优化重新安排此函数调用。返回先前的状态掩码。
- en: New in version 1.15.0.
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 在版本1.15.0中新增。
- en: Complex functions
  id: totrans-432
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 复杂函数
- en: 'C99-like complex functions have been added. Those can be used if you wish to
    implement portable C extensions. Since we still support platforms without C99
    complex type (most importantly Windows, where MSVC doesn’t support C99 complex
    types as of Nov 2022), you need to restrict to C90-compatible syntax, e.g.:'
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 已添加类似于C99的复数函数。如果你希望实现可移植的C扩展，可以使用这些函数。由于我们仍然支持没有C99复数类型的平台（最重要的是Windows，截至2022年11月，MSVC不支持C99复数类型），你需要限制为兼容C90的语法，例如：
- en: '[PRE164]'
  id: totrans-434
  prefs: []
  type: TYPE_PRE
  zh: '[PRE164]'
- en: '### Linking against the core math library in an extension'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: '### 在扩展中链接核心数学库'
- en: 'To use the core math library that NumPy ships as a static library in your own
    Python extension, you need to add the npymath compile and link options to your
    extension. The exact steps to take will depend on the build system you are using.
    The generic steps to take are:'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 要在你自己的Python扩展中使用NumPy提供的核心数学库作为静态库，你需要为你的扩展添加`npymath`编译和链接选项。具体的步骤将取决于你使用的构建系统。一般的步骤如下：
- en: Add the numpy include directory (= the value of `np.get_include()`) to your
    include directories,
  id: totrans-437
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将numpy的包含目录（即`np.get_include()`的值）添加到你的包含目录中，
- en: The `npymath` static library resides in the `lib` directory right next to numpy’s
    include directory (i.e., `pathlib.Path(np.get_include()) / '..' / 'lib'`). Add
    that to your library search directories,
  id: totrans-438
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`npymath`静态库位于numpy的包含目录旁边的`lib`目录中（即`pathlib.Path(np.get_include()) / ''..''
    / ''lib''`）。将其添加到你的库搜索目录中，'
- en: Link with `libnpymath` and `libm`.
  id: totrans-439
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 链接时使用`libnpymath`和`libm`。
- en: Note
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Keep in mind that when you are cross compiling, you must use the `numpy` for
    the platform you are building for, not the native one for the build machine. Otherwise
    you pick up a static library built for the wrong architecture.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，当你交叉编译时，你必须使用与你构建的平台相关的`numpy`，而不是构建机器上本地的平台。否则，你会选择错误架构的静态库。
- en: 'When you build with `numpy.distutils` (deprecated), then use this in your `setup.py`:'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用`numpy.distutils`（不推荐使用）构建时，在你的`setup.py`中使用以下代码：
- en: '[PRE165]'
  id: totrans-443
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE165]'
- en: In other words, the usage of `info` is exactly the same as when using `blas_info`
    and co.
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，使用`info`的方式与使用`blas_info`等是完全相同的。
- en: 'When you are building with [Meson](https://mesonbuild.com), use:'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用[Meson](https://mesonbuild.com)构建时，使用以下代码：
- en: '[PRE166]'
  id: totrans-446
  prefs: []
  type: TYPE_PRE
  zh: '[PRE166]'
- en: Half-precision functions
  id: totrans-447
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 半精度函数
- en: The header file `<numpy/halffloat.h>` provides functions to work with IEEE 754-2008
    16-bit floating point values. While this format is not typically used for numerical
    computations, it is useful for storing values which require floating point but
    do not need much precision. It can also be used as an educational tool to understand
    the nature of floating point round-off error.
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 头文件`<numpy/halffloat.h>`提供了与IEEE 754-2008 16位浮点数值一起工作的函数。虽然这种格式通常不用于数值计算，但它非常适合存储需要浮点数但不需要太高精度的值。它也可以用作理解浮点数舍入误差性质的教育工具。
- en: Like for other types, NumPy includes a typedef npy_half for the 16 bit float.
    Unlike for most of the other types, you cannot use this as a normal type in C,
    since it is a typedef for npy_uint16\. For example, 1.0 looks like 0x3c00 to C,
    and if you do an equality comparison between the different signed zeros, you will
    get -0.0 != 0.0 (0x8000 != 0x0000), which is incorrect.
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 像其他类型一样，NumPy包括一个`npy_half`的类型定义，用于表示16位浮点数。与大多数其他类型不同，你不能在C中将它用作普通类型，因为它是`npy_uint16`的一个类型定义。例如，对于C来说，1.0看起来像0x3c00，如果你在不同的有符号零之间进行相等比较，你将得到-0.0
    != 0.0 (0x8000 != 0x0000)，这是不正确的。
- en: For these reasons, NumPy provides an API to work with npy_half values accessible
    by including `<numpy/halffloat.h>` and linking to `npymath`. For functions that
    are not provided directly, such as the arithmetic operations, the preferred method
    is to convert to float or double and back again, as in the following example.
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 出于这些原因，NumPy提供了一个API来处理通过包含`<numpy/halffloat.h>`和链接到`npymath`可访问的`npy_half`值。对于那些没有直接提供的函数，例如算术运算，首选方法是先转换为浮点数或双精度数，然后再转换回来，如下面的例子所示。
- en: '[PRE167]'
  id: totrans-451
  prefs: []
  type: TYPE_PRE
  zh: '[PRE167]'
- en: 'External Links:'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 外部链接：
- en: '[754-2008 IEEE Standard for Floating-Point Arithmetic](https://ieeexplore.ieee.org/document/4610935/)'
  id: totrans-453
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[IEEE 754-2008浮点算术标准](https://ieeexplore.ieee.org/document/4610935/)'
- en: '[Half-precision Float Wikipedia Article](https://en.wikipedia.org/wiki/Half-precision_floating-point_format).'
  id: totrans-454
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[半精度浮点数维基百科文章](https://en.wikipedia.org/wiki/Half-precision_floating-point_format)。'
- en: '[OpenGL Half Float Pixel Support](https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_half_float_pixel.txt)'
  id: totrans-455
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[OpenGL Half Float像素支持](https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_half_float_pixel.txt)'
- en: '[The OpenEXR image format](https://www.openexr.com/about.html).'
  id: totrans-456
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[OpenEXR图像格式](https://www.openexr.com/about.html)。'
- en: '[PRE168]'
  id: totrans-457
  prefs: []
  type: TYPE_PRE
  zh: '[PRE168]'
- en: This macro is defined to positive zero.
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 此宏被定义为正零。
- en: '[PRE169]'
  id: totrans-459
  prefs: []
  type: TYPE_PRE
  zh: '[PRE169]'
- en: This macro is defined to positive zero.
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 此宏被定义为正零。
- en: '[PRE170]'
  id: totrans-461
  prefs: []
  type: TYPE_PRE
  zh: '[PRE170]'
- en: This macro is defined to negative zero.
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 此宏被定义为负零。
- en: '[PRE171]'
  id: totrans-463
  prefs: []
  type: TYPE_PRE
  zh: '[PRE171]'
- en: This macro is defined to 1.0.
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 此宏被定义为1.0。
- en: '[PRE172]'
  id: totrans-465
  prefs: []
  type: TYPE_PRE
  zh: '[PRE172]'
- en: This macro is defined to -1.0.
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 此宏被定义为-1.0。
- en: '[PRE173]'
  id: totrans-467
  prefs: []
  type: TYPE_PRE
  zh: '[PRE173]'
- en: This macro is defined to +inf.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 此宏被定义为+inf。
- en: '[PRE174]'
  id: totrans-469
  prefs: []
  type: TYPE_PRE
  zh: '[PRE174]'
- en: This macro is defined to -inf.
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 此宏被定义为-inf。
- en: '[PRE175]'
  id: totrans-471
  prefs: []
  type: TYPE_PRE
  zh: '[PRE175]'
- en: This macro is defined to a NaN value, guaranteed to have its sign bit unset.
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 此宏被定义为NaN值，保证其符号位未设置。
- en: '[PRE176]'
  id: totrans-473
  prefs: []
  type: TYPE_PRE
  zh: '[PRE176]'
- en: Converts a half-precision float to a single-precision float.
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 将半精度浮点数转换为单精度浮点数。
- en: '[PRE177]'
  id: totrans-475
  prefs: []
  type: TYPE_PRE
  zh: '[PRE177]'
- en: Converts a half-precision float to a double-precision float.
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 将半精度浮点数转换为双精度浮点数。
- en: '[PRE178]'
  id: totrans-477
  prefs: []
  type: TYPE_PRE
  zh: '[PRE178]'
- en: Converts a single-precision float to a half-precision float. The value is rounded
    to the nearest representable half, with ties going to the nearest even. If the
    value is too small or too big, the system’s floating point underflow or overflow
    bit will be set.
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 将单精度浮点数转换为半精度浮点数。该值四舍五入为最接近的可表示的一半，如果值太小或太大，则系统的浮点下溢位或上溢位将被设置。
- en: '[PRE179]'
  id: totrans-479
  prefs: []
  type: TYPE_PRE
  zh: '[PRE179]'
- en: Converts a double-precision float to a half-precision float. The value is rounded
    to the nearest representable half, with ties going to the nearest even. If the
    value is too small or too big, the system’s floating point underflow or overflow
    bit will be set.
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 将双精度浮点数转换为半精度浮点数。该值四舍五入为最接近的可表示的一半，如果值太小或太大，则系统的浮点下溢位或上溢位将被设置。
- en: '[PRE180]'
  id: totrans-481
  prefs: []
  type: TYPE_PRE
  zh: '[PRE180]'
- en: Compares two half-precision floats (h1 == h2).
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个半精度浮点数（h1 == h2）。
- en: '[PRE181]'
  id: totrans-483
  prefs: []
  type: TYPE_PRE
  zh: '[PRE181]'
- en: Compares two half-precision floats (h1 != h2).
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个半精度浮点数（h1 != h2）。
- en: '[PRE182]'
  id: totrans-485
  prefs: []
  type: TYPE_PRE
  zh: '[PRE182]'
- en: Compares two half-precision floats (h1 <= h2).
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个半精度浮点数（h1 <= h2）。
- en: '[PRE183]'
  id: totrans-487
  prefs: []
  type: TYPE_PRE
  zh: '[PRE183]'
- en: Compares two half-precision floats (h1 < h2).
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个半精度浮点数（h1 < h2）。
- en: '[PRE184]'
  id: totrans-489
  prefs: []
  type: TYPE_PRE
  zh: '[PRE184]'
- en: Compares two half-precision floats (h1 >= h2).
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个半精度浮点数（h1 >= h2）。
- en: '[PRE185]'
  id: totrans-491
  prefs: []
  type: TYPE_PRE
  zh: '[PRE185]'
- en: Compares two half-precision floats (h1 > h2).
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个半精度浮点数（h1 > h2）。
- en: '[PRE186]'
  id: totrans-493
  prefs: []
  type: TYPE_PRE
  zh: '[PRE186]'
- en: Compares two half-precision floats that are known to not be NaN (h1 == h2).
    If a value is NaN, the result is undefined.
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 比较已知不为NaN的两个半精度浮点数（h1 == h2）。如果一个值是NaN，则结果是未定义的。
- en: '[PRE187]'
  id: totrans-495
  prefs: []
  type: TYPE_PRE
  zh: '[PRE187]'
- en: Compares two half-precision floats that are known to not be NaN (h1 < h2). If
    a value is NaN, the result is undefined.
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: 比较已知不为NaN的两个半精度浮点数（h1 < h2）。如果一个值是NaN，则结果是未定义的。
- en: '[PRE188]'
  id: totrans-497
  prefs: []
  type: TYPE_PRE
  zh: '[PRE188]'
- en: Compares two half-precision floats that are known to not be NaN (h1 <= h2).
    If a value is NaN, the result is undefined.
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 比较已知不为NaN的两个半精度浮点数（h1 <= h2）。如果一个值是NaN，则结果是未定义的。
- en: '[PRE189]'
  id: totrans-499
  prefs: []
  type: TYPE_PRE
  zh: '[PRE189]'
- en: Tests whether the half-precision float has a value equal to zero. This may be
    slightly faster than calling npy_half_eq(h, NPY_ZERO).
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 检测半精度浮点数是否具有等于零的值。这可能比调用npy_half_eq(h, NPY_ZERO)稍微快一些。
- en: '[PRE190]'
  id: totrans-501
  prefs: []
  type: TYPE_PRE
  zh: '[PRE190]'
- en: Tests whether the half-precision float is a NaN.
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 检测半精度浮点数是否为NaN。
- en: '[PRE191]'
  id: totrans-503
  prefs: []
  type: TYPE_PRE
  zh: '[PRE191]'
- en: Tests whether the half-precision float is plus or minus Inf.
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 检测半精度浮点数是否为正或负Inf。
- en: '[PRE192]'
  id: totrans-505
  prefs: []
  type: TYPE_PRE
  zh: '[PRE192]'
- en: Tests whether the half-precision float is finite (not NaN or Inf).
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 检测半精度浮点数是否有限（不是NaN或Inf）。
- en: '[PRE193]'
  id: totrans-507
  prefs: []
  type: TYPE_PRE
  zh: '[PRE193]'
- en: Returns 1 is h is negative, 0 otherwise.
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 如果h为负则返回1，否则返回0。
- en: '[PRE194]'
  id: totrans-509
  prefs: []
  type: TYPE_PRE
  zh: '[PRE194]'
- en: Returns the value of x with the sign bit copied from y. Works for any value,
    including Inf and NaN.
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 将x的符号位从y中复制的值返回。适用于任何值，包括Inf和NaN。
- en: '[PRE195]'
  id: totrans-511
  prefs: []
  type: TYPE_PRE
  zh: '[PRE195]'
- en: This is the same for half-precision float as npy_spacing and npy_spacingf described
    in the low-level floating point section.
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 这与低级浮点部分中描述的npy_spacing和npy_spacingf对于半精度浮点数是相同的。
- en: '[PRE196]'
  id: totrans-513
  prefs: []
  type: TYPE_PRE
  zh: '[PRE196]'
- en: This is the same for half-precision float as npy_nextafter and npy_nextafterf
    described in the low-level floating point section.
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 这与低级浮点部分中描述的npy_nextafter和npy_nextafterf对于半精度浮点数是相同的。
- en: '[PRE197]'
  id: totrans-515
  prefs: []
  type: TYPE_PRE
  zh: '[PRE197]'
- en: Low-level function which converts a 32-bit single-precision float, stored as
    a uint32, into a 16-bit half-precision float.
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 将32位单精度浮点数，存储为uint32，转换为16位半精度浮点数的低级函数。
- en: '[PRE198]'
  id: totrans-517
  prefs: []
  type: TYPE_PRE
  zh: '[PRE198]'
- en: Low-level function which converts a 64-bit double-precision float, stored as
    a uint64, into a 16-bit half-precision float.
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: 将64位双精度浮点数，存储为uint64，转换为16位半精度浮点数的低级函数。
- en: '[PRE199]'
  id: totrans-519
  prefs: []
  type: TYPE_PRE
  zh: '[PRE199]'
- en: Low-level function which converts a 16-bit half-precision float into a 32-bit
    single-precision float, stored as a uint32.
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 将16位半精度浮点数转换为32位单精度浮点数（存储为uint32）的低级函数。
- en: '[PRE200]'
  id: totrans-521
  prefs: []
  type: TYPE_PRE
  zh: '[PRE200]'
- en: Low-level function which converts a 16-bit half-precision float into a 64-bit
    double-precision float, stored as a uint64.
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 将16位半精度浮点数转换为64位双精度浮点数（存储为uint64）的低级函数。
