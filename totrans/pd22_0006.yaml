- en: How do I read and write tabular data?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/getting_started/intro_tutorials/02_read_write.html](https://pandas.pydata.org/docs/getting_started/intro_tutorials/02_read_write.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![../../_images/02_io_readwrite.svg](../Images/dab7acc4e20ce0edf29438d42ed2256c.png)'
  prefs: []
  type: TYPE_IMG
- en: I want to analyze the Titanic passenger data, available as a CSV file.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: pandas provides the [`read_csv()`](../../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") function to read data stored as a csv file into a pandas `DataFrame`.
    pandas supports many different file formats or data sources out of the box (csv,
    excel, sql, json, parquet, …), each of them with the prefix `read_*`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Make sure to always have a check on the data after reading in the data. When
    displaying a `DataFrame`, the first and last 5 rows will be shown by default:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: I want to see the first 8 rows of a pandas DataFrame.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: To see the first N rows of a `DataFrame`, use the [`head()`](../../reference/api/pandas.DataFrame.head.html#pandas.DataFrame.head
    "pandas.DataFrame.head") method with the required number of rows (in this case
    8) as argument.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Interested in the last N rows instead? pandas also provides a [`tail()`](../../reference/api/pandas.DataFrame.tail.html#pandas.DataFrame.tail
    "pandas.DataFrame.tail") method. For example, `titanic.tail(10)` will return the
    last 10 rows of the DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: 'A check on how pandas interpreted each of the column data types can be done
    by requesting the pandas `dtypes` attribute:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: For each of the columns, the used data type is enlisted. The data types in this
    `DataFrame` are integers (`int64`), floats (`float64`) and strings (`object`).
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: When asking for the `dtypes`, no brackets are used! `dtypes` is an attribute
    of a `DataFrame` and `Series`. Attributes of a `DataFrame` or `Series` do not
    need brackets. Attributes represent a characteristic of a `DataFrame`/`Series`,
    whereas methods (which require brackets) *do* something with the `DataFrame`/`Series`
    as introduced in the [first tutorial](01_table_oriented.html#min-tut-01-tableoriented).
  prefs: []
  type: TYPE_NORMAL
- en: My colleague requested the Titanic data as a spreadsheet.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Whereas `read_*` functions are used to read data to pandas, the `to_*` methods
    are used to store data. The [`to_excel()`](../../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") method stores the data as an excel file. In the example
    here, the `sheet_name` is named *passengers* instead of the default *Sheet1*.
    By setting `index=False` the row index labels are not saved in the spreadsheet.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The equivalent read function `read_excel()` will reload the data to a `DataFrame`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: I’m interested in a technical summary of a `DataFrame`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The method [`info()`](../../reference/api/pandas.DataFrame.info.html#pandas.DataFrame.info
    "pandas.DataFrame.info") provides technical information about a `DataFrame`, so
    let’s explain the output in more detail:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: It is indeed a [`DataFrame`](../../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame").
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: There are 891 entries, i.e. 891 rows.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Each row has a row label (aka the `index`) with values ranging from 0 to 890.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The table has 12 columns. Most columns have a value for each of the rows (all
    891 values are `non-null`). Some columns do have missing values and less than
    891 `non-null` values.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The columns `Name`, `Sex`, `Cabin` and `Embarked` consists of textual data (strings,
    aka `object`). The other columns are numerical data with some of them whole numbers
    (aka `integer`) and others are real numbers (aka `float`).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The kind of data (characters, integers,…) in the different columns are summarized
    by listing the `dtypes`.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The approximate amount of RAM used to hold the DataFrame is provided as well.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: REMEMBER
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Getting data in to pandas from many different file formats or data sources is
    supported by `read_*` functions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exporting data out of pandas is provided by different `to_*`methods.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `head`/`tail`/`info` methods and the `dtypes` attribute are convenient for
    a first check.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To user guide
  prefs: []
  type: TYPE_NORMAL
- en: For a complete overview of the input and output possibilities from and to pandas,
    see the user guide section about [reader and writer functions](../../user_guide/io.html#io).
  prefs: []
  type: TYPE_NORMAL
