["```py\nscipy.special.besselpoly(a, lmb, nu, out=None) = <ufunc 'besselpoly'>\n```", "```py\n>>> from scipy.special import besselpoly\n>>> besselpoly(1, 1, 1)\n0.24449718372863877 \n```", "```py\n>>> import numpy as np\n>>> factors = np.array([0., 3., 6.])\n>>> besselpoly(factors, 1, 1)\narray([ 0\\.        , -0.00549029,  0.00140174]) \n```", "```py\n>>> import matplotlib.pyplot as plt\n>>> fig, ax = plt.subplots()\n>>> powers = np.linspace(0, 10, 100)\n>>> orders = [1, 2, 3]\n>>> scales = [1, 2]\n>>> all_combinations = [(order, scale) for order in orders\n...                     for scale in scales]\n>>> for order, scale in all_combinations:\n...     ax.plot(powers, besselpoly(scale, powers, order),\n...             label=rf\"$\\nu={order}, a={scale}$\")\n>>> ax.legend()\n>>> ax.set_xlabel(r\"$\\lambda$\")\n>>> ax.set_ylabel(r\"$\\int_0^1 x^{\\lambda} J_{\\nu}(2ax)\\,dx$\")\n>>> plt.show() \n```"]