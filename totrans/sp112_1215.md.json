["```py\nclass scipy.stats.CensoredData(uncensored=None, *, left=None, right=None, interval=None)\n```", "```py\n>>> import numpy as np\n>>> from scipy.stats import CensoredData\n>>> data = CensoredData(uncensored=[1, 1.5], left=[0], right=[10],\n...                     interval=[[2, 3]])\n>>> print(data)\nCensoredData(5 values: 2 not censored, 1 left-censored,\n1 right-censored, 1 interval-censored) \n```", "```py\n>>> data = CensoredData(interval=[[1, 1],\n...                               [1.5, 1.5],\n...                               [-np.inf, 0],\n...                               [10, np.inf],\n...                               [2, 3]])\n>>> print(data)\nCensoredData(5 values: 2 not censored, 1 left-censored,\n1 right-censored, 1 interval-censored) \n```", "```py\nDevice  Start-time  Fail-time  Time-to-failure\n   1         0         13           13\n   2         2         24           22\n   3         5         22           17\n   4         8         23           15\n   5        10        ***          >20\n   6        12        ***          >18 \n```", "```py\n>>> data = CensoredData(uncensored=[13, 22, 17, 15], right=[20, 18])\n>>> print(data)\nCensoredData(6 values: 4 not censored, 2 right-censored) \n```", "```py\n>>> ttf = [13, 22, 17, 15, 20, 18]\n>>> censored = [False, False, False, False, True, True] \n```", "```py\n>>> data = CensoredData.right_censored(ttf, censored)\n>>> print(data)\nCensoredData(6 values: 4 not censored, 2 right-censored) \n```", "```py\n>>> a = [10, 0.5, 2, 12.5]  # Low ends of the intervals\n>>> b = [11, 1.0, 3, 13.5]  # High ends of the intervals\n>>> data = CensoredData.interval_censored(low=a, high=b)\n>>> print(data)\nCensoredData(4 values: 0 not censored, 4 interval-censored) \n```", "```py\n>>> from scipy.stats import weibull_min\n>>> rng = np.random.default_rng() \n```", "```py\n>>> x = weibull_min.rvs(2.5, loc=0, scale=30, size=250, random_state=rng)\n>>> x[x > 40] = 40  # Right-censor values greater or equal to 40. \n```", "```py\n>>> data = CensoredData.right_censored(x, x == 40)\n>>> print(data)\nCensoredData(250 values: 215 not censored, 35 right-censored) \n```", "```py\n>>> weibull_min.fit(data, floc=0)\n(2.3575922823897315, 0, 30.40650074451254) \n```"]