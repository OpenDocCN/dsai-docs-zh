- en: pandas.Timedelta
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas.Timedelta
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.Timedelta.html](https://pandas.pydata.org/docs/reference/api/pandas.Timedelta.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.Timedelta.html](https://pandas.pydata.org/docs/reference/api/pandas.Timedelta.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Represents a duration, the difference between two dates or times.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 表示持续时间，两个日期或时间之间的差异。
- en: Timedelta is the pandas equivalent of python’s `datetime.timedelta` and is interchangeable
    with it in most cases.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Timedelta是pandas中等同于python的`datetime.timedelta`，在大多数情况下可以互换使用。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**value**Timedelta, timedelta, np.timedelta64, str, or int'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**value**Timedelta, timedelta, np.timedelta64, str, 或 int'
- en: '**unit**str, default ‘ns’'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**unit**str，默认为‘ns’'
- en: Denote the unit of the input, if input is an integer.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 表示输入的单位，如果输入是整数。
- en: 'Possible values:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 可能的取值：
- en: ‘W’, or ‘D’
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘W’, 或 ‘D’
- en: ‘days’, or ‘day’
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘天’, 或 ‘天’
- en: ‘hours’, ‘hour’, ‘hr’, or ‘h’
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘小时’, ‘小时’, ‘小时’, 或 ‘h’
- en: ‘minutes’, ‘minute’, ‘min’, or ‘m’
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘分钟’, ‘分钟’, ‘分’, 或 ‘m’
- en: ‘seconds’, ‘second’, ‘sec’, or ‘s’
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘秒’, ‘秒’, ‘秒’, 或 ‘s’
- en: ‘milliseconds’, ‘millisecond’, ‘millis’, ‘milli’, or ‘ms’
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘毫秒’, ‘毫秒’, ‘毫秒’, ‘毫秒’, 或 ‘ms’
- en: ‘microseconds’, ‘microsecond’, ‘micros’, ‘micro’, or ‘us’
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘微秒’, ‘微秒’, ‘微秒’, ‘微秒’, 或 ‘us’
- en: ‘nanoseconds’, ‘nanosecond’, ‘nanos’, ‘nano’, or ‘ns’.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘纳秒’, ‘纳秒’, ‘纳秒’, ‘纳秒’, 或 ‘ns’。
- en: 'Deprecated since version 2.2.0: Values H, T, S, L, U, and N are deprecated
    in favour of the values h, min, s, ms, us, and ns.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 自版本2.2.0起弃用：值H、T、S、L、U和N已弃用，推荐使用h、min、s、ms、us和ns。
- en: '****kwargs**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '****kwargs**'
- en: 'Available kwargs: {days, seconds, microseconds, milliseconds, minutes, hours,
    weeks}. Values for construction in compat with datetime.timedelta. Numpy ints
    and floats will be coerced to python ints and floats.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 可用的kwargs：{days, seconds, microseconds, milliseconds, minutes, hours, weeks}。与datetime.timedelta兼容的构造值。Numpy的整数和浮点数将被强制转换为Python的整数和浮点数。
- en: Notes
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The constructor may take in either both values of value and unit or kwargs as
    above. Either one of them must be used during initialization
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 构造函数可以接受值��单位的两个值或上述kwargs。在初始化过程中必须使用其中之一
- en: The `.value` attribute is always in ns.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`.value`属性始终为ns。'
- en: If the precision is higher than nanoseconds, the precision of the duration is
    truncated to nanoseconds.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果精度高于纳秒，则持续时间的精度将被截断为纳秒。
- en: Examples
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: Here we initialize Timedelta object with both value and unit
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里我们使用值和单位初始化Timedelta对象
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Here we initialize the Timedelta object with kwargs
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里我们使用kwargs初始化Timedelta对象
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We see that either way we get the same result
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到无论哪种方式，我们都会得到相同的结果
- en: Attributes
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`asm8`](pandas.Timedelta.asm8.html#pandas.Timedelta.asm8 "pandas.Timedelta.asm8")
    | Return a numpy timedelta64 array scalar view. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`asm8`](pandas.Timedelta.asm8.html#pandas.Timedelta.asm8 "pandas.Timedelta.asm8")
    | 返回一个numpy timedelta64数组标量视图。 |'
- en: '| [`components`](pandas.Timedelta.components.html#pandas.Timedelta.components
    "pandas.Timedelta.components") | Return a components namedtuple-like. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [`components`](pandas.Timedelta.components.html#pandas.Timedelta.components
    "pandas.Timedelta.components") | 返回类似于命名元组的组件。 |'
- en: '| [`days`](pandas.Timedelta.days.html#pandas.Timedelta.days "pandas.Timedelta.days")
    | Returns the days of the timedelta. |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [`days`](pandas.Timedelta.days.html#pandas.Timedelta.days "pandas.Timedelta.days")
    | 返回时间间隔的天数。 |'
- en: '| [`max`](pandas.Timedelta.max.html#pandas.Timedelta.max "pandas.Timedelta.max")
    |  |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| [`max`](pandas.Timedelta.max.html#pandas.Timedelta.max "pandas.Timedelta.max")
    |  |'
- en: '| [`microseconds`](pandas.Timedelta.microseconds.html#pandas.Timedelta.microseconds
    "pandas.Timedelta.microseconds") |  |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| [`microseconds`](pandas.Timedelta.microseconds.html#pandas.Timedelta.microseconds
    "pandas.Timedelta.microseconds") |  |'
- en: '| [`min`](pandas.Timedelta.min.html#pandas.Timedelta.min "pandas.Timedelta.min")
    |  |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| [`min`](pandas.Timedelta.min.html#pandas.Timedelta.min "pandas.Timedelta.min")
    |  |'
- en: '| [`nanoseconds`](pandas.Timedelta.nanoseconds.html#pandas.Timedelta.nanoseconds
    "pandas.Timedelta.nanoseconds") | Return the number of nanoseconds (n), where
    0 <= n < 1 microsecond. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| [`nanoseconds`](pandas.Timedelta.nanoseconds.html#pandas.Timedelta.nanoseconds
    "pandas.Timedelta.nanoseconds") | 返回纳秒数（n），其中0 <= n < 1微秒。 |'
- en: '| [`resolution`](pandas.Timedelta.resolution.html#pandas.Timedelta.resolution
    "pandas.Timedelta.resolution") |  |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [`resolution`](pandas.Timedelta.resolution.html#pandas.Timedelta.resolution
    "pandas.Timedelta.resolution") |  |'
- en: '| `resolution_string` | Return a string representing the lowest timedelta resolution.
    |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| `resolution_string` | 返回表示最低时间间隔分辨率的字符串。 |'
- en: '| [`seconds`](pandas.Timedelta.seconds.html#pandas.Timedelta.seconds "pandas.Timedelta.seconds")
    | Return the total hours, minutes, and seconds of the timedelta as seconds. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| [`seconds`](pandas.Timedelta.seconds.html#pandas.Timedelta.seconds "pandas.Timedelta.seconds")
    | 返回时间间隔的总小时、分钟和秒数（以秒为单位）。 |'
- en: '| [`unit`](pandas.Timedelta.unit.html#pandas.Timedelta.unit "pandas.Timedelta.unit")
    |  |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| [`unit`](pandas.Timedelta.unit.html#pandas.Timedelta.unit "pandas.Timedelta.unit")
    |  |'
- en: '| [`value`](pandas.Timedelta.value.html#pandas.Timedelta.value "pandas.Timedelta.value")
    |  |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| [`value`](pandas.Timedelta.value.html#pandas.Timedelta.value "pandas.Timedelta.value")
    |  |'
- en: Methods
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`as_unit`](pandas.Timedelta.as_unit.html#pandas.Timedelta.as_unit "pandas.Timedelta.as_unit")(unit[, round_ok])
    | Convert the underlying int64 representation to the given unit. |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| [`as_unit`](pandas.Timedelta.as_unit.html#pandas.Timedelta.as_unit "pandas.Timedelta.as_unit")(unit[, round_ok])
    | 将底层 int64 表示转换为给定单位。 |'
- en: '| [`ceil`](pandas.Timedelta.ceil.html#pandas.Timedelta.ceil "pandas.Timedelta.ceil")(freq)
    | Return a new Timedelta ceiled to this resolution. |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| [`ceil`](pandas.Timedelta.ceil.html#pandas.Timedelta.ceil "pandas.Timedelta.ceil")(freq)
    | 返回一个新的 Timedelta，按此分辨率向上取整。 |'
- en: '| [`floor`](pandas.Timedelta.floor.html#pandas.Timedelta.floor "pandas.Timedelta.floor")(freq)
    | Return a new Timedelta floored to this resolution. |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| [`floor`](pandas.Timedelta.floor.html#pandas.Timedelta.floor "pandas.Timedelta.floor")(freq)
    | 返回一个新的 Timedelta，按此分辨率向下取整。 |'
- en: '| [`isoformat`](pandas.Timedelta.isoformat.html#pandas.Timedelta.isoformat
    "pandas.Timedelta.isoformat")() | Format the Timedelta as ISO 8601 Duration. |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| [`isoformat`](pandas.Timedelta.isoformat.html#pandas.Timedelta.isoformat
    "pandas.Timedelta.isoformat")() | 将 Timedelta 格式化为 ISO 8601 时长。 |'
- en: '| [`round`](pandas.Timedelta.round.html#pandas.Timedelta.round "pandas.Timedelta.round")(freq)
    | Round the Timedelta to the specified resolution. |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| [`round`](pandas.Timedelta.round.html#pandas.Timedelta.round "pandas.Timedelta.round")(freq)
    | 将 Timedelta 四舍五入到指定的分辨率。 |'
- en: '| [`to_numpy`](pandas.Timedelta.to_numpy.html#pandas.Timedelta.to_numpy "pandas.Timedelta.to_numpy")([dtype, copy])
    | Convert the Timedelta to a NumPy timedelta64. |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| [`to_numpy`](pandas.Timedelta.to_numpy.html#pandas.Timedelta.to_numpy "pandas.Timedelta.to_numpy")([dtype, copy])
    | 将 Timedelta 转换为 NumPy timedelta64。 |'
- en: '| [`to_pytimedelta`](pandas.Timedelta.to_pytimedelta.html#pandas.Timedelta.to_pytimedelta
    "pandas.Timedelta.to_pytimedelta")() | Convert a pandas Timedelta object into
    a python `datetime.timedelta` object. |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| [`to_pytimedelta`](pandas.Timedelta.to_pytimedelta.html#pandas.Timedelta.to_pytimedelta
    "pandas.Timedelta.to_pytimedelta")() | 将 pandas Timedelta 对象转换为 python `datetime.timedelta`
    对象。 |'
- en: '| [`to_timedelta64`](pandas.Timedelta.to_timedelta64.html#pandas.Timedelta.to_timedelta64
    "pandas.Timedelta.to_timedelta64")() | Return a numpy.timedelta64 object with
    ''ns'' precision. |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| [`to_timedelta64`](pandas.Timedelta.to_timedelta64.html#pandas.Timedelta.to_timedelta64
    "pandas.Timedelta.to_timedelta64")() | 返回一个具有 ''ns'' 精度的 numpy.timedelta64 对象。
    |'
- en: '| [`total_seconds`](pandas.Timedelta.total_seconds.html#pandas.Timedelta.total_seconds
    "pandas.Timedelta.total_seconds")() | Total seconds in the duration. |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| [`total_seconds`](pandas.Timedelta.total_seconds.html#pandas.Timedelta.total_seconds
    "pandas.Timedelta.total_seconds")() | 时长中的总秒数。 |'
- en: '| [`view`](pandas.Timedelta.view.html#pandas.Timedelta.view "pandas.Timedelta.view")(dtype)
    | Array view compatibility. |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| [`view`](pandas.Timedelta.view.html#pandas.Timedelta.view "pandas.Timedelta.view")(dtype)
    | 数组视图兼容性。 |'
