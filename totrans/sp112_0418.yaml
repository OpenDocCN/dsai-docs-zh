- en: scipy.odr.RealData
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.odr.RealData.html#scipy.odr.RealData](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.odr.RealData.html#scipy.odr.RealData)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The data, with weightings as actual standard deviations and/or covariances.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Observed data for the independent variable of the regression
  prefs: []
  type: TYPE_NORMAL
- en: '**y**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If array-like, observed data for the dependent variable of the regression. A
    scalar input implies that the model to be used on the data is implicit.
  prefs: []
  type: TYPE_NORMAL
- en: '**sx**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Standard deviations of *x*. *sx* are standard deviations of *x* and are converted
    to weights by dividing 1.0 by their squares.
  prefs: []
  type: TYPE_NORMAL
- en: '**sy**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Standard deviations of *y*. *sy* are standard deviations of *y* and are converted
    to weights by dividing 1.0 by their squares.
  prefs: []
  type: TYPE_NORMAL
- en: '**covx**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Covariance of *x* *covx* is an array of covariance matrices of *x* and are converted
    to weights by performing a matrix inversion on each observation’s covariance matrix.
  prefs: []
  type: TYPE_NORMAL
- en: '**covy**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Covariance of *y* *covy* is an array of covariance matrices and are converted
    to weights by performing a matrix inversion on each observation’s covariance matrix.
  prefs: []
  type: TYPE_NORMAL
- en: '**fix**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'The argument and member fix is the same as Data.fix and ODR.ifixx: It is an
    array of integers with the same shape as *x* that determines which input observations
    are treated as fixed. One can use a sequence of length m (the dimensionality of
    the input observations) to fix some dimensions for all observations. A value of
    0 fixes the observation, a value > 0 makes it free.'
  prefs: []
  type: TYPE_NORMAL
- en: '**meta**dict, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Free-form dictionary for metadata.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'The weights *wd* and *we* are computed from provided values as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '*sx* and *sy* are converted to weights by dividing 1.0 by their squares. For
    example, ``wd = 1./numpy.power(`sx`, 2)``.'
  prefs: []
  type: TYPE_NORMAL
- en: '*covx* and *covy* are arrays of covariance matrices and are converted to weights
    by performing a matrix inversion on each observation’s covariance matrix. For
    example, `we[i] = numpy.linalg.inv(covy[i])`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'These arguments follow the same structured argument conventions as wd and we
    only restricted by their natures: *sx* and *sy* can’t be rank-3, but *covx* and
    *covy* can be.'
  prefs: []
  type: TYPE_NORMAL
- en: Only set *either* *sx* or *covx* (not both). Setting both will raise an exception.
    Same with *sy* and *covy*.
  prefs: []
  type: TYPE_NORMAL
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`set_meta`](scipy.odr.RealData.set_meta.html#scipy.odr.RealData.set_meta
    "scipy.odr.RealData.set_meta")(**kwds) | Update the metadata dictionary with the
    keywords and data provided by keywords. |'
  prefs: []
  type: TYPE_TB
