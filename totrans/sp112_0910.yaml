- en: scipy.special.log_expit
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.log_expit.html#scipy.special.log_expit](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.log_expit.html#scipy.special.log_expit)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Logarithm of the logistic sigmoid function.
  prefs: []
  type: TYPE_NORMAL
- en: The SciPy implementation of the logistic sigmoid function is [`scipy.special.expit`](scipy.special.expit.html#scipy.special.expit
    "scipy.special.expit"), so this function is called `log_expit`.
  prefs: []
  type: TYPE_NORMAL
- en: The function is mathematically equivalent to `log(expit(x))`, but is formulated
    to avoid loss of precision for inputs with large (positive or negative) magnitude.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The values to apply `log_expit` to element-wise.
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Optional output array for the function results
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**scalar or ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The computed values, an ndarray of the same shape as `x`.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`expit`](scipy.special.expit.html#scipy.special.expit "scipy.special.expit")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: As a ufunc, `log_expit` takes a number of optional keyword arguments. For more
    information see [ufuncs](https://docs.scipy.org/doc/numpy/reference/ufuncs.html)
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.8.0.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Large negative values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Note that `expit(-1000)` returns 0, so the naive implementation `log(expit(-1000))`
    return `-inf`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Large positive values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Compare that to the naive implementation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The first value is accurate to only 3 digits, and the larger inputs lose all
    precision and return 0.
  prefs: []
  type: TYPE_NORMAL
