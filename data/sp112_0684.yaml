- en: scipy.sparse.bsr_matrix
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.sparse.bsr_matrix
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.bsr_matrix.html#scipy.sparse.bsr_matrix](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.bsr_matrix.html#scipy.sparse.bsr_matrix)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.bsr_matrix.html#scipy.sparse.bsr_matrix](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.bsr_matrix.html#scipy.sparse.bsr_matrix)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Block Sparse Row format sparse matrix.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 块稀疏行格式稀疏矩阵。
- en: 'This can be instantiated in several ways:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过几种方式实现：
- en: bsr_matrix(D, [blocksize=(R,C)])
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: bsr_matrix(D, [blocksize=(R,C)])
- en: where D is a 2-D ndarray.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 其中D是2D ndarray。
- en: bsr_matrix(S, [blocksize=(R,C)])
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: bsr_matrix(S, [blocksize=(R,C)])
- en: with another sparse array or matrix S (equivalent to S.tobsr())
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 与另一个稀疏数组或矩阵S（等同于S.tobsr()）
- en: bsr_matrix((M, N), [blocksize=(R,C), dtype])
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: bsr_matrix((M, N), [blocksize=(R,C), dtype])
- en: to construct an empty sparse matrix with shape (M, N) dtype is optional, defaulting
    to dtype=’d’.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 用于构造形状为（M，N）的空稀疏矩阵，dtype是可选的，默认为dtype='d'。
- en: bsr_matrix((data, ij), [blocksize=(R,C), shape=(M, N)])
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: bsr_matrix((data, ij), [blocksize=(R,C), shape=(M, N)])
- en: where `data` and `ij` satisfy `a[ij[0, k], ij[1, k]] = data[k]`
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 当`data`和`ij`满足`a[ij[0, k], ij[1, k]] = data[k]`
- en: bsr_matrix((data, indices, indptr), [shape=(M, N)])
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: bsr_matrix((data, indices, indptr), [shape=(M, N)])
- en: 'is the standard BSR representation where the block column indices for row i
    are stored in `indices[indptr[i]:indptr[i+1]]` and their corresponding block values
    are stored in `data[ indptr[i]: indptr[i+1] ]`. If the shape parameter is not
    supplied, the matrix dimensions are inferred from the index arrays.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 是标准的BSR表示，其中第i行的块列索引存储在`indices[indptr[i]:indptr[i+1]]`中，并且它们对应的块值存储在`data[indptr[i]:indptr[i+1]]`中。如果未提供形状参数，则从索引数组中推断出矩阵的维度。
- en: Notes
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: 'Sparse matrices can be used in arithmetic operations: they support addition,
    subtraction, multiplication, division, and matrix power.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 稀疏矩阵可以用于算术运算：支持加法、减法、乘法、除法和矩阵幂运算。
- en: '**Summary of BSR format**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**BSR格式总结**'
- en: The Block Sparse Row (BSR) format is very similar to the Compressed Sparse Row
    (CSR) format. BSR is appropriate for sparse matrices with dense sub matrices like
    the last example below. Such sparse block matrices often arise in vector-valued
    finite element discretizations. In such cases, BSR is considerably more efficient
    than CSR and CSC for many sparse arithmetic operations.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 块稀疏行（BSR）格式与压缩稀疏行（CSR）格式非常相似。BSR适用于具有稠密子矩阵的稀疏矩阵，例如下面的最后一个示例。这种稀疏块矩阵经常出现在向量值有限元离散化中。在这些情况下，对于许多稀疏算术运算，BSR比CSR和CSC更有效率。
- en: '**Blocksize**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**块大小**'
- en: The blocksize (R,C) must evenly divide the shape of the sparse matrix (M,N).
    That is, R and C must satisfy the relationship `M % R = 0` and `N % C = 0`.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 块大小（R，C）必须均匀地划分稀疏矩阵的形状（M，N）。也就是说，R和C必须满足关系`M % R = 0`和`N % C = 0`。
- en: If no blocksize is specified, a simple heuristic is applied to determine an
    appropriate blocksize.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未指定块大小，则将应用简单的启发式方法来确定适当的块大小。
- en: '**Canonical Format**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**规范格式**'
- en: In canonical format, there are no duplicate blocks and indices are sorted per
    row.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在规范格式中，没有重复的块，并且每行的索引都是排序的。
- en: Examples
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Attributes:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 属性：
- en: '**dtype**dtype'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**dtype**数据类型'
- en: Data type of the matrix
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 矩阵的数据类型
- en: '[`shape`](scipy.sparse.bsr_matrix.shape.html#scipy.sparse.bsr_matrix.shape
    "scipy.sparse.bsr_matrix.shape")2-tuple'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[`shape`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.bsr_matrix.shape.html#scipy.sparse.bsr_matrix.shape
    "scipy.sparse.bsr_matrix.shape")2元组'
- en: Shape of the matrix
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 矩阵的形状
- en: '**ndim**int'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**ndim**整型'
- en: Number of dimensions (this is always 2)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 维度数量（始终为2）
- en: '[`nnz`](scipy.sparse.bsr_matrix.nnz.html#scipy.sparse.bsr_matrix.nnz "scipy.sparse.bsr_matrix.nnz")'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '[`nnz`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.bsr_matrix.nnz.html#scipy.sparse.bsr_matrix.nnz
    "scipy.sparse.bsr_matrix.nnz")'
- en: Number of stored values, including explicit zeros.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 存储的值数量，包括显式的零值。
- en: '[`size`](scipy.sparse.bsr_matrix.size.html#scipy.sparse.bsr_matrix.size "scipy.sparse.bsr_matrix.size")'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[`size`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.bsr_matrix.size.html#scipy.sparse.bsr_matrix.size
    "scipy.sparse.bsr_matrix.size")'
- en: Number of stored values.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 存储的值数量。
- en: '**data**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**data**'
- en: BSR format data array of the matrix
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: BSR格式矩阵的数据数组
- en: '**indices**'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**indices**'
- en: BSR format index array of the matrix
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: BSR格式矩阵的索引数组
- en: '**indptr**'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**indptr**'
- en: BSR format index pointer array of the matrix
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: BSR格式矩阵的索引指针数组
- en: '[`blocksize`](scipy.sparse.bsr_matrix.blocksize.html#scipy.sparse.bsr_matrix.blocksize
    "scipy.sparse.bsr_matrix.blocksize")'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[`blocksize`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.bsr_matrix.blocksize.html#scipy.sparse.bsr_matrix.blocksize
    "scipy.sparse.bsr_matrix.blocksize")'
- en: Block size of the matrix.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 矩阵的块大小。
- en: '[`has_sorted_indices`](scipy.sparse.bsr_matrix.has_sorted_indices.html#scipy.sparse.bsr_matrix.has_sorted_indices
    "scipy.sparse.bsr_matrix.has_sorted_indices")bool'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[`has_sorted_indices`](scipy.sparse.bsr_matrix.has_sorted_indices.html#scipy.sparse.bsr_matrix.has_sorted_indices
    "scipy.sparse.bsr_matrix.has_sorted_indices")bool'
- en: Whether the indices are sorted
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 索引是否已排序
- en: '[`has_canonical_format`](scipy.sparse.bsr_matrix.has_canonical_format.html#scipy.sparse.bsr_matrix.has_canonical_format
    "scipy.sparse.bsr_matrix.has_canonical_format")bool'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '[`has_canonical_format`](scipy.sparse.bsr_matrix.has_canonical_format.html#scipy.sparse.bsr_matrix.has_canonical_format
    "scipy.sparse.bsr_matrix.has_canonical_format")bool'
- en: Whether the array/matrix has sorted indices and no duplicates
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 数组/矩阵是否具有排序的索引且无重复
- en: '[`T`](scipy.sparse.bsr_matrix.T.html#scipy.sparse.bsr_matrix.T "scipy.sparse.bsr_matrix.T")'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[`T`](scipy.sparse.bsr_matrix.T.html#scipy.sparse.bsr_matrix.T "scipy.sparse.bsr_matrix.T")'
- en: Transpose.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 转置。
- en: Methods
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`__len__`](scipy.sparse.bsr_matrix.__len__.html#scipy.sparse.bsr_matrix.__len__
    "scipy.sparse.bsr_matrix.__len__")() |  |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| [`__len__`](scipy.sparse.bsr_matrix.__len__.html#scipy.sparse.bsr_matrix.__len__
    "scipy.sparse.bsr_matrix.__len__")() |  |'
- en: '| [`__mul__`](scipy.sparse.bsr_matrix.__mul__.html#scipy.sparse.bsr_matrix.__mul__
    "scipy.sparse.bsr_matrix.__mul__")(other) |  |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| [`__mul__`](scipy.sparse.bsr_matrix.__mul__.html#scipy.sparse.bsr_matrix.__mul__
    "scipy.sparse.bsr_matrix.__mul__")(other) |  |'
- en: '| [`arcsin`](scipy.sparse.bsr_matrix.arcsin.html#scipy.sparse.bsr_matrix.arcsin
    "scipy.sparse.bsr_matrix.arcsin")() | Element-wise arcsin. |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| [`arcsin`](scipy.sparse.bsr_matrix.arcsin.html#scipy.sparse.bsr_matrix.arcsin
    "scipy.sparse.bsr_matrix.arcsin")() | 逐元素反正弦函数。 |'
- en: '| [`arcsinh`](scipy.sparse.bsr_matrix.arcsinh.html#scipy.sparse.bsr_matrix.arcsinh
    "scipy.sparse.bsr_matrix.arcsinh")() | Element-wise arcsinh. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| [`arcsinh`](scipy.sparse.bsr_matrix.arcsinh.html#scipy.sparse.bsr_matrix.arcsinh
    "scipy.sparse.bsr_matrix.arcsinh")() | 逐元素反双曲正弦函数。 |'
- en: '| [`arctan`](scipy.sparse.bsr_matrix.arctan.html#scipy.sparse.bsr_matrix.arctan
    "scipy.sparse.bsr_matrix.arctan")() | Element-wise arctan. |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| [`arctan`](scipy.sparse.bsr_matrix.arctan.html#scipy.sparse.bsr_matrix.arctan
    "scipy.sparse.bsr_matrix.arctan")() | 逐元素反正切函数。 |'
- en: '| [`arctanh`](scipy.sparse.bsr_matrix.arctanh.html#scipy.sparse.bsr_matrix.arctanh
    "scipy.sparse.bsr_matrix.arctanh")() | Element-wise arctanh. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| [`arctanh`](scipy.sparse.bsr_matrix.arctanh.html#scipy.sparse.bsr_matrix.arctanh
    "scipy.sparse.bsr_matrix.arctanh")() | 逐元素反双曲正切函数。 |'
- en: '| [`argmax`](scipy.sparse.bsr_matrix.argmax.html#scipy.sparse.bsr_matrix.argmax
    "scipy.sparse.bsr_matrix.argmax")([axis, out]) | Return indices of maximum elements
    along an axis. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| [`argmax`](scipy.sparse.bsr_matrix.argmax.html#scipy.sparse.bsr_matrix.argmax
    "scipy.sparse.bsr_matrix.argmax")([axis, out]) | 返回沿轴的最大元素的索引。 |'
- en: '| [`argmin`](scipy.sparse.bsr_matrix.argmin.html#scipy.sparse.bsr_matrix.argmin
    "scipy.sparse.bsr_matrix.argmin")([axis, out]) | Return indices of minimum elements
    along an axis. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| [`argmin`](scipy.sparse.bsr_matrix.argmin.html#scipy.sparse.bsr_matrix.argmin
    "scipy.sparse.bsr_matrix.argmin")([axis, out]) | 返回沿轴的最小元素的索引。 |'
- en: '| [`asformat`](scipy.sparse.bsr_matrix.asformat.html#scipy.sparse.bsr_matrix.asformat
    "scipy.sparse.bsr_matrix.asformat")(format[, copy]) | Return this array/matrix
    in the passed format. |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| [`asformat`](scipy.sparse.bsr_matrix.asformat.html#scipy.sparse.bsr_matrix.asformat
    "scipy.sparse.bsr_matrix.asformat")(format[, copy]) | 以指定格式返回此数组/矩阵。 |'
- en: '| [`asfptype`](scipy.sparse.bsr_matrix.asfptype.html#scipy.sparse.bsr_matrix.asfptype
    "scipy.sparse.bsr_matrix.asfptype")() | Upcast matrix to a floating point format
    (if necessary) |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| [`asfptype`](scipy.sparse.bsr_matrix.asfptype.html#scipy.sparse.bsr_matrix.asfptype
    "scipy.sparse.bsr_matrix.asfptype")() | 将矩阵提升为浮点数格式（如有必要）。 |'
- en: '| [`astype`](scipy.sparse.bsr_matrix.astype.html#scipy.sparse.bsr_matrix.astype
    "scipy.sparse.bsr_matrix.astype")(dtype[, casting, copy]) | Cast the array/matrix
    elements to a specified type. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| [`astype`](scipy.sparse.bsr_matrix.astype.html#scipy.sparse.bsr_matrix.astype
    "scipy.sparse.bsr_matrix.astype")(dtype[, casting, copy]) | 将数组/矩阵元素转换为指定类型。 |'
- en: '| [`ceil`](scipy.sparse.bsr_matrix.ceil.html#scipy.sparse.bsr_matrix.ceil "scipy.sparse.bsr_matrix.ceil")()
    | Element-wise ceil. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| [`ceil`](scipy.sparse.bsr_matrix.ceil.html#scipy.sparse.bsr_matrix.ceil "scipy.sparse.bsr_matrix.ceil")()
    | 逐元素向上取整。 |'
- en: '| [`check_format`](scipy.sparse.bsr_matrix.check_format.html#scipy.sparse.bsr_matrix.check_format
    "scipy.sparse.bsr_matrix.check_format")([full_check]) | Check whether the array/matrix
    respects the BSR format. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| [`check_format`](scipy.sparse.bsr_matrix.check_format.html#scipy.sparse.bsr_matrix.check_format
    "scipy.sparse.bsr_matrix.check_format")([full_check]) | 检查数组/矩阵是否符合BSR格式。 |'
- en: '| [`conj`](scipy.sparse.bsr_matrix.conj.html#scipy.sparse.bsr_matrix.conj "scipy.sparse.bsr_matrix.conj")([copy])
    | Element-wise complex conjugation. |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| [`conj`](scipy.sparse.bsr_matrix.conj.html#scipy.sparse.bsr_matrix.conj "scipy.sparse.bsr_matrix.conj")([copy])
    | 逐元素复数共轭。 |'
- en: '| [`conjugate`](scipy.sparse.bsr_matrix.conjugate.html#scipy.sparse.bsr_matrix.conjugate
    "scipy.sparse.bsr_matrix.conjugate")([copy]) | Element-wise complex conjugation.
    |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| [`conjugate`](scipy.sparse.bsr_matrix.conjugate.html#scipy.sparse.bsr_matrix.conjugate
    "scipy.sparse.bsr_matrix.conjugate")([copy]) | 逐元素复数共轭。 |'
- en: '| [`copy`](scipy.sparse.bsr_matrix.copy.html#scipy.sparse.bsr_matrix.copy "scipy.sparse.bsr_matrix.copy")()
    | Returns a copy of this array/matrix. |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '[`copy`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_matrix.copy.html#scipy.sparse.bsr_matrix.copy
    "scipy.sparse.bsr_matrix.copy")() | 返回该数组/矩阵的副本。'
- en: '| [`count_nonzero`](scipy.sparse.bsr_matrix.count_nonzero.html#scipy.sparse.bsr_matrix.count_nonzero
    "scipy.sparse.bsr_matrix.count_nonzero")() | Number of non-zero entries, equivalent
    to |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '[`count_nonzero`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_matrix.count_nonzero.html#scipy.sparse.bsr_matrix.count_nonzero
    "scipy.sparse.bsr_matrix.count_nonzero")() | 非零条目的数量，等同于。'
- en: '| [`deg2rad`](scipy.sparse.bsr_matrix.deg2rad.html#scipy.sparse.bsr_matrix.deg2rad
    "scipy.sparse.bsr_matrix.deg2rad")() | Element-wise deg2rad. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '[`deg2rad`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_matrix.deg2rad.html#scipy.sparse.bsr_matrix.deg2rad
    "scipy.sparse.bsr_matrix.deg2rad")() | 逐元素的角度转弧度。'
- en: '| [`diagonal`](scipy.sparse.bsr_matrix.diagonal.html#scipy.sparse.bsr_matrix.diagonal
    "scipy.sparse.bsr_matrix.diagonal")([k]) | Returns the kth diagonal of the array/matrix.
    |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '[`diagonal`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_matrix.diagonal.html#scipy.sparse.bsr_matrix.diagonal
    "scipy.sparse.bsr_matrix.diagonal")([k]) | 返回数组/矩阵的第 k 条对角线。'
- en: '| [`dot`](scipy.sparse.bsr_matrix.dot.html#scipy.sparse.bsr_matrix.dot "scipy.sparse.bsr_matrix.dot")(other)
    | Ordinary dot product |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '[`dot`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_matrix.dot.html#scipy.sparse.bsr_matrix.dot
    "scipy.sparse.bsr_matrix.dot")(other) | 普通的点积。'
- en: '| [`eliminate_zeros`](scipy.sparse.bsr_matrix.eliminate_zeros.html#scipy.sparse.bsr_matrix.eliminate_zeros
    "scipy.sparse.bsr_matrix.eliminate_zeros")() | Remove zero elements in-place.
    |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '[`eliminate_zeros`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_matrix.eliminate_zeros.html#scipy.sparse.bsr_matrix.eliminate_zeros
    "scipy.sparse.bsr_matrix.eliminate_zeros")() | 去除矩阵中的零元素（就地操作）。'
- en: '| [`expm1`](scipy.sparse.bsr_matrix.expm1.html#scipy.sparse.bsr_matrix.expm1
    "scipy.sparse.bsr_matrix.expm1")() | Element-wise expm1. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '[`expm1`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_matrix.expm1.html#scipy.sparse.bsr_matrix.expm1
    "scipy.sparse.bsr_matrix.expm1")() | 逐元素的 expm1。'
- en: '| [`floor`](scipy.sparse.bsr_matrix.floor.html#scipy.sparse.bsr_matrix.floor
    "scipy.sparse.bsr_matrix.floor")() | Element-wise floor. |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '[`floor`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_matrix.floor.html#scipy.sparse.bsr_matrix.floor
    "scipy.sparse.bsr_matrix.floor")() | 逐元素的 floor。'
- en: '| [`getH`](scipy.sparse.bsr_matrix.getH.html#scipy.sparse.bsr_matrix.getH "scipy.sparse.bsr_matrix.getH")()
    | Return the Hermitian transpose of this matrix. |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '[`getH`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_matrix.getH.html#scipy.sparse.bsr_matrix.getH
    "scipy.sparse.bsr_matrix.getH")() | 返回该矩阵的共轭转置。'
- en: '| [`get_shape`](scipy.sparse.bsr_matrix.get_shape.html#scipy.sparse.bsr_matrix.get_shape
    "scipy.sparse.bsr_matrix.get_shape")() | Get the shape of the matrix |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '[`get_shape`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_matrix.get_shape.html#scipy.sparse.bsr_matrix.get_shape
    "scipy.sparse.bsr_matrix.get_shape")() | 获取矩阵的形状。'
- en: '| [`getcol`](scipy.sparse.bsr_matrix.getcol.html#scipy.sparse.bsr_matrix.getcol
    "scipy.sparse.bsr_matrix.getcol")(j) | Returns a copy of column j of the matrix,
    as an (m x 1) sparse matrix (column vector). |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '[`getcol`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_matrix.getcol.html#scipy.sparse.bsr_matrix.getcol
    "scipy.sparse.bsr_matrix.getcol")(j) | 返回矩阵的第 j 列的副本，作为一个 (m x 1) 稀疏矩阵（列向量）。'
- en: '| [`getformat`](scipy.sparse.bsr_matrix.getformat.html#scipy.sparse.bsr_matrix.getformat
    "scipy.sparse.bsr_matrix.getformat")() | Matrix storage format |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '[`getformat`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_matrix.getformat.html#scipy.sparse.bsr_matrix.getformat
    "scipy.sparse.bsr_matrix.getformat")() | 矩阵存储格式。'
- en: '| [`getmaxprint`](scipy.sparse.bsr_matrix.getmaxprint.html#scipy.sparse.bsr_matrix.getmaxprint
    "scipy.sparse.bsr_matrix.getmaxprint")() | Maximum number of elements to display
    when printed. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '[`getmaxprint`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_matrix.getmaxprint.html#scipy.sparse.bsr_matrix.getmaxprint
    "scipy.sparse.bsr_matrix.getmaxprint")() | 打印时显示的最大元素数。'
- en: '| [`getnnz`](scipy.sparse.bsr_matrix.getnnz.html#scipy.sparse.bsr_matrix.getnnz
    "scipy.sparse.bsr_matrix.getnnz")([axis]) | Number of stored values, including
    explicit zeros. |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '[`getnnz`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_matrix.getnnz.html#scipy.sparse.bsr_matrix.getnnz
    "scipy.sparse.bsr_matrix.getnnz")([axis]) | 存储的值的数量，包括显式的零。'
- en: '| [`getrow`](scipy.sparse.bsr_matrix.getrow.html#scipy.sparse.bsr_matrix.getrow
    "scipy.sparse.bsr_matrix.getrow")(i) | Returns a copy of row i of the matrix,
    as a (1 x n) sparse matrix (row vector). |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '[`getrow`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_matrix.getrow.html#scipy.sparse.bsr_matrix.getrow
    "scipy.sparse.bsr_matrix.getrow")(i) | 返回矩阵的第 i 行的副本，作为 (1 x n) 稀疏矩阵（行向量）。'
- en: '| [`log1p`](scipy.sparse.bsr_matrix.log1p.html#scipy.sparse.bsr_matrix.log1p
    "scipy.sparse.bsr_matrix.log1p")() | Element-wise log1p. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '[`log1p`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_matrix.log1p.html#scipy.sparse.bsr_matrix.log1p
    "scipy.sparse.bsr_matrix.log1p")() | 逐元素的 log1p。'
- en: '| [`max`](scipy.sparse.bsr_matrix.max.html#scipy.sparse.bsr_matrix.max "scipy.sparse.bsr_matrix.max")([axis, out])
    | Return the maximum of the array/matrix or maximum along an axis. |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '[`max`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_matrix.max.html#scipy.sparse.bsr_matrix.max
    "scipy.sparse.bsr_matrix.max")([axis, out]) | 返回数组/矩阵的最大值或沿轴的最大值。'
- en: '| [`maximum`](scipy.sparse.bsr_matrix.maximum.html#scipy.sparse.bsr_matrix.maximum
    "scipy.sparse.bsr_matrix.maximum")(other) | Element-wise maximum between this
    and another array/matrix. |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '[`maximum`](scipy.sparse.bsr_matrix.maximum.html#scipy.sparse.bsr_matrix.maximum
    "scipy.sparse.bsr_matrix.maximum")(other) | 此矩阵和另一个数组/矩阵之间的逐元素最大值。'
- en: '| [`mean`](scipy.sparse.bsr_matrix.mean.html#scipy.sparse.bsr_matrix.mean "scipy.sparse.bsr_matrix.mean")([axis, dtype, out])
    | Compute the arithmetic mean along the specified axis. |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '[`mean`](scipy.sparse.bsr_matrix.mean.html#scipy.sparse.bsr_matrix.mean "scipy.sparse.bsr_matrix.mean")([axis, dtype, out])
    | 沿指定轴计算算术平均值。'
- en: '| [`min`](scipy.sparse.bsr_matrix.min.html#scipy.sparse.bsr_matrix.min "scipy.sparse.bsr_matrix.min")([axis, out])
    | Return the minimum of the array/matrix or maximum along an axis. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '[`min`](scipy.sparse.bsr_matrix.min.html#scipy.sparse.bsr_matrix.min "scipy.sparse.bsr_matrix.min")([axis, out])
    | 返回数组/矩阵或指定轴向的最小值。'
- en: '| [`minimum`](scipy.sparse.bsr_matrix.minimum.html#scipy.sparse.bsr_matrix.minimum
    "scipy.sparse.bsr_matrix.minimum")(other) | Element-wise minimum between this
    and another array/matrix. |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '[`minimum`](scipy.sparse.bsr_matrix.minimum.html#scipy.sparse.bsr_matrix.minimum
    "scipy.sparse.bsr_matrix.minimum")(other) | 此矩阵和另一个数组/矩阵之间的逐元素最小值。'
- en: '| [`multiply`](scipy.sparse.bsr_matrix.multiply.html#scipy.sparse.bsr_matrix.multiply
    "scipy.sparse.bsr_matrix.multiply")(other) | Point-wise multiplication by another
    array/matrix, vector, or scalar. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '[`multiply`](scipy.sparse.bsr_matrix.multiply.html#scipy.sparse.bsr_matrix.multiply
    "scipy.sparse.bsr_matrix.multiply")(other) | 逐点乘以另一个数组/矩阵、向量或标量。'
- en: '| [`nanmax`](scipy.sparse.bsr_matrix.nanmax.html#scipy.sparse.bsr_matrix.nanmax
    "scipy.sparse.bsr_matrix.nanmax")([axis, out]) | Return the maximum of the array/matrix
    or maximum along an axis, ignoring any NaNs. |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '[`nanmax`](scipy.sparse.bsr_matrix.nanmax.html#scipy.sparse.bsr_matrix.nanmax
    "scipy.sparse.bsr_matrix.nanmax")([axis, out]) | 返回数组/矩阵或指定轴向的最大值，忽略任何 NaN 值。'
- en: '| [`nanmin`](scipy.sparse.bsr_matrix.nanmin.html#scipy.sparse.bsr_matrix.nanmin
    "scipy.sparse.bsr_matrix.nanmin")([axis, out]) | Return the minimum of the array/matrix
    or minimum along an axis, ignoring any NaNs. |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '[`nanmin`](scipy.sparse.bsr_matrix.nanmin.html#scipy.sparse.bsr_matrix.nanmin
    "scipy.sparse.bsr_matrix.nanmin")([axis, out]) | 返回数组/矩阵或指定轴向的最小值，忽略任何 NaN 值。'
- en: '| [`nonzero`](scipy.sparse.bsr_matrix.nonzero.html#scipy.sparse.bsr_matrix.nonzero
    "scipy.sparse.bsr_matrix.nonzero")() | Nonzero indices of the array/matrix. |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '[`nonzero`](scipy.sparse.bsr_matrix.nonzero.html#scipy.sparse.bsr_matrix.nonzero
    "scipy.sparse.bsr_matrix.nonzero")() | 数组/矩阵的非零索引。'
- en: '| [`power`](scipy.sparse.bsr_matrix.power.html#scipy.sparse.bsr_matrix.power
    "scipy.sparse.bsr_matrix.power")(n[, dtype]) | This function performs element-wise
    power. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '[`power`](scipy.sparse.bsr_matrix.power.html#scipy.sparse.bsr_matrix.power
    "scipy.sparse.bsr_matrix.power")(n[, dtype]) | 此函数执行逐元素的幂运算。'
- en: '| [`prune`](scipy.sparse.bsr_matrix.prune.html#scipy.sparse.bsr_matrix.prune
    "scipy.sparse.bsr_matrix.prune")() | Remove empty space after all non-zero elements.
    |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '[`prune`](scipy.sparse.bsr_matrix.prune.html#scipy.sparse.bsr_matrix.prune
    "scipy.sparse.bsr_matrix.prune")() | 移除所有非零元素后的空白空间。'
- en: '| [`rad2deg`](scipy.sparse.bsr_matrix.rad2deg.html#scipy.sparse.bsr_matrix.rad2deg
    "scipy.sparse.bsr_matrix.rad2deg")() | Element-wise rad2deg. |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '[`rad2deg`](scipy.sparse.bsr_matrix.rad2deg.html#scipy.sparse.bsr_matrix.rad2deg
    "scipy.sparse.bsr_matrix.rad2deg")() | 逐元素将弧度转换为角度。'
- en: '| [`reshape`](scipy.sparse.bsr_matrix.reshape.html#scipy.sparse.bsr_matrix.reshape
    "scipy.sparse.bsr_matrix.reshape")(self, shape[, order, copy]) | Gives a new shape
    to a sparse array/matrix without changing its data. |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '[`reshape`](scipy.sparse.bsr_matrix.reshape.html#scipy.sparse.bsr_matrix.reshape
    "scipy.sparse.bsr_matrix.reshape")(self, shape[, order, copy]) | 将稀疏数组/矩阵重新整形为新的形状，但不改变其数据。'
- en: '| [`resize`](scipy.sparse.bsr_matrix.resize.html#scipy.sparse.bsr_matrix.resize
    "scipy.sparse.bsr_matrix.resize")(*shape) | Resize the array/matrix in-place to
    dimensions given by `shape` |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '[`resize`](scipy.sparse.bsr_matrix.resize.html#scipy.sparse.bsr_matrix.resize
    "scipy.sparse.bsr_matrix.resize")(*shape) | 原地调整数组/矩阵的维度为给定的 `shape`。'
- en: '| [`rint`](scipy.sparse.bsr_matrix.rint.html#scipy.sparse.bsr_matrix.rint "scipy.sparse.bsr_matrix.rint")()
    | Element-wise rint. |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '[`rint`](scipy.sparse.bsr_matrix.rint.html#scipy.sparse.bsr_matrix.rint "scipy.sparse.bsr_matrix.rint")()
    | 逐元素四舍五入。'
- en: '| [`set_shape`](scipy.sparse.bsr_matrix.set_shape.html#scipy.sparse.bsr_matrix.set_shape
    "scipy.sparse.bsr_matrix.set_shape")(shape) | Set the shape of the matrix in-place
    |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '[`set_shape`](scipy.sparse.bsr_matrix.set_shape.html#scipy.sparse.bsr_matrix.set_shape
    "scipy.sparse.bsr_matrix.set_shape")(shape) | 在原地设置矩阵的形状。'
- en: '| [`setdiag`](scipy.sparse.bsr_matrix.setdiag.html#scipy.sparse.bsr_matrix.setdiag
    "scipy.sparse.bsr_matrix.setdiag")(values[, k]) | Set diagonal or off-diagonal
    elements of the array/matrix. |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '[`setdiag`](scipy.sparse.bsr_matrix.setdiag.html#scipy.sparse.bsr_matrix.setdiag
    "scipy.sparse.bsr_matrix.setdiag")(values[, k]) | 设置数组/矩阵的对角线或非对角线元素。'
- en: '| [`sign`](scipy.sparse.bsr_matrix.sign.html#scipy.sparse.bsr_matrix.sign "scipy.sparse.bsr_matrix.sign")()
    | Element-wise sign. |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| [`sign`](scipy.sparse.bsr_matrix.sign.html#scipy.sparse.bsr_matrix.sign "scipy.sparse.bsr_matrix.sign")()
    | 逐元素求符号。 |'
- en: '| [`sin`](scipy.sparse.bsr_matrix.sin.html#scipy.sparse.bsr_matrix.sin "scipy.sparse.bsr_matrix.sin")()
    | Element-wise sin. |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| [`sin`](scipy.sparse.bsr_matrix.sin.html#scipy.sparse.bsr_matrix.sin "scipy.sparse.bsr_matrix.sin")()
    | 逐元素求正弦。 |'
- en: '| [`sinh`](scipy.sparse.bsr_matrix.sinh.html#scipy.sparse.bsr_matrix.sinh "scipy.sparse.bsr_matrix.sinh")()
    | Element-wise sinh. |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| [`sinh`](scipy.sparse.bsr_matrix.sinh.html#scipy.sparse.bsr_matrix.sinh "scipy.sparse.bsr_matrix.sinh")()
    | 逐元素求双曲正弦。 |'
- en: '| [`sort_indices`](scipy.sparse.bsr_matrix.sort_indices.html#scipy.sparse.bsr_matrix.sort_indices
    "scipy.sparse.bsr_matrix.sort_indices")() | Sort the indices of this array/matrix
    *in place* |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| [`sort_indices`](scipy.sparse.bsr_matrix.sort_indices.html#scipy.sparse.bsr_matrix.sort_indices
    "scipy.sparse.bsr_matrix.sort_indices")() | *原地* 对此数组/矩阵的索引进行排序。 |'
- en: '| [`sorted_indices`](scipy.sparse.bsr_matrix.sorted_indices.html#scipy.sparse.bsr_matrix.sorted_indices
    "scipy.sparse.bsr_matrix.sorted_indices")() | Return a copy of this array/matrix
    with sorted indices |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| [`sorted_indices`](scipy.sparse.bsr_matrix.sorted_indices.html#scipy.sparse.bsr_matrix.sorted_indices
    "scipy.sparse.bsr_matrix.sorted_indices")() | 返回按排序索引的此数组/矩阵的副本。 |'
- en: '| [`sqrt`](scipy.sparse.bsr_matrix.sqrt.html#scipy.sparse.bsr_matrix.sqrt "scipy.sparse.bsr_matrix.sqrt")()
    | Element-wise sqrt. |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| [`sqrt`](scipy.sparse.bsr_matrix.sqrt.html#scipy.sparse.bsr_matrix.sqrt "scipy.sparse.bsr_matrix.sqrt")()
    | 逐元素求平方根。 |'
- en: '| [`sum`](scipy.sparse.bsr_matrix.sum.html#scipy.sparse.bsr_matrix.sum "scipy.sparse.bsr_matrix.sum")([axis, dtype, out])
    | Sum the array/matrix elements over a given axis. |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| [`sum`](scipy.sparse.bsr_matrix.sum.html#scipy.sparse.bsr_matrix.sum "scipy.sparse.bsr_matrix.sum")([axis, dtype, out])
    | 沿给定轴对数组/矩阵元素求和。 |'
- en: '| [`sum_duplicates`](scipy.sparse.bsr_matrix.sum_duplicates.html#scipy.sparse.bsr_matrix.sum_duplicates
    "scipy.sparse.bsr_matrix.sum_duplicates")() | Eliminate duplicate array/matrix
    entries by adding them together |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| [`sum_duplicates`](scipy.sparse.bsr_matrix.sum_duplicates.html#scipy.sparse.bsr_matrix.sum_duplicates
    "scipy.sparse.bsr_matrix.sum_duplicates")() | 通过将重复的数组/矩阵条目相加来消除重复项。 |'
- en: '| [`tan`](scipy.sparse.bsr_matrix.tan.html#scipy.sparse.bsr_matrix.tan "scipy.sparse.bsr_matrix.tan")()
    | Element-wise tan. |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| [`tan`](scipy.sparse.bsr_matrix.tan.html#scipy.sparse.bsr_matrix.tan "scipy.sparse.bsr_matrix.tan")()
    | 逐元素求正切。 |'
- en: '| [`tanh`](scipy.sparse.bsr_matrix.tanh.html#scipy.sparse.bsr_matrix.tanh "scipy.sparse.bsr_matrix.tanh")()
    | Element-wise tanh. |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| [`tanh`](scipy.sparse.bsr_matrix.tanh.html#scipy.sparse.bsr_matrix.tanh "scipy.sparse.bsr_matrix.tanh")()
    | 逐元素求双曲正切。 |'
- en: '| [`toarray`](scipy.sparse.bsr_matrix.toarray.html#scipy.sparse.bsr_matrix.toarray
    "scipy.sparse.bsr_matrix.toarray")([order, out]) | Return a dense ndarray representation
    of this sparse array/matrix. |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| [`toarray`](scipy.sparse.bsr_matrix.toarray.html#scipy.sparse.bsr_matrix.toarray
    "scipy.sparse.bsr_matrix.toarray")([order, out]) | 返回此稀疏数组/矩阵的密集 ndarray 表示。 |'
- en: '| [`tobsr`](scipy.sparse.bsr_matrix.tobsr.html#scipy.sparse.bsr_matrix.tobsr
    "scipy.sparse.bsr_matrix.tobsr")([blocksize, copy]) | Convert this array/matrix
    into Block Sparse Row Format. |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| [`tobsr`](scipy.sparse.bsr_matrix.tobsr.html#scipy.sparse.bsr_matrix.tobsr
    "scipy.sparse.bsr_matrix.tobsr")([blocksize, copy]) | 将此数组/矩阵转换为块稀疏行格式。 |'
- en: '| [`tocoo`](scipy.sparse.bsr_matrix.tocoo.html#scipy.sparse.bsr_matrix.tocoo
    "scipy.sparse.bsr_matrix.tocoo")([copy]) | Convert this array/matrix to COOrdinate
    format. |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| [`tocoo`](scipy.sparse.bsr_matrix.tocoo.html#scipy.sparse.bsr_matrix.tocoo
    "scipy.sparse.bsr_matrix.tocoo")([copy]) | 将此数组/矩阵转换为 COO 格式。 |'
- en: '| [`tocsc`](scipy.sparse.bsr_matrix.tocsc.html#scipy.sparse.bsr_matrix.tocsc
    "scipy.sparse.bsr_matrix.tocsc")([copy]) | Convert this array/matrix to Compressed
    Sparse Column format. |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| [`tocsc`](scipy.sparse.bsr_matrix.tocsc.html#scipy.sparse.bsr_matrix.tocsc
    "scipy.sparse.bsr_matrix.tocsc")([copy]) | 将此数组/矩阵转换为压缩稀疏列格式。 |'
- en: '| [`tocsr`](scipy.sparse.bsr_matrix.tocsr.html#scipy.sparse.bsr_matrix.tocsr
    "scipy.sparse.bsr_matrix.tocsr")([copy]) | Convert this array/matrix to Compressed
    Sparse Row format. |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| [`tocsr`](scipy.sparse.bsr_matrix.tocsr.html#scipy.sparse.bsr_matrix.tocsr
    "scipy.sparse.bsr_matrix.tocsr")([copy]) | 将此数组/矩阵转换为压缩稀疏行格式。 |'
- en: '| [`todense`](scipy.sparse.bsr_matrix.todense.html#scipy.sparse.bsr_matrix.todense
    "scipy.sparse.bsr_matrix.todense")([order, out]) | Return a dense representation
    of this sparse array/matrix. |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| [`todense`](scipy.sparse.bsr_matrix.todense.html#scipy.sparse.bsr_matrix.todense
    "scipy.sparse.bsr_matrix.todense")([order, out]) | 返回此稀疏数组/矩阵的密集表示。 |'
- en: '| [`todia`](scipy.sparse.bsr_matrix.todia.html#scipy.sparse.bsr_matrix.todia
    "scipy.sparse.bsr_matrix.todia")([copy]) | Convert this array/matrix to sparse
    DIAgonal format. |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| [`todia`](scipy.sparse.bsr_matrix.todia.html#scipy.sparse.bsr_matrix.todia
    "scipy.sparse.bsr_matrix.todia")([copy]) | 将此数组/矩阵转换为稀疏对角格式。 |'
- en: '| [`todok`](scipy.sparse.bsr_matrix.todok.html#scipy.sparse.bsr_matrix.todok
    "scipy.sparse.bsr_matrix.todok")([copy]) | Convert this array/matrix to Dictionary
    Of Keys format. |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| [`todok`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_matrix.todok.html#scipy.sparse.bsr_matrix.todok
    "scipy.sparse.bsr_matrix.todok")([copy]) | 将此数组/矩阵转换为字典键格式。 |'
- en: '| [`tolil`](scipy.sparse.bsr_matrix.tolil.html#scipy.sparse.bsr_matrix.tolil
    "scipy.sparse.bsr_matrix.tolil")([copy]) | Convert this array/matrix to List of
    Lists format. |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| [`tolil`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_matrix.tolil.html#scipy.sparse.bsr_matrix.tolil
    "scipy.sparse.bsr_matrix.tolil")([copy]) | 将此数组/矩阵转换为列表列表格式。 |'
- en: '| [`trace`](scipy.sparse.bsr_matrix.trace.html#scipy.sparse.bsr_matrix.trace
    "scipy.sparse.bsr_matrix.trace")([offset]) | Returns the sum along diagonals of
    the sparse array/matrix. |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| [`trace`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_matrix.trace.html#scipy.sparse.bsr_matrix.trace
    "scipy.sparse.bsr_matrix.trace")([offset]) | 返回稀疏数组/矩阵沿对角线的和。 |'
- en: '| [`transpose`](scipy.sparse.bsr_matrix.transpose.html#scipy.sparse.bsr_matrix.transpose
    "scipy.sparse.bsr_matrix.transpose")([axes, copy]) | Reverses the dimensions of
    the sparse array/matrix. |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| [`transpose`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_matrix.transpose.html#scipy.sparse.bsr_matrix.transpose
    "scipy.sparse.bsr_matrix.transpose")([axes, copy]) | 反转稀疏数组/矩阵的维度。 |'
- en: '| [`trunc`](scipy.sparse.bsr_matrix.trunc.html#scipy.sparse.bsr_matrix.trunc
    "scipy.sparse.bsr_matrix.trunc")() | Element-wise trunc. |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| [`trunc`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.bsr_matrix.trunc.html#scipy.sparse.bsr_matrix.trunc
    "scipy.sparse.bsr_matrix.trunc")() | 逐元素截断。 |'
- en: '| **__getitem__** |  |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| **__getitem__** |  |'
