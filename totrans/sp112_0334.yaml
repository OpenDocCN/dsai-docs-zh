- en: scipy.linalg.get_lapack_funcs
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.linalg.get_lapack_funcs
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.get_lapack_funcs.html#scipy.linalg.get_lapack_funcs](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.get_lapack_funcs.html#scipy.linalg.get_lapack_funcs)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.get_lapack_funcs.html#scipy.linalg.get_lapack_funcs](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.get_lapack_funcs.html#scipy.linalg.get_lapack_funcs)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Return available LAPACK function objects from names.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 返回名称中可用的 LAPACK 函数对象。
- en: Arrays are used to determine the optimal prefix of LAPACK routines.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 数组用于确定 LAPACK 程序包的最佳前缀。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**names**str or sequence of str'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**names**str 或字符串序列'
- en: Name(s) of LAPACK functions without type prefix.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 没有类型前缀的 LAPACK 函数的名称。
- en: '**arrays**sequence of ndarrays, optional'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**arrays**ndarrays 序列，可选'
- en: Arrays can be given to determine optimal prefix of LAPACK routines. If not given,
    double-precision routines will be used, otherwise the most generic type in arrays
    will be used.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 可以提供数组以确定 LAPACK 程序包的最佳前缀。如果未提供，则将使用双精度例程，否则将使用数组中最通用的类型。
- en: '**dtype**str or dtype, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**dtype**str 或 dtype，可选'
- en: Data-type specifier. Not used if *arrays* is non-empty.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 数据类型说明符。如果 *arrays* 非空，则不使用。
- en: '**ilp64**{True, False, ‘preferred’}, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**ilp64**{True, False, ‘preferred’}，可选'
- en: 'Whether to return ILP64 routine variant. Choosing ‘preferred’ returns ILP64
    routine if available, and otherwise the 32-bit routine. Default: False'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 是否返回 ILP64 例程变体。选择 ‘preferred’ 如果可用，则返回 ILP64 例程，否则返回 32 位例程。默认为 False
- en: 'Returns:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**funcs**list'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**funcs**列表'
- en: List containing the found function(s).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 包含找到的函数的列表。
- en: Notes
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: This routine automatically chooses between Fortran/C interfaces. Fortran code
    is used whenever possible for arrays with column major order. In all other cases,
    C code is preferred.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 该例程会自动在 Fortran/C 接口之间进行选择。在列主序数组中尽可能使用 Fortran 代码。在所有其他情况下，优选 C 代码。
- en: In LAPACK, the naming convention is that all functions start with a type prefix,
    which depends on the type of the principal matrix. These can be one of {‘s’, ‘d’,
    ‘c’, ‘z’} for the NumPy types {float32, float64, complex64, complex128} respectively,
    and are stored in attribute `typecode` of the returned functions.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在 LAPACK 中，命名约定是所有函数以一个类型前缀开头，这取决于主矩阵的类型。这些可以是 NumPy 类型 {float32, float64, complex64,
    complex128} 中的 {‘s’, ‘d’, ‘c’, ‘z’} 之一，分别存储在返回函数的 `typecode` 属性中。
- en: Examples
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: Suppose we would like to use ‘?lange’ routine which computes the selected norm
    of an array. We pass our array in order to get the correct ‘lange’ flavor.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们想使用 ‘?lange’ 例程来计算数组的选定范数。我们传递我们的数组以获得正确的 ‘lange’ 版本。
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Several LAPACK routines work best when its internal WORK array has the optimal
    size (big enough for fast computation and small enough to avoid waste of memory).
    This size is determined also by a dedicated query to the function which is often
    wrapped as a standalone function and commonly denoted as `###_lwork`. Below is
    an example for `?sysv`
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 几个 LAPACK 例程在其内部 WORK 数组具有最佳大小时效果最佳（足够大以进行快速计算，但又小到不浪费内存）。这个大小也通过专用查询函数确定，通常作为独立函数包装并通常表示为
    `###_lwork`。下面是 `?sysv` 的示例。
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
