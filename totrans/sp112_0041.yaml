- en: Discrete Fourier transforms (scipy.fft)
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 离散傅立叶变换（scipy.fft）
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/fft.html](https://docs.scipy.org/doc/scipy-1.12.0/reference/fft.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/fft.html](https://docs.scipy.org/doc/scipy-1.12.0/reference/fft.html)
- en: '## Fast Fourier Transforms (FFTs)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '## 快速傅立叶变换（FFT）'
- en: '| [`fft`](generated/scipy.fft.fft.html#scipy.fft.fft "scipy.fft.fft")(x[, n, axis, norm, overwrite_x, ...])
    | Compute the 1-D discrete Fourier Transform. |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '| [`fft`](generated/scipy.fft.fft.html#scipy.fft.fft "scipy.fft.fft")(x[, n, axis, norm, overwrite_x, ...])
    | 计算一维离散傅立叶变换。 |'
- en: '| [`ifft`](generated/scipy.fft.ifft.html#scipy.fft.ifft "scipy.fft.ifft")(x[, n, axis, norm, overwrite_x, ...])
    | Compute the 1-D inverse discrete Fourier Transform. |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| [`ifft`](generated/scipy.fft.ifft.html#scipy.fft.ifft "scipy.fft.ifft")(x[, n, axis, norm, overwrite_x, ...])
    | 计算一维离散傅立叶逆变换。 |'
- en: '| [`fft2`](generated/scipy.fft.fft2.html#scipy.fft.fft2 "scipy.fft.fft2")(x[, s, axes, norm, overwrite_x, ...])
    | Compute the 2-D discrete Fourier Transform |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| [`fft2`](generated/scipy.fft.fft2.html#scipy.fft.fft2 "scipy.fft.fft2")(x[, s, axes, norm, overwrite_x, ...])
    | 计算二维离散傅立叶变换 |'
- en: '| [`ifft2`](generated/scipy.fft.ifft2.html#scipy.fft.ifft2 "scipy.fft.ifft2")(x[, s, axes, norm, overwrite_x, ...])
    | Compute the 2-D inverse discrete Fourier Transform. |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| [`ifft2`](generated/scipy.fft.ifft2.html#scipy.fft.ifft2 "scipy.fft.ifft2")(x[, s, axes, norm, overwrite_x, ...])
    | 计算二维离散傅立叶逆变换。 |'
- en: '| [`fftn`](generated/scipy.fft.fftn.html#scipy.fft.fftn "scipy.fft.fftn")(x[, s, axes, norm, overwrite_x, ...])
    | Compute the N-D discrete Fourier Transform. |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [`fftn`](generated/scipy.fft.fftn.html#scipy.fft.fftn "scipy.fft.fftn")(x[, s, axes, norm, overwrite_x, ...])
    | 计算N维离散傅立叶变换。 |'
- en: '| [`ifftn`](generated/scipy.fft.ifftn.html#scipy.fft.ifftn "scipy.fft.ifftn")(x[, s, axes, norm, overwrite_x, ...])
    | Compute the N-D inverse discrete Fourier Transform. |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| [`ifftn`](generated/scipy.fft.ifftn.html#scipy.fft.ifftn "scipy.fft.ifftn")(x[, s, axes, norm, overwrite_x, ...])
    | 计算N维离散傅立叶逆变换。 |'
- en: '| [`rfft`](generated/scipy.fft.rfft.html#scipy.fft.rfft "scipy.fft.rfft")(x[, n, axis, norm, overwrite_x, ...])
    | Compute the 1-D discrete Fourier Transform for real input. |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| [`rfft`](generated/scipy.fft.rfft.html#scipy.fft.rfft "scipy.fft.rfft")(x[, n, axis, norm, overwrite_x, ...])
    | 计算实输入的一维离散傅立叶变换。 |'
- en: '| [`irfft`](generated/scipy.fft.irfft.html#scipy.fft.irfft "scipy.fft.irfft")(x[, n, axis, norm, overwrite_x, ...])
    | Computes the inverse of [`rfft`](generated/scipy.fft.rfft.html#scipy.fft.rfft
    "scipy.fft.rfft"). |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| [`irfft`](generated/scipy.fft.irfft.html#scipy.fft.irfft "scipy.fft.irfft")(x[, n, axis, norm, overwrite_x, ...])
    | 计算[`rfft`](generated/scipy.fft.rfft.html#scipy.fft.rfft "scipy.fft.rfft")的逆变换。
    |'
- en: '| [`rfft2`](generated/scipy.fft.rfft2.html#scipy.fft.rfft2 "scipy.fft.rfft2")(x[, s, axes, norm, overwrite_x, ...])
    | Compute the 2-D FFT of a real array. |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| [`rfft2`](generated/scipy.fft.rfft2.html#scipy.fft.rfft2 "scipy.fft.rfft2")(x[, s, axes, norm, overwrite_x, ...])
    | 计算实数组的二维傅立叶变换。 |'
- en: '| [`irfft2`](generated/scipy.fft.irfft2.html#scipy.fft.irfft2 "scipy.fft.irfft2")(x[, s, axes, norm, overwrite_x, ...])
    | Computes the inverse of [`rfft2`](generated/scipy.fft.rfft2.html#scipy.fft.rfft2
    "scipy.fft.rfft2") |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| [`irfft2`](generated/scipy.fft.irfft2.html#scipy.fft.irfft2 "scipy.fft.irfft2")(x[, s, axes, norm, overwrite_x, ...])
    | 计算[`rfft2`](generated/scipy.fft.rfft2.html#scipy.fft.rfft2 "scipy.fft.rfft2")的逆变换
    |'
- en: '| [`rfftn`](generated/scipy.fft.rfftn.html#scipy.fft.rfftn "scipy.fft.rfftn")(x[, s, axes, norm, overwrite_x, ...])
    | Compute the N-D discrete Fourier Transform for real input. |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| [`rfftn`](generated/scipy.fft.rfftn.html#scipy.fft.rfftn "scipy.fft.rfftn")(x[, s, axes, norm, overwrite_x, ...])
    | 计算实输入的N维离散傅立叶变换。 |'
- en: '| [`irfftn`](generated/scipy.fft.irfftn.html#scipy.fft.irfftn "scipy.fft.irfftn")(x[, s, axes, norm, overwrite_x, ...])
    | Computes the inverse of [`rfftn`](generated/scipy.fft.rfftn.html#scipy.fft.rfftn
    "scipy.fft.rfftn") |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [`irfftn`](generated/scipy.fft.irfftn.html#scipy.fft.irfftn "scipy.fft.irfftn")(x[, s, axes, norm, overwrite_x, ...])
    | 计算[`rfftn`](generated/scipy.fft.rfftn.html#scipy.fft.rfftn "scipy.fft.rfftn")的逆变换
    |'
- en: '| [`hfft`](generated/scipy.fft.hfft.html#scipy.fft.hfft "scipy.fft.hfft")(x[, n, axis, norm, overwrite_x, ...])
    | Compute the FFT of a signal that has Hermitian symmetry, i.e., a real spectrum.
    |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| [`hfft`](generated/scipy.fft.hfft.html#scipy.fft.hfft "scipy.fft.hfft")(x[, n, axis, norm, overwrite_x, ...])
    | 计算具有共轭对称性的信号的傅立叶变换，即实谱。 |'
- en: '| [`ihfft`](generated/scipy.fft.ihfft.html#scipy.fft.ihfft "scipy.fft.ihfft")(x[, n, axis, norm, overwrite_x, ...])
    | Compute the inverse FFT of a signal that has Hermitian symmetry. |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [`ihfft`](generated/scipy.fft.ihfft.html#scipy.fft.ihfft "scipy.fft.ihfft")(x[, n, axis, norm, overwrite_x, ...])
    | 计算具有共轭对称性的信号的逆傅立叶变换。 |'
- en: '| [`hfft2`](generated/scipy.fft.hfft2.html#scipy.fft.hfft2 "scipy.fft.hfft2")(x[, s, axes, norm, overwrite_x, ...])
    | Compute the 2-D FFT of a Hermitian complex array. |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [`hfft2`](generated/scipy.fft.hfft2.html#scipy.fft.hfft2 "scipy.fft.hfft2")(x[, s, axes, norm, overwrite_x, ...])
    | 计算共轭复数数组的二维傅立叶变换。 |'
- en: '| [`ihfft2`](generated/scipy.fft.ihfft2.html#scipy.fft.ihfft2 "scipy.fft.ihfft2")(x[, s, axes, norm, overwrite_x, ...])
    | Compute the 2-D inverse FFT of a real spectrum. |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [`ihfft2`](generated/scipy.fft.ihfft2.html#scipy.fft.ihfft2 "scipy.fft.ihfft2")(x[, s, axes, norm, overwrite_x, ...])
    | 计算实谱的二维逆 FFT。 |'
- en: '| [`hfftn`](generated/scipy.fft.hfftn.html#scipy.fft.hfftn "scipy.fft.hfftn")(x[, s, axes, norm, overwrite_x, ...])
    | Compute the N-D FFT of Hermitian symmetric complex input, i.e., a signal with
    a real spectrum. |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [`hfftn`](generated/scipy.fft.hfftn.html#scipy.fft.hfftn "scipy.fft.hfftn")(x[, s, axes, norm, overwrite_x, ...])
    | 计算 Hermite 对称复输入的 N 维 FFT，即具有实谱的信号。 |'
- en: '| [`ihfftn`](generated/scipy.fft.ihfftn.html#scipy.fft.ihfftn "scipy.fft.ihfftn")(x[, s, axes, norm, overwrite_x, ...])
    | Compute the N-D inverse discrete Fourier Transform for a real spectrum. |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`ihfftn`](generated/scipy.fft.ihfftn.html#scipy.fft.ihfftn "scipy.fft.ihfftn")(x[, s, axes, norm, overwrite_x, ...])
    | 计算实谱的 N 维逆离散傅里叶变换。 |'
- en: Discrete Sin and Cosine Transforms (DST and DCT)
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 离散正弦和余弦变换（DST和DCT）
- en: '| [`dct`](generated/scipy.fft.dct.html#scipy.fft.dct "scipy.fft.dct")(x[, type, n, axis, norm, overwrite_x, ...])
    | Return the Discrete Cosine Transform of arbitrary type sequence x. |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [`dct`](generated/scipy.fft.dct.html#scipy.fft.dct "scipy.fft.dct")(x[, type, n, axis, norm, overwrite_x, ...])
    | 返回任意类型序列 x 的离散余弦变换。 |'
- en: '| [`idct`](generated/scipy.fft.idct.html#scipy.fft.idct "scipy.fft.idct")(x[, type, n, axis, norm, overwrite_x, ...])
    | Return the Inverse Discrete Cosine Transform of an arbitrary type sequence.
    |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [`idct`](generated/scipy.fft.idct.html#scipy.fft.idct "scipy.fft.idct")(x[, type, n, axis, norm, overwrite_x, ...])
    | 返回任意类型序列的离散余弦逆变换。 |'
- en: '| [`dctn`](generated/scipy.fft.dctn.html#scipy.fft.dctn "scipy.fft.dctn")(x[, type, s, axes, norm, overwrite_x, ...])
    | Return multidimensional Discrete Cosine Transform along the specified axes.
    |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [`dctn`](generated/scipy.fft.dctn.html#scipy.fft.dctn "scipy.fft.dctn")(x[, type, s, axes, norm, overwrite_x, ...])
    | 返回沿指定轴的多维离散余弦变换。 |'
- en: '| [`idctn`](generated/scipy.fft.idctn.html#scipy.fft.idctn "scipy.fft.idctn")(x[, type, s, axes, norm, overwrite_x, ...])
    | Return multidimensional Inverse Discrete Cosine Transform along the specified
    axes. |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [`idctn`](generated/scipy.fft.idctn.html#scipy.fft.idctn "scipy.fft.idctn")(x[, type, s, axes, norm, overwrite_x, ...])
    | 返回沿指定轴的多维离散余弦逆变换。 |'
- en: '| [`dst`](generated/scipy.fft.dst.html#scipy.fft.dst "scipy.fft.dst")(x[, type, n, axis, norm, overwrite_x, ...])
    | Return the Discrete Sine Transform of arbitrary type sequence x. |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [`dst`](generated/scipy.fft.dst.html#scipy.fft.dst "scipy.fft.dst")(x[, type, n, axis, norm, overwrite_x, ...])
    | 返回任意类型序列 x 的离散正弦变换。 |'
- en: '| [`idst`](generated/scipy.fft.idst.html#scipy.fft.idst "scipy.fft.idst")(x[, type, n, axis, norm, overwrite_x, ...])
    | Return the Inverse Discrete Sine Transform of an arbitrary type sequence. |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| [`idst`](generated/scipy.fft.idst.html#scipy.fft.idst "scipy.fft.idst")(x[, type, n, axis, norm, overwrite_x, ...])
    | 返回任意类型序列的离散正弦逆变换。 |'
- en: '| [`dstn`](generated/scipy.fft.dstn.html#scipy.fft.dstn "scipy.fft.dstn")(x[, type, s, axes, norm, overwrite_x, ...])
    | Return multidimensional Discrete Sine Transform along the specified axes. |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [`dstn`](generated/scipy.fft.dstn.html#scipy.fft.dstn "scipy.fft.dstn")(x[, type, s, axes, norm, overwrite_x, ...])
    | 返回沿指定轴的多维离散正弦变换。 |'
- en: '| [`idstn`](generated/scipy.fft.idstn.html#scipy.fft.idstn "scipy.fft.idstn")(x[, type, s, axes, norm, overwrite_x, ...])
    | Return multidimensional Inverse Discrete Sine Transform along the specified
    axes. |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [`idstn`](generated/scipy.fft.idstn.html#scipy.fft.idstn "scipy.fft.idstn")(x[, type, s, axes, norm, overwrite_x, ...])
    | 返回沿指定轴的多维离散正弦逆变换。 |'
- en: Fast Hankel Transforms
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 快速 Hankel 变换
- en: '| [`fht`](generated/scipy.fft.fht.html#scipy.fft.fht "scipy.fft.fht")(a, dln, mu[, offset, bias])
    | Compute the fast Hankel transform. |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [`fht`](generated/scipy.fft.fht.html#scipy.fft.fht "scipy.fft.fht")(a, dln, mu[, offset, bias])
    | 计算快速 Hankel 变换。 |'
- en: '| [`ifht`](generated/scipy.fft.ifht.html#scipy.fft.ifht "scipy.fft.ifht")(A, dln, mu[, offset, bias])
    | Compute the inverse fast Hankel transform. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`ifht`](generated/scipy.fft.ifht.html#scipy.fft.ifht "scipy.fft.ifht")(A, dln, mu[, offset, bias])
    | 计算逆快速 Hankel 变换。 |'
- en: Helper functions
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 辅助函数
- en: '| [`fftshift`](generated/scipy.fft.fftshift.html#scipy.fft.fftshift "scipy.fft.fftshift")(x[, axes])
    | Shift the zero-frequency component to the center of the spectrum. |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [`fftshift`](generated/scipy.fft.fftshift.html#scipy.fft.fftshift "scipy.fft.fftshift")(x[, axes])
    | 将零频率分量移至频谱中心。 |'
- en: '| [`ifftshift`](generated/scipy.fft.ifftshift.html#scipy.fft.ifftshift "scipy.fft.ifftshift")(x[, axes])
    | The inverse of [`fftshift`](generated/scipy.fft.fftshift.html#scipy.fft.fftshift
    "scipy.fft.fftshift"). |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| [`ifftshift`](generated/scipy.fft.ifftshift.html#scipy.fft.ifftshift "scipy.fft.ifftshift")(x[, axes])
    | [`fftshift`](generated/scipy.fft.fftshift.html#scipy.fft.fftshift "scipy.fft.fftshift")
    的逆操作。 |'
- en: '| [`fftfreq`](generated/scipy.fft.fftfreq.html#scipy.fft.fftfreq "scipy.fft.fftfreq")(n[, d, xp, device])
    | Return the Discrete Fourier Transform sample frequencies. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '[`fftfreq`](generated/scipy.fft.fftfreq.html#scipy.fft.fftfreq "scipy.fft.fftfreq")(n[, d, xp, device])
    | 返回离散傅里叶变换的采样频率。 '
- en: '| [`rfftfreq`](generated/scipy.fft.rfftfreq.html#scipy.fft.rfftfreq "scipy.fft.rfftfreq")(n[, d, xp, device])
    | Return the Discrete Fourier Transform sample frequencies (for usage with rfft,
    irfft). |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '[`rfftfreq`](generated/scipy.fft.rfftfreq.html#scipy.fft.rfftfreq "scipy.fft.rfftfreq")(n[, d, xp, device])
    | 返回离散傅里叶变换采样频率（用于 rfft, irfft 的使用）。 '
- en: '| [`fhtoffset`](generated/scipy.fft.fhtoffset.html#scipy.fft.fhtoffset "scipy.fft.fhtoffset")(dln, mu[, initial, bias])
    | Return optimal offset for a fast Hankel transform. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '[`fhtoffset`](generated/scipy.fft.fhtoffset.html#scipy.fft.fhtoffset "scipy.fft.fhtoffset")(dln, mu[, initial, bias])
    | 返回快速 Hankel 变换的最佳偏移量。 '
- en: '| [`next_fast_len`](generated/scipy.fft.next_fast_len.html#scipy.fft.next_fast_len
    "scipy.fft.next_fast_len")(target[, real]) | Find the next fast size of input
    data to `fft`, for zero-padding, etc. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '[`next_fast_len`](generated/scipy.fft.next_fast_len.html#scipy.fft.next_fast_len
    "scipy.fft.next_fast_len")(target[, real]) | 查找输入数据到 `fft` 的下一个快速大小，用于零填充等。 '
- en: '| [`set_workers`](generated/scipy.fft.set_workers.html#scipy.fft.set_workers
    "scipy.fft.set_workers")(workers) | Context manager for the default number of
    workers used in [`scipy.fft`](#module-scipy.fft "scipy.fft") |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '[`set_workers`](generated/scipy.fft.set_workers.html#scipy.fft.set_workers
    "scipy.fft.set_workers")(workers) | 默认工作线程数的上下文管理器，用于 [`scipy.fft`](#module-scipy.fft
    "scipy.fft")。 '
- en: '| [`get_workers`](generated/scipy.fft.get_workers.html#scipy.fft.get_workers
    "scipy.fft.get_workers")() | Returns the default number of workers within the
    current context |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '[`get_workers`](generated/scipy.fft.get_workers.html#scipy.fft.get_workers
    "scipy.fft.get_workers")() | 返回当前上下文中默认的工作线程数。 '
- en: Backend control
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 后端控制
- en: '| [`set_backend`](generated/scipy.fft.set_backend.html#scipy.fft.set_backend
    "scipy.fft.set_backend")(backend[, coerce, only]) | Context manager to set the
    backend within a fixed scope. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '[`set_backend`](generated/scipy.fft.set_backend.html#scipy.fft.set_backend
    "scipy.fft.set_backend")(backend[, coerce, only]) | 在固定范围内设置后端的上下文管理器。 '
- en: '| [`skip_backend`](generated/scipy.fft.skip_backend.html#scipy.fft.skip_backend
    "scipy.fft.skip_backend")(backend) | Context manager to skip a backend within
    a fixed scope. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '[`skip_backend`](generated/scipy.fft.skip_backend.html#scipy.fft.skip_backend
    "scipy.fft.skip_backend")(backend) | 在固定范围内跳过某个后端的上下文管理器。 '
- en: '| [`set_global_backend`](generated/scipy.fft.set_global_backend.html#scipy.fft.set_global_backend
    "scipy.fft.set_global_backend")(backend[, coerce, only, ...]) | Sets the global
    fft backend |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '[`set_global_backend`](generated/scipy.fft.set_global_backend.html#scipy.fft.set_global_backend
    "scipy.fft.set_global_backend")(backend[, coerce, only, ...]) | 设置全局 fft 后端。 '
- en: '| [`register_backend`](generated/scipy.fft.register_backend.html#scipy.fft.register_backend
    "scipy.fft.register_backend")(backend) | Register a backend for permanent use.
    |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '[`register_backend`](generated/scipy.fft.register_backend.html#scipy.fft.register_backend
    "scipy.fft.register_backend")(backend) | 注册永久使用的后端。 '
