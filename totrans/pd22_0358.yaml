- en: pandas.DataFrame.nsmallest
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.nsmallest.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.nsmallest.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return the first n rows ordered by columns in ascending order.
  prefs: []
  type: TYPE_NORMAL
- en: Return the first n rows with the smallest values in columns, in ascending order.
    The columns that are not specified are returned as well, but not used for ordering.
  prefs: []
  type: TYPE_NORMAL
- en: This method is equivalent to `df.sort_values(columns, ascending=True).head(n)`,
    but more performant.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**n**int'
  prefs: []
  type: TYPE_NORMAL
- en: Number of items to retrieve.
  prefs: []
  type: TYPE_NORMAL
- en: '**columns**list or str'
  prefs: []
  type: TYPE_NORMAL
- en: Column name or names to order by.
  prefs: []
  type: TYPE_NORMAL
- en: '**keep**{‘first’, ‘last’, ‘all’}, default ‘first’'
  prefs: []
  type: TYPE_NORMAL
- en: 'Where there are duplicate values:'
  prefs: []
  type: TYPE_NORMAL
- en: '`first` : take the first occurrence.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`last` : take the last occurrence.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`all` : keep all the ties of the largest item even if it means selecting more
    than `n` items.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.nlargest`](pandas.DataFrame.nlargest.html#pandas.DataFrame.nlargest
    "pandas.DataFrame.nlargest")'
  prefs: []
  type: TYPE_NORMAL
- en: Return the first n rows ordered by columns in descending order.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.sort_values`](pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values")'
  prefs: []
  type: TYPE_NORMAL
- en: Sort DataFrame by the values.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.head`](pandas.DataFrame.head.html#pandas.DataFrame.head "pandas.DataFrame.head")'
  prefs: []
  type: TYPE_NORMAL
- en: Return the first n rows without re-ordering.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: In the following example, we will use `nsmallest` to select the three rows having
    the smallest values in column “population”.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'When using `keep=''last''`, ties are resolved in reverse order:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: When using `keep='all'`, the number of element kept can go beyond `n` if there
    are duplicate values for the largest element, all the ties are kept.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'However, `nsmallest` does not keep `n` distinct smallest elements:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: To order by the smallest values in column “population” and then “GDP”, we can
    specify multiple columns like in the next example.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
