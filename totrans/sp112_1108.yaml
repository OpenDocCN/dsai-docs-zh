- en: scipy.stats.rv_histogram
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.rv_histogram.html#scipy.stats.rv_histogram](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.rv_histogram.html#scipy.stats.rv_histogram)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Generates a distribution given by a histogram. This is useful to generate a
    template distribution from a binned datasample.
  prefs: []
  type: TYPE_NORMAL
- en: As a subclass of the [`rv_continuous`](scipy.stats.rv_continuous.html#scipy.stats.rv_continuous
    "scipy.stats.rv_continuous") class, [`rv_histogram`](#scipy.stats.rv_histogram
    "scipy.stats.rv_histogram") inherits from it a collection of generic methods (see
    [`rv_continuous`](scipy.stats.rv_continuous.html#scipy.stats.rv_continuous "scipy.stats.rv_continuous")
    for the full list), and implements them based on the properties of the provided
    binned datasample.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**histogram**tuple of array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Tuple containing two array_like objects. The first containing the content of
    n bins, the second containing the (n+1) bin boundaries. In particular, the return
    value of [`numpy.histogram`](https://numpy.org/devdocs/reference/generated/numpy.histogram.html#numpy.histogram
    "(in NumPy v2.0.dev0)") is accepted.
  prefs: []
  type: TYPE_NORMAL
- en: '**density**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If False, assumes the histogram is proportional to counts per bin; otherwise,
    assumes it is proportional to a density. For constant bin widths, these are equivalent,
    but the distinction is important when bin widths vary (see Notes). If None (default),
    sets `density=True` for backwards compatibility, but warns if the bin widths are
    variable. Set *density* explicitly to silence the warning.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.10.0.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: When a histogram has unequal bin widths, there is a distinction between histograms
    that are proportional to counts per bin and histograms that are proportional to
    probability density over a bin. If [`numpy.histogram`](https://numpy.org/devdocs/reference/generated/numpy.histogram.html#numpy.histogram
    "(in NumPy v2.0.dev0)") is called with its default `density=False`, the resulting
    histogram is the number of counts per bin, so `density=False` should be passed
    to [`rv_histogram`](#scipy.stats.rv_histogram "scipy.stats.rv_histogram"). If
    [`numpy.histogram`](https://numpy.org/devdocs/reference/generated/numpy.histogram.html#numpy.histogram
    "(in NumPy v2.0.dev0)") is called with `density=True`, the resulting histogram
    is in terms of probability density, so `density=True` should be passed to [`rv_histogram`](#scipy.stats.rv_histogram
    "scipy.stats.rv_histogram"). To avoid warnings, always pass `density` explicitly
    when the input histogram has unequal bin widths.
  prefs: []
  type: TYPE_NORMAL
- en: There are no additional shape parameters except for the loc and scale. The pdf
    is defined as a stepwise function from the provided histogram. The cdf is a linear
    interpolation of the pdf.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.19.0.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Create a scipy.stats distribution from a numpy histogram
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Behaves like an ordinary scipy rv_continuous distribution
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: PDF is zero above (below) the highest (lowest) bin of the histogram, defined
    by the max (min) of the original dataset
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: PDF and CDF follow the histogram
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-stats-rv_histogram-1.png](../Images/9dc55f25fcc58a4a45d46eed700939da.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[`random_state`](scipy.stats.rv_histogram.random_state.html#scipy.stats.rv_histogram.random_state
    "scipy.stats.rv_histogram.random_state")'
  prefs: []
  type: TYPE_NORMAL
- en: Get or set the generator object for generating random variates.
  prefs: []
  type: TYPE_NORMAL
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`__call__`](scipy.stats.rv_histogram.__call__.html#scipy.stats.rv_histogram.__call__
    "scipy.stats.rv_histogram.__call__")(*args, **kwds) | Freeze the distribution
    for the given arguments. |'
  prefs: []
  type: TYPE_TB
- en: '| [`cdf`](scipy.stats.rv_histogram.cdf.html#scipy.stats.rv_histogram.cdf "scipy.stats.rv_histogram.cdf")(x, *args, **kwds)
    | Cumulative distribution function of the given RV. |'
  prefs: []
  type: TYPE_TB
- en: '| [`entropy`](scipy.stats.rv_histogram.entropy.html#scipy.stats.rv_histogram.entropy
    "scipy.stats.rv_histogram.entropy")(*args, **kwds) | Differential entropy of the
    RV. |'
  prefs: []
  type: TYPE_TB
- en: '| [`expect`](scipy.stats.rv_histogram.expect.html#scipy.stats.rv_histogram.expect
    "scipy.stats.rv_histogram.expect")([func, args, loc, scale, lb, ub, ...]) | Calculate
    expected value of a function with respect to the distribution by numerical integration.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`fit`](scipy.stats.rv_histogram.fit.html#scipy.stats.rv_histogram.fit "scipy.stats.rv_histogram.fit")(data, *args, **kwds)
    | Return estimates of shape (if applicable), location, and scale parameters from
    data. |'
  prefs: []
  type: TYPE_TB
- en: '| [`fit_loc_scale`](scipy.stats.rv_histogram.fit_loc_scale.html#scipy.stats.rv_histogram.fit_loc_scale
    "scipy.stats.rv_histogram.fit_loc_scale")(data, *args) | Estimate loc and scale
    parameters from data using 1st and 2nd moments. |'
  prefs: []
  type: TYPE_TB
- en: '| [`freeze`](scipy.stats.rv_histogram.freeze.html#scipy.stats.rv_histogram.freeze
    "scipy.stats.rv_histogram.freeze")(*args, **kwds) | Freeze the distribution for
    the given arguments. |'
  prefs: []
  type: TYPE_TB
- en: '| [`interval`](scipy.stats.rv_histogram.interval.html#scipy.stats.rv_histogram.interval
    "scipy.stats.rv_histogram.interval")(confidence, *args, **kwds) | Confidence interval
    with equal areas around the median. |'
  prefs: []
  type: TYPE_TB
- en: '| [`isf`](scipy.stats.rv_histogram.isf.html#scipy.stats.rv_histogram.isf "scipy.stats.rv_histogram.isf")(q, *args, **kwds)
    | Inverse survival function (inverse of [`sf`](scipy.stats.rv_histogram.sf.html#scipy.stats.rv_histogram.sf
    "scipy.stats.rv_histogram.sf")) at q of the given RV. |'
  prefs: []
  type: TYPE_TB
- en: '| [`logcdf`](scipy.stats.rv_histogram.logcdf.html#scipy.stats.rv_histogram.logcdf
    "scipy.stats.rv_histogram.logcdf")(x, *args, **kwds) | Log of the cumulative distribution
    function at x of the given RV. |'
  prefs: []
  type: TYPE_TB
- en: '| [`logpdf`](scipy.stats.rv_histogram.logpdf.html#scipy.stats.rv_histogram.logpdf
    "scipy.stats.rv_histogram.logpdf")(x, *args, **kwds) | Log of the probability
    density function at x of the given RV. |'
  prefs: []
  type: TYPE_TB
- en: '| [`logsf`](scipy.stats.rv_histogram.logsf.html#scipy.stats.rv_histogram.logsf
    "scipy.stats.rv_histogram.logsf")(x, *args, **kwds) | Log of the survival function
    of the given RV. |'
  prefs: []
  type: TYPE_TB
- en: '| [`mean`](scipy.stats.rv_histogram.mean.html#scipy.stats.rv_histogram.mean
    "scipy.stats.rv_histogram.mean")(*args, **kwds) | Mean of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| [`median`](scipy.stats.rv_histogram.median.html#scipy.stats.rv_histogram.median
    "scipy.stats.rv_histogram.median")(*args, **kwds) | Median of the distribution.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`moment`](scipy.stats.rv_histogram.moment.html#scipy.stats.rv_histogram.moment
    "scipy.stats.rv_histogram.moment")(order, *args, **kwds) | non-central moment
    of distribution of specified order. |'
  prefs: []
  type: TYPE_TB
- en: '| [`nnlf`](scipy.stats.rv_histogram.nnlf.html#scipy.stats.rv_histogram.nnlf
    "scipy.stats.rv_histogram.nnlf")(theta, x) | Negative loglikelihood function.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`pdf`](scipy.stats.rv_histogram.pdf.html#scipy.stats.rv_histogram.pdf "scipy.stats.rv_histogram.pdf")(x, *args, **kwds)
    | Probability density function at x of the given RV. |'
  prefs: []
  type: TYPE_TB
- en: '| [`ppf`](scipy.stats.rv_histogram.ppf.html#scipy.stats.rv_histogram.ppf "scipy.stats.rv_histogram.ppf")(q, *args, **kwds)
    | Percent point function (inverse of [`cdf`](scipy.stats.rv_histogram.cdf.html#scipy.stats.rv_histogram.cdf
    "scipy.stats.rv_histogram.cdf")) at q of the given RV. |'
  prefs: []
  type: TYPE_TB
- en: '| [`rvs`](scipy.stats.rv_histogram.rvs.html#scipy.stats.rv_histogram.rvs "scipy.stats.rv_histogram.rvs")(*args, **kwds)
    | Random variates of given type. |'
  prefs: []
  type: TYPE_TB
- en: '| [`sf`](scipy.stats.rv_histogram.sf.html#scipy.stats.rv_histogram.sf "scipy.stats.rv_histogram.sf")(x, *args, **kwds)
    | Survival function (1 - [`cdf`](scipy.stats.rv_histogram.cdf.html#scipy.stats.rv_histogram.cdf
    "scipy.stats.rv_histogram.cdf")) at x of the given RV. |'
  prefs: []
  type: TYPE_TB
- en: '| [`stats`](scipy.stats.rv_histogram.stats.html#scipy.stats.rv_histogram.stats
    "scipy.stats.rv_histogram.stats")(*args, **kwds) | Some statistics of the given
    RV. |'
  prefs: []
  type: TYPE_TB
- en: '| [`std`](scipy.stats.rv_histogram.std.html#scipy.stats.rv_histogram.std "scipy.stats.rv_histogram.std")(*args, **kwds)
    | Standard deviation of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| [`support`](scipy.stats.rv_histogram.support.html#scipy.stats.rv_histogram.support
    "scipy.stats.rv_histogram.support")(*args, **kwargs) | Support of the distribution.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`var`](scipy.stats.rv_histogram.var.html#scipy.stats.rv_histogram.var "scipy.stats.rv_histogram.var")(*args, **kwds)
    | Variance of the distribution. |'
  prefs: []
  type: TYPE_TB
