- en: numpy.argsort
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.argsort.html](https://numpy.org/doc/1.26/reference/generated/numpy.argsort.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Returns the indices that would sort an array.
  prefs: []
  type: TYPE_NORMAL
- en: Perform an indirect sort along the given axis using the algorithm specified
    by the *kind* keyword. It returns an array of indices of the same shape as *a*
    that index data along the given axis in sorted order.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Array to sort.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int or None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axis along which to sort. The default is -1 (the last axis). If None, the flattened
    array is used.
  prefs: []
  type: TYPE_NORMAL
- en: '**kind**{‘quicksort’, ‘mergesort’, ‘heapsort’, ‘stable’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Sorting algorithm. The default is ‘quicksort’. Note that both ‘stable’ and ‘mergesort’
    use timsort under the covers and, in general, the actual implementation will vary
    with data type. The ‘mergesort’ option is retained for backwards compatibility.
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 1.15.0.: The ‘stable’ option was added.'
  prefs: []
  type: TYPE_NORMAL
- en: '**order**str or list of str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: When *a* is an array with fields defined, this argument specifies which fields
    to compare first, second, etc. A single field can be specified as a string, and
    not all fields need be specified, but unspecified fields will still be used, in
    the order in which they come up in the dtype, to break ties.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**index_array**ndarray, int'
  prefs: []
  type: TYPE_NORMAL
- en: Array of indices that sort *a* along the specified *axis*. If *a* is one-dimensional,
    `a[index_array]` yields a sorted *a*. More generally, `np.take_along_axis(a, index_array,
    axis=axis)` always yields the sorted *a*, irrespective of dimensionality.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sort`](numpy.sort.html#numpy.sort "numpy.sort")'
  prefs: []
  type: TYPE_NORMAL
- en: Describes sorting algorithms used.
  prefs: []
  type: TYPE_NORMAL
- en: '[`lexsort`](numpy.lexsort.html#numpy.lexsort "numpy.lexsort")'
  prefs: []
  type: TYPE_NORMAL
- en: Indirect stable sort with multiple keys.
  prefs: []
  type: TYPE_NORMAL
- en: '[`ndarray.sort`](numpy.ndarray.sort.html#numpy.ndarray.sort "numpy.ndarray.sort")'
  prefs: []
  type: TYPE_NORMAL
- en: Inplace sort.
  prefs: []
  type: TYPE_NORMAL
- en: '[`argpartition`](numpy.argpartition.html#numpy.argpartition "numpy.argpartition")'
  prefs: []
  type: TYPE_NORMAL
- en: Indirect partial sort.
  prefs: []
  type: TYPE_NORMAL
- en: '[`take_along_axis`](numpy.take_along_axis.html#numpy.take_along_axis "numpy.take_along_axis")'
  prefs: []
  type: TYPE_NORMAL
- en: Apply `index_array` from argsort to an array as if by calling sort.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: See [`sort`](numpy.sort.html#numpy.sort "numpy.sort") for notes on the different
    sorting algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: As of NumPy 1.4.0 [`argsort`](#numpy.argsort "numpy.argsort") works with real/complex
    arrays containing nan values. The enhanced sort order is documented in [`sort`](numpy.sort.html#numpy.sort
    "numpy.sort").
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'One dimensional array:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Two-dimensional array:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Indices of the sorted elements of a N-dimensional array:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Sorting with keys:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
