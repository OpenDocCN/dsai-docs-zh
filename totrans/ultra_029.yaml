- en: YOLO-NAS
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: YOLO-NAS
- en: 原文：[`docs.ultralytics.com/models/yolo-nas/`](https://docs.ultralytics.com/models/yolo-nas/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[`docs.ultralytics.com/models/yolo-nas/`](https://docs.ultralytics.com/models/yolo-nas/)
- en: Overview
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概述
- en: Developed by Deci AI, YOLO-NAS is a groundbreaking object detection foundational
    model. It is the product of advanced Neural Architecture Search technology, meticulously
    designed to address the limitations of previous YOLO models. With significant
    improvements in quantization support and accuracy-latency trade-offs, YOLO-NAS
    represents a major leap in object detection.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 由Deci AI开发，YOLO-NAS是一个开创性的物体检测基础模型。它是先进的神经架构搜索技术的产物，精心设计以解决以往YOLO模型的局限性。通过在量化支持和精度-延迟权衡方面显著改进，YOLO-NAS代表了物体检测领域的重大进步。
- en: '![Model example image](img/58557f3691492a3315aa8e6955c39a23.png) **Overview
    of YOLO-NAS.** YOLO-NAS employs quantization-aware blocks and selective quantization
    for optimal performance. The model, when converted to its INT8 quantized version,
    experiences a minimal precision drop, a significant improvement over other models.
    These advancements culminate in a superior architecture with unprecedented object
    detection capabilities and outstanding performance.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '![模型示例图像](img/58557f3691492a3315aa8e6955c39a23.png) **YOLO-NAS概述。** YOLO-NAS采用量化感知块和选择性量化以实现最佳性能。当转换为其INT8量化版本时，该模型经历了最小的精度下降，远优于其他模型。这些进步使其成为一个具有突出物体检测能力和出色性能的优越架构。'
- en: Key Features
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 主要特点
- en: '**Quantization-Friendly Basic Block:** YOLO-NAS introduces a new basic block
    that is friendly to quantization, addressing one of the significant limitations
    of previous YOLO models.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Quantization-Friendly Basic Block:** YOLO-NAS引入了一种新的基本块，非常适合量化，解决了以往YOLO模型的一个显著限制。'
- en: '**Sophisticated Training and Quantization:** YOLO-NAS leverages advanced training
    schemes and post-training quantization to enhance performance.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Sophisticated Training and Quantization:** YOLO-NAS利用先进的训练方案和后训练量化来增强性能。'
- en: '**AutoNAC Optimization and Pre-training:** YOLO-NAS utilizes AutoNAC optimization
    and is pre-trained on prominent datasets such as COCO, Objects365, and Roboflow
    100\. This pre-training makes it extremely suitable for downstream object detection
    tasks in production environments.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AutoNAC Optimization and Pre-training:** YOLO-NAS利用AutoNAC优化，并在著名数据集如COCO、Objects365和Roboflow
    100上进行了预训练。这种预训练使其在生产环境中非常适合下游目标检测任务。'
- en: Pre-trained Models
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预训练模型
- en: 'Experience the power of next-generation object detection with the pre-trained
    YOLO-NAS models provided by Ultralytics. These models are designed to deliver
    top-notch performance in terms of both speed and accuracy. Choose from a variety
    of options tailored to your specific needs:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 通过Ultralytics提供的预训练YOLO-NAS模型，体验下一代物体检测的强大功能。这些模型旨在在速度和准确性方面提供一流性能。根据您的特定需求选择多种选项：
- en: '| Model | mAP | Latency (ms) |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| 模型 | mAP | 延迟（毫秒） |'
- en: '| --- | --- | --- |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| YOLO-NAS S | 47.5 | 3.21 |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| YOLO-NAS S | 47.5 | 3.21 |'
- en: '| YOLO-NAS M | 51.55 | 5.85 |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| YOLO-NAS M | 51.55 | 5.85 |'
- en: '| YOLO-NAS L | 52.22 | 7.87 |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| YOLO-NAS L | 52.22 | 7.87 |'
- en: '| YOLO-NAS S INT-8 | 47.03 | 2.36 |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| YOLO-NAS S INT-8 | 47.03 | 2.36 |'
- en: '| YOLO-NAS M INT-8 | 51.0 | 3.78 |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| YOLO-NAS M INT-8 | 51.0 | 3.78 |'
- en: '| YOLO-NAS L INT-8 | 52.1 | 4.78 |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| YOLO-NAS L INT-8 | 52.1 | 4.78 |'
- en: Each model variant is designed to offer a balance between Mean Average Precision
    (mAP) and latency, helping you optimize your object detection tasks for both performance
    and speed.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 每个模型变体都旨在在均值平均精度（mAP）和延迟之间提供平衡，帮助您优化目标检测任务的性能和速度。
- en: Usage Examples
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用示例
- en: Ultralytics has made YOLO-NAS models easy to integrate into your Python applications
    via our `ultralytics` python package. The package provides a user-friendly Python
    API to streamline the process.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Ultralytics已经通过我们的`ultralytics` Python包，使YOLO-NAS模型易于集成到您的Python应用程序中。该包提供了一个用户友好的Python
    API，以简化整个过程。
- en: 'The following examples show how to use YOLO-NAS models with the `ultralytics`
    package for inference and validation:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例展示了如何使用`ultralytics`包中的YOLO-NAS模型进行推断和验证：
- en: Inference and Validation Examples
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 推断和验证示例
- en: In this example we validate YOLO-NAS-s on the COCO8 dataset.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们在COCO8数据集上验证了YOLO-NAS-s。
- en: Example
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: This example provides simple inference and validation code for YOLO-NAS. For
    handling inference results see Predict mode. For using YOLO-NAS with additional
    modes see Val and Export. YOLO-NAS on the `ultralytics` package does not support
    training.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例提供了YOLO-NAS的简单推断和验证代码。有关处理推断结果，请参见预测模式。有关使用具有其他模式的YOLO-NAS，请参见Val和Export。`ultralytics`包中的YOLO-NAS不支持训练。
- en: 'PyTorch pretrained `*.pt` models files can be passed to the `NAS()` class to
    create a model instance in python:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 可以将PyTorch预训练的`*.pt`模型文件传递给`NAS()`类以在Python中创建一个模型实例：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'CLI commands are available to directly run the models:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 可以直接运行模型的CLI命令：
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Supported Tasks and Modes
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 支持的任务和模式
- en: 'We offer three variants of the YOLO-NAS models: Small (s), Medium (m), and
    Large (l). Each variant is designed to cater to different computational and performance
    needs:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们提供了YOLO-NAS模型的三个变体：小型（s）、中型（m）和大型（l）。每个变体都设计用于满足不同的计算和性能需求：
- en: '**YOLO-NAS-s**: Optimized for environments where computational resources are
    limited but efficiency is key.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**YOLO-NAS-s**：针对计算资源有限但效率至关重要的环境进行了优化。'
- en: '**YOLO-NAS-m**: Offers a balanced approach, suitable for general-purpose object
    detection with higher accuracy.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**YOLO-NAS-m**：提供了一种平衡的方法，适用于具有更高准确性的通用物体检测。'
- en: '**YOLO-NAS-l**: Tailored for scenarios requiring the highest accuracy, where
    computational resources are less of a constraint.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**YOLO-NAS-l**：为需要最高准确性场景量身定制，计算资源不再是限制因素。'
- en: Below is a detailed overview of each model, including links to their pre-trained
    weights, the tasks they support, and their compatibility with different operating
    modes.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 下面详细介绍了每个模型，包括它们预训练权重的链接、它们支持的任务以及它们与不同操作模式的兼容性。
- en: '| Model Type | Pre-trained Weights | Tasks Supported | Inference | Validation
    | Training | Export |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| 模型类型 | 预训练权重 | 支持的任务 | 推理 | 验证 | 训练 | 导出 |'
- en: '| --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- |'
- en: '| YOLO-NAS-s | [yolo_nas_s.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolo_nas_s.pt)
    | Object Detection | ✅ | ✅ | ❌ | ✅ |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| YOLO-NAS-s | [yolo_nas_s.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolo_nas_s.pt)
    | 物体检测 | ✅ | ✅ | ❌ | ✅ |'
- en: '| YOLO-NAS-m | [yolo_nas_m.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolo_nas_m.pt)
    | Object Detection | ✅ | ✅ | ❌ | ✅ |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| YOLO-NAS-m | [yolo_nas_m.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolo_nas_m.pt)
    | 物体检测 | ✅ | ✅ | ❌ | ✅ |'
- en: '| YOLO-NAS-l | [yolo_nas_l.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolo_nas_l.pt)
    | Object Detection | ✅ | ✅ | ❌ | ✅ |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| YOLO-NAS-l | [yolo_nas_l.pt](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolo_nas_l.pt)
    | 物体检测 | ✅ | ✅ | ❌ | ✅ |'
- en: Citations and Acknowledgements
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引用和致谢
- en: 'If you employ YOLO-NAS in your research or development work, please cite SuperGradients:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在研究或开发工作中使用YOLO-NAS，请引用SuperGradients：
- en: '[PRE2]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We express our gratitude to Deci AI's [SuperGradients](https://github.com/Deci-AI/super-gradients/)
    team for their efforts in creating and maintaining this valuable resource for
    the computer vision community. We believe YOLO-NAS, with its innovative architecture
    and superior object detection capabilities, will become a critical tool for developers
    and researchers alike.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们感谢Deci AI的[SuperGradients](https://github.com/Deci-AI/super-gradients/)团队为计算机视觉社区创造和维护这一宝贵资源所付出的努力。我们相信YOLO-NAS以其创新的架构和卓越的物体检测能力，将成为开发者和研究人员的重要工具。
- en: FAQ
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常见问题解答
- en: What is YOLO-NAS and how does it improve over previous YOLO models?
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: YOLO-NAS是什么，它如何改进之前的YOLO模型？
- en: YOLO-NAS, developed by Deci AI, is a state-of-the-art object detection model
    leveraging advanced Neural Architecture Search (NAS) technology. It addresses
    the limitations of previous YOLO models by introducing features like quantization-friendly
    basic blocks and sophisticated training schemes. This results in significant improvements
    in performance, particularly in environments with limited computational resources.
    YOLO-NAS also supports quantization, maintaining high accuracy even when converted
    to its INT8 version, enhancing its suitability for production environments. For
    more details, see the Overview section.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: YOLO-NAS是由Deci AI开发的一种先进的物体检测模型，利用先进的神经架构搜索（NAS）技术。它通过引入量化友好的基本块和复杂的训练方案来解决之前YOLO模型的限制。这导致在性能上有显著改进，特别是在计算资源有限的环境中。YOLO-NAS还支持量化，在转换为其INT8版本时保持高准确性，增强了其在生产环境中的适用性。有关更多详细信息，请参阅概述部分。
- en: How can I integrate YOLO-NAS models into my Python application?
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何将YOLO-NAS模型集成到我的Python应用程序中？
- en: 'You can easily integrate YOLO-NAS models into your Python application using
    the `ultralytics` package. Here''s a simple example of how to load a pre-trained
    YOLO-NAS model and perform inference:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`ultralytics`包轻松集成YOLO-NAS模型到您的Python应用程序中。这里是一个加载预训练YOLO-NAS模型并进行推断的简单示例：
- en: '[PRE3]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: For more information, refer to the Inference and Validation Examples.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 获取推理和验证示例的更多信息，请参考。
- en: What are the key features of YOLO-NAS and why should I consider using it?
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: YOLO-NAS 的关键特性及其为何值得考虑使用的原因是什么？
- en: 'YOLO-NAS introduces several key features that make it a superior choice for
    object detection tasks:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: YOLO-NAS 引入了几个关键特性，使其成为对象检测任务的优选：
- en: '**Quantization-Friendly Basic Block:** Enhanced architecture that improves
    model performance with minimal precision drop post quantization.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**量化友好的基本块：**增强架构，在量化后最小化精度损失的同时提高模型性能。'
- en: '**Sophisticated Training and Quantization:** Employs advanced training schemes
    and post-training quantization techniques.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**精细化训练和量化：**采用先进的训练方案和训练后量化技术。'
- en: '**AutoNAC Optimization and Pre-training:** Utilizes AutoNAC optimization and
    is pre-trained on prominent datasets like COCO, Objects365, and Roboflow 100.
    These features contribute to its high accuracy, efficient performance, and suitability
    for deployment in production environments. Learn more in the Key Features section.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AutoNAC 优化和预训练：**利用 AutoNAC 优化并预训练于 COCO、Objects365 和 Roboflow 100 等知名数据集。这些特性提高了其在高精度、高效性能及适合生产环境部署方面的表现。详细了解请参考关键特性部分。'
- en: Which tasks and modes are supported by YOLO-NAS models?
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: YOLO-NAS 模型支持哪些任务和模式？
- en: YOLO-NAS models support various object detection tasks and modes such as inference,
    validation, and export. They do not support training. The supported models include
    YOLO-NAS-s, YOLO-NAS-m, and YOLO-NAS-l, each tailored to different computational
    capacities and performance needs. For a detailed overview, refer to the Supported
    Tasks and Modes section.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: YOLO-NAS 模型支持各种对象检测任务和模式，如推理、验证和导出。它们不支持训练。支持的模型包括 YOLO-NAS-s、YOLO-NAS-m 和 YOLO-NAS-l，每个模型都针对不同的计算能力和性能需求进行了优化。详细概述请参考支持的任务和模式部分。
- en: Are there pre-trained YOLO-NAS models available and how do I access them?
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 是否有预训练的 YOLO-NAS 模型可用，如何访问它们？
- en: 'Yes, Ultralytics provides pre-trained YOLO-NAS models that you can access directly.
    These models are pre-trained on datasets like COCO, ensuring high performance
    in terms of both speed and accuracy. You can download these models using the links
    provided in the Pre-trained Models section. Here are some examples:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，Ultralytics 提供了预训练的 YOLO-NAS 模型，您可以直接访问。这些模型在诸如 COCO 等数据集上进行了预训练，保证了在速度和准确性方面的高性能。您可以通过预训练模型部分提供的链接下载这些模型。以下是一些示例：
- en: '[YOLO-NAS-s](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolo_nas_s.pt)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[YOLO-NAS-s](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolo_nas_s.pt)'
- en: '[YOLO-NAS-m](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolo_nas_m.pt)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[YOLO-NAS-m](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolo_nas_m.pt)'
- en: '[YOLO-NAS-l](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolo_nas_l.pt)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[YOLO-NAS-l](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolo_nas_l.pt)'
