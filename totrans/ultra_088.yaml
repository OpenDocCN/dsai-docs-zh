- en: Speed Estimation using Ultralytics YOLOv8 ðŸš€
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: åŽŸæ–‡ï¼š[`docs.ultralytics.com/guides/speed-estimation/`](https://docs.ultralytics.com/guides/speed-estimation/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: What is Speed Estimation?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Speed estimation](https://www.ultralytics.com/blog/ultralytics-yolov8-for-speed-estimation-in-computer-vision-projects)
    is the process of calculating the rate of movement of an object within a given
    context, often employed in computer vision applications. Using [Ultralytics YOLOv8](https://github.com/ultralytics/ultralytics/)
    you can now calculate the speed of object using object tracking alongside distance
    and time data, crucial for tasks like traffic and surveillance. The accuracy of
    speed estimation directly influences the efficiency and reliability of various
    applications, making it a key component in the advancement of intelligent systems
    and real-time decision-making processes.'
  prefs: []
  type: TYPE_NORMAL
- en: '[`www.youtube.com/embed/rCggzXRRSRo`](https://www.youtube.com/embed/rCggzXRRSRo)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Watch:** Speed Estimation using Ultralytics YOLOv8'
  prefs: []
  type: TYPE_NORMAL
- en: Check Out Our Blog
  prefs: []
  type: TYPE_NORMAL
- en: 'For deeper insights into speed estimation, check out our blog post: [Ultralytics
    YOLOv8 for Speed Estimation in Computer Vision Projects](https://www.ultralytics.com/blog/ultralytics-yolov8-for-speed-estimation-in-computer-vision-projects)'
  prefs: []
  type: TYPE_NORMAL
- en: Advantages of Speed Estimation?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Efficient Traffic Control:** Accurate speed estimation aids in managing traffic
    flow, enhancing safety, and reducing congestion on roadways.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Precise Autonomous Navigation:** In autonomous systems like self-driving
    cars, reliable speed estimation ensures safe and accurate vehicle navigation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Enhanced Surveillance Security:** Speed estimation in surveillance analytics
    helps identify unusual behaviors or potential threats, improving the effectiveness
    of security measures.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Real World Applications
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| Transportation | Transportation |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| ![Speed Estimation on Road using Ultralytics YOLOv8](img/7443c79357e6d19107820f7bced00241.png)
    | ![Speed Estimation on Bridge using Ultralytics YOLOv8](img/b74c8f9b19ff47e0b87fc173a600c844.png)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Speed Estimation on Road using Ultralytics YOLOv8 | Speed Estimation on Bridge
    using Ultralytics YOLOv8 |'
  prefs: []
  type: TYPE_TB
- en: Speed Estimation using YOLOv8 Example
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: <details class="warning" open="open"><summary>Speed is Estimate</summary>
  prefs: []
  type: TYPE_NORMAL
- en: Speed will be an estimate and may not be completely accurate. Additionally,
    the estimation can vary depending on GPU speed.</details>
  prefs: []
  type: TYPE_NORMAL
- en: Arguments `SpeedEstimator`
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| Name | Type | Default | Description |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `names` | `dict` | `None` | Dictionary of class names. |'
  prefs: []
  type: TYPE_TB
- en: '| `reg_pts` | `list` | `[(20, 400), (1260, 400)]` | List of region points for
    speed estimation. |'
  prefs: []
  type: TYPE_TB
- en: '| `view_img` | `bool` | `False` | Whether to display the image with annotations.
    |'
  prefs: []
  type: TYPE_TB
- en: '| `line_thickness` | `int` | `2` | Thickness of the lines for drawing boxes
    and tracks. |'
  prefs: []
  type: TYPE_TB
- en: '| `region_thickness` | `int` | `5` | Thickness of the region lines. |'
  prefs: []
  type: TYPE_TB
- en: '| `spdl_dist_thresh` | `int` | `10` | Distance threshold for speed calculation.
    |'
  prefs: []
  type: TYPE_TB
- en: Arguments `model.track`
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| Name | Type | Default | Description |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `source` | `im0` | `None` | source directory for images or videos |'
  prefs: []
  type: TYPE_TB
- en: '| `persist` | `bool` | `False` | persisting tracks between frames |'
  prefs: []
  type: TYPE_TB
- en: '| `tracker` | `str` | `botsort.yaml` | Tracking method ''bytetrack'' or ''botsort''
    |'
  prefs: []
  type: TYPE_TB
- en: '| `conf` | `float` | `0.3` | Confidence Threshold |'
  prefs: []
  type: TYPE_TB
- en: '| `iou` | `float` | `0.5` | IOU Threshold |'
  prefs: []
  type: TYPE_TB
- en: '| `classes` | `list` | `None` | filter results by class, i.e. classes=0, or
    classes=[0,2,3] |'
  prefs: []
  type: TYPE_TB
- en: '| `verbose` | `bool` | `True` | Display the object tracking results |'
  prefs: []
  type: TYPE_TB
- en: FAQ
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: How do I estimate object speed using Ultralytics YOLOv8?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Estimating object speed with Ultralytics YOLOv8 involves combining object detection
    and tracking techniques. First, you need to detect objects in each frame using
    the YOLOv8 model. Then, track these objects across frames to calculate their movement
    over time. Finally, use the distance traveled by the object between frames and
    the frame rate to estimate its speed.
  prefs: []
  type: TYPE_NORMAL
- en: '**Example**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: For more details, refer to our [official blog post](https://www.ultralytics.com/blog/ultralytics-yolov8-for-speed-estimation-in-computer-vision-projects).
  prefs: []
  type: TYPE_NORMAL
- en: What are the benefits of using Ultralytics YOLOv8 for speed estimation in traffic
    management?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Using Ultralytics YOLOv8 for speed estimation offers significant advantages
    in traffic management:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Enhanced Safety**: Accurately estimate vehicle speeds to detect over-speeding
    and improve road safety.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Real-Time Monitoring**: Benefit from YOLOv8''s real-time object detection
    capability to monitor traffic flow and congestion effectively.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Scalability**: Deploy the model on various hardware setups, from edge devices
    to servers, ensuring flexible and scalable solutions for large-scale implementations.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For more applications, see advantages of speed estimation.
  prefs: []
  type: TYPE_NORMAL
- en: Can YOLOv8 be integrated with other AI frameworks like TensorFlow or PyTorch?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Yes, YOLOv8 can be integrated with other AI frameworks like TensorFlow and PyTorch.
    Ultralytics provides support for exporting YOLOv8 models to various formats like
    ONNX, TensorRT, and CoreML, ensuring smooth interoperability with other ML frameworks.
  prefs: []
  type: TYPE_NORMAL
- en: 'To export a YOLOv8 model to ONNX format:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Learn more about exporting models in our guide on export.
  prefs: []
  type: TYPE_NORMAL
- en: How accurate is the speed estimation using Ultralytics YOLOv8?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The accuracy of speed estimation using Ultralytics YOLOv8 depends on several
    factors, including the quality of the object tracking, the resolution and frame
    rate of the video, and environmental variables. While the speed estimator provides
    reliable estimates, it may not be 100% accurate due to variances in frame processing
    speed and object occlusion.
  prefs: []
  type: TYPE_NORMAL
- en: '**Note**: Always consider margin of error and validate the estimates with ground
    truth data when possible.'
  prefs: []
  type: TYPE_NORMAL
- en: For further accuracy improvement tips, check the Arguments `SpeedEstimator`
    section.
  prefs: []
  type: TYPE_NORMAL
- en: Why choose Ultralytics YOLOv8 over other object detection models like TensorFlow
    Object Detection API?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ultralytics YOLOv8 offers several advantages over other object detection models,
    such as the TensorFlow Object Detection API:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Real-Time Performance**: YOLOv8 is optimized for real-time detection, providing
    high speed and accuracy.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ease of Use**: Designed with a user-friendly interface, YOLOv8 simplifies
    model training and deployment.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Versatility**: Supports multiple tasks, including object detection, segmentation,
    and pose estimation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Community and Support**: YOLOv8 is backed by an active community and extensive
    documentation, ensuring developers have the resources they need.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For more information on the benefits of YOLOv8, explore our detailed model page.
  prefs: []
  type: TYPE_NORMAL
