- en: numpy.isneginf
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.isneginf.html](https://numpy.org/doc/1.26/reference/generated/numpy.isneginf.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Test element-wise for negative infinity, return result as bool array.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The input array.
  prefs: []
  type: TYPE_NORMAL
- en: '**out**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A location into which the result is stored. If provided, it must have a shape
    that the input broadcasts to. If not provided or None, a freshly-allocated boolean
    array is returned.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: A boolean array with the same dimensions as the input. If second argument is
    not supplied then a numpy boolean array is returned with values True where the
    corresponding element of the input is negative infinity and values False where
    the element of the input is not negative infinity.
  prefs: []
  type: TYPE_NORMAL
- en: If a second argument is supplied the result is stored there. If the type of
    that array is a numeric type the result is represented as zeros and ones, if the
    type is boolean then as False and True. The return value *out* is then a reference
    to that array.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`isinf`](numpy.isinf.html#numpy.isinf "numpy.isinf"), [`isposinf`](numpy.isposinf.html#numpy.isposinf
    "numpy.isposinf"), [`isnan`](numpy.isnan.html#numpy.isnan "numpy.isnan"), [`isfinite`](numpy.isfinite.html#numpy.isfinite
    "numpy.isfinite")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: NumPy uses the IEEE Standard for Binary Floating-Point for Arithmetic (IEEE
    754).
  prefs: []
  type: TYPE_NORMAL
- en: Errors result if the second argument is also supplied when x is a scalar input,
    if first and second arguments have different shapes, or if the first argument
    has complex values.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
