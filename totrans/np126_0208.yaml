- en: numpy.indices
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.indices.html](https://numpy.org/doc/1.26/reference/generated/numpy.indices.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return an array representing the indices of a grid.
  prefs: []
  type: TYPE_NORMAL
- en: Compute an array where the subarrays contain index values 0, 1, … varying only
    along the corresponding axis.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**dimensions**sequence of ints'
  prefs: []
  type: TYPE_NORMAL
- en: The shape of the grid.
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype**dtype, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Data type of the result.
  prefs: []
  type: TYPE_NORMAL
- en: '**sparse**boolean, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Return a sparse representation of the grid instead of a dense representation.
    Default is False.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.17.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**grid**one ndarray or tuple of ndarrays'
  prefs: []
  type: TYPE_NORMAL
- en: 'If sparse is False:'
  prefs: []
  type: TYPE_NORMAL
- en: Returns one array of grid indices, `grid.shape = (len(dimensions),) + tuple(dimensions)`.
  prefs: []
  type: TYPE_NORMAL
- en: 'If sparse is True:'
  prefs: []
  type: TYPE_NORMAL
- en: Returns a tuple of arrays, with `grid[i].shape = (1, ..., 1, dimensions[i],
    1, ..., 1)` with dimensions[i] in the ith place
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`mgrid`](numpy.mgrid.html#numpy.mgrid "numpy.mgrid"), [`ogrid`](numpy.ogrid.html#numpy.ogrid
    "numpy.ogrid"), [`meshgrid`](numpy.meshgrid.html#numpy.meshgrid "numpy.meshgrid")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The output shape in the dense case is obtained by prepending the number of dimensions
    in front of the tuple of dimensions, i.e. if *dimensions* is a tuple `(r0, ...,
    rN-1)` of length `N`, the output shape is `(N, r0, ..., rN-1)`.
  prefs: []
  type: TYPE_NORMAL
- en: 'The subarrays `grid[k]` contains the N-D array of indices along the `k-th`
    axis. Explicitly:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The indices can be used as an index into an array.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Note that it would be more straightforward in the above example to extract the
    required elements directly with `x[:2, :3]`.
  prefs: []
  type: TYPE_NORMAL
- en: If sparse is set to true, the grid will be returned in a sparse representation.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
