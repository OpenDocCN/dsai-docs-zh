- en: numpy.nanargmin
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.nanargmin.html](https://numpy.org/doc/1.26/reference/generated/numpy.nanargmin.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Return the indices of the minimum values in the specified axis ignoring NaNs.
    For all-NaN slices `ValueError` is raised. Warning: the results cannot be trusted
    if a slice contains only NaNs and Infs.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input data.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axis along which to operate. By default flattened input is used.
  prefs: []
  type: TYPE_NORMAL
- en: '**out**array, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If provided, the result will be inserted into this array. It should be of the
    appropriate shape and dtype.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.22.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**keepdims**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If this is set to True, the axes which are reduced are left in the result as
    dimensions with size one. With this option, the result will broadcast correctly
    against the array.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.22.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**index_array**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: An array of indices or a single index value.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`argmin`](numpy.argmin.html#numpy.argmin "numpy.argmin"), [`nanargmax`](numpy.nanargmax.html#numpy.nanargmax
    "numpy.nanargmax")'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
