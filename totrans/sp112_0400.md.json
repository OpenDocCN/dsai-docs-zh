["```py\nscipy.ndimage.binary_hit_or_miss(input, structure1=None, structure2=None, output=None, origin1=0, origin2=None)\n```", "```py\n>>> from scipy import ndimage\n>>> import numpy as np\n>>> a = np.zeros((7,7), dtype=int)\n>>> a[1, 1] = 1; a[2:4, 2:4] = 1; a[4:6, 4:6] = 1\n>>> a\narray([[0, 0, 0, 0, 0, 0, 0],\n [0, 1, 0, 0, 0, 0, 0],\n [0, 0, 1, 1, 0, 0, 0],\n [0, 0, 1, 1, 0, 0, 0],\n [0, 0, 0, 0, 1, 1, 0],\n [0, 0, 0, 0, 1, 1, 0],\n [0, 0, 0, 0, 0, 0, 0]])\n>>> structure1 = np.array([[1, 0, 0], [0, 1, 1], [0, 1, 1]])\n>>> structure1\narray([[1, 0, 0],\n [0, 1, 1],\n [0, 1, 1]])\n>>> # Find the matches of structure1 in the array a\n>>> ndimage.binary_hit_or_miss(a, structure1=structure1).astype(int)\narray([[0, 0, 0, 0, 0, 0, 0],\n [0, 0, 0, 0, 0, 0, 0],\n [0, 0, 1, 0, 0, 0, 0],\n [0, 0, 0, 0, 0, 0, 0],\n [0, 0, 0, 0, 1, 0, 0],\n [0, 0, 0, 0, 0, 0, 0],\n [0, 0, 0, 0, 0, 0, 0]])\n>>> # Change the origin of the filter\n>>> # origin1=1 is equivalent to origin1=(1,1) here\n>>> ndimage.binary_hit_or_miss(a, structure1=structure1,\\\n... origin1=1).astype(int)\narray([[0, 0, 0, 0, 0, 0, 0],\n [0, 0, 0, 0, 0, 0, 0],\n [0, 0, 0, 0, 0, 0, 0],\n [0, 0, 0, 1, 0, 0, 0],\n [0, 0, 0, 0, 0, 0, 0],\n [0, 0, 0, 0, 0, 1, 0],\n [0, 0, 0, 0, 0, 0, 0]]) \n```"]