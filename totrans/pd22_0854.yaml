- en: pandas.TimedeltaIndex.round
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.TimedeltaIndex.round.html](https://pandas.pydata.org/docs/reference/api/pandas.TimedeltaIndex.round.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Perform round operation on the data to the specified freq.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**freq**str or Offset'
  prefs: []
  type: TYPE_NORMAL
- en: The frequency level to round the index to. Must be a fixed frequency like ‘S’
    (second) not ‘ME’ (month end). See [frequency aliases](../../user_guide/timeseries.html#timeseries-offset-aliases)
    for a list of possible freq values.
  prefs: []
  type: TYPE_NORMAL
- en: '**ambiguous**‘infer’, bool-ndarray, ‘NaT’, default ‘raise’'
  prefs: []
  type: TYPE_NORMAL
- en: 'Only relevant for DatetimeIndex:'
  prefs: []
  type: TYPE_NORMAL
- en: ‘infer’ will attempt to infer fall dst-transition hours based on order
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bool-ndarray where True signifies a DST time, False designates a non-DST time
    (note that this flag is only applicable for ambiguous times)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘NaT’ will return NaT where there are ambiguous times
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘raise’ will raise an AmbiguousTimeError if there are ambiguous times.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**nonexistent**‘shift_forward’, ‘shift_backward’, ‘NaT’, timedelta, default
    ‘raise’'
  prefs: []
  type: TYPE_NORMAL
- en: A nonexistent time does not exist in a particular timezone where clocks moved
    forward due to DST.
  prefs: []
  type: TYPE_NORMAL
- en: ‘shift_forward’ will shift the nonexistent time forward to the closest existing
    time
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘shift_backward’ will shift the nonexistent time backward to the closest existing
    time
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘NaT’ will return NaT where there are nonexistent times
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: timedelta objects will shift nonexistent times by the timedelta
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘raise’ will raise an NonExistentTimeError if there are nonexistent times.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: DatetimeIndex, TimedeltaIndex, or Series
  prefs: []
  type: TYPE_NORMAL
- en: Index of the same type for a DatetimeIndex or TimedeltaIndex, or a Series with
    the same index for a Series.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: ValueError if the freq cannot be converted.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: If the timestamps have a timezone, rounding will take place relative to the
    local (“wall”) time and re-localized to the same timezone. When rounding near
    daylight savings time, use `nonexistent` and `ambiguous` to control the re-localization
    behavior.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '**DatetimeIndex**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Series**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: When rounding near a daylight savings time transition, use `ambiguous` or `nonexistent`
    to control how the timestamp should be re-localized.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
