- en: scipy.stats.cramervonmises
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.cramervonmises.html#scipy.stats.cramervonmises](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.cramervonmises.html#scipy.stats.cramervonmises)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Perform the one-sample Cramér-von Mises test for goodness of fit.
  prefs: []
  type: TYPE_NORMAL
- en: This performs a test of the goodness of fit of a cumulative distribution function
    (cdf) \(F\) compared to the empirical distribution function \(F_n\) of observed
    random variates \(X_1, ..., X_n\) that are assumed to be independent and identically
    distributed ([[1]](#reed8bce1e242-1)). The null hypothesis is that the \(X_i\)
    have cumulative distribution \(F\).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**rvs**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: A 1-D array of observed values of the random variables \(X_i\).
  prefs: []
  type: TYPE_NORMAL
- en: '**cdf**str or callable'
  prefs: []
  type: TYPE_NORMAL
- en: 'The cumulative distribution function \(F\) to test the observations against.
    If a string, it should be the name of a distribution in [`scipy.stats`](../stats.html#module-scipy.stats
    "scipy.stats"). If a callable, that callable is used to calculate the cdf: `cdf(x,
    *args) -> float`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**args**tuple, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Distribution parameters. These are assumed to be known; see Notes.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int or None, default: 0'
  prefs: []
  type: TYPE_NORMAL
- en: If an int, the axis of the input along which to compute the statistic. The statistic
    of each axis-slice (e.g. row) of the input will appear in a corresponding element
    of the output. If `None`, the input will be raveled before computing the statistic.
  prefs: []
  type: TYPE_NORMAL
- en: '**nan_policy**{‘propagate’, ‘omit’, ‘raise’}'
  prefs: []
  type: TYPE_NORMAL
- en: Defines how to handle input NaNs.
  prefs: []
  type: TYPE_NORMAL
- en: '`propagate`: if a NaN is present in the axis slice (e.g. row) along which the
    statistic is computed, the corresponding entry of the output will be NaN.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`omit`: NaNs will be omitted when performing the calculation. If insufficient
    data remains in the axis slice along which the statistic is computed, the corresponding
    entry of the output will be NaN.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`raise`: if a NaN is present, a `ValueError` will be raised.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**keepdims**bool, default: False'
  prefs: []
  type: TYPE_NORMAL
- en: If this is set to True, the axes which are reduced are left in the result as
    dimensions with size one. With this option, the result will broadcast correctly
    against the input array.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**res**object with attributes'
  prefs: []
  type: TYPE_NORMAL
- en: statisticfloat
  prefs: []
  type: TYPE_NORMAL
- en: Cramér-von Mises statistic.
  prefs: []
  type: TYPE_NORMAL
- en: pvaluefloat
  prefs: []
  type: TYPE_NORMAL
- en: The p-value.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`kstest`](scipy.stats.kstest.html#scipy.stats.kstest "scipy.stats.kstest"),
    [`cramervonmises_2samp`](scipy.stats.cramervonmises_2samp.html#scipy.stats.cramervonmises_2samp
    "scipy.stats.cramervonmises_2samp")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.6.0.
  prefs: []
  type: TYPE_NORMAL
- en: The p-value relies on the approximation given by equation 1.8 in [[2]](#reed8bce1e242-2).
    It is important to keep in mind that the p-value is only accurate if one tests
    a simple hypothesis, i.e. the parameters of the reference distribution are known.
    If the parameters are estimated from the data (composite hypothesis), the computed
    p-value is not reliable.
  prefs: []
  type: TYPE_NORMAL
- en: Beginning in SciPy 1.9, `np.matrix` inputs (not recommended for new code) are
    converted to `np.ndarray` before the calculation is performed. In this case, the
    output will be a scalar or `np.ndarray` of appropriate shape rather than a 2D
    `np.matrix`. Similarly, while masked elements of masked arrays are ignored, the
    output will be a scalar or `np.ndarray` rather than a masked array with `mask=False`.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: Cramér-von Mises criterion, Wikipedia, [https://en.wikipedia.org/wiki/Cram%C3%A9r%E2%80%93von_Mises_criterion](https://en.wikipedia.org/wiki/Cram%C3%A9r%E2%80%93von_Mises_criterion)
  prefs: []
  type: TYPE_NORMAL
- en: '[[2](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: Csörgő, S. and Faraway, J. (1996). The Exact and Asymptotic Distribution of
    Cramér-von Mises Statistics. Journal of the Royal Statistical Society, pp. 221-234.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Suppose we wish to test whether data generated by `scipy.stats.norm.rvs` were,
    in fact, drawn from the standard normal distribution. We choose a significance
    level of `alpha=0.05`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The p-value exceeds our chosen significance level, so we do not reject the null
    hypothesis that the observed sample is drawn from the standard normal distribution.
  prefs: []
  type: TYPE_NORMAL
- en: Now suppose we wish to check whether the same samples shifted by 2.1 is consistent
    with being drawn from a normal distribution with a mean of 2.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Here we have used the *args* keyword to specify the mean (`loc`) of the normal
    distribution to test the data against. This is equivalent to the following, in
    which we create a frozen normal distribution with mean 2.1, then pass its `cdf`
    method as an argument.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: In either case, we would reject the null hypothesis that the observed sample
    is drawn from a normal distribution with a mean of 2 (and default variance of
    1) because the p-value is less than our chosen significance level.
  prefs: []
  type: TYPE_NORMAL
