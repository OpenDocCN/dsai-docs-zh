- en: pandas.DataFrame.apply
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas.DataFrame.apply
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.apply.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.apply.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.apply.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.apply.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Apply a function along an axis of the DataFrame.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 沿DataFrame的轴应用函数。
- en: Objects passed to the function are Series objects whose index is either the
    DataFrame’s index (`axis=0`) or the DataFrame’s columns (`axis=1`). By default
    (`result_type=None`), the final return type is inferred from the return type of
    the applied function. Otherwise, it depends on the result_type argument.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 传递给函数的对象是Series对象，其索引要么是DataFrame的索引（`axis=0`），要么是DataFrame的列（`axis=1`）。默认情况下（`result_type=None`），最终返回类型是从应用函数的返回类型推断出来的。否则，它取决于result_type参数。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**func**function'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**func**函数'
- en: Function to apply to each column or row.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 应用于每列或行的函数。
- en: '**axis**{0 or ‘index’, 1 or ‘columns’}, default 0'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**axis**{0或‘index’，1或‘columns’}，默认为0'
- en: 'Axis along which the function is applied:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 应用函数的轴：
- en: '0 or ‘index’: apply function to each column.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 0或‘index’：将函数应用于每列。
- en: '1 or ‘columns’: apply function to each row.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1或‘columns’：将函数应用于每行。
- en: '**raw**bool, default False'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**raw**bool，默认为False'
- en: 'Determines if row or column is passed as a Series or ndarray object:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 确定行或列是作为Series还是ndarray对象传递的：
- en: '`False` : passes each row or column as a Series to the function.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`False`：将每行或列作为Series传递给函数。'
- en: '`True` : the passed function will receive ndarray objects instead. If you are
    just applying a NumPy reduction function this will achieve much better performance.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`True`：传递的函数将接收ndarray对象。如果只是应用NumPy缩减函数，这将实现更好的性能。'
- en: '**result_type**{‘expand’, ‘reduce’, ‘broadcast’, None}, default None'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**result_type**{‘expand’, ‘reduce’, ‘broadcast’, None}，默认为None'
- en: 'These only act when `axis=1` (columns):'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 仅在`axis=1`（列）时起作用：
- en: '‘expand’ : list-like results will be turned into columns.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘expand’：类似列表的结果将转换为列。
- en: '‘reduce’ : returns a Series if possible rather than expanding list-like results.
    This is the opposite of ‘expand’.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘reduce’：如果可能，返回Series而不是扩展类似列表的结果。这与‘expand’相反。
- en: '‘broadcast’ : results will be broadcast to the original shape of the DataFrame,
    the original index and columns will be retained.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘broadcast’：结果将广播到DataFrame的原始形状，原始索引和列将被保留。
- en: 'The default behaviour (None) depends on the return value of the applied function:
    list-like results will be returned as a Series of those. However if the apply
    function returns a Series these are expanded to columns.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 默认行为（None）取决于应用函数的返回值：类似列表的结果将作为这些的Series返回。但是，如果应用函数返回Series，则这些将扩展为列。
- en: '**args**tuple'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**args**元组'
- en: Positional arguments to pass to func in addition to the array/series.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 传递给func的位置参数，除了数组/系列。
- en: '**by_row**False or “compat”, default “compat”'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**by_row**False或“compat”，默认为“compat”'
- en: Only has an effect when `func` is a listlike or dictlike of funcs and the func
    isn’t a string. If “compat”, will if possible first translate the func into pandas
    methods (e.g. `Series().apply(np.sum)` will be translated to `Series().sum()`).
    If that doesn’t work, will try call to apply again with `by_row=True` and if that
    fails, will call apply again with `by_row=False` (backward compatible). If False,
    the funcs will be passed the whole Series at once.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 仅当`func`是函数列表或字典并且func不是字符串时才有效。如果“compat”可能首先将func翻译为pandas方法（例如`Series().apply(np.sum)`将被翻译为`Series().sum()`）。如果这不起作用，将尝试再次调用apply，并使用`by_row=True`，如果失败，将再次调用apply并使用`by_row=False`（向后兼容）。如果为False，则整个Series将一次传递给funcs。
- en: New in version 2.1.0.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 版本2.1.0中的新功能。
- en: '**engine**{‘python’, ‘numba’}, default ‘python’'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**engine**{‘python’, ‘numba’}，默认为‘python’'
- en: Choose between the python (default) engine or the numba engine in apply.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在apply中选择python（默认）引擎或numba引擎。
- en: 'The numba engine will attempt to JIT compile the passed function, which may
    result in speedups for large DataFrames. It also supports the following engine_kwargs
    :'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: numba引擎将尝试对传递的函数进行JIT编译，这可能会加快大型DataFrame的速度。它还支持以下engine_kwargs：
- en: nopython (compile the function in nopython mode)
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: nopython（在nopython模式下编译函数）
- en: nogil (release the GIL inside the JIT compiled function)
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: nogil（在JIT编译函数内释放GIL）
- en: parallel (try to apply the function in parallel over the DataFrame)
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 并行（尝试在DataFrame上并行应用函数）
- en: 'Note: Due to limitations within numba/how pandas interfaces with numba, you
    should only use this if raw=True'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意：由于numba内部限制/pandas如何与numba接口，只有在raw=True时才应使用此功能
- en: 'Note: The numba compiler only supports a subset of valid Python/numpy operations.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：numba编译器仅支持Python/numpy操作的子集。
- en: Please read more about the [supported python features](https://numba.pydata.org/numba-doc/dev/reference/pysupported.html)
    and [supported numpy features](https://numba.pydata.org/numba-doc/dev/reference/numpysupported.html)
    in numba to learn what you can or cannot use in the passed function.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: New in version 2.2.0.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '**engine_kwargs**dict'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: Pass keyword arguments to the engine. This is currently only used by the numba
    engine, see the documentation for the engine argument for more information.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '****kwargs**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: Additional keyword arguments to pass as keywords arguments to func.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: Series or DataFrame
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: Result of applying `func` along the given axis of the DataFrame.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: See also
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.map`](pandas.DataFrame.map.html#pandas.DataFrame.map "pandas.DataFrame.map")'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: For elementwise operations.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.aggregate`](pandas.DataFrame.aggregate.html#pandas.DataFrame.aggregate
    "pandas.DataFrame.aggregate")'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: Only perform aggregating type operations.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.transform`](pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform")'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: Only perform transforming type operations.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: Functions that mutate the passed object can produce unexpected behavior or errors
    and are not supported. See [Mutating with User Defined Function (UDF) methods](../../user_guide/gotchas.html#gotchas-udf-mutation)
    for more details.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Using a numpy universal function (in this case the same as `np.sqrt(df)`):'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Using a reducing function on either axis
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Returning a list-like will result in a Series
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Passing `result_type='expand'` will expand list-like results to columns of a
    Dataframe
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Returning a Series inside the function is similar to passing `result_type='expand'`.
    The resulting column names will be the Series index.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Passing `result_type='broadcast'` will ensure the same shape result, whether
    list-like or scalar is returned by the function, and broadcast it along the axis.
    The resulting column names will be the originals.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
