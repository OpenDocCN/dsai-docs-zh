["```py\n`pip  install  ultralytics` \n```", "```py\n`from ultralytics import SAM  # Load a model model = SAM(\"sam2_b.pt\")  # Display model information (optional) model.info()  # Segment with bounding box prompt results = model(\"path/to/image.jpg\", bboxes=[100, 100, 200, 200])  # Segment with point prompt results = model(\"path/to/image.jpg\", points=[150, 150], labels=[1])` \n```", "```py\n`from ultralytics import SAM  # Load a model model = SAM(\"sam2_b.pt\")  # Display model information (optional) model.info()  # Run inference model(\"path/to/video.mp4\")` \n```", "```py\n`# Run inference with a SAM 2 model yolo  predict  model=sam2_b.pt  source=path/to/video.mp4` \n```", "```py\n`from ultralytics import SAM, YOLO, FastSAM  # Profile SAM-b model = SAM(\"sam_b.pt\") model.info() model(\"ultralytics/assets\")  # Profile MobileSAM model = SAM(\"mobile_sam.pt\") model.info() model(\"ultralytics/assets\")  # Profile FastSAM-s model = FastSAM(\"FastSAM-s.pt\") model.info() model(\"ultralytics/assets\")  # Profile YOLOv8n-seg model = YOLO(\"yolov8n-seg.pt\") model.info() model(\"ultralytics/assets\")` \n```", "```py\n`from ultralytics.data.annotator import auto_annotate  auto_annotate(data=\"path/to/images\", det_model=\"yolov8x.pt\", sam_model=\"sam2_b.pt\")` \n```", "```py\n`@article{ravi2024sam2,   title={SAM 2: Segment Anything in Images and Videos},   author={Ravi, Nikhila and Gabeur, Valentin and Hu, Yuan-Ting and Hu, Ronghang and Ryali, Chaitanya and Ma, Tengyu and Khedr, Haitham and R{\\\"a}dle, Roman and Rolland, Chloe and Gustafson, Laura and Mintun, Eric and Pan, Junting and Alwala, Kalyan Vasudev and Carion, Nicolas and Wu, Chao-Yuan and Girshick, Ross and Doll{\\'a}r, Piotr and Feichtenhofer, Christoph},   journal={arXiv preprint},   year={2024} }` \n```", "```py\n`from ultralytics import SAM  # Load a model model = SAM(\"sam2_b.pt\")  # Display model information (optional) model.info()  # Segment with bounding box prompt results = model(\"path/to/image.jpg\", bboxes=[100, 100, 200, 200])  # Segment with point prompt results = model(\"path/to/image.jpg\", points=[150, 150], labels=[1])` \n```"]