- en: Circuit Plot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/physics/quantum/circuitplot.html](https://docs.sympy.org/latest/modules/physics/quantum/circuitplot.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Matplotlib based plotting of quantum circuits.
  prefs: []
  type: TYPE_NORMAL
- en: 'Todo:'
  prefs: []
  type: TYPE_NORMAL
- en: Optimize printing of large circuits.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Get this to work with single gates.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do a better job checking the form of circuits to make sure it is a Mul of Gates.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Get multi-target gates plotting.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Get initial and final states to plot.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Get measurements to plot. Might need to rethink measurement as a gate issue.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Get scale and figsize to be handled in a better way.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Write some tests/examples!
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: A class for managing a circuit plot.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Draw a vertical control line.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Draw a control point.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Draw a NOT gates as the circle with plus in the middle.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Draw a box for a single qubit gate.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Draw a swap point as a cross.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Draw a box for a two qubit gate. Does not work yet.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Load the kwargs into the instance dict.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Use a lexical closure to make a controlled gate.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Mock-up of an x measurement gate.
  prefs: []
  type: TYPE_NORMAL
- en: This is in circuitplot rather than gate.py because it’s not a real gate, it
    just draws one.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Mock-up of a z measurement gate.
  prefs: []
  type: TYPE_NORMAL
- en: This is in circuitplot rather than gate.py because it’s not a real gate, it
    just draws one.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Draw the circuit diagram for the circuit with nqubits.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**c** : circuit'
  prefs: []
  type: TYPE_NORMAL
- en: The circuit to plot. Should be a product of Gate instances.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**nqubits** : int'
  prefs: []
  type: TYPE_NORMAL
- en: The number of qubits to include in the circuit. Must be at least as big as the
    largest `min_qubits` of the gates.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Autogenerate labels for wires of quantum circuits.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**n** : int'
  prefs: []
  type: TYPE_NORMAL
- en: number of qubits in the circuit.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**symbol** : string'
  prefs: []
  type: TYPE_NORMAL
- en: A character string to precede all gate labels. E.g. ‘q_0’, ‘q_1’, etc.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**>>> from sympy.physics.quantum.circuitplot import labeller**'
  prefs: []
  type: TYPE_NORMAL
- en: '**>>> labeller(2)**'
  prefs: []
  type: TYPE_NORMAL
- en: '**[‘q_1’, ‘q_0’]**'
  prefs: []
  type: TYPE_NORMAL
- en: '**>>> labeller(3,’j’)**'
  prefs: []
  type: TYPE_NORMAL
- en: '**[‘j_2’, ‘j_1’, ‘j_0’]**'
  prefs: []
  type: TYPE_NORMAL
