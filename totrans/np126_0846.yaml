- en: numpy.diff
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.diff
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.diff.html](https://numpy.org/doc/1.26/reference/generated/numpy.diff.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.diff.html](https://numpy.org/doc/1.26/reference/generated/numpy.diff.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Calculate the n-th discrete difference along the given axis.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 计算沿给定轴的第 *n* 个离散差分。
- en: The first difference is given by `out[i] = a[i+1] - a[i]` along the given axis,
    higher differences are calculated by using [`diff`](#numpy.diff "numpy.diff")
    recursively.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次差分由 `out[i] = a[i+1] - a[i]` 沿着给定轴计算得出，更高的差分通过递归使用 [`diff`](https://numpy.org/doc/1.26/reference/generated/numpy.diff.html#numpy.diff
    "numpy.diff") 计算。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a**array_like'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**array_like'
- en: Input array
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数组
- en: '**n**int, optional'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**int, 可选'
- en: The number of times values are differenced. If zero, the input is returned as-is.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 值的差异次数。如果为零，则原始输入将保持不变。
- en: '**axis**int, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**axis**int, 可选'
- en: The axis along which the difference is taken, default is the last axis.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 进行差分的轴，默认是最后一个轴。
- en: '**prepend, append**array_like, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**prepend, append**array_like, 可选'
- en: Values to prepend or append to *a* along axis prior to performing the difference.
    Scalar values are expanded to arrays with length 1 in the direction of axis and
    the shape of the input array in along all other axes. Otherwise the dimension
    and shape must match *a* except along axis.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行差分之前沿着轴添加的值。标量值在轴的方向上扩展为具有长度 1 的数组，并且在所有其他轴向上扩展为输入数组的形状。否则，维度和形状必须与 *a* 相匹配，除了轴向。
- en: New in version 1.16.0.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 从版本 1.16.0 开始。
- en: 'Returns:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**diff**ndarray'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**diff**ndarray'
- en: The n-th differences. The shape of the output is the same as *a* except along
    *axis* where the dimension is smaller by *n*. The type of the output is the same
    as the type of the difference between any two elements of *a*. This is the same
    as the type of *a* in most cases. A notable exception is [`datetime64`](../arrays.scalars.html#numpy.datetime64
    "numpy.datetime64"), which results in a [`timedelta64`](../arrays.scalars.html#numpy.timedelta64
    "numpy.timedelta64") output array.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 第 *n* 个差分。输出的形状与 *a* 相同，除了沿着 *axis* 的维度小了 *n*。输出类型与 *a* 中任意两个元素的差异类型相同。在大多数情况下，这与
    *a* 的类型相同。一个值得注意的例外是[`datetime64`](https://numpy.org/doc/1.26/reference/generated/numpy.datetime64.html#numpy.datetime64
    "numpy.datetime64")，它的输出结果是[`timedelta64`](https://numpy.org/doc/1.26/reference/generated/numpy.timedelta64.html#numpy.timedelta64
    "numpy.timedelta64")数组。
- en: See also
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`gradient`](numpy.gradient.html#numpy.gradient "numpy.gradient"), [`ediff1d`](numpy.ediff1d.html#numpy.ediff1d
    "numpy.ediff1d"), [`cumsum`](numpy.cumsum.html#numpy.cumsum "numpy.cumsum")'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[`梯度`](https://numpy.org/doc/1.26/reference/generated/numpy.gradient.html#numpy.gradient
    "numpy.gradient")，[`ediff1d`](https://numpy.org/doc/1.26/reference/generated/numpy.ediff1d.html#numpy.ediff1d
    "numpy.ediff1d")，[`cumsum`](https://numpy.org/doc/1.26/reference/generated/numpy.cumsum.html#numpy.cumsum
    "numpy.cumsum")'
- en: Notes
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记
- en: Type is preserved for boolean arrays, so the result will contain *False* when
    consecutive elements are the same and *True* when they differ.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 对于布尔数组，类型是保留的，因此结果将包含*False*，当连续元素相同时，结果为*True*，当它们不同时。
- en: 'For unsigned integer arrays, the results will also be unsigned. This should
    not be surprising, as the result is consistent with calculating the difference
    directly:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 对于无符号整数数组，结果也将是无符号的。这并不奇怪，因为结果与直接计算差异是一致的：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If this is not desirable, then the array should be cast to a larger integer
    type first:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这不是期望的结果，那么数组应首先转换为较大的整数类型：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Examples
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
