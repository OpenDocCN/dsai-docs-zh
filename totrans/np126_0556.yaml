- en: numpy.matmul
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.matmul
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.matmul.html](https://numpy.org/doc/1.26/reference/generated/numpy.matmul.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.matmul.html](https://numpy.org/doc/1.26/reference/generated/numpy.matmul.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Matrix product of two arrays.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 两个数组的矩阵乘积。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x1, x2**array_like'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**x1, x2**array_like'
- en: Input arrays, scalars not allowed.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数组，不允许标量。
- en: '**out**ndarray, optional'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**ndarray，可选'
- en: A location into which the result is stored. If provided, it must have a shape
    that matches the signature *(n,k),(k,m)->(n,m)*. If not provided or None, a freshly-allocated
    array is returned.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 存储结果的位置。如果提供，它必须具有与签名 *(n,k),(k,m)->(n,m)* 匹配的形状。如果未提供或为 None，则返回一个新分配的数组。
- en: '****kwargs**'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '****kwargs**'
- en: For other keyword-only arguments, see the [ufunc docs](../ufuncs.html#ufuncs-kwargs).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 对于其他仅关键字参数，请参阅[ufunc 文档](../ufuncs.html#ufuncs-kwargs)。
- en: 'New in version 1.16: Now handles ufunc kwargs'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 版本 1.16 中的新功能：现在处理 ufunc kwargs
- en: 'Returns:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**y**ndarray'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**y**ndarray'
- en: The matrix product of the inputs. This is a scalar only when both x1, x2 are
    1-d vectors.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 输入的矩阵乘积。仅当 x1、x2 都是 1-D 向量时才是标量。
- en: 'Raises:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: ValueError
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: ValueError
- en: If the last dimension of *x1* is not the same size as the second-to-last dimension
    of *x2*.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*x1*的最后一个维度与*x2*的倒数第二个维度大小不同。
- en: If a scalar value is passed in.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果传入了一个标量值。
- en: See also
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`vdot`](numpy.vdot.html#numpy.vdot "numpy.vdot")'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[`vdot`](numpy.vdot.html#numpy.vdot "numpy.vdot")'
- en: Complex-conjugating dot product.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 复共轭点积。
- en: '[`tensordot`](numpy.tensordot.html#numpy.tensordot "numpy.tensordot")'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[`tensordot`](numpy.tensordot.html#numpy.tensordot "numpy.tensordot")'
- en: Sum products over arbitrary axes.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在任意轴上求和乘积。
- en: '[`einsum`](numpy.einsum.html#numpy.einsum "numpy.einsum")'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[`einsum`](numpy.einsum.html#numpy.einsum "numpy.einsum")'
- en: Einstein summation convention.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 爱因斯坦求和约定。
- en: '[`dot`](numpy.dot.html#numpy.dot "numpy.dot")'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dot`](numpy.dot.html#numpy.dot "numpy.dot")'
- en: alternative matrix product with different broadcasting rules.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 具有不同广播规则的替代矩阵乘积。
- en: Notes
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The behavior depends on the arguments in the following way.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 行为取决于以下方式的参数。
- en: If both arguments are 2-D they are multiplied like conventional matrices.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果两个参数都是 2-D，则它们将像常规矩阵一样相乘。
- en: If either argument is N-D, N > 2, it is treated as a stack of matrices residing
    in the last two indexes and broadcast accordingly.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果任一参数是 N-D，N > 2，则将其视为驻留在最后两个索引中的矩阵堆栈，并相应地进行广播。
- en: If the first argument is 1-D, it is promoted to a matrix by prepending a 1 to
    its dimensions. After matrix multiplication the prepended 1 is removed.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果第一个参数是 1-D，则通过在其维度前添加 1 来将其提升为矩阵。矩阵乘法后，前置的 1 将被移除。
- en: If the second argument is 1-D, it is promoted to a matrix by appending a 1 to
    its dimensions. After matrix multiplication the appended 1 is removed.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果第二个参数是 1-D，则通过在其维度后添加 1 来将其提升为矩阵。矩阵乘法后，附加的 1 将被移除。
- en: '`matmul` differs from `dot` in two important ways:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`matmul` 与 `dot` 在两个重要方面有所不同：'
- en: Multiplication by scalars is not allowed, use `*` instead.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标量乘法不允许，使用`*`代替。
- en: 'Stacks of matrices are broadcast together as if the matrices were elements,
    respecting the signature `(n,k),(k,m)->(n,m)`:'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 矩阵堆栈将一起广播，就好像矩阵是元素一样，遵守签名`(n,k),(k,m)->(n,m)`：
- en: '[PRE1]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The matmul function implements the semantics of the `@` operator introduced
    in Python 3.5 following [**PEP 465**](https://peps.python.org/pep-0465/).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`matmul` 函数实现了 Python 3.5 中引入的`@`运算符的语义，遵循[**PEP 465**](https://peps.python.org/pep-0465/)。'
- en: It uses an optimized BLAS library when possible (see [`numpy.linalg`](../routines.linalg.html#module-numpy.linalg
    "numpy.linalg")).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在可能的情况下使用优化的 BLAS 库（请参阅[`numpy.linalg`](../routines.linalg.html#module-numpy.linalg
    "numpy.linalg")）。
- en: Examples
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'For 2-D arrays it is the matrix product:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 2-D 数组，它是矩阵乘积：
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For 2-D mixed with 1-D, the result is the usual.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 2-D 与 1-D 混合，结果是通常的。
- en: '[PRE3]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Broadcasting is conventional for stacks of arrays
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 对于数组堆栈，广播是常规的
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Vector, vector returns the scalar inner product, but neither argument is complex-conjugated:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 向量、向量返回标量内积，但两个参数都不是复共轭的：
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Scalar multiplication raises an error.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 标量乘法会引发错误。
- en: '[PRE6]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The `@` operator can be used as a shorthand for `np.matmul` on ndarrays.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`@`运算符可用作 ndarrays 上`np.matmul`的简写。'
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: New in version 1.10.0.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 版本 1.10.0 中的新功能。
