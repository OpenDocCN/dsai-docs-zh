- en: Tensor Operators
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/tensor/toperators.html](https://docs.sympy.org/latest/modules/tensor/toperators.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Partial derivative for tensor expressions.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The `PartialDerivative` object behaves like a tensorial expression:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Notice that the deriving variables have opposite valence than the printed one:
    `A(j)` is printed as covariant, but the index of the derivative is actually contravariant,
    i.e. `-j`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Indices can be contracted:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The method `.get_indices()` always returns all indices (even the contracted
    ones). If only uncontracted indices are needed, call `.get_free_indices()`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Nested partial derivatives are flattened:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Replace a derivative with array values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: The returned array is indexed by \((i, -j)\).
  prefs: []
  type: TYPE_NORMAL
- en: 'Be careful that other SymPy modules put the indices of the deriving variables
    before the indices of the derivand in the derivative result. For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'These are the transpose of the result of `PartialDerivative`, as the matrix
    and the array modules put the index \(-j\) before \(i\) in the derivative result.
    An array read with index order \((-j, i)\) is indeed the transpose of the same
    array read with index order \((i, -j)\). By specifying the index order to `.replace_with_arrays`
    one can get a compatible expression:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
