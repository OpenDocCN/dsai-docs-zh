["```py\n>>> from sympy.vector import CoordSys3D\n>>> Sys = CoordSys3D('Sys') \n```", "```py\n>>> O = Sys.origin \n```", "```py\n>>> from sympy import symbols\n>>> a1, a2, a3 = symbols('a1 a2 a3')\n>>> A = O.locate_new('A', a1*Sys.i + a2*Sys.j + a3*Sys.k) \n```", "```py\n>>> b1, b2, b3 = symbols('b1 b2 b3')\n>>> B = O.locate_new('B', b1*Sys.i + b2*Sys.j + b3*Sys.k)\n>>> c1, c2, c3 = symbols('c1 c2 c3')\n>>> C = O.locate_new('C', c1*Sys.i + c2*Sys.j + c3*Sys.k) \n```", "```py\n>>> P = O.locate_new('P', A.position_wrt(O) + (O.position_wrt(A) / 2)) \n```", "```py\n>>> Q = A.locate_new('Q', B.position_wrt(A) / 2)\n>>> R = B.locate_new('R', C.position_wrt(B) / 2)\n>>> S = O.locate_new('R', C.position_wrt(O) / 2) \n```", "```py\n>>> PQ = Q.position_wrt(P)\n>>> SR = R.position_wrt(S) \n```", "```py\n>>> PQ.cross(SR)\n0 \n```", "```py\n>>> from sympy.vector import CoordSys3D, Del\n>>> delop = Del()\n>>> C = CoordSys3D('C') \n```", "```py\n>>> from sympy import symbols, Function\n>>> v1, v2, v3, f = symbols('v1 v2 v3 f', cls=Function) \n```", "```py\n>>> vfield = v1(C.x, C.y, C.z)*C.i + v2(C.x, C.y, C.z)*C.j + v3(C.x, C.y, C.z)*C.k\n>>> ffield = f(C.x, C.y, C.z) \n```", "```py\n>>> lhs = (delop.dot(ffield * vfield)).doit() \n```", "```py\n>>> rhs = ((vfield.dot(delop(ffield))) + (ffield * (delop.dot(vfield)))).doit() \n```", "```py\n>>> lhs.expand().simplify() == rhs.expand().doit().simplify()\nTrue \n```"]