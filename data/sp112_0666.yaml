- en: scipy.signal.stft
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.signal.stft
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.stft.html#scipy.signal.stft](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.stft.html#scipy.signal.stft)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.stft.html#scipy.signal.stft](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.stft.html#scipy.signal.stft)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Compute the Short Time Fourier Transform (STFT).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 计算短时傅里叶变换（STFT）。
- en: STFTs can be used as a way of quantifying the change of a nonstationary signal’s
    frequency and phase content over time.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: STFT可用作量化非平稳信号随时间的频率和相位内容变化的一种方法。
- en: Legacy
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Legacy
- en: This function is considered legacy and will no longer receive updates. This
    could also mean it will be removed in future SciPy versions. [`ShortTimeFFT`](scipy.signal.ShortTimeFFT.html#scipy.signal.ShortTimeFFT
    "scipy.signal.ShortTimeFFT") is a newer STFT / ISTFT implementation with more
    features. A [comparison](../../tutorial/signal.html#tutorial-stft-legacy-stft)
    between the implementations can be found in the [Short-Time Fourier Transform](../../tutorial/signal.html#tutorial-stft)
    section of the [SciPy User Guide](../../tutorial/index.html#user-guide).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数被视为传统功能，将不再接收更新。这可能意味着它将在未来的SciPy版本中被移除。[`ShortTimeFFT`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.ShortTimeFFT.html#scipy.signal.ShortTimeFFT
    "scipy.signal.ShortTimeFFT")是一种新的STFT / ISTFT实现，具有更多功能。在[SciPy用户指南](https://docs.scipy.org/doc/scipy-1.12.0/tutorial/index.html#user-guide)的[教程-STFT](https://docs.scipy.org/doc/scipy-1.12.0/tutorial/signal.html#tutorial-stft-legacy-stft)部分中可以找到这两种实现的[比较](https://docs.scipy.org/doc/scipy-1.12.0/tutorial/signal.html#tutorial-stft)。
- en: 'Parameters:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x**array_like'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**类数组'
- en: Time series of measurement values
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 测量值的时间序列
- en: '**fs**float, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**fs**浮点数，可选'
- en: Sampling frequency of the *x* time series. Defaults to 1.0.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '*x*时间序列的采样频率。默认为1.0。'
- en: '**window**str or tuple or array_like, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**window**字符串或元组或类数组，可选'
- en: Desired window to use. If *window* is a string or tuple, it is passed to [`get_window`](scipy.signal.get_window.html#scipy.signal.get_window
    "scipy.signal.get_window") to generate the window values, which are DFT-even by
    default. See [`get_window`](scipy.signal.get_window.html#scipy.signal.get_window
    "scipy.signal.get_window") for a list of windows and required parameters. If *window*
    is array_like it will be used directly as the window and its length must be nperseg.
    Defaults to a Hann window.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 欲使用的窗口。如果*window*为字符串或元组，则将其传递给[`get_window`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.get_window.html#scipy.signal.get_window
    "scipy.signal.get_window")以生成窗口值，默认情况下为DFT-even。有关窗口和必需参数的列表，请参阅[`get_window`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.get_window.html#scipy.signal.get_window
    "scipy.signal.get_window")。如果*window*为类数组，则直接使用它作为窗口，其长度必须为nperseg。默认为Hann窗口。
- en: '**nperseg**int, optional'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**nperseg**整数，可选'
- en: Length of each segment. Defaults to 256.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 每个片段的长度。默认为256。
- en: '**noverlap**int, optional'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**noverlap**整数，可选'
- en: Number of points to overlap between segments. If *None*, `noverlap = nperseg
    // 2`. Defaults to *None*. When specified, the COLA constraint must be met (see
    Notes below).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 分段之间重叠的点数。如果为*None*，则`noverlap = nperseg // 2`。默认为*None*。当指定时，必须满足COLA约束（见下面的说明）。
- en: '**nfft**int, optional'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**nfft**整数，可选'
- en: Length of the FFT used, if a zero padded FFT is desired. If *None*, the FFT
    length is *nperseg*. Defaults to *None*.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 使用的FFT长度，如果需要零填充的FFT。如果为*None*，则FFT长度为*nperseg*。默认为*None*。
- en: '**detrend**str or function or *False*, optional'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**detrend**字符串或函数或*False*，可选'
- en: Specifies how to detrend each segment. If [`detrend`](scipy.signal.detrend.html#scipy.signal.detrend
    "scipy.signal.detrend") is a string, it is passed as the *type* argument to the
    [`detrend`](scipy.signal.detrend.html#scipy.signal.detrend "scipy.signal.detrend")
    function. If it is a function, it takes a segment and returns a detrended segment.
    If [`detrend`](scipy.signal.detrend.html#scipy.signal.detrend "scipy.signal.detrend")
    is *False*, no detrending is done. Defaults to *False*.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 指定如何对每个片段进行去趋势化处理。如果[`detrend`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.detrend.html#scipy.signal.detrend
    "scipy.signal.detrend")为字符串，则将其作为[`detrend`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.detrend.html#scipy.signal.detrend
    "scipy.signal.detrend")函数的*type*参数传递。如果它是一个函数，则接受一个片段并返回一个去趋势化的片段。如果[`detrend`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.detrend.html#scipy.signal.detrend
    "scipy.signal.detrend")为*False*，则不进行去趋势化处理。默认为*False*。
- en: '**return_onesided**bool, optional'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**return_onesided**布尔值，可选'
- en: If *True*, return a one-sided spectrum for real data. If *False* return a two-sided
    spectrum. Defaults to *True*, but for complex data, a two-sided spectrum is always
    returned.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为*True*，则为实数据返回单边谱。如果为*False*，则返回双边谱。默认为*True*，但对于复杂数据，始终返回双边谱。
- en: '**boundary**str or None, optional'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**boundary**字符串或None，可选'
- en: Specifies whether the input signal is extended at both ends, and how to generate
    the new values, in order to center the first windowed segment on the first input
    point. This has the benefit of enabling reconstruction of the first input point
    when the employed window function starts at zero. Valid options are `['even',
    'odd', 'constant', 'zeros', None]`. Defaults to ‘zeros’, for zero padding extension.
    I.e. `[1, 2, 3, 4]` is extended to `[0, 1, 2, 3, 4, 0]` for `nperseg=3`.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 指定输入信号是否在两端进行扩展，以及如何生成新值，以便将第一个窗段居中在第一个输入点上。这样做有利于在使用窗函数从零开始时重构第一个输入点。有效选项为
    `['even', 'odd', 'constant', 'zeros', None]`。默认为‘zeros’，用于零填充扩展。例如，对于 `nperseg=3`，
    `[1, 2, 3, 4]` 扩展为 `[0, 1, 2, 3, 4, 0]`。
- en: '**padded**bool, optional'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**padded**bool, optional'
- en: Specifies whether the input signal is zero-padded at the end to make the signal
    fit exactly into an integer number of window segments, so that all of the signal
    is included in the output. Defaults to *True*. Padding occurs after boundary extension,
    if *boundary* is not *None*, and *padded* is *True*, as is the default.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 指定输入信号是否在末尾进行零填充，以使信号恰好适合整数个窗段，以便所有信号都包含在输出中。默认为*True*。如果*boundary*不是*None*，并且*padded*为*True*（默认情况下是这样），填充将在边界扩展之后进行。
- en: '**axis**int, optional'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**axis**int, optional'
- en: Axis along which the STFT is computed; the default is over the last axis (i.e.
    `axis=-1`).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 计算STFT的轴；默认情况下是在最后一个轴上（即 `axis=-1`）。
- en: '**scaling: {‘spectrum’, ‘psd’}**'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**scaling: {‘spectrum’, ‘psd’}**'
- en: The default ‘spectrum’ scaling allows each frequency line of *Zxx* to be interpreted
    as a magnitude spectrum. The ‘psd’ option scales each line to a power spectral
    density - it allows to calculate the signal’s energy by numerically integrating
    over `abs(Zxx)**2`.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的“spectrum”缩放使得*Zxx*的每个频率线都可以解释为幅度谱。选项“psd”将每行缩放为功率谱密度 - 它允许通过数值积分计算信号的能量
    `abs(Zxx)**2`。
- en: New in version 1.9.0.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 自版本1.9.0起新增。
- en: 'Returns:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**f**ndarray'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**f**ndarray'
- en: Array of sample frequencies.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 采样频率的数组。
- en: '**t**ndarray'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**t**ndarray'
- en: Array of segment times.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 段时间的数组。
- en: '**Zxx**ndarray'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**Zxx**ndarray'
- en: STFT of *x*. By default, the last axis of *Zxx* corresponds to the segment times.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '*x* 的短时傅里叶变换（STFT）。默认情况下，*Zxx* 的最后一个轴对应于各段时间。'
- en: See also
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`istft`](scipy.signal.istft.html#scipy.signal.istft "scipy.signal.istft")'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[`istft`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.istft.html#scipy.signal.istft
    "scipy.signal.istft")'
- en: Inverse Short Time Fourier Transform
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 逆短时傅里叶变换
- en: '[`ShortTimeFFT`](scipy.signal.ShortTimeFFT.html#scipy.signal.ShortTimeFFT "scipy.signal.ShortTimeFFT")'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ShortTimeFFT`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.ShortTimeFFT.html#scipy.signal.ShortTimeFFT
    "scipy.signal.ShortTimeFFT")'
- en: Newer STFT/ISTFT implementation providing more features.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 提供更多功能的新STFT/ISTFT实现。
- en: '[`check_COLA`](scipy.signal.check_COLA.html#scipy.signal.check_COLA "scipy.signal.check_COLA")'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[`check_COLA`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.check_COLA.html#scipy.signal.check_COLA
    "scipy.signal.check_COLA")'
- en: Check whether the Constant OverLap Add (COLA) constraint is met
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 检查是否满足恒定重叠添加（COLA）约束
- en: '[`check_NOLA`](scipy.signal.check_NOLA.html#scipy.signal.check_NOLA "scipy.signal.check_NOLA")'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[`check_NOLA`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.check_NOLA.html#scipy.signal.check_NOLA
    "scipy.signal.check_NOLA")'
- en: Check whether the Nonzero Overlap Add (NOLA) constraint is met
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 检查是否满足非零重叠添加（NOLA）约束
- en: '[`welch`](scipy.signal.welch.html#scipy.signal.welch "scipy.signal.welch")'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '[`welch`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.welch.html#scipy.signal.welch
    "scipy.signal.welch")'
- en: Power spectral density by Welch’s method.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Welch方法的功率谱密度。
- en: '[`spectrogram`](scipy.signal.spectrogram.html#scipy.signal.spectrogram "scipy.signal.spectrogram")'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[`spectrogram`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.spectrogram.html#scipy.signal.spectrogram
    "scipy.signal.spectrogram")'
- en: Spectrogram by Welch’s method.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Welch方法的谱图。
- en: '[`csd`](scipy.signal.csd.html#scipy.signal.csd "scipy.signal.csd")'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[`csd`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.csd.html#scipy.signal.csd
    "scipy.signal.csd")'
- en: Cross spectral density by Welch’s method.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Welch方法的交叉谱密度。
- en: '[`lombscargle`](scipy.signal.lombscargle.html#scipy.signal.lombscargle "scipy.signal.lombscargle")'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[`lombscargle`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.lombscargle.html#scipy.signal.lombscargle
    "scipy.signal.lombscargle")'
- en: Lomb-Scargle periodogram for unevenly sampled data
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 不均匀采样数据的Lomb-Scargle周期图
- en: Notes
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: In order to enable inversion of an STFT via the inverse STFT in [`istft`](scipy.signal.istft.html#scipy.signal.istft
    "scipy.signal.istft"), the signal windowing must obey the constraint of “Nonzero
    OverLap Add” (NOLA), and the input signal must have complete windowing coverage
    (i.e. `(x.shape[axis] - nperseg) % (nperseg-noverlap) == 0`). The *padded* argument
    may be used to accomplish this.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 为了通过[`istft`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.istft.html#scipy.signal.istft
    "scipy.signal.istft")中的逆短时傅里叶变换启用STFT的反演，信号窗必须遵守“非零重叠加”（NOLA）约束，并且输入信号必须具有完整的窗覆盖（即
    `(x.shape[axis] - nperseg) % (nperseg-noverlap) == 0`）。*padded* 参数可用于实现此目的。
- en: Given a time-domain signal \(x[n]\), a window \(w[n]\), and a hop size \(H\)
    = *nperseg - noverlap*, the windowed frame at time index \(t\) is given by
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 给定一个时域信号 \(x[n]\)、一个窗口 \(w[n]\) 和一个跳跃大小 \(H\) = *nperseg - noverlap*，时间索引 \(t\)
    处的窗口帧由以下公式给出
- en: \[x_{t}[n]=x[n]w[n-tH]\]
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: \[x_{t}[n]=x[n]w[n-tH]\]
- en: The overlap-add (OLA) reconstruction equation is given by
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 重叠-添加 (OLA) 重构方程如下所示：
- en: \[x[n]=\frac{\sum_{t}x_{t}[n]w[n-tH]}{\sum_{t}w^{2}[n-tH]}\]
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: \[x[n]=\frac{\sum_{t}x_{t}[n]w[n-tH]}{\sum_{t}w^{2}[n-tH]}\]
- en: The NOLA constraint ensures that every normalization term that appears in the
    denomimator of the OLA reconstruction equation is nonzero. Whether a choice of
    *window*, *nperseg*, and *noverlap* satisfy this constraint can be tested with
    [`check_NOLA`](scipy.signal.check_NOLA.html#scipy.signal.check_NOLA "scipy.signal.check_NOLA").
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: NOLA 约束确保 OLA 重构方程分母中的每个归一化项都不为零。 可以使用 [`check_NOLA`](scipy.signal.check_NOLA.html#scipy.signal.check_NOLA
    "scipy.signal.check_NOLA") 来测试 *window*、*nperseg* 和 *noverlap* 是否满足此约束。
- en: New in version 0.19.0.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本 0.19.0 中的新功能。
- en: References
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1]'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[1]'
- en: Oppenheim, Alan V., Ronald W. Schafer, John R. Buck “Discrete-Time Signal Processing”,
    Prentice Hall, 1999.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Oppenheim, Alan V., Ronald W. Schafer, John R. Buck “Discrete-Time Signal Processing”,
    Prentice Hall, 1999.
- en: '[2]'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '[2]'
- en: Daniel W. Griffin, Jae S. Lim “Signal Estimation from Modified Short-Time Fourier
    Transform”, IEEE 1984, 10.1109/TASSP.1984.1164317
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Daniel W. Griffin, Jae S. Lim “Signal Estimation from Modified Short-Time Fourier
    Transform”, IEEE 1984, 10.1109/TASSP.1984.1164317
- en: Examples
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Generate a test signal, a 2 Vrms sine wave whose frequency is slowly modulated
    around 3kHz, corrupted by white noise of exponentially decreasing magnitude sampled
    at 10 kHz.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 生成一个测试信号，一个振幅为 2 Vrms 的正弦波，其频率围绕 3kHz 缓慢调制，同时受到以 10 kHz 采样的指数衰减幅度的白噪声的影响。
- en: '[PRE2]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Compute and plot the STFT’s magnitude.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 计算并绘制 STFT 的幅度。
- en: '[PRE3]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![../../_images/scipy-signal-stft-1_00_00.png](../Images/acfbfed5b0da1025e713f6fec512ba1e.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-signal-stft-1_00_00.png](../Images/acfbfed5b0da1025e713f6fec512ba1e.png)'
- en: 'Compare the energy of the signal *x* with the energy of its STFT:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 比较信号 *x* 的能量与其 STFT 的能量：
- en: '[PRE4]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
