["```py\nfft.rfftfreq(n, d=1.0)\n```", "```py\nf = [0, 1, ...,     n/2-1,     n/2] / (d*n)   if n is even\nf = [0, 1, ..., (n-1)/2-1, (n-1)/2] / (d*n)   if n is odd \n```", "```py\n>>> signal = np.array([-2, 8, 6, 4, 1, 0, 3, 5, -3, 4], dtype=float)\n>>> fourier = np.fft.rfft(signal)\n>>> n = signal.size\n>>> sample_rate = 100\n>>> freq = np.fft.fftfreq(n, d=1./sample_rate)\n>>> freq\narray([  0.,  10.,  20., ..., -30., -20., -10.])\n>>> freq = np.fft.rfftfreq(n, d=1./sample_rate)\n>>> freq\narray([  0.,  10.,  20.,  30.,  40.,  50.]) \n```"]