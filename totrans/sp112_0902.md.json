["```py\nscipy.special.kolmogorov(y, out=None) = <ufunc 'kolmogorov'>\n```", "```py\n>>> import numpy as np\n>>> from scipy.special import kolmogorov\n>>> from scipy.stats import kstwobign\n>>> kolmogorov([0, 0.5, 1.0])\narray([ 1\\.        ,  0.96394524,  0.26999967]) \n```", "```py\n>>> from scipy.stats import norm, laplace\n>>> rng = np.random.default_rng()\n>>> n = 1000\n>>> lap01 = laplace(0, 1)\n>>> x = np.sort(lap01.rvs(n, random_state=rng))\n>>> np.mean(x), np.std(x)\n(-0.05841730131499543, 1.3968109101997568) \n```", "```py\n>>> target = norm(0,1)  # Normal mean 0, stddev 1\n>>> cdfs = target.cdf(x)\n>>> ecdfs = np.arange(n+1, dtype=float)/n\n>>> gaps = np.column_stack([cdfs - ecdfs[:n], ecdfs[1:] - cdfs])\n>>> Dn = np.max(gaps)\n>>> Kn = np.sqrt(n) * Dn\n>>> print('Dn=%f, sqrt(n)*Dn=%f' % (Dn, Kn))\nDn=0.043363, sqrt(n)*Dn=1.371265\n>>> print(chr(10).join(['For a sample of size n drawn from a N(0, 1) distribution:',\n...   ' the approximate Kolmogorov probability that sqrt(n)*Dn>=%f is %f' %\n...    (Kn, kolmogorov(Kn)),\n...   ' the approximate Kolmogorov probability that sqrt(n)*Dn<=%f is %f' %\n...    (Kn, kstwobign.cdf(Kn))]))\nFor a sample of size n drawn from a N(0, 1) distribution:\n the approximate Kolmogorov probability that sqrt(n)*Dn>=1.371265 is 0.046533\n the approximate Kolmogorov probability that sqrt(n)*Dn<=1.371265 is 0.953467 \n```", "```py\n>>> import matplotlib.pyplot as plt\n>>> plt.step(np.concatenate([[-3], x]), ecdfs, where='post', label='Empirical CDF')\n>>> x3 = np.linspace(-3, 3, 100)\n>>> plt.plot(x3, target.cdf(x3), label='CDF for N(0, 1)')\n>>> plt.ylim([0, 1]); plt.grid(True); plt.legend();\n>>> # Add vertical lines marking Dn+ and Dn-\n>>> iminus, iplus = np.argmax(gaps, axis=0)\n>>> plt.vlines([x[iminus]], ecdfs[iminus], cdfs[iminus],\n...            color='r', linestyle='dashed', lw=4)\n>>> plt.vlines([x[iplus]], cdfs[iplus], ecdfs[iplus+1],\n...            color='r', linestyle='dashed', lw=4)\n>>> plt.show() \n```"]