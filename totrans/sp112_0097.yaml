- en: scipy.fftpack.idct
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fftpack.idct.html#scipy.fftpack.idct](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fftpack.idct.html#scipy.fftpack.idct)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return the Inverse Discrete Cosine Transform of an arbitrary type sequence.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The input array.
  prefs: []
  type: TYPE_NORMAL
- en: '**type**{1, 2, 3, 4}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Type of the DCT (see Notes). Default type is 2.
  prefs: []
  type: TYPE_NORMAL
- en: '**n**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Length of the transform. If `n < x.shape[axis]`, *x* is truncated. If `n > x.shape[axis]`,
    *x* is zero-padded. The default results in `n = x.shape[axis]`.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axis along which the idct is computed; the default is over the last axis (i.e.,
    `axis=-1`).
  prefs: []
  type: TYPE_NORMAL
- en: '**norm**{None, ‘ortho’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Normalization mode (see Notes). Default is None.
  prefs: []
  type: TYPE_NORMAL
- en: '**overwrite_x**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True, the contents of *x* can be destroyed; the default is False.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**idct**ndarray of real'
  prefs: []
  type: TYPE_NORMAL
- en: The transformed input array.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`dct`](scipy.fftpack.dct.html#scipy.fftpack.dct "scipy.fftpack.dct")'
  prefs: []
  type: TYPE_NORMAL
- en: Forward DCT
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: For a single dimension array *x*, `idct(x, norm='ortho')` is equal to MATLAB
    `idct(x)`.
  prefs: []
  type: TYPE_NORMAL
- en: ‘The’ IDCT is the IDCT of type 2, which is the same as DCT of type 3.
  prefs: []
  type: TYPE_NORMAL
- en: IDCT of type 1 is the DCT of type 1, IDCT of type 2 is the DCT of type 3, and
    IDCT of type 3 is the DCT of type 2\. IDCT of type 4 is the DCT of type 4\. For
    the definition of these types, see [`dct`](scipy.fftpack.dct.html#scipy.fftpack.dct
    "scipy.fftpack.dct").
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'The Type 1 DCT is equivalent to the DFT for real, even-symmetrical inputs.
    The output is also real and even-symmetrical. Half of the IFFT input is used to
    generate half of the IFFT output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
