["```py\nlinalg.multi_dot(arrays, *, out=None)\n```", "```py\ndef multi_dot(arrays): return functools.reduce(np.dot, arrays) \n```", "```py\ndef cost(A, B):\n    return A.shape[0] * A.shape[1] * B.shape[1] \n```", "```py\ncost((AB)C) = 10*100*5 + 10*5*50   = 5000 + 2500   = 7500\ncost(A(BC)) = 10*100*50 + 100*5*50 = 50000 + 25000 = 75000 \n```", "```py\n>>> from numpy.linalg import multi_dot\n>>> # Prepare some data\n>>> A = np.random.random((10000, 100))\n>>> B = np.random.random((100, 1000))\n>>> C = np.random.random((1000, 5))\n>>> D = np.random.random((5, 333))\n>>> # the actual dot multiplication\n>>> _ = multi_dot([A, B, C, D]) \n```", "```py\n>>> _ = np.dot(np.dot(np.dot(A, B), C), D)\n>>> # or\n>>> _ = A.dot(B).dot(C).dot(D) \n```"]