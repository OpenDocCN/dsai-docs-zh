- en: Conda Quickstart Guide for Ultralytics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[`docs.ultralytics.com/guides/conda-quickstart/`](https://docs.ultralytics.com/guides/conda-quickstart/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Ultralytics Conda Package Visual](img/0d051e1f1c548aa4d6744103a0bfd00c.png)'
  prefs: []
  type: TYPE_IMG
- en: This guide provides a comprehensive introduction to setting up a Conda environment
    for your Ultralytics projects. Conda is an open-source package and environment
    management system that offers an excellent alternative to pip for installing packages
    and dependencies. Its isolated environments make it particularly well-suited for
    data science and machine learning endeavors. For more details, visit the Ultralytics
    Conda package on [Anaconda](https://anaconda.org/conda-forge/ultralytics) and
    check out the Ultralytics feedstock repository for package updates on [GitHub](https://github.com/conda-forge/ultralytics-feedstock/).
  prefs: []
  type: TYPE_NORMAL
- en: '![Conda Version](https://anaconda.org/conda-forge/ultralytics) ![Conda Downloads](https://anaconda.org/conda-forge/ultralytics)
    ![Conda Recipe](https://anaconda.org/conda-forge/ultralytics) ![Conda Platforms](https://anaconda.org/conda-forge/ultralytics)'
  prefs: []
  type: TYPE_IMG
- en: What You Will Learn
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Setting up a Conda environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Ultralytics via Conda
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Initializing Ultralytics in your environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Ultralytics Docker images with Conda
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Prerequisites
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You should have Anaconda or Miniconda installed on your system. If not, download
    and install it from [Anaconda](https://www.anaconda.com/) or [Miniconda](https://docs.conda.io/projects/miniconda/en/latest/).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Setting up a Conda Environment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First, let''s create a new Conda environment. Open your terminal and run the
    following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Activate the new environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Installing Ultralytics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can install the Ultralytics package from the conda-forge channel. Execute
    the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Note on CUDA Environment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you''re working in a CUDA-enabled environment, it''s a good practice to
    install `ultralytics`, `pytorch`, and `pytorch-cuda` together to resolve any conflicts:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Using Ultralytics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'With Ultralytics installed, you can now start using its robust features for
    object detection, instance segmentation, and more. For example, to predict an
    image, you can run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Ultralytics Conda Docker Image
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you prefer using Docker, Ultralytics offers Docker images with a Conda environment
    included. You can pull these images from [DockerHub](https://hub.docker.com/r/ultralytics/ultralytics).
  prefs: []
  type: TYPE_NORMAL
- en: 'Pull the latest Ultralytics image:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Run the image:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Speeding Up Installation with Libmamba
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you're looking to [speed up the package installation](https://www.anaconda.com/blog/a-faster-conda-for-a-growing-community)
    process in Conda, you can opt to use `libmamba`, a fast, cross-platform, and dependency-aware
    package manager that serves as an alternative solver to Conda's default.
  prefs: []
  type: TYPE_NORMAL
- en: How to Enable Libmamba
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To enable `libmamba` as the solver for Conda, you can perform the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: First, install the `conda-libmamba-solver` package. This can be skipped if your
    Conda version is 4.11 or above, as `libmamba` is included by default.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, configure Conda to use `libmamba` as the solver:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: And that's it! Your Conda installation will now use `libmamba` as the solver,
    which should result in a faster package installation process.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Congratulations! You have successfully set up a Conda environment, installed
    the Ultralytics package, and are now ready to explore its rich functionalities.
    Feel free to dive deeper into the Ultralytics documentation for more advanced
    tutorials and examples.
  prefs: []
  type: TYPE_NORMAL
- en: FAQ
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: What is the process for setting up a Conda environment for Ultralytics projects?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Setting up a Conda environment for Ultralytics projects is straightforward
    and ensures smooth package management. First, create a new Conda environment using
    the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, activate the new environment with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, install Ultralytics from the conda-forge channel:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Why should I use Conda over pip for managing dependencies in Ultralytics projects?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Conda is a robust package and environment management system that offers several
    advantages over pip. It manages dependencies efficiently and ensures that all
    necessary libraries are compatible. Conda's isolated environments prevent conflicts
    between packages, which is crucial in data science and machine learning projects.
    Additionally, Conda supports binary package distribution, speeding up the installation
    process.
  prefs: []
  type: TYPE_NORMAL
- en: Can I use Ultralytics YOLO in a CUDA-enabled environment for faster performance?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Yes, you can enhance performance by utilizing a CUDA-enabled environment. Ensure
    that you install `ultralytics`, `pytorch`, and `pytorch-cuda` together to avoid
    conflicts:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: This setup enables GPU acceleration, crucial for intensive tasks like deep learning
    model training and inference. For more information, visit the Ultralytics installation
    guide.
  prefs: []
  type: TYPE_NORMAL
- en: What are the benefits of using Ultralytics Docker images with a Conda environment?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Using Ultralytics Docker images ensures a consistent and reproducible environment,
    eliminating "it works on my machine" issues. These images include a pre-configured
    Conda environment, simplifying the setup process. You can pull and run the latest
    Ultralytics Docker image with the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: This approach is ideal for deploying applications in production or running complex
    workflows without manual configuration. Learn more about Ultralytics Conda Docker
    Image.
  prefs: []
  type: TYPE_NORMAL
- en: How can I speed up Conda package installation in my Ultralytics environment?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can speed up the package installation process by using `libmamba`, a fast
    dependency solver for Conda. First, install the `conda-libmamba-solver` package:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Then configure Conda to use `libmamba` as the solver:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: This setup provides faster and more efficient package management. For more tips
    on optimizing your environment, read about libmamba installation.
  prefs: []
  type: TYPE_NORMAL
