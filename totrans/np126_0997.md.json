["```py\nnumpy.percentile(a, q, axis=None, out=None, overwrite_input=False, method='linear', keepdims=False, *, interpolation=None)\n```", "```py\n>>> a = np.array([[10, 7, 4], [3, 2, 1]])\n>>> a\narray([[10,  7,  4],\n [ 3,  2,  1]])\n>>> np.percentile(a, 50)\n3.5\n>>> np.percentile(a, 50, axis=0)\narray([6.5, 4.5, 2.5])\n>>> np.percentile(a, 50, axis=1)\narray([7.,  2.])\n>>> np.percentile(a, 50, axis=1, keepdims=True)\narray([[7.],\n [2.]]) \n```", "```py\n>>> m = np.percentile(a, 50, axis=0)\n>>> out = np.zeros_like(m)\n>>> np.percentile(a, 50, axis=0, out=out)\narray([6.5, 4.5, 2.5])\n>>> m\narray([6.5, 4.5, 2.5]) \n```", "```py\n>>> b = a.copy()\n>>> np.percentile(b, 50, axis=1, overwrite_input=True)\narray([7.,  2.])\n>>> assert not np.all(a == b) \n```", "```py\nimport matplotlib.pyplot as plt\n\na = np.arange(4)\np = np.linspace(0, 100, 6001)\nax = plt.gca()\nlines = [\n    ('linear', '-', 'C0'),\n    ('inverted_cdf', ':', 'C1'),\n    # Almost the same as `inverted_cdf`:\n    ('averaged_inverted_cdf', '-.', 'C1'),\n    ('closest_observation', ':', 'C2'),\n    ('interpolated_inverted_cdf', '--', 'C1'),\n    ('hazen', '--', 'C3'),\n    ('weibull', '-.', 'C4'),\n    ('median_unbiased', '--', 'C5'),\n    ('normal_unbiased', '-.', 'C6'),\n    ]\nfor method, style, color in lines:\n    ax.plot(\n        p, np.percentile(a, p, method=method),\n        label=method, linestyle=style, color=color)\nax.set(\n    title='Percentiles for different methods and data: ' + str(a),\n    xlabel='Percentile',\n    ylabel='Estimated percentile value',\n    yticks=a)\nax.legend(bbox_to_anchor=(1.03, 1))\nplt.tight_layout()\nplt.show() \n```"]