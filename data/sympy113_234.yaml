- en: Control API
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 控制 API
- en: Original text：[https://docs.sympy.org/latest/modules/physics/control/lti.html](https://docs.sympy.org/latest/modules/physics/control/lti.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.sympy.org/latest/modules/physics/control/lti.html](https://docs.sympy.org/latest/modules/physics/control/lti.html)
- en: '## lti'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '## lti'
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: A class for representing LTI (Linear, time-invariant) systems that can be strictly
    described by ratio of polynomials in the Laplace transform complex variable. The
    arguments are `num`, `den`, and `var`, where `num` and `den` are numerator and
    denominator polynomials of the `TransferFunction` respectively, and the third
    argument is a complex variable of the Laplace transform used by these polynomials
    of the transfer function. `num` and `den` can be either polynomials or numbers,
    whereas `var` has to be a [`Symbol`](../../core.html#sympy.core.symbol.Symbol
    "sympy.core.symbol.Symbol").
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 用于表示可以由拉普拉斯变换复数变量中的多项式比严格描述的LTI（线性、时不变）系统的类。参数包括 `num`、`den` 和 `var`，其中 `num`
    和 `den` 分别是传递函数的分子和分母多项式，第三个参数是这些传递函数中使用的拉普拉斯变换的复数变量。`num` 和 `den` 可以是多项式或数字，而
    `var` 必须是一个[`Symbol`](../../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol")。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**num** : Expr, Number'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**num**：表达式，数值'
- en: The numerator polynomial of the transfer function.
  id: totrans-7
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 传递函数的分子多项式。
- en: '**den** : Expr, Number'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**den**：表达式，数值'
- en: The denominator polynomial of the transfer function.
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 传递函数的分母多项式。
- en: '**var** : Symbol'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**var**：符号'
- en: Complex variable of the Laplace transform used by the polynomials of the transfer
    function.
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 传递函数的拉普拉斯变换中使用的复数变量。
- en: 'Raises:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: '**TypeError**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**TypeError**'
- en: When `var` is not a Symbol or when `num` or `den` is not a number or a polynomial.
  id: totrans-14
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当 `var` 不是符号或 `num` 或 `den` 不是数字或多项式时。
- en: '**ValueError**'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**ValueError**'
- en: When `den` is zero.
  id: totrans-16
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当 `den` 为零时。
- en: Explanation
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Generally, a dynamical system representing a physical model can be described
    in terms of Linear Ordinary Differential Equations like -
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，表示物理模型的动态系统可以用线性常微分方程描述，如 -
- en: \(\small{b_{m}y^{\left(m\right)}+b_{m-1}y^{\left(m-1\right)}+\dots+b_{1}y^{\left(1\right)}+b_{0}y=
    a_{n}x^{\left(n\right)}+a_{n-1}x^{\left(n-1\right)}+\dots+a_{1}x^{\left(1\right)}+a_{0}x}\)
  id: totrans-19
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \(\small{b_{m}y^{\left(m\right)}+b_{m-1}y^{\left(m-1\right)}+\dots+b_{1}y^{\left(1\right)}+b_{0}y=
    a_{n}x^{\left(n\right)}+a_{n-1}x^{\left(n-1\right)}+\dots+a_{1}x^{\left(1\right)}+a_{0}x}\)
- en: Here, \(x\) is the input signal and \(y\) is the output signal and superscript
    on both is the order of derivative (not exponent). Derivative is taken with respect
    to the independent variable, \(t\). Also, generally \(m\) is greater than \(n\).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，\(x\) 是输入信号，\(y\) 是输出信号，两者上的上标表示导数的阶数（不是指数）。导数是相对于自变量 \(t\) 求取的。一般情况下，\(m\)
    大于 \(n\)。
- en: It is not feasible to analyse the properties of such systems in their native
    form therefore, we use mathematical tools like Laplace transform to get a better
    perspective. Taking the Laplace transform of both the sides in the equation (at
    zero initial conditions), we get -
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在其原生形式下分析这类系统的属性是不可行的，因此我们使用拉普拉斯变换等数学工具来获得更好的视角。在方程两边（在零初值条件下）进行拉普拉斯变换，我们得到
    -
- en: \(\small{\mathcal{L}[b_{m}y^{\left(m\right)}+b_{m-1}y^{\left(m-1\right)}+\dots+b_{1}y^{\left(1\right)}+b_{0}y]=
    \mathcal{L}[a_{n}x^{\left(n\right)}+a_{n-1}x^{\left(n-1\right)}+\dots+a_{1}x^{\left(1\right)}+a_{0}x]}\)
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \(\small{\mathcal{L}[b_{m}y^{\left(m\right)}+b_{m-1}y^{\left(m-1\right)}+\dots+b_{1}y^{\left(1\right)}+b_{0}y]=
    \mathcal{L}[a_{n}x^{\left(n\right)}+a_{n-1}x^{\left(n-1\right)}+\dots+a_{1}x^{\left(1\right)}+a_{0}x]}\)
- en: Using the linearity property of Laplace transform and also considering zero
    initial conditions (i.e. \(\small{y(0^{-}) = 0}\), \(\small{y'(0^{-}) = 0}\) and
    so on), the equation above gets translated to -
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 利用拉普拉斯变换的线性性质，并考虑零初值条件（即 \(\small{y(0^{-}) = 0}\)，\(\small{y'(0^{-}) = 0}\)
    等），上述方程可以转化为 -
- en: \(\small{b_{m}\mathcal{L}[y^{\left(m\right)}]+\dots+b_{1}\mathcal{L}[y^{\left(1\right)}]+b_{0}\mathcal{L}[y]=
    a_{n}\mathcal{L}[x^{\left(n\right)}]+\dots+a_{1}\mathcal{L}[x^{\left(1\right)}]+a_{0}\mathcal{L}[x]}\)
  id: totrans-24
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \(\small{b_{m}\mathcal{L}[y^{\left(m\right)}]+\dots+b_{1}\mathcal{L}[y^{\left(1\right)}]+b_{0}\mathcal{L}[y]=
    a_{n}\mathcal{L}[x^{\left(n\right)}]+\dots+a_{1}\mathcal{L}[x^{\left(1\right)}]+a_{0}\mathcal{L}[x]}\)
- en: Now, applying Derivative property of Laplace transform,
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，应用拉普拉斯变换的导数性质，
- en: \(\small{b_{m}s^{m}\mathcal{L}[y]+\dots+b_{1}s\mathcal{L}[y]+b_{0}\mathcal{L}[y]=
    a_{n}s^{n}\mathcal{L}[x]+\dots+a_{1}s\mathcal{L}[x]+a_{0}\mathcal{L}[x]}\)
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \(\small{b_{m}s^{m}\mathcal{L}[y]+\dots+b_{1}s\mathcal{L}[y]+b_{0}\mathcal{L}[y]=
    a_{n}s^{n}\mathcal{L}[x]+\dots+a_{1}s\mathcal{L}[x]+a_{0}\mathcal{L}[x]}\)
- en: Here, the superscript on \(s\) is **exponent**. Note that the zero initial conditions
    assumption, mentioned above, is very important and cannot be ignored otherwise
    the dynamical system cannot be considered time-independent and the simplified
    equation above cannot be reached.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，\(s\)上的上标是**指数**。请注意，上面提到的零初始条件假设非常重要，不能忽略，否则动态系统不能被视为时间独立，并且无法达到上述简化的方程。
- en: Collecting \(\mathcal{L}[y]\) and \(\mathcal{L}[x]\) terms from both the sides
    and taking the ratio \(\frac{ \mathcal{L}\left\{y\right\} }{ \mathcal{L}\left\{x\right\}
    }\), we get the typical rational form of transfer function.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 从两边收集\(\mathcal{L}[y]\)和\(\mathcal{L}[x]\)项，并取比率\(\frac{ \mathcal{L}\left\{y\right\}
    }{ \mathcal{L}\left\{x\right\} }\)，我们得到传递函数的典型有理形式。
- en: The numerator of the transfer function is, therefore, the Laplace transform
    of the output signal (The signals are represented as functions of time) and similarly,
    the denominator of the transfer function is the Laplace transform of the input
    signal. It is also a convention to denote the input and output signal’s Laplace
    transform with capital alphabets like shown below.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 传递函数的分子因此是输出信号（信号表示为时间函数）的拉普拉斯变换，类似地，传递函数的分母是输入信号的拉普拉斯变换。如下所示，将输入和输出信号的拉普拉斯变换用大写字母表示也是一种约定。
- en: \(H(s) = \frac{Y(s)}{X(s)} = \frac{ \mathcal{L}\left\{y(t)\right\} }{ \mathcal{L}\left\{x(t)\right\}
    }\)
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \(H(s) = \frac{Y(s)}{X(s)} = \frac{ \mathcal{L}\left\{y(t)\right\} }{ \mathcal{L}\left\{x(t)\right\}
    }\)
- en: \(s\), also known as complex frequency, is a complex variable in the Laplace
    domain. It corresponds to the equivalent variable \(t\), in the time domain. Transfer
    functions are sometimes also referred to as the Laplace transform of the system’s
    impulse response. Transfer function, \(H\), is represented as a rational function
    in \(s\) like,
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: \(s\)，也称为复频率，在拉普拉斯域中是一个复变量。它对应于时间域中的等效变量\(t\)。传递函数有时也称为系统冲激响应的拉普拉斯变换。传递函数\(H\)在\(s\)中表示为一个有理函数，如下所示，
- en: \(H(s) =\ \frac{a_{n}s^{n}+a_{n-1}s^{n-1}+\dots+a_{1}s+a_{0}}{b_{m}s^{m}+b_{m-1}s^{m-1}+\dots+b_{1}s+b_{0}}\)
  id: totrans-32
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \(H(s) =\ \frac{a_{n}s^{n}+a_{n-1}s^{n-1}+\dots+a_{1}s+a_{0}}{b_{m}s^{m}+b_{m-1}s^{m-1}+\dots+b_{1}s+b_{0}}\)
- en: Examples
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Any complex variable can be used for `var`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 任何复变量都可以用于`var`。
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To negate a transfer function the `-` operator can be prepended:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 要对传递函数取反，可以在其前面加上`-`运算符：
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You can use a float or an integer (or other constants) as numerator and denominator:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用浮点数或整数（或其他常数）作为分子和分母：
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You can take the integer power of a transfer function using the `**` operator:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`**`运算符对传递函数进行整数幂运算：
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Addition, subtraction, and multiplication of transfer functions can form unevaluated
    `Series` or `Parallel` objects.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 传递函数的加法、减法和乘法可以形成未计算的`Series`或`Parallel`对象。
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: These unevaluated `Series` or `Parallel` objects can convert into the resultant
    transfer function using `.doit()` method or by `.rewrite(TransferFunction)`.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这些未计算的`Series`或`Parallel`对象可以通过`.doit()`方法或`.rewrite(TransferFunction)`转换为最终的传递函数。
- en: '[PRE7]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: See also
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`Feedback`](#sympy.physics.control.lti.Feedback "sympy.physics.control.lti.Feedback"),
    [`Series`](#sympy.physics.control.lti.Series "sympy.physics.control.lti.Series"),
    [`Parallel`](#sympy.physics.control.lti.Parallel "sympy.physics.control.lti.Parallel")'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[`反馈`](#sympy.physics.control.lti.Feedback "sympy.physics.control.lti.Feedback"),
    [`串联`](#sympy.physics.control.lti.Series "sympy.physics.control.lti.Series"),
    [`并联`](#sympy.physics.control.lti.Parallel "sympy.physics.control.lti.Parallel")'
- en: References
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R734](#id1)]'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R734](#id1)]'
- en: '[https://en.wikipedia.org/wiki/Transfer_function](https://en.wikipedia.org/wiki/Transfer_function)'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/传递函数](https://zh.wikipedia.org/wiki/传递函数)'
- en: '[[R735](#id2)]'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R735](#id2)]'
- en: '[https://en.wikipedia.org/wiki/Laplace_transform](https://en.wikipedia.org/wiki/Laplace_transform)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/拉普拉斯变换](https://zh.wikipedia.org/wiki/拉普拉斯变换)'
- en: '[PRE8]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Computes the gain of the response as the frequency approaches zero.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 计算频率接近零时响应的增益。
- en: The DC gain is infinite for systems with pure integrators.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 对于纯积分器系统，直流增益是无穷大。
- en: Examples
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE9]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Returns the denominator polynomial of the transfer function.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 返回传递函数的分母多项式。
- en: Examples
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE11]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Returns the system response at any point in the real or complex plane.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 返回在实数或复数平面上任意点的系统响应。
- en: Examples
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE13]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Returns the transfer function with numerator and denominator in expanded form.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 返回展开形式中分子和分母的传递函数。
- en: Examples
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE15]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Creates a new `TransferFunction` efficiently from a list of coefficients.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 从系数列表高效地创建新的`TransferFunction`。
- en: 'Parameters:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**num_list** : Sequence'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**num_list** : 序列'
- en: Sequence comprising of numerator coefficients.
  id: totrans-75
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 组成分子系数的序列。
- en: '**den_list** : Sequence'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**den_list** : 序列'
- en: Sequence comprising of denominator coefficients.
  id: totrans-77
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 组成分母系数的序列。
- en: '**var** : Symbol'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**var** : 符号'
- en: Complex variable of the Laplace transform used by the polynomials of the transfer
    function.
  id: totrans-79
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 传递函数多项式使用的复变量拉普拉斯变换。
- en: 'Raises:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 抛出：
- en: '**ZeroDivisionError**'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**ZeroDivisionError**'
- en: When the constructed denominator is zero.
  id: totrans-82
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当构造的分母为零时。
- en: Examples
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE17]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Create a Transfer Function with more than one variable >>> tf1 = TransferFunction.from_coeff_lists([p,
    1], [2*p, 0, 4], s) >>> tf1 TransferFunction(p*s + 1, 2*p*s**2 + 4, s)
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用多个变量创建传递函数 >>> tf1 = TransferFunction.from_coeff_lists([p, 1], [2*p, 0, 4],
    s) >>> tf1 TransferFunction(p*s + 1, 2*p*s**2 + 4, s)
- en: '[PRE18]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Creates a new `TransferFunction` efficiently from a rational expression.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 从有理表达式有效地创建新的 `TransferFunction`。
- en: 'Parameters:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**expr** : Expr, Number'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**expr** : 表达式，数值'
- en: The rational expression representing the `TransferFunction`.
  id: totrans-90
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 表示 `TransferFunction` 的有理表达式。
- en: '**var** : Symbol, optional'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**var** : 符号，可选'
- en: Complex variable of the Laplace transform used by the polynomials of the transfer
    function.
  id: totrans-92
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 传递函数多项式使用的复变量拉普拉斯变换。
- en: 'Raises:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 抛出：
- en: '**ValueError**'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**ValueError**'
- en: When `expr` is of type `Number` and optional parameter `var` is not passed.
  id: totrans-95
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当 `expr` 是 `Number` 类型且可选参数 `var` 未传递时。
- en: ''
  id: totrans-96
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When `expr` has more than one variables and an optional parameter `var` is not
    passed.
  id: totrans-97
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当 `expr` 包含多个变量且可选参数 `var` 未传递时。
- en: '**ZeroDivisionError**'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '**ZeroDivisionError**'
- en: When denominator of `expr` is zero or it has `ComplexInfinity` in its numerator.
  id: totrans-99
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当 `expr` 的分母为零或其分子中包含 `ComplexInfinity` 时。
- en: Examples
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE19]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: In case of conflict between two or more variables in a expression, SymPy will
    raise a `ValueError`, if `var` is not passed by the user.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在表达式中存在两个或多个变量的冲突，SymPy 将会抛出 `ValueError`，如果用户未传递 `var`。
- en: '[PRE20]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: This can be corrected by specifying the `var` parameter manually.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过手动指定 `var` 参数来纠正。
- en: '[PRE21]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '`var` also need to be specified when `expr` is a `Number`'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 当 `expr` 是 `Number` 时，也需要指定 `var`。
- en: '[PRE22]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Creates a new `TransferFunction` from given zeros, poles and gain.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 从给定的零点、极点和增益创建新的 `TransferFunction`。
- en: 'Parameters:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**zeros** : Sequence'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**zeros** : 序列'
- en: Sequence comprising of zeros of transfer function.
  id: totrans-112
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 组成传递函数的零点序列。
- en: '**poles** : Sequence'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '**poles** : 序列'
- en: Sequence comprising of poles of transfer function.
  id: totrans-114
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 传递函数的极点序列。
- en: '**gain** : Number, Symbol, Expression'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '**gain** : 数值，符号，表达式'
- en: A scalar value specifying gain of the model.
  id: totrans-116
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 指定模型增益的标量值。
- en: '**var** : Symbol'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '**var** : 符号'
- en: Complex variable of the Laplace transform used by the polynomials of the transfer
    function.
  id: totrans-118
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 传递函数多项式使用的复变量拉普拉斯变换。
- en: Examples
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE24]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Create a Transfer Function with variable poles and zeros >>> tf1 = TransferFunction.from_zpk([p,
    k], [p + k, p - k], 2, s) >>> tf1 TransferFunction(2*(-k + s)*(-p + s), (-k -
    p + s)*(k - p + s), s)
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用变量极点和零点创建传递函数 >>> tf1 = TransferFunction.from_zpk([p, k], [p + k, p - k],
    2, s) >>> tf1 TransferFunction(2*(-k + s)*(-p + s), (-k - p + s)*(k - p + s),
    s)
- en: Complex poles or zeros are acceptable >>> tf2 = TransferFunction.from_zpk([0],
    [1-1j, 1+1j, 2], -2, s) >>> tf2 TransferFunction(-2*s, (s - 2)*(s - 1.0 - 1.0*I)*(s
    - 1.0 + 1.0*I), s)
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 复极点或零点都是可以接受的 >>> tf2 = TransferFunction.from_zpk([0], [1-1j, 1+1j, 2], -2,
    s) >>> tf2 TransferFunction(-2*s, (s - 2)*(s - 1.0 - 1.0*I)*(s - 1.0 + 1.0*I),
    s)
- en: '[PRE25]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Returns True if degree of the numerator polynomial is equal to degree of the
    denominator polynomial, else False.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 返回如果分子多项式的次数等于分母多项式的次数则为True，否则为False。
- en: Examples
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE26]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Returns True if degree of the numerator polynomial is less than or equal to
    degree of the denominator polynomial, else False.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 返回如果分子多项式的次数小于或等于分母多项式的次数则为True，否则为False。
- en: Examples
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE28]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Returns True if the transfer function is asymptotically stable; else False.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 返回如果传递函数是渐近稳定的则为True，否则为False。
- en: This would not check the marginal or conditional stability of the system.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 这不会检查系统的边际或条件稳定性。
- en: Examples
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE30]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Returns True if degree of the numerator polynomial is strictly less than degree
    of the denominator polynomial, else False.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 返回如果分子多项式的次数严格小于分母多项式的次数则为True，否则为False。
- en: Examples
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE32]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Returns the numerator polynomial of the transfer function.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 返回传递函数的分子多项式。
- en: Examples
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE34]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Returns the poles of a transfer function.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 返回传递函数的极点。
- en: Examples
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE36]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Converts a `TransferFunction` object to SymPy Expr.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `TransferFunction` 对象转换为 SymPy 表达式。
- en: Examples
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE38]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Returns the complex variable of the Laplace transform used by the polynomials
    of the transfer function.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 返回传递函数多项式使用的复变量拉普拉斯变换。
- en: Examples
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE40]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[PRE41]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Returns the zeros of a transfer function.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 返回传递函数的零点。
- en: Examples
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE42]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[PRE43]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: A class for representing a series configuration of SISO systems.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 用于表示串联配置的 SISO 系统的类。
- en: 'Parameters:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**args** : SISOLinearTimeInvariant'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '**args** : SISO 线性时不变'
- en: SISO systems in a series configuration.
  id: totrans-164
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 串联配置的 SISO 系统。
- en: '**evaluate** : Boolean, Keyword'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '**评估** : 布尔值，关键字'
- en: When passed `True`, returns the equivalent `Series(*args).doit()`. Set to `False`
    by default.
  id: totrans-166
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当传递 `True` 时，返回等效于 `Series(*args).doit()`。 默认设置为 `False`。
- en: 'Raises:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: '**ValueError**'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '**数值错误**'
- en: When no argument is passed.
  id: totrans-169
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当没有传递参数时。
- en: ''
  id: totrans-170
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`var` attribute is not same for every system.'
  id: totrans-171
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`var` 属性对每个系统不相同。'
- en: '**TypeError**'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '**类型错误**'
- en: Any of the passed `*args` has unsupported type
  id: totrans-173
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 任何传递的 `*args` 具有不支持的类型
- en: ''
  id: totrans-174
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A combination of SISO and MIMO systems is passed. There should be homogeneity
    in the type of systems passed, SISO in this case.
  id: totrans-175
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 传递了 SISO 和 MIMO 系统的组合。 传递的系统类型应保持同质性，此处为 SISO。
- en: Examples
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE44]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'You can get the resultant transfer function by using `.doit()` method:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过使用 `.doit()` 方法获得结果传递函数：
- en: '[PRE45]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Notes
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: All the transfer functions should use the same complex variable `var` of the
    Laplace transform.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 所有传递函数应使用拉普拉斯变换的同一复变量 `var`。
- en: See also
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`MIMOSeries`](#sympy.physics.control.lti.MIMOSeries "sympy.physics.control.lti.MIMOSeries"),
    [`Parallel`](#sympy.physics.control.lti.Parallel "sympy.physics.control.lti.Parallel"),
    [`TransferFunction`](#sympy.physics.control.lti.TransferFunction "sympy.physics.control.lti.TransferFunction"),
    [`Feedback`](#sympy.physics.control.lti.Feedback "sympy.physics.control.lti.Feedback")'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '[`MIMO 串联`](#sympy.physics.control.lti.MIMOSeries "sympy.physics.control.lti.MIMOSeries"),
    [`并联`](#sympy.physics.control.lti.Parallel "sympy.physics.control.lti.Parallel"),
    [`传递函数`](#sympy.physics.control.lti.TransferFunction "sympy.physics.control.lti.TransferFunction"),
    [`反馈`](#sympy.physics.control.lti.Feedback "sympy.physics.control.lti.Feedback")'
- en: '[PRE46]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Returns the resultant transfer function obtained after evaluating the transfer
    functions in series configuration.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 返回在串联配置中评估传递函数后获得的结果传递函数。
- en: Examples
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE47]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Returns True if degree of the numerator polynomial of the resultant transfer
    function is equal to degree of the denominator polynomial of the same, else False.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 如果结果传递函数的分子多项式的度数等于相同分母多项式的度数，则返回 True，否则返回 False。
- en: Examples
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE49]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[PRE50]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Returns True if degree of the numerator polynomial of the resultant transfer
    function is less than or equal to degree of the denominator polynomial of the
    same, else False.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 如果结果传递函数的分子多项式的度数小于或等于相同分母多项式的度数，则返回 True，否则返回 False。
- en: Examples
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE51]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Returns True if degree of the numerator polynomial of the resultant transfer
    function is strictly less than degree of the denominator polynomial of the same,
    else False.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 如果结果传递函数的分子多项式的度数严格小于相同分母多项式的度数，则返回 True，否则返回 False。
- en: Examples
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE53]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '[PRE54]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Returns the equivalent `Expr` object.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 返回等效于 `Expr` 对象。
- en: '[PRE55]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Returns the complex variable used by all the transfer functions.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 返回所有传递函数使用的复变量。
- en: Examples
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE56]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '[PRE57]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: A class for representing a parallel configuration of SISO systems.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 用于表示串联配置的 SISO 系统的类。
- en: 'Parameters:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**args** : SISOLinearTimeInvariant'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '**args** : SISO 线性时不变'
- en: SISO systems in a parallel arrangement.
  id: totrans-210
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 并联排列的 SISO 系统。
- en: '**evaluate** : Boolean, Keyword'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '**评估** : 布尔值，关键字'
- en: When passed `True`, returns the equivalent `Parallel(*args).doit()`. Set to
    `False` by default.
  id: totrans-212
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当传递 `True` 时，返回等效于 `Parallel(*args).doit()`。 默认设置为 `False`。
- en: 'Raises:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: '**ValueError**'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '**数值错误**'
- en: When no argument is passed.
  id: totrans-215
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当没有传递参数时。
- en: ''
  id: totrans-216
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`var` attribute is not same for every system.'
  id: totrans-217
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`var` 属性对每个系统不相同。'
- en: '**TypeError**'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '**类型错误**'
- en: Any of the passed `*args` has unsupported type
  id: totrans-219
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 任何传递的 `*args` 具有不支持的类型
- en: ''
  id: totrans-220
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A combination of SISO and MIMO systems is passed. There should be homogeneity
    in the type of systems passed.
  id: totrans-221
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 传递了 SISO 和 MIMO 系统的组合。 传递的系统类型应保持同质性。
- en: Examples
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE58]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'You can get the resultant transfer function by using `.doit()` method:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过使用 `.doit()` 方法获得结果传递函数：
- en: '[PRE59]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Notes
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: All the transfer functions should use the same complex variable `var` of the
    Laplace transform.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 所有传递函数应使用拉普拉斯变换的同一复变量 `var`。
- en: See also
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`Series`](#sympy.physics.control.lti.Series "sympy.physics.control.lti.Series"),
    [`TransferFunction`](#sympy.physics.control.lti.TransferFunction "sympy.physics.control.lti.TransferFunction"),
    [`Feedback`](#sympy.physics.control.lti.Feedback "sympy.physics.control.lti.Feedback")'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '[`串联`](#sympy.physics.control.lti.Series "sympy.physics.control.lti.Series"),
    [`传递函数`](#sympy.physics.control.lti.TransferFunction "sympy.physics.control.lti.TransferFunction"),
    [`反馈`](#sympy.physics.control.lti.Feedback "sympy.physics.control.lti.Feedback")'
- en: '[PRE60]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Returns the resultant transfer function obtained after evaluating the transfer
    functions in parallel configuration.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 返回在并联配置中评估传递函数后获得的结果传递函数。
- en: Examples
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE61]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '[PRE62]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Returns True if degree of the numerator polynomial of the resultant transfer
    function is equal to degree of the denominator polynomial of the same, else False.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 如果结果传递函数的分子多项式的次数等于相同的分母多项式的次数，则返回True，否则返回False。
- en: Examples
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE63]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: '[PRE64]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: Returns True if degree of the numerator polynomial of the resultant transfer
    function is less than or equal to degree of the denominator polynomial of the
    same, else False.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 如果结果传递函数的分子多项式的次数小于或等于相同的分母多项式的次数，则返回True，否则返回False。
- en: Examples
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE65]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '[PRE66]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Returns True if degree of the numerator polynomial of the resultant transfer
    function is strictly less than degree of the denominator polynomial of the same,
    else False.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 如果结果传递函数的分子多项式的次数严格小于分母多项式的次数，则返回True，否则返回False。
- en: Examples
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE67]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: '[PRE68]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Returns the equivalent `Expr` object.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 返回等效的`Expr`对象。
- en: '[PRE69]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Returns the complex variable used by all the transfer functions.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 返回所有传递函数使用的复数变量。
- en: Examples
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE70]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '[PRE71]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: A class for representing closed-loop feedback interconnection between two SISO
    input/output systems.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 一个用于表示两个SISO输入/输出系统之间闭环反馈互连的类。
- en: The first argument, `sys1`, is the feedforward part of the closed-loop system
    or in simple words, the dynamical model representing the process to be controlled.
    The second argument, `sys2`, is the feedback system and controls the fed back
    signal to `sys1`. Both `sys1` and `sys2` can either be `Series` or `TransferFunction`
    objects.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个参数`sys1`是闭环系统的前馈部分，或者简单来说，是代表要控制的过程的动态模型。第二个参数`sys2`是反馈系统，并控制反馈信号到`sys1`。`sys1`和`sys2`都可以是`Series`或`TransferFunction`对象。
- en: 'Parameters:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**sys1** : Series, TransferFunction'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '**sys1** : Series, TransferFunction'
- en: The feedforward path system.
  id: totrans-257
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 前馈路径系统。
- en: '**sys2** : Series, TransferFunction, optional'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '**sys2** : Series, TransferFunction, optional'
- en: The feedback path system (often a feedback controller). It is the model sitting
    on the feedback path.
  id: totrans-259
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 反馈路径系统（通常是反馈控制器）。它是位于反馈路径上的模型。
- en: ''
  id: totrans-260
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: If not specified explicitly, the sys2 is assumed to be unit (1.0) transfer function.
  id: totrans-261
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果未明确指定，假设`sys2`为单位（1.0）传递函数。
- en: '**sign** : int, optional'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '**sign** : int, optional'
- en: The sign of feedback. Can either be `1` (for positive feedback) or `-1` (for
    negative feedback). Default value is \(-1\).
  id: totrans-263
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 反馈的符号。可以是`1`（正反馈）或`-1`（负反馈）。默认值为\(-1\)。
- en: 'Raises:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 抛出：
- en: '**ValueError**'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '**ValueError**'
- en: When `sys1` and `sys2` are not using the same complex variable of the Laplace
    transform.
  id: totrans-266
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当`sys1`和`sys2`没有使用相同的拉普拉斯变换复数变量时。
- en: ''
  id: totrans-267
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When a combination of `sys1` and `sys2` yields zero denominator.
  id: totrans-268
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当`sys1`和`sys2`的组合产生零分母时。
- en: '**TypeError**'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '**TypeError**'
- en: When either `sys1` or `sys2` is not a `Series` or a `TransferFunction` object.
  id: totrans-270
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当`sys1`或`sys2`不是`Series`或`TransferFunction`对象时。
- en: Examples
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE72]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: You can get the feedforward and feedback path systems by using `.sys1` and `.sys2`
    respectively.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以分别使用`.sys1`和`.sys2`获取前馈和反馈路径系统。
- en: '[PRE73]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: You can get the resultant closed loop transfer function obtained by negative
    feedback interconnection using `.doit()` method.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`.doit()`方法，你可以获得通过负反馈互连得到的结果闭环传递函数。
- en: '[PRE74]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'To negate a `Feedback` object, the `-` operator can be prepended:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 要否定`Feedback`对象，可以添加`-`运算符：
- en: '[PRE75]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: See also
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`MIMOFeedback`](#sympy.physics.control.lti.MIMOFeedback "sympy.physics.control.lti.MIMOFeedback"),
    [`Series`](#sympy.physics.control.lti.Series "sympy.physics.control.lti.Series"),
    [`Parallel`](#sympy.physics.control.lti.Parallel "sympy.physics.control.lti.Parallel")'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '[`MIMOFeedback`](#sympy.physics.control.lti.MIMOFeedback "sympy.physics.control.lti.MIMOFeedback"),
    [`Series`](#sympy.physics.control.lti.Series "sympy.physics.control.lti.Series"),
    [`Parallel`](#sympy.physics.control.lti.Parallel "sympy.physics.control.lti.Parallel")'
- en: '[PRE76]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: Returns the denominator of the closed loop feedback model.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 返回闭环反馈模型的分母。
- en: '[PRE77]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: Returns the resultant transfer function obtained by the feedback interconnection.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 返回通过反馈互连得到的结果传递函数。
- en: Examples
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE78]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: Use kwarg `expand=True` to expand the resultant transfer function. Use `cancel=True`
    to cancel out the common terms in numerator and denominator.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 使用关键字参数`expand=True`来展开结果传递函数。使用`cancel=True`来取消分子和分母中的公共项。
- en: '[PRE79]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '[PRE80]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Returns the numerator of the closed loop feedback system.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 返回闭环反馈系统的分子。
- en: '[PRE81]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: Returns the sensitivity function of the feedback loop.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 返回反馈环路的灵敏度函数。
- en: Sensitivity of a Feedback system is the ratio of change in the open loop gain
    to the change in the closed loop gain.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 反馈系统的敏感性是开环增益变化与闭环增益变化的比率。
- en: Note
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This method would not return the complementary sensitivity function.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法不会返回互补的敏感性函数。
- en: Examples
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE82]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: '[PRE83]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: Returns the type of MIMO Feedback model. `1` for Positive and `-1` for Negative.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 返回MIMO反馈模型的类型。 `1`表示正反馈，`-1`表示负反馈。
- en: '[PRE84]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: Returns the feedforward system of the feedback interconnection.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 返回反馈互联的前馈系统。
- en: Examples
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE85]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: '[PRE86]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: Returns the feedback controller of the feedback interconnection.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 返回反馈互联的反馈控制器。
- en: Examples
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE87]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '[PRE88]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: Converts a `Feedback` object to SymPy Expr.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 将`Feedback`对象转换为SymPy表达式。
- en: Examples
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE89]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: '[PRE90]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: Returns the complex variable of the Laplace transform used by all the transfer
    functions involved in the feedback interconnection.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 返回在反馈互联中涉及的所有传递函数使用的拉普拉斯变换的复变量。
- en: Examples
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE91]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '[PRE92]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: A class for representing the MIMO (multiple-input and multiple-output) generalization
    of the SISO (single-input and single-output) transfer function.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 用于表示SISO（单输入单输出）传递函数的MIMO（多输入多输出）概括的类。
- en: It is a matrix of transfer functions (`TransferFunction`, SISO-`Series` or SISO-`Parallel`).
    There is only one argument, `arg` which is also the compulsory argument. `arg`
    is expected to be strictly of the type list of lists which holds the transfer
    functions or reducible to transfer functions.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 它是传递函数矩阵（`TransferFunction`，SISO-`Series`或SISO-`Parallel`）的矩阵。 只有一个参数，`arg`也是强制性参数。
    期望`arg`严格为列表列表类型，其中包含传递函数或可化简为传递函数。
- en: 'Parameters:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**arg** : Nested `List` (strictly).'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '**arg**：嵌套的`List`（严格）。'
- en: Users are expected to input a nested list of `TransferFunction`, `Series` and/or
    `Parallel` objects.
  id: totrans-321
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 用户预期输入`TransferFunction`，`Series`和/或`Parallel`对象的嵌套列表。
- en: Examples
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: Note
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '`pprint()` can be used for better visualization of `TransferFunctionMatrix`
    objects.'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '`pprint()`可用于更好地可视化`TransferFunctionMatrix`对象。'
- en: '[PRE93]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: TransferFunctionMatrix can be transposed, if user wants to switch the input
    and output transfer functions
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户希望切换输入和输出传递函数，可以对`TransferFunctionMatrix`进行转置。
- en: '[PRE94]'
  id: totrans-327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: '[PRE95]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: To access the `TransferFunction` at any index in the `TransferFunctionMatrix`,
    use the index notation.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问`TransferFunctionMatrix`中任何索引处的`TransferFunction`，请使用索引表示法。
- en: '[PRE96]'
  id: totrans-330
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: 'To negate a transfer function matrix, `-` operator can be prepended:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 要对传递函数矩阵取反，可以在其前面加上`-`运算符：
- en: '[PRE97]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: '`subs()` returns the `TransferFunctionMatrix` object with the value substituted
    in the expression. This will not mutate your original `TransferFunctionMatrix`.'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: '`subs()`返回替换为表达式中的值的`TransferFunctionMatrix`对象。 这不会改变您的原始`TransferFunctionMatrix`。'
- en: '[PRE98]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: '`subs()` also supports multiple substitutions.'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '`subs()`还支持多个替换。'
- en: '[PRE99]'
  id: totrans-336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: Users can reduce the `Series` and `Parallel` elements of the matrix to `TransferFunction`
    by using `doit()`.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以通过使用`doit()`将矩阵的`Series`和`Parallel`元素减少为`TransferFunction`。
- en: '[PRE100]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: Addition, subtraction, and multiplication of transfer function matrices can
    form unevaluated `Series` or `Parallel` objects.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 传递函数矩阵的加法、减法和乘法可以形成未评估的`Series`或`Parallel`对象。
- en: 'For addition and subtraction: All the transfer function matrices must have
    the same shape.'
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于加法和减法：所有传递函数矩阵必须具有相同的形状。
- en: 'For multiplication (C = A * B): The number of inputs of the first transfer
    function matrix (A) must be equal to the number of outputs of the second transfer
    function matrix (B).'
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于乘法（C = A * B）：第一个传递函数矩阵（A）的输入数量必须等于第二个传递函数矩阵（B）的输出数量。
- en: Also, use pretty-printing (`pprint`) to analyse better.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 还有，使用漂亮打印（`pprint`）来进行更好的分析。
- en: '[PRE101]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: These unevaluated `Series` or `Parallel` objects can convert into the resultant
    transfer function matrix using `.doit()` method or by `.rewrite(TransferFunctionMatrix)`.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 这些未评估的`Series`或`Parallel`对象可以通过`.doit()`方法或`.rewrite(TransferFunctionMatrix)`转换为结果传递函数矩阵。
- en: '[PRE102]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: See also
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`TransferFunction`](#sympy.physics.control.lti.TransferFunction "sympy.physics.control.lti.TransferFunction"),
    [`MIMOSeries`](#sympy.physics.control.lti.MIMOSeries "sympy.physics.control.lti.MIMOSeries"),
    [`MIMOParallel`](#sympy.physics.control.lti.MIMOParallel "sympy.physics.control.lti.MIMOParallel"),
    [`Feedback`](#sympy.physics.control.lti.Feedback "sympy.physics.control.lti.Feedback")'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '[`TransferFunction`](#sympy.physics.control.lti.TransferFunction "sympy.physics.control.lti.TransferFunction")，[`MIMOSeries`](#sympy.physics.control.lti.MIMOSeries
    "sympy.physics.control.lti.MIMOSeries")，[`MIMOParallel`](#sympy.physics.control.lti.MIMOParallel
    "sympy.physics.control.lti.MIMOParallel")，[`Feedback`](#sympy.physics.control.lti.Feedback
    "sympy.physics.control.lti.Feedback")'
- en: '[PRE103]'
  id: totrans-348
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: Returns the poles of each element of the `TransferFunctionMatrix`.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 返回每个`TransferFunctionMatrix`元素的极点。
- en: Note
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Actual poles of a MIMO system are NOT the poles of individual elements.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: MIMO系统的实际极点不是各个元素的极点。
- en: Examples
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE104]'
  id: totrans-353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: See also
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`elem_zeros`](#sympy.physics.control.lti.TransferFunctionMatrix.elem_zeros
    "sympy.physics.control.lti.TransferFunctionMatrix.elem_zeros")'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: '[`elem_zeros`](#sympy.physics.control.lti.TransferFunctionMatrix.elem_zeros
    "sympy.physics.control.lti.TransferFunctionMatrix.elem_zeros")'
- en: '[PRE105]'
  id: totrans-356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: Returns the zeros of each element of the `TransferFunctionMatrix`.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`TransferFunctionMatrix`的每个元素的零点。
- en: Note
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Actual zeros of a MIMO system are NOT the zeros of individual elements.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: MIMO系统的实际零点不是各个元素的零点。
- en: Examples
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE106]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: See also
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`elem_poles`](#sympy.physics.control.lti.TransferFunctionMatrix.elem_poles
    "sympy.physics.control.lti.TransferFunctionMatrix.elem_poles")'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: '[`elem_poles`](#sympy.physics.control.lti.TransferFunctionMatrix.elem_poles
    "sympy.physics.control.lti.TransferFunctionMatrix.elem_poles")'
- en: '[PRE107]'
  id: totrans-364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: Evaluates system response of each transfer function in the `TransferFunctionMatrix`
    at any point in the real or complex plane.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 在实数或复数平面的任意点评估`TransferFunctionMatrix`中每个传输函数的系统响应。
- en: Examples
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE108]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: '[PRE109]'
  id: totrans-368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: Expands the transfer function matrix
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展传输函数矩阵
- en: '[PRE110]'
  id: totrans-370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: Creates a new `TransferFunctionMatrix` efficiently from a SymPy Matrix of `Expr`
    objects.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 有效地从SymPy矩阵的`Expr`对象创建新的`TransferFunctionMatrix`。
- en: 'Parameters:'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**matrix** : `ImmutableMatrix` having `Expr`/`Number` elements.'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: '**matrix**：具有`Expr`/`Number`元素的`ImmutableMatrix`。'
- en: '**var** : Symbol'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: '**var**：符号'
- en: Complex variable of the Laplace transform which will be used by the all the
    `TransferFunction` objects in the `TransferFunctionMatrix`.
  id: totrans-375
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 拉普拉斯变换的复变量，将被`TransferFunctionMatrix`中所有`TransferFunction`对象使用。
- en: Examples
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE111]'
  id: totrans-377
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: '[PRE112]'
  id: totrans-378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: Returns the number of inputs of the system.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 返回系统的输入数量。
- en: Examples
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE113]'
  id: totrans-381
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: See also
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`num_outputs`](#sympy.physics.control.lti.TransferFunctionMatrix.num_outputs
    "sympy.physics.control.lti.TransferFunctionMatrix.num_outputs")'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: '[`num_outputs`](#sympy.physics.control.lti.TransferFunctionMatrix.num_outputs
    "sympy.physics.control.lti.TransferFunctionMatrix.num_outputs")'
- en: '[PRE114]'
  id: totrans-384
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: Returns the number of outputs of the system.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 返回系统输出的数量。
- en: Examples
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE115]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: See also
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`num_inputs`](#sympy.physics.control.lti.TransferFunctionMatrix.num_inputs
    "sympy.physics.control.lti.TransferFunctionMatrix.num_inputs")'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: '[`num_inputs`](#sympy.physics.control.lti.TransferFunctionMatrix.num_inputs
    "sympy.physics.control.lti.TransferFunctionMatrix.num_inputs")'
- en: '[PRE116]'
  id: totrans-390
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: 'Returns the shape of the transfer function matrix, that is, `(# of outputs,
    # of inputs)`.'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: '返回传输函数矩阵的形状，即`(# of outputs, # of inputs)`。'
- en: Examples
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE117]'
  id: totrans-393
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: '[PRE118]'
  id: totrans-394
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: Returns the transpose of the `TransferFunctionMatrix` (switched input and output
    layers).
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`TransferFunctionMatrix`的转置（交换输入和输出层）。
- en: '[PRE119]'
  id: totrans-396
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: Returns the complex variable used by all the transfer functions or `Series`/`Parallel`
    objects in a transfer function matrix.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 返回所有传输函数或`Series`/`Parallel`对象中使用的复变量。
- en: Examples
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE120]'
  id: totrans-399
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: '[PRE121]'
  id: totrans-400
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: A class for representing a series configuration of MIMO systems.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 用于表示MIMO系统串联配置的类。
- en: 'Parameters:'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**args** : MIMOLinearTimeInvariant'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: '**args**：MIMOLinearTimeInvariant'
- en: MIMO systems in a series configuration.
  id: totrans-404
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: MIMO系统处于串联配置。
- en: '**evaluate** : Boolean, Keyword'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: '**evaluate**：布尔值，关键字'
- en: When passed `True`, returns the equivalent `MIMOSeries(*args).doit()`. Set to
    `False` by default.
  id: totrans-406
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当传递`True`时，返回等效的`MIMOSeries(*args).doit()`。默认设置为`False`。
- en: 'Raises:'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: '**ValueError**'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: '**ValueError**'
- en: When no argument is passed.
  id: totrans-409
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当不传递任何参数时。
- en: ''
  id: totrans-410
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`var` attribute is not same for every system.'
  id: totrans-411
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 对于每个系统，`var`属性并不相同。
- en: ''
  id: totrans-412
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`num_outputs` of the MIMO system is not equal to the `num_inputs` of its adjacent
    MIMO system. (Matrix multiplication constraint, basically)'
  id: totrans-413
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: MIMO系统的`num_outputs`不等于其相邻MIMO系统的`num_inputs`。（基本上是矩阵乘法约束）
- en: '**TypeError**'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: '**TypeError**'
- en: Any of the passed `*args` has unsupported type
  id: totrans-415
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 任何传递的`*args`具有不支持的类型
- en: ''
  id: totrans-416
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A combination of SISO and MIMO systems is passed. There should be homogeneity
    in the type of systems passed, MIMO in this case.
  id: totrans-417
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 将SISO和MIMO系统的组合传递。在传递的系统类型中应保持同质性，本例中是MIMO系统。
- en: Examples
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE122]'
  id: totrans-419
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: Notes
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: All the transfer function matrices should use the same complex variable `var`
    of the Laplace transform.
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 所有传输函数矩阵应使用拉普拉斯变换的相同复变量`var`。
- en: '`MIMOSeries(A, B)` is not equivalent to `A*B`. It is always in the reverse
    order, that is `B*A`.'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: '`MIMOSeries(A, B)`与`A*B`不等同。它总是以相反的顺序，即`B*A`。'
- en: See also
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`Series`](#sympy.physics.control.lti.Series "sympy.physics.control.lti.Series"),
    [`MIMOParallel`](#sympy.physics.control.lti.MIMOParallel "sympy.physics.control.lti.MIMOParallel")'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Series`](#sympy.physics.control.lti.Series "sympy.physics.control.lti.Series"),
    [`MIMOParallel`](#sympy.physics.control.lti.MIMOParallel "sympy.physics.control.lti.MIMOParallel")'
- en: '[PRE123]'
  id: totrans-425
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: Returns the resultant transfer function matrix obtained after evaluating the
    MIMO systems arranged in a series configuration.
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 返回在串联配置的 MIMO 系统评估后获得的结果传递函数矩阵。
- en: Examples
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE124]'
  id: totrans-428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: '[PRE125]'
  id: totrans-429
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: Returns the number of input signals of the series system.
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 返回串联系统的输入信号数量。
- en: '[PRE126]'
  id: totrans-431
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: Returns the number of output signals of the series system.
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 返回串联系统的输出信号数量。
- en: '[PRE127]'
  id: totrans-433
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: Returns the shape of the equivalent MIMO system.
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 返回等效 MIMO 系统的形状。
- en: '[PRE128]'
  id: totrans-435
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: Returns the complex variable used by all the transfer functions.
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 返回所有传递函数使用的复变量。
- en: Examples
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE129]'
  id: totrans-438
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: '[PRE130]'
  id: totrans-439
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: A class for representing a parallel configuration of MIMO systems.
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 表示并联配置的 MIMO 系统的类。
- en: 'Parameters:'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: '参数:'
- en: '**args** : MIMOLinearTimeInvariant'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: '**args**：MIMOLinearTimeInvariant'
- en: MIMO Systems in a parallel arrangement.
  id: totrans-443
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 并联配置的 MIMO 系统。
- en: '**evaluate** : Boolean, Keyword'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: '**evaluate**：布尔值，关键字'
- en: When passed `True`, returns the equivalent `MIMOParallel(*args).doit()`. Set
    to `False` by default.
  id: totrans-445
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当传递`True`时，返回等效的`MIMOParallel(*args).doit()`。默认为`False`。
- en: 'Raises:'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 'Raises:'
- en: '**ValueError**'
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: '**数值错误**'
- en: When no argument is passed.
  id: totrans-448
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当未传递参数时。
- en: ''
  id: totrans-449
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`var` attribute is not same for every system.'
  id: totrans-450
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`var`属性在每个系统中不相同。'
- en: ''
  id: totrans-451
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: All MIMO systems passed do not have same shape.
  id: totrans-452
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 所有传递的 MIMO 系统形状不同。
- en: '**TypeError**'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: '**类型错误**'
- en: Any of the passed `*args` has unsupported type
  id: totrans-454
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 传递的任何`*args`类型都不受支持。
- en: ''
  id: totrans-455
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A combination of SISO and MIMO systems is passed. There should be homogeneity
    in the type of systems passed, MIMO in this case.
  id: totrans-456
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 传递了一组 SISO 和 MIMO 系统。在这种情况下，传递的系统类型应该是同质的，即 MIMO。
- en: Examples
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE131]'
  id: totrans-458
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: Notes
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: All the transfer function matrices should use the same complex variable `var`
    of the Laplace transform.
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 所有传递函数矩阵应使用拉普拉斯变换的相同复变量`var`。
- en: See also
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`Parallel`](#sympy.physics.control.lti.Parallel "sympy.physics.control.lti.Parallel"),
    [`MIMOSeries`](#sympy.physics.control.lti.MIMOSeries "sympy.physics.control.lti.MIMOSeries")'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Parallel`](#sympy.physics.control.lti.Parallel "sympy.physics.control.lti.Parallel"),
    [`MIMOSeries`](#sympy.physics.control.lti.MIMOSeries "sympy.physics.control.lti.MIMOSeries")'
- en: '[PRE132]'
  id: totrans-463
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: Returns the resultant transfer function matrix obtained after evaluating the
    MIMO systems arranged in a parallel configuration.
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 返回在并联配置的 MIMO 系统评估后获得的结果传递函数矩阵。
- en: Examples
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE133]'
  id: totrans-466
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: '[PRE134]'
  id: totrans-467
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: Returns the number of input signals of the parallel system.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 返回并联系统的输入信号数量。
- en: '[PRE135]'
  id: totrans-469
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: Returns the number of output signals of the parallel system.
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 返回并行系统的输出信号数量。
- en: '[PRE136]'
  id: totrans-471
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: Returns the shape of the equivalent MIMO system.
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 返回等效 MIMO 系统的形状。
- en: '[PRE137]'
  id: totrans-473
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: Returns the complex variable used by all the systems.
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 返回所有系统使用的复变量。
- en: Examples
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE138]'
  id: totrans-476
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: '[PRE139]'
  id: totrans-477
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: A class for representing closed-loop feedback interconnection between two MIMO
    input/output systems.
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 表示两个 MIMO 输入/输出系统之间闭环反馈连接的类。
- en: 'Parameters:'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: '参数:'
- en: '**sys1** : MIMOSeries, TransferFunctionMatrix'
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: '**sys1**：MIMOSeries，TransferFunctionMatrix'
- en: The MIMO system placed on the feedforward path.
  id: totrans-481
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 将 MIMO 系统放置在前馈路径上。
- en: '**sys2** : MIMOSeries, TransferFunctionMatrix'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: '**sys2**：MIMOSeries，TransferFunctionMatrix'
- en: The system placed on the feedback path (often a feedback controller).
  id: totrans-483
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 放置在反馈路径上的系统（通常是反馈控制器）。
- en: '**sign** : int, optional'
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: '**符号**：整数，可选'
- en: The sign of feedback. Can either be `1` (for positive feedback) or `-1` (for
    negative feedback). Default value is \(-1\).
  id: totrans-485
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 反馈的符号。可以是`1`（正反馈）或`-1`（负反馈）。默认值为\(-1\)。
- en: 'Raises:'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 'Raises:'
- en: '**ValueError**'
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: '**数值错误**'
- en: When `sys1` and `sys2` are not using the same complex variable of the Laplace
    transform.
  id: totrans-488
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当`sys1`和`sys2`没有使用拉普拉斯变换的相同复变量时。
- en: ''
  id: totrans-489
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Forward path model should have an equal number of inputs/outputs to the feedback
    path outputs/inputs.
  id: totrans-490
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 前向路径模型应具有与反馈路径输出/输入相等数量的输入/输出。
- en: ''
  id: totrans-491
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When product of `sys1` and `sys2` is not a square matrix.
  id: totrans-492
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当`sys1`和`sys2`的乘积不是方阵时。
- en: ''
  id: totrans-493
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When the equivalent MIMO system is not invertible.
  id: totrans-494
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当等效 MIMO 系统不可逆时。
- en: '**TypeError**'
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: '**类型错误**'
- en: When either `sys1` or `sys2` is not a `MIMOSeries` or a `TransferFunctionMatrix`
    object.
  id: totrans-496
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当`sys1`或`sys2`不是`MIMOSeries`或`TransferFunctionMatrix`对象时。
- en: Examples
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE140]'
  id: totrans-498
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: To get the equivalent system matrix, use either `doit` or `rewrite` method.
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取等效系统矩阵，请使用`doit`或`rewrite`方法。
- en: '[PRE141]'
  id: totrans-500
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: To negate the `MIMOFeedback` object, use `-` operator.
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 要否定`MIMOFeedback`对象，请使用`-`运算符。
- en: '[PRE142]'
  id: totrans-502
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: See also
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`Feedback`](#sympy.physics.control.lti.Feedback "sympy.physics.control.lti.Feedback"),
    [`MIMOSeries`](#sympy.physics.control.lti.MIMOSeries "sympy.physics.control.lti.MIMOSeries"),
    [`MIMOParallel`](#sympy.physics.control.lti.MIMOParallel "sympy.physics.control.lti.MIMOParallel")'
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Feedback`](#sympy.physics.control.lti.Feedback "sympy.physics.control.lti.Feedback"),
    [`MIMOSeries`](#sympy.physics.control.lti.MIMOSeries "sympy.physics.control.lti.MIMOSeries"),
    [`MIMOParallel`](#sympy.physics.control.lti.MIMOParallel "sympy.physics.control.lti.MIMOParallel")'
- en: '[PRE143]'
  id: totrans-505
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: Returns the resultant transfer function matrix obtained by the feedback interconnection.
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 返回通过反馈互连获得的结果传递函数矩阵。
- en: Examples
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE144]'
  id: totrans-508
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: If the user wants the resultant `TransferFunctionMatrix` object without canceling
    the common factors then the `cancel` kwarg should be passed `False`.
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户希望获得结果的`TransferFunctionMatrix`对象而不取消公共因子，则应将`cancel`参数传递为`False`。
- en: '[PRE145]'
  id: totrans-510
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: If the user wants the expanded form of the resultant transfer function matrix,
    the `expand` kwarg should be passed as `True`.
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户希望获得结果传递函数矩阵的展开形式，则应将`expand`参数传递为`True`。
- en: '[PRE146]'
  id: totrans-512
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: '[PRE147]'
  id: totrans-513
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: Returns the sensitivity function matrix of the feedback loop.
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 返回反馈环路的灵敏度函数矩阵。
- en: Sensitivity of a closed-loop system is the ratio of change in the open loop
    gain to the change in the closed loop gain.
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 闭环系统的灵敏度是指开环增益变化与闭环增益变化的比率。
- en: Note
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This method would not return the complementary sensitivity function.
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法不会返回互补灵敏度函数。
- en: Examples
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE148]'
  id: totrans-519
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: '[PRE149]'
  id: totrans-520
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: Returns the type of feedback interconnection of two models. `1` for Positive
    and `-1` for Negative.
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 返回两个模型的反馈互连类型。正反馈返回`1`，负反馈返回`-1`。
- en: '[PRE150]'
  id: totrans-522
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: Returns the system placed on the feedforward path of the MIMO feedback interconnection.
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: 返回放置在MIMO反馈互连的前馈路径上的系统。
- en: Examples
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE151]'
  id: totrans-525
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: '[PRE152]'
  id: totrans-526
  prefs: []
  type: TYPE_PRE
  zh: '[PRE152]'
- en: Returns the feedback controller of the MIMO feedback interconnection.
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: 返回MIMO反馈互连的反馈控制器。
- en: Examples
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE153]'
  id: totrans-529
  prefs: []
  type: TYPE_PRE
  zh: '[PRE153]'
- en: '[PRE154]'
  id: totrans-530
  prefs: []
  type: TYPE_PRE
  zh: '[PRE154]'
- en: Returns the complex variable of the Laplace transform used by all the transfer
    functions involved in the MIMO feedback loop.
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 返回所有MIMO反馈环路中涉及的传递函数使用的拉普拉斯变换的复变量。
- en: Examples
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE155]'
  id: totrans-533
  prefs: []
  type: TYPE_PRE
  zh: '[PRE155]'
- en: '[PRE156]'
  id: totrans-534
  prefs: []
  type: TYPE_PRE
  zh: '[PRE156]'
- en: Returns falling coefficients of H(z) from numerator and denominator.
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 H(z) 的分子和分母的降序系数。
- en: Explanation
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Where H(z) is the corresponding discretized transfer function, discretized with
    the generalised bilinear transformation method. H(z) is obtained from the continuous
    transfer function H(s) by substituting \(s(z) = \frac{z-1}{T(\alpha z + (1-\alpha))}\)
    into H(s), where T is the sample period. Coefficients are falling, i.e. \(H(z)
    = \frac{az+b}{cz+d}\) is returned as [a, b], [c, d].
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 H(z) 是相应的离散化传递函数，使用广义双线性变换方法进行离散化。H(z) 是通过将 \(s(z) = \frac{z-1}{T(\alpha
    z + (1-\alpha))}\) 替换到 H(s) 中获得的，其中 T 是采样周期。系数是降序排列的，即 \(H(z) = \frac{az+b}{cz+d}\)
    返回为 [a, b], [c, d]。
- en: Examples
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE157]'
  id: totrans-539
  prefs: []
  type: TYPE_PRE
  zh: '[PRE157]'
- en: '[PRE158]'
  id: totrans-540
  prefs: []
  type: TYPE_PRE
  zh: '[PRE158]'
- en: '[PRE159]'
  id: totrans-541
  prefs: []
  type: TYPE_PRE
  zh: '[PRE159]'
- en: '[PRE160]'
  id: totrans-542
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: '[PRE161]'
  id: totrans-543
  prefs: []
  type: TYPE_PRE
  zh: '[PRE161]'
- en: References
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R736](#id3)]'
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R736](#id3)]'
- en: '[https://www.polyu.edu.hk/ama/profile/gfzhang/Research/ZCC09_IJC.pdf](https://www.polyu.edu.hk/ama/profile/gfzhang/Research/ZCC09_IJC.pdf)'
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.polyu.edu.hk/ama/profile/gfzhang/Research/ZCC09_IJC.pdf](https://www.polyu.edu.hk/ama/profile/gfzhang/Research/ZCC09_IJC.pdf)'
- en: '[PRE162]'
  id: totrans-547
  prefs: []
  type: TYPE_PRE
  zh: '[PRE162]'
- en: Returns falling coefficients of H(z) from numerator and denominator.
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 H(z) 的分子和分母的降序系数。
- en: Explanation
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Where H(z) is the corresponding discretized transfer function, discretized with
    the bilinear transform method. H(z) is obtained from the continuous transfer function
    H(s) by substituting \(s(z) = \frac{2}{T}\frac{z-1}{z+1}\) into H(s), where T
    is the sample period. Coefficients are falling, i.e. \(H(z) = \frac{az+b}{cz+d}\)
    is returned as [a, b], [c, d].
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 H(z) 是相应的离散化传递函数，使用双线性变换方法进行离散化。H(z) 是通过将 \(s(z) = \frac{2}{T}\frac{z-1}{z+1}\)
    替换到 H(s) 中获得的，其中 T 是采样周期。系数是降序排列的，即 \(H(z) = \frac{az+b}{cz+d}\) 返回为 [a, b], [c,
    d]。
- en: Examples
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE163]'
  id: totrans-552
  prefs: []
  type: TYPE_PRE
  zh: '[PRE163]'
- en: '[PRE164]'
  id: totrans-553
  prefs: []
  type: TYPE_PRE
  zh: '[PRE164]'
- en: '[PRE165]'
  id: totrans-554
  prefs: []
  type: TYPE_PRE
  zh: '[PRE165]'
- en: Returns falling coefficients of H(z) from numerator and denominator.
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 H(z) 的分子和分母的降序系数。
- en: Explanation
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Where H(z) is the corresponding discretized transfer function, discretized with
    the forward difference transform method. H(z) is obtained from the continuous
    transfer function H(s) by substituting \(s(z) = \frac{z-1}{T}\) into H(s), where
    T is the sample period. Coefficients are falling, i.e. \(H(z) = \frac{az+b}{cz+d}\)
    is returned as [a, b], [c, d].
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 H(z) 是相应的离散化传递函数，使用前向差分变换方法进行离散化。H(z) 是通过将 \(s(z) = \frac{z-1}{T}\) 替换到 H(s)
    中获得的，其中 T 是采样周期。系数是降序排列的，即 \(H(z) = \frac{az+b}{cz+d}\) 返回为 [a, b], [c, d]。
- en: Examples
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE166]'
  id: totrans-559
  prefs: []
  type: TYPE_PRE
  zh: '[PRE166]'
- en: '[PRE167]'
  id: totrans-560
  prefs: []
  type: TYPE_PRE
  zh: '[PRE167]'
- en: '[PRE168]'
  id: totrans-561
  prefs: []
  type: TYPE_PRE
  zh: '[PRE168]'
- en: Returns falling coefficients of H(z) from numerator and denominator.
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 H(z) 的分子和分母的降序系数。
- en: Explanation
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Where H(z) is the corresponding discretized transfer function, discretized with
    the backward difference transform method. H(z) is obtained from the continuous
    transfer function H(s) by substituting \(s(z) = \frac{z-1}{Tz}\) into H(s), where
    T is the sample period. Coefficients are falling, i.e. \(H(z) = \frac{az+b}{cz+d}\)
    is returned as [a, b], [c, d].
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: 其中，H(z) 是相应的离散化传递函数，使用后向差分变换方法离散化。H(z) 是从连续传递函数 H(s) 通过将 \(s(z) = \frac{z-1}{Tz}\)
    代入 H(s) 而获得的，其中 T 是采样周期。系数在变小，即 \(H(z) = \frac{az+b}{cz+d}\) 被返回为 [a, b], [c,
    d]。
- en: Examples
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: 举例
- en: '[PRE169]'
  id: totrans-566
  prefs: []
  type: TYPE_PRE
  zh: '[PRE169]'
- en: '[PRE170]'
  id: totrans-567
  prefs: []
  type: TYPE_PRE
  zh: '[PRE170]'
