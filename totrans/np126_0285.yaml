- en: numpy.empty
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.empty.html](https://numpy.org/doc/1.26/reference/generated/numpy.empty.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return a new array of given shape and type, without initializing entries.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**shape**int or tuple of int'
  prefs: []
  type: TYPE_NORMAL
- en: Shape of the empty array, e.g., `(2, 3)` or `2`.
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype**data-type, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Desired output data-type for the array, e.g, [`numpy.int8`](../arrays.scalars.html#numpy.int8
    "numpy.int8"). Default is [`numpy.float64`](../arrays.scalars.html#numpy.float64
    "numpy.float64").
  prefs: []
  type: TYPE_NORMAL
- en: '**order**{‘C’, ‘F’}, optional, default: ‘C’'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to store multi-dimensional data in row-major (C-style) or column-major
    (Fortran-style) order in memory.
  prefs: []
  type: TYPE_NORMAL
- en: '**like**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Reference object to allow the creation of arrays which are not NumPy arrays.
    If an array-like passed in as `like` supports the `__array_function__` protocol,
    the result will be defined by it. In this case, it ensures the creation of an
    array object compatible with that passed in via this argument.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.20.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Array of uninitialized (arbitrary) data of the given shape, dtype, and order.
    Object arrays will be initialized to None.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`empty_like`](numpy.empty_like.html#numpy.empty_like "numpy.empty_like")'
  prefs: []
  type: TYPE_NORMAL
- en: Return an empty array with shape and type of input.
  prefs: []
  type: TYPE_NORMAL
- en: '[`ones`](numpy.ones.html#numpy.ones "numpy.ones")'
  prefs: []
  type: TYPE_NORMAL
- en: Return a new array setting values to one.
  prefs: []
  type: TYPE_NORMAL
- en: '[`zeros`](numpy.zeros.html#numpy.zeros "numpy.zeros")'
  prefs: []
  type: TYPE_NORMAL
- en: Return a new array setting values to zero.
  prefs: []
  type: TYPE_NORMAL
- en: '[`full`](numpy.full.html#numpy.full "numpy.full")'
  prefs: []
  type: TYPE_NORMAL
- en: Return a new array of given shape filled with value.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: '[`empty`](#numpy.empty "numpy.empty"), unlike [`zeros`](numpy.zeros.html#numpy.zeros
    "numpy.zeros"), does not set the array values to zero, and may therefore be marginally
    faster. On the other hand, it requires the user to manually set all the values
    in the array, and should be used with caution.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
