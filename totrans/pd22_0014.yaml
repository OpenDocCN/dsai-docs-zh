- en: How to manipulate textual data
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作文本数据
- en: 原文：[https://pandas.pydata.org/docs/getting_started/intro_tutorials/10_text_data.html](https://pandas.pydata.org/docs/getting_started/intro_tutorials/10_text_data.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/getting_started/intro_tutorials/10_text_data.html](https://pandas.pydata.org/docs/getting_started/intro_tutorials/10_text_data.html)
- en: Make all name characters lowercase.
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将所有名称字符改为小写。
- en: '[PRE0]'
  id: totrans-3
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: To make each of the strings in the `Name` column lowercase, select the `Name`
    column (see the [tutorial on selection of data](03_subset_data.html#min-tut-03-subset)),
    add the `str` accessor and apply the `lower` method. As such, each of the strings
    is converted element-wise.
  id: totrans-4
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要使`Name`列中的每个字符串都变为小写，选择`Name`列（参见[数据选择教程](03_subset_data.html#min-tut-03-subset)），添加`str`访问器并应用`lower`方法。因此，每个字符串都被逐个转换。
- en: Similar to datetime objects in the [time series tutorial](09_timeseries.html#min-tut-09-timeseries)
    having a `dt` accessor, a number of specialized string methods are available when
    using the `str` accessor. These methods have in general matching names with the
    equivalent built-in string methods for single elements, but are applied element-wise
    (remember [element-wise calculations](05_add_columns.html#min-tut-05-columns)?)
    on each of the values of the columns.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 与[时间序列教程](09_timeseries.html#min-tut-09-timeseries)中具有`dt`访问器的日期时间对象类似，在使用`str`访问器时可以使用许多专门的字符串方法。这些方法通常与单个元素的内置字符串方法具有匹配的名称，但是在每个值的列上逐个应用（记得[逐元素计算](05_add_columns.html#min-tut-05-columns)吗？）。
- en: Create a new column `Surname` that contains the surname of the passengers by
    extracting the part before the comma.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个新列`Surname`，其中包含乘客的姓氏，通过提取逗号前的部分。
- en: '[PRE1]'
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Using the [`Series.str.split()`](../../reference/api/pandas.Series.str.split.html#pandas.Series.str.split
    "pandas.Series.str.split") method, each of the values is returned as a list of
    2 elements. The first element is the part before the comma and the second element
    is the part after the comma.
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用[`Series.str.split()`](../../reference/api/pandas.Series.str.split.html#pandas.Series.str.split
    "pandas.Series.str.split")方法，每个值都返回一个包含2个元素的列表。第一个元素是逗号前的部分，第二个元素是逗号后的部分。
- en: '[PRE2]'
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: As we are only interested in the first part representing the surname (element
    0), we can again use the `str` accessor and apply [`Series.str.get()`](../../reference/api/pandas.Series.str.get.html#pandas.Series.str.get
    "pandas.Series.str.get") to extract the relevant part. Indeed, these string functions
    can be concatenated to combine multiple functions at once!
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于我们只对代表姓氏的第一部分感兴趣（元素0），我们可以再次使用`str`访问器，并应用[`Series.str.get()`](../../reference/api/pandas.Series.str.get.html#pandas.Series.str.get
    "pandas.Series.str.get")来提取相关部分。事实上，这些字符串函数可以连接起来组合多个函数！
- en: To user guide
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 到用户指南
- en: More information on extracting parts of strings is available in the user guide
    section on [splitting and replacing strings](../../user_guide/text.html#text-split).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 有关提取字符串部分的更多信息，请参阅用户指南中关于[拆分和替换字符串](../../user_guide/text.html#text-split)的部分。
- en: Extract the passenger data about the countesses on board of the Titanic.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提取关于泰坦尼克号上女伯爵的乘客数据。
- en: '[PRE3]'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: (*Interested in her story? See* [Wikipedia](https://en.wikipedia.org/wiki/No%C3%ABl_Leslie,_Countess_of_Rothes)*!*)
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: (*对她的故事感兴趣吗？请参阅* [维基百科](https://en.wikipedia.org/wiki/No%C3%ABl_Leslie,_Countess_of_Rothes)*！*)
- en: The string method [`Series.str.contains()`](../../reference/api/pandas.Series.str.contains.html#pandas.Series.str.contains
    "pandas.Series.str.contains") checks for each of the values in the column `Name`
    if the string contains the word `Countess` and returns for each of the values
    `True` (`Countess` is part of the name) or `False` (`Countess` is not part of
    the name). This output can be used to subselect the data using conditional (boolean)
    indexing introduced in the [subsetting of data tutorial](03_subset_data.html#min-tut-03-subset).
    As there was only one countess on the Titanic, we get one row as a result.
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 字符串方法[`Series.str.contains()`](../../reference/api/pandas.Series.str.contains.html#pandas.Series.str.contains
    "pandas.Series.str.contains")检查列`Name`中的每个值是否包含单词`Countess`，并对每个值返回`True`（`Countess`是名称的一部分）或`False`（`Countess`不是名称的一部分）。此输出可用于使用在[数据子集教程](03_subset_data.html#min-tut-03-subset)中介绍的条件（布尔）索引来对数据进行子选择。由于泰坦尼克号上只有一位女伯爵，我们得到一行作为结果。
- en: Note
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: More powerful extractions on strings are supported, as the [`Series.str.contains()`](../../reference/api/pandas.Series.str.contains.html#pandas.Series.str.contains
    "pandas.Series.str.contains") and [`Series.str.extract()`](../../reference/api/pandas.Series.str.extract.html#pandas.Series.str.extract
    "pandas.Series.str.extract") methods accept [regular expressions](https://docs.python.org/3/library/re.html),
    but out of scope of this tutorial.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 字符串的更强大的提取操作是支持的，因为[`Series.str.contains()`](../../reference/api/pandas.Series.str.contains.html#pandas.Series.str.contains
    "pandas.Series.str.contains") 和 [`Series.str.extract()`](../../reference/api/pandas.Series.str.extract.html#pandas.Series.str.extract
    "pandas.Series.str.extract") 方法接受[正则表达式](https://docs.python.org/3/library/re.html)，但不在本教程的范围内。
- en: To user guide
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 到用户指南
- en: More information on extracting parts of strings is available in the user guide
    section on [string matching and extracting](../../user_guide/text.html#text-extract).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 更多有关提取字符串部分的信息，请参阅用户指南中有关[字符串匹配和提取](../../user_guide/text.html#text-extract)的部分。
- en: Which passenger of the Titanic has the longest name?
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 泰坦尼克号的乘客中，哪位乘客的名字最长？
- en: '[PRE5]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: To get the longest name we first have to get the lengths of each of the names
    in the `Name` column. By using pandas string methods, the [`Series.str.len()`](../../reference/api/pandas.Series.str.len.html#pandas.Series.str.len
    "pandas.Series.str.len") function is applied to each of the names individually
    (element-wise).
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要获得最长的名称，我们首先必须获取`Name`列中每个名称的长度。通过使用pandas字符串方法，对每个名称单独应用[`Series.str.len()`](../../reference/api/pandas.Series.str.len.html#pandas.Series.str.len
    "pandas.Series.str.len")函数（逐元素）。
- en: '[PRE6]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Next, we need to get the corresponding location, preferably the index label,
    in the table for which the name length is the largest. The [`idxmax()`](../../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax") method does exactly that. It is not a string method and
    is applied to integers, so no `str` is used.
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，我们需要获取对应位置，最好是表格中名字长度最大的索引标签。 [`idxmax()`](../../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax") 方法正是这样做的。它不是字符串方法，适用于整数，因此不使用`str`。
- en: '[PRE7]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Based on the index name of the row (`307`) and the column (`Name`), we can do
    a selection using the `loc` operator, introduced in the [tutorial on subsetting](03_subset_data.html#min-tut-03-subset).
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 基于行的索引名称（`307`）和列的名称（`Name`），我们可以使用`loc`运算符进行选择，该运算符在[子集切片教程](03_subset_data.html#min-tut-03-subset)中介绍过。
- en: In the “Sex” column, replace values of “male” by “M” and values of “female”
    by “F”.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在“性别”列中，将“male”的值替换为“M”，将“female”的值替换为“F”。
- en: '[PRE8]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Whereas [`replace()`](../../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") is not a string method, it provides a convenient way
    to use mappings or vocabularies to translate certain values. It requires a `dictionary`
    to define the mapping `{from : to}`.'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '而[`replace()`](../../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") 不是一个字符串方法，它提供了一种方便的方式来使用映射或词汇表来转换某些值。它需要一个`dictionary`来定义映射
    `{from : to}`。'
- en: Warning
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: 'There is also a [`replace()`](../../reference/api/pandas.Series.str.replace.html#pandas.Series.str.replace
    "pandas.Series.str.replace") method available to replace a specific set of characters.
    However, when having a mapping of multiple values, this would become:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个可用的[`replace()`](../../reference/api/pandas.Series.str.replace.html#pandas.Series.str.replace
    "pandas.Series.str.replace")方法，可以替换特定的字符集。但是，当有多个值的映射时，这将变得：
- en: '[PRE9]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This would become cumbersome and easily lead to mistakes. Just think (or try
    out yourself) what would happen if those two statements are applied in the opposite
    order…
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这将变得繁琐，并且很容易出错。想想（或者试试）如果这两个语句以相反的顺序应用会发生什么…
- en: REMEMBER
  id: totrans-36
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 记住
- en: String methods are available using the `str` accessor.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以使用`str`访问器使用字符串方法。
- en: String methods work element-wise and can be used for conditional indexing.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串方法是逐元素进行的，可以用于条件索引。
- en: The `replace` method is a convenient method to convert values according to a
    given dictionary.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`replace`方法是根据给定字典转换值的便捷方法。'
- en: To user guide
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 到用户指南
- en: A full overview is provided in the user guide pages on [working with text data](../../user_guide/text.html#text).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 用户指南页面提供了[处理文本数据](../../user_guide/text.html#text)的全面概述。
