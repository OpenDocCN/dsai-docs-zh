- en: scipy.interpolate.krogh_interpolate
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.interpolate.krogh_interpolate
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.krogh_interpolate.html#scipy.interpolate.krogh_interpolate](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.krogh_interpolate.html#scipy.interpolate.krogh_interpolate)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.krogh_interpolate.html#scipy.interpolate.krogh_interpolate](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.krogh_interpolate.html#scipy.interpolate.krogh_interpolate)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Convenience function for polynomial interpolation.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 用于多项式插值的便捷函数。
- en: See [`KroghInterpolator`](scipy.interpolate.KroghInterpolator.html#scipy.interpolate.KroghInterpolator
    "scipy.interpolate.KroghInterpolator") for more details.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参见 [`KroghInterpolator`](scipy.interpolate.KroghInterpolator.html#scipy.interpolate.KroghInterpolator
    "scipy.interpolate.KroghInterpolator") 了解更多细节。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**xi**array_like'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**xi**array_like'
- en: Interpolation points (known x-coordinates).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 插值点（已知 x 坐标）。
- en: '**yi**array_like'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**yi**array_like'
- en: Known y-coordinates, of shape `(xi.size, R)`. Interpreted as vectors of length
    R, or scalars if R=1.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 已知的 y 坐标，形状为 `(xi.size, R)`。如果 R=1，则解释为长度为 R 的向量或标量。
- en: '**x**array_like'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**array_like'
- en: Point or points at which to evaluate the derivatives.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要评估导数的点或点。
- en: '**der**int or list or None, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**der**int 或 列表 或 None，可选'
- en: How many derivatives to evaluate, or None for all potentially nonzero derivatives
    (that is, a number equal to the number of points), or a list of derivatives to
    evaluate. This number includes the function value as the ‘0th’ derivative.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 要评估的导数数量，或者对所有可能非零导数（即与点数相等的数字）进行评估，或者要评估的导数列表。该数字包括函数值作为第 '0' 导数。
- en: '**axis**int, optional'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**axis**int，可选'
- en: Axis in the *yi* array corresponding to the x-coordinate values.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*yi* 数组中对应于 x 坐标值的轴。'
- en: 'Returns:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**d**ndarray'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**d**ndarray'
- en: If the interpolator’s values are R-D then the returned array will be the number
    of derivatives by N by R. If *x* is a scalar, the middle dimension will be dropped;
    if the *yi* are scalars then the last dimension will be dropped.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果插值器的值为 R-D，则返回的数组将为 N by R 的导数数量。如果 *x* 是标量，则将去掉中间维度；如果 *yi* 是标量，则将去掉最后维度。
- en: See also
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`KroghInterpolator`](scipy.interpolate.KroghInterpolator.html#scipy.interpolate.KroghInterpolator
    "scipy.interpolate.KroghInterpolator")'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[`KroghInterpolator`](scipy.interpolate.KroghInterpolator.html#scipy.interpolate.KroghInterpolator
    "scipy.interpolate.KroghInterpolator")'
- en: Krogh interpolator
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Krogh 插值器
- en: Notes
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Construction of the interpolating polynomial is a relatively expensive process.
    If you want to evaluate it repeatedly consider using the class KroghInterpolator
    (which is what this function uses).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 插值多项式的构造是一个相对昂贵的过程。如果需要重复评估它，请考虑使用类 KroghInterpolator（这正是该函数使用的内容）。
- en: Examples
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'We can interpolate 2D observed data using Krogh interpolation:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 Krogh 插值来插值 2D 观测数据：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![../../_images/scipy-interpolate-krogh_interpolate-1.png](../Images/4f5d6ce8ff0e1a84a362838d59338c68.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-interpolate-krogh_interpolate-1.png](../Images/4f5d6ce8ff0e1a84a362838d59338c68.png)'
