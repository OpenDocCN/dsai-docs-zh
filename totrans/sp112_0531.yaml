- en: scipy.signal.lfilter_zi
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.signal.lfilter_zi
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lfilter_zi.html#scipy.signal.lfilter_zi](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lfilter_zi.html#scipy.signal.lfilter_zi)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lfilter_zi.html#scipy.signal.lfilter_zi](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lfilter_zi.html#scipy.signal.lfilter_zi)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Construct initial conditions for lfilter for step response steady-state.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 构造 lfilter 的阶跃响应稳态的初始条件。
- en: Compute an initial state *zi* for the [`lfilter`](scipy.signal.lfilter.html#scipy.signal.lfilter
    "scipy.signal.lfilter") function that corresponds to the steady state of the step
    response.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 为 [`lfilter`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lfilter.html#scipy.signal.lfilter
    "scipy.signal.lfilter") 函数计算一个初始状态 *zi*，对应于阶跃响应的稳态。
- en: A typical use of this function is to set the initial state so that the output
    of the filter starts at the same value as the first element of the signal to be
    filtered.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数的典型用途是设置初始状态，使得滤波器的输出从与待滤波信号的第一个元素相同的值开始。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**b, a**array_like (1-D)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**b, a** array_like (1-D)'
- en: The IIR filter coefficients. See [`lfilter`](scipy.signal.lfilter.html#scipy.signal.lfilter
    "scipy.signal.lfilter") for more information.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: IIR 滤波器系数。详见 [`lfilter`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lfilter.html#scipy.signal.lfilter
    "scipy.signal.lfilter")。
- en: 'Returns:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 返回值：
- en: '**zi**1-D ndarray'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**zi** 1-D ndarray'
- en: The initial state for the filter.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 滤波器的初始状态。
- en: See also
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`lfilter`](scipy.signal.lfilter.html#scipy.signal.lfilter "scipy.signal.lfilter"),
    [`lfiltic`](scipy.signal.lfiltic.html#scipy.signal.lfiltic "scipy.signal.lfiltic"),
    [`filtfilt`](scipy.signal.filtfilt.html#scipy.signal.filtfilt "scipy.signal.filtfilt")'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[`lfilter`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lfilter.html#scipy.signal.lfilter
    "scipy.signal.lfilter")，[`lfiltic`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lfiltic.html#scipy.signal.lfiltic
    "scipy.signal.lfiltic")，[`filtfilt`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.filtfilt.html#scipy.signal.filtfilt
    "scipy.signal.filtfilt")'
- en: Notes
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: 'A linear filter with order m has a state space representation (A, B, C, D),
    for which the output y of the filter can be expressed as:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 具有阶数 m 的线性滤波器具有状态空间表示 (A, B, C, D)，滤波器的输出 y 可以表示为：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'where z(n) is a vector of length m, A has shape (m, m), B has shape (m, 1),
    C has shape (1, m) and D has shape (1, 1) (assuming x(n) is a scalar). lfilter_zi
    solves:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 z(n) 是长度为 m 的向量，A 的形状为 (m, m)，B 的形状为 (m, 1)，C 的形状为 (1, m)，D 的形状为 (1, 1)（假设
    x(n) 是标量）。lfilter_zi 解决：
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In other words, it finds the initial condition for which the response to an
    input of all ones is a constant.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，它找到了哪个初始条件，使得对全1输入的响应是一个常数。
- en: 'Given the filter coefficients *a* and *b*, the state space matrices for the
    transposed direct form II implementation of the linear filter, which is the implementation
    used by scipy.signal.lfilter, are:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 给定滤波器系数 *a* 和 *b*，用于线性滤波器的转置直接形式 II 实现的状态空间矩阵，即 scipy.signal.lfilter 使用的实现方式如下：
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: assuming *a[0]* is 1.0; if *a[0]* is not 1, *a* and *b* are first divided by
    a[0].
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 假设 *a[0]* 为 1.0；如果 *a[0]* 不是 1，*a* 和 *b* 首先将被除以 a[0]。
- en: Examples
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: The following code creates a lowpass Butterworth filter. Then it applies that
    filter to an array whose values are all 1.0; the output is also all 1.0, as expected
    for a lowpass filter. If the *zi* argument of [`lfilter`](scipy.signal.lfilter.html#scipy.signal.lfilter
    "scipy.signal.lfilter") had not been given, the output would have shown the transient
    signal.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码创建一个低通 Butterworth 滤波器。然后将该滤波器应用于一个所有值均为1.0的数组；输出也全部为1.0，符合低通滤波器的预期行为。如果未提供
    [`lfilter`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lfilter.html#scipy.signal.lfilter
    "scipy.signal.lfilter") 的 *zi* 参数，输出将显示瞬态信号。
- en: '[PRE4]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Another example:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个示例：
- en: '[PRE5]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note that the *zi* argument to [`lfilter`](scipy.signal.lfilter.html#scipy.signal.lfilter
    "scipy.signal.lfilter") was computed using [`lfilter_zi`](#scipy.signal.lfilter_zi
    "scipy.signal.lfilter_zi") and scaled by *x[0]*. Then the output *y* has no transient
    until the input drops from 0.5 to 0.0.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，[`lfilter`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lfilter.html#scipy.signal.lfilter
    "scipy.signal.lfilter") 的 *zi* 参数是通过 [`lfilter_zi`](#scipy.signal.lfilter_zi "scipy.signal.lfilter_zi")
    计算并缩放为 *x[0]*。然后输出 *y* 在输入从 0.5 下降到 0.0 之前没有瞬态信号。
