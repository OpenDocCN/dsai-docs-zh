- en: numpy.linalg.norm
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.linalg.norm.html](https://numpy.org/doc/1.26/reference/generated/numpy.linalg.norm.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Matrix or vector norm.
  prefs: []
  type: TYPE_NORMAL
- en: This function is able to return one of eight different matrix norms, or one
    of an infinite number of vector norms (described below), depending on the value
    of the `ord` parameter.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input array. If *axis* is None, *x* must be 1-D or 2-D, unless *ord* is None.
    If both *axis* and *ord* are None, the 2-norm of `x.ravel` will be returned.
  prefs: []
  type: TYPE_NORMAL
- en: '**ord**{non-zero int, inf, -inf, ‘fro’, ‘nuc’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Order of the norm (see table under `Notes`). inf means numpy’s [`inf`](../constants.html#numpy.inf
    "numpy.inf") object. The default is None.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**{None, int, 2-tuple of ints}, optional.'
  prefs: []
  type: TYPE_NORMAL
- en: If *axis* is an integer, it specifies the axis of *x* along which to compute
    the vector norms. If *axis* is a 2-tuple, it specifies the axes that hold 2-D
    matrices, and the matrix norms of these matrices are computed. If *axis* is None
    then either a vector norm (when *x* is 1-D) or a matrix norm (when *x* is 2-D)
    is returned. The default is None.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.8.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**keepdims**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If this is set to True, the axes which are normed over are left in the result
    as dimensions with size one. With this option the result will broadcast correctly
    against the original *x*.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.10.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**n**float or ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Norm of the matrix or vector(s).
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`scipy.linalg.norm`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.linalg.norm.html#scipy.linalg.norm
    "(in SciPy v1.11.2)")'
  prefs: []
  type: TYPE_NORMAL
- en: Similar function in SciPy.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: For values of `ord < 1`, the result is, strictly speaking, not a mathematical
    ‘norm’, but it may still be useful for various numerical purposes.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following norms can be calculated:'
  prefs: []
  type: TYPE_NORMAL
- en: '| ord | norm for matrices | norm for vectors |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| None | Frobenius norm | 2-norm |'
  prefs: []
  type: TYPE_TB
- en: '| ‘fro’ | Frobenius norm | – |'
  prefs: []
  type: TYPE_TB
- en: '| ‘nuc’ | nuclear norm | – |'
  prefs: []
  type: TYPE_TB
- en: '| inf | max(sum(abs(x), axis=1)) | max(abs(x)) |'
  prefs: []
  type: TYPE_TB
- en: '| -inf | min(sum(abs(x), axis=1)) | min(abs(x)) |'
  prefs: []
  type: TYPE_TB
- en: '| 0 | – | sum(x != 0) |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | max(sum(abs(x), axis=0)) | as below |'
  prefs: []
  type: TYPE_TB
- en: '| -1 | min(sum(abs(x), axis=0)) | as below |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | 2-norm (largest sing. value) | as below |'
  prefs: []
  type: TYPE_TB
- en: '| -2 | smallest singular value | as below |'
  prefs: []
  type: TYPE_TB
- en: '| other | – | sum(abs(x)**ord)**(1./ord) |'
  prefs: []
  type: TYPE_TB
- en: 'The Frobenius norm is given by [[1]](#rac1c834adb66-1):'
  prefs: []
  type: TYPE_NORMAL
- en: \(||A||_F = [\sum_{i,j} abs(a_{i,j})^2]^{1/2}\)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The nuclear norm is the sum of the singular values.
  prefs: []
  type: TYPE_NORMAL
- en: Both the Frobenius and nuclear norm orders are only defined for matrices and
    raise a ValueError when `x.ndim != 2`.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: G. H. Golub and C. F. Van Loan, *Matrix Computations*, Baltimore, MD, Johns
    Hopkins University Press, 1985, pg. 15
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Using the *axis* argument to compute vector norms:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Using the *axis* argument to compute matrix norms:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
