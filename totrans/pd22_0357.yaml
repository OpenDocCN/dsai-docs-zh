- en: pandas.DataFrame.nlargest
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas.DataFrame.nlargest
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.nlargest.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.nlargest.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.nlargest.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.nlargest.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Return the first n rows ordered by columns in descending order.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 返回按列按降序排列的前n行。
- en: Return the first n rows with the largest values in columns, in descending order.
    The columns that are not specified are returned as well, but not used for ordering.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 返回列中最大值的前n行，按降序排列。未指定的列也会返回，但不用于排序。
- en: This method is equivalent to `df.sort_values(columns, ascending=False).head(n)`,
    but more performant.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法等同于`df.sort_values(columns, ascending=False).head(n)`，但性能更好。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n**int'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**整数'
- en: Number of rows to return.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 要返回的行数。
- en: '**columns**label or list of labels'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**columns**标签或标签列表'
- en: Column label(s) to order by.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要按其排序的列标签。
- en: '**keep**{‘first’, ‘last’, ‘all’}, default ‘first’'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**keep**{‘first’, ‘last’, ‘all’}，默认为‘first’'
- en: 'Where there are duplicate values:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 当存在重复值时：
- en: '`first` : prioritize the first occurrence(s)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`first`：优先考虑第一次出现的情况'
- en: '`last` : prioritize the last occurrence(s)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`last`：优先考虑最后一次出现的情况'
- en: '`all` : keep all the ties of the smallest item even if it means selecting more
    than `n` items.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`all`：保留所有最小项的关联，即使这意味着选择超过`n`个项目。'
- en: 'Returns:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: DataFrame
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: DataFrame
- en: The first n rows ordered by the given columns in descending order.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 按给定列按降序排列的前n行。
- en: See also
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`DataFrame.nsmallest`](pandas.DataFrame.nsmallest.html#pandas.DataFrame.nsmallest
    "pandas.DataFrame.nsmallest")'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.nsmallest`](pandas.DataFrame.nsmallest.html#pandas.DataFrame.nsmallest
    "pandas.DataFrame.nsmallest")'
- en: Return the first n rows ordered by columns in ascending order.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 返回按升序排列的列中的前n行。
- en: '[`DataFrame.sort_values`](pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values")'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.sort_values`](pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values")'
- en: Sort DataFrame by the values.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 按值对DataFrame进行排序。
- en: '[`DataFrame.head`](pandas.DataFrame.head.html#pandas.DataFrame.head "pandas.DataFrame.head")'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.head`](pandas.DataFrame.head.html#pandas.DataFrame.head "pandas.DataFrame.head")'
- en: Return the first n rows without re-ordering.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 返回前n行而不重新排序。
- en: Notes
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This function cannot be used with all column types. For example, when specifying
    columns with object or category dtypes, `TypeError` is raised.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数不能与所有列类型一起使用。例如，当指定包含对象或类别dtype的列时，会引发`TypeError`。
- en: Examples
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In the following example, we will use `nlargest` to select the three rows having
    the largest values in column “population”.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的示例中，我们将使用`nlargest`选择具有“population”列中最大值的三行。
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'When using `keep=''last''`, ties are resolved in reverse order:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用`keep='last'`时，关联项按相反顺序解决：
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'When using `keep=''all''`, the number of element kept can go beyond `n` if
    there are duplicate values for the smallest element, all the ties are kept:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用`keep='all'`时，如果最小元素存在重复值，则保留的元素数量可能超过`n`，所有关联项都会被保留：
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'However, `nlargest` does not keep `n` distinct largest elements:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，`nlargest`不会保留`n`个不同的最大元素：
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: To order by the largest values in column “population” and then “GDP”, we can
    specify multiple columns like in the next example.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要按“population”列中的最大值，然后按“GDP”列中的最大值排序，我们可以像下一个示例中那样指定多个列。
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
