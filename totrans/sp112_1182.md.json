["```py\nscipy.stats.ncf = <scipy.stats._continuous_distns.ncf_gen object>\n```", "```py\n>>> import numpy as np\n>>> from scipy.stats import ncf\n>>> import matplotlib.pyplot as plt\n>>> fig, ax = plt.subplots(1, 1) \n```", "```py\n>>> dfn, dfd, nc = 27, 27, 0.416\n>>> mean, var, skew, kurt = ncf.stats(dfn, dfd, nc, moments='mvsk') \n```", "```py\n>>> x = np.linspace(ncf.ppf(0.01, dfn, dfd, nc),\n...                 ncf.ppf(0.99, dfn, dfd, nc), 100)\n>>> ax.plot(x, ncf.pdf(x, dfn, dfd, nc),\n...        'r-', lw=5, alpha=0.6, label='ncf pdf') \n```", "```py\n>>> rv = ncf(dfn, dfd, nc)\n>>> ax.plot(x, rv.pdf(x), 'k-', lw=2, label='frozen pdf') \n```", "```py\n>>> vals = ncf.ppf([0.001, 0.5, 0.999], dfn, dfd, nc)\n>>> np.allclose([0.001, 0.5, 0.999], ncf.cdf(vals, dfn, dfd, nc))\nTrue \n```", "```py\n>>> r = ncf.rvs(dfn, dfd, nc, size=1000) \n```", "```py\n>>> ax.hist(r, density=True, bins='auto', histtype='stepfilled', alpha=0.2)\n>>> ax.set_xlim([x[0], x[-1]])\n>>> ax.legend(loc='best', frameon=False)\n>>> plt.show() \n```"]