- en: scipy.linalg.lstsq
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.lstsq.html#scipy.linalg.lstsq](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.lstsq.html#scipy.linalg.lstsq)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute least-squares solution to equation Ax = b.
  prefs: []
  type: TYPE_NORMAL
- en: Compute a vector x such that the 2-norm `|b - A x|` is minimized.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**(M, N) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Left-hand side array
  prefs: []
  type: TYPE_NORMAL
- en: '**b**(M,) or (M, K) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Right hand side array
  prefs: []
  type: TYPE_NORMAL
- en: '**cond**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Cutoff for ‘small’ singular values; used to determine effective rank of a. Singular
    values smaller than `cond * largest_singular_value` are considered zero.
  prefs: []
  type: TYPE_NORMAL
- en: '**overwrite_a**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Discard data in *a* (may enhance performance). Default is False.
  prefs: []
  type: TYPE_NORMAL
- en: '**overwrite_b**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Discard data in *b* (may enhance performance). Default is False.
  prefs: []
  type: TYPE_NORMAL
- en: '**check_finite**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to check that the input matrices contain only finite numbers. Disabling
    may give a performance gain, but may result in problems (crashes, non-termination)
    if the inputs do contain infinities or NaNs.
  prefs: []
  type: TYPE_NORMAL
- en: '**lapack_driver**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Which LAPACK driver is used to solve the least-squares problem. Options are
    `'gelsd'`, `'gelsy'`, `'gelss'`. Default (`'gelsd'`) is a good choice. However,
    `'gelsy'` can be slightly faster on many problems. `'gelss'` was used historically.
    It is generally slow but uses less memory.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.17.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**(N,) or (N, K) ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Least-squares solution.
  prefs: []
  type: TYPE_NORMAL
- en: '**residues**(K,) ndarray or float'
  prefs: []
  type: TYPE_NORMAL
- en: Square of the 2-norm for each column in `b - a x`, if `M > N` and `ndim(A) ==
    n` (returns a scalar if `b` is 1-D). Otherwise a (0,)-shaped array is returned.
  prefs: []
  type: TYPE_NORMAL
- en: '**rank**int'
  prefs: []
  type: TYPE_NORMAL
- en: Effective rank of *a*.
  prefs: []
  type: TYPE_NORMAL
- en: '**s**(min(M, N),) ndarray or None'
  prefs: []
  type: TYPE_NORMAL
- en: Singular values of *a*. The condition number of `a` is `s[0] / s[-1]`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: LinAlgError
  prefs: []
  type: TYPE_NORMAL
- en: If computation does not converge.
  prefs: []
  type: TYPE_NORMAL
- en: ValueError
  prefs: []
  type: TYPE_NORMAL
- en: When parameters are not compatible.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`scipy.optimize.nnls`](scipy.optimize.nnls.html#scipy.optimize.nnls "scipy.optimize.nnls")'
  prefs: []
  type: TYPE_NORMAL
- en: linear least squares with non-negativity constraint
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: When `'gelsy'` is used as a driver, *residues* is set to a (0,)-shaped array
    and *s* is always `None`.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Suppose we have the following data:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'We want to fit a quadratic polynomial of the form `y = a + b*x**2` to this
    data. We first form the “design matrix” M, with a constant column of 1s and a
    column containing `x**2`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: We want to find the least-squares solution to `M.dot(p) = y`, where `p` is a
    vector with length 2 that holds the parameters `a` and `b`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Plot the data and the fitted curve.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-linalg-lstsq-1.png](../Images/800bf070859b784ad21d36031d4e4673.png)'
  prefs: []
  type: TYPE_IMG
