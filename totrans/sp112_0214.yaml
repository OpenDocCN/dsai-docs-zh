- en: scipy.io.savemat
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.io.savemat.html#scipy.io.savemat](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.io.savemat.html#scipy.io.savemat)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Save a dictionary of names and arrays into a MATLAB-style .mat file.
  prefs: []
  type: TYPE_NORMAL
- en: This saves the array objects in the given dictionary to a MATLAB- style .mat
    file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**file_name**str or file-like object'
  prefs: []
  type: TYPE_NORMAL
- en: Name of the .mat file (.mat extension not needed if `appendmat == True`). Can
    also pass open file_like object.
  prefs: []
  type: TYPE_NORMAL
- en: '**mdict**dict'
  prefs: []
  type: TYPE_NORMAL
- en: Dictionary from which to save matfile variables.
  prefs: []
  type: TYPE_NORMAL
- en: '**appendmat**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: True (the default) to append the .mat extension to the end of the given filename,
    if not already present.
  prefs: []
  type: TYPE_NORMAL
- en: '**format**{‘5’, ‘4’}, string, optional'
  prefs: []
  type: TYPE_NORMAL
- en: ‘5’ (the default) for MATLAB 5 and up (to 7.2), ‘4’ for MATLAB 4 .mat files.
  prefs: []
  type: TYPE_NORMAL
- en: '**long_field_names**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: False (the default) - maximum field name length in a structure is 31 characters
    which is the documented maximum length. True - maximum field name length in a
    structure is 63 characters which works for MATLAB 7.6+.
  prefs: []
  type: TYPE_NORMAL
- en: '**do_compression**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether or not to compress matrices on write. Default is False.
  prefs: []
  type: TYPE_NORMAL
- en: '**oned_as**{‘row’, ‘column’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If ‘column’, write 1-D NumPy arrays as column vectors. If ‘row’, write 1-D NumPy
    arrays as row vectors.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
