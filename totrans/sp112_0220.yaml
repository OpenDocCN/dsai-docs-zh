- en: scipy.io.FortranFile
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.io.FortranFile
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.io.FortranFile.html#scipy.io.FortranFile](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.io.FortranFile.html#scipy.io.FortranFile)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.io.FortranFile.html#scipy.io.FortranFile](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.io.FortranFile.html#scipy.io.FortranFile)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: A file object for unformatted sequential files from Fortran code.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 用于从Fortran代码获取无格式顺序文件的文件对象。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**filename**file or str'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**filename**文件或字符串'
- en: Open file object or filename.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 打开的文件对象或文件名。
- en: '**mode**{‘r’, ‘w’}, optional'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**mode**{‘r’, ‘w’}，可选'
- en: Read-write mode, default is ‘r’.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 读写模式，默认为‘r’。
- en: '**header_dtype**dtype, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**header_dtype**dtype，可选'
- en: Data type of the header. Size and endianness must match the input/output file.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 头部的数据类型。大小和字节序必须与输入/输出文件匹配。
- en: Notes
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: These files are broken up into records of unspecified types. The size of each
    record is given at the start (although the size of this header is not standard)
    and the data is written onto disk without any formatting. Fortran compilers supporting
    the BACKSPACE statement will write a second copy of the size to facilitate backwards
    seeking.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这些文件被分解为未指定类型的记录。每个记录的大小在开始时给出（尽管此标题的大小不是标准的），并且数据以没有任何格式的方式写入磁盘。支持BACKSPACE语句的Fortran编译器将写入第二个大小的副本以便进行向后查找。
- en: This class only supports files written with both sizes for the record. It also
    does not support the subrecords used in Intel and gfortran compilers for records
    which are greater than 2GB with a 4-byte header.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 该类仅支持同时写入记录大小的文件。它还不支持Intel和gfortran编译器中用于大于2GB的记录的子记录，这些记录具有4字节头部。
- en: 'An example of an unformatted sequential file in Fortran would be written as:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在Fortran中，无格式的顺序文件的示例将会写为：
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Since this is a non-standard file format, whose contents depend on the compiler
    and the endianness of the machine, caution is advised. Files from gfortran 4.8.0
    and gfortran 4.1.2 on x86_64 are known to work.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这是一种非标准的文件格式，其内容取决于编译器和机器的字节序，因此建议小心。已知适用于x86_64上的gfortran 4.8.0和gfortran
    4.1.2生成的文件。
- en: Consider using Fortran direct-access files or files from the newer Stream I/O,
    which can be easily read by [`numpy.fromfile`](https://numpy.org/devdocs/reference/generated/numpy.fromfile.html#numpy.fromfile
    "(in NumPy v2.0.dev0)").
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑使用Fortran直接访问文件或来自新Stream I/O的文件，这些文件可以轻松地被[`numpy.fromfile`](https://numpy.org/devdocs/reference/generated/numpy.fromfile.html#numpy.fromfile
    "(in NumPy v2.0.dev0)")读取。
- en: Examples
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'To create an unformatted sequential Fortran file:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个无格式的顺序Fortran文件：
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To read this file:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 要读取此文件：
- en: '[PRE3]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Or, in Fortran:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，在Fortran中：
- en: '[PRE4]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Methods
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`close`](scipy.io.FortranFile.close.html#scipy.io.FortranFile.close "scipy.io.FortranFile.close")()
    | Closes the file. |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [`close`](https://numpy.org/devdocs/reference/generated/numpy.fromfile.html#numpy.fromfile
    "(in NumPy v2.0.dev0)")() | 关闭文件。'
- en: '| [`read_ints`](scipy.io.FortranFile.read_ints.html#scipy.io.FortranFile.read_ints
    "scipy.io.FortranFile.read_ints")([dtype]) | Reads a record of a given type from
    the file, defaulting to an integer type (`INTEGER*4` in Fortran). |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| [`read_ints`](https://numpy.org/devdocs/reference/generated/numpy.fromfile.html#numpy.fromfile
    "(in NumPy v2.0.dev0)")([dtype]) | 从文件中读取给定类型的记录，默认为整数类型（Fortran 中的 `INTEGER*4`）。'
- en: '| [`read_reals`](scipy.io.FortranFile.read_reals.html#scipy.io.FortranFile.read_reals
    "scipy.io.FortranFile.read_reals")([dtype]) | Reads a record of a given type from
    the file, defaulting to a floating point number (`real*8` in Fortran). |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [`read_reals`](https://numpy.org/devdocs/reference/generated/numpy.fromfile.html#numpy.fromfile
    "(in NumPy v2.0.dev0)")([dtype]) | 从文件中读取给定类型的记录，默认为浮点数（Fortran 中的 `real*8`）。'
- en: '| [`read_record`](scipy.io.FortranFile.read_record.html#scipy.io.FortranFile.read_record
    "scipy.io.FortranFile.read_record")(*dtypes, **kwargs) | Reads a record of a given
    type from the file. |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [`read_record`](https://numpy.org/devdocs/reference/generated/numpy.fromfile.html#numpy.fromfile
    "(in NumPy v2.0.dev0)")(*dtypes, **kwargs) | 从文件中读取给定类型的记录。'
- en: '| [`write_record`](scipy.io.FortranFile.write_record.html#scipy.io.FortranFile.write_record
    "scipy.io.FortranFile.write_record")(*items) | Write a record (including sizes)
    to the file. |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [`write_record`](https://numpy.org/devdocs/reference/generated/numpy.fromfile.html#numpy.fromfile
    "(in NumPy v2.0.dev0)")(*items) | 向文件中写入记录（包括大小）。'
