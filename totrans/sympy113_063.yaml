- en: Named Groups
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 命名的群
- en: Original text：[https://docs.sympy.org/latest/modules/combinatorics/named_groups.html](https://docs.sympy.org/latest/modules/combinatorics/named_groups.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.sympy.org/latest/modules/combinatorics/named_groups.html](https://docs.sympy.org/latest/modules/combinatorics/named_groups.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Generates the symmetric group on `n` elements as a permutation group.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 生成 `n` 元素的对称群作为一个置换群。
- en: Explanation
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The generators taken are the `n`-cycle `(0 1 2 ... n-1)` and the transposition
    `(0 1)` (in cycle notation). (See [1]). After the group is generated, some of
    its basic properties are set.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 采取的生成器是 `n`-循环 `(0 1 2 ... n-1)` 和换位 `(0 1)`（在循环表示中）。 （见 [1]）。生成群之后，设置了一些其基本属性。
- en: Examples
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: See also
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`CyclicGroup`](#sympy.combinatorics.named_groups.CyclicGroup "sympy.combinatorics.named_groups.CyclicGroup"),
    [`DihedralGroup`](#sympy.combinatorics.named_groups.DihedralGroup "sympy.combinatorics.named_groups.DihedralGroup"),
    [`AlternatingGroup`](#sympy.combinatorics.named_groups.AlternatingGroup "sympy.combinatorics.named_groups.AlternatingGroup")'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[`CyclicGroup`](#sympy.combinatorics.named_groups.CyclicGroup "sympy.combinatorics.named_groups.CyclicGroup"),
    [`DihedralGroup`](#sympy.combinatorics.named_groups.DihedralGroup "sympy.combinatorics.named_groups.DihedralGroup"),
    [`AlternatingGroup`](#sympy.combinatorics.named_groups.AlternatingGroup "sympy.combinatorics.named_groups.AlternatingGroup")'
- en: References
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R57](#id1)]'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R57](#id1)]'
- en: '[https://en.wikipedia.org/wiki/Symmetric_group#Generators_and_relations](https://en.wikipedia.org/wiki/Symmetric_group#Generators_and_relations)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Symmetric_group#Generators_and_relations](https://en.wikipedia.org/wiki/Symmetric_group#Generators_and_relations)'
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Generates the cyclic group of order `n` as a permutation group.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 生成 `n` 阶循环群作为一个置换群。
- en: Explanation
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The generator taken is the `n`-cycle `(0 1 2 ... n-1)` (in cycle notation).
    After the group is generated, some of its basic properties are set.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 采取的生成器是 `n`-循环 `(0 1 2 ... n-1)`（在循环表示中）。生成群之后，设置了一些其基本属性。
- en: Examples
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE3]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: See also
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`SymmetricGroup`](#sympy.combinatorics.named_groups.SymmetricGroup "sympy.combinatorics.named_groups.SymmetricGroup"),
    [`DihedralGroup`](#sympy.combinatorics.named_groups.DihedralGroup "sympy.combinatorics.named_groups.DihedralGroup"),
    [`AlternatingGroup`](#sympy.combinatorics.named_groups.AlternatingGroup "sympy.combinatorics.named_groups.AlternatingGroup")'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[`SymmetricGroup`](#sympy.combinatorics.named_groups.SymmetricGroup "sympy.combinatorics.named_groups.SymmetricGroup"),
    [`DihedralGroup`](#sympy.combinatorics.named_groups.DihedralGroup "sympy.combinatorics.named_groups.DihedralGroup"),
    [`AlternatingGroup`](#sympy.combinatorics.named_groups.AlternatingGroup "sympy.combinatorics.named_groups.AlternatingGroup")'
- en: '[PRE4]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Generates the dihedral group \(D_n\) as a permutation group.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 生成二面角群 \(D_n\) 作为一个置换群。
- en: Explanation
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The dihedral group \(D_n\) is the group of symmetries of the regular `n`-gon.
    The generators taken are the `n`-cycle `a = (0 1 2 ... n-1)` (a rotation of the
    `n`-gon) and `b = (0 n-1)(1 n-2)...` (a reflection of the `n`-gon) in cycle rotation.
    It is easy to see that these satisfy `a**n = b**2 = 1` and `bab = ~a` so they
    indeed generate \(D_n\) (See [1]). After the group is generated, some of its basic
    properties are set.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 二面角群 \(D_n\) 是正规 `n`-边形的对称群。采取的生成器是 `n`-循环 `a = (0 1 2 ... n-1)`（`n`-边形的旋转）和
    `b = (0 n-1)(1 n-2)...`（`n`-边形的反射）在循环旋转中。很容易看出它们满足 `a**n = b**2 = 1` 和 `bab =
    ~a`，因此它们确实生成了 \(D_n\)（见 [1]）。生成群之后，设置了一些其基本属性。
- en: Examples
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE5]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: See also
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`SymmetricGroup`](#sympy.combinatorics.named_groups.SymmetricGroup "sympy.combinatorics.named_groups.SymmetricGroup"),
    [`CyclicGroup`](#sympy.combinatorics.named_groups.CyclicGroup "sympy.combinatorics.named_groups.CyclicGroup"),
    [`AlternatingGroup`](#sympy.combinatorics.named_groups.AlternatingGroup "sympy.combinatorics.named_groups.AlternatingGroup")'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[`SymmetricGroup`](#sympy.combinatorics.named_groups.SymmetricGroup "sympy.combinatorics.named_groups.SymmetricGroup"),
    [`CyclicGroup`](#sympy.combinatorics.named_groups.CyclicGroup "sympy.combinatorics.named_groups.CyclicGroup"),
    [`AlternatingGroup`](#sympy.combinatorics.named_groups.AlternatingGroup "sympy.combinatorics.named_groups.AlternatingGroup")'
- en: References
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R58](#id2)]'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R58](#id2)]'
- en: '[https://en.wikipedia.org/wiki/Dihedral_group](https://en.wikipedia.org/wiki/Dihedral_group)'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Dihedral_group](https://en.wikipedia.org/wiki/Dihedral_group)'
- en: '[PRE6]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Generates the alternating group on `n` elements as a permutation group.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 生成 `n` 元素的交错群作为一个置换群。
- en: Explanation
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: For `n > 2`, the generators taken are `(0 1 2), (0 1 2 ... n-1)` for `n` odd
    and `(0 1 2), (1 2 ... n-1)` for `n` even (See [1], p.31, ex.6.9.). After the
    group is generated, some of its basic properties are set. The cases `n = 1, 2`
    are handled separately.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 `n > 2`，采取的生成器是 `(0 1 2), (0 1 2 ... n-1)` 对于奇数 `n` 和 `(0 1 2), (1 2 ...
    n-1)` 对于偶数 `n`（见 [1], p.31, ex.6.9.）。生成群之后，设置了一些其基本属性。处理了 `n = 1, 2` 的情况。
- en: Examples
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE7]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: See also
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`SymmetricGroup`](#sympy.combinatorics.named_groups.SymmetricGroup "sympy.combinatorics.named_groups.SymmetricGroup"),
    [`CyclicGroup`](#sympy.combinatorics.named_groups.CyclicGroup "sympy.combinatorics.named_groups.CyclicGroup"),
    [`DihedralGroup`](#sympy.combinatorics.named_groups.DihedralGroup "sympy.combinatorics.named_groups.DihedralGroup")'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[`SymmetricGroup`](#sympy.combinatorics.named_groups.SymmetricGroup "sympy.combinatorics.named_groups.SymmetricGroup"),
    [`CyclicGroup`](#sympy.combinatorics.named_groups.CyclicGroup "sympy.combinatorics.named_groups.CyclicGroup"),
    [`DihedralGroup`](#sympy.combinatorics.named_groups.DihedralGroup "sympy.combinatorics.named_groups.DihedralGroup")'
- en: References
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R59](#id3)]'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R59](#id3)]'
- en: Armstrong, M. “Groups and Symmetry”
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Armstrong, M. “Groups and Symmetry”
- en: '[PRE8]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Returns the direct product of cyclic groups with the given orders.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 返回具有给定阶数的循环群的直积。
- en: Explanation
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: According to the structure theorem for finite abelian groups ([1]), every finite
    abelian group can be written as the direct product of finitely many cyclic groups.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 根据有限阿贝尔群的结构定理（[1]），每个有限阿贝尔群都可以写成有限多个循环群的直积。
- en: Examples
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE9]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: See also
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`DirectProduct`](group_constructs.html#sympy.combinatorics.group_constructs.DirectProduct
    "sympy.combinatorics.group_constructs.DirectProduct")'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DirectProduct`](group_constructs.html#sympy.combinatorics.group_constructs.DirectProduct
    "sympy.combinatorics.group_constructs.DirectProduct")'
- en: References
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R60](#id4)]'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R60](#id4)]'
- en: '[https://groupprops.subwiki.org/wiki/Structure_theorem_for_finitely_generated_abelian_groups](https://groupprops.subwiki.org/wiki/Structure_theorem_for_finitely_generated_abelian_groups)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://groupprops.subwiki.org/wiki/Structure_theorem_for_finitely_generated_abelian_groups](https://groupprops.subwiki.org/wiki/Structure_theorem_for_finitely_generated_abelian_groups)'
