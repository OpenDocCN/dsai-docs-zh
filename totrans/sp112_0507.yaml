- en: scipy.signal.convolve2d
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.signal.convolve2d
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.convolve2d.html#scipy.signal.convolve2d](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.convolve2d.html#scipy.signal.convolve2d)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.convolve2d.html#scipy.signal.convolve2d](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.convolve2d.html#scipy.signal.convolve2d)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Convolve two 2-dimensional arrays.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对两个二维数组进行卷积。
- en: Convolve *in1* and *in2* with output size determined by *mode*, and boundary
    conditions determined by *boundary* and *fillvalue*.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 用于计算输出大小的模式以及由 *boundary* 和 *fillvalue* 决定的边界条件对 *in1* 和 *in2* 进行卷积。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**in1**array_like'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**in1** 类似数组'
- en: First input.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: First input.
- en: '**in2**array_like'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**in2** 类似数组'
- en: Second input. Should have the same number of dimensions as *in1*.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个输入。应该与 *in1* 具有相同数量的维度。
- en: '**mode**str {‘full’, ‘valid’, ‘same’}, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**mode** 字符串 {‘full’, ‘valid’, ‘same’}，可选'
- en: 'A string indicating the size of the output:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 表示输出大小的字符串：
- en: '`full`'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '`full`'
- en: The output is the full discrete linear convolution of the inputs. (Default)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 输出是输入的完整离散线性卷积。（默认）
- en: '`valid`'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`valid`'
- en: The output consists only of those elements that do not rely on the zero-padding.
    In ‘valid’ mode, either *in1* or *in2* must be at least as large as the other
    in every dimension.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 输出仅包含不依赖于零填充的元素。在“valid”模式下，*in1* 或 *in2* 在每个维度上至少必须与另一个一样大。
- en: '`same`'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`same`'
- en: The output is the same size as *in1*, centered with respect to the ‘full’ output.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 输出与 *in1* 相同大小，并相对于“full”输出居中。
- en: '**boundary**str {‘fill’, ‘wrap’, ‘symm’}, optional'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**boundary** 字符串 {‘fill’, ‘wrap’, ‘symm’}，可选'
- en: 'A flag indicating how to handle boundaries:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一个指示如何处理边界的标志：
- en: '`fill`'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`fill`'
- en: pad input arrays with fillvalue. (default)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 用 fillvalue 填充输入数组。（默认）
- en: '`wrap`'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`wrap`'
- en: circular boundary conditions.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 循环边界条件。
- en: '`symm`'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '`symm`'
- en: symmetrical boundary conditions.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 对称边界条件。
- en: '**fillvalue**scalar, optional'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**fillvalue** 标量，可选'
- en: Value to fill pad input arrays with. Default is 0.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 用于填充输入数组的值。默认为 0。
- en: 'Returns:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**out**ndarray'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**out** ndarray'
- en: A 2-dimensional array containing a subset of the discrete linear convolution
    of *in1* with *in2*.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 包含 *in1* 与 *in2* 离散线性卷积子集的二维数组。
- en: Examples
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: Compute the gradient of an image by 2D convolution with a complex Scharr operator.
    (Horizontal operator is real, vertical is imaginary.) Use symmetric boundary condition
    to avoid creating edges at the image boundaries.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 使用复杂的Scharr算子通过2D卷积计算图像的梯度。（水平操作符是实部，垂直是虚部。）使用对称边界条件避免在图像边界创建边缘。
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![../../_images/scipy-signal-convolve2d-1.png](../Images/2fe571da085c91b5ed1dfbe426a4521b.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-signal-convolve2d-1.png](../Images/2fe571da085c91b5ed1dfbe426a4521b.png)'
