- en: pandas.io.formats.style.Styler.concat
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.io.formats.style.Styler.concat.html](https://pandas.pydata.org/docs/reference/api/pandas.io.formats.style.Styler.concat.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Append another Styler to combine the output into a single table.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.5.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**other**Styler'
  prefs: []
  type: TYPE_NORMAL
- en: The other Styler object which has already been styled and formatted. The data
    for this Styler must have the same columns as the original, and the number of
    index levels must also be the same to render correctly.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: Styler
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The purpose of this method is to extend existing styled dataframes with other
    metrics that may be useful but may not conform to the original’s structure. For
    example adding a sub total row, or displaying metrics such as means, variance
    or counts.
  prefs: []
  type: TYPE_NORMAL
- en: Styles that are applied using the `apply`, `map`, `apply_index` and `map_index`,
    and formatting applied with `format` and `format_index` will be preserved.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: Only the output methods `to_html`, `to_string` and `to_latex` currently work
    with concatenated Stylers.
  prefs: []
  type: TYPE_NORMAL
- en: Other output methods, including `to_excel`, **do not** work with concatenated
    Stylers.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following should be noted:'
  prefs: []
  type: TYPE_NORMAL
- en: '`table_styles`, `table_attributes`, `caption` and `uuid` are all inherited
    from the original Styler and not `other`.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: hidden columns and hidden index levels will be inherited from the original Styler
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`css` will be inherited from the original Styler, and the value of keys `data`,
    `row_heading` and `row` will be prepended with `foot0_`. If more concats are chained,
    their styles will be prepended with `foot1_`, ‘’foot_2’’, etc., and if a concatenated
    style have another concatanated style, the second style will be prepended with
    `foot{parent}_foot{child}_`.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: A common use case is to concatenate user defined functions with `DataFrame.agg`
    or with described statistics via `DataFrame.describe`. See examples.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: A common use case is adding totals rows, or otherwise, via methods calculated
    in `DataFrame.agg`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/footer_simple.png](../Images/765027d2a114fa54cd09e996d11bc12c.png)'
  prefs: []
  type: TYPE_IMG
- en: Since the concatenated object is a Styler the existing functionality can be
    used to conditionally format it as well as the original.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/footer_extended.png](../Images/7a20746f730c71cc157134e54873dbee.png)'
  prefs: []
  type: TYPE_IMG
- en: When `other` has fewer index levels than the original Styler it is possible
    to extend the index in `other`, with placeholder levels.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
