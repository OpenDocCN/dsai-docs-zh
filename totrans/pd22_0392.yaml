- en: pandas.DataFrame.plot.hexbin
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.hexbin.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.hexbin.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Generate a hexagonal binning plot.
  prefs: []
  type: TYPE_NORMAL
- en: Generate a hexagonal binning plot of x versus y. If C is None (the default),
    this is a histogram of the number of occurrences of the observations at `(x[i],
    y[i])`.
  prefs: []
  type: TYPE_NORMAL
- en: If C is specified, specifies values at given coordinates `(x[i], y[i])`. These
    values are accumulated for each hexagonal bin and then reduced according to reduce_C_function,
    having as default the NumPy’s mean function (`numpy.mean()`). (If C is specified,
    it must also be a 1-D sequence of the same length as x and y, or a column label.)
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**int or str'
  prefs: []
  type: TYPE_NORMAL
- en: The column label or position for x points.
  prefs: []
  type: TYPE_NORMAL
- en: '**y**int or str'
  prefs: []
  type: TYPE_NORMAL
- en: The column label or position for y points.
  prefs: []
  type: TYPE_NORMAL
- en: '**C**int or str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The column label or position for the value of (x, y) point.
  prefs: []
  type: TYPE_NORMAL
- en: '**reduce_C_function**callable, default np.mean'
  prefs: []
  type: TYPE_NORMAL
- en: Function of one argument that reduces all the values in a bin to a single number
    (e.g. np.mean, np.max, np.sum, np.std).
  prefs: []
  type: TYPE_NORMAL
- en: '**gridsize**int or tuple of (int, int), default 100'
  prefs: []
  type: TYPE_NORMAL
- en: The number of hexagons in the x-direction. The corresponding number of hexagons
    in the y-direction is chosen in a way that the hexagons are approximately regular.
    Alternatively, gridsize can be a tuple with two elements specifying the number
    of hexagons in the x-direction and the y-direction.
  prefs: []
  type: TYPE_NORMAL
- en: '****kwargs**'
  prefs: []
  type: TYPE_NORMAL
- en: Additional keyword arguments are documented in [`DataFrame.plot()`](pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot").
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: matplotlib.AxesSubplot
  prefs: []
  type: TYPE_NORMAL
- en: The matplotlib `Axes` on which the hexbin is plotted.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.plot`](pandas.DataFrame.plot.html#pandas.DataFrame.plot "pandas.DataFrame.plot")'
  prefs: []
  type: TYPE_NORMAL
- en: Make plots of a DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '[`matplotlib.pyplot.hexbin`](https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.hexbin.html#matplotlib.pyplot.hexbin
    "(in Matplotlib v3.8.4)")'
  prefs: []
  type: TYPE_NORMAL
- en: Hexagonal binning plot using matplotlib, the matplotlib function that is used
    under the hood.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: The following examples are generated with random data from a normal distribution.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/pandas-DataFrame-plot-hexbin-1.png](../Images/ccf35a29415142d95b25012f973b9fb6.png)'
  prefs: []
  type: TYPE_IMG
- en: The next example uses C and np.sum as reduce_C_function. Note that ‘observations’
    values ranges from 1 to 5 but the result plot shows values up to more than 25\.
    This is because of the reduce_C_function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/pandas-DataFrame-plot-hexbin-2.png](../Images/219036d37982f0db4611a73d73331920.png)'
  prefs: []
  type: TYPE_IMG
