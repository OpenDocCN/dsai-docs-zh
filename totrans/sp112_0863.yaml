- en: scipy.special.ncfdtrinc
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.ncfdtrinc.html#scipy.special.ncfdtrinc](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.ncfdtrinc.html#scipy.special.ncfdtrinc)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Calculate non-centrality parameter for non-central F distribution.
  prefs: []
  type: TYPE_NORMAL
- en: This is the inverse with respect to *nc* of [`ncfdtr`](scipy.special.ncfdtr.html#scipy.special.ncfdtr
    "scipy.special.ncfdtr"). See [`ncfdtr`](scipy.special.ncfdtr.html#scipy.special.ncfdtr
    "scipy.special.ncfdtr") for more details.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**dfn**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Degrees of freedom of the numerator sum of squares. Range (0, inf).
  prefs: []
  type: TYPE_NORMAL
- en: '**dfd**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Degrees of freedom of the denominator sum of squares. Range (0, inf).
  prefs: []
  type: TYPE_NORMAL
- en: '**p**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Value of the cumulative distribution function. Must be in the range [0, 1].
  prefs: []
  type: TYPE_NORMAL
- en: '**f**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Quantiles, i.e., the upper limit of integration.
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Optional output array for the function results
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**nc**scalar or ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Noncentrality parameter.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`ncfdtr`](scipy.special.ncfdtr.html#scipy.special.ncfdtr "scipy.special.ncfdtr")'
  prefs: []
  type: TYPE_NORMAL
- en: CDF of the non-central F distribution.
  prefs: []
  type: TYPE_NORMAL
- en: '[`ncfdtri`](scipy.special.ncfdtri.html#scipy.special.ncfdtri "scipy.special.ncfdtri")'
  prefs: []
  type: TYPE_NORMAL
- en: Quantile function; inverse of [`ncfdtr`](scipy.special.ncfdtr.html#scipy.special.ncfdtr
    "scipy.special.ncfdtr") with respect to *f*.
  prefs: []
  type: TYPE_NORMAL
- en: '[`ncfdtridfd`](scipy.special.ncfdtridfd.html#scipy.special.ncfdtridfd "scipy.special.ncfdtridfd")'
  prefs: []
  type: TYPE_NORMAL
- en: Inverse of [`ncfdtr`](scipy.special.ncfdtr.html#scipy.special.ncfdtr "scipy.special.ncfdtr")
    with respect to *dfd*.
  prefs: []
  type: TYPE_NORMAL
- en: '[`ncfdtridfn`](scipy.special.ncfdtridfn.html#scipy.special.ncfdtridfn "scipy.special.ncfdtridfn")'
  prefs: []
  type: TYPE_NORMAL
- en: Inverse of [`ncfdtr`](scipy.special.ncfdtr.html#scipy.special.ncfdtr "scipy.special.ncfdtr")
    with respect to *dfn*.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Compute the CDF for several values of *nc*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Compute the inverse. We recover the values of *nc*, as expected:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
