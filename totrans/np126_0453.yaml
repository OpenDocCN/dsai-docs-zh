- en: numpy.busdaycalendar
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.busdaycalendar.html](https://numpy.org/doc/1.26/reference/generated/numpy.busdaycalendar.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: A business day calendar object that efficiently stores information defining
    valid days for the busday family of functions.
  prefs: []
  type: TYPE_NORMAL
- en: The default valid days are Monday through Friday (“business days”). A busdaycalendar
    object can be specified with any set of weekly valid days, plus an optional “holiday”
    dates that always will be invalid.
  prefs: []
  type: TYPE_NORMAL
- en: Once a busdaycalendar object is created, the weekmask and holidays cannot be
    modified.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.7.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**weekmask**str or array_like of bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'A seven-element array indicating which of Monday through Sunday are valid days.
    May be specified as a length-seven list or array, like [1,1,1,1,1,0,0]; a length-seven
    string, like ‘1111100’; or a string like “Mon Tue Wed Thu Fri”, made up of 3-character
    abbreviations for weekdays, optionally separated by white space. Valid abbreviations
    are: Mon Tue Wed Thu Fri Sat Sun'
  prefs: []
  type: TYPE_NORMAL
- en: '**holidays**array_like of datetime64[D], optional'
  prefs: []
  type: TYPE_NORMAL
- en: An array of dates to consider as invalid dates, no matter which weekday they
    fall upon. Holiday dates may be specified in any order, and NaT (not-a-time) dates
    are ignored. This list is saved in a normalized form that is suited for fast calculations
    of valid days.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**busdaycalendar'
  prefs: []
  type: TYPE_NORMAL
- en: A business day calendar object containing the specified weekmask and holidays
    values.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`is_busday`](numpy.is_busday.html#numpy.is_busday "numpy.is_busday")'
  prefs: []
  type: TYPE_NORMAL
- en: Returns a boolean array indicating valid days.
  prefs: []
  type: TYPE_NORMAL
- en: '[`busday_offset`](numpy.busday_offset.html#numpy.busday_offset "numpy.busday_offset")'
  prefs: []
  type: TYPE_NORMAL
- en: Applies an offset counted in valid days.
  prefs: []
  type: TYPE_NORMAL
- en: '[`busday_count`](numpy.busday_count.html#numpy.busday_count "numpy.busday_count")'
  prefs: []
  type: TYPE_NORMAL
- en: Counts how many valid days are in a half-open date range.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Note: once a busdaycalendar object is created, you cannot modify the**'
  prefs: []
  type: TYPE_NORMAL
- en: '**weekmask or holidays. The attributes return copies of internal data.**'
  prefs: []
  type: TYPE_NORMAL
- en: '[`weekmask`](numpy.busdaycalendar.weekmask.html#numpy.busdaycalendar.weekmask
    "numpy.busdaycalendar.weekmask")(copy) seven-element array of bool'
  prefs: []
  type: TYPE_NORMAL
- en: A copy of the seven-element boolean mask indicating valid days.
  prefs: []
  type: TYPE_NORMAL
- en: '[`holidays`](numpy.busdaycalendar.holidays.html#numpy.busdaycalendar.holidays
    "numpy.busdaycalendar.holidays")(copy) sorted array of datetime64[D]'
  prefs: []
  type: TYPE_NORMAL
- en: A copy of the holiday array indicating additional invalid days.
  prefs: []
  type: TYPE_NORMAL
