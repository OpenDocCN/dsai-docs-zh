- en: pandas.core.groupby.DataFrameGroupBy.aggregate
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.core.groupby.DataFrameGroupBy.aggregate.html](https://pandas.pydata.org/docs/reference/api/pandas.core.groupby.DataFrameGroupBy.aggregate.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Aggregate using one or more operations over the specified axis.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**func**function, str, list, dict or None'
  prefs: []
  type: TYPE_NORMAL
- en: Function to use for aggregating the data. If a function, must either work when
    passed a DataFrame or when passed to DataFrame.apply.
  prefs: []
  type: TYPE_NORMAL
- en: 'Accepted combinations are:'
  prefs: []
  type: TYPE_NORMAL
- en: function
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: string function name
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: list of functions and/or function names, e.g. `[np.sum, 'mean']`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dict of axis labels -> functions, function names or list of such.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: None, in which case `**kwargs` are used with Named Aggregation. Here the output
    has one column for each element in `**kwargs`. The name of the column is keyword,
    whereas the value determines the aggregation used to compute the values in the
    column.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Can also accept a Numba JIT function with `engine='numba'` specified. Only passing
    a single function is supported with this engine.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: If the `'numba'` engine is chosen, the function must be a user defined function
    with `values` and `index` as the first and second arguments respectively in the
    function signature. Each group’s index will be passed to the user defined function
    and optionally available for use.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '***args**'
  prefs: []
  type: TYPE_NORMAL
- en: Positional arguments to pass to func.
  prefs: []
  type: TYPE_NORMAL
- en: '**engine**str, default None'
  prefs: []
  type: TYPE_NORMAL
- en: '`''cython''` : Runs the function through C-extensions from cython.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`''numba''` : Runs the function through JIT compiled code from numba.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`None` : Defaults to `''cython''` or globally setting `compute.use_numba`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**engine_kwargs**dict, default None'
  prefs: []
  type: TYPE_NORMAL
- en: For `'cython'` engine, there are no accepted `engine_kwargs`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For `''numba''` engine, the engine can accept `nopython`, `nogil` and `parallel`
    dictionary keys. The values must either be `True` or `False`. The default `engine_kwargs`
    for the `''numba''` engine is `{''nopython'': True, ''nogil'': False, ''parallel'':
    False}` and will be applied to the function'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '****kwargs**'
  prefs: []
  type: TYPE_NORMAL
- en: If `func` is None, `**kwargs` are used to define the output names and aggregations
    via Named Aggregation. See `func` entry.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Otherwise, keyword arguments to be passed into func.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrame.groupby.apply`'
  prefs: []
  type: TYPE_NORMAL
- en: Apply function func group-wise and combine the results together.
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrame.groupby.transform`'
  prefs: []
  type: TYPE_NORMAL
- en: Transforms the Series on each group based on the given function.
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrame.aggregate`'
  prefs: []
  type: TYPE_NORMAL
- en: Aggregate using one or more operations over the specified axis.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: When using `engine='numba'`, there will be no “fall back” behavior internally.
    The group data and group index will be passed as numpy arrays to the JITed user
    defined function, and no alternative execution attempts will be tried.
  prefs: []
  type: TYPE_NORMAL
- en: Functions that mutate the passed object can produce unexpected behavior or errors
    and are not supported. See [Mutating with User Defined Function (UDF) methods](../../user_guide/gotchas.html#gotchas-udf-mutation)
    for more details.
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 1.3.0: The resulting dtype will reflect the return value
    of the passed `func`, see the examples below.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The aggregation is for each column.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Multiple aggregations
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Select a column for aggregation
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: User-defined function for aggregation
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Different aggregations per column
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: To control the output names with different aggregations per column, pandas supports
    “named aggregation”
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: The keywords are the *output* column names
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The values are tuples whose first element is the column to select and the second
    element is the aggregation to apply to that column. Pandas provides the `pandas.NamedAgg`
    namedtuple with the fields `['column', 'aggfunc']` to make it clearer what the
    arguments are. As usual, the aggregation can be a callable or a string alias.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: See [Named aggregation](../../user_guide/groupby.html#groupby-aggregate-named)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 1.3.0: The resulting dtype will reflect the return value
    of the aggregating function.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
