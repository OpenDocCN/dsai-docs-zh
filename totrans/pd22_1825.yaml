- en: Testing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/testing.html](https://pandas.pydata.org/docs/reference/testing.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '## Assertion functions'
  prefs: []
  type: TYPE_NORMAL
- en: '| [`testing.assert_frame_equal`](api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal")(left, right[, ...]) | Check that left and
    right DataFrame are equal. |'
  prefs: []
  type: TYPE_TB
- en: '| [`testing.assert_series_equal`](api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal")(left, right[, ...]) | Check that left and
    right Series are equal. |'
  prefs: []
  type: TYPE_TB
- en: '| [`testing.assert_index_equal`](api/pandas.testing.assert_index_equal.html#pandas.testing.assert_index_equal
    "pandas.testing.assert_index_equal")(left, right[, ...]) | Check that left and
    right Index are equal. |'
  prefs: []
  type: TYPE_TB
- en: '| [`testing.assert_extension_array_equal`](api/pandas.testing.assert_extension_array_equal.html#pandas.testing.assert_extension_array_equal
    "pandas.testing.assert_extension_array_equal")(left, right) | Check that left
    and right ExtensionArrays are equal. |'
  prefs: []
  type: TYPE_TB
- en: Exceptions and warnings
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`errors.AbstractMethodError`](api/pandas.errors.AbstractMethodError.html#pandas.errors.AbstractMethodError
    "pandas.errors.AbstractMethodError")(class_instance[, ...]) | Raise this error
    instead of NotImplementedError for abstract methods. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.AttributeConflictWarning`](api/pandas.errors.AttributeConflictWarning.html#pandas.errors.AttributeConflictWarning
    "pandas.errors.AttributeConflictWarning") | Warning raised when index attributes
    conflict when using HDFStore. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.CategoricalConversionWarning`](api/pandas.errors.CategoricalConversionWarning.html#pandas.errors.CategoricalConversionWarning
    "pandas.errors.CategoricalConversionWarning") | Warning is raised when reading
    a partial labeled Stata file using a iterator. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.ChainedAssignmentError`](api/pandas.errors.ChainedAssignmentError.html#pandas.errors.ChainedAssignmentError
    "pandas.errors.ChainedAssignmentError") | Warning raised when trying to set using
    chained assignment. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.ClosedFileError`](api/pandas.errors.ClosedFileError.html#pandas.errors.ClosedFileError
    "pandas.errors.ClosedFileError") | Exception is raised when trying to perform
    an operation on a closed HDFStore file. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.CSSWarning`](api/pandas.errors.CSSWarning.html#pandas.errors.CSSWarning
    "pandas.errors.CSSWarning") | Warning is raised when converting css styling fails.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.DatabaseError`](api/pandas.errors.DatabaseError.html#pandas.errors.DatabaseError
    "pandas.errors.DatabaseError") | Error is raised when executing sql with bad syntax
    or sql that throws an error. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.DataError`](api/pandas.errors.DataError.html#pandas.errors.DataError
    "pandas.errors.DataError") | Exceptionn raised when performing an operation on
    non-numerical data. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.DtypeWarning`](api/pandas.errors.DtypeWarning.html#pandas.errors.DtypeWarning
    "pandas.errors.DtypeWarning") | Warning raised when reading different dtypes in
    a column from a file. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.DuplicateLabelError`](api/pandas.errors.DuplicateLabelError.html#pandas.errors.DuplicateLabelError
    "pandas.errors.DuplicateLabelError") | Error raised when an operation would introduce
    duplicate labels. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.EmptyDataError`](api/pandas.errors.EmptyDataError.html#pandas.errors.EmptyDataError
    "pandas.errors.EmptyDataError") | Exception raised in `pd.read_csv` when empty
    data or header is encountered. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.IncompatibilityWarning`](api/pandas.errors.IncompatibilityWarning.html#pandas.errors.IncompatibilityWarning
    "pandas.errors.IncompatibilityWarning") | Warning raised when trying to use where
    criteria on an incompatible HDF5 file. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.IndexingError`](api/pandas.errors.IndexingError.html#pandas.errors.IndexingError
    "pandas.errors.IndexingError") | Exception is raised when trying to index and
    there is a mismatch in dimensions. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.InvalidColumnName`](api/pandas.errors.InvalidColumnName.html#pandas.errors.InvalidColumnName
    "pandas.errors.InvalidColumnName") | Warning raised by to_stata the column contains
    a non-valid stata name. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.InvalidComparison`](api/pandas.errors.InvalidComparison.html#pandas.errors.InvalidComparison
    "pandas.errors.InvalidComparison") | Exception is raised by _validate_comparison_value
    to indicate an invalid comparison. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.InvalidIndexError`](api/pandas.errors.InvalidIndexError.html#pandas.errors.InvalidIndexError
    "pandas.errors.InvalidIndexError") | Exception raised when attempting to use an
    invalid index key. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.InvalidVersion`](api/pandas.errors.InvalidVersion.html#pandas.errors.InvalidVersion
    "pandas.errors.InvalidVersion") | An invalid version was found, users should refer
    to PEP 440. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.IntCastingNaNError`](api/pandas.errors.IntCastingNaNError.html#pandas.errors.IntCastingNaNError
    "pandas.errors.IntCastingNaNError") | Exception raised when converting (`astype`)
    an array with NaN to an integer type. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.LossySetitemError`](api/pandas.errors.LossySetitemError.html#pandas.errors.LossySetitemError
    "pandas.errors.LossySetitemError") | Raised when trying to do a __setitem__ on
    an np.ndarray that is not lossless. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.MergeError`](api/pandas.errors.MergeError.html#pandas.errors.MergeError
    "pandas.errors.MergeError") | Exception raised when merging data. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.NoBufferPresent`](api/pandas.errors.NoBufferPresent.html#pandas.errors.NoBufferPresent
    "pandas.errors.NoBufferPresent") | Exception is raised in _get_data_buffer to
    signal that there is no requested buffer. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.NullFrequencyError`](api/pandas.errors.NullFrequencyError.html#pandas.errors.NullFrequencyError
    "pandas.errors.NullFrequencyError") | Exception raised when a `freq` cannot be
    null. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.NumbaUtilError`](api/pandas.errors.NumbaUtilError.html#pandas.errors.NumbaUtilError
    "pandas.errors.NumbaUtilError") | Error raised for unsupported Numba engine routines.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.NumExprClobberingError`](api/pandas.errors.NumExprClobberingError.html#pandas.errors.NumExprClobberingError
    "pandas.errors.NumExprClobberingError") | Exception raised when trying to use
    a built-in numexpr name as a variable name. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.OptionError`](api/pandas.errors.OptionError.html#pandas.errors.OptionError
    "pandas.errors.OptionError") | Exception raised for pandas.options. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.OutOfBoundsDatetime`](api/pandas.errors.OutOfBoundsDatetime.html#pandas.errors.OutOfBoundsDatetime
    "pandas.errors.OutOfBoundsDatetime") | Raised when the datetime is outside the
    range that can be represented. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.OutOfBoundsTimedelta`](api/pandas.errors.OutOfBoundsTimedelta.html#pandas.errors.OutOfBoundsTimedelta
    "pandas.errors.OutOfBoundsTimedelta") | Raised when encountering a timedelta value
    that cannot be represented. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.ParserError`](api/pandas.errors.ParserError.html#pandas.errors.ParserError
    "pandas.errors.ParserError") | Exception that is raised by an error encountered
    in parsing file contents. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.ParserWarning`](api/pandas.errors.ParserWarning.html#pandas.errors.ParserWarning
    "pandas.errors.ParserWarning") | Warning raised when reading a file that doesn''t
    use the default ''c'' parser. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.PerformanceWarning`](api/pandas.errors.PerformanceWarning.html#pandas.errors.PerformanceWarning
    "pandas.errors.PerformanceWarning") | Warning raised when there is a possible
    performance impact. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.PossibleDataLossError`](api/pandas.errors.PossibleDataLossError.html#pandas.errors.PossibleDataLossError
    "pandas.errors.PossibleDataLossError") | Exception raised when trying to open
    a HDFStore file when already opened. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.PossiblePrecisionLoss`](api/pandas.errors.PossiblePrecisionLoss.html#pandas.errors.PossiblePrecisionLoss
    "pandas.errors.PossiblePrecisionLoss") | Warning raised by to_stata on a column
    with a value outside or equal to int64. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.PyperclipException`](api/pandas.errors.PyperclipException.html#pandas.errors.PyperclipException
    "pandas.errors.PyperclipException") | Exception raised when clipboard functionality
    is unsupported. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.PyperclipWindowsException`](api/pandas.errors.PyperclipWindowsException.html#pandas.errors.PyperclipWindowsException
    "pandas.errors.PyperclipWindowsException")(message) | Exception raised when clipboard
    functionality is unsupported by Windows. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.SettingWithCopyError`](api/pandas.errors.SettingWithCopyError.html#pandas.errors.SettingWithCopyError
    "pandas.errors.SettingWithCopyError") | Exception raised when trying to set on
    a copied slice from a `DataFrame`. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.SettingWithCopyWarning`](api/pandas.errors.SettingWithCopyWarning.html#pandas.errors.SettingWithCopyWarning
    "pandas.errors.SettingWithCopyWarning") | Warning raised when trying to set on
    a copied slice from a `DataFrame`. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.SpecificationError`](api/pandas.errors.SpecificationError.html#pandas.errors.SpecificationError
    "pandas.errors.SpecificationError") | Exception raised by `agg` when the functions
    are ill-specified. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.UndefinedVariableError`](api/pandas.errors.UndefinedVariableError.html#pandas.errors.UndefinedVariableError
    "pandas.errors.UndefinedVariableError")(name[, is_local]) | Exception raised by
    `query` or `eval` when using an undefined variable name. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.UnsortedIndexError`](api/pandas.errors.UnsortedIndexError.html#pandas.errors.UnsortedIndexError
    "pandas.errors.UnsortedIndexError") | Error raised when slicing a MultiIndex which
    has not been lexsorted. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.UnsupportedFunctionCall`](api/pandas.errors.UnsupportedFunctionCall.html#pandas.errors.UnsupportedFunctionCall
    "pandas.errors.UnsupportedFunctionCall") | Exception raised when attempting to
    call a unsupported numpy function. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.ValueLabelTypeMismatch`](api/pandas.errors.ValueLabelTypeMismatch.html#pandas.errors.ValueLabelTypeMismatch
    "pandas.errors.ValueLabelTypeMismatch") | Warning raised by to_stata on a category
    column that contains non-string values. |'
  prefs: []
  type: TYPE_TB
- en: Bug report function
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`show_versions`](api/pandas.show_versions.html#pandas.show_versions "pandas.show_versions")([as_json])
    | Provide useful information, important for bug reports. |'
  prefs: []
  type: TYPE_TB
- en: Test suite runner
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`test`](api/pandas.test.html#pandas.test "pandas.test")([extra_args, run_doctests])
    | Run the pandas test suite using pytest. |'
  prefs: []
  type: TYPE_TB
- en: '## Assertion functions'
  prefs: []
  type: TYPE_NORMAL
- en: '| [`testing.assert_frame_equal`](api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal")(left, right[, ...]) | Check that left and
    right DataFrame are equal. |'
  prefs: []
  type: TYPE_TB
- en: '| [`testing.assert_series_equal`](api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal")(left, right[, ...]) | Check that left and
    right Series are equal. |'
  prefs: []
  type: TYPE_TB
- en: '| [`testing.assert_index_equal`](api/pandas.testing.assert_index_equal.html#pandas.testing.assert_index_equal
    "pandas.testing.assert_index_equal")(left, right[, ...]) | Check that left and
    right Index are equal. |'
  prefs: []
  type: TYPE_TB
- en: '| [`testing.assert_extension_array_equal`](api/pandas.testing.assert_extension_array_equal.html#pandas.testing.assert_extension_array_equal
    "pandas.testing.assert_extension_array_equal")(left, right) | Check that left
    and right ExtensionArrays are equal. |'
  prefs: []
  type: TYPE_TB
- en: Exceptions and warnings
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`errors.AbstractMethodError`](api/pandas.errors.AbstractMethodError.html#pandas.errors.AbstractMethodError
    "pandas.errors.AbstractMethodError")(class_instance[, ...]) | Raise this error
    instead of NotImplementedError for abstract methods. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.AttributeConflictWarning`](api/pandas.errors.AttributeConflictWarning.html#pandas.errors.AttributeConflictWarning
    "pandas.errors.AttributeConflictWarning") | Warning raised when index attributes
    conflict when using HDFStore. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.CategoricalConversionWarning`](api/pandas.errors.CategoricalConversionWarning.html#pandas.errors.CategoricalConversionWarning
    "pandas.errors.CategoricalConversionWarning") | Warning is raised when reading
    a partial labeled Stata file using a iterator. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.ChainedAssignmentError`](api/pandas.errors.ChainedAssignmentError.html#pandas.errors.ChainedAssignmentError
    "pandas.errors.ChainedAssignmentError") | Warning raised when trying to set using
    chained assignment. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.ClosedFileError`](api/pandas.errors.ClosedFileError.html#pandas.errors.ClosedFileError
    "pandas.errors.ClosedFileError") | Exception is raised when trying to perform
    an operation on a closed HDFStore file. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.CSSWarning`](api/pandas.errors.CSSWarning.html#pandas.errors.CSSWarning
    "pandas.errors.CSSWarning") | Warning is raised when converting css styling fails.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.DatabaseError`](api/pandas.errors.DatabaseError.html#pandas.errors.DatabaseError
    "pandas.errors.DatabaseError") | Error is raised when executing sql with bad syntax
    or sql that throws an error. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.DataError`](api/pandas.errors.DataError.html#pandas.errors.DataError
    "pandas.errors.DataError") | Exceptionn raised when performing an operation on
    non-numerical data. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.DtypeWarning`](api/pandas.errors.DtypeWarning.html#pandas.errors.DtypeWarning
    "pandas.errors.DtypeWarning") | Warning raised when reading different dtypes in
    a column from a file. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.DuplicateLabelError`](api/pandas.errors.DuplicateLabelError.html#pandas.errors.DuplicateLabelError
    "pandas.errors.DuplicateLabelError") | Error raised when an operation would introduce
    duplicate labels. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.EmptyDataError`](api/pandas.errors.EmptyDataError.html#pandas.errors.EmptyDataError
    "pandas.errors.EmptyDataError") | Exception raised in `pd.read_csv` when empty
    data or header is encountered. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.IncompatibilityWarning`](api/pandas.errors.IncompatibilityWarning.html#pandas.errors.IncompatibilityWarning
    "pandas.errors.IncompatibilityWarning") | Warning raised when trying to use where
    criteria on an incompatible HDF5 file. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.IndexingError`](api/pandas.errors.IndexingError.html#pandas.errors.IndexingError
    "pandas.errors.IndexingError") | Exception is raised when trying to index and
    there is a mismatch in dimensions. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.InvalidColumnName`](api/pandas.errors.InvalidColumnName.html#pandas.errors.InvalidColumnName
    "pandas.errors.InvalidColumnName") | Warning raised by to_stata the column contains
    a non-valid stata name. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.InvalidComparison`](api/pandas.errors.InvalidComparison.html#pandas.errors.InvalidComparison
    "pandas.errors.InvalidComparison") | Exception is raised by _validate_comparison_value
    to indicate an invalid comparison. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.InvalidIndexError`](api/pandas.errors.InvalidIndexError.html#pandas.errors.InvalidIndexError
    "pandas.errors.InvalidIndexError") | Exception raised when attempting to use an
    invalid index key. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.InvalidVersion`](api/pandas.errors.InvalidVersion.html#pandas.errors.InvalidVersion
    "pandas.errors.InvalidVersion") | An invalid version was found, users should refer
    to PEP 440. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.IntCastingNaNError`](api/pandas.errors.IntCastingNaNError.html#pandas.errors.IntCastingNaNError
    "pandas.errors.IntCastingNaNError") | Exception raised when converting (`astype`)
    an array with NaN to an integer type. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.LossySetitemError`](api/pandas.errors.LossySetitemError.html#pandas.errors.LossySetitemError
    "pandas.errors.LossySetitemError") | Raised when trying to do a __setitem__ on
    an np.ndarray that is not lossless. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.MergeError`](api/pandas.errors.MergeError.html#pandas.errors.MergeError
    "pandas.errors.MergeError") | Exception raised when merging data. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.NoBufferPresent`](api/pandas.errors.NoBufferPresent.html#pandas.errors.NoBufferPresent
    "pandas.errors.NoBufferPresent") | Exception is raised in _get_data_buffer to
    signal that there is no requested buffer. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.NullFrequencyError`](api/pandas.errors.NullFrequencyError.html#pandas.errors.NullFrequencyError
    "pandas.errors.NullFrequencyError") | Exception raised when a `freq` cannot be
    null. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.NumbaUtilError`](api/pandas.errors.NumbaUtilError.html#pandas.errors.NumbaUtilError
    "pandas.errors.NumbaUtilError") | Error raised for unsupported Numba engine routines.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.NumExprClobberingError`](api/pandas.errors.NumExprClobberingError.html#pandas.errors.NumExprClobberingError
    "pandas.errors.NumExprClobberingError") | Exception raised when trying to use
    a built-in numexpr name as a variable name. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.OptionError`](api/pandas.errors.OptionError.html#pandas.errors.OptionError
    "pandas.errors.OptionError") | Exception raised for pandas.options. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.OutOfBoundsDatetime`](api/pandas.errors.OutOfBoundsDatetime.html#pandas.errors.OutOfBoundsDatetime
    "pandas.errors.OutOfBoundsDatetime") | Raised when the datetime is outside the
    range that can be represented. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.OutOfBoundsTimedelta`](api/pandas.errors.OutOfBoundsTimedelta.html#pandas.errors.OutOfBoundsTimedelta
    "pandas.errors.OutOfBoundsTimedelta") | Raised when encountering a timedelta value
    that cannot be represented. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.ParserError`](api/pandas.errors.ParserError.html#pandas.errors.ParserError
    "pandas.errors.ParserError") | Exception that is raised by an error encountered
    in parsing file contents. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.ParserWarning`](api/pandas.errors.ParserWarning.html#pandas.errors.ParserWarning
    "pandas.errors.ParserWarning") | Warning raised when reading a file that doesn''t
    use the default ''c'' parser. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.PerformanceWarning`](api/pandas.errors.PerformanceWarning.html#pandas.errors.PerformanceWarning
    "pandas.errors.PerformanceWarning") | Warning raised when there is a possible
    performance impact. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.PossibleDataLossError`](api/pandas.errors.PossibleDataLossError.html#pandas.errors.PossibleDataLossError
    "pandas.errors.PossibleDataLossError") | Exception raised when trying to open
    a HDFStore file when already opened. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.PossiblePrecisionLoss`](api/pandas.errors.PossiblePrecisionLoss.html#pandas.errors.PossiblePrecisionLoss
    "pandas.errors.PossiblePrecisionLoss") | Warning raised by to_stata on a column
    with a value outside or equal to int64. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.PyperclipException`](api/pandas.errors.PyperclipException.html#pandas.errors.PyperclipException
    "pandas.errors.PyperclipException") | Exception raised when clipboard functionality
    is unsupported. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.PyperclipWindowsException`](api/pandas.errors.PyperclipWindowsException.html#pandas.errors.PyperclipWindowsException
    "pandas.errors.PyperclipWindowsException")(message) | Exception raised when clipboard
    functionality is unsupported by Windows. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.SettingWithCopyError`](api/pandas.errors.SettingWithCopyError.html#pandas.errors.SettingWithCopyError
    "pandas.errors.SettingWithCopyError") | Exception raised when trying to set on
    a copied slice from a `DataFrame`. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.SettingWithCopyWarning`](api/pandas.errors.SettingWithCopyWarning.html#pandas.errors.SettingWithCopyWarning
    "pandas.errors.SettingWithCopyWarning") | Warning raised when trying to set on
    a copied slice from a `DataFrame`. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.SpecificationError`](api/pandas.errors.SpecificationError.html#pandas.errors.SpecificationError
    "pandas.errors.SpecificationError") | Exception raised by `agg` when the functions
    are ill-specified. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.UndefinedVariableError`](api/pandas.errors.UndefinedVariableError.html#pandas.errors.UndefinedVariableError
    "pandas.errors.UndefinedVariableError")(name[, is_local]) | Exception raised by
    `query` or `eval` when using an undefined variable name. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.UnsortedIndexError`](api/pandas.errors.UnsortedIndexError.html#pandas.errors.UnsortedIndexError
    "pandas.errors.UnsortedIndexError") | Error raised when slicing a MultiIndex which
    has not been lexsorted. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.UnsupportedFunctionCall`](api/pandas.errors.UnsupportedFunctionCall.html#pandas.errors.UnsupportedFunctionCall
    "pandas.errors.UnsupportedFunctionCall") | Exception raised when attempting to
    call a unsupported numpy function. |'
  prefs: []
  type: TYPE_TB
- en: '| [`errors.ValueLabelTypeMismatch`](api/pandas.errors.ValueLabelTypeMismatch.html#pandas.errors.ValueLabelTypeMismatch
    "pandas.errors.ValueLabelTypeMismatch") | Warning raised by to_stata on a category
    column that contains non-string values. |'
  prefs: []
  type: TYPE_TB
- en: Bug report function
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`show_versions`](api/pandas.show_versions.html#pandas.show_versions "pandas.show_versions")([as_json])
    | Provide useful information, important for bug reports. |'
  prefs: []
  type: TYPE_TB
- en: Test suite runner
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`test`](api/pandas.test.html#pandas.test "pandas.test")([extra_args, run_doctests])
    | Run the pandas test suite using pytest. |'
  prefs: []
  type: TYPE_TB
