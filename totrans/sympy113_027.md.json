["```py\n>>> from sympy import solve, cos\n>>> from sympy.abc import x\n>>> solve(cos(x) - x, x, dict=True)\nTraceback (most recent call last):\n  ...\nNotImplementedError: multiple generators [x, cos(x)]\nNo algorithms are implemented to solve equation -x + cos(x) \n```", "```py\n>>> from sympy import nsolve, cos\n>>> from sympy.abc import x\n>>> nsolve(cos(x) - x, x, 2)\n0.739085133215161 \n```", "```py\n>>> from sympy import solve\n>>> from sympy.abc import x\n>>> solutions = solve(x**5 - x - 1, x, dict=True)\n>>> solutions\n[{x: CRootOf(x**5 - x - 1, 0)}, {x: CRootOf(x**5 - x - 1, 1)}, {x: CRootOf(x**5 - x - 1, 2)}, {x: CRootOf(x**5 - x - 1, 3)}, {x: CRootOf(x**5 - x - 1, 4)}]\n>>> [solution[x].evalf(3) for solution in solutions]\n[1.17, -0.765 - 0.352*I, -0.765 + 0.352*I, 0.181 - 1.08*I, 0.181 + 1.08*I] \n```", "```py\n>>> from sympy import symbols, solve\n>>> x = symbols('x')\n>>> solutions = solve(x**4 + 10*x**2 + x + 1, x, dict=True)\n>>> solutions\n[{x: -sqrt(-20/3 + 56/(9*(1307/432 + sqrt(434607)*I/144)**(1/3)) + 2*(1307/432 + sqrt(434607)*I/144)**(1/3))/2 - sqrt(-40/3 - 2*(1307/432 + sqrt(434607)*I/144)**(1/3) + 2/sqrt(-20/3 + 56/(9*(1307/432 + sqrt(434607)*I/144)**(1/3)) + 2*(1307/432 + sqrt(434607)*I/144)**(1/3)) - 56/(9*(1307/432 + sqrt(434607)*I/144)**(1/3)))/2}, {x: sqrt(-20/3 + 56/(9*(1307/432 + sqrt(434607)*I/144)**(1/3)) + 2*(1307/432 + sqrt(434607)*I/144)**(1/3))/2 - sqrt(-40/3 - 2*(1307/432 + sqrt(434607)*I/144)**(1/3) - 2/sqrt(-20/3 + 56/(9*(1307/432 + sqrt(434607)*I/144)**(1/3)) + 2*(1307/432 + sqrt(434607)*I/144)**(1/3)) - 56/(9*(1307/432 + sqrt(434607)*I/144)**(1/3)))/2}, {x: sqrt(-40/3 - 2*(1307/432 + sqrt(434607)*I/144)**(1/3) - 2/sqrt(-20/3 + 56/(9*(1307/432 + sqrt(434607)*I/144)**(1/3)) + 2*(1307/432 + sqrt(434607)*I/144)**(1/3)) - 56/(9*(1307/432 + sqrt(434607)*I/144)**(1/3)))/2 + sqrt(-20/3 + 56/(9*(1307/432 + sqrt(434607)*I/144)**(1/3)) + 2*(1307/432 + sqrt(434607)*I/144)**(1/3))/2}, {x: sqrt(-40/3 - 2*(1307/432 + sqrt(434607)*I/144)**(1/3) + 2/sqrt(-20/3 + 56/(9*(1307/432 + sqrt(434607)*I/144)**(1/3)) + 2*(1307/432 + sqrt(434607)*I/144)**(1/3)) - 56/(9*(1307/432 + sqrt(434607)*I/144)**(1/3)))/2 - sqrt(-20/3 + 56/(9*(1307/432 + sqrt(434607)*I/144)**(1/3)) + 2*(1307/432 + sqrt(434607)*I/144)**(1/3))/2}]\n>>> for solution in solutions:\n...     solution[x].evalf()\n-0.0509758447494279 + 0.313552108895239*I\n0.0509758447494279 + 3.14751999969868*I\n0.0509758447494279 - 3.14751999969868*I\n-0.0509758447494279 - 0.313552108895239*I \n```", "```py\n>>> from sympy import pi, sqrt, exp, solve, evalf\n>>> shorter = solve(sqrt(2)*x - exp(pi), x, dict=True)\n>>> shorter\n[{x: sqrt(2)*exp(pi)/2}]\n>>> [solution[x].evalf(3) for solution in shorter]\n[16.4] \n```", "```py\n>>> from sympy import symbols, solve, pi\n>>> x = symbols('x')\n>>> solve(x**2 - pi, x, dict=True)\n[{x: -sqrt(pi)}, {x: sqrt(pi)}] \n```", "```py\n>>> from sympy import symbols, solve\n>>> from math import pi\n>>> x = symbols('x')\n>>> solve(x**2 - pi, x, dict=True)\n[{x: -1.77245385090552}, {x: 1.77245385090552}] \n```", "```py\n>>> from sympy import symbols, solve, sqrt\n>>> x = symbols('x')\n>>> eq = x**sqrt(2) - 2\n>>> solve(eq, x, dict=True)\n[{x: 2**(sqrt(2)/2)}] \n```", "```py\n>>> from sympy.abc import x, y\n>>> from sympy import solve\n>>> solve(x**2 - y, dict=True)\n[{y: x**2}] \n```", "```py\n>>> from sympy.abc import x, y\n>>> from sympy import solve\n>>> solve(x**2 - y, x, dict=True)\n[{x: -sqrt(y)}, {x: sqrt(y)}] \n```", "```py\n>>> from sympy import parse_expr, solve, solveset\n>>> from sympy.abc import x\n>>> expr = \"x^2 = y\"\n>>> parsed = parse_expr(expr, transformations=\"all\")\n>>> parsed\nEq(x**2, y)\n>>> solutions = solve(parsed, x, dict=True)\n>>> [solution[x] for solution in solutions]\n[-sqrt(y), sqrt(y)]\n>>> solveset(parsed, x)\n{-sqrt(y), sqrt(y)} \n```", "```py\n>>> from sympy import Symbol, sin, solve\n>>> x = Symbol(\"x\")\n>>> solve(sin(x)/x, x, dict=True) # 0 is excluded\n[{x: pi}]\n>>> solve(sin(x)/x, x, dict=True, check=False) # 0 is not excluded\n[{x: 0}, {x: pi}] \n```", "```py\n>>> from sympy import solve\n>>> from sympy.abc import x, y\n>>> expr = x**2 - (y**5 - 3*y**3 + y**2 - 3)\n>>> solve(expr, x, dict=True)\n[{x: -sqrt(y**5 - 3*y**3 + y**2 - 3)}, {x: sqrt(y**5 - 3*y**3 + y**2 - 3)}]\n>>> solve(expr, x, dict=True, simplify=False)\n[{x: -sqrt((y + 1)*(y**2 - 3)*(y**2 - y + 1))}, {x: sqrt((y + 1)*(y**2 - 3)*(y**2 - y + 1))}] \n```", "```py\n>>> from sympy import parse_expr, solve, solveset\n>>> from sympy.abc import x\n>>> expr = \"Eq(x^2, y)\"\n>>> parsed = parse_expr(expr, transformations=\"all\")\n>>> parsed\nEq(x**2, y) \n```"]