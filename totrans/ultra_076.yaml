- en: Multi-object Tracking Datasets Overview
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[`docs.ultralytics.com/datasets/track/`](https://docs.ultralytics.com/datasets/track/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Dataset Format (Coming Soon)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Multi-Object Detector doesn't need standalone training and directly supports
    pre-trained detection, segmentation or Pose models. Support for training trackers
    alone is coming soon
  prefs: []
  type: TYPE_NORMAL
- en: Usage
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Example
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: FAQ
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: How do I use Multi-Object Tracking with Ultralytics YOLO?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To use Multi-Object Tracking with Ultralytics YOLO, you can start by using
    the Python or CLI examples provided. Here is how you can get started:'
  prefs: []
  type: TYPE_NORMAL
- en: Example
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: These commands load the YOLOv8 model and use it for tracking objects in the
    given video source with specific confidence (`conf`) and Intersection over Union
    (`iou`) thresholds. For more details, refer to the track mode documentation.
  prefs: []
  type: TYPE_NORMAL
- en: What are the upcoming features for training trackers in Ultralytics?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Ultralytics is continuously enhancing its AI models. An upcoming feature will
    enable the training of standalone trackers. Until then, Multi-Object Detector
    leverages pre-trained detection, segmentation, or Pose models for tracking without
    requiring standalone training. Stay updated by following our [blog](https://www.ultralytics.com/blog)
    or checking the upcoming features.
  prefs: []
  type: TYPE_NORMAL
- en: Why should I use Ultralytics YOLO for multi-object tracking?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ultralytics YOLO is a state-of-the-art object detection model known for its
    real-time performance and high accuracy. Using YOLO for multi-object tracking
    provides several advantages:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Real-time tracking:** Achieve efficient and high-speed tracking ideal for
    dynamic environments.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Flexibility with pre-trained models:** No need to train from scratch; simply
    use pre-trained detection, segmentation, or Pose models.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ease of use:** Simple API integration with both Python and CLI makes setting
    up tracking pipelines straightforward.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Extensive documentation and community support:** Ultralytics provides comprehensive
    documentation and an active community forum to troubleshoot issues and enhance
    your tracking models.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For more details on setting up and using YOLO for tracking, visit our track
    usage guide.
  prefs: []
  type: TYPE_NORMAL
- en: Can I use custom datasets for multi-object tracking with Ultralytics YOLO?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Yes, you can use custom datasets for multi-object tracking with Ultralytics
    YOLO. While support for standalone tracker training is an upcoming feature, you
    can already use pre-trained models on your custom datasets. Prepare your datasets
    in the appropriate format compatible with YOLO and follow the documentation to
    integrate them.
  prefs: []
  type: TYPE_NORMAL
- en: How do I interpret the results from the Ultralytics YOLO tracking model?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'After running a tracking job with Ultralytics YOLO, the results include various
    data points such as tracked object IDs, their bounding boxes, and the confidence
    scores. Here''s a brief overview of how to interpret these results:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tracked IDs:** Each object is assigned a unique ID, which helps in tracking
    it across frames.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Bounding boxes:** These indicate the location of tracked objects within the
    frame.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Confidence scores:** These reflect the model''s confidence in detecting the
    tracked object.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For detailed guidance on interpreting and visualizing these results, refer to
    the results handling guide.
  prefs: []
  type: TYPE_NORMAL
