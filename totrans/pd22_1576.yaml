- en: pandas.core.window.expanding.Expanding.var
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.core.window.expanding.Expanding.var.html](https://pandas.pydata.org/docs/reference/api/pandas.core.window.expanding.Expanding.var.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Calculate the expanding variance.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**ddof**int, default 1'
  prefs: []
  type: TYPE_NORMAL
- en: Delta Degrees of Freedom. The divisor used in calculations is `N - ddof`, where
    `N` represents the number of elements.
  prefs: []
  type: TYPE_NORMAL
- en: '**numeric_only**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Include only float, int, boolean columns.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.5.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**engine**str, default None'
  prefs: []
  type: TYPE_NORMAL
- en: '`''cython''` : Runs the operation through C-extensions from cython.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`''numba''` : Runs the operation through JIT compiled code from numba.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`None` : Defaults to `''cython''` or globally setting `compute.use_numba`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New in version 1.4.0.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**engine_kwargs**dict, default None'
  prefs: []
  type: TYPE_NORMAL
- en: For `'cython'` engine, there are no accepted `engine_kwargs`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For `''numba''` engine, the engine can accept `nopython`, `nogil` and `parallel`
    dictionary keys. The values must either be `True` or `False`. The default `engine_kwargs`
    for the `''numba''` engine is `{''nopython'': True, ''nogil'': False, ''parallel'':
    False}`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New in version 1.4.0.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: Series or DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: Return type is the same as the original object with `np.float64` dtype.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.var`](https://numpy.org/doc/stable/reference/generated/numpy.var.html#numpy.var
    "(in NumPy v1.26)")'
  prefs: []
  type: TYPE_NORMAL
- en: Equivalent method for NumPy array.
  prefs: []
  type: TYPE_NORMAL
- en: '[`pandas.Series.expanding`](pandas.Series.expanding.html#pandas.Series.expanding
    "pandas.Series.expanding")'
  prefs: []
  type: TYPE_NORMAL
- en: Calling expanding with Series data.
  prefs: []
  type: TYPE_NORMAL
- en: '[`pandas.DataFrame.expanding`](pandas.DataFrame.expanding.html#pandas.DataFrame.expanding
    "pandas.DataFrame.expanding")'
  prefs: []
  type: TYPE_NORMAL
- en: Calling expanding with DataFrames.
  prefs: []
  type: TYPE_NORMAL
- en: '[`pandas.Series.var`](pandas.Series.var.html#pandas.Series.var "pandas.Series.var")'
  prefs: []
  type: TYPE_NORMAL
- en: Aggregating var for Series.
  prefs: []
  type: TYPE_NORMAL
- en: '[`pandas.DataFrame.var`](pandas.DataFrame.var.html#pandas.DataFrame.var "pandas.DataFrame.var")'
  prefs: []
  type: TYPE_NORMAL
- en: Aggregating var for DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The default `ddof` of 1 used in `Series.var()` is different than the default
    `ddof` of 0 in [`numpy.var()`](https://numpy.org/doc/stable/reference/generated/numpy.var.html#numpy.var
    "(in NumPy v1.26)").
  prefs: []
  type: TYPE_NORMAL
- en: A minimum of one period is required for the rolling calculation.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
