- en: scipy.special.seterr
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.seterr.html#scipy.special.seterr](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.seterr.html#scipy.special.seterr)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Set how special-function errors are handled.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**all**{‘ignore’, ‘warn’ ‘raise’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Set treatment for all type of special-function errors at once. The options
    are:'
  prefs: []
  type: TYPE_NORMAL
- en: ‘ignore’ Take no action when the error occurs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘warn’ Print a [`SpecialFunctionWarning`](scipy.special.SpecialFunctionWarning.html#scipy.special.SpecialFunctionWarning
    "scipy.special.SpecialFunctionWarning") when the error occurs (via the Python
    [`warnings`](https://docs.python.org/3/library/warnings.html#module-warnings "(in
    Python v3.12)") module)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘raise’ Raise a [`SpecialFunctionError`](scipy.special.SpecialFunctionError.html#scipy.special.SpecialFunctionError
    "scipy.special.SpecialFunctionError") when the error occurs.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The default is to not change the current behavior. If behaviors for additional
    categories of special-function errors are specified, then `all` is applied first,
    followed by the additional categories.
  prefs: []
  type: TYPE_NORMAL
- en: '**singular**{‘ignore’, ‘warn’, ‘raise’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Treatment for singularities.
  prefs: []
  type: TYPE_NORMAL
- en: '**underflow**{‘ignore’, ‘warn’, ‘raise’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Treatment for underflow.
  prefs: []
  type: TYPE_NORMAL
- en: '**overflow**{‘ignore’, ‘warn’, ‘raise’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Treatment for overflow.
  prefs: []
  type: TYPE_NORMAL
- en: '**slow**{‘ignore’, ‘warn’, ‘raise’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Treatment for slow convergence.
  prefs: []
  type: TYPE_NORMAL
- en: '**loss**{‘ignore’, ‘warn’, ‘raise’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Treatment for loss of accuracy.
  prefs: []
  type: TYPE_NORMAL
- en: '**no_result**{‘ignore’, ‘warn’, ‘raise’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Treatment for failing to find a result.
  prefs: []
  type: TYPE_NORMAL
- en: '**domain**{‘ignore’, ‘warn’, ‘raise’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Treatment for an invalid argument to a function.
  prefs: []
  type: TYPE_NORMAL
- en: '**arg**{‘ignore’, ‘warn’, ‘raise’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Treatment for an invalid parameter to a function.
  prefs: []
  type: TYPE_NORMAL
- en: '**other**{‘ignore’, ‘warn’, ‘raise’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Treatment for an unknown error.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**olderr**dict'
  prefs: []
  type: TYPE_NORMAL
- en: Dictionary containing the old settings.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`geterr`](scipy.special.geterr.html#scipy.special.geterr "scipy.special.geterr")'
  prefs: []
  type: TYPE_NORMAL
- en: get the current way of handling special-function errors
  prefs: []
  type: TYPE_NORMAL
- en: '[`errstate`](scipy.special.errstate.html#scipy.special.errstate "scipy.special.errstate")'
  prefs: []
  type: TYPE_NORMAL
- en: context manager for special-function error handling
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.seterr`](https://numpy.org/devdocs/reference/generated/numpy.seterr.html#numpy.seterr
    "(in NumPy v2.0.dev0)")'
  prefs: []
  type: TYPE_NORMAL
- en: similar numpy function for floating-point errors
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: We can also raise for every category except one.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
