- en: numpy.modf
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.modf.html](https://numpy.org/doc/1.26/reference/generated/numpy.modf.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return the fractional and integral parts of an array, element-wise.
  prefs: []
  type: TYPE_NORMAL
- en: The fractional and integral parts are negative if the given number is negative.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input array.
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, None, or tuple of ndarray and None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A location into which the result is stored. If provided, it must have a shape
    that the inputs broadcast to. If not provided or None, a freshly-allocated array
    is returned. A tuple (possible only as a keyword argument) must have length equal
    to the number of outputs.
  prefs: []
  type: TYPE_NORMAL
- en: '**where**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: This condition is broadcast over the input. At locations where the condition
    is True, the *out* array will be set to the ufunc result. Elsewhere, the *out*
    array will retain its original value. Note that if an uninitialized *out* array
    is created via the default `out=None`, locations within it where the condition
    is False will remain uninitialized.
  prefs: []
  type: TYPE_NORMAL
- en: '****kwargs**'
  prefs: []
  type: TYPE_NORMAL
- en: For other keyword-only arguments, see the [ufunc docs](../ufuncs.html#ufuncs-kwargs).
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**y1**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Fractional part of *x*. This is a scalar if *x* is a scalar.
  prefs: []
  type: TYPE_NORMAL
- en: '**y2**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Integral part of *x*. This is a scalar if *x* is a scalar.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`divmod`](numpy.divmod.html#numpy.divmod "numpy.divmod")'
  prefs: []
  type: TYPE_NORMAL
- en: '`divmod(x, 1)` is equivalent to `modf` with the return values switched, except
    it always has a positive remainder.'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: For integer input the return values are floats.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
