["```py\nscipy.optimize.linprog(c, A_ub=None, b_ub=None, A_eq=None, b_eq=None, bounds=None, method='highs', callback=None, options=None, x0=None, integrality=None)\n```", "```py\n>     c @ x \n>     ```", "```py\n>     A_ub @ x <= b_ub\n>     A_eq @ x == b_eq\n>     lb <= x <= ub \n>     ```", "```py\n>>> from scipy.optimize import linprog\n>>> c = [-1, 4]\n>>> A = [[-3, 1], [1, 2]]\n>>> b = [6, 4]\n>>> x0_bounds = (None, None)\n>>> x1_bounds = (-3, None)\n>>> res = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds])\n>>> res.fun\n-22.0\n>>> res.x\narray([10., -3.])\n>>> res.message\n'Optimization terminated successfully. (HiGHS Status 7: Optimal)' \n```", "```py\n>>> res.ineqlin\n residual: [ 3.900e+01  0.000e+00]\n marginals: [-0.000e+00 -1.000e+00] \n```", "```py\n>>> eps = 0.05\n>>> b[1] += eps\n>>> linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds]).fun\n-22.05 \n```", "```py\n>>> b = [6, 4]  # reset to original values\n>>> b[0] -= 39\n>>> linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds]).fun\n-22.0 \n```"]