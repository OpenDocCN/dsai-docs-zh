- en: scipy.linalg.qr_insert
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.qr_insert.html#scipy.linalg.qr_insert](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.qr_insert.html#scipy.linalg.qr_insert)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: QR update on row or column insertions
  prefs: []
  type: TYPE_NORMAL
- en: If `A = Q R` is the QR factorization of `A`, return the QR factorization of
    `A` where rows or columns have been inserted starting at row or column `k`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Q**(M, M) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Unitary/orthogonal matrix from the QR decomposition of A.
  prefs: []
  type: TYPE_NORMAL
- en: '**R**(M, N) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Upper triangular matrix from the QR decomposition of A.
  prefs: []
  type: TYPE_NORMAL
- en: '**u**(N,), (p, N), (M,), or (M, p) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Rows or columns to insert
  prefs: []
  type: TYPE_NORMAL
- en: '**k**int'
  prefs: []
  type: TYPE_NORMAL
- en: Index before which *u* is to be inserted.
  prefs: []
  type: TYPE_NORMAL
- en: '**which: {‘row’, ‘col’}, optional**'
  prefs: []
  type: TYPE_NORMAL
- en: Determines if rows or columns will be inserted, defaults to ‘row’
  prefs: []
  type: TYPE_NORMAL
- en: '**rcond**float'
  prefs: []
  type: TYPE_NORMAL
- en: Lower bound on the reciprocal condition number of `Q` augmented with `u/||u||`
    Only used when updating economic mode (thin, (M,N) (N,N)) decompositions. If None,
    machine precision is used. Defaults to None.
  prefs: []
  type: TYPE_NORMAL
- en: '**overwrite_qru**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True, consume Q, R, and u, if possible, while performing the update, otherwise
    make copies as necessary. Defaults to False.
  prefs: []
  type: TYPE_NORMAL
- en: '**check_finite**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to check that the input matrices contain only finite numbers. Disabling
    may give a performance gain, but may result in problems (crashes, non-termination)
    if the inputs do contain infinities or NaNs. Default is True.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Q1**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Updated unitary/orthogonal factor
  prefs: []
  type: TYPE_NORMAL
- en: '**R1**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Updated upper triangular factor
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: LinAlgError
  prefs: []
  type: TYPE_NORMAL
- en: If updating a (M,N) (N,N) factorization and the reciprocal condition number
    of Q augmented with u/||u|| is smaller than rcond.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`qr`](scipy.linalg.qr.html#scipy.linalg.qr "scipy.linalg.qr"), [`qr_multiply`](scipy.linalg.qr_multiply.html#scipy.linalg.qr_multiply
    "scipy.linalg.qr_multiply"), [`qr_delete`](scipy.linalg.qr_delete.html#scipy.linalg.qr_delete
    "scipy.linalg.qr_delete"), [`qr_update`](scipy.linalg.qr_update.html#scipy.linalg.qr_update
    "scipy.linalg.qr_update")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This routine does not guarantee that the diagonal entries of `R1` are positive.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.16.0.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1]'
  prefs: []
  type: TYPE_NORMAL
- en: Golub, G. H. & Van Loan, C. F. Matrix Computations, 3rd Ed. (Johns Hopkins University
    Press, 1996).
  prefs: []
  type: TYPE_NORMAL
- en: '[2]'
  prefs: []
  type: TYPE_NORMAL
- en: Daniel, J. W., Gragg, W. B., Kaufman, L. & Stewart, G. W. Reorthogonalization
    and stable algorithms for updating the Gram-Schmidt QR factorization. Math. Comput.
    30, 772-795 (1976).
  prefs: []
  type: TYPE_NORMAL
- en: '[3]'
  prefs: []
  type: TYPE_NORMAL
- en: 'Reichel, L. & Gragg, W. B. Algorithm 686: FORTRAN Subroutines for Updating
    the QR Decomposition. ACM Trans. Math. Softw. 16, 369-377 (1990).'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Given this QR decomposition, update q and r when 2 rows are inserted.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The update is equivalent, but faster than the following.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Check that we have equivalent results:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'And the updated Q is still unitary:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
