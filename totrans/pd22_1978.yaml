- en: Version 0.8.0 (June 29, 2012)
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 版本0.8.0（2012年6月29日）
- en: 原文：[https://pandas.pydata.org/docs/whatsnew/v0.8.0.html](https://pandas.pydata.org/docs/whatsnew/v0.8.0.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/whatsnew/v0.8.0.html](https://pandas.pydata.org/docs/whatsnew/v0.8.0.html)
- en: This is a major release from 0.7.3 and includes extensive work on the time series
    handling and processing infrastructure as well as a great deal of new functionality
    throughout the library. It includes over 700 commits from more than 20 distinct
    authors. Most pandas 0.7.3 and earlier users should not experience any issues
    upgrading, but due to the migration to the NumPy datetime64 dtype, there may be
    a number of bugs and incompatibilities lurking. Lingering incompatibilities will
    be fixed ASAP in a 0.8.1 release if necessary. See the [full release notes](index.html#release)
    or issue tracker on GitHub for a complete list.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这是从0.7.3到0.8.0的一次重大更新，包括对时间序列处理和处理基础设施的大量工作，以及库中许多新功能。它包含了来自20多位不同作者的700多次提交。大多数pandas
    0.7.3及更早版本的用户升级时不应遇到任何问题，但由于迁移到NumPy datetime64 dtype，可能存在一些潜在的错误和不兼容性。如果需要，0.8.1版本将尽快修复仍然存在的不兼容性。请参阅GitHub上的[完整发布说明](index.html#release)或问题跟踪器，获取完整列表。
- en: Support for non-unique indexes
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 支持非唯一索引
- en: All objects can now work with non-unique indexes. Data alignment / join operations
    work according to SQL join semantics (including, if application, index duplication
    in many-to-many joins)
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 所有对象现在都可以与非唯一索引一起工作。数据对齐/连接操作按照SQL连接语义进行工作（包括，如果应用，多对多连接中的索引重复）
- en: NumPy datetime64 dtype and 1.6 dependency
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: NumPy datetime64 dtype和1.6依赖
- en: Time series data are now represented using NumPy’s datetime64 dtype; thus, pandas
    0.8.0 now requires at least NumPy 1.6\. It has been tested and verified to work
    with the development version (1.7+) of NumPy as well which includes some significant
    user-facing API changes. NumPy 1.6 also has a number of bugs having to do with
    nanosecond resolution data, so I recommend that you steer clear of NumPy 1.6’s
    datetime64 API functions (though limited as they are) and only interact with this
    data using the interface that pandas provides.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 现在使用NumPy的datetime64 dtype表示时间序列数据；因此，pandas 0.8.0现在至少需要NumPy 1.6。它已经经过测试，并且已验证可与NumPy的开发版本（1.7+）一起使用，其中包括一些重要的面向用户的API更改。NumPy
    1.6还存在一些与纳秒分辨率数据有关的错误，因此我建议您避免使用NumPy 1.6的datetime64 API函数（尽管它们受限），并且只使用pandas提供的接口与此数据交互。
- en: See the end of the 0.8.0 section for a “porting” guide listing potential issues
    for users migrating legacy code bases from pandas 0.7 or earlier to 0.8.0.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅0.8.0版本结尾处的“迁移”指南，列出了将遗留代码库从pandas 0.7或更早版本迁移到0.8.0版本时可能遇到的问题。
- en: Bug fixes to the 0.7.x series for legacy NumPy < 1.6 users will be provided
    as they arise. There will be no more further development in 0.7.x beyond bug fixes.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 将为使用旧版NumPy < 1.6的遗留0.7.x系列提供错误修复，如出现。0.7.x系列将不会进行更多的开发，仅提供错误修复。
- en: Time Series changes and improvements
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 时间序列的更改和改进
- en: Note
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: With this release, legacy scikits.timeseries users should be able to port their
    code to use pandas.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 通过此版本，传统的scikits.timeseries用户应该能够将其代码移植为使用pandas。
- en: Note
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: See [documentation](../user_guide/timeseries.html#timeseries) for overview of
    pandas timeseries API.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅[文档](../user_guide/timeseries.html#timeseries)以获取pandas时间序列API的概述。
- en: New datetime64 representation **speeds up join operations and data alignment**,
    **reduces memory usage**, and improve serialization / deserialization performance
    significantly over datetime.datetime
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的datetime64表示**加速了连接操作和数据对齐**，**减少了内存使用**，并且大大提高了序列化/反序列化性能，比datetime.datetime要好得多。
- en: High performance and flexible **resample** method for converting from high-to-low
    and low-to-high frequency. Supports interpolation, user-defined aggregation functions,
    and control over how the intervals and result labeling are defined. A suite of
    high performance Cython/C-based resampling functions (including Open-High-Low-Close)
    have also been implemented.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高性能和灵活的**重新采样**方法，用于从高频到低频和从低频到高频的转换。支持插值，用户定义的聚合函数，并且可以控制间隔和结果标签的定义方式。还实现了一套高性能的基于Cython/C的重新采样函数（包括开-高-低-收）。
- en: Revamp of [frequency aliases](../user_guide/timeseries.html#timeseries-offset-aliases)
    and support for **frequency shortcuts** like ‘15min’, or ‘1h30min’
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[频率别名](../user_guide/timeseries.html#timeseries-offset-aliases)的更新，支持**频率快捷方式**如‘15min’或‘1h30min’。'
- en: New [DatetimeIndex class](../user_guide/timeseries.html#timeseries-datetimeindex)
    supports both fixed frequency and irregular time series. Replaces now deprecated
    DateRange class
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的[DatetimeIndex类](../user_guide/timeseries.html#timeseries-datetimeindex)支持固定频率和不规则时间序列。取代了现在已弃用的DateRange类
- en: New `PeriodIndex` and `Period` classes for representing [time spans](../user_guide/timeseries.html#timeseries-periods)
    and performing **calendar logic**, including the `12 fiscal quarterly frequencies
    <timeseries.quarterly>`. This is a partial port of, and a substantial enhancement
    to, elements of the scikits.timeseries code base. Support for conversion between
    PeriodIndex and DatetimeIndex
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的`PeriodIndex`和`Period`类用于表示[时间跨度](../user_guide/timeseries.html#timeseries-periods)和执行**日历逻辑**，包括`12个财政季度频率<timeseries.quarterly>`。这是对scikits.timeseries代码库的部分移植和实质性增强。支持在PeriodIndex和DatetimeIndex之间进行转换
- en: New Timestamp data type subclasses `datetime.datetime`, providing the same interface
    while enabling working with nanosecond-resolution data. Also provides [easy time
    zone conversions](../user_guide/timeseries.html#timeseries-timezone).
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的Timestamp数据类型子类`datetime.datetime`，提供相同的接口，同时支持与纳秒分辨率数据的工作。还提供[简单的时区转换](../user_guide/timeseries.html#timeseries-timezone)。
- en: Enhanced support for [time zones](../user_guide/timeseries.html#timeseries-timezone).
    Add `tz_convert` and `tz_localize` methods to TimeSeries and DataFrame. All timestamps
    are stored as UTC; Timestamps from DatetimeIndex objects with time zone set will
    be localized to local time. Time zone conversions are therefore essentially free.
    User needs to know very little about pytz library now; only time zone names as
    strings are required. Time zone-aware timestamps are equal if and only if their
    UTC timestamps match. Operations between time zone-aware time series with different
    time zones will result in a UTC-indexed time series.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增强对[时区](../user_guide/timeseries.html#timeseries-timezone)的支持。为TimeSeries和DataFrame添加了`tz_convert`和`tz_localize`方法。所有时间戳都以UTC存储；具有设置时区的DatetimeIndex对象的时间戳将被本地化为本地时间。因此，时区转换基本上是免费的。用户现在只需要了解很少关于pytz库；只需要时区名称作为字符串。时区感知时间戳仅在它们的UTC时间戳匹配时才相等。具有不同时区的时区感知时间序列之间的操作将导致以UTC为索引的时间序列。
- en: 'Time series **string indexing conveniences** / shortcuts: slice years, year
    and month, and index values with strings'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列**字符串索引便利**/快捷方式：按年份、年份和月份切片，并使用字符串索引值
- en: Enhanced time series **plotting**; adaptation of scikits.timeseries matplotlib-based
    plotting code
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增强的时间序列**绘图**；适应scikits.timeseries基于matplotlib的绘图代码
- en: New `date_range`, `bdate_range`, and `period_range` [factory functions](../user_guide/timeseries.html#timeseries-daterange)
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的`date_range`、`bdate_range`和`period_range`[工厂函数](../user_guide/timeseries.html#timeseries-daterange)
- en: Robust **frequency inference** function `infer_freq` and `inferred_freq` property
    of DatetimeIndex, with option to infer frequency on construction of DatetimeIndex
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 强大的**频率推断**函数`infer_freq`和`inferred_freq`属性，可在DatetimeIndex构造时推断频率
- en: to_datetime function efficiently **parses array of strings** to DatetimeIndex.
    DatetimeIndex will parse array or list of strings to datetime64
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: to_datetime函数高效地将字符串数组解析为DatetimeIndex。DatetimeIndex将解析字符串数组或列表为datetime64
- en: '**Optimized** support for datetime64-dtype data in Series and DataFrame columns'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Series和DataFrame列中对datetime64-dtype数据的**优化**支持
- en: New NaT (Not-a-Time) type to represent **NA** in timestamp arrays
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的NaT（Not-a-Time）类型用于表示时间戳数组中的**NA**
- en: Optimize Series.asof for looking up **“as of” values** for arrays of timestamps
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优化Series.asof以查找时间戳数组的**“截至”值**
- en: Milli, Micro, Nano date offset objects
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 毫秒、微秒、纳秒日期偏移对象
- en: Can index time series with datetime.time objects to select all data at particular
    **time of day** (`TimeSeries.at_time`) or **between two times** (`TimeSeries.between_time`)
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以使用datetime.time对象索引时间序列，以选择特定**一天中的时间**的所有数据（`TimeSeries.at_time`）或**两个时间之间**的数据（`TimeSeries.between_time`）
- en: Add [tshift](../user_guide/timeseries.html#timeseries-advanced-datetime) method
    for leading/lagging using the frequency (if any) of the index, as opposed to a
    naive lead/lag using shift
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加[tshift](../user_guide/timeseries.html#timeseries-advanced-datetime)方法，用于使用索引的频率（如果有）进行领先/滞后，而不是使用shift进行简单的领先/滞后
- en: Other new features
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他新功能
- en: New [cut](../user_guide/reshaping.html#reshaping-tile-cut) and `qcut` functions
    (like R’s cut function) for computing a categorical variable from a continuous
    variable by binning values either into value-based (`cut`) or quantile-based (`qcut`)
    bins
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的[cut](../user_guide/reshaping.html#reshaping-tile-cut)和`qcut`函数（类似于R的cut函数），用于通过将值分成基于值的（`cut`）或基于分位数的（`qcut`）箱来从连续变量计算分类变量
- en: Rename `Factor` to `Categorical` and add a number of usability features
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 `Factor` 重命名为 `Categorical` 并添加一些可用性功能
- en: Add [limit](../user_guide/missing_data.html#missing-data-fillna-limit) argument
    to fillna/reindex
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为 fillna/reindex 添加 [limit](../user_guide/missing_data.html#missing-data-fillna-limit)
    参数
- en: More flexible multiple function application in GroupBy, and can pass list (name,
    function) tuples to get result in particular order with given names
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 GroupBy 中更灵活地应用多个函数，并且可以传递列表（名称、函数）元组以按特定顺序获取结果并给定名称
- en: Add flexible [replace](../user_guide/missing_data.html#missing-data-replace)
    method for efficiently substituting values
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为高效替换添加灵活的 [replace](../user_guide/missing_data.html#missing-data-replace) 方法
- en: Enhanced [read_csv/read_table](../user_guide/io.html#io-parse-dates) for reading
    time series data and converting multiple columns to dates
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了 [read_csv/read_table](../user_guide/io.html#io-parse-dates) 用于读取时间序列数据和将多列转换为日期的功能
- en: 'Add [comments](../user_guide/io.html#io-comments) option to parser functions:
    read_csv, etc.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为解析器函数（read_csv 等）添加 [comments](../user_guide/io.html#io-comments) 选项。
- en: Add [dayfirst](../user_guide/io.html#io-dayfirst) option to parser functions
    for parsing international DD/MM/YYYY dates
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为解析器函数添加 [dayfirst](../user_guide/io.html#io-dayfirst) 选项，以解析国际 DD/MM/YYYY 日期
- en: Allow the user to specify the CSV reader [dialect](../user_guide/io.html#io-dialect)
    to control quoting etc.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许用户指定 CSV 读取器的 [方言](../user_guide/io.html#io-dialect) 以控制引号等。
- en: Handling [thousands](../user_guide/io.html#io-thousands) separators in read_csv
    to improve integer parsing.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理 [千位分隔符](../user_guide/io.html#io-thousands) 在 read_csv 中以改善整数解析。
- en: Enable unstacking of multiple levels in one shot. Alleviate `pivot_table` bugs
    (empty columns being introduced)
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用一次性取消多个级别的 unstacking。缓解 `pivot_table` 中的错误（引入空列）
- en: Move to klib-based hash tables for indexing; better performance and less memory
    usage than Python’s dict
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移至基于 klib 的哈希表进行索引；比 Python 的 dict 性能更好，内存使用更少
- en: Add first, last, min, max, and prod optimized GroupBy functions
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了优化的 GroupBy 函数 first、last、min、max 和 prod
- en: New [ordered_merge](../user_guide/merging.html#merging-merge-ordered) function
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的 [ordered_merge](../user_guide/merging.html#merging-merge-ordered) 函数
- en: Add flexible [comparison](../user_guide/basics.html#basics-binop) instance methods
    eq, ne, lt, gt, etc. to DataFrame, Series
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为 DataFrame、Series 添加灵活的 [比较](../user_guide/basics.html#basics-binop) 实例方法 eq、ne、lt、gt
    等。
- en: Improve [scatter_matrix](../user_guide/visualization.html#visualization-scatter-matrix)
    plotting function and add histogram or kernel density estimates to diagonal
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进 [scatter_matrix](../user_guide/visualization.html#visualization-scatter-matrix)
    绘图函数，并在对角线上添加直方图或核密度估计
- en: Add [‘kde’](../user_guide/visualization.html#visualization-kde) plot option
    for density plots
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为密度图添加 [‘kde’](../user_guide/visualization.html#visualization-kde) 绘图选项
- en: Support for converting DataFrame to R data.frame through rpy2
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持通过 rpy2 将 DataFrame 转换为 R data.frame
- en: Improved support for complex numbers in Series and DataFrame
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了 Series 和 DataFrame 中复数的支持
- en: Add `pct_change` method to all data structures
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对所有数据结构添加 `pct_change` 方法
- en: Add max_colwidth configuration option for DataFrame console output
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为 DataFrame 控制台输出添加 max_colwidth 配置选项
- en: '[Interpolate](../user_guide/missing_data.html#missing-data-interpolate) Series
    values using index values'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用索引值对 Series 值进行 [插值](../user_guide/missing_data.html#missing-data-interpolate)
- en: Can select multiple columns from GroupBy
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以从 GroupBy 中选择多列
- en: Add [update](../user_guide/merging.html#merging-combine-first-update) methods
    to Series/DataFrame for updating values in place
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为 Series/DataFrame 添加 [update](../user_guide/merging.html#merging-combine-first-update)
    方法以原地更新值
- en: Add `any` and `all` method to DataFrame
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为 DataFrame 添加 `any` 和 `all` 方法
- en: New plotting methods
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 新的绘图方法
- en: '[PRE0]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '`Series.plot` now supports a `secondary_y` option:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series.plot` 现在支持 `secondary_y` 选项：'
- en: '[PRE1]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Vytautas Jancauskas, the 2012 GSOC participant, has added many new plot types.
    For example, `''kde''` is a new option:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 2012 年 GSOC 参与者 Vytautas Jancauskas 添加了许多新的绘图类型。例如，`'kde'` 是一个新选项：
- en: '[PRE2]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: See [the plotting page](../user_guide/visualization.html#visualization-other)
    for much more.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 查看 [绘图页面](../user_guide/visualization.html#visualization-other) 了解更多信息。
- en: Other API changes
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他 API 更改
- en: Deprecation of `offset`, `time_rule`, and `timeRule` arguments names in time
    series functions. Warnings will be printed until pandas 0.9 or 1.0.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在时间序列函数中废弃 `offset`、`time_rule` 和 `timeRule` 参数名称。将在 pandas 0.9 或 1.0 之前打印警告。
- en: Potential porting issues for pandas <= 0.7.3 users
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对于 pandas <= 0.7.3 用户可能出现的移植问题
- en: 'The major change that may affect you in pandas 0.8.0 is that time series indexes
    use NumPy’s `datetime64` data type instead of `dtype=object` arrays of Python’s
    built-in `datetime.datetime` objects. `DateRange` has been replaced by `DatetimeIndex`
    but otherwise behaved identically. But, if you have code that converts `DateRange`
    or `Index` objects that used to contain `datetime.datetime` values to plain NumPy
    arrays, you may have bugs lurking with code using scalar values because you are
    handing control over to NumPy:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在 pandas 0.8.0 中可能会影响你的主要变化是时间序列索引使用了 NumPy 的 `datetime64` 数据类型，而不是 Python 内置的
    `datetime.datetime` 对象的 `dtype=object` 数组。`DateRange` 已被 `DatetimeIndex` 取代，但行为上基本相同。但是，如果你的代码将以前包含
    `datetime.datetime` 值的 `DateRange` 或 `Index` 对象转换为普通的 NumPy 数组，那么使用标量值的代���可能存在潜在的错误，因为你正在将控制权交给
    NumPy：
- en: '[PRE3]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: pandas’s `Timestamp` object is a subclass of `datetime.datetime` that has nanosecond
    support (the `nanosecond` field store the nanosecond value between 0 and 999).
    It should substitute directly into any code that used `datetime.datetime` values
    before. Thus, I recommend not casting `DatetimeIndex` to regular NumPy arrays.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 的 `Timestamp` 对象是 `datetime.datetime` 的子类，支持纳秒（`nanosecond` 字段存储 0 到
    999 之间的纳秒值）。它应该直接替换任何之前使用 `datetime.datetime` 值的代码。因此，我建议不要将 `DatetimeIndex` 转换为常规的
    NumPy 数组。
- en: 'If you have code that requires an array of `datetime.datetime` objects, you
    have a couple of options. First, the `astype(object)` method of `DatetimeIndex`
    produces an array of `Timestamp` objects:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的代码需要一个 `datetime.datetime` 对象数组，你有几个选项。首先，`DatetimeIndex` 的 `astype(object)`
    方法会产生一个 `Timestamp` 对象数组：
- en: '[PRE4]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'To get an array of proper `datetime.datetime` objects, use the `to_pydatetime`
    method:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 要获得正确的 `datetime.datetime` 对象数组，请使用 `to_pydatetime` 方法：
- en: '[PRE5]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: matplotlib knows how to handle `datetime.datetime` but not Timestamp objects.
    While I recommend that you plot time series using `TimeSeries.plot`, you can either
    use `to_pydatetime` or register a converter for the Timestamp type. See [matplotlib
    documentation](http://matplotlib.org/api/units_api.html) for more on this.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: matplotlib 知道如何处理 `datetime.datetime`，但不知道如何处理 Timestamp 对象。虽然我建议你使用 `TimeSeries.plot`
    绘制时间序列，但你可以使用 `to_pydatetime` 或为 Timestamp 类型注册一个转换器。有关更多信息，请查看 [matplotlib 文档](http://matplotlib.org/api/units_api.html)。
- en: Warning
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: There are bugs in the user-facing API with the nanosecond datetime64 unit in
    NumPy 1.6\. In particular, the string version of the array shows garbage values,
    and conversion to `dtype=object` is similarly broken.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在 NumPy 1.6 中，用户界面 API 中存在 nanosecond datetime64 单元的错误。特别是，数组的字符串版本显示垃圾值，并且转换为
    `dtype=object` 也同样存在问题。
- en: '[PRE6]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**Trust me: don’t panic**. If you are using NumPy 1.6 and restrict your interaction
    with `datetime64` values to pandas’s API you will be just fine. There is nothing
    wrong with the data-type (a 64-bit integer internally); all of the important data
    processing happens in pandas and is heavily tested. I strongly recommend that
    you **do not work directly with datetime64 arrays in NumPy 1.6** and only use
    the pandas API.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**相信我：不要惊慌**。如果你使用 NumPy 1.6 并且将与 `datetime64` 值的交互限制在 pandas 的 API 中，那么一切都会很好。数据类型没有问题（内部是一个
    64 位整数）；所有重要的数据处理都在 pandas 中进行，并经过了严格测试。我强烈建议你**不要直接在 NumPy 1.6 中使用 datetime64
    数组**，只使用 pandas API。'
- en: '**Support for non-unique indexes**: In the latter case, you may have code inside
    a `try:... catch:` block that failed due to the index not being unique. In many
    cases it will no longer fail (some method like `append` still check for uniqueness
    unless disabled). However, all is not lost: you can inspect `index.is_unique`
    and raise an exception explicitly if it is `False` or go to a different code branch.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**支持非唯一索引**：在后一种情况下，你可能有代码位于 `try:... catch:` 块中，由于索引不唯一而失败。在许多情况下，它将不再失败（一些方法如
    `append` 仍然检查唯一性，除非禁用）。但是，一切并非绝望：你可以检查 `index.is_unique`，如果为 `False` 则显式引发异常，或者转到不同的代码分支。'
- en: '## Contributors'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '## 贡献者'
- en: A total of 27 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 总共有 27 人为这个版本贡献了补丁。名字旁边带有“+”符号的人是第一次贡献补丁的。
- en: Adam Klein
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Adam Klein
- en: Chang She
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chang She
- en: David Zaslavsky +
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: David Zaslavsky +
- en: Eric Chlebek +
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eric Chlebek +
- en: Jacques Kvam
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jacques Kvam
- en: Kamil Kisiel
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kamil Kisiel
- en: Kelsey Jordahl +
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kelsey Jordahl +
- en: Kieran O’Mahony +
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kieran O’Mahony +
- en: Lorenzo Bolla +
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lorenzo Bolla +
- en: Luca Beltrame
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Luca Beltrame
- en: Marc Abramowitz +
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Marc Abramowitz +
- en: Mark Wiebe +
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mark Wiebe +
- en: Paddy Mullen +
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Paddy Mullen +
- en: Peng Yu +
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Peng Yu +
- en: Roy Hyunjin Han +
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Roy Hyunjin Han +
- en: RuiDC +
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RuiDC +
- en: Senthil Palanisami +
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Senthil Palanisami +
- en: Skipper Seabold
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Skipper Seabold
- en: Stefan van der Walt +
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Stefan van der Walt +
- en: Takafumi Arakaki +
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Takafumi Arakaki +
- en: Thomas Kluyver
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Thomas Kluyver
- en: Vytautas Jancauskas +
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vytautas Jancauskas +
- en: Wes McKinney
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wes McKinney
- en: Wouter Overmeire
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wouter Overmeire
- en: Yaroslav Halchenko
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yaroslav Halchenko
- en: thuske +
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: thuske +
- en: timmie +
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: timmie +
- en: Support for non-unique indexes
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 支持非唯一索引
- en: All objects can now work with non-unique indexes. Data alignment / join operations
    work according to SQL join semantics (including, if application, index duplication
    in many-to-many joins)
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 所有对象现在都可以使用非唯一索引。数据对齐/连接操作按照SQL连接语义进行（包括，在适用的情况下，在多对多连接中复制索引）
- en: NumPy datetime64 dtype and 1.6 dependency
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: NumPy datetime64 dtype 和 1.6 依赖性
- en: Time series data are now represented using NumPy’s datetime64 dtype; thus, pandas
    0.8.0 now requires at least NumPy 1.6\. It has been tested and verified to work
    with the development version (1.7+) of NumPy as well which includes some significant
    user-facing API changes. NumPy 1.6 also has a number of bugs having to do with
    nanosecond resolution data, so I recommend that you steer clear of NumPy 1.6’s
    datetime64 API functions (though limited as they are) and only interact with this
    data using the interface that pandas provides.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列数据现在使用 NumPy 的 datetime64 dtype 表示；因此，pandas 0.8.0 现在至少需要 NumPy 1.6\. 它已经被测试并验证可以与
    NumPy 的开发版本（1.7+）一起工作，该版本包括一些重要的用户界面 API 更改。NumPy 1.6 也有一些关于纳秒分辨率数据的错误，所以我建议你避免使用
    NumPy 1.6 的 datetime64 API 函数（尽管它们是有限的），只使用 pandas 提供的接口与此数据交互。
- en: See the end of the 0.8.0 section for a “porting” guide listing potential issues
    for users migrating legacy code bases from pandas 0.7 or earlier to 0.8.0.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅 0.8.0 版本部分末尾的“移植”指南，其中列出了用户从 pandas 0.7 或更早版本迁移传统代码库到 0.8.0 可能遇到的问题。
- en: Bug fixes to the 0.7.x series for legacy NumPy < 1.6 users will be provided
    as they arise. There will be no more further development in 0.7.x beyond bug fixes.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 对于传统的 NumPy < 1.6 用户的 0.7.x 系列的错误修复将随着出现而提供。除了错误修复之外，不会再对 0.7.x 进行更多的开发。
- en: Time Series changes and improvements
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 时间序列变化和改进
- en: Note
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: With this release, legacy scikits.timeseries users should be able to port their
    code to use pandas.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 通过此版本发布，传统的 scikits.timeseries 用户应该能够将他们的代码转换为使用 pandas。
- en: Note
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: See [documentation](../user_guide/timeseries.html#timeseries) for overview of
    pandas timeseries API.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅[文档](../user_guide/timeseries.html#timeseries)以获取 pandas 时间序列 API 概述。
- en: New datetime64 representation **speeds up join operations and data alignment**,
    **reduces memory usage**, and improve serialization / deserialization performance
    significantly over datetime.datetime
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的 datetime64 表示**加速连接操作和数据对齐**，**减少内存使用**，并显著提高序列化/反序列化性能，优于 datetime.datetime
- en: High performance and flexible **resample** method for converting from high-to-low
    and low-to-high frequency. Supports interpolation, user-defined aggregation functions,
    and control over how the intervals and result labeling are defined. A suite of
    high performance Cython/C-based resampling functions (including Open-High-Low-Close)
    have also been implemented.
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高性能和灵活的**重新采样**方法，用于从高到低和低到高频率的转换。支持插值，用户定义的聚合函数，并控制定义间隔和结果标签的方式。还实现了一套高性能的
    Cython/C-based 重新采样函数（包括 Open-High-Low-Close）。
- en: Revamp of [frequency aliases](../user_guide/timeseries.html#timeseries-offset-aliases)
    and support for **frequency shortcuts** like ‘15min’, or ‘1h30min’
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对[频率别名](../user_guide/timeseries.html#timeseries-offset-aliases)进行了整顿，并支持**频率快捷方式**，如
    ‘15min’ 或 ‘1h30min’
- en: New [DatetimeIndex class](../user_guide/timeseries.html#timeseries-datetimeindex)
    supports both fixed frequency and irregular time series. Replaces now deprecated
    DateRange class
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的[DatetimeIndex 类](../user_guide/timeseries.html#timeseries-datetimeindex)支持固定频率和不规则时间序列。取代了现在已弃用的
    DateRange 类
- en: New `PeriodIndex` and `Period` classes for representing [time spans](../user_guide/timeseries.html#timeseries-periods)
    and performing **calendar logic**, including the `12 fiscal quarterly frequencies
    <timeseries.quarterly>`. This is a partial port of, and a substantial enhancement
    to, elements of the scikits.timeseries code base. Support for conversion between
    PeriodIndex and DatetimeIndex
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的 `PeriodIndex` 和 `Period` 类用于表示[时间跨度](../user_guide/timeseries.html#timeseries-periods)并执行**日历逻辑**，包括
    `12 财政季度频率 <timeseries.quarterly>`。这是对 scikits.timeseries 代码库的部分移植，也是对其进行了实质性增强。支持在
    PeriodIndex 和 DatetimeIndex 之间进行转换
- en: New Timestamp data type subclasses `datetime.datetime`, providing the same interface
    while enabling working with nanosecond-resolution data. Also provides [easy time
    zone conversions](../user_guide/timeseries.html#timeseries-timezone).
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的 Timestamp 数据类型子类 `datetime.datetime`，提供相同的接口同时能够处理纳秒分辨率数据。还提供了[简单的时区转换](../user_guide/timeseries.html#timeseries-timezone)。
- en: Enhanced support for [time zones](../user_guide/timeseries.html#timeseries-timezone).
    Add `tz_convert` and `tz_localize` methods to TimeSeries and DataFrame. All timestamps
    are stored as UTC; Timestamps from DatetimeIndex objects with time zone set will
    be localized to local time. Time zone conversions are therefore essentially free.
    User needs to know very little about pytz library now; only time zone names as
    strings are required. Time zone-aware timestamps are equal if and only if their
    UTC timestamps match. Operations between time zone-aware time series with different
    time zones will result in a UTC-indexed time series.
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增强了对[时区](../user_guide/timeseries.html#timeseries-timezone)的支持。为 TimeSeries
    和 DataFrame 添加了 `tz_convert` 和 `tz_localize` 方法。所有时间戳都以 UTC 存储；具有设置时区的 DatetimeIndex
    对象的时间戳将被本地化为本地时间。因此，时区转换基本上是免费的。现在用户几乎不需要了解 pytz 库；只需要时间区域名称作为字符串即可。时区感知时间戳仅当它们的
    UTC 时间戳匹配时才相等。具有不同时区的时区感知时间序列之间的操作将导致 UTC 索引的时间序列。
- en: 'Time series **string indexing conveniences** / shortcuts: slice years, year
    and month, and index values with strings'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列**字符串索引便利功能**/快捷方式：切片年份、年份和月份，并使用字符串索引值。
- en: Enhanced time series **plotting**; adaptation of scikits.timeseries matplotlib-based
    plotting code
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加强了时间序列的**绘图**；改编自 scikits.timeseries 基于 matplotlib 的绘图代码。
- en: New `date_range`, `bdate_range`, and `period_range` [factory functions](../user_guide/timeseries.html#timeseries-daterange)
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新增了 `date_range`、`bdate_range` 和 `period_range` [工厂函数](../user_guide/timeseries.html#timeseries-daterange)。
- en: Robust **frequency inference** function `infer_freq` and `inferred_freq` property
    of DatetimeIndex, with option to infer frequency on construction of DatetimeIndex
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 强大的**频率推断**函数 `infer_freq` 和 DatetimeIndex 的 `inferred_freq` 属性，可以在构建 DatetimeIndex
    时推断频率。
- en: to_datetime function efficiently **parses array of strings** to DatetimeIndex.
    DatetimeIndex will parse array or list of strings to datetime64
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`to_datetime` 函数高效地解析字符串数组为 DatetimeIndex。DatetimeIndex 将数组或字符串列表解析为 datetime64。'
- en: '**Optimized** support for datetime64-dtype data in Series and DataFrame columns'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**优化**了对 Series 和 DataFrame 列中的 datetime64-dtype 数据的支持。'
- en: New NaT (Not-a-Time) type to represent **NA** in timestamp arrays
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新增了 NaT（Not-a-Time）类型，用于在时间戳数组中表示**NA**。
- en: Optimize Series.asof for looking up **“as of” values** for arrays of timestamps
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优化了 Series.asof 以查找数组时间戳的**“截止”值**。
- en: Milli, Micro, Nano date offset objects
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 毫秒、微秒、纳秒日期偏移对象
- en: Can index time series with datetime.time objects to select all data at particular
    **time of day** (`TimeSeries.at_time`) or **between two times** (`TimeSeries.between_time`)
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以使用 datetime.time 对象索引时间序列以选择特定**一天中的时间**（`TimeSeries.at_time`）或**两个时间之间**的数据（`TimeSeries.between_time`）。
- en: Add [tshift](../user_guide/timeseries.html#timeseries-advanced-datetime) method
    for leading/lagging using the frequency (if any) of the index, as opposed to a
    naive lead/lag using shift
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了使用索引的频率（如果有）进行领先/滞后的 [tshift](../user_guide/timeseries.html#timeseries-advanced-datetime)
    方法，而不是使用 shift 进行朴素的领先/滞后。
- en: Other new features
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他新功能
- en: New [cut](../user_guide/reshaping.html#reshaping-tile-cut) and `qcut` functions
    (like R’s cut function) for computing a categorical variable from a continuous
    variable by binning values either into value-based (`cut`) or quantile-based (`qcut`)
    bins
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新增了 [cut](../user_guide/reshaping.html#reshaping-tile-cut) 和 `qcut` 函数（类似于 R
    的 cut 函数），用于通过将值分箱到基于值的 (`cut`) 或基于分位数的 (`qcut`) 箱中计算连续变量的分类变量。
- en: Rename `Factor` to `Categorical` and add a number of usability features
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 `Factor` 重命名为 `Categorical` 并添加了一些可用性功能
- en: Add [limit](../user_guide/missing_data.html#missing-data-fillna-limit) argument
    to fillna/reindex
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为 fillna/reindex 添加了 [limit](../user_guide/missing_data.html#missing-data-fillna-limit)
    参数。
- en: More flexible multiple function application in GroupBy, and can pass list (name,
    function) tuples to get result in particular order with given names
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 GroupBy 中进行更灵活的多函数应用，并且可以传递列表（名称，函数）元组以按特定顺序和给定名称获取结果
- en: Add flexible [replace](../user_guide/missing_data.html#missing-data-replace)
    method for efficiently substituting values
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了灵活的[替换](../user_guide/missing_data.html#missing-data-replace)方法，用于高效地替换值
- en: Enhanced [read_csv/read_table](../user_guide/io.html#io-parse-dates) for reading
    time series data and converting multiple columns to dates
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加强了 [read_csv/read_table](../user_guide/io.html#io-parse-dates) 以读取时间序列数据并将多列转换为日期的功能。
- en: 'Add [comments](../user_guide/io.html#io-comments) option to parser functions:
    read_csv, etc.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为解析函数添加了 [comments](../user_guide/io.html#io-comments) 选项：read_csv 等。
- en: Add [dayfirst](../user_guide/io.html#io-dayfirst) option to parser functions
    for parsing international DD/MM/YYYY dates
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为解析国际 DD/MM/YYYY 日期的解析函数添加了 [dayfirst](../user_guide/io.html#io-dayfirst) 选项。
- en: Allow the user to specify the CSV reader [dialect](../user_guide/io.html#io-dialect)
    to control quoting etc.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许用户指定CSV阅读器的[方言](../user_guide/io.html#io-dialect)以控制引号等。
- en: Handling [thousands](../user_guide/io.html#io-thousands) separators in read_csv
    to improve integer parsing.
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理read_csv中的千位分隔符以改善整数解析。
- en: Enable unstacking of multiple levels in one shot. Alleviate `pivot_table` bugs
    (empty columns being introduced)
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一次性解除多个级别的unstacking。减轻`pivot_table`的错误（引入空列）
- en: Move to klib-based hash tables for indexing; better performance and less memory
    usage than Python’s dict
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用基于klib的哈希表进行索引；性能更好，内存使用更少，比Python的dict更好
- en: Add first, last, min, max, and prod optimized GroupBy functions
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了优化的GroupBy函数：first、last、min、max和prod
- en: New [ordered_merge](../user_guide/merging.html#merging-merge-ordered) function
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的[ordered_merge](../user_guide/merging.html#merging-merge-ordered)函数
- en: Add flexible [comparison](../user_guide/basics.html#basics-binop) instance methods
    eq, ne, lt, gt, etc. to DataFrame, Series
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为DataFrame、Series添加灵活的[比较](../user_guide/basics.html#basics-binop)实例方法eq、ne、lt、gt等。
- en: Improve [scatter_matrix](../user_guide/visualization.html#visualization-scatter-matrix)
    plotting function and add histogram or kernel density estimates to diagonal
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进[scatter_matrix](../user_guide/visualization.html#visualization-scatter-matrix)绘图函数，并在对角线上添加直方图或核密度估计
- en: Add [‘kde’](../user_guide/visualization.html#visualization-kde) plot option
    for density plots
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为密度图添加[‘kde’](../user_guide/visualization.html#visualization-kde)绘图选项
- en: Support for converting DataFrame to R data.frame through rpy2
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过rpy2支持将DataFrame转换为R data.frame
- en: Improved support for complex numbers in Series and DataFrame
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Series和DataFrame中改进对复数的支持
- en: Add `pct_change` method to all data structures
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为所有数据结构添加`pct_change`方法
- en: Add max_colwidth configuration option for DataFrame console output
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为DataFrame控制台输出添加max_colwidth配置选项
- en: '[Interpolate](../user_guide/missing_data.html#missing-data-interpolate) Series
    values using index values'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用索引值对Series值进行插值
- en: Can select multiple columns from GroupBy
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以从GroupBy中选择多列
- en: Add [update](../user_guide/merging.html#merging-combine-first-update) methods
    to Series/DataFrame for updating values in place
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为Series/DataFrame添加[update](../user_guide/merging.html#merging-combine-first-update)方法以就地更新值
- en: Add `any` and `all` method to DataFrame
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为DataFrame添加`any`和`all`方法
- en: New plotting methods
  id: totrans-165
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 新的绘图方法
- en: '[PRE7]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '`Series.plot` now supports a `secondary_y` option:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series.plot`现在支持`secondary_y`选项：'
- en: '[PRE8]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Vytautas Jancauskas, the 2012 GSOC participant, has added many new plot types.
    For example, `''kde''` is a new option:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 2012年GSOC参与者Vytautas Jancauskas添加了许多新的绘图类型。例如，`'kde'`是一个新选项：
- en: '[PRE9]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: See [the plotting page](../user_guide/visualization.html#visualization-other)
    for much more.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 查看[绘图页面](../user_guide/visualization.html#visualization-other)获取更多信息。
- en: Other API changes
  id: totrans-172
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他API更改
- en: Deprecation of `offset`, `time_rule`, and `timeRule` arguments names in time
    series functions. Warnings will be printed until pandas 0.9 or 1.0.
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在时间序列函数中弃用`offset`、`time_rule`和`timeRule`参数名称。警告将在pandas 0.9或1.0之前打印。
- en: Potential porting issues for pandas <= 0.7.3 users
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对于pandas <= 0.7.3用户可能存在的迁移问题
- en: 'The major change that may affect you in pandas 0.8.0 is that time series indexes
    use NumPy’s `datetime64` data type instead of `dtype=object` arrays of Python’s
    built-in `datetime.datetime` objects. `DateRange` has been replaced by `DatetimeIndex`
    but otherwise behaved identically. But, if you have code that converts `DateRange`
    or `Index` objects that used to contain `datetime.datetime` values to plain NumPy
    arrays, you may have bugs lurking with code using scalar values because you are
    handing control over to NumPy:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在pandas 0.8.0中可能影响您的主要更改是时间序列索引使用NumPy的`datetime64`数据类型，而不是Python内置的`datetime.datetime`对象的`dtype=object`数组。`DateRange`已被`DatetimeIndex`取代，但行为相同。但是，如果您的代码将以前包含`datetime.datetime`值的`DateRange`或`Index`对象转换为普通的NumPy数组，那么您可能会在使用标量值的代码中存在潜在的错误，因为您正在将控制权交给NumPy：
- en: '[PRE10]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: pandas’s `Timestamp` object is a subclass of `datetime.datetime` that has nanosecond
    support (the `nanosecond` field store the nanosecond value between 0 and 999).
    It should substitute directly into any code that used `datetime.datetime` values
    before. Thus, I recommend not casting `DatetimeIndex` to regular NumPy arrays.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: pandas的`Timestamp`对象是`datetime.datetime`的子类，支持纳秒（`nanosecond`字段存储0到999之间的纳秒值）。它应直接替换任何以前使用`datetime.datetime`值的代码。因此，我建议不将`DatetimeIndex`转换为常规的NumPy数组。
- en: 'If you have code that requires an array of `datetime.datetime` objects, you
    have a couple of options. First, the `astype(object)` method of `DatetimeIndex`
    produces an array of `Timestamp` objects:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的代码需要一个 `datetime.datetime` 对象数组，你有几个选择。首先，`DatetimeIndex` 的 `astype(object)`
    方法会产生一个 `Timestamp` 对象数组：
- en: '[PRE11]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'To get an array of proper `datetime.datetime` objects, use the `to_pydatetime`
    method:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 要获得正确的 `datetime.datetime` 对象数组，请使用 `to_pydatetime` 方法：
- en: '[PRE12]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: matplotlib knows how to handle `datetime.datetime` but not Timestamp objects.
    While I recommend that you plot time series using `TimeSeries.plot`, you can either
    use `to_pydatetime` or register a converter for the Timestamp type. See [matplotlib
    documentation](http://matplotlib.org/api/units_api.html) for more on this.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: matplotlib 知道如何处理 `datetime.datetime`，但不知道如何处理 Timestamp 对象。虽然我建议你使用 `TimeSeries.plot`
    绘制时间序列，但你可以使用 `to_pydatetime` 或为 Timestamp 类型注册一个转换器。更多信息请参考[matplotlib文档](http://matplotlib.org/api/units_api.html)。
- en: Warning
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: There are bugs in the user-facing API with the nanosecond datetime64 unit in
    NumPy 1.6\. In particular, the string version of the array shows garbage values,
    and conversion to `dtype=object` is similarly broken.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 在 NumPy 1.6 版本中，用户界面 API 中的纳秒 datetime64 单元存在 bug。特别是，数组的字符串版本显示垃圾值，并且转换为 `dtype=object`
    也同样存在问题。
- en: '[PRE13]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '**Trust me: don’t panic**. If you are using NumPy 1.6 and restrict your interaction
    with `datetime64` values to pandas’s API you will be just fine. There is nothing
    wrong with the data-type (a 64-bit integer internally); all of the important data
    processing happens in pandas and is heavily tested. I strongly recommend that
    you **do not work directly with datetime64 arrays in NumPy 1.6** and only use
    the pandas API.'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '**相信我：不要惊慌**。如果你使用 NumPy 1.6 并且将与 `datetime64` 值的交互限制在 pandas 的 API 中，那么一切都会很好。数据类型没有问题（内部是一个
    64 位整数）；所有重要的数据处理都在 pandas 中进行，并且经过了严格测试。我强烈建议你**不要直接在 NumPy 1.6 中使用 datetime64
    数组**，而只使用 pandas API。'
- en: '**Support for non-unique indexes**: In the latter case, you may have code inside
    a `try:... catch:` block that failed due to the index not being unique. In many
    cases it will no longer fail (some method like `append` still check for uniqueness
    unless disabled). However, all is not lost: you can inspect `index.is_unique`
    and raise an exception explicitly if it is `False` or go to a different code branch.'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '**支持非唯一索引**：在后一种情况下，你可能有一段代码在 `try:... catch:` 块中失败，因为索引不是唯一的。在许多情况下，它将不再失败（一些方法如
    `append` 仍然检查唯一性，除非禁用）。然而，一切都没有丢失：你可以检查 `index.is_unique`，如果为 `False` 则显式引发异常，或者转到不同的代码分支。'
- en: '## Contributors'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '## 贡献者'
- en: A total of 27 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 总共有 27 人为这个版本贡献了补丁。名字后面带有“+”的人第一次贡献了补丁。
- en: Adam Klein
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Adam Klein
- en: Chang She
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chang She
- en: David Zaslavsky +
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: David Zaslavsky +
- en: Eric Chlebek +
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eric Chlebek +
- en: Jacques Kvam
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jacques Kvam
- en: Kamil Kisiel
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kamil Kisiel
- en: Kelsey Jordahl +
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kelsey Jordahl +
- en: Kieran O’Mahony +
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kieran O’Mahony +
- en: Lorenzo Bolla +
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lorenzo Bolla +
- en: Luca Beltrame
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Luca Beltrame
- en: Marc Abramowitz +
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Marc Abramowitz +
- en: Mark Wiebe +
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mark Wiebe +
- en: Paddy Mullen +
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Paddy Mullen +
- en: Peng Yu +
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Peng Yu +
- en: Roy Hyunjin Han +
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Roy Hyunjin Han +
- en: RuiDC +
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RuiDC +
- en: Senthil Palanisami +
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Senthil Palanisami +
- en: Skipper Seabold
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Skipper Seabold
- en: Stefan van der Walt +
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Stefan van der Walt +
- en: Takafumi Arakaki +
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Takafumi Arakaki +
- en: Thomas Kluyver
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Thomas Kluyver
- en: Vytautas Jancauskas +
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vytautas Jancauskas +
- en: Wes McKinney
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wes McKinney
- en: Wouter Overmeire
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wouter Overmeire
- en: Yaroslav Halchenko
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yaroslav Halchenko
- en: thuske +
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: thuske +
- en: timmie +
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: timmie +
