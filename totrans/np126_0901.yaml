- en: numpy.convolve
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.convolve
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.convolve.html](https://numpy.org/doc/1.26/reference/generated/numpy.convolve.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.convolve.html](https://numpy.org/doc/1.26/reference/generated/numpy.convolve.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Returns the discrete, linear convolution of two one-dimensional sequences.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 返回两个一维序列的离散线性卷积。
- en: The convolution operator is often seen in signal processing, where it models
    the effect of a linear time-invariant system on a signal [[1]](#r95849f33d2b1-1).
    In probability theory, the sum of two independent random variables is distributed
    according to the convolution of their individual distributions.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 卷积操作符经常出现在信号处理中，用于模拟线性时不变系统对信号的影响 [[1]](#r95849f33d2b1-1)。在概率论中，两个独立随机变量的和分布服从它们各自分布的卷积。
- en: If *v* is longer than *a*, the arrays are swapped before computation.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 *v* 比 *a* 长，则在计算之前交换数组。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a**(N,) array_like'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**（N，）array_like'
- en: First one-dimensional input array.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个一维输入数组。
- en: '**v**(M,) array_like'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**v**（M，）array_like'
- en: Second one-dimensional input array.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个一维输入数组。
- en: '**mode**{‘full’, ‘valid’, ‘same’}, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**mode**{‘full’, ‘valid’, ‘same’}，可选'
- en: '‘full’:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: ‘full’：
- en: By default, mode is ‘full’. This returns the convolution at each point of overlap,
    with an output shape of (N+M-1,). At the end-points of the convolution, the signals
    do not overlap completely, and boundary effects may be seen.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，模式为‘full’。这会返回重叠的每个点的卷积，输出形状为（N+M-1，）。在卷积的端点，信号不完全重叠，可能会出现边界效应。
- en: '‘same’:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: ‘same’：
- en: Mode ‘same’ returns output of length `max(M, N)`. Boundary effects are still
    visible.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: ‘same’ 模式返回长度为 `max(M, N)` 的输出。边界效应仍然可见。
- en: '‘valid’:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: ‘valid’：
- en: Mode ‘valid’ returns output of length `max(M, N) - min(M, N) + 1`. The convolution
    product is only given for points where the signals overlap completely. Values
    outside the signal boundary have no effect.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: ‘valid’ 模式返回长度为 `max(M, N) - min(M, N) + 1` 的输出。仅在信号完全重叠的点上给出卷积乘积。信号边界外的值没有影响。
- en: 'Returns:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**out**ndarray'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**out** ndarray'
- en: Discrete, linear convolution of *a* and *v*.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '*a* 和 *v* 的离散线性卷积。'
- en: See also
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`scipy.signal.fftconvolve`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.fftconvolve.html#scipy.signal.fftconvolve
    "(in SciPy v1.11.2)")'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.signal.fftconvolve`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.fftconvolve.html#scipy.signal.fftconvolve
    "(在 SciPy v1.11.2 版本)")'
- en: Convolve two arrays using the Fast Fourier Transform.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 使用快速傅里叶变换卷积两个数组。
- en: '[`scipy.linalg.toeplitz`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.linalg.toeplitz.html#scipy.linalg.toeplitz
    "(in SciPy v1.11.2)")'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.linalg.toeplitz`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.linalg.toeplitz.html#scipy.linalg.toeplitz
    "(在 SciPy v1.11.2 版本)")'
- en: Used to construct the convolution operator.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 用于构造卷积操作符。
- en: '[`polymul`](numpy.polymul.html#numpy.polymul "numpy.polymul")'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[`polymul`](numpy.polymul.html#numpy.polymul "numpy.polymul")'
- en: Polynomial multiplication. Same output as convolve, but also accepts poly1d
    objects as input.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式乘法。与convolve具有相同的输出，但也接受poly1d对象作为输入。
- en: Notes
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记
- en: The discrete convolution operation is defined as
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 离散卷积操作定义为
- en: \[(a * v)_n = \sum_{m = -\infty}^{\infty} a_m v_{n - m}\]
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: \[(a * v)_n = \sum_{m = -\infty}^{\infty} a_m v_{n - m}\]
- en: It can be shown that a convolution \(x(t) * y(t)\) in time/space is equivalent
    to the multiplication \(X(f) Y(f)\) in the Fourier domain, after appropriate padding
    (padding is necessary to prevent circular convolution). Since multiplication is
    more efficient (faster) than convolution, the function [`scipy.signal.fftconvolve`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.fftconvolve.html#scipy.signal.fftconvolve
    "(in SciPy v1.11.2)") exploits the FFT to calculate the convolution of large data-sets.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 可以证明，在时间/空间中的卷积 \(x(t) * y(t)\) 等价于傅里叶域中的乘法 \(X(f) Y(f)\)，在适当的填充后（填充是必要的，以防止循环卷积）。由于乘法比卷积更有效（更快），函数[`scipy.signal.fftconvolve`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.fftconvolve.html#scipy.signal.fftconvolve
    "(在 SciPy v1.11.2 版本)") 利用FFT计算大数据集的卷积。
- en: References
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[1](#id1)]'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[[1](#id1)]'
- en: Wikipedia, “Convolution”, [https://en.wikipedia.org/wiki/Convolution](https://en.wikipedia.org/wiki/Convolution)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 维基百科，“卷积”，[https://en.wikipedia.org/wiki/Convolution](https://en.wikipedia.org/wiki/Convolution)
- en: Examples
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: 'Note how the convolution operator flips the second array before “sliding” the
    two across one another:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 注意卷积操作符如何在“滑动”两个数组之前翻转第二个数组：
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Only return the middle values of the convolution. Contains boundary effects,
    where zeros are taken into account:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 仅返回卷积的中间值。包含边界效应，其中零值被考虑进去：
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The two arrays are of the same length, so there is only one position where
    they completely overlap:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个数组长度相同，因此只有一个位置它们完全重叠：
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
