- en: Galois Groups
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/combinatorics/galois.html](https://docs.sympy.org/latest/modules/combinatorics/galois.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Construct transitive subgroups of symmetric groups, useful in Galois theory.
  prefs: []
  type: TYPE_NORMAL
- en: Besides constructing instances of the [`PermutationGroup`](perm_groups.html#sympy.combinatorics.perm_groups.PermutationGroup
    "sympy.combinatorics.perm_groups.PermutationGroup") class to represent the transitive
    subgroups of \(S_n\) for small \(n\), this module provides *names* for these groups.
  prefs: []
  type: TYPE_NORMAL
- en: In some applications, it may be preferable to know the name of a group, rather
    than receive an instance of the [`PermutationGroup`](perm_groups.html#sympy.combinatorics.perm_groups.PermutationGroup
    "sympy.combinatorics.perm_groups.PermutationGroup") class, and then have to do
    extra work to determine which group it is, by checking various properties.
  prefs: []
  type: TYPE_NORMAL
- en: Names are instances of `Enum` classes defined in this module. With a name in
    hand, the name’s `get_perm_group` method can then be used to retrieve a [`PermutationGroup`](perm_groups.html#sympy.combinatorics.perm_groups.PermutationGroup
    "sympy.combinatorics.perm_groups.PermutationGroup").
  prefs: []
  type: TYPE_NORMAL
- en: The names used for groups in this module are taken from [1].
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[R41]'
  prefs: []
  type: TYPE_NORMAL
- en: Cohen, H. *A Course in Computational Algebraic Number Theory*.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Names for the transitive subgroups of S6.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Names for the transitive subgroups of S5.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Names for the transitive subgroups of S4.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Names for the transitive subgroups of S3.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Names for the transitive subgroups of S2.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Names for the transitive subgroups of S1.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Return a representation of the Klein four-group as a transitive subgroup of
    S4.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Return a representation of the metacyclic group M20, a transitive subgroup of
    S5 that is one of the possible Galois groups for polys of degree 5.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: See [1], Page 323.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Return a representation of S3 as a transitive subgroup of S6.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The representation is found by viewing the group as the symmetries of a triangular
    prism.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Return a representation of A4 as a transitive subgroup of S6.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This was computed using [`find_transitive_subgroups_of_S6()`](#sympy.combinatorics.galois.find_transitive_subgroups_of_S6
    "sympy.combinatorics.galois.find_transitive_subgroups_of_S6").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Return a representation of the S4- transitive subgroup of S6.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This was computed using [`find_transitive_subgroups_of_S6()`](#sympy.combinatorics.galois.find_transitive_subgroups_of_S6
    "sympy.combinatorics.galois.find_transitive_subgroups_of_S6").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Return a representation of the S4+ transitive subgroup of S6.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This was computed using [`find_transitive_subgroups_of_S6()`](#sympy.combinatorics.galois.find_transitive_subgroups_of_S6
    "sympy.combinatorics.galois.find_transitive_subgroups_of_S6").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Return a representation of the (A4 x C2) transitive subgroup of S6.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This was computed using [`find_transitive_subgroups_of_S6()`](#sympy.combinatorics.galois.find_transitive_subgroups_of_S6
    "sympy.combinatorics.galois.find_transitive_subgroups_of_S6").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Return a representation of the (S4 x C2) transitive subgroup of S6.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This was computed using [`find_transitive_subgroups_of_S6()`](#sympy.combinatorics.galois.find_transitive_subgroups_of_S6
    "sympy.combinatorics.galois.find_transitive_subgroups_of_S6").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Return a representation of the group G18, a transitive subgroup of S6 isomorphic
    to the semidirect product of C3^2 with C2.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This was computed using [`find_transitive_subgroups_of_S6()`](#sympy.combinatorics.galois.find_transitive_subgroups_of_S6
    "sympy.combinatorics.galois.find_transitive_subgroups_of_S6").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Return a representation of the group G36-, a transitive subgroup of S6 isomorphic
    to the semidirect product of C3^2 with C2^2.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This was computed using [`find_transitive_subgroups_of_S6()`](#sympy.combinatorics.galois.find_transitive_subgroups_of_S6
    "sympy.combinatorics.galois.find_transitive_subgroups_of_S6").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Return a representation of the group G36+, a transitive subgroup of S6 isomorphic
    to the semidirect product of C3^2 with C4.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This was computed using [`find_transitive_subgroups_of_S6()`](#sympy.combinatorics.galois.find_transitive_subgroups_of_S6
    "sympy.combinatorics.galois.find_transitive_subgroups_of_S6").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Return a representation of the group G72, a transitive subgroup of S6 isomorphic
    to the semidirect product of C3^2 with D4.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: See [1], Page 325.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Return a representation of the group \(PSL_2(\mathbb{F}_5)\), as a transitive
    subgroup of S6, isomorphic to \(A_5\).
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This was computed using [`find_transitive_subgroups_of_S6()`](#sympy.combinatorics.galois.find_transitive_subgroups_of_S6
    "sympy.combinatorics.galois.find_transitive_subgroups_of_S6").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Return a representation of the group \(PGL_2(\mathbb{F}_5)\), as a transitive
    subgroup of S6, isomorphic to \(S_5\).
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: See [1], Page 325.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Search for certain transitive subgroups of \(S_6\).
  prefs: []
  type: TYPE_NORMAL
- en: The symmetric group \(S_6\) has 16 different transitive subgroups, up to conjugacy.
    Some are more easily constructed than others. For example, the dihedral group
    \(D_6\) is immediately found, but it is not at all obvious how to realize \(S_4\)
    or \(S_5\) *transitively* within \(S_6\).
  prefs: []
  type: TYPE_NORMAL
- en: In some cases there are well-known constructions that can be used. For example,
    \(S_5\) is isomorphic to \(PGL_2(\mathbb{F}_5)\), which acts in a natural way
    on the projective line \(P^1(\mathbb{F}_5)\), a set of order 6.
  prefs: []
  type: TYPE_NORMAL
- en: In absence of such special constructions however, we can simply search for generators.
    For example, transitive instances of \(A_4\) and \(S_4\) can be found within \(S_6\)
    in this way.
  prefs: []
  type: TYPE_NORMAL
- en: Once we are engaged in such searches, it may then be easier (if less elegant)
    to find even those groups like \(S_5\) that do have special constructions, by
    mere search.
  prefs: []
  type: TYPE_NORMAL
- en: 'This function locates generators for transitive instances in \(S_6\) of the
    following subgroups:'
  prefs: []
  type: TYPE_NORMAL
- en: \(A_4\)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: \(S_4^-\) (\(S_4\) not contained within \(A_6\))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: \(S_4^+\) (\(S_4\) contained within \(A_6\))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: \(A_4 \times C_2\)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: \(S_4 \times C_2\)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: \(G_{18} = C_3^2 \rtimes C_2\)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: \(G_{36}^- = C_3^2 \rtimes C_2^2\)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: \(G_{36}^+ = C_3^2 \rtimes C_4\)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: \(G_{72} = C_3^2 \rtimes D_4\)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: \(A_5\)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: \(S_5\)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Note: Each of these groups also has a dedicated function in this module that
    returns the group immediately, using generators that were found by this search
    procedure.'
  prefs: []
  type: TYPE_NORMAL
- en: The search procedure serves as a record of how these generators were found.
    Also, due to randomness in the generation of the elements of permutation groups,
    it can be called again, in order to (probably) get different generators for the
    same groups.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**targets** : list of [`S6TransitiveSubgroups`](#sympy.combinatorics.galois.S6TransitiveSubgroups
    "sympy.combinatorics.galois.S6TransitiveSubgroups") values'
  prefs: []
  type: TYPE_NORMAL
- en: The groups you want to find.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**print_report** : bool (default False)'
  prefs: []
  type: TYPE_NORMAL
- en: If True, print to stdout the generators found for each group.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: dict
  prefs: []
  type: TYPE_NORMAL
- en: mapping each name in *targets* to the [`PermutationGroup`](perm_groups.html#sympy.combinatorics.perm_groups.PermutationGroup
    "sympy.combinatorics.perm_groups.PermutationGroup") that was found
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[R43](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Projective_linear_group#Exceptional_isomorphisms](https://en.wikipedia.org/wiki/Projective_linear_group#Exceptional_isomorphisms)'
  prefs: []
  type: TYPE_NORMAL
- en: '[[R44](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Automorphisms_of_the_symmetric_and_alternating_groups#PGL%282,5%29](https://en.wikipedia.org/wiki/Automorphisms_of_the_symmetric_and_alternating_groups#PGL%282,5%29)'
  prefs: []
  type: TYPE_NORMAL
