- en: Version 0.11.0 (April 22, 2013)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/whatsnew/v0.11.0.html](https://pandas.pydata.org/docs/whatsnew/v0.11.0.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This is a major release from 0.10.1 and includes many new features and enhancements
    along with a large number of bug fixes. The methods of Selecting Data have had
    quite a number of additions, and Dtype support is now full-fledged. There are
    also a number of important API changes that long-time pandas users should pay
    close attention to.
  prefs: []
  type: TYPE_NORMAL
- en: There is a new section in the documentation, [10 Minutes to Pandas](../user_guide/10min.html#min),
    primarily geared to new users.
  prefs: []
  type: TYPE_NORMAL
- en: There is a new section in the documentation, [Cookbook](../user_guide/cookbook.html#cookbook),
    a collection of useful recipes in pandas (and that we want contributions!).
  prefs: []
  type: TYPE_NORMAL
- en: There are several libraries that are now [Recommended Dependencies](../getting_started/install.html#install-recommended-dependencies)
  prefs: []
  type: TYPE_NORMAL
- en: Selection choices
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Starting in 0.11.0, object selection has had a number of user-requested additions
    in order to support more explicit location based indexing. pandas now supports
    three types of multi-axis indexing.
  prefs: []
  type: TYPE_NORMAL
- en: '`.loc` is strictly label based, will raise `KeyError` when the items are not
    found, allowed inputs are:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A single label, e.g. `5` or `'a'`, (note that `5` is interpreted as a *label*
    of the index. This use is **not** an integer position along the index)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A list or array of labels `['a', 'b', 'c']`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A slice object with labels `'a':'f'`, (note that contrary to usual python slices,
    **both** the start and the stop are included!)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A boolean array
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: See more at [Selection by Label](../user_guide/indexing.html#indexing-label)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`.iloc` is strictly integer position based (from `0` to `length-1` of the axis),
    will raise `IndexError` when the requested indices are out of bounds. Allowed
    inputs are:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An integer e.g. `5`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A list or array of integers `[4, 3, 0]`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A slice object with ints `1:7`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A boolean array
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: See more at [Selection by Position](../user_guide/indexing.html#indexing-integer)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`.ix` supports mixed integer and label based access. It is primarily label
    based, but will fallback to integer positional access. `.ix` is the most general
    and will support any of the inputs to `.loc` and `.iloc`, as well as support for
    floating point label schemes. `.ix` is especially useful when dealing with mixed
    positional and label based hierarchical indexes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As using integer slices with `.ix` have different behavior depending on whether
    the slice is interpreted as position based or label based, it’s usually better
    to be explicit and use `.iloc` or `.loc`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: See more at [Advanced Indexing](../user_guide/advanced.html#advanced) and [Advanced
    Hierarchical](../user_guide/advanced.html#advanced-advanced-hierarchical).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Selection deprecations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Starting in version 0.11.0, these methods *may* be deprecated in future versions.
  prefs: []
  type: TYPE_NORMAL
- en: '`irow`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`icol`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`iget_value`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: See the section [Selection by Position](../user_guide/indexing.html#indexing-integer)
    for substitutes.
  prefs: []
  type: TYPE_NORMAL
- en: Dtypes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Numeric dtypes will propagate and can coexist in DataFrames. If a dtype is passed
    (either directly via the `dtype` keyword, a passed `ndarray`, or a passed `Series`,
    then it will be preserved in DataFrame operations. Furthermore, different numeric
    dtypes will **NOT** be combined. The following example will give you a taste.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Dtype conversion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is lower-common-denominator upcasting, meaning you get the dtype which
    can accommodate all of the types
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Conversion
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Mixed conversion
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Forcing date coercion (and setting `NaT` when not datelike)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Dtype gotchas
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Platform gotchas**'
  prefs: []
  type: TYPE_NORMAL
- en: Starting in 0.11.0, construction of DataFrame/Series will use default dtypes
    of `int64` and `float64`, *regardless of platform*. This is not an apparent change
    from earlier versions of pandas. If you specify dtypes, they *WILL* be respected,
    however ([GH 2837](https://github.com/pandas-dev/pandas/issues/2837))
  prefs: []
  type: TYPE_NORMAL
- en: The following will all result in `int64` dtypes
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Keep in mind that `DataFrame(np.array([1,2]))` **WILL** result in `int32` on
    32-bit platforms!
  prefs: []
  type: TYPE_NORMAL
- en: '**Upcasting gotchas**'
  prefs: []
  type: TYPE_NORMAL
- en: Performing indexing operations on integer type data can easily upcast the data.
    The dtype of the input data will be preserved in cases where `nans` are not introduced.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: While float dtypes are unchanged.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Datetimes conversion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Datetime64[ns] columns in a DataFrame (or a Series) allow the use of `np.nan`
    to indicate a nan value, in addition to the traditional `NaT`, or not-a-time.
    This allows convenient nan setting in a generic way. Furthermore `datetime64[ns]`
    columns are created by default, when passed datetimelike objects (*this change
    was introduced in 0.10.1*) ([GH 2809](https://github.com/pandas-dev/pandas/issues/2809),
    [GH 2810](https://github.com/pandas-dev/pandas/issues/2810))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Astype conversion on `datetime64[ns]` to `object`, implicitly converts `NaT`
    to `np.nan`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: API changes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Added to_series() method to indices, to facilitate the creation of indexers
    ([GH 3275](https://github.com/pandas-dev/pandas/issues/3275))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`HDFStore`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: added the method `select_column` to select a single column from a table as a
    Series.
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: deprecated the `unique` method, can be replicated by `select_column(key,column).unique()`
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '`min_itemsize` parameter to `append` will now automatically create data_columns
    for passed keys'
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Enhancements
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Improved performance of df.to_csv() by up to 10x in some cases. ([GH 3059](https://github.com/pandas-dev/pandas/issues/3059))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Numexpr is now a [Recommended Dependencies](../getting_started/install.html#install-recommended-dependencies),
    to accelerate certain types of numerical and boolean operations
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Bottleneck is now a [Recommended Dependencies](../getting_started/install.html#install-recommended-dependencies),
    to accelerate certain types of `nan` operations
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`HDFStore`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: support `read_hdf/to_hdf` API similar to `read_csv/to_csv`
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: provide dotted attribute access to `get` from stores, e.g. `store.df == store['df']`
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: new keywords `iterator=boolean`, and `chunksize=number_in_a_chunk` are provided
    to support iteration on `select` and `select_as_multiple` ([GH 3076](https://github.com/pandas-dev/pandas/issues/3076))
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: You can now select timestamps from an *unordered* timeseries similarly to an
    *ordered* timeseries ([GH 2437](https://github.com/pandas-dev/pandas/issues/2437))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: You can now select with a string from a DataFrame with a datelike index, in
    a similar way to a Series ([GH 3070](https://github.com/pandas-dev/pandas/issues/3070))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_PRE
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Squeeze` to possibly remove length 1 dimensions from an object.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_PRE
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: In `pd.io.data.Options`,
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Fix bug when trying to fetch data for the current month when already past expiry.
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Now using lxml to scrape html instead of BeautifulSoup (lxml was faster).
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: New instance variables for calls and puts are automatically created when a method
    that creates them is called. This works for current month where the instance variables
    are simply `calls` and `puts`. Also works for future expiry months and save the
    instance variable as `callsMMYY` or `putsMMYY`, where `MMYY` are, respectively,
    the month and year of the option’s expiry.
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Options.get_near_stock_price` now allows the user to specify the month for
    which to get relevant options data.'
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Options.get_forward_data` now has optional kwargs `near` and `above_below`.
    This allows the user to specify if they would like to only return forward looking
    data for options near the current stock price. This just obtains the data from
    Options.get_near_stock_price instead of Options.get_xxx_data() ([GH 2758](https://github.com/pandas-dev/pandas/issues/2758)).'
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Cursor coordinate information is now displayed in time-series plots.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: added option `display.max_seq_items` to control the number of elements printed
    per sequence pprinting it. ([GH 2979](https://github.com/pandas-dev/pandas/issues/2979))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: added option `display.chop_threshold` to control display of small numerical
    values. ([GH 2739](https://github.com/pandas-dev/pandas/issues/2739))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: added option `display.max_info_rows` to prevent verbose_info from being calculated
    for frames above 1M rows (configurable). ([GH 2807](https://github.com/pandas-dev/pandas/issues/2807),
    [GH 2918](https://github.com/pandas-dev/pandas/issues/2918))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: value_counts() now accepts a “normalize” argument, for normalized histograms.
    ([GH 2710](https://github.com/pandas-dev/pandas/issues/2710)).
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: DataFrame.from_records now accepts not only dicts but any instance of the collections.Mapping
    ABC.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: added option `display.mpl_style` providing a sleeker visual style for plots.
    Based on [https://gist.github.com/huyng/816622](https://gist.github.com/huyng/816622)
    ([GH 3075](https://github.com/pandas-dev/pandas/issues/3075)).
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Treat boolean values as integers (values 1 and 0) for numeric operations. ([GH
    2641](https://github.com/pandas-dev/pandas/issues/2641))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: to_html() now accepts an optional “escape” argument to control reserved HTML
    character escaping (enabled by default) and escapes `&`, in addition to `<` and
    `>`. ([GH 2919](https://github.com/pandas-dev/pandas/issues/2919))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: See the [full release notes](index.html#release) or issue tracker on GitHub
    for a complete list.
  prefs: []
  type: TYPE_NORMAL
- en: '## Contributors'
  prefs: []
  type: TYPE_NORMAL
- en: A total of 50 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: Adam Greenhall +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alvaro Tejero-Cantero +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andy Hayden
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brad Buran +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chang She
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chapman Siu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Withers +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christian Geier +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christopher Whelan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Damien Garaud
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dan Birken
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dan Davison +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dieter Vandenbussche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dražen Lučanin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dražen Lučanin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Garrett Drapala
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Illia Polosukhin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Casbon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeremy Wagner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonathan Chambers +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: K.-Michael Aye
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Karmel Allison +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Loïc Estève +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nicholaus E. Halecky +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter Prettenhofer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Phillip Cloud +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert Gieseke +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Skipper Seabold
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Spencer Lyon
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stephen Lin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thierry Moisan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Kluyver
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Akinbo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vytautas Jancauskas
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vytautas Jančauskas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wes McKinney
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Will Furnass +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wouter Overmeire
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: anomrake +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: davidjameshumphreys +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dengemann +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dieterv77 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jreback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lexual +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: stephenwlin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: thauck +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vytas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: waitingkuo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: y-p
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Selection choices
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Starting in 0.11.0, object selection has had a number of user-requested additions
    in order to support more explicit location based indexing. pandas now supports
    three types of multi-axis indexing.
  prefs: []
  type: TYPE_NORMAL
- en: '`.loc` is strictly label based, will raise `KeyError` when the items are not
    found, allowed inputs are:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A single label, e.g. `5` or `'a'`, (note that `5` is interpreted as a *label*
    of the index. This use is **not** an integer position along the index)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A list or array of labels `['a', 'b', 'c']`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A slice object with labels `'a':'f'`, (note that contrary to usual python slices,
    **both** the start and the stop are included!)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A boolean array
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: See more at [Selection by Label](../user_guide/indexing.html#indexing-label)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`.iloc` is strictly integer position based (from `0` to `length-1` of the axis),
    will raise `IndexError` when the requested indices are out of bounds. Allowed
    inputs are:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An integer e.g. `5`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A list or array of integers `[4, 3, 0]`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A slice object with ints `1:7`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A boolean array
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: See more at [Selection by Position](../user_guide/indexing.html#indexing-integer)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`.ix` supports mixed integer and label based access. It is primarily label
    based, but will fallback to integer positional access. `.ix` is the most general
    and will support any of the inputs to `.loc` and `.iloc`, as well as support for
    floating point label schemes. `.ix` is especially useful when dealing with mixed
    positional and label based hierarchical indexes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As using integer slices with `.ix` have different behavior depending on whether
    the slice is interpreted as position based or label based, it’s usually better
    to be explicit and use `.iloc` or `.loc`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: See more at [Advanced Indexing](../user_guide/advanced.html#advanced) and [Advanced
    Hierarchical](../user_guide/advanced.html#advanced-advanced-hierarchical).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Selection deprecations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Starting in version 0.11.0, these methods *may* be deprecated in future versions.
  prefs: []
  type: TYPE_NORMAL
- en: '`irow`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`icol`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`iget_value`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: See the section [Selection by Position](../user_guide/indexing.html#indexing-integer)
    for substitutes.
  prefs: []
  type: TYPE_NORMAL
- en: Dtypes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Numeric dtypes will propagate and can coexist in DataFrames. If a dtype is passed
    (either directly via the `dtype` keyword, a passed `ndarray`, or a passed `Series`,
    then it will be preserved in DataFrame operations. Furthermore, different numeric
    dtypes will **NOT** be combined. The following example will give you a taste.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Dtype conversion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is lower-common-denominator upcasting, meaning you get the dtype which
    can accommodate all of the types
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Conversion
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Mixed conversion
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Forcing date coercion (and setting `NaT` when not datelike)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Dtype gotchas
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Platform gotchas**'
  prefs: []
  type: TYPE_NORMAL
- en: Starting in 0.11.0, construction of DataFrame/Series will use default dtypes
    of `int64` and `float64`, *regardless of platform*. This is not an apparent change
    from earlier versions of pandas. If you specify dtypes, they *WILL* be respected,
    however ([GH 2837](https://github.com/pandas-dev/pandas/issues/2837))
  prefs: []
  type: TYPE_NORMAL
- en: The following will all result in `int64` dtypes
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Keep in mind that `DataFrame(np.array([1,2]))` **WILL** result in `int32` on
    32-bit platforms!
  prefs: []
  type: TYPE_NORMAL
- en: '**Upcasting gotchas**'
  prefs: []
  type: TYPE_NORMAL
- en: Performing indexing operations on integer type data can easily upcast the data.
    The dtype of the input data will be preserved in cases where `nans` are not introduced.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: While float dtypes are unchanged.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Datetimes conversion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Datetime64[ns] columns in a DataFrame (or a Series) allow the use of `np.nan`
    to indicate a nan value, in addition to the traditional `NaT`, or not-a-time.
    This allows convenient nan setting in a generic way. Furthermore `datetime64[ns]`
    columns are created by default, when passed datetimelike objects (*this change
    was introduced in 0.10.1*) ([GH 2809](https://github.com/pandas-dev/pandas/issues/2809),
    [GH 2810](https://github.com/pandas-dev/pandas/issues/2810))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Astype conversion on `datetime64[ns]` to `object`, implicitly converts `NaT`
    to `np.nan`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: API changes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Added to_series() method to indices, to facilitate the creation of indexers
    ([GH 3275](https://github.com/pandas-dev/pandas/issues/3275))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`HDFStore`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: added the method `select_column` to select a single column from a table as a
    Series.
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: deprecated the `unique` method, can be replicated by `select_column(key,column).unique()`
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '`min_itemsize` parameter to `append` will now automatically create data_columns
    for passed keys'
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Enhancements
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Improved performance of df.to_csv() by up to 10x in some cases. ([GH 3059](https://github.com/pandas-dev/pandas/issues/3059))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Numexpr is now a [Recommended Dependencies](../getting_started/install.html#install-recommended-dependencies),
    to accelerate certain types of numerical and boolean operations
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Bottleneck is now a [Recommended Dependencies](../getting_started/install.html#install-recommended-dependencies),
    to accelerate certain types of `nan` operations
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`HDFStore`'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: support `read_hdf/to_hdf` API similar to `read_csv/to_csv`
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: provide dotted attribute access to `get` from stores, e.g. `store.df == store['df']`
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: new keywords `iterator=boolean`, and `chunksize=number_in_a_chunk` are provided
    to support iteration on `select` and `select_as_multiple` ([GH 3076](https://github.com/pandas-dev/pandas/issues/3076))
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: You can now select timestamps from an *unordered* timeseries similarly to an
    *ordered* timeseries ([GH 2437](https://github.com/pandas-dev/pandas/issues/2437))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: You can now select with a string from a DataFrame with a datelike index, in
    a similar way to a Series ([GH 3070](https://github.com/pandas-dev/pandas/issues/3070))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_PRE
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Squeeze` to possibly remove length 1 dimensions from an object.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_PRE
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: In `pd.io.data.Options`,
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Fix bug when trying to fetch data for the current month when already past expiry.
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Now using lxml to scrape html instead of BeautifulSoup (lxml was faster).
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: New instance variables for calls and puts are automatically created when a method
    that creates them is called. This works for current month where the instance variables
    are simply `calls` and `puts`. Also works for future expiry months and save the
    instance variable as `callsMMYY` or `putsMMYY`, where `MMYY` are, respectively,
    the month and year of the option’s expiry.
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Options.get_near_stock_price` now allows the user to specify the month for
    which to get relevant options data.'
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Options.get_forward_data` now has optional kwargs `near` and `above_below`.
    This allows the user to specify if they would like to only return forward looking
    data for options near the current stock price. This just obtains the data from
    Options.get_near_stock_price instead of Options.get_xxx_data() ([GH 2758](https://github.com/pandas-dev/pandas/issues/2758)).'
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Cursor coordinate information is now displayed in time-series plots.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: added option `display.max_seq_items` to control the number of elements printed
    per sequence pprinting it. ([GH 2979](https://github.com/pandas-dev/pandas/issues/2979))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: added option `display.chop_threshold` to control display of small numerical
    values. ([GH 2739](https://github.com/pandas-dev/pandas/issues/2739))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: added option `display.max_info_rows` to prevent verbose_info from being calculated
    for frames above 1M rows (configurable). ([GH 2807](https://github.com/pandas-dev/pandas/issues/2807),
    [GH 2918](https://github.com/pandas-dev/pandas/issues/2918))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: value_counts() now accepts a “normalize” argument, for normalized histograms.
    ([GH 2710](https://github.com/pandas-dev/pandas/issues/2710)).
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: DataFrame.from_records now accepts not only dicts but any instance of the collections.Mapping
    ABC.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: added option `display.mpl_style` providing a sleeker visual style for plots.
    Based on [https://gist.github.com/huyng/816622](https://gist.github.com/huyng/816622)
    ([GH 3075](https://github.com/pandas-dev/pandas/issues/3075)).
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Treat boolean values as integers (values 1 and 0) for numeric operations. ([GH
    2641](https://github.com/pandas-dev/pandas/issues/2641))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: to_html() now accepts an optional “escape” argument to control reserved HTML
    character escaping (enabled by default) and escapes `&`, in addition to `<` and
    `>`. ([GH 2919](https://github.com/pandas-dev/pandas/issues/2919))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: See the [full release notes](index.html#release) or issue tracker on GitHub
    for a complete list.
  prefs: []
  type: TYPE_NORMAL
- en: '## Contributors'
  prefs: []
  type: TYPE_NORMAL
- en: A total of 50 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: Adam Greenhall +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alvaro Tejero-Cantero +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andy Hayden
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brad Buran +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chang She
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chapman Siu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Withers +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christian Geier +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christopher Whelan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Damien Garaud
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dan Birken
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dan Davison +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dieter Vandenbussche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dražen Lučanin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dražen Lučanin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Garrett Drapala
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Illia Polosukhin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Casbon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeremy Wagner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonathan Chambers +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: K.-Michael Aye
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Karmel Allison +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Loïc Estève +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nicholaus E. Halecky +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter Prettenhofer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Phillip Cloud +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert Gieseke +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Skipper Seabold
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Spencer Lyon
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stephen Lin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thierry Moisan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Kluyver
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Akinbo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vytautas Jancauskas
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vytautas Jančauskas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wes McKinney
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Will Furnass +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wouter Overmeire
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: anomrake +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: davidjameshumphreys +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dengemann +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dieterv77 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jreback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lexual +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: stephenwlin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: thauck +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vytas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: waitingkuo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: y-p
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
