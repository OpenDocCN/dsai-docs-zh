["```py\nscipy.special.chebyt(n, monic=False)\n```", "```py\n>>> import numpy as np\n>>> import matplotlib.pyplot as plt\n>>> from scipy.linalg import det\n>>> from scipy.special import chebyt\n>>> x = np.arange(-1.0, 1.0, 0.01)\n>>> fig, ax = plt.subplots()\n>>> ax.set_ylim(-2.0, 2.0)\n>>> ax.set_title(r'Chebyshev polynomial $T_3$')\n>>> ax.plot(x, chebyt(3)(x), label=rf'$T_3$')\n>>> for p in np.arange(-1.0, 1.0, 0.1):\n...     ax.plot(p,\n...             det(np.array([[p, 1, 0], [1, 2*p, 1], [0, 1, 2*p]])),\n...             'rx')\n>>> plt.legend(loc='best')\n>>> plt.show() \n```", "```py\n>>> from scipy.special import binom\n>>> from scipy.special import jacobi\n>>> x = np.arange(-1.0, 1.0, 0.01)\n>>> np.allclose(jacobi(3, -0.5, -0.5)(x),\n...             1/64 * binom(6, 3) * chebyt(3)(x))\nTrue \n```", "```py\n>>> x = np.arange(-1.5, 1.5, 0.01)\n>>> fig, ax = plt.subplots()\n>>> ax.set_ylim(-4.0, 4.0)\n>>> ax.set_title(r'Chebyshev polynomials $T_n$')\n>>> for n in np.arange(2,5):\n...     ax.plot(x, chebyt(n)(x), label=rf'$T_n={n}$')\n>>> plt.legend(loc='best')\n>>> plt.show() \n```"]