- en: scipy.special.fdtri
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.fdtri.html#scipy.special.fdtri](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.fdtri.html#scipy.special.fdtri)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The *p*-th quantile of the F-distribution.
  prefs: []
  type: TYPE_NORMAL
- en: This function is the inverse of the F-distribution CDF, [`fdtr`](scipy.special.fdtr.html#scipy.special.fdtr
    "scipy.special.fdtr"), returning the *x* such that *fdtr(dfn, dfd, x) = p*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**dfn**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: First parameter (positive float).
  prefs: []
  type: TYPE_NORMAL
- en: '**dfd**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Second parameter (positive float).
  prefs: []
  type: TYPE_NORMAL
- en: '**p**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Cumulative probability, in [0, 1].
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Optional output array for the function values
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**scalar or ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The quantile corresponding to *p*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`fdtr`](scipy.special.fdtr.html#scipy.special.fdtr "scipy.special.fdtr")'
  prefs: []
  type: TYPE_NORMAL
- en: F distribution cumulative distribution function
  prefs: []
  type: TYPE_NORMAL
- en: '[`fdtrc`](scipy.special.fdtrc.html#scipy.special.fdtrc "scipy.special.fdtrc")'
  prefs: []
  type: TYPE_NORMAL
- en: F distribution survival function
  prefs: []
  type: TYPE_NORMAL
- en: '[`scipy.stats.f`](scipy.stats.f.html#scipy.stats.f "scipy.stats.f")'
  prefs: []
  type: TYPE_NORMAL
- en: F distribution
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The computation is carried out using the relation to the inverse regularized
    beta function, \(I^{-1}_x(a, b)\). Let \(z = I^{-1}_p(d_d/2, d_n/2).\) Then,
  prefs: []
  type: TYPE_NORMAL
- en: \[x = \frac{d_d (1 - z)}{d_n z}.\]
  prefs: []
  type: TYPE_NORMAL
- en: 'If *p* is such that \(x < 0.5\), the following relation is used instead for
    improved stability: let \(z'' = I^{-1}_{1 - p}(d_n/2, d_d/2).\) Then,'
  prefs: []
  type: TYPE_NORMAL
- en: \[x = \frac{d_d z'}{d_n (1 - z')}.\]
  prefs: []
  type: TYPE_NORMAL
- en: Wrapper for the Cephes [[1]](#r3562210e1316-1) routine [`fdtri`](#scipy.special.fdtri
    "scipy.special.fdtri").
  prefs: []
  type: TYPE_NORMAL
- en: The F distribution is also available as [`scipy.stats.f`](scipy.stats.f.html#scipy.stats.f
    "scipy.stats.f"). Calling [`fdtri`](#scipy.special.fdtri "scipy.special.fdtri")
    directly can improve performance compared to the `ppf` method of [`scipy.stats.f`](scipy.stats.f.html#scipy.stats.f
    "scipy.stats.f") (see last example below).
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: Cephes Mathematical Functions Library, [http://www.netlib.org/cephes/](http://www.netlib.org/cephes/)
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[`fdtri`](#scipy.special.fdtri "scipy.special.fdtri") represents the inverse
    of the F distribution CDF which is available as [`fdtr`](scipy.special.fdtr.html#scipy.special.fdtr
    "scipy.special.fdtr"). Here, we calculate the CDF for `df1=1`, `df2=2` at `x=3`.
    [`fdtri`](#scipy.special.fdtri "scipy.special.fdtri") then returns `3` given the
    same values for *df1*, *df2* and the computed CDF value.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Calculate the function at several points by providing a NumPy array for *x*.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Plot the function for several parameter sets.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-special-fdtri-1_00_00.png](../Images/88fec757dc644ce1a8d3ee566b842360.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The F distribution is also available as [`scipy.stats.f`](scipy.stats.f.html#scipy.stats.f
    "scipy.stats.f"). Using [`fdtri`](#scipy.special.fdtri "scipy.special.fdtri")
    directly can be much faster than calling the `ppf` method of [`scipy.stats.f`](scipy.stats.f.html#scipy.stats.f
    "scipy.stats.f"), especially for small arrays or individual values. To get the
    same results one must use the following parametrization: `stats.f(dfn, dfd).ppf(x)=fdtri(dfn,
    dfd, x)`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
