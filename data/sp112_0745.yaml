- en: Special functions (scipy.special)
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 特殊函数（scipy.special）
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/special.html](https://docs.scipy.org/doc/scipy-1.12.0/reference/special.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/special.html](https://docs.scipy.org/doc/scipy-1.12.0/reference/special.html)
- en: Almost all of the functions below accept NumPy arrays as input arguments as
    well as single numbers. This means they follow broadcasting and automatic array-looping
    rules. Technically, they are [NumPy universal functions](https://numpy.org/doc/stable/user/basics.ufuncs.html#ufuncs-basics).
    Functions which do not accept NumPy arrays are marked by a warning in the section
    description.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 下面几乎所有函数都接受 NumPy 数组作为输入参数，也可以接受单个数字。这意味着它们遵循广播和自动数组循环规则。从技术上讲，它们是 [NumPy 通用函数](https://numpy.org/doc/stable/user/basics.ufuncs.html#ufuncs-basics)。那些不接受
    NumPy 数组的函数在部分描述中标有警告。
- en: See also
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`scipy.special.cython_special`](special.cython_special.html#module-scipy.special.cython_special
    "scipy.special.cython_special") – Typed Cython versions of special functions'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.special.cython_special`](special.cython_special.html#module-scipy.special.cython_special
    "scipy.special.cython_special") – 特殊函数的类型化 Cython 版本'
- en: Error handling
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 错误处理
- en: Errors are handled by returning NaNs or other appropriate values. Some of the
    special function routines can emit warnings or raise exceptions when an error
    occurs. By default this is disabled; to query and control the current error handling
    state the following functions are provided.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 当发生错误时，通过返回 NaN 或其他适当的值来处理错误。某些特殊函数例程在发生错误时可以发出警告或引发异常。默认情况下，此功能已禁用；要查询和控制当前错误处理状态，提供了以下函数。
- en: '| [`geterr`](generated/scipy.special.geterr.html#scipy.special.geterr "scipy.special.geterr")()
    | Get the current way of handling special-function errors. |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [`geterr`](generated/scipy.special.geterr.html#scipy.special.geterr "scipy.special.geterr")()
    | 获取当前处理特殊函数错误的方式。 |'
- en: '| [`seterr`](generated/scipy.special.seterr.html#scipy.special.seterr "scipy.special.seterr")(**kwargs)
    | Set how special-function errors are handled. |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| [`seterr`](generated/scipy.special.seterr.html#scipy.special.seterr "scipy.special.seterr")(**kwargs)
    | 设置特殊函数错误处理方式。 |'
- en: '| [`errstate`](generated/scipy.special.errstate.html#scipy.special.errstate
    "scipy.special.errstate")(**kwargs) | Context manager for special-function error
    handling. |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| [`errstate`](generated/scipy.special.errstate.html#scipy.special.errstate
    "scipy.special.errstate")(**kwargs) | 特殊函数错误处理的上下文管理器。 |'
- en: '| [`SpecialFunctionWarning`](generated/scipy.special.SpecialFunctionWarning.html#scipy.special.SpecialFunctionWarning
    "scipy.special.SpecialFunctionWarning") | Warning that can be emitted by special
    functions. |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| [`SpecialFunctionWarning`](generated/scipy.special.SpecialFunctionWarning.html#scipy.special.SpecialFunctionWarning
    "scipy.special.SpecialFunctionWarning") | 可能由特殊函数发出的警告。 |'
- en: '| [`SpecialFunctionError`](generated/scipy.special.SpecialFunctionError.html#scipy.special.SpecialFunctionError
    "scipy.special.SpecialFunctionError") | Exception that can be raised by special
    functions. |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| [`SpecialFunctionError`](generated/scipy.special.SpecialFunctionError.html#scipy.special.SpecialFunctionError
    "scipy.special.SpecialFunctionError") | 特殊函数可能引发的异常。 |'
- en: Available functions
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可用函数
- en: Airy functions
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Airy 函数
- en: '| [`airy`](generated/scipy.special.airy.html#scipy.special.airy "scipy.special.airy")(z[, out])
    | Airy functions and their derivatives. |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [`airy`](generated/scipy.special.airy.html#scipy.special.airy "scipy.special.airy")(z[, out])
    | Airy 函数及其导数。 |'
- en: '| [`airye`](generated/scipy.special.airye.html#scipy.special.airye "scipy.special.airye")(z[, out])
    | Exponentially scaled Airy functions and their derivatives. |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| [`airye`](generated/scipy.special.airye.html#scipy.special.airye "scipy.special.airye")(z[, out])
    | 指数缩放的 Airy 函数及其导数。 |'
- en: '| [`ai_zeros`](generated/scipy.special.ai_zeros.html#scipy.special.ai_zeros
    "scipy.special.ai_zeros")(nt) | Compute *nt* zeros and values of the Airy function
    Ai and its derivative. |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [`ai_zeros`](generated/scipy.special.ai_zeros.html#scipy.special.ai_zeros
    "scipy.special.ai_zeros")(nt) | 计算 Airy 函数 Ai 及其导数的 *nt* 个零点和值。 |'
- en: '| [`bi_zeros`](generated/scipy.special.bi_zeros.html#scipy.special.bi_zeros
    "scipy.special.bi_zeros")(nt) | Compute *nt* zeros and values of the Airy function
    Bi and its derivative. |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [`bi_zeros`](generated/scipy.special.bi_zeros.html#scipy.special.bi_zeros
    "scipy.special.bi_zeros")(nt) | 计算 Airy 函数 Bi 及其导数的 *nt* 个零点和值。 |'
- en: '| [`itairy`](generated/scipy.special.itairy.html#scipy.special.itairy "scipy.special.itairy")(x[, out])
    | Integrals of Airy functions |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [`itairy`](generated/scipy.special.itairy.html#scipy.special.itairy "scipy.special.itairy")(x[, out])
    | Airy 函数的积分 |'
- en: Elliptic functions and integrals
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 椭圆函数和积分
- en: '| [`ellipj`](generated/scipy.special.ellipj.html#scipy.special.ellipj "scipy.special.ellipj")(u, m[, out])
    | Jacobian elliptic functions |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`ellipj`](generated/scipy.special.ellipj.html#scipy.special.ellipj "scipy.special.ellipj")(u, m[, out])
    | 雅可比椭圆函数 |'
- en: '| [`ellipk`](generated/scipy.special.ellipk.html#scipy.special.ellipk "scipy.special.ellipk")(m[, out])
    | Complete elliptic integral of the first kind. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`ellipk`](generated/scipy.special.ellipk.html#scipy.special.ellipk "scipy.special.ellipk")(m[, out])
    | 第一类完全椭圆积分 |'
- en: '| [`ellipkm1`](generated/scipy.special.ellipkm1.html#scipy.special.ellipkm1
    "scipy.special.ellipkm1")(p[, out]) | Complete elliptic integral of the first
    kind around *m* = 1 |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [`ellipkm1`](generated/scipy.special.ellipkm1.html#scipy.special.ellipkm1
    "scipy.special.ellipkm1")(p[, out]) | 当 *m* = 1 时的第一类完全椭圆积分 |'
- en: '| [`ellipkinc`](generated/scipy.special.ellipkinc.html#scipy.special.ellipkinc
    "scipy.special.ellipkinc")(phi, m[, out]) | Incomplete elliptic integral of the
    first kind |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [`ellipkinc`](generated/scipy.special.ellipkinc.html#scipy.special.ellipkinc
    "scipy.special.ellipkinc")(phi, m[, out]) | 第一类不完全椭圆积分 |'
- en: '| [`ellipe`](generated/scipy.special.ellipe.html#scipy.special.ellipe "scipy.special.ellipe")(m[, out])
    | Complete elliptic integral of the second kind |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [`ellipe`](generated/scipy.special.ellipe.html#scipy.special.ellipe "scipy.special.ellipe")(m[, out])
    | 第二类完全椭圆积分 |'
- en: '| [`ellipeinc`](generated/scipy.special.ellipeinc.html#scipy.special.ellipeinc
    "scipy.special.ellipeinc")(phi, m[, out]) | Incomplete elliptic integral of the
    second kind |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [`ellipeinc`](generated/scipy.special.ellipeinc.html#scipy.special.ellipeinc
    "scipy.special.ellipeinc")(phi, m[, out]) | 第二类不完全椭圆积分 |'
- en: '| [`elliprc`](generated/scipy.special.elliprc.html#scipy.special.elliprc "scipy.special.elliprc")(x, y[, out])
    | Degenerate symmetric elliptic integral. |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [`elliprc`](generated/scipy.special.elliprc.html#scipy.special.elliprc "scipy.special.elliprc")(x, y[, out])
    | 对称退化椭圆积分 |'
- en: '| [`elliprd`](generated/scipy.special.elliprd.html#scipy.special.elliprd "scipy.special.elliprd")(x, y, z[, out])
    | Symmetric elliptic integral of the second kind. |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| [`elliprd`](generated/scipy.special.elliprd.html#scipy.special.elliprd "scipy.special.elliprd")(x, y, z[, out])
    | 第二类对称椭圆积分 |'
- en: '| [`elliprf`](generated/scipy.special.elliprf.html#scipy.special.elliprf "scipy.special.elliprf")(x, y, z[, out])
    | Completely-symmetric elliptic integral of the first kind. |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [`elliprf`](generated/scipy.special.elliprf.html#scipy.special.elliprf "scipy.special.elliprf")(x, y, z[, out])
    | 完全对称第一类椭圆积分 |'
- en: '| [`elliprg`](generated/scipy.special.elliprg.html#scipy.special.elliprg "scipy.special.elliprg")(x, y, z[, out])
    | Completely-symmetric elliptic integral of the second kind. |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [`elliprg`](generated/scipy.special.elliprg.html#scipy.special.elliprg "scipy.special.elliprg")(x, y, z[, out])
    | 完全对称第二类椭圆积分 |'
- en: '| [`elliprj`](generated/scipy.special.elliprj.html#scipy.special.elliprj "scipy.special.elliprj")(x, y, z, p[, out])
    | Symmetric elliptic integral of the third kind. |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [`elliprj`](generated/scipy.special.elliprj.html#scipy.special.elliprj "scipy.special.elliprj")(x, y, z, p[, out])
    | 第三类对称椭圆积分 |'
- en: Bessel functions
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Bessel functions
- en: '| [`jv`](generated/scipy.special.jv.html#scipy.special.jv "scipy.special.jv")(v, z[, out])
    | Bessel function of the first kind of real order and complex argument. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`jv`](generated/scipy.special.jv.html#scipy.special.jv "scipy.special.jv")(v, z[, out])
    | 复数参数的第一类贝塞尔函数 |'
- en: '| [`jve`](generated/scipy.special.jve.html#scipy.special.jve "scipy.special.jve")(v, z[, out])
    | Exponentially scaled Bessel function of the first kind of order *v*. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [`jve`](generated/scipy.special.jve.html#scipy.special.jve "scipy.special.jve")(v, z[, out])
    | 指数缩放的第一类贝塞尔函数 |'
- en: '| [`yn`](generated/scipy.special.yn.html#scipy.special.yn "scipy.special.yn")(n, x[, out])
    | Bessel function of the second kind of integer order and real argument. |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [`yn`](generated/scipy.special.yn.html#scipy.special.yn "scipy.special.yn")(n, x[, out])
    | 整数阶实参数第二类贝塞尔函数 |'
- en: '| [`yv`](generated/scipy.special.yv.html#scipy.special.yv "scipy.special.yv")(v, z[, out])
    | Bessel function of the second kind of real order and complex argument. |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| [`yv`](generated/scipy.special.yv.html#scipy.special.yv "scipy.special.yv")(v, z[, out])
    | 复数参数的第二类贝塞尔函数 |'
- en: '| [`yve`](generated/scipy.special.yve.html#scipy.special.yve "scipy.special.yve")(v, z[, out])
    | Exponentially scaled Bessel function of the second kind of real order. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| [`yve`](generated/scipy.special.yve.html#scipy.special.yve "scipy.special.yve")(v, z[, out])
    | 指数缩放的第二类贝塞尔函数 |'
- en: '| [`kn`](generated/scipy.special.kn.html#scipy.special.kn "scipy.special.kn")(n, x[, out])
    | Modified Bessel function of the second kind of integer order *n* |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| [`kn`](generated/scipy.special.kn.html#scipy.special.kn "scipy.special.kn")(n, x[, out])
    | 整数阶修正贝塞尔函数第二类 |'
- en: '| [`kv`](generated/scipy.special.kv.html#scipy.special.kv "scipy.special.kv")(v, z[, out])
    | Modified Bessel function of the second kind of real order *v* |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| [`kv`](generated/scipy.special.kv.html#scipy.special.kv "scipy.special.kv")(v, z[, out])
    | 第二类修正贝塞尔函数 |'
- en: '| [`kve`](generated/scipy.special.kve.html#scipy.special.kve "scipy.special.kve")(v, z[, out])
    | Exponentially scaled modified Bessel function of the second kind. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [`kve`](generated/scipy.special.kve.html#scipy.special.kve "scipy.special.kve")(v, z[, out])
    | 指数缩放的第二类修正贝塞尔函数 |'
- en: '| [`iv`](generated/scipy.special.iv.html#scipy.special.iv "scipy.special.iv")(v, z[, out])
    | Modified Bessel function of the first kind of real order. |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| [`iv`](generated/scipy.special.iv.html#scipy.special.iv "scipy.special.iv")(v, z[, out])
    | 实数阶修正贝塞尔函数第一类 |'
- en: '| [`ive`](generated/scipy.special.ive.html#scipy.special.ive "scipy.special.ive")(v, z[, out])
    | Exponentially scaled modified Bessel function of the first kind. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| [`ive`](generated/scipy.special.ive.html#scipy.special.ive "scipy.special.ive")(v, z[, out])
    | 指数缩放的第一类修正贝塞尔函数 |'
- en: '| [`hankel1`](generated/scipy.special.hankel1.html#scipy.special.hankel1 "scipy.special.hankel1")(v, z[, out])
    | Hankel function of the first kind |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| [`hankel1`](generated/scipy.special.hankel1.html#scipy.special.hankel1 "scipy.special.hankel1")(v, z[, out])
    | 第一类汉克尔函数 |'
- en: '| [`hankel1e`](generated/scipy.special.hankel1e.html#scipy.special.hankel1e
    "scipy.special.hankel1e")(v, z[, out]) | Exponentially scaled Hankel function
    of the first kind |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| [`hankel1e`](generated/scipy.special.hankel1e.html#scipy.special.hankel1e
    "scipy.special.hankel1e")(v, z[, out]) | 指数缩放的第一类汉克尔函数 |'
- en: '| [`hankel2`](generated/scipy.special.hankel2.html#scipy.special.hankel2 "scipy.special.hankel2")(v, z[, out])
    | Hankel function of the second kind |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| [`hankel2`](generated/scipy.special.hankel2.html#scipy.special.hankel2 "scipy.special.hankel2")(v, z[, out])
    | 第二类汉克尔函数 |'
- en: '| [`hankel2e`](generated/scipy.special.hankel2e.html#scipy.special.hankel2e
    "scipy.special.hankel2e")(v, z[, out]) | Exponentially scaled Hankel function
    of the second kind |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| [`hankel2e`](generated/scipy.special.hankel2e.html#scipy.special.hankel2e
    "scipy.special.hankel2e")(v, z[, out]) | 指数缩放的第二类汉克尔函数 |'
- en: '| [`wright_bessel`](generated/scipy.special.wright_bessel.html#scipy.special.wright_bessel
    "scipy.special.wright_bessel")(a, b, x[, out]) | Wright''s generalized Bessel
    function. |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| [`wright_bessel`](generated/scipy.special.wright_bessel.html#scipy.special.wright_bessel
    "scipy.special.wright_bessel")(a, b, x[, out]) | 莱特广义贝塞尔函数 |'
- en: 'The following function does not accept NumPy arrays (it is not a universal
    function):'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 不接受 NumPy 数组的以下函数（不是通用函数）：
- en: '| [`lmbda`](generated/scipy.special.lmbda.html#scipy.special.lmbda "scipy.special.lmbda")(v, x)
    | Jahnke-Emden Lambda function, Lambdav(x). |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| [`lmbda`](generated/scipy.special.lmbda.html#scipy.special.lmbda "scipy.special.lmbda")(v, x)
    | 雅恩克-艾姆登 Lambda 函数，Lambdav(x) |'
- en: Zeros of Bessel functions
  id: totrans-49
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 贝塞尔函数的零点
- en: 'The following functions do not accept NumPy arrays (they are not universal
    functions):'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 不接受 NumPy 数组的以下函数（不是通用函数）：
- en: '| [`jnjnp_zeros`](generated/scipy.special.jnjnp_zeros.html#scipy.special.jnjnp_zeros
    "scipy.special.jnjnp_zeros")(nt) | Compute zeros of integer-order Bessel functions
    Jn and Jn''. |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| [`jnjnp_zeros`](generated/scipy.special.jnjnp_zeros.html#scipy.special.jnjnp_zeros
    "scipy.special.jnjnp_zeros")(nt) | 计算整数阶贝塞尔函数 Jn 和 Jn'' 的零点 |'
- en: '| [`jnyn_zeros`](generated/scipy.special.jnyn_zeros.html#scipy.special.jnyn_zeros
    "scipy.special.jnyn_zeros")(n, nt) | Compute nt zeros of Bessel functions Jn(x),
    Jn''(x), Yn(x), and Yn''(x). |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| [`jnyn_zeros`](generated/scipy.special.jnyn_zeros.html#scipy.special.jnyn_zeros
    "scipy.special.jnyn_zeros")(n, nt) | 计算贝塞尔函数 Jn(x)，Jn''(x)，Yn(x) 和 Yn''(x) 的 nt
    个零点 |'
- en: '| [`jn_zeros`](generated/scipy.special.jn_zeros.html#scipy.special.jn_zeros
    "scipy.special.jn_zeros")(n, nt) | Compute zeros of integer-order Bessel functions
    Jn. |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| [`jn_zeros`](generated/scipy.special.jn_zeros.html#scipy.special.jn_zeros
    "scipy.special.jn_zeros")(n, nt) | 计算整数阶贝塞尔函数 Jn 的零点 |'
- en: '| [`jnp_zeros`](generated/scipy.special.jnp_zeros.html#scipy.special.jnp_zeros
    "scipy.special.jnp_zeros")(n, nt) | Compute zeros of integer-order Bessel function
    derivatives Jn''. |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| [`jnp_zeros`](generated/scipy.special.jnp_zeros.html#scipy.special.jnp_zeros
    "scipy.special.jnp_zeros")(n, nt) | 计算整数阶贝塞尔函数导数 Jn'' 的零点 |'
- en: '| [`yn_zeros`](generated/scipy.special.yn_zeros.html#scipy.special.yn_zeros
    "scipy.special.yn_zeros")(n, nt) | Compute zeros of integer-order Bessel function
    Yn(x). |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| [`yn_zeros`](generated/scipy.special.yn_zeros.html#scipy.special.yn_zeros
    "scipy.special.yn_zeros")(n, nt) | 计算整数阶贝塞尔函数 Yn(x) 的零点 |'
- en: '| [`ynp_zeros`](generated/scipy.special.ynp_zeros.html#scipy.special.ynp_zeros
    "scipy.special.ynp_zeros")(n, nt) | Compute zeros of integer-order Bessel function
    derivatives Yn''(x). |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| [`ynp_zeros`](generated/scipy.special.ynp_zeros.html#scipy.special.ynp_zeros
    "scipy.special.ynp_zeros")(n, nt) | 计算整数阶贝塞尔函数导数 Yn''(x) 的零点 |'
- en: '| [`y0_zeros`](generated/scipy.special.y0_zeros.html#scipy.special.y0_zeros
    "scipy.special.y0_zeros")(nt[, complex]) | Compute nt zeros of Bessel function
    Y0(z), and derivative at each zero. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| [`y0_zeros`](generated/scipy.special.y0_zeros.html#scipy.special.y0_zeros
    "scipy.special.y0_zeros")(nt[, complex]) | 计算 Bessel 函数 Y0(z) 及其导数在每个零点处的 nt 个零点
    |'
- en: '| [`y1_zeros`](generated/scipy.special.y1_zeros.html#scipy.special.y1_zeros
    "scipy.special.y1_zeros")(nt[, complex]) | Compute nt zeros of Bessel function
    Y1(z), and derivative at each zero. |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '[`y1_zeros`](generated/scipy.special.y1_zeros.html#scipy.special.y1_zeros "scipy.special.y1_zeros")（nt[, complex]）
    | 计算贝塞尔函数 \(Y1(z)\) 的nt个零点，以及每个零点的导数。'
- en: '| [`y1p_zeros`](generated/scipy.special.y1p_zeros.html#scipy.special.y1p_zeros
    "scipy.special.y1p_zeros")(nt[, complex]) | Compute nt zeros of Bessel derivative
    Y1''(z), and value at each zero. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '[`y1p_zeros`](generated/scipy.special.y1p_zeros.html#scipy.special.y1p_zeros
    "scipy.special.y1p_zeros")（nt[, complex]） | 计算贝塞尔导数 \(Y1''(z)\) 的nt个零点，以及每个零点的值。'
- en: Faster versions of common Bessel functions
  id: totrans-60
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 常见贝塞尔函数的快速版本
- en: '| [`j0`](generated/scipy.special.j0.html#scipy.special.j0 "scipy.special.j0")(x[, out])
    | Bessel function of the first kind of order 0. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '[`j0`](generated/scipy.special.j0.html#scipy.special.j0 "scipy.special.j0")（x[, out]）
    | 第一类贝塞尔函数，阶数为0。'
- en: '| [`j1`](generated/scipy.special.j1.html#scipy.special.j1 "scipy.special.j1")(x[, out])
    | Bessel function of the first kind of order 1. |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '[`j1`](generated/scipy.special.j1.html#scipy.special.j1 "scipy.special.j1")（x[, out]）
    | 第一类贝塞尔函数，阶数为1。'
- en: '| [`y0`](generated/scipy.special.y0.html#scipy.special.y0 "scipy.special.y0")(x[, out])
    | Bessel function of the second kind of order 0. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '[`y0`](generated/scipy.special.y0.html#scipy.special.y0 "scipy.special.y0")（x[, out]）
    | 第二类贝塞尔函数，阶数为0。'
- en: '| [`y1`](generated/scipy.special.y1.html#scipy.special.y1 "scipy.special.y1")(x[, out])
    | Bessel function of the second kind of order 1. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '[`y1`](generated/scipy.special.y1.html#scipy.special.y1 "scipy.special.y1")（x[, out]）
    | 第二类贝塞尔函数，阶数为1。'
- en: '| [`i0`](generated/scipy.special.i0.html#scipy.special.i0 "scipy.special.i0")(x[, out])
    | Modified Bessel function of order 0. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '[`i0`](generated/scipy.special.i0.html#scipy.special.i0 "scipy.special.i0")（x[, out]）
    | 阶数为0的修改的贝塞尔函数。'
- en: '| [`i0e`](generated/scipy.special.i0e.html#scipy.special.i0e "scipy.special.i0e")(x[, out])
    | Exponentially scaled modified Bessel function of order 0. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '[`i0e`](generated/scipy.special.i0e.html#scipy.special.i0e "scipy.special.i0e")（x[, out]）
    | 阶数为0的指数尺度修改的贝塞尔函数。'
- en: '| [`i1`](generated/scipy.special.i1.html#scipy.special.i1 "scipy.special.i1")(x[, out])
    | Modified Bessel function of order 1. |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '[`i1`](generated/scipy.special.i1.html#scipy.special.i1 "scipy.special.i1")（x[, out]）
    | 阶数为1的修改的贝塞尔函数。'
- en: '| [`i1e`](generated/scipy.special.i1e.html#scipy.special.i1e "scipy.special.i1e")(x[, out])
    | Exponentially scaled modified Bessel function of order 1. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '[`i1e`](generated/scipy.special.i1e.html#scipy.special.i1e "scipy.special.i1e")（x[, out]）
    | 阶数为1的指数尺度修改的贝塞尔函数。'
- en: '| [`k0`](generated/scipy.special.k0.html#scipy.special.k0 "scipy.special.k0")(x[, out])
    | Modified Bessel function of the second kind of order 0, \(K_0\). |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '[`k0`](generated/scipy.special.k0.html#scipy.special.k0 "scipy.special.k0")（x[, out]）
    | 修改的第二类贝塞尔函数，阶数为0，\(K_0\)。'
- en: '| [`k0e`](generated/scipy.special.k0e.html#scipy.special.k0e "scipy.special.k0e")(x[, out])
    | Exponentially scaled modified Bessel function K of order 0 |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '[`k0e`](generated/scipy.special.k0e.html#scipy.special.k0e "scipy.special.k0e")（x[, out]）
    | 阶数为0的指数尺度修改的贝塞尔函数K。'
- en: '| [`k1`](generated/scipy.special.k1.html#scipy.special.k1 "scipy.special.k1")(x[, out])
    | Modified Bessel function of the second kind of order 1, \(K_1(x)\). |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '[`k1`](generated/scipy.special.k1.html#scipy.special.k1 "scipy.special.k1")（x[, out]）
    | 修改的第二类贝塞尔函数，阶数为1，\(K_1(x)\)。'
- en: '| [`k1e`](generated/scipy.special.k1e.html#scipy.special.k1e "scipy.special.k1e")(x[, out])
    | Exponentially scaled modified Bessel function K of order 1 |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '[`k1e`](generated/scipy.special.k1e.html#scipy.special.k1e "scipy.special.k1e")（x[, out]）
    | 阶数为1的指数尺度修改的贝塞尔函数K。'
- en: Integrals of Bessel functions
  id: totrans-73
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 贝塞尔函数的积分
- en: '| [`itj0y0`](generated/scipy.special.itj0y0.html#scipy.special.itj0y0 "scipy.special.itj0y0")(x[, out])
    | Integrals of Bessel functions of the first kind of order 0. |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '[`itj0y0`](generated/scipy.special.itj0y0.html#scipy.special.itj0y0 "scipy.special.itj0y0")（x[, out]）
    | 阶数为0的第一类贝塞尔函数的积分。'
- en: '| [`it2j0y0`](generated/scipy.special.it2j0y0.html#scipy.special.it2j0y0 "scipy.special.it2j0y0")(x[, out])
    | Integrals related to Bessel functions of the first kind of order 0. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '[`it2j0y0`](generated/scipy.special.it2j0y0.html#scipy.special.it2j0y0 "scipy.special.it2j0y0")（x[, out]）
    | 与第一类阶数为0的贝塞尔函数相关的积分。'
- en: '| [`iti0k0`](generated/scipy.special.iti0k0.html#scipy.special.iti0k0 "scipy.special.iti0k0")(x[, out])
    | Integrals of modified Bessel functions of order 0. |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '[`iti0k0`](generated/scipy.special.iti0k0.html#scipy.special.iti0k0 "scipy.special.iti0k0")（x[, out]）
    | 修改的阶数为0的贝塞尔函数的积分。'
- en: '| [`it2i0k0`](generated/scipy.special.it2i0k0.html#scipy.special.it2i0k0 "scipy.special.it2i0k0")(x[, out])
    | Integrals related to modified Bessel functions of order 0. |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '[`it2i0k0`](generated/scipy.special.it2i0k0.html#scipy.special.it2i0k0 "scipy.special.it2i0k0")（x[, out]）
    | 与修改的阶数为0的贝塞尔函数相关的积分。'
- en: '| [`besselpoly`](generated/scipy.special.besselpoly.html#scipy.special.besselpoly
    "scipy.special.besselpoly")(a, lmb, nu[, out]) | Weighted integral of the Bessel
    function of the first kind. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| [`besselpoly`](generated/scipy.special.besselpoly.html#scipy.special.besselpoly
    "scipy.special.besselpoly")(a, lmb, nu[, out]) | 第一类贝塞尔函数的加权积分。 |'
- en: Derivatives of Bessel functions
  id: totrans-79
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 贝塞尔函数的导数
- en: '| [`jvp`](generated/scipy.special.jvp.html#scipy.special.jvp "scipy.special.jvp")(v, z[, n])
    | Compute derivatives of Bessel functions of the first kind. |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| [`jvp`](generated/scipy.special.jvp.html#scipy.special.jvp "scipy.special.jvp")(v, z[, n])
    | 计算第一类贝塞尔函数的导数。 |'
- en: '| [`yvp`](generated/scipy.special.yvp.html#scipy.special.yvp "scipy.special.yvp")(v, z[, n])
    | Compute derivatives of Bessel functions of the second kind. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| [`yvp`](generated/scipy.special.yvp.html#scipy.special.yvp "scipy.special.yvp")(v, z[, n])
    | 计算第二类贝塞尔函数的导数。 |'
- en: '| [`kvp`](generated/scipy.special.kvp.html#scipy.special.kvp "scipy.special.kvp")(v, z[, n])
    | Compute derivatives of real-order modified Bessel function Kv(z) |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| [`kvp`](generated/scipy.special.kvp.html#scipy.special.kvp "scipy.special.kvp")(v, z[, n])
    | 计算修正贝塞尔函数 Kv(z) 的实数阶导数 |'
- en: '| [`ivp`](generated/scipy.special.ivp.html#scipy.special.ivp "scipy.special.ivp")(v, z[, n])
    | Compute derivatives of modified Bessel functions of the first kind. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| [`ivp`](generated/scipy.special.ivp.html#scipy.special.ivp "scipy.special.ivp")(v, z[, n])
    | 计算第一类修正贝塞尔函数的导数。 |'
- en: '| [`h1vp`](generated/scipy.special.h1vp.html#scipy.special.h1vp "scipy.special.h1vp")(v, z[, n])
    | Compute derivatives of Hankel function H1v(z) with respect to *z*. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| [`h1vp`](generated/scipy.special.h1vp.html#scipy.special.h1vp "scipy.special.h1vp")(v, z[, n])
    | 计算汉克尔函数 H1v(z) 关于 *z* 的导数。 |'
- en: '| [`h2vp`](generated/scipy.special.h2vp.html#scipy.special.h2vp "scipy.special.h2vp")(v, z[, n])
    | Compute derivatives of Hankel function H2v(z) with respect to *z*. |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| [`h2vp`](generated/scipy.special.h2vp.html#scipy.special.h2vp "scipy.special.h2vp")(v, z[, n])
    | 计算汉克尔函数 H2v(z) 关于 *z* 的导数。 |'
- en: Spherical Bessel functions
  id: totrans-86
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 球贝塞尔函数
- en: '| [`spherical_jn`](generated/scipy.special.spherical_jn.html#scipy.special.spherical_jn
    "scipy.special.spherical_jn")(n, z[, derivative]) | Spherical Bessel function
    of the first kind or its derivative. |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| [`spherical_jn`](generated/scipy.special.spherical_jn.html#scipy.special.spherical_jn
    "scipy.special.spherical_jn")(n, z[, derivative]) | 球贝塞尔函数第一类或其导数。 |'
- en: '| [`spherical_yn`](generated/scipy.special.spherical_yn.html#scipy.special.spherical_yn
    "scipy.special.spherical_yn")(n, z[, derivative]) | Spherical Bessel function
    of the second kind or its derivative. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| [`spherical_yn`](generated/scipy.special.spherical_yn.html#scipy.special.spherical_yn
    "scipy.special.spherical_yn")(n, z[, derivative]) | 球贝塞尔函数第二类或其导数。 |'
- en: '| [`spherical_in`](generated/scipy.special.spherical_in.html#scipy.special.spherical_in
    "scipy.special.spherical_in")(n, z[, derivative]) | Modified spherical Bessel
    function of the first kind or its derivative. |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| [`spherical_in`](generated/scipy.special.spherical_in.html#scipy.special.spherical_in
    "scipy.special.spherical_in")(n, z[, derivative]) | 修改的第一类球贝塞尔函数或其导数。 |'
- en: '| [`spherical_kn`](generated/scipy.special.spherical_kn.html#scipy.special.spherical_kn
    "scipy.special.spherical_kn")(n, z[, derivative]) | Modified spherical Bessel
    function of the second kind or its derivative. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| [`spherical_kn`](generated/scipy.special.spherical_kn.html#scipy.special.spherical_kn
    "scipy.special.spherical_kn")(n, z[, derivative]) | 修改的第二类球贝塞尔函数或其导数。 |'
- en: Riccati-Bessel functions
  id: totrans-91
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 里卡第-贝塞尔函数
- en: 'The following functions do not accept NumPy arrays (they are not universal
    functions):'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数不接受 NumPy 数组（它们不是通用函数）：
- en: '| [`riccati_jn`](generated/scipy.special.riccati_jn.html#scipy.special.riccati_jn
    "scipy.special.riccati_jn")(n, x) | Compute Ricatti-Bessel function of the first
    kind and its derivative. |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| [`riccati_jn`](generated/scipy.special.riccati_jn.html#scipy.special.riccati_jn
    "scipy.special.riccati_jn")(n, x) | 计算第一类里卡第-贝塞尔函数及其导数。 |'
- en: '| [`riccati_yn`](generated/scipy.special.riccati_yn.html#scipy.special.riccati_yn
    "scipy.special.riccati_yn")(n, x) | Compute Ricatti-Bessel function of the second
    kind and its derivative. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| [`riccati_yn`](generated/scipy.special.riccati_yn.html#scipy.special.riccati_yn
    "scipy.special.riccati_yn")(n, x) | 计算第二类里卡第-贝塞尔函数及其导数。 |'
- en: Struve functions
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 斯特鲁夫函数
- en: '| [`struve`](generated/scipy.special.struve.html#scipy.special.struve "scipy.special.struve")(v, x[, out])
    | Struve function. |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| [`struve`](generated/scipy.special.struve.html#scipy.special.struve "scipy.special.struve")(v, x[, out])
    | 斯特鲁夫函数。 |'
- en: '| [`modstruve`](generated/scipy.special.modstruve.html#scipy.special.modstruve
    "scipy.special.modstruve")(v, x[, out]) | Modified Struve function. |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| [`modstruve`](generated/scipy.special.modstruve.html#scipy.special.modstruve
    "scipy.special.modstruve")(v, x[, out]) | 修改斯特鲁夫函数。 |'
- en: '| [`itstruve0`](generated/scipy.special.itstruve0.html#scipy.special.itstruve0
    "scipy.special.itstruve0")(x[, out]) | Integral of the Struve function of order
    0. |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| [`itstruve0`](generated/scipy.special.itstruve0.html#scipy.special.itstruve0
    "scipy.special.itstruve0")(x[, out]) | 零阶斯特鲁夫函数的积分。 |'
- en: '| [`it2struve0`](generated/scipy.special.it2struve0.html#scipy.special.it2struve0
    "scipy.special.it2struve0")(x[, out]) | Integral related to the Struve function
    of order 0. |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| [`it2struve0`](generated/scipy.special.it2struve0.html#scipy.special.it2struve0
    "scipy.special.it2struve0")(x[, out]) | 与零阶斯特鲁夫函数相关的积分。 |'
- en: '| [`itmodstruve0`](generated/scipy.special.itmodstruve0.html#scipy.special.itmodstruve0
    "scipy.special.itmodstruve0")(x[, out]) | Integral of the modified Struve function
    of order 0. |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| [`itmodstruve0`](generated/scipy.special.itmodstruve0.html#scipy.special.itmodstruve0
    "scipy.special.itmodstruve0")(x[, out]) | 零阶修正斯特鲁夫函数的积分。 |'
- en: Raw statistical functions
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原始统计函数
- en: See also
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`scipy.stats`](stats.html#module-scipy.stats "scipy.stats"): Friendly versions
    of these functions.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.stats`](stats.html#module-scipy.stats "scipy.stats")：这些函数的友好版本。'
- en: Binomial distribution
  id: totrans-104
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 二项分布
- en: '| [`bdtr`](generated/scipy.special.bdtr.html#scipy.special.bdtr "scipy.special.bdtr")(k, n, p[, out])
    | Binomial distribution cumulative distribution function. |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| [`bdtr`](generated/scipy.special.bdtr.html#scipy.special.bdtr "scipy.special.bdtr")(k, n, p[, out])
    | 二项分布累积分布函数。 |'
- en: '| [`bdtrc`](generated/scipy.special.bdtrc.html#scipy.special.bdtrc "scipy.special.bdtrc")(k, n, p[, out])
    | Binomial distribution survival function. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| [`bdtrc`](generated/scipy.special.bdtrc.html#scipy.special.bdtrc "scipy.special.bdtrc")(k, n, p[, out])
    | 二项分布生存函数。 |'
- en: '| [`bdtri`](generated/scipy.special.bdtri.html#scipy.special.bdtri "scipy.special.bdtri")(k, n, y[, out])
    | Inverse function to [`bdtr`](generated/scipy.special.bdtr.html#scipy.special.bdtr
    "scipy.special.bdtr") with respect to *p*. |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| [`bdtri`](generated/scipy.special.bdtri.html#scipy.special.bdtri "scipy.special.bdtri")(k, n, y[, out])
    | 相对于 *p* 的逆函数，与 [`bdtr`](generated/scipy.special.bdtr.html#scipy.special.bdtr
    "scipy.special.bdtr") 相关。 |'
- en: '| [`bdtrik`](generated/scipy.special.bdtrik.html#scipy.special.bdtrik "scipy.special.bdtrik")(y, n, p[, out])
    | Inverse function to [`bdtr`](generated/scipy.special.bdtr.html#scipy.special.bdtr
    "scipy.special.bdtr") with respect to *k*. |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| [`bdtrik`](generated/scipy.special.bdtrik.html#scipy.special.bdtrik "scipy.special.bdtrik")(y, n, p[, out])
    | 相对于 *k* 的逆函数，与 [`bdtr`](generated/scipy.special.bdtr.html#scipy.special.bdtr
    "scipy.special.bdtr") 相关。 |'
- en: '| [`bdtrin`](generated/scipy.special.bdtrin.html#scipy.special.bdtrin "scipy.special.bdtrin")(k, y, p[, out])
    | Inverse function to [`bdtr`](generated/scipy.special.bdtr.html#scipy.special.bdtr
    "scipy.special.bdtr") with respect to *n*. |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| [`bdtrin`](generated/scipy.special.bdtrin.html#scipy.special.bdtrin "scipy.special.bdtrin")(k, y, p[, out])
    | 相对于 *n* 的逆函数，与 [`bdtr`](generated/scipy.special.bdtr.html#scipy.special.bdtr
    "scipy.special.bdtr") 相关。 |'
- en: Beta distribution
  id: totrans-110
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Beta 分布
- en: '| [`btdtr`](generated/scipy.special.btdtr.html#scipy.special.btdtr "scipy.special.btdtr")(a, b, x[, out])
    | Cumulative distribution function of the beta distribution. |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| [`btdtr`](generated/scipy.special.btdtr.html#scipy.special.btdtr "scipy.special.btdtr")(a, b, x[, out])
    | Beta 分布的累积分布函数。 |'
- en: '| [`btdtri`](generated/scipy.special.btdtri.html#scipy.special.btdtri "scipy.special.btdtri")(a, b, p[, out])
    | The *p*-th quantile of the beta distribution. |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| [`btdtri`](generated/scipy.special.btdtri.html#scipy.special.btdtri "scipy.special.btdtri")(a, b, p[, out])
    | Beta 分布的第 *p* 个分位数。 |'
- en: '| [`btdtria`](generated/scipy.special.btdtria.html#scipy.special.btdtria "scipy.special.btdtria")(p, b, x[, out])
    | Inverse of [`btdtr`](generated/scipy.special.btdtr.html#scipy.special.btdtr
    "scipy.special.btdtr") with respect to *a*. |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| [`btdtria`](generated/scipy.special.btdtria.html#scipy.special.btdtria "scipy.special.btdtria")(p, b, x[, out])
    | 相对于 *a* 的逆函数，与 [`btdtr`](generated/scipy.special.btdtr.html#scipy.special.btdtr
    "scipy.special.btdtr") 相关。 |'
- en: '| [`btdtrib`](generated/scipy.special.btdtrib.html#scipy.special.btdtrib "scipy.special.btdtrib")(a, p, x[, out])
    | Inverse of [`btdtr`](generated/scipy.special.btdtr.html#scipy.special.btdtr
    "scipy.special.btdtr") with respect to *b*. |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| [`btdtrib`](generated/scipy.special.btdtrib.html#scipy.special.btdtrib "scipy.special.btdtrib")(a, p, x[, out])
    | 相对于 *b* 的逆函数，与 [`btdtr`](generated/scipy.special.btdtr.html#scipy.special.btdtr
    "scipy.special.btdtr") 相关。 |'
- en: F distribution
  id: totrans-115
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: F 分布
- en: '| [`fdtr`](generated/scipy.special.fdtr.html#scipy.special.fdtr "scipy.special.fdtr")(dfn, dfd, x[, out])
    | F cumulative distribution function. |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| [`fdtr`](generated/scipy.special.fdtr.html#scipy.special.fdtr "scipy.special.fdtr")(dfn, dfd, x[, out])
    | F 分布累积分布函数。 |'
- en: '| [`fdtrc`](generated/scipy.special.fdtrc.html#scipy.special.fdtrc "scipy.special.fdtrc")(dfn, dfd, x[, out])
    | F survival function. |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| [`fdtrc`](generated/scipy.special.fdtrc.html#scipy.special.fdtrc "scipy.special.fdtrc")(dfn, dfd, x[, out])
    | F 分布生存函数。 |'
- en: '| [`fdtri`](generated/scipy.special.fdtri.html#scipy.special.fdtri "scipy.special.fdtri")(dfn, dfd, p[, out])
    | The *p*-th quantile of the F-distribution. |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| [`fdtri`](generated/scipy.special.fdtri.html#scipy.special.fdtri "scipy.special.fdtri")(dfn, dfd, p[, out])
    | F 分布的第 *p* 个分位数。 |'
- en: '| [`fdtridfd`](generated/scipy.special.fdtridfd.html#scipy.special.fdtridfd
    "scipy.special.fdtridfd")(dfn, p, x[, out]) | Inverse to [`fdtr`](generated/scipy.special.fdtr.html#scipy.special.fdtr
    "scipy.special.fdtr") vs dfd |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| [`fdtridfd`](generated/scipy.special.fdtridfd.html#scipy.special.fdtridfd
    "scipy.special.fdtridfd")(dfn, p, x[, out]) | [`fdtr`](generated/scipy.special.fdtr.html#scipy.special.fdtr
    "scipy.special.fdtr") 的逆函数，关于 dfd 的。 |'
- en: Gamma distribution
  id: totrans-120
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Gamma 分布
- en: '| [`gdtr`](generated/scipy.special.gdtr.html#scipy.special.gdtr "scipy.special.gdtr")(a, b, x[, out])
    | Gamma distribution cumulative distribution function. |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| [`gdtr`](generated/scipy.special.gdtr.html#scipy.special.gdtr "scipy.special.gdtr")(a, b, x[, out])
    | Gamma 分布累积分布函数。 |'
- en: '| [`gdtrc`](generated/scipy.special.gdtrc.html#scipy.special.gdtrc "scipy.special.gdtrc")(a, b, x[, out])
    | Gamma distribution survival function. |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| [`gdtrc`](generated/scipy.special.gdtrc.html#scipy.special.gdtrc "scipy.special.gdtrc")(a, b, x[, out])
    | Gamma 分布生存函数。 |'
- en: '| [`gdtria`](generated/scipy.special.gdtria.html#scipy.special.gdtria "scipy.special.gdtria")(p, b, x[, out])
    | Inverse of [`gdtr`](generated/scipy.special.gdtr.html#scipy.special.gdtr "scipy.special.gdtr")
    vs a. |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| [`gdtria`](generated/scipy.special.gdtria.html#scipy.special.gdtria "scipy.special.gdtria")(p, b, x[, out])
    | [`gdtr`](generated/scipy.special.gdtr.html#scipy.special.gdtr "scipy.special.gdtr")
    的逆函数，关于 a 的。 |'
- en: '| [`gdtrib`](generated/scipy.special.gdtrib.html#scipy.special.gdtrib "scipy.special.gdtrib")(a, p, x[, out])
    | Inverse of [`gdtr`](generated/scipy.special.gdtr.html#scipy.special.gdtr "scipy.special.gdtr")
    vs b. |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| [`gdtrib`](generated/scipy.special.gdtrib.html#scipy.special.gdtrib "scipy.special.gdtrib")(a, p, x[, out])
    | [`gdtr`](generated/scipy.special.gdtr.html#scipy.special.gdtr "scipy.special.gdtr")
    的逆函数，关于 b 的。 |'
- en: '| [`gdtrix`](generated/scipy.special.gdtrix.html#scipy.special.gdtrix "scipy.special.gdtrix")(a, b, p[, out])
    | Inverse of [`gdtr`](generated/scipy.special.gdtr.html#scipy.special.gdtr "scipy.special.gdtr")
    vs x. |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| [`gdtrix`](generated/scipy.special.gdtrix.html#scipy.special.gdtrix "scipy.special.gdtrix")(a, b, p[, out])
    | [`gdtr`](generated/scipy.special.gdtr.html#scipy.special.gdtr "scipy.special.gdtr")
    的逆函数，关于 x 的。 |'
- en: Negative binomial distribution
  id: totrans-126
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 负二项分布
- en: '| [`nbdtr`](generated/scipy.special.nbdtr.html#scipy.special.nbdtr "scipy.special.nbdtr")(k, n, p[, out])
    | Negative binomial cumulative distribution function. |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| [`nbdtr`](generated/scipy.special.nbdtr.html#scipy.special.nbdtr "scipy.special.nbdtr")(k, n, p[, out])
    | 负二项分布累积分布函数。 |'
- en: '| [`nbdtrc`](generated/scipy.special.nbdtrc.html#scipy.special.nbdtrc "scipy.special.nbdtrc")(k, n, p[, out])
    | Negative binomial survival function. |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| [`nbdtrc`](generated/scipy.special.nbdtrc.html#scipy.special.nbdtrc "scipy.special.nbdtrc")(k, n, p[, out])
    | 负二项分布生存函数。 |'
- en: '| [`nbdtri`](generated/scipy.special.nbdtri.html#scipy.special.nbdtri "scipy.special.nbdtri")(k, n, y[, out])
    | Returns the inverse with respect to the parameter *p* of *y = nbdtr(k, n, p)*,
    the negative binomial cumulative distribution function. |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| [`nbdtri`](generated/scipy.special.nbdtri.html#scipy.special.nbdtri "scipy.special.nbdtri")(k, n, y[, out])
    | 对于参数 *p*，返回满足 *y = nbdtr(k, n, p)* 的逆函数，负二项分布累积分布函数。 |'
- en: '| [`nbdtrik`](generated/scipy.special.nbdtrik.html#scipy.special.nbdtrik "scipy.special.nbdtrik")(y, n, p[, out])
    | Negative binomial percentile function. |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| [`nbdtrik`](generated/scipy.special.nbdtrik.html#scipy.special.nbdtrik "scipy.special.nbdtrik")(y, n, p[, out])
    | 负二项分布百分位函数。 |'
- en: '| [`nbdtrin`](generated/scipy.special.nbdtrin.html#scipy.special.nbdtrin "scipy.special.nbdtrin")(k, y, p[, out])
    | Inverse of [`nbdtr`](generated/scipy.special.nbdtr.html#scipy.special.nbdtr
    "scipy.special.nbdtr") vs *n*. |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| [`nbdtrin`](generated/scipy.special.nbdtrin.html#scipy.special.nbdtrin "scipy.special.nbdtrin")(k, y, p[, out])
    | [`nbdtr`](generated/scipy.special.nbdtr.html#scipy.special.nbdtr "scipy.special.nbdtr")
    的逆函数，关于 *n* 的。 |'
- en: Noncentral F distribution
  id: totrans-132
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 非中心 F 分布
- en: '| [`ncfdtr`](generated/scipy.special.ncfdtr.html#scipy.special.ncfdtr "scipy.special.ncfdtr")(dfn, dfd, nc, f[, out])
    | Cumulative distribution function of the non-central F distribution. |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| [`ncfdtr`](generated/scipy.special.ncfdtr.html#scipy.special.ncfdtr "scipy.special.ncfdtr")(dfn, dfd, nc, f[, out])
    | 非中心 F 分布的累积分布函数。 |'
- en: '| [`ncfdtridfd`](generated/scipy.special.ncfdtridfd.html#scipy.special.ncfdtridfd
    "scipy.special.ncfdtridfd")(dfn, p, nc, f[, out]) | Calculate degrees of freedom
    (denominator) for the noncentral F-distribution. |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| [`ncfdtridfd`](generated/scipy.special.ncfdtridfd.html#scipy.special.ncfdtridfd
    "scipy.special.ncfdtridfd")(dfn, p, nc, f[, out]) | 计算非中心 F 分布的自由度（分母部分）。 |'
- en: '| [`ncfdtridfn`](generated/scipy.special.ncfdtridfn.html#scipy.special.ncfdtridfn
    "scipy.special.ncfdtridfn")(p, dfd, nc, f[, out]) | Calculate degrees of freedom
    (numerator) for the noncentral F-distribution. |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| [`ncfdtridfn`](generated/scipy.special.ncfdtridfn.html#scipy.special.ncfdtridfn
    "scipy.special.ncfdtridfn")(p, dfd, nc, f[, out]) | 计算非中心 F 分布的自由度（分子部分）。 |'
- en: '| [`ncfdtri`](generated/scipy.special.ncfdtri.html#scipy.special.ncfdtri "scipy.special.ncfdtri")(dfn, dfd, nc, p[, out])
    | Inverse with respect to *f* of the CDF of the non-central F distribution. |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| [`ncfdtri`](generated/scipy.special.ncfdtri.html#scipy.special.ncfdtri "scipy.special.ncfdtri")(dfn, dfd, nc, p[, out])
    | 非中心*F*分布的累积分布函数的反函数。 |'
- en: '| [`ncfdtrinc`](generated/scipy.special.ncfdtrinc.html#scipy.special.ncfdtrinc
    "scipy.special.ncfdtrinc")(dfn, dfd, p, f[, out]) | Calculate non-centrality parameter
    for non-central F distribution. |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| [`ncfdtrinc`](generated/scipy.special.ncfdtrinc.html#scipy.special.ncfdtrinc
    "scipy.special.ncfdtrinc")(dfn, dfd, p, f[, out]) | 计算非中心*F*分布的非中心参数。 |'
- en: Noncentral t distribution
  id: totrans-138
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 非中心*t*分布
- en: '| [`nctdtr`](generated/scipy.special.nctdtr.html#scipy.special.nctdtr "scipy.special.nctdtr")(df, nc, t[, out])
    | Cumulative distribution function of the non-central *t* distribution. |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| [`nctdtr`](generated/scipy.special.nctdtr.html#scipy.special.nctdtr "scipy.special.nctdtr")(df, nc, t[, out])
    | 非中心*t*分布的累积分布函数。 |'
- en: '| [`nctdtridf`](generated/scipy.special.nctdtridf.html#scipy.special.nctdtridf
    "scipy.special.nctdtridf")(p, nc, t[, out]) | Calculate degrees of freedom for
    non-central t distribution. |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| [`nctdtridf`](generated/scipy.special.nctdtridf.html#scipy.special.nctdtridf
    "scipy.special.nctdtridf")(p, nc, t[, out]) | 计算非中心*t*分布的自由度。 |'
- en: '| [`nctdtrit`](generated/scipy.special.nctdtrit.html#scipy.special.nctdtrit
    "scipy.special.nctdtrit")(df, nc, p[, out]) | Inverse cumulative distribution
    function of the non-central t distribution. |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| [`nctdtrit`](generated/scipy.special.nctdtrit.html#scipy.special.nctdtrit
    "scipy.special.nctdtrit")(df, nc, p[, out]) | 非中心*t*分布的累积分布函数的反函数。 |'
- en: '| [`nctdtrinc`](generated/scipy.special.nctdtrinc.html#scipy.special.nctdtrinc
    "scipy.special.nctdtrinc")(df, p, t[, out]) | Calculate non-centrality parameter
    for non-central t distribution. |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| [`nctdtrinc`](generated/scipy.special.nctdtrinc.html#scipy.special.nctdtrinc
    "scipy.special.nctdtrinc")(df, p, t[, out]) | 计算非中心*t*分布的非中心参数。 |'
- en: Normal distribution
  id: totrans-143
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 正态分布
- en: '| [`nrdtrimn`](generated/scipy.special.nrdtrimn.html#scipy.special.nrdtrimn
    "scipy.special.nrdtrimn")(p, x, std[, out]) | Calculate mean of normal distribution
    given other params. |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| [`nrdtrimn`](generated/scipy.special.nrdtrimn.html#scipy.special.nrdtrimn
    "scipy.special.nrdtrimn")(p, x, std[, out]) | 给定其他参数计算正态分布的均值。 |'
- en: '| [`nrdtrisd`](generated/scipy.special.nrdtrisd.html#scipy.special.nrdtrisd
    "scipy.special.nrdtrisd")(p, x, mn[, out]) | Calculate standard deviation of normal
    distribution given other params. |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| [`nrdtrisd`](generated/scipy.special.nrdtrisd.html#scipy.special.nrdtrisd
    "scipy.special.nrdtrisd")(p, x, mn[, out]) | 给定其他参数计算正态分布的标准差。 |'
- en: '| [`ndtr`](generated/scipy.special.ndtr.html#scipy.special.ndtr "scipy.special.ndtr")(x[, out])
    | Cumulative distribution of the standard normal distribution. |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| [`ndtr`](generated/scipy.special.ndtr.html#scipy.special.ndtr "scipy.special.ndtr")(x[, out])
    | 标准正态分布的累积分布函数。 |'
- en: '| [`log_ndtr`](generated/scipy.special.log_ndtr.html#scipy.special.log_ndtr
    "scipy.special.log_ndtr")(x[, out]) | Logarithm of Gaussian cumulative distribution
    function. |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| [`log_ndtr`](generated/scipy.special.log_ndtr.html#scipy.special.log_ndtr
    "scipy.special.log_ndtr")(x[, out]) | 高斯累积分布函数的对数。 |'
- en: '| [`ndtri`](generated/scipy.special.ndtri.html#scipy.special.ndtri "scipy.special.ndtri")(y[, out])
    | Inverse of [`ndtr`](generated/scipy.special.ndtr.html#scipy.special.ndtr "scipy.special.ndtr")
    vs x |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| [`ndtri`](generated/scipy.special.ndtri.html#scipy.special.ndtri "scipy.special.ndtri")(y[, out])
    | [`ndtr`](generated/scipy.special.ndtr.html#scipy.special.ndtr "scipy.special.ndtr")的逆函数，对应于x。
    |'
- en: '| [`ndtri_exp`](generated/scipy.special.ndtri_exp.html#scipy.special.ndtri_exp
    "scipy.special.ndtri_exp")(y[, out]) | Inverse of [`log_ndtr`](generated/scipy.special.log_ndtr.html#scipy.special.log_ndtr
    "scipy.special.log_ndtr") vs x. |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| [`ndtri_exp`](generated/scipy.special.ndtri_exp.html#scipy.special.ndtri_exp
    "scipy.special.ndtri_exp")(y[, out]) | [`log_ndtr`](generated/scipy.special.log_ndtr.html#scipy.special.log_ndtr
    "scipy.special.log_ndtr")的逆函数，对应于x。 |'
- en: Poisson distribution
  id: totrans-150
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 泊松分布
- en: '| [`pdtr`](generated/scipy.special.pdtr.html#scipy.special.pdtr "scipy.special.pdtr")(k, m[, out])
    | Poisson cumulative distribution function. |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| [`pdtr`](generated/scipy.special.pdtr.html#scipy.special.pdtr "scipy.special.pdtr")(k, m[, out])
    | 泊松分布的累积分布函数。 |'
- en: '| [`pdtrc`](generated/scipy.special.pdtrc.html#scipy.special.pdtrc "scipy.special.pdtrc")(k, m[, out])
    | Poisson survival function |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| [`pdtrc`](generated/scipy.special.pdtrc.html#scipy.special.pdtrc "scipy.special.pdtrc")(k, m[, out])
    | 泊松分布的生存函数。 |'
- en: '| [`pdtri`](generated/scipy.special.pdtri.html#scipy.special.pdtri "scipy.special.pdtri")(k, y[, out])
    | Inverse to [`pdtr`](generated/scipy.special.pdtr.html#scipy.special.pdtr "scipy.special.pdtr")
    vs m |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| [`pdtri`](generated/scipy.special.pdtri.html#scipy.special.pdtri "scipy.special.pdtri")(k, y[, out])
    | [`pdtr`](generated/scipy.special.pdtr.html#scipy.special.pdtr "scipy.special.pdtr")的逆函数，对应于m。
    |'
- en: '| [`pdtrik`](generated/scipy.special.pdtrik.html#scipy.special.pdtrik "scipy.special.pdtrik")(p, m[, out])
    | Inverse to [`pdtr`](generated/scipy.special.pdtr.html#scipy.special.pdtr "scipy.special.pdtr")
    vs *m*. |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| [`pdtrik`](generated/scipy.special.pdtrik.html#scipy.special.pdtrik "scipy.special.pdtrik")(p, m[, out])
    | [`pdtr`](generated/scipy.special.pdtr.html#scipy.special.pdtr "scipy.special.pdtr")
    的反函数，对应 *m*。 |'
- en: Student t distribution
  id: totrans-155
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 学生 t 分布
- en: '| [`stdtr`](generated/scipy.special.stdtr.html#scipy.special.stdtr "scipy.special.stdtr")(df, t[, out])
    | Student t distribution cumulative distribution function |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| [`stdtr`](generated/scipy.special.stdtr.html#scipy.special.stdtr "scipy.special.stdtr")(df, t[, out])
    | 学生 t 分布累积分布函数 |'
- en: '| [`stdtridf`](generated/scipy.special.stdtridf.html#scipy.special.stdtridf
    "scipy.special.stdtridf")(p, t[, out]) | Inverse of [`stdtr`](generated/scipy.special.stdtr.html#scipy.special.stdtr
    "scipy.special.stdtr") vs df |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| [`stdtridf`](generated/scipy.special.stdtridf.html#scipy.special.stdtridf
    "scipy.special.stdtridf")(p, t[, out]) | [`stdtr`](generated/scipy.special.stdtr.html#scipy.special.stdtr
    "scipy.special.stdtr") 的反函数，对应 df |'
- en: '| [`stdtrit`](generated/scipy.special.stdtrit.html#scipy.special.stdtrit "scipy.special.stdtrit")(df, p[, out])
    | The *p*-th quantile of the student t distribution. |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| [`stdtrit`](generated/scipy.special.stdtrit.html#scipy.special.stdtrit "scipy.special.stdtrit")(df, p[, out])
    | 学生 t 分布的第 *p* 个分位数。 |'
- en: Chi square distribution
  id: totrans-159
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 卡方分布
- en: '| [`chdtr`](generated/scipy.special.chdtr.html#scipy.special.chdtr "scipy.special.chdtr")(v, x[, out])
    | Chi square cumulative distribution function. |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| [`chdtr`](generated/scipy.special.chdtr.html#scipy.special.chdtr "scipy.special.chdtr")(v, x[, out])
    | 卡方分布累积分布函数。 |'
- en: '| [`chdtrc`](generated/scipy.special.chdtrc.html#scipy.special.chdtrc "scipy.special.chdtrc")(v, x[, out])
    | Chi square survival function. |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| [`chdtrc`](generated/scipy.special.chdtrc.html#scipy.special.chdtrc "scipy.special.chdtrc")(v, x[, out])
    | 卡方生存函数。 |'
- en: '| [`chdtri`](generated/scipy.special.chdtri.html#scipy.special.chdtri "scipy.special.chdtri")(v, p[, out])
    | Inverse to [`chdtrc`](generated/scipy.special.chdtrc.html#scipy.special.chdtrc
    "scipy.special.chdtrc") with respect to *x*. |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| [`chdtri`](generated/scipy.special.chdtri.html#scipy.special.chdtri "scipy.special.chdtri")(v, p[, out])
    | [`chdtrc`](generated/scipy.special.chdtrc.html#scipy.special.chdtrc "scipy.special.chdtrc")
    的反函数，对应 *x*。 |'
- en: '| [`chdtriv`](generated/scipy.special.chdtriv.html#scipy.special.chdtriv "scipy.special.chdtriv")(p, x[, out])
    | Inverse to [`chdtr`](generated/scipy.special.chdtr.html#scipy.special.chdtr
    "scipy.special.chdtr") with respect to *v*. |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| [`chdtriv`](generated/scipy.special.chdtriv.html#scipy.special.chdtriv "scipy.special.chdtriv")(p, x[, out])
    | [`chdtr`](generated/scipy.special.chdtr.html#scipy.special.chdtr "scipy.special.chdtr")
    的反函数，对应 *v*。 |'
- en: Non-central chi square distribution
  id: totrans-164
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 非中心卡方分布
- en: '| [`chndtr`](generated/scipy.special.chndtr.html#scipy.special.chndtr "scipy.special.chndtr")(x, df, nc[, out])
    | Non-central chi square cumulative distribution function |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
  zh: '| [`chndtr`](generated/scipy.special.chndtr.html#scipy.special.chndtr "scipy.special.chndtr")(x, df, nc[, out])
    | 非中心卡方累积分布函数 |'
- en: '| [`chndtridf`](generated/scipy.special.chndtridf.html#scipy.special.chndtridf
    "scipy.special.chndtridf")(x, p, nc[, out]) | Inverse to [`chndtr`](generated/scipy.special.chndtr.html#scipy.special.chndtr
    "scipy.special.chndtr") vs *df* |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
  zh: '| [`chndtridf`](generated/scipy.special.chndtridf.html#scipy.special.chndtridf
    "scipy.special.chndtridf")(x, p, nc[, out]) | [`chndtr`](generated/scipy.special.chndtr.html#scipy.special.chndtr
    "scipy.special.chndtr") 的反函数，对应 *df* |'
- en: '| [`chndtrinc`](generated/scipy.special.chndtrinc.html#scipy.special.chndtrinc
    "scipy.special.chndtrinc")(x, df, p[, out]) | Inverse to [`chndtr`](generated/scipy.special.chndtr.html#scipy.special.chndtr
    "scipy.special.chndtr") vs *nc* |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
  zh: '| [`chndtrinc`](generated/scipy.special.chndtrinc.html#scipy.special.chndtrinc
    "scipy.special.chndtrinc")(x, df, p[, out]) | [`chndtr`](generated/scipy.special.chndtr.html#scipy.special.chndtr
    "scipy.special.chndtr") 的反函数，对应 *nc*。 |'
- en: '| [`chndtrix`](generated/scipy.special.chndtrix.html#scipy.special.chndtrix
    "scipy.special.chndtrix")(p, df, nc[, out]) | Inverse to [`chndtr`](generated/scipy.special.chndtr.html#scipy.special.chndtr
    "scipy.special.chndtr") vs *x* |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| [`chndtrix`](generated/scipy.special.chndtrix.html#scipy.special.chndtrix
    "scipy.special.chndtrix")(p, df, nc[, out]) | [`chndtr`](generated/scipy.special.chndtr.html#scipy.special.chndtr
    "scipy.special.chndtr") 的反函数，对应 *x* |'
- en: Kolmogorov distribution
  id: totrans-169
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Kolmogorov 分布
- en: '| [`smirnov`](generated/scipy.special.smirnov.html#scipy.special.smirnov "scipy.special.smirnov")(n, d[, out])
    | Kolmogorov-Smirnov complementary cumulative distribution function |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '| [`smirnov`](generated/scipy.special.smirnov.html#scipy.special.smirnov "scipy.special.smirnov")(n, d[, out])
    | Kolmogorov-Smirnov 补充累积分布函数 |'
- en: '| [`smirnovi`](generated/scipy.special.smirnovi.html#scipy.special.smirnovi
    "scipy.special.smirnovi")(n, p[, out]) | Inverse to [`smirnov`](generated/scipy.special.smirnov.html#scipy.special.smirnov
    "scipy.special.smirnov") |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
  zh: '| [`smirnovi`](generated/scipy.special.smirnovi.html#scipy.special.smirnovi
    "scipy.special.smirnovi")(n, p[, out]) | [`smirnov`](generated/scipy.special.smirnov.html#scipy.special.smirnov
    "scipy.special.smirnov") 的反函数 |'
- en: '| [`kolmogorov`](generated/scipy.special.kolmogorov.html#scipy.special.kolmogorov
    "scipy.special.kolmogorov")(y[, out]) | Complementary cumulative distribution
    (Survival Function) function of Kolmogorov distribution. |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
  zh: '| [`kolmogorov`](generated/scipy.special.kolmogorov.html#scipy.special.kolmogorov
    "scipy.special.kolmogorov")(y[, out]) | Kolmogorov 分布的补余累积分布（生存函数）。 |'
- en: '| [`kolmogi`](generated/scipy.special.kolmogi.html#scipy.special.kolmogi "scipy.special.kolmogi")(p[, out])
    | Inverse Survival Function of Kolmogorov distribution |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
  zh: '| [`kolmogi`](generated/scipy.special.kolmogi.html#scipy.special.kolmogi "scipy.special.kolmogi")(p[, out])
    | Kolmogorov 分布的逆生存函数。 |'
- en: Box-Cox transformation
  id: totrans-174
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Box-Cox 变换
- en: '| [`boxcox`](generated/scipy.special.boxcox.html#scipy.special.boxcox "scipy.special.boxcox")(x, lmbda[, out])
    | Compute the Box-Cox transformation. |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| [`boxcox`](generated/scipy.special.boxcox.html#scipy.special.boxcox "scipy.special.boxcox")(x, lmbda[, out])
    | 计算 Box-Cox 变换。 |'
- en: '| [`boxcox1p`](generated/scipy.special.boxcox1p.html#scipy.special.boxcox1p
    "scipy.special.boxcox1p")(x, lmbda[, out]) | Compute the Box-Cox transformation
    of 1 + *x*. |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '| [`boxcox1p`](generated/scipy.special.boxcox1p.html#scipy.special.boxcox1p
    "scipy.special.boxcox1p")(x, lmbda[, out]) | 计算 1 + *x* 的 Box-Cox 变换。 |'
- en: '| [`inv_boxcox`](generated/scipy.special.inv_boxcox.html#scipy.special.inv_boxcox
    "scipy.special.inv_boxcox")(y, lmbda[, out]) | Compute the inverse of the Box-Cox
    transformation. |'
  id: totrans-177
  prefs: []
  type: TYPE_TB
  zh: '| [`inv_boxcox`](generated/scipy.special.inv_boxcox.html#scipy.special.inv_boxcox
    "scipy.special.inv_boxcox")(y, lmbda[, out]) | 计算 Box-Cox 变换的逆。 |'
- en: '| [`inv_boxcox1p`](generated/scipy.special.inv_boxcox1p.html#scipy.special.inv_boxcox1p
    "scipy.special.inv_boxcox1p")(y, lmbda[, out]) | Compute the inverse of the Box-Cox
    transformation. |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '| [`inv_boxcox1p`](generated/scipy.special.inv_boxcox1p.html#scipy.special.inv_boxcox1p
    "scipy.special.inv_boxcox1p")(y, lmbda[, out]) | 计算 Box-Cox 变换的逆。 |'
- en: Sigmoidal functions
  id: totrans-179
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Sigmoid 函数
- en: '| [`logit`](generated/scipy.special.logit.html#scipy.special.logit "scipy.special.logit")(x[, out])
    | Logit ufunc for ndarrays. |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
  zh: '| [`logit`](generated/scipy.special.logit.html#scipy.special.logit "scipy.special.logit")(x[, out])
    | ndarrays 的 Logit 函数。 |'
- en: '| [`expit`](generated/scipy.special.expit.html#scipy.special.expit "scipy.special.expit")(x[, out])
    | Expit (a.k.a. |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '| [`expit`](generated/scipy.special.expit.html#scipy.special.expit "scipy.special.expit")(x[, out])
    | Expit 函数（又名 logistic 函数）。 |'
- en: '| [`log_expit`](generated/scipy.special.log_expit.html#scipy.special.log_expit
    "scipy.special.log_expit")(x[, out]) | Logarithm of the logistic sigmoid function.
    |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
  zh: '| [`log_expit`](generated/scipy.special.log_expit.html#scipy.special.log_expit
    "scipy.special.log_expit")(x[, out]) | Logistic sigmoid 函数的对数。 |'
- en: Miscellaneous
  id: totrans-183
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Miscellaneous
- en: '| [`tklmbda`](generated/scipy.special.tklmbda.html#scipy.special.tklmbda "scipy.special.tklmbda")(x, lmbda[, out])
    | Cumulative distribution function of the Tukey lambda distribution. |'
  id: totrans-184
  prefs: []
  type: TYPE_TB
  zh: '| [`tklmbda`](generated/scipy.special.tklmbda.html#scipy.special.tklmbda "scipy.special.tklmbda")(x, lmbda[, out])
    | Tukey lambda 分布的累积分布函数。 |'
- en: '| [`owens_t`](generated/scipy.special.owens_t.html#scipy.special.owens_t "scipy.special.owens_t")(h, a[, out])
    | Owen''s T Function. |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| [`owens_t`](generated/scipy.special.owens_t.html#scipy.special.owens_t "scipy.special.owens_t")(h, a[, out])
    | Owen''s T 函数。 |'
- en: Information Theory functions
  id: totrans-186
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 信息理论函数
- en: '| [`entr`](generated/scipy.special.entr.html#scipy.special.entr "scipy.special.entr")(x[, out])
    | Elementwise function for computing entropy. |'
  id: totrans-187
  prefs: []
  type: TYPE_TB
  zh: '| [`entr`](generated/scipy.special.entr.html#scipy.special.entr "scipy.special.entr")(x[, out])
    | 计算熵的逐元素函数。 |'
- en: '| [`rel_entr`](generated/scipy.special.rel_entr.html#scipy.special.rel_entr
    "scipy.special.rel_entr")(x, y[, out]) | Elementwise function for computing relative
    entropy. |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
  zh: '| [`rel_entr`](generated/scipy.special.rel_entr.html#scipy.special.rel_entr
    "scipy.special.rel_entr")(x, y[, out]) | 计算相对熵的逐元素函数。 |'
- en: '| [`kl_div`](generated/scipy.special.kl_div.html#scipy.special.kl_div "scipy.special.kl_div")(x, y[, out])
    | Elementwise function for computing Kullback-Leibler divergence. |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| [`kl_div`](generated/scipy.special.kl_div.html#scipy.special.kl_div "scipy.special.kl_div")(x, y[, out])
    | 计算 Kullback-Leibler 散度的逐元素函数。 |'
- en: '| [`huber`](generated/scipy.special.huber.html#scipy.special.huber "scipy.special.huber")(delta, r[, out])
    | Huber loss function. |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| [`huber`](generated/scipy.special.huber.html#scipy.special.huber "scipy.special.huber")(delta, r[, out])
    | Huber 损失函数。 |'
- en: '| [`pseudo_huber`](generated/scipy.special.pseudo_huber.html#scipy.special.pseudo_huber
    "scipy.special.pseudo_huber")(delta, r[, out]) | Pseudo-Huber loss function. |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| [`pseudo_huber`](generated/scipy.special.pseudo_huber.html#scipy.special.pseudo_huber
    "scipy.special.pseudo_huber")(delta, r[, out]) | 伪-Huber 损失函数。 |'
- en: Gamma and related functions
  id: totrans-192
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Gamma 和相关函数
- en: '| [`gamma`](generated/scipy.special.gamma.html#scipy.special.gamma "scipy.special.gamma")(z[, out])
    | gamma function. |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| [`gamma`](generated/scipy.special.gamma.html#scipy.special.gamma "scipy.special.gamma")(z[, out])
    | gamma 函数。 |'
- en: '| [`gammaln`](generated/scipy.special.gammaln.html#scipy.special.gammaln "scipy.special.gammaln")(x[, out])
    | Logarithm of the absolute value of the gamma function. |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| [`gammaln`](generated/scipy.special.gammaln.html#scipy.special.gammaln "scipy.special.gammaln")(x[, out])
    | gamma 函数的绝对值的对数。 |'
- en: '| [`loggamma`](generated/scipy.special.loggamma.html#scipy.special.loggamma
    "scipy.special.loggamma")(z[, out]) | Principal branch of the logarithm of the
    gamma function. |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '[`loggamma`](generated/scipy.special.loggamma.html#scipy.special.loggamma "scipy.special.loggamma")(z[, out])
    | 伽马函数的主分支对数。'
- en: '| [`gammasgn`](generated/scipy.special.gammasgn.html#scipy.special.gammasgn
    "scipy.special.gammasgn")(x[, out]) | Sign of the gamma function. |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '[`gammasgn`](generated/scipy.special.gammasgn.html#scipy.special.gammasgn "scipy.special.gammasgn")(x[, out])
    | 伽马函数的符号。'
- en: '| [`gammainc`](generated/scipy.special.gammainc.html#scipy.special.gammainc
    "scipy.special.gammainc")(a, x[, out]) | Regularized lower incomplete gamma function.
    |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '[`gammainc`](generated/scipy.special.gammainc.html#scipy.special.gammainc "scipy.special.gammainc")(a, x[, out])
    | 正则化下不完全伽马函数。'
- en: '| [`gammaincinv`](generated/scipy.special.gammaincinv.html#scipy.special.gammaincinv
    "scipy.special.gammaincinv")(a, y[, out]) | Inverse to the regularized lower incomplete
    gamma function. |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '[`gammaincinv`](generated/scipy.special.gammaincinv.html#scipy.special.gammaincinv
    "scipy.special.gammaincinv")(a, y[, out]) | 正则化下不完全伽马函数的反函数。'
- en: '| [`gammaincc`](generated/scipy.special.gammaincc.html#scipy.special.gammaincc
    "scipy.special.gammaincc")(a, x[, out]) | Regularized upper incomplete gamma function.
    |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '[`gammaincc`](generated/scipy.special.gammaincc.html#scipy.special.gammaincc
    "scipy.special.gammaincc")(a, x[, out]) | 正则化上不完全伽马函数。'
- en: '| [`gammainccinv`](generated/scipy.special.gammainccinv.html#scipy.special.gammainccinv
    "scipy.special.gammainccinv")(a, y[, out]) | Inverse of the regularized upper
    incomplete gamma function. |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
  zh: '[`gammainccinv`](generated/scipy.special.gammainccinv.html#scipy.special.gammainccinv
    "scipy.special.gammainccinv")(a, y[, out]) | 正则化上不完全伽马函数的反函数。'
- en: '| [`beta`](generated/scipy.special.beta.html#scipy.special.beta "scipy.special.beta")(a, b[, out])
    | Beta function. |'
  id: totrans-201
  prefs: []
  type: TYPE_TB
  zh: '[`beta`](generated/scipy.special.beta.html#scipy.special.beta "scipy.special.beta")(a, b[, out])
    | 贝塔函数。'
- en: '| [`betaln`](generated/scipy.special.betaln.html#scipy.special.betaln "scipy.special.betaln")(a, b[, out])
    | Natural logarithm of absolute value of beta function. |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
  zh: '[`betaln`](generated/scipy.special.betaln.html#scipy.special.betaln "scipy.special.betaln")(a, b[, out])
    | 贝塔函数绝对值的自然对数。'
- en: '| [`betainc`](generated/scipy.special.betainc.html#scipy.special.betainc "scipy.special.betainc")(a, b, x[, out])
    | Regularized incomplete beta function. |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
  zh: '[`betainc`](generated/scipy.special.betainc.html#scipy.special.betainc "scipy.special.betainc")(a, b, x[, out])
    | 正则化不完全贝塔函数。'
- en: '| [`betaincc`](generated/scipy.special.betaincc.html#scipy.special.betaincc
    "scipy.special.betaincc")(a, b, x[, out]) | Complement of the regularized incomplete
    beta function. |'
  id: totrans-204
  prefs: []
  type: TYPE_TB
  zh: '[`betaincc`](generated/scipy.special.betaincc.html#scipy.special.betaincc "scipy.special.betaincc")(a, b, x[, out])
    | 正则化不完全贝塔函数的补函数。'
- en: '| [`betaincinv`](generated/scipy.special.betaincinv.html#scipy.special.betaincinv
    "scipy.special.betaincinv")(a, b, y[, out]) | Inverse of the regularized incomplete
    beta function. |'
  id: totrans-205
  prefs: []
  type: TYPE_TB
  zh: '[`betaincinv`](generated/scipy.special.betaincinv.html#scipy.special.betaincinv
    "scipy.special.betaincinv")(a, b, y[, out]) | 正则化不完全贝塔函数的反函数。'
- en: '| [`betainccinv`](generated/scipy.special.betainccinv.html#scipy.special.betainccinv
    "scipy.special.betainccinv")(a, b, y[, out]) | Inverse of the complemented regularized
    incomplete beta function. |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
  zh: '[`betainccinv`](generated/scipy.special.betainccinv.html#scipy.special.betainccinv
    "scipy.special.betainccinv")(a, b, y[, out]) | 补充正则化不完全贝塔函数的反函数。'
- en: '| [`psi`](generated/scipy.special.psi.html#scipy.special.psi "scipy.special.psi")(z[, out])
    | The digamma function. |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
  zh: '[`psi`](generated/scipy.special.psi.html#scipy.special.psi "scipy.special.psi")(z[, out])
    | Digamma函数。'
- en: '| [`rgamma`](generated/scipy.special.rgamma.html#scipy.special.rgamma "scipy.special.rgamma")(z[, out])
    | Reciprocal of the gamma function. |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '[`rgamma`](generated/scipy.special.rgamma.html#scipy.special.rgamma "scipy.special.rgamma")(z[, out])
    | 伽马函数的倒数。'
- en: '| [`polygamma`](generated/scipy.special.polygamma.html#scipy.special.polygamma
    "scipy.special.polygamma")(n, x) | Polygamma functions. |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
  zh: '[`polygamma`](generated/scipy.special.polygamma.html#scipy.special.polygamma
    "scipy.special.polygamma")(n, x) | Polygamma函数。'
- en: '| [`multigammaln`](generated/scipy.special.multigammaln.html#scipy.special.multigammaln
    "scipy.special.multigammaln")(a, d) | Returns the log of multivariate gamma, also
    sometimes called the generalized gamma. |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '[`multigammaln`](generated/scipy.special.multigammaln.html#scipy.special.multigammaln
    "scipy.special.multigammaln")(a, d) | 返回多变量伽马函数的对数，有时也称为广义伽马函数。'
- en: '| [`digamma`](generated/scipy.special.digamma.html#scipy.special.digamma "scipy.special.digamma")(z[, out])
    | The digamma function. |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
  zh: '[`digamma`](generated/scipy.special.digamma.html#scipy.special.digamma "scipy.special.digamma")(z[, out])
    | Digamma函数。'
- en: '| [`poch`](generated/scipy.special.poch.html#scipy.special.poch "scipy.special.poch")(z, m[, out])
    | Pochhammer symbol. |'
  id: totrans-212
  prefs: []
  type: TYPE_TB
  zh: '[`poch`](generated/scipy.special.poch.html#scipy.special.poch "scipy.special.poch")(z, m[, out])
    | Pochhammer符号。'
- en: Error function and Fresnel integrals
  id: totrans-213
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 误差函数和Fresnel积分
- en: '| [`erf`](generated/scipy.special.erf.html#scipy.special.erf "scipy.special.erf")(z[, out])
    | Returns the error function of complex argument. |'
  id: totrans-214
  prefs: []
  type: TYPE_TB
  zh: '| [`erf`](generated/scipy.special.erf.html#scipy.special.erf "scipy.special.erf")(z[, out])
    | 返回复数参数的误差函数。 |'
- en: '| [`erfc`](generated/scipy.special.erfc.html#scipy.special.erfc "scipy.special.erfc")(x[, out])
    | Complementary error function, `1 - erf(x)`. |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| [`erfc`](generated/scipy.special.erfc.html#scipy.special.erfc "scipy.special.erfc")(x[, out])
    | 互补误差函数，`1 - erf(x)`。 |'
- en: '| [`erfcx`](generated/scipy.special.erfcx.html#scipy.special.erfcx "scipy.special.erfcx")(x[, out])
    | Scaled complementary error function, `exp(x**2) * erfc(x)`. |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '| [`erfcx`](generated/scipy.special.erfcx.html#scipy.special.erfcx "scipy.special.erfcx")(x[, out])
    | 缩放的互补误差函数，`exp(x**2) * erfc(x)`。 |'
- en: '| [`erfi`](generated/scipy.special.erfi.html#scipy.special.erfi "scipy.special.erfi")(z[, out])
    | Imaginary error function, `-i erf(i z)`. |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
  zh: '| [`erfi`](generated/scipy.special.erfi.html#scipy.special.erfi "scipy.special.erfi")(z[, out])
    | 虚数误差函数，`-i erf(i z)`。 |'
- en: '| [`erfinv`](generated/scipy.special.erfinv.html#scipy.special.erfinv "scipy.special.erfinv")(y[, out])
    | Inverse of the error function. |'
  id: totrans-218
  prefs: []
  type: TYPE_TB
  zh: '| [`erfinv`](generated/scipy.special.erfinv.html#scipy.special.erfinv "scipy.special.erfinv")(y[, out])
    | 误差函数的反函数。 |'
- en: '| [`erfcinv`](generated/scipy.special.erfcinv.html#scipy.special.erfcinv "scipy.special.erfcinv")(y[, out])
    | Inverse of the complementary error function. |'
  id: totrans-219
  prefs: []
  type: TYPE_TB
  zh: '| [`erfcinv`](generated/scipy.special.erfcinv.html#scipy.special.erfcinv "scipy.special.erfcinv")(y[, out])
    | 互补误差函数的反函数。 |'
- en: '| [`wofz`](generated/scipy.special.wofz.html#scipy.special.wofz "scipy.special.wofz")(z[, out])
    | Faddeeva function |'
  id: totrans-220
  prefs: []
  type: TYPE_TB
  zh: '| [`wofz`](generated/scipy.special.wofz.html#scipy.special.wofz "scipy.special.wofz")(z[, out])
    | Faddeeva函数。 |'
- en: '| [`dawsn`](generated/scipy.special.dawsn.html#scipy.special.dawsn "scipy.special.dawsn")(x[, out])
    | Dawson''s integral. |'
  id: totrans-221
  prefs: []
  type: TYPE_TB
  zh: '| [`dawsn`](generated/scipy.special.dawsn.html#scipy.special.dawsn "scipy.special.dawsn")(x[, out])
    | Dawson积分。 |'
- en: '| [`fresnel`](generated/scipy.special.fresnel.html#scipy.special.fresnel "scipy.special.fresnel")(z[, out])
    | Fresnel integrals. |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| [`fresnel`](generated/scipy.special.fresnel.html#scipy.special.fresnel "scipy.special.fresnel")(z[, out])
    | Fresnel积分。 |'
- en: '| [`fresnel_zeros`](generated/scipy.special.fresnel_zeros.html#scipy.special.fresnel_zeros
    "scipy.special.fresnel_zeros")(nt) | Compute nt complex zeros of sine and cosine
    Fresnel integrals S(z) and C(z). |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| [`fresnel_zeros`](generated/scipy.special.fresnel_zeros.html#scipy.special.fresnel_zeros
    "scipy.special.fresnel_zeros")(nt) | 计算正弦和余弦Fresnel积分S(z)和C(z)的nt个复数零点。 |'
- en: '| [`modfresnelp`](generated/scipy.special.modfresnelp.html#scipy.special.modfresnelp
    "scipy.special.modfresnelp")(x[, out]) | Modified Fresnel positive integrals |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| [`modfresnelp`](generated/scipy.special.modfresnelp.html#scipy.special.modfresnelp
    "scipy.special.modfresnelp")(x[, out]) | 修改的Fresnel正积分。 |'
- en: '| [`modfresnelm`](generated/scipy.special.modfresnelm.html#scipy.special.modfresnelm
    "scipy.special.modfresnelm")(x[, out]) | Modified Fresnel negative integrals |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
  zh: '| [`modfresnelm`](generated/scipy.special.modfresnelm.html#scipy.special.modfresnelm
    "scipy.special.modfresnelm")(x[, out]) | 修改的Fresnel负积分。 |'
- en: '| [`voigt_profile`](generated/scipy.special.voigt_profile.html#scipy.special.voigt_profile
    "scipy.special.voigt_profile")(x, sigma, gamma[, out]) | Voigt profile. |'
  id: totrans-226
  prefs: []
  type: TYPE_TB
  zh: '| [`voigt_profile`](generated/scipy.special.voigt_profile.html#scipy.special.voigt_profile
    "scipy.special.voigt_profile")(x, sigma, gamma[, out]) | Voigt轮廓。 |'
- en: 'The following functions do not accept NumPy arrays (they are not universal
    functions):'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数不接受NumPy数组（它们不是通用函数）：
- en: '| [`erf_zeros`](generated/scipy.special.erf_zeros.html#scipy.special.erf_zeros
    "scipy.special.erf_zeros")(nt) | Compute the first nt zero in the first quadrant,
    ordered by absolute value. |'
  id: totrans-228
  prefs: []
  type: TYPE_TB
  zh: '| [`erf_zeros`](generated/scipy.special.erf_zeros.html#scipy.special.erf_zeros
    "scipy.special.erf_zeros")(nt) | 计算第一象限中按绝对值排序的前nt个零点。 |'
- en: '| [`fresnelc_zeros`](generated/scipy.special.fresnelc_zeros.html#scipy.special.fresnelc_zeros
    "scipy.special.fresnelc_zeros")(nt) | Compute nt complex zeros of cosine Fresnel
    integral C(z). |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
  zh: '| [`fresnelc_zeros`](generated/scipy.special.fresnelc_zeros.html#scipy.special.fresnelc_zeros
    "scipy.special.fresnelc_zeros")(nt) | 计算余弦Fresnel积分C(z)的nt个复数零点。 |'
- en: '| [`fresnels_zeros`](generated/scipy.special.fresnels_zeros.html#scipy.special.fresnels_zeros
    "scipy.special.fresnels_zeros")(nt) | Compute nt complex zeros of sine Fresnel
    integral S(z). |'
  id: totrans-230
  prefs: []
  type: TYPE_TB
  zh: '| [`fresnels_zeros`](generated/scipy.special.fresnels_zeros.html#scipy.special.fresnels_zeros
    "scipy.special.fresnels_zeros")(nt) | 计算正弦Fresnel积分S(z)的nt个复数零点。 |'
- en: Legendre functions
  id: totrans-231
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Legendre函数
- en: '| [`lpmv`](generated/scipy.special.lpmv.html#scipy.special.lpmv "scipy.special.lpmv")(m, v, x[, out])
    | Associated Legendre function of integer order and real degree. |'
  id: totrans-232
  prefs: []
  type: TYPE_TB
  zh: '| [`lpmv`](generated/scipy.special.lpmv.html#scipy.special.lpmv "scipy.special.lpmv")(m, v, x[, out])
    | 整数阶及实数次数的关联Legendre函数。 |'
- en: '| [`sph_harm`](generated/scipy.special.sph_harm.html#scipy.special.sph_harm
    "scipy.special.sph_harm")(m, n, theta, phi[, out]) | Compute spherical harmonics.
    |'
  id: totrans-233
  prefs: []
  type: TYPE_TB
  zh: '| [`sph_harm`](generated/scipy.special.sph_harm.html#scipy.special.sph_harm
    "scipy.special.sph_harm")(m, n, theta, phi[, out]) | 计算球谐函数。 |'
- en: 'The following functions do not accept NumPy arrays (they are not universal
    functions):'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数不接受NumPy数组（它们不是通用函数）：
- en: '| [`clpmn`](generated/scipy.special.clpmn.html#scipy.special.clpmn "scipy.special.clpmn")(m, n, z[, type])
    | Associated Legendre function of the first kind for complex arguments. |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '| [`clpmn`](generated/scipy.special.clpmn.html#scipy.special.clpmn "scipy.special.clpmn")(m, n, z[, type])
    | 复数参数的第一类相关勒让德函数。 |'
- en: '| [`lpn`](generated/scipy.special.lpn.html#scipy.special.lpn "scipy.special.lpn")(n, z)
    | Legendre function of the first kind. |'
  id: totrans-236
  prefs: []
  type: TYPE_TB
  zh: '| [`lpn`](generated/scipy.special.lpn.html#scipy.special.lpn "scipy.special.lpn")(n, z)
    | 第一类Legendre函数。 |'
- en: '| [`lqn`](generated/scipy.special.lqn.html#scipy.special.lqn "scipy.special.lqn")(n, z)
    | Legendre function of the second kind. |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
  zh: '| [`lqn`](generated/scipy.special.lqn.html#scipy.special.lqn "scipy.special.lqn")(n, z)
    | 第二类Legendre函数。 |'
- en: '| [`lpmn`](generated/scipy.special.lpmn.html#scipy.special.lpmn "scipy.special.lpmn")(m, n, z)
    | Sequence of associated Legendre functions of the first kind. |'
  id: totrans-238
  prefs: []
  type: TYPE_TB
  zh: '| [`lpmn`](generated/scipy.special.lpmn.html#scipy.special.lpmn "scipy.special.lpmn")(m, n, z)
    | 第一类相关勒让德函数序列。 |'
- en: '| [`lqmn`](generated/scipy.special.lqmn.html#scipy.special.lqmn "scipy.special.lqmn")(m, n, z)
    | Sequence of associated Legendre functions of the second kind. |'
  id: totrans-239
  prefs: []
  type: TYPE_TB
  zh: '| [`lqmn`](generated/scipy.special.lqmn.html#scipy.special.lqmn "scipy.special.lqmn")(m, n, z)
    | 第二类相关勒让德函数序列。 |'
- en: Ellipsoidal harmonics
  id: totrans-240
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 椭球谐波
- en: '| [`ellip_harm`](generated/scipy.special.ellip_harm.html#scipy.special.ellip_harm
    "scipy.special.ellip_harm")(h2, k2, n, p, s[, signm, signn]) | Ellipsoidal harmonic
    functions E^p_n(l) |'
  id: totrans-241
  prefs: []
  type: TYPE_TB
  zh: '| [`ellip_harm`](generated/scipy.special.ellip_harm.html#scipy.special.ellip_harm
    "scipy.special.ellip_harm")(h2, k2, n, p, s[, signm, signn]) | 椭球谐波函数 E^p_n(l)
    |'
- en: '| [`ellip_harm_2`](generated/scipy.special.ellip_harm_2.html#scipy.special.ellip_harm_2
    "scipy.special.ellip_harm_2")(h2, k2, n, p, s) | Ellipsoidal harmonic functions
    F^p_n(l) |'
  id: totrans-242
  prefs: []
  type: TYPE_TB
  zh: '| [`ellip_harm_2`](generated/scipy.special.ellip_harm_2.html#scipy.special.ellip_harm_2
    "scipy.special.ellip_harm_2")(h2, k2, n, p, s) | 椭球谐波函数 F^p_n(l) |'
- en: '| [`ellip_normal`](generated/scipy.special.ellip_normal.html#scipy.special.ellip_normal
    "scipy.special.ellip_normal")(h2, k2, n, p) | Ellipsoidal harmonic normalization
    constants gamma^p_n |'
  id: totrans-243
  prefs: []
  type: TYPE_TB
  zh: '| [`ellip_normal`](generated/scipy.special.ellip_normal.html#scipy.special.ellip_normal
    "scipy.special.ellip_normal")(h2, k2, n, p) | 椭球谐波归一化常数 gamma^p_n |'
- en: Orthogonal polynomials
  id: totrans-244
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 正交多项式
- en: 'The following functions evaluate values of orthogonal polynomials:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 下列函数评估正交多项式的值：
- en: '| [`assoc_laguerre`](generated/scipy.special.assoc_laguerre.html#scipy.special.assoc_laguerre
    "scipy.special.assoc_laguerre")(x, n[, k]) | Compute the generalized (associated)
    Laguerre polynomial of degree n and order k. |'
  id: totrans-246
  prefs: []
  type: TYPE_TB
  zh: '| [`assoc_laguerre`](generated/scipy.special.assoc_laguerre.html#scipy.special.assoc_laguerre
    "scipy.special.assoc_laguerre")(x, n[, k]) | 计算阶数为n和次数为k的广义（相关）拉盖尔多项式。 |'
- en: '| [`eval_legendre`](generated/scipy.special.eval_legendre.html#scipy.special.eval_legendre
    "scipy.special.eval_legendre")(n, x[, out]) | Evaluate Legendre polynomial at
    a point. |'
  id: totrans-247
  prefs: []
  type: TYPE_TB
  zh: '| [`eval_legendre`](generated/scipy.special.eval_legendre.html#scipy.special.eval_legendre
    "scipy.special.eval_legendre")(n, x[, out]) | 在某一点评估勒让德多项式。 |'
- en: '| [`eval_chebyt`](generated/scipy.special.eval_chebyt.html#scipy.special.eval_chebyt
    "scipy.special.eval_chebyt")(n, x[, out]) | Evaluate Chebyshev polynomial of the
    first kind at a point. |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
  zh: '| [`eval_chebyt`](generated/scipy.special.eval_chebyt.html#scipy.special.eval_chebyt
    "scipy.special.eval_chebyt")(n, x[, out]) | 在某一点评估第一类切比雪夫多项式。 |'
- en: '| [`eval_chebyu`](generated/scipy.special.eval_chebyu.html#scipy.special.eval_chebyu
    "scipy.special.eval_chebyu")(n, x[, out]) | Evaluate Chebyshev polynomial of the
    second kind at a point. |'
  id: totrans-249
  prefs: []
  type: TYPE_TB
  zh: '| [`eval_chebyu`](generated/scipy.special.eval_chebyu.html#scipy.special.eval_chebyu
    "scipy.special.eval_chebyu")(n, x[, out]) | 在某一点评估第二类切比雪夫多项式。 |'
- en: '| [`eval_chebyc`](generated/scipy.special.eval_chebyc.html#scipy.special.eval_chebyc
    "scipy.special.eval_chebyc")(n, x[, out]) | Evaluate Chebyshev polynomial of the
    first kind on [-2, 2] at a point. |'
  id: totrans-250
  prefs: []
  type: TYPE_TB
  zh: '| [`eval_chebyc`](generated/scipy.special.eval_chebyc.html#scipy.special.eval_chebyc
    "scipy.special.eval_chebyc")(n, x[, out]) | 在[-2, 2]区间上的某一点评估第一类切比雪夫多项式。 |'
- en: '| [`eval_chebys`](generated/scipy.special.eval_chebys.html#scipy.special.eval_chebys
    "scipy.special.eval_chebys")(n, x[, out]) | Evaluate Chebyshev polynomial of the
    second kind on [-2, 2] at a point. |'
  id: totrans-251
  prefs: []
  type: TYPE_TB
  zh: '| [`eval_chebys`](generated/scipy.special.eval_chebys.html#scipy.special.eval_chebys
    "scipy.special.eval_chebys")(n, x[, out]) | 在[-2, 2]区间上的某一点评估第二类切比雪夫多项式。 |'
- en: '| [`eval_jacobi`](generated/scipy.special.eval_jacobi.html#scipy.special.eval_jacobi
    "scipy.special.eval_jacobi")(n, alpha, beta, x[, out]) | Evaluate Jacobi polynomial
    at a point. |'
  id: totrans-252
  prefs: []
  type: TYPE_TB
  zh: '| [`eval_jacobi`](generated/scipy.special.eval_jacobi.html#scipy.special.eval_jacobi
    "scipy.special.eval_jacobi")(n, alpha, beta, x[, out]) | 在某一点评估雅各比多项式。 |'
- en: '| [`eval_laguerre`](generated/scipy.special.eval_laguerre.html#scipy.special.eval_laguerre
    "scipy.special.eval_laguerre")(n, x[, out]) | Evaluate Laguerre polynomial at
    a point. |'
  id: totrans-253
  prefs: []
  type: TYPE_TB
  zh: '| [`eval_laguerre`](generated/scipy.special.eval_laguerre.html#scipy.special.eval_laguerre
    "scipy.special.eval_laguerre")(n, x[, out]) | 在某一点评估拉盖尔多项式。 |'
- en: '| [`eval_genlaguerre`](generated/scipy.special.eval_genlaguerre.html#scipy.special.eval_genlaguerre
    "scipy.special.eval_genlaguerre")(n, alpha, x[, out]) | Evaluate generalized Laguerre
    polynomial at a point. |'
  id: totrans-254
  prefs: []
  type: TYPE_TB
  zh: '| [`eval_genlaguerre`](generated/scipy.special.eval_genlaguerre.html#scipy.special.eval_genlaguerre
    "scipy.special.eval_genlaguerre")(n, alpha, x[, out]) | 在某一点评估广义拉盖尔多项式。 |'
- en: '| [`eval_hermite`](generated/scipy.special.eval_hermite.html#scipy.special.eval_hermite
    "scipy.special.eval_hermite")(n, x[, out]) | Evaluate physicist''s Hermite polynomial
    at a point. |'
  id: totrans-255
  prefs: []
  type: TYPE_TB
  zh: '| [`eval_hermite`](generated/scipy.special.eval_hermite.html#scipy.special.eval_hermite
    "scipy.special.eval_hermite")(n, x[, out]) | 在某一点评估物理学家的厄米多项式。 |'
- en: '| [`eval_hermitenorm`](generated/scipy.special.eval_hermitenorm.html#scipy.special.eval_hermitenorm
    "scipy.special.eval_hermitenorm")(n, x[, out]) | Evaluate probabilist''s (normalized)
    Hermite polynomial at a point. |'
  id: totrans-256
  prefs: []
  type: TYPE_TB
  zh: '| [`eval_hermitenorm`](generated/scipy.special.eval_hermitenorm.html#scipy.special.eval_hermitenorm
    "scipy.special.eval_hermitenorm")(n, x[, out]) | 在某一点评估概率学家的（归一化的）厄米多项式。 |'
- en: '| [`eval_gegenbauer`](generated/scipy.special.eval_gegenbauer.html#scipy.special.eval_gegenbauer
    "scipy.special.eval_gegenbauer")(n, alpha, x[, out]) | Evaluate Gegenbauer polynomial
    at a point. |'
  id: totrans-257
  prefs: []
  type: TYPE_TB
  zh: '| [`eval_gegenbauer`](generated/scipy.special.eval_gegenbauer.html#scipy.special.eval_gegenbauer
    "scipy.special.eval_gegenbauer")(n, alpha, x[, out]) | 在某一点评估格根鲍尔多项式。 |'
- en: '| [`eval_sh_legendre`](generated/scipy.special.eval_sh_legendre.html#scipy.special.eval_sh_legendre
    "scipy.special.eval_sh_legendre")(n, x[, out]) | Evaluate shifted Legendre polynomial
    at a point. |'
  id: totrans-258
  prefs: []
  type: TYPE_TB
  zh: '| [`eval_sh_legendre`](generated/scipy.special.eval_sh_legendre.html#scipy.special.eval_sh_legendre
    "scipy.special.eval_sh_legendre")(n, x[, out]) | 在某一点评估偏移勒让德多项式。 |'
- en: '| [`eval_sh_chebyt`](generated/scipy.special.eval_sh_chebyt.html#scipy.special.eval_sh_chebyt
    "scipy.special.eval_sh_chebyt")(n, x[, out]) | Evaluate shifted Chebyshev polynomial
    of the first kind at a point. |'
  id: totrans-259
  prefs: []
  type: TYPE_TB
  zh: '| [`eval_sh_chebyt`](generated/scipy.special.eval_sh_chebyt.html#scipy.special.eval_sh_chebyt
    "scipy.special.eval_sh_chebyt")(n, x[, out]) | 在某一点评估偏移第一类切比雪多项式。 |'
- en: '| [`eval_sh_chebyu`](generated/scipy.special.eval_sh_chebyu.html#scipy.special.eval_sh_chebyu
    "scipy.special.eval_sh_chebyu")(n, x[, out]) | Evaluate shifted Chebyshev polynomial
    of the second kind at a point. |'
  id: totrans-260
  prefs: []
  type: TYPE_TB
  zh: '| [`eval_sh_chebyu`](generated/scipy.special.eval_sh_chebyu.html#scipy.special.eval_sh_chebyu
    "scipy.special.eval_sh_chebyu")(n, x[, out]) | 在某一点评估偏移第二类切比雨多项式。 |'
- en: '| [`eval_sh_jacobi`](generated/scipy.special.eval_sh_jacobi.html#scipy.special.eval_sh_jacobi
    "scipy.special.eval_sh_jacobi")(n, p, q, x[, out]) | Evaluate shifted Jacobi polynomial
    at a point. |'
  id: totrans-261
  prefs: []
  type: TYPE_TB
  zh: '| [`eval_sh_jacobi`](generated/scipy.special.eval_sh_jacobi.html#scipy.special.eval_sh_jacobi
    "scipy.special.eval_sh_jacobi")(n, p, q, x[, out]) | 在某一点评估偏移雅可比多项式。 |'
- en: 'The following functions compute roots and quadrature weights for orthogonal
    polynomials:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 下列函数计算正交多项式的根和求积权重：
- en: '| [`roots_legendre`](generated/scipy.special.roots_legendre.html#scipy.special.roots_legendre
    "scipy.special.roots_legendre")(n[, mu]) | Gauss-Legendre quadrature. |'
  id: totrans-263
  prefs: []
  type: TYPE_TB
  zh: '| [`roots_legendre`](generated/scipy.special.roots_legendre.html#scipy.special.roots_legendre
    "scipy.special.roots_legendre")(n[, mu]) | 高斯-勒让德求积。 |'
- en: '| [`roots_chebyt`](generated/scipy.special.roots_chebyt.html#scipy.special.roots_chebyt
    "scipy.special.roots_chebyt")(n[, mu]) | Gauss-Chebyshev (first kind) quadrature.
    |'
  id: totrans-264
  prefs: []
  type: TYPE_TB
  zh: '| [`roots_chebyt`](generated/scipy.special.roots_chebyt.html#scipy.special.roots_chebyt
    "scipy.special.roots_chebyt")(n[, mu]) | 高斯切比提（第一类）求积。 |'
- en: '| [`roots_chebyu`](generated/scipy.special.roots_chebyu.html#scipy.special.roots_chebyu
    "scipy.special.roots_chebyu")(n[, mu]) | Gauss-Chebyshev (second kind) quadrature.
    |'
  id: totrans-265
  prefs: []
  type: TYPE_TB
  zh: '| [`roots_chebyu`](generated/scipy.special.roots_chebyu.html#scipy.special.roots_chebyu
    "scipy.special.roots_chebyu")(n[, mu]) | 高斯切比雨（第二类）求积。 |'
- en: '| [`roots_chebyc`](generated/scipy.special.roots_chebyc.html#scipy.special.roots_chebyc
    "scipy.special.roots_chebyc")(n[, mu]) | Gauss-Chebyshev (first kind) quadrature.
    |'
  id: totrans-266
  prefs: []
  type: TYPE_TB
  zh: '| [`roots_chebyc`](generated/scipy.special.roots_chebyc.html#scipy.special.roots_chebyc
    "scipy.special.roots_chebyc")(n[, mu]) | 高斯切比西（第一类）求积。 |'
- en: '| [`roots_chebys`](generated/scipy.special.roots_chebys.html#scipy.special.roots_chebys
    "scipy.special.roots_chebys")(n[, mu]) | Gauss-Chebyshev (second kind) quadrature.
    |'
  id: totrans-267
  prefs: []
  type: TYPE_TB
  zh: '| [`roots_chebys`](generated/scipy.special.roots_chebys.html#scipy.special.roots_chebys
    "scipy.special.roots_chebys")(n[, mu]) | 高斯切比雪（第二类）求积。 |'
- en: '| [`roots_jacobi`](generated/scipy.special.roots_jacobi.html#scipy.special.roots_jacobi
    "scipy.special.roots_jacobi")(n, alpha, beta[, mu]) | Gauss-Jacobi quadrature.
    |'
  id: totrans-268
  prefs: []
  type: TYPE_TB
  zh: '| [`roots_jacobi`](generated/scipy.special.roots_jacobi.html#scipy.special.roots_jacobi
    "scipy.special.roots_jacobi")(n, alpha, beta[, mu]) | 高斯-雅可比求积。 |'
- en: '| [`roots_laguerre`](generated/scipy.special.roots_laguerre.html#scipy.special.roots_laguerre
    "scipy.special.roots_laguerre")(n[, mu]) | Gauss-Laguerre quadrature. |'
  id: totrans-269
  prefs: []
  type: TYPE_TB
  zh: '| [`roots_laguerre`](generated/scipy.special.roots_laguerre.html#scipy.special.roots_laguerre
    "scipy.special.roots_laguerre")(n[, mu]) | 高斯-拉盖尔求积法。 |'
- en: '| [`roots_genlaguerre`](generated/scipy.special.roots_genlaguerre.html#scipy.special.roots_genlaguerre
    "scipy.special.roots_genlaguerre")(n, alpha[, mu]) | Gauss-generalized Laguerre
    quadrature. |'
  id: totrans-270
  prefs: []
  type: TYPE_TB
  zh: '| [`roots_genlaguerre`](generated/scipy.special.roots_genlaguerre.html#scipy.special.roots_genlaguerre
    "scipy.special.roots_genlaguerre")(n, alpha[, mu]) | 高斯-广义拉盖尔求积法。 |'
- en: '| [`roots_hermite`](generated/scipy.special.roots_hermite.html#scipy.special.roots_hermite
    "scipy.special.roots_hermite")(n[, mu]) | Gauss-Hermite (physicist''s) quadrature.
    |'
  id: totrans-271
  prefs: []
  type: TYPE_TB
  zh: '| [`roots_hermite`](generated/scipy.special.roots_hermite.html#scipy.special.roots_hermite
    "scipy.special.roots_hermite")(n[, mu]) | 高斯-埃尔米特（物理学家）求积法。 |'
- en: '| [`roots_hermitenorm`](generated/scipy.special.roots_hermitenorm.html#scipy.special.roots_hermitenorm
    "scipy.special.roots_hermitenorm")(n[, mu]) | Gauss-Hermite (statistician''s)
    quadrature. |'
  id: totrans-272
  prefs: []
  type: TYPE_TB
  zh: '| [`roots_hermitenorm`](generated/scipy.special.roots_hermitenorm.html#scipy.special.roots_hermitenorm
    "scipy.special.roots_hermitenorm")(n[, mu]) | 高斯-埃尔米特（统计学家）求积法。 |'
- en: '| [`roots_gegenbauer`](generated/scipy.special.roots_gegenbauer.html#scipy.special.roots_gegenbauer
    "scipy.special.roots_gegenbauer")(n, alpha[, mu]) | Gauss-Gegenbauer quadrature.
    |'
  id: totrans-273
  prefs: []
  type: TYPE_TB
  zh: '| [`roots_gegenbauer`](generated/scipy.special.roots_gegenbauer.html#scipy.special.roots_gegenbauer
    "scipy.special.roots_gegenbauer")(n, alpha[, mu]) | 高斯-格格伯正交多项式求积法。 |'
- en: '| [`roots_sh_legendre`](generated/scipy.special.roots_sh_legendre.html#scipy.special.roots_sh_legendre
    "scipy.special.roots_sh_legendre")(n[, mu]) | Gauss-Legendre (shifted) quadrature.
    |'
  id: totrans-274
  prefs: []
  type: TYPE_TB
  zh: '| [`roots_sh_legendre`](generated/scipy.special.roots_sh_legendre.html#scipy.special.roots_sh_legendre
    "scipy.special.roots_sh_legendre")(n[, mu]) | 高斯-勒让德（平移）求积法。 |'
- en: '| [`roots_sh_chebyt`](generated/scipy.special.roots_sh_chebyt.html#scipy.special.roots_sh_chebyt
    "scipy.special.roots_sh_chebyt")(n[, mu]) | Gauss-Chebyshev (first kind, shifted)
    quadrature. |'
  id: totrans-275
  prefs: []
  type: TYPE_TB
  zh: '| [`roots_sh_chebyt`](generated/scipy.special.roots_sh_chebyt.html#scipy.special.roots_sh_chebyt
    "scipy.special.roots_sh_chebyt")(n[, mu]) | 高斯-切比雪夫（第一类，平移）求积法。 |'
- en: '| [`roots_sh_chebyu`](generated/scipy.special.roots_sh_chebyu.html#scipy.special.roots_sh_chebyu
    "scipy.special.roots_sh_chebyu")(n[, mu]) | Gauss-Chebyshev (second kind, shifted)
    quadrature. |'
  id: totrans-276
  prefs: []
  type: TYPE_TB
  zh: '| [`roots_sh_chebyu`](generated/scipy.special.roots_sh_chebyu.html#scipy.special.roots_sh_chebyu
    "scipy.special.roots_sh_chebyu")(n[, mu]) | 高斯-切比雪夫（第二类，平移）求积法。 |'
- en: '| [`roots_sh_jacobi`](generated/scipy.special.roots_sh_jacobi.html#scipy.special.roots_sh_jacobi
    "scipy.special.roots_sh_jacobi")(n, p1, q1[, mu]) | Gauss-Jacobi (shifted) quadrature.
    |'
  id: totrans-277
  prefs: []
  type: TYPE_TB
  zh: '| [`roots_sh_jacobi`](generated/scipy.special.roots_sh_jacobi.html#scipy.special.roots_sh_jacobi
    "scipy.special.roots_sh_jacobi")(n, p1, q1[, mu]) | 高斯-雅各比（平移）求积法。 |'
- en: The functions below, in turn, return the polynomial coefficients in `orthopoly1d`
    objects, which function similarly as [`numpy.poly1d`](https://numpy.org/devdocs/reference/generated/numpy.poly1d.html#numpy.poly1d
    "(in NumPy v2.0.dev0)"). The `orthopoly1d` class also has an attribute `weights`,
    which returns the roots, weights, and total weights for the appropriate form of
    Gaussian quadrature. These are returned in an `n x 3` array with roots in the
    first column, weights in the second column, and total weights in the final column.
    Note that `orthopoly1d` objects are converted to [`poly1d`](https://numpy.org/devdocs/reference/generated/numpy.poly1d.html#numpy.poly1d
    "(in NumPy v2.0.dev0)") when doing arithmetic, and lose information of the original
    orthogonal polynomial.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数依次返回`orthopoly1d`对象中的多项式系数，其功能类似于[`numpy.poly1d`](https://numpy.org/devdocs/reference/generated/numpy.poly1d.html#numpy.poly1d
    "(in NumPy v2.0.dev0)")。`orthopoly1d`类还具有`weights`属性，返回适当形式的高斯求积的根、权重和总权重的`n x
    3`数组。请注意，进行算术运算时，`orthopoly1d`对象会转换为[`poly1d`](https://numpy.org/devdocs/reference/generated/numpy.poly1d.html#numpy.poly1d
    "(in NumPy v2.0.dev0)")，且会丢失原始正交多项式的信息。
- en: '| [`legendre`](generated/scipy.special.legendre.html#scipy.special.legendre
    "scipy.special.legendre")(n[, monic]) | Legendre polynomial. |'
  id: totrans-279
  prefs: []
  type: TYPE_TB
  zh: '| [`legendre`](generated/scipy.special.legendre.html#scipy.special.legendre
    "scipy.special.legendre")(n[, monic]) | 勒让德多项式。 |'
- en: '| [`chebyt`](generated/scipy.special.chebyt.html#scipy.special.chebyt "scipy.special.chebyt")(n[, monic])
    | Chebyshev polynomial of the first kind. |'
  id: totrans-280
  prefs: []
  type: TYPE_TB
  zh: '| [`chebyt`](generated/scipy.special.chebyt.html#scipy.special.chebyt "scipy.special.chebyt")(n[, monic])
    | 第一类切比雪夫多项式。 |'
- en: '| [`chebyu`](generated/scipy.special.chebyu.html#scipy.special.chebyu "scipy.special.chebyu")(n[, monic])
    | Chebyshev polynomial of the second kind. |'
  id: totrans-281
  prefs: []
  type: TYPE_TB
  zh: '| [`chebyu`](generated/scipy.special.chebyu.html#scipy.special.chebyu "scipy.special.chebyu")(n[, monic])
    | 第二类切比雪夫多项式。 |'
- en: '| [`chebyc`](generated/scipy.special.chebyc.html#scipy.special.chebyc "scipy.special.chebyc")(n[, monic])
    | Chebyshev polynomial of the first kind on \([-2, 2]\). |'
  id: totrans-282
  prefs: []
  type: TYPE_TB
  zh: '| [`chebyc`](generated/scipy.special.chebyc.html#scipy.special.chebyc "scipy.special.chebyc")(n[, monic])
    | \([-2, 2]\) 区间第一类切比雪夫多项式。 |'
- en: '| [`chebys`](generated/scipy.special.chebys.html#scipy.special.chebys "scipy.special.chebys")(n[, monic])
    | Chebyshev polynomial of the second kind on \([-2, 2]\). |'
  id: totrans-283
  prefs: []
  type: TYPE_TB
  zh: '| [`chebys`](generated/scipy.special.chebys.html#scipy.special.chebys "scipy.special.chebys")(n[, monic])
    | \([-2, 2]\) 区间第二类切比雪夫多项式。 |'
- en: '| [`jacobi`](generated/scipy.special.jacobi.html#scipy.special.jacobi "scipy.special.jacobi")(n, alpha, beta[, monic])
    | Jacobi polynomial. |'
  id: totrans-284
  prefs: []
  type: TYPE_TB
  zh: '| [`jacobi`](generated/scipy.special.jacobi.html#scipy.special.jacobi "scipy.special.jacobi")(n, alpha, beta[, monic])
    | 雅各比多项式。 |'
- en: '| [`laguerre`](generated/scipy.special.laguerre.html#scipy.special.laguerre
    "scipy.special.laguerre")(n[, monic]) | Laguerre polynomial. |'
  id: totrans-285
  prefs: []
  type: TYPE_TB
  zh: '| [`laguerre`](generated/scipy.special.laguerre.html#scipy.special.laguerre
    "scipy.special.laguerre")(n[, monic]) | 拉盖尔多项式。 |'
- en: '| [`genlaguerre`](generated/scipy.special.genlaguerre.html#scipy.special.genlaguerre
    "scipy.special.genlaguerre")(n, alpha[, monic]) | Generalized (associated) Laguerre
    polynomial. |'
  id: totrans-286
  prefs: []
  type: TYPE_TB
  zh: '| [`genlaguerre`](generated/scipy.special.genlaguerre.html#scipy.special.genlaguerre
    "scipy.special.genlaguerre")(n, alpha[, monic]) | 广义（相关）拉盖尔多项式。 |'
- en: '| [`hermite`](generated/scipy.special.hermite.html#scipy.special.hermite "scipy.special.hermite")(n[, monic])
    | Physicist''s Hermite polynomial. |'
  id: totrans-287
  prefs: []
  type: TYPE_TB
  zh: '| [`hermite`](generated/scipy.special.hermite.html#scipy.special.hermite "scipy.special.hermite")(n[, monic])
    | 物理学家的厄米多项式。 |'
- en: '| [`hermitenorm`](generated/scipy.special.hermitenorm.html#scipy.special.hermitenorm
    "scipy.special.hermitenorm")(n[, monic]) | Normalized (probabilist''s) Hermite
    polynomial. |'
  id: totrans-288
  prefs: []
  type: TYPE_TB
  zh: '| [`hermitenorm`](generated/scipy.special.hermitenorm.html#scipy.special.hermitenorm
    "scipy.special.hermitenorm")(n[, monic]) | 规范化的（概率学家的）厄米多项式。 |'
- en: '| [`gegenbauer`](generated/scipy.special.gegenbauer.html#scipy.special.gegenbauer
    "scipy.special.gegenbauer")(n, alpha[, monic]) | Gegenbauer (ultraspherical) polynomial.
    |'
  id: totrans-289
  prefs: []
  type: TYPE_TB
  zh: '| [`gegenbauer`](generated/scipy.special.gegenbauer.html#scipy.special.gegenbauer
    "scipy.special.gegenbauer")(n, alpha[, monic]) | 盖格宾博尔（超球形）多项式。 |'
- en: '| [`sh_legendre`](generated/scipy.special.sh_legendre.html#scipy.special.sh_legendre
    "scipy.special.sh_legendre")(n[, monic]) | Shifted Legendre polynomial. |'
  id: totrans-290
  prefs: []
  type: TYPE_TB
  zh: '| [`sh_legendre`](generated/scipy.special.sh_legendre.html#scipy.special.sh_legendre
    "scipy.special.sh_legendre")(n[, monic]) | 移位勒让德多项式。 |'
- en: '| [`sh_chebyt`](generated/scipy.special.sh_chebyt.html#scipy.special.sh_chebyt
    "scipy.special.sh_chebyt")(n[, monic]) | Shifted Chebyshev polynomial of the first
    kind. |'
  id: totrans-291
  prefs: []
  type: TYPE_TB
  zh: '| [`sh_chebyt`](generated/scipy.special.sh_chebyt.html#scipy.special.sh_chebyt
    "scipy.special.sh_chebyt")(n[, monic]) | 第一类移位切比雪夫多项式。 |'
- en: '| [`sh_chebyu`](generated/scipy.special.sh_chebyu.html#scipy.special.sh_chebyu
    "scipy.special.sh_chebyu")(n[, monic]) | Shifted Chebyshev polynomial of the second
    kind. |'
  id: totrans-292
  prefs: []
  type: TYPE_TB
  zh: '| [`sh_chebyu`](generated/scipy.special.sh_chebyu.html#scipy.special.sh_chebyu
    "scipy.special.sh_chebyu")(n[, monic]) | 第二类移位切比雪夫多项式。 |'
- en: '| [`sh_jacobi`](generated/scipy.special.sh_jacobi.html#scipy.special.sh_jacobi
    "scipy.special.sh_jacobi")(n, p, q[, monic]) | Shifted Jacobi polynomial. |'
  id: totrans-293
  prefs: []
  type: TYPE_TB
  zh: '| [`sh_jacobi`](generated/scipy.special.sh_jacobi.html#scipy.special.sh_jacobi
    "scipy.special.sh_jacobi")(n, p, q[, monic]) | 移位雅各比多项式。 |'
- en: Warning
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Computing values of high-order polynomials (around `order > 20`) using polynomial
    coefficients is numerically unstable. To evaluate polynomial values, the `eval_*`
    functions should be used instead.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 计算高阶多项式（约为 `order > 20`）使用多项式系数是数值不稳定的。应使用 `eval_*` 函数来评估多项式值。
- en: Hypergeometric functions
  id: totrans-296
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 超几何函数
- en: '| [`hyp2f1`](generated/scipy.special.hyp2f1.html#scipy.special.hyp2f1 "scipy.special.hyp2f1")(a, b, c, z[, out])
    | Gauss hypergeometric function 2F1(a, b; c; z) |'
  id: totrans-297
  prefs: []
  type: TYPE_TB
  zh: '| [`hyp2f1`](generated/scipy.special.hyp2f1.html#scipy.special.hyp2f1 "scipy.special.hyp2f1")(a, b, c, z[, out])
    | 高斯超几何函数 2F1(a, b; c; z) |'
- en: '| [`hyp1f1`](generated/scipy.special.hyp1f1.html#scipy.special.hyp1f1 "scipy.special.hyp1f1")(a, b, x[, out])
    | Confluent hypergeometric function 1F1. |'
  id: totrans-298
  prefs: []
  type: TYPE_TB
  zh: '| [`hyp1f1`](generated/scipy.special.hyp1f1.html#scipy.special.hyp1f1 "scipy.special.hyp1f1")(a, b, x[, out])
    | 紊乱超几何函数 1F1。 |'
- en: '| [`hyperu`](generated/scipy.special.hyperu.html#scipy.special.hyperu "scipy.special.hyperu")(a, b, x[, out])
    | Confluent hypergeometric function U |'
  id: totrans-299
  prefs: []
  type: TYPE_TB
  zh: '| [`hyperu`](generated/scipy.special.hyperu.html#scipy.special.hyperu "scipy.special.hyperu")(a, b, x[, out])
    | 紊乱超几何函数 U |'
- en: '| [`hyp0f1`](generated/scipy.special.hyp0f1.html#scipy.special.hyp0f1 "scipy.special.hyp0f1")(v, z[, out])
    | Confluent hypergeometric limit function 0F1. |'
  id: totrans-300
  prefs: []
  type: TYPE_TB
  zh: '| [`hyp0f1`](generated/scipy.special.hyp0f1.html#scipy.special.hyp0f1 "scipy.special.hyp0f1")(v, z[, out])
    | 紊乱超几何极限函数 0F1。 |'
- en: Parabolic cylinder functions
  id: totrans-301
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 抛物柱函数
- en: '| [`pbdv`](generated/scipy.special.pbdv.html#scipy.special.pbdv "scipy.special.pbdv")(v, x[, out])
    | Parabolic cylinder function D |'
  id: totrans-302
  prefs: []
  type: TYPE_TB
  zh: '| [`pbdv`](generated/scipy.special.pbdv.html#scipy.special.pbdv "scipy.special.pbdv")(v, x[, out])
    | 抛物柱函数 D |'
- en: '| [`pbvv`](generated/scipy.special.pbvv.html#scipy.special.pbvv "scipy.special.pbvv")(v, x[, out])
    | Parabolic cylinder function V |'
  id: totrans-303
  prefs: []
  type: TYPE_TB
  zh: '| [`pbvv`](generated/scipy.special.pbvv.html#scipy.special.pbvv "scipy.special.pbvv")(v, x[, out])
    | 抛物型缸函数 V |'
- en: '| [`pbwa`](generated/scipy.special.pbwa.html#scipy.special.pbwa "scipy.special.pbwa")(a, x[, out])
    | Parabolic cylinder function W. |'
  id: totrans-304
  prefs: []
  type: TYPE_TB
  zh: '| [`pbwa`](generated/scipy.special.pbwa.html#scipy.special.pbwa "scipy.special.pbwa")(a, x[, out])
    | 抛物型缸函数 W |'
- en: 'The following functions do not accept NumPy arrays (they are not universal
    functions):'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 下列函数不接受 NumPy 数组（它们不是通用函数）：
- en: '| [`pbdv_seq`](generated/scipy.special.pbdv_seq.html#scipy.special.pbdv_seq
    "scipy.special.pbdv_seq")(v, x) | Parabolic cylinder functions Dv(x) and derivatives.
    |'
  id: totrans-306
  prefs: []
  type: TYPE_TB
  zh: '| [`pbdv_seq`](generated/scipy.special.pbdv_seq.html#scipy.special.pbdv_seq
    "scipy.special.pbdv_seq")(v, x) | 抛物型缸函数 Dv(x) 及其导数 |'
- en: '| [`pbvv_seq`](generated/scipy.special.pbvv_seq.html#scipy.special.pbvv_seq
    "scipy.special.pbvv_seq")(v, x) | Parabolic cylinder functions Vv(x) and derivatives.
    |'
  id: totrans-307
  prefs: []
  type: TYPE_TB
  zh: '| [`pbvv_seq`](generated/scipy.special.pbvv_seq.html#scipy.special.pbvv_seq
    "scipy.special.pbvv_seq")(v, x) | 抛物型缸函数 Vv(x) 及其导数 |'
- en: '| [`pbdn_seq`](generated/scipy.special.pbdn_seq.html#scipy.special.pbdn_seq
    "scipy.special.pbdn_seq")(n, z) | Parabolic cylinder functions Dn(z) and derivatives.
    |'
  id: totrans-308
  prefs: []
  type: TYPE_TB
  zh: '| [`pbdn_seq`](generated/scipy.special.pbdn_seq.html#scipy.special.pbdn_seq
    "scipy.special.pbdn_seq")(n, z) | 抛物型缸函数 Dn(z) 及其导数 |'
- en: Mathieu and related functions
  id: totrans-309
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 马修及相关函数
- en: '| [`mathieu_a`](generated/scipy.special.mathieu_a.html#scipy.special.mathieu_a
    "scipy.special.mathieu_a")(m, q[, out]) | Characteristic value of even Mathieu
    functions |'
  id: totrans-310
  prefs: []
  type: TYPE_TB
  zh: '| [`mathieu_a`](generated/scipy.special.mathieu_a.html#scipy.special.mathieu_a
    "scipy.special.mathieu_a")(m, q[, out]) | 偶数马修函数的特征值 |'
- en: '| [`mathieu_b`](generated/scipy.special.mathieu_b.html#scipy.special.mathieu_b
    "scipy.special.mathieu_b")(m, q[, out]) | Characteristic value of odd Mathieu
    functions |'
  id: totrans-311
  prefs: []
  type: TYPE_TB
  zh: '| [`mathieu_b`](generated/scipy.special.mathieu_b.html#scipy.special.mathieu_b
    "scipy.special.mathieu_b")(m, q[, out]) | 奇数马修函数的特征值 |'
- en: 'The following functions do not accept NumPy arrays (they are not universal
    functions):'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 下列函数不接受 NumPy 数组（它们不是通用函数）：
- en: '| [`mathieu_even_coef`](generated/scipy.special.mathieu_even_coef.html#scipy.special.mathieu_even_coef
    "scipy.special.mathieu_even_coef")(m, q) | Fourier coefficients for even Mathieu
    and modified Mathieu functions. |'
  id: totrans-313
  prefs: []
  type: TYPE_TB
  zh: '| [`mathieu_even_coef`](generated/scipy.special.mathieu_even_coef.html#scipy.special.mathieu_even_coef
    "scipy.special.mathieu_even_coef")(m, q) | 偶数马修和修正马修函数的傅里叶系数 |'
- en: '| [`mathieu_odd_coef`](generated/scipy.special.mathieu_odd_coef.html#scipy.special.mathieu_odd_coef
    "scipy.special.mathieu_odd_coef")(m, q) | Fourier coefficients for even Mathieu
    and modified Mathieu functions. |'
  id: totrans-314
  prefs: []
  type: TYPE_TB
  zh: '| [`mathieu_odd_coef`](generated/scipy.special.mathieu_odd_coef.html#scipy.special.mathieu_odd_coef
    "scipy.special.mathieu_odd_coef")(m, q) | 偶数马修和修正马修函数的傅里叶系数 |'
- en: 'The following return both function and first derivative:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 下列函数返回函数及其一阶导数：
- en: '| [`mathieu_cem`](generated/scipy.special.mathieu_cem.html#scipy.special.mathieu_cem
    "scipy.special.mathieu_cem")(m, q, x[, out]) | Even Mathieu function and its derivative
    |'
  id: totrans-316
  prefs: []
  type: TYPE_TB
  zh: '| [`mathieu_cem`](generated/scipy.special.mathieu_cem.html#scipy.special.mathieu_cem
    "scipy.special.mathieu_cem")(m, q, x[, out]) | 偶数马修函数及其导数 |'
- en: '| [`mathieu_sem`](generated/scipy.special.mathieu_sem.html#scipy.special.mathieu_sem
    "scipy.special.mathieu_sem")(m, q, x[, out]) | Odd Mathieu function and its derivative
    |'
  id: totrans-317
  prefs: []
  type: TYPE_TB
  zh: '| [`mathieu_sem`](generated/scipy.special.mathieu_sem.html#scipy.special.mathieu_sem
    "scipy.special.mathieu_sem")(m, q, x[, out]) | 奇数马修函数及其导数 |'
- en: '| [`mathieu_modcem1`](generated/scipy.special.mathieu_modcem1.html#scipy.special.mathieu_modcem1
    "scipy.special.mathieu_modcem1")(m, q, x[, out]) | Even modified Mathieu function
    of the first kind and its derivative |'
  id: totrans-318
  prefs: []
  type: TYPE_TB
  zh: '| [`mathieu_modcem1`](generated/scipy.special.mathieu_modcem1.html#scipy.special.mathieu_modcem1
    "scipy.special.mathieu_modcem1")(m, q, x[, out]) | 第一类偶数修正马修函数及其导数 |'
- en: '| [`mathieu_modcem2`](generated/scipy.special.mathieu_modcem2.html#scipy.special.mathieu_modcem2
    "scipy.special.mathieu_modcem2")(m, q, x[, out]) | Even modified Mathieu function
    of the second kind and its derivative |'
  id: totrans-319
  prefs: []
  type: TYPE_TB
  zh: '| [`mathieu_modcem2`](generated/scipy.special.mathieu_modcem2.html#scipy.special.mathieu_modcem2
    "scipy.special.mathieu_modcem2")(m, q, x[, out]) | 第二类偶数修正马修函数及其导数 |'
- en: '| [`mathieu_modsem1`](generated/scipy.special.mathieu_modsem1.html#scipy.special.mathieu_modsem1
    "scipy.special.mathieu_modsem1")(m, q, x[, out]) | Odd modified Mathieu function
    of the first kind and its derivative |'
  id: totrans-320
  prefs: []
  type: TYPE_TB
  zh: '| [`mathieu_modsem1`](generated/scipy.special.mathieu_modsem1.html#scipy.special.mathieu_modsem1
    "scipy.special.mathieu_modsem1")(m, q, x[, out]) | 第一类奇数修正马修函数及其导数 |'
- en: '| [`mathieu_modsem2`](generated/scipy.special.mathieu_modsem2.html#scipy.special.mathieu_modsem2
    "scipy.special.mathieu_modsem2")(m, q, x[, out]) | Odd modified Mathieu function
    of the second kind and its derivative |'
  id: totrans-321
  prefs: []
  type: TYPE_TB
  zh: '| [`mathieu_modsem2`](generated/scipy.special.mathieu_modsem2.html#scipy.special.mathieu_modsem2
    "scipy.special.mathieu_modsem2")(m, q, x[, out]) | 奇异修正的马修函数第二类及其导数 |'
- en: Spheroidal wave functions
  id: totrans-322
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 椭圆体波函数
- en: '| [`pro_ang1`](generated/scipy.special.pro_ang1.html#scipy.special.pro_ang1
    "scipy.special.pro_ang1")(m, n, c, x[, out]) | Prolate spheroidal angular function
    of the first kind and its derivative |'
  id: totrans-323
  prefs: []
  type: TYPE_TB
  zh: '| [`pro_ang1`](generated/scipy.special.pro_ang1.html#scipy.special.pro_ang1
    "scipy.special.pro_ang1")(m, n, c, x[, out]) | 椭圆体第一类角函数及其导数 |'
- en: '| [`pro_rad1`](generated/scipy.special.pro_rad1.html#scipy.special.pro_rad1
    "scipy.special.pro_rad1")(m, n, c, x[, out]) | Prolate spheroidal radial function
    of the first kind and its derivative |'
  id: totrans-324
  prefs: []
  type: TYPE_TB
  zh: '| [`pro_rad1`](generated/scipy.special.pro_rad1.html#scipy.special.pro_rad1
    "scipy.special.pro_rad1")(m, n, c, x[, out]) | 椭圆体第一类径向函数及其导数 |'
- en: '| [`pro_rad2`](generated/scipy.special.pro_rad2.html#scipy.special.pro_rad2
    "scipy.special.pro_rad2")(m, n, c, x[, out]) | Prolate spheroidal radial function
    of the second kind and its derivative |'
  id: totrans-325
  prefs: []
  type: TYPE_TB
  zh: '| [`pro_rad2`](generated/scipy.special.pro_rad2.html#scipy.special.pro_rad2
    "scipy.special.pro_rad2")(m, n, c, x[, out]) | 椭圆体第二类径向函数及其导数 |'
- en: '| [`obl_ang1`](generated/scipy.special.obl_ang1.html#scipy.special.obl_ang1
    "scipy.special.obl_ang1")(m, n, c, x[, out]) | Oblate spheroidal angular function
    of the first kind and its derivative |'
  id: totrans-326
  prefs: []
  type: TYPE_TB
  zh: '| [`obl_ang1`](generated/scipy.special.obl_ang1.html#scipy.special.obl_ang1
    "scipy.special.obl_ang1")(m, n, c, x[, out]) | 椭圆体第一类角函数及其导数 |'
- en: '| [`obl_rad1`](generated/scipy.special.obl_rad1.html#scipy.special.obl_rad1
    "scipy.special.obl_rad1")(m, n, c, x[, out]) | Oblate spheroidal radial function
    of the first kind and its derivative |'
  id: totrans-327
  prefs: []
  type: TYPE_TB
  zh: '| [`obl_rad1`](generated/scipy.special.obl_rad1.html#scipy.special.obl_rad1
    "scipy.special.obl_rad1")(m, n, c, x[, out]) | 椭圆体第一类径向函数及其导数 |'
- en: '| [`obl_rad2`](generated/scipy.special.obl_rad2.html#scipy.special.obl_rad2
    "scipy.special.obl_rad2")(m, n, c, x[, out]) | Oblate spheroidal radial function
    of the second kind and its derivative. |'
  id: totrans-328
  prefs: []
  type: TYPE_TB
  zh: '| [`obl_rad2`](generated/scipy.special.obl_rad2.html#scipy.special.obl_rad2
    "scipy.special.obl_rad2")(m, n, c, x[, out]) | 椭圆体第二类径向函数及其导数。 |'
- en: '| [`pro_cv`](generated/scipy.special.pro_cv.html#scipy.special.pro_cv "scipy.special.pro_cv")(m, n, c[, out])
    | Characteristic value of prolate spheroidal function |'
  id: totrans-329
  prefs: []
  type: TYPE_TB
  zh: '| [`pro_cv`](generated/scipy.special.pro_cv.html#scipy.special.pro_cv "scipy.special.pro_cv")(m, n, c[, out])
    | 椭圆体函数的特征值 |'
- en: '| [`obl_cv`](generated/scipy.special.obl_cv.html#scipy.special.obl_cv "scipy.special.obl_cv")(m, n, c[, out])
    | Characteristic value of oblate spheroidal function |'
  id: totrans-330
  prefs: []
  type: TYPE_TB
  zh: '| [`obl_cv`](generated/scipy.special.obl_cv.html#scipy.special.obl_cv "scipy.special.obl_cv")(m, n, c[, out])
    | 椭圆体函数的特征值 |'
- en: '| [`pro_cv_seq`](generated/scipy.special.pro_cv_seq.html#scipy.special.pro_cv_seq
    "scipy.special.pro_cv_seq")(m, n, c) | Characteristic values for prolate spheroidal
    wave functions. |'
  id: totrans-331
  prefs: []
  type: TYPE_TB
  zh: '| [`pro_cv_seq`](generated/scipy.special.pro_cv_seq.html#scipy.special.pro_cv_seq
    "scipy.special.pro_cv_seq")(m, n, c) | 椭圆体波函数的特征值序列。 |'
- en: '| [`obl_cv_seq`](generated/scipy.special.obl_cv_seq.html#scipy.special.obl_cv_seq
    "scipy.special.obl_cv_seq")(m, n, c) | Characteristic values for oblate spheroidal
    wave functions. |'
  id: totrans-332
  prefs: []
  type: TYPE_TB
  zh: '| [`obl_cv_seq`](generated/scipy.special.obl_cv_seq.html#scipy.special.obl_cv_seq
    "scipy.special.obl_cv_seq")(m, n, c) | 椭圆体波函数的特征值序列。 |'
- en: 'The following functions require pre-computed characteristic value:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数需要预先计算特征值：
- en: '| [`pro_ang1_cv`](generated/scipy.special.pro_ang1_cv.html#scipy.special.pro_ang1_cv
    "scipy.special.pro_ang1_cv")(m, n, c, cv, x[, out]) | Prolate spheroidal angular
    function pro_ang1 for precomputed characteristic value |'
  id: totrans-334
  prefs: []
  type: TYPE_TB
  zh: '| [`pro_ang1_cv`](generated/scipy.special.pro_ang1_cv.html#scipy.special.pro_ang1_cv
    "scipy.special.pro_ang1_cv")(m, n, c, cv, x[, out]) | 预计算特征值的椭圆体角函数 pro_ang1 |'
- en: '| [`pro_rad1_cv`](generated/scipy.special.pro_rad1_cv.html#scipy.special.pro_rad1_cv
    "scipy.special.pro_rad1_cv")(m, n, c, cv, x[, out]) | Prolate spheroidal radial
    function pro_rad1 for precomputed characteristic value |'
  id: totrans-335
  prefs: []
  type: TYPE_TB
  zh: '| [`pro_rad1_cv`](generated/scipy.special.pro_rad1_cv.html#scipy.special.pro_rad1_cv
    "scipy.special.pro_rad1_cv")(m, n, c, cv, x[, out]) | 预计算特征值的椭圆体径向函数 pro_rad1
    |'
- en: '| [`pro_rad2_cv`](generated/scipy.special.pro_rad2_cv.html#scipy.special.pro_rad2_cv
    "scipy.special.pro_rad2_cv")(m, n, c, cv, x[, out]) | Prolate spheroidal radial
    function pro_rad2 for precomputed characteristic value |'
  id: totrans-336
  prefs: []
  type: TYPE_TB
  zh: '| [`pro_rad2_cv`](generated/scipy.special.pro_rad2_cv.html#scipy.special.pro_rad2_cv
    "scipy.special.pro_rad2_cv")(m, n, c, cv, x[, out]) | 预计算特征值的椭圆体径向函数 pro_rad2
    |'
- en: '| [`obl_ang1_cv`](generated/scipy.special.obl_ang1_cv.html#scipy.special.obl_ang1_cv
    "scipy.special.obl_ang1_cv")(m, n, c, cv, x[, out]) | Oblate spheroidal angular
    function obl_ang1 for precomputed characteristic value |'
  id: totrans-337
  prefs: []
  type: TYPE_TB
  zh: '| [`obl_ang1_cv`](generated/scipy.special.obl_ang1_cv.html#scipy.special.obl_ang1_cv
    "scipy.special.obl_ang1_cv")(m, n, c, cv, x[, out]) | 预计算特征值的椭球体角函数 obl_ang1_cv。
    |'
- en: '| [`obl_rad1_cv`](generated/scipy.special.obl_rad1_cv.html#scipy.special.obl_rad1_cv
    "scipy.special.obl_rad1_cv")(m, n, c, cv, x[, out]) | Oblate spheroidal radial
    function obl_rad1 for precomputed characteristic value |'
  id: totrans-338
  prefs: []
  type: TYPE_TB
  zh: '| [`obl_rad1_cv`](generated/scipy.special.obl_rad1_cv.html#scipy.special.obl_rad1_cv
    "scipy.special.obl_rad1_cv")(m, n, c, cv, x[, out]) | 预计算特征值的椭球体径向函数 obl_rad1_cv。
    |'
- en: '| [`obl_rad2_cv`](generated/scipy.special.obl_rad2_cv.html#scipy.special.obl_rad2_cv
    "scipy.special.obl_rad2_cv")(m, n, c, cv, x[, out]) | Oblate spheroidal radial
    function obl_rad2 for precomputed characteristic value |'
  id: totrans-339
  prefs: []
  type: TYPE_TB
  zh: '| [`obl_rad2_cv`](generated/scipy.special.obl_rad2_cv.html#scipy.special.obl_rad2_cv
    "scipy.special.obl_rad2_cv")(m, n, c, cv, x[, out]) | 预计算特征值的椭球体径向函数 obl_rad2_cv。
    |'
- en: Kelvin functions
  id: totrans-340
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Kelvin 函数
- en: '| [`kelvin`](generated/scipy.special.kelvin.html#scipy.special.kelvin "scipy.special.kelvin")(x[, out])
    | Kelvin functions as complex numbers |'
  id: totrans-341
  prefs: []
  type: TYPE_TB
  zh: '| [`kelvin`](generated/scipy.special.kelvin.html#scipy.special.kelvin "scipy.special.kelvin")(x[, out])
    | 复数形式的 Kelvin 函数 |'
- en: '| [`kelvin_zeros`](generated/scipy.special.kelvin_zeros.html#scipy.special.kelvin_zeros
    "scipy.special.kelvin_zeros")(nt) | Compute nt zeros of all Kelvin functions.
    |'
  id: totrans-342
  prefs: []
  type: TYPE_TB
  zh: '| [`kelvin_zeros`](generated/scipy.special.kelvin_zeros.html#scipy.special.kelvin_zeros
    "scipy.special.kelvin_zeros")(nt) | 计算所有 Kelvin 函数的 nt 个零点。 |'
- en: '| [`ber`](generated/scipy.special.ber.html#scipy.special.ber "scipy.special.ber")(x[, out])
    | Kelvin function ber. |'
  id: totrans-343
  prefs: []
  type: TYPE_TB
  zh: '| [`ber`](generated/scipy.special.ber.html#scipy.special.ber "scipy.special.ber")(x[, out])
    | Kelvin 函数 ber。 |'
- en: '| [`bei`](generated/scipy.special.bei.html#scipy.special.bei "scipy.special.bei")(x[, out])
    | Kelvin function bei. |'
  id: totrans-344
  prefs: []
  type: TYPE_TB
  zh: '| [`bei`](generated/scipy.special.bei.html#scipy.special.bei "scipy.special.bei")(x[, out])
    | Kelvin 函数 bei。 |'
- en: '| [`berp`](generated/scipy.special.berp.html#scipy.special.berp "scipy.special.berp")(x[, out])
    | Derivative of the Kelvin function ber. |'
  id: totrans-345
  prefs: []
  type: TYPE_TB
  zh: '| [`berp`](generated/scipy.special.berp.html#scipy.special.berp "scipy.special.berp")(x[, out])
    | Kelvin 函数 ber 的导数。 |'
- en: '| [`beip`](generated/scipy.special.beip.html#scipy.special.beip "scipy.special.beip")(x[, out])
    | Derivative of the Kelvin function bei. |'
  id: totrans-346
  prefs: []
  type: TYPE_TB
  zh: '| [`beip`](generated/scipy.special.beip.html#scipy.special.beip "scipy.special.beip")(x[, out])
    | Kelvin 函数 bei 的导数。 |'
- en: '| [`ker`](generated/scipy.special.ker.html#scipy.special.ker "scipy.special.ker")(x[, out])
    | Kelvin function ker. |'
  id: totrans-347
  prefs: []
  type: TYPE_TB
  zh: '| [`ker`](generated/scipy.special.ker.html#scipy.special.ker "scipy.special.ker")(x[, out])
    | Kelvin 函数 ker。 |'
- en: '| [`kei`](generated/scipy.special.kei.html#scipy.special.kei "scipy.special.kei")(x[, out])
    | Kelvin function kei. |'
  id: totrans-348
  prefs: []
  type: TYPE_TB
  zh: '| [`kei`](generated/scipy.special.kei.html#scipy.special.kei "scipy.special.kei")(x[, out])
    | Kelvin 函数 kei。 |'
- en: '| [`kerp`](generated/scipy.special.kerp.html#scipy.special.kerp "scipy.special.kerp")(x[, out])
    | Derivative of the Kelvin function ker. |'
  id: totrans-349
  prefs: []
  type: TYPE_TB
  zh: '| [`kerp`](generated/scipy.special.kerp.html#scipy.special.kerp "scipy.special.kerp")(x[, out])
    | Kelvin 函数 ker 的导数。 |'
- en: '| [`keip`](generated/scipy.special.keip.html#scipy.special.keip "scipy.special.keip")(x[, out])
    | Derivative of the Kelvin function kei. |'
  id: totrans-350
  prefs: []
  type: TYPE_TB
  zh: '| [`keip`](generated/scipy.special.keip.html#scipy.special.keip "scipy.special.keip")(x[, out])
    | Kelvin 函数 kei 的导数。 |'
- en: 'The following functions do not accept NumPy arrays (they are not universal
    functions):'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数不接受 NumPy 数组（它们不是通用函数）：
- en: '| [`ber_zeros`](generated/scipy.special.ber_zeros.html#scipy.special.ber_zeros
    "scipy.special.ber_zeros")(nt) | Compute nt zeros of the Kelvin function ber.
    |'
  id: totrans-352
  prefs: []
  type: TYPE_TB
  zh: '| [`ber_zeros`](generated/scipy.special.ber_zeros.html#scipy.special.ber_zeros
    "scipy.special.ber_zeros")(nt) | 计算 Kelvin 函数 ber 的 nt 个零点。 |'
- en: '| [`bei_zeros`](generated/scipy.special.bei_zeros.html#scipy.special.bei_zeros
    "scipy.special.bei_zeros")(nt) | Compute nt zeros of the Kelvin function bei.
    |'
  id: totrans-353
  prefs: []
  type: TYPE_TB
  zh: '| [`bei_zeros`](generated/scipy.special.bei_zeros.html#scipy.special.bei_zeros
    "scipy.special.bei_zeros")(nt) | 计算 Kelvin 函数 bei 的 nt 个零点。 |'
- en: '| [`berp_zeros`](generated/scipy.special.berp_zeros.html#scipy.special.berp_zeros
    "scipy.special.berp_zeros")(nt) | Compute nt zeros of the derivative of the Kelvin
    function ber. |'
  id: totrans-354
  prefs: []
  type: TYPE_TB
  zh: '| [`berp_zeros`](generated/scipy.special.berp_zeros.html#scipy.special.berp_zeros
    "scipy.special.berp_zeros")(nt) | 计算 Kelvin 函数 ber 的导数的 nt 个零点。 |'
- en: '| [`beip_zeros`](generated/scipy.special.beip_zeros.html#scipy.special.beip_zeros
    "scipy.special.beip_zeros")(nt) | Compute nt zeros of the derivative of the Kelvin
    function bei. |'
  id: totrans-355
  prefs: []
  type: TYPE_TB
  zh: '| [`beip_zeros`](generated/scipy.special.beip_zeros.html#scipy.special.beip_zeros
    "scipy.special.beip_zeros")(nt) | 计算 Kelvin 函数 bei 的导数的 nt 个零点。 |'
- en: '| [`ker_zeros`](generated/scipy.special.ker_zeros.html#scipy.special.ker_zeros
    "scipy.special.ker_zeros")(nt) | Compute nt zeros of the Kelvin function ker.
    |'
  id: totrans-356
  prefs: []
  type: TYPE_TB
  zh: '| [`ker_zeros`](generated/scipy.special.ker_zeros.html#scipy.special.ker_zeros
    "scipy.special.ker_zeros")(nt) | 计算 Kelvin 函数 ker 的 nt 个零点。 |'
- en: '| [`kei_zeros`](generated/scipy.special.kei_zeros.html#scipy.special.kei_zeros
    "scipy.special.kei_zeros")(nt) | Compute nt zeros of the Kelvin function kei.
    |'
  id: totrans-357
  prefs: []
  type: TYPE_TB
  zh: '| [`kei_zeros`](generated/scipy.special.kei_zeros.html#scipy.special.kei_zeros
    "scipy.special.kei_zeros")(nt) | 计算 Kelvin 函数 kei 的 nt 个零点。 |'
- en: '| [`kerp_zeros`](generated/scipy.special.kerp_zeros.html#scipy.special.kerp_zeros
    "scipy.special.kerp_zeros")(nt) | Compute nt zeros of the derivative of the Kelvin
    function ker. |'
  id: totrans-358
  prefs: []
  type: TYPE_TB
  zh: '| [`kerp_zeros`](generated/scipy.special.kerp_zeros.html#scipy.special.kerp_zeros
    "scipy.special.kerp_zeros")(nt) | 计算 Kelvin 函数 ker 的导数的 nt 个零点。 |'
- en: '| [`keip_zeros`](generated/scipy.special.keip_zeros.html#scipy.special.keip_zeros
    "scipy.special.keip_zeros")(nt) | Compute nt zeros of the derivative of the Kelvin
    function kei. |'
  id: totrans-359
  prefs: []
  type: TYPE_TB
  zh: '| [`keip_zeros`](generated/scipy.special.keip_zeros.html#scipy.special.keip_zeros
    "scipy.special.keip_zeros")(nt) | 计算 Kelvin 函数 kei 的导数的 nt 个零点。 |'
- en: Combinatorics
  id: totrans-360
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 组合数学
- en: '| [`comb`](generated/scipy.special.comb.html#scipy.special.comb "scipy.special.comb")(N, k, *[, exact, repetition, legacy])
    | The number of combinations of N things taken k at a time. |'
  id: totrans-361
  prefs: []
  type: TYPE_TB
  zh: '| [`comb`](generated/scipy.special.comb.html#scipy.special.comb "scipy.special.comb")(N, k, *[, exact, repetition, legacy])
    | 从 N 个物体中取 k 个的组合数。 |'
- en: '| [`perm`](generated/scipy.special.perm.html#scipy.special.perm "scipy.special.perm")(N, k[, exact])
    | Permutations of N things taken k at a time, i.e., k-permutations of N. |'
  id: totrans-362
  prefs: []
  type: TYPE_TB
  zh: '| [`perm`](generated/scipy.special.perm.html#scipy.special.perm "scipy.special.perm")(N, k[, exact])
    | N 个物体中取 k 个的排列数，即 N 的 k 排列。 |'
- en: '| [`stirling2`](generated/scipy.special.stirling2.html#scipy.special.stirling2
    "scipy.special.stirling2")(N, K, *[, exact]) | Generate Stirling number(s) of
    the second kind. |'
  id: totrans-363
  prefs: []
  type: TYPE_TB
  zh: '| [`stirling2`](generated/scipy.special.stirling2.html#scipy.special.stirling2
    "scipy.special.stirling2")(N, K, *[, exact]) | 生成第二类 Stirling 数。 |'
- en: Lambert W and related functions
  id: totrans-364
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Lambert W 函数及相关函数
- en: '| [`lambertw`](generated/scipy.special.lambertw.html#scipy.special.lambertw
    "scipy.special.lambertw")(z[, k, tol]) | Lambert W function. |'
  id: totrans-365
  prefs: []
  type: TYPE_TB
  zh: '| [`lambertw`](generated/scipy.special.lambertw.html#scipy.special.lambertw
    "scipy.special.lambertw")(z[, k, tol]) | Lambert W 函数。 |'
- en: '| [`wrightomega`](generated/scipy.special.wrightomega.html#scipy.special.wrightomega
    "scipy.special.wrightomega")(z[, out]) | Wright Omega function. |'
  id: totrans-366
  prefs: []
  type: TYPE_TB
  zh: '| [`wrightomega`](generated/scipy.special.wrightomega.html#scipy.special.wrightomega
    "scipy.special.wrightomega")(z[, out]) | Wright Omega 函数。 |'
- en: Other special functions
  id: totrans-367
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他特殊函数
- en: '| [`agm`](generated/scipy.special.agm.html#scipy.special.agm "scipy.special.agm")(a, b[, out])
    | Compute the arithmetic-geometric mean of *a* and *b*. |'
  id: totrans-368
  prefs: []
  type: TYPE_TB
  zh: '| [`agm`](generated/scipy.special.agm.html#scipy.special.agm "scipy.special.agm")(a, b[, out])
    | 计算算术-几何平均数 *a* 和 *b* 的算术-几何平均数。 |'
- en: '| [`bernoulli`](generated/scipy.special.bernoulli.html#scipy.special.bernoulli
    "scipy.special.bernoulli")(n) | Bernoulli numbers B0..Bn (inclusive). |'
  id: totrans-369
  prefs: []
  type: TYPE_TB
  zh: '| [`bernoulli`](generated/scipy.special.bernoulli.html#scipy.special.bernoulli
    "scipy.special.bernoulli")(n) | 伯努利数 B0..Bn（包括）。 |'
- en: '| [`binom`](generated/scipy.special.binom.html#scipy.special.binom "scipy.special.binom")(x, y[, out])
    | Binomial coefficient considered as a function of two real variables. |'
  id: totrans-370
  prefs: []
  type: TYPE_TB
  zh: '| [`binom`](generated/scipy.special.binom.html#scipy.special.binom "scipy.special.binom")(x, y[, out])
    | 作为两个实数变量函数的二项式系数。 |'
- en: '| [`diric`](generated/scipy.special.diric.html#scipy.special.diric "scipy.special.diric")(x, n)
    | Periodic sinc function, also called the Dirichlet function. |'
  id: totrans-371
  prefs: []
  type: TYPE_TB
  zh: '| [`diric`](generated/scipy.special.diric.html#scipy.special.diric "scipy.special.diric")(x, n)
    | 周期正弦函数，也称为狄利克雷函数。 |'
- en: '| [`euler`](generated/scipy.special.euler.html#scipy.special.euler "scipy.special.euler")(n)
    | Euler numbers E(0), E(1), ..., E(n). |'
  id: totrans-372
  prefs: []
  type: TYPE_TB
  zh: '| [`euler`](generated/scipy.special.euler.html#scipy.special.euler "scipy.special.euler")(n)
    | 欧拉数 E(0), E(1), ..., E(n)。 |'
- en: '| [`expn`](generated/scipy.special.expn.html#scipy.special.expn "scipy.special.expn")(n, x[, out])
    | Generalized exponential integral En. |'
  id: totrans-373
  prefs: []
  type: TYPE_TB
  zh: '| [`expn`](generated/scipy.special.expn.html#scipy.special.expn "scipy.special.expn")(n, x[, out])
    | 广义指数积分 En。 |'
- en: '| [`exp1`](generated/scipy.special.exp1.html#scipy.special.exp1 "scipy.special.exp1")(z[, out])
    | Exponential integral E1. |'
  id: totrans-374
  prefs: []
  type: TYPE_TB
  zh: '| [`exp1`](generated/scipy.special.exp1.html#scipy.special.exp1 "scipy.special.exp1")(z[, out])
    | 指数积分 E1。 |'
- en: '| [`expi`](generated/scipy.special.expi.html#scipy.special.expi "scipy.special.expi")(x[, out])
    | Exponential integral Ei. |'
  id: totrans-375
  prefs: []
  type: TYPE_TB
  zh: '| [`expi`](generated/scipy.special.expi.html#scipy.special.expi "scipy.special.expi")(x[, out])
    | 指数积分 Ei。 |'
- en: '| [`factorial`](generated/scipy.special.factorial.html#scipy.special.factorial
    "scipy.special.factorial")(n[, exact]) | The factorial of a number or array of
    numbers. |'
  id: totrans-376
  prefs: []
  type: TYPE_TB
  zh: '| [`factorial`](generated/scipy.special.factorial.html#scipy.special.factorial
    "scipy.special.factorial")(n[, exact]) | 数字或数字数组的阶乘。 |'
- en: '| [`factorial2`](generated/scipy.special.factorial2.html#scipy.special.factorial2
    "scipy.special.factorial2")(n[, exact]) | Double factorial. |'
  id: totrans-377
  prefs: []
  type: TYPE_TB
  zh: '| [`factorial2`](generated/scipy.special.factorial2.html#scipy.special.factorial2
    "scipy.special.factorial2")(n[, exact]) | 双阶乘。 |'
- en: '| [`factorialk`](generated/scipy.special.factorialk.html#scipy.special.factorialk
    "scipy.special.factorialk")(n, k[, exact]) | Multifactorial of n of order k, n(!!...!).
    |'
  id: totrans-378
  prefs: []
  type: TYPE_TB
  zh: '| [`factorialk`](generated/scipy.special.factorialk.html#scipy.special.factorialk
    "scipy.special.factorialk")(n, k[, exact]) | n的k次多重阶乘，n(!!...!)。 |'
- en: '| [`shichi`](generated/scipy.special.shichi.html#scipy.special.shichi "scipy.special.shichi")(x[, out])
    | Hyperbolic sine and cosine integrals. |'
  id: totrans-379
  prefs: []
  type: TYPE_TB
  zh: '| [`shichi`](generated/scipy.special.shichi.html#scipy.special.shichi "scipy.special.shichi")(x[, out])
    | 双曲正弦和余弦积分。 |'
- en: '| [`sici`](generated/scipy.special.sici.html#scipy.special.sici "scipy.special.sici")(x[, out])
    | Sine and cosine integrals. |'
  id: totrans-380
  prefs: []
  type: TYPE_TB
  zh: '| [`sici`](generated/scipy.special.sici.html#scipy.special.sici "scipy.special.sici")(x[, out])
    | 正弦和余弦积分。 |'
- en: '| [`softmax`](generated/scipy.special.softmax.html#scipy.special.softmax "scipy.special.softmax")(x[, axis])
    | Compute the softmax function. |'
  id: totrans-381
  prefs: []
  type: TYPE_TB
  zh: '| [`softmax`](generated/scipy.special.softmax.html#scipy.special.softmax "scipy.special.softmax")(x[, axis])
    | 计算softmax函数。 |'
- en: '| [`log_softmax`](generated/scipy.special.log_softmax.html#scipy.special.log_softmax
    "scipy.special.log_softmax")(x[, axis]) | Compute the logarithm of the softmax
    function. |'
  id: totrans-382
  prefs: []
  type: TYPE_TB
  zh: '| [`log_softmax`](generated/scipy.special.log_softmax.html#scipy.special.log_softmax
    "scipy.special.log_softmax")(x[, axis]) | 计算softmax函数的对数。 |'
- en: '| [`spence`](generated/scipy.special.spence.html#scipy.special.spence "scipy.special.spence")(z[, out])
    | Spence''s function, also known as the dilogarithm. |'
  id: totrans-383
  prefs: []
  type: TYPE_TB
  zh: '| [`spence`](generated/scipy.special.spence.html#scipy.special.spence "scipy.special.spence")(z[, out])
    | 斯宾斯函数，也称为二阶狄利克雷函数。 |'
- en: '| [`zeta`](generated/scipy.special.zeta.html#scipy.special.zeta "scipy.special.zeta")(x[, q, out])
    | Riemann or Hurwitz zeta function. |'
  id: totrans-384
  prefs: []
  type: TYPE_TB
  zh: '| [`zeta`](generated/scipy.special.zeta.html#scipy.special.zeta "scipy.special.zeta")(x[, q, out])
    | 黎曼或Hurwitz zeta函数。 |'
- en: '| [`zetac`](generated/scipy.special.zetac.html#scipy.special.zetac "scipy.special.zetac")(x[, out])
    | Riemann zeta function minus 1. |'
  id: totrans-385
  prefs: []
  type: TYPE_TB
  zh: '| [`zetac`](generated/scipy.special.zetac.html#scipy.special.zetac "scipy.special.zetac")(x[, out])
    | 黎曼函数减1。 |'
- en: Convenience functions
  id: totrans-386
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 便捷函数
- en: '| [`cbrt`](generated/scipy.special.cbrt.html#scipy.special.cbrt "scipy.special.cbrt")(x[, out])
    | Element-wise cube root of *x*. |'
  id: totrans-387
  prefs: []
  type: TYPE_TB
  zh: '| [`cbrt`](generated/scipy.special.cbrt.html#scipy.special.cbrt "scipy.special.cbrt")(x[, out])
    | *x*的逐元立方根。 |'
- en: '| [`exp10`](generated/scipy.special.exp10.html#scipy.special.exp10 "scipy.special.exp10")(x[, out])
    | Compute `10**x` element-wise. |'
  id: totrans-388
  prefs: []
  type: TYPE_TB
  zh: '| [`exp10`](generated/scipy.special.exp10.html#scipy.special.exp10 "scipy.special.exp10")(x[, out])
    | 逐元素计算`10**x`。 |'
- en: '| [`exp2`](generated/scipy.special.exp2.html#scipy.special.exp2 "scipy.special.exp2")(x[, out])
    | Compute `2**x` element-wise. |'
  id: totrans-389
  prefs: []
  type: TYPE_TB
  zh: '| [`exp2`](generated/scipy.special.exp2.html#scipy.special.exp2 "scipy.special.exp2")(x[, out])
    | 逐元素计算`2**x`。 |'
- en: '| [`radian`](generated/scipy.special.radian.html#scipy.special.radian "scipy.special.radian")(d, m, s[, out])
    | Convert from degrees to radians. |'
  id: totrans-390
  prefs: []
  type: TYPE_TB
  zh: '| [`radian`](generated/scipy.special.radian.html#scipy.special.radian "scipy.special.radian")(d, m, s[, out])
    | 将度数转换为弧度。 |'
- en: '| [`cosdg`](generated/scipy.special.cosdg.html#scipy.special.cosdg "scipy.special.cosdg")(x[, out])
    | Cosine of the angle *x* given in degrees. |'
  id: totrans-391
  prefs: []
  type: TYPE_TB
  zh: '| [`cosdg`](generated/scipy.special.cosdg.html#scipy.special.cosdg "scipy.special.cosdg")(x[, out])
    | 以度为单位给出角度*x*的余弦。 |'
- en: '| [`sindg`](generated/scipy.special.sindg.html#scipy.special.sindg "scipy.special.sindg")(x[, out])
    | Sine of the angle *x* given in degrees. |'
  id: totrans-392
  prefs: []
  type: TYPE_TB
  zh: '| [`sindg`](generated/scipy.special.sindg.html#scipy.special.sindg "scipy.special.sindg")(x[, out])
    | 以度为单位给出角度*x*的正弦。 |'
- en: '| [`tandg`](generated/scipy.special.tandg.html#scipy.special.tandg "scipy.special.tandg")(x[, out])
    | Tangent of angle *x* given in degrees. |'
  id: totrans-393
  prefs: []
  type: TYPE_TB
  zh: '| [`tandg`](generated/scipy.special.tandg.html#scipy.special.tandg "scipy.special.tandg")(x[, out])
    | 以度为单位给出角度*x*的正切。 |'
- en: '| [`cotdg`](generated/scipy.special.cotdg.html#scipy.special.cotdg "scipy.special.cotdg")(x[, out])
    | Cotangent of the angle *x* given in degrees. |'
  id: totrans-394
  prefs: []
  type: TYPE_TB
  zh: '| [`cotdg`](generated/scipy.special.cotdg.html#scipy.special.cotdg "scipy.special.cotdg")(x[, out])
    | 以度为单位给出角度*x*的余切。 |'
- en: '| [`log1p`](generated/scipy.special.log1p.html#scipy.special.log1p "scipy.special.log1p")(x[, out])
    | Calculates log(1 + x) for use when *x* is near zero. |'
  id: totrans-395
  prefs: []
  type: TYPE_TB
  zh: '| [`log1p`](generated/scipy.special.log1p.html#scipy.special.log1p "scipy.special.log1p")(x[, out])
    | 计算log(1 + x)，当*x*接近零时使用。 |'
- en: '| [`expm1`](generated/scipy.special.expm1.html#scipy.special.expm1 "scipy.special.expm1")(x[, out])
    | Compute `exp(x) - 1`. |'
  id: totrans-396
  prefs: []
  type: TYPE_TB
  zh: '| [`expm1`](generated/scipy.special.expm1.html#scipy.special.expm1 "scipy.special.expm1")(x[, out])
    | 计算`exp(x) - 1`。 |'
- en: '| [`cosm1`](generated/scipy.special.cosm1.html#scipy.special.cosm1 "scipy.special.cosm1")(x[, out])
    | cos(x) - 1 for use when *x* is near zero. |'
  id: totrans-397
  prefs: []
  type: TYPE_TB
  zh: '| [`cosm1`](generated/scipy.special.cosm1.html#scipy.special.cosm1 "scipy.special.cosm1")(x[, out])
    | 当*x*接近零时，计算cos(x) - 1。 |'
- en: '| [`powm1`](generated/scipy.special.powm1.html#scipy.special.powm1 "scipy.special.powm1")(x, y[, out])
    | Computes `x**y - 1`. |'
  id: totrans-398
  prefs: []
  type: TYPE_TB
  zh: '| [`powm1`](generated/scipy.special.powm1.html#scipy.special.powm1 "scipy.special.powm1")(x, y[, out])
    | 计算`x**y - 1`。 |'
- en: '| [`round`](generated/scipy.special.round.html#scipy.special.round "scipy.special.round")(x[, out])
    | Round to the nearest integer. |'
  id: totrans-399
  prefs: []
  type: TYPE_TB
  zh: '[`round`](generated/scipy.special.round.html#scipy.special.round "scipy.special.round")(x[, out])
    | 四舍五入到最近的整数。'
- en: '| [`xlogy`](generated/scipy.special.xlogy.html#scipy.special.xlogy "scipy.special.xlogy")(x, y[, out])
    | Compute `x*log(y)` so that the result is 0 if `x = 0`. |'
  id: totrans-400
  prefs: []
  type: TYPE_TB
  zh: '[`xlogy`](generated/scipy.special.xlogy.html#scipy.special.xlogy "scipy.special.xlogy")(x, y[, out])
    | 计算 `x*log(y)`，若 `x = 0` 则结果为 0。'
- en: '| [`xlog1py`](generated/scipy.special.xlog1py.html#scipy.special.xlog1py "scipy.special.xlog1py")(x, y[, out])
    | Compute `x*log1p(y)` so that the result is 0 if `x = 0`. |'
  id: totrans-401
  prefs: []
  type: TYPE_TB
  zh: '[`xlog1py`](generated/scipy.special.xlog1py.html#scipy.special.xlog1py "scipy.special.xlog1py")(x, y[, out])
    | 计算 `x*log1p(y)`，若 `x = 0` 则结果为 0。'
- en: '| [`logsumexp`](generated/scipy.special.logsumexp.html#scipy.special.logsumexp
    "scipy.special.logsumexp")(a[, axis, b, keepdims, return_sign]) | Compute the
    log of the sum of exponentials of input elements. |'
  id: totrans-402
  prefs: []
  type: TYPE_TB
  zh: '[`logsumexp`](generated/scipy.special.logsumexp.html#scipy.special.logsumexp
    "scipy.special.logsumexp")(a[, axis, b, keepdims, return_sign]) | 计算输入元素的指数函数和的对数。'
- en: '| [`exprel`](generated/scipy.special.exprel.html#scipy.special.exprel "scipy.special.exprel")(x[, out])
    | Relative error exponential, `(exp(x) - 1)/x`. |'
  id: totrans-403
  prefs: []
  type: TYPE_TB
  zh: '[`exprel`](generated/scipy.special.exprel.html#scipy.special.exprel "scipy.special.exprel")(x[, out])
    | 相对误差指数函数，`(exp(x) - 1)/x`。'
- en: '| [`sinc`](generated/scipy.special.sinc.html#scipy.special.sinc "scipy.special.sinc")(x)
    | Return the normalized sinc function. |'
  id: totrans-404
  prefs: []
  type: TYPE_TB
  zh: '[`sinc`](generated/scipy.special.sinc.html#scipy.special.sinc "scipy.special.sinc")(x)
    | 返回归一化的 sinc 函数。'
