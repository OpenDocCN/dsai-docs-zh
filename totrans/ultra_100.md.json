["```py\n`pip  install  -U  ultralytics  sahi` \n```", "```py\n`from sahi.utils.file import download_from_url from sahi.utils.yolov8 import download_yolov8s_model  # Download YOLOv8 model yolov8_model_path = \"models/yolov8s.pt\" download_yolov8s_model(yolov8_model_path)  # Download test images download_from_url(     \"https://raw.githubusercontent.com/obss/sahi/main/demo/demo_data/small-vehicles1.jpeg\",     \"demo_data/small-vehicles1.jpeg\", ) download_from_url(     \"https://raw.githubusercontent.com/obss/sahi/main/demo/demo_data/terrain2.png\",     \"demo_data/terrain2.png\", )` \n```", "```py\n`from sahi import AutoDetectionModel  detection_model = AutoDetectionModel.from_pretrained(     model_type=\"yolov8\",     model_path=yolov8_model_path,     confidence_threshold=0.3,     device=\"cpu\",  # or 'cuda:0' )` \n```", "```py\n`from sahi.predict import get_prediction  # With an image path result = get_prediction(\"demo_data/small-vehicles1.jpeg\", detection_model)  # With a numpy image result = get_prediction(read_image(\"demo_data/small-vehicles1.jpeg\"), detection_model)` \n```", "```py\n`result.export_visuals(export_dir=\"demo_data/\") Image(\"demo_data/prediction_visual.png\")` \n```", "```py\n`from sahi.predict import get_sliced_prediction  result = get_sliced_prediction(     \"demo_data/small-vehicles1.jpeg\",     detection_model,     slice_height=256,     slice_width=256,     overlap_height_ratio=0.2,     overlap_width_ratio=0.2, )` \n```", "```py\n`# Access the object prediction list object_prediction_list = result.object_prediction_list  # Convert to COCO annotation, COCO prediction, imantics, and fiftyone formats result.to_coco_annotations()[:3] result.to_coco_predictions(image_id=1)[:3] result.to_imantics_annotations()[:3] result.to_fiftyone_detections()[:3]` \n```", "```py\n`from sahi.predict import predict  predict(     model_type=\"yolov8\",     model_path=\"path/to/yolov8n.pt\",     model_device=\"cpu\",  # or 'cuda:0'     model_confidence_threshold=0.4,     source=\"path/to/dir\",     slice_height=256,     slice_width=256,     overlap_height_ratio=0.2,     overlap_width_ratio=0.2, )` \n```", "```py\n`@article{akyon2022sahi,   title={Slicing Aided Hyper Inference and Fine-tuning for Small Object Detection},   author={Akyon, Fatih Cagatay and Altinuc, Sinan Onur and Temizel, Alptekin},   journal={2022 IEEE International Conference on Image Processing (ICIP)},   doi={10.1109/ICIP46576.2022.9897990},   pages={966-970},   year={2022} }` \n```", "```py\n`pip  install  -U  ultralytics  sahi` \n```", "```py\n`from sahi.utils.file import download_from_url from sahi.utils.yolov8 import download_yolov8s_model  # Download YOLOv8 model yolov8_model_path = \"models/yolov8s.pt\" download_yolov8s_model(yolov8_model_path)  # Download test images download_from_url(     \"https://raw.githubusercontent.com/obss/sahi/main/demo/demo_data/small-vehicles1.jpeg\",     \"demo_data/small-vehicles1.jpeg\", )` \n```", "```py\n`result.export_visuals(export_dir=\"demo_data/\") from IPython.display import Image  Image(\"demo_data/prediction_visual.png\")` \n```", "```py\n`from sahi.predict import predict  predict(     model_type=\"yolov8\",     model_path=\"path/to/yolov8n.pt\",     model_device=\"cpu\",  # or 'cuda:0'     model_confidence_threshold=0.4,     source=\"path/to/dir\",     slice_height=256,     slice_width=256,     overlap_height_ratio=0.2,     overlap_width_ratio=0.2, )` \n```"]