["```py\nscipy.linalg.schur(a, output='real', lwork=None, overwrite_a=False, sort=None, check_finite=True)\n```", "```py\nA = Z T Z^H \n```", "```py\n'lhp'   Left-hand plane (x.real < 0.0)\n'rhp'   Right-hand plane (x.real > 0.0)\n'iuc'   Inside the unit circle (x*x.conjugate() <= 1.0)\n'ouc'   Outside the unit circle (x*x.conjugate() > 1.0) \n```", "```py\n>>> import numpy as np\n>>> from scipy.linalg import schur, eigvals\n>>> A = np.array([[0, 2, 2], [0, 1, 2], [1, 0, 1]])\n>>> T, Z = schur(A)\n>>> T\narray([[ 2.65896708,  1.42440458, -1.92933439],\n [ 0\\.        , -0.32948354, -0.49063704],\n [ 0\\.        ,  1.31178921, -0.32948354]])\n>>> Z\narray([[0.72711591, -0.60156188, 0.33079564],\n [0.52839428, 0.79801892, 0.28976765],\n [0.43829436, 0.03590414, -0.89811411]]) \n```", "```py\n>>> T2, Z2 = schur(A, output='complex')\n>>> T2\narray([[ 2.65896708, -1.22839825+1.32378589j,  0.42590089+1.51937378j], # may vary\n [ 0\\.        , -0.32948354+0.80225456j, -0.59877807+0.56192146j],\n [ 0\\.        ,  0\\.                    , -0.32948354-0.80225456j]])\n>>> eigvals(T2)\narray([2.65896708, -0.32948354+0.80225456j, -0.32948354-0.80225456j]) \n```", "```py\n>>> T3, Z3, sdim = schur(A, output='complex', sort=lambda x: x.imag > 0)\n>>> sdim\n1 \n```"]