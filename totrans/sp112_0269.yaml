- en: scipy.linalg.lu_factor
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.lu_factor.html#scipy.linalg.lu_factor](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.lu_factor.html#scipy.linalg.lu_factor)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute pivoted LU decomposition of a matrix.
  prefs: []
  type: TYPE_NORMAL
- en: 'The decomposition is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: where P is a permutation matrix, L lower triangular with unit diagonal elements,
    and U upper triangular.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**(M, N) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Matrix to decompose
  prefs: []
  type: TYPE_NORMAL
- en: '**overwrite_a**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to overwrite data in A (may increase performance)
  prefs: []
  type: TYPE_NORMAL
- en: '**check_finite**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to check that the input matrix contains only finite numbers. Disabling
    may give a performance gain, but may result in problems (crashes, non-termination)
    if the inputs do contain infinities or NaNs.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**lu**(M, N) ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Matrix containing U in its upper triangle, and L in its lower triangle. The
    unit diagonal elements of L are not stored.
  prefs: []
  type: TYPE_NORMAL
- en: '**piv**(K,) ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: 'Pivot indices representing the permutation matrix P: row i of matrix was interchanged
    with row piv[i]. Of shape `(K,)`, with `K = min(M, N)`.'
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`lu`](scipy.linalg.lu.html#scipy.linalg.lu "scipy.linalg.lu")'
  prefs: []
  type: TYPE_NORMAL
- en: gives lu factorization in more user-friendly format
  prefs: []
  type: TYPE_NORMAL
- en: '[`lu_solve`](scipy.linalg.lu_solve.html#scipy.linalg.lu_solve "scipy.linalg.lu_solve")'
  prefs: []
  type: TYPE_NORMAL
- en: solve an equation system using the LU factorization of a matrix
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This is a wrapper to the `*GETRF` routines from LAPACK. Unlike [`lu`](scipy.linalg.lu.html#scipy.linalg.lu
    "scipy.linalg.lu"), it outputs the L and U factors into a single array and returns
    pivot indices instead of a permutation matrix.
  prefs: []
  type: TYPE_NORMAL
- en: While the underlying `*GETRF` routines return 1-based pivot indices, the `piv`
    array returned by `lu_factor` contains 0-based indices.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Convert LAPACK’s `piv` array to NumPy index and test the permutation
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The P matrix in P L U is defined by the inverse permutation and can be recovered
    using argsort:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'or alternatively:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
