- en: numpy.testing.clear_and_catch_warnings
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.testing.clear_and_catch_warnings
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.testing.clear_and_catch_warnings.html](https://numpy.org/doc/1.26/reference/generated/numpy.testing.clear_and_catch_warnings.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.testing.clear_and_catch_warnings.html](https://numpy.org/doc/1.26/reference/generated/numpy.testing.clear_and_catch_warnings.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Context manager that resets warning registry for catching warnings
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 重置警告注册表以捕获警告的上下文管理器
- en: 'Warnings can be slippery, because, whenever a warning is triggered, Python
    adds a `__warningregistry__` member to the *calling* module. This makes it impossible
    to retrigger the warning in this module, whatever you put in the warnings filters.
    This context manager accepts a sequence of *modules* as a keyword argument to
    its constructor and:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 警告可能很棘手，因为每当触发警告时，Python会在*calling*模块中添加一个`__warningregistry__`成员。这使得在此模块中无法重新触发警告，无论您在警告过滤器中放置什么。此上下文管理器在其构造函数中接受*modules*的序列作为关键字参数，并：
- en: stores and removes any `__warningregistry__` entries in given *modules* on entry;
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在进入时存储和删除给定*modules*中的任何`__warningregistry__`条目；
- en: resets `__warningregistry__` to its previous state on exit.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在退出时将`__warningregistry__`重置为其先前状态。
- en: This makes it possible to trigger any warning afresh inside the context manager
    without disturbing the state of warnings outside.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这样可以在上下文管理器内部触发任何警告，而不会干扰外部警告的状态。
- en: For compatibility with Python 3.0, please consider all arguments to be keyword-only.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 为了与Python 3.0兼容，请考虑所有参数只能是关键字参数。
- en: 'Parameters:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**record**bool, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**record**bool，可选'
- en: Specifies whether warnings should be captured by a custom implementation of
    `warnings.showwarning()` and be appended to a list returned by the context manager.
    Otherwise None is returned by the context manager. The objects appended to the
    list are arguments whose attributes mirror the arguments to `showwarning()`.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 指定是否应该由`warnings.showwarning()`的自定义实现捕获警告，并将其附加到上下文管理器返回的列表中。否则，上下文管理器将返回None。附加到列表的对象是参数，其属性反映了`showwarning()`的参数。
- en: '**modules**sequence, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**modules**序列，可选'
- en: Sequence of modules for which to reset warnings registry on entry and restore
    on exit. To work correctly, all ‘ignore’ filters should filter by one of these
    modules.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 重置警告注册表以便在进入时重置警告注册表的模块序列，退出时恢复警告注册表。为了正常工作，所有的“ignore”过滤器都应该按照这些模块之一进行过滤。
- en: Examples
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
