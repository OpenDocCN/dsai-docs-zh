["```py\nscipy.interpolate.make_lsq_spline(x, y, t, k=3, w=None, axis=0, check_finite=True)\n```", "```py\n>>> import numpy as np\n>>> import matplotlib.pyplot as plt\n>>> rng = np.random.default_rng()\n>>> x = np.linspace(-3, 3, 50)\n>>> y = np.exp(-x**2) + 0.1 * rng.standard_normal(50) \n```", "```py\n>>> from scipy.interpolate import make_lsq_spline, BSpline\n>>> t = [-1, 0, 1]\n>>> k = 3\n>>> t = np.r_[(x[0],)*(k+1),\n...           t,\n...           (x[-1],)*(k+1)]\n>>> spl = make_lsq_spline(x, y, t, k) \n```", "```py\n>>> from scipy.interpolate import make_interp_spline\n>>> spl_i = make_interp_spline(x, y) \n```", "```py\n>>> xs = np.linspace(-3, 3, 100)\n>>> plt.plot(x, y, 'ro', ms=5)\n>>> plt.plot(xs, spl(xs), 'g-', lw=3, label='LSQ spline')\n>>> plt.plot(xs, spl_i(xs), 'b-', lw=3, alpha=0.7, label='interp spline')\n>>> plt.legend(loc='best')\n>>> plt.show() \n```", "```py\n>>> y[8] = np.nan\n>>> w = np.isnan(y)\n>>> y[w] = 0.\n>>> tck = make_lsq_spline(x, y, t, w=~w) \n```"]