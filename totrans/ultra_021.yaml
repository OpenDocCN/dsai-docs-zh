- en: 'YOLOv7: Trainable Bag-of-Freebies'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: YOLOv7：可训练的免费功能袋
- en: 原文：[`docs.ultralytics.com/models/yolov7/`](https://docs.ultralytics.com/models/yolov7/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[`docs.ultralytics.com/models/yolov7/`](https://docs.ultralytics.com/models/yolov7/)
- en: YOLOv7 is a state-of-the-art real-time object detector that surpasses all known
    object detectors in both speed and accuracy in the range from 5 FPS to 160 FPS.
    It has the highest accuracy (56.8% AP) among all known real-time object detectors
    with 30 FPS or higher on GPU V100\. Moreover, YOLOv7 outperforms other object
    detectors such as YOLOR, YOLOX, Scaled-YOLOv4, YOLOv5, and many others in speed
    and accuracy. The model is trained on the MS COCO dataset from scratch without
    using any other datasets or pre-trained weights. Source code for YOLOv7 is available
    on GitHub.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv7是一款超前的实时目标检测器，在5 FPS到160 FPS范围内超越所有已知的目标检测器，速度和准确性均卓越。在GPU V100上，它以30
    FPS或更高的速度实现了最高的准确性（56.8% AP）。此外，YOLOv7在速度和准确性上均优于其他目标检测器，如YOLOR、YOLOX、Scaled-YOLOv4、YOLOv5等。该模型完全基于MS
    COCO数据集进行了从零开始的训练，没有使用任何其他数据集或预训练权重。YOLOv7的源代码可在GitHub上找到。
- en: '![YOLOv7 comparison with SOTA object detectors](img/18f76aa310257154b0cf453177a38055.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![YOLOv7与SOTA目标检测器的比较](img/18f76aa310257154b0cf453177a38055.png)'
- en: Comparison of SOTA object detectors
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SOTA目标检测器比较
- en: From the results in the YOLO comparison table we know that the proposed method
    has the best speed-accuracy trade-off comprehensively. If we compare YOLOv7-tiny-SiLU
    with YOLOv5-N (r6.1), our method is 127 fps faster and 10.7% more accurate on
    AP. In addition, YOLOv7 has 51.4% AP at frame rate of 161 fps, while PPYOLOE-L
    with the same AP has only 78 fps frame rate. In terms of parameter usage, YOLOv7
    is 41% less than PPYOLOE-L. If we compare YOLOv7-X with 114 fps inference speed
    to YOLOv5-L (r6.1) with 99 fps inference speed, YOLOv7-X can improve AP by 3.9%.
    If YOLOv7-X is compared with YOLOv5-X (r6.1) of similar scale, the inference speed
    of YOLOv7-X is 31 fps faster. In addition, in terms the amount of parameters and
    computation, YOLOv7-X reduces 22% of parameters and 8% of computation compared
    to YOLOv5-X (r6.1), but improves AP by 2.2% ([Source](https://arxiv.org/pdf/2207.02696.pdf)).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 根据YOLO比较表中的结果，我们知道所提出的方法在速度-准确性平衡方面表现最佳。如果我们将YOLOv7-tiny-SiLU与YOLOv5-N（r6.1）进行比较，我们的方法在AP上更快127
    fps，准确性提高了10.7%。此外，YOLOv7在161 fps的帧率下具有51.4%的AP，而具有相同AP的PPYOLOE-L只有78 fps的帧率。在参数使用方面，YOLOv7比PPYOLOE-L少41%。如果我们将YOLOv7-X与具有99
    fps推理速度的YOLOv5-L（r6.1）进行比较，YOLOv7-X可以提高AP达到3.9%。如果将YOLOv7-X与相似规模的YOLOv5-X（r6.1）进行比较，YOLOv7-X的推理速度比较快31
    fps。此外，在参数量和计算量方面，与YOLOv5-X（r6.1）相比，YOLOv7-X减少了22%的参数和8%的计算量，但在AP上提高了2.2%（[来源](https://arxiv.org/pdf/2207.02696.pdf)）。
- en: '| Model | Params ^((M)) | FLOPs ^((G)) | Size ^((pixels)) | FPS | AP^(test
    / val 50-95) | AP^(test 50) | AP^(test 75) | AP^(test S) | AP^(test M) | AP^(test
    L) |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| Model | Params ^((M)) | FLOPs ^((G)) | Size ^((pixels)) | FPS | AP^(test
    / val 50-95) | AP^(test 50) | AP^(test 75) | AP^(test S) | AP^(test M) | AP^(test
    L) |'
- en: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |'
- en: '| [YOLOX-S](https://github.com/Megvii-BaseDetection/YOLOX) | **9.0M** | **26.8G**
    | 640 | **102** | 40.5% / 40.5% | - | - | - | - | - |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOX-S](https://github.com/Megvii-BaseDetection/YOLOX) | **9.0M** | **26.8G**
    | 640 | **102** | 40.5% / 40.5% | - | - | - | - | - |'
- en: '| [YOLOX-M](https://github.com/Megvii-BaseDetection/YOLOX) | 25.3M | 73.8G
    | 640 | 81 | 47.2% / 46.9% | - | - | - | - | - |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOX-M](https://github.com/Megvii-BaseDetection/YOLOX) | 25.3M | 73.8G
    | 640 | 81 | 47.2% / 46.9% | - | - | - | - | - |'
- en: '| [YOLOX-L](https://github.com/Megvii-BaseDetection/YOLOX) | 54.2M | 155.6G
    | 640 | 69 | 50.1% / 49.7% | - | - | - | - | - |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOX-L](https://github.com/Megvii-BaseDetection/YOLOX) | 54.2M | 155.6G
    | 640 | 69 | 50.1% / 49.7% | - | - | - | - | - |'
- en: '| [YOLOX-X](https://github.com/Megvii-BaseDetection/YOLOX) | 99.1M | 281.9G
    | 640 | 58 | **51.5% / 51.1%** | - | - | - | - | - |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOX-X](https://github.com/Megvii-BaseDetection/YOLOX) | 99.1M | 281.9G
    | 640 | 58 | **51.5% / 51.1%** | - | - | - | - | - |'
- en: '|  |  |  |  |  |  |  |  |  |  |  |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '|  |  |  |  |  |  |  |  |  |  |  |'
- en: '| [PPYOLOE-S](https://github.com/PaddlePaddle/PaddleDetection) | **7.9M** |
    **17.4G** | 640 | **208** | 43.1% / 42.7% | 60.5% | 46.6% | 23.2% | 46.4% | 56.9%
    |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| [PPYOLOE-S](https://github.com/PaddlePaddle/PaddleDetection) | **7.9M** |
    **17.4G** | 640 | **208** | 43.1% / 42.7% | 60.5% | 46.6% | 23.2% | 46.4% | 56.9%
    |'
- en: '| [PPYOLOE-M](https://github.com/PaddlePaddle/PaddleDetection) | 23.4M | 49.9G
    | 640 | 123 | 48.9% / 48.6% | 66.5% | 53.0% | 28.6% | 52.9% | 63.8% |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [PPYOLOE-M](https://github.com/PaddlePaddle/PaddleDetection) | 23.4M | 49.9G
    | 640 | 123 | 48.9% / 48.6% | 66.5% | 53.0% | 28.6% | 52.9% | 63.8% |'
- en: '| [PPYOLOE-L](https://github.com/PaddlePaddle/PaddleDetection) | 52.2M | 110.1G
    | 640 | 78 | 51.4% / 50.9% | 68.9% | 55.6% | 31.4% | 55.3% | 66.1% |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| [PPYOLOE-L](https://github.com/PaddlePaddle/PaddleDetection) | 52.2M | 110.1G
    | 640 | 78 | 51.4% / 50.9% | 68.9% | 55.6% | 31.4% | 55.3% | 66.1% |'
- en: '| [PPYOLOE-X](https://github.com/PaddlePaddle/PaddleDetection) | 98.4M | 206.6G
    | 640 | 45 | **52.2% / 51.9%** | **69.9%** | **56.5%** | **33.3%** | **56.3%**
    | **66.4%** |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [PPYOLOE-X](https://github.com/PaddlePaddle/PaddleDetection) | 98.4M | 206.6G
    | 640 | 45 | **52.2% / 51.9%** | **69.9%** | **56.5%** | **33.3%** | **56.3%**
    | **66.4%** |'
- en: '|  |  |  |  |  |  |  |  |  |  |  |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '|  |  |  |  |  |  |  |  |  |  |  |'
- en: '| [YOLOv5-N (r6.1)](https://github.com/ultralytics/yolov5) | **1.9M** | **4.5G**
    | 640 | **159** | - / 28.0% | - | - | - | - | - |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv5-N (r6.1)](https://github.com/ultralytics/yolov5) | **1.9M** | **4.5G**
    | 640 | **159** | - / 28.0% | - | - | - | - | - |'
- en: '| [YOLOv5-S (r6.1)](https://github.com/ultralytics/yolov5) | 7.2M | 16.5G |
    640 | 156 | - / 37.4% | - | - | - | - | - |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv5-S (r6.1)](https://github.com/ultralytics/yolov5) | 7.2M | 16.5G |
    640 | 156 | - / 37.4% | - | - | - | - | - |'
- en: '| [YOLOv5-M (r6.1)](https://github.com/ultralytics/yolov5) | 21.2M | 49.0G
    | 640 | 122 | - / 45.4% | - | - | - | - | - |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv5-M (r6.1)](https://github.com/ultralytics/yolov5) | 21.2M | 49.0G
    | 640 | 122 | - / 45.4% | - | - | - | - | - |'
- en: '| [YOLOv5-L (r6.1)](https://github.com/ultralytics/yolov5) | 46.5M | 109.1G
    | 640 | 99 | - / 49.0% | - | - | - | - | - |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv5-L (r6.1)](https://github.com/ultralytics/yolov5) | 46.5M | 109.1G
    | 640 | 99 | - / 49.0% | - | - | - | - | - |'
- en: '| [YOLOv5-X (r6.1)](https://github.com/ultralytics/yolov5) | 86.7M | 205.7G
    | 640 | 83 | - / **50.7%** | - | - | - | - | - |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv5-X (r6.1)](https://github.com/ultralytics/yolov5) | 86.7M | 205.7G
    | 640 | 83 | - / **50.7%** | - | - | - | - | - |'
- en: '|  |  |  |  |  |  |  |  |  |  |  |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '|  |  |  |  |  |  |  |  |  |  |  |'
- en: '| [YOLOR-CSP](https://github.com/WongKinYiu/yolor) | 52.9M | 120.4G | 640 |
    106 | 51.1% / 50.8% | 69.6% | 55.7% | 31.7% | 55.3% | 64.7% |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOR-CSP](https://github.com/WongKinYiu/yolor) | 52.9M | 120.4G | 640 |
    106 | 51.1% / 50.8% | 69.6% | 55.7% | 31.7% | 55.3% | 64.7% |'
- en: '| [YOLOR-CSP-X](https://github.com/WongKinYiu/yolor) | 96.9M | 226.8G | 640
    | 87 | 53.0% / 52.7% | 71.4% | 57.9% | 33.7% | 57.1% | 66.8% |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOR-CSP-X](https://github.com/WongKinYiu/yolor) | 96.9M | 226.8G | 640
    | 87 | 53.0% / 52.7% | 71.4% | 57.9% | 33.7% | 57.1% | 66.8% |'
- en: '| [YOLOv7-tiny-SiLU](https://github.com/WongKinYiu/yolov7) | **6.2M** | **13.8G**
    | 640 | **286** | 38.7% / 38.7% | 56.7% | 41.7% | 18.8% | 42.4% | 51.9% |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv7-tiny-SiLU](https://github.com/WongKinYiu/yolov7) | **6.2M** | **13.8G**
    | 640 | **286** | 38.7% / 38.7% | 56.7% | 41.7% | 18.8% | 42.4% | 51.9% |'
- en: '| [YOLOv7](https://github.com/WongKinYiu/yolov7) | 36.9M | 104.7G | 640 | 161
    | 51.4% / 51.2% | 69.7% | 55.9% | 31.8% | 55.5% | 65.0% |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv7](https://github.com/WongKinYiu/yolov7) | 36.9M | 104.7G | 640 | 161
    | 51.4% / 51.2% | 69.7% | 55.9% | 31.8% | 55.5% | 65.0% |'
- en: '| [YOLOv7-X](https://github.com/WongKinYiu/yolov7) | 71.3M | 189.9G | 640 |
    114 | **53.1% / 52.9%** | **71.2%** | **57.8%** | **33.8%** | **57.1%** | **67.4%**
    |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv7-X](https://github.com/WongKinYiu/yolov7) | 71.3M | 189.9G | 640 |
    114 | **53.1% / 52.9%** | **71.2%** | **57.8%** | **33.8%** | **57.1%** | **67.4%**
    |'
- en: '|  |  |  |  |  |  |  |  |  |  |  |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '|  |  |  |  |  |  |  |  |  |  |  |'
- en: '| [YOLOv5-N6 (r6.1)](https://github.com/ultralytics/yolov5) | **3.2M** | **18.4G**
    | 1280 | **123** | - / 36.0% | - | - | - | - | - |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv5-N6 (r6.1)](https://github.com/ultralytics/yolov5) | **3.2M** | **18.4G**
    | 1280 | **123** | - / 36.0% | - | - | - | - | - |'
- en: '| [YOLOv5-S6 (r6.1)](https://github.com/ultralytics/yolov5) | 12.6M | 67.2G
    | 1280 | 122 | - / 44.8% | - | - | - | - | - |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv5-S6 (r6.1)](https://github.com/ultralytics/yolov5) | 12.6M | 67.2G
    | 1280 | 122 | - / 44.8% | - | - | - | - | - |'
- en: '| [YOLOv5-M6 (r6.1)](https://github.com/ultralytics/yolov5) | 35.7M | 200.0G
    | 1280 | 90 | - / 51.3% | - | - | - | - | - |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv5-M6 (r6.1)](https://github.com/ultralytics/yolov5) | 35.7M | 200.0G
    | 1280 | 90 | - / 51.3% | - | - | - | - | - |'
- en: '| [YOLOv5-L6 (r6.1)](https://github.com/ultralytics/yolov5) | 76.8M | 445.6G
    | 1280 | 63 | - / 53.7% | - | - | - | - | - |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv5-L6 (r6.1)](https://github.com/ultralytics/yolov5) | 76.8M | 445.6G
    | 1280 | 63 | - / 53.7% | - | - | - | - | - |'
- en: '| [YOLOv5-X6 (r6.1)](https://github.com/ultralytics/yolov5) | 140.7M | 839.2G
    | 1280 | 38 | - / **55.0%** | - | - | - | - | - |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv5-X6 (r6.1)](https://github.com/ultralytics/yolov5) | 140.7M | 839.2G
    | 1280 | 38 | - / **55.0%** | - | - | - | - | - |'
- en: '|  |  |  |  |  |  |  |  |  |  |  |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '|  |  |  |  |  |  |  |  |  |  |  |'
- en: '| [YOLOR-P6](https://github.com/WongKinYiu/yolor) | **37.2M** | **325.6G**
    | 1280 | **76** | 53.9% / 53.5% | 71.4% | 58.9% | 36.1% | 57.7% | 65.6% |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOR-P6](https://github.com/WongKinYiu/yolor) | **37.2M** | **325.6G**
    | 1280 | **76** | 53.9% / 53.5% | 71.4% | 58.9% | 36.1% | 57.7% | 65.6% |'
- en: '| [YOLOR-W6](https://github.com/WongKinYiu/yolor) | 79.8G | 453.2G | 1280 |
    66 | 55.2% / 54.8% | 72.7% | 60.5% | 37.7% | 59.1% | 67.1% |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOR-W6](https://github.com/WongKinYiu/yolor) | 79.8G | 453.2G | 1280 |
    66 | 55.2% / 54.8% | 72.7% | 60.5% | 37.7% | 59.1% | 67.1% |'
- en: '| [YOLOR-E6](https://github.com/WongKinYiu/yolor) | 115.8M | 683.2G | 1280
    | 45 | 55.8% / 55.7% | 73.4% | 61.1% | 38.4% | 59.7% | 67.7% |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOR-E6](https://github.com/WongKinYiu/yolor) | 115.8M | 683.2G | 1280
    | 45 | 55.8% / 55.7% | 73.4% | 61.1% | 38.4% | 59.7% | 67.7% |'
- en: '| [YOLOR-D6](https://github.com/WongKinYiu/yolor) | 151.7M | 935.6G | 1280
    | 34 | **56.5% / 56.1%** | **74.1%** | **61.9%** | **38.9%** | **60.4%** | **68.7%**
    |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOR-D6](https://github.com/WongKinYiu/yolor) | 151.7M | 935.6G | 1280
    | 34 | **56.5% / 56.1%** | **74.1%** | **61.9%** | **38.9%** | **60.4%** | **68.7%**
    |'
- en: '|  |  |  |  |  |  |  |  |  |  |  |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '|  |  |  |  |  |  |  |  |  |  |  |'
- en: '| [YOLOv7-W6](https://github.com/WongKinYiu/yolov7) | **70.4M** | **360.0G**
    | 1280 | **84** | 54.9% / 54.6% | 72.6% | 60.1% | 37.3% | 58.7% | 67.1% |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv7-W6](https://github.com/WongKinYiu/yolov7) | **70.4M** | **360.0G**
    | 1280 | **84** | 54.9% / 54.6% | 72.6% | 60.1% | 37.3% | 58.7% | 67.1% |'
- en: '| [YOLOv7-E6](https://github.com/WongKinYiu/yolov7) | 97.2M | 515.2G | 1280
    | 56 | 56.0% / 55.9% | 73.5% | 61.2% | 38.0% | 59.9% | 68.4% |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv7-E6](https://github.com/WongKinYiu/yolov7) | 97.2M | 515.2G | 1280
    | 56 | 56.0% / 55.9% | 73.5% | 61.2% | 38.0% | 59.9% | 68.4% |'
- en: '| [YOLOv7-D6](https://github.com/WongKinYiu/yolov7) | 154.7M | 806.8G | 1280
    | 44 | 56.6% / 56.3% | 74.0% | 61.8% | 38.8% | 60.1% | 69.5% |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv7-D6](https://github.com/WongKinYiu/yolov7) | 154.7M | 806.8G | 1280
    | 44 | 56.6% / 56.3% | 74.0% | 61.8% | 38.8% | 60.1% | 69.5% |'
- en: '| [YOLOv7-E6E](https://github.com/WongKinYiu/yolov7) | 151.7M | 843.2G | 1280
    | 36 | **56.8% / 56.8%** | **74.4%** | **62.1%** | **39.3%** | **60.5%** | **69.0%**
    |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv7-E6E](https://github.com/WongKinYiu/yolov7) | 151.7M | 843.2G | 1280
    | 36 | **56.8% / 56.8%** | **74.4%** | **62.1%** | **39.3%** | **60.5%** | **69.0%**
    |'
- en: Overview
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概览
- en: Real-time object detection is an important component in many computer vision
    systems, including multi-object tracking, autonomous driving, robotics, and medical
    image analysis. In recent years, real-time object detection development has focused
    on designing efficient architectures and improving the inference speed of various
    CPUs, GPUs, and neural processing units (NPUs). YOLOv7 supports both mobile GPU
    and GPU devices, from the edge to the cloud.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 实时物体检测是许多计算机视觉系统的重要组成部分，包括多目标跟踪、自动驾驶、机器人技术和医学图像分析。近年来，实时物体检测的发展集中在设计高效的架构和提高各种CPU、GPU和神经处理单元（NPU）推理速度上。YOLOv7支持从边缘到云端的移动GPU和GPU设备。
- en: Unlike traditional real-time object detectors that focus on architecture optimization,
    YOLOv7 introduces a focus on the optimization of the training process. This includes
    modules and optimization methods designed to improve the accuracy of object detection
    without increasing the inference cost, a concept known as the "trainable bag-of-freebies".
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 与传统的实时物体检测器专注于架构优化不同，YOLOv7引入了专注于训练过程优化的概念。这包括设计用于提高物体检测准确性而不增加推理成本的模块和优化方法，被称为“可训练的免费物品袋”概念。
- en: Key Features
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关键特性
- en: 'YOLOv7 introduces several key features:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv7引入了几个关键特性：
- en: '**Model Re-parameterization**: YOLOv7 proposes a planned re-parameterized model,
    which is a strategy applicable to layers in different networks with the concept
    of gradient propagation path.'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**模型重新参数化**：YOLOv7提出了一种计划好的重新参数化模型，这是一种适用于不同网络中层的策略，具有梯度传播路径概念。'
- en: '**Dynamic Label Assignment**: The training of the model with multiple output
    layers presents a new issue: "How to assign dynamic targets for the outputs of
    different branches?" To solve this problem, YOLOv7 introduces a new label assignment
    method called coarse-to-fine lead guided label assignment.'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**动态标签分配**：使用多个输出层训练模型提出了一个新问题：“如何为不同分支的输出分配动态目标？”为了解决这个问题，YOLOv7引入了一种新的标签分配方法，称为粗到细的引导标签分配。'
- en: '**Extended and Compound Scaling**: YOLOv7 proposes "extend" and "compound scaling"
    methods for the real-time object detector that can effectively utilize parameters
    and computation.'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**扩展和复合缩放**：YOLOv7为实时物体检测器提出了“扩展”和“复合缩放”方法，可以有效利用参数和计算。'
- en: '**Efficiency**: The method proposed by YOLOv7 can effectively reduce about
    40% parameters and 50% computation of state-of-the-art real-time object detector,
    and has faster inference speed and higher detection accuracy.'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**效率**：YOLOv7提出的方法可以有效地减少最先进实时物体检测器约40%的参数和50%的计算量，并具有更快的推理速度和更高的检测精度。'
- en: Usage Examples
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用示例
- en: As of the time of writing, Ultralytics does not currently support YOLOv7 models.
    Therefore, any users interested in using YOLOv7 will need to refer directly to
    the YOLOv7 GitHub repository for installation and usage instructions.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 撰写时，Ultralytics目前不支持YOLOv7模型。因此，有兴趣使用YOLOv7的用户需要直接参考YOLOv7 GitHub存储库获取安装和使用说明。
- en: 'Here is a brief overview of the typical steps you might take to use YOLOv7:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这里简要介绍了使用YOLOv7可能采取的典型步骤：
- en: 'Visit the YOLOv7 GitHub repository: [`github.com/WongKinYiu/yolov7`](https://github.com/WongKinYiu/yolov7).'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问YOLOv7 GitHub存储库：[`github.com/WongKinYiu/yolov7`](https://github.com/WongKinYiu/yolov7)。
- en: Follow the instructions provided in the README file for installation. This typically
    involves cloning the repository, installing necessary dependencies, and setting
    up any necessary environment variables.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 跟随README文件中提供的说明进行安装。通常包括克隆存储库、安装必要的依赖项以及设置任何必要的环境变量。
- en: Once installation is complete, you can train and use the model as per the usage
    instructions provided in the repository. This usually involves preparing your
    dataset, configuring the model parameters, training the model, and then using
    the trained model to perform object detection.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，您可以按照仓库中提供的使用说明训练和使用模型。这通常包括准备数据集、配置模型参数、训练模型，然后使用训练好的模型进行目标检测。
- en: Please note that the specific steps may vary depending on your specific use
    case and the current state of the YOLOv7 repository. Therefore, it is strongly
    recommended to refer directly to the instructions provided in the YOLOv7 GitHub
    repository.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，具体步骤可能因特定用例和 YOLOv7 仓库的当前状态而有所不同。因此，强烈建议直接参考 YOLOv7 GitHub 仓库中提供的说明。
- en: We regret any inconvenience this may cause and will strive to update this document
    with usage examples for Ultralytics once support for YOLOv7 is implemented.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对可能造成的任何不便表示歉意，并将努力在 Ultralytics 支持 YOLOv7 后更新本文档以包含使用示例。
- en: Citations and Acknowledgements
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引用和致谢
- en: 'We would like to acknowledge the YOLOv7 authors for their significant contributions
    in the field of real-time object detection:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要感谢 YOLOv7 的作者在实时目标检测领域所做的重要贡献：
- en: '[PRE0]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The original YOLOv7 paper can be found on [arXiv](https://arxiv.org/pdf/2207.02696.pdf).
    The authors have made their work publicly available, and the codebase can be accessed
    on [GitHub](https://github.com/WongKinYiu/yolov7). We appreciate their efforts
    in advancing the field and making their work accessible to the broader community.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv7 的原始论文可在 [arXiv](https://arxiv.org/pdf/2207.02696.pdf) 上找到。作者已将他们的工作公开，并且代码库可以在
    [GitHub](https://github.com/WongKinYiu/yolov7) 上访问。我们感谢他们在推动领域发展和使他们的工作对更广泛的社区可用方面所做的努力。
- en: FAQ
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常见问题解答
- en: What is YOLOv7 and why is it considered a breakthrough in real-time object detection?
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: YOLOv7 是什么，为什么它被认为是实时目标检测的突破？
- en: YOLOv7 is a cutting-edge real-time object detection model that achieves unparalleled
    speed and accuracy. It surpasses other models, such as YOLOX, YOLOv5, and PPYOLOE,
    in both parameters usage and inference speed. YOLOv7's distinguishing features
    include its model re-parameterization and dynamic label assignment, which optimize
    its performance without increasing inference costs. For more technical details
    about its architecture and comparison metrics with other state-of-the-art object
    detectors, refer to the [YOLOv7 paper](https://arxiv.org/pdf/2207.02696.pdf).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv7 是一种前沿的实时目标检测模型，实现了无与伦比的速度和准确性。它超越了其他模型，如 YOLOX、YOLOv5 和 PPYOLOE，在参数使用和推断速度上。YOLOv7
    的显著特点包括模型重新参数化和动态标签分配，这些优化了其性能而没有增加推断成本。有关其架构和与其他领先的目标检测器的比较指标的更多技术细节，请参阅 [YOLOv7
    论文](https://arxiv.org/pdf/2207.02696.pdf)。
- en: How does YOLOv7 improve on previous YOLO models like YOLOv4 and YOLOv5?
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: YOLOv7 如何改进之前的 YOLO 模型（如 YOLOv4 和 YOLOv5）？
- en: YOLOv7 introduces several innovations, including model re-parameterization and
    dynamic label assignment, which enhance the training process and improve inference
    accuracy. Compared to YOLOv5, YOLOv7 significantly boosts speed and accuracy.
    For instance, YOLOv7-X improves accuracy by 2.2% and reduces parameters by 22%
    compared to YOLOv5-X. Detailed comparisons can be found in the performance table
    YOLOv7 comparison with SOTA object detectors.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv7 引入了几项创新，包括模型重新参数化和动态标签分配，这些创新增强了训练过程并提高了推断准确性。与 YOLOv5 相比，YOLOv7 显著提升了速度和准确性。例如，YOLOv7-X
    相比于 YOLOv5-X，提高了 2.2% 的准确性，并减少了 22% 的参数。详细的比较可在 YOLOv7 性能表格和 SOTA 目标检测器的对比中找到。
- en: Can I use YOLOv7 with Ultralytics tools and platforms?
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我可以使用 YOLOv7 与 Ultralytics 工具和平台吗？
- en: As of now, Ultralytics does not directly support YOLOv7 in its tools and platforms.
    Users interested in using YOLOv7 need to follow the installation and usage instructions
    provided in the [YOLOv7 GitHub repository](https://github.com/WongKinYiu/yolov7).
    For other state-of-the-art models, you can explore and train using Ultralytics
    tools like Ultralytics HUB.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，Ultralytics 平台不直接支持 YOLOv7。有兴趣使用 YOLOv7 的用户需要按照 [YOLOv7 GitHub 仓库](https://github.com/WongKinYiu/yolov7)
    中提供的安装和使用说明操作。对于其他领先的模型，您可以使用 Ultralytics HUB 进行探索和训练。
- en: How do I install and run YOLOv7 for a custom object detection project?
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何为自定义目标检测项目安装和运行 YOLOv7？
- en: 'To install and run YOLOv7, follow these steps:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装和运行 YOLOv7，请按照以下步骤操作：
- en: 'Clone the YOLOv7 repository:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 克隆 YOLOv7 仓库：
- en: '[PRE1]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Navigate to the cloned directory and install dependencies:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航至克隆的目录并安装依赖项：
- en: '[PRE2]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Prepare your dataset and configure the model parameters according to the [usage
    instructions](https://github.com/WongKinYiu/yolov7) provided in the repository.
    For further guidance, visit the YOLOv7 GitHub repository for the latest information
    and updates.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据存储库中提供的[使用说明](https://github.com/WongKinYiu/yolov7)准备您的数据集并配置模型参数。有关更多指导，请访问YOLOv7
    GitHub存储库以获取最新信息和更新。
- en: What are the key features and optimizations introduced in YOLOv7?
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: YOLOv7引入了哪些关键特性和优化？
- en: 'YOLOv7 offers several key features that revolutionize real-time object detection:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv7提供了几个关键特性，彻底改变了实时目标检测：
- en: '**Model Re-parameterization**: Enhances the model''s performance by optimizing
    gradient propagation paths.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型重参数化**：通过优化梯度传播路径来增强模型的性能。'
- en: '**Dynamic Label Assignment**: Uses a coarse-to-fine lead guided method to assign
    dynamic targets for outputs across different branches, improving accuracy.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**动态标签分配**：采用粗到细的引导方法为不同分支的输出分配动态目标，提高准确性。'
- en: '**Extended and Compound Scaling**: Efficiently utilizes parameters and computation
    to scale the model for various real-time applications.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**扩展和复合缩放**：有效利用参数和计算资源，以便为各种实时应用扩展模型。'
- en: '**Efficiency**: Reduces parameter count by 40% and computation by 50% compared
    to other state-of-the-art models while achieving faster inference speeds. For
    further details on these features, see the YOLOv7 Overview section.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**效率**：与其他最先进的模型相比，参数数量减少了40%，计算量减少了50%，同时实现了更快的推理速度。有关这些特性的更多详细信息，请参见YOLOv7概述部分。'
