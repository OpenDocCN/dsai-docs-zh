- en: Uses and Current limitations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/holonomic/uses.html](https://docs.sympy.org/latest/modules/holonomic/uses.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Integration
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'One can perform integrations using holonomic functions by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Convert the integrand to a holonomic function.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now integrate the holonomic representation of the function.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Convert the integral back to expressions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Examples
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: As you can see in the first example we converted the function to holonomic,
    integrated the result and then converted back to symbolic expression.
  prefs: []
  type: TYPE_NORMAL
- en: Limitations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 1\. Converting to expressions is not always possible. The holonomic function
    should have a hypergeometric series at `x0`.
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Implementation of converting to holonomic sequence currently doesn’t support
    `Frobenius method` when the solutions need to have \(\log\) terms. This happens
    when at least one pair of the roots of the indicial equation differ by an integer
    and frobenius method yields linearly dependent series solutions. Since we use
    this while converting to expressions, sometimes [`to_expr()`](operations.html#sympy.holonomic.holonomic.HolonomicFunction.to_expr
    "sympy.holonomic.holonomic.HolonomicFunction.to_expr") fails.
  prefs: []
  type: TYPE_NORMAL
- en: '3\. There doesn’t seem to be a way for computing indefinite integrals, so [`integrate()`](operations.html#sympy.holonomic.holonomic.HolonomicFunction.integrate
    "sympy.holonomic.holonomic.HolonomicFunction.integrate") basically computes \(\int_{x_0}^{x}
    f(x)dx\) if no limits are given, where \(x_0\) is the point at which initial conditions
    for the integrand are stored. Sometimes this gives an additional constant in the
    result. For instance:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The indefinite integral of \(\sin(x)\) is \(-\cos(x)\). But the output is \(-\cos(x)
    + 1\) which is \(\int_{0}^{x} sin(x)dx\). Although both are considered correct
    but \(-\cos(x)\) is simpler.
  prefs: []
  type: TYPE_NORMAL
