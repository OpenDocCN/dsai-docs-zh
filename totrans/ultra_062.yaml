- en: Image Classification Datasets Overview
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[`docs.ultralytics.com/datasets/classify/`](https://docs.ultralytics.com/datasets/classify/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Dataset Structure for YOLO Classification Tasks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For [Ultralytics](https://ultralytics.com) YOLO classification tasks, the dataset
    must be organized in a specific split-directory structure under the `root` directory
    to facilitate proper training, testing, and optional validation processes. This
    structure includes separate directories for training (`train`) and testing (`test`)
    phases, with an optional directory for validation (`val`).
  prefs: []
  type: TYPE_NORMAL
- en: Each of these directories should contain one subdirectory for each class in
    the dataset. The subdirectories are named after the corresponding class and contain
    all the images for that class. Ensure that each image file is named uniquely and
    stored in a common format such as JPEG or PNG.
  prefs: []
  type: TYPE_NORMAL
- en: '**Folder Structure Example**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider the CIFAR-10 dataset as an example. The folder structure should look
    like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: This structured approach ensures that the model can effectively learn from well-organized
    classes during the training phase and accurately evaluate performance during testing
    and validation phases.
  prefs: []
  type: TYPE_NORMAL
- en: Usage
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Example
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Supported Datasets
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Ultralytics supports the following datasets with automatic download:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Caltech 101: A dataset containing images of 101 object categories for image
    classification tasks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Caltech 256: An extended version of Caltech 101 with 256 object categories
    and more challenging images.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'CIFAR-10: A dataset of 60K 32x32 color images in 10 classes, with 6K images
    per class.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'CIFAR-100: An extended version of CIFAR-10 with 100 object categories and 600
    images per class.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Fashion-MNIST: A dataset consisting of 70,000 grayscale images of 10 fashion
    categories for image classification tasks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'ImageNet: A large-scale dataset for object detection and image classification
    with over 14 million images and 20,000 categories.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'ImageNet-10: A smaller subset of ImageNet with 10 categories for faster experimentation
    and testing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Imagenette: A smaller subset of ImageNet that contains 10 easily distinguishable
    classes for quicker training and testing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Imagewoof: A more challenging subset of ImageNet containing 10 dog breed categories
    for image classification tasks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'MNIST: A dataset of 70,000 grayscale images of handwritten digits for image
    classification tasks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding your own dataset
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you have your own dataset and would like to use it for training classification
    models with Ultralytics, ensure that it follows the format specified above under
    "Dataset format" and then point your `data` argument to the dataset directory.
  prefs: []
  type: TYPE_NORMAL
- en: FAQ
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: How do I structure my dataset for YOLO classification tasks?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To structure your dataset for Ultralytics YOLO classification tasks, you should
    follow a specific split-directory format. Organize your dataset into separate
    directories for `train`, `test`, and optionally `val`. Each of these directories
    should contain subdirectories named after each class, with the corresponding images
    inside. This facilitates smooth training and evaluation processes. For an example,
    consider the CIFAR-10 dataset format:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: For more details, visit Dataset Structure for YOLO Classification Tasks.
  prefs: []
  type: TYPE_NORMAL
- en: What datasets are supported by Ultralytics YOLO for image classification?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ultralytics YOLO supports automatic downloading of several datasets for image
    classification, including:'
  prefs: []
  type: TYPE_NORMAL
- en: Caltech 101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Caltech 256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CIFAR-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CIFAR-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fashion-MNIST
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ImageNet
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ImageNet-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Imagenette
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Imagewoof
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MNIST
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These datasets are structured in a way that makes them easy to use with YOLO.
    Each dataset's page provides further details about its structure and applications.
  prefs: []
  type: TYPE_NORMAL
- en: How do I add my own dataset for YOLO image classification?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To use your own dataset with Ultralytics YOLO, ensure it follows the specified
    directory format required for the classification task, with separate `train`,
    `test`, and optionally `val` directories, and subdirectories for each class containing
    the respective images. Once your dataset is structured correctly, point the `data`
    argument to your dataset''s root directory when initializing the training script.
    Here''s an example in Python:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: More details can be found in the Adding your own dataset section.
  prefs: []
  type: TYPE_NORMAL
- en: Why should I use Ultralytics YOLO for image classification?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ultralytics YOLO offers several benefits for image classification, including:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Pretrained Models**: Load pretrained models like `yolov8n-cls.pt` to jump-start
    your training process.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ease of Use**: Simple API and CLI commands for training and evaluation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**High Performance**: State-of-the-art accuracy and speed, ideal for real-time
    applications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Support for Multiple Datasets**: Seamless integration with various popular
    datasets like CIFAR-10, ImageNet, and more.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Community and Support**: Access to extensive documentation and an active
    community for troubleshooting and improvements.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For additional insights and real-world applications, you can explore [Ultralytics
    YOLO](https://www.ultralytics.com/yolo).
  prefs: []
  type: TYPE_NORMAL
- en: How can I train a model using Ultralytics YOLO?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Training a model using Ultralytics YOLO can be done easily in both Python and
    CLI. Here''s an example:'
  prefs: []
  type: TYPE_NORMAL
- en: Example
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: These examples demonstrate the straightforward process of training a YOLO model
    using either approach. For more information, visit the Usage section.
  prefs: []
  type: TYPE_NORMAL
