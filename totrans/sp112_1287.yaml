- en: scipy.stats.binned_statistic
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.binned_statistic.html#scipy.stats.binned_statistic](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.binned_statistic.html#scipy.stats.binned_statistic)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute a binned statistic for one or more sets of data.
  prefs: []
  type: TYPE_NORMAL
- en: This is a generalization of a histogram function. A histogram divides the space
    into bins, and returns the count of the number of points in each bin. This function
    allows the computation of the sum, mean, median, or other statistic of the values
    (or set of values) within each bin.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**(N,) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: A sequence of values to be binned.
  prefs: []
  type: TYPE_NORMAL
- en: '**values**(N,) array_like or list of (N,) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The data on which the statistic will be computed. This must be the same shape
    as *x*, or a set of sequences - each the same shape as *x*. If *values* is a set
    of sequences, the statistic will be computed on each independently.
  prefs: []
  type: TYPE_NORMAL
- en: '**statistic**string or callable, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'The statistic to compute (default is ‘mean’). The following statistics are
    available:'
  prefs: []
  type: TYPE_NORMAL
- en: '‘mean’ : compute the mean of values for points within each bin. Empty bins
    will be represented by NaN.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘std’ : compute the standard deviation within each bin. This is implicitly
    calculated with ddof=0.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘median’ : compute the median of values for points within each bin. Empty bins
    will be represented by NaN.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘count’ : compute the count of points within each bin. This is identical to
    an unweighted histogram. *values* array is not referenced.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘sum’ : compute the sum of values for points within each bin. This is identical
    to a weighted histogram.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘min’ : compute the minimum of values for points within each bin. Empty bins
    will be represented by NaN.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘max’ : compute the maximum of values for point within each bin. Empty bins
    will be represented by NaN.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'function : a user-defined function which takes a 1D array of values, and outputs
    a single numerical statistic. This function will be called on the values in each
    bin. Empty bins will be represented by function([]), or NaN if this returns an
    error.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '**bins**int or sequence of scalars, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If *bins* is an int, it defines the number of equal-width bins in the given
    range (10 by default). If *bins* is a sequence, it defines the bin edges, including
    the rightmost edge, allowing for non-uniform bin widths. Values in *x* that are
    smaller than lowest bin edge are assigned to bin number 0, values beyond the highest
    bin are assigned to `bins[-1]`. If the bin edges are specified, the number of
    bins will be, (nx = len(bins)-1).
  prefs: []
  type: TYPE_NORMAL
- en: '**range**(float, float) or [(float, float)], optional'
  prefs: []
  type: TYPE_NORMAL
- en: The lower and upper range of the bins. If not provided, range is simply `(x.min(),
    x.max())`. Values outside the range are ignored.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**statistic**array'
  prefs: []
  type: TYPE_NORMAL
- en: The values of the selected statistic in each bin.
  prefs: []
  type: TYPE_NORMAL
- en: '**bin_edges**array of dtype float'
  prefs: []
  type: TYPE_NORMAL
- en: Return the bin edges `(length(statistic)+1)`.
  prefs: []
  type: TYPE_NORMAL
- en: 'binnumber: 1-D ndarray of ints'
  prefs: []
  type: TYPE_NORMAL
- en: Indices of the bins (corresponding to *bin_edges*) in which each value of *x*
    belongs. Same length as *values*. A binnumber of *i* means the corresponding value
    is between (bin_edges[i-1], bin_edges[i]).
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.digitize`](https://numpy.org/devdocs/reference/generated/numpy.digitize.html#numpy.digitize
    "(in NumPy v2.0.dev0)"), [`numpy.histogram`](https://numpy.org/devdocs/reference/generated/numpy.histogram.html#numpy.histogram
    "(in NumPy v2.0.dev0)"), [`binned_statistic_2d`](scipy.stats.binned_statistic_2d.html#scipy.stats.binned_statistic_2d
    "scipy.stats.binned_statistic_2d"), [`binned_statistic_dd`](scipy.stats.binned_statistic_dd.html#scipy.stats.binned_statistic_dd
    "scipy.stats.binned_statistic_dd")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: All but the last (righthand-most) bin is half-open. In other words, if *bins*
    is `[1, 2, 3, 4]`, then the first bin is `[1, 2)` (including 1, but excluding
    2) and the second `[2, 3)`. The last bin, however, is `[3, 4]`, which *includes*
    4.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.11.0.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'First some basic examples:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Create two evenly spaced bins in the range of the given sample, and sum the
    corresponding values in each of those bins:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Multiple arrays of values can also be passed. The statistic is calculated on
    each set independently:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'As a second example, we now generate some random data of sailing boat speed
    as a function of wind speed, and then determine how fast our boat is for certain
    wind speeds:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Now we can use `binnumber` to select all datapoints with a windspeed below
    1:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'As a final example, we will use `bin_edges` and `binnumber` to make a plot
    of a distribution that shows the mean and distribution around that mean per bin,
    on top of a regular histogram and the probability distribution function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-stats-binned_statistic-1_00.png](../Images/7868d8a22e71db4e4f958db5edeeda1c.png)![../../_images/scipy-stats-binned_statistic-1_01.png](../Images/427c7247ee4d2b418c66c59f2e94600e.png)'
  prefs: []
  type: TYPE_IMG
