- en: scipy.linalg.qz
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.linalg.qz
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.qz.html#scipy.linalg.qz](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.qz.html#scipy.linalg.qz)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.qz.html#scipy.linalg.qz](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.qz.html#scipy.linalg.qz)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: QZ decomposition for generalized eigenvalues of a pair of matrices.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 用于一对矩阵的广义特征值的QZ分解。
- en: 'The QZ, or generalized Schur, decomposition for a pair of n-by-n matrices (A,B)
    is:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 一对n乘n矩阵（A，B）的QZ或广义舒尔分解是：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'where AA, BB is in generalized Schur form if BB is upper-triangular with non-negative
    diagonal and AA is upper-triangular, or for real QZ decomposition (`output=''real''`)
    block upper triangular with 1x1 and 2x2 blocks. In this case, the 1x1 blocks correspond
    to real generalized eigenvalues and 2x2 blocks are ‘standardized’ by making the
    corresponding elements of BB have the form:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果BB是具有非负对角线的上三角形状，且AA是上三角形状，则AA，BB位于广义舒尔形式中；或者对于实QZ分解（`output='real'`）块上三角形状，具有1x1和2x2块。在这种情况下，1x1块对应于实广义特征值，而2x2块通过使BB的对应元素具有以下形式而‘标准化’：
- en: '[PRE2]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: and the pair of corresponding 2x2 blocks in AA and BB will have a complex conjugate
    pair of generalized eigenvalues. If (`output='complex'`) or A and B are complex
    matrices, Z’ denotes the conjugate-transpose of Z. Q and Z are unitary matrices.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 并且AA和BB的对应的2x2块将具有一对复共轭的广义特征值。如果（`output='complex'`）或A和B是复矩阵，则Z’表示Z的共轭转置。Q和Z是酉矩阵。
- en: 'Parameters:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**A**(N, N) array_like'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**A**(N, N) array_like'
- en: 2-D array to decompose
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 用于分解的二维数组
- en: '**B**(N, N) array_like'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**B**(N, N) array_like'
- en: 2-D array to decompose
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 用于分解的二维数组
- en: '**output**{‘real’, ‘complex’}, optional'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**output**{‘real’, ‘complex’}，可选'
- en: Construct the real or complex QZ decomposition for real matrices. Default is
    ‘real’.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 构建实数或复数矩阵的QZ分解。默认为‘real’。
- en: '**lwork**int, optional'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**lwork**int，可选'
- en: Work array size. If None or -1, it is automatically computed.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 工作数组大小。如果为None或-1，则会自动计算。
- en: '**sort**{None, callable, ‘lhp’, ‘rhp’, ‘iuc’, ‘ouc’}, optional'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**sort**{None, callable, ‘lhp’, ‘rhp’, ‘iuc’, ‘ouc’}，可选'
- en: 'NOTE: THIS INPUT IS DISABLED FOR NOW. Use ordqz instead.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：此输入目前已禁用。请使用ordqz代替。
- en: 'Specifies whether the upper eigenvalues should be sorted. A callable may be
    passed that, given a eigenvalue, returns a boolean denoting whether the eigenvalue
    should be sorted to the top-left (True). For real matrix pairs, the sort function
    takes three real arguments (alphar, alphai, beta). The eigenvalue `x = (alphar
    + alphai*1j)/beta`. For complex matrix pairs or output=’complex’, the sort function
    takes two complex arguments (alpha, beta). The eigenvalue `x = (alpha/beta)`.
    Alternatively, string parameters may be used:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 指定是否应对上层特征值进行排序。可以传递一个可调用函数，给定一个特征值，返回一个布尔值，表示是否应将特征值排序到左上角（True）。对于实矩阵对，排序函数接受三个实参数（alphar,
    alphai, beta）。特征值 `x = (alphar + alphai*1j)/beta`。对于复矩阵对或者output=’complex’，排序函数接受两个复参数（alpha,
    beta）。特征值 `x = (alpha/beta)`。也可以使用字符串参数：
- en: ‘lhp’ Left-hand plane (x.real < 0.0)
  id: totrans-21
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘lhp’ 左平面（x.real < 0.0）
- en: ''
  id: totrans-22
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-23
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ‘rhp’ Right-hand plane (x.real > 0.0)
  id: totrans-24
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘rhp’ 右平面（x.real > 0.0）
- en: ''
  id: totrans-25
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-26
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ‘iuc’ Inside the unit circle (x*x.conjugate() < 1.0)
  id: totrans-27
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘iuc’ 单位圆内部（x*x.conjugate() < 1.0）
- en: ''
  id: totrans-28
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-29
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ‘ouc’ Outside the unit circle (x*x.conjugate() > 1.0)
  id: totrans-30
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘ouc’ 单位圆外部（x*x.conjugate() > 1.0）
- en: Defaults to None (no sorting).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 默认为None（不排序）。
- en: '**overwrite_a**bool, optional'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**overwrite_a**bool，可选'
- en: Whether to overwrite data in a (may improve performance)
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 是否覆盖a中的数据（可能提高性能）
- en: '**overwrite_b**bool, optional'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**overwrite_b**bool，可选'
- en: Whether to overwrite data in b (may improve performance)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 是否覆盖b中的数据（可能提高性能）
- en: '**check_finite**bool, optional'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**check_finite**bool，可选'
- en: If true checks the elements of *A* and *B* are finite numbers. If false does
    no checking and passes matrix through to underlying algorithm.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为true，则检查*A*和*B*的元素是否为有限数。如果为false，则不进行检查并将矩阵传递给底层算法。
- en: 'Returns:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**AA**(N, N) ndarray'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**AA**(N, N) ndarray'
- en: Generalized Schur form of A.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 一般化的 A 的舒尔形式。
- en: '**BB**(N, N) ndarray'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**BB**(N, N) ndarray'
- en: Generalized Schur form of B.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 一般化的 B 的舒尔形式。
- en: '**Q**(N, N) ndarray'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**Q**(N, N) ndarray'
- en: The left Schur vectors.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 左舒尔向量。
- en: '**Z**(N, N) ndarray'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**Z**(N, N) ndarray'
- en: The right Schur vectors.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 右舒尔向量。
- en: See also
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`ordqz`](scipy.linalg.ordqz.html#scipy.linalg.ordqz "scipy.linalg.ordqz")'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ordqz`](scipy.linalg.ordqz.html#scipy.linalg.ordqz "scipy.linalg.ordqz")'
- en: Notes
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: Q is transposed versus the equivalent function in Matlab.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Q相对于Matlab中等效函数是转置的。
- en: New in version 0.11.0.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本0.11.0中的新增内容。
- en: Examples
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE3]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Compute the decomposition. The QZ decomposition is not unique, so depending
    on the underlying library that is used, there may be differences in the signs
    of coefficients in the following output.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 计算分解。QZ 分解不唯一，因此根据所使用的基础库不同，以下输出中系数的符号可能会有所不同。
- en: '[PRE5]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Verify the QZ decomposition. With real output, we only need the transpose of
    `Z` in the following expressions.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 验证 QZ 分解。对于实数输出，在以下表达式中我们只需要`Z`的转置。
- en: '[PRE6]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Repeat the decomposition, but with `output='complex'`.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 重复分解，但使用`output='complex'`。
- en: '[PRE7]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: For conciseness in the output, we use `np.set_printoptions()` to set the output
    precision of NumPy arrays to 3 and display tiny values as 0.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 为了输出简洁，我们使用`np.set_printoptions()`来将 NumPy 数组的输出精度设置为 3，并将微小值显示为 0。
- en: '[PRE8]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: With complex arrays, we must use `Z.conj().T` in the following expressions to
    verify the decomposition.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 对于复数数组，在以下表达式中我们必须使用`Z.conj().T`来验证分解。
- en: '[PRE9]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
