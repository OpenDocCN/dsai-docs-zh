- en: numpy.issubclass_
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.issubclass_.html](https://numpy.org/doc/1.26/reference/generated/numpy.issubclass_.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Determine if a class is a subclass of a second class.
  prefs: []
  type: TYPE_NORMAL
- en: '[`issubclass_`](#numpy.issubclass_ "numpy.issubclass_") is equivalent to the
    Python built-in `issubclass`, except that it returns False instead of raising
    a TypeError if one of the arguments is not a class.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**arg1**class'
  prefs: []
  type: TYPE_NORMAL
- en: Input class. True is returned if *arg1* is a subclass of *arg2*.
  prefs: []
  type: TYPE_NORMAL
- en: '**arg2**class or tuple of classes.'
  prefs: []
  type: TYPE_NORMAL
- en: Input class. If a tuple of classes, True is returned if *arg1* is a subclass
    of any of the tuple elements.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**bool'
  prefs: []
  type: TYPE_NORMAL
- en: Whether *arg1* is a subclass of *arg2* or not.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`issubsctype`](numpy.issubsctype.html#numpy.issubsctype "numpy.issubsctype"),
    [`issubdtype`](numpy.issubdtype.html#numpy.issubdtype "numpy.issubdtype"), [`issctype`](numpy.issctype.html#numpy.issctype
    "numpy.issctype")'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
