- en: numpy.testing.clear_and_catch_warnings
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.testing.clear_and_catch_warnings.html](https://numpy.org/doc/1.26/reference/generated/numpy.testing.clear_and_catch_warnings.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Context manager that resets warning registry for catching warnings
  prefs: []
  type: TYPE_NORMAL
- en: 'Warnings can be slippery, because, whenever a warning is triggered, Python
    adds a `__warningregistry__` member to the *calling* module. This makes it impossible
    to retrigger the warning in this module, whatever you put in the warnings filters.
    This context manager accepts a sequence of *modules* as a keyword argument to
    its constructor and:'
  prefs: []
  type: TYPE_NORMAL
- en: stores and removes any `__warningregistry__` entries in given *modules* on entry;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: resets `__warningregistry__` to its previous state on exit.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This makes it possible to trigger any warning afresh inside the context manager
    without disturbing the state of warnings outside.
  prefs: []
  type: TYPE_NORMAL
- en: For compatibility with Python 3.0, please consider all arguments to be keyword-only.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**record**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Specifies whether warnings should be captured by a custom implementation of
    `warnings.showwarning()` and be appended to a list returned by the context manager.
    Otherwise None is returned by the context manager. The objects appended to the
    list are arguments whose attributes mirror the arguments to `showwarning()`.
  prefs: []
  type: TYPE_NORMAL
- en: '**modules**sequence, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Sequence of modules for which to reset warnings registry on entry and restore
    on exit. To work correctly, all ‘ignore’ filters should filter by one of these
    modules.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
