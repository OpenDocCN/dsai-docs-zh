- en: scipy.ndimage.distance_transform_bf
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.distance_transform_bf.html#scipy.ndimage.distance_transform_bf](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.distance_transform_bf.html#scipy.ndimage.distance_transform_bf)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Distance transform function by a brute force algorithm.
  prefs: []
  type: TYPE_NORMAL
- en: This function calculates the distance transform of the *input*, by replacing
    each foreground (non-zero) element, with its shortest distance to the background
    (any zero-valued element).
  prefs: []
  type: TYPE_NORMAL
- en: In addition to the distance transform, the feature transform can be calculated.
    In this case the index of the closest background element to each foreground element
    is returned in a separate array.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**input**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input
  prefs: []
  type: TYPE_NORMAL
- en: '**metric**{‘euclidean’, ‘taxicab’, ‘chessboard’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: ‘cityblock’ and ‘manhattan’ are also valid, and map to ‘taxicab’. The default
    is ‘euclidean’.
  prefs: []
  type: TYPE_NORMAL
- en: '**sampling**float, or sequence of float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: This parameter is only used when *metric* is ‘euclidean’. Spacing of elements
    along each dimension. If a sequence, must be of length equal to the input rank;
    if a single number, this is used for all axes. If not specified, a grid spacing
    of unity is implied.
  prefs: []
  type: TYPE_NORMAL
- en: '**return_distances**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to calculate the distance transform. Default is True.
  prefs: []
  type: TYPE_NORMAL
- en: '**return_indices**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to calculate the feature transform. Default is False.
  prefs: []
  type: TYPE_NORMAL
- en: '**distances**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: An output array to store the calculated distance transform, instead of returning
    it. *return_distances* must be True. It must be the same shape as *input*, and
    of type float64 if *metric* is ‘euclidean’, uint32 otherwise.
  prefs: []
  type: TYPE_NORMAL
- en: '**indices**int32 ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: An output array to store the calculated feature transform, instead of returning
    it. *return_indicies* must be True. Its shape must be *(input.ndim,) + input.shape*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**distances**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The calculated distance transform. Returned only when *return_distances* is
    True and *distances* is not supplied. It will have the same shape as the input
    array.
  prefs: []
  type: TYPE_NORMAL
- en: '**indices**int32 ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The calculated feature transform. It has an input-shaped array for each dimension
    of the input. See distance_transform_edt documentation for an example. Returned
    only when *return_indices* is True and *indices* is not supplied.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`distance_transform_cdt`](scipy.ndimage.distance_transform_cdt.html#scipy.ndimage.distance_transform_cdt
    "scipy.ndimage.distance_transform_cdt")'
  prefs: []
  type: TYPE_NORMAL
- en: Faster distance transform for taxicab and chessboard metrics
  prefs: []
  type: TYPE_NORMAL
- en: '[`distance_transform_edt`](scipy.ndimage.distance_transform_edt.html#scipy.ndimage.distance_transform_edt
    "scipy.ndimage.distance_transform_edt")'
  prefs: []
  type: TYPE_NORMAL
- en: Faster distance transform for euclidean metric
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This function employs a slow brute force algorithm. See also the function [`distance_transform_cdt`](scipy.ndimage.distance_transform_cdt.html#scipy.ndimage.distance_transform_cdt
    "scipy.ndimage.distance_transform_cdt") for more efficient taxicab [[1]](#r2d40d716dd7f-1)
    and chessboard algorithms [[2]](#r2d40d716dd7f-2).
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: Taxicab distance. Wikipedia, 2023. [https://en.wikipedia.org/wiki/Taxicab_geometry](https://en.wikipedia.org/wiki/Taxicab_geometry)
  prefs: []
  type: TYPE_NORMAL
- en: '[[2](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: Chessboard distance. Wikipedia, 2023. [https://en.wikipedia.org/wiki/Chebyshev_distance](https://en.wikipedia.org/wiki/Chebyshev_distance)
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Import the necessary modules.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: First, we create a toy binary image.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Next, we set up the figure.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The top left image is the original binary image.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The distance transform calculates the distance between foreground pixels and
    the image background according to a distance metric. Available metrics in [`distance_transform_bf`](#scipy.ndimage.distance_transform_bf
    "scipy.ndimage.distance_transform_bf") are: `euclidean` (default), `taxicab` and
    `chessboard`. The top right image contains the distance transform based on the
    `euclidean` metric.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The lower left image contains the distance transform using the `taxicab` metric.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Finally, the lower right image contains the distance transform using the `chessboard`
    metric.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-ndimage-distance_transform_bf-1.png](../Images/19f0bf69ce280b7acee30a88115f3935.png)'
  prefs: []
  type: TYPE_IMG
