- en: Activation (Docstrings)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/physics/biomechanics/api/activation.html](https://docs.sympy.org/latest/modules/physics/biomechanics/api/activation.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Activation dynamics for musclotendon models.
  prefs: []
  type: TYPE_NORMAL
- en: Musculotendon models are able to produce active force when they are activated,
    which is when a chemical process has taken place within the muscle fibers causing
    them to voluntarily contract. Biologically this chemical process (the diffusion
    of \(\textrm{Ca}^{2+}\) ions) is not the input in the system, electrical signals
    from the nervous system are. These are termed excitations. Activation dynamics,
    which relates the normalized excitation level to the normalized activation level,
    can be modeled by the models present in this module.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Abstract base class for all activation dynamics classes to inherit from.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Instances of this class cannot be directly instantiated by users. However, it
    can be used to created custom activation dynamics types through subclassing.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of equations on the RHS of `M x' = F`.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: 'The column matrix that forms the RHS of the linear system of ordinary differential
    equations governing the activation dynamics:'
  prefs: []
  type: TYPE_NORMAL
- en: '`M(x, r, t, p) x'' = F(x, r, t, p)`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Ordered square matrix of coefficients on the LHS of `M x' = F`.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: 'The square matrix that forms part of the LHS of the linear system of ordinary
    differential equations governing the activation dynamics:'
  prefs: []
  type: TYPE_NORMAL
- en: '`M(x, r, t, p) x'' = F(x, r, t, p)`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Dynamic symbol representing activation.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `activation` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Dynamic symbol representing activation.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `a` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of non-time varying symbols present in `M` and `F`.
  prefs: []
  type: TYPE_NORMAL
- en: Only symbolic constants are returned. If a numeric type (e.g. `Float`) has been
    used instead of `Symbol` for a constant then that attribute will not be included
    in the matrix returned by this property. This is because the primary use of this
    property attribute is to provide an ordered sequence of the still-free symbols
    that require numeric values during code generation.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `p` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Dynamic symbol representing excitation.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `excitation` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Dynamic symbol representing excitation.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `e` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of functions of time that represent the input variables.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `r` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Order of the (differential) equation governing activation.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of non-time varying symbols present in `M` and `F`.
  prefs: []
  type: TYPE_NORMAL
- en: Only symbolic constants are returned. If a numeric type (e.g. `Float`) has been
    used instead of `Symbol` for a constant then that attribute will not be included
    in the matrix returned by this property. This is because the primary use of this
    property attribute is to provide an ordered sequence of the still-free symbols
    that require numeric values during code generation.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `constants` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of functions of time that represent the input variables.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `input_vars` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: 'The solution to the linear system of ordinary differential equations governing
    the activation dynamics:'
  prefs: []
  type: TYPE_NORMAL
- en: '`M(x, r, t, p) x'' = F(x, r, t, p)`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of functions of time that represent the state variables.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `x` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Alternate constructor that provides recommended defaults for constants.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of functions of time that represent the state variables.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `state_vars` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: First-order activation dynamics based on De Groote et al., 2016 [[R720]](#r720).
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: Gives the first-order activation dynamics equation for the rate of change of
    activation with respect to time as a function of excitation and activation.
  prefs: []
  type: TYPE_NORMAL
- en: 'The function is defined by the equation:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\frac{da}{dt} = \left(\frac{\frac{1}{2} + a0}{\tau_a \left(\frac{1}{2} + \frac{3a}{2}\right)}
    + \frac{\left(\frac{1}{2} + \frac{3a}{2}\right) \left(\frac{1}{2} - a0\right)}{\tau_d}\right)
    \left(e - a\right)\]
  prefs: []
  type: TYPE_NORMAL
- en: where
  prefs: []
  type: TYPE_NORMAL
- en: \[a0 = \frac{\tanh{\left(b \left(e - a\right) \right)}}{2}\]
  prefs: []
  type: TYPE_NORMAL
- en: with constant values of \(tau_a = 0.015\), \(tau_d = 0.060\), and \(b = 10\).
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[R720] ([1](#id1),[2](#id2))'
  prefs: []
  type: TYPE_NORMAL
- en: De Groote, F., Kinney, A. L., Rao, A. V., & Fregly, B. J., Evaluation of direct
    collocation optimal control problem formulations for solving the muscle redundancy
    problem, Annals of biomedical engineering, 44(10), (2016) pp. 2922-2936
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of equations on the RHS of `M x' = F`.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: 'The column matrix that forms the RHS of the linear system of ordinary differential
    equations governing the activation dynamics:'
  prefs: []
  type: TYPE_NORMAL
- en: '`M(x, r, t, p) x'' = F(x, r, t, p)`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Ordered square matrix of coefficients on the LHS of `M x' = F`.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: 'The square matrix that forms part of the LHS of the linear system of ordinary
    differential equations governing the activation dynamics:'
  prefs: []
  type: TYPE_NORMAL
- en: '`M(x, r, t, p) x'' = F(x, r, t, p)`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Delay constant for activation.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `` `tau_a `` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Smoothing constant for the hyperbolic tangent term.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `smoothing_rate` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of non-time varying symbols present in `M` and `F`.
  prefs: []
  type: TYPE_NORMAL
- en: Only symbolic constants are returned. If a numeric type (e.g. `Float`) has been
    used instead of `Symbol` for a constant then that attribute will not be included
    in the matrix returned by this property. This is because the primary use of this
    property attribute is to provide an ordered sequence of the still-free symbols
    that require numeric values during code generation.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `p` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Delay constant for deactivation.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `tau_d` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of functions of time that represent the input variables.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `r` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: Order of the (differential) equation governing activation.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of non-time varying symbols present in `M` and `F`.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: Only symbolic constants are returned. If a numeric type (e.g. `Float`) has been
    used instead of `Symbol` for a constant then that attribute will not be included
    in the matrix returned by this property. This is because the primary use of this
    property attribute is to provide an ordered sequence of the still-free symbols
    that require numeric values during code generation.
  prefs: []
  type: TYPE_NORMAL
- en: The alias `constants` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of functions of time that represent the input variables.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `input_vars` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of equations for the solution of `M x' = F`.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: 'The solution to the linear system of ordinary differential equations governing
    the activation dynamics:'
  prefs: []
  type: TYPE_NORMAL
- en: '`M(x, r, t, p) x'' = F(x, r, t, p)`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: Smoothing constant for the hyperbolic tangent term.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `b` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of functions of time that represent the state variables.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `x` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: Delay constant for activation.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `activation_time_constant` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: Delay constant for deactivation.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `deactivation_time_constant` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: Alternate constructor that will use the published constants.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: Returns an instance of `FirstOrderActivationDeGroote2016` using the three constant
    values specified in the original publication.
  prefs: []
  type: TYPE_NORMAL
- en: 'These have the values:'
  prefs: []
  type: TYPE_NORMAL
- en: \(tau_a = 0.015\) \(tau_d = 0.060\) \(b = 10\)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of functions of time that represent the state variables.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `state_vars` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: Simple zeroth-order activation dynamics mapping excitation to activation.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: Zeroth-order activation dynamics are useful in instances where you want to reduce
    the complexity of your musculotendon dynamics as they simple map exictation to
    activation. As a result, no additional state equations are introduced to your
    system. They also remove a potential source of delay between the input and dynamics
    of your system as no (ordinary) differential equations are involed.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of equations on the RHS of `M x' = F`.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: 'The column matrix that forms the RHS of the linear system of ordinary differential
    equations governing the activation dynamics:'
  prefs: []
  type: TYPE_NORMAL
- en: '`M(x, r, t, p) x'' = F(x, r, t, p)`.'
  prefs: []
  type: TYPE_NORMAL
- en: As zeroth-order activation dynamics have no state variables, this linear system
    has dimension 0 and therefore `F` is an empty column `Matrix` with shape (0, 1).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: Ordered square matrix of coefficients on the LHS of `M x' = F`.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: 'The square matrix that forms part of the LHS of the linear system of ordinary
    differential equations governing the activation dynamics:'
  prefs: []
  type: TYPE_NORMAL
- en: '`M(x, r, t, p) x'' = F(x, r, t, p)`.'
  prefs: []
  type: TYPE_NORMAL
- en: As zeroth-order activation dynamics have no state variables, this linear system
    has dimension 0 and therefore `M` is an empty square `Matrix` with shape (0, 0).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of non-time varying symbols present in `M` and `F`.
  prefs: []
  type: TYPE_NORMAL
- en: Only symbolic constants are returned. If a numeric type (e.g. `Float`) has been
    used instead of `Symbol` for a constant then that attribute will not be included
    in the matrix returned by this property. This is because the primary use of this
    property attribute is to provide an ordered sequence of the still-free symbols
    that require numeric values during code generation.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: As zeroth-order activation dynamics simply maps excitation to activation, this
    class has no associated constants and so this property return an empty column
    `Matrix` with shape (0, 1).
  prefs: []
  type: TYPE_NORMAL
- en: The alias `p` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of functions of time that represent the input variables.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: Excitation is the only input in zeroth-order activation dynamics and so this
    property returns a column `Matrix` with one entry, `e`, and shape (1, 1).
  prefs: []
  type: TYPE_NORMAL
- en: The alias `r` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: Order of the (differential) equation governing activation.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of non-time varying symbols present in `M` and `F`.
  prefs: []
  type: TYPE_NORMAL
- en: Only symbolic constants are returned. If a numeric type (e.g. `Float`) has been
    used instead of `Symbol` for a constant then that attribute will not be included
    in the matrix returned by this property. This is because the primary use of this
    property attribute is to provide an ordered sequence of the still-free symbols
    that require numeric values during code generation.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: As zeroth-order activation dynamics simply maps excitation to activation, this
    class has no associated constants and so this property return an empty column
    `Matrix` with shape (0, 1).
  prefs: []
  type: TYPE_NORMAL
- en: The alias `constants` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of functions of time that represent the input variables.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: Excitation is the only input in zeroth-order activation dynamics and so this
    property returns a column `Matrix` with one entry, `e`, and shape (1, 1).
  prefs: []
  type: TYPE_NORMAL
- en: The alias `input_vars` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of equations for the solution of `M x' = F`.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: 'The solution to the linear system of ordinary differential equations governing
    the activation dynamics:'
  prefs: []
  type: TYPE_NORMAL
- en: '`M(x, r, t, p) x'' = F(x, r, t, p)`.'
  prefs: []
  type: TYPE_NORMAL
- en: As zeroth-order activation dynamics have no state variables, this linear has
    dimension 0 and therefore this method returns an empty column `Matrix` with shape
    (0, 1).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of functions of time that represent the state variables.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: As zeroth-order activation dynamics simply maps excitation to activation, this
    class has no associated state variables and so this property return an empty column
    `Matrix` with shape (0, 1).
  prefs: []
  type: TYPE_NORMAL
- en: The alias `x` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: Alternate constructor that provides recommended defaults for constants.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: As this concrete class doesn’t implement any constants associated with its dynamics,
    this `classmethod` simply creates a standard instance of `ZerothOrderActivation`.
    An implementation is provided to ensure a consistent interface between all `ActivationBase`
    concrete classes.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of functions of time that represent the state variables.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: As zeroth-order activation dynamics simply maps excitation to activation, this
    class has no associated state variables and so this property return an empty column
    `Matrix` with shape (0, 1).
  prefs: []
  type: TYPE_NORMAL
- en: The alias `state_vars` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
