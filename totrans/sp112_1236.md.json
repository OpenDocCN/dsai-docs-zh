["```py\nscipy.stats.binom = <scipy.stats._discrete_distns.binom_gen object>\n```", "```py\n>>> import numpy as np\n>>> from scipy.stats import binom\n>>> import matplotlib.pyplot as plt\n>>> fig, ax = plt.subplots(1, 1) \n```", "```py\n>>> n, p = 5, 0.4\n>>> mean, var, skew, kurt = binom.stats(n, p, moments='mvsk') \n```", "```py\n>>> x = np.arange(binom.ppf(0.01, n, p),\n...               binom.ppf(0.99, n, p))\n>>> ax.plot(x, binom.pmf(x, n, p), 'bo', ms=8, label='binom pmf')\n>>> ax.vlines(x, 0, binom.pmf(x, n, p), colors='b', lw=5, alpha=0.5) \n```", "```py\n>>> rv = binom(n, p)\n>>> ax.vlines(x, 0, rv.pmf(x), colors='k', linestyles='-', lw=1,\n...         label='frozen pmf')\n>>> ax.legend(loc='best', frameon=False)\n>>> plt.show() \n```", "```py\n>>> prob = binom.cdf(x, n, p)\n>>> np.allclose(x, binom.ppf(prob, n, p))\nTrue \n```", "```py\n>>> r = binom.rvs(n, p, size=1000) \n```"]