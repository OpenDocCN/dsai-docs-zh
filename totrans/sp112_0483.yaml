- en: scipy.optimize.fmin_l_bfgs_b
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.optimize.fmin_l_bfgs_b
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.fmin_l_bfgs_b.html#scipy.optimize.fmin_l_bfgs_b](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.fmin_l_bfgs_b.html#scipy.optimize.fmin_l_bfgs_b)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.fmin_l_bfgs_b.html#scipy.optimize.fmin_l_bfgs_b](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.fmin_l_bfgs_b.html#scipy.optimize.fmin_l_bfgs_b)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Minimize a function func using the L-BFGS-B algorithm.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 使用L-BFGS-B算法最小化函数func。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**func**callable f(x,*args)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**func**callable f(x,*args)'
- en: Function to minimize.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 要最小化的函数。
- en: '**x0**ndarray'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**x0**ndarray'
- en: Initial guess.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 初始猜测。
- en: '**fprime**callable fprime(x,*args), optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**fprime**callable fprime(x,*args)，可选'
- en: The gradient of *func*. If None, then *func* returns the function value and
    the gradient (`f, g = func(x, *args)`), unless *approx_grad* is True in which
    case *func* returns only `f`.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*func*的梯度。如果为None，则*func*返回函数值和梯度（`f, g = func(x, *args)`），除非*approx_grad*为True，在这种情况下*func*仅返回`f`。'
- en: '**args**sequence, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**args**序列，可选'
- en: Arguments to pass to *func* and *fprime*.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 传递给*func*和*fprime*的参数。
- en: '**approx_grad**bool, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**approx_grad**布尔值，可选'
- en: Whether to approximate the gradient numerically (in which case *func* returns
    only the function value).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 是否数值近似梯度（此时*func*仅返回函数值）。
- en: '**bounds**list, optional'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**bounds**列表，可选'
- en: '`(min, max)` pairs for each element in `x`, defining the bounds on that parameter.
    Use None or +-inf for one of `min` or `max` when there is no bound in that direction.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 对于x中每个元素的`(min, max)`对，定义该参数的边界。当该方向上没有边界时使用None或+-inf。
- en: '**m**int, optional'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**m**整数，可选'
- en: The maximum number of variable metric corrections used to define the limited
    memory matrix. (The limited memory BFGS method does not store the full hessian
    but uses this many terms in an approximation to it.)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 用于定义有限内存矩阵的最大变量度量修正数。（有限内存BFGS方法不存储完整的Hessian矩阵，而是使用这么多项的近似值。）
- en: '**factr**float, optional'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**factr**浮点数，可选'
- en: 'The iteration stops when `(f^k - f^{k+1})/max{|f^k|,|f^{k+1}|,1} <= factr *
    eps`, where `eps` is the machine precision, which is automatically generated by
    the code. Typical values for *factr* are: 1e12 for low accuracy; 1e7 for moderate
    accuracy; 10.0 for extremely high accuracy. See Notes for relationship to *ftol*,
    which is exposed (instead of *factr*) by the [`scipy.optimize.minimize`](scipy.optimize.minimize.html#scipy.optimize.minimize
    "scipy.optimize.minimize") interface to L-BFGS-B.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当`(f^k - f^{k+1})/max{|f^k|,|f^{k+1}|,1} <= factr * eps`时，迭代停止，其中`eps`是代码自动生成的机器精度。*factr*的典型值为：低精度为1e12；中等精度为1e7；极高精度为10.0。请参见注释以了解与*ftol*的关系，后者由[`scipy.optimize.minimize`](scipy.optimize.minimize.html#scipy.optimize.minimize
    "scipy.optimize.minimize")接口暴露给L-BFGS-B，而不是*factr*。
- en: '**pgtol**float, optional'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**pgtol**浮点数，可选'
- en: The iteration will stop when `max{|proj g_i | i = 1, ..., n} <= pgtol` where
    `proj g_i` is the i-th component of the projected gradient.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当`max{|proj g_i | i = 1, ..., n} <= pgtol`时，迭代将停止，其中`proj g_i`是投影梯度的第i个分量。
- en: '**epsilon**float, optional'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**epsilon**浮点数，可选'
- en: Step size used when *approx_grad* is True, for numerically calculating the gradient
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 当*approx_grad*为True时使用的步长，用于数值计算梯度。
- en: '**iprint**int, optional'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**iprint**整数，可选'
- en: Controls the frequency of output. `iprint < 0` means no output; `iprint = 0`
    print only one line at the last iteration; `0 < iprint < 99` print also f and
    `|proj g|` every iprint iterations; `iprint = 99` print details of every iteration
    except n-vectors; `iprint = 100` print also the changes of active set and final
    x; `iprint > 100` print details of every iteration including x and g.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 控制输出频率。`iprint < 0` 表示无输出；`iprint = 0` 仅在最后一次迭代打印一行；`0 < iprint < 99` 每iprint次迭代还打印f和`|proj
    g|`；`iprint = 99` 每次迭代都打印详细信息，除了n-向量；`iprint = 100` 还打印活跃集的变化和最终x；`iprint > 100`
    每次迭代都打印详细信息，包括x和g。
- en: '**disp**int, optional'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**disp**整数，可选'
- en: If zero, then no output. If a positive number, then this over-rides *iprint*
    (i.e., *iprint* gets the value of *disp*).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为零，则没有输出。如果为正数，则覆盖*iprint*（即*iprint*取*disp*的值）。
- en: '**maxfun**int, optional'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**maxfun**整数，可选'
- en: Maximum number of function evaluations. Note that this function may violate
    the limit because of evaluating gradients by numerical differentiation.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 最大函数评估次数。请注意，由于通过数值微分计算梯度，此函数可能会违反限制。
- en: '**maxiter**int, optional'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**maxiter**整数，可选'
- en: Maximum number of iterations.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 最大迭代次数。
- en: '**callback**callable, optional'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**callback**callable，可选'
- en: Called after each iteration, as `callback(xk)`, where `xk` is the current parameter
    vector.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在每次迭代后调用，作为`callback(xk)`，其中`xk`是当前参数向量。
- en: '**maxls**int, optional'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**maxls**int，可选'
- en: Maximum number of line search steps (per iteration). Default is 20.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 最大线搜索步骤数（每次迭代）。默认为 20。
- en: 'Returns:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**x**array_like'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**array_like'
- en: Estimated position of the minimum.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 最小值的估计位置。
- en: '**f**float'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**f**float'
- en: Value of *func* at the minimum.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '*func* 在最小值处的值。'
- en: '**d**dict'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**d**dict'
- en: Information dictionary.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 信息字典。
- en: d[‘warnflag’] is
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: d[‘warnflag’] 是
- en: 0 if converged,
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果收敛则为 0，
- en: 1 if too many function evaluations or too many iterations,
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果函数评估或迭代次数过多则为 1，
- en: 2 if stopped for another reason, given in d[‘task’]
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果由于其他原因停止，则为 2，具体原因见 d[‘task’]
- en: d[‘grad’] is the gradient at the minimum (should be 0 ish)
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: d[‘grad’] 是最小值处的梯度（应该接近 0）。
- en: d[‘funcalls’] is the number of function calls made.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: d[‘funcalls’] 是进行的函数调用次数。
- en: d[‘nit’] is the number of iterations.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: d[‘nit’] 是迭代次数。
- en: See also
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`minimize`](scipy.optimize.minimize.html#scipy.optimize.minimize "scipy.optimize.minimize")'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[`minimize`](scipy.optimize.minimize.html#scipy.optimize.minimize)'
- en: 'Interface to minimization algorithms for multivariate functions. See the ‘L-BFGS-B’
    *method* in particular. Note that the *ftol* option is made available via that
    interface, while *factr* is provided via this interface, where *factr* is the
    factor multiplying the default machine floating-point precision to arrive at *ftol*:
    `ftol = factr * numpy.finfo(float).eps`.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 多变量函数的最小化算法接口。特别查看 ‘L-BFGS-B’ *方法*。请注意，*ftol* 选项通过该接口提供，而 *factr* 则通过此接口提供，其中
    *factr* 是将默认机器浮点精度乘以以计算 *ftol* 的因子：`ftol = factr * numpy.finfo(float).eps`。
- en: Notes
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'License of L-BFGS-B (FORTRAN code):'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: L-BFGS-B的许可证（FORTRAN 代码）：
- en: 'The version included here (in fortran code) is 3.0 (released April 25, 2011).
    It was written by Ciyou Zhu, Richard Byrd, and Jorge Nocedal <[nocedal@ece.nwu.edu](mailto:nocedal%40ece.nwu.edu)>.
    It carries the following condition for use:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 此处包含的版本（Fortran 代码）为 3.0（2011年4月25日发布）。由Ciyou Zhu、Richard Byrd和Jorge Nocedal编写
    <[nocedal@ece.nwu.edu](mailto:nocedal%40ece.nwu.edu)>。其使用条件如下：
- en: This software is freely available, but we expect that all publications describing
    work using this software, or all commercial products using it, quote at least
    one of the references given below. This software is released under the BSD License.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 本软件可自由使用，但我们期望所有使用该软件的工作或商业产品至少引用下列参考文献中的一篇。本软件根据BSD许可证发布。
- en: References
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: R. H. Byrd, P. Lu and J. Nocedal. A Limited Memory Algorithm for Bound Constrained
    Optimization, (1995), SIAM Journal on Scientific and Statistical Computing, 16,
    5, pp. 1190-1208.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: R. H. Byrd, P. Lu 和 J. Nocedal。有界约束优化的有限内存算法（1995），SIAM科学与统计计算杂志，16，5，第 1190-1208
    页。
- en: 'C. Zhu, R. H. Byrd and J. Nocedal. L-BFGS-B: Algorithm 778: L-BFGS-B, FORTRAN
    routines for large scale bound constrained optimization (1997), ACM Transactions
    on Mathematical Software, 23, 4, pp. 550 - 560.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: C. Zhu, R. H. Byrd 和 J. Nocedal。L-BFGS-B：算法 778：大规模有界约束优化的FORTRAN例程（1997），ACM数学软件交易，23，4，第
    550 - 560 页。
- en: 'J.L. Morales and J. Nocedal. L-BFGS-B: Remark on Algorithm 778: L-BFGS-B, FORTRAN
    routines for large scale bound constrained optimization (2011), ACM Transactions
    on Mathematical Software, 38, 1.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: J.L. Morales 和 J. Nocedal。L-BFGS-B：关于算法 778 的注记：大规模有界约束优化的FORTRAN例程（2011），ACM数学软件交易，38，1。
