["```py\nscipy.stats.binned_statistic(x, values, statistic='mean', bins=10, range=None)\n```", "```py\n>>> import numpy as np\n>>> from scipy import stats\n>>> import matplotlib.pyplot as plt \n```", "```py\n>>> values = [1.0, 1.0, 2.0, 1.5, 3.0]\n>>> stats.binned_statistic([1, 1, 2, 5, 7], values, 'sum', bins=2)\nBinnedStatisticResult(statistic=array([4\\. , 4.5]),\n bin_edges=array([1., 4., 7.]), binnumber=array([1, 1, 1, 2, 2])) \n```", "```py\n>>> values = [[1.0, 1.0, 2.0, 1.5, 3.0], [2.0, 2.0, 4.0, 3.0, 6.0]]\n>>> stats.binned_statistic([1, 1, 2, 5, 7], values, 'sum', bins=2)\nBinnedStatisticResult(statistic=array([[4\\. , 4.5],\n [8\\. , 9\\. ]]), bin_edges=array([1., 4., 7.]),\n binnumber=array([1, 1, 1, 2, 2])) \n```", "```py\n>>> stats.binned_statistic([1, 2, 1, 2, 4], np.arange(5), statistic='mean',\n...                        bins=3)\nBinnedStatisticResult(statistic=array([1., 2., 4.]),\n bin_edges=array([1., 2., 3., 4.]),\n binnumber=array([1, 2, 1, 2, 3])) \n```", "```py\n>>> rng = np.random.default_rng()\n>>> windspeed = 8 * rng.random(500)\n>>> boatspeed = .3 * windspeed**.5 + .2 * rng.random(500)\n>>> bin_means, bin_edges, binnumber = stats.binned_statistic(windspeed,\n...                 boatspeed, statistic='median', bins=[1,2,3,4,5,6,7])\n>>> plt.figure()\n>>> plt.plot(windspeed, boatspeed, 'b.', label='raw data')\n>>> plt.hlines(bin_means, bin_edges[:-1], bin_edges[1:], colors='g', lw=5,\n...            label='binned statistic of data')\n>>> plt.legend() \n```", "```py\n>>> low_boatspeed = boatspeed[binnumber == 0] \n```", "```py\n>>> x = np.linspace(0, 5, num=500)\n>>> x_pdf = stats.maxwell.pdf(x)\n>>> samples = stats.maxwell.rvs(size=10000) \n```", "```py\n>>> bin_means, bin_edges, binnumber = stats.binned_statistic(x, x_pdf,\n...         statistic='mean', bins=25)\n>>> bin_width = (bin_edges[1] - bin_edges[0])\n>>> bin_centers = bin_edges[1:] - bin_width/2 \n```", "```py\n>>> plt.figure()\n>>> plt.hist(samples, bins=50, density=True, histtype='stepfilled',\n...          alpha=0.2, label='histogram of data')\n>>> plt.plot(x, x_pdf, 'r-', label='analytical pdf')\n>>> plt.hlines(bin_means, bin_edges[:-1], bin_edges[1:], colors='g', lw=2,\n...            label='binned statistic of data')\n>>> plt.plot((binnumber - 0.5) * bin_width, x_pdf, 'g.', alpha=0.5)\n>>> plt.legend(fontsize=10)\n>>> plt.show() \n```"]