- en: scipy.special.iv
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.iv.html#scipy.special.iv](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.iv.html#scipy.special.iv)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Modified Bessel function of the first kind of real order.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**v**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Order. If *z* is of real type and negative, *v* must be integer valued.
  prefs: []
  type: TYPE_NORMAL
- en: '**z**array_like of float or complex'
  prefs: []
  type: TYPE_NORMAL
- en: Argument.
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Optional output array for the function values
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: scalar or ndarray
  prefs: []
  type: TYPE_NORMAL
- en: Values of the modified Bessel function.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`ive`](scipy.special.ive.html#scipy.special.ive "scipy.special.ive")'
  prefs: []
  type: TYPE_NORMAL
- en: This function with leading exponential behavior stripped off.
  prefs: []
  type: TYPE_NORMAL
- en: '[`i0`](scipy.special.i0.html#scipy.special.i0 "scipy.special.i0")'
  prefs: []
  type: TYPE_NORMAL
- en: Faster version of this function for order 0.
  prefs: []
  type: TYPE_NORMAL
- en: '[`i1`](scipy.special.i1.html#scipy.special.i1 "scipy.special.i1")'
  prefs: []
  type: TYPE_NORMAL
- en: Faster version of this function for order 1.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: For real *z* and \(v \in [-50, 50]\), the evaluation is carried out using Temme’s
    method [[1]](#r3a80f286b9e7-1). For larger orders, uniform asymptotic expansions
    are applied.
  prefs: []
  type: TYPE_NORMAL
- en: For complex *z* and positive *v*, the AMOS [[2]](#r3a80f286b9e7-2) *zbesi* routine
    is called. It uses a power series for small *z*, the asymptotic expansion for
    large *abs(z)*, the Miller algorithm normalized by the Wronskian and a Neumann
    series for intermediate magnitudes, and the uniform asymptotic expansions for
    \(I_v(z)\) and \(J_v(z)\) for large orders. Backward recurrence is used to generate
    sequences or reduce orders when necessary.
  prefs: []
  type: TYPE_NORMAL
- en: The calculations above are done in the right half plane and continued into the
    left half plane by the formula,
  prefs: []
  type: TYPE_NORMAL
- en: \[I_v(z \exp(\pm\imath\pi)) = \exp(\pm\pi v) I_v(z)\]
  prefs: []
  type: TYPE_NORMAL
- en: (valid when the real part of *z* is positive). For negative *v*, the formula
  prefs: []
  type: TYPE_NORMAL
- en: \[I_{-v}(z) = I_v(z) + \frac{2}{\pi} \sin(\pi v) K_v(z)\]
  prefs: []
  type: TYPE_NORMAL
- en: is used, where \(K_v(z)\) is the modified Bessel function of the second kind,
    evaluated using the AMOS routine *zbesk*.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: Temme, Journal of Computational Physics, vol 21, 343 (1976)
  prefs: []
  type: TYPE_NORMAL
- en: '[[2](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: Donald E. Amos, “AMOS, A Portable Package for Bessel Functions of a Complex
    Argument and Nonnegative Order”, [http://netlib.org/amos/](http://netlib.org/amos/)
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Evaluate the function of order 0 at one point.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Evaluate the function at one point for different orders.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The evaluation for different orders can be carried out in one call by providing
    a list or NumPy array as argument for the *v* parameter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Evaluate the function at several points for order 0 by providing an array for
    *z*.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'If *z* is an array, the order parameter *v* must be broadcastable to the correct
    shape if different orders shall be computed in one call. To calculate the orders
    0 and 1 for an 1D array:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Plot the functions of order 0 to 3 from -5 to 5.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-special-iv-1.png](../Images/0dfee6cf3f1fe2f4f0a1daa65bbf76bb.png)'
  prefs: []
  type: TYPE_IMG
