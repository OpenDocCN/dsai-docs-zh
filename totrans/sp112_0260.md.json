["```py\nscipy.linalg.eig(a, b=None, left=False, right=True, overwrite_a=False, overwrite_b=False, check_finite=True, homogeneous_eigvals=False)\n```", "```py\na   vr[:,i] = w[i]        b   vr[:,i]\na.H vl[:,i] = w[i].conj() b.H vl[:,i] \n```", "```py\nw[1,i] a vr[:,i] = w[0,i] b vr[:,i] \n```", "```py\n>>> import numpy as np\n>>> from scipy import linalg\n>>> a = np.array([[0., -1.], [1., 0.]])\n>>> linalg.eigvals(a)\narray([0.+1.j, 0.-1.j]) \n```", "```py\n>>> b = np.array([[0., 1.], [1., 1.]])\n>>> linalg.eigvals(a, b)\narray([ 1.+0.j, -1.+0.j]) \n```", "```py\n>>> a = np.array([[3., 0., 0.], [0., 8., 0.], [0., 0., 7.]])\n>>> linalg.eigvals(a, homogeneous_eigvals=True)\narray([[3.+0.j, 8.+0.j, 7.+0.j],\n [1.+0.j, 1.+0.j, 1.+0.j]]) \n```", "```py\n>>> a = np.array([[0., -1.], [1., 0.]])\n>>> linalg.eigvals(a) == linalg.eig(a)[0]\narray([ True,  True])\n>>> linalg.eig(a, left=True, right=False)[1] # normalized left eigenvector\narray([[-0.70710678+0.j        , -0.70710678-0.j        ],\n [-0\\.        +0.70710678j, -0\\.        -0.70710678j]])\n>>> linalg.eig(a, left=False, right=True)[1] # normalized right eigenvector\narray([[0.70710678+0.j        , 0.70710678-0.j        ],\n [0\\.        -0.70710678j, 0\\.        +0.70710678j]]) \n```"]