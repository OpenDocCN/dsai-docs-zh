["```py\nufunc.reduceat(array, indices, axis=0, dtype=None, out=None)\n```", "```py\n>>> np.add.reduceat(np.arange(8),[0,4, 1,5, 2,6, 3,7])[::2]\narray([ 6, 10, 14, 18]) \n```", "```py\n>>> x = np.linspace(0, 15, 16).reshape(4,4)\n>>> x\narray([[ 0.,   1.,   2.,   3.],\n [ 4.,   5.,   6.,   7.],\n [ 8.,   9.,  10.,  11.],\n [12.,  13.,  14.,  15.]]) \n```", "```py\n# reduce such that the result has the following five rows:\n# [row1 + row2 + row3]\n# [row4]\n# [row2]\n# [row3]\n# [row1 + row2 + row3 + row4] \n```", "```py\n>>> np.add.reduceat(x, [0, 3, 1, 2, 0])\narray([[12.,  15.,  18.,  21.],\n [12.,  13.,  14.,  15.],\n [ 4.,   5.,   6.,   7.],\n [ 8.,   9.,  10.,  11.],\n [24.,  28.,  32.,  36.]]) \n```", "```py\n# reduce such that result has the following two columns:\n# [col1 * col2 * col3, col4] \n```", "```py\n>>> np.multiply.reduceat(x, [0, 3], 1)\narray([[   0.,     3.],\n [ 120.,     7.],\n [ 720.,    11.],\n [2184.,    15.]]) \n```"]