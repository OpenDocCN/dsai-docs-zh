- en: Spatial algorithms and data structures (scipy.spatial)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/spatial.html](https://docs.scipy.org/doc/scipy-1.12.0/reference/spatial.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '## Spatial transformations'
  prefs: []
  type: TYPE_NORMAL
- en: These are contained in the [`scipy.spatial.transform`](spatial.transform.html#module-scipy.spatial.transform
    "scipy.spatial.transform") submodule.
  prefs: []
  type: TYPE_NORMAL
- en: Nearest-neighbor queries
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`KDTree`](generated/scipy.spatial.KDTree.html#scipy.spatial.KDTree "scipy.spatial.KDTree")(data[, leafsize, compact_nodes, ...])
    | kd-tree for quick nearest-neighbor lookup. |'
  prefs: []
  type: TYPE_TB
- en: '| [`cKDTree`](generated/scipy.spatial.cKDTree.html#scipy.spatial.cKDTree "scipy.spatial.cKDTree")(data[, leafsize, compact_nodes, ...])
    | kd-tree for quick nearest-neighbor lookup |'
  prefs: []
  type: TYPE_TB
- en: '| [`Rectangle`](generated/scipy.spatial.Rectangle.html#scipy.spatial.Rectangle
    "scipy.spatial.Rectangle")(maxes, mins) | Hyperrectangle class. |'
  prefs: []
  type: TYPE_TB
- en: Distance metrics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Distance metrics are contained in the [`scipy.spatial.distance`](spatial.distance.html#module-scipy.spatial.distance
    "scipy.spatial.distance") submodule.
  prefs: []
  type: TYPE_NORMAL
- en: Delaunay triangulation, convex hulls, and Voronoi diagrams
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Delaunay`](generated/scipy.spatial.Delaunay.html#scipy.spatial.Delaunay
    "scipy.spatial.Delaunay")(points[, furthest_site, ...]) | Delaunay tessellation
    in N dimensions. |'
  prefs: []
  type: TYPE_TB
- en: '| [`ConvexHull`](generated/scipy.spatial.ConvexHull.html#scipy.spatial.ConvexHull
    "scipy.spatial.ConvexHull")(points[, incremental, qhull_options]) | Convex hulls
    in N dimensions. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Voronoi`](generated/scipy.spatial.Voronoi.html#scipy.spatial.Voronoi "scipy.spatial.Voronoi")(points[, furthest_site, ...])
    | Voronoi diagrams in N dimensions. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SphericalVoronoi`](generated/scipy.spatial.SphericalVoronoi.html#scipy.spatial.SphericalVoronoi
    "scipy.spatial.SphericalVoronoi")(points[, radius, center, ...]) | Voronoi diagrams
    on the surface of a sphere. |'
  prefs: []
  type: TYPE_TB
- en: '| [`HalfspaceIntersection`](generated/scipy.spatial.HalfspaceIntersection.html#scipy.spatial.HalfspaceIntersection
    "scipy.spatial.HalfspaceIntersection")(halfspaces, interior_point) | Halfspace
    intersections in N dimensions. |'
  prefs: []
  type: TYPE_TB
- en: Plotting helpers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`delaunay_plot_2d`](generated/scipy.spatial.delaunay_plot_2d.html#scipy.spatial.delaunay_plot_2d
    "scipy.spatial.delaunay_plot_2d")(tri[, ax]) | Plot the given Delaunay triangulation
    in 2-D |'
  prefs: []
  type: TYPE_TB
- en: '| [`convex_hull_plot_2d`](generated/scipy.spatial.convex_hull_plot_2d.html#scipy.spatial.convex_hull_plot_2d
    "scipy.spatial.convex_hull_plot_2d")(hull[, ax]) | Plot the given convex hull
    diagram in 2-D |'
  prefs: []
  type: TYPE_TB
- en: '| [`voronoi_plot_2d`](generated/scipy.spatial.voronoi_plot_2d.html#scipy.spatial.voronoi_plot_2d
    "scipy.spatial.voronoi_plot_2d")(vor[, ax]) | Plot the given Voronoi diagram in
    2-D |'
  prefs: []
  type: TYPE_TB
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[Tutorial](../tutorial/spatial.html#qhulltutorial)'
  prefs: []
  type: TYPE_NORMAL
- en: Simplex representation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The simplices (triangles, tetrahedra, etc.) appearing in the Delaunay tessellation
    (N-D simplices), convex hull facets, and Voronoi ridges (N-1-D simplices) are
    represented in the following scheme:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'For Delaunay triangulations and convex hulls, the neighborhood structure of
    the simplices satisfies the condition: `tess.neighbors[i,j]` is the neighboring
    simplex of the ith simplex, opposite to the `j`-vertex. It is -1 in case of no
    neighbor.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Convex hull facets also define a hyperplane equation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Similar hyperplane equations for the Delaunay triangulation correspond to the
    convex hull facets on the corresponding N+1-D paraboloid.
  prefs: []
  type: TYPE_NORMAL
- en: The Delaunay triangulation objects offer a method for locating the simplex containing
    a given point, and barycentric coordinate computations.
  prefs: []
  type: TYPE_NORMAL
- en: Functions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`tsearch`](generated/scipy.spatial.tsearch.html#scipy.spatial.tsearch "scipy.spatial.tsearch")(tri, xi)
    | Find simplices containing the given points. |'
  prefs: []
  type: TYPE_TB
- en: '| [`distance_matrix`](generated/scipy.spatial.distance_matrix.html#scipy.spatial.distance_matrix
    "scipy.spatial.distance_matrix")(x, y[, p, threshold]) | Compute the distance
    matrix. |'
  prefs: []
  type: TYPE_TB
- en: '| [`minkowski_distance`](generated/scipy.spatial.minkowski_distance.html#scipy.spatial.minkowski_distance
    "scipy.spatial.minkowski_distance")(x, y[, p]) | Compute the L**p distance between
    two arrays. |'
  prefs: []
  type: TYPE_TB
- en: '| [`minkowski_distance_p`](generated/scipy.spatial.minkowski_distance_p.html#scipy.spatial.minkowski_distance_p
    "scipy.spatial.minkowski_distance_p")(x, y[, p]) | Compute the pth power of the
    L**p distance between two arrays. |'
  prefs: []
  type: TYPE_TB
- en: '| [`procrustes`](generated/scipy.spatial.procrustes.html#scipy.spatial.procrustes
    "scipy.spatial.procrustes")(data1, data2) | Procrustes analysis, a similarity
    test for two data sets. |'
  prefs: []
  type: TYPE_TB
- en: '| [`geometric_slerp`](generated/scipy.spatial.geometric_slerp.html#scipy.spatial.geometric_slerp
    "scipy.spatial.geometric_slerp")(start, end, t[, tol]) | Geometric spherical linear
    interpolation. |'
  prefs: []
  type: TYPE_TB
- en: Warnings / Errors used in [`scipy.spatial`](#module-scipy.spatial "scipy.spatial")
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`QhullError`](generated/scipy.spatial.QhullError.html#scipy.spatial.QhullError
    "scipy.spatial.QhullError") |  |'
  prefs: []
  type: TYPE_TB
