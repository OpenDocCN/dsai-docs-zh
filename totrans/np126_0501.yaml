- en: numpy.fft.rfft
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.fft.rfft
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.fft.rfft.html](https://numpy.org/doc/1.26/reference/generated/numpy.fft.rfft.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.fft.rfft.html](https://numpy.org/doc/1.26/reference/generated/numpy.fft.rfft.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Compute the one-dimensional discrete Fourier Transform for real input.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 为实数输入计算一维离散傅里叶变换。
- en: This function computes the one-dimensional *n*-point discrete Fourier Transform
    (DFT) of a real-valued array by means of an efficient algorithm called the Fast
    Fourier Transform (FFT).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数通过一种称为快速傅里叶变换（FFT）的高效算法计算实值数组的一维*n*点离散傅里叶变换（DFT）。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a**array_like'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**a** array_like'
- en: Input array
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数组
- en: '**n**int, optional'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**n** 整数，可选'
- en: Number of points along transformation axis in the input to use. If *n* is smaller
    than the length of the input, the input is cropped. If it is larger, the input
    is padded with zeros. If *n* is not given, the length of the input along the axis
    specified by *axis* is used.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 输入上要使用的转换轴上的点数。如果*n*小于输入的长度，则输入被裁剪。如果大于输入，则使用零进行填充。如果未给出*n*，则使用*axis*指定的轴的输入长度。
- en: '**axis**int, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**axis** 整数，可选'
- en: Axis over which to compute the FFT. If not given, the last axis is used.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 计算FFT的轴。如果未给出，则使用最后一个轴。
- en: '**norm**{“backward”, “ortho”, “forward”}, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**norm**{“backward”, “ortho”, “forward”}，可选'
- en: New in version 1.10.0.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本 1.10.0 中。
- en: Normalization mode (see [`numpy.fft`](../routines.fft.html#module-numpy.fft
    "numpy.fft")). Default is “backward”. Indicates which direction of the forward/backward
    pair of transforms is scaled and with what normalization factor.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 标准化模式（参见[`numpy.fft`](../routines.fft.html#module-numpy.fft "numpy.fft")）。默认为“backward”。指示哪个方向的前/后向转换对被缩放以及使用什么标准化因子。
- en: 'New in version 1.20.0: The “backward”, “forward” values were added.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本 1.20.0 中添加了“backward”、“forward”值。
- en: 'Returns:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**out**complex ndarray'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**out** 复数ndarray'
- en: The truncated or zero-padded input, transformed along the axis indicated by
    *axis*, or the last one if *axis* is not specified. If *n* is even, the length
    of the transformed axis is `(n/2)+1`. If *n* is odd, the length is `(n+1)/2`.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 截断或零填充的输入，沿着由*axis*指示的轴进行转换，如果未指定，则为最后一个轴。如果*n*是偶数，则转换轴的长度为`(n/2)+1`。如果*n*是奇数，则长度为`(n+1)/2`。
- en: 'Raises:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 抛出：
- en: IndexError
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: IndexError
- en: If *axis* is not a valid axis of *a*.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*axis*不是*a*的有效轴。
- en: See also
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`numpy.fft`](../routines.fft.html#module-numpy.fft "numpy.fft")'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[`numpy.fft`](../routines.fft.html#module-numpy.fft "numpy.fft")'
- en: For definition of the DFT and conventions used.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: DFT的定义和惯例。
- en: '[`irfft`](numpy.fft.irfft.html#numpy.fft.irfft "numpy.fft.irfft")'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[`irfft`](numpy.fft.irfft.html#numpy.fft.irfft "numpy.fft.irfft")'
- en: The inverse of [`rfft`](#numpy.fft.rfft "numpy.fft.rfft").
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[`rfft`](#numpy.fft.rfft "numpy.fft.rfft")的逆。'
- en: '[`fft`](../routines.fft.html#module-numpy.fft "numpy.fft")'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fft`](../routines.fft.html#module-numpy.fft "numpy.fft")'
- en: The one-dimensional FFT of general (complex) input.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 复数输入的一维FFT。
- en: '[`fftn`](numpy.fft.fftn.html#numpy.fft.fftn "numpy.fft.fftn")'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fftn`](numpy.fft.fftn.html#numpy.fft.fftn "numpy.fft.fftn")'
- en: The *n*-dimensional FFT.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '*n* 维FFT。'
- en: '[`rfftn`](numpy.fft.rfftn.html#numpy.fft.rfftn "numpy.fft.rfftn")'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[`rfftn`](numpy.fft.rfftn.html#numpy.fft.rfftn "numpy.fft.rfftn")'
- en: The *n*-dimensional FFT of real input.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 实输入的*n*维FFT。
- en: Notes
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: When the DFT is computed for purely real input, the output is Hermitian-symmetric,
    i.e. the negative frequency terms are just the complex conjugates of the corresponding
    positive-frequency terms, and the negative-frequency terms are therefore redundant.
    This function does not compute the negative frequency terms, and the length of
    the transformed axis of the output is therefore `n//2 + 1`.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当为纯实数输入计算DFT时，输出是厄米对称的，即负频率项只是相应正频率项的复共轭，并且负频率项是多余的。这个函数不会计算负频率项，因此输出的转换轴的长度是`n//2
    + 1`。
- en: When `A = rfft(a)` and fs is the sampling frequency, `A[0]` contains the zero-frequency
    term 0*fs, which is real due to Hermitian symmetry.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当`A = rfft(a)`且fs为采样频率时，`A[0]`包含零频率项0*fs，由于厄米对称性是实数。
- en: If *n* is even, `A[-1]` contains the term representing both positive and negative
    Nyquist frequency (+fs/2 and -fs/2), and must also be purely real. If *n* is odd,
    there is no term at fs/2; `A[-1]` contains the largest positive frequency (fs/2*(n-1)/n),
    and is complex in the general case.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*n*是偶数，`A[-1]`包含代表正负Nyquist频率（+fs/2和-fs/2）的项，并且必须是纯实数。如果*n*是奇数，则在fs/2处没有项；`A[-1]`包含最大的正频率（fs/2*(n-1)/n），在一般情况下是复数。
- en: If the input *a* contains an imaginary part, it is silently discarded.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果输入*a*包含虚部，则会被静默丢弃。
- en: Examples
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Notice how the final element of the [`fft`](../routines.fft.html#module-numpy.fft
    "numpy.fft") output is the complex conjugate of the second element, for real input.
    For [`rfft`](#numpy.fft.rfft "numpy.fft.rfft"), this symmetry is exploited to
    compute only the non-negative frequency terms.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 注意观察[`fft`](../routines.fft.html#module-numpy.fft "numpy.fft")输出的最后一个元素是实数输入的第二个元素的复共轭。对于[`rfft`](#numpy.fft.rfft
    "numpy.fft.rfft")，利用这种对称性仅计算非负频率项。
