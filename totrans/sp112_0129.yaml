- en: scipy.integrate.tplquad
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.tplquad.html#scipy.integrate.tplquad](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.tplquad.html#scipy.integrate.tplquad)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute a triple (definite) integral.
  prefs: []
  type: TYPE_NORMAL
- en: Return the triple integral of `func(z, y, x)` from `x = a..b`, `y = gfun(x)..hfun(x)`,
    and `z = qfun(x,y)..rfun(x,y)`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**func**function'
  prefs: []
  type: TYPE_NORMAL
- en: A Python function or method of at least three variables in the order (z, y,
    x).
  prefs: []
  type: TYPE_NORMAL
- en: '**a, b**float'
  prefs: []
  type: TYPE_NORMAL
- en: 'The limits of integration in x: *a* < *b*'
  prefs: []
  type: TYPE_NORMAL
- en: '**gfun**function or float'
  prefs: []
  type: TYPE_NORMAL
- en: The lower boundary curve in y which is a function taking a single floating point
    argument (x) and returning a floating point result or a float indicating a constant
    boundary curve.
  prefs: []
  type: TYPE_NORMAL
- en: '**hfun**function or float'
  prefs: []
  type: TYPE_NORMAL
- en: The upper boundary curve in y (same requirements as *gfun*).
  prefs: []
  type: TYPE_NORMAL
- en: '**qfun**function or float'
  prefs: []
  type: TYPE_NORMAL
- en: The lower boundary surface in z. It must be a function that takes two floats
    in the order (x, y) and returns a float or a float indicating a constant boundary
    surface.
  prefs: []
  type: TYPE_NORMAL
- en: '**rfun**function or float'
  prefs: []
  type: TYPE_NORMAL
- en: The upper boundary surface in z. (Same requirements as *qfun*.)
  prefs: []
  type: TYPE_NORMAL
- en: '**args**tuple, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Extra arguments to pass to *func*.
  prefs: []
  type: TYPE_NORMAL
- en: '**epsabs**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Absolute tolerance passed directly to the innermost 1-D quadrature integration.
    Default is 1.49e-8.
  prefs: []
  type: TYPE_NORMAL
- en: '**epsrel**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Relative tolerance of the innermost 1-D integrals. Default is 1.49e-8.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**y**float'
  prefs: []
  type: TYPE_NORMAL
- en: The resultant integral.
  prefs: []
  type: TYPE_NORMAL
- en: '**abserr**float'
  prefs: []
  type: TYPE_NORMAL
- en: An estimate of the error.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`quad`](scipy.integrate.quad.html#scipy.integrate.quad "scipy.integrate.quad")'
  prefs: []
  type: TYPE_NORMAL
- en: Adaptive quadrature using QUADPACK
  prefs: []
  type: TYPE_NORMAL
- en: '[`quadrature`](scipy.integrate.quadrature.html#scipy.integrate.quadrature "scipy.integrate.quadrature")'
  prefs: []
  type: TYPE_NORMAL
- en: Adaptive Gaussian quadrature
  prefs: []
  type: TYPE_NORMAL
- en: '[`fixed_quad`](scipy.integrate.fixed_quad.html#scipy.integrate.fixed_quad "scipy.integrate.fixed_quad")'
  prefs: []
  type: TYPE_NORMAL
- en: Fixed-order Gaussian quadrature
  prefs: []
  type: TYPE_NORMAL
- en: '[`dblquad`](scipy.integrate.dblquad.html#scipy.integrate.dblquad "scipy.integrate.dblquad")'
  prefs: []
  type: TYPE_NORMAL
- en: Double integrals
  prefs: []
  type: TYPE_NORMAL
- en: '[`nquad`](scipy.integrate.nquad.html#scipy.integrate.nquad "scipy.integrate.nquad")'
  prefs: []
  type: TYPE_NORMAL
- en: N-dimensional integrals
  prefs: []
  type: TYPE_NORMAL
- en: '[`romb`](scipy.integrate.romb.html#scipy.integrate.romb "scipy.integrate.romb")'
  prefs: []
  type: TYPE_NORMAL
- en: Integrators for sampled data
  prefs: []
  type: TYPE_NORMAL
- en: '[`simpson`](scipy.integrate.simpson.html#scipy.integrate.simpson "scipy.integrate.simpson")'
  prefs: []
  type: TYPE_NORMAL
- en: Integrators for sampled data
  prefs: []
  type: TYPE_NORMAL
- en: '[`ode`](scipy.integrate.ode.html#scipy.integrate.ode "scipy.integrate.ode")'
  prefs: []
  type: TYPE_NORMAL
- en: ODE integrators
  prefs: []
  type: TYPE_NORMAL
- en: '[`odeint`](scipy.integrate.odeint.html#scipy.integrate.odeint "scipy.integrate.odeint")'
  prefs: []
  type: TYPE_NORMAL
- en: ODE integrators
  prefs: []
  type: TYPE_NORMAL
- en: '[`scipy.special`](../special.html#module-scipy.special "scipy.special")'
  prefs: []
  type: TYPE_NORMAL
- en: For coefficients and roots of orthogonal polynomials
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: For valid results, the integral must converge; behavior for divergent integrals
    is not guaranteed.
  prefs: []
  type: TYPE_NORMAL
- en: '**Details of QUADPACK level routines**'
  prefs: []
  type: TYPE_NORMAL
- en: '[`quad`](scipy.integrate.quad.html#scipy.integrate.quad "scipy.integrate.quad")
    calls routines from the FORTRAN library QUADPACK. This section provides details
    on the conditions for each routine to be called and a short description of each
    routine. For each level of integration, `qagse` is used for finite limits or `qagie`
    is used, if either limit (or both!) are infinite. The following provides a short
    description from [[1]](#r5e501d4ee1f2-1) for each routine.'
  prefs: []
  type: TYPE_NORMAL
- en: qagse
  prefs: []
  type: TYPE_NORMAL
- en: is an integrator based on globally adaptive interval subdivision in connection
    with extrapolation, which will eliminate the effects of integrand singularities
    of several types.
  prefs: []
  type: TYPE_NORMAL
- en: qagie
  prefs: []
  type: TYPE_NORMAL
- en: handles integration over infinite intervals. The infinite range is mapped onto
    a finite interval and subsequently the same strategy as in `QAGS` is applied.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: 'Piessens, Robert; de Doncker-Kapenga, Elise; Überhuber, Christoph W.; Kahaner,
    David (1983). QUADPACK: A subroutine package for automatic integration. Springer-Verlag.
    ISBN 978-3-540-12553-2.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Compute the triple integral of `x * y * z`, over `x` ranging from 1 to 2, `y`
    ranging from 2 to 3, `z` ranging from 0 to 1. That is, \(\int^{x=2}_{x=1} \int^{y=3}_{y=2}
    \int^{z=1}_{z=0} x y z \,dz \,dy \,dx\).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Calculate \(\int^{x=1}_{x=0} \int^{y=1-2x}_{y=0} \int^{z=1-x-2y}_{z=0} x y
    z \,dz \,dy \,dx\). Note: *qfun*/*rfun* takes arguments in the order (x, y), even
    though `f` takes arguments in the order (z, y, x).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Calculate \(\int^{x=1}_{x=0} \int^{y=1}_{y=0} \int^{z=1}_{z=0} a x y z \,dz
    \,dy \,dx\) for \(a=1, 3\).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Compute the three-dimensional Gaussian Integral, which is the integral of the
    Gaussian function \(f(x,y,z) = e^{-(x^{2} + y^{2} + z^{2})}\), over \((-\infty,+\infty)\).
    That is, compute the integral \(\iiint^{+\infty}_{-\infty} e^{-(x^{2} + y^{2}
    + z^{2})} \,dz \,dy\,dx\).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
