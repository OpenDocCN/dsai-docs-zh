- en: scipy.signal.argrelmin
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.argrelmin.html#scipy.signal.argrelmin](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.argrelmin.html#scipy.signal.argrelmin)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Calculate the relative minima of *data*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**data**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Array in which to find the relative minima.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axis over which to select from *data*. Default is 0.
  prefs: []
  type: TYPE_NORMAL
- en: '**order**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: How many points on each side to use for the comparison to consider `comparator(n,
    n+x)` to be True.
  prefs: []
  type: TYPE_NORMAL
- en: '**mode**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: How the edges of the vector are treated. Available options are ‘wrap’ (wrap
    around) or ‘clip’ (treat overflow as the same as the last (or first) element).
    Default ‘clip’. See numpy.take.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**extrema**tuple of ndarrays'
  prefs: []
  type: TYPE_NORMAL
- en: Indices of the minima in arrays of integers. `extrema[k]` is the array of indices
    of axis *k* of *data*. Note that the return value is a tuple even when *data*
    is 1-D.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`argrelextrema`](scipy.signal.argrelextrema.html#scipy.signal.argrelextrema
    "scipy.signal.argrelextrema"), [`argrelmax`](scipy.signal.argrelmax.html#scipy.signal.argrelmax
    "scipy.signal.argrelmax"), [`find_peaks`](scipy.signal.find_peaks.html#scipy.signal.find_peaks
    "scipy.signal.find_peaks")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This function uses [`argrelextrema`](scipy.signal.argrelextrema.html#scipy.signal.argrelextrema
    "scipy.signal.argrelextrema") with np.less as comparator. Therefore, it requires
    a strict inequality on both sides of a value to consider it a minimum. This means
    flat minima (more than one sample wide) are not detected. In case of 1-D *data*
    [`find_peaks`](scipy.signal.find_peaks.html#scipy.signal.find_peaks "scipy.signal.find_peaks")
    can be used to detect all local minima, including flat ones, by calling it with
    negated *data*.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.11.0.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
