- en: 'Quick Start Guide: Raspberry Pi with Ultralytics YOLOv8'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 快速入门指南：树莓派与Ultralytics YOLOv8
- en: 原文：[`docs.ultralytics.com/guides/raspberry-pi/`](https://docs.ultralytics.com/guides/raspberry-pi/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[`docs.ultralytics.com/guides/raspberry-pi/`](https://docs.ultralytics.com/guides/raspberry-pi/)
- en: This comprehensive guide provides a detailed walkthrough for deploying Ultralytics
    YOLOv8 on [Raspberry Pi](https://www.raspberrypi.com) devices. Additionally, it
    showcases performance benchmarks to demonstrate the capabilities of YOLOv8 on
    these small and powerful devices.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这份全面的指南提供了在[树莓派](https://www.raspberrypi.com)设备上部署Ultralytics YOLOv8的详细步骤。此外，它展示了性能基准，以展示YOLOv8在这些小型而强大的设备上的能力。
- en: '[`www.youtube.com/embed/yul4gq_LrOI`](https://www.youtube.com/embed/yul4gq_LrOI)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[`www.youtube.com/embed/yul4gq_LrOI`](https://www.youtube.com/embed/yul4gq_LrOI)'
- en: '**Watch:** Raspberry Pi 5 updates and improvements.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**Watch:** 树莓派 5 的更新和改进。'
- en: Note
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Note
- en: This guide has been tested with Raspberry Pi 4 and Raspberry Pi 5 running the
    latest [Raspberry Pi OS Bookworm (Debian 12)](https://www.raspberrypi.com/software/operating-systems/).
    Using this guide for older Raspberry Pi devices such as the Raspberry Pi 3 is
    expected to work as long as the same Raspberry Pi OS Bookworm is installed.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本指南已在运行最新的[树莓派 OS Bookworm (Debian 12)](https://www.raspberrypi.com/software/operating-systems/)的树莓派
    4 和树莓派 5 上进行了测试。只要安装了相同的树莓派 OS Bookworm，预计可以在旧版树莓派设备（如树莓派 3）上使用此指南。
- en: What is Raspberry Pi?
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是树莓派？
- en: Raspberry Pi is a small, affordable, single-board computer. It has become popular
    for a wide range of projects and applications, from hobbyist home automation to
    industrial uses. Raspberry Pi boards are capable of running a variety of operating
    systems, and they offer GPIO (General Purpose Input/Output) pins that allow for
    easy integration with sensors, actuators, and other hardware components. They
    come in different models with varying specifications, but they all share the same
    basic design philosophy of being low-cost, compact, and versatile.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派是一款小巧、价格实惠的单板计算机。它已经在从业余家庭自动化到工业应用的广泛项目和应用中变得流行起来。树莓派板可以运行多种操作系统，并且提供 GPIO（通用输入/输出）引脚，便于与传感器、执行器和其他硬件组件进行集成。它们有不同的型号和规格，但它们都共享相同的基本设计理念：低成本、紧凑和多功能。
- en: Raspberry Pi Series Comparison
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 树莓派系列比较
- en: '|  | Raspberry Pi 3 | Raspberry Pi 4 | Raspberry Pi 5 |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '|  | 树莓派 3 | 树莓派 4 | 树莓派 5 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| CPU | Broadcom BCM2837, Cortex-A53 64Bit SoC | Broadcom BCM2711, Cortex-A72
    64Bit SoC | Broadcom BCM2712, Cortex-A76 64Bit SoC |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| CPU | Broadcom BCM2837, Cortex-A53 64Bit SoC | Broadcom BCM2711, Cortex-A72
    64Bit SoC | Broadcom BCM2712, Cortex-A76 64Bit SoC |'
- en: '| CPU Max Frequency | 1.4GHz | 1.8GHz | 2.4GHz |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| CPU 最大频率 | 1.4GHz | 1.8GHz | 2.4GHz |'
- en: '| GPU | Videocore IV | Videocore VI | VideoCore VII |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| GPU | Videocore IV | Videocore VI | VideoCore VII |'
- en: '| GPU Max Frequency | 400Mhz | 500Mhz | 800Mhz |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| GPU 最大频率 | 400Mhz | 500Mhz | 800Mhz |'
- en: '| Memory | 1GB LPDDR2 SDRAM | 1GB, 2GB, 4GB, 8GB LPDDR4-3200 SDRAM | 4GB, 8GB
    LPDDR4X-4267 SDRAM |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| 内存 | 1GB LPDDR2 SDRAM | 1GB, 2GB, 4GB, 8GB LPDDR4-3200 SDRAM | 4GB, 8GB LPDDR4X-4267
    SDRAM |'
- en: '| PCIe | N/A | N/A | 1xPCIe 2.0 Interface |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| PCIe | N/A | N/A | 1xPCIe 2.0 接口 |'
- en: '| Max Power Draw | 2.5A@5V | 3A@5V | 5A@5V (PD enabled) |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| 最大功耗 | 2.5A@5V | 3A@5V | 5A@5V (PD enabled) |'
- en: What is Raspberry Pi OS?
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是树莓派操作系统？
- en: '[Raspberry Pi OS](https://www.raspberrypi.com/software) (formerly known as
    Raspbian) is a Unix-like operating system based on the Debian GNU/Linux distribution
    for the Raspberry Pi family of compact single-board computers distributed by the
    Raspberry Pi Foundation. Raspberry Pi OS is highly optimized for the Raspberry
    Pi with ARM CPUs and uses a modified LXDE desktop environment with the Openbox
    stacking window manager. Raspberry Pi OS is under active development, with an
    emphasis on improving the stability and performance of as many Debian packages
    as possible on Raspberry Pi.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[树莓派操作系统](https://www.raspberrypi.com/software)（之前称为 Raspbian）是一款基于 Debian
    GNU/Linux 发行版的类 Unix 操作系统，专为由树莓派基金会分发的紧凑型单板计算机家族而优化。树莓派操作系统使用 ARM CPU，并采用修改版的
    LXDE 桌面环境和 Openbox 堆叠窗口管理器。树莓派操作系统正在积极开发中，重点是尽可能提高尽可能多的 Debian 软件包在树莓派上的稳定性和性能。'
- en: Flash Raspberry Pi OS to Raspberry Pi
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将树莓派操作系统刷入树莓派
- en: The first thing to do after getting your hands on a Raspberry Pi is to flash
    a micro-SD card with Raspberry Pi OS, insert into the device and boot into the
    OS. Follow along with detailed [Getting Started Documentation by Raspberry Pi](https://www.raspberrypi.com/documentation/computers/getting-started.html)
    to prepare your device for first use.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在获得树莓派后的第一件事是用树莓派OS刷一张micro-SD卡，插入设备并引导至操作系统。详细遵循由树莓派提供的[开始使用文档](https://www.raspberrypi.com/documentation/computers/getting-started.html)准备设备首次使用。
- en: Set Up Ultralytics
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置Ultralytics
- en: There are two ways of setting up Ultralytics package on Raspberry Pi to build
    your next Computer Vision project. You can use either of them.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种在树莓派上设置Ultralytics包以构建下一个计算机视觉项目的方法。您可以选择使用其中任何一种。
- en: Start with Docker
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Docker开始
- en: Start without Docker
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开始时不使用Docker
- en: Start with Docker
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Docker开始
- en: The fastest way to get started with Ultralytics YOLOv8 on Raspberry Pi is to
    run with pre-built docker image for Raspberry Pi.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在树莓派上使用预构建的docker镜像是快速开始Ultralytics YOLOv8的最快方法。
- en: Execute the below command to pull the Docker container and run on Raspberry
    Pi. This is based on [arm64v8/debian](https://hub.docker.com/r/arm64v8/debian)
    docker image which contains Debian 12 (Bookworm) in a Python3 environment.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下命令以拉取Docker容器并在树莓派上运行。这基于包含Debian 12（Bookworm）的[arm64v8/debian](https://hub.docker.com/r/arm64v8/debian)
    docker镜像，处于Python3环境中。
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: After this is done, skip to Use NCNN on Raspberry Pi section.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成此操作后，请跳至使用树莓派上的NCNN部分。
- en: Start without Docker
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 开始时不使用Docker
- en: Install Ultralytics Package
  id: totrans-33
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 安装Ultralytics包
- en: Here we will install Ultralytics package on the Raspberry Pi with optional dependencies
    so that we can export the PyTorch models to other different formats.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将在树莓派上安装Ultralytics包及其可选依赖项，以便我们可以将PyTorch模型导出为其他不同的格式。
- en: Update packages list, install pip and upgrade to latest
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新包列表，安装pip并升级到最新版本
- en: '[PRE1]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Install `ultralytics` pip package with optional dependencies
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用可选依赖项安装`ultralytics` pip包
- en: '[PRE2]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Reboot the device
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新启动设备
- en: '[PRE3]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Use NCNN on Raspberry Pi
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在树莓派上使用NCNN
- en: Out of all the model export formats supported by Ultralytics, [NCNN](https://docs.ultralytics.com/integrations/ncnn)
    delivers the best inference performance when working with Raspberry Pi devices
    because NCNN is highly optimized for mobile/ embedded platforms (such as ARM architecture).
    Therefor our recommendation is to use NCNN with Raspberry Pi.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有Ultralytics支持的模型导出格式中，[NCNN](https://docs.ultralytics.com/integrations/ncnn)在与树莓派设备一起工作时提供了最佳推理性能，因为NCNN在移动/嵌入式平台（如ARM架构）上进行了高度优化。因此，我们建议在树莓派上使用NCNN。
- en: Convert Model to NCNN and Run Inference
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将模型转换为NCNN并运行推理
- en: The YOLOv8n model in PyTorch format is converted to NCNN to run inference with
    the exported model.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 将PyTorch格式中的YOLOv8n模型转换为NCNN，以便使用导出模型进行推理。
- en: Example
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Tip
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: For more details about supported export options, visit the [Ultralytics documentation
    page on deployment options](https://docs.ultralytics.com/guides/model-deployment-options).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解有关支持的导出选项的更多详细信息，请访问[Ultralytics文档页关于部署选项](https://docs.ultralytics.com/guides/model-deployment-options)。
- en: Raspberry Pi 5 vs Raspberry Pi 4 YOLOv8 Benchmarks
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 树莓派5与树莓派4 YOLOv8性能基准测试
- en: 'YOLOv8 benchmarks were run by the Ultralytics team on nine different model
    formats measuring speed and accuracy: PyTorch, TorchScript, ONNX, OpenVINO, TF
    SavedModel, TF GraphDef, TF Lite, PaddlePaddle, NCNN. Benchmarks were run on both
    Raspberry Pi 5 and Raspberry Pi 4 at FP32 precision with default input image size
    of 640.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Ultralytics团队在九种不同的模型格式上运行了YOLOv8基准测试，测量速度和准确性：PyTorch，TorchScript，ONNX，OpenVINO，TF
    SavedModel，TF GraphDef，TF Lite，PaddlePaddle，NCNN。基准测试在树莓派5和树莓派4上以FP32精度进行，使用默认输入图像尺寸为640。
- en: Note
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: We have only included benchmarks for YOLOv8n and YOLOv8s models because other
    models sizes are too big to run on the Raspberry Pis and does not offer decent
    performance.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们仅包含YOLOv8n和YOLOv8s模型的基准测试，因为其他模型尺寸过大，在树莓派上运行性能不佳。
- en: Comparison Chart
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 比较图表
- en: Performance
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 性能
- en: '![NVIDIA Jetson Ecosystem](img/710743298bfb2ebc093b0bfdcac928a2.png)![NVIDIA
    Jetson Ecosystem](img/9e1bdc9addc8a5c54c7efdcd444d35d0.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![NVIDIA Jetson生态系统](img/710743298bfb2ebc093b0bfdcac928a2.png)![NVIDIA Jetson生态系统](img/9e1bdc9addc8a5c54c7efdcd444d35d0.png)'
- en: Detailed Comparison Table
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 详细比较表
- en: The below table represents the benchmark results for two different models (YOLOv8n,
    YOLOv8s) across nine different formats (PyTorch, TorchScript, ONNX, OpenVINO,
    TF SavedModel, TF GraphDef, TF Lite, PaddlePaddle, NCNN), running on both Raspberry
    Pi 4 and Raspberry Pi 5, giving us the status, size, mAP50-95(B) metric, and inference
    time for each combination.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 下表显示了两种不同模型（YOLOv8n、YOLOv8s）在九种不同格式（PyTorch、TorchScript、ONNX、OpenVINO、TF SavedModel、TF
    GraphDef、TF Lite、PaddlePaddle、NCNN）上在树莓派4和树莓派5上的基准测试结果，给出了每种组合的状态、大小、mAP50-95(B)指标和推理时间。
- en: Performance
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 性能
- en: '| Format | Status | Size on disk (MB) | mAP50-95(B) | Inference time (ms/im)
    |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| 格式 | 状态 | 磁盘大小（MB） | mAP50-95(B) | 推理时间（ms/im） |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| PyTorch | ✅ | 6.2 | 0.6381 | 508.61 |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| PyTorch | ✅ | 6.2 | 0.6381 | 508.61 |'
- en: '| TorchScript | ✅ | 12.4 | 0.6092 | 558.38 |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| TorchScript | ✅ | 12.4 | 0.6092 | 558.38 |'
- en: '| ONNX | ✅ | 12.2 | 0.6092 | 198.69 |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| ONNX | ✅ | 12.2 | 0.6092 | 198.69 |'
- en: '| OpenVINO | ✅ | 12.3 | 0.6092 | 704.70 |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| OpenVINO | ✅ | 12.3 | 0.6092 | 704.70 |'
- en: '| TF SavedModel | ✅ | 30.6 | 0.6092 | 367.64 |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| TF SavedModel | ✅ | 30.6 | 0.6092 | 367.64 |'
- en: '| TF GraphDef | ✅ | 12.3 | 0.6092 | 473.22 |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| TF GraphDef | ✅ | 12.3 | 0.6092 | 473.22 |'
- en: '| TF Lite | ✅ | 12.3 | 0.6092 | 380.67 |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| TF Lite | ✅ | 12.3 | 0.6092 | 380.67 |'
- en: '| PaddlePaddle | ✅ | 24.4 | 0.6092 | 703.51 |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| PaddlePaddle | ✅ | 24.4 | 0.6092 | 703.51 |'
- en: '| NCNN | ✅ | 12.2 | 0.6034 | 94.28 |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| NCNN | ✅ | 12.2 | 0.6034 | 94.28 |'
- en: '| Format | Status | Size on disk (MB) | mAP50-95(B) | Inference time (ms/im)
    |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| 格式 | 状态 | 磁盘大小（MB） | mAP50-95(B) | 推理时间（ms/im） |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| PyTorch | ✅ | 21.5 | 0.6967 | 969.49 |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| PyTorch | ✅ | 21.5 | 0.6967 | 969.49 |'
- en: '| TorchScript | ✅ | 43.0 | 0.7136 | 1110.04 |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| TorchScript | ✅ | 43.0 | 0.7136 | 1110.04 |'
- en: '| ONNX | ✅ | 42.8 | 0.7136 | 451.37 |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| ONNX | ✅ | 42.8 | 0.7136 | 451.37 |'
- en: '| OpenVINO | ✅ | 42.9 | 0.7136 | 873.51 |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| OpenVINO | ✅ | 42.9 | 0.7136 | 873.51 |'
- en: '| TF SavedModel | ✅ | 107.0 | 0.7136 | 658.15 |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| TF SavedModel | ✅ | 107.0 | 0.7136 | 658.15 |'
- en: '| TF GraphDef | ✅ | 42.8 | 0.7136 | 946.01 |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| TF GraphDef | ✅ | 42.8 | 0.7136 | 946.01 |'
- en: '| TF Lite | ✅ | 42.8 | 0.7136 | 1013.27 |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| TF Lite | ✅ | 42.8 | 0.7136 | 1013.27 |'
- en: '| PaddlePaddle | ✅ | 85.5 | 0.7136 | 1560.23 |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| PaddlePaddle | ✅ | 85.5 | 0.7136 | 1560.23 |'
- en: '| NCNN | ✅ | 42.7 | 0.7204 | 211.26 |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| NCNN | ✅ | 42.7 | 0.7204 | 211.26 |'
- en: '| Format | Status | Size on disk (MB) | mAP50-95(B) | Inference time (ms/im)
    |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| 格式 | 状态 | 磁盘大小（MB） | mAP50-95(B) | 推理时间（ms/im） |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| PyTorch | ✅ | 6.2 | 0.6381 | 1068.42 |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| PyTorch | ✅ | 6.2 | 0.6381 | 1068.42 |'
- en: '| TorchScript | ✅ | 12.4 | 0.6092 | 1248.01 |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| TorchScript | ✅ | 12.4 | 0.6092 | 1248.01 |'
- en: '| ONNX | ✅ | 12.2 | 0.6092 | 560.04 |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| ONNX | ✅ | 12.2 | 0.6092 | 560.04 |'
- en: '| OpenVINO | ✅ | 12.3 | 0.6092 | 534.93 |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| OpenVINO | ✅ | 12.3 | 0.6092 | 534.93 |'
- en: '| TF SavedModel | ✅ | 30.6 | 0.6092 | 816.50 |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| TF SavedModel | ✅ | 30.6 | 0.6092 | 816.50 |'
- en: '| TF GraphDef | ✅ | 12.3 | 0.6092 | 1007.57 |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| TF GraphDef | ✅ | 12.3 | 0.6092 | 1007.57 |'
- en: '| TF Lite | ✅ | 12.3 | 0.6092 | 950.29 |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| TF Lite | ✅ | 12.3 | 0.6092 | 950.29 |'
- en: '| PaddlePaddle | ✅ | 24.4 | 0.6092 | 1507.75 |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| PaddlePaddle | ✅ | 24.4 | 0.6092 | 1507.75 |'
- en: '| NCNN | ✅ | 12.2 | 0.6092 | 414.73 |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| NCNN | ✅ | 12.2 | 0.6092 | 414.73 |'
- en: '| Format | Status | Size on disk (MB) | mAP50-95(B) | Inference time (ms/im)
    |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| 格式 | 状态 | 磁盘大小（MB） | mAP50-95(B) | 推理时间（ms/im） |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| PyTorch | ✅ | 21.5 | 0.6967 | 2589.58 |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| PyTorch | ✅ | 21.5 | 0.6967 | 2589.58 |'
- en: '| TorchScript | ✅ | 43.0 | 0.7136 | 2901.33 |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| TorchScript | ✅ | 43.0 | 0.7136 | 2901.33 |'
- en: '| ONNX | ✅ | 42.8 | 0.7136 | 1436.33 |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| ONNX | ✅ | 42.8 | 0.7136 | 1436.33 |'
- en: '| OpenVINO | ✅ | 42.9 | 0.7136 | 1225.19 |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| OpenVINO | ✅ | 42.9 | 0.7136 | 1225.19 |'
- en: '| TF SavedModel | ✅ | 107.0 | 0.7136 | 1770.95 |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| TF SavedModel | ✅ | 107.0 | 0.7136 | 1770.95 |'
- en: '| TF GraphDef | ✅ | 42.8 | 0.7136 | 2146.66 |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| TF GraphDef | ✅ | 42.8 | 0.7136 | 2146.66 |'
- en: '| TF Lite | ✅ | 42.8 | 0.7136 | 2945.03 |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| TF Lite | ✅ | 42.8 | 0.7136 | 2945.03 |'
- en: '| PaddlePaddle | ✅ | 85.5 | 0.7136 | 3962.62 |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| PaddlePaddle | ✅ | 85.5 | 0.7136 | 3962.62 |'
- en: '| NCNN | ✅ | 42.7 | 0.7136 | 1042.39 |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| NCNN | ✅ | 42.7 | 0.7136 | 1042.39 |'
- en: Reproduce Our Results
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 复现我们的结果
- en: 'To reproduce the above Ultralytics benchmarks on all export formats, run this
    code:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 要在所有导出格式上复现上述Ultralytics基准测试结果，请运行此代码：
- en: Example
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE6]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Note that benchmarking results might vary based on the exact hardware and software
    configuration of a system, as well as the current workload of the system at the
    time the benchmarks are run. For the most reliable results use a dataset with
    a large number of images, i.e. `data='coco8.yaml' (4 val images), or`data='coco.yaml'`
    (5000 val images).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，基准测试结果可能会根据系统的确切硬件和软件配置以及系统在进行基准测试时的当前工作负载而有所不同。要获得最可靠的结果，请使用一个包含大量图像的数据集，即`data='coco8.yaml'
    (4 val images)`，或者`data='coco.yaml'`（5000 val images）。
- en: Use Raspberry Pi Camera
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用树莓派摄像头
- en: When using Raspberry Pi for Computer Vision projects, it can be essentially
    to grab real-time video feeds to perform inference. The onboard MIPI CSI connector
    on the Raspberry Pi allows you to connect official Raspberry PI camera modules.
    In this guide, we have used a [Raspberry Pi Camera Module 3](https://www.raspberrypi.com/products/camera-module-3)
    to grab the video feeds and perform inference using YOLOv8 models.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行计算机视觉项目时使用树莓派，抓取实时视频流进行推理非常重要。树莓派上的 MIPI CSI 连接器允许连接官方树莓派摄像头模块。在本指南中，我们使用了
    [Raspberry Pi Camera Module 3](https://www.raspberrypi.com/products/camera-module-3)
    抓取视频流，并使用 YOLOv8 模型进行推理。
- en: Tip
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: Learn more about the [different camera modules offered by Raspberry Pi](https://www.raspberrypi.com/documentation/accessories/camera.html)
    and also [how to get started with the Raspberry Pi camera modules](https://www.raspberrypi.com/documentation/computers/camera_software.html#introducing-the-raspberry-pi-cameras).
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 查看关于 [树莓派提供的不同摄像头模块](https://www.raspberrypi.com/documentation/accessories/camera.html)
    以及 [如何开始使用树莓派摄像头模块的信息](https://www.raspberrypi.com/documentation/computers/camera_software.html#introducing-the-raspberry-pi-cameras)
    的文档。
- en: Note
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Raspberry Pi 5 uses smaller CSI connectors than the Raspberry Pi 4 (15-pin vs
    22-pin), so you will need a [15-pin to 22pin adapter cable](https://www.raspberrypi.com/products/camera-cable)
    to connect to a Raspberry Pi Camera.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派 5 使用比树莓派 4 更小的 CSI 连接器（15 引脚 vs 22 引脚），因此您需要一根 [15 引脚到 22 引脚适配器电缆](https://www.raspberrypi.com/products/camera-cable)
    来连接树莓派摄像头。
- en: Test the Camera
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试摄像头
- en: Execute the following command after connecting the camera to the Raspberry Pi.
    You should see a live video feed from the camera for about 5 seconds.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在连接摄像头到树莓派后执行以下命令。您应该能看到来自摄像头的实时视频流，持续约 5 秒钟。
- en: '[PRE8]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Tip
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: Learn more about [`rpicam-hello` usage on official Raspberry Pi documentation](https://www.raspberrypi.com/documentation/computers/camera_software.html#rpicam-hello)
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 查看官方树莓派文档中关于 [`rpicam-hello` 的使用说明](https://www.raspberrypi.com/documentation/computers/camera_software.html#rpicam-hello)。
- en: Inference with Camera
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用摄像头进行推理
- en: There are 2 methods of using the Raspberry Pi Camera to inference YOLOv8 models.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种使用树莓派摄像头进行 YOLOv8 模型推理的方法。
- en: Usage
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 使用方法
- en: We can use `picamera2`which comes pre-installed with Raspberry Pi OS to access
    the camera and inference YOLOv8 models.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用预装在树莓派 OS 上的 `picamera2` 来访问摄像头并推理 YOLOv8 模型。
- en: Example
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE9]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: We need to initiate a TCP stream with `rpicam-vid` from the connected camera
    so that we can use this stream URL as an input when we are inferencing later.
    Execute the following command to start the TCP stream.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要通过连接的摄像头与 `rpicam-vid` 建立一个 TCP 流，以便在后续推理时将此流 URL 作为输入。执行以下命令来启动 TCP 流。
- en: '[PRE10]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Learn more about [`rpicam-vid` usage on official Raspberry Pi documentation](https://www.raspberrypi.com/documentation/computers/camera_software.html#rpicam-vid)
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 查看官方树莓派文档中关于 [`rpicam-vid` 的使用说明](https://www.raspberrypi.com/documentation/computers/camera_software.html#rpicam-vid)。
- en: Example
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE11]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Tip
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: Check our document on [Inference Sources](https://docs.ultralytics.com/modes/predict/#inference-sources)
    if you want to change the image/ video input type
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 查看我们的文档关于 [推理来源](https://docs.ultralytics.com/modes/predict/#inference-sources)，如果您想更改图像/视频输入类型。
- en: Best Practices when using Raspberry Pi
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在使用树莓派时的最佳实践
- en: There are a couple of best practices to follow in order to enable maximum performance
    on Raspberry Pis running YOLOv8.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 有几项最佳实践需要遵循，以在运行 YOLOv8 的树莓派上实现最大性能。
- en: Use an SSD
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 SSD
- en: When using Raspberry Pi for 24x7 continued usage, it is recommended to use an
    SSD for the system because an SD card will not be able to withstand continuous
    writes and might get broken. With the onboard PCIe connector on the Raspberry
    Pi 5, now you can connect SSDs using an adapter such as the [NVMe Base for Raspberry
    Pi 5](https://shop.pimoroni.com/products/nvme-base).
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在持续使用树莓派进行 24x7 使用时，建议使用 SSD 作为系统，因为 SD 卡无法承受连续写入并可能损坏。现在，通过树莓派 5 上的内置 PCIe
    连接器，您可以使用适配器如 [NVMe Base for Raspberry Pi 5](https://shop.pimoroni.com/products/nvme-base)
    连接 SSD。
- en: Flash without GUI
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 无 GUI 刷写
- en: When flashing Raspberry Pi OS, you can choose to not install the Desktop environment
    (Raspberry Pi OS Lite) and this can save a bit of RAM on the device, leaving more
    space for computer vision processing.
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在刷写树莓派 OS 时，您可以选择不安装桌面环境（树莓派 OS Lite），这样可以节省设备上的一些 RAM，为计算机视觉处理留下更多空间。
- en: Next Steps
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下一步
- en: Congratulations on successfully setting up YOLO on your Raspberry Pi! For further
    learning and support, visit Ultralytics YOLOv8 Docs and [Kashmir World Foundation](https://www.kashmirworldfoundation.org/).
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜您成功在树莓派上设置YOLO！如需进一步学习和支持，请访问Ultralytics YOLOv8文档和[Kashmir World Foundation](https://www.kashmirworldfoundation.org/)。
- en: Acknowledgements and Citations
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 致谢与引用
- en: This guide was initially created by Daan Eeltink for Kashmir World Foundation,
    an organization dedicated to the use of YOLO for the conservation of endangered
    species. We acknowledge their pioneering work and educational focus in the realm
    of object detection technologies.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 本指南最初由Daan Eeltink为Kashmir World Foundation创建，这是一个致力于利用YOLO保护濒危物种的组织。我们承认他们在物体检测技术领域的开创性工作和教育重点。
- en: For more information about Kashmir World Foundation's activities, you can visit
    their [website](https://www.kashmirworldfoundation.org/).
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多关于Kashmir World Foundation活动的信息，请访问他们的[网站](https://www.kashmirworldfoundation.org/)。
- en: FAQ
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常见问题解答
- en: How do I set up Ultralytics YOLOv8 on a Raspberry Pi without using Docker?
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何在树莓派上不使用Docker设置Ultralytics YOLOv8？
- en: 'To set up Ultralytics YOLOv8 on a Raspberry Pi without Docker, follow these
    steps:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 要在树莓派上设置Ultralytics YOLOv8而不使用Docker，请按照以下步骤操作：
- en: 'Update the package list and install `pip`:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新软件包列表并安装`pip`：
- en: '[PRE13]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Install the Ultralytics package with optional dependencies:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用可选依赖项安装Ultralytics包：
- en: '[PRE14]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Reboot the device to apply changes:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新启动设备以应用更改：
- en: '[PRE15]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: For detailed instructions, refer to the Start without Docker section.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 有关详细说明，请参阅无Docker启动部分。
- en: Why should I use Ultralytics YOLOv8's NCNN format on Raspberry Pi for AI tasks?
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为什么我应该在树莓派上使用Ultralytics YOLOv8的NCNN格式进行AI任务？
- en: Ultralytics YOLOv8's NCNN format is highly optimized for mobile and embedded
    platforms, making it ideal for running AI tasks on Raspberry Pi devices. NCNN
    maximizes inference performance by leveraging ARM architecture, providing faster
    and more efficient processing compared to other formats. For more details on supported
    export options, visit the Ultralytics documentation page on deployment options.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: Ultralytics YOLOv8的NCNN格式经过高度优化，非常适合移动和嵌入式平台，非常适合在树莓派设备上运行AI任务。NCNN通过利用ARM架构提供更快速和更高效的处理，最大化推断性能，比其他格式更优。有关支持的导出选项的详细信息，请访问Ultralytics部署选项文档页面。
- en: How can I convert a YOLOv8 model to NCNN format for use on Raspberry Pi?
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何将YOLOv8模型转换为NCNN格式以在树莓派上使用？
- en: 'You can convert a PyTorch YOLOv8 model to NCNN format using either Python or
    CLI commands:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用Python或CLI命令将PyTorch YOLOv8模型转换为NCNN格式：
- en: Example
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE16]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: For more details, see the Use NCNN on Raspberry Pi section.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 更多详情，请参阅在树莓派上使用NCNN部分。
- en: What are the hardware differences between Raspberry Pi 4 and Raspberry Pi 5
    relevant to running YOLOv8?
  id: totrans-164
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 树莓派4和树莓派5在运行YOLOv8时的硬件差异是什么？
- en: 'Key differences include:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 关键差异包括：
- en: '**CPU**: Raspberry Pi 4 uses Broadcom BCM2711, Cortex-A72 64-bit SoC, while
    Raspberry Pi 5 uses Broadcom BCM2712, Cortex-A76 64-bit SoC.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CPU**：树莓派4使用Broadcom BCM2711，Cortex-A72 64位SoC，而树莓派5使用Broadcom BCM2712，Cortex-A76
    64位SoC。'
- en: '**Max CPU Frequency**: Raspberry Pi 4 has a max frequency of 1.8GHz, whereas
    Raspberry Pi 5 reaches 2.4GHz.'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最大CPU频率**：树莓派4的最大频率为1.8GHz，而树莓派5可达到2.4GHz。'
- en: '**Memory**: Raspberry Pi 4 offers up to 8GB of LPDDR4-3200 SDRAM, while Raspberry
    Pi 5 features LPDDR4X-4267 SDRAM, available in 4GB and 8GB variants.'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内存**：树莓派4提供高达8GB的LPDDR4-3200 SDRAM，而树莓派5采用LPDDR4X-4267 SDRAM，有4GB和8GB两种变体。'
- en: These enhancements contribute to better performance benchmarks for YOLOv8 models
    on Raspberry Pi 5 compared to Raspberry Pi 4\. Refer to the Raspberry Pi Series
    Comparison table for more details.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 这些增强措施使YOLOv8模型在树莓派5上的性能基准比树莓派4更好。有关更多详细信息，请参阅树莓派系列比较表。
- en: How can I set up a Raspberry Pi Camera Module to work with Ultralytics YOLOv8?
  id: totrans-170
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何设置树莓派摄像头模块以与Ultralytics YOLOv8配合使用？
- en: 'There are two methods to set up a Raspberry Pi Camera for YOLOv8 inference:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 设置树莓派摄像头进行YOLOv8推断有两种方法：
- en: '**Using `picamera2`**:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**使用`picamera2`**：'
- en: '[PRE18]'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '**Using a TCP Stream**:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**使用TCP流**：'
- en: '[PRE19]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: For detailed setup instructions, visit the Inference with Camera section.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 有关详细设置说明，请访问使用摄像头推断部分。
