- en: GroupBy
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GroupBy
- en: 原文：[https://pandas.pydata.org/docs/reference/groupby.html](https://pandas.pydata.org/docs/reference/groupby.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/groupby.html](https://pandas.pydata.org/docs/reference/groupby.html)
- en: '`pandas.api.typing.DataFrameGroupBy` and `pandas.api.typing.SeriesGroupBy`
    instances are returned by groupby calls [`pandas.DataFrame.groupby()`](api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`pandas.Series.groupby()`](api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") respectively.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas.api.typing.DataFrameGroupBy` 和 `pandas.api.typing.SeriesGroupBy` 实例是由
    `groupby` 调用 [`pandas.DataFrame.groupby()`](api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") 和 [`pandas.Series.groupby()`](api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") 返回的。'
- en: Indexing, iteration
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 索引、迭代
- en: '| [`DataFrameGroupBy.__iter__`](api/pandas.core.groupby.DataFrameGroupBy.__iter__.html#pandas.core.groupby.DataFrameGroupBy.__iter__
    "pandas.core.groupby.DataFrameGroupBy.__iter__")() | Groupby iterator. |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.__iter__`](api/pandas.core.groupby.DataFrameGroupBy.__iter__.html#pandas.core.groupby.DataFrameGroupBy.__iter__
    "pandas.core.groupby.DataFrameGroupBy.__iter__")() | 分组迭代器。 |'
- en: '| [`SeriesGroupBy.__iter__`](api/pandas.core.groupby.SeriesGroupBy.__iter__.html#pandas.core.groupby.SeriesGroupBy.__iter__
    "pandas.core.groupby.SeriesGroupBy.__iter__")() | Groupby iterator. |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.__iter__`](api/pandas.core.groupby.SeriesGroupBy.__iter__.html#pandas.core.groupby.SeriesGroupBy.__iter__
    "pandas.core.groupby.SeriesGroupBy.__iter__")() | 分组迭代器。 |'
- en: '| [`DataFrameGroupBy.groups`](api/pandas.core.groupby.DataFrameGroupBy.groups.html#pandas.core.groupby.DataFrameGroupBy.groups
    "pandas.core.groupby.DataFrameGroupBy.groups") | Dict {group name -> group labels}.
    |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.groups`](api/pandas.core.groupby.DataFrameGroupBy.groups.html#pandas.core.groupby.DataFrameGroupBy.groups
    "pandas.core.groupby.DataFrameGroupBy.groups") | 字典 {组名 -> 组标签}。 |'
- en: '| [`SeriesGroupBy.groups`](api/pandas.core.groupby.SeriesGroupBy.groups.html#pandas.core.groupby.SeriesGroupBy.groups
    "pandas.core.groupby.SeriesGroupBy.groups") | Dict {group name -> group labels}.
    |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.groups`](api/pandas.core.groupby.SeriesGroupBy.groups.html#pandas.core.groupby.SeriesGroupBy.groups
    "pandas.core.groupby.SeriesGroupBy.groups") | 字典 {组名 -> 组标签}。 |'
- en: '| [`DataFrameGroupBy.indices`](api/pandas.core.groupby.DataFrameGroupBy.indices.html#pandas.core.groupby.DataFrameGroupBy.indices
    "pandas.core.groupby.DataFrameGroupBy.indices") | Dict {group name -> group indices}.
    |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.indices`](api/pandas.core.groupby.DataFrameGroupBy.indices.html#pandas.core.groupby.DataFrameGroupBy.indices
    "pandas.core.groupby.DataFrameGroupBy.indices") | 字典 {组名 -> 组索引}。 |'
- en: '| [`SeriesGroupBy.indices`](api/pandas.core.groupby.SeriesGroupBy.indices.html#pandas.core.groupby.SeriesGroupBy.indices
    "pandas.core.groupby.SeriesGroupBy.indices") | Dict {group name -> group indices}.
    |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.indices`](api/pandas.core.groupby.SeriesGroupBy.indices.html#pandas.core.groupby.SeriesGroupBy.indices
    "pandas.core.groupby.SeriesGroupBy.indices") | 字典 {组名 -> 组索引}。 |'
- en: '| [`DataFrameGroupBy.get_group`](api/pandas.core.groupby.DataFrameGroupBy.get_group.html#pandas.core.groupby.DataFrameGroupBy.get_group
    "pandas.core.groupby.DataFrameGroupBy.get_group")(name[, obj]) | Construct DataFrame
    from group with provided name. |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.get_group`](api/pandas.core.groupby.DataFrameGroupBy.get_group.html#pandas.core.groupby.DataFrameGroupBy.get_group
    "pandas.core.groupby.DataFrameGroupBy.get_group")(name[, obj]) | 使用提供的名称构造组内的
    DataFrame。 |'
- en: '| [`SeriesGroupBy.get_group`](api/pandas.core.groupby.SeriesGroupBy.get_group.html#pandas.core.groupby.SeriesGroupBy.get_group
    "pandas.core.groupby.SeriesGroupBy.get_group")(name[, obj]) | Construct DataFrame
    from group with provided name. |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.get_group`](api/pandas.core.groupby.SeriesGroupBy.get_group.html#pandas.core.groupby.SeriesGroupBy.get_group
    "pandas.core.groupby.SeriesGroupBy.get_group")(name[, obj]) | 使用提供的名称构造组内的 DataFrame。
    |'
- en: '| [`Grouper`](api/pandas.Grouper.html#pandas.Grouper "pandas.Grouper")(*args, **kwargs)
    | A Grouper allows the user to specify a groupby instruction for an object. |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| [`Grouper`](api/pandas.Grouper.html#pandas.Grouper "pandas.Grouper")(*args, **kwargs)
    | Grouper 允许用户为对象指定分组指令。 |'
- en: Function application helper
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 函数应用助手
- en: '| [`NamedAgg`](api/pandas.NamedAgg.html#pandas.NamedAgg "pandas.NamedAgg")(column, aggfunc)
    | Helper for column specific aggregation with control over output column names.
    |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [`NamedAgg`](api/pandas.NamedAgg.html#pandas.NamedAgg "pandas.NamedAgg")(column, aggfunc)
    | 用于具有对输出列名称的控制的特定列聚合的辅助程序。 |'
- en: Function application
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 函数应用
- en: '| [`SeriesGroupBy.apply`](api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply")(func, *args, **kwargs) | Apply function
    `func` group-wise and combine the results together. |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.apply`](api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply")(func, *args, **kwargs) | 对函数 `func`
    分组应用，并将结果合并在一起。 |'
- en: '| [`DataFrameGroupBy.apply`](api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply")(func, *args[, ...]) | Apply function
    `func` group-wise and combine the results together. |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.apply`](api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") | 逐组应用函数 `func`，并将结果组合在一起。 |'
- en: '| [`SeriesGroupBy.agg`](api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg")([func, engine, engine_kwargs]) | Aggregate
    using one or more operations over the specified axis. |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.agg`](api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg") | 使用一个或多个操作聚合指定轴上的数据。 |'
- en: '| [`DataFrameGroupBy.agg`](api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg")([func, engine, ...]) | Aggregate using
    one or more operations over the specified axis. |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.agg`](api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") | 使用一个或多个操作聚合指定轴上的数据。 |'
- en: '| [`SeriesGroupBy.aggregate`](api/pandas.core.groupby.SeriesGroupBy.aggregate.html#pandas.core.groupby.SeriesGroupBy.aggregate
    "pandas.core.groupby.SeriesGroupBy.aggregate")([func, engine, ...]) | Aggregate
    using one or more operations over the specified axis. |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.aggregate`](api/pandas.core.groupby.SeriesGroupBy.aggregate.html#pandas.core.groupby.SeriesGroupBy.aggregate
    "pandas.core.groupby.SeriesGroupBy.aggregate") | 使用一个或多个操作聚合指定轴上的数据。 |'
- en: '| [`DataFrameGroupBy.aggregate`](api/pandas.core.groupby.DataFrameGroupBy.aggregate.html#pandas.core.groupby.DataFrameGroupBy.aggregate
    "pandas.core.groupby.DataFrameGroupBy.aggregate")([func, engine, ...]) | Aggregate
    using one or more operations over the specified axis. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.aggregate`](api/pandas.core.groupby.DataFrameGroupBy.aggregate.html#pandas.core.groupby.DataFrameGroupBy.aggregate
    "pandas.core.groupby.DataFrameGroupBy.aggregate") | 使用一个或多个操作聚合指定轴上的数据。 |'
- en: '| [`SeriesGroupBy.transform`](api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform")(func, *args[, ...]) | Call function
    producing a same-indexed Series on each group. |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.transform`](api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") | 在每个组上调用产生相同索引的 Series 的函数。 |'
- en: '| [`DataFrameGroupBy.transform`](api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform")(func, *args[, ...]) | Call function
    producing a same-indexed DataFrame on each group. |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.transform`](api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") | 在每个组上调用产生相同索引的 DataFrame 的函数。
    |'
- en: '| [`SeriesGroupBy.pipe`](api/pandas.core.groupby.SeriesGroupBy.pipe.html#pandas.core.groupby.SeriesGroupBy.pipe
    "pandas.core.groupby.SeriesGroupBy.pipe")(func, *args, **kwargs) | Apply a `func`
    with arguments to this GroupBy object and return its result. |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.pipe`](api/pandas.core.groupby.SeriesGroupBy.pipe.html#pandas.core.groupby.SeriesGroupBy.pipe
    "pandas.core.groupby.SeriesGroupBy.pipe") | 对该 GroupBy 对象应用带有参数的 `func`，并返回其结果。
    |'
- en: '| [`DataFrameGroupBy.pipe`](api/pandas.core.groupby.DataFrameGroupBy.pipe.html#pandas.core.groupby.DataFrameGroupBy.pipe
    "pandas.core.groupby.DataFrameGroupBy.pipe")(func, *args, **kwargs) | Apply a
    `func` with arguments to this GroupBy object and return its result. |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.pipe`](api/pandas.core.groupby.DataFrameGroupBy.pipe.html#pandas.core.groupby.DataFrameGroupBy.pipe
    "pandas.core.groupby.DataFrameGroupBy.pipe") | 对该 GroupBy 对象应用带有参数的 `func`，并返回其结果。
    |'
- en: '| [`DataFrameGroupBy.filter`](api/pandas.core.groupby.DataFrameGroupBy.filter.html#pandas.core.groupby.DataFrameGroupBy.filter
    "pandas.core.groupby.DataFrameGroupBy.filter")(func[, dropna]) | Filter elements
    from groups that don''t satisfy a criterion. |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.filter`](api/pandas.core.groupby.DataFrameGroupBy.filter.html#pandas.core.groupby.DataFrameGroupBy.filter
    "pandas.core.groupby.DataFrameGroupBy.filter") | 过滤不符合条件的组中的元素。 |'
- en: '| [`SeriesGroupBy.filter`](api/pandas.core.groupby.SeriesGroupBy.filter.html#pandas.core.groupby.SeriesGroupBy.filter
    "pandas.core.groupby.SeriesGroupBy.filter")(func[, dropna]) | Filter elements
    from groups that don''t satisfy a criterion. |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.filter`](api/pandas.core.groupby.SeriesGroupBy.filter.html#pandas.core.groupby.SeriesGroupBy.filter
    "pandas.core.groupby.SeriesGroupBy.filter") | 过滤不符合条件的组中的元素。 |'
- en: '`DataFrameGroupBy` computations / descriptive stats'
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`DataFrameGroupBy` 计算 / 描述性统计'
- en: '| [`DataFrameGroupBy.all`](api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all")([skipna]) | Return True if all values
    in the group are truthful, else False. |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.all`](api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all")([skipna]) | 如果组中所有值为真，则返回 True，否则返回
    False。 |'
- en: '| [`DataFrameGroupBy.any`](api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any")([skipna]) | Return True if any value
    in the group is truthful, else False. |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.any`](api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any")([skipna]) | 如果组中任何值为真，则返回 True，否则返回
    False。 |'
- en: '| [`DataFrameGroupBy.bfill`](api/pandas.core.groupby.DataFrameGroupBy.bfill.html#pandas.core.groupby.DataFrameGroupBy.bfill
    "pandas.core.groupby.DataFrameGroupBy.bfill")([limit]) | Backward fill the values.
    |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.bfill`](api/pandas.core.groupby.DataFrameGroupBy.bfill.html#pandas.core.groupby.DataFrameGroupBy.bfill
    "pandas.core.groupby.DataFrameGroupBy.bfill")([limit]) | 后向填充值。 |'
- en: '| [`DataFrameGroupBy.corr`](api/pandas.core.groupby.DataFrameGroupBy.corr.html#pandas.core.groupby.DataFrameGroupBy.corr
    "pandas.core.groupby.DataFrameGroupBy.corr")([method, min_periods, ...]) | Compute
    pairwise correlation of columns, excluding NA/null values. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.corr`](api/pandas.core.groupby.DataFrameGroupBy.corr.html#pandas.core.groupby.DataFrameGroupBy.corr
    "pandas.core.groupby.DataFrameGroupBy.corr")([method, min_periods, ...]) | 计算列的成对相关性，不包括
    NA/null 值。 |'
- en: '| [`DataFrameGroupBy.corrwith`](api/pandas.core.groupby.DataFrameGroupBy.corrwith.html#pandas.core.groupby.DataFrameGroupBy.corrwith
    "pandas.core.groupby.DataFrameGroupBy.corrwith")(other[, axis, ...]) | Compute
    pairwise correlation. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.corrwith`](api/pandas.core.groupby.DataFrameGroupBy.corrwith.html#pandas.core.groupby.DataFrameGroupBy.corrwith
    "pandas.core.groupby.DataFrameGroupBy.corrwith")(other[, axis, ...]) | 计算成对相关性。
    |'
- en: '| [`DataFrameGroupBy.count`](api/pandas.core.groupby.DataFrameGroupBy.count.html#pandas.core.groupby.DataFrameGroupBy.count
    "pandas.core.groupby.DataFrameGroupBy.count")() | Compute count of group, excluding
    missing values. |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.count`](api/pandas.core.groupby.DataFrameGroupBy.count.html#pandas.core.groupby.DataFrameGroupBy.count
    "pandas.core.groupby.DataFrameGroupBy.count")() | 计算组的计数，不包括缺失值。 |'
- en: '| [`DataFrameGroupBy.cov`](api/pandas.core.groupby.DataFrameGroupBy.cov.html#pandas.core.groupby.DataFrameGroupBy.cov
    "pandas.core.groupby.DataFrameGroupBy.cov")([min_periods, ddof, ...]) | Compute
    pairwise covariance of columns, excluding NA/null values. |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.cov`](api/pandas.core.groupby.DataFrameGroupBy.cov.html#pandas.core.groupby.DataFrameGroupBy.cov
    "pandas.core.groupby.DataFrameGroupBy.cov")([min_periods, ddof, ...]) | 计算列的成对协方差，不包括
    NA/null 值。 |'
- en: '| [`DataFrameGroupBy.cumcount`](api/pandas.core.groupby.DataFrameGroupBy.cumcount.html#pandas.core.groupby.DataFrameGroupBy.cumcount
    "pandas.core.groupby.DataFrameGroupBy.cumcount")([ascending]) | Number each item
    in each group from 0 to the length of that group - 1. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.cumcount`](api/pandas.core.groupby.DataFrameGroupBy.cumcount.html#pandas.core.groupby.DataFrameGroupBy.cumcount
    "pandas.core.groupby.DataFrameGroupBy.cumcount")([ascending]) | 为每个组中的每个项目编号，编号从
    0 到该组的长度 - 1。 |'
- en: '| [`DataFrameGroupBy.cummax`](api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax")([axis, numeric_only]) | Cumulative
    max for each group. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.cummax`](api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax")([axis, numeric_only]) | 每个分组的累积最大值。
    |'
- en: '| [`DataFrameGroupBy.cummin`](api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin")([axis, numeric_only]) | Cumulative
    min for each group. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.cummin`](api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin")([axis, numeric_only]) | 每个分组的累积最小值。
    |'
- en: '| [`DataFrameGroupBy.cumprod`](api/pandas.core.groupby.DataFrameGroupBy.cumprod.html#pandas.core.groupby.DataFrameGroupBy.cumprod
    "pandas.core.groupby.DataFrameGroupBy.cumprod")([axis]) | Cumulative product for
    each group. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.cumprod`](api/pandas.core.groupby.DataFrameGroupBy.cumprod.html#pandas.core.groupby.DataFrameGroupBy.cumprod
    "pandas.core.groupby.DataFrameGroupBy.cumprod")([axis]) | 每个分组的累积乘积。 |'
- en: '| [`DataFrameGroupBy.cumsum`](api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum")([axis]) | Cumulative sum for each
    group. |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.cumsum`](api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum")([axis]) | 每个分组的累积总和。 |'
- en: '| [`DataFrameGroupBy.describe`](api/pandas.core.groupby.DataFrameGroupBy.describe.html#pandas.core.groupby.DataFrameGroupBy.describe
    "pandas.core.groupby.DataFrameGroupBy.describe")([percentiles, ...]) | Generate
    descriptive statistics. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.describe`](api/pandas.core.groupby.DataFrameGroupBy.describe.html#pandas.core.groupby.DataFrameGroupBy.describe
    "pandas.core.groupby.DataFrameGroupBy.describe")([percentiles, ...]) | 生成描述性统计。
    |'
- en: '| [`DataFrameGroupBy.diff`](api/pandas.core.groupby.DataFrameGroupBy.diff.html#pandas.core.groupby.DataFrameGroupBy.diff
    "pandas.core.groupby.DataFrameGroupBy.diff")([periods, axis]) | First discrete
    difference of element. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.diff`](api/pandas.core.groupby.DataFrameGroupBy.diff.html#pandas.core.groupby.DataFrameGroupBy.diff
    "pandas.core.groupby.DataFrameGroupBy.diff")([periods, axis]) | 元素的第一个离散差异。 |'
- en: '| [`DataFrameGroupBy.ffill`](api/pandas.core.groupby.DataFrameGroupBy.ffill.html#pandas.core.groupby.DataFrameGroupBy.ffill
    "pandas.core.groupby.DataFrameGroupBy.ffill")([limit]) | Forward fill the values.
    |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.ffill`](api/pandas.core.groupby.DataFrameGroupBy.ffill.html#pandas.core.groupby.DataFrameGroupBy.ffill
    "pandas.core.groupby.DataFrameGroupBy.ffill")([limit]) | 向前填充值。 |'
- en: '| [`DataFrameGroupBy.fillna`](api/pandas.core.groupby.DataFrameGroupBy.fillna.html#pandas.core.groupby.DataFrameGroupBy.fillna
    "pandas.core.groupby.DataFrameGroupBy.fillna")([value, method, ...]) | (DEPRECATED)
    Fill NA/NaN values using the specified method within groups. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.fillna`](api/pandas.core.groupby.DataFrameGroupBy.fillna.html#pandas.core.groupby.DataFrameGroupBy.fillna
    "pandas.core.groupby.DataFrameGroupBy.fillna")([value, method, ...]) | （已弃用）使用指定方法填充组内的NA/NaN值。
    |'
- en: '| [`DataFrameGroupBy.first`](api/pandas.core.groupby.DataFrameGroupBy.first.html#pandas.core.groupby.DataFrameGroupBy.first
    "pandas.core.groupby.DataFrameGroupBy.first")([numeric_only, ...]) | Compute the
    first entry of each column within each group. |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.first`](api/pandas.core.groupby.DataFrameGroupBy.first.html#pandas.core.groupby.DataFrameGroupBy.first
    "pandas.core.groupby.DataFrameGroupBy.first")([numeric_only, ...]) | 计算每个组内每列的第一个条目。
    |'
- en: '| [`DataFrameGroupBy.head`](api/pandas.core.groupby.DataFrameGroupBy.head.html#pandas.core.groupby.DataFrameGroupBy.head
    "pandas.core.groupby.DataFrameGroupBy.head")([n]) | Return first n rows of each
    group. |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.head`](api/pandas.core.groupby.DataFrameGroupBy.head.html#pandas.core.groupby.DataFrameGroupBy.head
    "pandas.core.groupby.DataFrameGroupBy.head")([n]) | 返回每个组的前n行。 |'
- en: '| [`DataFrameGroupBy.idxmax`](api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax")([axis, skipna, ...]) | Return index
    of first occurrence of maximum over requested axis. |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.idxmax`](api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax")([axis, skipna, ...]) | 返回请求轴上最大值的第一个出现位置的索引。
    |'
- en: '| [`DataFrameGroupBy.idxmin`](api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin")([axis, skipna, ...]) | Return index
    of first occurrence of minimum over requested axis. |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.idxmin`](api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin")([axis, skipna, ...]) | 返回请求轴上最小值的第一个出现位置的索引。
    |'
- en: '| [`DataFrameGroupBy.last`](api/pandas.core.groupby.DataFrameGroupBy.last.html#pandas.core.groupby.DataFrameGroupBy.last
    "pandas.core.groupby.DataFrameGroupBy.last")([numeric_only, ...]) | Compute the
    last entry of each column within each group. |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.last`](api/pandas.core.groupby.DataFrameGroupBy.last.html#pandas.core.groupby.DataFrameGroupBy.last
    "pandas.core.groupby.DataFrameGroupBy.last")([numeric_only, ...]) | 计算每个组内每列的最后一个条目。
    |'
- en: '| [`DataFrameGroupBy.max`](api/pandas.core.groupby.DataFrameGroupBy.max.html#pandas.core.groupby.DataFrameGroupBy.max
    "pandas.core.groupby.DataFrameGroupBy.max")([numeric_only, ...]) | Compute max
    of group values. |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.max`](api/pandas.core.groupby.DataFrameGroupBy.max.html#pandas.core.groupby.DataFrameGroupBy.max
    "pandas.core.groupby.DataFrameGroupBy.max")([numeric_only, ...]) | 计算组值的最大值。 |'
- en: '| [`DataFrameGroupBy.mean`](api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean")([numeric_only, ...]) | Compute mean
    of groups, excluding missing values. |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.mean`](api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean")([numeric_only, ...]) | 计算组的平均值，不包括缺失值。
    |'
- en: '| [`DataFrameGroupBy.median`](api/pandas.core.groupby.DataFrameGroupBy.median.html#pandas.core.groupby.DataFrameGroupBy.median
    "pandas.core.groupby.DataFrameGroupBy.median")([numeric_only]) | Compute median
    of groups, excluding missing values. |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.median`](api/pandas.core.groupby.DataFrameGroupBy.median.html#pandas.core.groupby.DataFrameGroupBy.median
    "pandas.core.groupby.DataFrameGroupBy.median")([numeric_only]) | 计算组的中位数，不包括缺失值。
    |'
- en: '| [`DataFrameGroupBy.min`](api/pandas.core.groupby.DataFrameGroupBy.min.html#pandas.core.groupby.DataFrameGroupBy.min
    "pandas.core.groupby.DataFrameGroupBy.min")([numeric_only, ...]) | Compute min
    of group values. |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.min`](api/pandas.core.groupby.DataFrameGroupBy.min.html#pandas.core.groupby.DataFrameGroupBy.min
    "pandas.core.groupby.DataFrameGroupBy.min")([numeric_only, ...]) | 计算组值的最小值。'
- en: '| [`DataFrameGroupBy.ngroup`](api/pandas.core.groupby.DataFrameGroupBy.ngroup.html#pandas.core.groupby.DataFrameGroupBy.ngroup
    "pandas.core.groupby.DataFrameGroupBy.ngroup")([ascending]) | Number each group
    from 0 to the number of groups - 1. |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.ngroup`](api/pandas.core.groupby.DataFrameGroupBy.ngroup.html#pandas.core.groupby.DataFrameGroupBy.ngroup
    "pandas.core.groupby.DataFrameGroupBy.ngroup")([ascending]) | 将每个组从 0 编号到组数 -
    1。'
- en: '| [`DataFrameGroupBy.nth`](api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") | Take the nth row from each group
    if n is an int, otherwise a subset of rows. |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.nth`](api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") | 如果 n 是整数，则从每个组中取第 n 行，否则取一部分行。'
- en: '| [`DataFrameGroupBy.nunique`](api/pandas.core.groupby.DataFrameGroupBy.nunique.html#pandas.core.groupby.DataFrameGroupBy.nunique
    "pandas.core.groupby.DataFrameGroupBy.nunique")([dropna]) | Return DataFrame with
    counts of unique elements in each position. |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.nunique`](api/pandas.core.groupby.DataFrameGroupBy.nunique.html#pandas.core.groupby.DataFrameGroupBy.nunique
    "pandas.core.groupby.DataFrameGroupBy.nunique")([dropna]) | 返回每个位置上唯一元素的计数的 DataFrame。'
- en: '| [`DataFrameGroupBy.ohlc`](api/pandas.core.groupby.DataFrameGroupBy.ohlc.html#pandas.core.groupby.DataFrameGroupBy.ohlc
    "pandas.core.groupby.DataFrameGroupBy.ohlc")() | Compute open, high, low and close
    values of a group, excluding missing values. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.ohlc`](api/pandas.core.groupby.DataFrameGroupBy.ohlc.html#pandas.core.groupby.DataFrameGroupBy.ohlc
    "pandas.core.groupby.DataFrameGroupBy.ohlc")() | 计算组的开盘价、最高价、最低价和收盘价值，不包括缺失值。'
- en: '| [`DataFrameGroupBy.pct_change`](api/pandas.core.groupby.DataFrameGroupBy.pct_change.html#pandas.core.groupby.DataFrameGroupBy.pct_change
    "pandas.core.groupby.DataFrameGroupBy.pct_change")([periods, ...]) | Calculate
    pct_change of each value to previous entry in group. |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.pct_change`](api/pandas.core.groupby.DataFrameGroupBy.pct_change.html#pandas.core.groupby.DataFrameGroupBy.pct_change
    "pandas.core.groupby.DataFrameGroupBy.pct_change")([periods, ...]) | 计算每个值相对于组中前一个条目的百分比变化。'
- en: '| [`DataFrameGroupBy.prod`](api/pandas.core.groupby.DataFrameGroupBy.prod.html#pandas.core.groupby.DataFrameGroupBy.prod
    "pandas.core.groupby.DataFrameGroupBy.prod")([numeric_only, min_count]) | Compute
    prod of group values. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.prod`](api/pandas.core.groupby.DataFrameGroupBy.prod.html#pandas.core.groupby.DataFrameGroupBy.prod
    "pandas.core.groupby.DataFrameGroupBy.prod")([numeric_only, min_count]) | 计算组值的乘积。'
- en: '| [`DataFrameGroupBy.quantile`](api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile")([q, ...]) | Return group values
    at the given quantile, a la numpy.percentile. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.quantile`](api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile")([q, ...]) | 返回给定分位数处的组值，类似于 numpy.percentile。'
- en: '| [`DataFrameGroupBy.rank`](api/pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank")([method, ascending, ...]) | Provide
    the rank of values within each group. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.rank`](api/pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank")([method, ascending, ...]) | 在每个组内提供值的排名。'
- en: '| [`DataFrameGroupBy.resample`](api/pandas.core.groupby.DataFrameGroupBy.resample.html#pandas.core.groupby.DataFrameGroupBy.resample
    "pandas.core.groupby.DataFrameGroupBy.resample")(rule, *args[, ...]) | Provide
    resampling when using a TimeGrouper. |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.resample`](api/pandas.core.groupby.DataFrameGroupBy.resample.html#pandas.core.groupby.DataFrameGroupBy.resample
    "pandas.core.groupby.DataFrameGroupBy.resample")(rule, *args[, ...]) | 在使用 TimeGrouper
    时提供重新采样。'
- en: '| [`DataFrameGroupBy.rolling`](api/pandas.core.groupby.DataFrameGroupBy.rolling.html#pandas.core.groupby.DataFrameGroupBy.rolling
    "pandas.core.groupby.DataFrameGroupBy.rolling")(*args, **kwargs) | Return a rolling
    grouper, providing rolling functionality per group. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.rolling`](api/pandas.core.groupby.DataFrameGroupBy.rolling.html#pandas.core.groupby.DataFrameGroupBy.rolling
    "pandas.core.groupby.DataFrameGroupBy.rolling")(*args, **kwargs) | 返回一个滚动分组器，为每个组提供滚动功能。'
- en: '| [`DataFrameGroupBy.sample`](api/pandas.core.groupby.DataFrameGroupBy.sample.html#pandas.core.groupby.DataFrameGroupBy.sample
    "pandas.core.groupby.DataFrameGroupBy.sample")([n, frac, replace, ...]) | Return
    a random sample of items from each group. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.sample`](api/pandas.core.groupby.DataFrameGroupBy.sample.html#pandas.core.groupby.DataFrameGroupBy.sample
    "pandas.core.groupby.DataFrameGroupBy.sample")([n, frac, replace, ...]) | 返回每个组中的随机样本项。'
- en: '| [`DataFrameGroupBy.sem`](api/pandas.core.groupby.DataFrameGroupBy.sem.html#pandas.core.groupby.DataFrameGroupBy.sem
    "pandas.core.groupby.DataFrameGroupBy.sem")([ddof, numeric_only]) | Compute standard
    error of the mean of groups, excluding missing values. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.sem`](api/pandas.core.groupby.DataFrameGroupBy.sem.html#pandas.core.groupby.DataFrameGroupBy.sem
    "pandas.core.groupby.DataFrameGroupBy.sem")([ddof, numeric_only]) | 计算组的平均标准误差，排除缺失值。
    |'
- en: '| [`DataFrameGroupBy.shift`](api/pandas.core.groupby.DataFrameGroupBy.shift.html#pandas.core.groupby.DataFrameGroupBy.shift
    "pandas.core.groupby.DataFrameGroupBy.shift")([periods, freq, ...]) | Shift each
    group by periods observations. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.shift`](api/pandas.core.groupby.DataFrameGroupBy.shift.html#pandas.core.groupby.DataFrameGroupBy.shift
    "pandas.core.groupby.DataFrameGroupBy.shift")([periods, freq, ...]) | 将每个组的观察值按周期移动。
    |'
- en: '| [`DataFrameGroupBy.size`](api/pandas.core.groupby.DataFrameGroupBy.size.html#pandas.core.groupby.DataFrameGroupBy.size
    "pandas.core.groupby.DataFrameGroupBy.size")() | Compute group sizes. |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.size`](api/pandas.core.groupby.DataFrameGroupBy.size.html#pandas.core.groupby.DataFrameGroupBy.size
    "pandas.core.groupby.DataFrameGroupBy.size")() | 计算组大小。 |'
- en: '| [`DataFrameGroupBy.skew`](api/pandas.core.groupby.DataFrameGroupBy.skew.html#pandas.core.groupby.DataFrameGroupBy.skew
    "pandas.core.groupby.DataFrameGroupBy.skew")([axis, skipna, ...]) | Return unbiased
    skew within groups. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.skew`](api/pandas.core.groupby.DataFrameGroupBy.skew.html#pandas.core.groupby.DataFrameGroupBy.skew
    "pandas.core.groupby.DataFrameGroupBy.skew")([axis, skipna, ...]) | 返回组内的无偏偏度。
    |'
- en: '| [`DataFrameGroupBy.std`](api/pandas.core.groupby.DataFrameGroupBy.std.html#pandas.core.groupby.DataFrameGroupBy.std
    "pandas.core.groupby.DataFrameGroupBy.std")([ddof, engine, ...]) | Compute standard
    deviation of groups, excluding missing values. |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.std`](api/pandas.core.groupby.DataFrameGroupBy.std.html#pandas.core.groupby.DataFrameGroupBy.std
    "pandas.core.groupby.DataFrameGroupBy.std")([ddof, engine, ...]) | 计算组的标准差，排除缺失值。
    |'
- en: '| [`DataFrameGroupBy.sum`](api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum")([numeric_only, ...]) | Compute sum
    of group values. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.sum`](api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum")([numeric_only, ...]) | 计算组值的总和。 |'
- en: '| [`DataFrameGroupBy.var`](api/pandas.core.groupby.DataFrameGroupBy.var.html#pandas.core.groupby.DataFrameGroupBy.var
    "pandas.core.groupby.DataFrameGroupBy.var")([ddof, engine, ...]) | Compute variance
    of groups, excluding missing values. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.var`](api/pandas.core.groupby.DataFrameGroupBy.var.html#pandas.core.groupby.DataFrameGroupBy.var
    "pandas.core.groupby.DataFrameGroupBy.var")([ddof, engine, ...]) | 计算组的方差，排除缺失值。
    |'
- en: '| [`DataFrameGroupBy.tail`](api/pandas.core.groupby.DataFrameGroupBy.tail.html#pandas.core.groupby.DataFrameGroupBy.tail
    "pandas.core.groupby.DataFrameGroupBy.tail")([n]) | Return last n rows of each
    group. |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.tail`](api/pandas.core.groupby.DataFrameGroupBy.tail.html#pandas.core.groupby.DataFrameGroupBy.tail
    "pandas.core.groupby.DataFrameGroupBy.tail")([n]) | 返回每个组的最后 n 行。 |'
- en: '| [`DataFrameGroupBy.take`](api/pandas.core.groupby.DataFrameGroupBy.take.html#pandas.core.groupby.DataFrameGroupBy.take
    "pandas.core.groupby.DataFrameGroupBy.take")(indices[, axis]) | Return the elements
    in the given *positional* indices in each group. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.take`](api/pandas.core.groupby.DataFrameGroupBy.take.html#pandas.core.groupby.DataFrameGroupBy.take
    "pandas.core.groupby.DataFrameGroupBy.take")(indices[, axis]) | 返回每个组中给定 *位置*
    索引的元素。 |'
- en: '| [`DataFrameGroupBy.value_counts`](api/pandas.core.groupby.DataFrameGroupBy.value_counts.html#pandas.core.groupby.DataFrameGroupBy.value_counts
    "pandas.core.groupby.DataFrameGroupBy.value_counts")([subset, ...]) | Return a
    Series or DataFrame containing counts of unique rows. |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.value_counts`](api/pandas.core.groupby.DataFrameGroupBy.value_counts.html#pandas.core.groupby.DataFrameGroupBy.value_counts
    "pandas.core.groupby.DataFrameGroupBy.value_counts")([subset, ...]) | 返回包含唯一行计数的
    Series 或 DataFrame。 |'
- en: '`SeriesGroupBy` computations / descriptive stats'
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`SeriesGroupBy` 计算 / 描述统计信息'
- en: '| [`SeriesGroupBy.all`](api/pandas.core.groupby.SeriesGroupBy.all.html#pandas.core.groupby.SeriesGroupBy.all
    "pandas.core.groupby.SeriesGroupBy.all")([skipna]) | Return True if all values
    in the group are truthful, else False. |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.all`](api/pandas.core.groupby.SeriesGroupBy.all.html#pandas.core.groupby.SeriesGroupBy.all
    "pandas.core.groupby.SeriesGroupBy.all")([skipna]) | 如果组内所有值都为真，则返回 True，否则返回
    False。 |'
- en: '| [`SeriesGroupBy.any`](api/pandas.core.groupby.SeriesGroupBy.any.html#pandas.core.groupby.SeriesGroupBy.any
    "pandas.core.groupby.SeriesGroupBy.any")([skipna]) | Return True if any value
    in the group is truthful, else False. |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.any`](api/pandas.core.groupby.SeriesGroupBy.any.html#pandas.core.groupby.SeriesGroupBy.any
    "pandas.core.groupby.SeriesGroupBy.any")([skipna]) | 如果组内任何值都为真，则返回 True，否则返回
    False。 |'
- en: '| [`SeriesGroupBy.bfill`](api/pandas.core.groupby.SeriesGroupBy.bfill.html#pandas.core.groupby.SeriesGroupBy.bfill
    "pandas.core.groupby.SeriesGroupBy.bfill")([limit]) | Backward fill the values.
    |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.bfill`](api/pandas.core.groupby.SeriesGroupBy.bfill.html#pandas.core.groupby.SeriesGroupBy.bfill
    "pandas.core.groupby.SeriesGroupBy.bfill") | 向后填充值。 |'
- en: '| [`SeriesGroupBy.corr`](api/pandas.core.groupby.SeriesGroupBy.corr.html#pandas.core.groupby.SeriesGroupBy.corr
    "pandas.core.groupby.SeriesGroupBy.corr")(other[, method, min_periods]) | Compute
    correlation with other Series, excluding missing values. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.corr`](api/pandas.core.groupby.SeriesGroupBy.corr.html#pandas.core.groupby.SeriesGroupBy.corr
    "pandas.core.groupby.SeriesGroupBy.corr")(other[, method, min_periods]) | 与其他
    Series 计算相关性，不包括缺失值。 |'
- en: '| [`SeriesGroupBy.count`](api/pandas.core.groupby.SeriesGroupBy.count.html#pandas.core.groupby.SeriesGroupBy.count
    "pandas.core.groupby.SeriesGroupBy.count")() | Compute count of group, excluding
    missing values. |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.count`](api/pandas.core.groupby.SeriesGroupBy.count.html#pandas.core.groupby.SeriesGroupBy.count
    "pandas.core.groupby.SeriesGroupBy.count") | 计算组的计数，不包括缺失值。 |'
- en: '| [`SeriesGroupBy.cov`](api/pandas.core.groupby.SeriesGroupBy.cov.html#pandas.core.groupby.SeriesGroupBy.cov
    "pandas.core.groupby.SeriesGroupBy.cov")(other[, min_periods, ddof]) | Compute
    covariance with Series, excluding missing values. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.cov`](api/pandas.core.groupby.SeriesGroupBy.cov.html#pandas.core.groupby.SeriesGroupBy.cov
    "pandas.core.groupby.SeriesGroupBy.cov")(other[, min_periods, ddof]) | 与 Series
    计算协方差，不包括缺失值。 |'
- en: '| [`SeriesGroupBy.cumcount`](api/pandas.core.groupby.SeriesGroupBy.cumcount.html#pandas.core.groupby.SeriesGroupBy.cumcount
    "pandas.core.groupby.SeriesGroupBy.cumcount")([ascending]) | Number each item
    in each group from 0 to the length of that group - 1. |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.cumcount`](api/pandas.core.groupby.SeriesGroupBy.cumcount.html#pandas.core.groupby.SeriesGroupBy.cumcount
    "pandas.core.groupby.SeriesGroupBy.cumcount") | 在每个组中对每个项目进行编号，从0到该组的长度-1。 |'
- en: '| [`SeriesGroupBy.cummax`](api/pandas.core.groupby.SeriesGroupBy.cummax.html#pandas.core.groupby.SeriesGroupBy.cummax
    "pandas.core.groupby.SeriesGroupBy.cummax")([axis, numeric_only]) | Cumulative
    max for each group. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.cummax`](api/pandas.core.groupby.SeriesGroupBy.cummax.html#pandas.core.groupby.SeriesGroupBy.cummax
    "pandas.core.groupby.SeriesGroupBy.cummax") | 每个组的累积最大值。 |'
- en: '| [`SeriesGroupBy.cummin`](api/pandas.core.groupby.SeriesGroupBy.cummin.html#pandas.core.groupby.SeriesGroupBy.cummin
    "pandas.core.groupby.SeriesGroupBy.cummin")([axis, numeric_only]) | Cumulative
    min for each group. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.cummin`](api/pandas.core.groupby.SeriesGroupBy.cummin.html#pandas.core.groupby.SeriesGroupBy.cummin
    "pandas.core.groupby.SeriesGroupBy.cummin") | 每个组的累积最小值。 |'
- en: '| [`SeriesGroupBy.cumprod`](api/pandas.core.groupby.SeriesGroupBy.cumprod.html#pandas.core.groupby.SeriesGroupBy.cumprod
    "pandas.core.groupby.SeriesGroupBy.cumprod")([axis]) | Cumulative product for
    each group. |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.cumprod`](api/pandas.core.groupby.SeriesGroupBy.cumprod.html#pandas.core.groupby.SeriesGroupBy.cumprod
    "pandas.core.groupby.SeriesGroupBy.cumprod") | 每个组的累积乘积。 |'
- en: '| [`SeriesGroupBy.cumsum`](api/pandas.core.groupby.SeriesGroupBy.cumsum.html#pandas.core.groupby.SeriesGroupBy.cumsum
    "pandas.core.groupby.SeriesGroupBy.cumsum")([axis]) | Cumulative sum for each
    group. |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.cumsum`](api/pandas.core.groupby.SeriesGroupBy.cumsum.html#pandas.core.groupby.SeriesGroupBy.cumsum
    "pandas.core.groupby.SeriesGroupBy.cumsum") | 每个组的累积和。 |'
- en: '| [`SeriesGroupBy.describe`](api/pandas.core.groupby.SeriesGroupBy.describe.html#pandas.core.groupby.SeriesGroupBy.describe
    "pandas.core.groupby.SeriesGroupBy.describe")([percentiles, ...]) | Generate descriptive
    statistics. |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.describe`](api/pandas.core.groupby.SeriesGroupBy.describe.html#pandas.core.groupby.SeriesGroupBy.describe
    "pandas.core.groupby.SeriesGroupBy.describe") | 生成描述性统计。 |'
- en: '| [`SeriesGroupBy.diff`](api/pandas.core.groupby.SeriesGroupBy.diff.html#pandas.core.groupby.SeriesGroupBy.diff
    "pandas.core.groupby.SeriesGroupBy.diff")([periods, axis]) | First discrete difference
    of element. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.diff`](api/pandas.core.groupby.SeriesGroupBy.diff.html#pandas.core.groupby.SeriesGroupBy.diff
    "pandas.core.groupby.SeriesGroupBy.diff") | 元素的第一个离散差异。 |'
- en: '| [`SeriesGroupBy.ffill`](api/pandas.core.groupby.SeriesGroupBy.ffill.html#pandas.core.groupby.SeriesGroupBy.ffill
    "pandas.core.groupby.SeriesGroupBy.ffill")([limit]) | Forward fill the values.
    |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.ffill`](api/pandas.core.groupby.SeriesGroupBy.ffill.html#pandas.core.groupby.SeriesGroupBy.ffill
    "pandas.core.groupby.SeriesGroupBy.ffill") | 向前填充值。 |'
- en: '| [`SeriesGroupBy.fillna`](api/pandas.core.groupby.SeriesGroupBy.fillna.html#pandas.core.groupby.SeriesGroupBy.fillna
    "pandas.core.groupby.SeriesGroupBy.fillna")([value, method, axis, ...]) | (DEPRECATED)
    Fill NA/NaN values using the specified method within groups. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.fillna`](api/pandas.core.groupby.SeriesGroupBy.fillna.html#pandas.core.groupby.SeriesGroupBy.fillna
    "pandas.core.groupby.SeriesGroupBy.fillna") | (已弃用) 使用指定方法填充组内的 NA/NaN 值。 |'
- en: '| [`SeriesGroupBy.first`](api/pandas.core.groupby.SeriesGroupBy.first.html#pandas.core.groupby.SeriesGroupBy.first
    "pandas.core.groupby.SeriesGroupBy.first")([numeric_only, ...]) | Compute the
    first entry of each column within each group. |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.first`](api/pandas.core.groupby.SeriesGroupBy.first.html#pandas.core.groupby.SeriesGroupBy.first
    "pandas.core.groupby.SeriesGroupBy.first") | 计算每个组中每列的第一个条目。'
- en: '| [`SeriesGroupBy.head`](api/pandas.core.groupby.SeriesGroupBy.head.html#pandas.core.groupby.SeriesGroupBy.head
    "pandas.core.groupby.SeriesGroupBy.head")([n]) | Return first n rows of each group.
    |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.head`](api/pandas.core.groupby.SeriesGroupBy.head.html#pandas.core.groupby.SeriesGroupBy.head
    "pandas.core.groupby.SeriesGroupBy.head") | 返回每个组的前n行。'
- en: '| [`SeriesGroupBy.last`](api/pandas.core.groupby.SeriesGroupBy.last.html#pandas.core.groupby.SeriesGroupBy.last
    "pandas.core.groupby.SeriesGroupBy.last")([numeric_only, ...]) | Compute the last
    entry of each column within each group. |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.last`](api/pandas.core.groupby.SeriesGroupBy.last.html#pandas.core.groupby.SeriesGroupBy.last
    "pandas.core.groupby.SeriesGroupBy.last") | 计算每个组中每列的最后一个条目。'
- en: '| [`SeriesGroupBy.idxmax`](api/pandas.core.groupby.SeriesGroupBy.idxmax.html#pandas.core.groupby.SeriesGroupBy.idxmax
    "pandas.core.groupby.SeriesGroupBy.idxmax")([axis, skipna]) | Return the row label
    of the maximum value. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.idxmax`](api/pandas.core.groupby.SeriesGroupBy.idxmax.html#pandas.core.groupby.SeriesGroupBy.idxmax
    "pandas.core.groupby.SeriesGroupBy.idxmax") | 返回最大值的行标签。'
- en: '| [`SeriesGroupBy.idxmin`](api/pandas.core.groupby.SeriesGroupBy.idxmin.html#pandas.core.groupby.SeriesGroupBy.idxmin
    "pandas.core.groupby.SeriesGroupBy.idxmin")([axis, skipna]) | Return the row label
    of the minimum value. |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.idxmin`](api/pandas.core.groupby.SeriesGroupBy.idxmin.html#pandas.core.groupby.SeriesGroupBy.idxmin
    "pandas.core.groupby.SeriesGroupBy.idxmin") | 返回最小值的行标签。'
- en: '| [`SeriesGroupBy.is_monotonic_increasing`](api/pandas.core.groupby.SeriesGroupBy.is_monotonic_increasing.html#pandas.core.groupby.SeriesGroupBy.is_monotonic_increasing
    "pandas.core.groupby.SeriesGroupBy.is_monotonic_increasing") | Return whether
    each group''s values are monotonically increasing. |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.is_monotonic_increasing`](api/pandas.core.groupby.SeriesGroupBy.is_monotonic_increasing.html#pandas.core.groupby.SeriesGroupBy.is_monotonic_increasing
    "pandas.core.groupby.SeriesGroupBy.is_monotonic_increasing") | 返回每个组的值是否单调递增。'
- en: '| [`SeriesGroupBy.is_monotonic_decreasing`](api/pandas.core.groupby.SeriesGroupBy.is_monotonic_decreasing.html#pandas.core.groupby.SeriesGroupBy.is_monotonic_decreasing
    "pandas.core.groupby.SeriesGroupBy.is_monotonic_decreasing") | Return whether
    each group''s values are monotonically decreasing. |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.is_monotonic_decreasing`](api/pandas.core.groupby.SeriesGroupBy.is_monotonic_decreasing.html#pandas.core.groupby.SeriesGroupBy.is_monotonic_decreasing
    "pandas.core.groupby.SeriesGroupBy.is_monotonic_decreasing") | 返回每个组的值是否单调递减。'
- en: '| [`SeriesGroupBy.max`](api/pandas.core.groupby.SeriesGroupBy.max.html#pandas.core.groupby.SeriesGroupBy.max
    "pandas.core.groupby.SeriesGroupBy.max")([numeric_only, min_count, ...]) | Compute
    max of group values. |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.max`](api/pandas.core.groupby.SeriesGroupBy.max.html#pandas.core.groupby.SeriesGroupBy.max
    "pandas.core.groupby.SeriesGroupBy.max") | 计算组值的最大值。'
- en: '| [`SeriesGroupBy.mean`](api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean")([numeric_only, engine, ...]) | Compute
    mean of groups, excluding missing values. |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.mean`](api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean") | 计算组的均值，不包括缺失值。'
- en: '| [`SeriesGroupBy.median`](api/pandas.core.groupby.SeriesGroupBy.median.html#pandas.core.groupby.SeriesGroupBy.median
    "pandas.core.groupby.SeriesGroupBy.median")([numeric_only]) | Compute median of
    groups, excluding missing values. |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.median`](api/pandas.core.groupby.SeriesGroupBy.median.html#pandas.core.groupby.SeriesGroupBy.median
    "pandas.core.groupby.SeriesGroupBy.median") | 计算组的中位数，不包括缺失值。'
- en: '| [`SeriesGroupBy.min`](api/pandas.core.groupby.SeriesGroupBy.min.html#pandas.core.groupby.SeriesGroupBy.min
    "pandas.core.groupby.SeriesGroupBy.min")([numeric_only, min_count, ...]) | Compute
    min of group values. |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.min`](api/pandas.core.groupby.SeriesGroupBy.min.html#pandas.core.groupby.SeriesGroupBy.min
    "pandas.core.groupby.SeriesGroupBy.min") | 计算组值的最小值。'
- en: '| [`SeriesGroupBy.ngroup`](api/pandas.core.groupby.SeriesGroupBy.ngroup.html#pandas.core.groupby.SeriesGroupBy.ngroup
    "pandas.core.groupby.SeriesGroupBy.ngroup")([ascending]) | Number each group from
    0 to the number of groups - 1. |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.ngroup`](api/pandas.core.groupby.SeriesGroupBy.ngroup.html#pandas.core.groupby.SeriesGroupBy.ngroup
    "pandas.core.groupby.SeriesGroupBy.ngroup") | 为每个组编号，从0到组数-1。'
- en: '| [`SeriesGroupBy.nlargest`](api/pandas.core.groupby.SeriesGroupBy.nlargest.html#pandas.core.groupby.SeriesGroupBy.nlargest
    "pandas.core.groupby.SeriesGroupBy.nlargest")([n, keep]) | Return the largest
    n elements. |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.nlargest`](api/pandas.core.groupby.SeriesGroupBy.nlargest.html#pandas.core.groupby.SeriesGroupBy.nlargest
    "pandas.core.groupby.SeriesGroupBy.nlargest")([n, keep]) | 返回最大的 n 个元素。 |'
- en: '| [`SeriesGroupBy.nsmallest`](api/pandas.core.groupby.SeriesGroupBy.nsmallest.html#pandas.core.groupby.SeriesGroupBy.nsmallest
    "pandas.core.groupby.SeriesGroupBy.nsmallest")([n, keep]) | Return the smallest
    n elements. |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.nsmallest`](api/pandas.core.groupby.SeriesGroupBy.nsmallest.html#pandas.core.groupby.SeriesGroupBy.nsmallest
    "pandas.core.groupby.SeriesGroupBy.nsmallest")([n, keep]) | 返回最小的 n 个元素。 |'
- en: '| [`SeriesGroupBy.nth`](api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") | Take the nth row from each group if
    n is an int, otherwise a subset of rows. |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.nth`](api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") | 如果 n 是 int，则从每个组中取出第 n 行，否则是行的子集。 |'
- en: '| [`SeriesGroupBy.nunique`](api/pandas.core.groupby.SeriesGroupBy.nunique.html#pandas.core.groupby.SeriesGroupBy.nunique
    "pandas.core.groupby.SeriesGroupBy.nunique")([dropna]) | Return number of unique
    elements in the group. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.nunique`](api/pandas.core.groupby.SeriesGroupBy.nunique.html#pandas.core.groupby.SeriesGroupBy.nunique
    "pandas.core.groupby.SeriesGroupBy.nunique")([dropna]) | 返回组中唯一元素的数量。 |'
- en: '| [`SeriesGroupBy.unique`](api/pandas.core.groupby.SeriesGroupBy.unique.html#pandas.core.groupby.SeriesGroupBy.unique
    "pandas.core.groupby.SeriesGroupBy.unique")() | Return unique values for each
    group. |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.unique`](api/pandas.core.groupby.SeriesGroupBy.unique.html#pandas.core.groupby.SeriesGroupBy.unique
    "pandas.core.groupby.SeriesGroupBy.unique")() | 返回每个组的唯一值。 |'
- en: '| [`SeriesGroupBy.ohlc`](api/pandas.core.groupby.SeriesGroupBy.ohlc.html#pandas.core.groupby.SeriesGroupBy.ohlc
    "pandas.core.groupby.SeriesGroupBy.ohlc")() | Compute open, high, low and close
    values of a group, excluding missing values. |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.ohlc`](api/pandas.core.groupby.SeriesGroupBy.ohlc.html#pandas.core.groupby.SeriesGroupBy.ohlc
    "pandas.core.groupby.SeriesGroupBy.ohlc")() | 计算组的开盘价、最高价、最低价和收盘价，不包括缺失值。 |'
- en: '| [`SeriesGroupBy.pct_change`](api/pandas.core.groupby.SeriesGroupBy.pct_change.html#pandas.core.groupby.SeriesGroupBy.pct_change
    "pandas.core.groupby.SeriesGroupBy.pct_change")([periods, ...]) | Calculate pct_change
    of each value to previous entry in group. |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.pct_change`](api/pandas.core.groupby.SeriesGroupBy.pct_change.html#pandas.core.groupby.SeriesGroupBy.pct_change
    "pandas.core.groupby.SeriesGroupBy.pct_change")([periods, ...]) | 计算每个值相对于组内上一个条目的百分比变化。
    |'
- en: '| [`SeriesGroupBy.prod`](api/pandas.core.groupby.SeriesGroupBy.prod.html#pandas.core.groupby.SeriesGroupBy.prod
    "pandas.core.groupby.SeriesGroupBy.prod")([numeric_only, min_count]) | Compute
    prod of group values. |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.prod`](api/pandas.core.groupby.SeriesGroupBy.prod.html#pandas.core.groupby.SeriesGroupBy.prod
    "pandas.core.groupby.SeriesGroupBy.prod")([numeric_only, min_count]) | 计算组值的乘积。
    |'
- en: '| [`SeriesGroupBy.quantile`](api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile")([q, interpolation, ...]) | Return
    group values at the given quantile, a la numpy.percentile. |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.quantile`](api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile")([q, interpolation, ...]) | 返回给定分位数处的组值，类似于
    numpy.percentile。 |'
- en: '| [`SeriesGroupBy.rank`](api/pandas.core.groupby.SeriesGroupBy.rank.html#pandas.core.groupby.SeriesGroupBy.rank
    "pandas.core.groupby.SeriesGroupBy.rank")([method, ascending, ...]) | Provide
    the rank of values within each group. |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.rank`](api/pandas.core.groupby.SeriesGroupBy.rank.html#pandas.core.groupby.SeriesGroupBy.rank
    "pandas.core.groupby.SeriesGroupBy.rank")([method, ascending, ...]) | 提供每个组内值的排名。
    |'
- en: '| [`SeriesGroupBy.resample`](api/pandas.core.groupby.SeriesGroupBy.resample.html#pandas.core.groupby.SeriesGroupBy.resample
    "pandas.core.groupby.SeriesGroupBy.resample")(rule, *args[, ...]) | Provide resampling
    when using a TimeGrouper. |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.resample`](api/pandas.core.groupby.SeriesGroupBy.resample.html#pandas.core.groupby.SeriesGroupBy.resample
    "pandas.core.groupby.SeriesGroupBy.resample")(rule, *args[, ...]) | 在使用 TimeGrouper
    时提供重新采样。 |'
- en: '| [`SeriesGroupBy.rolling`](api/pandas.core.groupby.SeriesGroupBy.rolling.html#pandas.core.groupby.SeriesGroupBy.rolling
    "pandas.core.groupby.SeriesGroupBy.rolling")(*args, **kwargs) | Return a rolling
    grouper, providing rolling functionality per group. |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.rolling`](api/pandas.core.groupby.SeriesGroupBy.rolling.html#pandas.core.groupby.SeriesGroupBy.rolling
    "pandas.core.groupby.SeriesGroupBy.rolling")(*args, **kwargs) | 返回一个滚动 grouper，为每个组提供滚动功能。
    |'
- en: '| [`SeriesGroupBy.sample`](api/pandas.core.groupby.SeriesGroupBy.sample.html#pandas.core.groupby.SeriesGroupBy.sample
    "pandas.core.groupby.SeriesGroupBy.sample")([n, frac, replace, ...]) | Return
    a random sample of items from each group. |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.sample`](api/pandas.core.groupby.SeriesGroupBy.sample.html#pandas.core.groupby.SeriesGroupBy.sample
    "pandas.core.groupby.SeriesGroupBy.sample")([n, frac, replace, ...]) | 从每个组中返回随机样本项。'
- en: '| [`SeriesGroupBy.sem`](api/pandas.core.groupby.SeriesGroupBy.sem.html#pandas.core.groupby.SeriesGroupBy.sem
    "pandas.core.groupby.SeriesGroupBy.sem")([ddof, numeric_only]) | Compute standard
    error of the mean of groups, excluding missing values. |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.sem`](api/pandas.core.groupby.SeriesGroupBy.sem.html#pandas.core.groupby.SeriesGroupBy.sem
    "pandas.core.groupby.SeriesGroupBy.sem")([ddof, numeric_only]) | 计算组的平均标准误差，排除缺失值。'
- en: '| [`SeriesGroupBy.shift`](api/pandas.core.groupby.SeriesGroupBy.shift.html#pandas.core.groupby.SeriesGroupBy.shift
    "pandas.core.groupby.SeriesGroupBy.shift")([periods, freq, axis, ...]) | Shift
    each group by periods observations. |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.shift`](api/pandas.core.groupby.SeriesGroupBy.shift.html#pandas.core.groupby.SeriesGroupBy.shift
    "pandas.core.groupby.SeriesGroupBy.shift")([periods, freq, axis, ...]) | 将每个组向前或向后移动
    periods 次观察。'
- en: '| [`SeriesGroupBy.size`](api/pandas.core.groupby.SeriesGroupBy.size.html#pandas.core.groupby.SeriesGroupBy.size
    "pandas.core.groupby.SeriesGroupBy.size")() | Compute group sizes. |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.size`](api/pandas.core.groupby.SeriesGroupBy.size.html#pandas.core.groupby.SeriesGroupBy.size
    "pandas.core.groupby.SeriesGroupBy.size")() | 计算组大小。'
- en: '| [`SeriesGroupBy.skew`](api/pandas.core.groupby.SeriesGroupBy.skew.html#pandas.core.groupby.SeriesGroupBy.skew
    "pandas.core.groupby.SeriesGroupBy.skew")([axis, skipna, numeric_only]) | Return
    unbiased skew within groups. |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.skew`](api/pandas.core.groupby.SeriesGroupBy.skew.html#pandas.core.groupby.SeriesGroupBy.skew
    "pandas.core.groupby.SeriesGroupBy.skew")([axis, skipna, numeric_only]) | 返回组内无偏斜度。'
- en: '| [`SeriesGroupBy.std`](api/pandas.core.groupby.SeriesGroupBy.std.html#pandas.core.groupby.SeriesGroupBy.std
    "pandas.core.groupby.SeriesGroupBy.std")([ddof, engine, ...]) | Compute standard
    deviation of groups, excluding missing values. |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.std`](api/pandas.core.groupby.SeriesGroupBy.std.html#pandas.core.groupby.SeriesGroupBy.std
    "pandas.core.groupby.SeriesGroupBy.std")([ddof, engine, ...]) | 计算组的标准差，排除缺失值。'
- en: '| [`SeriesGroupBy.sum`](api/pandas.core.groupby.SeriesGroupBy.sum.html#pandas.core.groupby.SeriesGroupBy.sum
    "pandas.core.groupby.SeriesGroupBy.sum")([numeric_only, min_count, ...]) | Compute
    sum of group values. |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.sum`](api/pandas.core.groupby.SeriesGroupBy.sum.html#pandas.core.groupby.SeriesGroupBy.sum
    "pandas.core.groupby.SeriesGroupBy.sum")([numeric_only, min_count, ...]) | 计算组值的总和。'
- en: '| [`SeriesGroupBy.var`](api/pandas.core.groupby.SeriesGroupBy.var.html#pandas.core.groupby.SeriesGroupBy.var
    "pandas.core.groupby.SeriesGroupBy.var")([ddof, engine, ...]) | Compute variance
    of groups, excluding missing values. |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.var`](api/pandas.core.groupby.SeriesGroupBy.var.html#pandas.core.groupby.SeriesGroupBy.var
    "pandas.core.groupby.SeriesGroupBy.var")([ddof, engine, ...]) | 计算组的方差，排除缺失值。'
- en: '| [`SeriesGroupBy.tail`](api/pandas.core.groupby.SeriesGroupBy.tail.html#pandas.core.groupby.SeriesGroupBy.tail
    "pandas.core.groupby.SeriesGroupBy.tail")([n]) | Return last n rows of each group.
    |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.tail`](api/pandas.core.groupby.SeriesGroupBy.tail.html#pandas.core.groupby.SeriesGroupBy.tail
    "pandas.core.groupby.SeriesGroupBy.tail")([n]) | 返回每个组的最后 n 行。'
- en: '| [`SeriesGroupBy.take`](api/pandas.core.groupby.SeriesGroupBy.take.html#pandas.core.groupby.SeriesGroupBy.take
    "pandas.core.groupby.SeriesGroupBy.take")(indices[, axis]) | Return the elements
    in the given *positional* indices in each group. |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.take`](api/pandas.core.groupby.SeriesGroupBy.take.html#pandas.core.groupby.SeriesGroupBy.take
    "pandas.core.groupby.SeriesGroupBy.take")(indices[, axis]) | 返回每个组中给定*位置*索引的元素。'
- en: '| [`SeriesGroupBy.value_counts`](api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts")([normalize, ...]) |  |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '[`SeriesGroupBy.value_counts`](api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts")([normalize, ...]) |  |'
- en: Plotting and visualization
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘图和可视化
- en: '| [`DataFrameGroupBy.boxplot`](api/pandas.core.groupby.DataFrameGroupBy.boxplot.html#pandas.core.groupby.DataFrameGroupBy.boxplot
    "pandas.core.groupby.DataFrameGroupBy.boxplot")([subplots, column, ...]) | Make
    box plots from DataFrameGroupBy data. |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '[`DataFrameGroupBy.boxplot`](api/pandas.core.groupby.DataFrameGroupBy.boxplot.html#pandas.core.groupby.DataFrameGroupBy.boxplot
    "pandas.core.groupby.DataFrameGroupBy.boxplot")([subplots, column, ...]) | 从 DataFrameGroupBy
    数据绘制箱线图。'
- en: '| [`DataFrameGroupBy.hist`](api/pandas.core.groupby.DataFrameGroupBy.hist.html#pandas.core.groupby.DataFrameGroupBy.hist
    "pandas.core.groupby.DataFrameGroupBy.hist")([column, by, grid, ...]) | Make a
    histogram of the DataFrame''s columns. |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '[`DataFrameGroupBy.hist`](api/pandas.core.groupby.DataFrameGroupBy.hist.html#pandas.core.groupby.DataFrameGroupBy.hist
    "pandas.core.groupby.DataFrameGroupBy.hist")([column, by, grid, ...]) | 绘制 DataFrame
    的列的直方图。'
- en: '| [`SeriesGroupBy.hist`](api/pandas.core.groupby.SeriesGroupBy.hist.html#pandas.core.groupby.SeriesGroupBy.hist
    "pandas.core.groupby.SeriesGroupBy.hist")([by, ax, grid, ...]) | Draw histogram
    of the input series using matplotlib. |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.hist`](api/pandas.core.groupby.SeriesGroupBy.hist.html#pandas.core.groupby.SeriesGroupBy.hist
    "pandas.core.groupby.SeriesGroupBy.hist")([by, ax, grid, ...]) | 使用 matplotlib
    绘制输入 Series 的直方图。 |'
- en: '| [`DataFrameGroupBy.plot`](api/pandas.core.groupby.DataFrameGroupBy.plot.html#pandas.core.groupby.DataFrameGroupBy.plot
    "pandas.core.groupby.DataFrameGroupBy.plot") | Make plots of Series or DataFrame.
    |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.plot`](api/pandas.core.groupby.DataFrameGroupBy.plot.html#pandas.core.groupby.DataFrameGroupBy.plot
    "pandas.core.groupby.DataFrameGroupBy.plot") | 绘制 Series 或 DataFrame 的图表。 |'
- en: '| [`SeriesGroupBy.plot`](api/pandas.core.groupby.SeriesGroupBy.plot.html#pandas.core.groupby.SeriesGroupBy.plot
    "pandas.core.groupby.SeriesGroupBy.plot") | Make plots of Series or DataFrame.
    |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.plot`](api/pandas.core.groupby.SeriesGroupBy.plot.html#pandas.core.groupby.SeriesGroupBy.plot
    "pandas.core.groupby.SeriesGroupBy.plot") | 绘制 Series 或 DataFrame 的图表。 |'
- en: Indexing, iteration
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 索引、迭代
- en: '| [`DataFrameGroupBy.__iter__`](api/pandas.core.groupby.DataFrameGroupBy.__iter__.html#pandas.core.groupby.DataFrameGroupBy.__iter__
    "pandas.core.groupby.DataFrameGroupBy.__iter__")() | Groupby iterator. |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.__iter__`](api/pandas.core.groupby.DataFrameGroupBy.__iter__.html#pandas.core.groupby.DataFrameGroupBy.__iter__
    "pandas.core.groupby.DataFrameGroupBy.__iter__")() | 分组迭代器。 |'
- en: '| [`SeriesGroupBy.__iter__`](api/pandas.core.groupby.SeriesGroupBy.__iter__.html#pandas.core.groupby.SeriesGroupBy.__iter__
    "pandas.core.groupby.SeriesGroupBy.__iter__")() | Groupby iterator. |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.__iter__`](api/pandas.core.groupby.SeriesGroupBy.__iter__.html#pandas.core.groupby.SeriesGroupBy.__iter__
    "pandas.core.groupby.SeriesGroupBy.__iter__")() | 分组迭代器。 |'
- en: '| [`DataFrameGroupBy.groups`](api/pandas.core.groupby.DataFrameGroupBy.groups.html#pandas.core.groupby.DataFrameGroupBy.groups
    "pandas.core.groupby.DataFrameGroupBy.groups") | Dict {group name -> group labels}.
    |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.groups`](api/pandas.core.groupby.DataFrameGroupBy.groups.html#pandas.core.groupby.DataFrameGroupBy.groups
    "pandas.core.groupby.DataFrameGroupBy.groups") | 字典 {分组名称 -> 分组标签}。 |'
- en: '| [`SeriesGroupBy.groups`](api/pandas.core.groupby.SeriesGroupBy.groups.html#pandas.core.groupby.SeriesGroupBy.groups
    "pandas.core.groupby.SeriesGroupBy.groups") | Dict {group name -> group labels}.
    |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.groups`](api/pandas.core.groupby.SeriesGroupBy.groups.html#pandas.core.groupby.SeriesGroupBy.groups
    "pandas.core.groupby.SeriesGroupBy.groups") | 字典 {分组名称 -> 分组标签}。 |'
- en: '| [`DataFrameGroupBy.indices`](api/pandas.core.groupby.DataFrameGroupBy.indices.html#pandas.core.groupby.DataFrameGroupBy.indices
    "pandas.core.groupby.DataFrameGroupBy.indices") | Dict {group name -> group indices}.
    |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.indices`](api/pandas.core.groupby.DataFrameGroupBy.indices.html#pandas.core.groupby.DataFrameGroupBy.indices
    "pandas.core.groupby.DataFrameGroupBy.indices") | 字典 {分组名称 -> 分组索引}。 |'
- en: '| [`SeriesGroupBy.indices`](api/pandas.core.groupby.SeriesGroupBy.indices.html#pandas.core.groupby.SeriesGroupBy.indices
    "pandas.core.groupby.SeriesGroupBy.indices") | Dict {group name -> group indices}.
    |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.indices`](api/pandas.core.groupby.SeriesGroupBy.indices.html#pandas.core.groupby.SeriesGroupBy.indices
    "pandas.core.groupby.SeriesGroupBy.indices") | 字典 {分组名称 -> 分组索引}。 |'
- en: '| [`DataFrameGroupBy.get_group`](api/pandas.core.groupby.DataFrameGroupBy.get_group.html#pandas.core.groupby.DataFrameGroupBy.get_group
    "pandas.core.groupby.DataFrameGroupBy.get_group")(name[, obj]) | Construct DataFrame
    from group with provided name. |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.get_group`](api/pandas.core.groupby.DataFrameGroupBy.get_group.html#pandas.core.groupby.DataFrameGroupBy.get_group
    "pandas.core.groupby.DataFrameGroupBy.get_group")(name[, obj]) | 根据提供的名称构造组的 DataFrame。
    |'
- en: '| [`SeriesGroupBy.get_group`](api/pandas.core.groupby.SeriesGroupBy.get_group.html#pandas.core.groupby.SeriesGroupBy.get_group
    "pandas.core.groupby.SeriesGroupBy.get_group")(name[, obj]) | Construct DataFrame
    from group with provided name. |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.get_group`](api/pandas.core.groupby.SeriesGroupBy.get_group.html#pandas.core.groupby.SeriesGroupBy.get_group
    "pandas.core.groupby.SeriesGroupBy.get_group")(name[, obj]) | 根据提供的名称构造组的 DataFrame。
    |'
- en: '| [`Grouper`](api/pandas.Grouper.html#pandas.Grouper "pandas.Grouper")(*args, **kwargs)
    | A Grouper allows the user to specify a groupby instruction for an object. |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| [`Grouper`](api/pandas.Grouper.html#pandas.Grouper "pandas.Grouper")(*args, **kwargs)
    | Grouper 允许用户为对象指定分组指令。 |'
- en: Function application helper
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 功能应用助手
- en: '| [`NamedAgg`](api/pandas.NamedAgg.html#pandas.NamedAgg "pandas.NamedAgg")(column, aggfunc)
    | Helper for column specific aggregation with control over output column names.
    |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '| [`NamedAgg`](api/pandas.NamedAgg.html#pandas.NamedAgg "pandas.NamedAgg")(column, aggfunc)
    | 用于具有对输出列名称的控制的列特定聚合的辅助工具。 |'
- en: Function application
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 功能应用
- en: '| [`SeriesGroupBy.apply`](api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply")(func, *args, **kwargs) | Apply function
    `func` group-wise and combine the results together. |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.apply`](api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply")(func, *args, **kwargs) | 逐组应用函数 `func`
    并将结果组合在一起。 |'
- en: '| [`DataFrameGroupBy.apply`](api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply")(func, *args[, ...]) | Apply function
    `func` group-wise and combine the results together. |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.apply`](api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply")(func, *args[, ...]) | 逐组应用函数 `func`
    并将结果组合在一起。 |'
- en: '| [`SeriesGroupBy.agg`](api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg")([func, engine, engine_kwargs]) | Aggregate
    using one or more operations over the specified axis. |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.agg`](api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg")([func, engine, engine_kwargs]) | 使用一个或多个操作对指定轴进行聚合。
    |'
- en: '| [`DataFrameGroupBy.agg`](api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg")([func, engine, ...]) | Aggregate using
    one or more operations over the specified axis. |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.agg`](api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg")([func, engine, ...]) | 使用一个或多个操作对指定轴进行聚合。
    |'
- en: '| [`SeriesGroupBy.aggregate`](api/pandas.core.groupby.SeriesGroupBy.aggregate.html#pandas.core.groupby.SeriesGroupBy.aggregate
    "pandas.core.groupby.SeriesGroupBy.aggregate")([func, engine, ...]) | Aggregate
    using one or more operations over the specified axis. |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.aggregate`](api/pandas.core.groupby.SeriesGroupBy.aggregate.html#pandas.core.groupby.SeriesGroupBy.aggregate
    "pandas.core.groupby.SeriesGroupBy.aggregate")([func, engine, ...]) | 使用一个或多个操作对指定轴进行聚合。
    |'
- en: '| [`DataFrameGroupBy.aggregate`](api/pandas.core.groupby.DataFrameGroupBy.aggregate.html#pandas.core.groupby.DataFrameGroupBy.aggregate
    "pandas.core.groupby.DataFrameGroupBy.aggregate")([func, engine, ...]) | Aggregate
    using one or more operations over the specified axis. |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.aggregate`](api/pandas.core.groupby.DataFrameGroupBy.aggregate.html#pandas.core.groupby.DataFrameGroupBy.aggregate
    "pandas.core.groupby.DataFrameGroupBy.aggregate")([func, engine, ...]) | 使用一个或多个操作对指定轴进行聚合。
    |'
- en: '| [`SeriesGroupBy.transform`](api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform")(func, *args[, ...]) | Call function
    producing a same-indexed Series on each group. |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.transform`](api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform")(func, *args[, ...]) | 在每个分组上调用产生具有相同索引的
    Series 的函数。 |'
- en: '| [`DataFrameGroupBy.transform`](api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform")(func, *args[, ...]) | Call function
    producing a same-indexed DataFrame on each group. |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.transform`](api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform")(func, *args[, ...]) | 在每个分组上调用产生具有相同索引的
    DataFrame 的函数。 |'
- en: '| [`SeriesGroupBy.pipe`](api/pandas.core.groupby.SeriesGroupBy.pipe.html#pandas.core.groupby.SeriesGroupBy.pipe
    "pandas.core.groupby.SeriesGroupBy.pipe")(func, *args, **kwargs) | Apply a `func`
    with arguments to this GroupBy object and return its result. |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.pipe`](api/pandas.core.groupby.SeriesGroupBy.pipe.html#pandas.core.groupby.SeriesGroupBy.pipe
    "pandas.core.groupby.SeriesGroupBy.pipe")(func, *args, **kwargs) | 对该 GroupBy
    对象应用带有参数的 `func`，并返回其结果。 |'
- en: '| [`DataFrameGroupBy.pipe`](api/pandas.core.groupby.DataFrameGroupBy.pipe.html#pandas.core.groupby.DataFrameGroupBy.pipe
    "pandas.core.groupby.DataFrameGroupBy.pipe")(func, *args, **kwargs) | Apply a
    `func` with arguments to this GroupBy object and return its result. |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.pipe`](api/pandas.core.groupby.DataFrameGroupBy.pipe.html#pandas.core.groupby.DataFrameGroupBy.pipe
    "pandas.core.groupby.DataFrameGroupBy.pipe")(func, *args, **kwargs) | 对该 GroupBy
    对象应用带有参数的 `func`，并返回其结果。 |'
- en: '| [`DataFrameGroupBy.filter`](api/pandas.core.groupby.DataFrameGroupBy.filter.html#pandas.core.groupby.DataFrameGroupBy.filter
    "pandas.core.groupby.DataFrameGroupBy.filter")(func[, dropna]) | Filter elements
    from groups that don''t satisfy a criterion. |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.filter`](api/pandas.core.groupby.DataFrameGroupBy.filter.html#pandas.core.groupby.DataFrameGroupBy.filter
    "pandas.core.groupby.DataFrameGroupBy.filter")(func[, dropna]) | 从不满足条件的组中筛选元素。
    |'
- en: '| [`SeriesGroupBy.filter`](api/pandas.core.groupby.SeriesGroupBy.filter.html#pandas.core.groupby.SeriesGroupBy.filter
    "pandas.core.groupby.SeriesGroupBy.filter")(func[, dropna]) | Filter elements
    from groups that don''t satisfy a criterion. |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.filter`](api/pandas.core.groupby.SeriesGroupBy.filter.html#pandas.core.groupby.SeriesGroupBy.filter
    "pandas.core.groupby.SeriesGroupBy.filter")(func[, dropna]) | 从不满足条件的组中筛选元素。 |'
- en: '`DataFrameGroupBy` computations / descriptive stats'
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`DataFrameGroupBy` 计算 / 描述统计'
- en: '| [`DataFrameGroupBy.all`](api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all")([skipna]) | Return True if all values
    in the group are truthful, else False. |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.all`](api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all")([skipna]) | 如果组中的所有值为真则返回 True，否则返回
    False。 |'
- en: '| [`DataFrameGroupBy.any`](api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any")([skipna]) | Return True if any value
    in the group is truthful, else False. |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.any`](api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any")([skipna]) | 如果组中的任何值为真则返回 True，否则返回
    False。 |'
- en: '| [`DataFrameGroupBy.bfill`](api/pandas.core.groupby.DataFrameGroupBy.bfill.html#pandas.core.groupby.DataFrameGroupBy.bfill
    "pandas.core.groupby.DataFrameGroupBy.bfill")([limit]) | Backward fill the values.
    |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.bfill`](api/pandas.core.groupby.DataFrameGroupBy.bfill.html#pandas.core.groupby.DataFrameGroupBy.bfill
    "pandas.core.groupby.DataFrameGroupBy.bfill")([limit]) | 向后填充值。 |'
- en: '| [`DataFrameGroupBy.corr`](api/pandas.core.groupby.DataFrameGroupBy.corr.html#pandas.core.groupby.DataFrameGroupBy.corr
    "pandas.core.groupby.DataFrameGroupBy.corr")([method, min_periods, ...]) | Compute
    pairwise correlation of columns, excluding NA/null values. |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.corr`](api/pandas.core.groupby.DataFrameGroupBy.corr.html#pandas.core.groupby.DataFrameGroupBy.corr
    "pandas.core.groupby.DataFrameGroupBy.corr")([method, min_periods, ...]) | 计算列的成对相关性，排除
    NA/null 值。 |'
- en: '| [`DataFrameGroupBy.corrwith`](api/pandas.core.groupby.DataFrameGroupBy.corrwith.html#pandas.core.groupby.DataFrameGroupBy.corrwith
    "pandas.core.groupby.DataFrameGroupBy.corrwith")(other[, axis, ...]) | Compute
    pairwise correlation. |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.corrwith`](api/pandas.core.groupby.DataFrameGroupBy.corrwith.html#pandas.core.groupby.DataFrameGroupBy.corrwith
    "pandas.core.groupby.DataFrameGroupBy.corrwith")(other[, axis, ...]) | 计算成对相关性。
    |'
- en: '| [`DataFrameGroupBy.count`](api/pandas.core.groupby.DataFrameGroupBy.count.html#pandas.core.groupby.DataFrameGroupBy.count
    "pandas.core.groupby.DataFrameGroupBy.count")() | Compute count of group, excluding
    missing values. |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.count`](api/pandas.core.groupby.DataFrameGroupBy.count.html#pandas.core.groupby.DataFrameGroupBy.count
    "pandas.core.groupby.DataFrameGroupBy.count")() | 计算组的计数，排除缺失值。 |'
- en: '| [`DataFrameGroupBy.cov`](api/pandas.core.groupby.DataFrameGroupBy.cov.html#pandas.core.groupby.DataFrameGroupBy.cov
    "pandas.core.groupby.DataFrameGroupBy.cov")([min_periods, ddof, ...]) | Compute
    pairwise covariance of columns, excluding NA/null values. |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.cov`](api/pandas.core.groupby.DataFrameGroupBy.cov.html#pandas.core.groupby.DataFrameGroupBy.cov
    "pandas.core.groupby.DataFrameGroupBy.cov")([min_periods, ddof, ...]) | 计算列的成对协方差，排除
    NA/null 值。 |'
- en: '| [`DataFrameGroupBy.cumcount`](api/pandas.core.groupby.DataFrameGroupBy.cumcount.html#pandas.core.groupby.DataFrameGroupBy.cumcount
    "pandas.core.groupby.DataFrameGroupBy.cumcount")([ascending]) | Number each item
    in each group from 0 to the length of that group - 1. |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.cumcount`](api/pandas.core.groupby.DataFrameGroupBy.cumcount.html#pandas.core.groupby.DataFrameGroupBy.cumcount
    "pandas.core.groupby.DataFrameGroupBy.cumcount")([ascending]) | 对每个组中的项进行编号，编号从
    0 到该组长度 - 1。 |'
- en: '| [`DataFrameGroupBy.cummax`](api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax")([axis, numeric_only]) | Cumulative
    max for each group. |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.cummax`](api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax")([axis, numeric_only]) | 每个组的累积最大值。
    |'
- en: '| [`DataFrameGroupBy.cummin`](api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin")([axis, numeric_only]) | Cumulative
    min for each group. |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.cummin`](api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin")([axis, numeric_only]) | 每个组的累积最小值。
    |'
- en: '| [`DataFrameGroupBy.cumprod`](api/pandas.core.groupby.DataFrameGroupBy.cumprod.html#pandas.core.groupby.DataFrameGroupBy.cumprod
    "pandas.core.groupby.DataFrameGroupBy.cumprod")([axis]) | Cumulative product for
    each group. |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.cumprod`](api/pandas.core.groupby.DataFrameGroupBy.cumprod.html#pandas.core.groupby.DataFrameGroupBy.cumprod
    "pandas.core.groupby.DataFrameGroupBy.cumprod")([axis]) | 每个组的累积乘积。 |'
- en: '| [`DataFrameGroupBy.cumsum`](api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum")([axis]) | Cumulative sum for each
    group. |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '[`DataFrameGroupBy.cumsum`](api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum") | 每个组的累积和。'
- en: '| [`DataFrameGroupBy.describe`](api/pandas.core.groupby.DataFrameGroupBy.describe.html#pandas.core.groupby.DataFrameGroupBy.describe
    "pandas.core.groupby.DataFrameGroupBy.describe")([percentiles, ...]) | Generate
    descriptive statistics. |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '[`DataFrameGroupBy.describe`](api/pandas.core.groupby.DataFrameGroupBy.describe.html#pandas.core.groupby.DataFrameGroupBy.describe
    "pandas.core.groupby.DataFrameGroupBy.describe") | 生成描述性统计信息。'
- en: '| [`DataFrameGroupBy.diff`](api/pandas.core.groupby.DataFrameGroupBy.diff.html#pandas.core.groupby.DataFrameGroupBy.diff
    "pandas.core.groupby.DataFrameGroupBy.diff")([periods, axis]) | First discrete
    difference of element. |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
  zh: '[`DataFrameGroupBy.diff`](api/pandas.core.groupby.DataFrameGroupBy.diff.html#pandas.core.groupby.DataFrameGroupBy.diff
    "pandas.core.groupby.DataFrameGroupBy.diff") | 元素的第一个离散差异。'
- en: '| [`DataFrameGroupBy.ffill`](api/pandas.core.groupby.DataFrameGroupBy.ffill.html#pandas.core.groupby.DataFrameGroupBy.ffill
    "pandas.core.groupby.DataFrameGroupBy.ffill")([limit]) | Forward fill the values.
    |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
  zh: '[`DataFrameGroupBy.ffill`](api/pandas.core.groupby.DataFrameGroupBy.ffill.html#pandas.core.groupby.DataFrameGroupBy.ffill
    "pandas.core.groupby.DataFrameGroupBy.ffill") | 向前填充值。'
- en: '| [`DataFrameGroupBy.fillna`](api/pandas.core.groupby.DataFrameGroupBy.fillna.html#pandas.core.groupby.DataFrameGroupBy.fillna
    "pandas.core.groupby.DataFrameGroupBy.fillna")([value, method, ...]) | (DEPRECATED)
    Fill NA/NaN values using the specified method within groups. |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
  zh: '[`DataFrameGroupBy.fillna`](api/pandas.core.groupby.DataFrameGroupBy.fillna.html#pandas.core.groupby.DataFrameGroupBy.fillna
    "pandas.core.groupby.DataFrameGroupBy.fillna") | (已弃用)使用组内指定方法填充NA/NaN值。'
- en: '| [`DataFrameGroupBy.first`](api/pandas.core.groupby.DataFrameGroupBy.first.html#pandas.core.groupby.DataFrameGroupBy.first
    "pandas.core.groupby.DataFrameGroupBy.first")([numeric_only, ...]) | Compute the
    first entry of each column within each group. |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
  zh: '[`DataFrameGroupBy.first`](api/pandas.core.groupby.DataFrameGroupBy.first.html#pandas.core.groupby.DataFrameGroupBy.first
    "pandas.core.groupby.DataFrameGroupBy.first") | 计算每个组内每列的第一个条目。'
- en: '| [`DataFrameGroupBy.head`](api/pandas.core.groupby.DataFrameGroupBy.head.html#pandas.core.groupby.DataFrameGroupBy.head
    "pandas.core.groupby.DataFrameGroupBy.head")([n]) | Return first n rows of each
    group. |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '[`DataFrameGroupBy.head`](api/pandas.core.groupby.DataFrameGroupBy.head.html#pandas.core.groupby.DataFrameGroupBy.head
    "pandas.core.groupby.DataFrameGroupBy.head") | 返回每个组的前n行。'
- en: '| [`DataFrameGroupBy.idxmax`](api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax")([axis, skipna, ...]) | Return index
    of first occurrence of maximum over requested axis. |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '[`DataFrameGroupBy.idxmax`](api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax") | 返回请求轴上最大值的第一次出现的索引。'
- en: '| [`DataFrameGroupBy.idxmin`](api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin")([axis, skipna, ...]) | Return index
    of first occurrence of minimum over requested axis. |'
  id: totrans-177
  prefs: []
  type: TYPE_TB
  zh: '[`DataFrameGroupBy.idxmin`](api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin") | 返回请求轴上最小值的第一次出现的索引。'
- en: '| [`DataFrameGroupBy.last`](api/pandas.core.groupby.DataFrameGroupBy.last.html#pandas.core.groupby.DataFrameGroupBy.last
    "pandas.core.groupby.DataFrameGroupBy.last")([numeric_only, ...]) | Compute the
    last entry of each column within each group. |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '[`DataFrameGroupBy.last`](api/pandas.core.groupby.DataFrameGroupBy.last.html#pandas.core.groupby.DataFrameGroupBy.last
    "pandas.core.groupby.DataFrameGroupBy.last") | 计算每个组内每列的最后一个条目。'
- en: '| [`DataFrameGroupBy.max`](api/pandas.core.groupby.DataFrameGroupBy.max.html#pandas.core.groupby.DataFrameGroupBy.max
    "pandas.core.groupby.DataFrameGroupBy.max")([numeric_only, ...]) | Compute max
    of group values. |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '[`DataFrameGroupBy.max`](api/pandas.core.groupby.DataFrameGroupBy.max.html#pandas.core.groupby.DataFrameGroupBy.max
    "pandas.core.groupby.DataFrameGroupBy.max") | 计算组值的最大值。'
- en: '| [`DataFrameGroupBy.mean`](api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean")([numeric_only, ...]) | Compute mean
    of groups, excluding missing values. |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
  zh: '[`DataFrameGroupBy.mean`](api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean") | 计算组的均值，不包括缺失值。'
- en: '| [`DataFrameGroupBy.median`](api/pandas.core.groupby.DataFrameGroupBy.median.html#pandas.core.groupby.DataFrameGroupBy.median
    "pandas.core.groupby.DataFrameGroupBy.median")([numeric_only]) | Compute median
    of groups, excluding missing values. |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.median`](api/pandas.core.groupby.DataFrameGroupBy.median.html#pandas.core.groupby.DataFrameGroupBy.median
    "pandas.core.groupby.DataFrameGroupBy.median")([numeric_only]) | 计算每个组的中位数，排除缺失值。
    |'
- en: '| [`DataFrameGroupBy.min`](api/pandas.core.groupby.DataFrameGroupBy.min.html#pandas.core.groupby.DataFrameGroupBy.min
    "pandas.core.groupby.DataFrameGroupBy.min")([numeric_only, ...]) | Compute min
    of group values. |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.min`](api/pandas.core.groupby.DataFrameGroupBy.min.html#pandas.core.groupby.DataFrameGroupBy.min
    "pandas.core.groupby.DataFrameGroupBy.min")([numeric_only, ...]) | 计算组值的最小值。 |'
- en: '| [`DataFrameGroupBy.ngroup`](api/pandas.core.groupby.DataFrameGroupBy.ngroup.html#pandas.core.groupby.DataFrameGroupBy.ngroup
    "pandas.core.groupby.DataFrameGroupBy.ngroup")([ascending]) | Number each group
    from 0 to the number of groups - 1. |'
  id: totrans-183
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.ngroup`](api/pandas.core.groupby.DataFrameGroupBy.ngroup.html#pandas.core.groupby.DataFrameGroupBy.ngroup
    "pandas.core.groupby.DataFrameGroupBy.ngroup")([ascending]) | 从0到组数 - 1对每个组进行编号。
    |'
- en: '| [`DataFrameGroupBy.nth`](api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") | Take the nth row from each group
    if n is an int, otherwise a subset of rows. |'
  id: totrans-184
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.nth`](api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") | 如果 n 是整数，则从每个组中获取第 n 行，否则获取行的子集。
    |'
- en: '| [`DataFrameGroupBy.nunique`](api/pandas.core.groupby.DataFrameGroupBy.nunique.html#pandas.core.groupby.DataFrameGroupBy.nunique
    "pandas.core.groupby.DataFrameGroupBy.nunique")([dropna]) | Return DataFrame with
    counts of unique elements in each position. |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.nunique`](api/pandas.core.groupby.DataFrameGroupBy.nunique.html#pandas.core.groupby.DataFrameGroupBy.nunique
    "pandas.core.groupby.DataFrameGroupBy.nunique")([dropna]) | 返回每个位置上唯一元素的计数的 DataFrame。
    |'
- en: '| [`DataFrameGroupBy.ohlc`](api/pandas.core.groupby.DataFrameGroupBy.ohlc.html#pandas.core.groupby.DataFrameGroupBy.ohlc
    "pandas.core.groupby.DataFrameGroupBy.ohlc")() | Compute open, high, low and close
    values of a group, excluding missing values. |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.ohlc`](api/pandas.core.groupby.DataFrameGroupBy.ohlc.html#pandas.core.groupby.DataFrameGroupBy.ohlc
    "pandas.core.groupby.DataFrameGroupBy.ohlc")() | 计算组的开盘价、最高价、最低价和收盘价，排除缺失值。 |'
- en: '| [`DataFrameGroupBy.pct_change`](api/pandas.core.groupby.DataFrameGroupBy.pct_change.html#pandas.core.groupby.DataFrameGroupBy.pct_change
    "pandas.core.groupby.DataFrameGroupBy.pct_change")([periods, ...]) | Calculate
    pct_change of each value to previous entry in group. |'
  id: totrans-187
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.pct_change`](api/pandas.core.groupby.DataFrameGroupBy.pct_change.html#pandas.core.groupby.DataFrameGroupBy.pct_change
    "pandas.core.groupby.DataFrameGroupBy.pct_change")([periods, ...]) | 计算每个值相对于组内上一个条目的百分比变化。
    |'
- en: '| [`DataFrameGroupBy.prod`](api/pandas.core.groupby.DataFrameGroupBy.prod.html#pandas.core.groupby.DataFrameGroupBy.prod
    "pandas.core.groupby.DataFrameGroupBy.prod")([numeric_only, min_count]) | Compute
    prod of group values. |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.prod`](api/pandas.core.groupby.DataFrameGroupBy.prod.html#pandas.core.groupby.DataFrameGroupBy.prod
    "pandas.core.groupby.DataFrameGroupBy.prod")([numeric_only, min_count]) | 计算组值的乘积。
    |'
- en: '| [`DataFrameGroupBy.quantile`](api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile")([q, ...]) | Return group values
    at the given quantile, a la numpy.percentile. |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.quantile`](api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile")([q, ...]) | 返回给定分位数处的组值，类似于 numpy.percentile。
    |'
- en: '| [`DataFrameGroupBy.rank`](api/pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank")([method, ascending, ...]) | Provide
    the rank of values within each group. |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.rank`](api/pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank")([method, ascending, ...]) | 提供每个组内值的排名。
    |'
- en: '| [`DataFrameGroupBy.resample`](api/pandas.core.groupby.DataFrameGroupBy.resample.html#pandas.core.groupby.DataFrameGroupBy.resample
    "pandas.core.groupby.DataFrameGroupBy.resample")(rule, *args[, ...]) | Provide
    resampling when using a TimeGrouper. |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.resample`](api/pandas.core.groupby.DataFrameGroupBy.resample.html#pandas.core.groupby.DataFrameGroupBy.resample
    "pandas.core.groupby.DataFrameGroupBy.resample")(rule, *args[, ...]) | 在使用 TimeGrouper
    时提供重新采样。 |'
- en: '| [`DataFrameGroupBy.rolling`](api/pandas.core.groupby.DataFrameGroupBy.rolling.html#pandas.core.groupby.DataFrameGroupBy.rolling
    "pandas.core.groupby.DataFrameGroupBy.rolling")(*args, **kwargs) | Return a rolling
    grouper, providing rolling functionality per group. |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.rolling`](api/pandas.core.groupby.DataFrameGroupBy.rolling.html#pandas.core.groupby.DataFrameGroupBy.rolling
    "pandas.core.groupby.DataFrameGroupBy.rolling")(*args, **kwargs) | 返回滚动分组器，为每个组提供滚动功能。
    |'
- en: '| [`DataFrameGroupBy.sample`](api/pandas.core.groupby.DataFrameGroupBy.sample.html#pandas.core.groupby.DataFrameGroupBy.sample
    "pandas.core.groupby.DataFrameGroupBy.sample")([n, frac, replace, ...]) | Return
    a random sample of items from each group. |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.sample`](api/pandas.core.groupby.DataFrameGroupBy.sample.html#pandas.core.groupby.DataFrameGroupBy.sample
    "pandas.core.groupby.DataFrameGroupBy.sample")([n, frac, replace, ...]) | 返回每个组的随机样本。
    |'
- en: '| [`DataFrameGroupBy.sem`](api/pandas.core.groupby.DataFrameGroupBy.sem.html#pandas.core.groupby.DataFrameGroupBy.sem
    "pandas.core.groupby.DataFrameGroupBy.sem")([ddof, numeric_only]) | Compute standard
    error of the mean of groups, excluding missing values. |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.sem`](api/pandas.core.groupby.DataFrameGroupBy.sem.html#pandas.core.groupby.DataFrameGroupBy.sem
    "pandas.core.groupby.DataFrameGroupBy.sem")([ddof, numeric_only]) | 计算组的均值标准误差，排除缺失值。
    |'
- en: '| [`DataFrameGroupBy.shift`](api/pandas.core.groupby.DataFrameGroupBy.shift.html#pandas.core.groupby.DataFrameGroupBy.shift
    "pandas.core.groupby.DataFrameGroupBy.shift")([periods, freq, ...]) | Shift each
    group by periods observations. |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.shift`](api/pandas.core.groupby.DataFrameGroupBy.shift.html#pandas.core.groupby.DataFrameGroupBy.shift
    "pandas.core.groupby.DataFrameGroupBy.shift")([periods, freq, ...]) | 将每个组的观测值向前或向后移动。
    |'
- en: '| [`DataFrameGroupBy.size`](api/pandas.core.groupby.DataFrameGroupBy.size.html#pandas.core.groupby.DataFrameGroupBy.size
    "pandas.core.groupby.DataFrameGroupBy.size")() | Compute group sizes. |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.size`](api/pandas.core.groupby.DataFrameGroupBy.size.html#pandas.core.groupby.DataFrameGroupBy.size
    "pandas.core.groupby.DataFrameGroupBy.size")() | 计算组大小。 |'
- en: '| [`DataFrameGroupBy.skew`](api/pandas.core.groupby.DataFrameGroupBy.skew.html#pandas.core.groupby.DataFrameGroupBy.skew
    "pandas.core.groupby.DataFrameGroupBy.skew")([axis, skipna, ...]) | Return unbiased
    skew within groups. |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.skew`](api/pandas.core.groupby.DataFrameGroupBy.skew.html#pandas.core.groupby.DataFrameGroupBy.skew
    "pandas.core.groupby.DataFrameGroupBy.skew")([axis, skipna, ...]) | 返回组内无偏斜。 |'
- en: '| [`DataFrameGroupBy.std`](api/pandas.core.groupby.DataFrameGroupBy.std.html#pandas.core.groupby.DataFrameGroupBy.std
    "pandas.core.groupby.DataFrameGroupBy.std")([ddof, engine, ...]) | Compute standard
    deviation of groups, excluding missing values. |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.std`](api/pandas.core.groupby.DataFrameGroupBy.std.html#pandas.core.groupby.DataFrameGroupBy.std
    "pandas.core.groupby.DataFrameGroupBy.std")([ddof, engine, ...]) | 计算组的标准差，排除缺失值。
    |'
- en: '| [`DataFrameGroupBy.sum`](api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum")([numeric_only, ...]) | Compute sum
    of group values. |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.sum`](api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum")([numeric_only, ...]) | 计算组值的总和。 |'
- en: '| [`DataFrameGroupBy.var`](api/pandas.core.groupby.DataFrameGroupBy.var.html#pandas.core.groupby.DataFrameGroupBy.var
    "pandas.core.groupby.DataFrameGroupBy.var")([ddof, engine, ...]) | Compute variance
    of groups, excluding missing values. |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.var`](api/pandas.core.groupby.DataFrameGroupBy.var.html#pandas.core.groupby.DataFrameGroupBy.var
    "pandas.core.groupby.DataFrameGroupBy.var")([ddof, engine, ...]) | 计算组的方差，排除缺失值。
    |'
- en: '| [`DataFrameGroupBy.tail`](api/pandas.core.groupby.DataFrameGroupBy.tail.html#pandas.core.groupby.DataFrameGroupBy.tail
    "pandas.core.groupby.DataFrameGroupBy.tail")([n]) | Return last n rows of each
    group. |'
  id: totrans-201
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.tail`](api/pandas.core.groupby.DataFrameGroupBy.tail.html#pandas.core.groupby.DataFrameGroupBy.tail
    "pandas.core.groupby.DataFrameGroupBy.tail")([n]) | 返回每个组的最后n行。 |'
- en: '| [`DataFrameGroupBy.take`](api/pandas.core.groupby.DataFrameGroupBy.take.html#pandas.core.groupby.DataFrameGroupBy.take
    "pandas.core.groupby.DataFrameGroupBy.take")(indices[, axis]) | Return the elements
    in the given *positional* indices in each group. |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.take`](api/pandas.core.groupby.DataFrameGroupBy.take.html#pandas.core.groupby.DataFrameGroupBy.take
    "pandas.core.groupby.DataFrameGroupBy.take")(indices[, axis]) | 返回每个分组中给定 *位置*
    索引的元素。 |'
- en: '| [`DataFrameGroupBy.value_counts`](api/pandas.core.groupby.DataFrameGroupBy.value_counts.html#pandas.core.groupby.DataFrameGroupBy.value_counts
    "pandas.core.groupby.DataFrameGroupBy.value_counts")([subset, ...]) | Return a
    Series or DataFrame containing counts of unique rows. |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.value_counts`](api/pandas.core.groupby.DataFrameGroupBy.value_counts.html#pandas.core.groupby.DataFrameGroupBy.value_counts
    "pandas.core.groupby.DataFrameGroupBy.value_counts")([subset, ...]) | 返回包含唯一行计数的Series或DataFrame。
    |'
- en: '`SeriesGroupBy` computations / descriptive stats'
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`SeriesGroupBy` 计算 / 描述统计'
- en: '| [`SeriesGroupBy.all`](api/pandas.core.groupby.SeriesGroupBy.all.html#pandas.core.groupby.SeriesGroupBy.all
    "pandas.core.groupby.SeriesGroupBy.all")([skipna]) | Return True if all values
    in the group are truthful, else False. |'
  id: totrans-205
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.all`](api/pandas.core.groupby.SeriesGroupBy.all.html#pandas.core.groupby.SeriesGroupBy.all")([skipna])
    | 如果组中所有值都为真，则返回True，否则返回False。 |'
- en: '| [`SeriesGroupBy.any`](api/pandas.core.groupby.SeriesGroupBy.any.html#pandas.core.groupby.SeriesGroupBy.any
    "pandas.core.groupby.SeriesGroupBy.any")([skipna]) | Return True if any value
    in the group is truthful, else False. |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.any`](api/pandas.core.groupby.SeriesGroupBy.any.html#pandas.core.groupby.SeriesGroupBy.any
    "pandas.core.groupby.SeriesGroupBy.any")([skipna]) | 如果组中有任何值为真，则返回True，否则返回False。
    |'
- en: '| [`SeriesGroupBy.bfill`](api/pandas.core.groupby.SeriesGroupBy.bfill.html#pandas.core.groupby.SeriesGroupBy.bfill
    "pandas.core.groupby.SeriesGroupBy.bfill")([limit]) | Backward fill the values.
    |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.bfill`](api/pandas.core.groupby.SeriesGroupBy.bfill.html#pandas.core.groupby.SeriesGroupBy.bfill
    "pandas.core.groupby.SeriesGroupBy.bfill")([limit]) | 向后填充值。 |'
- en: '| [`SeriesGroupBy.corr`](api/pandas.core.groupby.SeriesGroupBy.corr.html#pandas.core.groupby.SeriesGroupBy.corr
    "pandas.core.groupby.SeriesGroupBy.corr")(other[, method, min_periods]) | Compute
    correlation with other Series, excluding missing values. |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.corr`](api/pandas.core.groupby.SeriesGroupBy.corr.html#pandas.core.groupby.SeriesGroupBy.corr
    "pandas.core.groupby.SeriesGroupBy.corr")(other[, method, min_periods]) | 与其他Series计算相关性，不包括缺失值。
    |'
- en: '| [`SeriesGroupBy.count`](api/pandas.core.groupby.SeriesGroupBy.count.html#pandas.core.groupby.SeriesGroupBy.count
    "pandas.core.groupby.SeriesGroupBy.count")() | Compute count of group, excluding
    missing values. |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.count`](api/pandas.core.groupby.SeriesGroupBy.count.html#pandas.core.groupby.SeriesGroupBy.count
    "pandas.core.groupby.SeriesGroupBy.count")() | 计算组的数量，不包括缺失值。 |'
- en: '| [`SeriesGroupBy.cov`](api/pandas.core.groupby.SeriesGroupBy.cov.html#pandas.core.groupby.SeriesGroupBy.cov
    "pandas.core.groupby.SeriesGroupBy.cov")(other[, min_periods, ddof]) | Compute
    covariance with Series, excluding missing values. |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.cov`](api/pandas.core.groupby.SeriesGroupBy.cov.html#pandas.core.groupby.SeriesGroupBy.cov
    "pandas.core.groupby.SeriesGroupBy.cov")(other[, min_periods, ddof]) | 与Series计算协方差，不包括缺失值。
    |'
- en: '| [`SeriesGroupBy.cumcount`](api/pandas.core.groupby.SeriesGroupBy.cumcount.html#pandas.core.groupby.SeriesGroupBy.cumcount
    "pandas.core.groupby.SeriesGroupBy.cumcount")([ascending]) | Number each item
    in each group from 0 to the length of that group - 1. |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.cumcount`](api/pandas.core.groupby.SeriesGroupBy.cumcount.html#pandas.core.groupby.SeriesGroupBy.cumcount
    "pandas.core.groupby.SeriesGroupBy.cumcount")([ascending]) | 对每个组中的每个项目进行编号，从0到该组的长度-1。
    |'
- en: '| [`SeriesGroupBy.cummax`](api/pandas.core.groupby.SeriesGroupBy.cummax.html#pandas.core.groupby.SeriesGroupBy.cummax
    "pandas.core.groupby.SeriesGroupBy.cummax")([axis, numeric_only]) | Cumulative
    max for each group. |'
  id: totrans-212
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.cummax`](api/pandas.core.groupby.SeriesGroupBy.cummax.html#pandas.core.groupby.SeriesGroupBy.cummax
    "pandas.core.groupby.SeriesGroupBy.cummax")([axis, numeric_only]) | 每个组的累积最大值。
    |'
- en: '| [`SeriesGroupBy.cummin`](api/pandas.core.groupby.SeriesGroupBy.cummin.html#pandas.core.groupby.SeriesGroupBy.cummin
    "pandas.core.groupby.SeriesGroupBy.cummin")([axis, numeric_only]) | Cumulative
    min for each group. |'
  id: totrans-213
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.cummin`](api/pandas.core.groupby.SeriesGroupBy.cummin.html#pandas.core.groupby.SeriesGroupBy.cummin
    "pandas.core.groupby.SeriesGroupBy.cummin")([axis, numeric_only]) | 每个组的累积最小值。
    |'
- en: '| [`SeriesGroupBy.cumprod`](api/pandas.core.groupby.SeriesGroupBy.cumprod.html#pandas.core.groupby.SeriesGroupBy.cumprod
    "pandas.core.groupby.SeriesGroupBy.cumprod")([axis]) | Cumulative product for
    each group. |'
  id: totrans-214
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.cumprod`](api/pandas.core.groupby.SeriesGroupBy.cumprod.html#pandas.core.groupby.SeriesGroupBy.cumprod
    "pandas.core.groupby.SeriesGroupBy.cumprod")([axis]) | 每个组的累积乘积。 |'
- en: '| [`SeriesGroupBy.cumsum`](api/pandas.core.groupby.SeriesGroupBy.cumsum.html#pandas.core.groupby.SeriesGroupBy.cumsum
    "pandas.core.groupby.SeriesGroupBy.cumsum")([axis]) | Cumulative sum for each
    group. |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.cumsum`](api/pandas.core.groupby.SeriesGroupBy.cumsum.html#pandas.core.groupby.SeriesGroupBy.cumsum
    "pandas.core.groupby.SeriesGroupBy.cumsum")([axis]) | 每个组的累积总和。 |'
- en: '| [`SeriesGroupBy.describe`](api/pandas.core.groupby.SeriesGroupBy.describe.html#pandas.core.groupby.SeriesGroupBy.describe
    "pandas.core.groupby.SeriesGroupBy.describe")([percentiles, ...]) | Generate descriptive
    statistics. |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.describe`](api/pandas.core.groupby.SeriesGroupBy.describe.html#pandas.core.groupby.SeriesGroupBy.describe
    "pandas.core.groupby.SeriesGroupBy.describe")([percentiles, ...]) | 生成描述性统计。 |'
- en: '| [`SeriesGroupBy.diff`](api/pandas.core.groupby.SeriesGroupBy.diff.html#pandas.core.groupby.SeriesGroupBy.diff
    "pandas.core.groupby.SeriesGroupBy.diff")([periods, axis]) | First discrete difference
    of element. |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.diff`](api/pandas.core.groupby.SeriesGroupBy.diff.html#pandas.core.groupby.SeriesGroupBy.diff
    "pandas.core.groupby.SeriesGroupBy.diff")([periods, axis]) | 元素的第一个离散差异。 |'
- en: '| [`SeriesGroupBy.ffill`](api/pandas.core.groupby.SeriesGroupBy.ffill.html#pandas.core.groupby.SeriesGroupBy.ffill
    "pandas.core.groupby.SeriesGroupBy.ffill")([limit]) | Forward fill the values.
    |'
  id: totrans-218
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.ffill`](api/pandas.core.groupby.SeriesGroupBy.ffill.html#pandas.core.groupby.SeriesGroupBy.ffill
    "pandas.core.groupby.SeriesGroupBy.ffill")([limit]) | 向前填充值。 |'
- en: '| [`SeriesGroupBy.fillna`](api/pandas.core.groupby.SeriesGroupBy.fillna.html#pandas.core.groupby.SeriesGroupBy.fillna
    "pandas.core.groupby.SeriesGroupBy.fillna")([value, method, axis, ...]) | (DEPRECATED)
    Fill NA/NaN values using the specified method within groups. |'
  id: totrans-219
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.fillna`](api/pandas.core.groupby.SeriesGroupBy.fillna.html#pandas.core.groupby.SeriesGroupBy.fillna
    "pandas.core.groupby.SeriesGroupBy.fillna")([value, method, axis, ...]) | （已弃用）使用指定的方法填充组内的NA/NaN值。'
- en: '| [`SeriesGroupBy.first`](api/pandas.core.groupby.SeriesGroupBy.first.html#pandas.core.groupby.SeriesGroupBy.first
    "pandas.core.groupby.SeriesGroupBy.first")([numeric_only, ...]) | Compute the
    first entry of each column within each group. |'
  id: totrans-220
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.first`](api/pandas.core.groupby.SeriesGroupBy.first.html#pandas.core.groupby.SeriesGroupBy.first
    "pandas.core.groupby.SeriesGroupBy.first")([numeric_only, ...]) | 计算每个组内每列的第一个条目。'
- en: '| [`SeriesGroupBy.head`](api/pandas.core.groupby.SeriesGroupBy.head.html#pandas.core.groupby.SeriesGroupBy.head
    "pandas.core.groupby.SeriesGroupBy.head")([n]) | Return first n rows of each group.
    |'
  id: totrans-221
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.head`](api/pandas.core.groupby.SeriesGroupBy.head.html#pandas.core.groupby.SeriesGroupBy.head
    "pandas.core.groupby.SeriesGroupBy.head")([n]) | 返回每个组的前n行。'
- en: '| [`SeriesGroupBy.last`](api/pandas.core.groupby.SeriesGroupBy.last.html#pandas.core.groupby.SeriesGroupBy.last
    "pandas.core.groupby.SeriesGroupBy.last")([numeric_only, ...]) | Compute the last
    entry of each column within each group. |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.last`](api/pandas.core.groupby.SeriesGroupBy.last.html#pandas.core.groupby.SeriesGroupBy.last
    "pandas.core.groupby.SeriesGroupBy.last")([numeric_only, ...]) | 计算每个组内每列的最后一个条目。'
- en: '| [`SeriesGroupBy.idxmax`](api/pandas.core.groupby.SeriesGroupBy.idxmax.html#pandas.core.groupby.SeriesGroupBy.idxmax
    "pandas.core.groupby.SeriesGroupBy.idxmax")([axis, skipna]) | Return the row label
    of the maximum value. |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.idxmax`](api/pandas.core.groupby.SeriesGroupBy.idxmax.html#pandas.core.groupby.SeriesGroupBy.idxmax
    "pandas.core.groupby.SeriesGroupBy.idxmax")([axis, skipna]) | 返回最大值的行标签。'
- en: '| [`SeriesGroupBy.idxmin`](api/pandas.core.groupby.SeriesGroupBy.idxmin.html#pandas.core.groupby.SeriesGroupBy.idxmin
    "pandas.core.groupby.SeriesGroupBy.idxmin")([axis, skipna]) | Return the row label
    of the minimum value. |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.idxmin`](api/pandas.core.groupby.SeriesGroupBy.idxmin.html#pandas.core.groupby.SeriesGroupBy.idxmin
    "pandas.core.groupby.SeriesGroupBy.idxmin")([axis, skipna]) | 返回最小值的行标签。'
- en: '| [`SeriesGroupBy.is_monotonic_increasing`](api/pandas.core.groupby.SeriesGroupBy.is_monotonic_increasing.html#pandas.core.groupby.SeriesGroupBy.is_monotonic_increasing
    "pandas.core.groupby.SeriesGroupBy.is_monotonic_increasing") | Return whether
    each group''s values are monotonically increasing. |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.is_monotonic_increasing`](api/pandas.core.groupby.SeriesGroupBy.is_monotonic_increasing.html#pandas.core.groupby.SeriesGroupBy.is_monotonic_increasing
    "pandas.core.groupby.SeriesGroupBy.is_monotonic_increasing") | 返回每个组的值是否单调递增。'
- en: '| [`SeriesGroupBy.is_monotonic_decreasing`](api/pandas.core.groupby.SeriesGroupBy.is_monotonic_decreasing.html#pandas.core.groupby.SeriesGroupBy.is_monotonic_decreasing
    "pandas.core.groupby.SeriesGroupBy.is_monotonic_decreasing") | Return whether
    each group''s values are monotonically decreasing. |'
  id: totrans-226
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.is_monotonic_decreasing`](api/pandas.core.groupby.SeriesGroupBy.is_monotonic_decreasing.html#pandas.core.groupby.SeriesGroupBy.is_monotonic_decreasing
    "pandas.core.groupby.SeriesGroupBy.is_monotonic_decreasing") | 返回每个组的值是否单调递减。'
- en: '| [`SeriesGroupBy.max`](api/pandas.core.groupby.SeriesGroupBy.max.html#pandas.core.groupby.SeriesGroupBy.max
    "pandas.core.groupby.SeriesGroupBy.max")([numeric_only, min_count, ...]) | Compute
    max of group values. |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.max`](api/pandas.core.groupby.SeriesGroupBy.max.html#pandas.core.groupby.SeriesGroupBy.max
    "pandas.core.groupby.SeriesGroupBy.max")([numeric_only, min_count, ...]) | 计算组值的最大值。'
- en: '| [`SeriesGroupBy.mean`](api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean")([numeric_only, engine, ...]) | Compute
    mean of groups, excluding missing values. |'
  id: totrans-228
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.mean`](api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean")([numeric_only, engine, ...]) | 计算组的平均值，不包括缺失值。'
- en: '| [`SeriesGroupBy.median`](api/pandas.core.groupby.SeriesGroupBy.median.html#pandas.core.groupby.SeriesGroupBy.median
    "pandas.core.groupby.SeriesGroupBy.median")([numeric_only]) | Compute median of
    groups, excluding missing values. |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.median`](api/pandas.core.groupby.SeriesGroupBy.median.html#pandas.core.groupby.SeriesGroupBy.median
    "pandas.core.groupby.SeriesGroupBy.median")([numeric_only]) | 计算组的中位数，不包括缺失值。'
- en: '| [`SeriesGroupBy.min`](api/pandas.core.groupby.SeriesGroupBy.min.html#pandas.core.groupby.SeriesGroupBy.min
    "pandas.core.groupby.SeriesGroupBy.min")([numeric_only, min_count, ...]) | Compute
    min of group values. |'
  id: totrans-230
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.min`](api/pandas.core.groupby.SeriesGroupBy.min.html#pandas.core.groupby.SeriesGroupBy.min
    "pandas.core.groupby.SeriesGroupBy.min")([numeric_only, min_count, ...]) | 计算组值的最小值。'
- en: '| [`SeriesGroupBy.ngroup`](api/pandas.core.groupby.SeriesGroupBy.ngroup.html#pandas.core.groupby.SeriesGroupBy.ngroup
    "pandas.core.groupby.SeriesGroupBy.ngroup")([ascending]) | Number each group from
    0 to the number of groups - 1. |'
  id: totrans-231
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.ngroup`](api/pandas.core.groupby.SeriesGroupBy.ngroup.html#pandas.core.groupby.SeriesGroupBy.ngroup
    "pandas.core.groupby.SeriesGroupBy.ngroup")([ascending]) | 将每个组从 0 编号到组数 - 1。
    |'
- en: '| [`SeriesGroupBy.nlargest`](api/pandas.core.groupby.SeriesGroupBy.nlargest.html#pandas.core.groupby.SeriesGroupBy.nlargest
    "pandas.core.groupby.SeriesGroupBy.nlargest")([n, keep]) | Return the largest
    n elements. |'
  id: totrans-232
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.nlargest`](api/pandas.core.groupby.SeriesGroupBy.nlargest.html#pandas.core.groupby.SeriesGroupBy.nlargest
    "pandas.core.groupby.SeriesGroupBy.nlargest")([n, keep]) | 返回最大的 n 个元素。 |'
- en: '| [`SeriesGroupBy.nsmallest`](api/pandas.core.groupby.SeriesGroupBy.nsmallest.html#pandas.core.groupby.SeriesGroupBy.nsmallest
    "pandas.core.groupby.SeriesGroupBy.nsmallest")([n, keep]) | Return the smallest
    n elements. |'
  id: totrans-233
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.nsmallest`](api/pandas.core.groupby.SeriesGroupBy.nsmallest.html#pandas.core.groupby.SeriesGroupBy.nsmallest
    "pandas.core.groupby.SeriesGroupBy.nsmallest")([n, keep]) | 返回最小的 n 个元素。 |'
- en: '| [`SeriesGroupBy.nth`](api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") | Take the nth row from each group if
    n is an int, otherwise a subset of rows. |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.nth`](api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") | 如果 n 是整数，则从每个组中取第 n 行，否则取行的子集。 |'
- en: '| [`SeriesGroupBy.nunique`](api/pandas.core.groupby.SeriesGroupBy.nunique.html#pandas.core.groupby.SeriesGroupBy.nunique
    "pandas.core.groupby.SeriesGroupBy.nunique")([dropna]) | Return number of unique
    elements in the group. |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.nunique`](api/pandas.core.groupby.SeriesGroupBy.nunique.html#pandas.core.groupby.SeriesGroupBy.nunique
    "pandas.core.groupby.SeriesGroupBy.nunique")([dropna]) | 返回组中唯一元素的数量。 |'
- en: '| [`SeriesGroupBy.unique`](api/pandas.core.groupby.SeriesGroupBy.unique.html#pandas.core.groupby.SeriesGroupBy.unique
    "pandas.core.groupby.SeriesGroupBy.unique")() | Return unique values for each
    group. |'
  id: totrans-236
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.unique`](api/pandas.core.groupby.SeriesGroupBy.unique.html#pandas.core.groupby.SeriesGroupBy.unique
    "pandas.core.groupby.SeriesGroupBy.unique")() | 返回每个组的唯一值。 |'
- en: '| [`SeriesGroupBy.ohlc`](api/pandas.core.groupby.SeriesGroupBy.ohlc.html#pandas.core.groupby.SeriesGroupBy.ohlc
    "pandas.core.groupby.SeriesGroupBy.ohlc")() | Compute open, high, low and close
    values of a group, excluding missing values. |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.ohlc`](api/pandas.core.groupby.SeriesGroupBy.ohlc.html#pandas.core.groupby.SeriesGroupBy.ohlc
    "pandas.core.groupby.SeriesGroupBy.ohlc")() | 计算组的开盘价、最高价、最低价和收盘价，不包括缺失值。 |'
- en: '| [`SeriesGroupBy.pct_change`](api/pandas.core.groupby.SeriesGroupBy.pct_change.html#pandas.core.groupby.SeriesGroupBy.pct_change
    "pandas.core.groupby.SeriesGroupBy.pct_change")([periods, ...]) | Calculate pct_change
    of each value to previous entry in group. |'
  id: totrans-238
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.pct_change`](api/pandas.core.groupby.SeriesGroupBy.pct_change.html#pandas.core.groupby.SeriesGroupBy.pct_change
    "pandas.core.groupby.SeriesGroupBy.pct_change")([periods, ...]) | 计算每个值相对于组中前一个条目的百分比变化。
    |'
- en: '| [`SeriesGroupBy.prod`](api/pandas.core.groupby.SeriesGroupBy.prod.html#pandas.core.groupby.SeriesGroupBy.prod
    "pandas.core.groupby.SeriesGroupBy.prod")([numeric_only, min_count]) | Compute
    prod of group values. |'
  id: totrans-239
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.prod`](api/pandas.core.groupby.SeriesGroupBy.prod.html#pandas.core.groupby.SeriesGroupBy.prod
    "pandas.core.groupby.SeriesGroupBy.prod")([numeric_only, min_count]) | 计算组值的乘积。
    |'
- en: '| [`SeriesGroupBy.quantile`](api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile")([q, interpolation, ...]) | Return
    group values at the given quantile, a la numpy.percentile. |'
  id: totrans-240
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.quantile`](api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile")([q, interpolation, ...]) | 返回给定分位数处的组值，类似于
    numpy.percentile。 |'
- en: '| [`SeriesGroupBy.rank`](api/pandas.core.groupby.SeriesGroupBy.rank.html#pandas.core.groupby.SeriesGroupBy.rank
    "pandas.core.groupby.SeriesGroupBy.rank")([method, ascending, ...]) | Provide
    the rank of values within each group. |'
  id: totrans-241
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.rank`](api/pandas.core.groupby.SeriesGroupBy.rank.html#pandas.core.groupby.SeriesGroupBy.rank
    "pandas.core.groupby.SeriesGroupBy.rank")([method, ascending, ...]) | 在每个组内提供值的排名。
    |'
- en: '| [`SeriesGroupBy.resample`](api/pandas.core.groupby.SeriesGroupBy.resample.html#pandas.core.groupby.SeriesGroupBy.resample
    "pandas.core.groupby.SeriesGroupBy.resample")(rule, *args[, ...]) | Provide resampling
    when using a TimeGrouper. |'
  id: totrans-242
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.resample`](api/pandas.core.groupby.SeriesGroupBy.resample.html#pandas.core.groupby.SeriesGroupBy.resample
    "pandas.core.groupby.SeriesGroupBy.resample")(rule, *args[, ...]) | 在使用 TimeGrouper
    时提供重新采样。 |'
- en: '| [`SeriesGroupBy.rolling`](api/pandas.core.groupby.SeriesGroupBy.rolling.html#pandas.core.groupby.SeriesGroupBy.rolling
    "pandas.core.groupby.SeriesGroupBy.rolling")(*args, **kwargs) | Return a rolling
    grouper, providing rolling functionality per group. |'
  id: totrans-243
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.rolling`](api/pandas.core.groupby.SeriesGroupBy.rolling.html#pandas.core.groupby.SeriesGroupBy.rolling
    "pandas.core.groupby.SeriesGroupBy.rolling")(*args, **kwargs) | 返回一个滚动分组器，为每个组提供滚动功能。
    |'
- en: '| [`SeriesGroupBy.sample`](api/pandas.core.groupby.SeriesGroupBy.sample.html#pandas.core.groupby.SeriesGroupBy.sample
    "pandas.core.groupby.SeriesGroupBy.sample")([n, frac, replace, ...]) | Return
    a random sample of items from each group. |'
  id: totrans-244
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.sample`](api/pandas.core.groupby.SeriesGroupBy.sample.html#pandas.core.groupby.SeriesGroupBy.sample
    "pandas.core.groupby.SeriesGroupBy.sample")([n, frac, replace, ...]) | 返回每个组的随机样本项目。
    |'
- en: '| [`SeriesGroupBy.sem`](api/pandas.core.groupby.SeriesGroupBy.sem.html#pandas.core.groupby.SeriesGroupBy.sem
    "pandas.core.groupby.SeriesGroupBy.sem")([ddof, numeric_only]) | Compute standard
    error of the mean of groups, excluding missing values. |'
  id: totrans-245
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.sem`](api/pandas.core.groupby.SeriesGroupBy.sem.html#pandas.core.groupby.SeriesGroupBy.sem
    "pandas.core.groupby.SeriesGroupBy.sem")([ddof, numeric_only]) | 计算组的均值标准误差，不包括缺失值。
    |'
- en: '| [`SeriesGroupBy.shift`](api/pandas.core.groupby.SeriesGroupBy.shift.html#pandas.core.groupby.SeriesGroupBy.shift
    "pandas.core.groupby.SeriesGroupBy.shift")([periods, freq, axis, ...]) | Shift
    each group by periods observations. |'
  id: totrans-246
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.shift`](api/pandas.core.groupby.SeriesGroupBy.shift.html#pandas.core.groupby.SeriesGroupBy.shift
    "pandas.core.groupby.SeriesGroupBy.shift")([periods, freq, axis, ...]) | 将每个组的观察值移动若干周期。
    |'
- en: '| [`SeriesGroupBy.size`](api/pandas.core.groupby.SeriesGroupBy.size.html#pandas.core.groupby.SeriesGroupBy.size
    "pandas.core.groupby.SeriesGroupBy.size")() | Compute group sizes. |'
  id: totrans-247
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.size`](api/pandas.core.groupby.SeriesGroupBy.size.html#pandas.core.groupby.SeriesGroupBy.size
    "pandas.core.groupby.SeriesGroupBy.size")() | 计算组大小。 |'
- en: '| [`SeriesGroupBy.skew`](api/pandas.core.groupby.SeriesGroupBy.skew.html#pandas.core.groupby.SeriesGroupBy.skew
    "pandas.core.groupby.SeriesGroupBy.skew")([axis, skipna, numeric_only]) | Return
    unbiased skew within groups. |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.skew`](api/pandas.core.groupby.SeriesGroupBy.skew.html#pandas.core.groupby.SeriesGroupBy.skew
    "pandas.core.groupby.SeriesGroupBy.skew")([axis, skipna, numeric_only]) | 返回组内无偏斜。
    |'
- en: '| [`SeriesGroupBy.std`](api/pandas.core.groupby.SeriesGroupBy.std.html#pandas.core.groupby.SeriesGroupBy.std
    "pandas.core.groupby.SeriesGroupBy.std")([ddof, engine, ...]) | Compute standard
    deviation of groups, excluding missing values. |'
  id: totrans-249
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.std`](api/pandas.core.groupby.SeriesGroupBy.std.html#pandas.core.groupby.SeriesGroupBy.std
    "pandas.core.groupby.SeriesGroupBy.std")([ddof, engine, ...]) | 计算组的标准偏差，不包括缺失值。
    |'
- en: '| [`SeriesGroupBy.sum`](api/pandas.core.groupby.SeriesGroupBy.sum.html#pandas.core.groupby.SeriesGroupBy.sum
    "pandas.core.groupby.SeriesGroupBy.sum")([numeric_only, min_count, ...]) | Compute
    sum of group values. |'
  id: totrans-250
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.sum`](api/pandas.core.groupby.SeriesGroupBy.sum.html#pandas.core.groupby.SeriesGroupBy.sum
    "pandas.core.groupby.SeriesGroupBy.sum")([numeric_only, min_count, ...]) | 计算组值的总和。
    |'
- en: '| [`SeriesGroupBy.var`](api/pandas.core.groupby.SeriesGroupBy.var.html#pandas.core.groupby.SeriesGroupBy.var
    "pandas.core.groupby.SeriesGroupBy.var")([ddof, engine, ...]) | Compute variance
    of groups, excluding missing values. |'
  id: totrans-251
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.var`](api/pandas.core.groupby.SeriesGroupBy.var.html#pandas.core.groupby.SeriesGroupBy.var
    "pandas.core.groupby.SeriesGroupBy.var")([ddof, engine, ...]) | 计算组的方差，不包括缺失值。
    |'
- en: '| [`SeriesGroupBy.tail`](api/pandas.core.groupby.SeriesGroupBy.tail.html#pandas.core.groupby.SeriesGroupBy.tail
    "pandas.core.groupby.SeriesGroupBy.tail")([n]) | Return last n rows of each group.
    |'
  id: totrans-252
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.tail`](api/pandas.core.groupby.SeriesGroupBy.tail.html#pandas.core.groupby.SeriesGroupBy.tail
    "pandas.core.groupby.SeriesGroupBy.tail")([n]) | 返回每个组的最后 n 行。 |'
- en: '| [`SeriesGroupBy.take`](api/pandas.core.groupby.SeriesGroupBy.take.html#pandas.core.groupby.SeriesGroupBy.take
    "pandas.core.groupby.SeriesGroupBy.take")(indices[, axis]) | Return the elements
    in the given *positional* indices in each group. |'
  id: totrans-253
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.take`](api/pandas.core.groupby.SeriesGroupBy.take.html#pandas.core.groupby.SeriesGroupBy.take
    "pandas.core.groupby.SeriesGroupBy.take")(indices[, axis]) | 返回每个组中给定 *位置* 索引中的元素。
    |'
- en: '| [`SeriesGroupBy.value_counts`](api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts")([normalize, ...]) |  |'
  id: totrans-254
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.value_counts`](api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts")([normalize, ...]) |  |'
- en: Plotting and visualization
  id: totrans-255
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘图和可视化
- en: '| [`DataFrameGroupBy.boxplot`](api/pandas.core.groupby.DataFrameGroupBy.boxplot.html#pandas.core.groupby.DataFrameGroupBy.boxplot
    "pandas.core.groupby.DataFrameGroupBy.boxplot")([subplots, column, ...]) | Make
    box plots from DataFrameGroupBy data. |'
  id: totrans-256
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.boxplot`](api/pandas.core.groupby.DataFrameGroupBy.boxplot.html#pandas.core.groupby.DataFrameGroupBy.boxplot
    "pandas.core.groupby.DataFrameGroupBy.boxplot")([subplots, column, ...]) | 从 DataFrameGroupBy
    数据制作箱线图。 |'
- en: '| [`DataFrameGroupBy.hist`](api/pandas.core.groupby.DataFrameGroupBy.hist.html#pandas.core.groupby.DataFrameGroupBy.hist
    "pandas.core.groupby.DataFrameGroupBy.hist")([column, by, grid, ...]) | Make a
    histogram of the DataFrame''s columns. |'
  id: totrans-257
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.hist`](api/pandas.core.groupby.DataFrameGroupBy.hist.html#pandas.core.groupby.DataFrameGroupBy.hist
    "pandas.core.groupby.DataFrameGroupBy.hist")([column, by, grid, ...]) | 绘制 DataFrame
    的列的直方图。 |'
- en: '| [`SeriesGroupBy.hist`](api/pandas.core.groupby.SeriesGroupBy.hist.html#pandas.core.groupby.SeriesGroupBy.hist
    "pandas.core.groupby.SeriesGroupBy.hist")([by, ax, grid, ...]) | Draw histogram
    of the input series using matplotlib. |'
  id: totrans-258
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.hist`](api/pandas.core.groupby.SeriesGroupBy.hist.html#pandas.core.groupby.SeriesGroupBy.hist
    "pandas.core.groupby.SeriesGroupBy.hist")([by, ax, grid, ...]) | 使用 LIMITED 绘制输入系列的直方图。
    |'
- en: '| [`DataFrameGroupBy.plot`](api/pandas.core.groupby.DataFrameGroupBy.plot.html#pandas.core.groupby.DataFrameGroupBy.plot
    "pandas.core.groupby.DataFrameGroupBy.plot") | Make plots of Series or DataFrame.
    |'
  id: totrans-259
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrameGroupBy.plot`](api/pandas.core.groupby.DataFrameGroupBy.plot.html#pandas.core.groupby.DataFrameGroupBy.plot
    "pandas.core.groupby.DataFrameGroupBy.plot") | 绘制 Series 或 DataFrame 的图表。 |'
- en: '| [`SeriesGroupBy.plot`](api/pandas.core.groupby.SeriesGroupBy.plot.html#pandas.core.groupby.SeriesGroupBy.plot
    "pandas.core.groupby.SeriesGroupBy.plot") | Make plots of Series or DataFrame.
    |'
  id: totrans-260
  prefs: []
  type: TYPE_TB
  zh: '| [`SeriesGroupBy.plot`](api/pandas.core.groupby.SeriesGroupBy.plot.html#pandas.core.groupby.SeriesGroupBy.plot
    "pandas.core.groupby.SeriesGroupByF.plot") | 绘制 Series 或 DataFrame 的图表。 |'
