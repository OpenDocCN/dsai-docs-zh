- en: scipy.optimize.lsq_linear
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.optimize.lsq_linear
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.lsq_linear.html#scipy.optimize.lsq_linear](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.lsq_linear.html#scipy.optimize.lsq_linear)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.lsq_linear.html#scipy.optimize.lsq_linear](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.lsq_linear.html#scipy.optimize.lsq_linear)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Solve a linear least-squares problem with bounds on the variables.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 解决具有变量界限的线性最小二乘问题。
- en: 'Given a m-by-n design matrix A and a target vector b with m elements, [`lsq_linear`](#scipy.optimize.lsq_linear
    "scipy.optimize.lsq_linear") solves the following optimization problem:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 给定一个 m × n 的设计矩阵 A 和一个具有 m 个元素的目标向量 b，[`lsq_linear`](#scipy.optimize.lsq_linear
    "scipy.optimize.lsq_linear") 解决以下优化问题：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This optimization problem is convex, hence a found minimum (if iterations have
    converged) is guaranteed to be global.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 该优化问题是凸的，因此找到的最小值（如果迭代收敛）保证是全局的。
- en: 'Parameters:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**A**array_like, sparse matrix of LinearOperator, shape (m, n)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**A**array_like，稀疏矩阵或LinearOperator，形状为 (m, n)'
- en: Design matrix. Can be [`scipy.sparse.linalg.LinearOperator`](scipy.sparse.linalg.LinearOperator.html#scipy.sparse.linalg.LinearOperator
    "scipy.sparse.linalg.LinearOperator").
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 设计矩阵。可以是 [`scipy.sparse.linalg.LinearOperator`](scipy.sparse.linalg.LinearOperator.html#scipy.sparse.linalg.LinearOperator
    "scipy.sparse.linalg.LinearOperator")。
- en: '**b**array_like, shape (m,)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**b**array_like，形状为 (m,)'
- en: Target vector.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 目标向量。
- en: '**bounds**2-tuple of array_like or [`Bounds`](scipy.optimize.Bounds.html#scipy.optimize.Bounds
    "scipy.optimize.Bounds"), optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**bounds**2-tuple of array_like 或 [`Bounds`](scipy.optimize.Bounds.html#scipy.optimize.Bounds
    "scipy.optimize.Bounds") 的实例，可选'
- en: 'Lower and upper bounds on parameters. Defaults to no bounds. There are two
    ways to specify the bounds:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 参数的上下界。默认情况下没有界限。有两种指定界限的方式：
- en: Instance of [`Bounds`](scipy.optimize.Bounds.html#scipy.optimize.Bounds "scipy.optimize.Bounds")
    class.
  id: totrans-14
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Bounds`](scipy.optimize.Bounds.html#scipy.optimize.Bounds "scipy.optimize.Bounds")
    类的实例。'
- en: ''
  id: totrans-15
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-16
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '2-tuple of array_like: Each element of the tuple must be either an array with
    the length equal to the number of parameters, or a scalar (in which case the bound
    is taken to be the same for all parameters). Use `np.inf` with an appropriate
    sign to disable bounds on all or some parameters.'
  id: totrans-17
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2-tuple of array_like：元组的每个元素必须是长度等于参数数目的数组，或者是一个标量（在这种情况下，界限被认为对所有参数都是相同的）。使用
    `np.inf` 和适当的符号来禁用所有或某些参数的界限。
- en: '**method**‘trf’ or ‘bvls’, optional'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**method**‘trf’ 或 ‘bvls’，可选'
- en: Method to perform minimization.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 执行最小化的方法。
- en: '‘trf’ : Trust Region Reflective algorithm adapted for a linear least-squares
    problem. This is an interior-point-like method and the required number of iterations
    is weakly correlated with the number of variables.'
  id: totrans-20
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘trf’：适用于线性最小二乘问题的信任区域反射算法。这是一种类似内点的方法，所需的迭代次数与变量数目弱相关。
- en: ''
  id: totrans-21
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-22
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘bvls’ : Bounded-variable least-squares algorithm. This is an active set method,
    which requires the number of iterations comparable to the number of variables.
    Can’t be used when *A* is sparse or LinearOperator.'
  id: totrans-23
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘bvls’：有界变量最小二乘算法。这是一种活动集方法，需要的迭代次数与变量数目相当。当 *A* 是稀疏的或LinearOperator时无法使用。
- en: Default is ‘trf’.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 默认为 ‘trf’。
- en: '**tol**float, optional'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**tol**float，可选'
- en: 'Tolerance parameter. The algorithm terminates if a relative change of the cost
    function is less than *tol* on the last iteration. Additionally, the first-order
    optimality measure is considered:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 容差参数。如果成本函数的相对变化在最后一次迭代中小于 *tol*，则算法终止。此外，还考虑第一阶优化度量：
- en: '`method=''trf''` terminates if the uniform norm of the gradient, scaled to
    account for the presence of the bounds, is less than *tol*.'
  id: totrans-27
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`method=''trf''` 如果梯度的均匀范数（考虑到界限的存在）小于 *tol*，则终止。'
- en: ''
  id: totrans-28
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-29
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`method=''bvls''` terminates if Karush-Kuhn-Tucker conditions are satisfied
    within *tol* tolerance.'
  id: totrans-30
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`method=''bvls''` 如果在 *tol* 的容差内满足 Karush-Kuhn-Tucker 条件，则终止。'
- en: '**lsq_solver**{None, ‘exact’, ‘lsmr’}, optional'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**lsq_solver**{None, ‘exact’, ‘lsmr’}，可选'
- en: 'Method of solving unbounded least-squares problems throughout iterations:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在迭代过程中解决无界最小二乘问题的方法：
- en: '‘exact’ : Use dense QR or SVD decomposition approach. Can’t be used when *A*
    is sparse or LinearOperator.'
  id: totrans-33
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘exact’：使用密集的 QR 或 SVD 分解方法。当 *A* 是稀疏的或LinearOperator时无法使用。
- en: ''
  id: totrans-34
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-35
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘lsmr’ : Use [`scipy.sparse.linalg.lsmr`](scipy.sparse.linalg.lsmr.html#scipy.sparse.linalg.lsmr
    "scipy.sparse.linalg.lsmr") iterative procedure which requires only matrix-vector
    product evaluations. Can’t be used with `method=''bvls''`.'
  id: totrans-36
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘lsmr’：使用 [`scipy.sparse.linalg.lsmr`](scipy.sparse.linalg.lsmr.html#scipy.sparse.linalg.lsmr
    "scipy.sparse.linalg.lsmr") 迭代过程，仅需要矩阵-向量乘积评估。不能与 `method='bvls'` 同时使用。
- en: If None (default), the solver is chosen based on type of *A*.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为 None（默认值），则根据 *A* 的类型选择求解器。
- en: '**lsmr_tol**None, float or ‘auto’, optional'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**lsmr_tol**None、float 或 ‘auto’，可选'
- en: Tolerance parameters ‘atol’ and ‘btol’ for [`scipy.sparse.linalg.lsmr`](scipy.sparse.linalg.lsmr.html#scipy.sparse.linalg.lsmr
    "scipy.sparse.linalg.lsmr") If None (default), it is set to `1e-2 * tol`. If ‘auto’,
    the tolerance will be adjusted based on the optimality of the current iterate,
    which can speed up the optimization process, but is not always reliable.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 耐受参数 ‘atol’ 和 ‘btol’ 用于 [`scipy.sparse.linalg.lsmr`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.linalg.lsmr.html#scipy.sparse.linalg.lsmr
    "scipy.sparse.linalg.lsmr")。如果为 None（默认值），则设置为 `1e-2 * tol`。如果是 ‘auto’，则基于当前迭代的最优性调整容差，这可以加速优化过程，但不总是可靠。
- en: '**max_iter**None or int, optional'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**max_iter**None 或 int，可选'
- en: Maximum number of iterations before termination. If None (default), it is set
    to 100 for `method='trf'` or to the number of variables for `method='bvls'` (not
    counting iterations for ‘bvls’ initialization).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 终止前的最大迭代次数。如果为 None（默认值），则对于 `method='trf'` 设置为 100，对于 `method='bvls'` 设置为变量数（不计算
    ‘bvls’ 初始化的迭代）。
- en: '**verbose**{0, 1, 2}, optional'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**verbose**{0, 1, 2}，可选'
- en: 'Level of algorithm’s verbosity:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 算法详细程度：
- en: '0 : work silently (default).'
  id: totrans-44
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 0：静默工作（默认值）。
- en: ''
  id: totrans-45
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-46
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '1 : display a termination report.'
  id: totrans-47
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1：显示终止报告。
- en: ''
  id: totrans-48
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-49
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '2 : display progress during iterations.'
  id: totrans-50
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2：显示迭代过程。
- en: '**lsmr_maxiter**None or int, optional'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**lsmr_maxiter**None 或 int，可选'
- en: Maximum number of iterations for the lsmr least squares solver, if it is used
    (by setting `lsq_solver='lsmr'`). If None (default), it uses lsmr’s default of
    `min(m, n)` where `m` and `n` are the number of rows and columns of *A*, respectively.
    Has no effect if `lsq_solver='exact'`.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: lsmr 最小二乘求解器的最大迭代次数（通过设置 `lsq_solver='lsmr'`）。如果为 None（默认值），则使用 lsmr 的默认值 `min(m,
    n)`，其中 `m` 和 `n` 分别为 *A* 的行数和列数。如果 `lsq_solver='exact'`，则不起作用。
- en: 'Returns:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: 'OptimizeResult with the following fields defined:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: OptimizeResult，其以下字段已定义：
- en: '**x**ndarray, shape (n,)'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**ndarray，形状为 (n,)'
- en: Solution found.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 找到解。
- en: '**cost**float'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**cost**float'
- en: Value of the cost function at the solution.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 解处的成本函数值。
- en: '**fun**ndarray, shape (m,)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**fun**数组，形状为 (m,)'
- en: Vector of residuals at the solution.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 解处的残差向量。
- en: '**optimality**float'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**optimality**float'
- en: First-order optimality measure. The exact meaning depends on *method*, refer
    to the description of *tol* parameter.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 一阶优化度量。确切含义取决于 *method*，请参阅 *tol* 参数的描述。
- en: '**active_mask**ndarray of int, shape (n,)'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**active_mask**int 数组，形状为 (n,)'
- en: 'Each component shows whether a corresponding constraint is active (that is,
    whether a variable is at the bound):'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 每个组件显示相应约束是否活跃（即变量是否位于边界）：
- en: '0 : a constraint is not active.'
  id: totrans-65
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 0：无约束被激活。
- en: ''
  id: totrans-66
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-67
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '-1 : a lower bound is active.'
  id: totrans-68
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: -1：下限被激活。
- en: ''
  id: totrans-69
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-70
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '1 : an upper bound is active.'
  id: totrans-71
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1：上限被激活。
- en: Might be somewhat arbitrary for the *trf* method as it generates a sequence
    of strictly feasible iterates and active_mask is determined within a tolerance
    threshold.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 *trf* 方法可能有些随意，因为它生成严格可行迭代序列，并且在容差阈值内确定 *active_mask*。
- en: '**unbounded_sol**tuple'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**unbounded_sol**元组'
- en: Unbounded least squares solution tuple returned by the least squares solver
    (set with *lsq_solver* option). If *lsq_solver* is not set or is set to `'exact'`,
    the tuple contains an ndarray of shape (n,) with the unbounded solution, an ndarray
    with the sum of squared residuals, an int with the rank of *A*, and an ndarray
    with the singular values of *A* (see NumPy’s `linalg.lstsq` for more information).
    If *lsq_solver* is set to `'lsmr'`, the tuple contains an ndarray of shape (n,)
    with the unbounded solution, an int with the exit code, an int with the number
    of iterations, and five floats with various norms and the condition number of
    *A* (see SciPy’s `sparse.linalg.lsmr` for more information). This output can be
    useful for determining the convergence of the least squares solver, particularly
    the iterative `'lsmr'` solver. The unbounded least squares problem is to minimize
    `0.5 * ||A x - b||**2`.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 最小二乘求解器返回的无界解元组（使用 *lsq_solver* 选项设置）。如果 *lsq_solver* 未设置或设置为 `'exact'`，则元组包含形状为
    (n,) 的 ndarray，其无界解、残差平方和的 ndarray、*A* 的秩和 *A* 的奇异值的 int（请参阅 NumPy 的 `linalg.lstsq`
    获取更多信息）。如果 *lsq_solver* 设置为 `'lsmr'`，则元组包含形状为 (n,) 的 ndarray，其无界解、退出代码的 int、迭代次数的
    int 和五个不同规范及 *A* 的条件数的 float（请参阅 SciPy 的 `sparse.linalg.lsmr` 获取更多信息）。此输出对于确定最小二乘求解器的收敛性尤为有用，特别是迭代
    `'lsmr'` 求解器。无界最小二乘问题是最小化 `0.5 * ||A x - b||**2`。
- en: '**nit**int'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**nit**int'
- en: Number of iterations. Zero if the unconstrained solution is optimal.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 迭代次数。如果无约束解是最优解，则为零。
- en: '**status**int'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**status**int'
- en: 'Reason for algorithm termination:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 算法终止的原因：
- en: '-1 : the algorithm was not able to make progress on the last iteration.'
  id: totrans-79
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: -1：算法在最后一次迭代时无法取得进展。
- en: ''
  id: totrans-80
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-81
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '0 : the maximum number of iterations is exceeded.'
  id: totrans-82
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 0：超过最大迭代次数。
- en: ''
  id: totrans-83
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-84
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '1 : the first-order optimality measure is less than *tol*.'
  id: totrans-85
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1：一阶优化性能度量小于*tol*。
- en: ''
  id: totrans-86
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-87
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '2 : the relative change of the cost function is less than *tol*.'
  id: totrans-88
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2：成本函数的相对变化小于*tol*。
- en: ''
  id: totrans-89
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-90
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '3 : the unconstrained solution is optimal.'
  id: totrans-91
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3：无约束解决方案是最优的。
- en: '**message**str'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**message**字符串'
- en: Verbal description of the termination reason.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 终止原因的口头描述。
- en: '**success**bool'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**success**布尔值'
- en: True if one of the convergence criteria is satisfied (*status* > 0).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 如果满足一个收敛标准（*status* > 0），则为真。
- en: See also
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`nnls`](scipy.optimize.nnls.html#scipy.optimize.nnls "scipy.optimize.nnls")'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '[`nnls`](scipy.optimize.nnls.html#scipy.optimize.nnls "scipy.optimize.nnls")'
- en: Linear least squares with non-negativity constraint.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 具有非负约束的线性最小二乘法。
- en: '[`least_squares`](scipy.optimize.least_squares.html#scipy.optimize.least_squares
    "scipy.optimize.least_squares")'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '[`least_squares`](scipy.optimize.least_squares.html#scipy.optimize.least_squares
    "scipy.optimize.least_squares")'
- en: Nonlinear least squares with bounds on the variables.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 具有变量界限的非线性最小二乘法。
- en: Notes
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: The algorithm first computes the unconstrained least-squares solution by [`numpy.linalg.lstsq`](https://numpy.org/devdocs/reference/generated/numpy.linalg.lstsq.html#numpy.linalg.lstsq
    "(in NumPy v2.0.dev0)") or [`scipy.sparse.linalg.lsmr`](scipy.sparse.linalg.lsmr.html#scipy.sparse.linalg.lsmr
    "scipy.sparse.linalg.lsmr") depending on *lsq_solver*. This solution is returned
    as optimal if it lies within the bounds.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 该算法首先通过[`numpy.linalg.lstsq`](https://numpy.org/devdocs/reference/generated/numpy.linalg.lstsq.html#numpy.linalg.lstsq
    "(在NumPy v2.0.dev0中)")或[`scipy.sparse.linalg.lsmr`](scipy.sparse.linalg.lsmr.html#scipy.sparse.linalg.lsmr
    "scipy.sparse.linalg.lsmr")计算无约束最小二乘解决方案，具体取决于*lsq_solver*。如果解决方案在界限内，则返回此解决方案作为最优解。
- en: Method ‘trf’ runs the adaptation of the algorithm described in [[STIR]](#r74f8b7a68993-stir)
    for a linear least-squares problem. The iterations are essentially the same as
    in the nonlinear least-squares algorithm, but as the quadratic function model
    is always accurate, we don’t need to track or modify the radius of a trust region.
    The line search (backtracking) is used as a safety net when a selected step does
    not decrease the cost function. Read more detailed description of the algorithm
    in [`scipy.optimize.least_squares`](scipy.optimize.least_squares.html#scipy.optimize.least_squares
    "scipy.optimize.least_squares").
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 方法 'trf' 运行了适应于线性最小二乘问题的算法描述的改编版[[STIR]](#r74f8b7a68993-stir)。迭代基本与非线性最小二乘算法相同，但由于二次函数模型始终准确，因此我们不需要跟踪或修改信任区域的半径。当所选步骤未减少成本函数时，使用线搜索（回溯）作为安全网。详细了解该算法的更多信息，请参阅[`scipy.optimize.least_squares`](scipy.optimize.least_squares.html#scipy.optimize.least_squares
    "scipy.optimize.least_squares")。
- en: Method ‘bvls’ runs a Python implementation of the algorithm described in [[BVLS]](#r74f8b7a68993-bvls).
    The algorithm maintains active and free sets of variables, on each iteration chooses
    a new variable to move from the active set to the free set and then solves the
    unconstrained least-squares problem on free variables. This algorithm is guaranteed
    to give an accurate solution eventually, but may require up to n iterations for
    a problem with n variables. Additionally, an ad-hoc initialization procedure is
    implemented, that determines which variables to set free or active initially.
    It takes some number of iterations before actual BVLS starts, but can significantly
    reduce the number of further iterations.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 方法 'bvls' 运行了一个Python实现的算法，描述在[[BVLS]](#r74f8b7a68993-bvls)。该算法维护变量的活动和自由集，在每次迭代中选择一个新变量从活动集移动到自由集，然后在自由变量上解决无约束最小二乘问题。此算法保证最终提供准确的解决方案，但对于具有n个变量的问题可能需要多达n次迭代。此外，还实施了一种特定初始化过程，确定最初要设置为自由或活动的变量。在实际BVLS开始之前需要进行一些迭代，但可以显著减少进一步迭代次数。
- en: References
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[STIR](#id1)]'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '[[STIR](#id1)]'
- en: M. A. Branch, T. F. Coleman, and Y. Li, “A Subspace, Interior, and Conjugate
    Gradient Method for Large-Scale Bound-Constrained Minimization Problems,” SIAM
    Journal on Scientific Computing, Vol. 21, Number 1, pp 1-23, 1999.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: M. A. Branch, T. F. Coleman 和 Y. Li，《大规模约束最小化问题的子空间、内点和共轭梯度法》，《SIAM科学计算杂志》，第21卷，第1号，1-23页，1999年。
- en: '[[BVLS](#id2)]'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '[[BVLS](#id2)]'
- en: 'P. B. Start and R. L. Parker, “Bounded-Variable Least-Squares: an Algorithm
    and Applications”, Computational Statistics, 10, 129-141, 1995.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: P. B. Start 和 R. L. Parker，《有界变量最小二乘法：算法与应用》，《计算统计学》，10，129-141，1995年。
- en: Examples
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: In this example, a problem with a large sparse matrix and bounds on the variables
    is solved.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，解决了一个涉及大稀疏矩阵和变量边界的问题。
- en: '[PRE2]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
