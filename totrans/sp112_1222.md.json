["```py\nscipy.stats.multinomial = <scipy.stats._multivariate.multinomial_gen object>\n```", "```py\n>>> from scipy.stats import multinomial\n>>> rv = multinomial(8, [0.3, 0.2, 0.5])\n>>> rv.pmf([1, 3, 4])\n0.042000000000000072 \n```", "```py\n>>> from scipy.stats import binom\n>>> multinomial.pmf([3, 4], n=7, p=[0.4, 0.6])\n0.29030399999999973\n>>> binom.pmf(3, 7, 0.4)\n0.29030400000000012 \n```", "```py\n>>> multinomial.pmf([[3, 4], [3, 5]], n=[7, 8], p=[.3, .7])\narray([0.2268945,  0.25412184]) \n```", "```py\n>>> multinomial.pmf([3, 4], n=7, p=[.3, .7])\n0.2268945\n>>> multinomial.pmf([3, 5], 8, p=[.3, .7])\n0.25412184 \n```", "```py\n>>> multinomial.cov([4, 5], [[.3, .7], [.4, .6]])\narray([[[ 0.84, -0.84],\n [-0.84,  0.84]],\n [[ 1.2 , -1.2 ],\n [-1.2 ,  1.2 ]]]) \n```", "```py\n>>> rv = multinomial(n=7, p=[.3, .7])\n>>> # Frozen object with the same methods but holding the given\n>>> # degrees of freedom and scale fixed. \n```"]