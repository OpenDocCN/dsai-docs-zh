- en: scipy.optimize.bracket
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.bracket.html#scipy.optimize.bracket](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.bracket.html#scipy.optimize.bracket)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Bracket the minimum of a function.
  prefs: []
  type: TYPE_NORMAL
- en: Given a function and distinct initial points, search in the downhill direction
    (as defined by the initial points) and return three points that bracket the minimum
    of the function.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**func**callable f(x,*args)'
  prefs: []
  type: TYPE_NORMAL
- en: Objective function to minimize.
  prefs: []
  type: TYPE_NORMAL
- en: '**xa, xb**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Initial points. Defaults *xa* to 0.0, and *xb* to 1.0. A local minimum need
    not be contained within this interval.
  prefs: []
  type: TYPE_NORMAL
- en: '**args**tuple, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Additional arguments (if present), passed to *func*.
  prefs: []
  type: TYPE_NORMAL
- en: '**grow_limit**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Maximum grow limit. Defaults to 110.0
  prefs: []
  type: TYPE_NORMAL
- en: '**maxiter**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Maximum number of iterations to perform. Defaults to 1000.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**xa, xb, xc**float'
  prefs: []
  type: TYPE_NORMAL
- en: Final points of the bracket.
  prefs: []
  type: TYPE_NORMAL
- en: '**fa, fb, fc**float'
  prefs: []
  type: TYPE_NORMAL
- en: Objective function values at the bracket points.
  prefs: []
  type: TYPE_NORMAL
- en: '**funcalls**int'
  prefs: []
  type: TYPE_NORMAL
- en: Number of function evaluations made.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: BracketError
  prefs: []
  type: TYPE_NORMAL
- en: If no valid bracket is found before the algorithm terminates. See notes for
    conditions of a valid bracket.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The algorithm attempts to find three strictly ordered points (i.e. \(x_a < x_b
    < x_c\) or \(x_c < x_b < x_a\)) satisfying \(f(x_b) ≤ f(x_a)\) and \(f(x_b) ≤
    f(x_c)\), where one of the inequalities must be satistfied strictly and all \(x_i\)
    must be finite.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'This function can find a downward convex region of a function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-optimize-bracket-1_00_00.png](../Images/08156511702e1ef6a0f551886a15ab9d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Note that both initial points were to the right of the minimum, and the third
    point was found in the “downhill” direction: the direction in which the function
    appeared to be decreasing (to the left). The final points are strictly ordered,
    and the function value at the middle point is less than the function values at
    the endpoints; it follows that a minimum must lie within the bracket.'
  prefs: []
  type: TYPE_NORMAL
