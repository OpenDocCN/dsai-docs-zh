- en: scipy.stats.percentileofscore
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.percentileofscore.html#scipy.stats.percentileofscore](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.percentileofscore.html#scipy.stats.percentileofscore)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute the percentile rank of a score relative to a list of scores.
  prefs: []
  type: TYPE_NORMAL
- en: A [`percentileofscore`](#scipy.stats.percentileofscore "scipy.stats.percentileofscore")
    of, for example, 80% means that 80% of the scores in *a* are below the given score.
    In the case of gaps or ties, the exact definition depends on the optional keyword,
    *kind*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Array to which *score* is compared.
  prefs: []
  type: TYPE_NORMAL
- en: '**score**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Scores to compute percentiles for.
  prefs: []
  type: TYPE_NORMAL
- en: '**kind**{‘rank’, ‘weak’, ‘strict’, ‘mean’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Specifies the interpretation of the resulting score. The following options
    are available (default is ‘rank’):'
  prefs: []
  type: TYPE_NORMAL
- en: '‘rank’: Average percentage ranking of score. In case of multiple matches, average
    the percentage rankings of all matching scores.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘weak’: This kind corresponds to the definition of a cumulative distribution
    function. A percentileofscore of 80% means that 80% of values are less than or
    equal to the provided score.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘strict’: Similar to “weak”, except that only values that are strictly less
    than the given score are counted.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘mean’: The average of the “weak” and “strict” scores, often used in testing.
    See [https://en.wikipedia.org/wiki/Percentile_rank](https://en.wikipedia.org/wiki/Percentile_rank)'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '**nan_policy**{‘propagate’, ‘raise’, ‘omit’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Specifies how to treat *nan* values in *a*. The following options are available
    (default is ‘propagate’):'
  prefs: []
  type: TYPE_NORMAL
- en: '‘propagate’: returns nan (for each value in *score*).'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘raise’: throws an error'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘omit’: performs the calculations ignoring nan values'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**pcos**float'
  prefs: []
  type: TYPE_NORMAL
- en: Percentile-position of score (0-100) relative to *a*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.percentile`](https://numpy.org/devdocs/reference/generated/numpy.percentile.html#numpy.percentile
    "(in NumPy v2.0.dev0)")'
  prefs: []
  type: TYPE_NORMAL
- en: '[`scipy.stats.scoreatpercentile`](scipy.stats.scoreatpercentile.html#scipy.stats.scoreatpercentile
    "scipy.stats.scoreatpercentile"), [`scipy.stats.rankdata`](scipy.stats.rankdata.html#scipy.stats.rankdata
    "scipy.stats.rankdata")'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Three-quarters of the given values lie below a given score:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'With multiple matches, note how the scores of the two matches, 0.6 and 0.8
    respectively, are averaged:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Only 2/5 values are strictly less than 3:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'But 4/5 values are less than or equal to 3:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The average between the weak and the strict scores is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Score arrays (of any dimensionality) are supported:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The inputs can be infinite:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'If *a* is empty, then the resulting percentiles are all *nan*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
