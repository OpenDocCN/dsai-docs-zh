- en: What’s new in 1.0.0 (January 29, 2020)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/whatsnew/v1.0.0.html](https://pandas.pydata.org/docs/whatsnew/v1.0.0.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: These are the changes in pandas 1.0.0\. See [Release notes](index.html#release)
    for a full changelog including other versions of pandas.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: The pandas 1.0 release removed a lot of functionality that was deprecated in
    previous releases (see [below](#whatsnew-100-prior-deprecations) for an overview).
    It is recommended to first upgrade to pandas 0.25 and to ensure your code is working
    without warnings, before upgrading to pandas 1.0.
  prefs: []
  type: TYPE_NORMAL
- en: New deprecation policy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Starting with pandas 1.0.0, pandas will adopt a variant of [SemVer](https://semver.org)
    to version releases. Briefly,
  prefs: []
  type: TYPE_NORMAL
- en: Deprecations will be introduced in minor releases (e.g. 1.1.0, 1.2.0, 2.1.0,
    …)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecations will be enforced in major releases (e.g. 1.0.0, 2.0.0, 3.0.0, …)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: API-breaking changes will be made only in major releases (except for experimental
    features)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: See [Version policy](../development/policies.html#policies-version) for more.
  prefs: []
  type: TYPE_NORMAL
- en: Enhancements
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### Using Numba in `rolling.apply` and `expanding.apply`'
  prefs: []
  type: TYPE_NORMAL
- en: 'We’ve added an `engine` keyword to [`apply()`](../reference/api/pandas.core.window.rolling.Rolling.apply.html#pandas.core.window.rolling.Rolling.apply
    "pandas.core.window.rolling.Rolling.apply") and [`apply()`](../reference/api/pandas.core.window.expanding.Expanding.apply.html#pandas.core.window.expanding.Expanding.apply
    "pandas.core.window.expanding.Expanding.apply") that allows the user to execute
    the routine using [Numba](https://numba.pydata.org/) instead of Cython. Using
    the Numba engine can yield significant performance gains if the apply function
    can operate on numpy arrays and the data set is larger (1 million rows or greater).
    For more details, see [rolling apply documentation](../user_guide/window.html#window-numba-engine)
    ([GH 28987](https://github.com/pandas-dev/pandas/issues/28987), [GH 30936](https://github.com/pandas-dev/pandas/issues/30936))  ###
    Defining custom windows for rolling operations'
  prefs: []
  type: TYPE_NORMAL
- en: 'We’ve added a [`pandas.api.indexers.BaseIndexer()`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer") class that allows users to define how window
    bounds are created during `rolling` operations. Users can define their own `get_window_bounds`
    method on a [`pandas.api.indexers.BaseIndexer()`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer") subclass that will generate the start and end
    indices used for each window during the rolling aggregation. For more details
    and example usage, see the [custom window rolling documentation](../user_guide/window.html#window-custom-rolling-window)  ###
    Converting to markdown'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve added [`to_markdown()`](../reference/api/pandas.DataFrame.to_markdown.html#pandas.DataFrame.to_markdown
    "pandas.DataFrame.to_markdown") for creating a markdown table ([GH 11052](https://github.com/pandas-dev/pandas/issues/11052))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Experimental new features
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### Experimental `NA` scalar to denote missing values'
  prefs: []
  type: TYPE_NORMAL
- en: 'A new `pd.NA` value (singleton) is introduced to represent scalar missing values.
    Up to now, pandas used several values to represent missing data: `np.nan` is used
    for this for float data, `np.nan` or `None` for object-dtype data and `pd.NaT`
    for datetime-like data. The goal of `pd.NA` is to provide a “missing” indicator
    that can be used consistently across data types. `pd.NA` is currently used by
    the nullable integer and boolean data types and the new string data type ([GH
    28095](https://github.com/pandas-dev/pandas/issues/28095)).'
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: 'Experimental: the behaviour of `pd.NA` can still change without warning.'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, creating a Series using the nullable integer dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Compared to `np.nan`, `pd.NA` behaves differently in certain operations. In
    addition to arithmetic operations, `pd.NA` also propagates as “missing” or “unknown”
    in comparison operations:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'For logical operations, `pd.NA` follows the rules of the [three-valued logic](https://en.wikipedia.org/wiki/Three-valued_logic)
    (or *Kleene logic*). For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'For more, see [NA section](../user_guide/missing_data.html#missing-data-na)
    in the user guide on missing data.  ### Dedicated string data type'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve added [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype"), an extension type dedicated to string data. Previously,
    strings were typically stored in object-dtype NumPy arrays. ([GH 29975](https://github.com/pandas-dev/pandas/issues/29975))
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: '`StringDtype` is currently considered experimental. The implementation and
    parts of the API may change without warning.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The `''string''` extension type solves several issues with object-dtype NumPy
    arrays:'
  prefs: []
  type: TYPE_NORMAL
- en: You can accidentally store a *mixture* of strings and non-strings in an `object`
    dtype array. A `StringArray` can only store strings.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`object` dtype breaks dtype-specific operations like [`DataFrame.select_dtypes()`](../reference/api/pandas.DataFrame.select_dtypes.html#pandas.DataFrame.select_dtypes
    "pandas.DataFrame.select_dtypes"). There isn’t a clear way to select *just* text
    while excluding non-text, but still object-dtype columns.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When reading code, the contents of an `object` dtype array is less clear than
    `string`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: You can use the alias `"string"` as well.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The usual string accessor methods work. Where appropriate, the return type of
    the Series or columns of a DataFrame will also have string dtype.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: String accessor methods returning integers will return a value with [`Int64Dtype`](../reference/api/pandas.Int64Dtype.html#pandas.Int64Dtype
    "pandas.Int64Dtype")
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'We recommend explicitly using the `string` data type when working with strings.
    See [Text data types](../user_guide/text.html#text-types) for more.  ### Boolean
    data type with missing values support'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve added [`BooleanDtype`](../reference/api/pandas.BooleanDtype.html#pandas.BooleanDtype
    "pandas.BooleanDtype") / [`BooleanArray`](../reference/api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray"), an extension type dedicated to boolean data that
    can hold missing values. The default `bool` data type based on a bool-dtype NumPy
    array, the column can only hold `True` or `False`, and not missing values. This
    new [`BooleanArray`](../reference/api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray") can store missing values as well by keeping track
    of this in a separate mask. ([GH 29555](https://github.com/pandas-dev/pandas/issues/29555),
    [GH 30095](https://github.com/pandas-dev/pandas/issues/30095), [GH 31131](https://github.com/pandas-dev/pandas/issues/31131))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: You can use the alias `"boolean"` as well.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]  ### Method `convert_dtypes` to ease use of supported extension dtypes'
  prefs: []
  type: TYPE_NORMAL
- en: In order to encourage use of the extension dtypes `StringDtype`, `BooleanDtype`,
    `Int64Dtype`, `Int32Dtype`, etc., that support `pd.NA`, the methods [`DataFrame.convert_dtypes()`](../reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes
    "pandas.DataFrame.convert_dtypes") and [`Series.convert_dtypes()`](../reference/api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes") have been introduced. ([GH 29752](https://github.com/pandas-dev/pandas/issues/29752))
    ([GH 30929](https://github.com/pandas-dev/pandas/issues/30929))
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'This is especially useful after reading in data using readers such as [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"). See [here](../user_guide/missing_data.html#missing-data-na-conversion)
    for a description.  ## Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") added the `max_colwidth` parameter to control when
    wide columns are truncated ([GH 9784](https://github.com/pandas-dev/pandas/issues/9784))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added the `na_value` argument to [`Series.to_numpy()`](../reference/api/pandas.Series.to_numpy.html#pandas.Series.to_numpy
    "pandas.Series.to_numpy"), `Index.to_numpy()` and [`DataFrame.to_numpy()`](../reference/api/pandas.DataFrame.to_numpy.html#pandas.DataFrame.to_numpy
    "pandas.DataFrame.to_numpy") to control the value used for missing data ([GH 30322](https://github.com/pandas-dev/pandas/issues/30322))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.from_product()`](../reference/api/pandas.MultiIndex.from_product.html#pandas.MultiIndex.from_product
    "pandas.MultiIndex.from_product") infers level names from inputs if not explicitly
    provided ([GH 27292](https://github.com/pandas-dev/pandas/issues/27292))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") now accepts `caption` and `label` arguments ([GH
    25436](https://github.com/pandas-dev/pandas/issues/25436))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrames with [nullable integer](../user_guide/integer_na.html#integer-na),
    the [new string dtype](../user_guide/text.html#text-types) and period data type
    can now be converted to `pyarrow` (>=0.15.0), which means that it is supported
    in writing to the Parquet file format when using the `pyarrow` engine ([GH 28368](https://github.com/pandas-dev/pandas/issues/28368)).
    Full roundtrip to parquet (writing and reading back in with [`to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") / [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet")) is supported starting with pyarrow >= 0.16 ([GH 20612](https://github.com/pandas-dev/pandas/issues/20612)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_parquet()` now appropriately handles the `schema` argument for user defined
    schemas in the pyarrow engine. ([GH 30270](https://github.com/pandas-dev/pandas/issues/30270))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") now accepts an `indent` integer argument to enable
    pretty printing of JSON output ([GH 12004](https://github.com/pandas-dev/pandas/issues/12004))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") can read Stata 119 dta files. ([GH 28250](https://github.com/pandas-dev/pandas/issues/28250))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented [`Window.var()`](../reference/api/pandas.core.window.rolling.Window.var.html#pandas.core.window.rolling.Window.var
    "pandas.core.window.rolling.Window.var") and [`Window.std()`](../reference/api/pandas.core.window.rolling.Window.std.html#pandas.core.window.rolling.Window.std
    "pandas.core.window.rolling.Window.std") functions ([GH 26597](https://github.com/pandas-dev/pandas/issues/26597))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `encoding` argument to [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") for non-ascii text ([GH 28766](https://github.com/pandas-dev/pandas/issues/28766))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `encoding` argument to [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") for non-ascii text ([GH 28663](https://github.com/pandas-dev/pandas/issues/28663))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Styler.background_gradient()` now accepts `vmin` and `vmax` arguments ([GH
    12145](https://github.com/pandas-dev/pandas/issues/12145))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Styler.format()` added the `na_rep` parameter to help format the missing values
    ([GH 21527](https://github.com/pandas-dev/pandas/issues/21527), [GH 28358](https://github.com/pandas-dev/pandas/issues/28358))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") now can read binary Excel (`.xlsb`) files by passing `engine=''pyxlsb''`.
    For more details and example usage, see the [Binary Excel files documentation](../user_guide/io.html#io-xlsb).
    Closes [GH 8540](https://github.com/pandas-dev/pandas/issues/8540).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `partition_cols` argument in [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") now accepts a string ([GH 27117](https://github.com/pandas-dev/pandas/issues/27117))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") now parses `NaN`, `Infinity` and `-Infinity` ([GH 12213](https://github.com/pandas-dev/pandas/issues/12213))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame constructor preserve `ExtensionArray` dtype with `ExtensionArray`
    ([GH 11363](https://github.com/pandas-dev/pandas/issues/11363))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") and [`Series.sort_values()`](../reference/api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values") have gained `ignore_index` keyword to be able to
    reset index after sorting ([GH 30114](https://github.com/pandas-dev/pandas/issues/30114))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index") and [`Series.sort_index()`](../reference/api/pandas.Series.sort_index.html#pandas.Series.sort_index
    "pandas.Series.sort_index") have gained `ignore_index` keyword to reset index
    ([GH 30114](https://github.com/pandas-dev/pandas/issues/30114))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.drop_duplicates()`](../reference/api/pandas.DataFrame.drop_duplicates.html#pandas.DataFrame.drop_duplicates
    "pandas.DataFrame.drop_duplicates") has gained `ignore_index` keyword to reset
    index ([GH 30114](https://github.com/pandas-dev/pandas/issues/30114))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added new writer for exporting Stata dta files in versions 118 and 119, `StataWriterUTF8`.
    These files formats support exporting strings containing Unicode characters. Format
    119 supports data sets with more than 32,767 variables ([GH 23573](https://github.com/pandas-dev/pandas/issues/23573),
    [GH 30959](https://github.com/pandas-dev/pandas/issues/30959))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") now accepts `collections.abc.Mapping` subclasses as a mapper
    ([GH 29733](https://github.com/pandas-dev/pandas/issues/29733))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added an experimental [`attrs`](../reference/api/pandas.DataFrame.attrs.html#pandas.DataFrame.attrs
    "pandas.DataFrame.attrs") for storing global metadata about a dataset ([GH 29062](https://github.com/pandas-dev/pandas/issues/29062))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Timestamp.fromisocalendar()` is now compatible with python 3.8 and above ([GH
    28115](https://github.com/pandas-dev/pandas/issues/28115))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle") and [`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle") now accept URL ([GH 30163](https://github.com/pandas-dev/pandas/issues/30163))  ##
    Backwards incompatible API changes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Avoid using names from `MultiIndex.levels`'
  prefs: []
  type: TYPE_NORMAL
- en: As part of a larger refactor to [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") the level names are now stored separately from the levels
    ([GH 27242](https://github.com/pandas-dev/pandas/issues/27242)). We recommend
    using [`MultiIndex.names`](../reference/api/pandas.MultiIndex.names.html#pandas.MultiIndex.names
    "pandas.MultiIndex.names") to access the names, and [`Index.set_names()`](../reference/api/pandas.Index.set_names.html#pandas.Index.set_names
    "pandas.Index.set_names") to update the names.
  prefs: []
  type: TYPE_NORMAL
- en: For backwards compatibility, you can still *access* the names via the levels.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: However, it is no longer possible to *update* the names of the `MultiIndex`
    via the level.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: To update, use `MultiIndex.set_names`, which returns a new `MultiIndex`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: New repr for [`IntervalArray`](../reference/api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray")
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`pandas.arrays.IntervalArray`](../reference/api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray") adopts a new `__repr__` in accordance with other
    array classes ([GH 25022](https://github.com/pandas-dev/pandas/issues/25022))'
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '`DataFrame.rename` now only accepts one positional argument'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.rename()`](../reference/api/pandas.DataFrame.rename.html#pandas.DataFrame.rename
    "pandas.DataFrame.rename") would previously accept positional arguments that would
    lead to ambiguous or undefined behavior. From pandas 1.0, only the very first
    argument, which maps labels to their new names along the default axis, is allowed
    to be passed by position ([GH 29136](https://github.com/pandas-dev/pandas/issues/29136)).'
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Note that errors will now be raised when conflicting or potentially ambiguous
    arguments are provided.
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: You can still change the axis along which the first positional argument is applied
    by supplying the `axis` keyword argument.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: If you would like to update both the index and column labels, be sure to use
    the respective keywords.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Extended verbose info output for [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.info()`](../reference/api/pandas.DataFrame.info.html#pandas.DataFrame.info
    "pandas.DataFrame.info") now shows line numbers for the columns summary ([GH 17304](https://github.com/pandas-dev/pandas/issues/17304))'
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: '[`pandas.array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    inference changes'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`pandas.array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    now infers pandas’ new extension types in several cases ([GH 29791](https://github.com/pandas-dev/pandas/issues/29791)):'
  prefs: []
  type: TYPE_NORMAL
- en: String data (including missing values) now returns a [`arrays.StringArray`](../reference/api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray").
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Integer data (including missing values) now returns a [`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray").
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Boolean data (including missing values) now returns the new [`arrays.BooleanArray`](../reference/api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray")
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: As a reminder, you can specify the `dtype` to disable all inference.
  prefs: []
  type: TYPE_NORMAL
- en: '[`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") now uses [`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA")'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") now uses [`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") rather than `numpy.nan` as its missing value marker ([GH 29964](https://github.com/pandas-dev/pandas/issues/29964)).'
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: This has a few API-breaking consequences.
  prefs: []
  type: TYPE_NORMAL
- en: '**Converting to a NumPy ndarray**'
  prefs: []
  type: TYPE_NORMAL
- en: When converting to a NumPy array missing values will be `pd.NA`, which cannot
    be converted to a float. So calling `np.asarray(integer_array, dtype="float")`
    will now raise.
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: Use `arrays.IntegerArray.to_numpy()` with an explicit `na_value` instead.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: '**Reductions can return** `pd.NA`'
  prefs: []
  type: TYPE_NORMAL
- en: When performing a reduction such as a sum with `skipna=False`, the result will
    now be `pd.NA` instead of `np.nan` in presence of missing values ([GH 30958](https://github.com/pandas-dev/pandas/issues/30958)).
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: '**value_counts returns a nullable integer dtype**'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts") with a nullable integer dtype now returns a nullable
    integer dtype for the values.'
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: See [NA semantics](../user_guide/missing_data.html#missing-data-na) for more
    on the differences between [`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") and `numpy.nan`.
  prefs: []
  type: TYPE_NORMAL
- en: '[`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") comparisons return [`arrays.BooleanArray`](../reference/api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray")'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Comparison operations on a [`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") now returns a [`arrays.BooleanArray`](../reference/api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray") rather than a NumPy array ([GH 29964](https://github.com/pandas-dev/pandas/issues/29964)).
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: Note that missing values now propagate, rather than always comparing unequal
    like `numpy.nan`. See [NA semantics](../user_guide/missing_data.html#missing-data-na)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: By default `Categorical.min()` now returns the minimum instead of np.nan
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") contains `np.nan`, `Categorical.min()` no longer return
    `np.nan` by default (skipna=True) ([GH 25303](https://github.com/pandas-dev/pandas/issues/25303))
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: Default dtype of empty [`pandas.Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Initialising an empty [`pandas.Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") without specifying a dtype will raise a `DeprecationWarning`
    now ([GH 17261](https://github.com/pandas-dev/pandas/issues/17261)). The default
    dtype will change from `float64` to `object` in future releases so that it is
    consistent with the behaviour of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index").
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: Result dtype inference changes for resample operations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The rules for the result dtype in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") aggregations have changed for extension types ([GH
    31359](https://github.com/pandas-dev/pandas/issues/31359)). Previously, pandas
    would attempt to convert the result back to the original dtype, falling back to
    the usual inference rules if that was not possible. Now, pandas will only return
    a result of the original dtype if the scalar values in the result are instances
    of the extension dtype’s scalar type.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: This fixes an inconsistency between `resample` and `groupby`. This also fixes
    a potential bug, where the **values** of the result might change depending on
    how the results are cast back to the original dtype.
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: '### Increased minimum version for Python'
  prefs: []
  type: TYPE_NORMAL
- en: 'pandas 1.0.0 supports Python 3.6.1 and higher ([GH 29212](https://github.com/pandas-dev/pandas/issues/29212)).  ###
    Increased minimum versions for dependencies'
  prefs: []
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated ([GH 29766](https://github.com/pandas-dev/pandas/issues/29766),
    [GH 29723](https://github.com/pandas-dev/pandas/issues/29723)). If installed,
    we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.13.3 | X |  |'
  prefs: []
  type: TYPE_TB
- en: '| pytz | 2015.4 | X |  |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.6.1 | X |  |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.2.1 |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.6.2 |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| pytest (dev) | 4.0.2 |  |  |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.3.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 0.2.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 3.8.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 2.2.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.46.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 2.5.7 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 0.13.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 0.7.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.4.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 0.3.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 0.19.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.1.4 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.8.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlrd | 1.1.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 0.9.8 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlwt | 1.2.0 |  |'
  prefs: []
  type: TYPE_TB
- en: See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: Build changes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: pandas has added a [pyproject.toml](https://www.python.org/dev/peps/pep-0517/)
    file and will no longer include cythonized files in the source distribution uploaded
    to PyPI ([GH 28341](https://github.com/pandas-dev/pandas/issues/28341), [GH 20775](https://github.com/pandas-dev/pandas/issues/20775)).
    If you’re installing a built distribution (wheel) or via conda, this shouldn’t
    have any effect on you. If you’re building pandas from source, you should no longer
    need to install Cython into your build environment before calling `pip install
    pandas`.
  prefs: []
  type: TYPE_NORMAL
- en: '### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") now raises on invalid operation
    names ([GH 27489](https://github.com/pandas-dev/pandas/issues/27489))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.api.types.infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") will now return “integer-na” for integer and `np.nan`
    mix ([GH 27283](https://github.com/pandas-dev/pandas/issues/27283))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.from_arrays()`](../reference/api/pandas.MultiIndex.from_arrays.html#pandas.MultiIndex.from_arrays
    "pandas.MultiIndex.from_arrays") will no longer infer names from arrays if `names=None`
    is explicitly provided ([GH 27292](https://github.com/pandas-dev/pandas/issues/27292))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In order to improve tab-completion, pandas does not include most deprecated
    attributes when introspecting a pandas object using `dir` (e.g. `dir(df)`). To
    see which attributes are excluded, see an object’s `_deprecations` attribute,
    for example `pd.DataFrame._deprecations` ([GH 28805](https://github.com/pandas-dev/pandas/issues/28805)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The returned dtype of [`unique()`](../reference/api/pandas.unique.html#pandas.unique
    "pandas.unique") now matches the input dtype. ([GH 27874](https://github.com/pandas-dev/pandas/issues/27874))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the default configuration value for `options.matplotlib.register_converters`
    from `True` to `"auto"` ([GH 18720](https://github.com/pandas-dev/pandas/issues/18720)).
    Now, pandas custom formatters will only be applied to plots created by pandas,
    through [`plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot"). Previously, pandas’ formatters would be applied to all
    plots created *after* a [`plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot"). See [units registration](#whatsnew-100-matplotlib-units)
    for more.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.dropna()`](../reference/api/pandas.Series.dropna.html#pandas.Series.dropna
    "pandas.Series.dropna") has dropped its `**kwargs` argument in favor of a single
    `how` parameter. Supplying anything else than `how` to `**kwargs` raised a `TypeError`
    previously ([GH 29388](https://github.com/pandas-dev/pandas/issues/29388))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When testing pandas, the new minimum required version of pytest is 5.0.1 ([GH
    29664](https://github.com/pandas-dev/pandas/issues/29664))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.str.__iter__()` was deprecated and will be removed in future releases
    ([GH 28277](https://github.com/pandas-dev/pandas/issues/28277)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Added `<NA>` to the list of default NA values for [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") ([GH 30821](https://github.com/pandas-dev/pandas/issues/30821))  ###
    Documentation improvements'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added new section on [Scaling to large datasets](../user_guide/scale.html#scale)
    ([GH 28315](https://github.com/pandas-dev/pandas/issues/28315)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Added sub-section on [Query MultiIndex](../user_guide/io.html#io-query-multi)
    for HDF5 datasets ([GH 28791](https://github.com/pandas-dev/pandas/issues/28791)).  ##
    Deprecations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.item()`](../reference/api/pandas.Series.item.html#pandas.Series.item
    "pandas.Series.item") and [`Index.item()`](../reference/api/pandas.Index.item.html#pandas.Index.item
    "pandas.Index.item") have been _undeprecated_ ([GH 29250](https://github.com/pandas-dev/pandas/issues/29250))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Index.set_value` has been deprecated. For a given index `idx`, array `arr`,
    value in `idx` of `idx_val` and a new value of `val`, `idx.set_value(arr, idx_val,
    val)` is equivalent to `arr[idx.get_loc(idx_val)] = val`, which should be used
    instead ([GH 28621](https://github.com/pandas-dev/pandas/issues/28621)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`is_extension_type()` is deprecated, `is_extension_array_dtype()` should be
    used instead ([GH 29457](https://github.com/pandas-dev/pandas/issues/29457))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval") keyword
    argument “truediv” is deprecated and will be removed in a future version ([GH
    29812](https://github.com/pandas-dev/pandas/issues/29812))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DateOffset.isAnchored()` and `DatetOffset.onOffset()` are deprecated and will
    be removed in a future version, use `DateOffset.is_anchored()` and `DateOffset.is_on_offset()`
    instead ([GH 30340](https://github.com/pandas-dev/pandas/issues/30340))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.tseries.frequencies.get_offset` is deprecated and will be removed in
    a future version, use `pandas.tseries.frequencies.to_offset` instead ([GH 4205](https://github.com/pandas-dev/pandas/issues/4205))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.take_nd()` and `CategoricalIndex.take_nd()` are deprecated, use
    `Categorical.take()` and `CategoricalIndex.take()` instead ([GH 27745](https://github.com/pandas-dev/pandas/issues/27745))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The parameter `numeric_only` of `Categorical.min()` and `Categorical.max()`
    is deprecated and replaced with `skipna` ([GH 25303](https://github.com/pandas-dev/pandas/issues/25303))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The parameter `label` in [`lreshape()`](../reference/api/pandas.lreshape.html#pandas.lreshape
    "pandas.lreshape") has been deprecated and will be removed in a future version
    ([GH 29742](https://github.com/pandas-dev/pandas/issues/29742))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.core.index` has been deprecated and will be removed in a future version,
    the public classes are available in the top-level namespace ([GH 19711](https://github.com/pandas-dev/pandas/issues/19711))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") is now exposed in the top-level namespace. Usage of `json_normalize`
    as `pandas.io.json.json_normalize` is now deprecated and it is recommended to
    use `json_normalize` as [`pandas.json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") instead ([GH 27586](https://github.com/pandas-dev/pandas/issues/27586)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `numpy` argument of [`pandas.read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") is deprecated ([GH 28512](https://github.com/pandas-dev/pandas/issues/28512)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata"), [`DataFrame.to_feather()`](../reference/api/pandas.DataFrame.to_feather.html#pandas.DataFrame.to_feather
    "pandas.DataFrame.to_feather"), and [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") argument “fname” is deprecated, use “path” instead
    ([GH 23574](https://github.com/pandas-dev/pandas/issues/23574))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The deprecated internal attributes `_start`, `_stop` and `_step` of [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") now raise a `FutureWarning` instead of a `DeprecationWarning`
    ([GH 26581](https://github.com/pandas-dev/pandas/issues/26581))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `pandas.util.testing` module has been deprecated. Use the public API in
    `pandas.testing` documented at [Assertion functions](../reference/testing.html#api-general-testing)
    ([GH 16232](https://github.com/pandas-dev/pandas/issues/16232)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.SparseArray` has been deprecated. Use `pandas.arrays.SparseArray` ([`arrays.SparseArray`](../reference/api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray")) instead. ([GH 30642](https://github.com/pandas-dev/pandas/issues/30642))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The parameter `is_copy` of [`Series.take()`](../reference/api/pandas.Series.take.html#pandas.Series.take
    "pandas.Series.take") and [`DataFrame.take()`](../reference/api/pandas.DataFrame.take.html#pandas.DataFrame.take
    "pandas.DataFrame.take") has been deprecated and will be removed in a future version.
    ([GH 27357](https://github.com/pandas-dev/pandas/issues/27357))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Support for multi-dimensional indexing (e.g. `index[:, None]`) on a [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") is deprecated and will be removed in a future version, convert
    to a numpy array before indexing instead ([GH 30588](https://github.com/pandas-dev/pandas/issues/30588))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `pandas.np` submodule is now deprecated. Import numpy directly instead ([GH
    30296](https://github.com/pandas-dev/pandas/issues/30296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `pandas.datetime` class is now deprecated. Import from `datetime` instead
    ([GH 30610](https://github.com/pandas-dev/pandas/issues/30610))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`diff`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff") will raise a `TypeError` rather than implicitly losing
    the dtype of extension types in the future. Convert to the correct dtype before
    calling `diff` instead ([GH 31025](https://github.com/pandas-dev/pandas/issues/31025))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Selecting Columns from a Grouped DataFrame**'
  prefs: []
  type: TYPE_NORMAL
- en: 'When selecting columns from a `DataFrameGroupBy` object, passing individual
    keys (or a tuple of keys) inside single brackets is deprecated, a list of items
    should be used instead. ([GH 23566](https://github.com/pandas-dev/pandas/issues/23566))
    For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]  ## Removal of prior version deprecations/changes'
  prefs: []
  type: TYPE_NORMAL
- en: '**Removed SparseSeries and SparseDataFrame**'
  prefs: []
  type: TYPE_NORMAL
- en: '`SparseSeries`, `SparseDataFrame` and the `DataFrame.to_sparse` method have
    been removed ([GH 28425](https://github.com/pandas-dev/pandas/issues/28425)).
    We recommend using a `Series` or `DataFrame` with sparse values instead.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Matplotlib unit registration**'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, pandas would register converters with matplotlib as a side effect
    of importing pandas ([GH 18720](https://github.com/pandas-dev/pandas/issues/18720)).
    This changed the output of plots made via matplotlib plots after pandas was imported,
    even if you were using matplotlib directly rather than [`plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot").
  prefs: []
  type: TYPE_NORMAL
- en: To use pandas formatters with a matplotlib plot, specify
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: Note that plots created by [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") and [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") *do* register the converters automatically. The only behavior
    change is when plotting a date-like object via `matplotlib.pyplot.plot` or `matplotlib.Axes.plot`.
    See [Custom formatters for timeseries plots](../user_guide/visualization.html#plotting-formatters)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: '**Other removals**'
  prefs: []
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “index” from [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata"), `StataReader`, and `StataReader.read()`, use “index_col”
    instead ([GH 17328](https://github.com/pandas-dev/pandas/issues/17328))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `StataReader.data` method, use `StataReader.read()` instead ([GH 9493](https://github.com/pandas-dev/pandas/issues/9493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `pandas.plotting._matplotlib.tsplot`, use [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") instead ([GH 19980](https://github.com/pandas-dev/pandas/issues/19980))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.tseries.converter.register` has been moved to [`pandas.plotting.register_matplotlib_converters()`](../reference/api/pandas.plotting.register_matplotlib_converters.html#pandas.plotting.register_matplotlib_converters
    "pandas.plotting.register_matplotlib_converters") ([GH 18307](https://github.com/pandas-dev/pandas/issues/18307))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") no longer accepts positional arguments, pass keyword arguments
    instead ([GH 30003](https://github.com/pandas-dev/pandas/issues/30003))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.hist()`](../reference/api/pandas.DataFrame.hist.html#pandas.DataFrame.hist
    "pandas.DataFrame.hist") and [`Series.hist()`](../reference/api/pandas.Series.hist.html#pandas.Series.hist
    "pandas.Series.hist") no longer allows `figsize="default"`, specify figure size
    by passinig a tuple instead ([GH 30003](https://github.com/pandas-dev/pandas/issues/30003))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Floordiv of integer-dtyped array by [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") now raises `TypeError` ([GH 21036](https://github.com/pandas-dev/pandas/issues/21036))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") and [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") no longer accept non-nanosecond dtype strings like “timedelta64”
    or “datetime64”, use “timedelta64[ns]” and “datetime64[ns]” instead ([GH 24806](https://github.com/pandas-dev/pandas/issues/24806))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the default “skipna” argument in [`pandas.api.types.infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") from `False` to `True` ([GH 24050](https://github.com/pandas-dev/pandas/issues/24050))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.ix` and `DataFrame.ix` ([GH 26438](https://github.com/pandas-dev/pandas/issues/26438))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Index.summary` ([GH 18217](https://github.com/pandas-dev/pandas/issues/18217))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “fastpath” from the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") constructor ([GH 23110](https://github.com/pandas-dev/pandas/issues/23110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.get_value`, `Series.set_value`, `DataFrame.get_value`, `DataFrame.set_value`
    ([GH 17739](https://github.com/pandas-dev/pandas/issues/17739))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.compound` and `DataFrame.compound` ([GH 26405](https://github.com/pandas-dev/pandas/issues/26405))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the default “inplace” argument in [`DataFrame.set_index()`](../reference/api/pandas.DataFrame.set_index.html#pandas.DataFrame.set_index
    "pandas.DataFrame.set_index") and [`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") from `None` to `False` ([GH 27600](https://github.com/pandas-dev/pandas/issues/27600))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.cat.categorical`, `Series.cat.index`, `Series.cat.name` ([GH
    24751](https://github.com/pandas-dev/pandas/issues/24751))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “box” from [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") and [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta"); in addition these now always returns [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex"), [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 24486](https://github.com/pandas-dev/pandas/issues/24486))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta"), [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta"), and [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") no longer allow “M”, “y”, or “Y” for the “unit” argument
    ([GH 23264](https://github.com/pandas-dev/pandas/issues/23264))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “time_rule” from (non-public) `offsets.generate_range`,
    which has been moved to `core.arrays._ranges.generate_range()` ([GH 24157](https://github.com/pandas-dev/pandas/issues/24157))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") or [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") with listlike indexers and missing labels will no longer
    reindex ([GH 17295](https://github.com/pandas-dev/pandas/issues/17295))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") and [`Series.to_excel()`](../reference/api/pandas.Series.to_excel.html#pandas.Series.to_excel
    "pandas.Series.to_excel") with non-existent columns will no longer reindex ([GH
    17295](https://github.com/pandas-dev/pandas/issues/17295))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “join_axes” from [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat"); use `reindex_like` on the result instead ([GH 22318](https://github.com/pandas-dev/pandas/issues/22318))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “by” from [`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index"), use [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") instead ([GH 10726](https://github.com/pandas-dev/pandas/issues/10726))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed support for nested renaming in [`DataFrame.aggregate()`](../reference/api/pandas.DataFrame.aggregate.html#pandas.DataFrame.aggregate
    "pandas.DataFrame.aggregate"), [`Series.aggregate()`](../reference/api/pandas.Series.aggregate.html#pandas.Series.aggregate
    "pandas.Series.aggregate"), [`core.groupby.DataFrameGroupBy.aggregate()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.aggregate.html#pandas.core.groupby.DataFrameGroupBy.aggregate
    "pandas.core.groupby.DataFrameGroupBy.aggregate"), [`core.groupby.SeriesGroupBy.aggregate()`](../reference/api/pandas.core.groupby.SeriesGroupBy.aggregate.html#pandas.core.groupby.SeriesGroupBy.aggregate
    "pandas.core.groupby.SeriesGroupBy.aggregate"), [`core.window.rolling.Rolling.aggregate()`](../reference/api/pandas.core.window.rolling.Rolling.aggregate.html#pandas.core.window.rolling.Rolling.aggregate
    "pandas.core.window.rolling.Rolling.aggregate") ([GH 18529](https://github.com/pandas-dev/pandas/issues/18529))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing `datetime64` data to [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") or `timedelta64` data to `DatetimeIndex` now raises `TypeError`
    ([GH 23539](https://github.com/pandas-dev/pandas/issues/23539), [GH 23937](https://github.com/pandas-dev/pandas/issues/23937))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing `int64` values to [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and a timezone now interprets the values as nanosecond
    timestamps in UTC, not wall times in the given timezone ([GH 24559](https://github.com/pandas-dev/pandas/issues/24559))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A tuple passed to [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") is now exclusively treated as a single key ([GH 18314](https://github.com/pandas-dev/pandas/issues/18314))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Index.contains`, use `key in index` instead ([GH 30103](https://github.com/pandas-dev/pandas/issues/30103))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Addition and subtraction of `int` or integer-arrays is no longer allowed in
    [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp"),
    [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex"), use `obj + n * obj.freq` instead of `obj + n` ([GH 22535](https://github.com/pandas-dev/pandas/issues/22535))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.ptp` ([GH 21614](https://github.com/pandas-dev/pandas/issues/21614))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.from_array` ([GH 18258](https://github.com/pandas-dev/pandas/issues/18258))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `DataFrame.from_items` ([GH 18458](https://github.com/pandas-dev/pandas/issues/18458))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `DataFrame.as_matrix`, `Series.as_matrix` ([GH 18458](https://github.com/pandas-dev/pandas/issues/18458))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.asobject` ([GH 18477](https://github.com/pandas-dev/pandas/issues/18477))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `DataFrame.as_blocks`, `Series.as_blocks`, `DataFrame.blocks`, `Series.blocks`
    ([GH 17656](https://github.com/pandas-dev/pandas/issues/17656))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.Series.str.cat()`](../reference/api/pandas.Series.str.cat.html#pandas.Series.str.cat
    "pandas.Series.str.cat") now defaults to aligning `others`, using `join=''left''`
    ([GH 27611](https://github.com/pandas-dev/pandas/issues/27611))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.Series.str.cat()`](../reference/api/pandas.Series.str.cat.html#pandas.Series.str.cat
    "pandas.Series.str.cat") does not accept list-likes *within* list-likes anymore
    ([GH 27611](https://github.com/pandas-dev/pandas/issues/27611))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") with `Categorical` dtype (or [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") with `Categorical` column) no longer allows setting
    new categories ([GH 24114](https://github.com/pandas-dev/pandas/issues/24114))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keywords “start”, “end”, and “periods” from
    the [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex"), and [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") constructors; use [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range"), [`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range"), and [`period_range()`](../reference/api/pandas.period_range.html#pandas.period_range
    "pandas.period_range") instead ([GH 23919](https://github.com/pandas-dev/pandas/issues/23919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “verify_integrity” from the [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") constructors ([GH 23919](https://github.com/pandas-dev/pandas/issues/23919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “fastpath” from `pandas.core.internals.blocks.make_block`
    ([GH 19265](https://github.com/pandas-dev/pandas/issues/19265))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “dtype” from `Block.make_block_same_class()`
    ([GH 19434](https://github.com/pandas-dev/pandas/issues/19434))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `ExtensionArray._formatting_values`. Use `ExtensionArray._formatter`
    instead. ([GH 23601](https://github.com/pandas-dev/pandas/issues/23601))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `MultiIndex.to_hierarchical` ([GH 21613](https://github.com/pandas-dev/pandas/issues/21613))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `MultiIndex.labels`, use [`MultiIndex.codes`](../reference/api/pandas.MultiIndex.codes.html#pandas.MultiIndex.codes
    "pandas.MultiIndex.codes") instead ([GH 23752](https://github.com/pandas-dev/pandas/issues/23752))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “labels” from the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") constructor, use “codes” instead ([GH 23752](https://github.com/pandas-dev/pandas/issues/23752))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `MultiIndex.set_labels`, use [`MultiIndex.set_codes()`](../reference/api/pandas.MultiIndex.set_codes.html#pandas.MultiIndex.set_codes
    "pandas.MultiIndex.set_codes") instead ([GH 23752](https://github.com/pandas-dev/pandas/issues/23752))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “labels” from [`MultiIndex.set_codes()`](../reference/api/pandas.MultiIndex.set_codes.html#pandas.MultiIndex.set_codes
    "pandas.MultiIndex.set_codes"), [`MultiIndex.copy()`](../reference/api/pandas.MultiIndex.copy.html#pandas.MultiIndex.copy
    "pandas.MultiIndex.copy"), [`MultiIndex.drop()`](../reference/api/pandas.MultiIndex.drop.html#pandas.MultiIndex.drop
    "pandas.MultiIndex.drop"), use “codes” instead ([GH 23752](https://github.com/pandas-dev/pandas/issues/23752))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed support for legacy HDF5 formats ([GH 29787](https://github.com/pandas-dev/pandas/issues/29787))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing a dtype alias (e.g. ‘datetime64[ns, UTC]’) to [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") is no longer allowed, use `DatetimeTZDtype.construct_from_string()`
    instead ([GH 23990](https://github.com/pandas-dev/pandas/issues/23990))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “skip_footer” from [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"); use “skipfooter” instead ([GH 18836](https://github.com/pandas-dev/pandas/issues/18836))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") no longer allows an integer value for the parameter `usecols`,
    instead pass a list of integers from 0 to `usecols` inclusive ([GH 23635](https://github.com/pandas-dev/pandas/issues/23635))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “convert_datetime64” from [`DataFrame.to_records()`](../reference/api/pandas.DataFrame.to_records.html#pandas.DataFrame.to_records
    "pandas.DataFrame.to_records") ([GH 18902](https://github.com/pandas-dev/pandas/issues/18902))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `IntervalIndex.from_intervals` in favor of the [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") constructor ([GH 19263](https://github.com/pandas-dev/pandas/issues/19263))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the default “keep_tz” argument in [`DatetimeIndex.to_series()`](../reference/api/pandas.DatetimeIndex.to_series.html#pandas.DatetimeIndex.to_series
    "pandas.DatetimeIndex.to_series") from `None` to `True` ([GH 23739](https://github.com/pandas-dev/pandas/issues/23739))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `api.types.is_period` and `api.types.is_datetimetz` ([GH 23917](https://github.com/pandas-dev/pandas/issues/23917))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ability to read pickles containing [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") instances created with pre-0.16 version of pandas has been
    removed ([GH 27538](https://github.com/pandas-dev/pandas/issues/27538))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `pandas.tseries.plotting.tsplot` ([GH 18627](https://github.com/pandas-dev/pandas/issues/18627))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keywords “reduce” and “broadcast” from [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") ([GH 18577](https://github.com/pandas-dev/pandas/issues/18577))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `assert_raises_regex` function in `pandas._testing`
    ([GH 29174](https://github.com/pandas-dev/pandas/issues/29174))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `FrozenNDArray` class in `pandas.core.indexes.frozen`
    ([GH 29335](https://github.com/pandas-dev/pandas/issues/29335))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “nthreads” from [`read_feather()`](../reference/api/pandas.read_feather.html#pandas.read_feather
    "pandas.read_feather"), use “use_threads” instead ([GH 23053](https://github.com/pandas-dev/pandas/issues/23053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Index.is_lexsorted_for_tuple` ([GH 29305](https://github.com/pandas-dev/pandas/issues/29305))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed support for nested renaming in [`DataFrame.aggregate()`](../reference/api/pandas.DataFrame.aggregate.html#pandas.DataFrame.aggregate
    "pandas.DataFrame.aggregate"), [`Series.aggregate()`](../reference/api/pandas.Series.aggregate.html#pandas.Series.aggregate
    "pandas.Series.aggregate"), [`core.groupby.DataFrameGroupBy.aggregate()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.aggregate.html#pandas.core.groupby.DataFrameGroupBy.aggregate
    "pandas.core.groupby.DataFrameGroupBy.aggregate"), [`core.groupby.SeriesGroupBy.aggregate()`](../reference/api/pandas.core.groupby.SeriesGroupBy.aggregate.html#pandas.core.groupby.SeriesGroupBy.aggregate
    "pandas.core.groupby.SeriesGroupBy.aggregate"), [`core.window.rolling.Rolling.aggregate()`](../reference/api/pandas.core.window.rolling.Rolling.aggregate.html#pandas.core.window.rolling.Rolling.aggregate
    "pandas.core.window.rolling.Rolling.aggregate") ([GH 29608](https://github.com/pandas-dev/pandas/issues/29608))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.valid`; use [`Series.dropna()`](../reference/api/pandas.Series.dropna.html#pandas.Series.dropna
    "pandas.Series.dropna") instead ([GH 18800](https://github.com/pandas-dev/pandas/issues/18800))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `DataFrame.is_copy`, `Series.is_copy` ([GH 18812](https://github.com/pandas-dev/pandas/issues/18812))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `DataFrame.get_ftype_counts`, `Series.get_ftype_counts` ([GH 18243](https://github.com/pandas-dev/pandas/issues/18243))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `DataFrame.ftypes`, `Series.ftypes`, `Series.ftype` ([GH 26744](https://github.com/pandas-dev/pandas/issues/26744))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Index.get_duplicates`, use `idx[idx.duplicated()].unique()` instead
    ([GH 20239](https://github.com/pandas-dev/pandas/issues/20239))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.clip_upper`, `Series.clip_lower`, `DataFrame.clip_upper`, `DataFrame.clip_lower`
    ([GH 24203](https://github.com/pandas-dev/pandas/issues/24203))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the ability to alter [`DatetimeIndex.freq`](../reference/api/pandas.DatetimeIndex.freq.html#pandas.DatetimeIndex.freq
    "pandas.DatetimeIndex.freq"), `TimedeltaIndex.freq`, or [`PeriodIndex.freq`](../reference/api/pandas.PeriodIndex.freq.html#pandas.PeriodIndex.freq
    "pandas.PeriodIndex.freq") ([GH 20772](https://github.com/pandas-dev/pandas/issues/20772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `DatetimeIndex.offset` ([GH 20730](https://github.com/pandas-dev/pandas/issues/20730))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `DatetimeIndex.asobject`, `TimedeltaIndex.asobject`, `PeriodIndex.asobject`,
    use `astype(object)` instead ([GH 29801](https://github.com/pandas-dev/pandas/issues/29801))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “order” from [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") ([GH 19751](https://github.com/pandas-dev/pandas/issues/19751))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “encoding” from [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") and [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") ([GH 21400](https://github.com/pandas-dev/pandas/issues/21400))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the default “sort” argument in [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") from `None` to `False` ([GH 20613](https://github.com/pandas-dev/pandas/issues/20613))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “raise_conflict” from [`DataFrame.update()`](../reference/api/pandas.DataFrame.update.html#pandas.DataFrame.update
    "pandas.DataFrame.update"), use “errors” instead ([GH 23585](https://github.com/pandas-dev/pandas/issues/23585))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “n” from `DatetimeIndex.shift()`,
    `TimedeltaIndex.shift()`, `PeriodIndex.shift()`, use “periods” instead ([GH 22458](https://github.com/pandas-dev/pandas/issues/22458))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keywords “how”, “fill_method”, and “limit”
    from [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") ([GH 30139](https://github.com/pandas-dev/pandas/issues/30139))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing an integer to [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") or [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") with `timedelta64[ns]` dtype now raises `TypeError`
    ([GH 24694](https://github.com/pandas-dev/pandas/issues/24694))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing multiple axes to [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") is no longer supported ([GH 20995](https://github.com/pandas-dev/pandas/issues/20995))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.nonzero`, use `to_numpy().nonzero()` instead ([GH 24048](https://github.com/pandas-dev/pandas/issues/24048))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing floating dtype `codes` to [`Categorical.from_codes()`](../reference/api/pandas.Categorical.from_codes.html#pandas.Categorical.from_codes
    "pandas.Categorical.from_codes") is no longer supported, pass `codes.astype(np.int64)`
    instead ([GH 21775](https://github.com/pandas-dev/pandas/issues/21775))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “pat” from [`Series.str.partition()`](../reference/api/pandas.Series.str.partition.html#pandas.Series.str.partition
    "pandas.Series.str.partition") and [`Series.str.rpartition()`](../reference/api/pandas.Series.str.rpartition.html#pandas.Series.str.rpartition
    "pandas.Series.str.rpartition"), use “sep” instead ([GH 23767](https://github.com/pandas-dev/pandas/issues/23767))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.put` ([GH 27106](https://github.com/pandas-dev/pandas/issues/27106))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.real`, `Series.imag` ([GH 27106](https://github.com/pandas-dev/pandas/issues/27106))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.to_dense`, `DataFrame.to_dense` ([GH 26684](https://github.com/pandas-dev/pandas/issues/26684))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Index.dtype_str`, use `str(index.dtype)` instead ([GH 27106](https://github.com/pandas-dev/pandas/issues/27106))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.ravel()` returns a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") instead of a `ndarray` ([GH 27199](https://github.com/pandas-dev/pandas/issues/27199))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The ‘outer’ method on Numpy ufuncs, e.g. `np.subtract.outer` operating on [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") objects is no longer supported, and will raise `NotImplementedError`
    ([GH 27198](https://github.com/pandas-dev/pandas/issues/27198))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.get_dtype_counts` and `DataFrame.get_dtype_counts` ([GH 27145](https://github.com/pandas-dev/pandas/issues/27145))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the default “fill_value” argument in `Categorical.take()` from `True`
    to `False` ([GH 20841](https://github.com/pandas-dev/pandas/issues/20841))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the default value for the `raw` argument in `Series.rolling().apply()`,
    `DataFrame.rolling().apply()`, `Series.expanding().apply()`, and `DataFrame.expanding().apply()`
    from `None` to `False` ([GH 20584](https://github.com/pandas-dev/pandas/issues/20584))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated behavior of [`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin") and [`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax"), use [`Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin") and [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax") for the old behavior ([GH 16955](https://github.com/pandas-dev/pandas/issues/16955))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing a tz-aware `datetime.datetime` or [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") into the [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") constructor with the `tz` argument now raises a `ValueError`
    ([GH 23621](https://github.com/pandas-dev/pandas/issues/23621))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.base`, `Index.base`, `Categorical.base`, `Series.flags`, `Index.flags`,
    `PeriodArray.flags`, `Series.strides`, `Index.strides`, `Series.itemsize`, `Index.itemsize`,
    `Series.data`, `Index.data` ([GH 20721](https://github.com/pandas-dev/pandas/issues/20721))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed [`Timedelta.resolution()`](../reference/api/pandas.Timedelta.resolution.html#pandas.Timedelta.resolution
    "pandas.Timedelta.resolution") to match the behavior of the standard library `datetime.timedelta.resolution`,
    for the old behavior, use `Timedelta.resolution_string()` ([GH 26839](https://github.com/pandas-dev/pandas/issues/26839))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Timestamp.weekday_name`, `DatetimeIndex.weekday_name`, and `Series.dt.weekday_name`
    ([GH 18164](https://github.com/pandas-dev/pandas/issues/18164))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “errors” in [`Timestamp.tz_localize()`](../reference/api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize"), [`DatetimeIndex.tz_localize()`](../reference/api/pandas.DatetimeIndex.tz_localize.html#pandas.DatetimeIndex.tz_localize
    "pandas.DatetimeIndex.tz_localize"), and [`Series.tz_localize()`](../reference/api/pandas.Series.tz_localize.html#pandas.Series.tz_localize
    "pandas.Series.tz_localize") ([GH 22644](https://github.com/pandas-dev/pandas/issues/22644))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the default “ordered” argument in [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") from `None` to `False` ([GH 26336](https://github.com/pandas-dev/pandas/issues/26336))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") and [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") now require “labels” as the first argument and “axis”
    as an optional named parameter ([GH 30089](https://github.com/pandas-dev/pandas/issues/30089))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `to_msgpack`, `read_msgpack`, `DataFrame.to_msgpack`, `Series.to_msgpack`
    ([GH 27103](https://github.com/pandas-dev/pandas/issues/27103))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.compress` ([GH 21930](https://github.com/pandas-dev/pandas/issues/21930))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “fill_value” from `Categorical.fillna()`,
    use “value” instead ([GH 19269](https://github.com/pandas-dev/pandas/issues/19269))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “data” from `andrews_curves()`, use
    “frame” instead ([GH 6956](https://github.com/pandas-dev/pandas/issues/6956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “data” from `parallel_coordinates()`,
    use “frame” instead ([GH 6956](https://github.com/pandas-dev/pandas/issues/6956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “colors” from `parallel_coordinates()`,
    use “color” instead ([GH 6956](https://github.com/pandas-dev/pandas/issues/6956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keywords “verbose” and “private_key” from
    [`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq "pandas.read_gbq")
    ([GH 30200](https://github.com/pandas-dev/pandas/issues/30200))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Calling `np.array` and `np.asarray` on tz-aware [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") will now return an object array of tz-aware [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") ([GH 24596](https://github.com/pandas-dev/pandas/issues/24596))  ##
    Performance improvements'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") arithmetic and comparison operations with scalars ([GH 24990](https://github.com/pandas-dev/pandas/issues/24990),
    [GH 29853](https://github.com/pandas-dev/pandas/issues/29853))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in indexing with a non-unique [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") ([GH 27489](https://github.com/pandas-dev/pandas/issues/27489))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `MultiIndex.is_monotonic` ([GH 27495](https://github.com/pandas-dev/pandas/issues/27495))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`cut()`](../reference/api/pandas.cut.html#pandas.cut
    "pandas.cut") when `bins` is an [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") ([GH 27668](https://github.com/pandas-dev/pandas/issues/27668))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when initializing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") using a `range` ([GH 30171](https://github.com/pandas-dev/pandas/issues/30171))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr") when `method` is `"spearman"` ([GH 28139](https://github.com/pandas-dev/pandas/issues/28139))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") when provided a list of values to replace ([GH 28099](https://github.com/pandas-dev/pandas/issues/28099))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.select_dtypes()`](../reference/api/pandas.DataFrame.select_dtypes.html#pandas.DataFrame.select_dtypes
    "pandas.DataFrame.select_dtypes") by using vectorization instead of iterating
    over a loop ([GH 28317](https://github.com/pandas-dev/pandas/issues/28317))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `Categorical.searchsorted()` and `CategoricalIndex.searchsorted()`
    ([GH 28795](https://github.com/pandas-dev/pandas/issues/28795))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when comparing a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") with a scalar and the scalar is not found in the categories
    ([GH 29750](https://github.com/pandas-dev/pandas/issues/29750))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when checking if values in a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") are equal, equal or larger or larger than a given scalar.
    The improvement is not present if checking if the [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") is less than or less than or equal than the scalar ([GH
    29820](https://github.com/pandas-dev/pandas/issues/29820))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Index.equals()`](../reference/api/pandas.Index.equals.html#pandas.Index.equals
    "pandas.Index.equals") and `MultiIndex.equals()` ([GH 29134](https://github.com/pandas-dev/pandas/issues/29134))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Performance improvement in [`infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") when `skipna` is `True` ([GH 28814](https://github.com/pandas-dev/pandas/issues/28814))  ##
    Bug fixes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Added test to assert the `fillna()` raises the correct `ValueError` message
    when the value isn’t a value from categories ([GH 13628](https://github.com/pandas-dev/pandas/issues/13628))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.astype()` where `NaN` values were handled incorrectly when
    casting to int ([GH 28406](https://github.com/pandas-dev/pandas/issues/28406))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") would fail when the targets contained duplicates, and
    wouldn’t fail if the source contained duplicates ([GH 28107](https://github.com/pandas-dev/pandas/issues/28107))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.astype()` not allowing for casting to extension dtypes ([GH
    28668](https://github.com/pandas-dev/pandas/issues/28668))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    was unable to join on categorical and extension dtype columns ([GH 28668](https://github.com/pandas-dev/pandas/issues/28668))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.searchsorted()` and `CategoricalIndex.searchsorted()` now work
    on unordered categoricals also ([GH 21667](https://github.com/pandas-dev/pandas/issues/21667))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added test to assert roundtripping to parquet with [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") or [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") will preserve Categorical dtypes for string types ([GH
    27955](https://github.com/pandas-dev/pandas/issues/27955))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the error message in `Categorical.remove_categories()` to always show
    the invalid removals as a set ([GH 28669](https://github.com/pandas-dev/pandas/issues/28669))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using date accessors on a categorical dtyped [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") of datetimes was not returning an object of the same type as
    if one used the `str.()` / `dt.()` on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") of that type. E.g. when accessing [`Series.dt.tz_localize()`](../reference/api/pandas.Series.dt.tz_localize.html#pandas.Series.dt.tz_localize
    "pandas.Series.dt.tz_localize") on a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") with duplicate entries, the accessor was skipping duplicates
    ([GH 27952](https://github.com/pandas-dev/pandas/issues/27952))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") that would give incorrect results on categorical data
    ([GH 26988](https://github.com/pandas-dev/pandas/issues/26988))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where calling `Categorical.min()` or `Categorical.max()` on an empty Categorical
    would raise a numpy exception ([GH 30227](https://github.com/pandas-dev/pandas/issues/30227))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The following methods now also correctly output values for unobserved categories
    when called through `groupby(..., observed=False)` ([GH 17605](https://github.com/pandas-dev/pandas/issues/17605))
    * [`core.groupby.SeriesGroupBy.count()`](../reference/api/pandas.core.groupby.SeriesGroupBy.count.html#pandas.core.groupby.SeriesGroupBy.count
    "pandas.core.groupby.SeriesGroupBy.count") * [`core.groupby.SeriesGroupBy.size()`](../reference/api/pandas.core.groupby.SeriesGroupBy.size.html#pandas.core.groupby.SeriesGroupBy.size
    "pandas.core.groupby.SeriesGroupBy.size") * [`core.groupby.SeriesGroupBy.nunique()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nunique.html#pandas.core.groupby.SeriesGroupBy.nunique
    "pandas.core.groupby.SeriesGroupBy.nunique") * [`core.groupby.SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` incorrectly casting `np.timedelta64("NaT")` to
    `np.datetime64("NaT")` when inserting into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with datetime64 dtype ([GH 27311](https://github.com/pandas-dev/pandas/issues/27311))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.dt()`](../reference/api/pandas.Series.dt.html#pandas.Series.dt
    "pandas.Series.dt") property lookups when the underlying data is read-only ([GH
    27529](https://github.com/pandas-dev/pandas/issues/27529))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `HDFStore.__getitem__` incorrectly reading tz attribute created in Python
    2 ([GH 26443](https://github.com/pandas-dev/pandas/issues/26443))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") where passing arrays of malformed `str` with errors=”coerce”
    could incorrectly lead to raising `ValueError` ([GH 28299](https://github.com/pandas-dev/pandas/issues/28299))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`core.groupby.SeriesGroupBy.nunique()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nunique.html#pandas.core.groupby.SeriesGroupBy.nunique
    "pandas.core.groupby.SeriesGroupBy.nunique") where `NaT` values were interfering
    with the count of unique values ([GH 27951](https://github.com/pandas-dev/pandas/issues/27951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") subtraction when subtracting a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") from a `np.datetime64` object incorrectly raising `TypeError`
    ([GH 28286](https://github.com/pandas-dev/pandas/issues/28286))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Addition and subtraction of integer or integer-dtype arrays with [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") will now raise `NullFrequencyError` instead of `ValueError`
    ([GH 28268](https://github.com/pandas-dev/pandas/issues/28268))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    with integer dtype failing to raise `TypeError` when adding or subtracting a `np.datetime64`
    object ([GH 28080](https://github.com/pandas-dev/pandas/issues/28080))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype"), [`Index.astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype"), and [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") failing to handle `NaT` when casting to an integer
    dtype ([GH 28492](https://github.com/pandas-dev/pandas/issues/28492))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Week` with `weekday` incorrectly raising `AttributeError` instead of
    `TypeError` when adding or subtracting an invalid type ([GH 28530](https://github.com/pandas-dev/pandas/issues/28530))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") arithmetic operations when operating with a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with dtype `'timedelta64[ns]'` ([GH 28049](https://github.com/pandas-dev/pandas/issues/28049))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `core.groupby.generic.SeriesGroupBy.apply()` raising `ValueError` when
    a column in the original DataFrame is a datetime and the column labels are not
    standard integers ([GH 28247](https://github.com/pandas-dev/pandas/issues/28247))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas._config.localization.get_locales()` where the `locales -a` encodes
    the locales list as windows-1252 ([GH 23638](https://github.com/pandas-dev/pandas/issues/23638),
    [GH 24760](https://github.com/pandas-dev/pandas/issues/24760), [GH 27368](https://github.com/pandas-dev/pandas/issues/27368))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.var()`](../reference/api/pandas.Series.var.html#pandas.Series.var
    "pandas.Series.var") failing to raise `TypeError` when called with `timedelta64[ns]`
    dtype ([GH 28289](https://github.com/pandas-dev/pandas/issues/28289))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex.strftime()`](../reference/api/pandas.DatetimeIndex.strftime.html#pandas.DatetimeIndex.strftime
    "pandas.DatetimeIndex.strftime") and [`Series.dt.strftime()`](../reference/api/pandas.Series.dt.strftime.html#pandas.Series.dt.strftime
    "pandas.Series.dt.strftime") where `NaT` was converted to the string `'NaT'` instead
    of `np.nan` ([GH 29578](https://github.com/pandas-dev/pandas/issues/29578))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in masking datetime-like arrays with a boolean mask of an incorrect length
    not raising an `IndexError` ([GH 30308](https://github.com/pandas-dev/pandas/issues/30308))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.resolution`](../reference/api/pandas.Timestamp.resolution.html#pandas.Timestamp.resolution
    "pandas.Timestamp.resolution") being a property instead of a class attribute ([GH
    29910](https://github.com/pandas-dev/pandas/issues/29910))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when called with `None` raising `TypeError` instead of returning
    `NaT` ([GH 30011](https://github.com/pandas-dev/pandas/issues/30011))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") failing for `deque` objects when using `cache=True` (the
    default) ([GH 29403](https://github.com/pandas-dev/pandas/issues/29403))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.item()`](../reference/api/pandas.Series.item.html#pandas.Series.item
    "pandas.Series.item") with `datetime64` or `timedelta64` dtype, `DatetimeIndex.item()`,
    and `TimedeltaIndex.item()` returning an integer instead of a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") or [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") ([GH 30175](https://github.com/pandas-dev/pandas/issues/30175))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") addition when adding a non-optimized `DateOffset` incorrectly
    dropping timezone information ([GH 30336](https://github.com/pandas-dev/pandas/issues/30336))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") where attempting to drop non-existent values from a DatetimeIndex
    would yield a confusing error message ([GH 30399](https://github.com/pandas-dev/pandas/issues/30399))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` would remove the timezone-awareness of new data
    ([GH 30238](https://github.com/pandas-dev/pandas/issues/30238))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.cummin()`](../reference/api/pandas.Series.cummin.html#pandas.Series.cummin
    "pandas.Series.cummin") and [`Series.cummax()`](../reference/api/pandas.Series.cummax.html#pandas.Series.cummax
    "pandas.Series.cummax") with timezone-aware dtype incorrectly dropping its timezone
    ([GH 15553](https://github.com/pandas-dev/pandas/issues/15553))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeArray`, `TimedeltaArray`, and `PeriodArray` where inplace addition
    and subtraction did not actually operate inplace ([GH 24115](https://github.com/pandas-dev/pandas/issues/24115))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when called with `Series` storing `IntegerArray` raising
    `TypeError` instead of returning `Series` ([GH 30050](https://github.com/pandas-dev/pandas/issues/30050))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") with custom business hours as `freq` and given number of
    `periods` ([GH 30593](https://github.com/pandas-dev/pandas/issues/30593))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") comparisons with incorrectly casting integers to [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") objects, inconsistent with the [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") comparison behavior ([GH 30722](https://github.com/pandas-dev/pandas/issues/30722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.insert()` raising a `ValueError` instead of a `TypeError`
    when trying to insert a timezone-aware [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") into a timezone-naive [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), or vice-versa ([GH 30806](https://github.com/pandas-dev/pandas/issues/30806))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in subtracting a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") or `TimedeltaArray` from a `np.datetime64` object ([GH
    29558](https://github.com/pandas-dev/pandas/issues/29558))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile") with zero-column [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") incorrectly raising ([GH 23925](https://github.com/pandas-dev/pandas/issues/23925))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    flex inequality comparisons methods ([`DataFrame.lt()`](../reference/api/pandas.DataFrame.lt.html#pandas.DataFrame.lt
    "pandas.DataFrame.lt"), [`DataFrame.le()`](../reference/api/pandas.DataFrame.le.html#pandas.DataFrame.le
    "pandas.DataFrame.le"), [`DataFrame.gt()`](../reference/api/pandas.DataFrame.gt.html#pandas.DataFrame.gt
    "pandas.DataFrame.gt"), [`DataFrame.ge()`](../reference/api/pandas.DataFrame.ge.html#pandas.DataFrame.ge
    "pandas.DataFrame.ge")) with object-dtype and `complex` entries failing to raise
    `TypeError` like their [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") counterparts ([GH 28079](https://github.com/pandas-dev/pandas/issues/28079))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") logical operations (`&`, `|`, `^`) not matching [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") behavior by filling NA values ([GH 28741](https://github.com/pandas-dev/pandas/issues/28741))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") where specifying axis by name references variable
    before it is assigned ([GH 29142](https://github.com/pandas-dev/pandas/issues/29142))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.var()`](../reference/api/pandas.Series.var.html#pandas.Series.var
    "pandas.Series.var") not computing the right value with a nullable integer dtype
    series not passing through ddof argument ([GH 29128](https://github.com/pandas-dev/pandas/issues/29128))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when using `frac` > 1 and `replace` = False ([GH 27451](https://github.com/pandas-dev/pandas/issues/27451))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in numeric indexes resulted in it being possible to instantiate an `Int64Index`,
    `UInt64Index`, or `Float64Index` with an invalid dtype (e.g. datetime-like) ([GH
    29539](https://github.com/pandas-dev/pandas/issues/29539))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `UInt64Index` precision loss while constructing from a list with values
    in the `np.uint64` range ([GH 29526](https://github.com/pandas-dev/pandas/issues/29526))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `NumericIndex` construction that caused indexing to fail when integers
    in the `np.uint64` range were used ([GH 28023](https://github.com/pandas-dev/pandas/issues/28023))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `NumericIndex` construction that caused `UInt64Index` to be casted to
    `Float64Index` when integers in the `np.uint64` range were used to index a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 28279](https://github.com/pandas-dev/pandas/issues/28279))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") when using method=`index` with an unsorted index,
    would previously return incorrect results. ([GH 21037](https://github.com/pandas-dev/pandas/issues/21037))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.round()`](../reference/api/pandas.DataFrame.round.html#pandas.DataFrame.round
    "pandas.DataFrame.round") where a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") of [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") columns would incorrectly raise a `TypeError` ([GH 30063](https://github.com/pandas-dev/pandas/issues/30063))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.pct_change()`](../reference/api/pandas.Series.pct_change.html#pandas.Series.pct_change
    "pandas.Series.pct_change") and [`DataFrame.pct_change()`](../reference/api/pandas.DataFrame.pct_change.html#pandas.DataFrame.pct_change
    "pandas.DataFrame.pct_change") when there are duplicated indices ([GH 30463](https://github.com/pandas-dev/pandas/issues/30463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") cumulative operations (e.g. cumsum, cummax) incorrect casting
    to object-dtype ([GH 19296](https://github.com/pandas-dev/pandas/issues/19296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`diff`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff") losing the dtype for extension types ([GH 30889](https://github.com/pandas-dev/pandas/issues/30889))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.diff`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff") raising an `IndexError` when one of the columns was a
    nullable integer dtype ([GH 30967](https://github.com/pandas-dev/pandas/issues/30967))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Calling [`Series.str.isalnum()`](../reference/api/pandas.Series.str.isalnum.html#pandas.Series.str.isalnum
    "pandas.Series.str.isalnum") (and other “ismethods”) on an empty `Series` would
    return an `object` dtype instead of `bool` ([GH 29624](https://github.com/pandas-dev/pandas/issues/29624))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.get_indexer()`](../reference/api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer") where a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") or [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") `target` would incorrectly raise a `TypeError` ([GH
    30063](https://github.com/pandas-dev/pandas/issues/30063))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas.core.dtypes.cast.infer_dtype_from_scalar` where passing `pandas_dtype=True`
    did not infer [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") ([GH 30337](https://github.com/pandas-dev/pandas/issues/30337))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor where constructing a `Series` from a `list` of [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") objects resulted in `object` dtype instead of [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") ([GH 23563](https://github.com/pandas-dev/pandas/issues/23563))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") where the `kind` attribute was incorrectly set as `None`
    instead of `"O"` ([GH 30568](https://github.com/pandas-dev/pandas/issues/30568))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex"), [`IntervalArray`](../reference/api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray"), and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with interval data where equality comparisons were incorrect
    ([GH 24112](https://github.com/pandas-dev/pandas/issues/24112))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in assignment using a reverse slicer ([GH 26939](https://github.com/pandas-dev/pandas/issues/26939))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.explode()`](../reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode
    "pandas.DataFrame.explode") would duplicate frame in the presence of duplicates
    in the index ([GH 28010](https://github.com/pandas-dev/pandas/issues/28010))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in reindexing a [`PeriodIndex()`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") with another type of index that contained a `Period` ([GH
    28323](https://github.com/pandas-dev/pandas/issues/28323)) ([GH 28337](https://github.com/pandas-dev/pandas/issues/28337))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fix assignment of column via `.loc` with numpy non-ns datetime type ([GH 27395](https://github.com/pandas-dev/pandas/issues/27395))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Float64Index.astype()` where `np.inf` was not handled properly when
    casting to an integer dtype ([GH 28475](https://github.com/pandas-dev/pandas/issues/28475))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") could fail when the left contained duplicates ([GH 28257](https://github.com/pandas-dev/pandas/issues/28257))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when indexing with `.loc` where the index was a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") with non-string categories didn’t work ([GH 17569](https://github.com/pandas-dev/pandas/issues/17569),
    [GH 30225](https://github.com/pandas-dev/pandas/issues/30225))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.get_indexer_non_unique()`](../reference/api/pandas.Index.get_indexer_non_unique.html#pandas.Index.get_indexer_non_unique
    "pandas.Index.get_indexer_non_unique") could fail with `TypeError` in some cases,
    such as when searching for ints in a string index ([GH 28257](https://github.com/pandas-dev/pandas/issues/28257))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Float64Index.get_loc()` incorrectly raising `TypeError` instead of `KeyError`
    ([GH 29189](https://github.com/pandas-dev/pandas/issues/29189))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") with incorrect dtype when setting Categorical value in
    1-row DataFrame ([GH 25495](https://github.com/pandas-dev/pandas/issues/25495))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") can’t find missing values when input includes missing
    values ([GH 19132](https://github.com/pandas-dev/pandas/issues/19132))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` incorrectly assigning values with boolean indexer
    when the length of new data matches the number of `True` values and new data is
    not a `Series` or an `np.array` ([GH 30567](https://github.com/pandas-dev/pandas/issues/30567))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing with a [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") incorrectly accepting integers representing years, use e.g.
    `ser.loc["2007"]` instead of `ser.loc[2007]` ([GH 30763](https://github.com/pandas-dev/pandas/issues/30763))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Constructor for [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") verifies that the given `sortorder` is compatible with the
    actual `lexsort_depth` if `verify_integrity` parameter is `True` (the default)
    ([GH 28735](https://github.com/pandas-dev/pandas/issues/28735))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Series and MultiIndex `.drop` with `MultiIndex` raise exception if labels not
    in given in level ([GH 8594](https://github.com/pandas-dev/pandas/issues/8594))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IO
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now accepts binary mode file buffers when using the Python csv engine ([GH 23779](https://github.com/pandas-dev/pandas/issues/23779))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") where using a Tuple as a column or index value and
    using `orient="columns"` or `orient="index"` would produce invalid JSON ([GH 20500](https://github.com/pandas-dev/pandas/issues/20500))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve infinity parsing. [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") now interprets `Infinity`, `+Infinity`, `-Infinity` as floating
    point values ([GH 10065](https://github.com/pandas-dev/pandas/issues/10065))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") where values were truncated when the length of `na_rep`
    was shorter than the text input data. ([GH 25099](https://github.com/pandas-dev/pandas/issues/25099))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") where values were truncated using display options
    instead of outputting the full content ([GH 9784](https://github.com/pandas-dev/pandas/issues/9784))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") where a datetime column label would not be written
    out in ISO format with `orient="table"` ([GH 28130](https://github.com/pandas-dev/pandas/issues/28130))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") where writing to GCS would fail with `engine='fastparquet'`
    if the file did not already exist ([GH 28326](https://github.com/pandas-dev/pandas/issues/28326))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") closing stores that it didn’t open when Exceptions are raised
    ([GH 28699](https://github.com/pandas-dev/pandas/issues/28699))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.read_json()` where using `orient="index"` would not maintain
    the order ([GH 28557](https://github.com/pandas-dev/pandas/issues/28557))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") where the length of the `formatters` argument was
    not verified ([GH 28469](https://github.com/pandas-dev/pandas/issues/28469))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.read_excel()` with `engine='ods'` when `sheet_name` argument
    references a non-existent sheet ([GH 27676](https://github.com/pandas-dev/pandas/issues/27676))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.io.formats.style.Styler()`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") formatting for floating values not displaying
    decimals correctly ([GH 13257](https://github.com/pandas-dev/pandas/issues/13257))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") when using `formatters=<list>` and `max_cols` together.
    ([GH 25955](https://github.com/pandas-dev/pandas/issues/25955))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Styler.background_gradient()` not able to work with dtype `Int64` ([GH
    28869](https://github.com/pandas-dev/pandas/issues/28869))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_clipboard()`](../reference/api/pandas.DataFrame.to_clipboard.html#pandas.DataFrame.to_clipboard
    "pandas.DataFrame.to_clipboard") which did not work reliably in ipython ([GH 22707](https://github.com/pandas-dev/pandas/issues/22707))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") where default encoding was not set to `utf-8` ([GH 29565](https://github.com/pandas-dev/pandas/issues/29565))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `PythonParser` where str and bytes were being mixed when dealing with
    the decimal field ([GH 29650](https://github.com/pandas-dev/pandas/issues/29650))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq "pandas.read_gbq")
    now accepts `progress_bar_type` to display progress bar while the data downloads.
    ([GH 29857](https://github.com/pandas-dev/pandas/issues/29857))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas.io.json.json_normalize()` where a missing value in the location
    specified by `record_path` would raise a `TypeError` ([GH 30148](https://github.com/pandas-dev/pandas/issues/30148))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") now accepts binary data ([GH 15914](https://github.com/pandas-dev/pandas/issues/15914))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") in which encoding handling was limited to just the string `utf-16`
    for the C engine ([GH 24130](https://github.com/pandas-dev/pandas/issues/24130))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") not able to plot boolean values ([GH 23719](https://github.com/pandas-dev/pandas/issues/23719))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") not able to plot when no rows ([GH 27758](https://github.com/pandas-dev/pandas/issues/27758))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") producing incorrect legend markers when plotting multiple
    series on the same axis ([GH 18222](https://github.com/pandas-dev/pandas/issues/18222))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") when `kind='box'` and data contains datetime or timedelta
    data. These types are now automatically dropped ([GH 22799](https://github.com/pandas-dev/pandas/issues/22799))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.line()`](../reference/api/pandas.DataFrame.plot.line.html#pandas.DataFrame.plot.line
    "pandas.DataFrame.plot.line") and [`DataFrame.plot.area()`](../reference/api/pandas.DataFrame.plot.area.html#pandas.DataFrame.plot.area
    "pandas.DataFrame.plot.area") produce wrong xlim in x-axis ([GH 27686](https://github.com/pandas-dev/pandas/issues/27686),
    [GH 25160](https://github.com/pandas-dev/pandas/issues/25160), [GH 24784](https://github.com/pandas-dev/pandas/issues/24784))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`DataFrame.boxplot()`](../reference/api/pandas.DataFrame.boxplot.html#pandas.DataFrame.boxplot
    "pandas.DataFrame.boxplot") would not accept a `color` parameter like [`DataFrame.plot.box()`](../reference/api/pandas.DataFrame.plot.box.html#pandas.DataFrame.plot.box
    "pandas.DataFrame.plot.box") ([GH 26214](https://github.com/pandas-dev/pandas/issues/26214))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the `xticks` argument being ignored for [`DataFrame.plot.bar()`](../reference/api/pandas.DataFrame.plot.bar.html#pandas.DataFrame.plot.bar
    "pandas.DataFrame.plot.bar") ([GH 14119](https://github.com/pandas-dev/pandas/issues/14119))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`set_option()`](../reference/api/pandas.set_option.html#pandas.set_option
    "pandas.set_option") now validates that the plot backend provided to `''plotting.backend''`
    implements the backend when the option is set, rather than when a plot is created
    ([GH 28163](https://github.com/pandas-dev/pandas/issues/28163))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") now allow a `backend` keyword argument to allow changing
    between backends in one session ([GH 28619](https://github.com/pandas-dev/pandas/issues/28619)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in color validation incorrectly raising for non-color styles ([GH 29122](https://github.com/pandas-dev/pandas/issues/29122)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow [`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") to plot `objects` and `datetime` type data ([GH
    18755](https://github.com/pandas-dev/pandas/issues/18755), [GH 30391](https://github.com/pandas-dev/pandas/issues/30391))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.hist()`](../reference/api/pandas.DataFrame.hist.html#pandas.DataFrame.hist
    "pandas.DataFrame.hist"), `xrot=0` does not work with `by` and subplots ([GH 30288](https://github.com/pandas-dev/pandas/issues/30288)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GroupBy/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`core.groupby.DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") only showing output from a single
    group when function returns an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 28652](https://github.com/pandas-dev/pandas/issues/28652))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") with multiple groups where an `IndexError` would be
    raised if any group contained all NA values ([GH 20519](https://github.com/pandas-dev/pandas/issues/20519))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Resampler.size()`](../reference/api/pandas.core.resample.Resampler.size.html#pandas.core.resample.Resampler.size
    "pandas.core.resample.Resampler.size") and [`Resampler.count()`](../reference/api/pandas.core.resample.Resampler.count.html#pandas.core.resample.Resampler.count
    "pandas.core.resample.Resampler.count") returning wrong dtype when used with an
    empty [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    ([GH 28427](https://github.com/pandas-dev/pandas/issues/28427))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") not allowing for rolling over datetimes when `axis=1`
    ([GH 28192](https://github.com/pandas-dev/pandas/issues/28192))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") not allowing rolling over multi-index levels ([GH
    15584](https://github.com/pandas-dev/pandas/issues/15584)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") not allowing rolling on monotonic decreasing time
    indexes ([GH 19248](https://github.com/pandas-dev/pandas/issues/19248)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") not offering selection by column name when `axis=1`
    ([GH 27614](https://github.com/pandas-dev/pandas/issues/27614))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `core.groupby.DataFrameGroupby.agg()` not able to use lambda function
    with named aggregation ([GH 27519](https://github.com/pandas-dev/pandas/issues/27519))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") losing column name information when grouping by a
    categorical column ([GH 28787](https://github.com/pandas-dev/pandas/issues/28787))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove error raised due to duplicated input functions in named aggregation in
    [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby"). Previously error will be raised if the same function
    is applied on the same column and now it is allowed if new assigned names are
    different. ([GH 28426](https://github.com/pandas-dev/pandas/issues/28426))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`core.groupby.SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") will be able to handle the case
    even when the [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper") makes empty groups ([GH 28479](https://github.com/pandas-dev/pandas/issues/28479))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`core.window.rolling.Rolling.quantile()`](../reference/api/pandas.core.window.rolling.Rolling.quantile.html#pandas.core.window.rolling.Rolling.quantile
    "pandas.core.window.rolling.Rolling.quantile") ignoring `interpolation` keyword
    argument when used within a groupby ([GH 28779](https://github.com/pandas-dev/pandas/issues/28779))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") where `any`, `all`, `nunique` and transform functions
    would incorrectly handle duplicate column labels ([GH 21668](https://github.com/pandas-dev/pandas/issues/21668))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`core.groupby.DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") with timezone-aware datetime64 column
    incorrectly casting results to the original dtype ([GH 29641](https://github.com/pandas-dev/pandas/issues/29641))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") when using axis=1 and having a single level columns
    index ([GH 30208](https://github.com/pandas-dev/pandas/issues/30208))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") when using nunique on axis=1 ([GH 30253](https://github.com/pandas-dev/pandas/issues/30253))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile") with multiple list-like q value
    and integer column names ([GH 30289](https://github.com/pandas-dev/pandas/issues/30289))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.pct_change()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.pct_change.html#pandas.core.groupby.DataFrameGroupBy.pct_change
    "pandas.core.groupby.DataFrameGroupBy.pct_change") and [`SeriesGroupBy.pct_change()`](../reference/api/pandas.core.groupby.SeriesGroupBy.pct_change.html#pandas.core.groupby.SeriesGroupBy.pct_change
    "pandas.core.groupby.SeriesGroupBy.pct_change") causes `TypeError` when `fill_method`
    is `None` ([GH 30463](https://github.com/pandas-dev/pandas/issues/30463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Rolling.count()` and `Expanding.count()` argument where `min_periods`
    was ignored ([GH 26996](https://github.com/pandas-dev/pandas/issues/26996))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") that caused incorrect output with empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 28202](https://github.com/pandas-dev/pandas/issues/28202),
    [GH 21959](https://github.com/pandas-dev/pandas/issues/21959))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") not handling non-unique indexes correctly when creating
    MultiIndex ([GH 28301](https://github.com/pandas-dev/pandas/issues/28301))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") not returning correct type `float` when `margins=True` and
    `aggfunc='mean'` ([GH 24893](https://github.com/pandas-dev/pandas/issues/24893))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") could not use [`datetime.timedelta`](https://docs.python.org/3/library/datetime.html#datetime.timedelta
    "(in Python v3.12)") for `tolerance` kwarg ([GH 28098](https://github.com/pandas-dev/pandas/issues/28098))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge"),
    did not append suffixes correctly with MultiIndex ([GH 28518](https://github.com/pandas-dev/pandas/issues/28518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`qcut()`](../reference/api/pandas.qcut.html#pandas.qcut "pandas.qcut") and
    [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") now handle
    boolean input ([GH 20303](https://github.com/pandas-dev/pandas/issues/20303))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fix to ensure all int dtypes can be used in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") when using a tolerance value. Previously every non-int64
    type would raise an erroneous `MergeError` ([GH 28870](https://github.com/pandas-dev/pandas/issues/28870)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Better error message in [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") when `columns` isn’t a list-like value ([GH 28383](https://github.com/pandas-dev/pandas/issues/28383))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.join()`](../reference/api/pandas.Index.join.html#pandas.Index.join
    "pandas.Index.join") that caused infinite recursion error for mismatched `MultiIndex`
    name orders. ([GH 25760](https://github.com/pandas-dev/pandas/issues/25760), [GH
    28956](https://github.com/pandas-dev/pandas/issues/28956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug [`Series.pct_change()`](../reference/api/pandas.Series.pct_change.html#pandas.Series.pct_change
    "pandas.Series.pct_change") where supplying an anchored frequency would throw
    a `ValueError` ([GH 28664](https://github.com/pandas-dev/pandas/issues/28664))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`DataFrame.equals()`](../reference/api/pandas.DataFrame.equals.html#pandas.DataFrame.equals
    "pandas.DataFrame.equals") returned True incorrectly in some cases when two DataFrames
    had the same columns in different orders ([GH 28839](https://github.com/pandas-dev/pandas/issues/28839))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") that caused non-numeric replacer’s dtype not respected
    ([GH 26632](https://github.com/pandas-dev/pandas/issues/26632))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt")
    where supplying mixed strings and numeric values for `id_vars` or `value_vars`
    would incorrectly raise a `ValueError` ([GH 29718](https://github.com/pandas-dev/pandas/issues/29718))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dtypes are now preserved when transposing a `DataFrame` where each column is
    the same extension dtype ([GH 30091](https://github.com/pandas-dev/pandas/issues/30091))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") merging on a tz-aware `left_index` and `right_on` a tz-aware
    column ([GH 29864](https://github.com/pandas-dev/pandas/issues/29864))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message and docstring in [`cut()`](../reference/api/pandas.cut.html#pandas.cut
    "pandas.cut") and [`qcut()`](../reference/api/pandas.qcut.html#pandas.qcut "pandas.qcut")
    when `labels=True` ([GH 13318](https://github.com/pandas-dev/pandas/issues/13318))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in missing `fill_na` parameter to [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") with list of levels ([GH 30740](https://github.com/pandas-dev/pandas/issues/30740))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `SparseDataFrame` arithmetic operations incorrectly casting inputs to
    float ([GH 28107](https://github.com/pandas-dev/pandas/issues/28107))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.sparse` returning a `Series` when there was a column named
    `sparse` rather than the accessor ([GH 30758](https://github.com/pandas-dev/pandas/issues/30758))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed `operator.xor()` with a boolean-dtype `SparseArray`. Now returns a sparse
    result, rather than object dtype ([GH 31025](https://github.com/pandas-dev/pandas/issues/31025))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `arrays.PandasArray` when setting a scalar string ([GH 28118](https://github.com/pandas-dev/pandas/issues/28118),
    [GH 28150](https://github.com/pandas-dev/pandas/issues/28150)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where nullable integers could not be compared to strings ([GH 28930](https://github.com/pandas-dev/pandas/issues/28930))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor raised `ValueError` with list-like data and `dtype`
    specified ([GH 30280](https://github.com/pandas-dev/pandas/issues/30280))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Trying to set the `display.precision`, `display.max_rows` or `display.max_columns`
    using [`set_option()`](../reference/api/pandas.set_option.html#pandas.set_option
    "pandas.set_option") to anything but a `None` or a positive int will raise a `ValueError`
    ([GH 23348](https://github.com/pandas-dev/pandas/issues/23348))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") with overlapping keys in a nested dictionary will
    no longer raise, now matching the behavior of a flat dictionary ([GH 27660](https://github.com/pandas-dev/pandas/issues/27660))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") and [`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv") now support dicts as `compression` argument with key `''method''`
    being the compression method and others as additional compression options when
    the compression method is `''zip''`. ([GH 26023](https://github.com/pandas-dev/pandas/issues/26023))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.diff()`](../reference/api/pandas.Series.diff.html#pandas.Series.diff
    "pandas.Series.diff") where a boolean series would incorrectly raise a `TypeError`
    ([GH 17294](https://github.com/pandas-dev/pandas/issues/17294))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.append()` will no longer raise a `TypeError` when passed a tuple of
    `Series` ([GH 28410](https://github.com/pandas-dev/pandas/issues/28410))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fix corrupted error message when calling `pandas.libs._json.encode()` on a 0d
    array ([GH 18878](https://github.com/pandas-dev/pandas/issues/18878))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Backtick quoting in [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") and [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") can now also be used to use invalid identifiers like
    names that start with a digit, are python keywords, or are using single character
    operators. ([GH 27017](https://github.com/pandas-dev/pandas/issues/27017))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.core.util.hashing.hash_pandas_object` where arrays containing tuples
    were incorrectly treated as non-hashable ([GH 28969](https://github.com/pandas-dev/pandas/issues/28969))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` that raised `IndexError` when appending with empty
    list ([GH 28769](https://github.com/pandas-dev/pandas/issues/28769))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fix `AbstractHolidayCalendar` to return correct results for years after 2030
    (now goes up to 2200) ([GH 27790](https://github.com/pandas-dev/pandas/issues/27790))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed [`IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") returning `inf` rather than `NaN` for operations
    dividing by `0` ([GH 27398](https://github.com/pandas-dev/pandas/issues/27398))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed `pow` operations for [`IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") when the other value is `0` or `1` ([GH 29997](https://github.com/pandas-dev/pandas/issues/29997))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.count()`](../reference/api/pandas.Series.count.html#pandas.Series.count
    "pandas.Series.count") raises if use_inf_as_na is enabled ([GH 29478](https://github.com/pandas-dev/pandas/issues/29478))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    where a non-hashable name could be set without raising `TypeError` ([GH 29069](https://github.com/pandas-dev/pandas/issues/29069))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor when passing a 2D `ndarray` and an extension dtype
    ([GH 12513](https://github.com/pandas-dev/pandas/issues/12513))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") when supplied a series with a `dtype="string"` and
    a `na_rep`, the `na_rep` was being truncated to 2 characters. ([GH 29975](https://github.com/pandas-dev/pandas/issues/29975))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`DataFrame.itertuples()`](../reference/api/pandas.DataFrame.itertuples.html#pandas.DataFrame.itertuples
    "pandas.DataFrame.itertuples") would incorrectly determine whether or not namedtuples
    could be used for dataframes of 255 columns ([GH 28282](https://github.com/pandas-dev/pandas/issues/28282))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Handle nested NumPy `object` arrays in [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") for ExtensionArray implementations ([GH
    30841](https://github.com/pandas-dev/pandas/issues/30841))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    constructor incorrectly allowing 2-dimensional input arrays ([GH 13601](https://github.com/pandas-dev/pandas/issues/13601),
    [GH 27125](https://github.com/pandas-dev/pandas/issues/27125))  ## Contributors'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A total of 308 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: Aaditya Panikath +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abdullah İhsan Seçer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abhijeet Krishnan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam J. Stewart
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam Klaum +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Addison Lynch
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aivengoe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alastair James +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Albert Villanova del Moral
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Kirko +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alfredo Granja +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allen Downey
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alp Arıbal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andreas Buhr +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Munch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Angela Ambroz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aniruddha Bhattacharjee +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ankit Dhankhar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antonio Andraues Jr +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arda Kosar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Asish Mahapatra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Austin Hackett +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avi Kelman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AyowoleT +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bas Nijholt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben Thayer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bharat Raghunathan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bhavani Ravi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bhuvana KA +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Big Head
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blake Hawkins +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bobae Kim +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brett Naul
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brian Wignall
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bruno P. Kinoshita +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bryant Moscon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cesar H +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Stadler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Zimmerman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christopher Whelan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clemens Brunner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clemens Tolboom +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connor Charles +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Hähnke +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Saxton
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Darin Plutchok +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dave Hughes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Stansby
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DavidRosen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dean +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deepan Das +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deepyaman Datta
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DorAmram +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dorothy Kabarozi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Drew Heenan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eliza Mae Saret +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Elle +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Endre Mark Borza +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eric Brassell +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eric Wong +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eunseop Jeong +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eyden Villanueva +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Felix Divo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ForTimeBeing +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Francesco Truzzi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gabriel Corona +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gabriel Monteiro +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Galuh Sahid +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Georgi Baychev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gina
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GiuPassarelli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Grigorios Giannakopoulos +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guilherme Leite +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guilherme Salomé +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gyeongjae Choi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Harshavardhan Bachina +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Harutaka Kawamura +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hassan Kibirige
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hielke Walinga
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hubert
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hugh Kelley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ian Eaves +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ignacio Santolin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Igor Filippov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Irv Lustig
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Isaac Virshup +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ivan Bessarabov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JMBurley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jack Bicknell +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jacob Buckheit +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Koch
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Pipek +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Škoda +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan-Philip Gehrcke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jasper J.F. van den Bosch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Javad +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeremy Schendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeroen Kant +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jesse Pardue +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jethro Cao +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jiang Yue
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jiaxiang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jihyung Moon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jimmy Callin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jinyang Zhou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joao Victor Martinelli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joaq Almirante +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John G Evans +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John Ward +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonathan Larkin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josh Dimarsky +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joshua Smith +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josiah Baker +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julia Signell +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jung Dong Ho +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justin Cole +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justin Zheng
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kaiqi Dong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Karthigeyan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Katherine Younglove +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Katrin Leinweber
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kee Chong Tan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keith Kraus +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Nguyen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kisekka David +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Koushik +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kyle Boone +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kyle McCahill +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Laura Collard, PhD +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LiuSeeker +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Louis Huynh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lucas Scarlato Astur +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luiz Gustavo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luke +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luke Shepard +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MKhalusova +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mabel Villalba
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maciej J +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mak Sze Chun
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Manu NALEPA +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Garcia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Gorelli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Neumann +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Winkel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martina G. Vilas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mateusz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Tan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Max Bolingbroke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Max Chen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MeeseeksMachine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Miguel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MinGyo Jung +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mohamed Amine ZGHAL +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mohit Anand +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MomIsBestFriend +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Naomi Bonnin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nathan Abel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nico Cernek +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nigel Markey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Noritada Kobayashi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oktay Sabak +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oliver Hofkens +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oluokun Adedayo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Osman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oğuzhan Öğreden +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas Development Team +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patrik Hlobil +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul Lee +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul Siegel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Petr Baev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pietro Battiston
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prakhar Pandey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Puneeth K +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Raghav +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rajat +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rajhans Jadhao +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rajiv Bharadwaj +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rik-de-Kort +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roei.r
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rohit Sanjay +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ronan Lamy +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roshni +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roymprog +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rushabh Vasani +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ryan Grout +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ryan Nazareth
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Samesh Lakhotia +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Samuel Sinayoko
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Samyak Jain +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sarah Donehower +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sarah Masud +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Saul Shanabrook +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scott Cole +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SdgJlbl +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Seb +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sergei Ivko +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shadi Akiki
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shorokhov Sergey
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Siddhesh Poyarekar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sidharthan Nair +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Gibbons
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Hawkins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon-Martin Schröder +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sofiane Mahiou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sourav kumar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Souvik Mandal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Soyoun Kim +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparkle Russell-Puleri +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Srinivas Reddy Thatiparthy (శ్రీనివాస్ రెడ్డి తాటిపర్తి)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stuart Berg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sumanau Sareen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Szymon Bednarek +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tambe Tabitha Achere +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tan Tran
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tang Heyi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tanmay Daripa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tanya Jain
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terji Petersen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Li +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tirth Jain +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tola A +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Augspurger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tommy Lynch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tomoyuki Suzuki +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tony Lorenzo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unprocessable +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Uwe L. Korn
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vaibhav Vishal
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Victoria Zdanovskaya +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vijayant +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vishwak Srinivasan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: WANG Aiyong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wenhuan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wes McKinney
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Will Ayd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Will Holmgren
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Ayd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Blan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wouter Overmeire
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wuraola Oyewusi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: YaOzI +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yash Shukla +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yu Wang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yusei Tahara +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alexander135 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alimcmaster1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: avelineg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bganglia +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bolkedebruin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bravech +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: chinhwee +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cruzzoe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dalgarno +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: daniellebrown +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: danielplawrence
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: est271 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: francisco souza +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ganevgv +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: garanews +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gfyoung
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: h-vetinari
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: hasnain2808 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ianzur +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jalbritt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jeschwar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jlamborn324 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: joy-rosie +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kernc
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: killerontherun1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: krey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lexy-lixinyu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lucyleeow +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lukasbk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maheshbapatu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mck619 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nathalier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: naveenkaushik2504 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nlepleux +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nrebena
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ohad83 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pilkibun
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pqzx +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: proost +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pv8493013j +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: qudade +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rhstanton +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rmunjal29 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sangarshanan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sardonick +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: saskakarsi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: shaido987 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ssikdar1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: steveayers124 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tadashigaki +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: timcera +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tlaytongoogle +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tobycheese
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tonywu1999 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tsvikas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: yogendrasoni +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: zys5945 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New deprecation policy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Starting with pandas 1.0.0, pandas will adopt a variant of [SemVer](https://semver.org)
    to version releases. Briefly,
  prefs: []
  type: TYPE_NORMAL
- en: Deprecations will be introduced in minor releases (e.g. 1.1.0, 1.2.0, 2.1.0,
    …)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecations will be enforced in major releases (e.g. 1.0.0, 2.0.0, 3.0.0, …)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: API-breaking changes will be made only in major releases (except for experimental
    features)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: See [Version policy](../development/policies.html#policies-version) for more.
  prefs: []
  type: TYPE_NORMAL
- en: Enhancements
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### Using Numba in `rolling.apply` and `expanding.apply`'
  prefs: []
  type: TYPE_NORMAL
- en: 'We’ve added an `engine` keyword to [`apply()`](../reference/api/pandas.core.window.rolling.Rolling.apply.html#pandas.core.window.rolling.Rolling.apply
    "pandas.core.window.rolling.Rolling.apply") and [`apply()`](../reference/api/pandas.core.window.expanding.Expanding.apply.html#pandas.core.window.expanding.Expanding.apply
    "pandas.core.window.expanding.Expanding.apply") that allows the user to execute
    the routine using [Numba](https://numba.pydata.org/) instead of Cython. Using
    the Numba engine can yield significant performance gains if the apply function
    can operate on numpy arrays and the data set is larger (1 million rows or greater).
    For more details, see [rolling apply documentation](../user_guide/window.html#window-numba-engine)
    ([GH 28987](https://github.com/pandas-dev/pandas/issues/28987), [GH 30936](https://github.com/pandas-dev/pandas/issues/30936))  ###
    Defining custom windows for rolling operations'
  prefs: []
  type: TYPE_NORMAL
- en: 'We’ve added a [`pandas.api.indexers.BaseIndexer()`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer") class that allows users to define how window
    bounds are created during `rolling` operations. Users can define their own `get_window_bounds`
    method on a [`pandas.api.indexers.BaseIndexer()`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer") subclass that will generate the start and end
    indices used for each window during the rolling aggregation. For more details
    and example usage, see the [custom window rolling documentation](../user_guide/window.html#window-custom-rolling-window)  ###
    Converting to markdown'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve added [`to_markdown()`](../reference/api/pandas.DataFrame.to_markdown.html#pandas.DataFrame.to_markdown
    "pandas.DataFrame.to_markdown") for creating a markdown table ([GH 11052](https://github.com/pandas-dev/pandas/issues/11052))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]  ### Using Numba in `rolling.apply` and `expanding.apply`'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve added an `engine` keyword to [`apply()`](../reference/api/pandas.core.window.rolling.Rolling.apply.html#pandas.core.window.rolling.Rolling.apply
    "pandas.core.window.rolling.Rolling.apply") and [`apply()`](../reference/api/pandas.core.window.expanding.Expanding.apply.html#pandas.core.window.expanding.Expanding.apply
    "pandas.core.window.expanding.Expanding.apply") that allows the user to execute
    the routine using [Numba](https://numba.pydata.org/) instead of Cython. Using
    the Numba engine can yield significant performance gains if the apply function
    can operate on numpy arrays and the data set is larger (1 million rows or greater).
    For more details, see [rolling apply documentation](../user_guide/window.html#window-numba-engine)
    ([GH 28987](https://github.com/pandas-dev/pandas/issues/28987), [GH 30936](https://github.com/pandas-dev/pandas/issues/30936))
  prefs: []
  type: TYPE_NORMAL
- en: '### Defining custom windows for rolling operations'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve added a [`pandas.api.indexers.BaseIndexer()`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer") class that allows users to define how window
    bounds are created during `rolling` operations. Users can define their own `get_window_bounds`
    method on a [`pandas.api.indexers.BaseIndexer()`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer") subclass that will generate the start and end
    indices used for each window during the rolling aggregation. For more details
    and example usage, see the [custom window rolling documentation](../user_guide/window.html#window-custom-rolling-window)
  prefs: []
  type: TYPE_NORMAL
- en: '### Converting to markdown'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve added [`to_markdown()`](../reference/api/pandas.DataFrame.to_markdown.html#pandas.DataFrame.to_markdown
    "pandas.DataFrame.to_markdown") for creating a markdown table ([GH 11052](https://github.com/pandas-dev/pandas/issues/11052))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: Experimental new features
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### Experimental `NA` scalar to denote missing values'
  prefs: []
  type: TYPE_NORMAL
- en: 'A new `pd.NA` value (singleton) is introduced to represent scalar missing values.
    Up to now, pandas used several values to represent missing data: `np.nan` is used
    for this for float data, `np.nan` or `None` for object-dtype data and `pd.NaT`
    for datetime-like data. The goal of `pd.NA` is to provide a “missing” indicator
    that can be used consistently across data types. `pd.NA` is currently used by
    the nullable integer and boolean data types and the new string data type ([GH
    28095](https://github.com/pandas-dev/pandas/issues/28095)).'
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: 'Experimental: the behaviour of `pd.NA` can still change without warning.'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, creating a Series using the nullable integer dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: 'Compared to `np.nan`, `pd.NA` behaves differently in certain operations. In
    addition to arithmetic operations, `pd.NA` also propagates as “missing” or “unknown”
    in comparison operations:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: 'For logical operations, `pd.NA` follows the rules of the [three-valued logic](https://en.wikipedia.org/wiki/Three-valued_logic)
    (or *Kleene logic*). For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: 'For more, see [NA section](../user_guide/missing_data.html#missing-data-na)
    in the user guide on missing data.  ### Dedicated string data type'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve added [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype"), an extension type dedicated to string data. Previously,
    strings were typically stored in object-dtype NumPy arrays. ([GH 29975](https://github.com/pandas-dev/pandas/issues/29975))
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: '`StringDtype` is currently considered experimental. The implementation and
    parts of the API may change without warning.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The `''string''` extension type solves several issues with object-dtype NumPy
    arrays:'
  prefs: []
  type: TYPE_NORMAL
- en: You can accidentally store a *mixture* of strings and non-strings in an `object`
    dtype array. A `StringArray` can only store strings.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`object` dtype breaks dtype-specific operations like [`DataFrame.select_dtypes()`](../reference/api/pandas.DataFrame.select_dtypes.html#pandas.DataFrame.select_dtypes
    "pandas.DataFrame.select_dtypes"). There isn’t a clear way to select *just* text
    while excluding non-text, but still object-dtype columns.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When reading code, the contents of an `object` dtype array is less clear than
    `string`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: You can use the alias `"string"` as well.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: The usual string accessor methods work. Where appropriate, the return type of
    the Series or columns of a DataFrame will also have string dtype.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: String accessor methods returning integers will return a value with [`Int64Dtype`](../reference/api/pandas.Int64Dtype.html#pandas.Int64Dtype
    "pandas.Int64Dtype")
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: 'We recommend explicitly using the `string` data type when working with strings.
    See [Text data types](../user_guide/text.html#text-types) for more.  ### Boolean
    data type with missing values support'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve added [`BooleanDtype`](../reference/api/pandas.BooleanDtype.html#pandas.BooleanDtype
    "pandas.BooleanDtype") / [`BooleanArray`](../reference/api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray"), an extension type dedicated to boolean data that
    can hold missing values. The default `bool` data type based on a bool-dtype NumPy
    array, the column can only hold `True` or `False`, and not missing values. This
    new [`BooleanArray`](../reference/api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray") can store missing values as well by keeping track
    of this in a separate mask. ([GH 29555](https://github.com/pandas-dev/pandas/issues/29555),
    [GH 30095](https://github.com/pandas-dev/pandas/issues/30095), [GH 31131](https://github.com/pandas-dev/pandas/issues/31131))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: You can use the alias `"boolean"` as well.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]  ### Method `convert_dtypes` to ease use of supported extension dtypes'
  prefs: []
  type: TYPE_NORMAL
- en: In order to encourage use of the extension dtypes `StringDtype`, `BooleanDtype`,
    `Int64Dtype`, `Int32Dtype`, etc., that support `pd.NA`, the methods [`DataFrame.convert_dtypes()`](../reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes
    "pandas.DataFrame.convert_dtypes") and [`Series.convert_dtypes()`](../reference/api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes") have been introduced. ([GH 29752](https://github.com/pandas-dev/pandas/issues/29752))
    ([GH 30929](https://github.com/pandas-dev/pandas/issues/30929))
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: 'This is especially useful after reading in data using readers such as [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"). See [here](../user_guide/missing_data.html#missing-data-na-conversion)
    for a description.  ### Experimental `NA` scalar to denote missing values'
  prefs: []
  type: TYPE_NORMAL
- en: 'A new `pd.NA` value (singleton) is introduced to represent scalar missing values.
    Up to now, pandas used several values to represent missing data: `np.nan` is used
    for this for float data, `np.nan` or `None` for object-dtype data and `pd.NaT`
    for datetime-like data. The goal of `pd.NA` is to provide a “missing” indicator
    that can be used consistently across data types. `pd.NA` is currently used by
    the nullable integer and boolean data types and the new string data type ([GH
    28095](https://github.com/pandas-dev/pandas/issues/28095)).'
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: 'Experimental: the behaviour of `pd.NA` can still change without warning.'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, creating a Series using the nullable integer dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: 'Compared to `np.nan`, `pd.NA` behaves differently in certain operations. In
    addition to arithmetic operations, `pd.NA` also propagates as “missing” or “unknown”
    in comparison operations:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: 'For logical operations, `pd.NA` follows the rules of the [three-valued logic](https://en.wikipedia.org/wiki/Three-valued_logic)
    (or *Kleene logic*). For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: For more, see [NA section](../user_guide/missing_data.html#missing-data-na)
    in the user guide on missing data.
  prefs: []
  type: TYPE_NORMAL
- en: '### Dedicated string data type'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve added [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype"), an extension type dedicated to string data. Previously,
    strings were typically stored in object-dtype NumPy arrays. ([GH 29975](https://github.com/pandas-dev/pandas/issues/29975))
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: '`StringDtype` is currently considered experimental. The implementation and
    parts of the API may change without warning.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The `''string''` extension type solves several issues with object-dtype NumPy
    arrays:'
  prefs: []
  type: TYPE_NORMAL
- en: You can accidentally store a *mixture* of strings and non-strings in an `object`
    dtype array. A `StringArray` can only store strings.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`object` dtype breaks dtype-specific operations like [`DataFrame.select_dtypes()`](../reference/api/pandas.DataFrame.select_dtypes.html#pandas.DataFrame.select_dtypes
    "pandas.DataFrame.select_dtypes"). There isn’t a clear way to select *just* text
    while excluding non-text, but still object-dtype columns.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When reading code, the contents of an `object` dtype array is less clear than
    `string`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: You can use the alias `"string"` as well.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: The usual string accessor methods work. Where appropriate, the return type of
    the Series or columns of a DataFrame will also have string dtype.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: String accessor methods returning integers will return a value with [`Int64Dtype`](../reference/api/pandas.Int64Dtype.html#pandas.Int64Dtype
    "pandas.Int64Dtype")
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: We recommend explicitly using the `string` data type when working with strings.
    See [Text data types](../user_guide/text.html#text-types) for more.
  prefs: []
  type: TYPE_NORMAL
- en: '### Boolean data type with missing values support'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve added [`BooleanDtype`](../reference/api/pandas.BooleanDtype.html#pandas.BooleanDtype
    "pandas.BooleanDtype") / [`BooleanArray`](../reference/api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray"), an extension type dedicated to boolean data that
    can hold missing values. The default `bool` data type based on a bool-dtype NumPy
    array, the column can only hold `True` or `False`, and not missing values. This
    new [`BooleanArray`](../reference/api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray") can store missing values as well by keeping track
    of this in a separate mask. ([GH 29555](https://github.com/pandas-dev/pandas/issues/29555),
    [GH 30095](https://github.com/pandas-dev/pandas/issues/30095), [GH 31131](https://github.com/pandas-dev/pandas/issues/31131))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: You can use the alias `"boolean"` as well.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: '### Method `convert_dtypes` to ease use of supported extension dtypes'
  prefs: []
  type: TYPE_NORMAL
- en: In order to encourage use of the extension dtypes `StringDtype`, `BooleanDtype`,
    `Int64Dtype`, `Int32Dtype`, etc., that support `pd.NA`, the methods [`DataFrame.convert_dtypes()`](../reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes
    "pandas.DataFrame.convert_dtypes") and [`Series.convert_dtypes()`](../reference/api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes") have been introduced. ([GH 29752](https://github.com/pandas-dev/pandas/issues/29752))
    ([GH 30929](https://github.com/pandas-dev/pandas/issues/30929))
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: This is especially useful after reading in data using readers such as [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"). See [here](../user_guide/missing_data.html#missing-data-na-conversion)
    for a description.
  prefs: []
  type: TYPE_NORMAL
- en: '## Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") added the `max_colwidth` parameter to control when
    wide columns are truncated ([GH 9784](https://github.com/pandas-dev/pandas/issues/9784))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added the `na_value` argument to [`Series.to_numpy()`](../reference/api/pandas.Series.to_numpy.html#pandas.Series.to_numpy
    "pandas.Series.to_numpy"), `Index.to_numpy()` and [`DataFrame.to_numpy()`](../reference/api/pandas.DataFrame.to_numpy.html#pandas.DataFrame.to_numpy
    "pandas.DataFrame.to_numpy") to control the value used for missing data ([GH 30322](https://github.com/pandas-dev/pandas/issues/30322))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.from_product()`](../reference/api/pandas.MultiIndex.from_product.html#pandas.MultiIndex.from_product
    "pandas.MultiIndex.from_product") infers level names from inputs if not explicitly
    provided ([GH 27292](https://github.com/pandas-dev/pandas/issues/27292))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") now accepts `caption` and `label` arguments ([GH
    25436](https://github.com/pandas-dev/pandas/issues/25436))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrames with [nullable integer](../user_guide/integer_na.html#integer-na),
    the [new string dtype](../user_guide/text.html#text-types) and period data type
    can now be converted to `pyarrow` (>=0.15.0), which means that it is supported
    in writing to the Parquet file format when using the `pyarrow` engine ([GH 28368](https://github.com/pandas-dev/pandas/issues/28368)).
    Full roundtrip to parquet (writing and reading back in with [`to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") / [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet")) is supported starting with pyarrow >= 0.16 ([GH 20612](https://github.com/pandas-dev/pandas/issues/20612)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_parquet()` now appropriately handles the `schema` argument for user defined
    schemas in the pyarrow engine. ([GH 30270](https://github.com/pandas-dev/pandas/issues/30270))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") now accepts an `indent` integer argument to enable
    pretty printing of JSON output ([GH 12004](https://github.com/pandas-dev/pandas/issues/12004))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") can read Stata 119 dta files. ([GH 28250](https://github.com/pandas-dev/pandas/issues/28250))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented [`Window.var()`](../reference/api/pandas.core.window.rolling.Window.var.html#pandas.core.window.rolling.Window.var
    "pandas.core.window.rolling.Window.var") and [`Window.std()`](../reference/api/pandas.core.window.rolling.Window.std.html#pandas.core.window.rolling.Window.std
    "pandas.core.window.rolling.Window.std") functions ([GH 26597](https://github.com/pandas-dev/pandas/issues/26597))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `encoding` argument to [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") for non-ascii text ([GH 28766](https://github.com/pandas-dev/pandas/issues/28766))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `encoding` argument to [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") for non-ascii text ([GH 28663](https://github.com/pandas-dev/pandas/issues/28663))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Styler.background_gradient()` now accepts `vmin` and `vmax` arguments ([GH
    12145](https://github.com/pandas-dev/pandas/issues/12145))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Styler.format()` added the `na_rep` parameter to help format the missing values
    ([GH 21527](https://github.com/pandas-dev/pandas/issues/21527), [GH 28358](https://github.com/pandas-dev/pandas/issues/28358))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") now can read binary Excel (`.xlsb`) files by passing `engine=''pyxlsb''`.
    For more details and example usage, see the [Binary Excel files documentation](../user_guide/io.html#io-xlsb).
    Closes [GH 8540](https://github.com/pandas-dev/pandas/issues/8540).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `partition_cols` argument in [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") now accepts a string ([GH 27117](https://github.com/pandas-dev/pandas/issues/27117))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") now parses `NaN`, `Infinity` and `-Infinity` ([GH 12213](https://github.com/pandas-dev/pandas/issues/12213))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame constructor preserve `ExtensionArray` dtype with `ExtensionArray`
    ([GH 11363](https://github.com/pandas-dev/pandas/issues/11363))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") and [`Series.sort_values()`](../reference/api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values") have gained `ignore_index` keyword to be able to
    reset index after sorting ([GH 30114](https://github.com/pandas-dev/pandas/issues/30114))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index") and [`Series.sort_index()`](../reference/api/pandas.Series.sort_index.html#pandas.Series.sort_index
    "pandas.Series.sort_index") have gained `ignore_index` keyword to reset index
    ([GH 30114](https://github.com/pandas-dev/pandas/issues/30114))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.drop_duplicates()`](../reference/api/pandas.DataFrame.drop_duplicates.html#pandas.DataFrame.drop_duplicates
    "pandas.DataFrame.drop_duplicates") has gained `ignore_index` keyword to reset
    index ([GH 30114](https://github.com/pandas-dev/pandas/issues/30114))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added new writer for exporting Stata dta files in versions 118 and 119, `StataWriterUTF8`.
    These files formats support exporting strings containing Unicode characters. Format
    119 supports data sets with more than 32,767 variables ([GH 23573](https://github.com/pandas-dev/pandas/issues/23573),
    [GH 30959](https://github.com/pandas-dev/pandas/issues/30959))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") now accepts `collections.abc.Mapping` subclasses as a mapper
    ([GH 29733](https://github.com/pandas-dev/pandas/issues/29733))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added an experimental [`attrs`](../reference/api/pandas.DataFrame.attrs.html#pandas.DataFrame.attrs
    "pandas.DataFrame.attrs") for storing global metadata about a dataset ([GH 29062](https://github.com/pandas-dev/pandas/issues/29062))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Timestamp.fromisocalendar()` is now compatible with python 3.8 and above ([GH
    28115](https://github.com/pandas-dev/pandas/issues/28115))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle") and [`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle") now accept URL ([GH 30163](https://github.com/pandas-dev/pandas/issues/30163))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Backwards incompatible API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '### Avoid using names from `MultiIndex.levels`'
  prefs: []
  type: TYPE_NORMAL
- en: As part of a larger refactor to [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") the level names are now stored separately from the levels
    ([GH 27242](https://github.com/pandas-dev/pandas/issues/27242)). We recommend
    using [`MultiIndex.names`](../reference/api/pandas.MultiIndex.names.html#pandas.MultiIndex.names
    "pandas.MultiIndex.names") to access the names, and [`Index.set_names()`](../reference/api/pandas.Index.set_names.html#pandas.Index.set_names
    "pandas.Index.set_names") to update the names.
  prefs: []
  type: TYPE_NORMAL
- en: For backwards compatibility, you can still *access* the names via the levels.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: However, it is no longer possible to *update* the names of the `MultiIndex`
    via the level.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: To update, use `MultiIndex.set_names`, which returns a new `MultiIndex`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: New repr for [`IntervalArray`](../reference/api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray")
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`pandas.arrays.IntervalArray`](../reference/api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray") adopts a new `__repr__` in accordance with other
    array classes ([GH 25022](https://github.com/pandas-dev/pandas/issues/25022))'
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: '`DataFrame.rename` now only accepts one positional argument'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.rename()`](../reference/api/pandas.DataFrame.rename.html#pandas.DataFrame.rename
    "pandas.DataFrame.rename") would previously accept positional arguments that would
    lead to ambiguous or undefined behavior. From pandas 1.0, only the very first
    argument, which maps labels to their new names along the default axis, is allowed
    to be passed by position ([GH 29136](https://github.com/pandas-dev/pandas/issues/29136)).'
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: Note that errors will now be raised when conflicting or potentially ambiguous
    arguments are provided.
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: You can still change the axis along which the first positional argument is applied
    by supplying the `axis` keyword argument.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: If you would like to update both the index and column labels, be sure to use
    the respective keywords.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: Extended verbose info output for [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.info()`](../reference/api/pandas.DataFrame.info.html#pandas.DataFrame.info
    "pandas.DataFrame.info") now shows line numbers for the columns summary ([GH 17304](https://github.com/pandas-dev/pandas/issues/17304))'
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: '[`pandas.array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    inference changes'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`pandas.array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    now infers pandas’ new extension types in several cases ([GH 29791](https://github.com/pandas-dev/pandas/issues/29791)):'
  prefs: []
  type: TYPE_NORMAL
- en: String data (including missing values) now returns a [`arrays.StringArray`](../reference/api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray").
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Integer data (including missing values) now returns a [`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray").
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Boolean data (including missing values) now returns the new [`arrays.BooleanArray`](../reference/api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray")
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: As a reminder, you can specify the `dtype` to disable all inference.
  prefs: []
  type: TYPE_NORMAL
- en: '[`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") now uses [`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA")'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") now uses [`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") rather than `numpy.nan` as its missing value marker ([GH 29964](https://github.com/pandas-dev/pandas/issues/29964)).'
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: This has a few API-breaking consequences.
  prefs: []
  type: TYPE_NORMAL
- en: '**Converting to a NumPy ndarray**'
  prefs: []
  type: TYPE_NORMAL
- en: When converting to a NumPy array missing values will be `pd.NA`, which cannot
    be converted to a float. So calling `np.asarray(integer_array, dtype="float")`
    will now raise.
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]'
  prefs: []
  type: TYPE_PRE
- en: Use `arrays.IntegerArray.to_numpy()` with an explicit `na_value` instead.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]'
  prefs: []
  type: TYPE_PRE
- en: '**Reductions can return** `pd.NA`'
  prefs: []
  type: TYPE_NORMAL
- en: When performing a reduction such as a sum with `skipna=False`, the result will
    now be `pd.NA` instead of `np.nan` in presence of missing values ([GH 30958](https://github.com/pandas-dev/pandas/issues/30958)).
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE93]'
  prefs: []
  type: TYPE_PRE
- en: '**value_counts returns a nullable integer dtype**'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts") with a nullable integer dtype now returns a nullable
    integer dtype for the values.'
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE94]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: See [NA semantics](../user_guide/missing_data.html#missing-data-na) for more
    on the differences between [`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") and `numpy.nan`.
  prefs: []
  type: TYPE_NORMAL
- en: '[`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") comparisons return [`arrays.BooleanArray`](../reference/api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray")'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Comparison operations on a [`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") now returns a [`arrays.BooleanArray`](../reference/api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray") rather than a NumPy array ([GH 29964](https://github.com/pandas-dev/pandas/issues/29964)).
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE96]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE97]'
  prefs: []
  type: TYPE_PRE
- en: Note that missing values now propagate, rather than always comparing unequal
    like `numpy.nan`. See [NA semantics](../user_guide/missing_data.html#missing-data-na)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: By default `Categorical.min()` now returns the minimum instead of np.nan
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") contains `np.nan`, `Categorical.min()` no longer return
    `np.nan` by default (skipna=True) ([GH 25303](https://github.com/pandas-dev/pandas/issues/25303))
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE98]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE99]'
  prefs: []
  type: TYPE_PRE
- en: Default dtype of empty [`pandas.Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Initialising an empty [`pandas.Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") without specifying a dtype will raise a `DeprecationWarning`
    now ([GH 17261](https://github.com/pandas-dev/pandas/issues/17261)). The default
    dtype will change from `float64` to `object` in future releases so that it is
    consistent with the behaviour of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index").
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE100]'
  prefs: []
  type: TYPE_PRE
- en: Result dtype inference changes for resample operations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The rules for the result dtype in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") aggregations have changed for extension types ([GH
    31359](https://github.com/pandas-dev/pandas/issues/31359)). Previously, pandas
    would attempt to convert the result back to the original dtype, falling back to
    the usual inference rules if that was not possible. Now, pandas will only return
    a result of the original dtype if the scalar values in the result are instances
    of the extension dtype’s scalar type.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE101]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE102]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE103]'
  prefs: []
  type: TYPE_PRE
- en: This fixes an inconsistency between `resample` and `groupby`. This also fixes
    a potential bug, where the **values** of the result might change depending on
    how the results are cast back to the original dtype.
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE104]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE105]'
  prefs: []
  type: TYPE_PRE
- en: '### Increased minimum version for Python'
  prefs: []
  type: TYPE_NORMAL
- en: 'pandas 1.0.0 supports Python 3.6.1 and higher ([GH 29212](https://github.com/pandas-dev/pandas/issues/29212)).  ###
    Increased minimum versions for dependencies'
  prefs: []
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated ([GH 29766](https://github.com/pandas-dev/pandas/issues/29766),
    [GH 29723](https://github.com/pandas-dev/pandas/issues/29723)). If installed,
    we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.13.3 | X |  |'
  prefs: []
  type: TYPE_TB
- en: '| pytz | 2015.4 | X |  |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.6.1 | X |  |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.2.1 |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.6.2 |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| pytest (dev) | 4.0.2 |  |  |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.3.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 0.2.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 3.8.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 2.2.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.46.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 2.5.7 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 0.13.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 0.7.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.4.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 0.3.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 0.19.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.1.4 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.8.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlrd | 1.1.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 0.9.8 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlwt | 1.2.0 |  |'
  prefs: []
  type: TYPE_TB
- en: See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: Build changes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: pandas has added a [pyproject.toml](https://www.python.org/dev/peps/pep-0517/)
    file and will no longer include cythonized files in the source distribution uploaded
    to PyPI ([GH 28341](https://github.com/pandas-dev/pandas/issues/28341), [GH 20775](https://github.com/pandas-dev/pandas/issues/20775)).
    If you’re installing a built distribution (wheel) or via conda, this shouldn’t
    have any effect on you. If you’re building pandas from source, you should no longer
    need to install Cython into your build environment before calling `pip install
    pandas`.
  prefs: []
  type: TYPE_NORMAL
- en: '### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") now raises on invalid operation
    names ([GH 27489](https://github.com/pandas-dev/pandas/issues/27489))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.api.types.infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") will now return “integer-na” for integer and `np.nan`
    mix ([GH 27283](https://github.com/pandas-dev/pandas/issues/27283))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.from_arrays()`](../reference/api/pandas.MultiIndex.from_arrays.html#pandas.MultiIndex.from_arrays
    "pandas.MultiIndex.from_arrays") will no longer infer names from arrays if `names=None`
    is explicitly provided ([GH 27292](https://github.com/pandas-dev/pandas/issues/27292))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In order to improve tab-completion, pandas does not include most deprecated
    attributes when introspecting a pandas object using `dir` (e.g. `dir(df)`). To
    see which attributes are excluded, see an object’s `_deprecations` attribute,
    for example `pd.DataFrame._deprecations` ([GH 28805](https://github.com/pandas-dev/pandas/issues/28805)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The returned dtype of [`unique()`](../reference/api/pandas.unique.html#pandas.unique
    "pandas.unique") now matches the input dtype. ([GH 27874](https://github.com/pandas-dev/pandas/issues/27874))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the default configuration value for `options.matplotlib.register_converters`
    from `True` to `"auto"` ([GH 18720](https://github.com/pandas-dev/pandas/issues/18720)).
    Now, pandas custom formatters will only be applied to plots created by pandas,
    through [`plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot"). Previously, pandas’ formatters would be applied to all
    plots created *after* a [`plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot"). See [units registration](#whatsnew-100-matplotlib-units)
    for more.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.dropna()`](../reference/api/pandas.Series.dropna.html#pandas.Series.dropna
    "pandas.Series.dropna") has dropped its `**kwargs` argument in favor of a single
    `how` parameter. Supplying anything else than `how` to `**kwargs` raised a `TypeError`
    previously ([GH 29388](https://github.com/pandas-dev/pandas/issues/29388))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When testing pandas, the new minimum required version of pytest is 5.0.1 ([GH
    29664](https://github.com/pandas-dev/pandas/issues/29664))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.str.__iter__()` was deprecated and will be removed in future releases
    ([GH 28277](https://github.com/pandas-dev/pandas/issues/28277)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Added `<NA>` to the list of default NA values for [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") ([GH 30821](https://github.com/pandas-dev/pandas/issues/30821))  ###
    Documentation improvements'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added new section on [Scaling to large datasets](../user_guide/scale.html#scale)
    ([GH 28315](https://github.com/pandas-dev/pandas/issues/28315)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Added sub-section on [Query MultiIndex](../user_guide/io.html#io-query-multi)
    for HDF5 datasets ([GH 28791](https://github.com/pandas-dev/pandas/issues/28791)).  ###
    Avoid using names from `MultiIndex.levels`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As part of a larger refactor to [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") the level names are now stored separately from the levels
    ([GH 27242](https://github.com/pandas-dev/pandas/issues/27242)). We recommend
    using [`MultiIndex.names`](../reference/api/pandas.MultiIndex.names.html#pandas.MultiIndex.names
    "pandas.MultiIndex.names") to access the names, and [`Index.set_names()`](../reference/api/pandas.Index.set_names.html#pandas.Index.set_names
    "pandas.Index.set_names") to update the names.
  prefs: []
  type: TYPE_NORMAL
- en: For backwards compatibility, you can still *access* the names via the levels.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE106]'
  prefs: []
  type: TYPE_PRE
- en: However, it is no longer possible to *update* the names of the `MultiIndex`
    via the level.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE107]'
  prefs: []
  type: TYPE_PRE
- en: To update, use `MultiIndex.set_names`, which returns a new `MultiIndex`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE108]'
  prefs: []
  type: TYPE_PRE
- en: New repr for [`IntervalArray`](../reference/api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray")
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`pandas.arrays.IntervalArray`](../reference/api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray") adopts a new `__repr__` in accordance with other
    array classes ([GH 25022](https://github.com/pandas-dev/pandas/issues/25022))'
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE109]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE110]'
  prefs: []
  type: TYPE_PRE
- en: '`DataFrame.rename` now only accepts one positional argument'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.rename()`](../reference/api/pandas.DataFrame.rename.html#pandas.DataFrame.rename
    "pandas.DataFrame.rename") would previously accept positional arguments that would
    lead to ambiguous or undefined behavior. From pandas 1.0, only the very first
    argument, which maps labels to their new names along the default axis, is allowed
    to be passed by position ([GH 29136](https://github.com/pandas-dev/pandas/issues/29136)).'
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE111]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE112]'
  prefs: []
  type: TYPE_PRE
- en: Note that errors will now be raised when conflicting or potentially ambiguous
    arguments are provided.
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE113]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE114]'
  prefs: []
  type: TYPE_PRE
- en: You can still change the axis along which the first positional argument is applied
    by supplying the `axis` keyword argument.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE115]'
  prefs: []
  type: TYPE_PRE
- en: If you would like to update both the index and column labels, be sure to use
    the respective keywords.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE116]'
  prefs: []
  type: TYPE_PRE
- en: Extended verbose info output for [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.info()`](../reference/api/pandas.DataFrame.info.html#pandas.DataFrame.info
    "pandas.DataFrame.info") now shows line numbers for the columns summary ([GH 17304](https://github.com/pandas-dev/pandas/issues/17304))'
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE117]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE118]'
  prefs: []
  type: TYPE_PRE
- en: '[`pandas.array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    inference changes'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`pandas.array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    now infers pandas’ new extension types in several cases ([GH 29791](https://github.com/pandas-dev/pandas/issues/29791)):'
  prefs: []
  type: TYPE_NORMAL
- en: String data (including missing values) now returns a [`arrays.StringArray`](../reference/api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray").
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Integer data (including missing values) now returns a [`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray").
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Boolean data (including missing values) now returns the new [`arrays.BooleanArray`](../reference/api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray")
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE119]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE120]'
  prefs: []
  type: TYPE_PRE
- en: As a reminder, you can specify the `dtype` to disable all inference.
  prefs: []
  type: TYPE_NORMAL
- en: '[`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") now uses [`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA")'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") now uses [`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") rather than `numpy.nan` as its missing value marker ([GH 29964](https://github.com/pandas-dev/pandas/issues/29964)).'
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE121]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE122]'
  prefs: []
  type: TYPE_PRE
- en: This has a few API-breaking consequences.
  prefs: []
  type: TYPE_NORMAL
- en: '**Converting to a NumPy ndarray**'
  prefs: []
  type: TYPE_NORMAL
- en: When converting to a NumPy array missing values will be `pd.NA`, which cannot
    be converted to a float. So calling `np.asarray(integer_array, dtype="float")`
    will now raise.
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE123]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE124]'
  prefs: []
  type: TYPE_PRE
- en: Use `arrays.IntegerArray.to_numpy()` with an explicit `na_value` instead.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE125]'
  prefs: []
  type: TYPE_PRE
- en: '**Reductions can return** `pd.NA`'
  prefs: []
  type: TYPE_NORMAL
- en: When performing a reduction such as a sum with `skipna=False`, the result will
    now be `pd.NA` instead of `np.nan` in presence of missing values ([GH 30958](https://github.com/pandas-dev/pandas/issues/30958)).
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE126]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE127]'
  prefs: []
  type: TYPE_PRE
- en: '**value_counts returns a nullable integer dtype**'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts") with a nullable integer dtype now returns a nullable
    integer dtype for the values.'
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE128]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE129]'
  prefs: []
  type: TYPE_PRE
- en: See [NA semantics](../user_guide/missing_data.html#missing-data-na) for more
    on the differences between [`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") and `numpy.nan`.
  prefs: []
  type: TYPE_NORMAL
- en: '[`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") comparisons return [`arrays.BooleanArray`](../reference/api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray")'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Comparison operations on a [`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") now returns a [`arrays.BooleanArray`](../reference/api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray") rather than a NumPy array ([GH 29964](https://github.com/pandas-dev/pandas/issues/29964)).
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE130]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE131]'
  prefs: []
  type: TYPE_PRE
- en: Note that missing values now propagate, rather than always comparing unequal
    like `numpy.nan`. See [NA semantics](../user_guide/missing_data.html#missing-data-na)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: By default `Categorical.min()` now returns the minimum instead of np.nan
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") contains `np.nan`, `Categorical.min()` no longer return
    `np.nan` by default (skipna=True) ([GH 25303](https://github.com/pandas-dev/pandas/issues/25303))
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE132]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE133]'
  prefs: []
  type: TYPE_PRE
- en: Default dtype of empty [`pandas.Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Initialising an empty [`pandas.Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") without specifying a dtype will raise a `DeprecationWarning`
    now ([GH 17261](https://github.com/pandas-dev/pandas/issues/17261)). The default
    dtype will change from `float64` to `object` in future releases so that it is
    consistent with the behaviour of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index").
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE134]'
  prefs: []
  type: TYPE_PRE
- en: Result dtype inference changes for resample operations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The rules for the result dtype in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") aggregations have changed for extension types ([GH
    31359](https://github.com/pandas-dev/pandas/issues/31359)). Previously, pandas
    would attempt to convert the result back to the original dtype, falling back to
    the usual inference rules if that was not possible. Now, pandas will only return
    a result of the original dtype if the scalar values in the result are instances
    of the extension dtype’s scalar type.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE135]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE136]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE137]'
  prefs: []
  type: TYPE_PRE
- en: This fixes an inconsistency between `resample` and `groupby`. This also fixes
    a potential bug, where the **values** of the result might change depending on
    how the results are cast back to the original dtype.
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas 0.25.x*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE138]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas 1.0.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE139]'
  prefs: []
  type: TYPE_PRE
- en: '### Increased minimum version for Python'
  prefs: []
  type: TYPE_NORMAL
- en: pandas 1.0.0 supports Python 3.6.1 and higher ([GH 29212](https://github.com/pandas-dev/pandas/issues/29212)).
  prefs: []
  type: TYPE_NORMAL
- en: '### Increased minimum versions for dependencies'
  prefs: []
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated ([GH 29766](https://github.com/pandas-dev/pandas/issues/29766),
    [GH 29723](https://github.com/pandas-dev/pandas/issues/29723)). If installed,
    we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.13.3 | X |  |'
  prefs: []
  type: TYPE_TB
- en: '| pytz | 2015.4 | X |  |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.6.1 | X |  |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.2.1 |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.6.2 |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| pytest (dev) | 4.0.2 |  |  |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.3.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 0.2.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 3.8.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 2.2.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.46.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 2.5.7 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 0.13.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 0.7.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.4.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 0.3.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 0.19.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.1.4 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.8.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlrd | 1.1.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 0.9.8 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlwt | 1.2.0 |  |'
  prefs: []
  type: TYPE_TB
- en: See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: Build changes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: pandas has added a [pyproject.toml](https://www.python.org/dev/peps/pep-0517/)
    file and will no longer include cythonized files in the source distribution uploaded
    to PyPI ([GH 28341](https://github.com/pandas-dev/pandas/issues/28341), [GH 20775](https://github.com/pandas-dev/pandas/issues/20775)).
    If you’re installing a built distribution (wheel) or via conda, this shouldn’t
    have any effect on you. If you’re building pandas from source, you should no longer
    need to install Cython into your build environment before calling `pip install
    pandas`.
  prefs: []
  type: TYPE_NORMAL
- en: '### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") now raises on invalid operation
    names ([GH 27489](https://github.com/pandas-dev/pandas/issues/27489))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.api.types.infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") will now return “integer-na” for integer and `np.nan`
    mix ([GH 27283](https://github.com/pandas-dev/pandas/issues/27283))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.from_arrays()`](../reference/api/pandas.MultiIndex.from_arrays.html#pandas.MultiIndex.from_arrays
    "pandas.MultiIndex.from_arrays") will no longer infer names from arrays if `names=None`
    is explicitly provided ([GH 27292](https://github.com/pandas-dev/pandas/issues/27292))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In order to improve tab-completion, pandas does not include most deprecated
    attributes when introspecting a pandas object using `dir` (e.g. `dir(df)`). To
    see which attributes are excluded, see an object’s `_deprecations` attribute,
    for example `pd.DataFrame._deprecations` ([GH 28805](https://github.com/pandas-dev/pandas/issues/28805)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The returned dtype of [`unique()`](../reference/api/pandas.unique.html#pandas.unique
    "pandas.unique") now matches the input dtype. ([GH 27874](https://github.com/pandas-dev/pandas/issues/27874))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the default configuration value for `options.matplotlib.register_converters`
    from `True` to `"auto"` ([GH 18720](https://github.com/pandas-dev/pandas/issues/18720)).
    Now, pandas custom formatters will only be applied to plots created by pandas,
    through [`plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot"). Previously, pandas’ formatters would be applied to all
    plots created *after* a [`plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot"). See [units registration](#whatsnew-100-matplotlib-units)
    for more.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.dropna()`](../reference/api/pandas.Series.dropna.html#pandas.Series.dropna
    "pandas.Series.dropna") has dropped its `**kwargs` argument in favor of a single
    `how` parameter. Supplying anything else than `how` to `**kwargs` raised a `TypeError`
    previously ([GH 29388](https://github.com/pandas-dev/pandas/issues/29388))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When testing pandas, the new minimum required version of pytest is 5.0.1 ([GH
    29664](https://github.com/pandas-dev/pandas/issues/29664))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.str.__iter__()` was deprecated and will be removed in future releases
    ([GH 28277](https://github.com/pandas-dev/pandas/issues/28277)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `<NA>` to the list of default NA values for [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") ([GH 30821](https://github.com/pandas-dev/pandas/issues/30821))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Documentation improvements'
  prefs: []
  type: TYPE_NORMAL
- en: Added new section on [Scaling to large datasets](../user_guide/scale.html#scale)
    ([GH 28315](https://github.com/pandas-dev/pandas/issues/28315)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added sub-section on [Query MultiIndex](../user_guide/io.html#io-query-multi)
    for HDF5 datasets ([GH 28791](https://github.com/pandas-dev/pandas/issues/28791)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.item()`](../reference/api/pandas.Series.item.html#pandas.Series.item
    "pandas.Series.item") and [`Index.item()`](../reference/api/pandas.Index.item.html#pandas.Index.item
    "pandas.Index.item") have been _undeprecated_ ([GH 29250](https://github.com/pandas-dev/pandas/issues/29250))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Index.set_value` has been deprecated. For a given index `idx`, array `arr`,
    value in `idx` of `idx_val` and a new value of `val`, `idx.set_value(arr, idx_val,
    val)` is equivalent to `arr[idx.get_loc(idx_val)] = val`, which should be used
    instead ([GH 28621](https://github.com/pandas-dev/pandas/issues/28621)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`is_extension_type()` is deprecated, `is_extension_array_dtype()` should be
    used instead ([GH 29457](https://github.com/pandas-dev/pandas/issues/29457))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval") keyword
    argument “truediv” is deprecated and will be removed in a future version ([GH
    29812](https://github.com/pandas-dev/pandas/issues/29812))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DateOffset.isAnchored()` and `DatetOffset.onOffset()` are deprecated and will
    be removed in a future version, use `DateOffset.is_anchored()` and `DateOffset.is_on_offset()`
    instead ([GH 30340](https://github.com/pandas-dev/pandas/issues/30340))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.tseries.frequencies.get_offset` is deprecated and will be removed in
    a future version, use `pandas.tseries.frequencies.to_offset` instead ([GH 4205](https://github.com/pandas-dev/pandas/issues/4205))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.take_nd()` and `CategoricalIndex.take_nd()` are deprecated, use
    `Categorical.take()` and `CategoricalIndex.take()` instead ([GH 27745](https://github.com/pandas-dev/pandas/issues/27745))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The parameter `numeric_only` of `Categorical.min()` and `Categorical.max()`
    is deprecated and replaced with `skipna` ([GH 25303](https://github.com/pandas-dev/pandas/issues/25303))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The parameter `label` in [`lreshape()`](../reference/api/pandas.lreshape.html#pandas.lreshape
    "pandas.lreshape") has been deprecated and will be removed in a future version
    ([GH 29742](https://github.com/pandas-dev/pandas/issues/29742))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.core.index` has been deprecated and will be removed in a future version,
    the public classes are available in the top-level namespace ([GH 19711](https://github.com/pandas-dev/pandas/issues/19711))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") is now exposed in the top-level namespace. Usage of `json_normalize`
    as `pandas.io.json.json_normalize` is now deprecated and it is recommended to
    use `json_normalize` as [`pandas.json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") instead ([GH 27586](https://github.com/pandas-dev/pandas/issues/27586)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `numpy` argument of [`pandas.read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") is deprecated ([GH 28512](https://github.com/pandas-dev/pandas/issues/28512)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata"), [`DataFrame.to_feather()`](../reference/api/pandas.DataFrame.to_feather.html#pandas.DataFrame.to_feather
    "pandas.DataFrame.to_feather"), and [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") argument “fname” is deprecated, use “path” instead
    ([GH 23574](https://github.com/pandas-dev/pandas/issues/23574))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The deprecated internal attributes `_start`, `_stop` and `_step` of [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") now raise a `FutureWarning` instead of a `DeprecationWarning`
    ([GH 26581](https://github.com/pandas-dev/pandas/issues/26581))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `pandas.util.testing` module has been deprecated. Use the public API in
    `pandas.testing` documented at [Assertion functions](../reference/testing.html#api-general-testing)
    ([GH 16232](https://github.com/pandas-dev/pandas/issues/16232)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.SparseArray` has been deprecated. Use `pandas.arrays.SparseArray` ([`arrays.SparseArray`](../reference/api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray")) instead. ([GH 30642](https://github.com/pandas-dev/pandas/issues/30642))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The parameter `is_copy` of [`Series.take()`](../reference/api/pandas.Series.take.html#pandas.Series.take
    "pandas.Series.take") and [`DataFrame.take()`](../reference/api/pandas.DataFrame.take.html#pandas.DataFrame.take
    "pandas.DataFrame.take") has been deprecated and will be removed in a future version.
    ([GH 27357](https://github.com/pandas-dev/pandas/issues/27357))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Support for multi-dimensional indexing (e.g. `index[:, None]`) on a [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") is deprecated and will be removed in a future version, convert
    to a numpy array before indexing instead ([GH 30588](https://github.com/pandas-dev/pandas/issues/30588))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `pandas.np` submodule is now deprecated. Import numpy directly instead ([GH
    30296](https://github.com/pandas-dev/pandas/issues/30296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `pandas.datetime` class is now deprecated. Import from `datetime` instead
    ([GH 30610](https://github.com/pandas-dev/pandas/issues/30610))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`diff`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff") will raise a `TypeError` rather than implicitly losing
    the dtype of extension types in the future. Convert to the correct dtype before
    calling `diff` instead ([GH 31025](https://github.com/pandas-dev/pandas/issues/31025))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Selecting Columns from a Grouped DataFrame**'
  prefs: []
  type: TYPE_NORMAL
- en: 'When selecting columns from a `DataFrameGroupBy` object, passing individual
    keys (or a tuple of keys) inside single brackets is deprecated, a list of items
    should be used instead. ([GH 23566](https://github.com/pandas-dev/pandas/issues/23566))
    For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE140]'
  prefs: []
  type: TYPE_PRE
- en: '## Removal of prior version deprecations/changes'
  prefs: []
  type: TYPE_NORMAL
- en: '**Removed SparseSeries and SparseDataFrame**'
  prefs: []
  type: TYPE_NORMAL
- en: '`SparseSeries`, `SparseDataFrame` and the `DataFrame.to_sparse` method have
    been removed ([GH 28425](https://github.com/pandas-dev/pandas/issues/28425)).
    We recommend using a `Series` or `DataFrame` with sparse values instead.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Matplotlib unit registration**'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, pandas would register converters with matplotlib as a side effect
    of importing pandas ([GH 18720](https://github.com/pandas-dev/pandas/issues/18720)).
    This changed the output of plots made via matplotlib plots after pandas was imported,
    even if you were using matplotlib directly rather than [`plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot").
  prefs: []
  type: TYPE_NORMAL
- en: To use pandas formatters with a matplotlib plot, specify
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE141]'
  prefs: []
  type: TYPE_PRE
- en: Note that plots created by [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") and [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") *do* register the converters automatically. The only behavior
    change is when plotting a date-like object via `matplotlib.pyplot.plot` or `matplotlib.Axes.plot`.
    See [Custom formatters for timeseries plots](../user_guide/visualization.html#plotting-formatters)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: '**Other removals**'
  prefs: []
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “index” from [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata"), `StataReader`, and `StataReader.read()`, use “index_col”
    instead ([GH 17328](https://github.com/pandas-dev/pandas/issues/17328))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `StataReader.data` method, use `StataReader.read()` instead ([GH 9493](https://github.com/pandas-dev/pandas/issues/9493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `pandas.plotting._matplotlib.tsplot`, use [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") instead ([GH 19980](https://github.com/pandas-dev/pandas/issues/19980))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.tseries.converter.register` has been moved to [`pandas.plotting.register_matplotlib_converters()`](../reference/api/pandas.plotting.register_matplotlib_converters.html#pandas.plotting.register_matplotlib_converters
    "pandas.plotting.register_matplotlib_converters") ([GH 18307](https://github.com/pandas-dev/pandas/issues/18307))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") no longer accepts positional arguments, pass keyword arguments
    instead ([GH 30003](https://github.com/pandas-dev/pandas/issues/30003))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.hist()`](../reference/api/pandas.DataFrame.hist.html#pandas.DataFrame.hist
    "pandas.DataFrame.hist") and [`Series.hist()`](../reference/api/pandas.Series.hist.html#pandas.Series.hist
    "pandas.Series.hist") no longer allows `figsize="default"`, specify figure size
    by passinig a tuple instead ([GH 30003](https://github.com/pandas-dev/pandas/issues/30003))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Floordiv of integer-dtyped array by [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") now raises `TypeError` ([GH 21036](https://github.com/pandas-dev/pandas/issues/21036))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") and [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") no longer accept non-nanosecond dtype strings like “timedelta64”
    or “datetime64”, use “timedelta64[ns]” and “datetime64[ns]” instead ([GH 24806](https://github.com/pandas-dev/pandas/issues/24806))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the default “skipna” argument in [`pandas.api.types.infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") from `False` to `True` ([GH 24050](https://github.com/pandas-dev/pandas/issues/24050))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.ix` and `DataFrame.ix` ([GH 26438](https://github.com/pandas-dev/pandas/issues/26438))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Index.summary` ([GH 18217](https://github.com/pandas-dev/pandas/issues/18217))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “fastpath” from the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") constructor ([GH 23110](https://github.com/pandas-dev/pandas/issues/23110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.get_value`, `Series.set_value`, `DataFrame.get_value`, `DataFrame.set_value`
    ([GH 17739](https://github.com/pandas-dev/pandas/issues/17739))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.compound` and `DataFrame.compound` ([GH 26405](https://github.com/pandas-dev/pandas/issues/26405))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the default “inplace” argument in [`DataFrame.set_index()`](../reference/api/pandas.DataFrame.set_index.html#pandas.DataFrame.set_index
    "pandas.DataFrame.set_index") and [`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") from `None` to `False` ([GH 27600](https://github.com/pandas-dev/pandas/issues/27600))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.cat.categorical`, `Series.cat.index`, `Series.cat.name` ([GH
    24751](https://github.com/pandas-dev/pandas/issues/24751))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “box” from [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") and [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta"); in addition these now always returns [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex"), [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 24486](https://github.com/pandas-dev/pandas/issues/24486))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta"), [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta"), and [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") no longer allow “M”, “y”, or “Y” for the “unit” argument
    ([GH 23264](https://github.com/pandas-dev/pandas/issues/23264))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “time_rule” from (non-public) `offsets.generate_range`,
    which has been moved to `core.arrays._ranges.generate_range()` ([GH 24157](https://github.com/pandas-dev/pandas/issues/24157))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") or [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") with listlike indexers and missing labels will no longer
    reindex ([GH 17295](https://github.com/pandas-dev/pandas/issues/17295))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") and [`Series.to_excel()`](../reference/api/pandas.Series.to_excel.html#pandas.Series.to_excel
    "pandas.Series.to_excel") with non-existent columns will no longer reindex ([GH
    17295](https://github.com/pandas-dev/pandas/issues/17295))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “join_axes” from [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat"); use `reindex_like` on the result instead ([GH 22318](https://github.com/pandas-dev/pandas/issues/22318))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “by” from [`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index"), use [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") instead ([GH 10726](https://github.com/pandas-dev/pandas/issues/10726))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed support for nested renaming in [`DataFrame.aggregate()`](../reference/api/pandas.DataFrame.aggregate.html#pandas.DataFrame.aggregate
    "pandas.DataFrame.aggregate"), [`Series.aggregate()`](../reference/api/pandas.Series.aggregate.html#pandas.Series.aggregate
    "pandas.Series.aggregate"), [`core.groupby.DataFrameGroupBy.aggregate()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.aggregate.html#pandas.core.groupby.DataFrameGroupBy.aggregate
    "pandas.core.groupby.DataFrameGroupBy.aggregate"), [`core.groupby.SeriesGroupBy.aggregate()`](../reference/api/pandas.core.groupby.SeriesGroupBy.aggregate.html#pandas.core.groupby.SeriesGroupBy.aggregate
    "pandas.core.groupby.SeriesGroupBy.aggregate"), [`core.window.rolling.Rolling.aggregate()`](../reference/api/pandas.core.window.rolling.Rolling.aggregate.html#pandas.core.window.rolling.Rolling.aggregate
    "pandas.core.window.rolling.Rolling.aggregate") ([GH 18529](https://github.com/pandas-dev/pandas/issues/18529))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing `datetime64` data to [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") or `timedelta64` data to `DatetimeIndex` now raises `TypeError`
    ([GH 23539](https://github.com/pandas-dev/pandas/issues/23539), [GH 23937](https://github.com/pandas-dev/pandas/issues/23937))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing `int64` values to [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and a timezone now interprets the values as nanosecond
    timestamps in UTC, not wall times in the given timezone ([GH 24559](https://github.com/pandas-dev/pandas/issues/24559))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A tuple passed to [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") is now exclusively treated as a single key ([GH 18314](https://github.com/pandas-dev/pandas/issues/18314))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Index.contains`, use `key in index` instead ([GH 30103](https://github.com/pandas-dev/pandas/issues/30103))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Addition and subtraction of `int` or integer-arrays is no longer allowed in
    [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp"),
    [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex"), use `obj + n * obj.freq` instead of `obj + n` ([GH 22535](https://github.com/pandas-dev/pandas/issues/22535))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.ptp` ([GH 21614](https://github.com/pandas-dev/pandas/issues/21614))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.from_array` ([GH 18258](https://github.com/pandas-dev/pandas/issues/18258))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `DataFrame.from_items` ([GH 18458](https://github.com/pandas-dev/pandas/issues/18458))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `DataFrame.as_matrix`, `Series.as_matrix` ([GH 18458](https://github.com/pandas-dev/pandas/issues/18458))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.asobject` ([GH 18477](https://github.com/pandas-dev/pandas/issues/18477))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `DataFrame.as_blocks`, `Series.as_blocks`, `DataFrame.blocks`, `Series.blocks`
    ([GH 17656](https://github.com/pandas-dev/pandas/issues/17656))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.Series.str.cat()`](../reference/api/pandas.Series.str.cat.html#pandas.Series.str.cat
    "pandas.Series.str.cat") now defaults to aligning `others`, using `join=''left''`
    ([GH 27611](https://github.com/pandas-dev/pandas/issues/27611))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.Series.str.cat()`](../reference/api/pandas.Series.str.cat.html#pandas.Series.str.cat
    "pandas.Series.str.cat") does not accept list-likes *within* list-likes anymore
    ([GH 27611](https://github.com/pandas-dev/pandas/issues/27611))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") with `Categorical` dtype (or [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") with `Categorical` column) no longer allows setting
    new categories ([GH 24114](https://github.com/pandas-dev/pandas/issues/24114))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keywords “start”, “end”, and “periods” from
    the [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex"), and [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") constructors; use [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range"), [`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range"), and [`period_range()`](../reference/api/pandas.period_range.html#pandas.period_range
    "pandas.period_range") instead ([GH 23919](https://github.com/pandas-dev/pandas/issues/23919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “verify_integrity” from the [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") constructors ([GH 23919](https://github.com/pandas-dev/pandas/issues/23919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “fastpath” from `pandas.core.internals.blocks.make_block`
    ([GH 19265](https://github.com/pandas-dev/pandas/issues/19265))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “dtype” from `Block.make_block_same_class()`
    ([GH 19434](https://github.com/pandas-dev/pandas/issues/19434))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `ExtensionArray._formatting_values`. Use `ExtensionArray._formatter`
    instead. ([GH 23601](https://github.com/pandas-dev/pandas/issues/23601))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `MultiIndex.to_hierarchical` ([GH 21613](https://github.com/pandas-dev/pandas/issues/21613))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `MultiIndex.labels`, use [`MultiIndex.codes`](../reference/api/pandas.MultiIndex.codes.html#pandas.MultiIndex.codes
    "pandas.MultiIndex.codes") instead ([GH 23752](https://github.com/pandas-dev/pandas/issues/23752))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “labels” from the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") constructor, use “codes” instead ([GH 23752](https://github.com/pandas-dev/pandas/issues/23752))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `MultiIndex.set_labels`, use [`MultiIndex.set_codes()`](../reference/api/pandas.MultiIndex.set_codes.html#pandas.MultiIndex.set_codes
    "pandas.MultiIndex.set_codes") instead ([GH 23752](https://github.com/pandas-dev/pandas/issues/23752))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “labels” from [`MultiIndex.set_codes()`](../reference/api/pandas.MultiIndex.set_codes.html#pandas.MultiIndex.set_codes
    "pandas.MultiIndex.set_codes"), [`MultiIndex.copy()`](../reference/api/pandas.MultiIndex.copy.html#pandas.MultiIndex.copy
    "pandas.MultiIndex.copy"), [`MultiIndex.drop()`](../reference/api/pandas.MultiIndex.drop.html#pandas.MultiIndex.drop
    "pandas.MultiIndex.drop"), use “codes” instead ([GH 23752](https://github.com/pandas-dev/pandas/issues/23752))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed support for legacy HDF5 formats ([GH 29787](https://github.com/pandas-dev/pandas/issues/29787))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing a dtype alias (e.g. ‘datetime64[ns, UTC]’) to [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") is no longer allowed, use `DatetimeTZDtype.construct_from_string()`
    instead ([GH 23990](https://github.com/pandas-dev/pandas/issues/23990))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “skip_footer” from [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"); use “skipfooter” instead ([GH 18836](https://github.com/pandas-dev/pandas/issues/18836))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") no longer allows an integer value for the parameter `usecols`,
    instead pass a list of integers from 0 to `usecols` inclusive ([GH 23635](https://github.com/pandas-dev/pandas/issues/23635))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “convert_datetime64” from [`DataFrame.to_records()`](../reference/api/pandas.DataFrame.to_records.html#pandas.DataFrame.to_records
    "pandas.DataFrame.to_records") ([GH 18902](https://github.com/pandas-dev/pandas/issues/18902))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `IntervalIndex.from_intervals` in favor of the [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") constructor ([GH 19263](https://github.com/pandas-dev/pandas/issues/19263))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the default “keep_tz” argument in [`DatetimeIndex.to_series()`](../reference/api/pandas.DatetimeIndex.to_series.html#pandas.DatetimeIndex.to_series
    "pandas.DatetimeIndex.to_series") from `None` to `True` ([GH 23739](https://github.com/pandas-dev/pandas/issues/23739))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `api.types.is_period` and `api.types.is_datetimetz` ([GH 23917](https://github.com/pandas-dev/pandas/issues/23917))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ability to read pickles containing [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") instances created with pre-0.16 version of pandas has been
    removed ([GH 27538](https://github.com/pandas-dev/pandas/issues/27538))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `pandas.tseries.plotting.tsplot` ([GH 18627](https://github.com/pandas-dev/pandas/issues/18627))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keywords “reduce” and “broadcast” from [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") ([GH 18577](https://github.com/pandas-dev/pandas/issues/18577))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `assert_raises_regex` function in `pandas._testing`
    ([GH 29174](https://github.com/pandas-dev/pandas/issues/29174))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `FrozenNDArray` class in `pandas.core.indexes.frozen`
    ([GH 29335](https://github.com/pandas-dev/pandas/issues/29335))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “nthreads” from [`read_feather()`](../reference/api/pandas.read_feather.html#pandas.read_feather
    "pandas.read_feather"), use “use_threads” instead ([GH 23053](https://github.com/pandas-dev/pandas/issues/23053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Index.is_lexsorted_for_tuple` ([GH 29305](https://github.com/pandas-dev/pandas/issues/29305))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed support for nested renaming in [`DataFrame.aggregate()`](../reference/api/pandas.DataFrame.aggregate.html#pandas.DataFrame.aggregate
    "pandas.DataFrame.aggregate"), [`Series.aggregate()`](../reference/api/pandas.Series.aggregate.html#pandas.Series.aggregate
    "pandas.Series.aggregate"), [`core.groupby.DataFrameGroupBy.aggregate()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.aggregate.html#pandas.core.groupby.DataFrameGroupBy.aggregate
    "pandas.core.groupby.DataFrameGroupBy.aggregate"), [`core.groupby.SeriesGroupBy.aggregate()`](../reference/api/pandas.core.groupby.SeriesGroupBy.aggregate.html#pandas.core.groupby.SeriesGroupBy.aggregate
    "pandas.core.groupby.SeriesGroupBy.aggregate"), [`core.window.rolling.Rolling.aggregate()`](../reference/api/pandas.core.window.rolling.Rolling.aggregate.html#pandas.core.window.rolling.Rolling.aggregate
    "pandas.core.window.rolling.Rolling.aggregate") ([GH 29608](https://github.com/pandas-dev/pandas/issues/29608))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.valid`; use [`Series.dropna()`](../reference/api/pandas.Series.dropna.html#pandas.Series.dropna
    "pandas.Series.dropna") instead ([GH 18800](https://github.com/pandas-dev/pandas/issues/18800))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `DataFrame.is_copy`, `Series.is_copy` ([GH 18812](https://github.com/pandas-dev/pandas/issues/18812))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `DataFrame.get_ftype_counts`, `Series.get_ftype_counts` ([GH 18243](https://github.com/pandas-dev/pandas/issues/18243))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `DataFrame.ftypes`, `Series.ftypes`, `Series.ftype` ([GH 26744](https://github.com/pandas-dev/pandas/issues/26744))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Index.get_duplicates`, use `idx[idx.duplicated()].unique()` instead
    ([GH 20239](https://github.com/pandas-dev/pandas/issues/20239))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.clip_upper`, `Series.clip_lower`, `DataFrame.clip_upper`, `DataFrame.clip_lower`
    ([GH 24203](https://github.com/pandas-dev/pandas/issues/24203))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the ability to alter [`DatetimeIndex.freq`](../reference/api/pandas.DatetimeIndex.freq.html#pandas.DatetimeIndex.freq
    "pandas.DatetimeIndex.freq"), `TimedeltaIndex.freq`, or [`PeriodIndex.freq`](../reference/api/pandas.PeriodIndex.freq.html#pandas.PeriodIndex.freq
    "pandas.PeriodIndex.freq") ([GH 20772](https://github.com/pandas-dev/pandas/issues/20772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `DatetimeIndex.offset` ([GH 20730](https://github.com/pandas-dev/pandas/issues/20730))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `DatetimeIndex.asobject`, `TimedeltaIndex.asobject`, `PeriodIndex.asobject`,
    use `astype(object)` instead ([GH 29801](https://github.com/pandas-dev/pandas/issues/29801))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “order” from [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") ([GH 19751](https://github.com/pandas-dev/pandas/issues/19751))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “encoding” from [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") and [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") ([GH 21400](https://github.com/pandas-dev/pandas/issues/21400))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the default “sort” argument in [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") from `None` to `False` ([GH 20613](https://github.com/pandas-dev/pandas/issues/20613))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “raise_conflict” from [`DataFrame.update()`](../reference/api/pandas.DataFrame.update.html#pandas.DataFrame.update
    "pandas.DataFrame.update"), use “errors” instead ([GH 23585](https://github.com/pandas-dev/pandas/issues/23585))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “n” from `DatetimeIndex.shift()`,
    `TimedeltaIndex.shift()`, `PeriodIndex.shift()`, use “periods” instead ([GH 22458](https://github.com/pandas-dev/pandas/issues/22458))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keywords “how”, “fill_method”, and “limit”
    from [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") ([GH 30139](https://github.com/pandas-dev/pandas/issues/30139))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing an integer to [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") or [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") with `timedelta64[ns]` dtype now raises `TypeError`
    ([GH 24694](https://github.com/pandas-dev/pandas/issues/24694))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing multiple axes to [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") is no longer supported ([GH 20995](https://github.com/pandas-dev/pandas/issues/20995))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.nonzero`, use `to_numpy().nonzero()` instead ([GH 24048](https://github.com/pandas-dev/pandas/issues/24048))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing floating dtype `codes` to [`Categorical.from_codes()`](../reference/api/pandas.Categorical.from_codes.html#pandas.Categorical.from_codes
    "pandas.Categorical.from_codes") is no longer supported, pass `codes.astype(np.int64)`
    instead ([GH 21775](https://github.com/pandas-dev/pandas/issues/21775))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “pat” from [`Series.str.partition()`](../reference/api/pandas.Series.str.partition.html#pandas.Series.str.partition
    "pandas.Series.str.partition") and [`Series.str.rpartition()`](../reference/api/pandas.Series.str.rpartition.html#pandas.Series.str.rpartition
    "pandas.Series.str.rpartition"), use “sep” instead ([GH 23767](https://github.com/pandas-dev/pandas/issues/23767))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.put` ([GH 27106](https://github.com/pandas-dev/pandas/issues/27106))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.real`, `Series.imag` ([GH 27106](https://github.com/pandas-dev/pandas/issues/27106))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.to_dense`, `DataFrame.to_dense` ([GH 26684](https://github.com/pandas-dev/pandas/issues/26684))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Index.dtype_str`, use `str(index.dtype)` instead ([GH 27106](https://github.com/pandas-dev/pandas/issues/27106))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.ravel()` returns a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") instead of a `ndarray` ([GH 27199](https://github.com/pandas-dev/pandas/issues/27199))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The ‘outer’ method on Numpy ufuncs, e.g. `np.subtract.outer` operating on [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") objects is no longer supported, and will raise `NotImplementedError`
    ([GH 27198](https://github.com/pandas-dev/pandas/issues/27198))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.get_dtype_counts` and `DataFrame.get_dtype_counts` ([GH 27145](https://github.com/pandas-dev/pandas/issues/27145))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the default “fill_value” argument in `Categorical.take()` from `True`
    to `False` ([GH 20841](https://github.com/pandas-dev/pandas/issues/20841))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the default value for the `raw` argument in `Series.rolling().apply()`,
    `DataFrame.rolling().apply()`, `Series.expanding().apply()`, and `DataFrame.expanding().apply()`
    from `None` to `False` ([GH 20584](https://github.com/pandas-dev/pandas/issues/20584))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated behavior of [`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin") and [`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax"), use [`Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin") and [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax") for the old behavior ([GH 16955](https://github.com/pandas-dev/pandas/issues/16955))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing a tz-aware `datetime.datetime` or [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") into the [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") constructor with the `tz` argument now raises a `ValueError`
    ([GH 23621](https://github.com/pandas-dev/pandas/issues/23621))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.base`, `Index.base`, `Categorical.base`, `Series.flags`, `Index.flags`,
    `PeriodArray.flags`, `Series.strides`, `Index.strides`, `Series.itemsize`, `Index.itemsize`,
    `Series.data`, `Index.data` ([GH 20721](https://github.com/pandas-dev/pandas/issues/20721))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed [`Timedelta.resolution()`](../reference/api/pandas.Timedelta.resolution.html#pandas.Timedelta.resolution
    "pandas.Timedelta.resolution") to match the behavior of the standard library `datetime.timedelta.resolution`,
    for the old behavior, use `Timedelta.resolution_string()` ([GH 26839](https://github.com/pandas-dev/pandas/issues/26839))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Timestamp.weekday_name`, `DatetimeIndex.weekday_name`, and `Series.dt.weekday_name`
    ([GH 18164](https://github.com/pandas-dev/pandas/issues/18164))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “errors” in [`Timestamp.tz_localize()`](../reference/api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize"), [`DatetimeIndex.tz_localize()`](../reference/api/pandas.DatetimeIndex.tz_localize.html#pandas.DatetimeIndex.tz_localize
    "pandas.DatetimeIndex.tz_localize"), and [`Series.tz_localize()`](../reference/api/pandas.Series.tz_localize.html#pandas.Series.tz_localize
    "pandas.Series.tz_localize") ([GH 22644](https://github.com/pandas-dev/pandas/issues/22644))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the default “ordered” argument in [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") from `None` to `False` ([GH 26336](https://github.com/pandas-dev/pandas/issues/26336))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") and [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") now require “labels” as the first argument and “axis”
    as an optional named parameter ([GH 30089](https://github.com/pandas-dev/pandas/issues/30089))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `to_msgpack`, `read_msgpack`, `DataFrame.to_msgpack`, `Series.to_msgpack`
    ([GH 27103](https://github.com/pandas-dev/pandas/issues/27103))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.compress` ([GH 21930](https://github.com/pandas-dev/pandas/issues/21930))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “fill_value” from `Categorical.fillna()`,
    use “value” instead ([GH 19269](https://github.com/pandas-dev/pandas/issues/19269))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “data” from `andrews_curves()`, use
    “frame” instead ([GH 6956](https://github.com/pandas-dev/pandas/issues/6956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “data” from `parallel_coordinates()`,
    use “frame” instead ([GH 6956](https://github.com/pandas-dev/pandas/issues/6956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keyword “colors” from `parallel_coordinates()`,
    use “color” instead ([GH 6956](https://github.com/pandas-dev/pandas/issues/6956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated keywords “verbose” and “private_key” from
    [`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq "pandas.read_gbq")
    ([GH 30200](https://github.com/pandas-dev/pandas/issues/30200))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calling `np.array` and `np.asarray` on tz-aware [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") will now return an object array of tz-aware [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") ([GH 24596](https://github.com/pandas-dev/pandas/issues/24596))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Performance improvements'
  prefs: []
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") arithmetic and comparison operations with scalars ([GH 24990](https://github.com/pandas-dev/pandas/issues/24990),
    [GH 29853](https://github.com/pandas-dev/pandas/issues/29853))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in indexing with a non-unique [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") ([GH 27489](https://github.com/pandas-dev/pandas/issues/27489))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `MultiIndex.is_monotonic` ([GH 27495](https://github.com/pandas-dev/pandas/issues/27495))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`cut()`](../reference/api/pandas.cut.html#pandas.cut
    "pandas.cut") when `bins` is an [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") ([GH 27668](https://github.com/pandas-dev/pandas/issues/27668))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when initializing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") using a `range` ([GH 30171](https://github.com/pandas-dev/pandas/issues/30171))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr") when `method` is `"spearman"` ([GH 28139](https://github.com/pandas-dev/pandas/issues/28139))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") when provided a list of values to replace ([GH 28099](https://github.com/pandas-dev/pandas/issues/28099))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.select_dtypes()`](../reference/api/pandas.DataFrame.select_dtypes.html#pandas.DataFrame.select_dtypes
    "pandas.DataFrame.select_dtypes") by using vectorization instead of iterating
    over a loop ([GH 28317](https://github.com/pandas-dev/pandas/issues/28317))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `Categorical.searchsorted()` and `CategoricalIndex.searchsorted()`
    ([GH 28795](https://github.com/pandas-dev/pandas/issues/28795))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when comparing a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") with a scalar and the scalar is not found in the categories
    ([GH 29750](https://github.com/pandas-dev/pandas/issues/29750))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when checking if values in a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") are equal, equal or larger or larger than a given scalar.
    The improvement is not present if checking if the [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") is less than or less than or equal than the scalar ([GH
    29820](https://github.com/pandas-dev/pandas/issues/29820))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Index.equals()`](../reference/api/pandas.Index.equals.html#pandas.Index.equals
    "pandas.Index.equals") and `MultiIndex.equals()` ([GH 29134](https://github.com/pandas-dev/pandas/issues/29134))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") when `skipna` is `True` ([GH 28814](https://github.com/pandas-dev/pandas/issues/28814))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Bug fixes'
  prefs: []
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Added test to assert the `fillna()` raises the correct `ValueError` message
    when the value isn’t a value from categories ([GH 13628](https://github.com/pandas-dev/pandas/issues/13628))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.astype()` where `NaN` values were handled incorrectly when
    casting to int ([GH 28406](https://github.com/pandas-dev/pandas/issues/28406))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") would fail when the targets contained duplicates, and
    wouldn’t fail if the source contained duplicates ([GH 28107](https://github.com/pandas-dev/pandas/issues/28107))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.astype()` not allowing for casting to extension dtypes ([GH
    28668](https://github.com/pandas-dev/pandas/issues/28668))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    was unable to join on categorical and extension dtype columns ([GH 28668](https://github.com/pandas-dev/pandas/issues/28668))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.searchsorted()` and `CategoricalIndex.searchsorted()` now work
    on unordered categoricals also ([GH 21667](https://github.com/pandas-dev/pandas/issues/21667))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added test to assert roundtripping to parquet with [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") or [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") will preserve Categorical dtypes for string types ([GH
    27955](https://github.com/pandas-dev/pandas/issues/27955))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the error message in `Categorical.remove_categories()` to always show
    the invalid removals as a set ([GH 28669](https://github.com/pandas-dev/pandas/issues/28669))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using date accessors on a categorical dtyped [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") of datetimes was not returning an object of the same type as
    if one used the `str.()` / `dt.()` on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") of that type. E.g. when accessing [`Series.dt.tz_localize()`](../reference/api/pandas.Series.dt.tz_localize.html#pandas.Series.dt.tz_localize
    "pandas.Series.dt.tz_localize") on a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") with duplicate entries, the accessor was skipping duplicates
    ([GH 27952](https://github.com/pandas-dev/pandas/issues/27952))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") that would give incorrect results on categorical data
    ([GH 26988](https://github.com/pandas-dev/pandas/issues/26988))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where calling `Categorical.min()` or `Categorical.max()` on an empty Categorical
    would raise a numpy exception ([GH 30227](https://github.com/pandas-dev/pandas/issues/30227))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The following methods now also correctly output values for unobserved categories
    when called through `groupby(..., observed=False)` ([GH 17605](https://github.com/pandas-dev/pandas/issues/17605))
    * [`core.groupby.SeriesGroupBy.count()`](../reference/api/pandas.core.groupby.SeriesGroupBy.count.html#pandas.core.groupby.SeriesGroupBy.count
    "pandas.core.groupby.SeriesGroupBy.count") * [`core.groupby.SeriesGroupBy.size()`](../reference/api/pandas.core.groupby.SeriesGroupBy.size.html#pandas.core.groupby.SeriesGroupBy.size
    "pandas.core.groupby.SeriesGroupBy.size") * [`core.groupby.SeriesGroupBy.nunique()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nunique.html#pandas.core.groupby.SeriesGroupBy.nunique
    "pandas.core.groupby.SeriesGroupBy.nunique") * [`core.groupby.SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` incorrectly casting `np.timedelta64("NaT")` to
    `np.datetime64("NaT")` when inserting into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with datetime64 dtype ([GH 27311](https://github.com/pandas-dev/pandas/issues/27311))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.dt()`](../reference/api/pandas.Series.dt.html#pandas.Series.dt
    "pandas.Series.dt") property lookups when the underlying data is read-only ([GH
    27529](https://github.com/pandas-dev/pandas/issues/27529))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `HDFStore.__getitem__` incorrectly reading tz attribute created in Python
    2 ([GH 26443](https://github.com/pandas-dev/pandas/issues/26443))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") where passing arrays of malformed `str` with errors=”coerce”
    could incorrectly lead to raising `ValueError` ([GH 28299](https://github.com/pandas-dev/pandas/issues/28299))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`core.groupby.SeriesGroupBy.nunique()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nunique.html#pandas.core.groupby.SeriesGroupBy.nunique
    "pandas.core.groupby.SeriesGroupBy.nunique") where `NaT` values were interfering
    with the count of unique values ([GH 27951](https://github.com/pandas-dev/pandas/issues/27951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") subtraction when subtracting a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") from a `np.datetime64` object incorrectly raising `TypeError`
    ([GH 28286](https://github.com/pandas-dev/pandas/issues/28286))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Addition and subtraction of integer or integer-dtype arrays with [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") will now raise `NullFrequencyError` instead of `ValueError`
    ([GH 28268](https://github.com/pandas-dev/pandas/issues/28268))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    with integer dtype failing to raise `TypeError` when adding or subtracting a `np.datetime64`
    object ([GH 28080](https://github.com/pandas-dev/pandas/issues/28080))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype"), [`Index.astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype"), and [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") failing to handle `NaT` when casting to an integer
    dtype ([GH 28492](https://github.com/pandas-dev/pandas/issues/28492))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Week` with `weekday` incorrectly raising `AttributeError` instead of
    `TypeError` when adding or subtracting an invalid type ([GH 28530](https://github.com/pandas-dev/pandas/issues/28530))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") arithmetic operations when operating with a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with dtype `'timedelta64[ns]'` ([GH 28049](https://github.com/pandas-dev/pandas/issues/28049))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `core.groupby.generic.SeriesGroupBy.apply()` raising `ValueError` when
    a column in the original DataFrame is a datetime and the column labels are not
    standard integers ([GH 28247](https://github.com/pandas-dev/pandas/issues/28247))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas._config.localization.get_locales()` where the `locales -a` encodes
    the locales list as windows-1252 ([GH 23638](https://github.com/pandas-dev/pandas/issues/23638),
    [GH 24760](https://github.com/pandas-dev/pandas/issues/24760), [GH 27368](https://github.com/pandas-dev/pandas/issues/27368))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.var()`](../reference/api/pandas.Series.var.html#pandas.Series.var
    "pandas.Series.var") failing to raise `TypeError` when called with `timedelta64[ns]`
    dtype ([GH 28289](https://github.com/pandas-dev/pandas/issues/28289))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex.strftime()`](../reference/api/pandas.DatetimeIndex.strftime.html#pandas.DatetimeIndex.strftime
    "pandas.DatetimeIndex.strftime") and [`Series.dt.strftime()`](../reference/api/pandas.Series.dt.strftime.html#pandas.Series.dt.strftime
    "pandas.Series.dt.strftime") where `NaT` was converted to the string `'NaT'` instead
    of `np.nan` ([GH 29578](https://github.com/pandas-dev/pandas/issues/29578))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in masking datetime-like arrays with a boolean mask of an incorrect length
    not raising an `IndexError` ([GH 30308](https://github.com/pandas-dev/pandas/issues/30308))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.resolution`](../reference/api/pandas.Timestamp.resolution.html#pandas.Timestamp.resolution
    "pandas.Timestamp.resolution") being a property instead of a class attribute ([GH
    29910](https://github.com/pandas-dev/pandas/issues/29910))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when called with `None` raising `TypeError` instead of returning
    `NaT` ([GH 30011](https://github.com/pandas-dev/pandas/issues/30011))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") failing for `deque` objects when using `cache=True` (the
    default) ([GH 29403](https://github.com/pandas-dev/pandas/issues/29403))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.item()`](../reference/api/pandas.Series.item.html#pandas.Series.item
    "pandas.Series.item") with `datetime64` or `timedelta64` dtype, `DatetimeIndex.item()`,
    and `TimedeltaIndex.item()` returning an integer instead of a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") or [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") ([GH 30175](https://github.com/pandas-dev/pandas/issues/30175))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") addition when adding a non-optimized `DateOffset` incorrectly
    dropping timezone information ([GH 30336](https://github.com/pandas-dev/pandas/issues/30336))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") where attempting to drop non-existent values from a DatetimeIndex
    would yield a confusing error message ([GH 30399](https://github.com/pandas-dev/pandas/issues/30399))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` would remove the timezone-awareness of new data
    ([GH 30238](https://github.com/pandas-dev/pandas/issues/30238))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.cummin()`](../reference/api/pandas.Series.cummin.html#pandas.Series.cummin
    "pandas.Series.cummin") and [`Series.cummax()`](../reference/api/pandas.Series.cummax.html#pandas.Series.cummax
    "pandas.Series.cummax") with timezone-aware dtype incorrectly dropping its timezone
    ([GH 15553](https://github.com/pandas-dev/pandas/issues/15553))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeArray`, `TimedeltaArray`, and `PeriodArray` where inplace addition
    and subtraction did not actually operate inplace ([GH 24115](https://github.com/pandas-dev/pandas/issues/24115))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when called with `Series` storing `IntegerArray` raising
    `TypeError` instead of returning `Series` ([GH 30050](https://github.com/pandas-dev/pandas/issues/30050))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") with custom business hours as `freq` and given number of
    `periods` ([GH 30593](https://github.com/pandas-dev/pandas/issues/30593))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") comparisons with incorrectly casting integers to [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") objects, inconsistent with the [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") comparison behavior ([GH 30722](https://github.com/pandas-dev/pandas/issues/30722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.insert()` raising a `ValueError` instead of a `TypeError`
    when trying to insert a timezone-aware [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") into a timezone-naive [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), or vice-versa ([GH 30806](https://github.com/pandas-dev/pandas/issues/30806))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in subtracting a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") or `TimedeltaArray` from a `np.datetime64` object ([GH
    29558](https://github.com/pandas-dev/pandas/issues/29558))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile") with zero-column [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") incorrectly raising ([GH 23925](https://github.com/pandas-dev/pandas/issues/23925))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    flex inequality comparisons methods ([`DataFrame.lt()`](../reference/api/pandas.DataFrame.lt.html#pandas.DataFrame.lt
    "pandas.DataFrame.lt"), [`DataFrame.le()`](../reference/api/pandas.DataFrame.le.html#pandas.DataFrame.le
    "pandas.DataFrame.le"), [`DataFrame.gt()`](../reference/api/pandas.DataFrame.gt.html#pandas.DataFrame.gt
    "pandas.DataFrame.gt"), [`DataFrame.ge()`](../reference/api/pandas.DataFrame.ge.html#pandas.DataFrame.ge
    "pandas.DataFrame.ge")) with object-dtype and `complex` entries failing to raise
    `TypeError` like their [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") counterparts ([GH 28079](https://github.com/pandas-dev/pandas/issues/28079))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") logical operations (`&`, `|`, `^`) not matching [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") behavior by filling NA values ([GH 28741](https://github.com/pandas-dev/pandas/issues/28741))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") where specifying axis by name references variable
    before it is assigned ([GH 29142](https://github.com/pandas-dev/pandas/issues/29142))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.var()`](../reference/api/pandas.Series.var.html#pandas.Series.var
    "pandas.Series.var") not computing the right value with a nullable integer dtype
    series not passing through ddof argument ([GH 29128](https://github.com/pandas-dev/pandas/issues/29128))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when using `frac` > 1 and `replace` = False ([GH 27451](https://github.com/pandas-dev/pandas/issues/27451))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in numeric indexes resulted in it being possible to instantiate an `Int64Index`,
    `UInt64Index`, or `Float64Index` with an invalid dtype (e.g. datetime-like) ([GH
    29539](https://github.com/pandas-dev/pandas/issues/29539))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `UInt64Index` precision loss while constructing from a list with values
    in the `np.uint64` range ([GH 29526](https://github.com/pandas-dev/pandas/issues/29526))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `NumericIndex` construction that caused indexing to fail when integers
    in the `np.uint64` range were used ([GH 28023](https://github.com/pandas-dev/pandas/issues/28023))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `NumericIndex` construction that caused `UInt64Index` to be casted to
    `Float64Index` when integers in the `np.uint64` range were used to index a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 28279](https://github.com/pandas-dev/pandas/issues/28279))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") when using method=`index` with an unsorted index,
    would previously return incorrect results. ([GH 21037](https://github.com/pandas-dev/pandas/issues/21037))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.round()`](../reference/api/pandas.DataFrame.round.html#pandas.DataFrame.round
    "pandas.DataFrame.round") where a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") of [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") columns would incorrectly raise a `TypeError` ([GH 30063](https://github.com/pandas-dev/pandas/issues/30063))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.pct_change()`](../reference/api/pandas.Series.pct_change.html#pandas.Series.pct_change
    "pandas.Series.pct_change") and [`DataFrame.pct_change()`](../reference/api/pandas.DataFrame.pct_change.html#pandas.DataFrame.pct_change
    "pandas.DataFrame.pct_change") when there are duplicated indices ([GH 30463](https://github.com/pandas-dev/pandas/issues/30463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") cumulative operations (e.g. cumsum, cummax) incorrect casting
    to object-dtype ([GH 19296](https://github.com/pandas-dev/pandas/issues/19296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`diff`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff") losing the dtype for extension types ([GH 30889](https://github.com/pandas-dev/pandas/issues/30889))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.diff`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff") raising an `IndexError` when one of the columns was a
    nullable integer dtype ([GH 30967](https://github.com/pandas-dev/pandas/issues/30967))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Calling [`Series.str.isalnum()`](../reference/api/pandas.Series.str.isalnum.html#pandas.Series.str.isalnum
    "pandas.Series.str.isalnum") (and other “ismethods”) on an empty `Series` would
    return an `object` dtype instead of `bool` ([GH 29624](https://github.com/pandas-dev/pandas/issues/29624))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.get_indexer()`](../reference/api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer") where a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") or [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") `target` would incorrectly raise a `TypeError` ([GH
    30063](https://github.com/pandas-dev/pandas/issues/30063))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas.core.dtypes.cast.infer_dtype_from_scalar` where passing `pandas_dtype=True`
    did not infer [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") ([GH 30337](https://github.com/pandas-dev/pandas/issues/30337))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor where constructing a `Series` from a `list` of [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") objects resulted in `object` dtype instead of [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") ([GH 23563](https://github.com/pandas-dev/pandas/issues/23563))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") where the `kind` attribute was incorrectly set as `None`
    instead of `"O"` ([GH 30568](https://github.com/pandas-dev/pandas/issues/30568))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex"), [`IntervalArray`](../reference/api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray"), and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with interval data where equality comparisons were incorrect
    ([GH 24112](https://github.com/pandas-dev/pandas/issues/24112))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in assignment using a reverse slicer ([GH 26939](https://github.com/pandas-dev/pandas/issues/26939))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.explode()`](../reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode
    "pandas.DataFrame.explode") would duplicate frame in the presence of duplicates
    in the index ([GH 28010](https://github.com/pandas-dev/pandas/issues/28010))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in reindexing a [`PeriodIndex()`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") with another type of index that contained a `Period` ([GH
    28323](https://github.com/pandas-dev/pandas/issues/28323)) ([GH 28337](https://github.com/pandas-dev/pandas/issues/28337))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fix assignment of column via `.loc` with numpy non-ns datetime type ([GH 27395](https://github.com/pandas-dev/pandas/issues/27395))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Float64Index.astype()` where `np.inf` was not handled properly when
    casting to an integer dtype ([GH 28475](https://github.com/pandas-dev/pandas/issues/28475))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") could fail when the left contained duplicates ([GH 28257](https://github.com/pandas-dev/pandas/issues/28257))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when indexing with `.loc` where the index was a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") with non-string categories didn’t work ([GH 17569](https://github.com/pandas-dev/pandas/issues/17569),
    [GH 30225](https://github.com/pandas-dev/pandas/issues/30225))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.get_indexer_non_unique()`](../reference/api/pandas.Index.get_indexer_non_unique.html#pandas.Index.get_indexer_non_unique
    "pandas.Index.get_indexer_non_unique") could fail with `TypeError` in some cases,
    such as when searching for ints in a string index ([GH 28257](https://github.com/pandas-dev/pandas/issues/28257))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Float64Index.get_loc()` incorrectly raising `TypeError` instead of `KeyError`
    ([GH 29189](https://github.com/pandas-dev/pandas/issues/29189))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") with incorrect dtype when setting Categorical value in
    1-row DataFrame ([GH 25495](https://github.com/pandas-dev/pandas/issues/25495))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") can’t find missing values when input includes missing
    values ([GH 19132](https://github.com/pandas-dev/pandas/issues/19132))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` incorrectly assigning values with boolean indexer
    when the length of new data matches the number of `True` values and new data is
    not a `Series` or an `np.array` ([GH 30567](https://github.com/pandas-dev/pandas/issues/30567))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing with a [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") incorrectly accepting integers representing years, use e.g.
    `ser.loc["2007"]` instead of `ser.loc[2007]` ([GH 30763](https://github.com/pandas-dev/pandas/issues/30763))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Constructor for [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") verifies that the given `sortorder` is compatible with the
    actual `lexsort_depth` if `verify_integrity` parameter is `True` (the default)
    ([GH 28735](https://github.com/pandas-dev/pandas/issues/28735))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Series and MultiIndex `.drop` with `MultiIndex` raise exception if labels not
    in given in level ([GH 8594](https://github.com/pandas-dev/pandas/issues/8594))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IO
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now accepts binary mode file buffers when using the Python csv engine ([GH 23779](https://github.com/pandas-dev/pandas/issues/23779))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") where using a Tuple as a column or index value and
    using `orient="columns"` or `orient="index"` would produce invalid JSON ([GH 20500](https://github.com/pandas-dev/pandas/issues/20500))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve infinity parsing. [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") now interprets `Infinity`, `+Infinity`, `-Infinity` as floating
    point values ([GH 10065](https://github.com/pandas-dev/pandas/issues/10065))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") where values were truncated when the length of `na_rep`
    was shorter than the text input data. ([GH 25099](https://github.com/pandas-dev/pandas/issues/25099))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") where values were truncated using display options
    instead of outputting the full content ([GH 9784](https://github.com/pandas-dev/pandas/issues/9784))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") where a datetime column label would not be written
    out in ISO format with `orient="table"` ([GH 28130](https://github.com/pandas-dev/pandas/issues/28130))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") where writing to GCS would fail with `engine='fastparquet'`
    if the file did not already exist ([GH 28326](https://github.com/pandas-dev/pandas/issues/28326))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") closing stores that it didn’t open when Exceptions are raised
    ([GH 28699](https://github.com/pandas-dev/pandas/issues/28699))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.read_json()` where using `orient="index"` would not maintain
    the order ([GH 28557](https://github.com/pandas-dev/pandas/issues/28557))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") where the length of the `formatters` argument was
    not verified ([GH 28469](https://github.com/pandas-dev/pandas/issues/28469))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.read_excel()` with `engine='ods'` when `sheet_name` argument
    references a non-existent sheet ([GH 27676](https://github.com/pandas-dev/pandas/issues/27676))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.io.formats.style.Styler()`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") formatting for floating values not displaying
    decimals correctly ([GH 13257](https://github.com/pandas-dev/pandas/issues/13257))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") when using `formatters=<list>` and `max_cols` together.
    ([GH 25955](https://github.com/pandas-dev/pandas/issues/25955))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Styler.background_gradient()` not able to work with dtype `Int64` ([GH
    28869](https://github.com/pandas-dev/pandas/issues/28869))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_clipboard()`](../reference/api/pandas.DataFrame.to_clipboard.html#pandas.DataFrame.to_clipboard
    "pandas.DataFrame.to_clipboard") which did not work reliably in ipython ([GH 22707](https://github.com/pandas-dev/pandas/issues/22707))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") where default encoding was not set to `utf-8` ([GH 29565](https://github.com/pandas-dev/pandas/issues/29565))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `PythonParser` where str and bytes were being mixed when dealing with
    the decimal field ([GH 29650](https://github.com/pandas-dev/pandas/issues/29650))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq "pandas.read_gbq")
    now accepts `progress_bar_type` to display progress bar while the data downloads.
    ([GH 29857](https://github.com/pandas-dev/pandas/issues/29857))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas.io.json.json_normalize()` where a missing value in the location
    specified by `record_path` would raise a `TypeError` ([GH 30148](https://github.com/pandas-dev/pandas/issues/30148))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") now accepts binary data ([GH 15914](https://github.com/pandas-dev/pandas/issues/15914))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") in which encoding handling was limited to just the string `utf-16`
    for the C engine ([GH 24130](https://github.com/pandas-dev/pandas/issues/24130))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") not able to plot boolean values ([GH 23719](https://github.com/pandas-dev/pandas/issues/23719))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") not able to plot when no rows ([GH 27758](https://github.com/pandas-dev/pandas/issues/27758))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") producing incorrect legend markers when plotting multiple
    series on the same axis ([GH 18222](https://github.com/pandas-dev/pandas/issues/18222))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") when `kind='box'` and data contains datetime or timedelta
    data. These types are now automatically dropped ([GH 22799](https://github.com/pandas-dev/pandas/issues/22799))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.line()`](../reference/api/pandas.DataFrame.plot.line.html#pandas.DataFrame.plot.line
    "pandas.DataFrame.plot.line") and [`DataFrame.plot.area()`](../reference/api/pandas.DataFrame.plot.area.html#pandas.DataFrame.plot.area
    "pandas.DataFrame.plot.area") produce wrong xlim in x-axis ([GH 27686](https://github.com/pandas-dev/pandas/issues/27686),
    [GH 25160](https://github.com/pandas-dev/pandas/issues/25160), [GH 24784](https://github.com/pandas-dev/pandas/issues/24784))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`DataFrame.boxplot()`](../reference/api/pandas.DataFrame.boxplot.html#pandas.DataFrame.boxplot
    "pandas.DataFrame.boxplot") would not accept a `color` parameter like [`DataFrame.plot.box()`](../reference/api/pandas.DataFrame.plot.box.html#pandas.DataFrame.plot.box
    "pandas.DataFrame.plot.box") ([GH 26214](https://github.com/pandas-dev/pandas/issues/26214))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the `xticks` argument being ignored for [`DataFrame.plot.bar()`](../reference/api/pandas.DataFrame.plot.bar.html#pandas.DataFrame.plot.bar
    "pandas.DataFrame.plot.bar") ([GH 14119](https://github.com/pandas-dev/pandas/issues/14119))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`set_option()`](../reference/api/pandas.set_option.html#pandas.set_option
    "pandas.set_option") now validates that the plot backend provided to `''plotting.backend''`
    implements the backend when the option is set, rather than when a plot is created
    ([GH 28163](https://github.com/pandas-dev/pandas/issues/28163))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") now allow a `backend` keyword argument to allow changing
    between backends in one session ([GH 28619](https://github.com/pandas-dev/pandas/issues/28619)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in color validation incorrectly raising for non-color styles ([GH 29122](https://github.com/pandas-dev/pandas/issues/29122)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow [`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") to plot `objects` and `datetime` type data ([GH
    18755](https://github.com/pandas-dev/pandas/issues/18755), [GH 30391](https://github.com/pandas-dev/pandas/issues/30391))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.hist()`](../reference/api/pandas.DataFrame.hist.html#pandas.DataFrame.hist
    "pandas.DataFrame.hist"), `xrot=0` does not work with `by` and subplots ([GH 30288](https://github.com/pandas-dev/pandas/issues/30288)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GroupBy/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`core.groupby.DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") only showing output from a single
    group when function returns an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 28652](https://github.com/pandas-dev/pandas/issues/28652))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") with multiple groups where an `IndexError` would be
    raised if any group contained all NA values ([GH 20519](https://github.com/pandas-dev/pandas/issues/20519))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Resampler.size()`](../reference/api/pandas.core.resample.Resampler.size.html#pandas.core.resample.Resampler.size
    "pandas.core.resample.Resampler.size") and [`Resampler.count()`](../reference/api/pandas.core.resample.Resampler.count.html#pandas.core.resample.Resampler.count
    "pandas.core.resample.Resampler.count") returning wrong dtype when used with an
    empty [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    ([GH 28427](https://github.com/pandas-dev/pandas/issues/28427))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") not allowing for rolling over datetimes when `axis=1`
    ([GH 28192](https://github.com/pandas-dev/pandas/issues/28192))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") not allowing rolling over multi-index levels ([GH
    15584](https://github.com/pandas-dev/pandas/issues/15584)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") not allowing rolling on monotonic decreasing time
    indexes ([GH 19248](https://github.com/pandas-dev/pandas/issues/19248)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") not offering selection by column name when `axis=1`
    ([GH 27614](https://github.com/pandas-dev/pandas/issues/27614))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `core.groupby.DataFrameGroupby.agg()` not able to use lambda function
    with named aggregation ([GH 27519](https://github.com/pandas-dev/pandas/issues/27519))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") losing column name information when grouping by a
    categorical column ([GH 28787](https://github.com/pandas-dev/pandas/issues/28787))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove error raised due to duplicated input functions in named aggregation in
    [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby"). Previously error will be raised if the same function
    is applied on the same column and now it is allowed if new assigned names are
    different. ([GH 28426](https://github.com/pandas-dev/pandas/issues/28426))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`core.groupby.SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") will be able to handle the case
    even when the [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper") makes empty groups ([GH 28479](https://github.com/pandas-dev/pandas/issues/28479))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`core.window.rolling.Rolling.quantile()`](../reference/api/pandas.core.window.rolling.Rolling.quantile.html#pandas.core.window.rolling.Rolling.quantile
    "pandas.core.window.rolling.Rolling.quantile") ignoring `interpolation` keyword
    argument when used within a groupby ([GH 28779](https://github.com/pandas-dev/pandas/issues/28779))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") where `any`, `all`, `nunique` and transform functions
    would incorrectly handle duplicate column labels ([GH 21668](https://github.com/pandas-dev/pandas/issues/21668))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`core.groupby.DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") with timezone-aware datetime64 column
    incorrectly casting results to the original dtype ([GH 29641](https://github.com/pandas-dev/pandas/issues/29641))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") when using axis=1 and having a single level columns
    index ([GH 30208](https://github.com/pandas-dev/pandas/issues/30208))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") when using nunique on axis=1 ([GH 30253](https://github.com/pandas-dev/pandas/issues/30253))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile") with multiple list-like q value
    and integer column names ([GH 30289](https://github.com/pandas-dev/pandas/issues/30289))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.pct_change()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.pct_change.html#pandas.core.groupby.DataFrameGroupBy.pct_change
    "pandas.core.groupby.DataFrameGroupBy.pct_change") and [`SeriesGroupBy.pct_change()`](../reference/api/pandas.core.groupby.SeriesGroupBy.pct_change.html#pandas.core.groupby.SeriesGroupBy.pct_change
    "pandas.core.groupby.SeriesGroupBy.pct_change") causes `TypeError` when `fill_method`
    is `None` ([GH 30463](https://github.com/pandas-dev/pandas/issues/30463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Rolling.count()` and `Expanding.count()` argument where `min_periods`
    was ignored ([GH 26996](https://github.com/pandas-dev/pandas/issues/26996))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") that caused incorrect output with empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 28202](https://github.com/pandas-dev/pandas/issues/28202),
    [GH 21959](https://github.com/pandas-dev/pandas/issues/21959))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") not handling non-unique indexes correctly when creating
    MultiIndex ([GH 28301](https://github.com/pandas-dev/pandas/issues/28301))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") not returning correct type `float` when `margins=True` and
    `aggfunc='mean'` ([GH 24893](https://github.com/pandas-dev/pandas/issues/24893))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") could not use [`datetime.timedelta`](https://docs.python.org/3/library/datetime.html#datetime.timedelta
    "(in Python v3.12)") for `tolerance` kwarg ([GH 28098](https://github.com/pandas-dev/pandas/issues/28098))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge"),
    did not append suffixes correctly with MultiIndex ([GH 28518](https://github.com/pandas-dev/pandas/issues/28518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`qcut()`](../reference/api/pandas.qcut.html#pandas.qcut "pandas.qcut") and
    [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") now handle
    boolean input ([GH 20303](https://github.com/pandas-dev/pandas/issues/20303))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fix to ensure all int dtypes can be used in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") when using a tolerance value. Previously every non-int64
    type would raise an erroneous `MergeError` ([GH 28870](https://github.com/pandas-dev/pandas/issues/28870)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Better error message in [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") when `columns` isn’t a list-like value ([GH 28383](https://github.com/pandas-dev/pandas/issues/28383))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.join()`](../reference/api/pandas.Index.join.html#pandas.Index.join
    "pandas.Index.join") that caused infinite recursion error for mismatched `MultiIndex`
    name orders. ([GH 25760](https://github.com/pandas-dev/pandas/issues/25760), [GH
    28956](https://github.com/pandas-dev/pandas/issues/28956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug [`Series.pct_change()`](../reference/api/pandas.Series.pct_change.html#pandas.Series.pct_change
    "pandas.Series.pct_change") where supplying an anchored frequency would throw
    a `ValueError` ([GH 28664](https://github.com/pandas-dev/pandas/issues/28664))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`DataFrame.equals()`](../reference/api/pandas.DataFrame.equals.html#pandas.DataFrame.equals
    "pandas.DataFrame.equals") returned True incorrectly in some cases when two DataFrames
    had the same columns in different orders ([GH 28839](https://github.com/pandas-dev/pandas/issues/28839))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") that caused non-numeric replacer’s dtype not respected
    ([GH 26632](https://github.com/pandas-dev/pandas/issues/26632))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt")
    where supplying mixed strings and numeric values for `id_vars` or `value_vars`
    would incorrectly raise a `ValueError` ([GH 29718](https://github.com/pandas-dev/pandas/issues/29718))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dtypes are now preserved when transposing a `DataFrame` where each column is
    the same extension dtype ([GH 30091](https://github.com/pandas-dev/pandas/issues/30091))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") merging on a tz-aware `left_index` and `right_on` a tz-aware
    column ([GH 29864](https://github.com/pandas-dev/pandas/issues/29864))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message and docstring in [`cut()`](../reference/api/pandas.cut.html#pandas.cut
    "pandas.cut") and [`qcut()`](../reference/api/pandas.qcut.html#pandas.qcut "pandas.qcut")
    when `labels=True` ([GH 13318](https://github.com/pandas-dev/pandas/issues/13318))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in missing `fill_na` parameter to [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") with list of levels ([GH 30740](https://github.com/pandas-dev/pandas/issues/30740))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `SparseDataFrame` arithmetic operations incorrectly casting inputs to
    float ([GH 28107](https://github.com/pandas-dev/pandas/issues/28107))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.sparse` returning a `Series` when there was a column named
    `sparse` rather than the accessor ([GH 30758](https://github.com/pandas-dev/pandas/issues/30758))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed `operator.xor()` with a boolean-dtype `SparseArray`. Now returns a sparse
    result, rather than object dtype ([GH 31025](https://github.com/pandas-dev/pandas/issues/31025))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `arrays.PandasArray` when setting a scalar string ([GH 28118](https://github.com/pandas-dev/pandas/issues/28118),
    [GH 28150](https://github.com/pandas-dev/pandas/issues/28150)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where nullable integers could not be compared to strings ([GH 28930](https://github.com/pandas-dev/pandas/issues/28930))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor raised `ValueError` with list-like data and `dtype`
    specified ([GH 30280](https://github.com/pandas-dev/pandas/issues/30280))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Trying to set the `display.precision`, `display.max_rows` or `display.max_columns`
    using [`set_option()`](../reference/api/pandas.set_option.html#pandas.set_option
    "pandas.set_option") to anything but a `None` or a positive int will raise a `ValueError`
    ([GH 23348](https://github.com/pandas-dev/pandas/issues/23348))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") with overlapping keys in a nested dictionary will
    no longer raise, now matching the behavior of a flat dictionary ([GH 27660](https://github.com/pandas-dev/pandas/issues/27660))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") and [`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv") now support dicts as `compression` argument with key `''method''`
    being the compression method and others as additional compression options when
    the compression method is `''zip''`. ([GH 26023](https://github.com/pandas-dev/pandas/issues/26023))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.diff()`](../reference/api/pandas.Series.diff.html#pandas.Series.diff
    "pandas.Series.diff") where a boolean series would incorrectly raise a `TypeError`
    ([GH 17294](https://github.com/pandas-dev/pandas/issues/17294))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.append()` will no longer raise a `TypeError` when passed a tuple of
    `Series` ([GH 28410](https://github.com/pandas-dev/pandas/issues/28410))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fix corrupted error message when calling `pandas.libs._json.encode()` on a 0d
    array ([GH 18878](https://github.com/pandas-dev/pandas/issues/18878))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Backtick quoting in [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") and [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") can now also be used to use invalid identifiers like
    names that start with a digit, are python keywords, or are using single character
    operators. ([GH 27017](https://github.com/pandas-dev/pandas/issues/27017))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.core.util.hashing.hash_pandas_object` where arrays containing tuples
    were incorrectly treated as non-hashable ([GH 28969](https://github.com/pandas-dev/pandas/issues/28969))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` that raised `IndexError` when appending with empty
    list ([GH 28769](https://github.com/pandas-dev/pandas/issues/28769))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fix `AbstractHolidayCalendar` to return correct results for years after 2030
    (now goes up to 2200) ([GH 27790](https://github.com/pandas-dev/pandas/issues/27790))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed [`IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") returning `inf` rather than `NaN` for operations
    dividing by `0` ([GH 27398](https://github.com/pandas-dev/pandas/issues/27398))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed `pow` operations for [`IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") when the other value is `0` or `1` ([GH 29997](https://github.com/pandas-dev/pandas/issues/29997))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.count()`](../reference/api/pandas.Series.count.html#pandas.Series.count
    "pandas.Series.count") raises if use_inf_as_na is enabled ([GH 29478](https://github.com/pandas-dev/pandas/issues/29478))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    where a non-hashable name could be set without raising `TypeError` ([GH 29069](https://github.com/pandas-dev/pandas/issues/29069))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor when passing a 2D `ndarray` and an extension dtype
    ([GH 12513](https://github.com/pandas-dev/pandas/issues/12513))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") when supplied a series with a `dtype="string"` and
    a `na_rep`, the `na_rep` was being truncated to 2 characters. ([GH 29975](https://github.com/pandas-dev/pandas/issues/29975))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`DataFrame.itertuples()`](../reference/api/pandas.DataFrame.itertuples.html#pandas.DataFrame.itertuples
    "pandas.DataFrame.itertuples") would incorrectly determine whether or not namedtuples
    could be used for dataframes of 255 columns ([GH 28282](https://github.com/pandas-dev/pandas/issues/28282))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Handle nested NumPy `object` arrays in [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") for ExtensionArray implementations ([GH
    30841](https://github.com/pandas-dev/pandas/issues/30841))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    constructor incorrectly allowing 2-dimensional input arrays ([GH 13601](https://github.com/pandas-dev/pandas/issues/13601),
    [GH 27125](https://github.com/pandas-dev/pandas/issues/27125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Added test to assert the `fillna()` raises the correct `ValueError` message
    when the value isn’t a value from categories ([GH 13628](https://github.com/pandas-dev/pandas/issues/13628))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.astype()` where `NaN` values were handled incorrectly when
    casting to int ([GH 28406](https://github.com/pandas-dev/pandas/issues/28406))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") would fail when the targets contained duplicates, and
    wouldn’t fail if the source contained duplicates ([GH 28107](https://github.com/pandas-dev/pandas/issues/28107))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.astype()` not allowing for casting to extension dtypes ([GH
    28668](https://github.com/pandas-dev/pandas/issues/28668))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    was unable to join on categorical and extension dtype columns ([GH 28668](https://github.com/pandas-dev/pandas/issues/28668))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.searchsorted()` and `CategoricalIndex.searchsorted()` now work
    on unordered categoricals also ([GH 21667](https://github.com/pandas-dev/pandas/issues/21667))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added test to assert roundtripping to parquet with [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") or [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") will preserve Categorical dtypes for string types ([GH
    27955](https://github.com/pandas-dev/pandas/issues/27955))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the error message in `Categorical.remove_categories()` to always show
    the invalid removals as a set ([GH 28669](https://github.com/pandas-dev/pandas/issues/28669))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using date accessors on a categorical dtyped [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") of datetimes was not returning an object of the same type as
    if one used the `str.()` / `dt.()` on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") of that type. E.g. when accessing [`Series.dt.tz_localize()`](../reference/api/pandas.Series.dt.tz_localize.html#pandas.Series.dt.tz_localize
    "pandas.Series.dt.tz_localize") on a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") with duplicate entries, the accessor was skipping duplicates
    ([GH 27952](https://github.com/pandas-dev/pandas/issues/27952))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") that would give incorrect results on categorical data
    ([GH 26988](https://github.com/pandas-dev/pandas/issues/26988))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where calling `Categorical.min()` or `Categorical.max()` on an empty Categorical
    would raise a numpy exception ([GH 30227](https://github.com/pandas-dev/pandas/issues/30227))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The following methods now also correctly output values for unobserved categories
    when called through `groupby(..., observed=False)` ([GH 17605](https://github.com/pandas-dev/pandas/issues/17605))
    * [`core.groupby.SeriesGroupBy.count()`](../reference/api/pandas.core.groupby.SeriesGroupBy.count.html#pandas.core.groupby.SeriesGroupBy.count
    "pandas.core.groupby.SeriesGroupBy.count") * [`core.groupby.SeriesGroupBy.size()`](../reference/api/pandas.core.groupby.SeriesGroupBy.size.html#pandas.core.groupby.SeriesGroupBy.size
    "pandas.core.groupby.SeriesGroupBy.size") * [`core.groupby.SeriesGroupBy.nunique()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nunique.html#pandas.core.groupby.SeriesGroupBy.nunique
    "pandas.core.groupby.SeriesGroupBy.nunique") * [`core.groupby.SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth")
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` incorrectly casting `np.timedelta64("NaT")` to
    `np.datetime64("NaT")` when inserting into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with datetime64 dtype ([GH 27311](https://github.com/pandas-dev/pandas/issues/27311))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.dt()`](../reference/api/pandas.Series.dt.html#pandas.Series.dt
    "pandas.Series.dt") property lookups when the underlying data is read-only ([GH
    27529](https://github.com/pandas-dev/pandas/issues/27529))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `HDFStore.__getitem__` incorrectly reading tz attribute created in Python
    2 ([GH 26443](https://github.com/pandas-dev/pandas/issues/26443))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") where passing arrays of malformed `str` with errors=”coerce”
    could incorrectly lead to raising `ValueError` ([GH 28299](https://github.com/pandas-dev/pandas/issues/28299))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`core.groupby.SeriesGroupBy.nunique()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nunique.html#pandas.core.groupby.SeriesGroupBy.nunique
    "pandas.core.groupby.SeriesGroupBy.nunique") where `NaT` values were interfering
    with the count of unique values ([GH 27951](https://github.com/pandas-dev/pandas/issues/27951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") subtraction when subtracting a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") from a `np.datetime64` object incorrectly raising `TypeError`
    ([GH 28286](https://github.com/pandas-dev/pandas/issues/28286))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Addition and subtraction of integer or integer-dtype arrays with [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") will now raise `NullFrequencyError` instead of `ValueError`
    ([GH 28268](https://github.com/pandas-dev/pandas/issues/28268))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    with integer dtype failing to raise `TypeError` when adding or subtracting a `np.datetime64`
    object ([GH 28080](https://github.com/pandas-dev/pandas/issues/28080))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype"), [`Index.astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype"), and [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") failing to handle `NaT` when casting to an integer
    dtype ([GH 28492](https://github.com/pandas-dev/pandas/issues/28492))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Week` with `weekday` incorrectly raising `AttributeError` instead of
    `TypeError` when adding or subtracting an invalid type ([GH 28530](https://github.com/pandas-dev/pandas/issues/28530))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") arithmetic operations when operating with a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with dtype `'timedelta64[ns]'` ([GH 28049](https://github.com/pandas-dev/pandas/issues/28049))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `core.groupby.generic.SeriesGroupBy.apply()` raising `ValueError` when
    a column in the original DataFrame is a datetime and the column labels are not
    standard integers ([GH 28247](https://github.com/pandas-dev/pandas/issues/28247))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas._config.localization.get_locales()` where the `locales -a` encodes
    the locales list as windows-1252 ([GH 23638](https://github.com/pandas-dev/pandas/issues/23638),
    [GH 24760](https://github.com/pandas-dev/pandas/issues/24760), [GH 27368](https://github.com/pandas-dev/pandas/issues/27368))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.var()`](../reference/api/pandas.Series.var.html#pandas.Series.var
    "pandas.Series.var") failing to raise `TypeError` when called with `timedelta64[ns]`
    dtype ([GH 28289](https://github.com/pandas-dev/pandas/issues/28289))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex.strftime()`](../reference/api/pandas.DatetimeIndex.strftime.html#pandas.DatetimeIndex.strftime
    "pandas.DatetimeIndex.strftime") and [`Series.dt.strftime()`](../reference/api/pandas.Series.dt.strftime.html#pandas.Series.dt.strftime
    "pandas.Series.dt.strftime") where `NaT` was converted to the string `'NaT'` instead
    of `np.nan` ([GH 29578](https://github.com/pandas-dev/pandas/issues/29578))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in masking datetime-like arrays with a boolean mask of an incorrect length
    not raising an `IndexError` ([GH 30308](https://github.com/pandas-dev/pandas/issues/30308))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.resolution`](../reference/api/pandas.Timestamp.resolution.html#pandas.Timestamp.resolution
    "pandas.Timestamp.resolution") being a property instead of a class attribute ([GH
    29910](https://github.com/pandas-dev/pandas/issues/29910))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when called with `None` raising `TypeError` instead of returning
    `NaT` ([GH 30011](https://github.com/pandas-dev/pandas/issues/30011))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") failing for `deque` objects when using `cache=True` (the
    default) ([GH 29403](https://github.com/pandas-dev/pandas/issues/29403))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.item()`](../reference/api/pandas.Series.item.html#pandas.Series.item
    "pandas.Series.item") with `datetime64` or `timedelta64` dtype, `DatetimeIndex.item()`,
    and `TimedeltaIndex.item()` returning an integer instead of a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") or [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") ([GH 30175](https://github.com/pandas-dev/pandas/issues/30175))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") addition when adding a non-optimized `DateOffset` incorrectly
    dropping timezone information ([GH 30336](https://github.com/pandas-dev/pandas/issues/30336))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") where attempting to drop non-existent values from a DatetimeIndex
    would yield a confusing error message ([GH 30399](https://github.com/pandas-dev/pandas/issues/30399))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` would remove the timezone-awareness of new data
    ([GH 30238](https://github.com/pandas-dev/pandas/issues/30238))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.cummin()`](../reference/api/pandas.Series.cummin.html#pandas.Series.cummin
    "pandas.Series.cummin") and [`Series.cummax()`](../reference/api/pandas.Series.cummax.html#pandas.Series.cummax
    "pandas.Series.cummax") with timezone-aware dtype incorrectly dropping its timezone
    ([GH 15553](https://github.com/pandas-dev/pandas/issues/15553))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeArray`, `TimedeltaArray`, and `PeriodArray` where inplace addition
    and subtraction did not actually operate inplace ([GH 24115](https://github.com/pandas-dev/pandas/issues/24115))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when called with `Series` storing `IntegerArray` raising
    `TypeError` instead of returning `Series` ([GH 30050](https://github.com/pandas-dev/pandas/issues/30050))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") with custom business hours as `freq` and given number of
    `periods` ([GH 30593](https://github.com/pandas-dev/pandas/issues/30593))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") comparisons with incorrectly casting integers to [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") objects, inconsistent with the [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") comparison behavior ([GH 30722](https://github.com/pandas-dev/pandas/issues/30722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.insert()` raising a `ValueError` instead of a `TypeError`
    when trying to insert a timezone-aware [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") into a timezone-naive [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), or vice-versa ([GH 30806](https://github.com/pandas-dev/pandas/issues/30806))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in subtracting a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") or `TimedeltaArray` from a `np.datetime64` object ([GH
    29558](https://github.com/pandas-dev/pandas/issues/29558))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile") with zero-column [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") incorrectly raising ([GH 23925](https://github.com/pandas-dev/pandas/issues/23925))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    flex inequality comparisons methods ([`DataFrame.lt()`](../reference/api/pandas.DataFrame.lt.html#pandas.DataFrame.lt
    "pandas.DataFrame.lt"), [`DataFrame.le()`](../reference/api/pandas.DataFrame.le.html#pandas.DataFrame.le
    "pandas.DataFrame.le"), [`DataFrame.gt()`](../reference/api/pandas.DataFrame.gt.html#pandas.DataFrame.gt
    "pandas.DataFrame.gt"), [`DataFrame.ge()`](../reference/api/pandas.DataFrame.ge.html#pandas.DataFrame.ge
    "pandas.DataFrame.ge")) with object-dtype and `complex` entries failing to raise
    `TypeError` like their [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") counterparts ([GH 28079](https://github.com/pandas-dev/pandas/issues/28079))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") logical operations (`&`, `|`, `^`) not matching [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") behavior by filling NA values ([GH 28741](https://github.com/pandas-dev/pandas/issues/28741))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") where specifying axis by name references variable
    before it is assigned ([GH 29142](https://github.com/pandas-dev/pandas/issues/29142))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.var()`](../reference/api/pandas.Series.var.html#pandas.Series.var
    "pandas.Series.var") not computing the right value with a nullable integer dtype
    series not passing through ddof argument ([GH 29128](https://github.com/pandas-dev/pandas/issues/29128))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when using `frac` > 1 and `replace` = False ([GH 27451](https://github.com/pandas-dev/pandas/issues/27451))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in numeric indexes resulted in it being possible to instantiate an `Int64Index`,
    `UInt64Index`, or `Float64Index` with an invalid dtype (e.g. datetime-like) ([GH
    29539](https://github.com/pandas-dev/pandas/issues/29539))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `UInt64Index` precision loss while constructing from a list with values
    in the `np.uint64` range ([GH 29526](https://github.com/pandas-dev/pandas/issues/29526))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `NumericIndex` construction that caused indexing to fail when integers
    in the `np.uint64` range were used ([GH 28023](https://github.com/pandas-dev/pandas/issues/28023))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `NumericIndex` construction that caused `UInt64Index` to be casted to
    `Float64Index` when integers in the `np.uint64` range were used to index a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 28279](https://github.com/pandas-dev/pandas/issues/28279))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") when using method=`index` with an unsorted index,
    would previously return incorrect results. ([GH 21037](https://github.com/pandas-dev/pandas/issues/21037))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.round()`](../reference/api/pandas.DataFrame.round.html#pandas.DataFrame.round
    "pandas.DataFrame.round") where a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") of [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") columns would incorrectly raise a `TypeError` ([GH 30063](https://github.com/pandas-dev/pandas/issues/30063))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.pct_change()`](../reference/api/pandas.Series.pct_change.html#pandas.Series.pct_change
    "pandas.Series.pct_change") and [`DataFrame.pct_change()`](../reference/api/pandas.DataFrame.pct_change.html#pandas.DataFrame.pct_change
    "pandas.DataFrame.pct_change") when there are duplicated indices ([GH 30463](https://github.com/pandas-dev/pandas/issues/30463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") cumulative operations (e.g. cumsum, cummax) incorrect casting
    to object-dtype ([GH 19296](https://github.com/pandas-dev/pandas/issues/19296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`diff`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff") losing the dtype for extension types ([GH 30889](https://github.com/pandas-dev/pandas/issues/30889))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.diff`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff") raising an `IndexError` when one of the columns was a
    nullable integer dtype ([GH 30967](https://github.com/pandas-dev/pandas/issues/30967))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Calling [`Series.str.isalnum()`](../reference/api/pandas.Series.str.isalnum.html#pandas.Series.str.isalnum
    "pandas.Series.str.isalnum") (and other “ismethods”) on an empty `Series` would
    return an `object` dtype instead of `bool` ([GH 29624](https://github.com/pandas-dev/pandas/issues/29624))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.get_indexer()`](../reference/api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer") where a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") or [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") `target` would incorrectly raise a `TypeError` ([GH
    30063](https://github.com/pandas-dev/pandas/issues/30063))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas.core.dtypes.cast.infer_dtype_from_scalar` where passing `pandas_dtype=True`
    did not infer [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") ([GH 30337](https://github.com/pandas-dev/pandas/issues/30337))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor where constructing a `Series` from a `list` of [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") objects resulted in `object` dtype instead of [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") ([GH 23563](https://github.com/pandas-dev/pandas/issues/23563))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") where the `kind` attribute was incorrectly set as `None`
    instead of `"O"` ([GH 30568](https://github.com/pandas-dev/pandas/issues/30568))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex"), [`IntervalArray`](../reference/api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray"), and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with interval data where equality comparisons were incorrect
    ([GH 24112](https://github.com/pandas-dev/pandas/issues/24112))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in assignment using a reverse slicer ([GH 26939](https://github.com/pandas-dev/pandas/issues/26939))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.explode()`](../reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode
    "pandas.DataFrame.explode") would duplicate frame in the presence of duplicates
    in the index ([GH 28010](https://github.com/pandas-dev/pandas/issues/28010))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in reindexing a [`PeriodIndex()`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") with another type of index that contained a `Period` ([GH
    28323](https://github.com/pandas-dev/pandas/issues/28323)) ([GH 28337](https://github.com/pandas-dev/pandas/issues/28337))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fix assignment of column via `.loc` with numpy non-ns datetime type ([GH 27395](https://github.com/pandas-dev/pandas/issues/27395))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Float64Index.astype()` where `np.inf` was not handled properly when
    casting to an integer dtype ([GH 28475](https://github.com/pandas-dev/pandas/issues/28475))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") could fail when the left contained duplicates ([GH 28257](https://github.com/pandas-dev/pandas/issues/28257))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when indexing with `.loc` where the index was a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") with non-string categories didn’t work ([GH 17569](https://github.com/pandas-dev/pandas/issues/17569),
    [GH 30225](https://github.com/pandas-dev/pandas/issues/30225))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.get_indexer_non_unique()`](../reference/api/pandas.Index.get_indexer_non_unique.html#pandas.Index.get_indexer_non_unique
    "pandas.Index.get_indexer_non_unique") could fail with `TypeError` in some cases,
    such as when searching for ints in a string index ([GH 28257](https://github.com/pandas-dev/pandas/issues/28257))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Float64Index.get_loc()` incorrectly raising `TypeError` instead of `KeyError`
    ([GH 29189](https://github.com/pandas-dev/pandas/issues/29189))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") with incorrect dtype when setting Categorical value in
    1-row DataFrame ([GH 25495](https://github.com/pandas-dev/pandas/issues/25495))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") can’t find missing values when input includes missing
    values ([GH 19132](https://github.com/pandas-dev/pandas/issues/19132))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` incorrectly assigning values with boolean indexer
    when the length of new data matches the number of `True` values and new data is
    not a `Series` or an `np.array` ([GH 30567](https://github.com/pandas-dev/pandas/issues/30567))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing with a [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") incorrectly accepting integers representing years, use e.g.
    `ser.loc["2007"]` instead of `ser.loc[2007]` ([GH 30763](https://github.com/pandas-dev/pandas/issues/30763))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Constructor for [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") verifies that the given `sortorder` is compatible with the
    actual `lexsort_depth` if `verify_integrity` parameter is `True` (the default)
    ([GH 28735](https://github.com/pandas-dev/pandas/issues/28735))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Series and MultiIndex `.drop` with `MultiIndex` raise exception if labels not
    in given in level ([GH 8594](https://github.com/pandas-dev/pandas/issues/8594))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IO
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now accepts binary mode file buffers when using the Python csv engine ([GH 23779](https://github.com/pandas-dev/pandas/issues/23779))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") where using a Tuple as a column or index value and
    using `orient="columns"` or `orient="index"` would produce invalid JSON ([GH 20500](https://github.com/pandas-dev/pandas/issues/20500))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve infinity parsing. [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") now interprets `Infinity`, `+Infinity`, `-Infinity` as floating
    point values ([GH 10065](https://github.com/pandas-dev/pandas/issues/10065))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") where values were truncated when the length of `na_rep`
    was shorter than the text input data. ([GH 25099](https://github.com/pandas-dev/pandas/issues/25099))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") where values were truncated using display options
    instead of outputting the full content ([GH 9784](https://github.com/pandas-dev/pandas/issues/9784))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") where a datetime column label would not be written
    out in ISO format with `orient="table"` ([GH 28130](https://github.com/pandas-dev/pandas/issues/28130))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") where writing to GCS would fail with `engine='fastparquet'`
    if the file did not already exist ([GH 28326](https://github.com/pandas-dev/pandas/issues/28326))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") closing stores that it didn’t open when Exceptions are raised
    ([GH 28699](https://github.com/pandas-dev/pandas/issues/28699))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.read_json()` where using `orient="index"` would not maintain
    the order ([GH 28557](https://github.com/pandas-dev/pandas/issues/28557))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") where the length of the `formatters` argument was
    not verified ([GH 28469](https://github.com/pandas-dev/pandas/issues/28469))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.read_excel()` with `engine='ods'` when `sheet_name` argument
    references a non-existent sheet ([GH 27676](https://github.com/pandas-dev/pandas/issues/27676))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.io.formats.style.Styler()`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") formatting for floating values not displaying
    decimals correctly ([GH 13257](https://github.com/pandas-dev/pandas/issues/13257))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") when using `formatters=<list>` and `max_cols` together.
    ([GH 25955](https://github.com/pandas-dev/pandas/issues/25955))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Styler.background_gradient()` not able to work with dtype `Int64` ([GH
    28869](https://github.com/pandas-dev/pandas/issues/28869))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_clipboard()`](../reference/api/pandas.DataFrame.to_clipboard.html#pandas.DataFrame.to_clipboard
    "pandas.DataFrame.to_clipboard") which did not work reliably in ipython ([GH 22707](https://github.com/pandas-dev/pandas/issues/22707))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") where default encoding was not set to `utf-8` ([GH 29565](https://github.com/pandas-dev/pandas/issues/29565))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `PythonParser` where str and bytes were being mixed when dealing with
    the decimal field ([GH 29650](https://github.com/pandas-dev/pandas/issues/29650))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq "pandas.read_gbq")
    now accepts `progress_bar_type` to display progress bar while the data downloads.
    ([GH 29857](https://github.com/pandas-dev/pandas/issues/29857))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas.io.json.json_normalize()` where a missing value in the location
    specified by `record_path` would raise a `TypeError` ([GH 30148](https://github.com/pandas-dev/pandas/issues/30148))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") now accepts binary data ([GH 15914](https://github.com/pandas-dev/pandas/issues/15914))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") in which encoding handling was limited to just the string `utf-16`
    for the C engine ([GH 24130](https://github.com/pandas-dev/pandas/issues/24130))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") not able to plot boolean values ([GH 23719](https://github.com/pandas-dev/pandas/issues/23719))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") not able to plot when no rows ([GH 27758](https://github.com/pandas-dev/pandas/issues/27758))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") producing incorrect legend markers when plotting multiple
    series on the same axis ([GH 18222](https://github.com/pandas-dev/pandas/issues/18222))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") when `kind='box'` and data contains datetime or timedelta
    data. These types are now automatically dropped ([GH 22799](https://github.com/pandas-dev/pandas/issues/22799))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.line()`](../reference/api/pandas.DataFrame.plot.line.html#pandas.DataFrame.plot.line
    "pandas.DataFrame.plot.line") and [`DataFrame.plot.area()`](../reference/api/pandas.DataFrame.plot.area.html#pandas.DataFrame.plot.area
    "pandas.DataFrame.plot.area") produce wrong xlim in x-axis ([GH 27686](https://github.com/pandas-dev/pandas/issues/27686),
    [GH 25160](https://github.com/pandas-dev/pandas/issues/25160), [GH 24784](https://github.com/pandas-dev/pandas/issues/24784))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`DataFrame.boxplot()`](../reference/api/pandas.DataFrame.boxplot.html#pandas.DataFrame.boxplot
    "pandas.DataFrame.boxplot") would not accept a `color` parameter like [`DataFrame.plot.box()`](../reference/api/pandas.DataFrame.plot.box.html#pandas.DataFrame.plot.box
    "pandas.DataFrame.plot.box") ([GH 26214](https://github.com/pandas-dev/pandas/issues/26214))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the `xticks` argument being ignored for [`DataFrame.plot.bar()`](../reference/api/pandas.DataFrame.plot.bar.html#pandas.DataFrame.plot.bar
    "pandas.DataFrame.plot.bar") ([GH 14119](https://github.com/pandas-dev/pandas/issues/14119))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`set_option()`](../reference/api/pandas.set_option.html#pandas.set_option
    "pandas.set_option") now validates that the plot backend provided to `''plotting.backend''`
    implements the backend when the option is set, rather than when a plot is created
    ([GH 28163](https://github.com/pandas-dev/pandas/issues/28163))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") now allow a `backend` keyword argument to allow changing
    between backends in one session ([GH 28619](https://github.com/pandas-dev/pandas/issues/28619)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in color validation incorrectly raising for non-color styles ([GH 29122](https://github.com/pandas-dev/pandas/issues/29122)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow [`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") to plot `objects` and `datetime` type data ([GH
    18755](https://github.com/pandas-dev/pandas/issues/18755), [GH 30391](https://github.com/pandas-dev/pandas/issues/30391))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.hist()`](../reference/api/pandas.DataFrame.hist.html#pandas.DataFrame.hist
    "pandas.DataFrame.hist"), `xrot=0` does not work with `by` and subplots ([GH 30288](https://github.com/pandas-dev/pandas/issues/30288)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GroupBy/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`core.groupby.DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") only showing output from a single
    group when function returns an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 28652](https://github.com/pandas-dev/pandas/issues/28652))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") with multiple groups where an `IndexError` would be
    raised if any group contained all NA values ([GH 20519](https://github.com/pandas-dev/pandas/issues/20519))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Resampler.size()`](../reference/api/pandas.core.resample.Resampler.size.html#pandas.core.resample.Resampler.size
    "pandas.core.resample.Resampler.size") and [`Resampler.count()`](../reference/api/pandas.core.resample.Resampler.count.html#pandas.core.resample.Resampler.count
    "pandas.core.resample.Resampler.count") returning wrong dtype when used with an
    empty [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    ([GH 28427](https://github.com/pandas-dev/pandas/issues/28427))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") not allowing for rolling over datetimes when `axis=1`
    ([GH 28192](https://github.com/pandas-dev/pandas/issues/28192))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") not allowing rolling over multi-index levels ([GH
    15584](https://github.com/pandas-dev/pandas/issues/15584)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") not allowing rolling on monotonic decreasing time
    indexes ([GH 19248](https://github.com/pandas-dev/pandas/issues/19248)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") not offering selection by column name when `axis=1`
    ([GH 27614](https://github.com/pandas-dev/pandas/issues/27614))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `core.groupby.DataFrameGroupby.agg()` not able to use lambda function
    with named aggregation ([GH 27519](https://github.com/pandas-dev/pandas/issues/27519))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") losing column name information when grouping by a
    categorical column ([GH 28787](https://github.com/pandas-dev/pandas/issues/28787))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove error raised due to duplicated input functions in named aggregation in
    [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby"). Previously error will be raised if the same function
    is applied on the same column and now it is allowed if new assigned names are
    different. ([GH 28426](https://github.com/pandas-dev/pandas/issues/28426))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`core.groupby.SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") will be able to handle the case
    even when the [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper") makes empty groups ([GH 28479](https://github.com/pandas-dev/pandas/issues/28479))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`core.window.rolling.Rolling.quantile()`](../reference/api/pandas.core.window.rolling.Rolling.quantile.html#pandas.core.window.rolling.Rolling.quantile
    "pandas.core.window.rolling.Rolling.quantile") ignoring `interpolation` keyword
    argument when used within a groupby ([GH 28779](https://github.com/pandas-dev/pandas/issues/28779))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") where `any`, `all`, `nunique` and transform functions
    would incorrectly handle duplicate column labels ([GH 21668](https://github.com/pandas-dev/pandas/issues/21668))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`core.groupby.DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") with timezone-aware datetime64 column
    incorrectly casting results to the original dtype ([GH 29641](https://github.com/pandas-dev/pandas/issues/29641))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") when using axis=1 and having a single level columns
    index ([GH 30208](https://github.com/pandas-dev/pandas/issues/30208))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") when using nunique on axis=1 ([GH 30253](https://github.com/pandas-dev/pandas/issues/30253))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile") with multiple list-like q value
    and integer column names ([GH 30289](https://github.com/pandas-dev/pandas/issues/30289))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.pct_change()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.pct_change.html#pandas.core.groupby.DataFrameGroupBy.pct_change
    "pandas.core.groupby.DataFrameGroupBy.pct_change") and [`SeriesGroupBy.pct_change()`](../reference/api/pandas.core.groupby.SeriesGroupBy.pct_change.html#pandas.core.groupby.SeriesGroupBy.pct_change
    "pandas.core.groupby.SeriesGroupBy.pct_change") causes `TypeError` when `fill_method`
    is `None` ([GH 30463](https://github.com/pandas-dev/pandas/issues/30463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Rolling.count()` and `Expanding.count()` argument where `min_periods`
    was ignored ([GH 26996](https://github.com/pandas-dev/pandas/issues/26996))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") that caused incorrect output with empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 28202](https://github.com/pandas-dev/pandas/issues/28202),
    [GH 21959](https://github.com/pandas-dev/pandas/issues/21959))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") not handling non-unique indexes correctly when creating
    MultiIndex ([GH 28301](https://github.com/pandas-dev/pandas/issues/28301))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") not returning correct type `float` when `margins=True` and
    `aggfunc='mean'` ([GH 24893](https://github.com/pandas-dev/pandas/issues/24893))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") could not use [`datetime.timedelta`](https://docs.python.org/3/library/datetime.html#datetime.timedelta
    "(in Python v3.12)") for `tolerance` kwarg ([GH 28098](https://github.com/pandas-dev/pandas/issues/28098))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge"),
    did not append suffixes correctly with MultiIndex ([GH 28518](https://github.com/pandas-dev/pandas/issues/28518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`qcut()`](../reference/api/pandas.qcut.html#pandas.qcut "pandas.qcut") and
    [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") now handle
    boolean input ([GH 20303](https://github.com/pandas-dev/pandas/issues/20303))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fix to ensure all int dtypes can be used in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") when using a tolerance value. Previously every non-int64
    type would raise an erroneous `MergeError` ([GH 28870](https://github.com/pandas-dev/pandas/issues/28870)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Better error message in [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") when `columns` isn’t a list-like value ([GH 28383](https://github.com/pandas-dev/pandas/issues/28383))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.join()`](../reference/api/pandas.Index.join.html#pandas.Index.join
    "pandas.Index.join") that caused infinite recursion error for mismatched `MultiIndex`
    name orders. ([GH 25760](https://github.com/pandas-dev/pandas/issues/25760), [GH
    28956](https://github.com/pandas-dev/pandas/issues/28956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug [`Series.pct_change()`](../reference/api/pandas.Series.pct_change.html#pandas.Series.pct_change
    "pandas.Series.pct_change") where supplying an anchored frequency would throw
    a `ValueError` ([GH 28664](https://github.com/pandas-dev/pandas/issues/28664))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`DataFrame.equals()`](../reference/api/pandas.DataFrame.equals.html#pandas.DataFrame.equals
    "pandas.DataFrame.equals") returned True incorrectly in some cases when two DataFrames
    had the same columns in different orders ([GH 28839](https://github.com/pandas-dev/pandas/issues/28839))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") that caused non-numeric replacer’s dtype not respected
    ([GH 26632](https://github.com/pandas-dev/pandas/issues/26632))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt")
    where supplying mixed strings and numeric values for `id_vars` or `value_vars`
    would incorrectly raise a `ValueError` ([GH 29718](https://github.com/pandas-dev/pandas/issues/29718))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dtypes are now preserved when transposing a `DataFrame` where each column is
    the same extension dtype ([GH 30091](https://github.com/pandas-dev/pandas/issues/30091))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") merging on a tz-aware `left_index` and `right_on` a tz-aware
    column ([GH 29864](https://github.com/pandas-dev/pandas/issues/29864))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message and docstring in [`cut()`](../reference/api/pandas.cut.html#pandas.cut
    "pandas.cut") and [`qcut()`](../reference/api/pandas.qcut.html#pandas.qcut "pandas.qcut")
    when `labels=True` ([GH 13318](https://github.com/pandas-dev/pandas/issues/13318))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in missing `fill_na` parameter to [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") with list of levels ([GH 30740](https://github.com/pandas-dev/pandas/issues/30740))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `SparseDataFrame` arithmetic operations incorrectly casting inputs to
    float ([GH 28107](https://github.com/pandas-dev/pandas/issues/28107))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.sparse` returning a `Series` when there was a column named
    `sparse` rather than the accessor ([GH 30758](https://github.com/pandas-dev/pandas/issues/30758))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed `operator.xor()` with a boolean-dtype `SparseArray`. Now returns a sparse
    result, rather than object dtype ([GH 31025](https://github.com/pandas-dev/pandas/issues/31025))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `arrays.PandasArray` when setting a scalar string ([GH 28118](https://github.com/pandas-dev/pandas/issues/28118),
    [GH 28150](https://github.com/pandas-dev/pandas/issues/28150)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where nullable integers could not be compared to strings ([GH 28930](https://github.com/pandas-dev/pandas/issues/28930))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor raised `ValueError` with list-like data and `dtype`
    specified ([GH 30280](https://github.com/pandas-dev/pandas/issues/30280))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Trying to set the `display.precision`, `display.max_rows` or `display.max_columns`
    using [`set_option()`](../reference/api/pandas.set_option.html#pandas.set_option
    "pandas.set_option") to anything but a `None` or a positive int will raise a `ValueError`
    ([GH 23348](https://github.com/pandas-dev/pandas/issues/23348))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") with overlapping keys in a nested dictionary will
    no longer raise, now matching the behavior of a flat dictionary ([GH 27660](https://github.com/pandas-dev/pandas/issues/27660))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") and [`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv") now support dicts as `compression` argument with key `''method''`
    being the compression method and others as additional compression options when
    the compression method is `''zip''`. ([GH 26023](https://github.com/pandas-dev/pandas/issues/26023))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.diff()`](../reference/api/pandas.Series.diff.html#pandas.Series.diff
    "pandas.Series.diff") where a boolean series would incorrectly raise a `TypeError`
    ([GH 17294](https://github.com/pandas-dev/pandas/issues/17294))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.append()` will no longer raise a `TypeError` when passed a tuple of
    `Series` ([GH 28410](https://github.com/pandas-dev/pandas/issues/28410))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fix corrupted error message when calling `pandas.libs._json.encode()` on a 0d
    array ([GH 18878](https://github.com/pandas-dev/pandas/issues/18878))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Backtick quoting in [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") and [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") can now also be used to use invalid identifiers like
    names that start with a digit, are python keywords, or are using single character
    operators. ([GH 27017](https://github.com/pandas-dev/pandas/issues/27017))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.core.util.hashing.hash_pandas_object` where arrays containing tuples
    were incorrectly treated as non-hashable ([GH 28969](https://github.com/pandas-dev/pandas/issues/28969))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` that raised `IndexError` when appending with empty
    list ([GH 28769](https://github.com/pandas-dev/pandas/issues/28769))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fix `AbstractHolidayCalendar` to return correct results for years after 2030
    (now goes up to 2200) ([GH 27790](https://github.com/pandas-dev/pandas/issues/27790))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed [`IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") returning `inf` rather than `NaN` for operations
    dividing by `0` ([GH 27398](https://github.com/pandas-dev/pandas/issues/27398))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed `pow` operations for [`IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") when the other value is `0` or `1` ([GH 29997](https://github.com/pandas-dev/pandas/issues/29997))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.count()`](../reference/api/pandas.Series.count.html#pandas.Series.count
    "pandas.Series.count") raises if use_inf_as_na is enabled ([GH 29478](https://github.com/pandas-dev/pandas/issues/29478))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    where a non-hashable name could be set without raising `TypeError` ([GH 29069](https://github.com/pandas-dev/pandas/issues/29069))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor when passing a 2D `ndarray` and an extension dtype
    ([GH 12513](https://github.com/pandas-dev/pandas/issues/12513))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") when supplied a series with a `dtype="string"` and
    a `na_rep`, the `na_rep` was being truncated to 2 characters. ([GH 29975](https://github.com/pandas-dev/pandas/issues/29975))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`DataFrame.itertuples()`](../reference/api/pandas.DataFrame.itertuples.html#pandas.DataFrame.itertuples
    "pandas.DataFrame.itertuples") would incorrectly determine whether or not namedtuples
    could be used for dataframes of 255 columns ([GH 28282](https://github.com/pandas-dev/pandas/issues/28282))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Handle nested NumPy `object` arrays in [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") for ExtensionArray implementations ([GH
    30841](https://github.com/pandas-dev/pandas/issues/30841))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    constructor incorrectly allowing 2-dimensional input arrays ([GH 13601](https://github.com/pandas-dev/pandas/issues/13601),
    [GH 27125](https://github.com/pandas-dev/pandas/issues/27125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Contributors'
  prefs: []
  type: TYPE_NORMAL
- en: A total of 308 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: Aaditya Panikath +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abdullah İhsan Seçer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abhijeet Krishnan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam J. Stewart
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam Klaum +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Addison Lynch
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aivengoe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alastair James +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Albert Villanova del Moral
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Kirko +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alfredo Granja +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allen Downey
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alp Arıbal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andreas Buhr +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Munch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Angela Ambroz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aniruddha Bhattacharjee +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ankit Dhankhar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antonio Andraues Jr +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arda Kosar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Asish Mahapatra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Austin Hackett +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avi Kelman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AyowoleT +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bas Nijholt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben Thayer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bharat Raghunathan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bhavani Ravi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bhuvana KA +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Big Head
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blake Hawkins +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bobae Kim +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brett Naul
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brian Wignall
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bruno P. Kinoshita +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bryant Moscon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cesar H +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Stadler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Zimmerman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christopher Whelan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clemens Brunner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clemens Tolboom +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connor Charles +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Hähnke +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Saxton
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Darin Plutchok +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dave Hughes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Stansby
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DavidRosen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dean +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deepan Das +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deepyaman Datta
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DorAmram +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dorothy Kabarozi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Drew Heenan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eliza Mae Saret +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Elle +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Endre Mark Borza +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eric Brassell +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eric Wong +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eunseop Jeong +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eyden Villanueva +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Felix Divo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ForTimeBeing +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Francesco Truzzi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gabriel Corona +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gabriel Monteiro +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Galuh Sahid +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Georgi Baychev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gina
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GiuPassarelli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Grigorios Giannakopoulos +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guilherme Leite +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guilherme Salomé +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gyeongjae Choi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Harshavardhan Bachina +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Harutaka Kawamura +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hassan Kibirige
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hielke Walinga
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hubert
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hugh Kelley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ian Eaves +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ignacio Santolin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Igor Filippov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Irv Lustig
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Isaac Virshup +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ivan Bessarabov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JMBurley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jack Bicknell +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jacob Buckheit +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Koch
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Pipek +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Škoda +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan-Philip Gehrcke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jasper J.F. van den Bosch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Javad +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeremy Schendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeroen Kant +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jesse Pardue +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jethro Cao +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jiang Yue
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jiaxiang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jihyung Moon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jimmy Callin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jinyang Zhou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joao Victor Martinelli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joaq Almirante +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John G Evans +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John Ward +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonathan Larkin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josh Dimarsky +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joshua Smith +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josiah Baker +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julia Signell +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jung Dong Ho +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justin Cole +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justin Zheng
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kaiqi Dong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Karthigeyan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Katherine Younglove +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Katrin Leinweber
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kee Chong Tan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keith Kraus +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Nguyen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kisekka David +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Koushik +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kyle Boone +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kyle McCahill +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Laura Collard, PhD +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LiuSeeker +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Louis Huynh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lucas Scarlato Astur +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luiz Gustavo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luke +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luke Shepard +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MKhalusova +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mabel Villalba
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maciej J +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mak Sze Chun
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Manu NALEPA +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Garcia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Gorelli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Neumann +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Winkel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martina G. Vilas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mateusz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Tan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Max Bolingbroke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Max Chen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MeeseeksMachine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Miguel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MinGyo Jung +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mohamed Amine ZGHAL +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mohit Anand +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MomIsBestFriend +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Naomi Bonnin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nathan Abel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nico Cernek +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nigel Markey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Noritada Kobayashi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oktay Sabak +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oliver Hofkens +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oluokun Adedayo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Osman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oğuzhan Öğreden +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas Development Team +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patrik Hlobil +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul Lee +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul Siegel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Petr Baev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pietro Battiston
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prakhar Pandey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Puneeth K +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Raghav +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rajat +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rajhans Jadhao +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rajiv Bharadwaj +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rik-de-Kort +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roei.r
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rohit Sanjay +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ronan Lamy +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roshni +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roymprog +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rushabh Vasani +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ryan Grout +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ryan Nazareth
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Samesh Lakhotia +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Samuel Sinayoko
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Samyak Jain +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sarah Donehower +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sarah Masud +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Saul Shanabrook +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scott Cole +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SdgJlbl +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Seb +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sergei Ivko +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shadi Akiki
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shorokhov Sergey
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Siddhesh Poyarekar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sidharthan Nair +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Gibbons
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Hawkins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon-Martin Schröder +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sofiane Mahiou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sourav kumar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Souvik Mandal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Soyoun Kim +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparkle Russell-Puleri +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Srinivas Reddy Thatiparthy (శ్రీనివాస్ రెడ్డి తాటిపర్తి)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stuart Berg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sumanau Sareen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Szymon Bednarek +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tambe Tabitha Achere +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tan Tran
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tang Heyi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tanmay Daripa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tanya Jain
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terji Petersen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Li +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tirth Jain +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tola A +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Augspurger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tommy Lynch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tomoyuki Suzuki +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tony Lorenzo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unprocessable +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Uwe L. Korn
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vaibhav Vishal
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Victoria Zdanovskaya +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vijayant +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vishwak Srinivasan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: WANG Aiyong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wenhuan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wes McKinney
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Will Ayd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Will Holmgren
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Ayd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Blan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wouter Overmeire
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wuraola Oyewusi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: YaOzI +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yash Shukla +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yu Wang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yusei Tahara +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alexander135 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alimcmaster1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: avelineg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bganglia +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bolkedebruin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bravech +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: chinhwee +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cruzzoe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dalgarno +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: daniellebrown +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: danielplawrence
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: est271 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: francisco souza +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ganevgv +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: garanews +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gfyoung
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: h-vetinari
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: hasnain2808 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ianzur +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jalbritt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jeschwar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jlamborn324 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: joy-rosie +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kernc
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: killerontherun1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: krey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lexy-lixinyu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lucyleeow +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lukasbk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maheshbapatu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mck619 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nathalier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: naveenkaushik2504 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nlepleux +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nrebena
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ohad83 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pilkibun
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pqzx +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: proost +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pv8493013j +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: qudade +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rhstanton +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rmunjal29 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sangarshanan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sardonick +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: saskakarsi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: shaido987 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ssikdar1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: steveayers124 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tadashigaki +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: timcera +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tlaytongoogle +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tobycheese
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tonywu1999 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tsvikas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: yogendrasoni +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: zys5945 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
