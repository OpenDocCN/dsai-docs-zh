- en: numpy.asarray_chkfinite
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.asarray_chkfinite.html](https://numpy.org/doc/1.26/reference/generated/numpy.asarray_chkfinite.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Convert the input to an array, checking for NaNs or Infs.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input data, in any form that can be converted to an array. This includes lists,
    lists of tuples, tuples, tuples of tuples, tuples of lists and ndarrays. Success
    requires no NaNs or Infs.
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype**data-type, optional'
  prefs: []
  type: TYPE_NORMAL
- en: By default, the data-type is inferred from the input data.
  prefs: []
  type: TYPE_NORMAL
- en: '**order**{‘C’, ‘F’, ‘A’, ‘K’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Memory layout. ‘A’ and ‘K’ depend on the order of input array a. ‘C’ row-major
    (C-style), ‘F’ column-major (Fortran-style) memory representation. ‘A’ (any) means
    ‘F’ if *a* is Fortran contiguous, ‘C’ otherwise ‘K’ (keep) preserve input order
    Defaults to ‘C’.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Array interpretation of *a*. No copy is performed if the input is already an
    ndarray. If *a* is a subclass of ndarray, a base class ndarray is returned.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: ValueError
  prefs: []
  type: TYPE_NORMAL
- en: Raises ValueError if *a* contains NaN (Not a Number) or Inf (Infinity).
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`asarray`](numpy.asarray.html#numpy.asarray "numpy.asarray")'
  prefs: []
  type: TYPE_NORMAL
- en: Create and array.
  prefs: []
  type: TYPE_NORMAL
- en: '[`asanyarray`](numpy.asanyarray.html#numpy.asanyarray "numpy.asanyarray")'
  prefs: []
  type: TYPE_NORMAL
- en: Similar function which passes through subclasses.
  prefs: []
  type: TYPE_NORMAL
- en: '[`ascontiguousarray`](numpy.ascontiguousarray.html#numpy.ascontiguousarray
    "numpy.ascontiguousarray")'
  prefs: []
  type: TYPE_NORMAL
- en: Convert input to a contiguous array.
  prefs: []
  type: TYPE_NORMAL
- en: '[`asfarray`](numpy.asfarray.html#numpy.asfarray "numpy.asfarray")'
  prefs: []
  type: TYPE_NORMAL
- en: Convert input to a floating point ndarray.
  prefs: []
  type: TYPE_NORMAL
- en: '[`asfortranarray`](numpy.asfortranarray.html#numpy.asfortranarray "numpy.asfortranarray")'
  prefs: []
  type: TYPE_NORMAL
- en: Convert input to an ndarray with column-major memory order.
  prefs: []
  type: TYPE_NORMAL
- en: '[`fromiter`](numpy.fromiter.html#numpy.fromiter "numpy.fromiter")'
  prefs: []
  type: TYPE_NORMAL
- en: Create an array from an iterator.
  prefs: []
  type: TYPE_NORMAL
- en: '[`fromfunction`](numpy.fromfunction.html#numpy.fromfunction "numpy.fromfunction")'
  prefs: []
  type: TYPE_NORMAL
- en: Construct an array by executing a function on grid positions.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Convert a list into an array. If all elements are finite `asarray_chkfinite`
    is identical to `asarray`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Raises ValueError if array_like contains Nans or Infs.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
