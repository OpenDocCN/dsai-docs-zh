- en: scipy.signal.find_peaks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.find_peaks.html#scipy.signal.find_peaks](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.find_peaks.html#scipy.signal.find_peaks)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Find peaks inside a signal based on peak properties.
  prefs: []
  type: TYPE_NORMAL
- en: This function takes a 1-D array and finds all local maxima by simple comparison
    of neighboring values. Optionally, a subset of these peaks can be selected by
    specifying conditions for a peak’s properties.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**sequence'
  prefs: []
  type: TYPE_NORMAL
- en: A signal with peaks.
  prefs: []
  type: TYPE_NORMAL
- en: '**height**number or ndarray or sequence, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Required height of peaks. Either a number, `None`, an array matching *x* or
    a 2-element sequence of the former. The first element is always interpreted as
    the minimal and the second, if supplied, as the maximal required height.
  prefs: []
  type: TYPE_NORMAL
- en: '**threshold**number or ndarray or sequence, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Required threshold of peaks, the vertical distance to its neighboring samples.
    Either a number, `None`, an array matching *x* or a 2-element sequence of the
    former. The first element is always interpreted as the minimal and the second,
    if supplied, as the maximal required threshold.
  prefs: []
  type: TYPE_NORMAL
- en: '**distance**number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Required minimal horizontal distance (>= 1) in samples between neighbouring
    peaks. Smaller peaks are removed first until the condition is fulfilled for all
    remaining peaks.
  prefs: []
  type: TYPE_NORMAL
- en: '**prominence**number or ndarray or sequence, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Required prominence of peaks. Either a number, `None`, an array matching *x*
    or a 2-element sequence of the former. The first element is always interpreted
    as the minimal and the second, if supplied, as the maximal required prominence.
  prefs: []
  type: TYPE_NORMAL
- en: '**width**number or ndarray or sequence, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Required width of peaks in samples. Either a number, `None`, an array matching
    *x* or a 2-element sequence of the former. The first element is always interpreted
    as the minimal and the second, if supplied, as the maximal required width.
  prefs: []
  type: TYPE_NORMAL
- en: '**wlen**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Used for calculation of the peaks prominences, thus it is only used if one of
    the arguments *prominence* or *width* is given. See argument *wlen* in [`peak_prominences`](scipy.signal.peak_prominences.html#scipy.signal.peak_prominences
    "scipy.signal.peak_prominences") for a full description of its effects.
  prefs: []
  type: TYPE_NORMAL
- en: '**rel_height**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Used for calculation of the peaks width, thus it is only used if *width* is
    given. See argument *rel_height* in [`peak_widths`](scipy.signal.peak_widths.html#scipy.signal.peak_widths
    "scipy.signal.peak_widths") for a full description of its effects.
  prefs: []
  type: TYPE_NORMAL
- en: '**plateau_size**number or ndarray or sequence, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Required size of the flat top of peaks in samples. Either a number, `None`,
    an array matching *x* or a 2-element sequence of the former. The first element
    is always interpreted as the minimal and the second, if supplied as the maximal
    required plateau size.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.2.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**peaks**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Indices of peaks in *x* that satisfy all given conditions.
  prefs: []
  type: TYPE_NORMAL
- en: '**properties**dict'
  prefs: []
  type: TYPE_NORMAL
- en: 'A dictionary containing properties of the returned peaks which were calculated
    as intermediate results during evaluation of the specified conditions:'
  prefs: []
  type: TYPE_NORMAL
- en: ‘peak_heights’
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If *height* is given, the height of each peak in *x*.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ‘left_thresholds’, ‘right_thresholds’
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If *threshold* is given, these keys contain a peaks vertical distance to its
    neighbouring samples.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ‘prominences’, ‘right_bases’, ‘left_bases’
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If *prominence* is given, these keys are accessible. See [`peak_prominences`](scipy.signal.peak_prominences.html#scipy.signal.peak_prominences
    "scipy.signal.peak_prominences") for a description of their content.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ‘width_heights’, ‘left_ips’, ‘right_ips’
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If *width* is given, these keys are accessible. See [`peak_widths`](scipy.signal.peak_widths.html#scipy.signal.peak_widths
    "scipy.signal.peak_widths") for a description of their content.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ‘plateau_sizes’, left_edges’, ‘right_edges’
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If *plateau_size* is given, these keys are accessible and contain the indices
    of a peak’s edges (edges are still part of the plateau) and the calculated plateau
    sizes.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: New in version 1.2.0.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To calculate and return properties without excluding peaks, provide the open
    interval `(None, None)` as a value to the appropriate argument (excluding *distance*).
  prefs: []
  type: TYPE_NORMAL
- en: 'Warns:'
  prefs: []
  type: TYPE_NORMAL
- en: PeakPropertyWarning
  prefs: []
  type: TYPE_NORMAL
- en: Raised if a peak’s properties have unexpected values (see [`peak_prominences`](scipy.signal.peak_prominences.html#scipy.signal.peak_prominences
    "scipy.signal.peak_prominences") and [`peak_widths`](scipy.signal.peak_widths.html#scipy.signal.peak_widths
    "scipy.signal.peak_widths")).
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: This function may return unexpected results for data containing NaNs. To avoid
    this, NaNs should either be removed or replaced.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`find_peaks_cwt`](scipy.signal.find_peaks_cwt.html#scipy.signal.find_peaks_cwt
    "scipy.signal.find_peaks_cwt")'
  prefs: []
  type: TYPE_NORMAL
- en: Find peaks using the wavelet transformation.
  prefs: []
  type: TYPE_NORMAL
- en: '[`peak_prominences`](scipy.signal.peak_prominences.html#scipy.signal.peak_prominences
    "scipy.signal.peak_prominences")'
  prefs: []
  type: TYPE_NORMAL
- en: Directly calculate the prominence of peaks.
  prefs: []
  type: TYPE_NORMAL
- en: '[`peak_widths`](scipy.signal.peak_widths.html#scipy.signal.peak_widths "scipy.signal.peak_widths")'
  prefs: []
  type: TYPE_NORMAL
- en: Directly calculate the width of peaks.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: In the context of this function, a peak or local maximum is defined as any sample
    whose two direct neighbours have a smaller amplitude. For flat peaks (more than
    one sample of equal amplitude wide) the index of the middle sample is returned
    (rounded down in case the number of samples is even). For noisy signals the peak
    locations can be off because the noise might change the position of local maxima.
    In those cases consider smoothing the signal before searching for peaks or use
    other peak finding and fitting methods (like [`find_peaks_cwt`](scipy.signal.find_peaks_cwt.html#scipy.signal.find_peaks_cwt
    "scipy.signal.find_peaks_cwt")).
  prefs: []
  type: TYPE_NORMAL
- en: 'Some additional comments on specifying conditions:'
  prefs: []
  type: TYPE_NORMAL
- en: Almost all conditions (excluding *distance*) can be given as half-open or closed
    intervals, e.g., `1` or `(1, None)` defines the half-open interval \([1, \infty]\)
    while `(None, 1)` defines the interval \([-\infty, 1]\). The open interval `(None,
    None)` can be specified as well, which returns the matching properties without
    exclusion of peaks.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The border is always included in the interval used to select valid peaks.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For several conditions the interval borders can be specified with arrays matching
    *x* in shape which enables dynamic constrains based on the sample position.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The conditions are evaluated in the following order: *plateau_size*, *height*,
    *threshold*, *distance*, *prominence*, *width*. In most cases this order is the
    fastest one because faster operations are applied first to reduce the number of
    peaks that need to be evaluated later.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: While indices in *peaks* are guaranteed to be at least *distance* samples apart,
    edges of flat peaks may be closer than the allowed *distance*.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use *wlen* to reduce the time it takes to evaluate the conditions for *prominence*
    or *width* if *x* is large or has many local maxima (see [`peak_prominences`](scipy.signal.peak_prominences.html#scipy.signal.peak_prominences
    "scipy.signal.peak_prominences")).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New in version 1.1.0.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: To demonstrate this function’s usage we use a signal *x* supplied with SciPy
    (see [`scipy.datasets.electrocardiogram`](scipy.datasets.electrocardiogram.html#scipy.datasets.electrocardiogram
    "scipy.datasets.electrocardiogram")). Let’s find all peaks (local maxima) in *x*
    whose amplitude lies above 0.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-signal-find_peaks-1_00_00.png](../Images/41c18b34d63cd2f375dbbd89ec396de0.png)'
  prefs: []
  type: TYPE_IMG
- en: We can select peaks below 0 with `height=(None, 0)` or use arrays matching *x*
    in size to reflect a changing condition for different parts of the signal.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-signal-find_peaks-1_01_00.png](../Images/74c12a427397281ed184f53835e5771a.png)'
  prefs: []
  type: TYPE_IMG
- en: Another useful condition for periodic signals can be given with the *distance*
    argument. In this case, we can easily select the positions of QRS complexes within
    the electrocardiogram (ECG) by demanding a distance of at least 150 samples.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-signal-find_peaks-1_02_00.png](../Images/50f78855ce9d94dc1c5cbf02aa9daa2a.png)'
  prefs: []
  type: TYPE_IMG
- en: Especially for noisy signals peaks can be easily grouped by their prominence
    (see [`peak_prominences`](scipy.signal.peak_prominences.html#scipy.signal.peak_prominences
    "scipy.signal.peak_prominences")). E.g., we can select all peaks except for the
    mentioned QRS complexes by limiting the allowed prominence to 0.6.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-signal-find_peaks-1_03_00.png](../Images/5510c3fb41a1b114dc92660d4f32e6ae.png)'
  prefs: []
  type: TYPE_IMG
- en: 'And, finally, let’s examine a different section of the ECG which contains beat
    forms of different shape. To select only the atypical heart beats, we combine
    two conditions: a minimal prominence of 1 and width of at least 20 samples.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-signal-find_peaks-1_04_00.png](../Images/173c47e00861da205b43365be7090c12.png)'
  prefs: []
  type: TYPE_IMG
