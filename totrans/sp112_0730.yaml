- en: scipy.spatial.Delaunay
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.spatial.Delaunay
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.spatial.Delaunay.html#scipy.spatial.Delaunay](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.spatial.Delaunay.html#scipy.spatial.Delaunay)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.spatial.Delaunay.html#scipy.spatial.Delaunay](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.spatial.Delaunay.html#scipy.spatial.Delaunay)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Delaunay tessellation in N dimensions.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: N维中的Delaunay镶嵌。
- en: New in version 0.9.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 从版本0.9开始新增。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**points**ndarray of floats, shape (npoints, ndim)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**points**浮点数数组，形状为（npoints，ndim）'
- en: Coordinates of points to triangulate
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要三角化的点的坐标
- en: '**furthest_site**bool, optional'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**furthest_site**布尔值，可选'
- en: 'Whether to compute a furthest-site Delaunay triangulation. Default: False'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 是否计算最远点Delaunay三角剖分。默认值：False
- en: New in version 0.12.0.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 从版本0.12.0开始新增。
- en: '**incremental**bool, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**incremental**布尔值，可选'
- en: Allow adding new points incrementally. This takes up some additional resources.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 允许逐步添加新点。这会占用额外的资源。
- en: '**qhull_options**str, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**qhull_options**字符串，可选'
- en: Additional options to pass to Qhull. See Qhull manual for details. Option “Qt”
    is always enabled. Default:”Qbb Qc Qz Qx Q12” for ndim > 4 and “Qbb Qc Qz Q12”
    otherwise. Incremental mode omits “Qz”.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 传递给Qhull的其他选项。有关详细信息，请参阅Qhull手册。选项“Qt”始终启用。默认值：“Qbb Qc Qz Qx Q12”（对于ndim > 4）和“Qbb
    Qc Qz Q12”（否则）。递增模式省略“Qz”。
- en: New in version 0.12.0.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 从版本0.12.0开始新增。
- en: 'Raises:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: QhullError
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: QhullError
- en: Raised when Qhull encounters an error condition, such as geometrical degeneracy
    when options to resolve are not enabled.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 当Qhull遇到错误条件（例如在未启用解决选项的几何退化时）时引发。
- en: ValueError
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: ValueError
- en: Raised if an incompatible array is given as input.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果输入给出的数组不兼容，则引发。
- en: Notes
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The tessellation is computed using the Qhull library [Qhull library](http://www.qhull.org/).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Qhull库计算的镶嵌 [Qhull library](http://www.qhull.org/)。
- en: Note
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Unless you pass in the Qhull option “QJ”, Qhull does not guarantee that each
    input point appears as a vertex in the Delaunay triangulation. Omitted points
    are listed in the *coplanar* attribute.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 除非您传入Qhull选项“QJ”，否则Qhull不保证每个输入点都会出现在Delaunay三角剖分的顶点中。省略的点在*coplanar*属性中列出。
- en: Examples
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Triangulation of a set of points:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 一组点的三角剖分：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We can plot it:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以绘制它：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![../../_images/scipy-spatial-Delaunay-1_00_00.png](../Images/0b9df0fd45caf4063b82936945ba7454.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-spatial-Delaunay-1_00_00.png](../Images/0b9df0fd45caf4063b82936945ba7454.png)'
- en: 'Point indices and coordinates for the two triangles forming the triangulation:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 形成三角剖分的两个三角形的点的索引和坐标：
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note that depending on how rounding errors go, the simplices may be in a different
    order than above.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，根据舍入误差的处理方式，简单形可能与上述不同的顺序排列。
- en: '[PRE4]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Triangle 0 is the only neighbor of triangle 1, and it’s opposite to vertex
    1 of triangle 1:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形0是三角形1的唯一相邻单元，并且它位于三角形1的顶点1的对面：
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We can find out which triangle points are in:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以找出哪些三角形点在：
- en: '[PRE6]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The returned integers in the array are the indices of the simplex the corresponding
    point is in. If -1 is returned, the point is in no simplex. Be aware that the
    shortcut in the following example only works correctly for valid points as invalid
    points result in -1 which is itself a valid index for the last simplex in the
    list.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 数组中返回的整数是相应点所在单纯形的索引。如果返回-1，则表示该点不在任何单纯形中。请注意，以下示例中的快捷方式仅适用于有效点，因为无效点返回-1，而-1本身是列表中最后一个单纯形的有效索引。
- en: '[PRE7]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'We can also compute barycentric coordinates in triangle 1 for these points:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以为这些点在三角形1中计算重心坐标：
- en: '[PRE8]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The coordinates for the first point are all positive, meaning it is indeed inside
    the triangle. The third point is on an edge, hence its null third coordinate.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个点的坐标全为正，这意味着它确实在三角形内部。第三个点在边缘上，因此其第三个坐标为空。
- en: 'Attributes:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 属性：
- en: '**points**ndarray of double, shape (npoints, ndim)'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**points**双精度数组，形状为（npoints，ndim）'
- en: Coordinates of input points.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 输入点的坐标。
- en: '**simplices**ndarray of ints, shape (nsimplex, ndim+1)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**simplices**整数数组，形状为（nsimplex，ndim+1）'
- en: Indices of the points forming the simplices in the triangulation. For 2-D, the
    points are oriented counterclockwise.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在三角形剖分中形成单纯形的点的索引。对于2-D，点是逆时针方向排列的。
- en: '**neighbors**ndarray of ints, shape (nsimplex, ndim+1)'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**neighbors**整数数组，形状为（nsimplex，ndim+1）'
- en: Indices of neighbor simplices for each simplex. The kth neighbor is opposite
    to the kth vertex. For simplices at the boundary, -1 denotes no neighbor.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 每个单纯形的相邻单纯形的索引。第k个相邻单纯形位于第k个顶点的对面。对于边界上的单纯形，-1表示没有相邻单纯形。
- en: '**equations**ndarray of double, shape (nsimplex, ndim+2)'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**equations**双精度数组，形状为（nsimplex，ndim+2）'
- en: '[normal, offset] forming the hyperplane equation of the facet on the paraboloid
    (see [Qhull documentation](http://www.qhull.org/) for more).'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[normal, offset]构成抛物面上平面方程的超平面（详见[Qhull文档](http://www.qhull.org/)）。 '
- en: '**paraboloid_scale, paraboloid_shift**float'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**paraboloid_scale, paraboloid_shift**float'
- en: Scale and shift for the extra paraboloid dimension (see [Qhull documentation](http://www.qhull.org/)
    for more).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '用于额外抛物面维度的缩放和移位（详见[Qhull文档](http://www.qhull.org/)）。 '
- en: '[`transform`](../spatial.transform.html#module-scipy.spatial.transform "scipy.spatial.transform")ndarray
    of double, shape (nsimplex, ndim+1, ndim)'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[`transform`](../spatial.transform.html#module-scipy.spatial.transform "scipy.spatial.transform")双精度数组，形状为
    (nsimplex, ndim+1, ndim)'
- en: Affine transform from `x` to the barycentric coordinates `c`.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 从`x`到重心坐标`c`的仿射变换。
- en: '[`vertex_to_simplex`](scipy.spatial.Delaunay.vertex_to_simplex.html#scipy.spatial.Delaunay.vertex_to_simplex
    "scipy.spatial.Delaunay.vertex_to_simplex")ndarray of int, shape (npoints,)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '[`vertex_to_simplex`](../spatial.Delaunay.vertex_to_simplex.html#scipy.spatial.Delaunay.vertex_to_simplex
    "scipy.spatial.Delaunay.vertex_to_simplex")整数的ndarray，形状为 (npoints,)'
- en: Lookup array, from a vertex, to some simplex which it is a part of.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 从顶点到其所属单纯形的查找数组。
- en: '[`convex_hull`](scipy.spatial.Delaunay.convex_hull.html#scipy.spatial.Delaunay.convex_hull
    "scipy.spatial.Delaunay.convex_hull")ndarray of int, shape (nfaces, ndim)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[`convex_hull`](../spatial.Delaunay.convex_hull.html#scipy.spatial.Delaunay.convex_hull
    "scipy.spatial.Delaunay.convex_hull")整数的ndarray，形状为 (nfaces, ndim)'
- en: Vertices of facets forming the convex hull of the point set.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 构成点集凸包的面的顶点。
- en: '**coplanar**ndarray of int, shape (ncoplanar, 3)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**coplanar**整数的ndarray，形状为 (ncoplanar, 3)'
- en: Indices of coplanar points and the corresponding indices of the nearest facet
    and the nearest vertex. Coplanar points are input points which were *not* included
    in the triangulation due to numerical precision issues.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 共面点的索引及其最近平面和最近顶点的相应索引。由于数值精度问题，共面点是未包含在三角剖分中的输入点。
- en: If option “Qc” is not specified, this list is not computed.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未指定选项“Qc”，则不计算此列表。
- en: New in version 0.12.0.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本0.12.0中引入。
- en: '[`vertex_neighbor_vertices`](scipy.spatial.Delaunay.vertex_neighbor_vertices.html#scipy.spatial.Delaunay.vertex_neighbor_vertices
    "scipy.spatial.Delaunay.vertex_neighbor_vertices")tuple of two ndarrays of int;
    (indptr, indices)'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[`vertex_neighbor_vertices`](../spatial.Delaunay.vertex_neighbor_vertices.html#scipy.spatial.Delaunay.vertex_neighbor_vertices
    "scipy.spatial.Delaunay.vertex_neighbor_vertices")包含两个int类型的ndarray元组；(indptr,
    indices)'
- en: Neighboring vertices of vertices.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 顶点的相邻顶点。
- en: '**furthest_site**'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**furthest_site**'
- en: True if this was a furthest site triangulation and False if not.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这是一个最远点三角剖分，则为True；如果不是，则为False。
- en: New in version 1.4.0.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本1.4.0中引入。
- en: Methods
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`add_points`](scipy.spatial.Delaunay.add_points.html#scipy.spatial.Delaunay.add_points
    "scipy.spatial.Delaunay.add_points")(points[, restart]) | Process a set of additional
    new points. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| [`add_points`](../spatial.Delaunay.add_points.html#scipy.spatial.Delaunay.add_points
    "scipy.spatial.Delaunay.add_points")(points[, restart]) | 处理一组额外的新点。 |'
- en: '| [`close`](scipy.spatial.Delaunay.close.html#scipy.spatial.Delaunay.close
    "scipy.spatial.Delaunay.close")() | Finish incremental processing. |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| [`close`](../spatial.Delaunay.close.html#scipy.spatial.Delaunay.close "scipy.spatial.Delaunay.close")()
    | 完成增量处理。 |'
- en: '| [`find_simplex`](scipy.spatial.Delaunay.find_simplex.html#scipy.spatial.Delaunay.find_simplex
    "scipy.spatial.Delaunay.find_simplex")(self, xi[, bruteforce, tol]) | Find the
    simplices containing the given points. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| [`find_simplex`](../spatial.Delaunay.find_simplex.html#scipy.spatial.Delaunay.find_simplex
    "scipy.spatial.Delaunay.find_simplex")(self, xi[, bruteforce, tol]) | 查找包含给定点的单纯形。
    |'
- en: '| [`lift_points`](scipy.spatial.Delaunay.lift_points.html#scipy.spatial.Delaunay.lift_points
    "scipy.spatial.Delaunay.lift_points")(self, x) | Lift points to the Qhull paraboloid.
    |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| [`lift_points`](../spatial.Delaunay.lift_points.html#scipy.spatial.Delaunay.lift_points
    "scipy.spatial.Delaunay.lift_points")(self, x) | 将点映射到Qhull抛物面上。 |'
- en: '| [`plane_distance`](scipy.spatial.Delaunay.plane_distance.html#scipy.spatial.Delaunay.plane_distance
    "scipy.spatial.Delaunay.plane_distance")(self, xi) | Compute hyperplane distances
    to the point *xi* from all simplices. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| [`plane_distance`](../spatial.Delaunay.plane_distance.html#scipy.spatial.Delaunay.plane_distance
    "scipy.spatial.Delaunay.plane_distance")(self, xi) | 计算到所有单纯形点 *xi* 的超平面距离。 |'
