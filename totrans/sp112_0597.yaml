- en: scipy.signal.bessel
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.bessel.html#scipy.signal.bessel](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.bessel.html#scipy.signal.bessel)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Bessel/Thomson digital and analog filter design.
  prefs: []
  type: TYPE_NORMAL
- en: Design an Nth-order digital or analog Bessel filter and return the filter coefficients.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**N**int'
  prefs: []
  type: TYPE_NORMAL
- en: The order of the filter.
  prefs: []
  type: TYPE_NORMAL
- en: '**Wn**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: A scalar or length-2 sequence giving the critical frequencies (defined by the
    *norm* parameter). For analog filters, *Wn* is an angular frequency (e.g., rad/s).
  prefs: []
  type: TYPE_NORMAL
- en: For digital filters, *Wn* are in the same units as *fs*. By default, *fs* is
    2 half-cycles/sample, so these are normalized from 0 to 1, where 1 is the Nyquist
    frequency. (*Wn* is thus in half-cycles / sample.)
  prefs: []
  type: TYPE_NORMAL
- en: '**btype**{‘lowpass’, ‘highpass’, ‘bandpass’, ‘bandstop’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The type of filter. Default is ‘lowpass’.
  prefs: []
  type: TYPE_NORMAL
- en: '**analog**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: When True, return an analog filter, otherwise a digital filter is returned.
    (See Notes.)
  prefs: []
  type: TYPE_NORMAL
- en: '**output**{‘ba’, ‘zpk’, ‘sos’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Type of output: numerator/denominator (‘ba’), pole-zero (‘zpk’), or second-order
    sections (‘sos’). Default is ‘ba’.'
  prefs: []
  type: TYPE_NORMAL
- en: '**norm**{‘phase’, ‘delay’, ‘mag’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Critical frequency normalization:'
  prefs: []
  type: TYPE_NORMAL
- en: '`phase`'
  prefs: []
  type: TYPE_NORMAL
- en: The filter is normalized such that the phase response reaches its midpoint at
    angular (e.g. rad/s) frequency *Wn*. This happens for both low-pass and high-pass
    filters, so this is the “phase-matched” case.
  prefs: []
  type: TYPE_NORMAL
- en: The magnitude response asymptotes are the same as a Butterworth filter of the
    same order with a cutoff of *Wn*.
  prefs: []
  type: TYPE_NORMAL
- en: This is the default, and matches MATLAB’s implementation.
  prefs: []
  type: TYPE_NORMAL
- en: '`delay`'
  prefs: []
  type: TYPE_NORMAL
- en: The filter is normalized such that the group delay in the passband is 1/*Wn*
    (e.g., seconds). This is the “natural” type obtained by solving Bessel polynomials.
  prefs: []
  type: TYPE_NORMAL
- en: '`mag`'
  prefs: []
  type: TYPE_NORMAL
- en: The filter is normalized such that the gain magnitude is -3 dB at angular frequency
    *Wn*.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.18.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**fs**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The sampling frequency of the digital system.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.2.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**b, a**ndarray, ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Numerator (*b*) and denominator (*a*) polynomials of the IIR filter. Only returned
    if `output='ba'`.
  prefs: []
  type: TYPE_NORMAL
- en: '**z, p, k**ndarray, ndarray, float'
  prefs: []
  type: TYPE_NORMAL
- en: Zeros, poles, and system gain of the IIR filter transfer function. Only returned
    if `output='zpk'`.
  prefs: []
  type: TYPE_NORMAL
- en: '**sos**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Second-order sections representation of the IIR filter. Only returned if `output='sos'`.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Also known as a Thomson filter, the analog Bessel filter has maximally flat
    group delay and maximally linear phase response, with very little ringing in the
    step response. [[1]](#ra8b53f07cb0c-1)
  prefs: []
  type: TYPE_NORMAL
- en: The Bessel is inherently an analog filter. This function generates digital Bessel
    filters using the bilinear transform, which does not preserve the phase response
    of the analog filter. As such, it is only approximately correct at frequencies
    below about fs/4\. To get maximally-flat group delay at higher frequencies, the
    analog Bessel filter must be transformed using phase-preserving techniques.
  prefs: []
  type: TYPE_NORMAL
- en: See [`besselap`](scipy.signal.besselap.html#scipy.signal.besselap "scipy.signal.besselap")
    for implementation details and references.
  prefs: []
  type: TYPE_NORMAL
- en: The `'sos'` output parameter was added in 0.16.0.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: Thomson, W.E., “Delay Networks having Maximally Flat Frequency Characteristics”,
    Proceedings of the Institution of Electrical Engineers, Part III, November 1949,
    Vol. 96, No. 44, pp. 487-490.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Plot the phase-normalized frequency response, showing the relationship to the
    Butterworth’s cutoff frequency (green):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-signal-bessel-1_00_00.png](../Images/b8f4544728ebcb36e7a060e5def4b012.png)'
  prefs: []
  type: TYPE_IMG
- en: 'and the phase midpoint:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-signal-bessel-1_01_00.png](../Images/9f8eceacbe81cdf27c73303cb124fb08.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Plot the magnitude-normalized frequency response, showing the -3 dB cutoff:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-signal-bessel-1_02_00.png](../Images/99a278d99794ccb61224843be0baceb0.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Plot the delay-normalized filter, showing the maximally-flat group delay at
    0.1 seconds:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-signal-bessel-1_03_00.png](../Images/8f6cb40d00501511b0b2f02b58288705.png)'
  prefs: []
  type: TYPE_IMG
