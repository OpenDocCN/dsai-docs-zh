- en: numpy.ma.apply_over_axes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.apply_over_axes.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.apply_over_axes.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Apply a function repeatedly over multiple axes.
  prefs: []
  type: TYPE_NORMAL
- en: '*func* is called as *res = func(a, axis)*, where *axis* is the first element
    of *axes*. The result *res* of the function call must have either the same dimensions
    as *a* or one less dimension. If *res* has one less dimension than *a*, a dimension
    is inserted before *axis*. The call to *func* is then repeated for each axis in
    *axes*, with *res* as the first argument.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**func**function'
  prefs: []
  type: TYPE_NORMAL
- en: This function must take two arguments, *func(a, axis)*.
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input array.
  prefs: []
  type: TYPE_NORMAL
- en: '**axes**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Axes over which *func* is applied; the elements must be integers.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**apply_over_axis**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The output array. The number of dimensions is the same as *a*, but the shape
    can be different. This depends on whether *func* changes the shape of its output
    with respect to its input.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`apply_along_axis`](numpy.apply_along_axis.html#numpy.apply_along_axis "numpy.apply_along_axis")'
  prefs: []
  type: TYPE_NORMAL
- en: Apply a function to 1-D slices of an array along the given axis.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Tuple axis arguments to ufuncs are equivalent:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
