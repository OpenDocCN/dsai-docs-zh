["```py\nscipy.special.spherical_yn(n, z, derivative=False)\n```", "```py\n>>> from scipy.special import spherical_yn\n>>> spherical_yn(0, 3+5j)\n(8.022343088587197-9.880052589376795j)\n>>> type(spherical_yn(0, 3+5j))\n<class 'numpy.complex128'> \n```", "```py\n>>> import numpy as np\n>>> x = np.arange(1.0, 2.0, 0.01)\n>>> np.allclose(spherical_yn(3, x, True),\n...             spherical_yn(2, x) - 4/x * spherical_yn(3, x))\nTrue \n```", "```py\n>>> import matplotlib.pyplot as plt\n>>> x = np.arange(0.0, 10.0, 0.01)\n>>> fig, ax = plt.subplots()\n>>> ax.set_ylim(-2.0, 1.0)\n>>> ax.set_title(r'Spherical Bessel functions $y_n$')\n>>> for n in np.arange(0, 4):\n...     ax.plot(x, spherical_yn(n, x), label=rf'$y_{n}$')\n>>> plt.legend(loc='best')\n>>> plt.show() \n```"]