["```py\nsympy.polys.solvers.solve_lin_sys(eqs, ring, _raw=True)\n```", "```py\n>>> from sympy import symbols\n>>> from sympy.polys.solvers import solve_lin_sys, sympy_eqs_to_ring\n>>> x, y = symbols('x, y')\n>>> eqs = [x - y, x + y - 2]\n>>> eqs_ring, ring = sympy_eqs_to_ring(eqs, [x, y])\n>>> solve_lin_sys(eqs_ring, ring)\n{y: 1, x: 1} \n```", "```py\n>>> solve_lin_sys(eqs_ring, ring, _raw=False)\n{x: 1, y: 1} \n```", "```py\nsympy.polys.solvers.eqs_to_matrix(eqs_coeffs, eqs_rhs, gens, domain)\n```", "```py\n>>> from sympy import symbols, ZZ\n>>> from sympy.polys.solvers import eqs_to_matrix\n>>> x, y = symbols('x, y')\n>>> eqs_coeff = [{x:ZZ(1), y:ZZ(1)}, {x:ZZ(1), y:ZZ(-1)}]\n>>> eqs_rhs = [ZZ(0), ZZ(-1)]\n>>> eqs_to_matrix(eqs_coeff, eqs_rhs, [x, y], ZZ)\nDomainMatrix([[1, 1, 0], [1, -1, 1]], (2, 3), ZZ) \n```", "```py\nsympy.polys.solvers.sympy_eqs_to_ring(eqs, symbols)\n```", "```py\n>>> from sympy import symbols\n>>> from sympy.polys.solvers import sympy_eqs_to_ring\n>>> a, x, y = symbols('a, x, y')\n>>> eqs = [x-y, x+a*y]\n>>> eqs_ring, ring = sympy_eqs_to_ring(eqs, [x, y])\n>>> eqs_ring\n[x - y, x + a*y]\n>>> type(eqs_ring[0])\n<class 'sympy.polys.rings.PolyElement'>\n>>> ring\nZZ(a)[x,y] \n```", "```py\n>>> from sympy.polys.solvers import solve_lin_sys\n>>> solve_lin_sys(eqs_ring, ring)\n{y: 0, x: 0} \n```", "```py\nsympy.polys.solvers._solve_lin_sys(eqs_coeffs, eqs_rhs, ring)\n```", "```py\n>>> from sympy import symbols, sring\n>>> from sympy.polys.solvers import _solve_lin_sys\n>>> x, y = symbols('x, y')\n>>> R, (xr, yr) = sring([x, y], [x, y])\n>>> eqs = [{xr:R.one, yr:-R.one}, {xr:R.one, yr:R.one}]\n>>> eqs_rhs = [R.zero, -2*R.one]\n>>> _solve_lin_sys(eqs, eqs_rhs, R)\n{y: 1, x: 1} \n```", "```py\nsympy.polys.solvers._solve_lin_sys_component(eqs_coeffs, eqs_rhs, ring)\n```", "```py\n>>> from sympy import symbols, sring\n>>> from sympy.polys.solvers import _solve_lin_sys_component\n>>> x, y = symbols('x, y')\n>>> R, (xr, yr) = sring([x, y], [x, y])\n>>> eqs = [{xr:R.one, yr:-R.one}, {xr:R.one, yr:R.one}]\n>>> eqs_rhs = [R.zero, -2*R.one]\n>>> _solve_lin_sys_component(eqs, eqs_rhs, R)\n{y: 1, x: 1} \n```"]