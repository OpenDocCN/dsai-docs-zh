- en: scipy.optimize.LbfgsInvHessProduct
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.LbfgsInvHessProduct.html#scipy.optimize.LbfgsInvHessProduct](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.LbfgsInvHessProduct.html#scipy.optimize.LbfgsInvHessProduct)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Linear operator for the L-BFGS approximate inverse Hessian.
  prefs: []
  type: TYPE_NORMAL
- en: This operator computes the product of a vector with the approximate inverse
    of the Hessian of the objective function, using the L-BFGS limited memory approximation
    to the inverse Hessian, accumulated during the optimization.
  prefs: []
  type: TYPE_NORMAL
- en: Objects of this class implement the `scipy.sparse.linalg.LinearOperator` interface.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**sk**array_like, shape=(n_corr, n)'
  prefs: []
  type: TYPE_NORMAL
- en: Array of *n_corr* most recent updates to the solution vector. (See [1]).
  prefs: []
  type: TYPE_NORMAL
- en: '**yk**array_like, shape=(n_corr, n)'
  prefs: []
  type: TYPE_NORMAL
- en: Array of *n_corr* most recent updates to the gradient. (See [1]).
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1]'
  prefs: []
  type: TYPE_NORMAL
- en: 'Nocedal, Jorge. “Updating quasi-Newton matrices with limited storage.” Mathematics
    of computation 35.151 (1980): 773-782.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[`H`](scipy.optimize.LbfgsInvHessProduct.H.html#scipy.optimize.LbfgsInvHessProduct.H
    "scipy.optimize.LbfgsInvHessProduct.H")'
  prefs: []
  type: TYPE_NORMAL
- en: Hermitian adjoint.
  prefs: []
  type: TYPE_NORMAL
- en: '[`T`](scipy.optimize.LbfgsInvHessProduct.T.html#scipy.optimize.LbfgsInvHessProduct.T
    "scipy.optimize.LbfgsInvHessProduct.T")'
  prefs: []
  type: TYPE_NORMAL
- en: Transpose this linear operator.
  prefs: []
  type: TYPE_NORMAL
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`__call__`](scipy.optimize.LbfgsInvHessProduct.__call__.html#scipy.optimize.LbfgsInvHessProduct.__call__
    "scipy.optimize.LbfgsInvHessProduct.__call__")(x) | Call self as a function. |'
  prefs: []
  type: TYPE_TB
- en: '| [`adjoint`](scipy.optimize.LbfgsInvHessProduct.adjoint.html#scipy.optimize.LbfgsInvHessProduct.adjoint
    "scipy.optimize.LbfgsInvHessProduct.adjoint")() | Hermitian adjoint. |'
  prefs: []
  type: TYPE_TB
- en: '| [`dot`](scipy.optimize.LbfgsInvHessProduct.dot.html#scipy.optimize.LbfgsInvHessProduct.dot
    "scipy.optimize.LbfgsInvHessProduct.dot")(x) | Matrix-matrix or matrix-vector
    multiplication. |'
  prefs: []
  type: TYPE_TB
- en: '| [`matmat`](scipy.optimize.LbfgsInvHessProduct.matmat.html#scipy.optimize.LbfgsInvHessProduct.matmat
    "scipy.optimize.LbfgsInvHessProduct.matmat")(X) | Matrix-matrix multiplication.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`matvec`](scipy.optimize.LbfgsInvHessProduct.matvec.html#scipy.optimize.LbfgsInvHessProduct.matvec
    "scipy.optimize.LbfgsInvHessProduct.matvec")(x) | Matrix-vector multiplication.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`rmatmat`](scipy.optimize.LbfgsInvHessProduct.rmatmat.html#scipy.optimize.LbfgsInvHessProduct.rmatmat
    "scipy.optimize.LbfgsInvHessProduct.rmatmat")(X) | Adjoint matrix-matrix multiplication.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`rmatvec`](scipy.optimize.LbfgsInvHessProduct.rmatvec.html#scipy.optimize.LbfgsInvHessProduct.rmatvec
    "scipy.optimize.LbfgsInvHessProduct.rmatvec")(x) | Adjoint matrix-vector multiplication.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`todense`](scipy.optimize.LbfgsInvHessProduct.todense.html#scipy.optimize.LbfgsInvHessProduct.todense
    "scipy.optimize.LbfgsInvHessProduct.todense")() | Return a dense array representation
    of this operator. |'
  prefs: []
  type: TYPE_TB
- en: '| [`transpose`](scipy.optimize.LbfgsInvHessProduct.transpose.html#scipy.optimize.LbfgsInvHessProduct.transpose
    "scipy.optimize.LbfgsInvHessProduct.transpose")() | Transpose this linear operator.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **__mul__** |  |'
  prefs: []
  type: TYPE_TB
