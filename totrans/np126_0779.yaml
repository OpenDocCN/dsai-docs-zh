- en: numpy.ma.MaskedArray.sort
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.MaskedArray.sort.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.MaskedArray.sort.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: method
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Sort the array, in-place
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Array to be sorted.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axis along which to sort. If None, the array is flattened before sorting. The
    default is -1, which sorts along the last axis.
  prefs: []
  type: TYPE_NORMAL
- en: '**kind**{‘quicksort’, ‘mergesort’, ‘heapsort’, ‘stable’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The sorting algorithm used.
  prefs: []
  type: TYPE_NORMAL
- en: '**order**list, optional'
  prefs: []
  type: TYPE_NORMAL
- en: When *a* is a structured array, this argument specifies which fields to compare
    first, second, and so on. This list does not need to include all of the fields.
  prefs: []
  type: TYPE_NORMAL
- en: '**endwith**{True, False}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether missing values (if any) should be treated as the largest values (True)
    or the smallest values (False) When the array contains unmasked values sorting
    at the same extremes of the datatype, the ordering of these values and the masked
    values is undefined.
  prefs: []
  type: TYPE_NORMAL
- en: '**fill_value**scalar or None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Value used internally for the masked values. If `fill_value` is not None, it
    supersedes `endwith`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**sorted_array**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Array of the same type and shape as *a*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.ndarray.sort`](numpy.ndarray.sort.html#numpy.ndarray.sort "numpy.ndarray.sort")'
  prefs: []
  type: TYPE_NORMAL
- en: Method to sort an array in-place.
  prefs: []
  type: TYPE_NORMAL
- en: '[`argsort`](numpy.argsort.html#numpy.argsort "numpy.argsort")'
  prefs: []
  type: TYPE_NORMAL
- en: Indirect sort.
  prefs: []
  type: TYPE_NORMAL
- en: '[`lexsort`](numpy.lexsort.html#numpy.lexsort "numpy.lexsort")'
  prefs: []
  type: TYPE_NORMAL
- en: Indirect stable sort on multiple keys.
  prefs: []
  type: TYPE_NORMAL
- en: '[`searchsorted`](numpy.searchsorted.html#numpy.searchsorted "numpy.searchsorted")'
  prefs: []
  type: TYPE_NORMAL
- en: Find elements in a sorted array.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: See `sort` for notes on the different sorting algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
