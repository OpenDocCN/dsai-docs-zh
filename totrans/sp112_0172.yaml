- en: scipy.interpolate.griddata
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.griddata.html#scipy.interpolate.griddata](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.griddata.html#scipy.interpolate.griddata)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Interpolate unstructured D-D data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**points**2-D ndarray of floats with shape (n, D), or length D tuple of 1-D
    ndarrays with shape (n,).'
  prefs: []
  type: TYPE_NORMAL
- en: Data point coordinates.
  prefs: []
  type: TYPE_NORMAL
- en: '**values**ndarray of float or complex, shape (n,)'
  prefs: []
  type: TYPE_NORMAL
- en: Data values.
  prefs: []
  type: TYPE_NORMAL
- en: '**xi**2-D ndarray of floats with shape (m, D), or length D tuple of ndarrays
    broadcastable to the same shape.'
  prefs: []
  type: TYPE_NORMAL
- en: Points at which to interpolate data.
  prefs: []
  type: TYPE_NORMAL
- en: '**method**{‘linear’, ‘nearest’, ‘cubic’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Method of interpolation. One of
  prefs: []
  type: TYPE_NORMAL
- en: '`nearest`'
  prefs: []
  type: TYPE_NORMAL
- en: return the value at the data point closest to the point of interpolation. See
    [`NearestNDInterpolator`](scipy.interpolate.NearestNDInterpolator.html#scipy.interpolate.NearestNDInterpolator
    "scipy.interpolate.NearestNDInterpolator") for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '`linear`'
  prefs: []
  type: TYPE_NORMAL
- en: tessellate the input point set to N-D simplices, and interpolate linearly on
    each simplex. See [`LinearNDInterpolator`](scipy.interpolate.LinearNDInterpolator.html#scipy.interpolate.LinearNDInterpolator
    "scipy.interpolate.LinearNDInterpolator") for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '`cubic` (1-D)'
  prefs: []
  type: TYPE_NORMAL
- en: return the value determined from a cubic spline.
  prefs: []
  type: TYPE_NORMAL
- en: '`cubic` (2-D)'
  prefs: []
  type: TYPE_NORMAL
- en: return the value determined from a piecewise cubic, continuously differentiable
    (C1), and approximately curvature-minimizing polynomial surface. See [`CloughTocher2DInterpolator`](scipy.interpolate.CloughTocher2DInterpolator.html#scipy.interpolate.CloughTocher2DInterpolator
    "scipy.interpolate.CloughTocher2DInterpolator") for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '**fill_value**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Value used to fill in for requested points outside of the convex hull of the
    input points. If not provided, then the default is `nan`. This option has no effect
    for the ‘nearest’ method.
  prefs: []
  type: TYPE_NORMAL
- en: '**rescale**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Rescale points to unit cube before performing interpolation. This is useful
    if some of the input dimensions have incommensurable units and differ by many
    orders of magnitude.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.14.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: ndarray
  prefs: []
  type: TYPE_NORMAL
- en: Array of interpolated values.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`LinearNDInterpolator`](scipy.interpolate.LinearNDInterpolator.html#scipy.interpolate.LinearNDInterpolator
    "scipy.interpolate.LinearNDInterpolator")'
  prefs: []
  type: TYPE_NORMAL
- en: Piecewise linear interpolator in N dimensions.
  prefs: []
  type: TYPE_NORMAL
- en: '[`NearestNDInterpolator`](scipy.interpolate.NearestNDInterpolator.html#scipy.interpolate.NearestNDInterpolator
    "scipy.interpolate.NearestNDInterpolator")'
  prefs: []
  type: TYPE_NORMAL
- en: Nearest-neighbor interpolator in N dimensions.
  prefs: []
  type: TYPE_NORMAL
- en: '[`CloughTocher2DInterpolator`](scipy.interpolate.CloughTocher2DInterpolator.html#scipy.interpolate.CloughTocher2DInterpolator
    "scipy.interpolate.CloughTocher2DInterpolator")'
  prefs: []
  type: TYPE_NORMAL
- en: Piecewise cubic, C1 smooth, curvature-minimizing interpolator in 2D.
  prefs: []
  type: TYPE_NORMAL
- en: '[`interpn`](scipy.interpolate.interpn.html#scipy.interpolate.interpn "scipy.interpolate.interpn")'
  prefs: []
  type: TYPE_NORMAL
- en: Interpolation on a regular grid or rectilinear grid.
  prefs: []
  type: TYPE_NORMAL
- en: '[`RegularGridInterpolator`](scipy.interpolate.RegularGridInterpolator.html#scipy.interpolate.RegularGridInterpolator
    "scipy.interpolate.RegularGridInterpolator")'
  prefs: []
  type: TYPE_NORMAL
- en: Interpolator on a regular or rectilinear grid in arbitrary dimensions ([`interpn`](scipy.interpolate.interpn.html#scipy.interpolate.interpn
    "scipy.interpolate.interpn") wraps this class).
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.9.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: For data on a regular grid use [`interpn`](scipy.interpolate.interpn.html#scipy.interpolate.interpn
    "scipy.interpolate.interpn") instead.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Suppose we want to interpolate the 2-D function
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: on a grid in [0, 1]x[0, 1]
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'but we only know its values at 1000 data points:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'This can be done with [`griddata`](#scipy.interpolate.griddata "scipy.interpolate.griddata")
    – below we try out all of the interpolation methods:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'One can see that the exact result is reproduced by all of the methods to some
    degree, but for this smooth function the piecewise cubic interpolant gives the
    best results:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-interpolate-griddata-1.png](../Images/d4bc2b2f62484ee4c84f7f992c802047.png)'
  prefs: []
  type: TYPE_IMG
