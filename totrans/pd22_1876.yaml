- en: Contributing to pandas
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/development/contributing.html](https://pandas.pydata.org/docs/development/contributing.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Table of contents:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Bug reports and enhancement requests](#bug-reports-and-enhancement-requests)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Finding an issue to contribute to](#finding-an-issue-to-contribute-to)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Submitting a pull request](#submitting-a-pull-request)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Version control, Git, and GitHub](#version-control-git-and-github)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting started with Git](#getting-started-with-git)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Create a fork of pandas](#create-a-fork-of-pandas)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Creating a feature branch](#creating-a-feature-branch)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Making code changes](#making-code-changes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Pushing your changes](#pushing-your-changes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Making a pull request](#making-a-pull-request)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Updating your pull request](#updating-your-pull-request)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Updating the development environment](#updating-the-development-environment)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Tips for a successful pull request](#tips-for-a-successful-pull-request)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All contributions, bug reports, bug fixes, documentation improvements, enhancements,
    and ideas are welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '## [Bug reports and enhancement requests](#id1)'
  prefs: []
  type: TYPE_NORMAL
- en: Bug reports and enhancement requests are an important part of making pandas
    more stable and are curated though Github issues. When reporting and issue or
    request, please select the [appropriate category and fill out the issue form fully](https://github.com/pandas-dev/pandas/issues/new/choose)
    to ensure others and the core development team can fully understand the scope
    of the issue.
  prefs: []
  type: TYPE_NORMAL
- en: The issue will then show up to the pandas community and be open to comments/ideas
    from others.
  prefs: []
  type: TYPE_NORMAL
- en: '[Finding an issue to contribute to](#id2)'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you are brand new to pandas or open-source development, we recommend searching
    the [GitHub “issues” tab](https://github.com/pandas-dev/pandas/issues) to find
    issues that interest you. Unassigned issues labeled [Docs](https://github.com/pandas-dev/pandas/issues?q=is%3Aopen+sort%3Aupdated-desc+label%3ADocs+no%3Aassignee)
    and [good first issue](https://github.com/pandas-dev/pandas/issues?q=is%3Aopen+sort%3Aupdated-desc+label%3A%22good+first+issue%22+no%3Aassignee)
    are typically good for newer contributors.
  prefs: []
  type: TYPE_NORMAL
- en: Once you’ve found an interesting issue, it’s a good idea to assign the issue
    to yourself, so nobody else duplicates the work on it. On the Github issue, a
    comment with the exact text `take` to automatically assign you the issue (this
    will take seconds and may require refreshing the page to see it).
  prefs: []
  type: TYPE_NORMAL
- en: If for whatever reason you are not able to continue working with the issue,
    please unassign it, so other people know it’s available again. You can check the
    list of assigned issues, since people may not be working in them anymore. If you
    want to work on one that is assigned, feel free to kindly ask the current assignee
    if you can take it (please allow at least a week of inactivity before considering
    work in the issue discontinued).
  prefs: []
  type: TYPE_NORMAL
- en: We have several [contributor community](community.html#community) communication
    channels, which you are welcome to join, and ask questions as you figure things
    out. Among them are regular meetings for new contributors, dev meetings, a dev
    mailing list, and a Slack for the contributor community. All pandas contributors
    are welcome to these spaces, where they can connect with each other. Even maintainers
    who have been with us for a long time felt just like you when they started out,
    and are happy to welcome you and support you as you get to know how we work, and
    where things are. Take a look at the next sections to learn more.
  prefs: []
  type: TYPE_NORMAL
- en: '## [Submitting a pull request](#id3)'
  prefs: []
  type: TYPE_NORMAL
- en: '### [Version control, Git, and GitHub](#id4)'
  prefs: []
  type: TYPE_NORMAL
- en: pandas is hosted on [GitHub](https://www.github.com/pandas-dev/pandas), and
    to contribute, you will need to sign up for a [free GitHub account](https://github.com/signup/free).
    We use [Git](https://git-scm.com/) for version control to allow many people to
    work together on the project.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are new to Git, you can reference some of these resources for learning
    Git. Feel free to reach out to the [contributor community](community.html#community)
    for help if needed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Git documentation](https://git-scm.com/doc).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Numpy’s Git resources](https://numpy.org/doc/stable/dev/gitwash/git_resources.html)
    tutorial.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Also, the project follows a forking workflow further described on this page
    whereby contributors fork the repository, make changes and then create a pull
    request. So please be sure to read and follow all the instructions in this guide.
  prefs: []
  type: TYPE_NORMAL
- en: If you are new to contributing to projects through forking on GitHub, take a
    look at the [GitHub documentation for contributing to projects](https://docs.github.com/en/get-started/quickstart/contributing-to-projects).
    GitHub provides a quick tutorial using a test repository that may help you become
    more familiar with forking a repository, cloning a fork, creating a feature branch,
    pushing changes and making pull requests.
  prefs: []
  type: TYPE_NORMAL
- en: 'Below are some useful resources for learning more about forking and pull requests
    on GitHub:'
  prefs: []
  type: TYPE_NORMAL
- en: the [GitHub documentation for forking a repo](https://docs.github.com/en/get-started/quickstart/fork-a-repo).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the [GitHub documentation for collaborating with pull requests](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the [GitHub documentation for working with forks](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting started with Git](#id5)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[GitHub has instructions](https://docs.github.com/en/get-started/quickstart/set-up-git)
    for installing git, setting up your SSH key, and configuring git. All these steps
    need to be completed before you can work seamlessly between your local repository
    and GitHub.'
  prefs: []
  type: TYPE_NORMAL
- en: '### [Create a fork of pandas](#id6)'
  prefs: []
  type: TYPE_NORMAL
- en: You will need your own copy of pandas (aka fork) to work on the code. Go to
    the [pandas project page](https://github.com/pandas-dev/pandas) and hit the `Fork`
    button. Please uncheck the box to copy only the main branch before selecting `Create
    Fork`. You will want to clone your fork to your machine
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: This creates the directory `pandas-yourname` and connects your repository to
    the upstream (main project) *pandas* repository.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Performing a shallow clone (with `--depth==N`, for some `N` greater or equal
    to 1) might break some tests and features as `pd.show_versions()` as the version
    number cannot be computed anymore.
  prefs: []
  type: TYPE_NORMAL
- en: '[Creating a feature branch](#id7)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Your local `main` branch should always reflect the current state of pandas repository.
    First ensure it’s up-to-date with the main pandas repository.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Then, create a feature branch for making your changes. For example
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: This changes your working branch from `main` to the `shiny-new-feature` branch.
    Keep any changes in this branch specific to one bug or feature so it is clear
    what the branch brings to pandas. You can have many feature branches and switch
    in between them using the `git checkout` command.
  prefs: []
  type: TYPE_NORMAL
- en: When you want to update the feature branch with changes in main after you created
    the branch, check the section on [updating a PR](#contributing-update-pr).
  prefs: []
  type: TYPE_NORMAL
- en: '### [Making code changes](#id8)'
  prefs: []
  type: TYPE_NORMAL
- en: Before modifying any code, ensure you follow the [contributing environment](contributing_environment.html#contributing-environment)
    guidelines to set up an appropriate development environment.
  prefs: []
  type: TYPE_NORMAL
- en: Then once you have made code changes, you can see all the changes you’ve currently
    made by running.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: For files you intended to modify or add, run.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Running `git status` again should display
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Finally, commit your changes to your local repository with an explanatory commit
    message
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]  ### [Pushing your changes](#id9)'
  prefs: []
  type: TYPE_NORMAL
- en: When you want your changes to appear publicly on your GitHub page, push your
    forked feature branch’s commits
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Here `origin` is the default name given to your remote repository on GitHub.
    You can see the remote repositories
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: If you added the upstream repository as described above you will see something
    like
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Now your code is on GitHub, but it is not yet a part of the pandas project.
    For that to happen, a pull request needs to be submitted on GitHub.
  prefs: []
  type: TYPE_NORMAL
- en: '[Making a pull request](#id10)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: One you have finished your code changes, your code change will need to follow
    the [pandas contribution guidelines](contributing_codebase.html#contributing-codebase)
    to be successfully accepted.
  prefs: []
  type: TYPE_NORMAL
- en: 'If everything looks good, you are ready to make a pull request. A pull request
    is how code from your local repository becomes available to the GitHub community
    to review and merged into project to appear the in the next release. To submit
    a pull request:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to your repository on GitHub
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the `Compare & pull request` button
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can then click on `Commits` and `Files Changed` to make sure everything
    looks okay one last time
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Write a descriptive title that includes prefixes. pandas uses a convention
    for title prefixes. Here are some common ones along with general guidelines for
    when to use them:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'ENH: Enhancement, new functionality'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'BUG: Bug fix'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'DOC: Additions/updates to documentation'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'TST: Additions/updates to tests'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'BLD: Updates to the build process/scripts'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'PERF: Performance improvement'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'TYP: Type annotations'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'CLN: Code cleanup'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: Write a description of your changes in the `Preview Discussion` tab
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click `Send Pull Request`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This request then goes to the repository maintainers, and they will review the
    code.
  prefs: []
  type: TYPE_NORMAL
- en: '### [Updating your pull request](#id11)'
  prefs: []
  type: TYPE_NORMAL
- en: Based on the review you get on your pull request, you will probably need to
    make some changes to the code. You can follow the [code committing steps](#contributing-commit-code)
    again to address any feedback and update your pull request.
  prefs: []
  type: TYPE_NORMAL
- en: 'It is also important that updates in the pandas `main` branch are reflected
    in your pull request. To update your feature branch with changes in the pandas
    `main` branch, run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: If there are no conflicts (or they could be fixed automatically), a file with
    a default commit message will open, and you can simply save and quit this file.
  prefs: []
  type: TYPE_NORMAL
- en: If there are merge conflicts, you need to solve those conflicts. See for example
    at [https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/)
    for an explanation on how to do this.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the conflicts are resolved, run:'
  prefs: []
  type: TYPE_NORMAL
- en: '`git add -u` to stage any files you’ve updated;'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`git commit` to finish the merge.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: If you have uncommitted changes at the moment you want to update the branch
    with `main`, you will need to `stash` them prior to updating (see the [stash docs](https://git-scm.com/book/en/v2/Git-Tools-Stashing-and-Cleaning)).
    This will effectively store your changes and they can be reapplied after updating.
  prefs: []
  type: TYPE_NORMAL
- en: 'After the feature branch has been update locally, you can now update your pull
    request by pushing to the branch on GitHub:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Any `git push` will automatically update your pull request with your branch’s
    changes and restart the [Continuous Integration](contributing_codebase.html#contributing-ci)
    checks.  ### [Updating the development environment](#id12)'
  prefs: []
  type: TYPE_NORMAL
- en: It is important to periodically update your local `main` branch with updates
    from the pandas `main` branch and update your development environment to reflect
    any changes to the various packages that are used during development.
  prefs: []
  type: TYPE_NORMAL
- en: 'If using [mamba](contributing_environment.html#contributing-mamba), run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'If using [pip](contributing_environment.html#contributing-pip) , do:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '[Tips for a successful pull request](#id13)'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have made it to the [Making a pull request](#making-a-pull-request) phase,
    one of the core contributors may take a look. Please note however that a handful
    of people are responsible for reviewing all of the contributions, which can often
    lead to bottlenecks.
  prefs: []
  type: TYPE_NORMAL
- en: 'To improve the chances of your pull request being reviewed, you should:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reference an open issue** for non-trivial changes to clarify the PR’s purpose'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ensure you have appropriate tests**. These should be the first part of any
    PR'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Keep your pull requests as simple as possible**. Larger PRs take longer to
    review'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ensure that CI is in a green state**. Reviewers may not even look otherwise'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Keep** [Updating your pull request](#updating-your-pull-request), either
    by request or every few days'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## [Bug reports and enhancement requests](#id1)'
  prefs: []
  type: TYPE_NORMAL
- en: Bug reports and enhancement requests are an important part of making pandas
    more stable and are curated though Github issues. When reporting and issue or
    request, please select the [appropriate category and fill out the issue form fully](https://github.com/pandas-dev/pandas/issues/new/choose)
    to ensure others and the core development team can fully understand the scope
    of the issue.
  prefs: []
  type: TYPE_NORMAL
- en: The issue will then show up to the pandas community and be open to comments/ideas
    from others.
  prefs: []
  type: TYPE_NORMAL
- en: '[Finding an issue to contribute to](#id2)'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you are brand new to pandas or open-source development, we recommend searching
    the [GitHub “issues” tab](https://github.com/pandas-dev/pandas/issues) to find
    issues that interest you. Unassigned issues labeled [Docs](https://github.com/pandas-dev/pandas/issues?q=is%3Aopen+sort%3Aupdated-desc+label%3ADocs+no%3Aassignee)
    and [good first issue](https://github.com/pandas-dev/pandas/issues?q=is%3Aopen+sort%3Aupdated-desc+label%3A%22good+first+issue%22+no%3Aassignee)
    are typically good for newer contributors.
  prefs: []
  type: TYPE_NORMAL
- en: Once you’ve found an interesting issue, it’s a good idea to assign the issue
    to yourself, so nobody else duplicates the work on it. On the Github issue, a
    comment with the exact text `take` to automatically assign you the issue (this
    will take seconds and may require refreshing the page to see it).
  prefs: []
  type: TYPE_NORMAL
- en: If for whatever reason you are not able to continue working with the issue,
    please unassign it, so other people know it’s available again. You can check the
    list of assigned issues, since people may not be working in them anymore. If you
    want to work on one that is assigned, feel free to kindly ask the current assignee
    if you can take it (please allow at least a week of inactivity before considering
    work in the issue discontinued).
  prefs: []
  type: TYPE_NORMAL
- en: We have several [contributor community](community.html#community) communication
    channels, which you are welcome to join, and ask questions as you figure things
    out. Among them are regular meetings for new contributors, dev meetings, a dev
    mailing list, and a Slack for the contributor community. All pandas contributors
    are welcome to these spaces, where they can connect with each other. Even maintainers
    who have been with us for a long time felt just like you when they started out,
    and are happy to welcome you and support you as you get to know how we work, and
    where things are. Take a look at the next sections to learn more.
  prefs: []
  type: TYPE_NORMAL
- en: '## [Submitting a pull request](#id3)'
  prefs: []
  type: TYPE_NORMAL
- en: '### [Version control, Git, and GitHub](#id4)'
  prefs: []
  type: TYPE_NORMAL
- en: pandas is hosted on [GitHub](https://www.github.com/pandas-dev/pandas), and
    to contribute, you will need to sign up for a [free GitHub account](https://github.com/signup/free).
    We use [Git](https://git-scm.com/) for version control to allow many people to
    work together on the project.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are new to Git, you can reference some of these resources for learning
    Git. Feel free to reach out to the [contributor community](community.html#community)
    for help if needed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Git documentation](https://git-scm.com/doc).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Numpy’s Git resources](https://numpy.org/doc/stable/dev/gitwash/git_resources.html)
    tutorial.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Also, the project follows a forking workflow further described on this page
    whereby contributors fork the repository, make changes and then create a pull
    request. So please be sure to read and follow all the instructions in this guide.
  prefs: []
  type: TYPE_NORMAL
- en: If you are new to contributing to projects through forking on GitHub, take a
    look at the [GitHub documentation for contributing to projects](https://docs.github.com/en/get-started/quickstart/contributing-to-projects).
    GitHub provides a quick tutorial using a test repository that may help you become
    more familiar with forking a repository, cloning a fork, creating a feature branch,
    pushing changes and making pull requests.
  prefs: []
  type: TYPE_NORMAL
- en: 'Below are some useful resources for learning more about forking and pull requests
    on GitHub:'
  prefs: []
  type: TYPE_NORMAL
- en: the [GitHub documentation for forking a repo](https://docs.github.com/en/get-started/quickstart/fork-a-repo).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the [GitHub documentation for collaborating with pull requests](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the [GitHub documentation for working with forks](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting started with Git](#id5)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[GitHub has instructions](https://docs.github.com/en/get-started/quickstart/set-up-git)
    for installing git, setting up your SSH key, and configuring git. All these steps
    need to be completed before you can work seamlessly between your local repository
    and GitHub.'
  prefs: []
  type: TYPE_NORMAL
- en: '### [Create a fork of pandas](#id6)'
  prefs: []
  type: TYPE_NORMAL
- en: You will need your own copy of pandas (aka fork) to work on the code. Go to
    the [pandas project page](https://github.com/pandas-dev/pandas) and hit the `Fork`
    button. Please uncheck the box to copy only the main branch before selecting `Create
    Fork`. You will want to clone your fork to your machine
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: This creates the directory `pandas-yourname` and connects your repository to
    the upstream (main project) *pandas* repository.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Performing a shallow clone (with `--depth==N`, for some `N` greater or equal
    to 1) might break some tests and features as `pd.show_versions()` as the version
    number cannot be computed anymore.
  prefs: []
  type: TYPE_NORMAL
- en: '[Creating a feature branch](#id7)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Your local `main` branch should always reflect the current state of pandas repository.
    First ensure it’s up-to-date with the main pandas repository.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Then, create a feature branch for making your changes. For example
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: This changes your working branch from `main` to the `shiny-new-feature` branch.
    Keep any changes in this branch specific to one bug or feature so it is clear
    what the branch brings to pandas. You can have many feature branches and switch
    in between them using the `git checkout` command.
  prefs: []
  type: TYPE_NORMAL
- en: When you want to update the feature branch with changes in main after you created
    the branch, check the section on [updating a PR](#contributing-update-pr).
  prefs: []
  type: TYPE_NORMAL
- en: '### [Making code changes](#id8)'
  prefs: []
  type: TYPE_NORMAL
- en: Before modifying any code, ensure you follow the [contributing environment](contributing_environment.html#contributing-environment)
    guidelines to set up an appropriate development environment.
  prefs: []
  type: TYPE_NORMAL
- en: Then once you have made code changes, you can see all the changes you’ve currently
    made by running.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: For files you intended to modify or add, run.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Running `git status` again should display
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Finally, commit your changes to your local repository with an explanatory commit
    message
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]  ### [Pushing your changes](#id9)'
  prefs: []
  type: TYPE_NORMAL
- en: When you want your changes to appear publicly on your GitHub page, push your
    forked feature branch’s commits
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Here `origin` is the default name given to your remote repository on GitHub.
    You can see the remote repositories
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: If you added the upstream repository as described above you will see something
    like
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: Now your code is on GitHub, but it is not yet a part of the pandas project.
    For that to happen, a pull request needs to be submitted on GitHub.
  prefs: []
  type: TYPE_NORMAL
- en: '[Making a pull request](#id10)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: One you have finished your code changes, your code change will need to follow
    the [pandas contribution guidelines](contributing_codebase.html#contributing-codebase)
    to be successfully accepted.
  prefs: []
  type: TYPE_NORMAL
- en: 'If everything looks good, you are ready to make a pull request. A pull request
    is how code from your local repository becomes available to the GitHub community
    to review and merged into project to appear the in the next release. To submit
    a pull request:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to your repository on GitHub
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the `Compare & pull request` button
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can then click on `Commits` and `Files Changed` to make sure everything
    looks okay one last time
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Write a descriptive title that includes prefixes. pandas uses a convention
    for title prefixes. Here are some common ones along with general guidelines for
    when to use them:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'ENH: Enhancement, new functionality'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'BUG: Bug fix'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'DOC: Additions/updates to documentation'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'TST: Additions/updates to tests'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'BLD: Updates to the build process/scripts'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'PERF: Performance improvement'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'TYP: Type annotations'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'CLN: Code cleanup'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: Write a description of your changes in the `Preview Discussion` tab
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click `Send Pull Request`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This request then goes to the repository maintainers, and they will review the
    code.
  prefs: []
  type: TYPE_NORMAL
- en: '### [Updating your pull request](#id11)'
  prefs: []
  type: TYPE_NORMAL
- en: Based on the review you get on your pull request, you will probably need to
    make some changes to the code. You can follow the [code committing steps](#contributing-commit-code)
    again to address any feedback and update your pull request.
  prefs: []
  type: TYPE_NORMAL
- en: 'It is also important that updates in the pandas `main` branch are reflected
    in your pull request. To update your feature branch with changes in the pandas
    `main` branch, run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: If there are no conflicts (or they could be fixed automatically), a file with
    a default commit message will open, and you can simply save and quit this file.
  prefs: []
  type: TYPE_NORMAL
- en: If there are merge conflicts, you need to solve those conflicts. See for example
    at [https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/)
    for an explanation on how to do this.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the conflicts are resolved, run:'
  prefs: []
  type: TYPE_NORMAL
- en: '`git add -u` to stage any files you’ve updated;'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`git commit` to finish the merge.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: If you have uncommitted changes at the moment you want to update the branch
    with `main`, you will need to `stash` them prior to updating (see the [stash docs](https://git-scm.com/book/en/v2/Git-Tools-Stashing-and-Cleaning)).
    This will effectively store your changes and they can be reapplied after updating.
  prefs: []
  type: TYPE_NORMAL
- en: 'After the feature branch has been update locally, you can now update your pull
    request by pushing to the branch on GitHub:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'Any `git push` will automatically update your pull request with your branch’s
    changes and restart the [Continuous Integration](contributing_codebase.html#contributing-ci)
    checks.  ### [Updating the development environment](#id12)'
  prefs: []
  type: TYPE_NORMAL
- en: It is important to periodically update your local `main` branch with updates
    from the pandas `main` branch and update your development environment to reflect
    any changes to the various packages that are used during development.
  prefs: []
  type: TYPE_NORMAL
- en: 'If using [mamba](contributing_environment.html#contributing-mamba), run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'If using [pip](contributing_environment.html#contributing-pip) , do:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]  ### [Version control, Git, and GitHub](#id4)'
  prefs: []
  type: TYPE_NORMAL
- en: pandas is hosted on [GitHub](https://www.github.com/pandas-dev/pandas), and
    to contribute, you will need to sign up for a [free GitHub account](https://github.com/signup/free).
    We use [Git](https://git-scm.com/) for version control to allow many people to
    work together on the project.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are new to Git, you can reference some of these resources for learning
    Git. Feel free to reach out to the [contributor community](community.html#community)
    for help if needed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Git documentation](https://git-scm.com/doc).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Numpy’s Git resources](https://numpy.org/doc/stable/dev/gitwash/git_resources.html)
    tutorial.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Also, the project follows a forking workflow further described on this page
    whereby contributors fork the repository, make changes and then create a pull
    request. So please be sure to read and follow all the instructions in this guide.
  prefs: []
  type: TYPE_NORMAL
- en: If you are new to contributing to projects through forking on GitHub, take a
    look at the [GitHub documentation for contributing to projects](https://docs.github.com/en/get-started/quickstart/contributing-to-projects).
    GitHub provides a quick tutorial using a test repository that may help you become
    more familiar with forking a repository, cloning a fork, creating a feature branch,
    pushing changes and making pull requests.
  prefs: []
  type: TYPE_NORMAL
- en: 'Below are some useful resources for learning more about forking and pull requests
    on GitHub:'
  prefs: []
  type: TYPE_NORMAL
- en: the [GitHub documentation for forking a repo](https://docs.github.com/en/get-started/quickstart/fork-a-repo).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the [GitHub documentation for collaborating with pull requests](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the [GitHub documentation for working with forks](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting started with Git](#id5)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[GitHub has instructions](https://docs.github.com/en/get-started/quickstart/set-up-git)
    for installing git, setting up your SSH key, and configuring git. All these steps
    need to be completed before you can work seamlessly between your local repository
    and GitHub.'
  prefs: []
  type: TYPE_NORMAL
- en: '### [Create a fork of pandas](#id6)'
  prefs: []
  type: TYPE_NORMAL
- en: You will need your own copy of pandas (aka fork) to work on the code. Go to
    the [pandas project page](https://github.com/pandas-dev/pandas) and hit the `Fork`
    button. Please uncheck the box to copy only the main branch before selecting `Create
    Fork`. You will want to clone your fork to your machine
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: This creates the directory `pandas-yourname` and connects your repository to
    the upstream (main project) *pandas* repository.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Performing a shallow clone (with `--depth==N`, for some `N` greater or equal
    to 1) might break some tests and features as `pd.show_versions()` as the version
    number cannot be computed anymore.
  prefs: []
  type: TYPE_NORMAL
- en: '[Creating a feature branch](#id7)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Your local `main` branch should always reflect the current state of pandas repository.
    First ensure it’s up-to-date with the main pandas repository.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: Then, create a feature branch for making your changes. For example
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: This changes your working branch from `main` to the `shiny-new-feature` branch.
    Keep any changes in this branch specific to one bug or feature so it is clear
    what the branch brings to pandas. You can have many feature branches and switch
    in between them using the `git checkout` command.
  prefs: []
  type: TYPE_NORMAL
- en: When you want to update the feature branch with changes in main after you created
    the branch, check the section on [updating a PR](#contributing-update-pr).
  prefs: []
  type: TYPE_NORMAL
- en: '### [Making code changes](#id8)'
  prefs: []
  type: TYPE_NORMAL
- en: Before modifying any code, ensure you follow the [contributing environment](contributing_environment.html#contributing-environment)
    guidelines to set up an appropriate development environment.
  prefs: []
  type: TYPE_NORMAL
- en: Then once you have made code changes, you can see all the changes you’ve currently
    made by running.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: For files you intended to modify or add, run.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: Running `git status` again should display
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: Finally, commit your changes to your local repository with an explanatory commit
    message
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: '### [Pushing your changes](#id9)'
  prefs: []
  type: TYPE_NORMAL
- en: When you want your changes to appear publicly on your GitHub page, push your
    forked feature branch’s commits
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: Here `origin` is the default name given to your remote repository on GitHub.
    You can see the remote repositories
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: If you added the upstream repository as described above you will see something
    like
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: Now your code is on GitHub, but it is not yet a part of the pandas project.
    For that to happen, a pull request needs to be submitted on GitHub.
  prefs: []
  type: TYPE_NORMAL
- en: '[Making a pull request](#id10)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: One you have finished your code changes, your code change will need to follow
    the [pandas contribution guidelines](contributing_codebase.html#contributing-codebase)
    to be successfully accepted.
  prefs: []
  type: TYPE_NORMAL
- en: 'If everything looks good, you are ready to make a pull request. A pull request
    is how code from your local repository becomes available to the GitHub community
    to review and merged into project to appear the in the next release. To submit
    a pull request:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to your repository on GitHub
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the `Compare & pull request` button
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can then click on `Commits` and `Files Changed` to make sure everything
    looks okay one last time
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Write a descriptive title that includes prefixes. pandas uses a convention
    for title prefixes. Here are some common ones along with general guidelines for
    when to use them:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'ENH: Enhancement, new functionality'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'BUG: Bug fix'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'DOC: Additions/updates to documentation'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'TST: Additions/updates to tests'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'BLD: Updates to the build process/scripts'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'PERF: Performance improvement'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'TYP: Type annotations'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'CLN: Code cleanup'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: Write a description of your changes in the `Preview Discussion` tab
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click `Send Pull Request`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This request then goes to the repository maintainers, and they will review the
    code.
  prefs: []
  type: TYPE_NORMAL
- en: '### [Updating your pull request](#id11)'
  prefs: []
  type: TYPE_NORMAL
- en: Based on the review you get on your pull request, you will probably need to
    make some changes to the code. You can follow the [code committing steps](#contributing-commit-code)
    again to address any feedback and update your pull request.
  prefs: []
  type: TYPE_NORMAL
- en: 'It is also important that updates in the pandas `main` branch are reflected
    in your pull request. To update your feature branch with changes in the pandas
    `main` branch, run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: If there are no conflicts (or they could be fixed automatically), a file with
    a default commit message will open, and you can simply save and quit this file.
  prefs: []
  type: TYPE_NORMAL
- en: If there are merge conflicts, you need to solve those conflicts. See for example
    at [https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/)
    for an explanation on how to do this.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the conflicts are resolved, run:'
  prefs: []
  type: TYPE_NORMAL
- en: '`git add -u` to stage any files you’ve updated;'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`git commit` to finish the merge.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: If you have uncommitted changes at the moment you want to update the branch
    with `main`, you will need to `stash` them prior to updating (see the [stash docs](https://git-scm.com/book/en/v2/Git-Tools-Stashing-and-Cleaning)).
    This will effectively store your changes and they can be reapplied after updating.
  prefs: []
  type: TYPE_NORMAL
- en: 'After the feature branch has been update locally, you can now update your pull
    request by pushing to the branch on GitHub:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: Any `git push` will automatically update your pull request with your branch’s
    changes and restart the [Continuous Integration](contributing_codebase.html#contributing-ci)
    checks.
  prefs: []
  type: TYPE_NORMAL
- en: '### [Updating the development environment](#id12)'
  prefs: []
  type: TYPE_NORMAL
- en: It is important to periodically update your local `main` branch with updates
    from the pandas `main` branch and update your development environment to reflect
    any changes to the various packages that are used during development.
  prefs: []
  type: TYPE_NORMAL
- en: 'If using [mamba](contributing_environment.html#contributing-mamba), run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: 'If using [pip](contributing_environment.html#contributing-pip) , do:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: '[Tips for a successful pull request](#id13)'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have made it to the [Making a pull request](#making-a-pull-request) phase,
    one of the core contributors may take a look. Please note however that a handful
    of people are responsible for reviewing all of the contributions, which can often
    lead to bottlenecks.
  prefs: []
  type: TYPE_NORMAL
- en: 'To improve the chances of your pull request being reviewed, you should:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reference an open issue** for non-trivial changes to clarify the PR’s purpose'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ensure you have appropriate tests**. These should be the first part of any
    PR'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Keep your pull requests as simple as possible**. Larger PRs take longer to
    review'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ensure that CI is in a green state**. Reviewers may not even look otherwise'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Keep** [Updating your pull request](#updating-your-pull-request), either
    by request or every few days'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
