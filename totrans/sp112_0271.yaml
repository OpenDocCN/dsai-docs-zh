- en: scipy.linalg.svd
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.svd.html#scipy.linalg.svd](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.svd.html#scipy.linalg.svd)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Singular Value Decomposition.
  prefs: []
  type: TYPE_NORMAL
- en: Factorizes the matrix *a* into two unitary matrices `U` and `Vh`, and a 1-D
    array `s` of singular values (real, non-negative) such that `a == U @ S @ Vh`,
    where `S` is a suitably shaped matrix of zeros with main diagonal `s`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**(M, N) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Matrix to decompose.
  prefs: []
  type: TYPE_NORMAL
- en: '**full_matrices**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True (default), *U* and *Vh* are of shape `(M, M)`, `(N, N)`. If False, the
    shapes are `(M, K)` and `(K, N)`, where `K = min(M, N)`.
  prefs: []
  type: TYPE_NORMAL
- en: '**compute_uv**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to compute also `U` and `Vh` in addition to `s`. Default is True.
  prefs: []
  type: TYPE_NORMAL
- en: '**overwrite_a**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to overwrite *a*; may improve performance. Default is False.
  prefs: []
  type: TYPE_NORMAL
- en: '**check_finite**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to check that the input matrix contains only finite numbers. Disabling
    may give a performance gain, but may result in problems (crashes, non-termination)
    if the inputs do contain infinities or NaNs.
  prefs: []
  type: TYPE_NORMAL
- en: '**lapack_driver**{‘gesdd’, ‘gesvd’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to use the more efficient divide-and-conquer approach (`'gesdd'`) or
    general rectangular approach (`'gesvd'`) to compute the SVD. MATLAB and Octave
    use the `'gesvd'` approach. Default is `'gesdd'`.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.18.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**U**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Unitary matrix having left singular vectors as columns. Of shape `(M, M)` or
    `(M, K)`, depending on *full_matrices*.
  prefs: []
  type: TYPE_NORMAL
- en: '**s**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The singular values, sorted in non-increasing order. Of shape (K,), with `K
    = min(M, N)`.
  prefs: []
  type: TYPE_NORMAL
- en: '**Vh**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Unitary matrix having right singular vectors as rows. Of shape `(N, N)` or `(K,
    N)` depending on *full_matrices*.
  prefs: []
  type: TYPE_NORMAL
- en: For `compute_uv=False`, only `s` is returned.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: LinAlgError
  prefs: []
  type: TYPE_NORMAL
- en: If SVD computation does not converge.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`svdvals`](scipy.linalg.svdvals.html#scipy.linalg.svdvals "scipy.linalg.svdvals")'
  prefs: []
  type: TYPE_NORMAL
- en: Compute singular values of a matrix.
  prefs: []
  type: TYPE_NORMAL
- en: '[`diagsvd`](scipy.linalg.diagsvd.html#scipy.linalg.diagsvd "scipy.linalg.diagsvd")'
  prefs: []
  type: TYPE_NORMAL
- en: Construct the Sigma matrix, given the vector s.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Reconstruct the original matrix from the decomposition:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Alternatively, use `full_matrices=False` (notice that the shape of `U` is then
    `(m, n)` instead of `(m, m)`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
