- en: numpy.fromfile
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.fromfile.html](https://numpy.org/doc/1.26/reference/generated/numpy.fromfile.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Construct an array from data in a text or binary file.
  prefs: []
  type: TYPE_NORMAL
- en: A highly efficient way of reading binary data with a known data-type, as well
    as parsing simply formatted text files. Data written using the *tofile* method
    can be read using this function.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**file**file or str or Path'
  prefs: []
  type: TYPE_NORMAL
- en: Open file object or filename.
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 1.17.0: [`pathlib.Path`](https://docs.python.org/3/library/pathlib.html#pathlib.Path
    "(in Python v3.11)") objects are now accepted.'
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype**data-type'
  prefs: []
  type: TYPE_NORMAL
- en: Data type of the returned array. For binary files, it is used to determine the
    size and byte-order of the items in the file. Most builtin numeric types are supported
    and extension types may be supported.
  prefs: []
  type: TYPE_NORMAL
- en: 'New in version 1.18.0: Complex dtypes.'
  prefs: []
  type: TYPE_NORMAL
- en: '**count**int'
  prefs: []
  type: TYPE_NORMAL
- en: Number of items to read. `-1` means all items (i.e., the complete file).
  prefs: []
  type: TYPE_NORMAL
- en: '**sep**str'
  prefs: []
  type: TYPE_NORMAL
- en: Separator between items if file is a text file. Empty (“”) separator means the
    file should be treated as binary. Spaces (” “) in the separator match zero or
    more whitespace characters. A separator consisting only of spaces must match at
    least one whitespace.
  prefs: []
  type: TYPE_NORMAL
- en: '**offset**int'
  prefs: []
  type: TYPE_NORMAL
- en: The offset (in bytes) from the file’s current position. Defaults to 0. Only
    permitted for binary files.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.17.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**like**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Reference object to allow the creation of arrays which are not NumPy arrays.
    If an array-like passed in as `like` supports the `__array_function__` protocol,
    the result will be defined by it. In this case, it ensures the creation of an
    array object compatible with that passed in via this argument.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.20.0.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`load`](numpy.load.html#numpy.load "numpy.load"), [`save`](numpy.save.html#numpy.save
    "numpy.save")'
  prefs: []
  type: TYPE_NORMAL
- en: '[`ndarray.tofile`](numpy.ndarray.tofile.html#numpy.ndarray.tofile "numpy.ndarray.tofile")'
  prefs: []
  type: TYPE_NORMAL
- en: '[`loadtxt`](numpy.loadtxt.html#numpy.loadtxt "numpy.loadtxt")'
  prefs: []
  type: TYPE_NORMAL
- en: More flexible way of loading data from a text file.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Do not rely on the combination of *tofile* and [`fromfile`](#numpy.fromfile
    "numpy.fromfile") for data storage, as the binary files generated are not platform
    independent. In particular, no byte-order or data-type information is saved. Data
    can be stored in the platform independent `.npy` format using [`save`](numpy.save.html#numpy.save
    "numpy.save") and [`load`](numpy.load.html#numpy.load "numpy.load") instead.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Construct an ndarray:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Save the raw data to disk:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Read the raw data from disk:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The recommended way to store and load data:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
