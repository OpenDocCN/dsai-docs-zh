- en: pandas.DataFrame.resample
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.resample.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.resample.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Resample time-series data.
  prefs: []
  type: TYPE_NORMAL
- en: Convenience method for frequency conversion and resampling of time series. The
    object must have a datetime-like index (DatetimeIndex, PeriodIndex, or TimedeltaIndex),
    or the caller must pass the label of a datetime-like series/index to the `on`/`level`
    keyword parameter.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**rule**DateOffset, Timedelta or str'
  prefs: []
  type: TYPE_NORMAL
- en: The offset string or object representing target conversion.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**{0 or ‘index’, 1 or ‘columns’}, default 0'
  prefs: []
  type: TYPE_NORMAL
- en: Which axis to use for up- or down-sampling. For Series this parameter is unused
    and defaults to 0\. Must be DatetimeIndex, TimedeltaIndex or PeriodIndex.
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 2.0.0: Use frame.T.resample(…) instead.'
  prefs: []
  type: TYPE_NORMAL
- en: '**closed**{‘right’, ‘left’}, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Which side of bin interval is closed. The default is ‘left’ for all frequency
    offsets except for ‘ME’, ‘YE’, ‘QE’, ‘BME’, ‘BA’, ‘BQE’, and ‘W’ which all have
    a default of ‘right’.
  prefs: []
  type: TYPE_NORMAL
- en: '**label**{‘right’, ‘left’}, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Which bin edge label to label bucket with. The default is ‘left’ for all frequency
    offsets except for ‘ME’, ‘YE’, ‘QE’, ‘BME’, ‘BA’, ‘BQE’, and ‘W’ which all have
    a default of ‘right’.
  prefs: []
  type: TYPE_NORMAL
- en: '**convention**{‘start’, ‘end’, ‘s’, ‘e’}, default ‘start’'
  prefs: []
  type: TYPE_NORMAL
- en: For PeriodIndex only, controls whether to use the start or end of rule.
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 2.2.0: Convert PeriodIndex to DatetimeIndex before
    resampling instead.'
  prefs: []
  type: TYPE_NORMAL
- en: '**kind**{‘timestamp’, ‘period’}, optional, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Pass ‘timestamp’ to convert the resulting index to a DateTimeIndex or ‘period’
    to convert it to a PeriodIndex. By default the input representation is retained.
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 2.2.0: Convert index to desired type explicitly instead.'
  prefs: []
  type: TYPE_NORMAL
- en: '**on**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: For a DataFrame, column to use instead of index for resampling. Column must
    be datetime-like.
  prefs: []
  type: TYPE_NORMAL
- en: '**level**str or int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: For a MultiIndex, level (name or number) to use for resampling. level must be
    datetime-like.
  prefs: []
  type: TYPE_NORMAL
- en: '**origin**Timestamp or str, default ‘start_day’'
  prefs: []
  type: TYPE_NORMAL
- en: 'The timestamp on which to adjust the grouping. The timezone of origin must
    match the timezone of the index. If string, must be one of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '‘epoch’: origin is 1970-01-01'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘start’: origin is the first value of the timeseries'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘start_day’: origin is the first day at midnight of the timeseries'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘end’: origin is the last value of the timeseries'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘end_day’: origin is the ceiling midnight of the last day'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New in version 1.3.0.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Only takes effect for Tick-frequencies (i.e. fixed frequencies like days, hours,
    and minutes, rather than months or quarters).
  prefs: []
  type: TYPE_NORMAL
- en: '**offset**Timedelta or str, default is None'
  prefs: []
  type: TYPE_NORMAL
- en: An offset timedelta added to the origin.
  prefs: []
  type: TYPE_NORMAL
- en: '**group_keys**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to include the group keys in the result index when using `.apply()`
    on the resampled object.
  prefs: []
  type: TYPE_NORMAL
- en: 'New in version 1.5.0: Not specifying `group_keys` will retain values-dependent
    behavior from pandas 1.4 and earlier (see [pandas 1.5.0 Release notes](../../whatsnew/v1.5.0.html#whatsnew-150-enhancements-resample-group-keys)
    for examples).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 2.0.0: `group_keys` now defaults to `False`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: pandas.api.typing.Resampler
  prefs: []
  type: TYPE_NORMAL
- en: '`Resampler` object.'
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.resample`](pandas.Series.resample.html#pandas.Series.resample "pandas.Series.resample")'
  prefs: []
  type: TYPE_NORMAL
- en: Resample a Series.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.resample`](#pandas.DataFrame.resample "pandas.DataFrame.resample")'
  prefs: []
  type: TYPE_NORMAL
- en: Resample a DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '[`groupby`](pandas.DataFrame.groupby.html#pandas.DataFrame.groupby "pandas.DataFrame.groupby")'
  prefs: []
  type: TYPE_NORMAL
- en: Group Series/DataFrame by mapping, function, label, or list of labels.
  prefs: []
  type: TYPE_NORMAL
- en: '[`asfreq`](pandas.DataFrame.asfreq.html#pandas.DataFrame.asfreq "pandas.DataFrame.asfreq")'
  prefs: []
  type: TYPE_NORMAL
- en: Reindex a Series/DataFrame with the given frequency without grouping.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: See the [user guide](https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#resampling)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: To learn more about the offset strings, please see [this link](https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#dateoffset-objects).
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Start by creating a series with 9 one minute timestamps.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Downsample the series into 3 minute bins and sum the values of the timestamps
    falling into a bin.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Downsample the series into 3 minute bins as above, but label each bin using
    the right edge instead of the left. Please note that the value in the bucket used
    as the label is not included in the bucket, which it labels. For example, in the
    original series the bucket `2000-01-01 00:03:00` contains the value 3, but the
    summed value in the resampled bucket with the label `2000-01-01 00:03:00` does
    not include 3 (if it did, the summed value would be 6, not 3).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: To include this value close the right side of the bin interval, as shown below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Upsample the series into 30 second bins.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Upsample the series into 30 second bins and fill the `NaN` values using the
    `ffill` method.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Upsample the series into 30 second bins and fill the `NaN` values using the
    `bfill` method.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Pass a custom function via `apply`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: For DataFrame objects, the keyword on can be used to specify the column instead
    of the index for resampling.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: For a DataFrame with MultiIndex, the keyword level can be used to specify on
    which level the resampling needs to take place.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'If you want to adjust the start of the bins based on a fixed timestamp:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'If you want to adjust the start of the bins with an offset Timedelta, the two
    following lines are equivalent:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'If you want to take the largest Timestamp as the end of the bins:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'In contrast with the start_day, you can use end_day to take the ceiling midnight
    of the largest Timestamp as the end of the bins and drop the bins not containing
    data:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
