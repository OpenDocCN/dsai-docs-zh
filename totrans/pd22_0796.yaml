- en: pandas.DatetimeIndex
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.html](https://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Immutable ndarray-like of datetime64 data.
  prefs: []
  type: TYPE_NORMAL
- en: Represented internally as int64, and which can be boxed to Timestamp objects
    that are subclasses of datetime and carry metadata.
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 2.0.0: The various numeric date/time attributes ([`day`](pandas.DatetimeIndex.day.html#pandas.DatetimeIndex.day
    "pandas.DatetimeIndex.day"), [`month`](pandas.DatetimeIndex.month.html#pandas.DatetimeIndex.month
    "pandas.DatetimeIndex.month"), [`year`](pandas.DatetimeIndex.year.html#pandas.DatetimeIndex.year
    "pandas.DatetimeIndex.year") etc.) now have dtype `int32`. Previously they had
    dtype `int64`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**data**array-like (1-dimensional)'
  prefs: []
  type: TYPE_NORMAL
- en: Datetime-like data to construct index with.
  prefs: []
  type: TYPE_NORMAL
- en: '**freq**str or pandas offset object, optional'
  prefs: []
  type: TYPE_NORMAL
- en: One of pandas date offset strings or corresponding objects. The string ‘infer’
    can be passed in order to set the frequency of the index as the inferred frequency
    upon creation.
  prefs: []
  type: TYPE_NORMAL
- en: '**tz**pytz.timezone or dateutil.tz.tzfile or datetime.tzinfo or str'
  prefs: []
  type: TYPE_NORMAL
- en: Set the Timezone of the data.
  prefs: []
  type: TYPE_NORMAL
- en: '**normalize**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Normalize start/end dates to midnight before generating date range.
  prefs: []
  type: TYPE_NORMAL
- en: Deprecated since version 2.1.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**closed**{‘left’, ‘right’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Set whether to include start and end that are on the boundary. The default includes
    boundary points on either end.
  prefs: []
  type: TYPE_NORMAL
- en: Deprecated since version 2.1.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**ambiguous**‘infer’, bool-ndarray, ‘NaT’, default ‘raise’'
  prefs: []
  type: TYPE_NORMAL
- en: When clocks moved backward due to DST, ambiguous times may arise. For example
    in Central European Time (UTC+01), when going from 03:00 DST to 02:00 non-DST,
    02:30:00 local time occurs both at 00:30:00 UTC and at 01:30:00 UTC. In such a
    situation, the ambiguous parameter dictates how ambiguous times should be handled.
  prefs: []
  type: TYPE_NORMAL
- en: ‘infer’ will attempt to infer fall dst-transition hours based on order
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bool-ndarray where True signifies a DST time, False signifies a non-DST time
    (note that this flag is only applicable for ambiguous times)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘NaT’ will return NaT where there are ambiguous times
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘raise’ will raise an AmbiguousTimeError if there are ambiguous times.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**dayfirst**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: If True, parse dates in data with the day first order.
  prefs: []
  type: TYPE_NORMAL
- en: '**yearfirst**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: If True parse dates in data with the year first order.
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype**numpy.dtype or DatetimeTZDtype or str, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Note that the only NumPy dtype allowed is datetime64[ns].
  prefs: []
  type: TYPE_NORMAL
- en: '**copy**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Make a copy of input ndarray.
  prefs: []
  type: TYPE_NORMAL
- en: '**name**label, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Name to be stored in the index.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`Index`](pandas.Index.html#pandas.Index "pandas.Index")'
  prefs: []
  type: TYPE_NORMAL
- en: The base pandas Index type.
  prefs: []
  type: TYPE_NORMAL
- en: '[`TimedeltaIndex`](pandas.TimedeltaIndex.html#pandas.TimedeltaIndex "pandas.TimedeltaIndex")'
  prefs: []
  type: TYPE_NORMAL
- en: Index of timedelta64 data.
  prefs: []
  type: TYPE_NORMAL
- en: '[`PeriodIndex`](pandas.PeriodIndex.html#pandas.PeriodIndex "pandas.PeriodIndex")'
  prefs: []
  type: TYPE_NORMAL
- en: Index of Period data.
  prefs: []
  type: TYPE_NORMAL
- en: '[`to_datetime`](pandas.to_datetime.html#pandas.to_datetime "pandas.to_datetime")'
  prefs: []
  type: TYPE_NORMAL
- en: Convert argument to datetime.
  prefs: []
  type: TYPE_NORMAL
- en: '[`date_range`](pandas.date_range.html#pandas.date_range "pandas.date_range")'
  prefs: []
  type: TYPE_NORMAL
- en: Create a fixed-frequency DatetimeIndex.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: To learn more about the frequency strings, please see [this link](https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases).
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs: []
  type: TYPE_NORMAL
- en: '| [`year`](pandas.DatetimeIndex.year.html#pandas.DatetimeIndex.year "pandas.DatetimeIndex.year")
    | The year of the datetime. |'
  prefs: []
  type: TYPE_TB
- en: '| [`month`](pandas.DatetimeIndex.month.html#pandas.DatetimeIndex.month "pandas.DatetimeIndex.month")
    | The month as January=1, December=12. |'
  prefs: []
  type: TYPE_TB
- en: '| [`day`](pandas.DatetimeIndex.day.html#pandas.DatetimeIndex.day "pandas.DatetimeIndex.day")
    | The day of the datetime. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hour`](pandas.DatetimeIndex.hour.html#pandas.DatetimeIndex.hour "pandas.DatetimeIndex.hour")
    | The hours of the datetime. |'
  prefs: []
  type: TYPE_TB
- en: '| [`minute`](pandas.DatetimeIndex.minute.html#pandas.DatetimeIndex.minute "pandas.DatetimeIndex.minute")
    | The minutes of the datetime. |'
  prefs: []
  type: TYPE_TB
- en: '| [`second`](pandas.DatetimeIndex.second.html#pandas.DatetimeIndex.second "pandas.DatetimeIndex.second")
    | The seconds of the datetime. |'
  prefs: []
  type: TYPE_TB
- en: '| [`microsecond`](pandas.DatetimeIndex.microsecond.html#pandas.DatetimeIndex.microsecond
    "pandas.DatetimeIndex.microsecond") | The microseconds of the datetime. |'
  prefs: []
  type: TYPE_TB
- en: '| [`nanosecond`](pandas.DatetimeIndex.nanosecond.html#pandas.DatetimeIndex.nanosecond
    "pandas.DatetimeIndex.nanosecond") | The nanoseconds of the datetime. |'
  prefs: []
  type: TYPE_TB
- en: '| [`date`](pandas.DatetimeIndex.date.html#pandas.DatetimeIndex.date "pandas.DatetimeIndex.date")
    | Returns numpy array of python [`datetime.date`](https://docs.python.org/3/library/datetime.html#datetime.date
    "(in Python v3.12)") objects. |'
  prefs: []
  type: TYPE_TB
- en: '| [`time`](pandas.DatetimeIndex.time.html#pandas.DatetimeIndex.time "pandas.DatetimeIndex.time")
    | Returns numpy array of [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(in Python v3.12)") objects. |'
  prefs: []
  type: TYPE_TB
- en: '| [`timetz`](pandas.DatetimeIndex.timetz.html#pandas.DatetimeIndex.timetz "pandas.DatetimeIndex.timetz")
    | Returns numpy array of [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(in Python v3.12)") objects with timezones. |'
  prefs: []
  type: TYPE_TB
- en: '| [`dayofyear`](pandas.DatetimeIndex.dayofyear.html#pandas.DatetimeIndex.dayofyear
    "pandas.DatetimeIndex.dayofyear") | The ordinal day of the year. |'
  prefs: []
  type: TYPE_TB
- en: '| [`day_of_year`](pandas.DatetimeIndex.day_of_year.html#pandas.DatetimeIndex.day_of_year
    "pandas.DatetimeIndex.day_of_year") | The ordinal day of the year. |'
  prefs: []
  type: TYPE_TB
- en: '| [`dayofweek`](pandas.DatetimeIndex.dayofweek.html#pandas.DatetimeIndex.dayofweek
    "pandas.DatetimeIndex.dayofweek") | The day of the week with Monday=0, Sunday=6.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`day_of_week`](pandas.DatetimeIndex.day_of_week.html#pandas.DatetimeIndex.day_of_week
    "pandas.DatetimeIndex.day_of_week") | The day of the week with Monday=0, Sunday=6.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`weekday`](pandas.DatetimeIndex.weekday.html#pandas.DatetimeIndex.weekday
    "pandas.DatetimeIndex.weekday") | The day of the week with Monday=0, Sunday=6.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`quarter`](pandas.DatetimeIndex.quarter.html#pandas.DatetimeIndex.quarter
    "pandas.DatetimeIndex.quarter") | The quarter of the date. |'
  prefs: []
  type: TYPE_TB
- en: '| [`tz`](pandas.DatetimeIndex.tz.html#pandas.DatetimeIndex.tz "pandas.DatetimeIndex.tz")
    | Return the timezone. |'
  prefs: []
  type: TYPE_TB
- en: '| [`freqstr`](pandas.DatetimeIndex.freqstr.html#pandas.DatetimeIndex.freqstr
    "pandas.DatetimeIndex.freqstr") | Return the frequency object as a string if it''s
    set, otherwise None. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_month_start`](pandas.DatetimeIndex.is_month_start.html#pandas.DatetimeIndex.is_month_start
    "pandas.DatetimeIndex.is_month_start") | Indicates whether the date is the first
    day of the month. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_month_end`](pandas.DatetimeIndex.is_month_end.html#pandas.DatetimeIndex.is_month_end
    "pandas.DatetimeIndex.is_month_end") | Indicates whether the date is the last
    day of the month. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_quarter_start`](pandas.DatetimeIndex.is_quarter_start.html#pandas.DatetimeIndex.is_quarter_start
    "pandas.DatetimeIndex.is_quarter_start") | Indicator for whether the date is the
    first day of a quarter. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_quarter_end`](pandas.DatetimeIndex.is_quarter_end.html#pandas.DatetimeIndex.is_quarter_end
    "pandas.DatetimeIndex.is_quarter_end") | Indicator for whether the date is the
    last day of a quarter. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_year_start`](pandas.DatetimeIndex.is_year_start.html#pandas.DatetimeIndex.is_year_start
    "pandas.DatetimeIndex.is_year_start") | Indicate whether the date is the first
    day of a year. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_year_end`](pandas.DatetimeIndex.is_year_end.html#pandas.DatetimeIndex.is_year_end
    "pandas.DatetimeIndex.is_year_end") | Indicate whether the date is the last day
    of the year. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_leap_year`](pandas.DatetimeIndex.is_leap_year.html#pandas.DatetimeIndex.is_leap_year
    "pandas.DatetimeIndex.is_leap_year") | Boolean indicator if the date belongs to
    a leap year. |'
  prefs: []
  type: TYPE_TB
- en: '| [`inferred_freq`](pandas.DatetimeIndex.inferred_freq.html#pandas.DatetimeIndex.inferred_freq
    "pandas.DatetimeIndex.inferred_freq") | Tries to return a string representing
    a frequency generated by infer_freq. |'
  prefs: []
  type: TYPE_TB
- en: '| **freq** |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`normalize`](pandas.DatetimeIndex.normalize.html#pandas.DatetimeIndex.normalize
    "pandas.DatetimeIndex.normalize")(*args, **kwargs) | Convert times to midnight.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`strftime`](pandas.DatetimeIndex.strftime.html#pandas.DatetimeIndex.strftime
    "pandas.DatetimeIndex.strftime")(date_format) | Convert to Index using specified
    date_format. |'
  prefs: []
  type: TYPE_TB
- en: '| [`snap`](pandas.DatetimeIndex.snap.html#pandas.DatetimeIndex.snap "pandas.DatetimeIndex.snap")([freq])
    | Snap time stamps to nearest occurring frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`tz_convert`](pandas.DatetimeIndex.tz_convert.html#pandas.DatetimeIndex.tz_convert
    "pandas.DatetimeIndex.tz_convert")(tz) | Convert tz-aware Datetime Array/Index
    from one time zone to another. |'
  prefs: []
  type: TYPE_TB
- en: '| [`tz_localize`](pandas.DatetimeIndex.tz_localize.html#pandas.DatetimeIndex.tz_localize
    "pandas.DatetimeIndex.tz_localize")(tz[, ambiguous, nonexistent]) | Localize tz-naive
    Datetime Array/Index to tz-aware Datetime Array/Index. |'
  prefs: []
  type: TYPE_TB
- en: '| [`round`](pandas.DatetimeIndex.round.html#pandas.DatetimeIndex.round "pandas.DatetimeIndex.round")(*args, **kwargs)
    | Perform round operation on the data to the specified freq. |'
  prefs: []
  type: TYPE_TB
- en: '| [`floor`](pandas.DatetimeIndex.floor.html#pandas.DatetimeIndex.floor "pandas.DatetimeIndex.floor")(*args, **kwargs)
    | Perform floor operation on the data to the specified freq. |'
  prefs: []
  type: TYPE_TB
- en: '| [`ceil`](pandas.DatetimeIndex.ceil.html#pandas.DatetimeIndex.ceil "pandas.DatetimeIndex.ceil")(*args, **kwargs)
    | Perform ceil operation on the data to the specified freq. |'
  prefs: []
  type: TYPE_TB
- en: '| [`to_period`](pandas.DatetimeIndex.to_period.html#pandas.DatetimeIndex.to_period
    "pandas.DatetimeIndex.to_period")(*args, **kwargs) | Cast to PeriodArray/PeriodIndex
    at a particular frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`to_pydatetime`](pandas.DatetimeIndex.to_pydatetime.html#pandas.DatetimeIndex.to_pydatetime
    "pandas.DatetimeIndex.to_pydatetime")(*args, **kwargs) | Return an ndarray of
    `datetime.datetime` objects. |'
  prefs: []
  type: TYPE_TB
- en: '| [`to_series`](pandas.DatetimeIndex.to_series.html#pandas.DatetimeIndex.to_series
    "pandas.DatetimeIndex.to_series")([index, name]) | Create a Series with both index
    and values equal to the index keys. |'
  prefs: []
  type: TYPE_TB
- en: '| [`to_frame`](pandas.DatetimeIndex.to_frame.html#pandas.DatetimeIndex.to_frame
    "pandas.DatetimeIndex.to_frame")([index, name]) | Create a DataFrame with a column
    containing the Index. |'
  prefs: []
  type: TYPE_TB
- en: '| [`month_name`](pandas.DatetimeIndex.month_name.html#pandas.DatetimeIndex.month_name
    "pandas.DatetimeIndex.month_name")(*args, **kwargs) | Return the month names with
    specified locale. |'
  prefs: []
  type: TYPE_TB
- en: '| [`day_name`](pandas.DatetimeIndex.day_name.html#pandas.DatetimeIndex.day_name
    "pandas.DatetimeIndex.day_name")(*args, **kwargs) | Return the day names with
    specified locale. |'
  prefs: []
  type: TYPE_TB
- en: '| [`mean`](pandas.DatetimeIndex.mean.html#pandas.DatetimeIndex.mean "pandas.DatetimeIndex.mean")(*[, skipna, axis])
    | Return the mean value of the Array. |'
  prefs: []
  type: TYPE_TB
- en: '| [`std`](pandas.DatetimeIndex.std.html#pandas.DatetimeIndex.std "pandas.DatetimeIndex.std")(*args, **kwargs)
    | Return sample standard deviation over requested axis. |'
  prefs: []
  type: TYPE_TB
