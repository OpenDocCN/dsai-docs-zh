["```py\nscipy.signal.minimum_phase(h, method='homomorphic', n_fft=None)\n```", "```py\nepsilon = 2. * n_stop / n_fft \n```", "```py\nn_fft = 2 ** int(np.ceil(np.log2(2 * (len(h) - 1) / 0.01))) \n```", "```py\n>>> import numpy as np\n>>> from scipy.signal import remez, minimum_phase, freqz, group_delay\n>>> import matplotlib.pyplot as plt\n>>> freq = [0, 0.2, 0.3, 1.0]\n>>> desired = [1, 0]\n>>> h_linear = remez(151, freq, desired, fs=2.) \n```", "```py\n>>> h_min_hom = minimum_phase(h_linear, method='homomorphic')\n>>> h_min_hil = minimum_phase(h_linear, method='hilbert') \n```", "```py\n>>> fig, axs = plt.subplots(4, figsize=(4, 8))\n>>> for h, style, color in zip((h_linear, h_min_hom, h_min_hil),\n...                            ('-', '-', '--'), ('k', 'r', 'c')):\n...     w, H = freqz(h)\n...     w, gd = group_delay((h, 1))\n...     w /= np.pi\n...     axs[0].plot(h, color=color, linestyle=style)\n...     axs[1].plot(w, np.abs(H), color=color, linestyle=style)\n...     axs[2].plot(w, 20 * np.log10(np.abs(H)), color=color, linestyle=style)\n...     axs[3].plot(w, gd, color=color, linestyle=style)\n>>> for ax in axs:\n...     ax.grid(True, color='0.5')\n...     ax.fill_between(freq[1:3], *ax.get_ylim(), color='#ffeeaa', zorder=1)\n>>> axs[0].set(xlim=[0, len(h_linear) - 1], ylabel='Amplitude', xlabel='Samples')\n>>> axs[1].legend(['Linear', 'Min-Hom', 'Min-Hil'], title='Phase')\n>>> for ax, ylim in zip(axs[1:], ([0, 1.1], [-150, 10], [-60, 60])):\n...     ax.set(xlim=[0, 1], ylim=ylim, xlabel='Frequency')\n>>> axs[1].set(ylabel='Magnitude')\n>>> axs[2].set(ylabel='Magnitude (dB)')\n>>> axs[3].set(ylabel='Group delay')\n>>> plt.tight_layout() \n```"]