- en: Comprehensive Tutorials to Ultralytics YOLO
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[`docs.ultralytics.com/guides/`](https://docs.ultralytics.com/guides/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Welcome to the Ultralytics' YOLO üöÄ Guides! Our comprehensive tutorials cover
    various aspects of the YOLO object detection model, ranging from training and
    prediction to deployment. Built on PyTorch, YOLO stands out for its exceptional
    speed and accuracy in real-time object detection tasks.
  prefs: []
  type: TYPE_NORMAL
- en: Whether you're a beginner or an expert in deep learning, our tutorials offer
    valuable insights into the implementation and optimization of YOLO for your computer
    vision projects. Let's dive in!
  prefs: []
  type: TYPE_NORMAL
- en: '[`www.youtube.com/embed/96NkhsV-W1U`](https://www.youtube.com/embed/96NkhsV-W1U)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Watch:** Ultralytics YOLOv8 Guides Overview'
  prefs: []
  type: TYPE_NORMAL
- en: Guides
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here's a compilation of in-depth guides to help you master different aspects
    of Ultralytics YOLO.
  prefs: []
  type: TYPE_NORMAL
- en: 'YOLO Common Issues ‚≠ê RECOMMENDED: Practical solutions and troubleshooting tips
    to the most frequently encountered issues when working with Ultralytics YOLO models.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'YOLO Performance Metrics ‚≠ê ESSENTIAL: Understand the key metrics like mAP,
    IoU, and F1 score used to evaluate the performance of your YOLO models. Includes
    practical examples and tips on how to improve detection accuracy and speed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Model Deployment Options: Overview of YOLO model deployment formats like ONNX,
    OpenVINO, and TensorRT, with pros and cons for each to inform your deployment
    strategy.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'K-Fold Cross Validation üöÄ NEW: Learn how to improve model generalization using
    K-Fold cross-validation technique.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Hyperparameter Tuning üöÄ NEW: Discover how to optimize your YOLO models by fine-tuning
    hyperparameters using the Tuner class and genetic evolution algorithms.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'SAHI Tiled Inference üöÄ NEW: Comprehensive guide on leveraging SAHI''s sliced
    inference capabilities with YOLOv8 for object detection in high-resolution images.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'AzureML Quickstart üöÄ NEW: Get up and running with Ultralytics YOLO models on
    Microsoft''s Azure Machine Learning platform. Learn how to train, deploy, and
    scale your object detection projects in the cloud.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Conda Quickstart üöÄ NEW: Step-by-step guide to setting up a [Conda](https://anaconda.org/conda-forge/ultralytics)
    environment for Ultralytics. Learn how to install and start using the Ultralytics
    package efficiently with Conda.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Docker Quickstart üöÄ NEW: Complete guide to setting up and using Ultralytics
    YOLO models with [Docker](https://hub.docker.com/r/ultralytics/ultralytics). Learn
    how to install Docker, manage GPU support, and run YOLO models in isolated containers
    for consistent development and deployment.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Raspberry Pi üöÄ NEW: Quickstart tutorial to run YOLO models to the latest Raspberry
    Pi hardware.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'NVIDIA Jetson üöÄ NEW: Quickstart guide for deploying YOLO models on NVIDIA Jetson
    devices.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'DeepStream on NVIDIA Jetson üöÄ NEW: Quickstart guide for deploying YOLO models
    on NVIDIA Jetson devices using DeepStream and TensorRT.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Triton Inference Server Integration üöÄ NEW: Dive into the integration of Ultralytics
    YOLOv8 with NVIDIA''s Triton Inference Server for scalable and efficient deep
    learning inference deployments.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'YOLO Thread-Safe Inference üöÄ NEW: Guidelines for performing inference with
    YOLO models in a thread-safe manner. Learn the importance of thread safety and
    best practices to prevent race conditions and ensure consistent predictions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Isolating Segmentation Objects üöÄ NEW: Step-by-step recipe and explanation on
    how to extract and/or isolate objects from images using Ultralytics Segmentation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Edge TPU on Raspberry Pi: [Google Edge TPU](https://coral.ai/products/accelerator)
    accelerates YOLO inference on [Raspberry Pi](https://www.raspberrypi.com/).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'View Inference Images in a Terminal: Use VSCode''s integrated terminal to view
    inference results when using Remote Tunnel or SSH sessions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OpenVINO Latency vs Throughput Modes - Learn latency and throughput optimization
    techniques for peak YOLO inference performance.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Steps of a Computer Vision Project üöÄ NEW: Learn about the key steps involved
    in a computer vision project, including defining goals, selecting models, preparing
    data, and evaluating results.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Defining A Computer Vision Project''s Goals üöÄ NEW: Walk through how to effectively
    define clear and measurable goals for your computer vision project. Learn the
    importance of a well-defined problem statement and how it creates a roadmap for
    your project.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Data Collection and Annotation üöÄ NEW: Explore the tools, techniques, and best
    practices for collecting and annotating data to create high-quality inputs for
    your computer vision models.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Preprocessing Annotated Data üöÄ NEW: Learn about preprocessing and augmenting
    image data in computer vision projects using YOLOv8, including normalization,
    dataset augmentation, splitting, and exploratory data analysis (EDA).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Tips for Model Training üöÄ NEW: Explore tips on optimizing batch sizes, using
    mixed precision, applying pre-trained weights, and more to make training your
    computer vision model a breeze.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Insights on Model Evaluation and Fine-Tuning üöÄ NEW: Gain insights into the
    strategies and best practices for evaluating and fine-tuning your computer vision
    models. Learn about the iterative process of refining models to achieve optimal
    results.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A Guide on Model Testing üöÄ NEW: A thorough guide on testing your computer vision
    models in realistic settings. Learn how to verify accuracy, reliability, and performance
    in line with project goals.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Best Practices for Model Deployment üöÄ NEW: Walk through tips and best practices
    for efficiently deploying models in computer vision projects, with a focus on
    optimization, troubleshooting, and security.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Maintaining Your Computer Vision Model üöÄ NEW: Understand the key practices
    for monitoring, maintaining, and documenting computer vision models to guarantee
    accuracy, spot anomalies, and mitigate data drift.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'ROS Quickstart üöÄ NEW: Learn how to integrate YOLO with the Robot Operating
    System (ROS) for real-time object detection in robotics applications, including
    Point Cloud and Depth images.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contribute to Our Guides
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We welcome contributions from the community! If you've mastered a particular
    aspect of Ultralytics YOLO that's not yet covered in our guides, we encourage
    you to share your expertise. Writing a guide is a great way to give back to the
    community and help us make our documentation more comprehensive and user-friendly.
  prefs: []
  type: TYPE_NORMAL
- en: To get started, please read our Contributing Guide for guidelines on how to
    open up a Pull Request (PR) üõ†Ô∏è. We look forward to your contributions!
  prefs: []
  type: TYPE_NORMAL
- en: Let's work together to make the Ultralytics YOLO ecosystem more robust and versatile
    üôè!
  prefs: []
  type: TYPE_NORMAL
- en: FAQ
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: How do I train a custom object detection model using Ultralytics YOLO?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Training a custom object detection model with Ultralytics YOLO is straightforward.
    Start by preparing your dataset in the correct format and installing the Ultralytics
    package. Use the following code to initiate training:'
  prefs: []
  type: TYPE_NORMAL
- en: Example
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: For detailed dataset formatting and additional options, refer to our Tips for
    Model Training guide.
  prefs: []
  type: TYPE_NORMAL
- en: What performance metrics should I use to evaluate my YOLO model?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Evaluating your YOLO model performance is crucial to understanding its efficacy.
    Key metrics include Mean Average Precision (mAP), Intersection over Union (IoU),
    and F1 score. These metrics help assess the accuracy and precision of object detection
    tasks. You can learn more about these metrics and how to improve your model in
    our YOLO Performance Metrics guide.
  prefs: []
  type: TYPE_NORMAL
- en: Why should I use Ultralytics HUB for my computer vision projects?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Ultralytics HUB is a no-code platform that simplifies managing, training, and
    deploying YOLO models. It supports seamless integration, real-time tracking, and
    cloud training, making it ideal for both beginners and professionals. Discover
    more about its features and how it can streamline your workflow with our [Ultralytics
    HUB](https://docs.ultralytics.com/hub/) quickstart guide.
  prefs: []
  type: TYPE_NORMAL
- en: What are the common issues faced during YOLO model training, and how can I resolve
    them?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Common issues during YOLO model training include data formatting errors, model
    architecture mismatches, and insufficient training data. To address these, ensure
    your dataset is correctly formatted, check for compatible model versions, and
    augment your training data. For a comprehensive list of solutions, refer to our
    YOLO Common Issues guide.
  prefs: []
  type: TYPE_NORMAL
- en: How can I deploy my YOLO model for real-time object detection on edge devices?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Deploying YOLO models on edge devices like NVIDIA Jetson and Raspberry Pi requires
    converting the model to a compatible format such as TensorRT or TFLite. Follow
    our step-by-step guides for NVIDIA Jetson and Raspberry Pi deployments to get
    started with real-time object detection on edge hardware. These guides will walk
    you through installation, configuration, and performance optimization.
  prefs: []
  type: TYPE_NORMAL
