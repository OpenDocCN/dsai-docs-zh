- en: pandas.Index.value_counts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.Index.value_counts.html](https://pandas.pydata.org/docs/reference/api/pandas.Index.value_counts.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return a Series containing counts of unique values.
  prefs: []
  type: TYPE_NORMAL
- en: The resulting object will be in descending order so that the first element is
    the most frequently-occurring element. Excludes NA values by default.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**normalize**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: If True then the object returned will contain the relative frequencies of the
    unique values.
  prefs: []
  type: TYPE_NORMAL
- en: '**sort**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Sort by frequencies when True. Preserve the order of the data when False.
  prefs: []
  type: TYPE_NORMAL
- en: '**ascending**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Sort in ascending order.
  prefs: []
  type: TYPE_NORMAL
- en: '**bins**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Rather than count values, group them into half-open bins, a convenience for
    `pd.cut`, only works with numeric data.
  prefs: []
  type: TYPE_NORMAL
- en: '**dropna**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Don’t include counts of NaN.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: Series
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.count`](pandas.Series.count.html#pandas.Series.count "pandas.Series.count")'
  prefs: []
  type: TYPE_NORMAL
- en: Number of non-NA elements in a Series.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.count`](pandas.DataFrame.count.html#pandas.DataFrame.count "pandas.DataFrame.count")'
  prefs: []
  type: TYPE_NORMAL
- en: Number of non-NA elements in a DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.value_counts`](pandas.DataFrame.value_counts.html#pandas.DataFrame.value_counts
    "pandas.DataFrame.value_counts")'
  prefs: []
  type: TYPE_NORMAL
- en: Equivalent method on DataFrames.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: With normalize set to True, returns the relative frequency by dividing all values
    by the sum of values.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**bins**'
  prefs: []
  type: TYPE_NORMAL
- en: Bins can be useful for going from a continuous variable to a categorical variable;
    instead of counting unique apparitions of values, divide the index in the specified
    number of half-open bins.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**dropna**'
  prefs: []
  type: TYPE_NORMAL
- en: With dropna set to False we can also see NaN index values.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
