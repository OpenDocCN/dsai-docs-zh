- en: numpy.isnan
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.isnan
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.isnan.html](https://numpy.org/doc/1.26/reference/generated/numpy.isnan.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.isnan.html](https://numpy.org/doc/1.26/reference/generated/numpy.isnan.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Test element-wise for NaN and return result as a boolean array.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对 NaN 进行逐元素测试，并将结果作为布尔数组返回。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x**array_like'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**array_like'
- en: Input array.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数组。
- en: '**out**ndarray, None, or tuple of ndarray and None, optional'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**ndarray、None 或 ndarray 和 None 的元组，可选'
- en: A location into which the result is stored. If provided, it must have a shape
    that the inputs broadcast to. If not provided or None, a freshly-allocated array
    is returned. A tuple (possible only as a keyword argument) must have length equal
    to the number of outputs.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 存储结果的位置。如果提供，必须具有输入广播到的形状。如果未提供或为 None，则返回新分配的数组。元组（仅作为关键字参数）的长度必须等于输出数量。
- en: '**where**array_like, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**where**array_like，可选'
- en: This condition is broadcast over the input. At locations where the condition
    is True, the *out* array will be set to the ufunc result. Elsewhere, the *out*
    array will retain its original value. Note that if an uninitialized *out* array
    is created via the default `out=None`, locations within it where the condition
    is False will remain uninitialized.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 此条件广播到输入。在条件为 True 的位置，*out* 数组将设置为 ufunc 的结果。在其他地方，*out* 数组将保留其原始值。请注意，如果通过默认
    `out=None` 创建了未初始化的 *out* 数组，则其中条件为 False 的位置将保持未初始化状态。
- en: '****kwargs**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '****kwargs**'
- en: For other keyword-only arguments, see the [ufunc docs](../ufuncs.html#ufuncs-kwargs).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 关于其他仅限关键字参数，请参阅 [ufunc 文档](../ufuncs.html#ufuncs-kwargs)。
- en: 'Returns:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**y**ndarray or bool'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**y** ndarray 或布尔'
- en: True where `x` is NaN, false otherwise. This is a scalar if *x* is a scalar.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 当 `x` 为 NaN 时为 True，否则为 False。如果 *x* 是标量，则这是一个标量。
- en: See also
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`isinf`](numpy.isinf.html#numpy.isinf "numpy.isinf"), [`isneginf`](numpy.isneginf.html#numpy.isneginf
    "numpy.isneginf"), [`isposinf`](numpy.isposinf.html#numpy.isposinf "numpy.isposinf"),
    [`isfinite`](numpy.isfinite.html#numpy.isfinite "numpy.isfinite"), [`isnat`](numpy.isnat.html#numpy.isnat
    "numpy.isnat")'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[`isinf`](numpy.isinf.html#numpy.isinf "numpy.isinf")、[`isneginf`](numpy.isneginf.html#numpy.isneginf
    "numpy.isneginf")、[`isposinf`](numpy.isposinf.html#numpy.isposinf "numpy.isposinf")、[`isfinite`](numpy.isfinite.html#numpy.isfinite
    "numpy.isfinite")、[`isnat`](numpy.isnat.html#numpy.isnat "numpy.isnat")'
- en: Notes
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: NumPy uses the IEEE Standard for Binary Floating-Point for Arithmetic (IEEE
    754). This means that Not a Number is not equivalent to infinity.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 使用 IEEE 标准的二进制浮点运算（IEEE 754）。这意味着 Not a Number 不等同于无穷大。
- en: Examples
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
