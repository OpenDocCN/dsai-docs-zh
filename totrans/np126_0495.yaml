- en: numpy.fft.fft
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.fft.fft.html](https://numpy.org/doc/1.26/reference/generated/numpy.fft.fft.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute the one-dimensional discrete Fourier Transform.
  prefs: []
  type: TYPE_NORMAL
- en: This function computes the one-dimensional *n*-point discrete Fourier Transform
    (DFT) with the efficient Fast Fourier Transform (FFT) algorithm [CT].
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input array, can be complex.
  prefs: []
  type: TYPE_NORMAL
- en: '**n**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Length of the transformed axis of the output. If *n* is smaller than the length
    of the input, the input is cropped. If it is larger, the input is padded with
    zeros. If *n* is not given, the length of the input along the axis specified by
    *axis* is used.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axis over which to compute the FFT. If not given, the last axis is used.
  prefs: []
  type: TYPE_NORMAL
- en: '**norm**{“backward”, “ortho”, “forward”}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.10.0.
  prefs: []
  type: TYPE_NORMAL
- en: Normalization mode (see [`numpy.fft`](../routines.fft.html#module-numpy.fft
    "numpy.fft")). Default is “backward”. Indicates which direction of the forward/backward
    pair of transforms is scaled and with what normalization factor.
  prefs: []
  type: TYPE_NORMAL
- en: 'New in version 1.20.0: The “backward”, “forward” values were added.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**complex ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The truncated or zero-padded input, transformed along the axis indicated by
    *axis*, or the last one if *axis* is not specified.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: IndexError
  prefs: []
  type: TYPE_NORMAL
- en: If *axis* is not a valid axis of *a*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.fft`](../routines.fft.html#module-numpy.fft "numpy.fft")'
  prefs: []
  type: TYPE_NORMAL
- en: for definition of the DFT and conventions used.
  prefs: []
  type: TYPE_NORMAL
- en: '[`ifft`](numpy.fft.ifft.html#numpy.fft.ifft "numpy.fft.ifft")'
  prefs: []
  type: TYPE_NORMAL
- en: The inverse of [`fft`](../routines.fft.html#module-numpy.fft "numpy.fft").
  prefs: []
  type: TYPE_NORMAL
- en: '[`fft2`](numpy.fft.fft2.html#numpy.fft.fft2 "numpy.fft.fft2")'
  prefs: []
  type: TYPE_NORMAL
- en: The two-dimensional FFT.
  prefs: []
  type: TYPE_NORMAL
- en: '[`fftn`](numpy.fft.fftn.html#numpy.fft.fftn "numpy.fft.fftn")'
  prefs: []
  type: TYPE_NORMAL
- en: The *n*-dimensional FFT.
  prefs: []
  type: TYPE_NORMAL
- en: '[`rfftn`](numpy.fft.rfftn.html#numpy.fft.rfftn "numpy.fft.rfftn")'
  prefs: []
  type: TYPE_NORMAL
- en: The *n*-dimensional FFT of real input.
  prefs: []
  type: TYPE_NORMAL
- en: '[`fftfreq`](numpy.fft.fftfreq.html#numpy.fft.fftfreq "numpy.fft.fftfreq")'
  prefs: []
  type: TYPE_NORMAL
- en: Frequency bins for given FFT parameters.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: FFT (Fast Fourier Transform) refers to a way the discrete Fourier Transform
    (DFT) can be calculated efficiently, by using symmetries in the calculated terms.
    The symmetry is highest when *n* is a power of 2, and the transform is therefore
    most efficient for these sizes.
  prefs: []
  type: TYPE_NORMAL
- en: The DFT is defined, with the conventions used in this implementation, in the
    documentation for the [`numpy.fft`](../routines.fft.html#module-numpy.fft "numpy.fft")
    module.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[CT]'
  prefs: []
  type: TYPE_NORMAL
- en: 'Cooley, James W., and John W. Tukey, 1965, “An algorithm for the machine calculation
    of complex Fourier series,” *Math. Comput.* 19: 297-301.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'In this example, real input has an FFT which is Hermitian, i.e., symmetric
    in the real part and anti-symmetric in the imaginary part, as described in the
    [`numpy.fft`](../routines.fft.html#module-numpy.fft "numpy.fft") documentation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/numpy-fft-fft-1.png](../Images/f100216cbaccc48b37eff8685daacb9f.png)'
  prefs: []
  type: TYPE_IMG
