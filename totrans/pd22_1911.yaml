- en: What’s new in 1.4.0 (January 22, 2022)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/whatsnew/v1.4.0.html](https://pandas.pydata.org/docs/whatsnew/v1.4.0.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: These are the changes in pandas 1.4.0\. See [Release notes](index.html#release)
    for a full changelog including other versions of pandas.
  prefs: []
  type: TYPE_NORMAL
- en: '## Enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '### Improved warning messages'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, warning messages may have pointed to lines within the pandas library.
    Running the script `setting_with_copy_warning.py`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'with pandas 1.3 resulted in:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'This made it difficult to determine where the warning was being generated from.
    Now pandas will inspect the call stack, reporting the first line outside of the
    pandas library that gave rise to the warning. The output of the above script is
    now:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]  ### Index can hold arbitrary ExtensionArrays'
  prefs: []
  type: TYPE_NORMAL
- en: Until now, passing a custom `ExtensionArray` to `pd.Index` would cast the array
    to `object` dtype. Now [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") can directly hold arbitrary ExtensionArrays ([GH 43930](https://github.com/pandas-dev/pandas/issues/43930)).
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'In the old behavior, `idx` would be object-dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'With the new behavior, we keep the original dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'One exception to this is `SparseArray`, which will continue to cast to numpy
    dtype until pandas 2.0\. At that point it will retain its dtype like other ExtensionArrays.  ###
    Styler'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") has been further developed in 1.4.0\. The following
    general enhancements have been made:'
  prefs: []
  type: TYPE_NORMAL
- en: Styling and formatting of indexes has been added, with [`Styler.apply_index()`](../reference/api/pandas.io.formats.style.Styler.apply_index.html#pandas.io.formats.style.Styler.apply_index
    "pandas.io.formats.style.Styler.apply_index"), `Styler.applymap_index()` and [`Styler.format_index()`](../reference/api/pandas.io.formats.style.Styler.format_index.html#pandas.io.formats.style.Styler.format_index
    "pandas.io.formats.style.Styler.format_index"). These mirror the signature of
    the methods already used to style and format data values, and work with both HTML,
    LaTeX and Excel format ([GH 41893](https://github.com/pandas-dev/pandas/issues/41893),
    [GH 43101](https://github.com/pandas-dev/pandas/issues/43101), [GH 41993](https://github.com/pandas-dev/pandas/issues/41993),
    [GH 41995](https://github.com/pandas-dev/pandas/issues/41995))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: The new method [`Styler.hide()`](../reference/api/pandas.io.formats.style.Styler.hide.html#pandas.io.formats.style.Styler.hide
    "pandas.io.formats.style.Styler.hide") deprecates `Styler.hide_index()` and `Styler.hide_columns()`
    ([GH 43758](https://github.com/pandas-dev/pandas/issues/43758))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: The keyword arguments `level` and `names` have been added to [`Styler.hide()`](../reference/api/pandas.io.formats.style.Styler.hide.html#pandas.io.formats.style.Styler.hide
    "pandas.io.formats.style.Styler.hide") (and implicitly to the deprecated methods
    `Styler.hide_index()` and `Styler.hide_columns()`) for additional control of visibility
    of MultiIndexes and of Index names ([GH 25475](https://github.com/pandas-dev/pandas/issues/25475),
    [GH 43404](https://github.com/pandas-dev/pandas/issues/43404), [GH 43346](https://github.com/pandas-dev/pandas/issues/43346))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: The [`Styler.export()`](../reference/api/pandas.io.formats.style.Styler.export.html#pandas.io.formats.style.Styler.export
    "pandas.io.formats.style.Styler.export") and [`Styler.use()`](../reference/api/pandas.io.formats.style.Styler.use.html#pandas.io.formats.style.Styler.use
    "pandas.io.formats.style.Styler.use") have been updated to address all of the
    added functionality from v1.2.0 and v1.3.0 ([GH 40675](https://github.com/pandas-dev/pandas/issues/40675))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Global options under the category `pd.options.styler` have been extended to
    configure default `Styler` properties which address formatting, encoding, and
    HTML and LaTeX rendering. Note that formerly `Styler` relied on `display.html.use_mathjax`,
    which has now been replaced by `styler.html.mathjax` ([GH 41395](https://github.com/pandas-dev/pandas/issues/41395))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Validation of certain keyword arguments, e.g. `caption` ([GH 43368](https://github.com/pandas-dev/pandas/issues/43368))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Various bug fixes as recorded below
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Additionally there are specific enhancements to the HTML specific rendering:'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Styler.bar()`](../reference/api/pandas.io.formats.style.Styler.bar.html#pandas.io.formats.style.Styler.bar
    "pandas.io.formats.style.Styler.bar") introduces additional arguments to control
    alignment and display ([GH 26070](https://github.com/pandas-dev/pandas/issues/26070),
    [GH 36419](https://github.com/pandas-dev/pandas/issues/36419)), and it also validates
    the input arguments `width` and `height` ([GH 42511](https://github.com/pandas-dev/pandas/issues/42511))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Styler.to_html()`](../reference/api/pandas.io.formats.style.Styler.to_html.html#pandas.io.formats.style.Styler.to_html
    "pandas.io.formats.style.Styler.to_html") introduces keyword arguments `sparse_index`,
    `sparse_columns`, `bold_headers`, `caption`, `max_rows` and `max_columns` ([GH
    41946](https://github.com/pandas-dev/pandas/issues/41946), [GH 43149](https://github.com/pandas-dev/pandas/issues/43149),
    [GH 42972](https://github.com/pandas-dev/pandas/issues/42972))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Styler.to_html()`](../reference/api/pandas.io.formats.style.Styler.to_html.html#pandas.io.formats.style.Styler.to_html
    "pandas.io.formats.style.Styler.to_html") omits CSSStyle rules for hidden table
    elements as a performance enhancement ([GH 43619](https://github.com/pandas-dev/pandas/issues/43619))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Custom CSS classes can now be directly specified without string replacement
    ([GH 43686](https://github.com/pandas-dev/pandas/issues/43686))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Ability to render hyperlinks automatically via a new `hyperlinks` formatting
    keyword argument ([GH 45058](https://github.com/pandas-dev/pandas/issues/45058))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: 'There are also some LaTeX specific enhancements:'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Styler.to_latex()`](../reference/api/pandas.io.formats.style.Styler.to_latex.html#pandas.io.formats.style.Styler.to_latex
    "pandas.io.formats.style.Styler.to_latex") introduces keyword argument `environment`,
    which also allows a specific “longtable” entry through a separate jinja2 template
    ([GH 41866](https://github.com/pandas-dev/pandas/issues/41866))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Naive sparsification is now possible for LaTeX without the necessity of including
    the multirow package ([GH 43369](https://github.com/pandas-dev/pandas/issues/43369))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '*cline* support has been added for [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") row sparsification through a keyword argument ([GH 45138](https://github.com/pandas-dev/pandas/issues/45138))  ###
    Multi-threaded CSV reading with a new CSV Engine based on pyarrow'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") now accepts `engine="pyarrow"` (requires at least `pyarrow`
    1.0.1) as an argument, allowing for faster csv parsing on multicore machines with
    pyarrow installed. See the [I/O docs](../user_guide/io.html) for more info. ([GH
    23697](https://github.com/pandas-dev/pandas/issues/23697), [GH 43706](https://github.com/pandas-dev/pandas/issues/43706))  ###
    Rank function for rolling and expanding windows'
  prefs: []
  type: TYPE_NORMAL
- en: 'Added `rank` function to `Rolling` and `Expanding`. The new function supports
    the `method`, `ascending`, and `pct` flags of [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank"). The `method` argument supports `min`, `max`, and `average`
    ranking methods. Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]  ### Groupby positional indexing'
  prefs: []
  type: TYPE_NORMAL
- en: It is now possible to specify positional ranges relative to the ends of each
    group.
  prefs: []
  type: TYPE_NORMAL
- en: Negative arguments for [`DataFrameGroupBy.head()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.head.html#pandas.core.groupby.DataFrameGroupBy.head
    "pandas.core.groupby.DataFrameGroupBy.head"), [`SeriesGroupBy.head()`](../reference/api/pandas.core.groupby.SeriesGroupBy.head.html#pandas.core.groupby.SeriesGroupBy.head
    "pandas.core.groupby.SeriesGroupBy.head"), [`DataFrameGroupBy.tail()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.tail.html#pandas.core.groupby.DataFrameGroupBy.tail
    "pandas.core.groupby.DataFrameGroupBy.tail"), and [`SeriesGroupBy.tail()`](../reference/api/pandas.core.groupby.SeriesGroupBy.tail.html#pandas.core.groupby.SeriesGroupBy.tail
    "pandas.core.groupby.SeriesGroupBy.tail") now work correctly and result in ranges
    relative to the end and start of each group, respectively. Previously, negative
    arguments returned empty frames.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[`DataFrameGroupBy.nth()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") and [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") now accept a slice or list of integers
    and slices.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[`DataFrameGroupBy.nth()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") and [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") now accept index notation.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]  ### DataFrame.from_dict and DataFrame.to_dict have new `''tight''`
    option'
  prefs: []
  type: TYPE_NORMAL
- en: A new `'tight'` dictionary format that preserves [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") entries and names is now available with the [`DataFrame.from_dict()`](../reference/api/pandas.DataFrame.from_dict.html#pandas.DataFrame.from_dict
    "pandas.DataFrame.from_dict") and [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") methods and can be used with the standard `json` library
    to produce a tight representation of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects ([GH 4889](https://github.com/pandas-dev/pandas/issues/4889)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]  ### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    will preserve the `attrs` when it is the same for all objects and discard the
    `attrs` when they are different ([GH 41828](https://github.com/pandas-dev/pandas/issues/41828))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrameGroupBy` operations with `as_index=False` now correctly retain `ExtensionDtype`
    dtypes for columns being grouped on ([GH 41373](https://github.com/pandas-dev/pandas/issues/41373))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add support for assigning values to `by` argument in [`DataFrame.plot.hist()`](../reference/api/pandas.DataFrame.plot.hist.html#pandas.DataFrame.plot.hist
    "pandas.DataFrame.plot.hist") and [`DataFrame.plot.box()`](../reference/api/pandas.DataFrame.plot.box.html#pandas.DataFrame.plot.box
    "pandas.DataFrame.plot.box") ([GH 15079](https://github.com/pandas-dev/pandas/issues/15079))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.sample()`](../reference/api/pandas.Series.sample.html#pandas.Series.sample
    "pandas.Series.sample"), [`DataFrame.sample()`](../reference/api/pandas.DataFrame.sample.html#pandas.DataFrame.sample
    "pandas.DataFrame.sample"), [`DataFrameGroupBy.sample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sample.html#pandas.core.groupby.DataFrameGroupBy.sample
    "pandas.core.groupby.DataFrameGroupBy.sample"), and [`SeriesGroupBy.sample()`](../reference/api/pandas.core.groupby.SeriesGroupBy.sample.html#pandas.core.groupby.SeriesGroupBy.sample
    "pandas.core.groupby.SeriesGroupBy.sample") now accept a `np.random.Generator`
    as input to `random_state`. A generator will be more performant, especially with
    `replace=False` ([GH 38100](https://github.com/pandas-dev/pandas/issues/38100))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.ewm()`](../reference/api/pandas.Series.ewm.html#pandas.Series.ewm
    "pandas.Series.ewm") and [`DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm") now support a `method` argument with a `''table''` option
    that performs the windowing operation over an entire [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"). See [Window Overview](../user_guide/window.html#window-overview)
    for performance and functional benefits ([GH 42273](https://github.com/pandas-dev/pandas/issues/42273))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.cummin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin"), [`SeriesGroupBy.cummin()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummin.html#pandas.core.groupby.SeriesGroupBy.cummin
    "pandas.core.groupby.SeriesGroupBy.cummin"), [`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax"), and [`SeriesGroupBy.cummax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummax.html#pandas.core.groupby.SeriesGroupBy.cummax
    "pandas.core.groupby.SeriesGroupBy.cummax") now support the argument `skipna`
    ([GH 34047](https://github.com/pandas-dev/pandas/issues/34047))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") now supports the argument `storage_options` ([GH 39167](https://github.com/pandas-dev/pandas/issues/39167))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") and `StataWriter()` now accept the keyword only argument
    `value_labels` to save labels for non-categorical columns ([GH 38454](https://github.com/pandas-dev/pandas/issues/38454))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Methods that relied on hashmap based algos such as `DataFrameGroupBy.value_counts()`,
    `DataFrameGroupBy.count()` and [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") ignored imaginary component for complex numbers ([GH 17927](https://github.com/pandas-dev/pandas/issues/17927))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add [`Series.str.removeprefix()`](../reference/api/pandas.Series.str.removeprefix.html#pandas.Series.str.removeprefix
    "pandas.Series.str.removeprefix") and [`Series.str.removesuffix()`](../reference/api/pandas.Series.str.removesuffix.html#pandas.Series.str.removesuffix
    "pandas.Series.str.removesuffix") introduced in Python 3.9 to remove pre-/suffixes
    from string-type [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 36944](https://github.com/pandas-dev/pandas/issues/36944))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Attempting to write into a file in missing parent directory with [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv"), [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html"), [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel"), [`DataFrame.to_feather()`](../reference/api/pandas.DataFrame.to_feather.html#pandas.DataFrame.to_feather
    "pandas.DataFrame.to_feather"), [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet"), [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata"), [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json"), [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle"), and [`DataFrame.to_xml()`](../reference/api/pandas.DataFrame.to_xml.html#pandas.DataFrame.to_xml
    "pandas.DataFrame.to_xml") now explicitly mentions missing parent directory, the
    same is true for [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") counterparts ([GH 24306](https://github.com/pandas-dev/pandas/issues/24306))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing with `.loc` and `.iloc` now supports `Ellipsis` ([GH 37750](https://github.com/pandas-dev/pandas/issues/37750))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntegerArray.all()` , `IntegerArray.any()`, `FloatingArray.any()`, and `FloatingArray.all()`
    use Kleene logic ([GH 41967](https://github.com/pandas-dev/pandas/issues/41967))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for nullable boolean and integer types in [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata"), `StataWriter`, `StataWriter117`, and `StataWriterUTF8`
    ([GH 40855](https://github.com/pandas-dev/pandas/issues/40855))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.__pos__()` and `DataFrame.__neg__()` now retain `ExtensionDtype`
    dtypes ([GH 43883](https://github.com/pandas-dev/pandas/issues/43883))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The error raised when an optional dependency can’t be imported now includes
    the original exception, for easier investigation ([GH 43882](https://github.com/pandas-dev/pandas/issues/43882))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`ExponentialMovingWindow.sum()`](../reference/api/pandas.core.window.ewm.ExponentialMovingWindow.sum.html#pandas.core.window.ewm.ExponentialMovingWindow.sum
    "pandas.core.window.ewm.ExponentialMovingWindow.sum") ([GH 13297](https://github.com/pandas-dev/pandas/issues/13297))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.str.split()`](../reference/api/pandas.Series.str.split.html#pandas.Series.str.split
    "pandas.Series.str.split") now supports a `regex` argument that explicitly specifies
    whether the pattern is a regular expression. Default is `None` ([GH 43563](https://github.com/pandas-dev/pandas/issues/43563),
    [GH 32835](https://github.com/pandas-dev/pandas/issues/32835), [GH 25549](https://github.com/pandas-dev/pandas/issues/25549))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") now accepts a single label as `subset` along with array-like
    ([GH 41021](https://github.com/pandas-dev/pandas/issues/41021))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `DataFrameGroupBy.value_counts()` ([GH 43564](https://github.com/pandas-dev/pandas/issues/43564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now accepts a `callable` function in `on_bad_lines` when `engine="python"` for
    custom handling of bad lines ([GH 5686](https://github.com/pandas-dev/pandas/issues/5686))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") argument `if_sheet_exists="overlay"` option added ([GH 40231](https://github.com/pandas-dev/pandas/issues/40231))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") now accepts a `decimal` argument that allow the user to specify
    the decimal point when parsing string columns to numeric ([GH 14403](https://github.com/pandas-dev/pandas/issues/14403))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.mean()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean"), [`SeriesGroupBy.mean()`](../reference/api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean"), [`DataFrameGroupBy.std()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.std.html#pandas.core.groupby.DataFrameGroupBy.std
    "pandas.core.groupby.DataFrameGroupBy.std"), [`SeriesGroupBy.std()`](../reference/api/pandas.core.groupby.SeriesGroupBy.std.html#pandas.core.groupby.SeriesGroupBy.std
    "pandas.core.groupby.SeriesGroupBy.std"), [`DataFrameGroupBy.var()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.var.html#pandas.core.groupby.DataFrameGroupBy.var
    "pandas.core.groupby.DataFrameGroupBy.var"), [`SeriesGroupBy.var()`](../reference/api/pandas.core.groupby.SeriesGroupBy.var.html#pandas.core.groupby.SeriesGroupBy.var
    "pandas.core.groupby.SeriesGroupBy.var"), [`DataFrameGroupBy.sum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum"), and [`SeriesGroupBy.sum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.sum.html#pandas.core.groupby.SeriesGroupBy.sum
    "pandas.core.groupby.SeriesGroupBy.sum") now support [Numba](http://numba.pydata.org/)
    execution with the `engine` keyword ([GH 43731](https://github.com/pandas-dev/pandas/issues/43731),
    [GH 44862](https://github.com/pandas-dev/pandas/issues/44862), [GH 44939](https://github.com/pandas-dev/pandas/issues/44939))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp.isoformat()`](../reference/api/pandas.Timestamp.isoformat.html#pandas.Timestamp.isoformat
    "pandas.Timestamp.isoformat") now handles the `timespec` argument from the base
    `datetime` class ([GH 26131](https://github.com/pandas-dev/pandas/issues/26131))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NaT.to_numpy()` `dtype` argument is now respected, so `np.timedelta64` can
    be returned ([GH 44460](https://github.com/pandas-dev/pandas/issues/44460))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New option `display.max_dir_items` customizes the number of columns added to
    `Dataframe.__dir__()` and suggested for tab completion ([GH 37996](https://github.com/pandas-dev/pandas/issues/37996))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added “Juneteenth National Independence Day” to `USFederalHolidayCalendar` ([GH
    44574](https://github.com/pandas-dev/pandas/issues/44574))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Rolling.var()`](../reference/api/pandas.core.window.rolling.Rolling.var.html#pandas.core.window.rolling.Rolling.var
    "pandas.core.window.rolling.Rolling.var"), [`Expanding.var()`](../reference/api/pandas.core.window.expanding.Expanding.var.html#pandas.core.window.expanding.Expanding.var
    "pandas.core.window.expanding.Expanding.var"), [`Rolling.std()`](../reference/api/pandas.core.window.rolling.Rolling.std.html#pandas.core.window.rolling.Rolling.std
    "pandas.core.window.rolling.Rolling.std"), and [`Expanding.std()`](../reference/api/pandas.core.window.expanding.Expanding.std.html#pandas.core.window.expanding.Expanding.std
    "pandas.core.window.expanding.Expanding.std") now support [Numba](http://numba.pydata.org/)
    execution with the `engine` keyword ([GH 44461](https://github.com/pandas-dev/pandas/issues/44461))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.info()` has been added, for compatibility with [`DataFrame.info()`](../reference/api/pandas.DataFrame.info.html#pandas.DataFrame.info
    "pandas.DataFrame.info") ([GH 5167](https://github.com/pandas-dev/pandas/issues/5167))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented `IntervalArray.min()` and `IntervalArray.max()`, as a result of
    which `min` and `max` now work for [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `IntervalDtype` ([GH 44746](https://github.com/pandas-dev/pandas/issues/44746))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`UInt64Index.map()` now retains `dtype` where possible ([GH 44609](https://github.com/pandas-dev/pandas/issues/44609))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    can now parse unsigned long long integers ([GH 26068](https://github.com/pandas-dev/pandas/issues/26068))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.take()`](../reference/api/pandas.DataFrame.take.html#pandas.DataFrame.take
    "pandas.DataFrame.take") now raises a `TypeError` when passed a scalar for the
    indexer ([GH 42875](https://github.com/pandas-dev/pandas/issues/42875))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`is_list_like()` now identifies duck-arrays as list-like unless `.ndim == 0`
    ([GH 35131](https://github.com/pandas-dev/pandas/issues/35131))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExtensionDtype` and `ExtensionArray` are now (de)serialized when exporting
    a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    with [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") using `orient=''table''` ([GH 20612](https://github.com/pandas-dev/pandas/issues/20612),
    [GH 44705](https://github.com/pandas-dev/pandas/issues/44705))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add support for [Zstandard](http://facebook.github.io/zstd/) compression to
    [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle")/[`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle") and friends ([GH 43925](https://github.com/pandas-dev/pandas/issues/43925))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") now returns an `int` of the number of written rows
    ([GH 23998](https://github.com/pandas-dev/pandas/issues/23998))  ## Notable bug
    fixes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are bug fixes that might have notable behavior changes.
  prefs: []
  type: TYPE_NORMAL
- en: '### Inconsistent date string parsing'
  prefs: []
  type: TYPE_NORMAL
- en: 'The `dayfirst` option of [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") isn’t strict, and this can lead to surprising behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, a warning will be raised if a date string cannot be parsed accordance
    to the given `dayfirst` value when the value is a delimited date string (e.g.
    `31-12-2012`).  ### Ignoring dtypes in concat with empty or all-NA columns'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: This behaviour change has been reverted in pandas 1.4.3.
  prefs: []
  type: TYPE_NORMAL
- en: When using [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    to concatenate two or more [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects, if one of the DataFrames was empty or had all-NA
    values, its dtype was *sometimes* ignored when finding the concatenated dtype.
    These are now consistently *not* ignored ([GH 43507](https://github.com/pandas-dev/pandas/issues/43507)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Previously, the float-dtype in `df2` would be ignored so the result dtype would
    be `datetime64[ns]`. As a result, the `np.nan` would be cast to `NaT`.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Now the float-dtype is respected. Since the common dtype for these DataFrames
    is object, the `np.nan` is retained.
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]  ### Null-values are no longer coerced to NaN-value in value_counts
    and mode'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts") and [`Series.mode()`](../reference/api/pandas.Series.mode.html#pandas.Series.mode
    "pandas.Series.mode") no longer coerce `None`, `NaT` and other null-values to
    a NaN-value for `np.object_`-dtype. This behavior is now consistent with `unique`,
    `isin` and others ([GH 42688](https://github.com/pandas-dev/pandas/issues/42688)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Previously, all null-values were replaced by a NaN-value.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Now null-values are no longer mangled.
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]  ### mangle_dupe_cols in read_csv no longer renames unique columns
    conflicting with target names'
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    no longer renames unique column labels which conflict with the target names of
    duplicated columns. Already existing columns are skipped, i.e. the next available
    index is used for the target column name ([GH 14704](https://github.com/pandas-dev/pandas/issues/14704)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Previously, the second column was called `a.1`, while the third column was also
    renamed to `a.1.1`.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Now the renaming checks if `a.1` already exists when changing the name of the
    second column and jumps this index. The second column is instead renamed to `a.2`.
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]  ### unstack and pivot_table no longer raises ValueError for result
    that would exceed int32 limit'
  prefs: []
  type: TYPE_NORMAL
- en: Previously [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") and [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") would raise a `ValueError` if the operation could
    produce a result with more than `2**31 - 1` elements. This operation now raises
    a [`errors.PerformanceWarning`](../reference/api/pandas.errors.PerformanceWarning.html#pandas.errors.PerformanceWarning
    "pandas.errors.PerformanceWarning") instead ([GH 26314](https://github.com/pandas-dev/pandas/issues/26314)).
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]  ### groupby.apply consistent transform detection'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") are designed to be flexible, allowing
    users to perform aggregations, transformations, filters, and use it with user-defined
    functions that might not fall into any of these categories. As part of this, apply
    will attempt to detect when an operation is a transform, and in such a case, the
    result will have the same index as the input. In order to determine if the operation
    is a transform, pandas compares the input’s index to the result’s and determines
    if it has been mutated. Previously in pandas 1.3, different code paths used different
    definitions of “mutated”: some would use Python’s `is` whereas others would test
    only up to equality.'
  prefs: []
  type: TYPE_NORMAL
- en: This inconsistency has been removed, pandas now tests up to equality.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: In the examples above, the first uses a code path where pandas uses `is` and
    determines that `func` is not a transform whereas the second tests up to equality
    and determines that `func` is a transform. In the first case, the result’s index
    is not the same as the input’s.
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'Now in both cases it is determined that `func` is a transform. In each case,
    the result has the same index as the input.  ## Backwards incompatible API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '### Increased minimum version for Python'
  prefs: []
  type: TYPE_NORMAL
- en: 'pandas 1.4.0 supports Python 3.8 and higher.  ### Increased minimum versions
    for dependencies'
  prefs: []
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated. If installed,
    we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.18.5 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytz | 2020.1 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.8.1 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.3.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.7.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytest (dev) | 6.0 |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| mypy (dev) | 0.930 |  | X |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.8.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.4.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 0.7.4 |  |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 0.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 4.5.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 3.3.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.50.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 3.0.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas-gbq | 0.14.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 1.0.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 0.10.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.6.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 0.4.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.4.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.4.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| tabulate | 0.8.7 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.15.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlrd | 2.0.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 1.2.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlwt | 1.3.0 |  |'
  prefs: []
  type: TYPE_TB
- en: 'See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.  ### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Index.get_indexer_for()`](../reference/api/pandas.Index.get_indexer_for.html#pandas.Index.get_indexer_for
    "pandas.Index.get_indexer_for") no longer accepts keyword arguments (other than
    `target`); in the past these would be silently ignored if the index was not unique
    ([GH 42310](https://github.com/pandas-dev/pandas/issues/42310))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Change in the position of the `min_rows` argument in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") due to change in the docstring ([GH 44304](https://github.com/pandas-dev/pandas/issues/44304))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reduction operations for [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") now raising a `ValueError` when `None` is passed for `skipna`
    ([GH 44178](https://github.com/pandas-dev/pandas/issues/44178))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    and [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html "pandas.read_html")
    no longer raising an error when one of the header rows consists only of `Unnamed:`
    columns ([GH 13054](https://github.com/pandas-dev/pandas/issues/13054))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Changed the `name` attribute of several holidays in `USFederalHolidayCalendar`
    to match [official federal holiday names](https://www.opm.gov/policy-data-oversight/pay-leave/federal-holidays/)
    specifically:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “New Year’s Day” gains the possessive apostrophe
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: “Presidents Day” becomes “Washington’s Birthday”
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: “Martin Luther King Jr. Day” is now “Birthday of Martin Luther King, Jr.”
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: “July 4th” is now “Independence Day”
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: “Thanksgiving” is now “Thanksgiving Day”
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: “Christmas” is now “Christmas Day”
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Added “Juneteenth National Independence Day”  ## Deprecations'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Deprecated Int64Index, UInt64Index & Float64Index'
  prefs: []
  type: TYPE_NORMAL
- en: '`Int64Index`, `UInt64Index` and `Float64Index` have been deprecated in favor
    of the base [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    class and will be removed in Pandas 2.0 ([GH 43028](https://github.com/pandas-dev/pandas/issues/43028)).'
  prefs: []
  type: TYPE_NORMAL
- en: 'For constructing a numeric index, you can use the base [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") class instead specifying the data type (which will also work on
    older pandas releases):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'For checking the data type of an index object, you can replace `isinstance`
    checks with checking the `dtype`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: Currently, in order to maintain backward compatibility, calls to [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") will continue to return `Int64Index`, `UInt64Index` and `Float64Index`
    when given numeric data, but in the future, an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") will be returned.
  prefs: []
  type: TYPE_NORMAL
- en: '*Current behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: '*Future behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]  ### Deprecated DataFrame.append and Series.append'
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrame.append()` and `Series.append()` have been deprecated and will be
    removed in a future version. Use [`pandas.concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") instead ([GH 35407](https://github.com/pandas-dev/pandas/issues/35407)).'
  prefs: []
  type: TYPE_NORMAL
- en: '*Deprecated syntax*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: '*Recommended syntax*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]  ### Other Deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: Deprecated `Index.is_type_compatible()` ([GH 42113](https://github.com/pandas-dev/pandas/issues/42113))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `method` argument in [`Index.get_loc()`](../reference/api/pandas.Index.get_loc.html#pandas.Index.get_loc
    "pandas.Index.get_loc"), use `index.get_indexer([label], method=...)` instead
    ([GH 42269](https://github.com/pandas-dev/pandas/issues/42269))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated treating integer keys in `Series.__setitem__()` as positional when
    the index is a `Float64Index` not containing the key, a [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") with no entries containing the key, or a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with leading `Float64Index` level not containing the key
    ([GH 33469](https://github.com/pandas-dev/pandas/issues/33469))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated treating `numpy.datetime64` objects as UTC times when passed to the
    [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    constructor along with a timezone. In a future version, these will be treated
    as wall-times. To retain the old behavior, use `Timestamp(dt64).tz_localize("UTC").tz_convert(tz)`
    ([GH 24559](https://github.com/pandas-dev/pandas/issues/24559))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated ignoring missing labels when indexing with a sequence of labels on
    a level of a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 42351](https://github.com/pandas-dev/pandas/issues/42351))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating an empty [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") without a `dtype` will now raise a more visible `FutureWarning`
    instead of a `DeprecationWarning` ([GH 30017](https://github.com/pandas-dev/pandas/issues/30017))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `kind` argument in [`Index.get_slice_bound()`](../reference/api/pandas.Index.get_slice_bound.html#pandas.Index.get_slice_bound
    "pandas.Index.get_slice_bound"), [`Index.slice_indexer()`](../reference/api/pandas.Index.slice_indexer.html#pandas.Index.slice_indexer
    "pandas.Index.slice_indexer"), and [`Index.slice_locs()`](../reference/api/pandas.Index.slice_locs.html#pandas.Index.slice_locs
    "pandas.Index.slice_locs"); in a future version passing `kind` will raise ([GH
    42857](https://github.com/pandas-dev/pandas/issues/42857))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated dropping of nuisance columns in `Rolling`, `Expanding`, and `EWM`
    aggregations ([GH 42738](https://github.com/pandas-dev/pandas/issues/42738))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Index.reindex()`](../reference/api/pandas.Index.reindex.html#pandas.Index.reindex
    "pandas.Index.reindex") with a non-unique [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 42568](https://github.com/pandas-dev/pandas/issues/42568))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Styler.render()` in favor of [`Styler.to_html()`](../reference/api/pandas.io.formats.style.Styler.to_html.html#pandas.io.formats.style.Styler.to_html
    "pandas.io.formats.style.Styler.to_html") ([GH 42140](https://github.com/pandas-dev/pandas/issues/42140))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Styler.hide_index()` and `Styler.hide_columns()` in favor of [`Styler.hide()`](../reference/api/pandas.io.formats.style.Styler.hide.html#pandas.io.formats.style.Styler.hide
    "pandas.io.formats.style.Styler.hide") ([GH 43758](https://github.com/pandas-dev/pandas/issues/43758))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing in a string column label into `times` in [`DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm") ([GH 43265](https://github.com/pandas-dev/pandas/issues/43265))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `include_start` and `include_end` arguments in [`DataFrame.between_time()`](../reference/api/pandas.DataFrame.between_time.html#pandas.DataFrame.between_time
    "pandas.DataFrame.between_time"); in a future version passing `include_start`
    or `include_end` will raise ([GH 40245](https://github.com/pandas-dev/pandas/issues/40245))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `squeeze` argument to [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), and [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"). Users should squeeze the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") afterwards with `.squeeze("columns")` instead ([GH 43242](https://github.com/pandas-dev/pandas/issues/43242))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `index` argument to `SparseArray` construction ([GH 23089](https://github.com/pandas-dev/pandas/issues/23089))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `closed` argument in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") and [`bdate_range()`](../reference/api/pandas.bdate_range.html#pandas.bdate_range
    "pandas.bdate_range") in favor of `inclusive` argument; In a future version passing
    `closed` will raise ([GH 40245](https://github.com/pandas-dev/pandas/issues/40245))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Rolling.validate()`, `Expanding.validate()`, and `ExponentialMovingWindow.validate()`
    ([GH 43665](https://github.com/pandas-dev/pandas/issues/43665))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated silent dropping of columns that raised a `TypeError` in [`Series.transform`](../reference/api/pandas.Series.transform.html#pandas.Series.transform
    "pandas.Series.transform") and [`DataFrame.transform`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform") when used with a dictionary ([GH 43740](https://github.com/pandas-dev/pandas/issues/43740))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated silent dropping of columns that raised a `TypeError`, `DataError`,
    and some cases of `ValueError` in [`Series.aggregate()`](../reference/api/pandas.Series.aggregate.html#pandas.Series.aggregate
    "pandas.Series.aggregate"), [`DataFrame.aggregate()`](../reference/api/pandas.DataFrame.aggregate.html#pandas.DataFrame.aggregate
    "pandas.DataFrame.aggregate"), `Series.groupby.aggregate()`, and `DataFrame.groupby.aggregate()`
    when used with a list ([GH 43740](https://github.com/pandas-dev/pandas/issues/43740))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated casting behavior when setting timezone-aware value(s) into a timezone-aware
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    column when the timezones do not match. Previously this cast to object dtype.
    In a future version, the values being inserted will be converted to the series
    or column’s existing timezone ([GH 37605](https://github.com/pandas-dev/pandas/issues/37605))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated casting behavior when passing an item with mismatched-timezone to
    `DatetimeIndex.insert()`, `DatetimeIndex.putmask()`, `DatetimeIndex.where()` `DatetimeIndex.fillna()`,
    [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask"), [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where"), [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna"), [`Series.shift()`](../reference/api/pandas.Series.shift.html#pandas.Series.shift
    "pandas.Series.shift"), [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace"), [`Series.reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex") (and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") column analogues). In the past this has cast to object `dtype`.
    In a future version, these will cast the passed item to the index or series’s
    timezone ([GH 37605](https://github.com/pandas-dev/pandas/issues/37605), [GH 44940](https://github.com/pandas-dev/pandas/issues/44940))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `prefix` keyword argument in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), in a future version the argument will be removed ([GH 43396](https://github.com/pandas-dev/pandas/issues/43396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing non boolean argument to `sort` in [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") ([GH 41518](https://github.com/pandas-dev/pandas/issues/41518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing arguments as positional for [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf") other than `filepath_or_buffer` ([GH 41485](https://github.com/pandas-dev/pandas/issues/41485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing arguments as positional for [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") other than `path_or_buffer` ([GH 45133](https://github.com/pandas-dev/pandas/issues/45133))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing `skipna=None` for `DataFrame.mad()` and `Series.mad()`, pass
    `skipna=True` instead ([GH 44580](https://github.com/pandas-dev/pandas/issues/44580))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with the string “now” with `utc=False`; in a future version
    this will match `Timestamp("now")`, which in turn matches [`Timestamp.now()`](../reference/api/pandas.Timestamp.now.html#pandas.Timestamp.now
    "pandas.Timestamp.now") returning the local time ([GH 18705](https://github.com/pandas-dev/pandas/issues/18705))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `DateOffset.apply()`, use `offset + other` instead ([GH 44522](https://github.com/pandas-dev/pandas/issues/44522))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated parameter `names` in [`Index.copy()`](../reference/api/pandas.Index.copy.html#pandas.Index.copy
    "pandas.Index.copy") ([GH 44916](https://github.com/pandas-dev/pandas/issues/44916))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A deprecation warning is now shown for [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") indicating the arguments signature may change and
    emulate more the arguments to [`Styler.to_latex()`](../reference/api/pandas.io.formats.style.Styler.to_latex.html#pandas.io.formats.style.Styler.to_latex
    "pandas.io.formats.style.Styler.to_latex") in future versions ([GH 44411](https://github.com/pandas-dev/pandas/issues/44411))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") between objects with bool-dtype and numeric-dtypes; in a future
    version these will cast to object dtype instead of coercing bools to numeric values
    ([GH 39817](https://github.com/pandas-dev/pandas/issues/39817))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Categorical.replace()`, use [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") instead ([GH 44929](https://github.com/pandas-dev/pandas/issues/44929))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing `set` or `dict` as indexer for `DataFrame.loc.__setitem__()`,
    `DataFrame.loc.__getitem__()`, `Series.loc.__setitem__()`, `Series.loc.__getitem__()`,
    `DataFrame.__getitem__()`, `Series.__getitem__()` and `Series.__setitem__()` ([GH
    42825](https://github.com/pandas-dev/pandas/issues/42825))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Index.__getitem__()` with a bool key; use `index.values[key]` to
    get the old behavior ([GH 44051](https://github.com/pandas-dev/pandas/issues/44051))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated downcasting column-by-column in [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") with integer-dtypes ([GH 44597](https://github.com/pandas-dev/pandas/issues/44597))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `DatetimeIndex.union_many()`, use `DatetimeIndex.union()` instead
    ([GH 44091](https://github.com/pandas-dev/pandas/issues/44091))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Groupby.pad()` in favor of `Groupby.ffill()` ([GH 33396](https://github.com/pandas-dev/pandas/issues/33396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Groupby.backfill()` in favor of `Groupby.bfill()` ([GH 33396](https://github.com/pandas-dev/pandas/issues/33396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Resample.pad()` in favor of `Resample.ffill()` ([GH 33396](https://github.com/pandas-dev/pandas/issues/33396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Resample.backfill()` in favor of `Resample.bfill()` ([GH 33396](https://github.com/pandas-dev/pandas/issues/33396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `numeric_only=None` in [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank"); in a future version `numeric_only` must be either `True`
    or `False` (the default) ([GH 45036](https://github.com/pandas-dev/pandas/issues/45036))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`Timestamp.utcfromtimestamp()`](../reference/api/pandas.Timestamp.utcfromtimestamp.html#pandas.Timestamp.utcfromtimestamp
    "pandas.Timestamp.utcfromtimestamp"), in the future it will return a timezone-aware
    UTC [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    ([GH 22451](https://github.com/pandas-dev/pandas/issues/22451))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `NaT.freq()` ([GH 45071](https://github.com/pandas-dev/pandas/issues/45071))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") construction when passed float-dtype data containing `NaN`
    and an integer dtype ignoring the dtype argument; in a future version this will
    raise ([GH 40110](https://github.com/pandas-dev/pandas/issues/40110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deprecated the behaviour of [`Series.to_frame()`](../reference/api/pandas.Series.to_frame.html#pandas.Series.to_frame
    "pandas.Series.to_frame") and [`Index.to_frame()`](../reference/api/pandas.Index.to_frame.html#pandas.Index.to_frame
    "pandas.Index.to_frame") to ignore the `name` argument when `name=None`. Currently,
    this means to preserve the existing name, but in the future explicitly passing
    `name=None` will set `None` as the name of the column in the resulting DataFrame
    ([GH 44212](https://github.com/pandas-dev/pandas/issues/44212))  ## Performance
    improvements'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.sample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sample.html#pandas.core.groupby.DataFrameGroupBy.sample
    "pandas.core.groupby.DataFrameGroupBy.sample") and [`SeriesGroupBy.sample()`](../reference/api/pandas.core.groupby.SeriesGroupBy.sample.html#pandas.core.groupby.SeriesGroupBy.sample
    "pandas.core.groupby.SeriesGroupBy.sample"), especially when `weights` argument
    provided ([GH 34483](https://github.com/pandas-dev/pandas/issues/34483))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when converting non-string arrays to string arrays ([GH
    34483](https://github.com/pandas-dev/pandas/issues/34483))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") for user-defined functions ([GH
    41598](https://github.com/pandas-dev/pandas/issues/41598))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in constructing [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects ([GH 42631](https://github.com/pandas-dev/pandas/issues/42631),
    [GH 43142](https://github.com/pandas-dev/pandas/issues/43142), [GH 43147](https://github.com/pandas-dev/pandas/issues/43147),
    [GH 43307](https://github.com/pandas-dev/pandas/issues/43307), [GH 43144](https://github.com/pandas-dev/pandas/issues/43144),
    [GH 44826](https://github.com/pandas-dev/pandas/issues/44826))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.shift()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.shift.html#pandas.core.groupby.DataFrameGroupBy.shift
    "pandas.core.groupby.DataFrameGroupBy.shift") and [`SeriesGroupBy.shift()`](../reference/api/pandas.core.groupby.SeriesGroupBy.shift.html#pandas.core.groupby.SeriesGroupBy.shift
    "pandas.core.groupby.SeriesGroupBy.shift") when `fill_value` argument is provided
    ([GH 26615](https://github.com/pandas-dev/pandas/issues/26615))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr") for `method=pearson` on data without missing values ([GH
    40956](https://github.com/pandas-dev/pandas/issues/40956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in some [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") operations ([GH 42992](https://github.com/pandas-dev/pandas/issues/42992),
    [GH 43578](https://github.com/pandas-dev/pandas/issues/43578))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") ([GH 43059](https://github.com/pandas-dev/pandas/issues/43059),
    [GH 43227](https://github.com/pandas-dev/pandas/issues/43227))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") ([GH 43333](https://github.com/pandas-dev/pandas/issues/43333))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `uint` dtypes ([GH 42606](https://github.com/pandas-dev/pandas/issues/42606))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `infer_datetime_format` set to `True` ([GH 43901](https://github.com/pandas-dev/pandas/issues/43901))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.sparse.to_coo()`](../reference/api/pandas.Series.sparse.to_coo.html#pandas.Series.sparse.to_coo
    "pandas.Series.sparse.to_coo") ([GH 42880](https://github.com/pandas-dev/pandas/issues/42880))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in indexing with a `UInt64Index` ([GH 43862](https://github.com/pandas-dev/pandas/issues/43862))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in indexing with a `Float64Index` ([GH 43705](https://github.com/pandas-dev/pandas/issues/43705))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in indexing with a non-unique [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 43792](https://github.com/pandas-dev/pandas/issues/43792))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in indexing with a listlike indexer on a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 43370](https://github.com/pandas-dev/pandas/issues/43370))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in indexing with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") indexer on another [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 43370](https://github.com/pandas-dev/pandas/issues/43370))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile") ([GH 43469](https://github.com/pandas-dev/pandas/issues/43469),
    [GH 43725](https://github.com/pandas-dev/pandas/issues/43725))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.count()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.count.html#pandas.core.groupby.DataFrameGroupBy.count
    "pandas.core.groupby.DataFrameGroupBy.count") and [`SeriesGroupBy.count()`](../reference/api/pandas.core.groupby.SeriesGroupBy.count.html#pandas.core.groupby.SeriesGroupBy.count
    "pandas.core.groupby.SeriesGroupBy.count") ([GH 43730](https://github.com/pandas-dev/pandas/issues/43730),
    [GH 43694](https://github.com/pandas-dev/pandas/issues/43694))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.any()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any"), [`SeriesGroupBy.any()`](../reference/api/pandas.core.groupby.SeriesGroupBy.any.html#pandas.core.groupby.SeriesGroupBy.any
    "pandas.core.groupby.SeriesGroupBy.any"), [`DataFrameGroupBy.all()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all"), and [`SeriesGroupBy.all()`](../reference/api/pandas.core.groupby.SeriesGroupBy.all.html#pandas.core.groupby.SeriesGroupBy.all
    "pandas.core.groupby.SeriesGroupBy.all") ([GH 43675](https://github.com/pandas-dev/pandas/issues/43675),
    [GH 42841](https://github.com/pandas-dev/pandas/issues/42841))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.std()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.std.html#pandas.core.groupby.DataFrameGroupBy.std
    "pandas.core.groupby.DataFrameGroupBy.std") and [`SeriesGroupBy.std()`](../reference/api/pandas.core.groupby.SeriesGroupBy.std.html#pandas.core.groupby.SeriesGroupBy.std
    "pandas.core.groupby.SeriesGroupBy.std") ([GH 43115](https://github.com/pandas-dev/pandas/issues/43115),
    [GH 43576](https://github.com/pandas-dev/pandas/issues/43576))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.cumsum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum") and [`SeriesGroupBy.cumsum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cumsum.html#pandas.core.groupby.SeriesGroupBy.cumsum
    "pandas.core.groupby.SeriesGroupBy.cumsum") ([GH 43309](https://github.com/pandas-dev/pandas/issues/43309))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SparseArray.min()` and `SparseArray.max()` no longer require converting to
    a dense array ([GH 43526](https://github.com/pandas-dev/pandas/issues/43526))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing into a `SparseArray` with a `slice` with `step=1` no longer requires
    converting to a dense array ([GH 43777](https://github.com/pandas-dev/pandas/issues/43777))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `SparseArray.take()` with `allow_fill=False` ([GH
    43654](https://github.com/pandas-dev/pandas/issues/43654))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Rolling.mean()`](../reference/api/pandas.core.window.rolling.Rolling.mean.html#pandas.core.window.rolling.Rolling.mean
    "pandas.core.window.rolling.Rolling.mean"), [`Expanding.mean()`](../reference/api/pandas.core.window.expanding.Expanding.mean.html#pandas.core.window.expanding.Expanding.mean
    "pandas.core.window.expanding.Expanding.mean"), [`Rolling.sum()`](../reference/api/pandas.core.window.rolling.Rolling.sum.html#pandas.core.window.rolling.Rolling.sum
    "pandas.core.window.rolling.Rolling.sum"), [`Expanding.sum()`](../reference/api/pandas.core.window.expanding.Expanding.sum.html#pandas.core.window.expanding.Expanding.sum
    "pandas.core.window.expanding.Expanding.sum"), [`Rolling.max()`](../reference/api/pandas.core.window.rolling.Rolling.max.html#pandas.core.window.rolling.Rolling.max
    "pandas.core.window.rolling.Rolling.max"), [`Expanding.max()`](../reference/api/pandas.core.window.expanding.Expanding.max.html#pandas.core.window.expanding.Expanding.max
    "pandas.core.window.expanding.Expanding.max"), [`Rolling.min()`](../reference/api/pandas.core.window.rolling.Rolling.min.html#pandas.core.window.rolling.Rolling.min
    "pandas.core.window.rolling.Rolling.min") and [`Expanding.min()`](../reference/api/pandas.core.window.expanding.Expanding.min.html#pandas.core.window.expanding.Expanding.min
    "pandas.core.window.expanding.Expanding.min") with `engine="numba"` ([GH 43612](https://github.com/pandas-dev/pandas/issues/43612),
    [GH 44176](https://github.com/pandas-dev/pandas/issues/44176), [GH 45170](https://github.com/pandas-dev/pandas/issues/45170))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`pandas.read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `memory_map=True` when file encoding is UTF-8 ([GH 43787](https://github.com/pandas-dev/pandas/issues/43787))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `RangeIndex.sort_values()` overriding [`Index.sort_values()`](../reference/api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values") ([GH 43666](https://github.com/pandas-dev/pandas/issues/43666))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `RangeIndex.insert()` ([GH 43988](https://github.com/pandas-dev/pandas/issues/43988))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Index.insert()`](../reference/api/pandas.Index.insert.html#pandas.Index.insert
    "pandas.Index.insert") ([GH 43953](https://github.com/pandas-dev/pandas/issues/43953))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `DatetimeIndex.tolist()` ([GH 43823](https://github.com/pandas-dev/pandas/issues/43823))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `DatetimeIndex.union()` ([GH 42353](https://github.com/pandas-dev/pandas/issues/42353))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.nsmallest()`](../reference/api/pandas.Series.nsmallest.html#pandas.Series.nsmallest
    "pandas.Series.nsmallest") ([GH 43696](https://github.com/pandas-dev/pandas/issues/43696))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.insert()`](../reference/api/pandas.DataFrame.insert.html#pandas.DataFrame.insert
    "pandas.DataFrame.insert") ([GH 42998](https://github.com/pandas-dev/pandas/issues/42998))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") ([GH 43683](https://github.com/pandas-dev/pandas/issues/43683))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") ([GH 43316](https://github.com/pandas-dev/pandas/issues/43316))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.values()`](../reference/api/pandas.DataFrame.values.html#pandas.DataFrame.values
    "pandas.DataFrame.values") ([GH 43160](https://github.com/pandas-dev/pandas/issues/43160))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.select_dtypes()`](../reference/api/pandas.DataFrame.select_dtypes.html#pandas.DataFrame.select_dtypes
    "pandas.DataFrame.select_dtypes") ([GH 42611](https://github.com/pandas-dev/pandas/issues/42611))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") reductions ([GH 43185](https://github.com/pandas-dev/pandas/issues/43185),
    [GH 43243](https://github.com/pandas-dev/pandas/issues/43243), [GH 43311](https://github.com/pandas-dev/pandas/issues/43311),
    [GH 43609](https://github.com/pandas-dev/pandas/issues/43609))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack") and [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") ([GH 43335](https://github.com/pandas-dev/pandas/issues/43335),
    [GH 43352](https://github.com/pandas-dev/pandas/issues/43352), [GH 42704](https://github.com/pandas-dev/pandas/issues/42704),
    [GH 43025](https://github.com/pandas-dev/pandas/issues/43025))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.to_frame()`](../reference/api/pandas.Series.to_frame.html#pandas.Series.to_frame
    "pandas.Series.to_frame") ([GH 43558](https://github.com/pandas-dev/pandas/issues/43558))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `Series.mad()` ([GH 43010](https://github.com/pandas-dev/pandas/issues/43010))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") ([GH 43332](https://github.com/pandas-dev/pandas/issues/43332))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `to_csv()` when index column is a datetime and is
    formatted ([GH 39413](https://github.com/pandas-dev/pandas/issues/39413))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `to_csv()` when [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") contains a lot of unused levels ([GH 37484](https://github.com/pandas-dev/pandas/issues/37484))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when `index_col` was set with a numeric column ([GH 44158](https://github.com/pandas-dev/pandas/issues/44158))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") ([GH 43354](https://github.com/pandas-dev/pandas/issues/43354))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `SparseArray.__getitem__()` ([GH 23122](https://github.com/pandas-dev/pandas/issues/23122))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Performance improvement in constructing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from array-like objects like a `Pytorch` tensor ([GH 44616](https://github.com/pandas-dev/pandas/issues/44616))  ##
    Bug fixes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in setting dtype-incompatible values into a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") (or `Series` or `DataFrame` backed by `Categorical`) raising
    `ValueError` instead of `TypeError` ([GH 41919](https://github.com/pandas-dev/pandas/issues/41919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.searchsorted()` when passing a dtype-incompatible value
    raising `KeyError` instead of `TypeError` ([GH 41919](https://github.com/pandas-dev/pandas/issues/41919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.astype()` casting datetimes and [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") to int for dtype `object` ([GH 44930](https://github.com/pandas-dev/pandas/issues/44930))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") with `CategoricalDtype` when passing a dtype-incompatible
    value raising `ValueError` instead of `TypeError` ([GH 41919](https://github.com/pandas-dev/pandas/issues/41919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.fillna()` when passing a dtype-incompatible value raising
    `ValueError` instead of `TypeError` ([GH 41919](https://github.com/pandas-dev/pandas/issues/41919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.fillna()` with a tuple-like category raising `ValueError`
    instead of `TypeError` when filling with a non-category tuple ([GH 41919](https://github.com/pandas-dev/pandas/issues/41919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor unnecessarily copying non-datetimelike 2D object
    arrays ([GH 39272](https://github.com/pandas-dev/pandas/issues/39272))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `format` and `pandas.NA` was raising `ValueError` ([GH
    42957](https://github.com/pandas-dev/pandas/issues/42957))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") would silently swap `MM/DD/YYYY` and `DD/MM/YYYY` formats
    if the given `dayfirst` option could not be respected - now, a warning is raised
    in the case of delimited date strings (e.g. `31-12-2012`) ([GH 12585](https://github.com/pandas-dev/pandas/issues/12585))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") and [`bdate_range()`](../reference/api/pandas.bdate_range.html#pandas.bdate_range
    "pandas.bdate_range") do not return right bound when `start` = `end` and set is
    closed on one side ([GH 43394](https://github.com/pandas-dev/pandas/issues/43394))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in inplace addition and subtraction of [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") or [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") with `DatetimeArray` or `TimedeltaArray` ([GH 43904](https://github.com/pandas-dev/pandas/issues/43904))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in calling `np.isnan`, `np.isfinite`, or `np.isinf` on a timezone-aware
    [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") incorrectly raising `TypeError` ([GH 43917](https://github.com/pandas-dev/pandas/issues/43917))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") from datetime-like strings with mixed timezones incorrectly partially-inferring
    datetime values ([GH 40111](https://github.com/pandas-dev/pandas/issues/40111))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in addition of a `Tick` object and a `np.timedelta64` object incorrectly
    raising instead of returning [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") ([GH 44474](https://github.com/pandas-dev/pandas/issues/44474))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`np.maximum.reduce` and `np.minimum.reduce` now correctly return [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") and [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") objects when operating on [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), or [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with `datetime64[ns]` or `timedelta64[ns]` dtype ([GH 43923](https://github.com/pandas-dev/pandas/issues/43923))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in adding a `np.timedelta64` object to a `BusinessDay` or `CustomBusinessDay`
    object incorrectly raising ([GH 44532](https://github.com/pandas-dev/pandas/issues/44532))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.insert()`](../reference/api/pandas.Index.insert.html#pandas.Index.insert
    "pandas.Index.insert") for inserting `np.datetime64`, `np.timedelta64` or `tuple`
    into [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    with `dtype='object'` with negative loc adding `None` and replacing existing value
    ([GH 44509](https://github.com/pandas-dev/pandas/issues/44509))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.to_pydatetime()`](../reference/api/pandas.Timestamp.to_pydatetime.html#pandas.Timestamp.to_pydatetime
    "pandas.Timestamp.to_pydatetime") failing to retain the `fold` attribute ([GH
    45087](https://github.com/pandas-dev/pandas/issues/45087))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.mode()`](../reference/api/pandas.Series.mode.html#pandas.Series.mode
    "pandas.Series.mode") with `DatetimeTZDtype` incorrectly returning timezone-naive
    and `PeriodDtype` incorrectly raising ([GH 41927](https://github.com/pandas-dev/pandas/issues/41927))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex") raising an error when using an incompatible fill value
    with a datetime-like dtype (or not raising a deprecation warning for using a `datetime.date`
    as fill value) ([GH 42921](https://github.com/pandas-dev/pandas/issues/42921))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DateOffset` addition with [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") where `offset.nanoseconds` would not be included in the result
    ([GH 43968](https://github.com/pandas-dev/pandas/issues/43968), [GH 36589](https://github.com/pandas-dev/pandas/issues/36589))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.fromtimestamp()`](../reference/api/pandas.Timestamp.fromtimestamp.html#pandas.Timestamp.fromtimestamp
    "pandas.Timestamp.fromtimestamp") not supporting the `tz` argument ([GH 45083](https://github.com/pandas-dev/pandas/issues/45083))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") construction from dict of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with mismatched index dtypes sometimes raising depending on the
    ordering of the passed dict ([GH 44091](https://github.com/pandas-dev/pandas/issues/44091))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") hashing during some DST transitions caused a segmentation
    fault ([GH 33931](https://github.com/pandas-dev/pandas/issues/33931) and [GH 40817](https://github.com/pandas-dev/pandas/issues/40817))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in division of all-`NaT` `TimeDeltaIndex`, [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") column with object-dtype array like of numbers failing to
    infer the result as timedelta64-dtype ([GH 39750](https://github.com/pandas-dev/pandas/issues/39750))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in floor division of `timedelta64[ns]` data with a scalar returning garbage
    values ([GH 44466](https://github.com/pandas-dev/pandas/issues/44466))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") now properly taking into account any nanoseconds contribution
    of any kwarg ([GH 43764](https://github.com/pandas-dev/pandas/issues/43764), [GH
    45227](https://github.com/pandas-dev/pandas/issues/45227))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Time Zones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `infer_datetime_format=True` failing to parse zero
    UTC offset (`Z`) correctly ([GH 41047](https://github.com/pandas-dev/pandas/issues/41047))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.dt.tz_convert()`](../reference/api/pandas.Series.dt.tz_convert.html#pandas.Series.dt.tz_convert
    "pandas.Series.dt.tz_convert") resetting index in a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 43080](https://github.com/pandas-dev/pandas/issues/43080))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timestamp` and `DatetimeIndex` incorrectly raising a `TypeError` when
    subtracting two timezone-aware objects with mismatched timezones ([GH 31793](https://github.com/pandas-dev/pandas/issues/31793))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in floor-dividing a list or tuple of integers by a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") incorrectly raising ([GH 44674](https://github.com/pandas-dev/pandas/issues/44674))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank") raising `ValueError` with `object` columns and `method="first"`
    ([GH 41931](https://github.com/pandas-dev/pandas/issues/41931))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank") treating missing values and extreme values as equal (for
    example `np.nan` and `np.inf`), causing incorrect results when `na_option="bottom"`
    or `na_option="top` used ([GH 41931](https://github.com/pandas-dev/pandas/issues/41931))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `numexpr` engine still being used when the option `compute.use_numexpr`
    is set to `False` ([GH 32556](https://github.com/pandas-dev/pandas/issues/32556))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") arithmetic ops with a subclass whose `_constructor()` attribute
    is a callable other than the subclass itself ([GH 43201](https://github.com/pandas-dev/pandas/issues/43201))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in arithmetic operations involving [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") where the result would have the incorrect `name` ([GH 43962](https://github.com/pandas-dev/pandas/issues/43962))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in arithmetic operations involving [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") where the result could have the incorrect `name` when the operands
    having matching NA or matching tuple names ([GH 44459](https://github.com/pandas-dev/pandas/issues/44459))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in division with `IntegerDtype` or `BooleanDtype` array and NA scalar incorrectly
    raising ([GH 44685](https://github.com/pandas-dev/pandas/issues/44685))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in multiplying a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `FloatingDtype` with a timedelta-like scalar incorrectly
    raising ([GH 44772](https://github.com/pandas-dev/pandas/issues/44772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `UInt64Index` constructor when passing a list containing both positive
    integers small enough to cast to int64 and integers too large to hold in int64
    ([GH 42201](https://github.com/pandas-dev/pandas/issues/42201))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor returning 0 for missing values with dtype `int64` and `False` for
    dtype `bool` ([GH 43017](https://github.com/pandas-dev/pandas/issues/43017), [GH
    43018](https://github.com/pandas-dev/pandas/issues/43018))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from a `PandasArray` containing [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") objects behaving differently than an equivalent `np.ndarray`
    ([GH 43986](https://github.com/pandas-dev/pandas/issues/43986))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntegerDtype` not allowing coercion from string dtype ([GH 25472](https://github.com/pandas-dev/pandas/issues/25472))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `arg:xr.DataArray` and `unit="ns"` specified raises
    `TypeError` ([GH 44053](https://github.com/pandas-dev/pandas/issues/44053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.convert_dtypes()`](../reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes
    "pandas.DataFrame.convert_dtypes") not returning the correct type when a subclass
    does not overload `_constructor_sliced()` ([GH 43201](https://github.com/pandas-dev/pandas/issues/43201))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") not propagating `attrs` from the original [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 44414](https://github.com/pandas-dev/pandas/issues/44414))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.convert_dtypes()`](../reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes
    "pandas.DataFrame.convert_dtypes") result losing `columns.names` ([GH 41435](https://github.com/pandas-dev/pandas/issues/41435))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a `IntegerArray` from pyarrow data failing to validate dtypes
    ([GH 44891](https://github.com/pandas-dev/pandas/issues/44891))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") not allowing converting from a `PeriodDtype` to `datetime64`
    dtype, inconsistent with the [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") behavior ([GH 45038](https://github.com/pandas-dev/pandas/issues/45038))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in checking for `string[pyarrow]` dtype incorrectly raising an `ImportError`
    when pyarrow is not installed ([GH 44276](https://github.com/pandas-dev/pandas/issues/44276))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") with `IntervalDtype` incorrectly raising when the `where`
    call should not replace anything ([GH 44181](https://github.com/pandas-dev/pandas/issues/44181))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.rename()`](../reference/api/pandas.Series.rename.html#pandas.Series.rename
    "pandas.Series.rename") with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and `level` is provided ([GH 43659](https://github.com/pandas-dev/pandas/issues/43659))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.truncate()`](../reference/api/pandas.DataFrame.truncate.html#pandas.DataFrame.truncate
    "pandas.DataFrame.truncate") and [`Series.truncate()`](../reference/api/pandas.Series.truncate.html#pandas.Series.truncate
    "pandas.Series.truncate") when the object’s [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") has a length greater than one but only one unique value ([GH 42365](https://github.com/pandas-dev/pandas/issues/42365))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") and [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") when indexing with a tuple in which one of the levels is
    also a tuple ([GH 27591](https://github.com/pandas-dev/pandas/issues/27591))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") whose first level contains only `np.nan` values ([GH 42055](https://github.com/pandas-dev/pandas/issues/42055))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") when passing a string, the return type depended on whether
    the index was monotonic ([GH 24892](https://github.com/pandas-dev/pandas/issues/24892))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") failing to drop scalar levels when the indexer is a tuple
    containing a datetime-like string ([GH 42476](https://github.com/pandas-dev/pandas/issues/42476))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") and [`Series.sort_values()`](../reference/api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values") when passing an ascending value, failed to raise
    or incorrectly raising `ValueError` ([GH 41634](https://github.com/pandas-dev/pandas/issues/41634))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in updating values of [`pandas.Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") using boolean index, created by using [`pandas.DataFrame.pop()`](../reference/api/pandas.DataFrame.pop.html#pandas.DataFrame.pop
    "pandas.DataFrame.pop") ([GH 42530](https://github.com/pandas-dev/pandas/issues/42530))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.get_indexer_non_unique()`](../reference/api/pandas.Index.get_indexer_non_unique.html#pandas.Index.get_indexer_non_unique
    "pandas.Index.get_indexer_non_unique") when index contains multiple `np.nan` ([GH
    35392](https://github.com/pandas-dev/pandas/issues/35392))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") did not handle the degree sign in a backticked column
    name, such as `Temp(°C)`, used in an expression to query a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 42826](https://github.com/pandas-dev/pandas/issues/42826))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") where the error message did not show missing labels with
    commas when raising `KeyError` ([GH 42881](https://github.com/pandas-dev/pandas/issues/42881))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") where method calls in query strings led to errors when
    the `numexpr` package was installed ([GH 22435](https://github.com/pandas-dev/pandas/issues/22435))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.nlargest()`](../reference/api/pandas.DataFrame.nlargest.html#pandas.DataFrame.nlargest
    "pandas.DataFrame.nlargest") and [`Series.nlargest()`](../reference/api/pandas.Series.nlargest.html#pandas.Series.nlargest
    "pandas.Series.nlargest") where sorted result did not count indexes containing
    `np.nan` ([GH 28984](https://github.com/pandas-dev/pandas/issues/28984))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on a non-unique object-dtype [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with an NA scalar (e.g. `np.nan`) ([GH 43711](https://github.com/pandas-dev/pandas/issues/43711))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` incorrectly writing into an existing column’s
    array rather than setting a new array when the new dtype and the old dtype match
    ([GH 43406](https://github.com/pandas-dev/pandas/issues/43406))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting floating-dtype values into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with integer dtype failing to set inplace when those values can
    be losslessly converted to integers ([GH 44316](https://github.com/pandas-dev/pandas/issues/44316))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` with object dtype when setting an array with matching
    size and dtype=’datetime64[ns]’ or dtype=’timedelta64[ns]’ incorrectly converting
    the datetime/timedeltas to integers ([GH 43868](https://github.com/pandas-dev/pandas/issues/43868))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index") where `ignore_index=True` was not being respected
    when the index was already sorted ([GH 43591](https://github.com/pandas-dev/pandas/issues/43591))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.get_indexer_non_unique()`](../reference/api/pandas.Index.get_indexer_non_unique.html#pandas.Index.get_indexer_non_unique
    "pandas.Index.get_indexer_non_unique") when index contains multiple `np.datetime64("NaT")`
    and `np.timedelta64("NaT")` ([GH 43869](https://github.com/pandas-dev/pandas/issues/43869))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting a scalar [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") value into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `IntervalDtype` when the scalar’s sides are floats and the
    values’ sides are integers ([GH 44201](https://github.com/pandas-dev/pandas/issues/44201))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when setting string-backed [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") values that can be parsed to datetimes into a `DatetimeArray`
    or [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    column backed by `DatetimeArray` failing to parse these strings ([GH 44236](https://github.com/pandas-dev/pandas/issues/44236))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` with an integer dtype other than `int64` setting
    with a `range` object unnecessarily upcasting to `int64` ([GH 44261](https://github.com/pandas-dev/pandas/issues/44261))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` with a boolean mask indexer setting a listlike
    value of length 1 incorrectly broadcasting that value ([GH 44265](https://github.com/pandas-dev/pandas/issues/44265))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index") not ignoring `name` argument when `drop` and `inplace`
    are set to `True` ([GH 44575](https://github.com/pandas-dev/pandas/issues/44575))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc.__setitem__()` and `DataFrame.iloc.__setitem__()` with
    mixed dtypes sometimes failing to operate in-place ([GH 44345](https://github.com/pandas-dev/pandas/issues/44345))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc.__getitem__()` incorrectly raising `KeyError` when selecting
    a single column with a boolean key ([GH 44322](https://github.com/pandas-dev/pandas/issues/44322)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") with a single `ExtensionDtype` column and setting 2D
    values e.g. `df.iloc[:] = df.values` incorrectly raising ([GH 44514](https://github.com/pandas-dev/pandas/issues/44514))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting values with [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") with a single `ExtensionDtype` column and a tuple of
    arrays as the indexer ([GH 44703](https://github.com/pandas-dev/pandas/issues/44703))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on columns with `loc` or `iloc` using a slice with a negative
    step with `ExtensionDtype` columns incorrectly raising ([GH 44551](https://github.com/pandas-dev/pandas/issues/44551))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc.__setitem__()` changing dtype when indexer was completely
    `False` ([GH 37550](https://github.com/pandas-dev/pandas/issues/37550))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.get_indexer_non_unique()` returning boolean mask instead
    of array of integers for a non unique and non monotonic index ([GH 44084](https://github.com/pandas-dev/pandas/issues/44084))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.get_indexer_non_unique()` not handling targets of `dtype`
    ‘object’ with NaNs correctly ([GH 44482](https://github.com/pandas-dev/pandas/issues/44482))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression where a single column `np.matrix` was no longer coerced to
    a 1d `np.ndarray` when added to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 42376](https://github.com/pandas-dev/pandas/issues/42376))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__getitem__()` with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") of integers treating lists of integers as positional
    indexers, inconsistent with the behavior with a single scalar integer ([GH 15470](https://github.com/pandas-dev/pandas/issues/15470),
    [GH 14865](https://github.com/pandas-dev/pandas/issues/14865))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` when setting floats or integers into integer-dtype
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    failing to upcast when necessary to retain precision ([GH 45121](https://github.com/pandas-dev/pandas/issues/45121))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.iloc.__setitem__()` ignores axis argument ([GH 45032](https://github.com/pandas-dev/pandas/issues/45032))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") with `limit` and no `method` ignores `axis='columns'`
    or `axis = 1` ([GH 40989](https://github.com/pandas-dev/pandas/issues/40989),
    [GH 17399](https://github.com/pandas-dev/pandas/issues/17399))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") not replacing missing values when using a dict-like
    `value` and duplicate column names ([GH 43476](https://github.com/pandas-dev/pandas/issues/43476))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a dictionary `np.datetime64` as a value and `dtype='timedelta64[ns]'`,
    or vice-versa, incorrectly casting instead of raising ([GH 44428](https://github.com/pandas-dev/pandas/issues/44428))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") with `inplace=True` not writing to the underlying
    array(s) in-place ([GH 44749](https://github.com/pandas-dev/pandas/issues/44749))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.fillna()`](../reference/api/pandas.Index.fillna.html#pandas.Index.fillna
    "pandas.Index.fillna") incorrectly returning an unfilled [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") when NA values are present and `downcast` argument is specified.
    This now raises `NotImplementedError` instead; do not pass `downcast` argument
    ([GH 44873](https://github.com/pandas-dev/pandas/issues/44873))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") changing [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") even if no entries were dropped ([GH 41965](https://github.com/pandas-dev/pandas/issues/41965))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") with an object-dtype incorrectly ignoring `downcast="infer"`
    ([GH 44241](https://github.com/pandas-dev/pandas/issues/44241))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") where the first level is a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and a string key is passed ([GH 42465](https://github.com/pandas-dev/pandas/issues/42465))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.reindex()` when passing a `level` that corresponds to an
    `ExtensionDtype` level ([GH 42043](https://github.com/pandas-dev/pandas/issues/42043))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") raising `TypeError` instead of `KeyError` on nested
    tuple ([GH 42440](https://github.com/pandas-dev/pandas/issues/42440))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.union()` setting wrong `sortorder` causing errors in subsequent
    indexing operations with slices ([GH 44752](https://github.com/pandas-dev/pandas/issues/44752))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.putmask()` where the other value was also a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 43212](https://github.com/pandas-dev/pandas/issues/43212))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.dtypes()`](../reference/api/pandas.MultiIndex.dtypes.html#pandas.MultiIndex.dtypes
    "pandas.MultiIndex.dtypes") duplicate level names returned only one dtype per
    name ([GH 45174](https://github.com/pandas-dev/pandas/issues/45174))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I/O
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") attempting to read chart sheets from .xlsx files ([GH 41448](https://github.com/pandas-dev/pandas/issues/41448))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") where `errors=ignore` could fail to ignore missing values
    of `meta` when `record_path` has a length greater than one ([GH 41876](https://github.com/pandas-dev/pandas/issues/41876))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with multi-header input and arguments referencing column names
    as tuples ([GH 42446](https://github.com/pandas-dev/pandas/issues/42446))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf"), where difference in lengths of `colspecs` and `names` was
    not raising `ValueError` ([GH 40830](https://github.com/pandas-dev/pandas/issues/40830))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.to_json()`](../reference/api/pandas.Series.to_json.html#pandas.Series.to_json
    "pandas.Series.to_json") and [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") where some attributes were skipped when serializing
    plain Python objects to JSON ([GH 42768](https://github.com/pandas-dev/pandas/issues/42768),
    [GH 33043](https://github.com/pandas-dev/pandas/issues/33043))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Column headers are dropped when constructing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from a sqlalchemy’s `Row` object ([GH 40682](https://github.com/pandas-dev/pandas/issues/40682))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in unpickling an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with object dtype incorrectly inferring numeric dtypes ([GH 43188](https://github.com/pandas-dev/pandas/issues/43188))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where reading multi-header input with unequal lengths incorrectly
    raised `IndexError` ([GH 43102](https://github.com/pandas-dev/pandas/issues/43102))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") raising `ParserError` when reading file in chunks and some
    chunk blocks have fewer columns than header for `engine="c"` ([GH 21211](https://github.com/pandas-dev/pandas/issues/21211))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), changed exception class when expecting a file path name or
    file-like object from `OSError` to `TypeError` ([GH 43366](https://github.com/pandas-dev/pandas/issues/43366))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf") ignoring all `skiprows` except first when `nrows` is specified
    for `engine='python'` ([GH 44021](https://github.com/pandas-dev/pandas/issues/44021),
    [GH 10261](https://github.com/pandas-dev/pandas/issues/10261))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") keeping the original column in object format when `keep_date_col=True`
    is set ([GH 13378](https://github.com/pandas-dev/pandas/issues/13378))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") not handling non-numpy dtypes correctly (especially `category`)
    ([GH 21892](https://github.com/pandas-dev/pandas/issues/21892), [GH 33205](https://github.com/pandas-dev/pandas/issues/33205))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") where multi-character `sep` parameter is incorrectly
    prefixed to every key ([GH 43831](https://github.com/pandas-dev/pandas/issues/43831))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") where reading data with missing multi-level metadata
    would not respect `errors="ignore"` ([GH 44312](https://github.com/pandas-dev/pandas/issues/44312))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") used second row to guess implicit index if `header` was set
    to `None` for `engine="python"` ([GH 22144](https://github.com/pandas-dev/pandas/issues/22144))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not recognizing bad lines when `names` were given for `engine="c"`
    ([GH 22144](https://github.com/pandas-dev/pandas/issues/22144))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `float_precision="round_trip"` which did not skip initial/trailing
    whitespace ([GH 43713](https://github.com/pandas-dev/pandas/issues/43713))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug when Python is built without the lzma module: a warning was raised at the
    pandas import time, even if the lzma capability isn’t used ([GH 43495](https://github.com/pandas-dev/pandas/issues/43495))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not applying dtype for `index_col` ([GH 9435](https://github.com/pandas-dev/pandas/issues/9435))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in dumping/loading a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `yaml.dump(frame)` ([GH 42748](https://github.com/pandas-dev/pandas/issues/42748))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") raising `ValueError` when `names` was longer than `header`
    but equal to data rows for `engine="python"` ([GH 38453](https://github.com/pandas-dev/pandas/issues/38453))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter"), where `engine_kwargs` were not passed through to all engines
    ([GH 43442](https://github.com/pandas-dev/pandas/issues/43442))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") raising `ValueError` when `parse_dates` was used with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") columns ([GH 8991](https://github.com/pandas-dev/pandas/issues/8991))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not raising an `ValueError` when `\n` was specified as `delimiter`
    or `sep` which conflicts with `lineterminator` ([GH 43528](https://github.com/pandas-dev/pandas/issues/43528))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `to_csv()` converting datetimes in categorical [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") to integers ([GH 40754](https://github.com/pandas-dev/pandas/issues/40754))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") converting columns to numeric after date parsing failed ([GH
    11019](https://github.com/pandas-dev/pandas/issues/11019))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not replacing `NaN` values with `np.nan` before attempting
    date conversion ([GH 26203](https://github.com/pandas-dev/pandas/issues/26203))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") raising `AttributeError` when attempting to read a .csv file
    and infer index column dtype from an nullable integer type ([GH 44079](https://github.com/pandas-dev/pandas/issues/44079))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `to_csv()` always coercing datetime columns with different formats to
    the same format ([GH 21734](https://github.com/pandas-dev/pandas/issues/21734))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") and [`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv") with `compression` set to `''zip''` no longer create a
    zip file containing a file ending with “.zip”. Instead, they try to infer the
    inner file name more smartly ([GH 39465](https://github.com/pandas-dev/pandas/issues/39465))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where reading a mixed column of booleans and missing values
    to a float type results in the missing values becoming 1.0 rather than NaN ([GH
    42808](https://github.com/pandas-dev/pandas/issues/42808), [GH 34120](https://github.com/pandas-dev/pandas/issues/34120))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `to_xml()` raising error for `pd.NA` with extension array dtype ([GH
    43903](https://github.com/pandas-dev/pandas/issues/43903))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when passing simultaneously a parser in `date_parser` and `parse_dates=False`,
    the parsing was still called ([GH 44366](https://github.com/pandas-dev/pandas/issues/44366))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not setting name of [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") columns correctly when `index_col` is not the first column
    ([GH 38549](https://github.com/pandas-dev/pandas/issues/38549))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") silently ignoring errors when failing to create a memory-mapped
    file ([GH 44766](https://github.com/pandas-dev/pandas/issues/44766))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when passing a `tempfile.SpooledTemporaryFile` opened in binary
    mode ([GH 44748](https://github.com/pandas-dev/pandas/issues/44748))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") raising `ValueError` when attempting to parse json strings
    containing “://” ([GH 36271](https://github.com/pandas-dev/pandas/issues/36271))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when `engine="c"` and `encoding_errors=None` which caused a
    segfault ([GH 45180](https://github.com/pandas-dev/pandas/issues/45180))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") an invalid value of `usecols` leading to an unclosed file handle
    ([GH 45384](https://github.com/pandas-dev/pandas/issues/45384))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") fix memory leak ([GH 43877](https://github.com/pandas-dev/pandas/issues/43877))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Period
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in adding a [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") object to a `np.timedelta64` object incorrectly raising `TypeError`
    ([GH 44182](https://github.com/pandas-dev/pandas/issues/44182))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`PeriodIndex.to_timestamp()`](../reference/api/pandas.PeriodIndex.to_timestamp.html#pandas.PeriodIndex.to_timestamp
    "pandas.PeriodIndex.to_timestamp") when the index has `freq="B"` inferring `freq="D"`
    for its result instead of `freq="B"` ([GH 44105](https://github.com/pandas-dev/pandas/issues/44105))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    constructor incorrectly allowing `np.timedelta64("NaT")` ([GH 44507](https://github.com/pandas-dev/pandas/issues/44507))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`PeriodIndex.to_timestamp()`](../reference/api/pandas.PeriodIndex.to_timestamp.html#pandas.PeriodIndex.to_timestamp
    "pandas.PeriodIndex.to_timestamp") giving incorrect values for indexes with non-contiguous
    data ([GH 44100](https://github.com/pandas-dev/pandas/issues/44100))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") with `PeriodDtype` incorrectly raising when the `where`
    call should not replace anything ([GH 45135](https://github.com/pandas-dev/pandas/issues/45135))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When given non-numeric data, [`DataFrame.boxplot()`](../reference/api/pandas.DataFrame.boxplot.html#pandas.DataFrame.boxplot
    "pandas.DataFrame.boxplot") now raises a `ValueError` rather than a cryptic `KeyError`
    or `ZeroDivisionError`, in line with other plotting functions like [`DataFrame.hist()`](../reference/api/pandas.DataFrame.hist.html#pandas.DataFrame.hist
    "pandas.DataFrame.hist") ([GH 43480](https://github.com/pandas-dev/pandas/issues/43480))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `SeriesGroupBy.apply()` where passing an unrecognized string argument
    failed to raise `TypeError` when the underlying `Series` is empty ([GH 42021](https://github.com/pandas-dev/pandas/issues/42021))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.rolling.apply()`, `DataFrame.rolling.apply()`, `Series.expanding.apply()`
    and `DataFrame.expanding.apply()` with `engine="numba"` where `*args` were being
    cached with the user passed function ([GH 42287](https://github.com/pandas-dev/pandas/issues/42287))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.max()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.max.html#pandas.core.groupby.DataFrameGroupBy.max
    "pandas.core.groupby.DataFrameGroupBy.max"), [`SeriesGroupBy.max()`](../reference/api/pandas.core.groupby.SeriesGroupBy.max.html#pandas.core.groupby.SeriesGroupBy.max
    "pandas.core.groupby.SeriesGroupBy.max"), [`DataFrameGroupBy.min()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.min.html#pandas.core.groupby.DataFrameGroupBy.min
    "pandas.core.groupby.DataFrameGroupBy.min"), and [`SeriesGroupBy.min()`](../reference/api/pandas.core.groupby.SeriesGroupBy.min.html#pandas.core.groupby.SeriesGroupBy.min
    "pandas.core.groupby.SeriesGroupBy.min") with nullable integer dtypes losing precision
    ([GH 41743](https://github.com/pandas-dev/pandas/issues/41743))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.groupby.rolling.var()` would calculate the rolling variance
    only on the first group ([GH 42442](https://github.com/pandas-dev/pandas/issues/42442))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.shift()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.shift.html#pandas.core.groupby.DataFrameGroupBy.shift
    "pandas.core.groupby.DataFrameGroupBy.shift") and [`SeriesGroupBy.shift()`](../reference/api/pandas.core.groupby.SeriesGroupBy.shift.html#pandas.core.groupby.SeriesGroupBy.shift
    "pandas.core.groupby.SeriesGroupBy.shift") that would return the grouping columns
    if `fill_value` was not `None` ([GH 41556](https://github.com/pandas-dev/pandas/issues/41556))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SeriesGroupBy.nlargest()` and `SeriesGroupBy.nsmallest()` would have
    an inconsistent index when the input [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") was sorted and `n` was greater than or equal to all group sizes
    ([GH 15272](https://github.com/pandas-dev/pandas/issues/15272), [GH 16345](https://github.com/pandas-dev/pandas/issues/16345),
    [GH 29129](https://github.com/pandas-dev/pandas/issues/29129))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm"), where non-float64 dtypes were silently failing ([GH 42452](https://github.com/pandas-dev/pandas/issues/42452))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") operation along rows (`axis=1`) incorrectly omits
    columns containing `float16` and `float32` ([GH 41779](https://github.com/pandas-dev/pandas/issues/41779))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Resampler.aggregate()` did not allow the use of Named Aggregation ([GH
    32803](https://github.com/pandas-dev/pandas/issues/32803))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") when the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") `dtype` was `Int64` ([GH 43016](https://github.com/pandas-dev/pandas/issues/43016))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.rolling.corr()` when the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") columns was a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 21157](https://github.com/pandas-dev/pandas/issues/21157))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.groupby.rolling()` when specifying `on` and calling `__getitem__`
    would subsequently return incorrect results ([GH 43355](https://github.com/pandas-dev/pandas/issues/43355))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") with time-based [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper") objects incorrectly raising `ValueError` in corner cases where
    the grouping vector contains a `NaT` ([GH 43500](https://github.com/pandas-dev/pandas/issues/43500),
    [GH 43515](https://github.com/pandas-dev/pandas/issues/43515))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.mean()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean") and [`SeriesGroupBy.mean()`](../reference/api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean") failing with `complex` dtype ([GH 43701](https://github.com/pandas-dev/pandas/issues/43701))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") and [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") not calculating window bounds correctly for the first
    row when `center=True` and index is decreasing ([GH 43927](https://github.com/pandas-dev/pandas/issues/43927))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") and [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") for centered datetimelike windows with uneven nanosecond
    ([GH 43997](https://github.com/pandas-dev/pandas/issues/43997))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.mean()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean") and [`SeriesGroupBy.mean()`](../reference/api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean") raising `KeyError` when column was selected
    at least twice ([GH 44924](https://github.com/pandas-dev/pandas/issues/44924))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.nth()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") and [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") failing on `axis=1` ([GH 43926](https://github.com/pandas-dev/pandas/issues/43926))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") and [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") not respecting right bound on centered datetime-like
    windows, if the index contain duplicates ([GH 3944](https://github.com/pandas-dev/pandas/issues/3944))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") and [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") when using a [`pandas.api.indexers.BaseIndexer`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer") subclass that returned unequal start and end
    arrays would segfault instead of raising a `ValueError` ([GH 44470](https://github.com/pandas-dev/pandas/issues/44470))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Groupby.nunique()` not respecting `observed=True` for `categorical`
    grouping columns ([GH 45128](https://github.com/pandas-dev/pandas/issues/45128))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.head()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.head.html#pandas.core.groupby.DataFrameGroupBy.head
    "pandas.core.groupby.DataFrameGroupBy.head"), [`SeriesGroupBy.head()`](../reference/api/pandas.core.groupby.SeriesGroupBy.head.html#pandas.core.groupby.SeriesGroupBy.head
    "pandas.core.groupby.SeriesGroupBy.head"), [`DataFrameGroupBy.tail()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.tail.html#pandas.core.groupby.DataFrameGroupBy.tail
    "pandas.core.groupby.DataFrameGroupBy.tail"), and [`SeriesGroupBy.tail()`](../reference/api/pandas.core.groupby.SeriesGroupBy.tail.html#pandas.core.groupby.SeriesGroupBy.tail
    "pandas.core.groupby.SeriesGroupBy.tail") not dropping groups with `NaN` when
    `dropna=True` ([GH 45089](https://github.com/pandas-dev/pandas/issues/45089))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.__iter__()` after selecting a subset of columns in a `GroupBy`
    object, which returned all columns instead of the chosen subset ([GH 44821](https://github.com/pandas-dev/pandas/issues/44821))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Groupby.rolling()` when non-monotonic data passed, fails to correctly
    raise `ValueError` ([GH 43909](https://github.com/pandas-dev/pandas/issues/43909))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where grouping by a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") that has a `categorical` data type and length unequal to the
    axis of grouping raised `ValueError` ([GH 44179](https://github.com/pandas-dev/pandas/issues/44179))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Improved error message when creating a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") column from a multi-dimensional [`numpy.ndarray`](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray
    "(in NumPy v1.26)") ([GH 42463](https://github.com/pandas-dev/pandas/issues/42463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    creating [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with duplicate level entries when concatenating a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with duplicates in [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") and multiple keys ([GH 42651](https://github.com/pandas-dev/pandas/issues/42651))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut")
    on [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    with duplicate indices and non-exact [`pandas.CategoricalIndex()`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 42185](https://github.com/pandas-dev/pandas/issues/42185),
    [GH 42425](https://github.com/pandas-dev/pandas/issues/42425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` failing to retain dtypes when appended columns do
    not match ([GH 43392](https://github.com/pandas-dev/pandas/issues/43392))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    of `bool` and `boolean` dtypes resulting in `object` dtype instead of `boolean`
    dtype ([GH 42800](https://github.com/pandas-dev/pandas/issues/42800))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") when inputs are categorical [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), there are categories that are not present in one or both of
    the [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    and `margins=True`. Previously the margin value for missing categories was `NaN`.
    It is now correctly reported as 0 ([GH 43505](https://github.com/pandas-dev/pandas/issues/43505))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    would fail when the `objs` argument all had the same index and the `keys` argument
    contained duplicates ([GH 43595](https://github.com/pandas-dev/pandas/issues/43595))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    which ignored the `sort` parameter ([GH 43375](https://github.com/pandas-dev/pandas/issues/43375))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") as column index for the `on` argument returning an error
    when assigning a column internally ([GH 43734](https://github.com/pandas-dev/pandas/issues/43734))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") would fail when inputs are lists or tuples ([GH 44076](https://github.com/pandas-dev/pandas/issues/44076))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` failing to retain `index.name` when appending a
    list of [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    objects ([GH 44109](https://github.com/pandas-dev/pandas/issues/44109))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed metadata propagation in `Dataframe.apply()` method, consequently fixing
    the same issue for `Dataframe.transform()`, `Dataframe.nunique()` and `Dataframe.mode()`
    ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    casting levels of [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") to float if all levels only consist of missing values ([GH
    44900](https://github.com/pandas-dev/pandas/issues/44900))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") with `ExtensionDtype` columns incorrectly raising ([GH
    43561](https://github.com/pandas-dev/pandas/issues/43561))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    raising `KeyError` when joining over differently named indexes with on keywords
    ([GH 45094](https://github.com/pandas-dev/pandas/issues/45094))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack") with object doing unwanted type inference on resulting
    columns ([GH 44595](https://github.com/pandas-dev/pandas/issues/44595))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.join()` with overlapping `IntervalIndex` levels ([GH 44096](https://github.com/pandas-dev/pandas/issues/44096))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") results is different `dtype` based on `regex` parameter
    ([GH 44864](https://github.com/pandas-dev/pandas/issues/44864))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") with `index=None` when the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") index was a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 23955](https://github.com/pandas-dev/pandas/issues/23955))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sparse.to_coo()`](../reference/api/pandas.DataFrame.sparse.to_coo.html#pandas.DataFrame.sparse.to_coo
    "pandas.DataFrame.sparse.to_coo") raising `AttributeError` when column names are
    not unique ([GH 29564](https://github.com/pandas-dev/pandas/issues/29564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseArray.max()` and `SparseArray.min()` raising `ValueError` for
    arrays with 0 non-null elements ([GH 43527](https://github.com/pandas-dev/pandas/issues/43527))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sparse.to_coo()`](../reference/api/pandas.DataFrame.sparse.to_coo.html#pandas.DataFrame.sparse.to_coo
    "pandas.DataFrame.sparse.to_coo") silently converting non-zero fill values to
    zero ([GH 24817](https://github.com/pandas-dev/pandas/issues/24817))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseArray` comparison methods with an array-like operand of mismatched
    length raising `AssertionError` or unclear `ValueError` depending on the input
    ([GH 43863](https://github.com/pandas-dev/pandas/issues/43863))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseArray` arithmetic methods `floordiv` and `mod` behaviors when
    dividing by zero not matching the non-sparse [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") behavior ([GH 38172](https://github.com/pandas-dev/pandas/issues/38172))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseArray` unary methods as well as `SparseArray.isna()` doesn’t recalculate
    indexes ([GH 44955](https://github.com/pandas-dev/pandas/issues/44955))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    failing to preserve `PandasArray` ([GH 43887](https://github.com/pandas-dev/pandas/issues/43887))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NumPy ufuncs `np.abs`, `np.positive`, `np.negative` now correctly preserve dtype
    when called on ExtensionArrays that implement `__abs__, __pos__, __neg__`, respectively.
    In particular this is fixed for `TimedeltaArray` ([GH 43899](https://github.com/pandas-dev/pandas/issues/43899),
    [GH 23316](https://github.com/pandas-dev/pandas/issues/23316))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NumPy ufuncs `np.minimum.reduce` `np.maximum.reduce`, `np.add.reduce`, and `np.prod.reduce`
    now work correctly instead of raising `NotImplementedError` on [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `IntegerDtype` or `FloatDtype` ([GH 43923](https://github.com/pandas-dev/pandas/issues/43923),
    [GH 44793](https://github.com/pandas-dev/pandas/issues/44793))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NumPy ufuncs with `out` keyword are now supported by arrays with `IntegerDtype`
    and `FloatingDtype` ([GH 45122](https://github.com/pandas-dev/pandas/issues/45122))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoid raising `PerformanceWarning` about fragmented [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") when using many columns with an extension dtype ([GH 44098](https://github.com/pandas-dev/pandas/issues/44098))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntegerArray` and `FloatingArray` construction incorrectly coercing
    mismatched NA values (e.g. `np.timedelta64("NaT")`) to numeric NA ([GH 44514](https://github.com/pandas-dev/pandas/issues/44514))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `BooleanArray.__eq__()` and `BooleanArray.__ne__()` raising `TypeError`
    on comparison with an incompatible type (like a string). This caused [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") to sometimes raise a `TypeError` if a nullable boolean
    column was included ([GH 44499](https://github.com/pandas-dev/pandas/issues/44499))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    incorrectly raising when passed a `ndarray` with `float16` dtype ([GH 44715](https://github.com/pandas-dev/pandas/issues/44715))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in calling `np.sqrt` on `BooleanArray` returning a malformed `FloatingArray`
    ([GH 44715](https://github.com/pandas-dev/pandas/issues/44715))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") with `ExtensionDtype` when `other` is a NA scalar incompatible
    with the [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    dtype (e.g. `NaT` with a numeric dtype) incorrectly casting to a compatible NA
    value ([GH 44697](https://github.com/pandas-dev/pandas/issues/44697))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") where explicitly passing `value=None` is treated as if
    no `value` was passed, and `None` not being in the result ([GH 36984](https://github.com/pandas-dev/pandas/issues/36984),
    [GH 19998](https://github.com/pandas-dev/pandas/issues/19998))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with unwanted downcasting being done in no-op replacements
    ([GH 44498](https://github.com/pandas-dev/pandas/issues/44498))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with `FloatDtype`, `string[python]`, or `string[pyarrow]`
    dtype not being preserved when possible ([GH 33484](https://github.com/pandas-dev/pandas/issues/33484),
    [GH 40732](https://github.com/pandas-dev/pandas/issues/40732), [GH 31644](https://github.com/pandas-dev/pandas/issues/31644),
    [GH 41215](https://github.com/pandas-dev/pandas/issues/41215), [GH 25438](https://github.com/pandas-dev/pandas/issues/25438))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styler
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") where the `uuid` at initialization maintained
    a floating underscore ([GH 43037](https://github.com/pandas-dev/pandas/issues/43037))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Styler.to_html()`](../reference/api/pandas.io.formats.style.Styler.to_html.html#pandas.io.formats.style.Styler.to_html
    "pandas.io.formats.style.Styler.to_html") where the `Styler` object was updated
    if the `to_html` method was called with some args ([GH 43034](https://github.com/pandas-dev/pandas/issues/43034))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Styler.copy()` where `uuid` was not previously copied ([GH 40675](https://github.com/pandas-dev/pandas/issues/40675))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Styler.apply()` where functions which returned [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") objects were not correctly handled in terms of aligning their
    index labels ([GH 13657](https://github.com/pandas-dev/pandas/issues/13657), [GH
    42014](https://github.com/pandas-dev/pandas/issues/42014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when rendering an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a named [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 43305](https://github.com/pandas-dev/pandas/issues/43305))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when rendering a single level [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 43383](https://github.com/pandas-dev/pandas/issues/43383))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when combining non-sparse rendering and `Styler.hide_columns()` or `Styler.hide_index()`
    ([GH 43464](https://github.com/pandas-dev/pandas/issues/43464))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug setting a table style when using multiple selectors in [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") ([GH 44011](https://github.com/pandas-dev/pandas/issues/44011))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bugs where row trimming and column trimming failed to reflect hidden rows ([GH
    43703](https://github.com/pandas-dev/pandas/issues/43703), [GH 44247](https://github.com/pandas-dev/pandas/issues/44247))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") with non-unique columns and a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") `dtype` argument ([GH 44417](https://github.com/pandas-dev/pandas/issues/44417))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CustomBusinessMonthBegin.__add__()` (`CustomBusinessMonthEnd.__add__()`)
    not applying the extra `offset` parameter when beginning (end) of the target month
    is already a business day ([GH 41356](https://github.com/pandas-dev/pandas/issues/41356))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RangeIndex.union()` with another `RangeIndex` with matching (even) `step`
    and starts differing by strictly less than `step / 2` ([GH 44019](https://github.com/pandas-dev/pandas/issues/44019))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RangeIndex.difference()` with `sort=None` and `step<0` failing to sort
    ([GH 44085](https://github.com/pandas-dev/pandas/issues/44085))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") and [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") with `value=None` and ExtensionDtypes ([GH 44270](https://github.com/pandas-dev/pandas/issues/44270),
    [GH 37899](https://github.com/pandas-dev/pandas/issues/37899))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `FloatingArray.equals()` failing to consider two arrays equal if they
    contain `np.nan` values ([GH 44382](https://github.com/pandas-dev/pandas/issues/44382))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift") with `axis=1` and `ExtensionDtype` columns incorrectly
    raising when an incompatible `fill_value` is passed ([GH 44564](https://github.com/pandas-dev/pandas/issues/44564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift") with `axis=1` and `periods` larger than `len(frame.columns)`
    producing an invalid [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 44978](https://github.com/pandas-dev/pandas/issues/44978))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.diff()`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff") when passing a NumPy integer object instead of an `int`
    object ([GH 44572](https://github.com/pandas-dev/pandas/issues/44572))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") raising `ValueError` when using `regex=True` with a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") containing `np.nan` values ([GH 43344](https://github.com/pandas-dev/pandas/issues/43344))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_records()`](../reference/api/pandas.DataFrame.to_records.html#pandas.DataFrame.to_records
    "pandas.DataFrame.to_records") where an incorrect `n` was used when missing names
    were replaced by `level_n` ([GH 44818](https://github.com/pandas-dev/pandas/issues/44818))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") where `resolvers` argument was overriding the default
    resolvers ([GH 34966](https://github.com/pandas-dev/pandas/issues/34966))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.__repr__()` and `DataFrame.__repr__()` no longer replace all null-values
    in indexes with “NaN” but use their real string-representations. “NaN” is used
    only for `float("nan")` ([GH 45263](https://github.com/pandas-dev/pandas/issues/45263))  ##
    Contributors'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A total of 275 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: Abhishek R
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Albert Villanova del Moral
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alessandro Bisiani +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Lim
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex-Gregory-1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexander Gorodetsky
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexander Regueiro +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexey Györi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexis Mignon
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aleš Erjavec
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ali McMaster
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alibi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrei Batomunkuev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Eckart +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Hawyrluk
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Wood
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anton Lodder +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Armin Berres +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arushi Sharma +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Benedikt Heidrich +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Beni Bienz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Benoît Vinot
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bert Palm +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Boris Rumyantsev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brian Hulette
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brock
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bruno Costa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bryan Racic +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Caleb Epstein
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calvin Ho
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ChristofKaufmann +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christopher Yeh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chuliang Xiao +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ClaudiaSilver +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DSM
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Coll +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Schmidt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dare Adewumi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Sanders +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Wales +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Derzan Chiang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DeviousLab +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dhruv B Shetty +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Digres45 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dominik Kutra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Drew Levitt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DriesS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: EdAbati
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Elle
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Elliot Rampono
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Endre Mark Borza
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Erfan Nariman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Evgeny Naumov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ewout ter Hoeven +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fangchen Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Felix Divo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Felix Dulys +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Francesco Andreuzzi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Francois Dion +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Frans Larsson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fred Reiss
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GYvan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gabriel Di Pardi Arruda +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gesa Stupperich
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Giacomo Caria +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Greg Siano +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Griffin Ansel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hiroaki Ogasawara +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Horace +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Horace Lai +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Irv Lustig
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Isaac Virshup
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire (MBP)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire (iMac)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jack Liu
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jacob Skwirsk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jaime Di Cristina +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Holcombe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Janosh Riebesell +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jarrod Millman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jason Bian +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jernej Makovsek +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jim Bradley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joel Gibson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joeperdefloep +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Johannes Mueller +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John S Bogaardt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John Zangwill +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jon Haitz Legarreta Gorroño +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jon Wiggins +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonas Haag +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josh Friedlander
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: José Duarte +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julian Fleischer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julien de la Bruère-T
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justin McOmie
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kadatatlu Kishore +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kaiqi Dong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kashif Khan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kavya9986 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kendall +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kiley Hewitt
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Koen Roelofs +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Krishna Chivukula
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: KrishnaSai2020
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leonardo Freua +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leonardus Chen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Liang-Chi Hsieh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Loic Diridollou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lorenzo Maffioli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luke Manley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LunarLanding +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Garcia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marcel Bittar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marcel Gerber +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Edward Gorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Gorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MarcoGorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marvin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mateusz Piotrowski +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mathias Hauser +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Richards +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Davis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Zeitlin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthias Bussonnier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matti Picus
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mauro Silberberg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maxim Ivanov
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maximilian Carr +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MeeseeksMachine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Sarrazin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Wang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michał Górny +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mike Phung +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mike Taves +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mohamad Hussein Rkein +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NJOKU OKECHUKWU VALENTINE +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Neal McBurnett +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nick Anderson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nikita Sobolev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Olivier Cavadenti +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PApostol +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas Development Team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patrick Hoefler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter Tillmann +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prabha Arivalagan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pradyumna Rahul
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prerana Chakraborty
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prithvijit +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rahul Gaikwad +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ray Bell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ricardo Martins +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Shadrach
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robbert-jan ‘t Hoen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert Voyer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robin Raymond +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rohan Sharma +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rohan Sirohia +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roman Yurchak
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ruan Pretorius +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sam James +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scott Talbert
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shashwat Sharma +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sheogorath27 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shiv Gupta
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shoham Debnath
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Hawkins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Soumya +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stan West +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefanie Molin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefano Alberto Russo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stephan Heßelmann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stephen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Suyash Gupta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sven
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Swanand01 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sylvain Marié +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: TLouf
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tania Allard +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terji Petersen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: TheDerivator +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Dickson
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Kastl +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Kluyver
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Smith
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Swast
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Tran +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tobias McNulty +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tobias Pitters
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tomoki Nakagawa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tony Hirst +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Torsten Wörtwein
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: V.I. Wood +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vaibhav K +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Valentin Oliver Loftsson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Varun Shrivastava +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vivek Thazhathattil +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vyom Pathak
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wenjun Si
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Andrea +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Bradley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wojciech Sadowski +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yao-Ching Huang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yash Gupta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yiannis Hadjicharalambous +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yoshiki Vázquez Baeza
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yuanhao Geng
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yury Mikhaylov
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yvan Gatete +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yves Delley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zach Rait
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zbyszek Królikowski +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zero +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zheyuan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhiyi Wu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: aiudirog
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ali sayyah +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: aneesh98 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: aptalca
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: arw2019 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: attack68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: brendandrury +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bubblingoak +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: calvinsomething +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: claws +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: deponovo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dicristina
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: el-g-1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: evensure +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: fotino21 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: fshi01 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gfkang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: github-actions[bot]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: i-aki-y
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jreback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: juliandwain +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jxb4892 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kendall smith +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lmcindewar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lrepiton
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maximilianaccardo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: michal-gh
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: neelmraman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: partev
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: phofl +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pratyushsharan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: quantumalaviya +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rafael +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: realead
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rocabrera +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rosagold
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: saehuihwang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: salomondush +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: shubham11941140 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: srinivasan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: stphnlyd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: suoniq
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: trevorkask +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tushushu
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tyuyoshi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: usersblock +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vernetya +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vrserpa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: willie3838 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: zeitlinv +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'zhangxiaoxing +  ## Enhancements'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Improved warning messages'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, warning messages may have pointed to lines within the pandas library.
    Running the script `setting_with_copy_warning.py`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'with pandas 1.3 resulted in:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'This made it difficult to determine where the warning was being generated from.
    Now pandas will inspect the call stack, reporting the first line outside of the
    pandas library that gave rise to the warning. The output of the above script is
    now:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]  ### Index can hold arbitrary ExtensionArrays'
  prefs: []
  type: TYPE_NORMAL
- en: Until now, passing a custom `ExtensionArray` to `pd.Index` would cast the array
    to `object` dtype. Now [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") can directly hold arbitrary ExtensionArrays ([GH 43930](https://github.com/pandas-dev/pandas/issues/43930)).
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'In the old behavior, `idx` would be object-dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 'With the new behavior, we keep the original dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'One exception to this is `SparseArray`, which will continue to cast to numpy
    dtype until pandas 2.0\. At that point it will retain its dtype like other ExtensionArrays.  ###
    Styler'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") has been further developed in 1.4.0\. The following
    general enhancements have been made:'
  prefs: []
  type: TYPE_NORMAL
- en: Styling and formatting of indexes has been added, with [`Styler.apply_index()`](../reference/api/pandas.io.formats.style.Styler.apply_index.html#pandas.io.formats.style.Styler.apply_index
    "pandas.io.formats.style.Styler.apply_index"), `Styler.applymap_index()` and [`Styler.format_index()`](../reference/api/pandas.io.formats.style.Styler.format_index.html#pandas.io.formats.style.Styler.format_index
    "pandas.io.formats.style.Styler.format_index"). These mirror the signature of
    the methods already used to style and format data values, and work with both HTML,
    LaTeX and Excel format ([GH 41893](https://github.com/pandas-dev/pandas/issues/41893),
    [GH 43101](https://github.com/pandas-dev/pandas/issues/43101), [GH 41993](https://github.com/pandas-dev/pandas/issues/41993),
    [GH 41995](https://github.com/pandas-dev/pandas/issues/41995))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: The new method [`Styler.hide()`](../reference/api/pandas.io.formats.style.Styler.hide.html#pandas.io.formats.style.Styler.hide
    "pandas.io.formats.style.Styler.hide") deprecates `Styler.hide_index()` and `Styler.hide_columns()`
    ([GH 43758](https://github.com/pandas-dev/pandas/issues/43758))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: The keyword arguments `level` and `names` have been added to [`Styler.hide()`](../reference/api/pandas.io.formats.style.Styler.hide.html#pandas.io.formats.style.Styler.hide
    "pandas.io.formats.style.Styler.hide") (and implicitly to the deprecated methods
    `Styler.hide_index()` and `Styler.hide_columns()`) for additional control of visibility
    of MultiIndexes and of Index names ([GH 25475](https://github.com/pandas-dev/pandas/issues/25475),
    [GH 43404](https://github.com/pandas-dev/pandas/issues/43404), [GH 43346](https://github.com/pandas-dev/pandas/issues/43346))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: The [`Styler.export()`](../reference/api/pandas.io.formats.style.Styler.export.html#pandas.io.formats.style.Styler.export
    "pandas.io.formats.style.Styler.export") and [`Styler.use()`](../reference/api/pandas.io.formats.style.Styler.use.html#pandas.io.formats.style.Styler.use
    "pandas.io.formats.style.Styler.use") have been updated to address all of the
    added functionality from v1.2.0 and v1.3.0 ([GH 40675](https://github.com/pandas-dev/pandas/issues/40675))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Global options under the category `pd.options.styler` have been extended to
    configure default `Styler` properties which address formatting, encoding, and
    HTML and LaTeX rendering. Note that formerly `Styler` relied on `display.html.use_mathjax`,
    which has now been replaced by `styler.html.mathjax` ([GH 41395](https://github.com/pandas-dev/pandas/issues/41395))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Validation of certain keyword arguments, e.g. `caption` ([GH 43368](https://github.com/pandas-dev/pandas/issues/43368))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Various bug fixes as recorded below
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Additionally there are specific enhancements to the HTML specific rendering:'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Styler.bar()`](../reference/api/pandas.io.formats.style.Styler.bar.html#pandas.io.formats.style.Styler.bar
    "pandas.io.formats.style.Styler.bar") introduces additional arguments to control
    alignment and display ([GH 26070](https://github.com/pandas-dev/pandas/issues/26070),
    [GH 36419](https://github.com/pandas-dev/pandas/issues/36419)), and it also validates
    the input arguments `width` and `height` ([GH 42511](https://github.com/pandas-dev/pandas/issues/42511))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Styler.to_html()`](../reference/api/pandas.io.formats.style.Styler.to_html.html#pandas.io.formats.style.Styler.to_html
    "pandas.io.formats.style.Styler.to_html") introduces keyword arguments `sparse_index`,
    `sparse_columns`, `bold_headers`, `caption`, `max_rows` and `max_columns` ([GH
    41946](https://github.com/pandas-dev/pandas/issues/41946), [GH 43149](https://github.com/pandas-dev/pandas/issues/43149),
    [GH 42972](https://github.com/pandas-dev/pandas/issues/42972))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Styler.to_html()`](../reference/api/pandas.io.formats.style.Styler.to_html.html#pandas.io.formats.style.Styler.to_html
    "pandas.io.formats.style.Styler.to_html") omits CSSStyle rules for hidden table
    elements as a performance enhancement ([GH 43619](https://github.com/pandas-dev/pandas/issues/43619))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Custom CSS classes can now be directly specified without string replacement
    ([GH 43686](https://github.com/pandas-dev/pandas/issues/43686))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Ability to render hyperlinks automatically via a new `hyperlinks` formatting
    keyword argument ([GH 45058](https://github.com/pandas-dev/pandas/issues/45058))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: 'There are also some LaTeX specific enhancements:'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Styler.to_latex()`](../reference/api/pandas.io.formats.style.Styler.to_latex.html#pandas.io.formats.style.Styler.to_latex
    "pandas.io.formats.style.Styler.to_latex") introduces keyword argument `environment`,
    which also allows a specific “longtable” entry through a separate jinja2 template
    ([GH 41866](https://github.com/pandas-dev/pandas/issues/41866))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Naive sparsification is now possible for LaTeX without the necessity of including
    the multirow package ([GH 43369](https://github.com/pandas-dev/pandas/issues/43369))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '*cline* support has been added for [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") row sparsification through a keyword argument ([GH 45138](https://github.com/pandas-dev/pandas/issues/45138))  ###
    Multi-threaded CSV reading with a new CSV Engine based on pyarrow'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") now accepts `engine="pyarrow"` (requires at least `pyarrow`
    1.0.1) as an argument, allowing for faster csv parsing on multicore machines with
    pyarrow installed. See the [I/O docs](../user_guide/io.html) for more info. ([GH
    23697](https://github.com/pandas-dev/pandas/issues/23697), [GH 43706](https://github.com/pandas-dev/pandas/issues/43706))  ###
    Rank function for rolling and expanding windows'
  prefs: []
  type: TYPE_NORMAL
- en: 'Added `rank` function to `Rolling` and `Expanding`. The new function supports
    the `method`, `ascending`, and `pct` flags of [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank"). The `method` argument supports `min`, `max`, and `average`
    ranking methods. Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]  ### Groupby positional indexing'
  prefs: []
  type: TYPE_NORMAL
- en: It is now possible to specify positional ranges relative to the ends of each
    group.
  prefs: []
  type: TYPE_NORMAL
- en: Negative arguments for [`DataFrameGroupBy.head()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.head.html#pandas.core.groupby.DataFrameGroupBy.head
    "pandas.core.groupby.DataFrameGroupBy.head"), [`SeriesGroupBy.head()`](../reference/api/pandas.core.groupby.SeriesGroupBy.head.html#pandas.core.groupby.SeriesGroupBy.head
    "pandas.core.groupby.SeriesGroupBy.head"), [`DataFrameGroupBy.tail()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.tail.html#pandas.core.groupby.DataFrameGroupBy.tail
    "pandas.core.groupby.DataFrameGroupBy.tail"), and [`SeriesGroupBy.tail()`](../reference/api/pandas.core.groupby.SeriesGroupBy.tail.html#pandas.core.groupby.SeriesGroupBy.tail
    "pandas.core.groupby.SeriesGroupBy.tail") now work correctly and result in ranges
    relative to the end and start of each group, respectively. Previously, negative
    arguments returned empty frames.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: '[`DataFrameGroupBy.nth()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") and [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") now accept a slice or list of integers
    and slices.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: '[`DataFrameGroupBy.nth()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") and [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") now accept index notation.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]  ### DataFrame.from_dict and DataFrame.to_dict have new `''tight''`
    option'
  prefs: []
  type: TYPE_NORMAL
- en: A new `'tight'` dictionary format that preserves [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") entries and names is now available with the [`DataFrame.from_dict()`](../reference/api/pandas.DataFrame.from_dict.html#pandas.DataFrame.from_dict
    "pandas.DataFrame.from_dict") and [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") methods and can be used with the standard `json` library
    to produce a tight representation of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects ([GH 4889](https://github.com/pandas-dev/pandas/issues/4889)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]  ### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    will preserve the `attrs` when it is the same for all objects and discard the
    `attrs` when they are different ([GH 41828](https://github.com/pandas-dev/pandas/issues/41828))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrameGroupBy` operations with `as_index=False` now correctly retain `ExtensionDtype`
    dtypes for columns being grouped on ([GH 41373](https://github.com/pandas-dev/pandas/issues/41373))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add support for assigning values to `by` argument in [`DataFrame.plot.hist()`](../reference/api/pandas.DataFrame.plot.hist.html#pandas.DataFrame.plot.hist
    "pandas.DataFrame.plot.hist") and [`DataFrame.plot.box()`](../reference/api/pandas.DataFrame.plot.box.html#pandas.DataFrame.plot.box
    "pandas.DataFrame.plot.box") ([GH 15079](https://github.com/pandas-dev/pandas/issues/15079))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.sample()`](../reference/api/pandas.Series.sample.html#pandas.Series.sample
    "pandas.Series.sample"), [`DataFrame.sample()`](../reference/api/pandas.DataFrame.sample.html#pandas.DataFrame.sample
    "pandas.DataFrame.sample"), [`DataFrameGroupBy.sample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sample.html#pandas.core.groupby.DataFrameGroupBy.sample
    "pandas.core.groupby.DataFrameGroupBy.sample"), and [`SeriesGroupBy.sample()`](../reference/api/pandas.core.groupby.SeriesGroupBy.sample.html#pandas.core.groupby.SeriesGroupBy.sample
    "pandas.core.groupby.SeriesGroupBy.sample") now accept a `np.random.Generator`
    as input to `random_state`. A generator will be more performant, especially with
    `replace=False` ([GH 38100](https://github.com/pandas-dev/pandas/issues/38100))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.ewm()`](../reference/api/pandas.Series.ewm.html#pandas.Series.ewm
    "pandas.Series.ewm") and [`DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm") now support a `method` argument with a `''table''` option
    that performs the windowing operation over an entire [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"). See [Window Overview](../user_guide/window.html#window-overview)
    for performance and functional benefits ([GH 42273](https://github.com/pandas-dev/pandas/issues/42273))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.cummin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin"), [`SeriesGroupBy.cummin()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummin.html#pandas.core.groupby.SeriesGroupBy.cummin
    "pandas.core.groupby.SeriesGroupBy.cummin"), [`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax"), and [`SeriesGroupBy.cummax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummax.html#pandas.core.groupby.SeriesGroupBy.cummax
    "pandas.core.groupby.SeriesGroupBy.cummax") now support the argument `skipna`
    ([GH 34047](https://github.com/pandas-dev/pandas/issues/34047))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") now supports the argument `storage_options` ([GH 39167](https://github.com/pandas-dev/pandas/issues/39167))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") and `StataWriter()` now accept the keyword only argument
    `value_labels` to save labels for non-categorical columns ([GH 38454](https://github.com/pandas-dev/pandas/issues/38454))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Methods that relied on hashmap based algos such as `DataFrameGroupBy.value_counts()`,
    `DataFrameGroupBy.count()` and [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") ignored imaginary component for complex numbers ([GH 17927](https://github.com/pandas-dev/pandas/issues/17927))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add [`Series.str.removeprefix()`](../reference/api/pandas.Series.str.removeprefix.html#pandas.Series.str.removeprefix
    "pandas.Series.str.removeprefix") and [`Series.str.removesuffix()`](../reference/api/pandas.Series.str.removesuffix.html#pandas.Series.str.removesuffix
    "pandas.Series.str.removesuffix") introduced in Python 3.9 to remove pre-/suffixes
    from string-type [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 36944](https://github.com/pandas-dev/pandas/issues/36944))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Attempting to write into a file in missing parent directory with [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv"), [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html"), [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel"), [`DataFrame.to_feather()`](../reference/api/pandas.DataFrame.to_feather.html#pandas.DataFrame.to_feather
    "pandas.DataFrame.to_feather"), [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet"), [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata"), [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json"), [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle"), and [`DataFrame.to_xml()`](../reference/api/pandas.DataFrame.to_xml.html#pandas.DataFrame.to_xml
    "pandas.DataFrame.to_xml") now explicitly mentions missing parent directory, the
    same is true for [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") counterparts ([GH 24306](https://github.com/pandas-dev/pandas/issues/24306))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing with `.loc` and `.iloc` now supports `Ellipsis` ([GH 37750](https://github.com/pandas-dev/pandas/issues/37750))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntegerArray.all()` , `IntegerArray.any()`, `FloatingArray.any()`, and `FloatingArray.all()`
    use Kleene logic ([GH 41967](https://github.com/pandas-dev/pandas/issues/41967))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for nullable boolean and integer types in [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata"), `StataWriter`, `StataWriter117`, and `StataWriterUTF8`
    ([GH 40855](https://github.com/pandas-dev/pandas/issues/40855))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.__pos__()` and `DataFrame.__neg__()` now retain `ExtensionDtype`
    dtypes ([GH 43883](https://github.com/pandas-dev/pandas/issues/43883))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The error raised when an optional dependency can’t be imported now includes
    the original exception, for easier investigation ([GH 43882](https://github.com/pandas-dev/pandas/issues/43882))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`ExponentialMovingWindow.sum()`](../reference/api/pandas.core.window.ewm.ExponentialMovingWindow.sum.html#pandas.core.window.ewm.ExponentialMovingWindow.sum
    "pandas.core.window.ewm.ExponentialMovingWindow.sum") ([GH 13297](https://github.com/pandas-dev/pandas/issues/13297))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.str.split()`](../reference/api/pandas.Series.str.split.html#pandas.Series.str.split
    "pandas.Series.str.split") now supports a `regex` argument that explicitly specifies
    whether the pattern is a regular expression. Default is `None` ([GH 43563](https://github.com/pandas-dev/pandas/issues/43563),
    [GH 32835](https://github.com/pandas-dev/pandas/issues/32835), [GH 25549](https://github.com/pandas-dev/pandas/issues/25549))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") now accepts a single label as `subset` along with array-like
    ([GH 41021](https://github.com/pandas-dev/pandas/issues/41021))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `DataFrameGroupBy.value_counts()` ([GH 43564](https://github.com/pandas-dev/pandas/issues/43564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now accepts a `callable` function in `on_bad_lines` when `engine="python"` for
    custom handling of bad lines ([GH 5686](https://github.com/pandas-dev/pandas/issues/5686))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") argument `if_sheet_exists="overlay"` option added ([GH 40231](https://github.com/pandas-dev/pandas/issues/40231))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") now accepts a `decimal` argument that allow the user to specify
    the decimal point when parsing string columns to numeric ([GH 14403](https://github.com/pandas-dev/pandas/issues/14403))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.mean()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean"), [`SeriesGroupBy.mean()`](../reference/api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean"), [`DataFrameGroupBy.std()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.std.html#pandas.core.groupby.DataFrameGroupBy.std
    "pandas.core.groupby.DataFrameGroupBy.std"), [`SeriesGroupBy.std()`](../reference/api/pandas.core.groupby.SeriesGroupBy.std.html#pandas.core.groupby.SeriesGroupBy.std
    "pandas.core.groupby.SeriesGroupBy.std"), [`DataFrameGroupBy.var()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.var.html#pandas.core.groupby.DataFrameGroupBy.var
    "pandas.core.groupby.DataFrameGroupBy.var"), [`SeriesGroupBy.var()`](../reference/api/pandas.core.groupby.SeriesGroupBy.var.html#pandas.core.groupby.SeriesGroupBy.var
    "pandas.core.groupby.SeriesGroupBy.var"), [`DataFrameGroupBy.sum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum"), and [`SeriesGroupBy.sum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.sum.html#pandas.core.groupby.SeriesGroupBy.sum
    "pandas.core.groupby.SeriesGroupBy.sum") now support [Numba](http://numba.pydata.org/)
    execution with the `engine` keyword ([GH 43731](https://github.com/pandas-dev/pandas/issues/43731),
    [GH 44862](https://github.com/pandas-dev/pandas/issues/44862), [GH 44939](https://github.com/pandas-dev/pandas/issues/44939))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp.isoformat()`](../reference/api/pandas.Timestamp.isoformat.html#pandas.Timestamp.isoformat
    "pandas.Timestamp.isoformat") now handles the `timespec` argument from the base
    `datetime` class ([GH 26131](https://github.com/pandas-dev/pandas/issues/26131))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NaT.to_numpy()` `dtype` argument is now respected, so `np.timedelta64` can
    be returned ([GH 44460](https://github.com/pandas-dev/pandas/issues/44460))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New option `display.max_dir_items` customizes the number of columns added to
    `Dataframe.__dir__()` and suggested for tab completion ([GH 37996](https://github.com/pandas-dev/pandas/issues/37996))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added “Juneteenth National Independence Day” to `USFederalHolidayCalendar` ([GH
    44574](https://github.com/pandas-dev/pandas/issues/44574))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Rolling.var()`](../reference/api/pandas.core.window.rolling.Rolling.var.html#pandas.core.window.rolling.Rolling.var
    "pandas.core.window.rolling.Rolling.var"), [`Expanding.var()`](../reference/api/pandas.core.window.expanding.Expanding.var.html#pandas.core.window.expanding.Expanding.var
    "pandas.core.window.expanding.Expanding.var"), [`Rolling.std()`](../reference/api/pandas.core.window.rolling.Rolling.std.html#pandas.core.window.rolling.Rolling.std
    "pandas.core.window.rolling.Rolling.std"), and [`Expanding.std()`](../reference/api/pandas.core.window.expanding.Expanding.std.html#pandas.core.window.expanding.Expanding.std
    "pandas.core.window.expanding.Expanding.std") now support [Numba](http://numba.pydata.org/)
    execution with the `engine` keyword ([GH 44461](https://github.com/pandas-dev/pandas/issues/44461))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.info()` has been added, for compatibility with [`DataFrame.info()`](../reference/api/pandas.DataFrame.info.html#pandas.DataFrame.info
    "pandas.DataFrame.info") ([GH 5167](https://github.com/pandas-dev/pandas/issues/5167))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented `IntervalArray.min()` and `IntervalArray.max()`, as a result of
    which `min` and `max` now work for [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `IntervalDtype` ([GH 44746](https://github.com/pandas-dev/pandas/issues/44746))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`UInt64Index.map()` now retains `dtype` where possible ([GH 44609](https://github.com/pandas-dev/pandas/issues/44609))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    can now parse unsigned long long integers ([GH 26068](https://github.com/pandas-dev/pandas/issues/26068))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.take()`](../reference/api/pandas.DataFrame.take.html#pandas.DataFrame.take
    "pandas.DataFrame.take") now raises a `TypeError` when passed a scalar for the
    indexer ([GH 42875](https://github.com/pandas-dev/pandas/issues/42875))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`is_list_like()` now identifies duck-arrays as list-like unless `.ndim == 0`
    ([GH 35131](https://github.com/pandas-dev/pandas/issues/35131))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExtensionDtype` and `ExtensionArray` are now (de)serialized when exporting
    a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    with [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") using `orient=''table''` ([GH 20612](https://github.com/pandas-dev/pandas/issues/20612),
    [GH 44705](https://github.com/pandas-dev/pandas/issues/44705))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add support for [Zstandard](http://facebook.github.io/zstd/) compression to
    [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle")/[`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle") and friends ([GH 43925](https://github.com/pandas-dev/pandas/issues/43925))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") now returns an `int` of the number of written rows
    ([GH 23998](https://github.com/pandas-dev/pandas/issues/23998))  ### Improved
    warning messages'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Previously, warning messages may have pointed to lines within the pandas library.
    Running the script `setting_with_copy_warning.py`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: 'with pandas 1.3 resulted in:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: 'This made it difficult to determine where the warning was being generated from.
    Now pandas will inspect the call stack, reporting the first line outside of the
    pandas library that gave rise to the warning. The output of the above script is
    now:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: '### Index can hold arbitrary ExtensionArrays'
  prefs: []
  type: TYPE_NORMAL
- en: Until now, passing a custom `ExtensionArray` to `pd.Index` would cast the array
    to `object` dtype. Now [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") can directly hold arbitrary ExtensionArrays ([GH 43930](https://github.com/pandas-dev/pandas/issues/43930)).
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: 'In the old behavior, `idx` would be object-dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: 'With the new behavior, we keep the original dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: One exception to this is `SparseArray`, which will continue to cast to numpy
    dtype until pandas 2.0\. At that point it will retain its dtype like other ExtensionArrays.
  prefs: []
  type: TYPE_NORMAL
- en: '### Styler'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") has been further developed in 1.4.0\. The following
    general enhancements have been made:'
  prefs: []
  type: TYPE_NORMAL
- en: Styling and formatting of indexes has been added, with [`Styler.apply_index()`](../reference/api/pandas.io.formats.style.Styler.apply_index.html#pandas.io.formats.style.Styler.apply_index
    "pandas.io.formats.style.Styler.apply_index"), `Styler.applymap_index()` and [`Styler.format_index()`](../reference/api/pandas.io.formats.style.Styler.format_index.html#pandas.io.formats.style.Styler.format_index
    "pandas.io.formats.style.Styler.format_index"). These mirror the signature of
    the methods already used to style and format data values, and work with both HTML,
    LaTeX and Excel format ([GH 41893](https://github.com/pandas-dev/pandas/issues/41893),
    [GH 43101](https://github.com/pandas-dev/pandas/issues/43101), [GH 41993](https://github.com/pandas-dev/pandas/issues/41993),
    [GH 41995](https://github.com/pandas-dev/pandas/issues/41995))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: The new method [`Styler.hide()`](../reference/api/pandas.io.formats.style.Styler.hide.html#pandas.io.formats.style.Styler.hide
    "pandas.io.formats.style.Styler.hide") deprecates `Styler.hide_index()` and `Styler.hide_columns()`
    ([GH 43758](https://github.com/pandas-dev/pandas/issues/43758))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: The keyword arguments `level` and `names` have been added to [`Styler.hide()`](../reference/api/pandas.io.formats.style.Styler.hide.html#pandas.io.formats.style.Styler.hide
    "pandas.io.formats.style.Styler.hide") (and implicitly to the deprecated methods
    `Styler.hide_index()` and `Styler.hide_columns()`) for additional control of visibility
    of MultiIndexes and of Index names ([GH 25475](https://github.com/pandas-dev/pandas/issues/25475),
    [GH 43404](https://github.com/pandas-dev/pandas/issues/43404), [GH 43346](https://github.com/pandas-dev/pandas/issues/43346))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: The [`Styler.export()`](../reference/api/pandas.io.formats.style.Styler.export.html#pandas.io.formats.style.Styler.export
    "pandas.io.formats.style.Styler.export") and [`Styler.use()`](../reference/api/pandas.io.formats.style.Styler.use.html#pandas.io.formats.style.Styler.use
    "pandas.io.formats.style.Styler.use") have been updated to address all of the
    added functionality from v1.2.0 and v1.3.0 ([GH 40675](https://github.com/pandas-dev/pandas/issues/40675))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Global options under the category `pd.options.styler` have been extended to
    configure default `Styler` properties which address formatting, encoding, and
    HTML and LaTeX rendering. Note that formerly `Styler` relied on `display.html.use_mathjax`,
    which has now been replaced by `styler.html.mathjax` ([GH 41395](https://github.com/pandas-dev/pandas/issues/41395))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Validation of certain keyword arguments, e.g. `caption` ([GH 43368](https://github.com/pandas-dev/pandas/issues/43368))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Various bug fixes as recorded below
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Additionally there are specific enhancements to the HTML specific rendering:'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Styler.bar()`](../reference/api/pandas.io.formats.style.Styler.bar.html#pandas.io.formats.style.Styler.bar
    "pandas.io.formats.style.Styler.bar") introduces additional arguments to control
    alignment and display ([GH 26070](https://github.com/pandas-dev/pandas/issues/26070),
    [GH 36419](https://github.com/pandas-dev/pandas/issues/36419)), and it also validates
    the input arguments `width` and `height` ([GH 42511](https://github.com/pandas-dev/pandas/issues/42511))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Styler.to_html()`](../reference/api/pandas.io.formats.style.Styler.to_html.html#pandas.io.formats.style.Styler.to_html
    "pandas.io.formats.style.Styler.to_html") introduces keyword arguments `sparse_index`,
    `sparse_columns`, `bold_headers`, `caption`, `max_rows` and `max_columns` ([GH
    41946](https://github.com/pandas-dev/pandas/issues/41946), [GH 43149](https://github.com/pandas-dev/pandas/issues/43149),
    [GH 42972](https://github.com/pandas-dev/pandas/issues/42972))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Styler.to_html()`](../reference/api/pandas.io.formats.style.Styler.to_html.html#pandas.io.formats.style.Styler.to_html
    "pandas.io.formats.style.Styler.to_html") omits CSSStyle rules for hidden table
    elements as a performance enhancement ([GH 43619](https://github.com/pandas-dev/pandas/issues/43619))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Custom CSS classes can now be directly specified without string replacement
    ([GH 43686](https://github.com/pandas-dev/pandas/issues/43686))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Ability to render hyperlinks automatically via a new `hyperlinks` formatting
    keyword argument ([GH 45058](https://github.com/pandas-dev/pandas/issues/45058))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: 'There are also some LaTeX specific enhancements:'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Styler.to_latex()`](../reference/api/pandas.io.formats.style.Styler.to_latex.html#pandas.io.formats.style.Styler.to_latex
    "pandas.io.formats.style.Styler.to_latex") introduces keyword argument `environment`,
    which also allows a specific “longtable” entry through a separate jinja2 template
    ([GH 41866](https://github.com/pandas-dev/pandas/issues/41866))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Naive sparsification is now possible for LaTeX without the necessity of including
    the multirow package ([GH 43369](https://github.com/pandas-dev/pandas/issues/43369))
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '*cline* support has been added for [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") row sparsification through a keyword argument ([GH 45138](https://github.com/pandas-dev/pandas/issues/45138))'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Multi-threaded CSV reading with a new CSV Engine based on pyarrow'
  prefs: []
  type: TYPE_NORMAL
- en: '[`pandas.read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") now accepts `engine="pyarrow"` (requires at least `pyarrow`
    1.0.1) as an argument, allowing for faster csv parsing on multicore machines with
    pyarrow installed. See the [I/O docs](../user_guide/io.html) for more info. ([GH
    23697](https://github.com/pandas-dev/pandas/issues/23697), [GH 43706](https://github.com/pandas-dev/pandas/issues/43706))'
  prefs: []
  type: TYPE_NORMAL
- en: '### Rank function for rolling and expanding windows'
  prefs: []
  type: TYPE_NORMAL
- en: 'Added `rank` function to `Rolling` and `Expanding`. The new function supports
    the `method`, `ascending`, and `pct` flags of [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank"). The `method` argument supports `min`, `max`, and `average`
    ranking methods. Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: '### Groupby positional indexing'
  prefs: []
  type: TYPE_NORMAL
- en: It is now possible to specify positional ranges relative to the ends of each
    group.
  prefs: []
  type: TYPE_NORMAL
- en: Negative arguments for [`DataFrameGroupBy.head()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.head.html#pandas.core.groupby.DataFrameGroupBy.head
    "pandas.core.groupby.DataFrameGroupBy.head"), [`SeriesGroupBy.head()`](../reference/api/pandas.core.groupby.SeriesGroupBy.head.html#pandas.core.groupby.SeriesGroupBy.head
    "pandas.core.groupby.SeriesGroupBy.head"), [`DataFrameGroupBy.tail()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.tail.html#pandas.core.groupby.DataFrameGroupBy.tail
    "pandas.core.groupby.DataFrameGroupBy.tail"), and [`SeriesGroupBy.tail()`](../reference/api/pandas.core.groupby.SeriesGroupBy.tail.html#pandas.core.groupby.SeriesGroupBy.tail
    "pandas.core.groupby.SeriesGroupBy.tail") now work correctly and result in ranges
    relative to the end and start of each group, respectively. Previously, negative
    arguments returned empty frames.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: '[`DataFrameGroupBy.nth()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") and [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") now accept a slice or list of integers
    and slices.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: '[`DataFrameGroupBy.nth()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") and [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") now accept index notation.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: '### DataFrame.from_dict and DataFrame.to_dict have new `''tight''` option'
  prefs: []
  type: TYPE_NORMAL
- en: A new `'tight'` dictionary format that preserves [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") entries and names is now available with the [`DataFrame.from_dict()`](../reference/api/pandas.DataFrame.from_dict.html#pandas.DataFrame.from_dict
    "pandas.DataFrame.from_dict") and [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") methods and can be used with the standard `json` library
    to produce a tight representation of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects ([GH 4889](https://github.com/pandas-dev/pandas/issues/4889)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: '### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    will preserve the `attrs` when it is the same for all objects and discard the
    `attrs` when they are different ([GH 41828](https://github.com/pandas-dev/pandas/issues/41828))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrameGroupBy` operations with `as_index=False` now correctly retain `ExtensionDtype`
    dtypes for columns being grouped on ([GH 41373](https://github.com/pandas-dev/pandas/issues/41373))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add support for assigning values to `by` argument in [`DataFrame.plot.hist()`](../reference/api/pandas.DataFrame.plot.hist.html#pandas.DataFrame.plot.hist
    "pandas.DataFrame.plot.hist") and [`DataFrame.plot.box()`](../reference/api/pandas.DataFrame.plot.box.html#pandas.DataFrame.plot.box
    "pandas.DataFrame.plot.box") ([GH 15079](https://github.com/pandas-dev/pandas/issues/15079))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.sample()`](../reference/api/pandas.Series.sample.html#pandas.Series.sample
    "pandas.Series.sample"), [`DataFrame.sample()`](../reference/api/pandas.DataFrame.sample.html#pandas.DataFrame.sample
    "pandas.DataFrame.sample"), [`DataFrameGroupBy.sample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sample.html#pandas.core.groupby.DataFrameGroupBy.sample
    "pandas.core.groupby.DataFrameGroupBy.sample"), and [`SeriesGroupBy.sample()`](../reference/api/pandas.core.groupby.SeriesGroupBy.sample.html#pandas.core.groupby.SeriesGroupBy.sample
    "pandas.core.groupby.SeriesGroupBy.sample") now accept a `np.random.Generator`
    as input to `random_state`. A generator will be more performant, especially with
    `replace=False` ([GH 38100](https://github.com/pandas-dev/pandas/issues/38100))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.ewm()`](../reference/api/pandas.Series.ewm.html#pandas.Series.ewm
    "pandas.Series.ewm") and [`DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm") now support a `method` argument with a `''table''` option
    that performs the windowing operation over an entire [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"). See [Window Overview](../user_guide/window.html#window-overview)
    for performance and functional benefits ([GH 42273](https://github.com/pandas-dev/pandas/issues/42273))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.cummin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin"), [`SeriesGroupBy.cummin()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummin.html#pandas.core.groupby.SeriesGroupBy.cummin
    "pandas.core.groupby.SeriesGroupBy.cummin"), [`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax"), and [`SeriesGroupBy.cummax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cummax.html#pandas.core.groupby.SeriesGroupBy.cummax
    "pandas.core.groupby.SeriesGroupBy.cummax") now support the argument `skipna`
    ([GH 34047](https://github.com/pandas-dev/pandas/issues/34047))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") now supports the argument `storage_options` ([GH 39167](https://github.com/pandas-dev/pandas/issues/39167))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") and `StataWriter()` now accept the keyword only argument
    `value_labels` to save labels for non-categorical columns ([GH 38454](https://github.com/pandas-dev/pandas/issues/38454))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Methods that relied on hashmap based algos such as `DataFrameGroupBy.value_counts()`,
    `DataFrameGroupBy.count()` and [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") ignored imaginary component for complex numbers ([GH 17927](https://github.com/pandas-dev/pandas/issues/17927))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add [`Series.str.removeprefix()`](../reference/api/pandas.Series.str.removeprefix.html#pandas.Series.str.removeprefix
    "pandas.Series.str.removeprefix") and [`Series.str.removesuffix()`](../reference/api/pandas.Series.str.removesuffix.html#pandas.Series.str.removesuffix
    "pandas.Series.str.removesuffix") introduced in Python 3.9 to remove pre-/suffixes
    from string-type [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 36944](https://github.com/pandas-dev/pandas/issues/36944))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Attempting to write into a file in missing parent directory with [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv"), [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html"), [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel"), [`DataFrame.to_feather()`](../reference/api/pandas.DataFrame.to_feather.html#pandas.DataFrame.to_feather
    "pandas.DataFrame.to_feather"), [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet"), [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata"), [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json"), [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle"), and [`DataFrame.to_xml()`](../reference/api/pandas.DataFrame.to_xml.html#pandas.DataFrame.to_xml
    "pandas.DataFrame.to_xml") now explicitly mentions missing parent directory, the
    same is true for [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") counterparts ([GH 24306](https://github.com/pandas-dev/pandas/issues/24306))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing with `.loc` and `.iloc` now supports `Ellipsis` ([GH 37750](https://github.com/pandas-dev/pandas/issues/37750))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntegerArray.all()` , `IntegerArray.any()`, `FloatingArray.any()`, and `FloatingArray.all()`
    use Kleene logic ([GH 41967](https://github.com/pandas-dev/pandas/issues/41967))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for nullable boolean and integer types in [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata"), `StataWriter`, `StataWriter117`, and `StataWriterUTF8`
    ([GH 40855](https://github.com/pandas-dev/pandas/issues/40855))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.__pos__()` and `DataFrame.__neg__()` now retain `ExtensionDtype`
    dtypes ([GH 43883](https://github.com/pandas-dev/pandas/issues/43883))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The error raised when an optional dependency can’t be imported now includes
    the original exception, for easier investigation ([GH 43882](https://github.com/pandas-dev/pandas/issues/43882))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`ExponentialMovingWindow.sum()`](../reference/api/pandas.core.window.ewm.ExponentialMovingWindow.sum.html#pandas.core.window.ewm.ExponentialMovingWindow.sum
    "pandas.core.window.ewm.ExponentialMovingWindow.sum") ([GH 13297](https://github.com/pandas-dev/pandas/issues/13297))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.str.split()`](../reference/api/pandas.Series.str.split.html#pandas.Series.str.split
    "pandas.Series.str.split") now supports a `regex` argument that explicitly specifies
    whether the pattern is a regular expression. Default is `None` ([GH 43563](https://github.com/pandas-dev/pandas/issues/43563),
    [GH 32835](https://github.com/pandas-dev/pandas/issues/32835), [GH 25549](https://github.com/pandas-dev/pandas/issues/25549))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") now accepts a single label as `subset` along with array-like
    ([GH 41021](https://github.com/pandas-dev/pandas/issues/41021))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `DataFrameGroupBy.value_counts()` ([GH 43564](https://github.com/pandas-dev/pandas/issues/43564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now accepts a `callable` function in `on_bad_lines` when `engine="python"` for
    custom handling of bad lines ([GH 5686](https://github.com/pandas-dev/pandas/issues/5686))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") argument `if_sheet_exists="overlay"` option added ([GH 40231](https://github.com/pandas-dev/pandas/issues/40231))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") now accepts a `decimal` argument that allow the user to specify
    the decimal point when parsing string columns to numeric ([GH 14403](https://github.com/pandas-dev/pandas/issues/14403))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.mean()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean"), [`SeriesGroupBy.mean()`](../reference/api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean"), [`DataFrameGroupBy.std()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.std.html#pandas.core.groupby.DataFrameGroupBy.std
    "pandas.core.groupby.DataFrameGroupBy.std"), [`SeriesGroupBy.std()`](../reference/api/pandas.core.groupby.SeriesGroupBy.std.html#pandas.core.groupby.SeriesGroupBy.std
    "pandas.core.groupby.SeriesGroupBy.std"), [`DataFrameGroupBy.var()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.var.html#pandas.core.groupby.DataFrameGroupBy.var
    "pandas.core.groupby.DataFrameGroupBy.var"), [`SeriesGroupBy.var()`](../reference/api/pandas.core.groupby.SeriesGroupBy.var.html#pandas.core.groupby.SeriesGroupBy.var
    "pandas.core.groupby.SeriesGroupBy.var"), [`DataFrameGroupBy.sum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum"), and [`SeriesGroupBy.sum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.sum.html#pandas.core.groupby.SeriesGroupBy.sum
    "pandas.core.groupby.SeriesGroupBy.sum") now support [Numba](http://numba.pydata.org/)
    execution with the `engine` keyword ([GH 43731](https://github.com/pandas-dev/pandas/issues/43731),
    [GH 44862](https://github.com/pandas-dev/pandas/issues/44862), [GH 44939](https://github.com/pandas-dev/pandas/issues/44939))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp.isoformat()`](../reference/api/pandas.Timestamp.isoformat.html#pandas.Timestamp.isoformat
    "pandas.Timestamp.isoformat") now handles the `timespec` argument from the base
    `datetime` class ([GH 26131](https://github.com/pandas-dev/pandas/issues/26131))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NaT.to_numpy()` `dtype` argument is now respected, so `np.timedelta64` can
    be returned ([GH 44460](https://github.com/pandas-dev/pandas/issues/44460))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New option `display.max_dir_items` customizes the number of columns added to
    `Dataframe.__dir__()` and suggested for tab completion ([GH 37996](https://github.com/pandas-dev/pandas/issues/37996))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added “Juneteenth National Independence Day” to `USFederalHolidayCalendar` ([GH
    44574](https://github.com/pandas-dev/pandas/issues/44574))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Rolling.var()`](../reference/api/pandas.core.window.rolling.Rolling.var.html#pandas.core.window.rolling.Rolling.var
    "pandas.core.window.rolling.Rolling.var"), [`Expanding.var()`](../reference/api/pandas.core.window.expanding.Expanding.var.html#pandas.core.window.expanding.Expanding.var
    "pandas.core.window.expanding.Expanding.var"), [`Rolling.std()`](../reference/api/pandas.core.window.rolling.Rolling.std.html#pandas.core.window.rolling.Rolling.std
    "pandas.core.window.rolling.Rolling.std"), and [`Expanding.std()`](../reference/api/pandas.core.window.expanding.Expanding.std.html#pandas.core.window.expanding.Expanding.std
    "pandas.core.window.expanding.Expanding.std") now support [Numba](http://numba.pydata.org/)
    execution with the `engine` keyword ([GH 44461](https://github.com/pandas-dev/pandas/issues/44461))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.info()` has been added, for compatibility with [`DataFrame.info()`](../reference/api/pandas.DataFrame.info.html#pandas.DataFrame.info
    "pandas.DataFrame.info") ([GH 5167](https://github.com/pandas-dev/pandas/issues/5167))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented `IntervalArray.min()` and `IntervalArray.max()`, as a result of
    which `min` and `max` now work for [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `IntervalDtype` ([GH 44746](https://github.com/pandas-dev/pandas/issues/44746))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`UInt64Index.map()` now retains `dtype` where possible ([GH 44609](https://github.com/pandas-dev/pandas/issues/44609))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    can now parse unsigned long long integers ([GH 26068](https://github.com/pandas-dev/pandas/issues/26068))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.take()`](../reference/api/pandas.DataFrame.take.html#pandas.DataFrame.take
    "pandas.DataFrame.take") now raises a `TypeError` when passed a scalar for the
    indexer ([GH 42875](https://github.com/pandas-dev/pandas/issues/42875))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`is_list_like()` now identifies duck-arrays as list-like unless `.ndim == 0`
    ([GH 35131](https://github.com/pandas-dev/pandas/issues/35131))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExtensionDtype` and `ExtensionArray` are now (de)serialized when exporting
    a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    with [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") using `orient=''table''` ([GH 20612](https://github.com/pandas-dev/pandas/issues/20612),
    [GH 44705](https://github.com/pandas-dev/pandas/issues/44705))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add support for [Zstandard](http://facebook.github.io/zstd/) compression to
    [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle")/[`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle") and friends ([GH 43925](https://github.com/pandas-dev/pandas/issues/43925))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") now returns an `int` of the number of written rows
    ([GH 23998](https://github.com/pandas-dev/pandas/issues/23998))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Notable bug fixes'
  prefs: []
  type: TYPE_NORMAL
- en: These are bug fixes that might have notable behavior changes.
  prefs: []
  type: TYPE_NORMAL
- en: '### Inconsistent date string parsing'
  prefs: []
  type: TYPE_NORMAL
- en: 'The `dayfirst` option of [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") isn’t strict, and this can lead to surprising behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, a warning will be raised if a date string cannot be parsed accordance
    to the given `dayfirst` value when the value is a delimited date string (e.g.
    `31-12-2012`).  ### Ignoring dtypes in concat with empty or all-NA columns'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: This behaviour change has been reverted in pandas 1.4.3.
  prefs: []
  type: TYPE_NORMAL
- en: When using [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    to concatenate two or more [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects, if one of the DataFrames was empty or had all-NA
    values, its dtype was *sometimes* ignored when finding the concatenated dtype.
    These are now consistently *not* ignored ([GH 43507](https://github.com/pandas-dev/pandas/issues/43507)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: Previously, the float-dtype in `df2` would be ignored so the result dtype would
    be `datetime64[ns]`. As a result, the `np.nan` would be cast to `NaT`.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: Now the float-dtype is respected. Since the common dtype for these DataFrames
    is object, the `np.nan` is retained.
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]  ### Null-values are no longer coerced to NaN-value in value_counts
    and mode'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts") and [`Series.mode()`](../reference/api/pandas.Series.mode.html#pandas.Series.mode
    "pandas.Series.mode") no longer coerce `None`, `NaT` and other null-values to
    a NaN-value for `np.object_`-dtype. This behavior is now consistent with `unique`,
    `isin` and others ([GH 42688](https://github.com/pandas-dev/pandas/issues/42688)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: Previously, all null-values were replaced by a NaN-value.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: Now null-values are no longer mangled.
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]  ### mangle_dupe_cols in read_csv no longer renames unique columns
    conflicting with target names'
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    no longer renames unique column labels which conflict with the target names of
    duplicated columns. Already existing columns are skipped, i.e. the next available
    index is used for the target column name ([GH 14704](https://github.com/pandas-dev/pandas/issues/14704)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: Previously, the second column was called `a.1`, while the third column was also
    renamed to `a.1.1`.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: Now the renaming checks if `a.1` already exists when changing the name of the
    second column and jumps this index. The second column is instead renamed to `a.2`.
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]  ### unstack and pivot_table no longer raises ValueError for result
    that would exceed int32 limit'
  prefs: []
  type: TYPE_NORMAL
- en: Previously [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") and [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") would raise a `ValueError` if the operation could
    produce a result with more than `2**31 - 1` elements. This operation now raises
    a [`errors.PerformanceWarning`](../reference/api/pandas.errors.PerformanceWarning.html#pandas.errors.PerformanceWarning
    "pandas.errors.PerformanceWarning") instead ([GH 26314](https://github.com/pandas-dev/pandas/issues/26314)).
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]  ### groupby.apply consistent transform detection'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") are designed to be flexible, allowing
    users to perform aggregations, transformations, filters, and use it with user-defined
    functions that might not fall into any of these categories. As part of this, apply
    will attempt to detect when an operation is a transform, and in such a case, the
    result will have the same index as the input. In order to determine if the operation
    is a transform, pandas compares the input’s index to the result’s and determines
    if it has been mutated. Previously in pandas 1.3, different code paths used different
    definitions of “mutated”: some would use Python’s `is` whereas others would test
    only up to equality.'
  prefs: []
  type: TYPE_NORMAL
- en: This inconsistency has been removed, pandas now tests up to equality.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: In the examples above, the first uses a code path where pandas uses `is` and
    determines that `func` is not a transform whereas the second tests up to equality
    and determines that `func` is a transform. In the first case, the result’s index
    is not the same as the input’s.
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: 'Now in both cases it is determined that `func` is a transform. In each case,
    the result has the same index as the input.  ### Inconsistent date string parsing'
  prefs: []
  type: TYPE_NORMAL
- en: 'The `dayfirst` option of [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") isn’t strict, and this can lead to surprising behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: Now, a warning will be raised if a date string cannot be parsed accordance to
    the given `dayfirst` value when the value is a delimited date string (e.g. `31-12-2012`).
  prefs: []
  type: TYPE_NORMAL
- en: '### Ignoring dtypes in concat with empty or all-NA columns'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: This behaviour change has been reverted in pandas 1.4.3.
  prefs: []
  type: TYPE_NORMAL
- en: When using [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    to concatenate two or more [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects, if one of the DataFrames was empty or had all-NA
    values, its dtype was *sometimes* ignored when finding the concatenated dtype.
    These are now consistently *not* ignored ([GH 43507](https://github.com/pandas-dev/pandas/issues/43507)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: Previously, the float-dtype in `df2` would be ignored so the result dtype would
    be `datetime64[ns]`. As a result, the `np.nan` would be cast to `NaT`.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: Now the float-dtype is respected. Since the common dtype for these DataFrames
    is object, the `np.nan` is retained.
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: '### Null-values are no longer coerced to NaN-value in value_counts and mode'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts") and [`Series.mode()`](../reference/api/pandas.Series.mode.html#pandas.Series.mode
    "pandas.Series.mode") no longer coerce `None`, `NaT` and other null-values to
    a NaN-value for `np.object_`-dtype. This behavior is now consistent with `unique`,
    `isin` and others ([GH 42688](https://github.com/pandas-dev/pandas/issues/42688)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: Previously, all null-values were replaced by a NaN-value.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: Now null-values are no longer mangled.
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: '### mangle_dupe_cols in read_csv no longer renames unique columns conflicting
    with target names'
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    no longer renames unique column labels which conflict with the target names of
    duplicated columns. Already existing columns are skipped, i.e. the next available
    index is used for the target column name ([GH 14704](https://github.com/pandas-dev/pandas/issues/14704)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: Previously, the second column was called `a.1`, while the third column was also
    renamed to `a.1.1`.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: Now the renaming checks if `a.1` already exists when changing the name of the
    second column and jumps this index. The second column is instead renamed to `a.2`.
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: '### unstack and pivot_table no longer raises ValueError for result that would
    exceed int32 limit'
  prefs: []
  type: TYPE_NORMAL
- en: Previously [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") and [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") would raise a `ValueError` if the operation could
    produce a result with more than `2**31 - 1` elements. This operation now raises
    a [`errors.PerformanceWarning`](../reference/api/pandas.errors.PerformanceWarning.html#pandas.errors.PerformanceWarning
    "pandas.errors.PerformanceWarning") instead ([GH 26314](https://github.com/pandas-dev/pandas/issues/26314)).
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: '### groupby.apply consistent transform detection'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") are designed to be flexible, allowing
    users to perform aggregations, transformations, filters, and use it with user-defined
    functions that might not fall into any of these categories. As part of this, apply
    will attempt to detect when an operation is a transform, and in such a case, the
    result will have the same index as the input. In order to determine if the operation
    is a transform, pandas compares the input’s index to the result’s and determines
    if it has been mutated. Previously in pandas 1.3, different code paths used different
    definitions of “mutated”: some would use Python’s `is` whereas others would test
    only up to equality.'
  prefs: []
  type: TYPE_NORMAL
- en: This inconsistency has been removed, pandas now tests up to equality.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: In the examples above, the first uses a code path where pandas uses `is` and
    determines that `func` is not a transform whereas the second tests up to equality
    and determines that `func` is a transform. In the first case, the result’s index
    is not the same as the input’s.
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: Now in both cases it is determined that `func` is a transform. In each case,
    the result has the same index as the input.
  prefs: []
  type: TYPE_NORMAL
- en: '## Backwards incompatible API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '### Increased minimum version for Python'
  prefs: []
  type: TYPE_NORMAL
- en: 'pandas 1.4.0 supports Python 3.8 and higher.  ### Increased minimum versions
    for dependencies'
  prefs: []
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated. If installed,
    we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.18.5 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytz | 2020.1 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.8.1 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.3.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.7.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytest (dev) | 6.0 |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| mypy (dev) | 0.930 |  | X |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.8.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.4.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 0.7.4 |  |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 0.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 4.5.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 3.3.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.50.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 3.0.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas-gbq | 0.14.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 1.0.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 0.10.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.6.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 0.4.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.4.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.4.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| tabulate | 0.8.7 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.15.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlrd | 2.0.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 1.2.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlwt | 1.3.0 |  |'
  prefs: []
  type: TYPE_TB
- en: 'See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.  ### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Index.get_indexer_for()`](../reference/api/pandas.Index.get_indexer_for.html#pandas.Index.get_indexer_for
    "pandas.Index.get_indexer_for") no longer accepts keyword arguments (other than
    `target`); in the past these would be silently ignored if the index was not unique
    ([GH 42310](https://github.com/pandas-dev/pandas/issues/42310))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Change in the position of the `min_rows` argument in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") due to change in the docstring ([GH 44304](https://github.com/pandas-dev/pandas/issues/44304))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reduction operations for [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") now raising a `ValueError` when `None` is passed for `skipna`
    ([GH 44178](https://github.com/pandas-dev/pandas/issues/44178))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    and [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html "pandas.read_html")
    no longer raising an error when one of the header rows consists only of `Unnamed:`
    columns ([GH 13054](https://github.com/pandas-dev/pandas/issues/13054))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Changed the `name` attribute of several holidays in `USFederalHolidayCalendar`
    to match [official federal holiday names](https://www.opm.gov/policy-data-oversight/pay-leave/federal-holidays/)
    specifically:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “New Year’s Day” gains the possessive apostrophe
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: “Presidents Day” becomes “Washington’s Birthday”
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: “Martin Luther King Jr. Day” is now “Birthday of Martin Luther King, Jr.”
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: “July 4th” is now “Independence Day”
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: “Thanksgiving” is now “Thanksgiving Day”
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: “Christmas” is now “Christmas Day”
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Added “Juneteenth National Independence Day”  ### Increased minimum version
    for Python'
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: pandas 1.4.0 supports Python 3.8 and higher.
  prefs: []
  type: TYPE_NORMAL
- en: '### Increased minimum versions for dependencies'
  prefs: []
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated. If installed,
    we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.18.5 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytz | 2020.1 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.8.1 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.3.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.7.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytest (dev) | 6.0 |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| mypy (dev) | 0.930 |  | X |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.8.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.4.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 0.7.4 |  |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 0.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 4.5.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 3.3.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.50.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 3.0.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas-gbq | 0.14.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 1.0.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 0.10.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.6.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 0.4.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.4.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.4.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| tabulate | 0.8.7 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.15.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlrd | 2.0.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 1.2.2 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlwt | 1.3.0 |  |'
  prefs: []
  type: TYPE_TB
- en: See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: '### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Index.get_indexer_for()`](../reference/api/pandas.Index.get_indexer_for.html#pandas.Index.get_indexer_for
    "pandas.Index.get_indexer_for") no longer accepts keyword arguments (other than
    `target`); in the past these would be silently ignored if the index was not unique
    ([GH 42310](https://github.com/pandas-dev/pandas/issues/42310))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Change in the position of the `min_rows` argument in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") due to change in the docstring ([GH 44304](https://github.com/pandas-dev/pandas/issues/44304))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reduction operations for [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") now raising a `ValueError` when `None` is passed for `skipna`
    ([GH 44178](https://github.com/pandas-dev/pandas/issues/44178))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    and [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html "pandas.read_html")
    no longer raising an error when one of the header rows consists only of `Unnamed:`
    columns ([GH 13054](https://github.com/pandas-dev/pandas/issues/13054))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Changed the `name` attribute of several holidays in `USFederalHolidayCalendar`
    to match [official federal holiday names](https://www.opm.gov/policy-data-oversight/pay-leave/federal-holidays/)
    specifically:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “New Year’s Day” gains the possessive apostrophe
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: “Presidents Day” becomes “Washington’s Birthday”
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: “Martin Luther King Jr. Day” is now “Birthday of Martin Luther King, Jr.”
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: “July 4th” is now “Independence Day”
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: “Thanksgiving” is now “Thanksgiving Day”
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: “Christmas” is now “Christmas Day”
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Added “Juneteenth National Independence Day”
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: '### Deprecated Int64Index, UInt64Index & Float64Index'
  prefs: []
  type: TYPE_NORMAL
- en: '`Int64Index`, `UInt64Index` and `Float64Index` have been deprecated in favor
    of the base [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    class and will be removed in Pandas 2.0 ([GH 43028](https://github.com/pandas-dev/pandas/issues/43028)).'
  prefs: []
  type: TYPE_NORMAL
- en: 'For constructing a numeric index, you can use the base [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") class instead specifying the data type (which will also work on
    older pandas releases):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: 'For checking the data type of an index object, you can replace `isinstance`
    checks with checking the `dtype`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: Currently, in order to maintain backward compatibility, calls to [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") will continue to return `Int64Index`, `UInt64Index` and `Float64Index`
    when given numeric data, but in the future, an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") will be returned.
  prefs: []
  type: TYPE_NORMAL
- en: '*Current behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: '*Future behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]  ### Deprecated DataFrame.append and Series.append'
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrame.append()` and `Series.append()` have been deprecated and will be
    removed in a future version. Use [`pandas.concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") instead ([GH 35407](https://github.com/pandas-dev/pandas/issues/35407)).'
  prefs: []
  type: TYPE_NORMAL
- en: '*Deprecated syntax*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: '*Recommended syntax*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]  ### Other Deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: Deprecated `Index.is_type_compatible()` ([GH 42113](https://github.com/pandas-dev/pandas/issues/42113))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `method` argument in [`Index.get_loc()`](../reference/api/pandas.Index.get_loc.html#pandas.Index.get_loc
    "pandas.Index.get_loc"), use `index.get_indexer([label], method=...)` instead
    ([GH 42269](https://github.com/pandas-dev/pandas/issues/42269))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated treating integer keys in `Series.__setitem__()` as positional when
    the index is a `Float64Index` not containing the key, a [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") with no entries containing the key, or a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with leading `Float64Index` level not containing the key
    ([GH 33469](https://github.com/pandas-dev/pandas/issues/33469))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated treating `numpy.datetime64` objects as UTC times when passed to the
    [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    constructor along with a timezone. In a future version, these will be treated
    as wall-times. To retain the old behavior, use `Timestamp(dt64).tz_localize("UTC").tz_convert(tz)`
    ([GH 24559](https://github.com/pandas-dev/pandas/issues/24559))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated ignoring missing labels when indexing with a sequence of labels on
    a level of a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 42351](https://github.com/pandas-dev/pandas/issues/42351))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating an empty [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") without a `dtype` will now raise a more visible `FutureWarning`
    instead of a `DeprecationWarning` ([GH 30017](https://github.com/pandas-dev/pandas/issues/30017))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `kind` argument in [`Index.get_slice_bound()`](../reference/api/pandas.Index.get_slice_bound.html#pandas.Index.get_slice_bound
    "pandas.Index.get_slice_bound"), [`Index.slice_indexer()`](../reference/api/pandas.Index.slice_indexer.html#pandas.Index.slice_indexer
    "pandas.Index.slice_indexer"), and [`Index.slice_locs()`](../reference/api/pandas.Index.slice_locs.html#pandas.Index.slice_locs
    "pandas.Index.slice_locs"); in a future version passing `kind` will raise ([GH
    42857](https://github.com/pandas-dev/pandas/issues/42857))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated dropping of nuisance columns in `Rolling`, `Expanding`, and `EWM`
    aggregations ([GH 42738](https://github.com/pandas-dev/pandas/issues/42738))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Index.reindex()`](../reference/api/pandas.Index.reindex.html#pandas.Index.reindex
    "pandas.Index.reindex") with a non-unique [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 42568](https://github.com/pandas-dev/pandas/issues/42568))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Styler.render()` in favor of [`Styler.to_html()`](../reference/api/pandas.io.formats.style.Styler.to_html.html#pandas.io.formats.style.Styler.to_html
    "pandas.io.formats.style.Styler.to_html") ([GH 42140](https://github.com/pandas-dev/pandas/issues/42140))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Styler.hide_index()` and `Styler.hide_columns()` in favor of [`Styler.hide()`](../reference/api/pandas.io.formats.style.Styler.hide.html#pandas.io.formats.style.Styler.hide
    "pandas.io.formats.style.Styler.hide") ([GH 43758](https://github.com/pandas-dev/pandas/issues/43758))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing in a string column label into `times` in [`DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm") ([GH 43265](https://github.com/pandas-dev/pandas/issues/43265))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `include_start` and `include_end` arguments in [`DataFrame.between_time()`](../reference/api/pandas.DataFrame.between_time.html#pandas.DataFrame.between_time
    "pandas.DataFrame.between_time"); in a future version passing `include_start`
    or `include_end` will raise ([GH 40245](https://github.com/pandas-dev/pandas/issues/40245))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `squeeze` argument to [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), and [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"). Users should squeeze the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") afterwards with `.squeeze("columns")` instead ([GH 43242](https://github.com/pandas-dev/pandas/issues/43242))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `index` argument to `SparseArray` construction ([GH 23089](https://github.com/pandas-dev/pandas/issues/23089))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `closed` argument in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") and [`bdate_range()`](../reference/api/pandas.bdate_range.html#pandas.bdate_range
    "pandas.bdate_range") in favor of `inclusive` argument; In a future version passing
    `closed` will raise ([GH 40245](https://github.com/pandas-dev/pandas/issues/40245))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Rolling.validate()`, `Expanding.validate()`, and `ExponentialMovingWindow.validate()`
    ([GH 43665](https://github.com/pandas-dev/pandas/issues/43665))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated silent dropping of columns that raised a `TypeError` in [`Series.transform`](../reference/api/pandas.Series.transform.html#pandas.Series.transform
    "pandas.Series.transform") and [`DataFrame.transform`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform") when used with a dictionary ([GH 43740](https://github.com/pandas-dev/pandas/issues/43740))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated silent dropping of columns that raised a `TypeError`, `DataError`,
    and some cases of `ValueError` in [`Series.aggregate()`](../reference/api/pandas.Series.aggregate.html#pandas.Series.aggregate
    "pandas.Series.aggregate"), [`DataFrame.aggregate()`](../reference/api/pandas.DataFrame.aggregate.html#pandas.DataFrame.aggregate
    "pandas.DataFrame.aggregate"), `Series.groupby.aggregate()`, and `DataFrame.groupby.aggregate()`
    when used with a list ([GH 43740](https://github.com/pandas-dev/pandas/issues/43740))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated casting behavior when setting timezone-aware value(s) into a timezone-aware
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    column when the timezones do not match. Previously this cast to object dtype.
    In a future version, the values being inserted will be converted to the series
    or column’s existing timezone ([GH 37605](https://github.com/pandas-dev/pandas/issues/37605))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated casting behavior when passing an item with mismatched-timezone to
    `DatetimeIndex.insert()`, `DatetimeIndex.putmask()`, `DatetimeIndex.where()` `DatetimeIndex.fillna()`,
    [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask"), [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where"), [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna"), [`Series.shift()`](../reference/api/pandas.Series.shift.html#pandas.Series.shift
    "pandas.Series.shift"), [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace"), [`Series.reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex") (and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") column analogues). In the past this has cast to object `dtype`.
    In a future version, these will cast the passed item to the index or series’s
    timezone ([GH 37605](https://github.com/pandas-dev/pandas/issues/37605), [GH 44940](https://github.com/pandas-dev/pandas/issues/44940))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `prefix` keyword argument in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), in a future version the argument will be removed ([GH 43396](https://github.com/pandas-dev/pandas/issues/43396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing non boolean argument to `sort` in [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") ([GH 41518](https://github.com/pandas-dev/pandas/issues/41518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing arguments as positional for [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf") other than `filepath_or_buffer` ([GH 41485](https://github.com/pandas-dev/pandas/issues/41485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing arguments as positional for [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") other than `path_or_buffer` ([GH 45133](https://github.com/pandas-dev/pandas/issues/45133))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing `skipna=None` for `DataFrame.mad()` and `Series.mad()`, pass
    `skipna=True` instead ([GH 44580](https://github.com/pandas-dev/pandas/issues/44580))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with the string “now” with `utc=False`; in a future version
    this will match `Timestamp("now")`, which in turn matches [`Timestamp.now()`](../reference/api/pandas.Timestamp.now.html#pandas.Timestamp.now
    "pandas.Timestamp.now") returning the local time ([GH 18705](https://github.com/pandas-dev/pandas/issues/18705))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `DateOffset.apply()`, use `offset + other` instead ([GH 44522](https://github.com/pandas-dev/pandas/issues/44522))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated parameter `names` in [`Index.copy()`](../reference/api/pandas.Index.copy.html#pandas.Index.copy
    "pandas.Index.copy") ([GH 44916](https://github.com/pandas-dev/pandas/issues/44916))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A deprecation warning is now shown for [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") indicating the arguments signature may change and
    emulate more the arguments to [`Styler.to_latex()`](../reference/api/pandas.io.formats.style.Styler.to_latex.html#pandas.io.formats.style.Styler.to_latex
    "pandas.io.formats.style.Styler.to_latex") in future versions ([GH 44411](https://github.com/pandas-dev/pandas/issues/44411))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") between objects with bool-dtype and numeric-dtypes; in a future
    version these will cast to object dtype instead of coercing bools to numeric values
    ([GH 39817](https://github.com/pandas-dev/pandas/issues/39817))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Categorical.replace()`, use [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") instead ([GH 44929](https://github.com/pandas-dev/pandas/issues/44929))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing `set` or `dict` as indexer for `DataFrame.loc.__setitem__()`,
    `DataFrame.loc.__getitem__()`, `Series.loc.__setitem__()`, `Series.loc.__getitem__()`,
    `DataFrame.__getitem__()`, `Series.__getitem__()` and `Series.__setitem__()` ([GH
    42825](https://github.com/pandas-dev/pandas/issues/42825))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Index.__getitem__()` with a bool key; use `index.values[key]` to
    get the old behavior ([GH 44051](https://github.com/pandas-dev/pandas/issues/44051))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated downcasting column-by-column in [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") with integer-dtypes ([GH 44597](https://github.com/pandas-dev/pandas/issues/44597))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `DatetimeIndex.union_many()`, use `DatetimeIndex.union()` instead
    ([GH 44091](https://github.com/pandas-dev/pandas/issues/44091))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Groupby.pad()` in favor of `Groupby.ffill()` ([GH 33396](https://github.com/pandas-dev/pandas/issues/33396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Groupby.backfill()` in favor of `Groupby.bfill()` ([GH 33396](https://github.com/pandas-dev/pandas/issues/33396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Resample.pad()` in favor of `Resample.ffill()` ([GH 33396](https://github.com/pandas-dev/pandas/issues/33396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Resample.backfill()` in favor of `Resample.bfill()` ([GH 33396](https://github.com/pandas-dev/pandas/issues/33396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `numeric_only=None` in [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank"); in a future version `numeric_only` must be either `True`
    or `False` (the default) ([GH 45036](https://github.com/pandas-dev/pandas/issues/45036))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`Timestamp.utcfromtimestamp()`](../reference/api/pandas.Timestamp.utcfromtimestamp.html#pandas.Timestamp.utcfromtimestamp
    "pandas.Timestamp.utcfromtimestamp"), in the future it will return a timezone-aware
    UTC [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    ([GH 22451](https://github.com/pandas-dev/pandas/issues/22451))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `NaT.freq()` ([GH 45071](https://github.com/pandas-dev/pandas/issues/45071))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") construction when passed float-dtype data containing `NaN`
    and an integer dtype ignoring the dtype argument; in a future version this will
    raise ([GH 40110](https://github.com/pandas-dev/pandas/issues/40110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deprecated the behaviour of [`Series.to_frame()`](../reference/api/pandas.Series.to_frame.html#pandas.Series.to_frame
    "pandas.Series.to_frame") and [`Index.to_frame()`](../reference/api/pandas.Index.to_frame.html#pandas.Index.to_frame
    "pandas.Index.to_frame") to ignore the `name` argument when `name=None`. Currently,
    this means to preserve the existing name, but in the future explicitly passing
    `name=None` will set `None` as the name of the column in the resulting DataFrame
    ([GH 44212](https://github.com/pandas-dev/pandas/issues/44212))  ### Deprecated
    Int64Index, UInt64Index & Float64Index'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Int64Index`, `UInt64Index` and `Float64Index` have been deprecated in favor
    of the base [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    class and will be removed in Pandas 2.0 ([GH 43028](https://github.com/pandas-dev/pandas/issues/43028)).'
  prefs: []
  type: TYPE_NORMAL
- en: 'For constructing a numeric index, you can use the base [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") class instead specifying the data type (which will also work on
    older pandas releases):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]'
  prefs: []
  type: TYPE_PRE
- en: 'For checking the data type of an index object, you can replace `isinstance`
    checks with checking the `dtype`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]'
  prefs: []
  type: TYPE_PRE
- en: Currently, in order to maintain backward compatibility, calls to [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") will continue to return `Int64Index`, `UInt64Index` and `Float64Index`
    when given numeric data, but in the future, an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") will be returned.
  prefs: []
  type: TYPE_NORMAL
- en: '*Current behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: '*Future behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE93]'
  prefs: []
  type: TYPE_PRE
- en: '### Deprecated DataFrame.append and Series.append'
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrame.append()` and `Series.append()` have been deprecated and will be
    removed in a future version. Use [`pandas.concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") instead ([GH 35407](https://github.com/pandas-dev/pandas/issues/35407)).'
  prefs: []
  type: TYPE_NORMAL
- en: '*Deprecated syntax*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE94]'
  prefs: []
  type: TYPE_PRE
- en: '*Recommended syntax*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: '### Other Deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: Deprecated `Index.is_type_compatible()` ([GH 42113](https://github.com/pandas-dev/pandas/issues/42113))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `method` argument in [`Index.get_loc()`](../reference/api/pandas.Index.get_loc.html#pandas.Index.get_loc
    "pandas.Index.get_loc"), use `index.get_indexer([label], method=...)` instead
    ([GH 42269](https://github.com/pandas-dev/pandas/issues/42269))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated treating integer keys in `Series.__setitem__()` as positional when
    the index is a `Float64Index` not containing the key, a [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") with no entries containing the key, or a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with leading `Float64Index` level not containing the key
    ([GH 33469](https://github.com/pandas-dev/pandas/issues/33469))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated treating `numpy.datetime64` objects as UTC times when passed to the
    [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    constructor along with a timezone. In a future version, these will be treated
    as wall-times. To retain the old behavior, use `Timestamp(dt64).tz_localize("UTC").tz_convert(tz)`
    ([GH 24559](https://github.com/pandas-dev/pandas/issues/24559))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated ignoring missing labels when indexing with a sequence of labels on
    a level of a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 42351](https://github.com/pandas-dev/pandas/issues/42351))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating an empty [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") without a `dtype` will now raise a more visible `FutureWarning`
    instead of a `DeprecationWarning` ([GH 30017](https://github.com/pandas-dev/pandas/issues/30017))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `kind` argument in [`Index.get_slice_bound()`](../reference/api/pandas.Index.get_slice_bound.html#pandas.Index.get_slice_bound
    "pandas.Index.get_slice_bound"), [`Index.slice_indexer()`](../reference/api/pandas.Index.slice_indexer.html#pandas.Index.slice_indexer
    "pandas.Index.slice_indexer"), and [`Index.slice_locs()`](../reference/api/pandas.Index.slice_locs.html#pandas.Index.slice_locs
    "pandas.Index.slice_locs"); in a future version passing `kind` will raise ([GH
    42857](https://github.com/pandas-dev/pandas/issues/42857))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated dropping of nuisance columns in `Rolling`, `Expanding`, and `EWM`
    aggregations ([GH 42738](https://github.com/pandas-dev/pandas/issues/42738))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Index.reindex()`](../reference/api/pandas.Index.reindex.html#pandas.Index.reindex
    "pandas.Index.reindex") with a non-unique [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 42568](https://github.com/pandas-dev/pandas/issues/42568))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Styler.render()` in favor of [`Styler.to_html()`](../reference/api/pandas.io.formats.style.Styler.to_html.html#pandas.io.formats.style.Styler.to_html
    "pandas.io.formats.style.Styler.to_html") ([GH 42140](https://github.com/pandas-dev/pandas/issues/42140))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Styler.hide_index()` and `Styler.hide_columns()` in favor of [`Styler.hide()`](../reference/api/pandas.io.formats.style.Styler.hide.html#pandas.io.formats.style.Styler.hide
    "pandas.io.formats.style.Styler.hide") ([GH 43758](https://github.com/pandas-dev/pandas/issues/43758))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing in a string column label into `times` in [`DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm") ([GH 43265](https://github.com/pandas-dev/pandas/issues/43265))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `include_start` and `include_end` arguments in [`DataFrame.between_time()`](../reference/api/pandas.DataFrame.between_time.html#pandas.DataFrame.between_time
    "pandas.DataFrame.between_time"); in a future version passing `include_start`
    or `include_end` will raise ([GH 40245](https://github.com/pandas-dev/pandas/issues/40245))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `squeeze` argument to [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), and [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"). Users should squeeze the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") afterwards with `.squeeze("columns")` instead ([GH 43242](https://github.com/pandas-dev/pandas/issues/43242))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `index` argument to `SparseArray` construction ([GH 23089](https://github.com/pandas-dev/pandas/issues/23089))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `closed` argument in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") and [`bdate_range()`](../reference/api/pandas.bdate_range.html#pandas.bdate_range
    "pandas.bdate_range") in favor of `inclusive` argument; In a future version passing
    `closed` will raise ([GH 40245](https://github.com/pandas-dev/pandas/issues/40245))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Rolling.validate()`, `Expanding.validate()`, and `ExponentialMovingWindow.validate()`
    ([GH 43665](https://github.com/pandas-dev/pandas/issues/43665))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated silent dropping of columns that raised a `TypeError` in [`Series.transform`](../reference/api/pandas.Series.transform.html#pandas.Series.transform
    "pandas.Series.transform") and [`DataFrame.transform`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform") when used with a dictionary ([GH 43740](https://github.com/pandas-dev/pandas/issues/43740))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated silent dropping of columns that raised a `TypeError`, `DataError`,
    and some cases of `ValueError` in [`Series.aggregate()`](../reference/api/pandas.Series.aggregate.html#pandas.Series.aggregate
    "pandas.Series.aggregate"), [`DataFrame.aggregate()`](../reference/api/pandas.DataFrame.aggregate.html#pandas.DataFrame.aggregate
    "pandas.DataFrame.aggregate"), `Series.groupby.aggregate()`, and `DataFrame.groupby.aggregate()`
    when used with a list ([GH 43740](https://github.com/pandas-dev/pandas/issues/43740))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated casting behavior when setting timezone-aware value(s) into a timezone-aware
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    column when the timezones do not match. Previously this cast to object dtype.
    In a future version, the values being inserted will be converted to the series
    or column’s existing timezone ([GH 37605](https://github.com/pandas-dev/pandas/issues/37605))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated casting behavior when passing an item with mismatched-timezone to
    `DatetimeIndex.insert()`, `DatetimeIndex.putmask()`, `DatetimeIndex.where()` `DatetimeIndex.fillna()`,
    [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask"), [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where"), [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna"), [`Series.shift()`](../reference/api/pandas.Series.shift.html#pandas.Series.shift
    "pandas.Series.shift"), [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace"), [`Series.reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex") (and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") column analogues). In the past this has cast to object `dtype`.
    In a future version, these will cast the passed item to the index or series’s
    timezone ([GH 37605](https://github.com/pandas-dev/pandas/issues/37605), [GH 44940](https://github.com/pandas-dev/pandas/issues/44940))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `prefix` keyword argument in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), in a future version the argument will be removed ([GH 43396](https://github.com/pandas-dev/pandas/issues/43396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing non boolean argument to `sort` in [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") ([GH 41518](https://github.com/pandas-dev/pandas/issues/41518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing arguments as positional for [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf") other than `filepath_or_buffer` ([GH 41485](https://github.com/pandas-dev/pandas/issues/41485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing arguments as positional for [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") other than `path_or_buffer` ([GH 45133](https://github.com/pandas-dev/pandas/issues/45133))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing `skipna=None` for `DataFrame.mad()` and `Series.mad()`, pass
    `skipna=True` instead ([GH 44580](https://github.com/pandas-dev/pandas/issues/44580))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with the string “now” with `utc=False`; in a future version
    this will match `Timestamp("now")`, which in turn matches [`Timestamp.now()`](../reference/api/pandas.Timestamp.now.html#pandas.Timestamp.now
    "pandas.Timestamp.now") returning the local time ([GH 18705](https://github.com/pandas-dev/pandas/issues/18705))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `DateOffset.apply()`, use `offset + other` instead ([GH 44522](https://github.com/pandas-dev/pandas/issues/44522))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated parameter `names` in [`Index.copy()`](../reference/api/pandas.Index.copy.html#pandas.Index.copy
    "pandas.Index.copy") ([GH 44916](https://github.com/pandas-dev/pandas/issues/44916))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A deprecation warning is now shown for [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") indicating the arguments signature may change and
    emulate more the arguments to [`Styler.to_latex()`](../reference/api/pandas.io.formats.style.Styler.to_latex.html#pandas.io.formats.style.Styler.to_latex
    "pandas.io.formats.style.Styler.to_latex") in future versions ([GH 44411](https://github.com/pandas-dev/pandas/issues/44411))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") between objects with bool-dtype and numeric-dtypes; in a future
    version these will cast to object dtype instead of coercing bools to numeric values
    ([GH 39817](https://github.com/pandas-dev/pandas/issues/39817))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Categorical.replace()`, use [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") instead ([GH 44929](https://github.com/pandas-dev/pandas/issues/44929))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing `set` or `dict` as indexer for `DataFrame.loc.__setitem__()`,
    `DataFrame.loc.__getitem__()`, `Series.loc.__setitem__()`, `Series.loc.__getitem__()`,
    `DataFrame.__getitem__()`, `Series.__getitem__()` and `Series.__setitem__()` ([GH
    42825](https://github.com/pandas-dev/pandas/issues/42825))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Index.__getitem__()` with a bool key; use `index.values[key]` to
    get the old behavior ([GH 44051](https://github.com/pandas-dev/pandas/issues/44051))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated downcasting column-by-column in [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") with integer-dtypes ([GH 44597](https://github.com/pandas-dev/pandas/issues/44597))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `DatetimeIndex.union_many()`, use `DatetimeIndex.union()` instead
    ([GH 44091](https://github.com/pandas-dev/pandas/issues/44091))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Groupby.pad()` in favor of `Groupby.ffill()` ([GH 33396](https://github.com/pandas-dev/pandas/issues/33396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Groupby.backfill()` in favor of `Groupby.bfill()` ([GH 33396](https://github.com/pandas-dev/pandas/issues/33396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Resample.pad()` in favor of `Resample.ffill()` ([GH 33396](https://github.com/pandas-dev/pandas/issues/33396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Resample.backfill()` in favor of `Resample.bfill()` ([GH 33396](https://github.com/pandas-dev/pandas/issues/33396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `numeric_only=None` in [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank"); in a future version `numeric_only` must be either `True`
    or `False` (the default) ([GH 45036](https://github.com/pandas-dev/pandas/issues/45036))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`Timestamp.utcfromtimestamp()`](../reference/api/pandas.Timestamp.utcfromtimestamp.html#pandas.Timestamp.utcfromtimestamp
    "pandas.Timestamp.utcfromtimestamp"), in the future it will return a timezone-aware
    UTC [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    ([GH 22451](https://github.com/pandas-dev/pandas/issues/22451))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `NaT.freq()` ([GH 45071](https://github.com/pandas-dev/pandas/issues/45071))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") construction when passed float-dtype data containing `NaN`
    and an integer dtype ignoring the dtype argument; in a future version this will
    raise ([GH 40110](https://github.com/pandas-dev/pandas/issues/40110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behaviour of [`Series.to_frame()`](../reference/api/pandas.Series.to_frame.html#pandas.Series.to_frame
    "pandas.Series.to_frame") and [`Index.to_frame()`](../reference/api/pandas.Index.to_frame.html#pandas.Index.to_frame
    "pandas.Index.to_frame") to ignore the `name` argument when `name=None`. Currently,
    this means to preserve the existing name, but in the future explicitly passing
    `name=None` will set `None` as the name of the column in the resulting DataFrame
    ([GH 44212](https://github.com/pandas-dev/pandas/issues/44212))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Performance improvements'
  prefs: []
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.sample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sample.html#pandas.core.groupby.DataFrameGroupBy.sample
    "pandas.core.groupby.DataFrameGroupBy.sample") and [`SeriesGroupBy.sample()`](../reference/api/pandas.core.groupby.SeriesGroupBy.sample.html#pandas.core.groupby.SeriesGroupBy.sample
    "pandas.core.groupby.SeriesGroupBy.sample"), especially when `weights` argument
    provided ([GH 34483](https://github.com/pandas-dev/pandas/issues/34483))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when converting non-string arrays to string arrays ([GH
    34483](https://github.com/pandas-dev/pandas/issues/34483))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") for user-defined functions ([GH
    41598](https://github.com/pandas-dev/pandas/issues/41598))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in constructing [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects ([GH 42631](https://github.com/pandas-dev/pandas/issues/42631),
    [GH 43142](https://github.com/pandas-dev/pandas/issues/43142), [GH 43147](https://github.com/pandas-dev/pandas/issues/43147),
    [GH 43307](https://github.com/pandas-dev/pandas/issues/43307), [GH 43144](https://github.com/pandas-dev/pandas/issues/43144),
    [GH 44826](https://github.com/pandas-dev/pandas/issues/44826))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.shift()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.shift.html#pandas.core.groupby.DataFrameGroupBy.shift
    "pandas.core.groupby.DataFrameGroupBy.shift") and [`SeriesGroupBy.shift()`](../reference/api/pandas.core.groupby.SeriesGroupBy.shift.html#pandas.core.groupby.SeriesGroupBy.shift
    "pandas.core.groupby.SeriesGroupBy.shift") when `fill_value` argument is provided
    ([GH 26615](https://github.com/pandas-dev/pandas/issues/26615))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr") for `method=pearson` on data without missing values ([GH
    40956](https://github.com/pandas-dev/pandas/issues/40956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in some [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") operations ([GH 42992](https://github.com/pandas-dev/pandas/issues/42992),
    [GH 43578](https://github.com/pandas-dev/pandas/issues/43578))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") ([GH 43059](https://github.com/pandas-dev/pandas/issues/43059),
    [GH 43227](https://github.com/pandas-dev/pandas/issues/43227))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") ([GH 43333](https://github.com/pandas-dev/pandas/issues/43333))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `uint` dtypes ([GH 42606](https://github.com/pandas-dev/pandas/issues/42606))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `infer_datetime_format` set to `True` ([GH 43901](https://github.com/pandas-dev/pandas/issues/43901))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.sparse.to_coo()`](../reference/api/pandas.Series.sparse.to_coo.html#pandas.Series.sparse.to_coo
    "pandas.Series.sparse.to_coo") ([GH 42880](https://github.com/pandas-dev/pandas/issues/42880))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in indexing with a `UInt64Index` ([GH 43862](https://github.com/pandas-dev/pandas/issues/43862))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in indexing with a `Float64Index` ([GH 43705](https://github.com/pandas-dev/pandas/issues/43705))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in indexing with a non-unique [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 43792](https://github.com/pandas-dev/pandas/issues/43792))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in indexing with a listlike indexer on a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 43370](https://github.com/pandas-dev/pandas/issues/43370))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in indexing with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") indexer on another [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 43370](https://github.com/pandas-dev/pandas/issues/43370))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile") ([GH 43469](https://github.com/pandas-dev/pandas/issues/43469),
    [GH 43725](https://github.com/pandas-dev/pandas/issues/43725))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.count()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.count.html#pandas.core.groupby.DataFrameGroupBy.count
    "pandas.core.groupby.DataFrameGroupBy.count") and [`SeriesGroupBy.count()`](../reference/api/pandas.core.groupby.SeriesGroupBy.count.html#pandas.core.groupby.SeriesGroupBy.count
    "pandas.core.groupby.SeriesGroupBy.count") ([GH 43730](https://github.com/pandas-dev/pandas/issues/43730),
    [GH 43694](https://github.com/pandas-dev/pandas/issues/43694))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.any()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any"), [`SeriesGroupBy.any()`](../reference/api/pandas.core.groupby.SeriesGroupBy.any.html#pandas.core.groupby.SeriesGroupBy.any
    "pandas.core.groupby.SeriesGroupBy.any"), [`DataFrameGroupBy.all()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all"), and [`SeriesGroupBy.all()`](../reference/api/pandas.core.groupby.SeriesGroupBy.all.html#pandas.core.groupby.SeriesGroupBy.all
    "pandas.core.groupby.SeriesGroupBy.all") ([GH 43675](https://github.com/pandas-dev/pandas/issues/43675),
    [GH 42841](https://github.com/pandas-dev/pandas/issues/42841))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.std()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.std.html#pandas.core.groupby.DataFrameGroupBy.std
    "pandas.core.groupby.DataFrameGroupBy.std") and [`SeriesGroupBy.std()`](../reference/api/pandas.core.groupby.SeriesGroupBy.std.html#pandas.core.groupby.SeriesGroupBy.std
    "pandas.core.groupby.SeriesGroupBy.std") ([GH 43115](https://github.com/pandas-dev/pandas/issues/43115),
    [GH 43576](https://github.com/pandas-dev/pandas/issues/43576))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.cumsum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum") and [`SeriesGroupBy.cumsum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.cumsum.html#pandas.core.groupby.SeriesGroupBy.cumsum
    "pandas.core.groupby.SeriesGroupBy.cumsum") ([GH 43309](https://github.com/pandas-dev/pandas/issues/43309))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SparseArray.min()` and `SparseArray.max()` no longer require converting to
    a dense array ([GH 43526](https://github.com/pandas-dev/pandas/issues/43526))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing into a `SparseArray` with a `slice` with `step=1` no longer requires
    converting to a dense array ([GH 43777](https://github.com/pandas-dev/pandas/issues/43777))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `SparseArray.take()` with `allow_fill=False` ([GH
    43654](https://github.com/pandas-dev/pandas/issues/43654))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Rolling.mean()`](../reference/api/pandas.core.window.rolling.Rolling.mean.html#pandas.core.window.rolling.Rolling.mean
    "pandas.core.window.rolling.Rolling.mean"), [`Expanding.mean()`](../reference/api/pandas.core.window.expanding.Expanding.mean.html#pandas.core.window.expanding.Expanding.mean
    "pandas.core.window.expanding.Expanding.mean"), [`Rolling.sum()`](../reference/api/pandas.core.window.rolling.Rolling.sum.html#pandas.core.window.rolling.Rolling.sum
    "pandas.core.window.rolling.Rolling.sum"), [`Expanding.sum()`](../reference/api/pandas.core.window.expanding.Expanding.sum.html#pandas.core.window.expanding.Expanding.sum
    "pandas.core.window.expanding.Expanding.sum"), [`Rolling.max()`](../reference/api/pandas.core.window.rolling.Rolling.max.html#pandas.core.window.rolling.Rolling.max
    "pandas.core.window.rolling.Rolling.max"), [`Expanding.max()`](../reference/api/pandas.core.window.expanding.Expanding.max.html#pandas.core.window.expanding.Expanding.max
    "pandas.core.window.expanding.Expanding.max"), [`Rolling.min()`](../reference/api/pandas.core.window.rolling.Rolling.min.html#pandas.core.window.rolling.Rolling.min
    "pandas.core.window.rolling.Rolling.min") and [`Expanding.min()`](../reference/api/pandas.core.window.expanding.Expanding.min.html#pandas.core.window.expanding.Expanding.min
    "pandas.core.window.expanding.Expanding.min") with `engine="numba"` ([GH 43612](https://github.com/pandas-dev/pandas/issues/43612),
    [GH 44176](https://github.com/pandas-dev/pandas/issues/44176), [GH 45170](https://github.com/pandas-dev/pandas/issues/45170))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`pandas.read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `memory_map=True` when file encoding is UTF-8 ([GH 43787](https://github.com/pandas-dev/pandas/issues/43787))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `RangeIndex.sort_values()` overriding [`Index.sort_values()`](../reference/api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values") ([GH 43666](https://github.com/pandas-dev/pandas/issues/43666))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `RangeIndex.insert()` ([GH 43988](https://github.com/pandas-dev/pandas/issues/43988))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Index.insert()`](../reference/api/pandas.Index.insert.html#pandas.Index.insert
    "pandas.Index.insert") ([GH 43953](https://github.com/pandas-dev/pandas/issues/43953))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `DatetimeIndex.tolist()` ([GH 43823](https://github.com/pandas-dev/pandas/issues/43823))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `DatetimeIndex.union()` ([GH 42353](https://github.com/pandas-dev/pandas/issues/42353))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.nsmallest()`](../reference/api/pandas.Series.nsmallest.html#pandas.Series.nsmallest
    "pandas.Series.nsmallest") ([GH 43696](https://github.com/pandas-dev/pandas/issues/43696))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.insert()`](../reference/api/pandas.DataFrame.insert.html#pandas.DataFrame.insert
    "pandas.DataFrame.insert") ([GH 42998](https://github.com/pandas-dev/pandas/issues/42998))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") ([GH 43683](https://github.com/pandas-dev/pandas/issues/43683))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") ([GH 43316](https://github.com/pandas-dev/pandas/issues/43316))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.values()`](../reference/api/pandas.DataFrame.values.html#pandas.DataFrame.values
    "pandas.DataFrame.values") ([GH 43160](https://github.com/pandas-dev/pandas/issues/43160))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.select_dtypes()`](../reference/api/pandas.DataFrame.select_dtypes.html#pandas.DataFrame.select_dtypes
    "pandas.DataFrame.select_dtypes") ([GH 42611](https://github.com/pandas-dev/pandas/issues/42611))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") reductions ([GH 43185](https://github.com/pandas-dev/pandas/issues/43185),
    [GH 43243](https://github.com/pandas-dev/pandas/issues/43243), [GH 43311](https://github.com/pandas-dev/pandas/issues/43311),
    [GH 43609](https://github.com/pandas-dev/pandas/issues/43609))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack") and [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") ([GH 43335](https://github.com/pandas-dev/pandas/issues/43335),
    [GH 43352](https://github.com/pandas-dev/pandas/issues/43352), [GH 42704](https://github.com/pandas-dev/pandas/issues/42704),
    [GH 43025](https://github.com/pandas-dev/pandas/issues/43025))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.to_frame()`](../reference/api/pandas.Series.to_frame.html#pandas.Series.to_frame
    "pandas.Series.to_frame") ([GH 43558](https://github.com/pandas-dev/pandas/issues/43558))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `Series.mad()` ([GH 43010](https://github.com/pandas-dev/pandas/issues/43010))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") ([GH 43332](https://github.com/pandas-dev/pandas/issues/43332))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `to_csv()` when index column is a datetime and is
    formatted ([GH 39413](https://github.com/pandas-dev/pandas/issues/39413))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `to_csv()` when [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") contains a lot of unused levels ([GH 37484](https://github.com/pandas-dev/pandas/issues/37484))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when `index_col` was set with a numeric column ([GH 44158](https://github.com/pandas-dev/pandas/issues/44158))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") ([GH 43354](https://github.com/pandas-dev/pandas/issues/43354))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `SparseArray.__getitem__()` ([GH 23122](https://github.com/pandas-dev/pandas/issues/23122))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in constructing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from array-like objects like a `Pytorch` tensor ([GH 44616](https://github.com/pandas-dev/pandas/issues/44616))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Bug fixes'
  prefs: []
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in setting dtype-incompatible values into a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") (or `Series` or `DataFrame` backed by `Categorical`) raising
    `ValueError` instead of `TypeError` ([GH 41919](https://github.com/pandas-dev/pandas/issues/41919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.searchsorted()` when passing a dtype-incompatible value
    raising `KeyError` instead of `TypeError` ([GH 41919](https://github.com/pandas-dev/pandas/issues/41919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.astype()` casting datetimes and [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") to int for dtype `object` ([GH 44930](https://github.com/pandas-dev/pandas/issues/44930))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") with `CategoricalDtype` when passing a dtype-incompatible
    value raising `ValueError` instead of `TypeError` ([GH 41919](https://github.com/pandas-dev/pandas/issues/41919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.fillna()` when passing a dtype-incompatible value raising
    `ValueError` instead of `TypeError` ([GH 41919](https://github.com/pandas-dev/pandas/issues/41919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.fillna()` with a tuple-like category raising `ValueError`
    instead of `TypeError` when filling with a non-category tuple ([GH 41919](https://github.com/pandas-dev/pandas/issues/41919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor unnecessarily copying non-datetimelike 2D object
    arrays ([GH 39272](https://github.com/pandas-dev/pandas/issues/39272))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `format` and `pandas.NA` was raising `ValueError` ([GH
    42957](https://github.com/pandas-dev/pandas/issues/42957))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") would silently swap `MM/DD/YYYY` and `DD/MM/YYYY` formats
    if the given `dayfirst` option could not be respected - now, a warning is raised
    in the case of delimited date strings (e.g. `31-12-2012`) ([GH 12585](https://github.com/pandas-dev/pandas/issues/12585))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") and [`bdate_range()`](../reference/api/pandas.bdate_range.html#pandas.bdate_range
    "pandas.bdate_range") do not return right bound when `start` = `end` and set is
    closed on one side ([GH 43394](https://github.com/pandas-dev/pandas/issues/43394))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in inplace addition and subtraction of [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") or [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") with `DatetimeArray` or `TimedeltaArray` ([GH 43904](https://github.com/pandas-dev/pandas/issues/43904))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in calling `np.isnan`, `np.isfinite`, or `np.isinf` on a timezone-aware
    [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") incorrectly raising `TypeError` ([GH 43917](https://github.com/pandas-dev/pandas/issues/43917))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") from datetime-like strings with mixed timezones incorrectly partially-inferring
    datetime values ([GH 40111](https://github.com/pandas-dev/pandas/issues/40111))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in addition of a `Tick` object and a `np.timedelta64` object incorrectly
    raising instead of returning [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") ([GH 44474](https://github.com/pandas-dev/pandas/issues/44474))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`np.maximum.reduce` and `np.minimum.reduce` now correctly return [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") and [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") objects when operating on [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), or [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with `datetime64[ns]` or `timedelta64[ns]` dtype ([GH 43923](https://github.com/pandas-dev/pandas/issues/43923))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in adding a `np.timedelta64` object to a `BusinessDay` or `CustomBusinessDay`
    object incorrectly raising ([GH 44532](https://github.com/pandas-dev/pandas/issues/44532))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.insert()`](../reference/api/pandas.Index.insert.html#pandas.Index.insert
    "pandas.Index.insert") for inserting `np.datetime64`, `np.timedelta64` or `tuple`
    into [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    with `dtype='object'` with negative loc adding `None` and replacing existing value
    ([GH 44509](https://github.com/pandas-dev/pandas/issues/44509))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.to_pydatetime()`](../reference/api/pandas.Timestamp.to_pydatetime.html#pandas.Timestamp.to_pydatetime
    "pandas.Timestamp.to_pydatetime") failing to retain the `fold` attribute ([GH
    45087](https://github.com/pandas-dev/pandas/issues/45087))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.mode()`](../reference/api/pandas.Series.mode.html#pandas.Series.mode
    "pandas.Series.mode") with `DatetimeTZDtype` incorrectly returning timezone-naive
    and `PeriodDtype` incorrectly raising ([GH 41927](https://github.com/pandas-dev/pandas/issues/41927))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex") raising an error when using an incompatible fill value
    with a datetime-like dtype (or not raising a deprecation warning for using a `datetime.date`
    as fill value) ([GH 42921](https://github.com/pandas-dev/pandas/issues/42921))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DateOffset` addition with [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") where `offset.nanoseconds` would not be included in the result
    ([GH 43968](https://github.com/pandas-dev/pandas/issues/43968), [GH 36589](https://github.com/pandas-dev/pandas/issues/36589))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.fromtimestamp()`](../reference/api/pandas.Timestamp.fromtimestamp.html#pandas.Timestamp.fromtimestamp
    "pandas.Timestamp.fromtimestamp") not supporting the `tz` argument ([GH 45083](https://github.com/pandas-dev/pandas/issues/45083))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") construction from dict of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with mismatched index dtypes sometimes raising depending on the
    ordering of the passed dict ([GH 44091](https://github.com/pandas-dev/pandas/issues/44091))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") hashing during some DST transitions caused a segmentation
    fault ([GH 33931](https://github.com/pandas-dev/pandas/issues/33931) and [GH 40817](https://github.com/pandas-dev/pandas/issues/40817))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in division of all-`NaT` `TimeDeltaIndex`, [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") column with object-dtype array like of numbers failing to
    infer the result as timedelta64-dtype ([GH 39750](https://github.com/pandas-dev/pandas/issues/39750))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in floor division of `timedelta64[ns]` data with a scalar returning garbage
    values ([GH 44466](https://github.com/pandas-dev/pandas/issues/44466))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") now properly taking into account any nanoseconds contribution
    of any kwarg ([GH 43764](https://github.com/pandas-dev/pandas/issues/43764), [GH
    45227](https://github.com/pandas-dev/pandas/issues/45227))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Time Zones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `infer_datetime_format=True` failing to parse zero
    UTC offset (`Z`) correctly ([GH 41047](https://github.com/pandas-dev/pandas/issues/41047))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.dt.tz_convert()`](../reference/api/pandas.Series.dt.tz_convert.html#pandas.Series.dt.tz_convert
    "pandas.Series.dt.tz_convert") resetting index in a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 43080](https://github.com/pandas-dev/pandas/issues/43080))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timestamp` and `DatetimeIndex` incorrectly raising a `TypeError` when
    subtracting two timezone-aware objects with mismatched timezones ([GH 31793](https://github.com/pandas-dev/pandas/issues/31793))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in floor-dividing a list or tuple of integers by a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") incorrectly raising ([GH 44674](https://github.com/pandas-dev/pandas/issues/44674))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank") raising `ValueError` with `object` columns and `method="first"`
    ([GH 41931](https://github.com/pandas-dev/pandas/issues/41931))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank") treating missing values and extreme values as equal (for
    example `np.nan` and `np.inf`), causing incorrect results when `na_option="bottom"`
    or `na_option="top` used ([GH 41931](https://github.com/pandas-dev/pandas/issues/41931))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `numexpr` engine still being used when the option `compute.use_numexpr`
    is set to `False` ([GH 32556](https://github.com/pandas-dev/pandas/issues/32556))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") arithmetic ops with a subclass whose `_constructor()` attribute
    is a callable other than the subclass itself ([GH 43201](https://github.com/pandas-dev/pandas/issues/43201))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in arithmetic operations involving [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") where the result would have the incorrect `name` ([GH 43962](https://github.com/pandas-dev/pandas/issues/43962))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in arithmetic operations involving [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") where the result could have the incorrect `name` when the operands
    having matching NA or matching tuple names ([GH 44459](https://github.com/pandas-dev/pandas/issues/44459))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in division with `IntegerDtype` or `BooleanDtype` array and NA scalar incorrectly
    raising ([GH 44685](https://github.com/pandas-dev/pandas/issues/44685))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in multiplying a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `FloatingDtype` with a timedelta-like scalar incorrectly
    raising ([GH 44772](https://github.com/pandas-dev/pandas/issues/44772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `UInt64Index` constructor when passing a list containing both positive
    integers small enough to cast to int64 and integers too large to hold in int64
    ([GH 42201](https://github.com/pandas-dev/pandas/issues/42201))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor returning 0 for missing values with dtype `int64` and `False` for
    dtype `bool` ([GH 43017](https://github.com/pandas-dev/pandas/issues/43017), [GH
    43018](https://github.com/pandas-dev/pandas/issues/43018))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from a `PandasArray` containing [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") objects behaving differently than an equivalent `np.ndarray`
    ([GH 43986](https://github.com/pandas-dev/pandas/issues/43986))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntegerDtype` not allowing coercion from string dtype ([GH 25472](https://github.com/pandas-dev/pandas/issues/25472))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `arg:xr.DataArray` and `unit="ns"` specified raises
    `TypeError` ([GH 44053](https://github.com/pandas-dev/pandas/issues/44053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.convert_dtypes()`](../reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes
    "pandas.DataFrame.convert_dtypes") not returning the correct type when a subclass
    does not overload `_constructor_sliced()` ([GH 43201](https://github.com/pandas-dev/pandas/issues/43201))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") not propagating `attrs` from the original [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 44414](https://github.com/pandas-dev/pandas/issues/44414))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.convert_dtypes()`](../reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes
    "pandas.DataFrame.convert_dtypes") result losing `columns.names` ([GH 41435](https://github.com/pandas-dev/pandas/issues/41435))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a `IntegerArray` from pyarrow data failing to validate dtypes
    ([GH 44891](https://github.com/pandas-dev/pandas/issues/44891))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") not allowing converting from a `PeriodDtype` to `datetime64`
    dtype, inconsistent with the [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") behavior ([GH 45038](https://github.com/pandas-dev/pandas/issues/45038))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in checking for `string[pyarrow]` dtype incorrectly raising an `ImportError`
    when pyarrow is not installed ([GH 44276](https://github.com/pandas-dev/pandas/issues/44276))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") with `IntervalDtype` incorrectly raising when the `where`
    call should not replace anything ([GH 44181](https://github.com/pandas-dev/pandas/issues/44181))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.rename()`](../reference/api/pandas.Series.rename.html#pandas.Series.rename
    "pandas.Series.rename") with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and `level` is provided ([GH 43659](https://github.com/pandas-dev/pandas/issues/43659))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.truncate()`](../reference/api/pandas.DataFrame.truncate.html#pandas.DataFrame.truncate
    "pandas.DataFrame.truncate") and [`Series.truncate()`](../reference/api/pandas.Series.truncate.html#pandas.Series.truncate
    "pandas.Series.truncate") when the object’s [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") has a length greater than one but only one unique value ([GH 42365](https://github.com/pandas-dev/pandas/issues/42365))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") and [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") when indexing with a tuple in which one of the levels is
    also a tuple ([GH 27591](https://github.com/pandas-dev/pandas/issues/27591))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") whose first level contains only `np.nan` values ([GH 42055](https://github.com/pandas-dev/pandas/issues/42055))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") when passing a string, the return type depended on whether
    the index was monotonic ([GH 24892](https://github.com/pandas-dev/pandas/issues/24892))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") failing to drop scalar levels when the indexer is a tuple
    containing a datetime-like string ([GH 42476](https://github.com/pandas-dev/pandas/issues/42476))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") and [`Series.sort_values()`](../reference/api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values") when passing an ascending value, failed to raise
    or incorrectly raising `ValueError` ([GH 41634](https://github.com/pandas-dev/pandas/issues/41634))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in updating values of [`pandas.Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") using boolean index, created by using [`pandas.DataFrame.pop()`](../reference/api/pandas.DataFrame.pop.html#pandas.DataFrame.pop
    "pandas.DataFrame.pop") ([GH 42530](https://github.com/pandas-dev/pandas/issues/42530))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.get_indexer_non_unique()`](../reference/api/pandas.Index.get_indexer_non_unique.html#pandas.Index.get_indexer_non_unique
    "pandas.Index.get_indexer_non_unique") when index contains multiple `np.nan` ([GH
    35392](https://github.com/pandas-dev/pandas/issues/35392))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") did not handle the degree sign in a backticked column
    name, such as `Temp(°C)`, used in an expression to query a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 42826](https://github.com/pandas-dev/pandas/issues/42826))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") where the error message did not show missing labels with
    commas when raising `KeyError` ([GH 42881](https://github.com/pandas-dev/pandas/issues/42881))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") where method calls in query strings led to errors when
    the `numexpr` package was installed ([GH 22435](https://github.com/pandas-dev/pandas/issues/22435))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.nlargest()`](../reference/api/pandas.DataFrame.nlargest.html#pandas.DataFrame.nlargest
    "pandas.DataFrame.nlargest") and [`Series.nlargest()`](../reference/api/pandas.Series.nlargest.html#pandas.Series.nlargest
    "pandas.Series.nlargest") where sorted result did not count indexes containing
    `np.nan` ([GH 28984](https://github.com/pandas-dev/pandas/issues/28984))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on a non-unique object-dtype [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with an NA scalar (e.g. `np.nan`) ([GH 43711](https://github.com/pandas-dev/pandas/issues/43711))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` incorrectly writing into an existing column’s
    array rather than setting a new array when the new dtype and the old dtype match
    ([GH 43406](https://github.com/pandas-dev/pandas/issues/43406))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting floating-dtype values into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with integer dtype failing to set inplace when those values can
    be losslessly converted to integers ([GH 44316](https://github.com/pandas-dev/pandas/issues/44316))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` with object dtype when setting an array with matching
    size and dtype=’datetime64[ns]’ or dtype=’timedelta64[ns]’ incorrectly converting
    the datetime/timedeltas to integers ([GH 43868](https://github.com/pandas-dev/pandas/issues/43868))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index") where `ignore_index=True` was not being respected
    when the index was already sorted ([GH 43591](https://github.com/pandas-dev/pandas/issues/43591))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.get_indexer_non_unique()`](../reference/api/pandas.Index.get_indexer_non_unique.html#pandas.Index.get_indexer_non_unique
    "pandas.Index.get_indexer_non_unique") when index contains multiple `np.datetime64("NaT")`
    and `np.timedelta64("NaT")` ([GH 43869](https://github.com/pandas-dev/pandas/issues/43869))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting a scalar [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") value into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `IntervalDtype` when the scalar’s sides are floats and the
    values’ sides are integers ([GH 44201](https://github.com/pandas-dev/pandas/issues/44201))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when setting string-backed [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") values that can be parsed to datetimes into a `DatetimeArray`
    or [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    column backed by `DatetimeArray` failing to parse these strings ([GH 44236](https://github.com/pandas-dev/pandas/issues/44236))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` with an integer dtype other than `int64` setting
    with a `range` object unnecessarily upcasting to `int64` ([GH 44261](https://github.com/pandas-dev/pandas/issues/44261))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` with a boolean mask indexer setting a listlike
    value of length 1 incorrectly broadcasting that value ([GH 44265](https://github.com/pandas-dev/pandas/issues/44265))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index") not ignoring `name` argument when `drop` and `inplace`
    are set to `True` ([GH 44575](https://github.com/pandas-dev/pandas/issues/44575))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc.__setitem__()` and `DataFrame.iloc.__setitem__()` with
    mixed dtypes sometimes failing to operate in-place ([GH 44345](https://github.com/pandas-dev/pandas/issues/44345))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc.__getitem__()` incorrectly raising `KeyError` when selecting
    a single column with a boolean key ([GH 44322](https://github.com/pandas-dev/pandas/issues/44322)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") with a single `ExtensionDtype` column and setting 2D
    values e.g. `df.iloc[:] = df.values` incorrectly raising ([GH 44514](https://github.com/pandas-dev/pandas/issues/44514))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting values with [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") with a single `ExtensionDtype` column and a tuple of
    arrays as the indexer ([GH 44703](https://github.com/pandas-dev/pandas/issues/44703))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on columns with `loc` or `iloc` using a slice with a negative
    step with `ExtensionDtype` columns incorrectly raising ([GH 44551](https://github.com/pandas-dev/pandas/issues/44551))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc.__setitem__()` changing dtype when indexer was completely
    `False` ([GH 37550](https://github.com/pandas-dev/pandas/issues/37550))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.get_indexer_non_unique()` returning boolean mask instead
    of array of integers for a non unique and non monotonic index ([GH 44084](https://github.com/pandas-dev/pandas/issues/44084))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.get_indexer_non_unique()` not handling targets of `dtype`
    ‘object’ with NaNs correctly ([GH 44482](https://github.com/pandas-dev/pandas/issues/44482))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression where a single column `np.matrix` was no longer coerced to
    a 1d `np.ndarray` when added to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 42376](https://github.com/pandas-dev/pandas/issues/42376))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__getitem__()` with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") of integers treating lists of integers as positional
    indexers, inconsistent with the behavior with a single scalar integer ([GH 15470](https://github.com/pandas-dev/pandas/issues/15470),
    [GH 14865](https://github.com/pandas-dev/pandas/issues/14865))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` when setting floats or integers into integer-dtype
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    failing to upcast when necessary to retain precision ([GH 45121](https://github.com/pandas-dev/pandas/issues/45121))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.iloc.__setitem__()` ignores axis argument ([GH 45032](https://github.com/pandas-dev/pandas/issues/45032))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") with `limit` and no `method` ignores `axis='columns'`
    or `axis = 1` ([GH 40989](https://github.com/pandas-dev/pandas/issues/40989),
    [GH 17399](https://github.com/pandas-dev/pandas/issues/17399))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") not replacing missing values when using a dict-like
    `value` and duplicate column names ([GH 43476](https://github.com/pandas-dev/pandas/issues/43476))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a dictionary `np.datetime64` as a value and `dtype='timedelta64[ns]'`,
    or vice-versa, incorrectly casting instead of raising ([GH 44428](https://github.com/pandas-dev/pandas/issues/44428))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") with `inplace=True` not writing to the underlying
    array(s) in-place ([GH 44749](https://github.com/pandas-dev/pandas/issues/44749))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.fillna()`](../reference/api/pandas.Index.fillna.html#pandas.Index.fillna
    "pandas.Index.fillna") incorrectly returning an unfilled [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") when NA values are present and `downcast` argument is specified.
    This now raises `NotImplementedError` instead; do not pass `downcast` argument
    ([GH 44873](https://github.com/pandas-dev/pandas/issues/44873))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") changing [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") even if no entries were dropped ([GH 41965](https://github.com/pandas-dev/pandas/issues/41965))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") with an object-dtype incorrectly ignoring `downcast="infer"`
    ([GH 44241](https://github.com/pandas-dev/pandas/issues/44241))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") where the first level is a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and a string key is passed ([GH 42465](https://github.com/pandas-dev/pandas/issues/42465))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.reindex()` when passing a `level` that corresponds to an
    `ExtensionDtype` level ([GH 42043](https://github.com/pandas-dev/pandas/issues/42043))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") raising `TypeError` instead of `KeyError` on nested
    tuple ([GH 42440](https://github.com/pandas-dev/pandas/issues/42440))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.union()` setting wrong `sortorder` causing errors in subsequent
    indexing operations with slices ([GH 44752](https://github.com/pandas-dev/pandas/issues/44752))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.putmask()` where the other value was also a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 43212](https://github.com/pandas-dev/pandas/issues/43212))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.dtypes()`](../reference/api/pandas.MultiIndex.dtypes.html#pandas.MultiIndex.dtypes
    "pandas.MultiIndex.dtypes") duplicate level names returned only one dtype per
    name ([GH 45174](https://github.com/pandas-dev/pandas/issues/45174))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I/O
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") attempting to read chart sheets from .xlsx files ([GH 41448](https://github.com/pandas-dev/pandas/issues/41448))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") where `errors=ignore` could fail to ignore missing values
    of `meta` when `record_path` has a length greater than one ([GH 41876](https://github.com/pandas-dev/pandas/issues/41876))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with multi-header input and arguments referencing column names
    as tuples ([GH 42446](https://github.com/pandas-dev/pandas/issues/42446))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf"), where difference in lengths of `colspecs` and `names` was
    not raising `ValueError` ([GH 40830](https://github.com/pandas-dev/pandas/issues/40830))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.to_json()`](../reference/api/pandas.Series.to_json.html#pandas.Series.to_json
    "pandas.Series.to_json") and [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") where some attributes were skipped when serializing
    plain Python objects to JSON ([GH 42768](https://github.com/pandas-dev/pandas/issues/42768),
    [GH 33043](https://github.com/pandas-dev/pandas/issues/33043))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Column headers are dropped when constructing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from a sqlalchemy’s `Row` object ([GH 40682](https://github.com/pandas-dev/pandas/issues/40682))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in unpickling an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with object dtype incorrectly inferring numeric dtypes ([GH 43188](https://github.com/pandas-dev/pandas/issues/43188))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where reading multi-header input with unequal lengths incorrectly
    raised `IndexError` ([GH 43102](https://github.com/pandas-dev/pandas/issues/43102))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") raising `ParserError` when reading file in chunks and some
    chunk blocks have fewer columns than header for `engine="c"` ([GH 21211](https://github.com/pandas-dev/pandas/issues/21211))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), changed exception class when expecting a file path name or
    file-like object from `OSError` to `TypeError` ([GH 43366](https://github.com/pandas-dev/pandas/issues/43366))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf") ignoring all `skiprows` except first when `nrows` is specified
    for `engine='python'` ([GH 44021](https://github.com/pandas-dev/pandas/issues/44021),
    [GH 10261](https://github.com/pandas-dev/pandas/issues/10261))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") keeping the original column in object format when `keep_date_col=True`
    is set ([GH 13378](https://github.com/pandas-dev/pandas/issues/13378))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") not handling non-numpy dtypes correctly (especially `category`)
    ([GH 21892](https://github.com/pandas-dev/pandas/issues/21892), [GH 33205](https://github.com/pandas-dev/pandas/issues/33205))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") where multi-character `sep` parameter is incorrectly
    prefixed to every key ([GH 43831](https://github.com/pandas-dev/pandas/issues/43831))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") where reading data with missing multi-level metadata
    would not respect `errors="ignore"` ([GH 44312](https://github.com/pandas-dev/pandas/issues/44312))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") used second row to guess implicit index if `header` was set
    to `None` for `engine="python"` ([GH 22144](https://github.com/pandas-dev/pandas/issues/22144))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not recognizing bad lines when `names` were given for `engine="c"`
    ([GH 22144](https://github.com/pandas-dev/pandas/issues/22144))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `float_precision="round_trip"` which did not skip initial/trailing
    whitespace ([GH 43713](https://github.com/pandas-dev/pandas/issues/43713))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug when Python is built without the lzma module: a warning was raised at the
    pandas import time, even if the lzma capability isn’t used ([GH 43495](https://github.com/pandas-dev/pandas/issues/43495))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not applying dtype for `index_col` ([GH 9435](https://github.com/pandas-dev/pandas/issues/9435))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in dumping/loading a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `yaml.dump(frame)` ([GH 42748](https://github.com/pandas-dev/pandas/issues/42748))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") raising `ValueError` when `names` was longer than `header`
    but equal to data rows for `engine="python"` ([GH 38453](https://github.com/pandas-dev/pandas/issues/38453))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter"), where `engine_kwargs` were not passed through to all engines
    ([GH 43442](https://github.com/pandas-dev/pandas/issues/43442))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") raising `ValueError` when `parse_dates` was used with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") columns ([GH 8991](https://github.com/pandas-dev/pandas/issues/8991))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not raising an `ValueError` when `\n` was specified as `delimiter`
    or `sep` which conflicts with `lineterminator` ([GH 43528](https://github.com/pandas-dev/pandas/issues/43528))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `to_csv()` converting datetimes in categorical [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") to integers ([GH 40754](https://github.com/pandas-dev/pandas/issues/40754))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") converting columns to numeric after date parsing failed ([GH
    11019](https://github.com/pandas-dev/pandas/issues/11019))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not replacing `NaN` values with `np.nan` before attempting
    date conversion ([GH 26203](https://github.com/pandas-dev/pandas/issues/26203))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") raising `AttributeError` when attempting to read a .csv file
    and infer index column dtype from an nullable integer type ([GH 44079](https://github.com/pandas-dev/pandas/issues/44079))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `to_csv()` always coercing datetime columns with different formats to
    the same format ([GH 21734](https://github.com/pandas-dev/pandas/issues/21734))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") and [`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv") with `compression` set to `''zip''` no longer create a
    zip file containing a file ending with “.zip”. Instead, they try to infer the
    inner file name more smartly ([GH 39465](https://github.com/pandas-dev/pandas/issues/39465))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where reading a mixed column of booleans and missing values
    to a float type results in the missing values becoming 1.0 rather than NaN ([GH
    42808](https://github.com/pandas-dev/pandas/issues/42808), [GH 34120](https://github.com/pandas-dev/pandas/issues/34120))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `to_xml()` raising error for `pd.NA` with extension array dtype ([GH
    43903](https://github.com/pandas-dev/pandas/issues/43903))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when passing simultaneously a parser in `date_parser` and `parse_dates=False`,
    the parsing was still called ([GH 44366](https://github.com/pandas-dev/pandas/issues/44366))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not setting name of [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") columns correctly when `index_col` is not the first column
    ([GH 38549](https://github.com/pandas-dev/pandas/issues/38549))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") silently ignoring errors when failing to create a memory-mapped
    file ([GH 44766](https://github.com/pandas-dev/pandas/issues/44766))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when passing a `tempfile.SpooledTemporaryFile` opened in binary
    mode ([GH 44748](https://github.com/pandas-dev/pandas/issues/44748))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") raising `ValueError` when attempting to parse json strings
    containing “://” ([GH 36271](https://github.com/pandas-dev/pandas/issues/36271))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when `engine="c"` and `encoding_errors=None` which caused a
    segfault ([GH 45180](https://github.com/pandas-dev/pandas/issues/45180))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") an invalid value of `usecols` leading to an unclosed file handle
    ([GH 45384](https://github.com/pandas-dev/pandas/issues/45384))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") fix memory leak ([GH 43877](https://github.com/pandas-dev/pandas/issues/43877))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Period
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in adding a [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") object to a `np.timedelta64` object incorrectly raising `TypeError`
    ([GH 44182](https://github.com/pandas-dev/pandas/issues/44182))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`PeriodIndex.to_timestamp()`](../reference/api/pandas.PeriodIndex.to_timestamp.html#pandas.PeriodIndex.to_timestamp
    "pandas.PeriodIndex.to_timestamp") when the index has `freq="B"` inferring `freq="D"`
    for its result instead of `freq="B"` ([GH 44105](https://github.com/pandas-dev/pandas/issues/44105))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    constructor incorrectly allowing `np.timedelta64("NaT")` ([GH 44507](https://github.com/pandas-dev/pandas/issues/44507))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`PeriodIndex.to_timestamp()`](../reference/api/pandas.PeriodIndex.to_timestamp.html#pandas.PeriodIndex.to_timestamp
    "pandas.PeriodIndex.to_timestamp") giving incorrect values for indexes with non-contiguous
    data ([GH 44100](https://github.com/pandas-dev/pandas/issues/44100))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") with `PeriodDtype` incorrectly raising when the `where`
    call should not replace anything ([GH 45135](https://github.com/pandas-dev/pandas/issues/45135))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When given non-numeric data, [`DataFrame.boxplot()`](../reference/api/pandas.DataFrame.boxplot.html#pandas.DataFrame.boxplot
    "pandas.DataFrame.boxplot") now raises a `ValueError` rather than a cryptic `KeyError`
    or `ZeroDivisionError`, in line with other plotting functions like [`DataFrame.hist()`](../reference/api/pandas.DataFrame.hist.html#pandas.DataFrame.hist
    "pandas.DataFrame.hist") ([GH 43480](https://github.com/pandas-dev/pandas/issues/43480))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `SeriesGroupBy.apply()` where passing an unrecognized string argument
    failed to raise `TypeError` when the underlying `Series` is empty ([GH 42021](https://github.com/pandas-dev/pandas/issues/42021))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.rolling.apply()`, `DataFrame.rolling.apply()`, `Series.expanding.apply()`
    and `DataFrame.expanding.apply()` with `engine="numba"` where `*args` were being
    cached with the user passed function ([GH 42287](https://github.com/pandas-dev/pandas/issues/42287))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.max()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.max.html#pandas.core.groupby.DataFrameGroupBy.max
    "pandas.core.groupby.DataFrameGroupBy.max"), [`SeriesGroupBy.max()`](../reference/api/pandas.core.groupby.SeriesGroupBy.max.html#pandas.core.groupby.SeriesGroupBy.max
    "pandas.core.groupby.SeriesGroupBy.max"), [`DataFrameGroupBy.min()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.min.html#pandas.core.groupby.DataFrameGroupBy.min
    "pandas.core.groupby.DataFrameGroupBy.min"), and [`SeriesGroupBy.min()`](../reference/api/pandas.core.groupby.SeriesGroupBy.min.html#pandas.core.groupby.SeriesGroupBy.min
    "pandas.core.groupby.SeriesGroupBy.min") with nullable integer dtypes losing precision
    ([GH 41743](https://github.com/pandas-dev/pandas/issues/41743))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.groupby.rolling.var()` would calculate the rolling variance
    only on the first group ([GH 42442](https://github.com/pandas-dev/pandas/issues/42442))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.shift()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.shift.html#pandas.core.groupby.DataFrameGroupBy.shift
    "pandas.core.groupby.DataFrameGroupBy.shift") and [`SeriesGroupBy.shift()`](../reference/api/pandas.core.groupby.SeriesGroupBy.shift.html#pandas.core.groupby.SeriesGroupBy.shift
    "pandas.core.groupby.SeriesGroupBy.shift") that would return the grouping columns
    if `fill_value` was not `None` ([GH 41556](https://github.com/pandas-dev/pandas/issues/41556))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SeriesGroupBy.nlargest()` and `SeriesGroupBy.nsmallest()` would have
    an inconsistent index when the input [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") was sorted and `n` was greater than or equal to all group sizes
    ([GH 15272](https://github.com/pandas-dev/pandas/issues/15272), [GH 16345](https://github.com/pandas-dev/pandas/issues/16345),
    [GH 29129](https://github.com/pandas-dev/pandas/issues/29129))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm"), where non-float64 dtypes were silently failing ([GH 42452](https://github.com/pandas-dev/pandas/issues/42452))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") operation along rows (`axis=1`) incorrectly omits
    columns containing `float16` and `float32` ([GH 41779](https://github.com/pandas-dev/pandas/issues/41779))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Resampler.aggregate()` did not allow the use of Named Aggregation ([GH
    32803](https://github.com/pandas-dev/pandas/issues/32803))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") when the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") `dtype` was `Int64` ([GH 43016](https://github.com/pandas-dev/pandas/issues/43016))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.rolling.corr()` when the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") columns was a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 21157](https://github.com/pandas-dev/pandas/issues/21157))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.groupby.rolling()` when specifying `on` and calling `__getitem__`
    would subsequently return incorrect results ([GH 43355](https://github.com/pandas-dev/pandas/issues/43355))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") with time-based [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper") objects incorrectly raising `ValueError` in corner cases where
    the grouping vector contains a `NaT` ([GH 43500](https://github.com/pandas-dev/pandas/issues/43500),
    [GH 43515](https://github.com/pandas-dev/pandas/issues/43515))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.mean()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean") and [`SeriesGroupBy.mean()`](../reference/api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean") failing with `complex` dtype ([GH 43701](https://github.com/pandas-dev/pandas/issues/43701))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") and [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") not calculating window bounds correctly for the first
    row when `center=True` and index is decreasing ([GH 43927](https://github.com/pandas-dev/pandas/issues/43927))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") and [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") for centered datetimelike windows with uneven nanosecond
    ([GH 43997](https://github.com/pandas-dev/pandas/issues/43997))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.mean()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean") and [`SeriesGroupBy.mean()`](../reference/api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean") raising `KeyError` when column was selected
    at least twice ([GH 44924](https://github.com/pandas-dev/pandas/issues/44924))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.nth()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") and [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") failing on `axis=1` ([GH 43926](https://github.com/pandas-dev/pandas/issues/43926))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") and [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") not respecting right bound on centered datetime-like
    windows, if the index contain duplicates ([GH 3944](https://github.com/pandas-dev/pandas/issues/3944))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") and [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") when using a [`pandas.api.indexers.BaseIndexer`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer") subclass that returned unequal start and end
    arrays would segfault instead of raising a `ValueError` ([GH 44470](https://github.com/pandas-dev/pandas/issues/44470))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Groupby.nunique()` not respecting `observed=True` for `categorical`
    grouping columns ([GH 45128](https://github.com/pandas-dev/pandas/issues/45128))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.head()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.head.html#pandas.core.groupby.DataFrameGroupBy.head
    "pandas.core.groupby.DataFrameGroupBy.head"), [`SeriesGroupBy.head()`](../reference/api/pandas.core.groupby.SeriesGroupBy.head.html#pandas.core.groupby.SeriesGroupBy.head
    "pandas.core.groupby.SeriesGroupBy.head"), [`DataFrameGroupBy.tail()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.tail.html#pandas.core.groupby.DataFrameGroupBy.tail
    "pandas.core.groupby.DataFrameGroupBy.tail"), and [`SeriesGroupBy.tail()`](../reference/api/pandas.core.groupby.SeriesGroupBy.tail.html#pandas.core.groupby.SeriesGroupBy.tail
    "pandas.core.groupby.SeriesGroupBy.tail") not dropping groups with `NaN` when
    `dropna=True` ([GH 45089](https://github.com/pandas-dev/pandas/issues/45089))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.__iter__()` after selecting a subset of columns in a `GroupBy`
    object, which returned all columns instead of the chosen subset ([GH 44821](https://github.com/pandas-dev/pandas/issues/44821))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Groupby.rolling()` when non-monotonic data passed, fails to correctly
    raise `ValueError` ([GH 43909](https://github.com/pandas-dev/pandas/issues/43909))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where grouping by a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") that has a `categorical` data type and length unequal to the
    axis of grouping raised `ValueError` ([GH 44179](https://github.com/pandas-dev/pandas/issues/44179))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Improved error message when creating a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") column from a multi-dimensional [`numpy.ndarray`](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray
    "(in NumPy v1.26)") ([GH 42463](https://github.com/pandas-dev/pandas/issues/42463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    creating [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with duplicate level entries when concatenating a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with duplicates in [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") and multiple keys ([GH 42651](https://github.com/pandas-dev/pandas/issues/42651))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut")
    on [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    with duplicate indices and non-exact [`pandas.CategoricalIndex()`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 42185](https://github.com/pandas-dev/pandas/issues/42185),
    [GH 42425](https://github.com/pandas-dev/pandas/issues/42425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` failing to retain dtypes when appended columns do
    not match ([GH 43392](https://github.com/pandas-dev/pandas/issues/43392))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    of `bool` and `boolean` dtypes resulting in `object` dtype instead of `boolean`
    dtype ([GH 42800](https://github.com/pandas-dev/pandas/issues/42800))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") when inputs are categorical [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), there are categories that are not present in one or both of
    the [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    and `margins=True`. Previously the margin value for missing categories was `NaN`.
    It is now correctly reported as 0 ([GH 43505](https://github.com/pandas-dev/pandas/issues/43505))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    would fail when the `objs` argument all had the same index and the `keys` argument
    contained duplicates ([GH 43595](https://github.com/pandas-dev/pandas/issues/43595))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    which ignored the `sort` parameter ([GH 43375](https://github.com/pandas-dev/pandas/issues/43375))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") as column index for the `on` argument returning an error
    when assigning a column internally ([GH 43734](https://github.com/pandas-dev/pandas/issues/43734))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") would fail when inputs are lists or tuples ([GH 44076](https://github.com/pandas-dev/pandas/issues/44076))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` failing to retain `index.name` when appending a
    list of [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    objects ([GH 44109](https://github.com/pandas-dev/pandas/issues/44109))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed metadata propagation in `Dataframe.apply()` method, consequently fixing
    the same issue for `Dataframe.transform()`, `Dataframe.nunique()` and `Dataframe.mode()`
    ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    casting levels of [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") to float if all levels only consist of missing values ([GH
    44900](https://github.com/pandas-dev/pandas/issues/44900))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") with `ExtensionDtype` columns incorrectly raising ([GH
    43561](https://github.com/pandas-dev/pandas/issues/43561))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    raising `KeyError` when joining over differently named indexes with on keywords
    ([GH 45094](https://github.com/pandas-dev/pandas/issues/45094))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack") with object doing unwanted type inference on resulting
    columns ([GH 44595](https://github.com/pandas-dev/pandas/issues/44595))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.join()` with overlapping `IntervalIndex` levels ([GH 44096](https://github.com/pandas-dev/pandas/issues/44096))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") results is different `dtype` based on `regex` parameter
    ([GH 44864](https://github.com/pandas-dev/pandas/issues/44864))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") with `index=None` when the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") index was a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 23955](https://github.com/pandas-dev/pandas/issues/23955))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sparse.to_coo()`](../reference/api/pandas.DataFrame.sparse.to_coo.html#pandas.DataFrame.sparse.to_coo
    "pandas.DataFrame.sparse.to_coo") raising `AttributeError` when column names are
    not unique ([GH 29564](https://github.com/pandas-dev/pandas/issues/29564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseArray.max()` and `SparseArray.min()` raising `ValueError` for
    arrays with 0 non-null elements ([GH 43527](https://github.com/pandas-dev/pandas/issues/43527))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sparse.to_coo()`](../reference/api/pandas.DataFrame.sparse.to_coo.html#pandas.DataFrame.sparse.to_coo
    "pandas.DataFrame.sparse.to_coo") silently converting non-zero fill values to
    zero ([GH 24817](https://github.com/pandas-dev/pandas/issues/24817))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseArray` comparison methods with an array-like operand of mismatched
    length raising `AssertionError` or unclear `ValueError` depending on the input
    ([GH 43863](https://github.com/pandas-dev/pandas/issues/43863))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseArray` arithmetic methods `floordiv` and `mod` behaviors when
    dividing by zero not matching the non-sparse [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") behavior ([GH 38172](https://github.com/pandas-dev/pandas/issues/38172))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseArray` unary methods as well as `SparseArray.isna()` doesn’t recalculate
    indexes ([GH 44955](https://github.com/pandas-dev/pandas/issues/44955))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    failing to preserve `PandasArray` ([GH 43887](https://github.com/pandas-dev/pandas/issues/43887))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NumPy ufuncs `np.abs`, `np.positive`, `np.negative` now correctly preserve dtype
    when called on ExtensionArrays that implement `__abs__, __pos__, __neg__`, respectively.
    In particular this is fixed for `TimedeltaArray` ([GH 43899](https://github.com/pandas-dev/pandas/issues/43899),
    [GH 23316](https://github.com/pandas-dev/pandas/issues/23316))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NumPy ufuncs `np.minimum.reduce` `np.maximum.reduce`, `np.add.reduce`, and `np.prod.reduce`
    now work correctly instead of raising `NotImplementedError` on [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `IntegerDtype` or `FloatDtype` ([GH 43923](https://github.com/pandas-dev/pandas/issues/43923),
    [GH 44793](https://github.com/pandas-dev/pandas/issues/44793))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NumPy ufuncs with `out` keyword are now supported by arrays with `IntegerDtype`
    and `FloatingDtype` ([GH 45122](https://github.com/pandas-dev/pandas/issues/45122))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoid raising `PerformanceWarning` about fragmented [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") when using many columns with an extension dtype ([GH 44098](https://github.com/pandas-dev/pandas/issues/44098))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntegerArray` and `FloatingArray` construction incorrectly coercing
    mismatched NA values (e.g. `np.timedelta64("NaT")`) to numeric NA ([GH 44514](https://github.com/pandas-dev/pandas/issues/44514))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `BooleanArray.__eq__()` and `BooleanArray.__ne__()` raising `TypeError`
    on comparison with an incompatible type (like a string). This caused [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") to sometimes raise a `TypeError` if a nullable boolean
    column was included ([GH 44499](https://github.com/pandas-dev/pandas/issues/44499))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    incorrectly raising when passed a `ndarray` with `float16` dtype ([GH 44715](https://github.com/pandas-dev/pandas/issues/44715))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in calling `np.sqrt` on `BooleanArray` returning a malformed `FloatingArray`
    ([GH 44715](https://github.com/pandas-dev/pandas/issues/44715))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") with `ExtensionDtype` when `other` is a NA scalar incompatible
    with the [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    dtype (e.g. `NaT` with a numeric dtype) incorrectly casting to a compatible NA
    value ([GH 44697](https://github.com/pandas-dev/pandas/issues/44697))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") where explicitly passing `value=None` is treated as if
    no `value` was passed, and `None` not being in the result ([GH 36984](https://github.com/pandas-dev/pandas/issues/36984),
    [GH 19998](https://github.com/pandas-dev/pandas/issues/19998))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with unwanted downcasting being done in no-op replacements
    ([GH 44498](https://github.com/pandas-dev/pandas/issues/44498))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with `FloatDtype`, `string[python]`, or `string[pyarrow]`
    dtype not being preserved when possible ([GH 33484](https://github.com/pandas-dev/pandas/issues/33484),
    [GH 40732](https://github.com/pandas-dev/pandas/issues/40732), [GH 31644](https://github.com/pandas-dev/pandas/issues/31644),
    [GH 41215](https://github.com/pandas-dev/pandas/issues/41215), [GH 25438](https://github.com/pandas-dev/pandas/issues/25438))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styler
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") where the `uuid` at initialization maintained
    a floating underscore ([GH 43037](https://github.com/pandas-dev/pandas/issues/43037))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Styler.to_html()`](../reference/api/pandas.io.formats.style.Styler.to_html.html#pandas.io.formats.style.Styler.to_html
    "pandas.io.formats.style.Styler.to_html") where the `Styler` object was updated
    if the `to_html` method was called with some args ([GH 43034](https://github.com/pandas-dev/pandas/issues/43034))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Styler.copy()` where `uuid` was not previously copied ([GH 40675](https://github.com/pandas-dev/pandas/issues/40675))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Styler.apply()` where functions which returned [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") objects were not correctly handled in terms of aligning their
    index labels ([GH 13657](https://github.com/pandas-dev/pandas/issues/13657), [GH
    42014](https://github.com/pandas-dev/pandas/issues/42014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when rendering an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a named [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 43305](https://github.com/pandas-dev/pandas/issues/43305))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when rendering a single level [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 43383](https://github.com/pandas-dev/pandas/issues/43383))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when combining non-sparse rendering and `Styler.hide_columns()` or `Styler.hide_index()`
    ([GH 43464](https://github.com/pandas-dev/pandas/issues/43464))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug setting a table style when using multiple selectors in [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") ([GH 44011](https://github.com/pandas-dev/pandas/issues/44011))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bugs where row trimming and column trimming failed to reflect hidden rows ([GH
    43703](https://github.com/pandas-dev/pandas/issues/43703), [GH 44247](https://github.com/pandas-dev/pandas/issues/44247))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") with non-unique columns and a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") `dtype` argument ([GH 44417](https://github.com/pandas-dev/pandas/issues/44417))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CustomBusinessMonthBegin.__add__()` (`CustomBusinessMonthEnd.__add__()`)
    not applying the extra `offset` parameter when beginning (end) of the target month
    is already a business day ([GH 41356](https://github.com/pandas-dev/pandas/issues/41356))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RangeIndex.union()` with another `RangeIndex` with matching (even) `step`
    and starts differing by strictly less than `step / 2` ([GH 44019](https://github.com/pandas-dev/pandas/issues/44019))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RangeIndex.difference()` with `sort=None` and `step<0` failing to sort
    ([GH 44085](https://github.com/pandas-dev/pandas/issues/44085))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") and [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") with `value=None` and ExtensionDtypes ([GH 44270](https://github.com/pandas-dev/pandas/issues/44270),
    [GH 37899](https://github.com/pandas-dev/pandas/issues/37899))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `FloatingArray.equals()` failing to consider two arrays equal if they
    contain `np.nan` values ([GH 44382](https://github.com/pandas-dev/pandas/issues/44382))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift") with `axis=1` and `ExtensionDtype` columns incorrectly
    raising when an incompatible `fill_value` is passed ([GH 44564](https://github.com/pandas-dev/pandas/issues/44564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift") with `axis=1` and `periods` larger than `len(frame.columns)`
    producing an invalid [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 44978](https://github.com/pandas-dev/pandas/issues/44978))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.diff()`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff") when passing a NumPy integer object instead of an `int`
    object ([GH 44572](https://github.com/pandas-dev/pandas/issues/44572))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") raising `ValueError` when using `regex=True` with a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") containing `np.nan` values ([GH 43344](https://github.com/pandas-dev/pandas/issues/43344))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_records()`](../reference/api/pandas.DataFrame.to_records.html#pandas.DataFrame.to_records
    "pandas.DataFrame.to_records") where an incorrect `n` was used when missing names
    were replaced by `level_n` ([GH 44818](https://github.com/pandas-dev/pandas/issues/44818))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") where `resolvers` argument was overriding the default
    resolvers ([GH 34966](https://github.com/pandas-dev/pandas/issues/34966))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.__repr__()` and `DataFrame.__repr__()` no longer replace all null-values
    in indexes with “NaN” but use their real string-representations. “NaN” is used
    only for `float("nan")` ([GH 45263](https://github.com/pandas-dev/pandas/issues/45263))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in setting dtype-incompatible values into a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") (or `Series` or `DataFrame` backed by `Categorical`) raising
    `ValueError` instead of `TypeError` ([GH 41919](https://github.com/pandas-dev/pandas/issues/41919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.searchsorted()` when passing a dtype-incompatible value
    raising `KeyError` instead of `TypeError` ([GH 41919](https://github.com/pandas-dev/pandas/issues/41919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.astype()` casting datetimes and [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") to int for dtype `object` ([GH 44930](https://github.com/pandas-dev/pandas/issues/44930))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") with `CategoricalDtype` when passing a dtype-incompatible
    value raising `ValueError` instead of `TypeError` ([GH 41919](https://github.com/pandas-dev/pandas/issues/41919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.fillna()` when passing a dtype-incompatible value raising
    `ValueError` instead of `TypeError` ([GH 41919](https://github.com/pandas-dev/pandas/issues/41919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.fillna()` with a tuple-like category raising `ValueError`
    instead of `TypeError` when filling with a non-category tuple ([GH 41919](https://github.com/pandas-dev/pandas/issues/41919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor unnecessarily copying non-datetimelike 2D object
    arrays ([GH 39272](https://github.com/pandas-dev/pandas/issues/39272))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `format` and `pandas.NA` was raising `ValueError` ([GH
    42957](https://github.com/pandas-dev/pandas/issues/42957))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") would silently swap `MM/DD/YYYY` and `DD/MM/YYYY` formats
    if the given `dayfirst` option could not be respected - now, a warning is raised
    in the case of delimited date strings (e.g. `31-12-2012`) ([GH 12585](https://github.com/pandas-dev/pandas/issues/12585))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") and [`bdate_range()`](../reference/api/pandas.bdate_range.html#pandas.bdate_range
    "pandas.bdate_range") do not return right bound when `start` = `end` and set is
    closed on one side ([GH 43394](https://github.com/pandas-dev/pandas/issues/43394))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in inplace addition and subtraction of [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") or [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") with `DatetimeArray` or `TimedeltaArray` ([GH 43904](https://github.com/pandas-dev/pandas/issues/43904))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in calling `np.isnan`, `np.isfinite`, or `np.isinf` on a timezone-aware
    [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") incorrectly raising `TypeError` ([GH 43917](https://github.com/pandas-dev/pandas/issues/43917))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") from datetime-like strings with mixed timezones incorrectly partially-inferring
    datetime values ([GH 40111](https://github.com/pandas-dev/pandas/issues/40111))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in addition of a `Tick` object and a `np.timedelta64` object incorrectly
    raising instead of returning [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") ([GH 44474](https://github.com/pandas-dev/pandas/issues/44474))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`np.maximum.reduce` and `np.minimum.reduce` now correctly return [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") and [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") objects when operating on [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), or [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with `datetime64[ns]` or `timedelta64[ns]` dtype ([GH 43923](https://github.com/pandas-dev/pandas/issues/43923))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in adding a `np.timedelta64` object to a `BusinessDay` or `CustomBusinessDay`
    object incorrectly raising ([GH 44532](https://github.com/pandas-dev/pandas/issues/44532))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.insert()`](../reference/api/pandas.Index.insert.html#pandas.Index.insert
    "pandas.Index.insert") for inserting `np.datetime64`, `np.timedelta64` or `tuple`
    into [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    with `dtype='object'` with negative loc adding `None` and replacing existing value
    ([GH 44509](https://github.com/pandas-dev/pandas/issues/44509))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.to_pydatetime()`](../reference/api/pandas.Timestamp.to_pydatetime.html#pandas.Timestamp.to_pydatetime
    "pandas.Timestamp.to_pydatetime") failing to retain the `fold` attribute ([GH
    45087](https://github.com/pandas-dev/pandas/issues/45087))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.mode()`](../reference/api/pandas.Series.mode.html#pandas.Series.mode
    "pandas.Series.mode") with `DatetimeTZDtype` incorrectly returning timezone-naive
    and `PeriodDtype` incorrectly raising ([GH 41927](https://github.com/pandas-dev/pandas/issues/41927))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex") raising an error when using an incompatible fill value
    with a datetime-like dtype (or not raising a deprecation warning for using a `datetime.date`
    as fill value) ([GH 42921](https://github.com/pandas-dev/pandas/issues/42921))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DateOffset` addition with [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") where `offset.nanoseconds` would not be included in the result
    ([GH 43968](https://github.com/pandas-dev/pandas/issues/43968), [GH 36589](https://github.com/pandas-dev/pandas/issues/36589))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.fromtimestamp()`](../reference/api/pandas.Timestamp.fromtimestamp.html#pandas.Timestamp.fromtimestamp
    "pandas.Timestamp.fromtimestamp") not supporting the `tz` argument ([GH 45083](https://github.com/pandas-dev/pandas/issues/45083))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") construction from dict of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with mismatched index dtypes sometimes raising depending on the
    ordering of the passed dict ([GH 44091](https://github.com/pandas-dev/pandas/issues/44091))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") hashing during some DST transitions caused a segmentation
    fault ([GH 33931](https://github.com/pandas-dev/pandas/issues/33931) and [GH 40817](https://github.com/pandas-dev/pandas/issues/40817))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in division of all-`NaT` `TimeDeltaIndex`, [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") column with object-dtype array like of numbers failing to
    infer the result as timedelta64-dtype ([GH 39750](https://github.com/pandas-dev/pandas/issues/39750))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in floor division of `timedelta64[ns]` data with a scalar returning garbage
    values ([GH 44466](https://github.com/pandas-dev/pandas/issues/44466))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") now properly taking into account any nanoseconds contribution
    of any kwarg ([GH 43764](https://github.com/pandas-dev/pandas/issues/43764), [GH
    45227](https://github.com/pandas-dev/pandas/issues/45227))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Time Zones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `infer_datetime_format=True` failing to parse zero
    UTC offset (`Z`) correctly ([GH 41047](https://github.com/pandas-dev/pandas/issues/41047))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.dt.tz_convert()`](../reference/api/pandas.Series.dt.tz_convert.html#pandas.Series.dt.tz_convert
    "pandas.Series.dt.tz_convert") resetting index in a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 43080](https://github.com/pandas-dev/pandas/issues/43080))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timestamp` and `DatetimeIndex` incorrectly raising a `TypeError` when
    subtracting two timezone-aware objects with mismatched timezones ([GH 31793](https://github.com/pandas-dev/pandas/issues/31793))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in floor-dividing a list or tuple of integers by a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") incorrectly raising ([GH 44674](https://github.com/pandas-dev/pandas/issues/44674))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank") raising `ValueError` with `object` columns and `method="first"`
    ([GH 41931](https://github.com/pandas-dev/pandas/issues/41931))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank") treating missing values and extreme values as equal (for
    example `np.nan` and `np.inf`), causing incorrect results when `na_option="bottom"`
    or `na_option="top` used ([GH 41931](https://github.com/pandas-dev/pandas/issues/41931))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `numexpr` engine still being used when the option `compute.use_numexpr`
    is set to `False` ([GH 32556](https://github.com/pandas-dev/pandas/issues/32556))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") arithmetic ops with a subclass whose `_constructor()` attribute
    is a callable other than the subclass itself ([GH 43201](https://github.com/pandas-dev/pandas/issues/43201))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in arithmetic operations involving [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") where the result would have the incorrect `name` ([GH 43962](https://github.com/pandas-dev/pandas/issues/43962))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in arithmetic operations involving [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") where the result could have the incorrect `name` when the operands
    having matching NA or matching tuple names ([GH 44459](https://github.com/pandas-dev/pandas/issues/44459))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in division with `IntegerDtype` or `BooleanDtype` array and NA scalar incorrectly
    raising ([GH 44685](https://github.com/pandas-dev/pandas/issues/44685))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in multiplying a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `FloatingDtype` with a timedelta-like scalar incorrectly
    raising ([GH 44772](https://github.com/pandas-dev/pandas/issues/44772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `UInt64Index` constructor when passing a list containing both positive
    integers small enough to cast to int64 and integers too large to hold in int64
    ([GH 42201](https://github.com/pandas-dev/pandas/issues/42201))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor returning 0 for missing values with dtype `int64` and `False` for
    dtype `bool` ([GH 43017](https://github.com/pandas-dev/pandas/issues/43017), [GH
    43018](https://github.com/pandas-dev/pandas/issues/43018))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from a `PandasArray` containing [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") objects behaving differently than an equivalent `np.ndarray`
    ([GH 43986](https://github.com/pandas-dev/pandas/issues/43986))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntegerDtype` not allowing coercion from string dtype ([GH 25472](https://github.com/pandas-dev/pandas/issues/25472))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `arg:xr.DataArray` and `unit="ns"` specified raises
    `TypeError` ([GH 44053](https://github.com/pandas-dev/pandas/issues/44053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.convert_dtypes()`](../reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes
    "pandas.DataFrame.convert_dtypes") not returning the correct type when a subclass
    does not overload `_constructor_sliced()` ([GH 43201](https://github.com/pandas-dev/pandas/issues/43201))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") not propagating `attrs` from the original [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 44414](https://github.com/pandas-dev/pandas/issues/44414))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.convert_dtypes()`](../reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes
    "pandas.DataFrame.convert_dtypes") result losing `columns.names` ([GH 41435](https://github.com/pandas-dev/pandas/issues/41435))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a `IntegerArray` from pyarrow data failing to validate dtypes
    ([GH 44891](https://github.com/pandas-dev/pandas/issues/44891))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") not allowing converting from a `PeriodDtype` to `datetime64`
    dtype, inconsistent with the [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") behavior ([GH 45038](https://github.com/pandas-dev/pandas/issues/45038))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in checking for `string[pyarrow]` dtype incorrectly raising an `ImportError`
    when pyarrow is not installed ([GH 44276](https://github.com/pandas-dev/pandas/issues/44276))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") with `IntervalDtype` incorrectly raising when the `where`
    call should not replace anything ([GH 44181](https://github.com/pandas-dev/pandas/issues/44181))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.rename()`](../reference/api/pandas.Series.rename.html#pandas.Series.rename
    "pandas.Series.rename") with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and `level` is provided ([GH 43659](https://github.com/pandas-dev/pandas/issues/43659))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.truncate()`](../reference/api/pandas.DataFrame.truncate.html#pandas.DataFrame.truncate
    "pandas.DataFrame.truncate") and [`Series.truncate()`](../reference/api/pandas.Series.truncate.html#pandas.Series.truncate
    "pandas.Series.truncate") when the object’s [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") has a length greater than one but only one unique value ([GH 42365](https://github.com/pandas-dev/pandas/issues/42365))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") and [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") when indexing with a tuple in which one of the levels is
    also a tuple ([GH 27591](https://github.com/pandas-dev/pandas/issues/27591))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") whose first level contains only `np.nan` values ([GH 42055](https://github.com/pandas-dev/pandas/issues/42055))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") when passing a string, the return type depended on whether
    the index was monotonic ([GH 24892](https://github.com/pandas-dev/pandas/issues/24892))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") failing to drop scalar levels when the indexer is a tuple
    containing a datetime-like string ([GH 42476](https://github.com/pandas-dev/pandas/issues/42476))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") and [`Series.sort_values()`](../reference/api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values") when passing an ascending value, failed to raise
    or incorrectly raising `ValueError` ([GH 41634](https://github.com/pandas-dev/pandas/issues/41634))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in updating values of [`pandas.Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") using boolean index, created by using [`pandas.DataFrame.pop()`](../reference/api/pandas.DataFrame.pop.html#pandas.DataFrame.pop
    "pandas.DataFrame.pop") ([GH 42530](https://github.com/pandas-dev/pandas/issues/42530))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.get_indexer_non_unique()`](../reference/api/pandas.Index.get_indexer_non_unique.html#pandas.Index.get_indexer_non_unique
    "pandas.Index.get_indexer_non_unique") when index contains multiple `np.nan` ([GH
    35392](https://github.com/pandas-dev/pandas/issues/35392))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") did not handle the degree sign in a backticked column
    name, such as `Temp(°C)`, used in an expression to query a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 42826](https://github.com/pandas-dev/pandas/issues/42826))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") where the error message did not show missing labels with
    commas when raising `KeyError` ([GH 42881](https://github.com/pandas-dev/pandas/issues/42881))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") where method calls in query strings led to errors when
    the `numexpr` package was installed ([GH 22435](https://github.com/pandas-dev/pandas/issues/22435))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.nlargest()`](../reference/api/pandas.DataFrame.nlargest.html#pandas.DataFrame.nlargest
    "pandas.DataFrame.nlargest") and [`Series.nlargest()`](../reference/api/pandas.Series.nlargest.html#pandas.Series.nlargest
    "pandas.Series.nlargest") where sorted result did not count indexes containing
    `np.nan` ([GH 28984](https://github.com/pandas-dev/pandas/issues/28984))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on a non-unique object-dtype [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with an NA scalar (e.g. `np.nan`) ([GH 43711](https://github.com/pandas-dev/pandas/issues/43711))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` incorrectly writing into an existing column’s
    array rather than setting a new array when the new dtype and the old dtype match
    ([GH 43406](https://github.com/pandas-dev/pandas/issues/43406))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting floating-dtype values into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with integer dtype failing to set inplace when those values can
    be losslessly converted to integers ([GH 44316](https://github.com/pandas-dev/pandas/issues/44316))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` with object dtype when setting an array with matching
    size and dtype=’datetime64[ns]’ or dtype=’timedelta64[ns]’ incorrectly converting
    the datetime/timedeltas to integers ([GH 43868](https://github.com/pandas-dev/pandas/issues/43868))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index") where `ignore_index=True` was not being respected
    when the index was already sorted ([GH 43591](https://github.com/pandas-dev/pandas/issues/43591))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.get_indexer_non_unique()`](../reference/api/pandas.Index.get_indexer_non_unique.html#pandas.Index.get_indexer_non_unique
    "pandas.Index.get_indexer_non_unique") when index contains multiple `np.datetime64("NaT")`
    and `np.timedelta64("NaT")` ([GH 43869](https://github.com/pandas-dev/pandas/issues/43869))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting a scalar [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") value into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `IntervalDtype` when the scalar’s sides are floats and the
    values’ sides are integers ([GH 44201](https://github.com/pandas-dev/pandas/issues/44201))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when setting string-backed [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") values that can be parsed to datetimes into a `DatetimeArray`
    or [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    column backed by `DatetimeArray` failing to parse these strings ([GH 44236](https://github.com/pandas-dev/pandas/issues/44236))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` with an integer dtype other than `int64` setting
    with a `range` object unnecessarily upcasting to `int64` ([GH 44261](https://github.com/pandas-dev/pandas/issues/44261))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` with a boolean mask indexer setting a listlike
    value of length 1 incorrectly broadcasting that value ([GH 44265](https://github.com/pandas-dev/pandas/issues/44265))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index") not ignoring `name` argument when `drop` and `inplace`
    are set to `True` ([GH 44575](https://github.com/pandas-dev/pandas/issues/44575))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc.__setitem__()` and `DataFrame.iloc.__setitem__()` with
    mixed dtypes sometimes failing to operate in-place ([GH 44345](https://github.com/pandas-dev/pandas/issues/44345))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc.__getitem__()` incorrectly raising `KeyError` when selecting
    a single column with a boolean key ([GH 44322](https://github.com/pandas-dev/pandas/issues/44322)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") with a single `ExtensionDtype` column and setting 2D
    values e.g. `df.iloc[:] = df.values` incorrectly raising ([GH 44514](https://github.com/pandas-dev/pandas/issues/44514))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting values with [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") with a single `ExtensionDtype` column and a tuple of
    arrays as the indexer ([GH 44703](https://github.com/pandas-dev/pandas/issues/44703))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing on columns with `loc` or `iloc` using a slice with a negative
    step with `ExtensionDtype` columns incorrectly raising ([GH 44551](https://github.com/pandas-dev/pandas/issues/44551))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc.__setitem__()` changing dtype when indexer was completely
    `False` ([GH 37550](https://github.com/pandas-dev/pandas/issues/37550))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.get_indexer_non_unique()` returning boolean mask instead
    of array of integers for a non unique and non monotonic index ([GH 44084](https://github.com/pandas-dev/pandas/issues/44084))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.get_indexer_non_unique()` not handling targets of `dtype`
    ‘object’ with NaNs correctly ([GH 44482](https://github.com/pandas-dev/pandas/issues/44482))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression where a single column `np.matrix` was no longer coerced to
    a 1d `np.ndarray` when added to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 42376](https://github.com/pandas-dev/pandas/issues/42376))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__getitem__()` with a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") of integers treating lists of integers as positional
    indexers, inconsistent with the behavior with a single scalar integer ([GH 15470](https://github.com/pandas-dev/pandas/issues/15470),
    [GH 14865](https://github.com/pandas-dev/pandas/issues/14865))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` when setting floats or integers into integer-dtype
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    failing to upcast when necessary to retain precision ([GH 45121](https://github.com/pandas-dev/pandas/issues/45121))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.iloc.__setitem__()` ignores axis argument ([GH 45032](https://github.com/pandas-dev/pandas/issues/45032))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") with `limit` and no `method` ignores `axis='columns'`
    or `axis = 1` ([GH 40989](https://github.com/pandas-dev/pandas/issues/40989),
    [GH 17399](https://github.com/pandas-dev/pandas/issues/17399))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") not replacing missing values when using a dict-like
    `value` and duplicate column names ([GH 43476](https://github.com/pandas-dev/pandas/issues/43476))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a dictionary `np.datetime64` as a value and `dtype='timedelta64[ns]'`,
    or vice-versa, incorrectly casting instead of raising ([GH 44428](https://github.com/pandas-dev/pandas/issues/44428))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") with `inplace=True` not writing to the underlying
    array(s) in-place ([GH 44749](https://github.com/pandas-dev/pandas/issues/44749))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.fillna()`](../reference/api/pandas.Index.fillna.html#pandas.Index.fillna
    "pandas.Index.fillna") incorrectly returning an unfilled [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") when NA values are present and `downcast` argument is specified.
    This now raises `NotImplementedError` instead; do not pass `downcast` argument
    ([GH 44873](https://github.com/pandas-dev/pandas/issues/44873))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") changing [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") even if no entries were dropped ([GH 41965](https://github.com/pandas-dev/pandas/issues/41965))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") with an object-dtype incorrectly ignoring `downcast="infer"`
    ([GH 44241](https://github.com/pandas-dev/pandas/issues/44241))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") where the first level is a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and a string key is passed ([GH 42465](https://github.com/pandas-dev/pandas/issues/42465))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.reindex()` when passing a `level` that corresponds to an
    `ExtensionDtype` level ([GH 42043](https://github.com/pandas-dev/pandas/issues/42043))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") raising `TypeError` instead of `KeyError` on nested
    tuple ([GH 42440](https://github.com/pandas-dev/pandas/issues/42440))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.union()` setting wrong `sortorder` causing errors in subsequent
    indexing operations with slices ([GH 44752](https://github.com/pandas-dev/pandas/issues/44752))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.putmask()` where the other value was also a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 43212](https://github.com/pandas-dev/pandas/issues/43212))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.dtypes()`](../reference/api/pandas.MultiIndex.dtypes.html#pandas.MultiIndex.dtypes
    "pandas.MultiIndex.dtypes") duplicate level names returned only one dtype per
    name ([GH 45174](https://github.com/pandas-dev/pandas/issues/45174))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I/O
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") attempting to read chart sheets from .xlsx files ([GH 41448](https://github.com/pandas-dev/pandas/issues/41448))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") where `errors=ignore` could fail to ignore missing values
    of `meta` when `record_path` has a length greater than one ([GH 41876](https://github.com/pandas-dev/pandas/issues/41876))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with multi-header input and arguments referencing column names
    as tuples ([GH 42446](https://github.com/pandas-dev/pandas/issues/42446))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf"), where difference in lengths of `colspecs` and `names` was
    not raising `ValueError` ([GH 40830](https://github.com/pandas-dev/pandas/issues/40830))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.to_json()`](../reference/api/pandas.Series.to_json.html#pandas.Series.to_json
    "pandas.Series.to_json") and [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") where some attributes were skipped when serializing
    plain Python objects to JSON ([GH 42768](https://github.com/pandas-dev/pandas/issues/42768),
    [GH 33043](https://github.com/pandas-dev/pandas/issues/33043))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Column headers are dropped when constructing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from a sqlalchemy’s `Row` object ([GH 40682](https://github.com/pandas-dev/pandas/issues/40682))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in unpickling an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with object dtype incorrectly inferring numeric dtypes ([GH 43188](https://github.com/pandas-dev/pandas/issues/43188))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where reading multi-header input with unequal lengths incorrectly
    raised `IndexError` ([GH 43102](https://github.com/pandas-dev/pandas/issues/43102))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") raising `ParserError` when reading file in chunks and some
    chunk blocks have fewer columns than header for `engine="c"` ([GH 21211](https://github.com/pandas-dev/pandas/issues/21211))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), changed exception class when expecting a file path name or
    file-like object from `OSError` to `TypeError` ([GH 43366](https://github.com/pandas-dev/pandas/issues/43366))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf") ignoring all `skiprows` except first when `nrows` is specified
    for `engine='python'` ([GH 44021](https://github.com/pandas-dev/pandas/issues/44021),
    [GH 10261](https://github.com/pandas-dev/pandas/issues/10261))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") keeping the original column in object format when `keep_date_col=True`
    is set ([GH 13378](https://github.com/pandas-dev/pandas/issues/13378))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") not handling non-numpy dtypes correctly (especially `category`)
    ([GH 21892](https://github.com/pandas-dev/pandas/issues/21892), [GH 33205](https://github.com/pandas-dev/pandas/issues/33205))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") where multi-character `sep` parameter is incorrectly
    prefixed to every key ([GH 43831](https://github.com/pandas-dev/pandas/issues/43831))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") where reading data with missing multi-level metadata
    would not respect `errors="ignore"` ([GH 44312](https://github.com/pandas-dev/pandas/issues/44312))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") used second row to guess implicit index if `header` was set
    to `None` for `engine="python"` ([GH 22144](https://github.com/pandas-dev/pandas/issues/22144))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not recognizing bad lines when `names` were given for `engine="c"`
    ([GH 22144](https://github.com/pandas-dev/pandas/issues/22144))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `float_precision="round_trip"` which did not skip initial/trailing
    whitespace ([GH 43713](https://github.com/pandas-dev/pandas/issues/43713))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug when Python is built without the lzma module: a warning was raised at the
    pandas import time, even if the lzma capability isn’t used ([GH 43495](https://github.com/pandas-dev/pandas/issues/43495))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not applying dtype for `index_col` ([GH 9435](https://github.com/pandas-dev/pandas/issues/9435))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in dumping/loading a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `yaml.dump(frame)` ([GH 42748](https://github.com/pandas-dev/pandas/issues/42748))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") raising `ValueError` when `names` was longer than `header`
    but equal to data rows for `engine="python"` ([GH 38453](https://github.com/pandas-dev/pandas/issues/38453))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter"), where `engine_kwargs` were not passed through to all engines
    ([GH 43442](https://github.com/pandas-dev/pandas/issues/43442))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") raising `ValueError` when `parse_dates` was used with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") columns ([GH 8991](https://github.com/pandas-dev/pandas/issues/8991))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not raising an `ValueError` when `\n` was specified as `delimiter`
    or `sep` which conflicts with `lineterminator` ([GH 43528](https://github.com/pandas-dev/pandas/issues/43528))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `to_csv()` converting datetimes in categorical [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") to integers ([GH 40754](https://github.com/pandas-dev/pandas/issues/40754))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") converting columns to numeric after date parsing failed ([GH
    11019](https://github.com/pandas-dev/pandas/issues/11019))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not replacing `NaN` values with `np.nan` before attempting
    date conversion ([GH 26203](https://github.com/pandas-dev/pandas/issues/26203))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") raising `AttributeError` when attempting to read a .csv file
    and infer index column dtype from an nullable integer type ([GH 44079](https://github.com/pandas-dev/pandas/issues/44079))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `to_csv()` always coercing datetime columns with different formats to
    the same format ([GH 21734](https://github.com/pandas-dev/pandas/issues/21734))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") and [`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv") with `compression` set to `''zip''` no longer create a
    zip file containing a file ending with “.zip”. Instead, they try to infer the
    inner file name more smartly ([GH 39465](https://github.com/pandas-dev/pandas/issues/39465))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where reading a mixed column of booleans and missing values
    to a float type results in the missing values becoming 1.0 rather than NaN ([GH
    42808](https://github.com/pandas-dev/pandas/issues/42808), [GH 34120](https://github.com/pandas-dev/pandas/issues/34120))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `to_xml()` raising error for `pd.NA` with extension array dtype ([GH
    43903](https://github.com/pandas-dev/pandas/issues/43903))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when passing simultaneously a parser in `date_parser` and `parse_dates=False`,
    the parsing was still called ([GH 44366](https://github.com/pandas-dev/pandas/issues/44366))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not setting name of [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") columns correctly when `index_col` is not the first column
    ([GH 38549](https://github.com/pandas-dev/pandas/issues/38549))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") silently ignoring errors when failing to create a memory-mapped
    file ([GH 44766](https://github.com/pandas-dev/pandas/issues/44766))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when passing a `tempfile.SpooledTemporaryFile` opened in binary
    mode ([GH 44748](https://github.com/pandas-dev/pandas/issues/44748))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") raising `ValueError` when attempting to parse json strings
    containing “://” ([GH 36271](https://github.com/pandas-dev/pandas/issues/36271))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when `engine="c"` and `encoding_errors=None` which caused a
    segfault ([GH 45180](https://github.com/pandas-dev/pandas/issues/45180))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") an invalid value of `usecols` leading to an unclosed file handle
    ([GH 45384](https://github.com/pandas-dev/pandas/issues/45384))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") fix memory leak ([GH 43877](https://github.com/pandas-dev/pandas/issues/43877))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Period
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in adding a [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") object to a `np.timedelta64` object incorrectly raising `TypeError`
    ([GH 44182](https://github.com/pandas-dev/pandas/issues/44182))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`PeriodIndex.to_timestamp()`](../reference/api/pandas.PeriodIndex.to_timestamp.html#pandas.PeriodIndex.to_timestamp
    "pandas.PeriodIndex.to_timestamp") when the index has `freq="B"` inferring `freq="D"`
    for its result instead of `freq="B"` ([GH 44105](https://github.com/pandas-dev/pandas/issues/44105))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    constructor incorrectly allowing `np.timedelta64("NaT")` ([GH 44507](https://github.com/pandas-dev/pandas/issues/44507))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`PeriodIndex.to_timestamp()`](../reference/api/pandas.PeriodIndex.to_timestamp.html#pandas.PeriodIndex.to_timestamp
    "pandas.PeriodIndex.to_timestamp") giving incorrect values for indexes with non-contiguous
    data ([GH 44100](https://github.com/pandas-dev/pandas/issues/44100))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") with `PeriodDtype` incorrectly raising when the `where`
    call should not replace anything ([GH 45135](https://github.com/pandas-dev/pandas/issues/45135))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When given non-numeric data, [`DataFrame.boxplot()`](../reference/api/pandas.DataFrame.boxplot.html#pandas.DataFrame.boxplot
    "pandas.DataFrame.boxplot") now raises a `ValueError` rather than a cryptic `KeyError`
    or `ZeroDivisionError`, in line with other plotting functions like [`DataFrame.hist()`](../reference/api/pandas.DataFrame.hist.html#pandas.DataFrame.hist
    "pandas.DataFrame.hist") ([GH 43480](https://github.com/pandas-dev/pandas/issues/43480))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `SeriesGroupBy.apply()` where passing an unrecognized string argument
    failed to raise `TypeError` when the underlying `Series` is empty ([GH 42021](https://github.com/pandas-dev/pandas/issues/42021))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.rolling.apply()`, `DataFrame.rolling.apply()`, `Series.expanding.apply()`
    and `DataFrame.expanding.apply()` with `engine="numba"` where `*args` were being
    cached with the user passed function ([GH 42287](https://github.com/pandas-dev/pandas/issues/42287))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.max()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.max.html#pandas.core.groupby.DataFrameGroupBy.max
    "pandas.core.groupby.DataFrameGroupBy.max"), [`SeriesGroupBy.max()`](../reference/api/pandas.core.groupby.SeriesGroupBy.max.html#pandas.core.groupby.SeriesGroupBy.max
    "pandas.core.groupby.SeriesGroupBy.max"), [`DataFrameGroupBy.min()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.min.html#pandas.core.groupby.DataFrameGroupBy.min
    "pandas.core.groupby.DataFrameGroupBy.min"), and [`SeriesGroupBy.min()`](../reference/api/pandas.core.groupby.SeriesGroupBy.min.html#pandas.core.groupby.SeriesGroupBy.min
    "pandas.core.groupby.SeriesGroupBy.min") with nullable integer dtypes losing precision
    ([GH 41743](https://github.com/pandas-dev/pandas/issues/41743))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.groupby.rolling.var()` would calculate the rolling variance
    only on the first group ([GH 42442](https://github.com/pandas-dev/pandas/issues/42442))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.shift()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.shift.html#pandas.core.groupby.DataFrameGroupBy.shift
    "pandas.core.groupby.DataFrameGroupBy.shift") and [`SeriesGroupBy.shift()`](../reference/api/pandas.core.groupby.SeriesGroupBy.shift.html#pandas.core.groupby.SeriesGroupBy.shift
    "pandas.core.groupby.SeriesGroupBy.shift") that would return the grouping columns
    if `fill_value` was not `None` ([GH 41556](https://github.com/pandas-dev/pandas/issues/41556))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SeriesGroupBy.nlargest()` and `SeriesGroupBy.nsmallest()` would have
    an inconsistent index when the input [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") was sorted and `n` was greater than or equal to all group sizes
    ([GH 15272](https://github.com/pandas-dev/pandas/issues/15272), [GH 16345](https://github.com/pandas-dev/pandas/issues/16345),
    [GH 29129](https://github.com/pandas-dev/pandas/issues/29129))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm"), where non-float64 dtypes were silently failing ([GH 42452](https://github.com/pandas-dev/pandas/issues/42452))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") operation along rows (`axis=1`) incorrectly omits
    columns containing `float16` and `float32` ([GH 41779](https://github.com/pandas-dev/pandas/issues/41779))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Resampler.aggregate()` did not allow the use of Named Aggregation ([GH
    32803](https://github.com/pandas-dev/pandas/issues/32803))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") when the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") `dtype` was `Int64` ([GH 43016](https://github.com/pandas-dev/pandas/issues/43016))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.rolling.corr()` when the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") columns was a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 21157](https://github.com/pandas-dev/pandas/issues/21157))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.groupby.rolling()` when specifying `on` and calling `__getitem__`
    would subsequently return incorrect results ([GH 43355](https://github.com/pandas-dev/pandas/issues/43355))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") with time-based [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper") objects incorrectly raising `ValueError` in corner cases where
    the grouping vector contains a `NaT` ([GH 43500](https://github.com/pandas-dev/pandas/issues/43500),
    [GH 43515](https://github.com/pandas-dev/pandas/issues/43515))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.mean()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean") and [`SeriesGroupBy.mean()`](../reference/api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean") failing with `complex` dtype ([GH 43701](https://github.com/pandas-dev/pandas/issues/43701))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") and [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") not calculating window bounds correctly for the first
    row when `center=True` and index is decreasing ([GH 43927](https://github.com/pandas-dev/pandas/issues/43927))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") and [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") for centered datetimelike windows with uneven nanosecond
    ([GH 43997](https://github.com/pandas-dev/pandas/issues/43997))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.mean()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean") and [`SeriesGroupBy.mean()`](../reference/api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean") raising `KeyError` when column was selected
    at least twice ([GH 44924](https://github.com/pandas-dev/pandas/issues/44924))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.nth()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") and [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") failing on `axis=1` ([GH 43926](https://github.com/pandas-dev/pandas/issues/43926))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") and [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") not respecting right bound on centered datetime-like
    windows, if the index contain duplicates ([GH 3944](https://github.com/pandas-dev/pandas/issues/3944))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") and [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") when using a [`pandas.api.indexers.BaseIndexer`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer") subclass that returned unequal start and end
    arrays would segfault instead of raising a `ValueError` ([GH 44470](https://github.com/pandas-dev/pandas/issues/44470))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Groupby.nunique()` not respecting `observed=True` for `categorical`
    grouping columns ([GH 45128](https://github.com/pandas-dev/pandas/issues/45128))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.head()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.head.html#pandas.core.groupby.DataFrameGroupBy.head
    "pandas.core.groupby.DataFrameGroupBy.head"), [`SeriesGroupBy.head()`](../reference/api/pandas.core.groupby.SeriesGroupBy.head.html#pandas.core.groupby.SeriesGroupBy.head
    "pandas.core.groupby.SeriesGroupBy.head"), [`DataFrameGroupBy.tail()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.tail.html#pandas.core.groupby.DataFrameGroupBy.tail
    "pandas.core.groupby.DataFrameGroupBy.tail"), and [`SeriesGroupBy.tail()`](../reference/api/pandas.core.groupby.SeriesGroupBy.tail.html#pandas.core.groupby.SeriesGroupBy.tail
    "pandas.core.groupby.SeriesGroupBy.tail") not dropping groups with `NaN` when
    `dropna=True` ([GH 45089](https://github.com/pandas-dev/pandas/issues/45089))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.__iter__()` after selecting a subset of columns in a `GroupBy`
    object, which returned all columns instead of the chosen subset ([GH 44821](https://github.com/pandas-dev/pandas/issues/44821))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Groupby.rolling()` when non-monotonic data passed, fails to correctly
    raise `ValueError` ([GH 43909](https://github.com/pandas-dev/pandas/issues/43909))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where grouping by a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") that has a `categorical` data type and length unequal to the
    axis of grouping raised `ValueError` ([GH 44179](https://github.com/pandas-dev/pandas/issues/44179))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Improved error message when creating a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") column from a multi-dimensional [`numpy.ndarray`](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray
    "(in NumPy v1.26)") ([GH 42463](https://github.com/pandas-dev/pandas/issues/42463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    creating [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with duplicate level entries when concatenating a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with duplicates in [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") and multiple keys ([GH 42651](https://github.com/pandas-dev/pandas/issues/42651))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut")
    on [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    with duplicate indices and non-exact [`pandas.CategoricalIndex()`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 42185](https://github.com/pandas-dev/pandas/issues/42185),
    [GH 42425](https://github.com/pandas-dev/pandas/issues/42425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` failing to retain dtypes when appended columns do
    not match ([GH 43392](https://github.com/pandas-dev/pandas/issues/43392))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    of `bool` and `boolean` dtypes resulting in `object` dtype instead of `boolean`
    dtype ([GH 42800](https://github.com/pandas-dev/pandas/issues/42800))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") when inputs are categorical [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), there are categories that are not present in one or both of
    the [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    and `margins=True`. Previously the margin value for missing categories was `NaN`.
    It is now correctly reported as 0 ([GH 43505](https://github.com/pandas-dev/pandas/issues/43505))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    would fail when the `objs` argument all had the same index and the `keys` argument
    contained duplicates ([GH 43595](https://github.com/pandas-dev/pandas/issues/43595))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    which ignored the `sort` parameter ([GH 43375](https://github.com/pandas-dev/pandas/issues/43375))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") as column index for the `on` argument returning an error
    when assigning a column internally ([GH 43734](https://github.com/pandas-dev/pandas/issues/43734))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") would fail when inputs are lists or tuples ([GH 44076](https://github.com/pandas-dev/pandas/issues/44076))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` failing to retain `index.name` when appending a
    list of [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    objects ([GH 44109](https://github.com/pandas-dev/pandas/issues/44109))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed metadata propagation in `Dataframe.apply()` method, consequently fixing
    the same issue for `Dataframe.transform()`, `Dataframe.nunique()` and `Dataframe.mode()`
    ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    casting levels of [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") to float if all levels only consist of missing values ([GH
    44900](https://github.com/pandas-dev/pandas/issues/44900))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") with `ExtensionDtype` columns incorrectly raising ([GH
    43561](https://github.com/pandas-dev/pandas/issues/43561))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    raising `KeyError` when joining over differently named indexes with on keywords
    ([GH 45094](https://github.com/pandas-dev/pandas/issues/45094))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack") with object doing unwanted type inference on resulting
    columns ([GH 44595](https://github.com/pandas-dev/pandas/issues/44595))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.join()` with overlapping `IntervalIndex` levels ([GH 44096](https://github.com/pandas-dev/pandas/issues/44096))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") results is different `dtype` based on `regex` parameter
    ([GH 44864](https://github.com/pandas-dev/pandas/issues/44864))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") with `index=None` when the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") index was a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 23955](https://github.com/pandas-dev/pandas/issues/23955))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sparse.to_coo()`](../reference/api/pandas.DataFrame.sparse.to_coo.html#pandas.DataFrame.sparse.to_coo
    "pandas.DataFrame.sparse.to_coo") raising `AttributeError` when column names are
    not unique ([GH 29564](https://github.com/pandas-dev/pandas/issues/29564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseArray.max()` and `SparseArray.min()` raising `ValueError` for
    arrays with 0 non-null elements ([GH 43527](https://github.com/pandas-dev/pandas/issues/43527))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sparse.to_coo()`](../reference/api/pandas.DataFrame.sparse.to_coo.html#pandas.DataFrame.sparse.to_coo
    "pandas.DataFrame.sparse.to_coo") silently converting non-zero fill values to
    zero ([GH 24817](https://github.com/pandas-dev/pandas/issues/24817))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseArray` comparison methods with an array-like operand of mismatched
    length raising `AssertionError` or unclear `ValueError` depending on the input
    ([GH 43863](https://github.com/pandas-dev/pandas/issues/43863))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseArray` arithmetic methods `floordiv` and `mod` behaviors when
    dividing by zero not matching the non-sparse [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") behavior ([GH 38172](https://github.com/pandas-dev/pandas/issues/38172))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseArray` unary methods as well as `SparseArray.isna()` doesn’t recalculate
    indexes ([GH 44955](https://github.com/pandas-dev/pandas/issues/44955))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    failing to preserve `PandasArray` ([GH 43887](https://github.com/pandas-dev/pandas/issues/43887))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NumPy ufuncs `np.abs`, `np.positive`, `np.negative` now correctly preserve dtype
    when called on ExtensionArrays that implement `__abs__, __pos__, __neg__`, respectively.
    In particular this is fixed for `TimedeltaArray` ([GH 43899](https://github.com/pandas-dev/pandas/issues/43899),
    [GH 23316](https://github.com/pandas-dev/pandas/issues/23316))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NumPy ufuncs `np.minimum.reduce` `np.maximum.reduce`, `np.add.reduce`, and `np.prod.reduce`
    now work correctly instead of raising `NotImplementedError` on [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `IntegerDtype` or `FloatDtype` ([GH 43923](https://github.com/pandas-dev/pandas/issues/43923),
    [GH 44793](https://github.com/pandas-dev/pandas/issues/44793))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NumPy ufuncs with `out` keyword are now supported by arrays with `IntegerDtype`
    and `FloatingDtype` ([GH 45122](https://github.com/pandas-dev/pandas/issues/45122))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoid raising `PerformanceWarning` about fragmented [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") when using many columns with an extension dtype ([GH 44098](https://github.com/pandas-dev/pandas/issues/44098))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntegerArray` and `FloatingArray` construction incorrectly coercing
    mismatched NA values (e.g. `np.timedelta64("NaT")`) to numeric NA ([GH 44514](https://github.com/pandas-dev/pandas/issues/44514))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `BooleanArray.__eq__()` and `BooleanArray.__ne__()` raising `TypeError`
    on comparison with an incompatible type (like a string). This caused [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") to sometimes raise a `TypeError` if a nullable boolean
    column was included ([GH 44499](https://github.com/pandas-dev/pandas/issues/44499))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    incorrectly raising when passed a `ndarray` with `float16` dtype ([GH 44715](https://github.com/pandas-dev/pandas/issues/44715))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in calling `np.sqrt` on `BooleanArray` returning a malformed `FloatingArray`
    ([GH 44715](https://github.com/pandas-dev/pandas/issues/44715))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") with `ExtensionDtype` when `other` is a NA scalar incompatible
    with the [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    dtype (e.g. `NaT` with a numeric dtype) incorrectly casting to a compatible NA
    value ([GH 44697](https://github.com/pandas-dev/pandas/issues/44697))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") where explicitly passing `value=None` is treated as if
    no `value` was passed, and `None` not being in the result ([GH 36984](https://github.com/pandas-dev/pandas/issues/36984),
    [GH 19998](https://github.com/pandas-dev/pandas/issues/19998))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with unwanted downcasting being done in no-op replacements
    ([GH 44498](https://github.com/pandas-dev/pandas/issues/44498))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with `FloatDtype`, `string[python]`, or `string[pyarrow]`
    dtype not being preserved when possible ([GH 33484](https://github.com/pandas-dev/pandas/issues/33484),
    [GH 40732](https://github.com/pandas-dev/pandas/issues/40732), [GH 31644](https://github.com/pandas-dev/pandas/issues/31644),
    [GH 41215](https://github.com/pandas-dev/pandas/issues/41215), [GH 25438](https://github.com/pandas-dev/pandas/issues/25438))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styler
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") where the `uuid` at initialization maintained
    a floating underscore ([GH 43037](https://github.com/pandas-dev/pandas/issues/43037))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Styler.to_html()`](../reference/api/pandas.io.formats.style.Styler.to_html.html#pandas.io.formats.style.Styler.to_html
    "pandas.io.formats.style.Styler.to_html") where the `Styler` object was updated
    if the `to_html` method was called with some args ([GH 43034](https://github.com/pandas-dev/pandas/issues/43034))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Styler.copy()` where `uuid` was not previously copied ([GH 40675](https://github.com/pandas-dev/pandas/issues/40675))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Styler.apply()` where functions which returned [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") objects were not correctly handled in terms of aligning their
    index labels ([GH 13657](https://github.com/pandas-dev/pandas/issues/13657), [GH
    42014](https://github.com/pandas-dev/pandas/issues/42014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when rendering an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a named [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 43305](https://github.com/pandas-dev/pandas/issues/43305))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when rendering a single level [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 43383](https://github.com/pandas-dev/pandas/issues/43383))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when combining non-sparse rendering and `Styler.hide_columns()` or `Styler.hide_index()`
    ([GH 43464](https://github.com/pandas-dev/pandas/issues/43464))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug setting a table style when using multiple selectors in [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") ([GH 44011](https://github.com/pandas-dev/pandas/issues/44011))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bugs where row trimming and column trimming failed to reflect hidden rows ([GH
    43703](https://github.com/pandas-dev/pandas/issues/43703), [GH 44247](https://github.com/pandas-dev/pandas/issues/44247))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") with non-unique columns and a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") `dtype` argument ([GH 44417](https://github.com/pandas-dev/pandas/issues/44417))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CustomBusinessMonthBegin.__add__()` (`CustomBusinessMonthEnd.__add__()`)
    not applying the extra `offset` parameter when beginning (end) of the target month
    is already a business day ([GH 41356](https://github.com/pandas-dev/pandas/issues/41356))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RangeIndex.union()` with another `RangeIndex` with matching (even) `step`
    and starts differing by strictly less than `step / 2` ([GH 44019](https://github.com/pandas-dev/pandas/issues/44019))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `RangeIndex.difference()` with `sort=None` and `step<0` failing to sort
    ([GH 44085](https://github.com/pandas-dev/pandas/issues/44085))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") and [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") with `value=None` and ExtensionDtypes ([GH 44270](https://github.com/pandas-dev/pandas/issues/44270),
    [GH 37899](https://github.com/pandas-dev/pandas/issues/37899))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `FloatingArray.equals()` failing to consider two arrays equal if they
    contain `np.nan` values ([GH 44382](https://github.com/pandas-dev/pandas/issues/44382))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift") with `axis=1` and `ExtensionDtype` columns incorrectly
    raising when an incompatible `fill_value` is passed ([GH 44564](https://github.com/pandas-dev/pandas/issues/44564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift") with `axis=1` and `periods` larger than `len(frame.columns)`
    producing an invalid [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 44978](https://github.com/pandas-dev/pandas/issues/44978))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.diff()`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff") when passing a NumPy integer object instead of an `int`
    object ([GH 44572](https://github.com/pandas-dev/pandas/issues/44572))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") raising `ValueError` when using `regex=True` with a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") containing `np.nan` values ([GH 43344](https://github.com/pandas-dev/pandas/issues/43344))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_records()`](../reference/api/pandas.DataFrame.to_records.html#pandas.DataFrame.to_records
    "pandas.DataFrame.to_records") where an incorrect `n` was used when missing names
    were replaced by `level_n` ([GH 44818](https://github.com/pandas-dev/pandas/issues/44818))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") where `resolvers` argument was overriding the default
    resolvers ([GH 34966](https://github.com/pandas-dev/pandas/issues/34966))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.__repr__()` and `DataFrame.__repr__()` no longer replace all null-values
    in indexes with “NaN” but use their real string-representations. “NaN” is used
    only for `float("nan")` ([GH 45263](https://github.com/pandas-dev/pandas/issues/45263))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Contributors'
  prefs: []
  type: TYPE_NORMAL
- en: A total of 275 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: Abhishek R
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Albert Villanova del Moral
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alessandro Bisiani +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Lim
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex-Gregory-1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexander Gorodetsky
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexander Regueiro +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexey Györi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexis Mignon
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aleš Erjavec
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ali McMaster
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alibi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrei Batomunkuev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Eckart +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Hawyrluk
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Wood
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anton Lodder +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Armin Berres +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arushi Sharma +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Benedikt Heidrich +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Beni Bienz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Benoît Vinot
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bert Palm +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Boris Rumyantsev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brian Hulette
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brock
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bruno Costa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bryan Racic +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Caleb Epstein
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calvin Ho
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ChristofKaufmann +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christopher Yeh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chuliang Xiao +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ClaudiaSilver +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DSM
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Coll +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Schmidt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dare Adewumi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Sanders +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Wales +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Derzan Chiang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DeviousLab +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dhruv B Shetty +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Digres45 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dominik Kutra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Drew Levitt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DriesS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: EdAbati
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Elle
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Elliot Rampono
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Endre Mark Borza
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Erfan Nariman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Evgeny Naumov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ewout ter Hoeven +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fangchen Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Felix Divo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Felix Dulys +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Francesco Andreuzzi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Francois Dion +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Frans Larsson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fred Reiss
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GYvan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gabriel Di Pardi Arruda +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gesa Stupperich
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Giacomo Caria +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Greg Siano +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Griffin Ansel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hiroaki Ogasawara +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Horace +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Horace Lai +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Irv Lustig
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Isaac Virshup
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire (MBP)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire (iMac)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jack Liu
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jacob Skwirsk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jaime Di Cristina +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Holcombe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Janosh Riebesell +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jarrod Millman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jason Bian +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jernej Makovsek +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jim Bradley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joel Gibson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joeperdefloep +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Johannes Mueller +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John S Bogaardt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John Zangwill +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jon Haitz Legarreta Gorroño +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jon Wiggins +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonas Haag +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josh Friedlander
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: José Duarte +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julian Fleischer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julien de la Bruère-T
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justin McOmie
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kadatatlu Kishore +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kaiqi Dong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kashif Khan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kavya9986 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kendall +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kiley Hewitt
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Koen Roelofs +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Krishna Chivukula
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: KrishnaSai2020
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leonardo Freua +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leonardus Chen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Liang-Chi Hsieh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Loic Diridollou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lorenzo Maffioli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luke Manley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LunarLanding +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Garcia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marcel Bittar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marcel Gerber +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Edward Gorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Gorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MarcoGorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marvin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mateusz Piotrowski +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mathias Hauser +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Richards +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Davis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Zeitlin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthias Bussonnier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matti Picus
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mauro Silberberg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maxim Ivanov
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maximilian Carr +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MeeseeksMachine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Sarrazin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Wang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michał Górny +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mike Phung +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mike Taves +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mohamad Hussein Rkein +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NJOKU OKECHUKWU VALENTINE +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Neal McBurnett +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nick Anderson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nikita Sobolev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Olivier Cavadenti +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PApostol +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas Development Team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patrick Hoefler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter Tillmann +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prabha Arivalagan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pradyumna Rahul
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prerana Chakraborty
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prithvijit +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rahul Gaikwad +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ray Bell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ricardo Martins +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Shadrach
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robbert-jan ‘t Hoen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert Voyer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robin Raymond +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rohan Sharma +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rohan Sirohia +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roman Yurchak
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ruan Pretorius +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sam James +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scott Talbert
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shashwat Sharma +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sheogorath27 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shiv Gupta
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shoham Debnath
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Hawkins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Soumya +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stan West +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefanie Molin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefano Alberto Russo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stephan Heßelmann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stephen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Suyash Gupta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sven
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Swanand01 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sylvain Marié +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: TLouf
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tania Allard +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terji Petersen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: TheDerivator +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Dickson
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Kastl +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Kluyver
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Smith
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Swast
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Tran +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tobias McNulty +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tobias Pitters
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tomoki Nakagawa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tony Hirst +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Torsten Wörtwein
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: V.I. Wood +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vaibhav K +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Valentin Oliver Loftsson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Varun Shrivastava +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vivek Thazhathattil +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vyom Pathak
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wenjun Si
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Andrea +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Bradley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wojciech Sadowski +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yao-Ching Huang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yash Gupta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yiannis Hadjicharalambous +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yoshiki Vázquez Baeza
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yuanhao Geng
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yury Mikhaylov
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yvan Gatete +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yves Delley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zach Rait
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zbyszek Królikowski +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zero +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zheyuan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhiyi Wu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: aiudirog
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ali sayyah +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: aneesh98 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: aptalca
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: arw2019 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: attack68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: brendandrury +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bubblingoak +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: calvinsomething +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: claws +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: deponovo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dicristina
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: el-g-1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: evensure +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: fotino21 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: fshi01 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gfkang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: github-actions[bot]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: i-aki-y
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jreback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: juliandwain +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jxb4892 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kendall smith +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lmcindewar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lrepiton
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maximilianaccardo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: michal-gh
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: neelmraman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: partev
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: phofl +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pratyushsharan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: quantumalaviya +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rafael +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: realead
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rocabrera +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rosagold
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: saehuihwang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: salomondush +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: shubham11941140 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: srinivasan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: stphnlyd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: suoniq
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: trevorkask +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tushushu
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tyuyoshi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: usersblock +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vernetya +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vrserpa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: willie3838 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: zeitlinv +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: zhangxiaoxing +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
