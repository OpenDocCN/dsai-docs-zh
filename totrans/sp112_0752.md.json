["```py\nscipy.special.airye(z, out=None) = <ufunc 'airye'>\n```", "```py\neAi  = Ai  * exp(2.0/3.0*z*sqrt(z))\neAip = Aip * exp(2.0/3.0*z*sqrt(z))\neBi  = Bi  * exp(-abs(2.0/3.0*(z*sqrt(z)).real))\neBip = Bip * exp(-abs(2.0/3.0*(z*sqrt(z)).real)) \n```", "```py\n>>> import numpy as np\n>>> from scipy.special import airye\n>>> import matplotlib.pyplot as plt\n>>> z = np.linspace(0, 50, 500)\n>>> eAi, eAip, eBi, eBip = airye(z)\n>>> f, ax = plt.subplots(2, 1, sharex=True)\n>>> for ind, data in enumerate([[eAi, eAip, [\"eAi\", \"eAip\"]],\n...                             [eBi, eBip, [\"eBi\", \"eBip\"]]]):\n...     ax[ind].plot(z, data[0], \"-r\", z, data[1], \"-b\")\n...     ax[ind].legend(data[2])\n...     ax[ind].grid(True)\n>>> plt.show() \n```", "```py\n>>> from scipy.special import airy\n>>> Ai, Aip, Bi, Bip = airy(z)\n>>> np.allclose(eAi, Ai * np.exp(2.0 / 3.0 * z * np.sqrt(z)))\nTrue\n>>> np.allclose(eAip, Aip * np.exp(2.0 / 3.0 * z * np.sqrt(z)))\nTrue\n>>> np.allclose(eBi, Bi * np.exp(-abs(np.real(2.0 / 3.0 * z * np.sqrt(z)))))\nTrue\n>>> np.allclose(eBip, Bip * np.exp(-abs(np.real(2.0 / 3.0 * z * np.sqrt(z)))))\nTrue \n```", "```py\n>>> airy(200)\n(0.0, 0.0, nan, nan)\n>>> airye(200)\n(0.07501041684381093, -1.0609012305109042, 0.15003188417418148, 2.1215836725571093) \n```"]