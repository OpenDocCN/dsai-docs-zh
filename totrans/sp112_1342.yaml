- en: scipy.stats.median_test
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.median_test.html#scipy.stats.median_test](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.median_test.html#scipy.stats.median_test)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Perform a Mood’s median test.
  prefs: []
  type: TYPE_NORMAL
- en: Test that two or more samples come from populations with the same median.
  prefs: []
  type: TYPE_NORMAL
- en: Let `n = len(samples)` be the number of samples. The “grand median” of all the
    data is computed, and a contingency table is formed by classifying the values
    in each sample as being above or below the grand median. The contingency table,
    along with *correction* and *lambda_*, are passed to [`scipy.stats.chi2_contingency`](scipy.stats.chi2_contingency.html#scipy.stats.chi2_contingency
    "scipy.stats.chi2_contingency") to compute the test statistic and p-value.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**sample1, sample2, …**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The set of samples. There must be at least two samples. Each sample must be
    a one-dimensional sequence containing at least one value. The samples are not
    required to have the same length.
  prefs: []
  type: TYPE_NORMAL
- en: '**ties**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Determines how values equal to the grand median are classified in the contingency
    table. The string must be one of:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The default is “below”.
  prefs: []
  type: TYPE_NORMAL
- en: '**correction**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True, *and* there are just two samples, apply Yates’ correction for continuity
    when computing the test statistic associated with the contingency table. Default
    is True.
  prefs: []
  type: TYPE_NORMAL
- en: '**lambda_**float or str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: By default, the statistic computed in this test is Pearson’s chi-squared statistic.
    *lambda_* allows a statistic from the Cressie-Read power divergence family to
    be used instead. See [`power_divergence`](scipy.stats.power_divergence.html#scipy.stats.power_divergence
    "scipy.stats.power_divergence") for details. Default is 1 (Pearson’s chi-squared
    statistic).
  prefs: []
  type: TYPE_NORMAL
- en: '**nan_policy**{‘propagate’, ‘raise’, ‘omit’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Defines how to handle when input contains nan. ‘propagate’ returns nan, ‘raise’
    throws an error, ‘omit’ performs the calculations ignoring nan values. Default
    is ‘propagate’.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**res**MedianTestResult'
  prefs: []
  type: TYPE_NORMAL
- en: 'An object containing attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: statisticfloat
  prefs: []
  type: TYPE_NORMAL
- en: The test statistic. The statistic that is returned is determined by *lambda_*.
    The default is Pearson’s chi-squared statistic.
  prefs: []
  type: TYPE_NORMAL
- en: pvaluefloat
  prefs: []
  type: TYPE_NORMAL
- en: The p-value of the test.
  prefs: []
  type: TYPE_NORMAL
- en: medianfloat
  prefs: []
  type: TYPE_NORMAL
- en: The grand median.
  prefs: []
  type: TYPE_NORMAL
- en: tablendarray
  prefs: []
  type: TYPE_NORMAL
- en: The contingency table. The shape of the table is (2, n), where n is the number
    of samples. The first row holds the counts of the values above the grand median,
    and the second row holds the counts of the values below the grand median. The
    table allows further analysis with, for example, [`scipy.stats.chi2_contingency`](scipy.stats.chi2_contingency.html#scipy.stats.chi2_contingency
    "scipy.stats.chi2_contingency"), or with [`scipy.stats.fisher_exact`](scipy.stats.fisher_exact.html#scipy.stats.fisher_exact
    "scipy.stats.fisher_exact") if there are two samples, without having to recompute
    the table. If `nan_policy` is “propagate” and there are nans in the input, the
    return value for `table` is `None`.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`kruskal`](scipy.stats.kruskal.html#scipy.stats.kruskal "scipy.stats.kruskal")'
  prefs: []
  type: TYPE_NORMAL
- en: Compute the Kruskal-Wallis H-test for independent samples.
  prefs: []
  type: TYPE_NORMAL
- en: '[`mannwhitneyu`](scipy.stats.mannwhitneyu.html#scipy.stats.mannwhitneyu "scipy.stats.mannwhitneyu")'
  prefs: []
  type: TYPE_NORMAL
- en: Computes the Mann-Whitney rank test on samples x and y.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.15.0.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1]'
  prefs: []
  type: TYPE_NORMAL
- en: Mood, A. M., Introduction to the Theory of Statistics. McGraw-Hill (1950), pp.
    394-399.
  prefs: []
  type: TYPE_NORMAL
- en: '[2]'
  prefs: []
  type: TYPE_NORMAL
- en: Zar, J. H., Biostatistical Analysis, 5th ed. Prentice Hall (2010). See Sections
    8.12 and 10.15.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'A biologist runs an experiment in which there are three groups of plants. Group
    1 has 16 plants, group 2 has 15 plants, and group 3 has 17 plants. Each plant
    produces a number of seeds. The seed counts for each group are:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The following code applies Mood’s median test to these samples.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The median is
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: and the contingency table is
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '*p* is too large to conclude that the medians are not the same:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The “G-test” can be performed by passing `lambda_="log-likelihood"` to [`median_test`](#scipy.stats.median_test
    "scipy.stats.median_test").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'The median occurs several times in the data, so we’ll get a different result
    if, for example, `ties="above"` is used:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: This example demonstrates that if the data set is not large and there are values
    equal to the median, the p-value can be sensitive to the choice of *ties*.
  prefs: []
  type: TYPE_NORMAL
