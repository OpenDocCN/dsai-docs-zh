["```py\nscipy.stats.entropy(pk, qk=None, base=None, axis=0, *, nan_policy='propagate', keepdims=False)\n```", "```py\n>>> import numpy as np\n>>> from scipy.stats import entropy\n>>> base = 2  # work in units of bits\n>>> pk = np.array([1/2, 1/2])  # fair coin\n>>> H = entropy(pk, base=base)\n>>> H\n1.0\n>>> H == -np.sum(pk * np.log(pk)) / np.log(base)\nTrue \n```", "```py\n>>> qk = np.array([9/10, 1/10])  # biased coin\n>>> entropy(qk, base=base)\n0.46899559358928117 \n```", "```py\n>>> D = entropy(pk, qk, base=base)\n>>> D\n0.7369655941662062\n>>> D == np.sum(pk * np.log(pk/qk)) / np.log(base)\nTrue \n```", "```py\n>>> CE = entropy(pk, base=base) + entropy(pk, qk, base=base)\n>>> CE\n1.736965594166206\n>>> CE == -np.sum(pk * np.log(qk)) / np.log(base)\nTrue \n```"]