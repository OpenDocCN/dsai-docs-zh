- en: pandas.core.groupby.SeriesGroupBy.plot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.core.groupby.SeriesGroupBy.plot.html](https://pandas.pydata.org/docs/reference/api/pandas.core.groupby.SeriesGroupBy.plot.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Make plots of Series or DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: Uses the backend specified by the option `plotting.backend`. By default, matplotlib
    is used.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**data**Series or DataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: The object for which the method is called.
  prefs: []
  type: TYPE_NORMAL
- en: '**x**label or position, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Only used if data is a DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '**y**label, position or list of label, positions, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Allows plotting of one column versus another. Only used if data is a DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '**kind**str'
  prefs: []
  type: TYPE_NORMAL
- en: 'The kind of plot to produce:'
  prefs: []
  type: TYPE_NORMAL
- en: '‘line’ : line plot (default)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘bar’ : vertical bar plot'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘barh’ : horizontal bar plot'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘hist’ : histogram'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘box’ : boxplot'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘kde’ : Kernel Density Estimation plot'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘density’ : same as ‘kde’'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘area’ : area plot'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘pie’ : pie plot'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘scatter’ : scatter plot (DataFrame only)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘hexbin’ : hexbin plot (DataFrame only)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ax**matplotlib axes object, default None'
  prefs: []
  type: TYPE_NORMAL
- en: An axes of the current figure.
  prefs: []
  type: TYPE_NORMAL
- en: '**subplots**bool or sequence of iterables, default False'
  prefs: []
  type: TYPE_NORMAL
- en: 'Whether to group columns into subplots:'
  prefs: []
  type: TYPE_NORMAL
- en: '`False` : No subplots will be used'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`True` : Make separate subplots for each column.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'sequence of iterables of column labels: Create a subplot for each group of
    columns. For example [(‘a’, ‘c’), (‘b’, ‘d’)] will create 2 subplots: one with
    columns ‘a’ and ‘c’, and one with columns ‘b’ and ‘d’. Remaining columns that
    aren’t specified will be plotted in additional subplots (one per column).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New in version 1.5.0.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**sharex**bool, default True if ax is None else False'
  prefs: []
  type: TYPE_NORMAL
- en: In case `subplots=True`, share x axis and set some x axis labels to invisible;
    defaults to True if ax is None otherwise False if an ax is passed in; Be aware,
    that passing in both an ax and `sharex=True` will alter all x axis labels for
    all axis in a figure.
  prefs: []
  type: TYPE_NORMAL
- en: '**sharey**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: In case `subplots=True`, share y axis and set some y axis labels to invisible.
  prefs: []
  type: TYPE_NORMAL
- en: '**layout**tuple, optional'
  prefs: []
  type: TYPE_NORMAL
- en: (rows, columns) for the layout of subplots.
  prefs: []
  type: TYPE_NORMAL
- en: '**figsize**a tuple (width, height) in inches'
  prefs: []
  type: TYPE_NORMAL
- en: Size of a figure object.
  prefs: []
  type: TYPE_NORMAL
- en: '**use_index**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Use index as ticks for x axis.
  prefs: []
  type: TYPE_NORMAL
- en: '**title**str or list'
  prefs: []
  type: TYPE_NORMAL
- en: Title to use for the plot. If a string is passed, print the string at the top
    of the figure. If a list is passed and subplots is True, print each item in the
    list above the corresponding subplot.
  prefs: []
  type: TYPE_NORMAL
- en: '**grid**bool, default None (matlab style default)'
  prefs: []
  type: TYPE_NORMAL
- en: Axis grid lines.
  prefs: []
  type: TYPE_NORMAL
- en: '**legend**bool or {‘reverse’}'
  prefs: []
  type: TYPE_NORMAL
- en: Place legend on axis subplots.
  prefs: []
  type: TYPE_NORMAL
- en: '**style**list or dict'
  prefs: []
  type: TYPE_NORMAL
- en: The matplotlib line style per column.
  prefs: []
  type: TYPE_NORMAL
- en: '**logx**bool or ‘sym’, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Use log scaling or symlog scaling on x axis.
  prefs: []
  type: TYPE_NORMAL
- en: '**logy**bool or ‘sym’ default False'
  prefs: []
  type: TYPE_NORMAL
- en: Use log scaling or symlog scaling on y axis.
  prefs: []
  type: TYPE_NORMAL
- en: '**loglog**bool or ‘sym’, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Use log scaling or symlog scaling on both x and y axes.
  prefs: []
  type: TYPE_NORMAL
- en: '**xticks**sequence'
  prefs: []
  type: TYPE_NORMAL
- en: Values to use for the xticks.
  prefs: []
  type: TYPE_NORMAL
- en: '**yticks**sequence'
  prefs: []
  type: TYPE_NORMAL
- en: Values to use for the yticks.
  prefs: []
  type: TYPE_NORMAL
- en: '**xlim**2-tuple/list'
  prefs: []
  type: TYPE_NORMAL
- en: Set the x limits of the current axes.
  prefs: []
  type: TYPE_NORMAL
- en: '**ylim**2-tuple/list'
  prefs: []
  type: TYPE_NORMAL
- en: Set the y limits of the current axes.
  prefs: []
  type: TYPE_NORMAL
- en: '**xlabel**label, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Name to use for the xlabel on x-axis. Default uses index name as xlabel, or
    the x-column name for planar plots.
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 2.0.0: Now applicable to histograms.'
  prefs: []
  type: TYPE_NORMAL
- en: '**ylabel**label, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Name to use for the ylabel on y-axis. Default will show no ylabel, or the y-column
    name for planar plots.
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 2.0.0: Now applicable to histograms.'
  prefs: []
  type: TYPE_NORMAL
- en: '**rot**float, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Rotation for ticks (xticks for vertical, yticks for horizontal plots).
  prefs: []
  type: TYPE_NORMAL
- en: '**fontsize**float, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Font size for xticks and yticks.
  prefs: []
  type: TYPE_NORMAL
- en: '**colormap**str or matplotlib colormap object, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Colormap to select colors from. If string, load colormap with that name from
    matplotlib.
  prefs: []
  type: TYPE_NORMAL
- en: '**colorbar**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True, plot colorbar (only relevant for ‘scatter’ and ‘hexbin’ plots).
  prefs: []
  type: TYPE_NORMAL
- en: '**position**float'
  prefs: []
  type: TYPE_NORMAL
- en: Specify relative alignments for bar plot layout. From 0 (left/bottom-end) to
    1 (right/top-end). Default is 0.5 (center).
  prefs: []
  type: TYPE_NORMAL
- en: '**table**bool, Series or DataFrame, default False'
  prefs: []
  type: TYPE_NORMAL
- en: If True, draw a table using the data in the DataFrame and the data will be transposed
    to meet matplotlib’s default layout. If a Series or DataFrame is passed, use passed
    data to draw a table.
  prefs: []
  type: TYPE_NORMAL
- en: '**yerr**DataFrame, Series, array-like, dict and str'
  prefs: []
  type: TYPE_NORMAL
- en: See [Plotting with Error Bars](../../user_guide/visualization.html#visualization-errorbars)
    for detail.
  prefs: []
  type: TYPE_NORMAL
- en: '**xerr**DataFrame, Series, array-like, dict and str'
  prefs: []
  type: TYPE_NORMAL
- en: Equivalent to yerr.
  prefs: []
  type: TYPE_NORMAL
- en: '**stacked**bool, default False in line and bar plots, and True in area plot'
  prefs: []
  type: TYPE_NORMAL
- en: If True, create stacked plot.
  prefs: []
  type: TYPE_NORMAL
- en: '**secondary_y**bool or sequence, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to plot on the secondary y-axis if a list/tuple, which columns to plot
    on secondary y-axis.
  prefs: []
  type: TYPE_NORMAL
- en: '**mark_right**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: When using a secondary_y axis, automatically mark the column labels with “(right)”
    in the legend.
  prefs: []
  type: TYPE_NORMAL
- en: '**include_bool**bool, default is False'
  prefs: []
  type: TYPE_NORMAL
- en: If True, boolean values can be plotted.
  prefs: []
  type: TYPE_NORMAL
- en: '**backend**str, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Backend to use instead of the backend specified in the option `plotting.backend`.
    For instance, ‘matplotlib’. Alternatively, to specify the `plotting.backend` for
    the whole session, set `pd.options.plotting.backend`.
  prefs: []
  type: TYPE_NORMAL
- en: '****kwargs**'
  prefs: []
  type: TYPE_NORMAL
- en: Options to pass to matplotlib plotting method.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[`matplotlib.axes.Axes`](https://matplotlib.org/stable/api/_as_gen/matplotlib.axes.Axes.html#matplotlib.axes.Axes
    "(in Matplotlib v3.8.4)") or numpy.ndarray of them'
  prefs: []
  type: TYPE_NORMAL
- en: If the backend is not the default matplotlib one, the return value will be the
    object returned by the backend.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: See matplotlib documentation online for more on this subject
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If kind = ‘bar’ or ‘barh’, you can specify relative alignments for bar plot
    layout by position keyword. From 0 (left/bottom-end) to 1 (right/top-end). Default
    is 0.5 (center)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'For Series:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/pandas-core-groupby-SeriesGroupBy-plot-1.png](../Images/f9d7c76f4780bb6eaeb7c70adace9598.png)'
  prefs: []
  type: TYPE_IMG
- en: 'For DataFrame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/pandas-core-groupby-SeriesGroupBy-plot-2.png](../Images/63df7c0a5b742a745b3480f4b893fe0c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'For SeriesGroupBy:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/pandas-core-groupby-SeriesGroupBy-plot-3.png](../Images/fdb72047407e2cbb14d25ede8217345e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'For DataFrameGroupBy:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/pandas-core-groupby-SeriesGroupBy-plot-4_00.png](../Images/cee57b2f16fa254058473f95d88396e6.png)![../../_images/pandas-core-groupby-SeriesGroupBy-plot-4_01.png](../Images/1bb82fc35681996eb3dd975a6b4a26c3.png)'
  prefs: []
  type: TYPE_IMG
