- en: scipy.stats.yeojohnson
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.yeojohnson.html#scipy.stats.yeojohnson](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.yeojohnson.html#scipy.stats.yeojohnson)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return a dataset transformed by a Yeo-Johnson power transformation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Input array. Should be 1-dimensional.
  prefs: []
  type: TYPE_NORMAL
- en: '**lmbda**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If `lmbda` is `None`, find the lambda that maximizes the log-likelihood function
    and return it as the second output argument. Otherwise the transformation is done
    for the given value.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: 'yeojohnson: ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Yeo-Johnson power transformed array.
  prefs: []
  type: TYPE_NORMAL
- en: '**maxlog**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If the *lmbda* parameter is None, the second returned argument is the lambda
    that maximizes the log-likelihood function.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`probplot`](scipy.stats.probplot.html#scipy.stats.probplot "scipy.stats.probplot"),
    [`yeojohnson_normplot`](scipy.stats.yeojohnson_normplot.html#scipy.stats.yeojohnson_normplot
    "scipy.stats.yeojohnson_normplot"), [`yeojohnson_normmax`](scipy.stats.yeojohnson_normmax.html#scipy.stats.yeojohnson_normmax
    "scipy.stats.yeojohnson_normmax"), [`yeojohnson_llf`](scipy.stats.yeojohnson_llf.html#scipy.stats.yeojohnson_llf
    "scipy.stats.yeojohnson_llf"), [`boxcox`](scipy.stats.boxcox.html#scipy.stats.boxcox
    "scipy.stats.boxcox")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'The Yeo-Johnson transform is given by:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Unlike [`boxcox`](scipy.stats.boxcox.html#scipy.stats.boxcox "scipy.stats.boxcox"),
    [`yeojohnson`](#scipy.stats.yeojohnson "scipy.stats.yeojohnson") does not require
    the input data to be positive.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.2.0.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: 'I. Yeo and R.A. Johnson, “A New Family of Power Transformations to Improve
    Normality or Symmetry”, Biometrika 87.4 (2000):'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'We generate some random variates from a non-normal distribution and make a
    probability plot for it, to show it is non-normal in the tails:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'We now use [`yeojohnson`](#scipy.stats.yeojohnson "scipy.stats.yeojohnson")
    to transform the data so it’s closest to normal:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-stats-yeojohnson-1.png](../Images/6bc563c33b9b9daf1c73618078adad84.png)'
  prefs: []
  type: TYPE_IMG
