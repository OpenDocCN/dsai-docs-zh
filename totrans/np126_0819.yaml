- en: numpy.arctan2
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.arctan2
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.arctan2.html](https://numpy.org/doc/1.26/reference/generated/numpy.arctan2.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.arctan2.html](https://numpy.org/doc/1.26/reference/generated/numpy.arctan2.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Element-wise arc tangent of `x1/x2` choosing the quadrant correctly.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 选择正确象限的`x1/x2`的元素级反正切。
- en: 'The quadrant (i.e., branch) is chosen so that `arctan2(x1, x2)` is the signed
    angle in radians between the ray ending at the origin and passing through the
    point (1,0), and the ray ending at the origin and passing through the point (*x2*,
    *x1*). (Note the role reversal: the “*y*-coordinate” is the first function parameter,
    the “*x*-coordinate” is the second.) By IEEE convention, this function is defined
    for *x2* = +/-0 and for either or both of *x1* and *x2* = +/-inf (see Notes for
    specific values).'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 选择象限（即分支），以便`arctan2(x1, x2)`是通过点(1,0)结束并通过点(*x2*, *x1*)结束的射线与起点之间的有符号弧度角（注意角色颠倒：第一个函数参数是“*y*-坐标”，第二个是“*x*-坐标”）。根据IEEE约定，此函数对于*x2*
    = +/-0以及*x1*和/或*x2* = +/-inf都定义了（有关特定值，请参阅注意事项）。
- en: This function is not defined for complex-valued arguments; for the so-called
    argument of complex values, use [`angle`](numpy.angle.html#numpy.angle "numpy.angle").
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数对于复数值参数未定义；对于所谓的复数值的参数，请使用[`angle`](numpy.angle.html#numpy.angle "numpy.angle")。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x1**array_like, real-valued'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**x1**数组样式，实数型'
- en: '*y*-coordinates.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*y*坐标。'
- en: '**x2**array_like, real-valued'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**x2**数组样式，实数型'
- en: '*x*-coordinates. If `x1.shape != x2.shape`, they must be broadcastable to a
    common shape (which becomes the shape of the output).'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*x*坐标。如果`x1.shape != x2.shape`，它们必须可广播到一个公共形状（这将成为输出的形状）。'
- en: '**out**ndarray, None, or tuple of ndarray and None, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**数组样式，None或者包含数组和None的元组，可选'
- en: A location into which the result is stored. If provided, it must have a shape
    that the inputs broadcast to. If not provided or None, a freshly-allocated array
    is returned. A tuple (possible only as a keyword argument) must have length equal
    to the number of outputs.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 结果存储的位置。如果提供，它必须具有输入广播到的形状。如果未提供或为None，则返回一个新分配的数组。元组（仅作为关键字参数）必须具有与输出数量相等的长度。
- en: '**where**array_like, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**where**数组样式，可选'
- en: This condition is broadcast over the input. At locations where the condition
    is True, the *out* array will be set to the ufunc result. Elsewhere, the *out*
    array will retain its original value. Note that if an uninitialized *out* array
    is created via the default `out=None`, locations within it where the condition
    is False will remain uninitialized.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 此条件广播至输入。在条件为True的位置，*out*数组将设置为ufunc结果。在其他位置，*out*数组将保留其原始值。请注意，如果通过默认`out=None`创建了未初始化的*out*数组，则其中条件为False的位置将保持未初始化状态。
- en: '****kwargs**'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '****kwargs**'
- en: For other keyword-only arguments, see the [ufunc docs](../ufuncs.html#ufuncs-kwargs).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 对于其他仅限关键字的参数，请参阅[ufunc文档](../ufuncs.html#ufuncs-kwargs)。
- en: 'Returns:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**angle**ndarray'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**角度**数组'
- en: Array of angles in radians, in the range `[-pi, pi]`. This is a scalar if both
    *x1* and *x2* are scalars.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 角度数组，单位为弧度，范围为`[-pi, pi]`。如果*x1*和*x2*都是标量，则这是一个标量。
- en: See also
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`arctan`](numpy.arctan.html#numpy.arctan "numpy.arctan"), [`tan`](numpy.tan.html#numpy.tan
    "numpy.tan"), [`angle`](numpy.angle.html#numpy.angle "numpy.angle")'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[`arctan`](numpy.arctan.html#numpy.arctan "numpy.arctan")，[`tan`](numpy.tan.html#numpy.tan
    "numpy.tan")，[`angle`](numpy.angle.html#numpy.angle "numpy.angle")'
- en: Notes
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: '*arctan2* is identical to the *atan2* function of the underlying C library.
    The following special values are defined in the C standard: [[1]](#r73eacd397847-1)'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '*arctan2*与底层C库的*atan2*函数相同。C标准中定义了以下特殊值：[[1]](#r73eacd397847-1)'
- en: '| *x1* | *x2* | *arctan2(x1,x2)* |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| *x1* | *x2* | *arctan2(x1,x2)* |'
- en: '| --- | --- | --- |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| +/- 0 | +0 | +/- 0 |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| +/- 0 | +0 | +/- 0 |'
- en: '| +/- 0 | -0 | +/- pi |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| +/- 0 | -0 | +/- pi |'
- en: '| > 0 | +/-inf | +0 / +pi |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| > 0 | +/-inf | +0 / +pi |'
- en: '| < 0 | +/-inf | -0 / -pi |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| < 0 | +/-inf | -0 / -pi |'
- en: '| +/-inf | +inf | +/- (pi/4) |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| +/-inf | +inf | +/- (pi/4) |'
- en: '| +/-inf | -inf | +/- (3*pi/4) |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| +/-inf | -inf | +/- (3*pi/4) |'
- en: Note that +0 and -0 are distinct floating point numbers, as are +inf and -inf.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，+0和-0是不同的浮点数，+inf和-inf也是如此。
- en: References
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[1](#id1)]'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[[1](#id1)]'
- en: ISO/IEC standard 9899:1999, “Programming language C.”
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: ISO/IEC标准9899:1999，“C编程语言。”
- en: Examples
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Consider four points in different quadrants:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑不同象限中的四个点：
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Note the order of the parameters. [`arctan2`](#numpy.arctan2 "numpy.arctan2")
    is defined also when *x2* = 0 and at several other special points, obtaining values
    in the range `[-pi, pi]`:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 注意参数的顺序。[`arctan2`](#numpy.arctan2 "numpy.arctan2") 在*x2*等于0以及其他几个特殊点也有定义，并在范围`[-pi,
    pi]`内取值：
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
