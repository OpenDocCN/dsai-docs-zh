["```py\nscipy.linalg.lu(a, permute_l=False, overwrite_a=False, check_finite=True, p_indices=False)\n```", "```py\nA = P @ L @ U \n```", "```py\n>>> import numpy as np\n>>> from scipy.linalg import lu\n>>> A = np.array([[2, 5, 8, 7], [5, 2, 2, 8], [7, 5, 6, 6], [5, 4, 4, 8]])\n>>> p, l, u = lu(A)\n>>> np.allclose(A, p @ l @ u)\nTrue\n>>> p  # Permutation matrix\narray([[0., 1., 0., 0.],  # Row index 1\n [0., 0., 0., 1.],  # Row index 3\n [1., 0., 0., 0.],  # Row index 0\n [0., 0., 1., 0.]]) # Row index 2\n>>> p, _, _ = lu(A, p_indices=True)\n>>> p\narray([1, 3, 0, 2])  # as given by row indices above\n>>> np.allclose(A, l[p, :] @ u)\nTrue \n```", "```py\n>>> rng = np.random.default_rng()\n>>> A = rng.uniform(low=-4, high=4, size=[3, 2, 4, 8])\n>>> p, l, u = lu(A)\n>>> p.shape, l.shape, u.shape\n((3, 2, 4, 4), (3, 2, 4, 4), (3, 2, 4, 8))\n>>> np.allclose(A, p @ l @ u)\nTrue\n>>> PL, U = lu(A, permute_l=True)\n>>> np.allclose(A, PL @ U)\nTrue \n```"]