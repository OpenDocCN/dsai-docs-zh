- en: numpy.emath.sqrt
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.emath.sqrt
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.emath.sqrt.html](https://numpy.org/doc/1.26/reference/generated/numpy.emath.sqrt.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.emath.sqrt.html](https://numpy.org/doc/1.26/reference/generated/numpy.emath.sqrt.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Compute the square root of x.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 计算x的平方根。
- en: For negative input elements, a complex value is returned (unlike [`numpy.sqrt`](numpy.sqrt.html#numpy.sqrt
    "numpy.sqrt") which returns NaN).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 对于负输入元素，会返回一个复数（与[`numpy.sqrt`](numpy.sqrt.html#numpy.sqrt "numpy.sqrt")不同，它会返回NaN）。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x**array_like'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**类似数组'
- en: The input value(s).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 输入值。
- en: 'Returns:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**out**ndarray or scalar'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**ndarray或标量'
- en: The square root of *x*. If *x* was a scalar, so is *out*, otherwise an array
    is returned.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*x*的平方根。如果*x*是标量，*out*也是如此，否则将返回一个数组。'
- en: See also
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`numpy.sqrt`](numpy.sqrt.html#numpy.sqrt "numpy.sqrt")'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[`numpy.sqrt`](numpy.sqrt.html#numpy.sqrt "numpy.sqrt")'
- en: Examples
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'For real, non-negative inputs this works just like [`numpy.sqrt`](numpy.sqrt.html#numpy.sqrt
    "numpy.sqrt"):'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对于真实且非负的输入，这就像使用[`numpy.sqrt`](numpy.sqrt.html#numpy.sqrt "numpy.sqrt")一样：
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'But it automatically handles negative inputs:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 但它自动处理负输入：
- en: '[PRE2]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Different results are expected because: floating point 0.0 and -0.0 are distinct.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 由于：浮点数0.0和-0.0是不同的，所以会有不同的结果。
- en: 'For more control, explicitly use complex() as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要更加灵活地控制，可显式地使用`complex()`如下所示：
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
