- en: pandas.read_sql_query
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.read_sql_query.html](https://pandas.pydata.org/docs/reference/api/pandas.read_sql_query.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Read SQL query into a DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: Returns a DataFrame corresponding to the result set of the query string. Optionally
    provide an index_col parameter to use one of the columns as the index, otherwise
    default integer index will be used.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**sql**str SQL query or SQLAlchemy Selectable (select or text object)'
  prefs: []
  type: TYPE_NORMAL
- en: SQL query to be executed.
  prefs: []
  type: TYPE_NORMAL
- en: '**con**SQLAlchemy connectable, str, or sqlite3 connection'
  prefs: []
  type: TYPE_NORMAL
- en: Using SQLAlchemy makes it possible to use any DB supported by that library.
    If a DBAPI2 object, only sqlite3 is supported.
  prefs: []
  type: TYPE_NORMAL
- en: '**index_col**str or list of str, optional, default: None'
  prefs: []
  type: TYPE_NORMAL
- en: Column(s) to set as index(MultiIndex).
  prefs: []
  type: TYPE_NORMAL
- en: '**coerce_float**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Attempts to convert values of non-string, non-numeric objects (like decimal.Decimal)
    to floating point. Useful for SQL result sets.
  prefs: []
  type: TYPE_NORMAL
- en: '**params**list, tuple or mapping, optional, default: None'
  prefs: []
  type: TYPE_NORMAL
- en: 'List of parameters to pass to execute method. The syntax used to pass parameters
    is database driver dependent. Check your database driver documentation for which
    of the five syntax styles, described in PEP 249’s paramstyle, is supported. Eg.
    for psycopg2, uses %(name)s so use params={‘name’ : ‘value’}.'
  prefs: []
  type: TYPE_NORMAL
- en: '**parse_dates**list or dict, default: None'
  prefs: []
  type: TYPE_NORMAL
- en: List of column names to parse as dates.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Dict of `{column_name: format string}` where format string is strftime compatible
    in case of parsing string times, or is one of (D, s, ns, ms, us) in case of parsing
    integer timestamps.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Dict of `{column_name: arg dict}`, where the arg dict corresponds to the keyword
    arguments of [`pandas.to_datetime()`](pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") Especially useful with databases without native Datetime
    support, such as SQLite.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**chunksize**int, default None'
  prefs: []
  type: TYPE_NORMAL
- en: If specified, return an iterator where chunksize is the number of rows to include
    in each chunk.
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype**Type name or dict of columns'
  prefs: []
  type: TYPE_NORMAL
- en: 'Data type for data or columns. E.g. np.float64 or {‘a’: np.float64, ‘b’: np.int32,
    ‘c’: ‘Int64’}.'
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.3.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype_backend**{‘numpy_nullable’, ‘pyarrow’}, default ‘numpy_nullable’'
  prefs: []
  type: TYPE_NORMAL
- en: 'Back-end data type applied to the resultant [`DataFrame`](pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") (still experimental). Behaviour is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`"numpy_nullable"`: returns nullable-dtype-backed [`DataFrame`](pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") (default).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`"pyarrow"`: returns pyarrow-backed nullable [`ArrowDtype`](pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") DataFrame.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New in version 2.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: DataFrame or Iterator[DataFrame]
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_sql_table`](pandas.read_sql_table.html#pandas.read_sql_table "pandas.read_sql_table")'
  prefs: []
  type: TYPE_NORMAL
- en: Read SQL database table into a DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_sql`](pandas.read_sql.html#pandas.read_sql "pandas.read_sql")'
  prefs: []
  type: TYPE_NORMAL
- en: Read SQL query or database table into a DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Any datetime values with time zone information parsed via the parse_dates parameter
    will be converted to UTC.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
