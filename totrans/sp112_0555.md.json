["```py\nscipy.signal.sosfreqz(sos, worN=512, whole=False, fs=6.283185307179586)\n```", "```py\n B0(z)   B1(z)         B{n-1}(z)\nH(z) = ----- * ----- * ... * ---------\n       A0(z)   A1(z)         A{n-1}(z) \n```", "```py\n>>> from scipy import signal\n>>> import numpy as np\n>>> sos = signal.ellip(15, 0.5, 60, (0.2, 0.4), btype='bandpass',\n...                    output='sos') \n```", "```py\n>>> w, h = signal.sosfreqz(sos, worN=1500) \n```", "```py\n>>> import matplotlib.pyplot as plt\n>>> plt.subplot(2, 1, 1)\n>>> db = 20*np.log10(np.maximum(np.abs(h), 1e-5))\n>>> plt.plot(w/np.pi, db)\n>>> plt.ylim(-75, 5)\n>>> plt.grid(True)\n>>> plt.yticks([0, -20, -40, -60])\n>>> plt.ylabel('Gain [dB]')\n>>> plt.title('Frequency Response')\n>>> plt.subplot(2, 1, 2)\n>>> plt.plot(w/np.pi, np.angle(h))\n>>> plt.grid(True)\n>>> plt.yticks([-np.pi, -0.5*np.pi, 0, 0.5*np.pi, np.pi],\n...            [r'$-\\pi$', r'$-\\pi/2$', '0', r'$\\pi/2$', r'$\\pi$'])\n>>> plt.ylabel('Phase [rad]')\n>>> plt.xlabel('Normalized frequency (1.0 = Nyquist)')\n>>> plt.show() \n```", "```py\n>>> b, a = signal.ellip(15, 0.5, 60, (0.2, 0.4), btype='bandpass',\n...                    output='ba')\n>>> w, h = signal.freqz(b, a, worN=1500)\n>>> plt.subplot(2, 1, 1)\n>>> db = 20*np.log10(np.maximum(np.abs(h), 1e-5))\n>>> plt.plot(w/np.pi, db)\n>>> plt.ylim(-75, 5)\n>>> plt.grid(True)\n>>> plt.yticks([0, -20, -40, -60])\n>>> plt.ylabel('Gain [dB]')\n>>> plt.title('Frequency Response')\n>>> plt.subplot(2, 1, 2)\n>>> plt.plot(w/np.pi, np.angle(h))\n>>> plt.grid(True)\n>>> plt.yticks([-np.pi, -0.5*np.pi, 0, 0.5*np.pi, np.pi],\n...            [r'$-\\pi$', r'$-\\pi/2$', '0', r'$\\pi/2$', r'$\\pi$'])\n>>> plt.ylabel('Phase [rad]')\n>>> plt.xlabel('Normalized frequency (1.0 = Nyquist)')\n>>> plt.show() \n```"]