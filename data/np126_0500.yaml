- en: numpy.fft.ifftn
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.fft.ifftn
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.fft.ifftn.html](https://numpy.org/doc/1.26/reference/generated/numpy.fft.ifftn.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.fft.ifftn.html](https://numpy.org/doc/1.26/reference/generated/numpy.fft.ifftn.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Compute the N-dimensional inverse discrete Fourier Transform.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 计算N维逆离散傅立叶变换。
- en: This function computes the inverse of the N-dimensional discrete Fourier Transform
    over any number of axes in an M-dimensional array by means of the Fast Fourier
    Transform (FFT). In other words, `ifftn(fftn(a)) == a` to within numerical accuracy.
    For a description of the definitions and conventions used, see [`numpy.fft`](../routines.fft.html#module-numpy.fft
    "numpy.fft").
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数通过快速傅立叶变换（FFT）计算M维数组中的任意数量的轴上N维离散傅立叶变换的逆变换。换句话说，`ifftn(fftn(a)) == a`在数值精度范围内。有关使用的定义和约定的描述，请参阅[`numpy.fft`](../routines.fft.html#module-numpy.fft
    "numpy.fft")。
- en: The input, analogously to [`ifft`](numpy.fft.ifft.html#numpy.fft.ifft "numpy.fft.ifft"),
    should be ordered in the same way as is returned by [`fftn`](numpy.fft.fftn.html#numpy.fft.fftn
    "numpy.fft.fftn"), i.e. it should have the term for zero frequency in all axes
    in the low-order corner, the positive frequency terms in the first half of all
    axes, the term for the Nyquist frequency in the middle of all axes and the negative
    frequency terms in the second half of all axes, in order of decreasingly negative
    frequency.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 输入，类似于[`ifft`](numpy.fft.ifft.html#numpy.fft.ifft "numpy.fft.ifft")，应按照[`fftn`](numpy.fft.fftn.html#numpy.fft.fftn
    "numpy.fft.fftn")的返回方式排序，即在低阶角中的所有轴中都应有零频率项，所有轴的前一半中应有正频率项，所有轴的中间应有奈奎斯特频率项，并按照逐渐减小的负频率的顺序，所有轴的后一半中应有负频率项。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a**array_like'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**array_like'
- en: Input array, can be complex.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数组，可以是复数。
- en: '**s**sequence of ints, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**s**int的序列，可选'
- en: Shape (length of each transformed axis) of the output (`s[0]` refers to axis
    0, `s[1]` to axis 1, etc.). This corresponds to `n` for `ifft(x, n)`. Along any
    axis, if the given shape is smaller than that of the input, the input is cropped.
    If it is larger, the input is padded with zeros. if *s* is not given, the shape
    of the input along the axes specified by *axes* is used. See notes for issue on
    [`ifft`](numpy.fft.ifft.html#numpy.fft.ifft "numpy.fft.ifft") zero padding.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 输出的形状（每个变换轴的长度）（`s[0]`指示轴0，`s[1]`指示轴1，以此类推）。这对应于`ifft(x, n)`的`n`。沿任何轴，如果给定的形状小于输入的形状，则截断输入。如果它大于，则用零填充输入。如果没有给出*s*，则沿着*axes*指定的轴使用输入的形状。参见有关[`ifft`](numpy.fft.ifft.html#numpy.fft.ifft
    "numpy.fft.ifft")零填充问题的注释。
- en: '**axes**sequence of ints, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**axes**int的序列，可选'
- en: Axes over which to compute the IFFT. If not given, the last `len(s)` axes are
    used, or all axes if *s* is also not specified. Repeated indices in *axes* means
    that the inverse transform over that axis is performed multiple times.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 计算IFFT的轴。如果未给出，则使用最后`len(s)`个轴，如果未指定*s*，则使用所有轴。在*axes*中重复的索引意味着在该轴上执行多次逆变换。
- en: '**norm**{“backward”, “ortho”, “forward”}, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**norm**{“backward”, “ortho”, “forward”}，可选'
- en: New in version 1.10.0.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 版本1.10.0中的新功能。
- en: Normalization mode (see [`numpy.fft`](../routines.fft.html#module-numpy.fft
    "numpy.fft")). Default is “backward”. Indicates which direction of the forward/backward
    pair of transforms is scaled and with what normalization factor.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 标准化模式（参见[`numpy.fft`](../routines.fft.html#module-numpy.fft "numpy.fft")）。默认为“backward”。指示前/后变换对中的哪个方向被缩放以及使用什么归一化因子。
- en: 'New in version 1.20.0: The “backward”, “forward” values were added.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 1.20.0版本中的新功能：添加了“backward”、“forward”值。
- en: 'Returns:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**out**complex ndarray'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**复数ndarray'
- en: The truncated or zero-padded input, transformed along the axes indicated by
    *axes*, or by a combination of *s* or *a*, as explained in the parameters section
    above.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 由*axes*指示的轴或由*s*或*a*的组合变换，或者被截断或零填充的输入，如上面的参数部分所述。
- en: 'Raises:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: ValueError
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: ValueError
- en: If *s* and *axes* have different length.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*s*和*axes*长度不同。
- en: IndexError
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: IndexError
- en: If an element of *axes* is larger than than the number of axes of *a*.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*axes*的元素大于*a*的轴数。
- en: See also
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`numpy.fft`](../routines.fft.html#module-numpy.fft "numpy.fft")'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[`numpy.fft`](../routines.fft.html#module-numpy.fft "numpy.fft")'
- en: Overall view of discrete Fourier transforms, with definitions and conventions
    used.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 使用的定义和约定的离散傅立叶变换的总体视图。
- en: '[`fftn`](numpy.fft.fftn.html#numpy.fft.fftn "numpy.fft.fftn")'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fftn`](numpy.fft.fftn.html#numpy.fft.fftn "numpy.fft.fftn")'
- en: The forward *n*-dimensional FFT, of which [`ifftn`](#numpy.fft.ifftn "numpy.fft.ifftn")
    is the inverse.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 此处的*forward* *n*-dimensional FFT是[`ifftn`](#numpy.fft.ifftn "numpy.fft.ifftn")的反向。
- en: '[`ifft`](numpy.fft.ifft.html#numpy.fft.ifft "numpy.fft.ifft")'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ifft`](numpy.fft.ifft.html#numpy.fft.ifft "numpy.fft.ifft")'
- en: The one-dimensional inverse FFT.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 一维逆FFT。
- en: '[`ifft2`](numpy.fft.ifft2.html#numpy.fft.ifft2 "numpy.fft.ifft2")'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ifft2`](numpy.fft.ifft2.html#numpy.fft.ifft2 "numpy.fft.ifft2")'
- en: The two-dimensional inverse FFT.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 二维逆FFT。
- en: '[`ifftshift`](numpy.fft.ifftshift.html#numpy.fft.ifftshift "numpy.fft.ifftshift")'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ifftshift`](numpy.fft.ifftshift.html#numpy.fft.ifftshift "numpy.fft.ifftshift")'
- en: Undoes [`fftshift`](numpy.fft.fftshift.html#numpy.fft.fftshift "numpy.fft.fftshift"),
    shifts zero-frequency terms to beginning of array.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 解除[`fftshift`](numpy.fft.fftshift.html#numpy.fft.fftshift "numpy.fft.fftshift")，将零频率项移到数组的开头。
- en: Notes
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: See [`numpy.fft`](../routines.fft.html#module-numpy.fft "numpy.fft") for definitions
    and conventions used.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 有关使用的定义和惯例，请参见[`numpy.fft`](../routines.fft.html#module-numpy.fft "numpy.fft")。
- en: Zero-padding, analogously with [`ifft`](numpy.fft.ifft.html#numpy.fft.ifft "numpy.fft.ifft"),
    is performed by appending zeros to the input along the specified dimension. Although
    this is the common approach, it might lead to surprising results. If another form
    of zero padding is desired, it must be performed before [`ifftn`](#numpy.fft.ifftn
    "numpy.fft.ifftn") is called.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 零填充，类似于[`ifft`](numpy.fft.ifft.html#numpy.fft.ifft "numpy.fft.ifft")，通过在指定维度上附加零来执行。尽管这是常见的方法，但可能会导致令人惊讶的结果。如果需要另一种形式的零填充，则必须在调用[`ifftn`](#numpy.fft.ifftn
    "numpy.fft.ifftn")之前执行。
- en: Examples
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Create and plot an image with band-limited frequency content:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 创建并绘制具有带限频率内容的图像：
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![../../_images/numpy-fft-ifftn-1.png](../Images/7a0aae6a98e3809d861e80d075f0d60e.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/numpy-fft-ifftn-1.png](../Images/7a0aae6a98e3809d861e80d075f0d60e.png)'
