- en: pandas.core.groupby.SeriesGroupBy.sum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.core.groupby.SeriesGroupBy.sum.html](https://pandas.pydata.org/docs/reference/api/pandas.core.groupby.SeriesGroupBy.sum.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute sum of group values.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**numeric_only**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Include only float, int, boolean columns.
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 2.0.0: numeric_only no longer accepts `None`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**min_count**int, default 0'
  prefs: []
  type: TYPE_NORMAL
- en: The required number of valid values to perform the operation. If fewer than
    `min_count` non-NA values are present the result will be NA.
  prefs: []
  type: TYPE_NORMAL
- en: '**engine**str, default None None'
  prefs: []
  type: TYPE_NORMAL
- en: '`''cython''` : Runs rolling apply through C-extensions from cython.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`''numba''`Runs rolling apply through JIT compiled code from numba.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Only available when `raw` is set to `True`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`None` : Defaults to `''cython''` or globally setting `compute.use_numba`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**engine_kwargs**dict, default None None'
  prefs: []
  type: TYPE_NORMAL
- en: For `'cython'` engine, there are no accepted `engine_kwargs`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For `'numba'` engine, the engine can accept `nopython`, `nogil`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'and `parallel` dictionary keys. The values must either be `True` or `False`.
    The default `engine_kwargs` for the `''numba''` engine is `{''nopython'': True,
    ''nogil'': False, ''parallel'': False}` and will be applied to both the `func`
    and the `apply` groupby aggregation.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: Series or DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: Computed sum of values within each group.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'For SeriesGroupBy:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'For DataFrameGroupBy:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
