- en: numpy.ndarray.view
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.ndarray.view
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.view.html](https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.view.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.view.html](https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.view.html)
- en: method
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: New view of array with the same data.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 具有相同数据的数组的新视图。
- en: Note
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 注
- en: Passing None for `dtype` is different from omitting the parameter, since the
    former invokes `dtype(None)` which is an alias for `dtype('float_')`.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 传递None给`dtype`与省略参数不同，因为前者调用`dtype(None)`，这是`dtype('float_')`的别名。
- en: 'Parameters:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**dtype**data-type or ndarray sub-class, optional'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**dtype**数据类型或者ndarray子类，可选参数'
- en: Data-type descriptor of the returned view, e.g., float32 or int16. Omitting
    it results in the view having the same data-type as *a*. This argument can also
    be specified as an ndarray sub-class, which then specifies the type of the returned
    object (this is equivalent to setting the `type` parameter).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 返回视图的数据类型描述符，例如，float32或int16。省略它会导致视图具有与*a*相同的数据类型。此参数也可以指定为ndarray子类，这样指定了返回对象的类型（这相当于设置`type`参数）。
- en: '**type**Python type, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**type**Python类型，可选参数'
- en: Type of the returned view, e.g., ndarray or matrix. Again, omission of the parameter
    results in type preservation.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 返回视图的类型，例如ndarray或矩阵。同样，省略该参数会保持类型不变。
- en: Notes
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '`a.view()` is used two different ways:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '`a.view()` 有两种不同的用法：'
- en: '`a.view(some_dtype)` or `a.view(dtype=some_dtype)` constructs a view of the
    array’s memory with a different data-type. This can cause a reinterpretation of
    the bytes of memory.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`a.view(some_dtype)` 或 `a.view(dtype=some_dtype)` 构造具有不同数据类型的数组内存的视图。这可能会导致内存字节的重新解释。'
- en: '`a.view(ndarray_subclass)` or `a.view(type=ndarray_subclass)` just returns
    an instance of *ndarray_subclass* that looks at the same array (same shape, dtype,
    etc.) This does not cause a reinterpretation of the memory.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '`a.view(ndarray_subclass)` 或 `a.view(type=ndarray_subclass)` 只是返回一个查看相同数组（相同形状，dtype等）的*ndarray_subclass*的实例。这不会导致对内存的重新解释。'
- en: For `a.view(some_dtype)`, if `some_dtype` has a different number of bytes per
    entry than the previous dtype (for example, converting a regular array to a structured
    array), then the last axis of `a` must be contiguous. This axis will be resized
    in the result.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`a.view(some_dtype)`，如果`some_dtype`每个条目的字节数与先前的数据类型不同（例如，将常规数组转换为结构化数组），那么`a`的最后一个轴必须是连续的。结果中将调整该轴的大小。
- en: 'Changed in version 1.23.0: Only the last axis needs to be contiguous. Previously,
    the entire array had to be C-contiguous.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 1.23.0版本中的更改：只有最后一个轴需要是连续的。以前，整个数组都必须是C连续的。
- en: Examples
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Viewing array data using a different type and dtype:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 使用不同的类型和数据类型查看数组数据：
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Creating a view on a structured array so it can be used in calculations
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 创建结构化数组上的视图，以便可以在计算中使用
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Making changes to the view changes the underlying array
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 对视图进行修改会更改基础数组。
- en: '[PRE4]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Using a view to convert an array to a recarray:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 使用视图将数组转换为recarray：
- en: '[PRE5]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Views share data:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 视图共享数据：
- en: '[PRE6]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Views that change the dtype size (bytes per entry) should normally be avoided
    on arrays defined by slices, transposes, fortran-ordering, etc.:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 改变dtype大小（每个条目的字节数）的视图应该通常避免在由切片，转置，Fortran顺序等定义的数组上使用：
- en: '[PRE7]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'However, views that change dtype are totally fine for arrays with a contiguous
    last axis, even if the rest of the axes are not C-contiguous:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，改变dtype的视图对于最后一个轴是连续的数组是完全可以的，即使其他轴不是C连续的：
- en: '[PRE8]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
