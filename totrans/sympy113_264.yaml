- en: Utils
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/geometry/utils.html](https://docs.sympy.org/latest/modules/geometry/utils.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The intersection of a collection of GeometryEntity instances.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**entities** : sequence of GeometryEntity'
  prefs: []
  type: TYPE_NORMAL
- en: '**pairwise (keyword argument)** : Can be either True or False'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**intersection** : list of GeometryEntity'
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: '**NotImplementedError**'
  prefs: []
  type: TYPE_NORMAL
- en: When unable to calculate intersection.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'The intersection of any geometrical entity with itself should return a list
    with one item: the entity in question. An intersection requires two or more entities.
    If only a single entity is given then the function will return an empty list.
    It is possible for \(intersection\) to miss intersections that one knows exists
    because the required quantities were not fully simplified internally. Reals should
    be converted to Rationals, e.g. Rational(str(real_num)) or else failures due to
    floating point issues may result.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Case 1: When the keyword argument ‘pairwise’ is False (default value): In this
    case, the function returns a list of intersections common to all entities.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Case 2: When the keyword argument ‘pairwise’ is True: In this case, the functions
    returns a list intersections that occur between any pair of entities.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.geometry.entity.GeometryEntity.intersection`](entities.html#sympy.geometry.entity.GeometryEntity.intersection
    "sympy.geometry.entity.GeometryEntity.intersection")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The convex hull surrounding the Points contained in the list of entities.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**args** : a collection of Points, Segments and/or Polygons'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**convex_hull** : Polygon if `polygon` is True else as a tuple \((U, L)\) where'
  prefs: []
  type: TYPE_NORMAL
- en: '`L` and `U` are the lower and upper hulls, respectively.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Optional Parameters
  prefs: []
  type: TYPE_NORMAL
- en: polygonBoolean. If True, returns a Polygon, if false a tuple, see below.
  prefs: []
  type: TYPE_NORMAL
- en: Default is True.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This can only be performed on a set of points whose coordinates can be ordered
    on the number line.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point"),
    [`sympy.geometry.polygon.Polygon`](polygons.html#sympy.geometry.polygon.Polygon
    "sympy.geometry.polygon.Polygon")'
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[R563](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Graham_scan](https://en.wikipedia.org/wiki/Graham_scan)'
  prefs: []
  type: TYPE_NORMAL
- en: '[[R564](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: Andrew’s Monotone Chain Algorithm (A.M. Andrew, “Another Efficient Algorithm
    for Convex Hulls in Two Dimensions”, 1979) [https://web.archive.org/web/20210511015444/http://geomalgorithms.com/a10-_hull-1.html](https://web.archive.org/web/20210511015444/http://geomalgorithms.com/a10-_hull-1.html)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Are two geometrical entities similar.
  prefs: []
  type: TYPE_NORMAL
- en: Can one geometrical entity be uniformly scaled to the other?
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**e1** : GeometryEntity'
  prefs: []
  type: TYPE_NORMAL
- en: '**e2** : GeometryEntity'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**are_similar** : boolean'
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: '**GeometryError**'
  prefs: []
  type: TYPE_NORMAL
- en: When \(e1\) and \(e2\) cannot be compared.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: If the two objects are equal then they are similar.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.geometry.entity.GeometryEntity.is_similar`](entities.html#sympy.geometry.entity.GeometryEntity.is_similar
    "sympy.geometry.entity.GeometryEntity.is_similar")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Find the centroid (center of mass) of the collection containing only Points,
    Segments or Polygons. The centroid is the weighted average of the individual centroid
    where the weights are the lengths (of segments) or areas (of polygons). Overlapping
    regions will add to the weight of that region.
  prefs: []
  type: TYPE_NORMAL
- en: If there are no objects (or a mixture of objects) then None is returned.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Stacking 3 polygons on top of each other effectively triples the weight of
    that polygon:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Stacking the squares vertically above and below p has the same effect:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point"),
    [`sympy.geometry.line.Segment`](lines.html#sympy.geometry.line.Segment "sympy.geometry.line.Segment"),
    [`sympy.geometry.polygon.Polygon`](polygons.html#sympy.geometry.polygon.Polygon
    "sympy.geometry.polygon.Polygon")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Return `dy/dx` assuming that `eq == 0`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**y** : the dependent variable or a list of dependent variables (with y first)'
  prefs: []
  type: TYPE_NORMAL
- en: '**x** : the variable that the derivative is being taken with respect to'
  prefs: []
  type: TYPE_NORMAL
- en: '**n** : the order of the derivative (default is 1)'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Here, `a` is assumed to be independent of `x`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Now the x-dependence of `a` is made explicit by listing `a` after `y` in a list.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.core.function.Derivative`](../core.html#sympy.core.function.Derivative
    "sympy.core.function.Derivative")'
  prefs: []
  type: TYPE_NORMAL
- en: represents unevaluated derivatives
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.core.function.diff`](../core.html#sympy.core.function.diff "sympy.core.function.diff")'
  prefs: []
  type: TYPE_NORMAL
- en: explicitly differentiates wrt symbols
  prefs: []
  type: TYPE_NORMAL
