- en: scipy.ndimage.distance_transform_cdt
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.ndimage.distance_transform_cdt
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.distance_transform_cdt.html#scipy.ndimage.distance_transform_cdt](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.distance_transform_cdt.html#scipy.ndimage.distance_transform_cdt)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.distance_transform_cdt.html#scipy.ndimage.distance_transform_cdt](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.distance_transform_cdt.html#scipy.ndimage.distance_transform_cdt)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Distance transform for chamfer type of transforms.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 按chamfer类型的转换的距离变换。
- en: This function calculates the distance transform of the *input*, by replacing
    each foreground (non-zero) element, with its shortest distance to the background
    (any zero-valued element).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数通过将每个前景（非零）元素替换为其到背景（任何零值元素）的最短距离，计算*input*的距离变换。
- en: In addition to the distance transform, the feature transform can be calculated.
    In this case the index of the closest background element to each foreground element
    is returned in a separate array.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 除了距离变换之外，还可以计算特征变换。在这种情况下，将返回一个单独的数组，其中包含每个前景元素到最近背景元素的索引。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**input**array_like'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**input**array_like'
- en: Input. Values of 0 are treated as background.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 输入。值为0被视为背景。
- en: '**metric**{‘chessboard’, ‘taxicab’} or array_like, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**metric**{‘chessboard’, ‘taxicab’} 或 array_like，可选'
- en: The *metric* determines the type of chamfering that is done. If the *metric*
    is equal to ‘taxicab’ a structure is generated using [`generate_binary_structure`](scipy.ndimage.generate_binary_structure.html#scipy.ndimage.generate_binary_structure
    "scipy.ndimage.generate_binary_structure") with a squared distance equal to 1\.
    If the *metric* is equal to ‘chessboard’, a *metric* is generated using [`generate_binary_structure`](scipy.ndimage.generate_binary_structure.html#scipy.ndimage.generate_binary_structure
    "scipy.ndimage.generate_binary_structure") with a squared distance equal to the
    dimensionality of the array. These choices correspond to the common interpretations
    of the ‘taxicab’ and the ‘chessboard’ distance metrics in two dimensions. A custom
    metric may be provided, in the form of a matrix where each dimension has a length
    of three. ‘cityblock’ and ‘manhattan’ are also valid, and map to ‘taxicab’. The
    default is ‘chessboard’.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*metric*确定所执行的chamfer类型。如果*metric*等于''taxicab''，则生成一个结构，使用[`generate_binary_structure`](scipy.ndimage.generate_binary_structure.html#scipy.ndimage.generate_binary_structure
    "scipy.ndimage.generate_binary_structure") ，其平方距离等于1。如果*metric*等于''chessboard''，则生成一个*metric*，使用[`generate_binary_structure`](scipy.ndimage.generate_binary_structure.html#scipy.ndimage.generate_binary_structure
    "scipy.ndimage.generate_binary_structure") ，其平方距离等于数组的维数。这些选择对应于在二维空间中‘taxicab’和‘chessboard’距离度量的常见解释。可以提供自定义的度量，形式为一个矩阵，其中每个维度长度为三。‘cityblock’和‘manhattan’也是有效的，并映射到‘taxicab’。默认值是‘chessboard’。'
- en: '**return_distances**bool, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**return_distances**bool，可选'
- en: Whether to calculate the distance transform. Default is True.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 是否计算距离变换。默认为True。
- en: '**return_indices**bool, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**return_indices**bool，可选'
- en: Whether to calculate the feature transform. Default is False.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 是否计算特征变换。默认为False。
- en: '**distances**int32 ndarray, optional'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**distances**int32 ndarray，可选'
- en: An output array to store the calculated distance transform, instead of returning
    it. *return_distances* must be True. It must be the same shape as *input*.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一个输出数组，用于存储计算得到的距离变换，而不是返回它。*return_distances* 必须为True。它必须与*input*具有相同的形状。
- en: '**indices**int32 ndarray, optional'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**indices**int32 ndarray，可选'
- en: An output array to store the calculated feature transform, instead of returning
    it. *return_indicies* must be True. Its shape must be *(input.ndim,) + input.shape*.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 一个输出数组，用于存储计算得到的特征变换，而不是返回它。*return_indicies* 必须为True。其形状必须为*(input.ndim,) +
    input.shape*。
- en: 'Returns:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**distances**int32 ndarray, optional'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**distances**int32 ndarray，可选'
- en: The calculated distance transform. Returned only when *return_distances* is
    True, and *distances* is not supplied. It will have the same shape as the input
    array.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 计算得到的距离变换。仅在*return_distances*为True且未提供*distances*时返回。它的形状与输入数组相同。
- en: '**indices**int32 ndarray, optional'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**indices**int32 ndarray，可选'
- en: The calculated feature transform. It has an input-shaped array for each dimension
    of the input. See distance_transform_edt documentation for an example. Returned
    only when *return_indices* is True, and *indices* is not supplied.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 计算得到的特征变换。对于输入的每个维度，它有一个形状相同的数组。详细示例请参见distance_transform_edt文档。仅在*return_indices*为True且未提供*indices*时返回。
- en: See also
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`distance_transform_edt`](scipy.ndimage.distance_transform_edt.html#scipy.ndimage.distance_transform_edt
    "scipy.ndimage.distance_transform_edt")'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[`distance_transform_edt`](scipy.ndimage.distance_transform_edt.html#scipy.ndimage.distance_transform_edt
    "scipy.ndimage.distance_transform_edt")'
- en: Fast distance transform for euclidean metric
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 欧几里得距离的快速距离变换
- en: '[`distance_transform_bf`](scipy.ndimage.distance_transform_bf.html#scipy.ndimage.distance_transform_bf
    "scipy.ndimage.distance_transform_bf")'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[`distance_transform_bf`](scipy.ndimage.distance_transform_bf.html#scipy.ndimage.distance_transform_bf
    "scipy.ndimage.distance_transform_bf")'
- en: Distance transform for different metrics using a slower brute force algorithm
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 使用较慢的蛮力算法进行不同度量的距离变换
- en: Examples
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: Import the necessary modules.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 导入必要的模块。
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: First, we create a toy binary image.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们创建一个玩具二进制图像。
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Next, we set up the figure.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们设置图表。
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The top image contains the original binary image.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 顶部图像包含原始的二进制图像。
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The middle image contains the distance transform using the `taxicab` metric.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 中间图像包含使用`曼哈顿距离`度量的距离变换。
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The bottom image contains the distance transform using the `chessboard` metric.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 底部图像包含使用`棋盘距离`度量的距离变换。
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![../../_images/scipy-ndimage-distance_transform_cdt-1.png](../Images/15babeac83d803664db42532249c3cfe.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-ndimage-distance_transform_cdt-1.png](../Images/15babeac83d803664db42532249c3cfe.png)'
