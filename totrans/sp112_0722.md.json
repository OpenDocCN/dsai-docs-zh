["```py\n G\n\n     (0)\n    /   \\\n   1     2\n  /       \\\n(2)       (1) \n```", "```py\n>>> import numpy as np\n>>> G_dense = np.array([[0, 2, 1],\n...                     [2, 0, 0],\n...                     [1, 0, 0]])\n>>> G_masked = np.ma.masked_values(G_dense, 0)\n>>> from scipy.sparse import csr_matrix\n>>> G_sparse = csr_matrix(G_dense) \n```", "```py\n G2\n\n     (0)\n    /   \\\n   0     2\n  /       \\\n(2)       (1) \n```", "```py\n>>> import numpy as np\n>>> G2_data = np.array([[np.inf, 2,      0     ],\n...                     [2,      np.inf, np.inf],\n...                     [0,      np.inf, np.inf]])\n>>> G2_masked = np.ma.masked_invalid(G2_data)\n>>> from scipy.sparse.csgraph import csgraph_from_dense\n>>> # G2_sparse = csr_matrix(G2_data) would give the wrong result\n>>> G2_sparse = csgraph_from_dense(G2_data, null_value=np.inf)\n>>> G2_sparse.data\narray([ 2.,  0.,  2.,  0.]) \n```", "```py\n>>> import numpy as np\n>>> G_dense = np.array([[0, 1, 0],\n...                     [2, 0, 3],\n...                     [0, 4, 0]]) \n```", "```py\n ---1--> ---3-->\n(0)     (1)     (2)\n  <--2--- <--4--- \n```", "```py\n(0)--1--(1)--3--(2) \n```"]