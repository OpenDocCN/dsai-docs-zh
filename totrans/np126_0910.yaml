- en: numpy.nan_to_num
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.nan_to_num.html](https://numpy.org/doc/1.26/reference/generated/numpy.nan_to_num.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Replace NaN with zero and infinity with large finite numbers (default behaviour)
    or with the numbers defined by the user using the [`nan`](../constants.html#numpy.nan
    "numpy.nan"), *posinf* and/or *neginf* keywords.
  prefs: []
  type: TYPE_NORMAL
- en: If *x* is inexact, NaN is replaced by zero or by the user defined value in [`nan`](../constants.html#numpy.nan
    "numpy.nan") keyword, infinity is replaced by the largest finite floating point
    values representable by `x.dtype` or by the user defined value in *posinf* keyword
    and -infinity is replaced by the most negative finite floating point values representable
    by `x.dtype` or by the user defined value in *neginf* keyword.
  prefs: []
  type: TYPE_NORMAL
- en: For complex dtypes, the above is applied to each of the real and imaginary components
    of *x* separately.
  prefs: []
  type: TYPE_NORMAL
- en: If *x* is not inexact, then no replacements are made.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**scalar or array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input data.
  prefs: []
  type: TYPE_NORMAL
- en: '**copy**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to create a copy of *x* (True) or to replace values in-place (False).
    The in-place operation only occurs if casting to an array does not require a copy.
    Default is True.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.13.
  prefs: []
  type: TYPE_NORMAL
- en: '**nan**int, float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Value to be used to fill NaN values. If no value is passed then NaN values will
    be replaced with 0.0.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.17.
  prefs: []
  type: TYPE_NORMAL
- en: '**posinf**int, float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Value to be used to fill positive infinity values. If no value is passed then
    positive infinity values will be replaced with a very large number.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.17.
  prefs: []
  type: TYPE_NORMAL
- en: '**neginf**int, float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Value to be used to fill negative infinity values. If no value is passed then
    negative infinity values will be replaced with a very small (or negative) number.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.17.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: '*x*, with the non-finite values replaced. If [`copy`](numpy.copy.html#numpy.copy
    "numpy.copy") is False, this may be *x* itself.'
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`isinf`](numpy.isinf.html#numpy.isinf "numpy.isinf")'
  prefs: []
  type: TYPE_NORMAL
- en: Shows which elements are positive or negative infinity.
  prefs: []
  type: TYPE_NORMAL
- en: '[`isneginf`](numpy.isneginf.html#numpy.isneginf "numpy.isneginf")'
  prefs: []
  type: TYPE_NORMAL
- en: Shows which elements are negative infinity.
  prefs: []
  type: TYPE_NORMAL
- en: '[`isposinf`](numpy.isposinf.html#numpy.isposinf "numpy.isposinf")'
  prefs: []
  type: TYPE_NORMAL
- en: Shows which elements are positive infinity.
  prefs: []
  type: TYPE_NORMAL
- en: '[`isnan`](numpy.isnan.html#numpy.isnan "numpy.isnan")'
  prefs: []
  type: TYPE_NORMAL
- en: Shows which elements are Not a Number (NaN).
  prefs: []
  type: TYPE_NORMAL
- en: '[`isfinite`](numpy.isfinite.html#numpy.isfinite "numpy.isfinite")'
  prefs: []
  type: TYPE_NORMAL
- en: Shows which elements are finite (not NaN, not infinity)
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: NumPy uses the IEEE Standard for Binary Floating-Point for Arithmetic (IEEE
    754). This means that Not a Number is not equivalent to infinity.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
