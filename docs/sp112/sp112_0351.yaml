- en: scipy.ndimage.generic_filter
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.ndimage.generic_filter
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.generic_filter.html#scipy.ndimage.generic_filter](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.generic_filter.html#scipy.ndimage.generic_filter)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.generic_filter.html#scipy.ndimage.generic_filter](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.generic_filter.html#scipy.ndimage.generic_filter)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Calculate a multidimensional filter using the given function.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 使用给定函数计算多维滤波器。
- en: At each element the provided function is called. The input values within the
    filter footprint at that element are passed to the function as a 1-D array of
    double values.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个元素处调用提供的函数。在该元素处的滤波器足迹内的输入值作为双值数组传递给函数。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**input**array_like'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**input**类似数组'
- en: The input array.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数组。
- en: '**function**{callable, scipy.LowLevelCallable}'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**function**{callable, scipy.LowLevelCallable}'
- en: Function to apply at each element.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个元素上应用的函数。
- en: '**size**scalar or tuple, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**size**标量或元组，可选'
- en: See footprint, below. Ignored if footprint is given.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 见footprint，如果给出了footprint，则忽略。
- en: '**footprint**array, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**footprint**数组，可选'
- en: Either *size* or *footprint* must be defined. *size* gives the shape that is
    taken from the input array, at every element position, to define the input to
    the filter function. *footprint* is a boolean array that specifies (implicitly)
    a shape, but also which of the elements within this shape will get passed to the
    filter function. Thus `size=(n,m)` is equivalent to `footprint=np.ones((n,m))`.
    We adjust *size* to the number of dimensions of the input array, so that, if the
    input array is shape (10,10,10), and *size* is 2, then the actual size used is
    (2,2,2). When *footprint* is given, *size* is ignored.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 必须定义*size*或*footprint*之一。*size*表示从输入数组中的每个元素位置获取的形状，以定义滤波器函数的输入。*footprint*是一个布尔数组，隐式指定了一个形状，但也指定了该形状内部哪些元素将传递给滤波器函数。因此，`size=(n,m)`等同于`footprint=np.ones((n,m))`。我们根据输入数组的维数调整*size*，因此如果输入数组形状为(10,10,10)，而*size*为2，则使用的实际大小为(2,2,2)。如果给定了*footprint*，则*size*将被忽略。
- en: '**output**array or dtype, optional'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**output**数组或dtype，可选'
- en: The array in which to place the output, or the dtype of the returned array.
    By default an array of the same dtype as input will be created.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 放置输出的数组或返回数组的dtype，可选，默认情况下将创建与输入相同dtype的数组。
- en: '**mode**{‘reflect’, ‘constant’, ‘nearest’, ‘mirror’, ‘wrap’}, optional'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**mode**{‘reflect’, ‘constant’, ‘nearest’, ‘mirror’, ‘wrap’}，可选'
- en: 'The *mode* parameter determines how the input array is extended beyond its
    boundaries. Default is ‘reflect’. Behavior for each valid value is as follows:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*mode*参数决定如何扩展输入数组超出其边界的方式。默认为‘reflect’。每个有效值的行为如下：'
- en: ‘reflect’ (*d c b a | a b c d | d c b a*)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: ‘reflect’ (*d c b a | a b c d | d c b a*)
- en: The input is extended by reflecting about the edge of the last pixel. This mode
    is also sometimes referred to as half-sample symmetric.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 通过反射关于最后一个像素的边界来扩展输入。此模式有时也称为半样本对称。
- en: ‘constant’ (*k k k k | a b c d | k k k k*)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: ‘constant’ (*k k k k | a b c d | k k k k*)
- en: The input is extended by filling all values beyond the edge with the same constant
    value, defined by the *cval* parameter.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 通过填充所有超出边缘的值来扩展输入，填充值由*cval*参数定义。
- en: ‘nearest’ (*a a a a | a b c d | d d d d*)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: ‘nearest’ (*a a a a | a b c d | d d d d*)
- en: The input is extended by replicating the last pixel.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 通过复制最后一个像素来扩展输入。
- en: ‘mirror’ (*d c b | a b c d | c b a*)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: ‘mirror’ (*d c b | a b c d | c b a*)
- en: The input is extended by reflecting about the center of the last pixel. This
    mode is also sometimes referred to as whole-sample symmetric.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 通过关于最后一个像素中心的反射来扩展输入。此模式有时也称为全样本对称。
- en: ‘wrap’ (*a b c d | a b c d | a b c d*)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: ‘wrap’ (*a b c d | a b c d | a b c d*)
- en: The input is extended by wrapping around to the opposite edge.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 通过环绕到相对边缘来扩展输入。
- en: 'For consistency with the interpolation functions, the following mode names
    can also be used:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 为了与插值函数保持一致，还可以使用以下模式名称：
- en: ‘grid-mirror’
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: ‘grid-mirror’
- en: This is a synonym for ‘reflect’.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这是‘reflect’的同义词。
- en: ‘grid-constant’
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: ‘grid-constant’
- en: This is a synonym for ‘constant’.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这是‘constant’的同义词。
- en: ‘grid-wrap’
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: ‘grid-wrap’
- en: This is a synonym for ‘wrap’.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这是‘wrap’的同义词。
- en: '**cval**scalar, optional'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**cval**标量，可选'
- en: Value to fill past edges of input if *mode* is ‘constant’. Default is 0.0.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*mode*为‘constant’，则用于填充输入边缘的值。默认为0.0。
- en: '**origin**int or sequence, optional'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**origin**整数或序列，可选'
- en: Controls the placement of the filter on the input array’s pixels. A value of
    0 (the default) centers the filter over the pixel, with positive values shifting
    the filter to the left, and negative ones to the right. By passing a sequence
    of origins with length equal to the number of dimensions of the input array, different
    shifts can be specified along each axis.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 控制滤波器在输入数组像素上的放置。值为0（默认）将滤波器居中在像素上，正值将滤波器向左移动，负值将其向右移动。通过传递长度等于输入数组维数的起源序列，可以指定每个轴上的不同移位。
- en: '**extra_arguments**sequence, optional'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**extra_arguments**sequence, optional'
- en: Sequence of extra positional arguments to pass to passed function.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 需要传递给传递函数的额外位置参数的序列。
- en: '**extra_keywords**dict, optional'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**extra_keywords**dict, optional'
- en: dict of extra keyword arguments to pass to passed function.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 需要传递给传递函数的额外关键字参数的字典。
- en: 'Returns:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**generic_filter**ndarray'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**generic_filter**ndarray'
- en: Filtered array. Has the same shape as *input*.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤后的数组。形状与*input*相同。
- en: Notes
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: 'This function also accepts low-level callback functions with one of the following
    signatures and wrapped in [`scipy.LowLevelCallable`](scipy.LowLevelCallable.html#scipy.LowLevelCallable
    "scipy.LowLevelCallable"):'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数还接受具有以下签名之一的低级回调函数，并包装在[`scipy.LowLevelCallable`](https://scipy.LowLevelCallable.html#scipy.LowLevelCallable
    "scipy.LowLevelCallable")中：
- en: '[PRE1]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The calling function iterates over the elements of the input and output arrays,
    calling the callback function at each element. The elements within the footprint
    of the filter at the current element are passed through the `buffer` parameter,
    and the number of elements within the footprint through `filter_size`. The calculated
    value is returned in `return_value`. `user_data` is the data pointer provided
    to [`scipy.LowLevelCallable`](scipy.LowLevelCallable.html#scipy.LowLevelCallable
    "scipy.LowLevelCallable") as-is.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 调用函数在输入和输出数组的元素上进行迭代，每个元素调用回调函数。当前元素处于滤波器足迹内的元素通过`buffer`参数传递，足迹内元素的数量通过`filter_size`传递。计算得到的值在`return_value`中返回。`user_data`作为[`scipy.LowLevelCallable`](https://scipy.LowLevelCallable.html#scipy.LowLevelCallable
    "scipy.LowLevelCallable")的数据指针提供。
- en: The callback function must return an integer error status that is zero if something
    went wrong and one otherwise. If an error occurs, you should normally set the
    python error status with an informative message before returning, otherwise a
    default error message is set by the calling function.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 回调函数必须返回整数错误状态，如果出现问题则为零，否则为一。如果发生错误，通常应在返回之前设置Python错误状态并附上信息，否则调用函数会设置默认错误消息。
- en: In addition, some other low-level function pointer specifications are accepted,
    but these are for backward compatibility only and should not be used in new code.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还接受一些其他低级函数指针规范，但这些仅用于向后兼容，不应在新代码中使用。
- en: Examples
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: Import the necessary modules and load the example image used for filtering.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 导入必要的模块并加载用于过滤的示例图像。
- en: '[PRE2]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Compute a maximum filter with kernel size 10 by passing a simple NumPy aggregation
    function as argument to *function*.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将简单的NumPy聚合函数作为*function*的参数来计算大小为10的最大滤波器。
- en: '[PRE3]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: While a maximmum filter could also directly be obtained using [`maximum_filter`](scipy.ndimage.maximum_filter.html#scipy.ndimage.maximum_filter
    "scipy.ndimage.maximum_filter"), [`generic_filter`](#scipy.ndimage.generic_filter
    "scipy.ndimage.generic_filter") allows generic Python function or [`scipy.LowLevelCallable`](scipy.LowLevelCallable.html#scipy.LowLevelCallable
    "scipy.LowLevelCallable") to be used as a filter. Here, we compute the range between
    maximum and minimum value as an example for a kernel size of 5.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然也可以直接使用[`maximum_filter`](https://scipy.ndimage.maximum_filter.html#scipy.ndimage.maximum_filter
    "scipy.ndimage.maximum_filter")获取最大滤波器，但[`generic_filter`](#scipy.ndimage.generic_filter
    "scipy.ndimage.generic_filter")允许使用通用Python函数或[`scipy.LowLevelCallable`](https://scipy.LowLevelCallable.html#scipy.LowLevelCallable
    "scipy.LowLevelCallable")作为滤波器。在这里，我们计算了大小为5的核的最大值和最小值之间的范围作为示例。
- en: '[PRE4]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Plot the original and filtered images.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制原始和过滤后的图像。
- en: '[PRE5]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![../../_images/scipy-ndimage-generic_filter-1.png](../Images/09ae5c180cc145c3006015c29c02ded5.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-ndimage-generic_filter-1.png](../Images/09ae5c180cc145c3006015c29c02ded5.png)'
