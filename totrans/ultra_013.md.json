["```py\n`from ultralytics import YOLO  # Load a model model = YOLO(\"yolov8n-cls.yaml\")  # build a new model from YAML model = YOLO(\"yolov8n-cls.pt\")  # load a pretrained model (recommended for training) model = YOLO(\"yolov8n-cls.yaml\").load(\"yolov8n-cls.pt\")  # build from YAML and transfer weights  # Train the model results = model.train(data=\"mnist160\", epochs=100, imgsz=64)` \n```", "```py\n`# Build a new model from YAML and start training from scratch yolo  classify  train  data=mnist160  model=yolov8n-cls.yaml  epochs=100  imgsz=64  # Start training from a pretrained *.pt model yolo  classify  train  data=mnist160  model=yolov8n-cls.pt  epochs=100  imgsz=64  # Build a new model from YAML, transfer pretrained weights to it and start training yolo  classify  train  data=mnist160  model=yolov8n-cls.yaml  pretrained=yolov8n-cls.pt  epochs=100  imgsz=64` \n```", "```py\n`from ultralytics import YOLO  # Load a model model = YOLO(\"yolov8n-cls.pt\")  # load an official model model = YOLO(\"path/to/best.pt\")  # load a custom model  # Validate the model metrics = model.val()  # no arguments needed, dataset and settings remembered metrics.top1  # top1 accuracy metrics.top5  # top5 accuracy` \n```", "```py\n`yolo  classify  val  model=yolov8n-cls.pt  # val official model yolo  classify  val  model=path/to/best.pt  # val custom model` \n```", "```py\n`from ultralytics import YOLO  # Load a model model = YOLO(\"yolov8n-cls.pt\")  # load an official model model = YOLO(\"path/to/best.pt\")  # load a custom model  # Predict with the model results = model(\"https://ultralytics.com/images/bus.jpg\")  # predict on an image` \n```", "```py\n`yolo  classify  predict  model=yolov8n-cls.pt  source='https://ultralytics.com/images/bus.jpg'  # predict with official model yolo  classify  predict  model=path/to/best.pt  source='https://ultralytics.com/images/bus.jpg'  # predict with custom model` \n```", "```py\n`from ultralytics import YOLO  # Load a model model = YOLO(\"yolov8n-cls.pt\")  # load an official model model = YOLO(\"path/to/best.pt\")  # load a custom trained model  # Export the model model.export(format=\"onnx\")` \n```", "```py\n`yolo  export  model=yolov8n-cls.pt  format=onnx  # export official model yolo  export  model=path/to/best.pt  format=onnx  # export custom trained model` \n```", "```py\n`from ultralytics import YOLO  # Load a model model = YOLO(\"yolov8n-cls.pt\")  # load a pretrained model (recommended for training)  # Train the model results = model.train(data=\"mnist160\", epochs=100, imgsz=64)` \n```", "```py\n`yolo  classify  train  data=mnist160  model=yolov8n-cls.pt  epochs=100  imgsz=64` \n```", "```py\n`from ultralytics import YOLO  # Load a model model = YOLO(\"yolov8n-cls.pt\")  # load the trained model  # Export the model to ONNX model.export(format=\"onnx\")` \n```", "```py\n`yolo  export  model=yolov8n-cls.pt  format=onnx  # export the trained model to ONNX format` \n```", "```py\n`from ultralytics import YOLO  # Load a model model = YOLO(\"yolov8n-cls.pt\")  # load the trained model  # Validate the model metrics = model.val()  # no arguments needed, uses the dataset and settings from training metrics.top1  # top1 accuracy metrics.top5  # top5 accuracy` \n```", "```py\n`yolo  classify  val  model=yolov8n-cls.pt  # validate the trained model` \n```"]