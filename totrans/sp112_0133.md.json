["```py\nscipy.integrate.romberg(function, a, b, args=(), tol=1.48e-08, rtol=1.48e-08, show=False, divmax=10, vec_func=False)\n```", "```py\n>>> from scipy import integrate\n>>> from scipy.special import erf\n>>> import numpy as np\n>>> gaussian = lambda x: 1/np.sqrt(np.pi) * np.exp(-x**2)\n>>> result = integrate.romberg(gaussian, 0, 1, show=True)\nRomberg integration of <function vfunc at ...> from [0, 1] \n```", "```py\nSteps  StepSize  Results\n    1  1.000000  0.385872\n    2  0.500000  0.412631  0.421551\n    4  0.250000  0.419184  0.421368  0.421356\n    8  0.125000  0.420810  0.421352  0.421350  0.421350\n   16  0.062500  0.421215  0.421350  0.421350  0.421350  0.421350\n   32  0.031250  0.421317  0.421350  0.421350  0.421350  0.421350  0.421350 \n```", "```py\n>>> print(\"%g  %g\" % (2*result, erf(1)))\n0.842701 0.842701 \n```"]