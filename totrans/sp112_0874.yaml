- en: scipy.special.ndtri_exp
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.ndtri_exp.html#scipy.special.ndtri_exp](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.ndtri_exp.html#scipy.special.ndtri_exp)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Inverse of [`log_ndtr`](scipy.special.log_ndtr.html#scipy.special.log_ndtr "scipy.special.log_ndtr")
    vs x. Allows for greater precision than [`ndtri`](scipy.special.ndtri.html#scipy.special.ndtri
    "scipy.special.ndtri") composed with [`numpy.exp`](https://numpy.org/devdocs/reference/generated/numpy.exp.html#numpy.exp
    "(in NumPy v2.0.dev0)") for very small values of y and for y close to 0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**y**array_like of float'
  prefs: []
  type: TYPE_NORMAL
- en: Function argument
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Optional output array for the function results
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: scalar or ndarray
  prefs: []
  type: TYPE_NORMAL
- en: Inverse of the log CDF of the standard normal distribution, evaluated at y.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`log_ndtr`](scipy.special.log_ndtr.html#scipy.special.log_ndtr "scipy.special.log_ndtr")'
  prefs: []
  type: TYPE_NORMAL
- en: log of the standard normal cumulative distribution function
  prefs: []
  type: TYPE_NORMAL
- en: '[`ndtr`](scipy.special.ndtr.html#scipy.special.ndtr "scipy.special.ndtr")'
  prefs: []
  type: TYPE_NORMAL
- en: standard normal cumulative distribution function
  prefs: []
  type: TYPE_NORMAL
- en: '[`ndtri`](scipy.special.ndtri.html#scipy.special.ndtri "scipy.special.ndtri")'
  prefs: []
  type: TYPE_NORMAL
- en: standard normal percentile function
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[`ndtri_exp`](#scipy.special.ndtri_exp "scipy.special.ndtri_exp") agrees with
    the naive implementation when the latter does not suffer from underflow.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: For extreme values of y, the naive approach fails
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: whereas [`ndtri_exp`](#scipy.special.ndtri_exp "scipy.special.ndtri_exp") is
    still able to compute the result to high precision.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
