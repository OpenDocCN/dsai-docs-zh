- en: scipy.ndimage.percentile_filter
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.ndimage.percentile_filter
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.percentile_filter.html#scipy.ndimage.percentile_filter](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.percentile_filter.html#scipy.ndimage.percentile_filter)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.percentile_filter.html#scipy.ndimage.percentile_filter](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.percentile_filter.html#scipy.ndimage.percentile_filter)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Calculate a multidimensional percentile filter.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 计算多维百分位数滤波器。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**input**array_like'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**输入**array_like'
- en: The input array.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数组。
- en: '**percentile**scalar'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**percentile**标量'
- en: The percentile parameter may be less than zero, i.e., percentile = -20 equals
    percentile = 80
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 百分位参数可能小于零，即百分位=-20等同于百分位=80
- en: '**size**scalar or tuple, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**size**标量或元组，可选'
- en: See footprint, below. Ignored if footprint is given.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 参见下面的footprint。如果给定了footprint，则忽略此参数。
- en: '**footprint**array, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**footprint**数组，可选'
- en: Either *size* or *footprint* must be defined. *size* gives the shape that is
    taken from the input array, at every element position, to define the input to
    the filter function. *footprint* is a boolean array that specifies (implicitly)
    a shape, but also which of the elements within this shape will get passed to the
    filter function. Thus `size=(n,m)` is equivalent to `footprint=np.ones((n,m))`.
    We adjust *size* to the number of dimensions of the input array, so that, if the
    input array is shape (10,10,10), and *size* is 2, then the actual size used is
    (2,2,2). When *footprint* is given, *size* is ignored.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 必须定义*size*或*footprint*中的一个。*size*给出从输入数组中的每个元素位置取出的形状，以定义滤波函数的输入。*footprint*是一个布尔数组，隐式指定了一个形状，同时也指定了将传递给滤波函数的这些形状内的元素。因此，`size=(n,m)`等同于`footprint=np.ones((n,m))`。我们调整*size*以适应输入数组的维数，因此，如果输入数组的形状为(10,10,10)，而*size*为2，则使用的实际大小为(2,2,2)。当给定*footprint*时，将忽略*size*。
- en: '**output**array or dtype, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**数组或dtype，可选'
- en: The array in which to place the output, or the dtype of the returned array.
    By default an array of the same dtype as input will be created.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 用于放置输出的数组，或者返回数组的dtype。默认情况下，将创建与输入相同dtype的数组。
- en: '**mode**{‘reflect’, ‘constant’, ‘nearest’, ‘mirror’, ‘wrap’}, optional'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**mode**{‘reflect’, ‘constant’, ‘nearest’, ‘mirror’, ‘wrap’}，可选'
- en: 'The *mode* parameter determines how the input array is extended beyond its
    boundaries. Default is ‘reflect’. Behavior for each valid value is as follows:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 参数*mode*决定了如何扩展输入数组超出其边界的部分。默认是‘reflect’。每个有效值的行为如下：
- en: ‘reflect’ (*d c b a | a b c d | d c b a*)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: ‘reflect’（*d c b a | a b c d | d c b a*）
- en: The input is extended by reflecting about the edge of the last pixel. This mode
    is also sometimes referred to as half-sample symmetric.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 输入通过关于最后一个像素边缘的反射来扩展。这种模式有时也称为半采样对称。
- en: ‘constant’ (*k k k k | a b c d | k k k k*)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: ‘constant’（*k k k k | a b c d | k k k k*）
- en: The input is extended by filling all values beyond the edge with the same constant
    value, defined by the *cval* parameter.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 输入通过填充所有超出边缘的值，使用由参数*cval*定义的同一常量值来扩展。
- en: ‘nearest’ (*a a a a | a b c d | d d d d*)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: ‘nearest’（*a a a a | a b c d | d d d d*）
- en: The input is extended by replicating the last pixel.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 输入通过复制最后一个像素来扩展。
- en: ‘mirror’ (*d c b | a b c d | c b a*)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: ‘mirror’（*d c b | a b c d | c b a*）
- en: The input is extended by reflecting about the center of the last pixel. This
    mode is also sometimes referred to as whole-sample symmetric.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 输入通过关于最后一个像素中心的反射来扩展。这种模式有时也称为全样本对称。
- en: ‘wrap’ (*a b c d | a b c d | a b c d*)
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: ‘wrap’（*a b c d | a b c d | a b c d*）
- en: The input is extended by wrapping around to the opposite edge.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 输入通过环绕到相对边缘来扩展。
- en: 'For consistency with the interpolation functions, the following mode names
    can also be used:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 为了与插值函数保持一致，还可以使用以下模式名称：
- en: ‘grid-mirror’
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: ‘grid-mirror’
- en: This is a synonym for ‘reflect’.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这是‘reflect’的同义词。
- en: ‘grid-constant’
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: ‘grid-constant’
- en: This is a synonym for ‘constant’.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这是‘constant’的同义词。
- en: ‘grid-wrap’
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: ‘grid-wrap’
- en: This is a synonym for ‘wrap’.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这是‘wrap’的同义词。
- en: '**cval**scalar, optional'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**cval**标量，可选'
- en: Value to fill past edges of input if *mode* is ‘constant’. Default is 0.0.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*mode*为‘constant’，则用于填充输入边缘之外的值的值。默认值为0.0。
- en: '**origin**int or sequence, optional'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**origin**int 或序列，可选'
- en: Controls the placement of the filter on the input array’s pixels. A value of
    0 (the default) centers the filter over the pixel, with positive values shifting
    the filter to the left, and negative ones to the right. By passing a sequence
    of origins with length equal to the number of dimensions of the input array, different
    shifts can be specified along each axis.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 控制滤波器在输入数组像素上的放置。值为0（默认）将滤波器居中于像素上，正值将滤波器向左移动，负值向右移动。通过传递与输入数组维数相等长度的原点序列，可以在每个轴上指定不同的移动。
- en: '**axes**tuple of int or None, optional'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**axes**整数元组或None，可选'
- en: If None, *input* is filtered along all axes. Otherwise, *input* is filtered
    along the specified axes.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为None，*input*在所有轴上进行过滤。否则，*input*沿指定轴进行过滤。
- en: 'Returns:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**percentile_filter**ndarray'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**percentile_filter**ndarray'
- en: Filtered array. Has the same shape as *input*.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤后的数组。与*input*具有相同的形状。
- en: Examples
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![../../_images/scipy-ndimage-percentile_filter-1.png](../Images/91fe42d52afa6dd9297c6f06522c548a.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-ndimage-percentile_filter-1.png](../Images/91fe42d52afa6dd9297c6f06522c548a.png)'
