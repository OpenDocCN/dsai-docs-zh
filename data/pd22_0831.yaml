- en: pandas.DatetimeIndex.tz_localize
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas.DatetimeIndex.tz_localize
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.tz_localize.html](https://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.tz_localize.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.tz_localize.html](https://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.tz_localize.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Localize tz-naive Datetime Array/Index to tz-aware Datetime Array/Index.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 将tz-naive的Datetime Array/Index本地化为tz-aware的Datetime Array/Index。
- en: This method takes a time zone (tz) naive Datetime Array/Index object and makes
    this time zone aware. It does not move the time to another time zone.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法接受一个时区（tz）naive的Datetime Array/Index对象，并使其具有时区意识。它不会将时间移动到另一个时区。
- en: This method can also be used to do the inverse – to create a time zone unaware
    object from an aware object. To that end, pass tz=None.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 该方法也可用于执行相反操作 - 从aware对象创建一个无时区的对象。为此，传递tz=None。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**tz**str, pytz.timezone, dateutil.tz.tzfile, datetime.tzinfo or None'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**tz**str，pytz.timezone，dateutil.tz.tzfile，datetime.tzinfo或None'
- en: Time zone to convert timestamps to. Passing `None` will remove the time zone
    information preserving local time.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 要将时间戳转换为的时区。传递`None`将删除时区信息，保留本地时间。
- en: '**ambiguous**‘infer’, ‘NaT’, bool array, default ‘raise’'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**模糊**‘infer’，‘NaT’，布尔数组，默认‘raise’'
- en: When clocks moved backward due to DST, ambiguous times may arise. For example
    in Central European Time (UTC+01), when going from 03:00 DST to 02:00 non-DST,
    02:30:00 local time occurs both at 00:30:00 UTC and at 01:30:00 UTC. In such a
    situation, the ambiguous parameter dictates how ambiguous times should be handled.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 由于DST而向后移动时钟时，可能会出现模糊时间。例如，在中欧时间（UTC+01）中，从03:00 DST到02:00非DST时，当本地时间02:30:00同时出现在00:30:00
    UTC和01:30:00 UTC。在这种情况下，模糊参数决定如何处理模糊时间。
- en: ‘infer’ will attempt to infer fall dst-transition hours based on order
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘infer’将尝试根据顺序推断秋季dst转换小时
- en: bool-ndarray where True signifies a DST time, False signifies a non-DST time
    (note that this flag is only applicable for ambiguous times)
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 布尔ndarray，其中True表示DST时间，False表示非DST时间（请注意，此标志仅适用于模糊时间）
- en: ‘NaT’ will return NaT where there are ambiguous times
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘NaT’将在存在模糊时间时返回NaT
- en: ‘raise’ will raise an AmbiguousTimeError if there are ambiguous times.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果存在模糊时间，‘raise’将引发AmbiguousTimeError。
- en: '**nonexistent**‘shift_forward’, ‘shift_backward, ‘NaT’, timedelta, default
    ‘raise’'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**不存在**的‘shift_forward’，‘shift_backward’，‘NaT’，时间差，默认‘raise’'
- en: A nonexistent time does not exist in a particular timezone where clocks moved
    forward due to DST.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 不存在的时间在由于DST而向前移动时钟的特定时区中不存在。
- en: ‘shift_forward’ will shift the nonexistent time forward to the closest existing
    time
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘shift_forward’将不存在的时间向前移动到最接近的现有时间
- en: ‘shift_backward’ will shift the nonexistent time backward to the closest existing
    time
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘shift_backward’将不存在的时间向后移动到最接近的现有时间
- en: ‘NaT’ will return NaT where there are nonexistent times
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘NaT’将在不存在时间时返回NaT
- en: timedelta objects will shift nonexistent times by the timedelta
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间差对象将通过时间差移动不存在的时间
- en: ‘raise’ will raise an NonExistentTimeError if there are nonexistent times.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果存在不存在时间，‘raise’将引发NonExistentTimeError。
- en: 'Returns:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: Same type as self
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 与self相同类型
- en: Array/Index converted to the specified time zone.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 转换为指定时区的Array/Index。
- en: 'Raises:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: TypeError
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 类型错误
- en: If the Datetime Array/Index is tz-aware and tz is not None.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Datetime Array/Index是tz-aware且tz不为None。
- en: See also
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`DatetimeIndex.tz_convert`](pandas.DatetimeIndex.tz_convert.html#pandas.DatetimeIndex.tz_convert
    "pandas.DatetimeIndex.tz_convert")'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DatetimeIndex.tz_convert`](https://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.tz_convert.html#pandas.DatetimeIndex.tz_convert
    "pandas.DatetimeIndex.tz_convert")'
- en: Convert tz-aware DatetimeIndex from one time zone to another.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 将tz-aware的DatetimeIndex从一个时区转换为另一个时区。
- en: Examples
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Localize DatetimeIndex in US/Eastern time zone:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 将DatetimeIndex本地化为美国/东部时区：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'With the `tz=None`, we can remove the time zone information while keeping the
    local time (not converted to UTC):'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`tz=None`，我们可以删除时区信息，同时保留本地时间（未转换为UTC）：
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Be careful with DST changes. When there is sequential data, pandas can infer
    the DST time:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理DST更改时要小心。当存在连续数据时，pandas可以推断DST时间：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In some cases, inferring the DST is impossible. In such cases, you can pass
    an ndarray to the ambiguous parameter to set the DST explicitly
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，推断DST是不可能的。在这种情况下，您可以将一个ndarray传递给模糊参数，以明确设置DST
- en: '[PRE5]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: If the DST transition causes nonexistent times, you can shift these dates forward
    or backwards with a timedelta object or ‘shift_forward’ or ‘shift_backwards’.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果DST转换导致不存在时间，您可以使用时间差对象或‘shift_forward’或‘shift_backwards’将这些日期向前或向后移动。
- en: '[PRE6]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
