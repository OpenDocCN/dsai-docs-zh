- en: numpy.ma.masked_invalid
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.ma.masked_invalid
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.masked_invalid.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.masked_invalid.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.masked_invalid.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.masked_invalid.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Mask an array where invalid values occur (NaNs or infs).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在出现无效值（NaNs或infs）的情况下对数组进行掩码。
- en: This function is a shortcut to `masked_where`, with *condition* = ~(np.isfinite(a)).
    Any pre-existing mask is conserved. Only applies to arrays with a dtype where
    NaNs or infs make sense (i.e. floating point types), but accepts any array_like
    object.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数是`masked_where`的快捷方式，其中*condition* = ~(np.isfinite(a))。任何预先存在的掩码都会被保留。仅适用于具有NaNs或infs意义的dtype的数组（即浮点类型），但接受任何array_like对象。
- en: See also
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`masked_where`](numpy.ma.masked_where.html#numpy.ma.masked_where "numpy.ma.masked_where")'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[`masked_where`](numpy.ma.masked_where.html#numpy.ma.masked_where "numpy.ma.masked_where")'
- en: Mask where a condition is met.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 当条件满足时进行掩码。
- en: Examples
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
