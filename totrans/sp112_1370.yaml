- en: scipy.stats.ecdf
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.ecdf.html#scipy.stats.ecdf](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.ecdf.html#scipy.stats.ecdf)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Empirical cumulative distribution function of a sample.
  prefs: []
  type: TYPE_NORMAL
- en: The empirical cumulative distribution function (ECDF) is a step function estimate
    of the CDF of the distribution underlying a sample. This function returns objects
    representing both the empirical distribution function and its complement, the
    empirical survival function.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**sample**1D array_like or [`scipy.stats.CensoredData`](scipy.stats.CensoredData.html#scipy.stats.CensoredData
    "scipy.stats.CensoredData")'
  prefs: []
  type: TYPE_NORMAL
- en: Besides array_like, instances of [`scipy.stats.CensoredData`](scipy.stats.CensoredData.html#scipy.stats.CensoredData
    "scipy.stats.CensoredData") containing uncensored and right-censored observations
    are supported. Currently, other instances of [`scipy.stats.CensoredData`](scipy.stats.CensoredData.html#scipy.stats.CensoredData
    "scipy.stats.CensoredData") will result in a `NotImplementedError`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**res**[`ECDFResult`](scipy.stats._result_classes.ECDFResult.html#scipy.stats._result_classes.ECDFResult
    "scipy.stats._result_classes.ECDFResult")'
  prefs: []
  type: TYPE_NORMAL
- en: An object with the following attributes.
  prefs: []
  type: TYPE_NORMAL
- en: cdf[`EmpiricalDistributionFunction`](scipy.stats._result_classes.EmpiricalDistributionFunction.html#scipy.stats._result_classes.EmpiricalDistributionFunction
    "scipy.stats._result_classes.EmpiricalDistributionFunction")
  prefs: []
  type: TYPE_NORMAL
- en: An object representing the empirical cumulative distribution function.
  prefs: []
  type: TYPE_NORMAL
- en: sf[`EmpiricalDistributionFunction`](scipy.stats._result_classes.EmpiricalDistributionFunction.html#scipy.stats._result_classes.EmpiricalDistributionFunction
    "scipy.stats._result_classes.EmpiricalDistributionFunction")
  prefs: []
  type: TYPE_NORMAL
- en: An object representing the empirical survival function.
  prefs: []
  type: TYPE_NORMAL
- en: The *cdf* and *sf* attributes themselves have the following attributes.
  prefs: []
  type: TYPE_NORMAL
- en: quantilesndarray
  prefs: []
  type: TYPE_NORMAL
- en: The unique values in the sample that defines the empirical CDF/SF.
  prefs: []
  type: TYPE_NORMAL
- en: probabilitiesndarray
  prefs: []
  type: TYPE_NORMAL
- en: The point estimates of the probabilities corresponding with *quantiles*.
  prefs: []
  type: TYPE_NORMAL
- en: 'And the following methods:'
  prefs: []
  type: TYPE_NORMAL
- en: 'evaluate(x) :'
  prefs: []
  type: TYPE_NORMAL
- en: Evaluate the CDF/SF at the argument.
  prefs: []
  type: TYPE_NORMAL
- en: 'plot(ax) :'
  prefs: []
  type: TYPE_NORMAL
- en: Plot the CDF/SF on the provided axes.
  prefs: []
  type: TYPE_NORMAL
- en: 'confidence_interval(confidence_level=0.95) :'
  prefs: []
  type: TYPE_NORMAL
- en: Compute the confidence interval around the CDF/SF at the values in *quantiles*.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: When each observation of the sample is a precise measurement, the ECDF steps
    up by `1/len(sample)` at each of the observations [[1]](#r50f2a5c69eed-1).
  prefs: []
  type: TYPE_NORMAL
- en: When observations are lower bounds, upper bounds, or both upper and lower bounds,
    the data is said to be “censored”, and *sample* may be provided as an instance
    of [`scipy.stats.CensoredData`](scipy.stats.CensoredData.html#scipy.stats.CensoredData
    "scipy.stats.CensoredData").
  prefs: []
  type: TYPE_NORMAL
- en: For right-censored data, the ECDF is given by the Kaplan-Meier estimator [[2]](#r50f2a5c69eed-2);
    other forms of censoring are not supported at this time.
  prefs: []
  type: TYPE_NORMAL
- en: Confidence intervals are computed according to the Greenwood formula or the
    more recent “Exponential Greenwood” formula as described in [[4]](#r50f2a5c69eed-4).
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1] ([1](#id1),[2](#id8),[3](#id9))'
  prefs: []
  type: TYPE_NORMAL
- en: Conover, William Jay. Practical nonparametric statistics. Vol. 350. John Wiley
    & Sons, 1999.
  prefs: []
  type: TYPE_NORMAL
- en: '[[2](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: 'Kaplan, Edward L., and Paul Meier. “Nonparametric estimation from incomplete
    observations.” Journal of the American statistical association 53.282 (1958):
    457-481.'
  prefs: []
  type: TYPE_NORMAL
- en: '[3]'
  prefs: []
  type: TYPE_NORMAL
- en: 'Goel, Manish Kumar, Pardeep Khanna, and Jugal Kishore. “Understanding survival
    analysis: Kaplan-Meier estimate.” International journal of Ayurveda research 1.4
    (2010): 274.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[4](#id3)]'
  prefs: []
  type: TYPE_NORMAL
- en: Sawyer, Stanley. “The Greenwood and Exponential Greenwood Confidence Intervals
    in Survival Analysis.” [https://www.math.wustl.edu/~sawyer/handouts/greenwood.pdf](https://www.math.wustl.edu/~sawyer/handouts/greenwood.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '**Uncensored Data**'
  prefs: []
  type: TYPE_NORMAL
- en: As in the example from [[1]](#r50f2a5c69eed-1) page 79, five boys were selected
    at random from those in a single high school. Their one-mile run times were recorded
    as follows.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The empirical distribution function, which approximates the distribution function
    of one-mile run times of the population from which the boys were sampled, is calculated
    as follows.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'To plot the result as a step function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-stats-ecdf-1_00_00.png](../Images/e249c04c6434dafcf05d542f78222b08.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Right-censored Data**'
  prefs: []
  type: TYPE_NORMAL
- en: As in the example from [[1]](#r50f2a5c69eed-1) page 91, the lives of ten car
    fanbelts were tested. Five tests concluded because the fanbelt being tested broke,
    but the remaining tests concluded for other reasons (e.g. the study ran out of
    funding, but the fanbelt was still functional). The mileage driven with the fanbelts
    were recorded as follows.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Precise survival times of the fanbelts that were still functional at the end
    of the tests are unknown, but they are known to exceed the values recorded in
    `unbroken`. Therefore, these observations are said to be “right-censored”, and
    the data is represented using [`scipy.stats.CensoredData`](scipy.stats.CensoredData.html#scipy.stats.CensoredData
    "scipy.stats.CensoredData").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The empirical survival function is calculated as follows.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'To plot the result as a step function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-stats-ecdf-1_01_00.png](../Images/be20b06cfdf84be8c0234a91e788b8d0.png)'
  prefs: []
  type: TYPE_IMG
