- en: scipy.integrate.OdeSolver
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.integrate.OdeSolver
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.OdeSolver.html#scipy.integrate.OdeSolver](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.OdeSolver.html#scipy.integrate.OdeSolver)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.OdeSolver.html#scipy.integrate.OdeSolver](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.OdeSolver.html#scipy.integrate.OdeSolver)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Base class for ODE solvers.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: ODE求解器的基类。
- en: 'In order to implement a new solver you need to follow the guidelines:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现新的求解器，需要遵循以下准则：
- en: A constructor must accept parameters presented in the base class (listed below)
    along with any other parameters specific to a solver.
  id: totrans-5
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构造函数必须接受在基类中呈现的参数（下面列出），以及与求解器特定的任何其他参数。
- en: ''
  id: totrans-6
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-7
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: A constructor must accept arbitrary extraneous arguments `**extraneous`, but
    warn that these arguments are irrelevant using *common.warn_extraneous* function.
    Do not pass these arguments to the base class.
  id: totrans-8
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构造函数必须接受任意多余参数`**extraneous`，但通过*common.warn_extraneous*函数警告这些参数是不相关的。不要将这些参数传递给基类。
- en: ''
  id: totrans-9
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-10
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: A solver must implement a private method *_step_impl(self)* which propagates
    a solver one step further. It must return tuple `(success, message)`, where `success`
    is a boolean indicating whether a step was successful, and `message` is a string
    containing description of a failure if a step failed or None otherwise.
  id: totrans-11
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 求解器必须实现一个私有方法*_step_impl(self)*，将求解器推进一步。必须返回元组`(success, message)`，其中`success`是一个布尔值，指示步骤是否成功，`message`是包含失败描述的字符串（如果步骤失败）或None。
- en: ''
  id: totrans-12
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-13
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: A solver must implement a private method *_dense_output_impl(self)*, which returns
    a [`DenseOutput`](scipy.integrate.DenseOutput.html#scipy.integrate.DenseOutput
    "scipy.integrate.DenseOutput") object covering the last successful step.
  id: totrans-14
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 求解器必须实现一个私有方法*_dense_output_impl(self)*，返回一个[`DenseOutput`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.DenseOutput.html#scipy.integrate.DenseOutput
    "scipy.integrate.DenseOutput")对象，覆盖最后一个成功步骤。
- en: ''
  id: totrans-15
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-16
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: A solver must have attributes listed below in Attributes section. Note that
    `t_old` and `step_size` are updated automatically.
  id: totrans-17
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 求解器必须具有以下属性列表中列出的属性。注意，`t_old`和`step_size`会自动更新。
- en: ''
  id: totrans-18
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-19
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Use *fun(self, t, y)* method for the system rhs evaluation, this way the number
    of function evaluations (*nfev*) will be tracked automatically.
  id: totrans-20
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用*fun(self, t, y)*方法进行系统右手边评估，这样函数评估数(*nfev*)会自动跟踪。
- en: ''
  id: totrans-21
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-22
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: For convenience, a base class provides *fun_single(self, t, y)* and *fun_vectorized(self,
    t, y)* for evaluating the rhs in non-vectorized and vectorized fashions respectively
    (regardless of how *fun* from the constructor is implemented). These calls don’t
    increment *nfev*.
  id: totrans-23
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为方便起见，基类提供了*fun_single(self, t, y)*和*fun_vectorized(self, t, y)*，分别用于非向量化和向量化方式评估右手边（不管构造函数中的*fun*如何实现）。这些调用不会增加*nfev*。
- en: ''
  id: totrans-24
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-25
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: If a solver uses a Jacobian matrix and LU decompositions, it should track the
    number of Jacobian evaluations (*njev*) and the number of LU decompositions (*nlu*).
  id: totrans-26
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果求解器使用雅可比矩阵和LU分解，它应该追踪雅可比矩阵评估数(*njev*)和LU分解数(*nlu*)。
- en: ''
  id: totrans-27
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-28
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: By convention, the function evaluations used to compute a finite difference
    approximation of the Jacobian should not be counted in *nfev*, thus use *fun_single(self,
    t, y)* or *fun_vectorized(self, t, y)* when computing a finite difference approximation
    of the Jacobian.
  id: totrans-29
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据惯例，用于计算雅可比矩阵有限差分近似的函数评估不应计入*nfev*，因此在计算雅可比矩阵有限差分近似时，请使用*fun_single(self, t,
    y)*或*fun_vectorized(self, t, y)*。
- en: 'Parameters:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**fun**callable'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**fun**callable'
- en: 'Right-hand side of the system: the time derivative of the state `y` at time
    `t`. The calling signature is `fun(t, y)`, where `t` is a scalar and `y` is an
    ndarray with `len(y) = len(y0)`. `fun` must return an array of the same shape
    as `y`. See *vectorized* for more information.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 系统右手边：时间`t`处状态`y`的时间导数。调用签名为`fun(t, y)`，其中`t`是标量，`y`是具有`len(y) = len(y0)`的ndarray。`fun`必须返回与`y`相同形状的数组。有关更多信息，请参见*vectorized*。
- en: '**t0**float'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**t0**float'
- en: Initial time.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 初始时间。
- en: '**y0**array_like, shape (n,)'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**y0**array_like，形状为(n,)'
- en: Initial state.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 初始状态。
- en: '**t_bound**float'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**t_bound**float'
- en: Boundary time — the integration won’t continue beyond it. It also determines
    the direction of the integration.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 边界时间 —— 积分不会超出它。它还确定积分的方向。
- en: '**vectorized**bool'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**vectorized**bool'
- en: Whether *fun* can be called in a vectorized fashion. Default is False.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '*fun*是否可以以向量化方式调用。默认为False。'
- en: If `vectorized` is False, *fun* will always be called with `y` of shape `(n,)`,
    where `n = len(y0)`.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`vectorized`为False，则*fun*始终以形状为`(n,)`的`y`调用，其中`n = len(y0)`。
- en: If `vectorized` is True, *fun* may be called with `y` of shape `(n, k)`, where
    `k` is an integer. In this case, *fun* must behave such that `fun(t, y)[:, i]
    == fun(t, y[:, i])` (i.e. each column of the returned array is the time derivative
    of the state corresponding with a column of `y`).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`vectorized`为True，则可以使用形状为`(n, k)`的`y`调用*fun*，其中`k`是整数。在这种情况下，*fun*必须表现出`fun(t,
    y)[:, i] == fun(t, y[:, i])`（即返回数组的每一列是与`y`的一列对应的状态的时间导数）。
- en: Setting `vectorized=True` allows for faster finite difference approximation
    of the Jacobian by methods ‘Radau’ and ‘BDF’, but will result in slower execution
    for other methods. It can also result in slower overall execution for ‘Radau’
    and ‘BDF’ in some circumstances (e.g. small `len(y0)`).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 设置`vectorized=True`允许方法‘Radau’和‘BDF’通过更快的有限差分逼近雅可比矩阵，但会导致其他方法执行较慢。在某些情况下（例如`y0`很小），它也可能导致‘Radau’和‘BDF’的整体执行较慢。
- en: '**support_complex**bool, optional'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**support_complex** 布尔值，可选'
- en: Whether integration in a complex domain should be supported. Generally determined
    by a derived solver class capabilities. Default is False.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 是否应支持复数域中的积分。通常由派生的求解器类能力决定。默认为False。
- en: 'Attributes:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 属性：
- en: '**n**int'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**n** 整数'
- en: Number of equations.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 方程的数量。
- en: '**status**string'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**status** 字符串'
- en: 'Current status of the solver: ‘running’, ‘finished’ or ‘failed’.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 求解器的当前状态：‘运行中’，‘已完成’或‘失败’。
- en: '**t_bound**float'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**t_bound** 浮点数'
- en: Boundary time.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 边界时间。
- en: '**direction**float'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**direction** 浮点数'
- en: 'Integration direction: +1 or -1.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 积分方向：+1 或 -1。
- en: '**t**float'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**t** 浮点数'
- en: Current time.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 当前时间。
- en: '**y**ndarray'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**y** 数组'
- en: Current state.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 当前状态。
- en: '**t_old**float'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**t_old** 浮点数'
- en: Previous time. None if no steps were made yet.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 先前时间。如果尚未执行步骤，则为None。
- en: '**step_size**float'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**step_size** 浮点数'
- en: Size of the last successful step. None if no steps were made yet.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 上一个成功步骤的大小。如果尚未执行步骤，则为None。
- en: '**nfev**int'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**nfev** 整数'
- en: Number of the system’s rhs evaluations.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 系统右手边评估的数量。
- en: '**njev**int'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**njev** 整数'
- en: Number of the Jacobian evaluations.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 雅可比矩阵评估的数量。
- en: '**nlu**int'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**nlu** 整数'
- en: Number of LU decompositions.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: LU分解的数量。
- en: Methods
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`dense_output`](scipy.integrate.OdeSolver.dense_output.html#scipy.integrate.OdeSolver.dense_output
    "scipy.integrate.OdeSolver.dense_output")() | Compute a local interpolant over
    the last successful step. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| [`dense_output`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.OdeSolver.dense_output.html#scipy.integrate.OdeSolver.dense_output
    "scipy.integrate.OdeSolver.dense_output")() | 计算上一次成功步骤的局部插值。 |'
- en: '| [`step`](scipy.integrate.OdeSolver.step.html#scipy.integrate.OdeSolver.step
    "scipy.integrate.OdeSolver.step")() | Perform one integration step. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| [`step`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.OdeSolver.step.html#scipy.integrate.OdeSolver.step
    "scipy.integrate.OdeSolver.step")() | 执行一步积分。 |'
