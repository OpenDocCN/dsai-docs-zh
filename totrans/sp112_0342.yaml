- en: Multidimensional image processing (scipy.ndimage)
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多维图像处理（scipy.ndimage）
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/ndimage.html](https://docs.scipy.org/doc/scipy-1.12.0/reference/ndimage.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/ndimage.html](https://docs.scipy.org/doc/scipy-1.12.0/reference/ndimage.html)
- en: This package contains various functions for multidimensional image processing.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 此包含各种多维图像处理函数。
- en: Filters
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 滤波器
- en: '| [`convolve`](generated/scipy.ndimage.convolve.html#scipy.ndimage.convolve
    "scipy.ndimage.convolve")(input, weights[, output, mode, ...]) | Multidimensional
    convolution. |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| [`convolve`](generated/scipy.ndimage.convolve.html#scipy.ndimage.convolve
    "scipy.ndimage.convolve")(input, weights[, output, mode, ...]) | 多维卷积运算。 |'
- en: '| [`convolve1d`](generated/scipy.ndimage.convolve1d.html#scipy.ndimage.convolve1d
    "scipy.ndimage.convolve1d")(input, weights[, axis, output, ...]) | Calculate a
    1-D convolution along the given axis. |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| [`convolve1d`](generated/scipy.ndimage.convolve1d.html#scipy.ndimage.convolve1d
    "scipy.ndimage.convolve1d")(input, weights[, axis, output, ...]) | 沿指定轴计算一维卷积。
    |'
- en: '| [`correlate`](generated/scipy.ndimage.correlate.html#scipy.ndimage.correlate
    "scipy.ndimage.correlate")(input, weights[, output, mode, ...]) | Multidimensional
    correlation. |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| [`correlate`](generated/scipy.ndimage.correlate.html#scipy.ndimage.correlate
    "scipy.ndimage.correlate")(input, weights[, output, mode, ...]) | 多维相关运算。 |'
- en: '| [`correlate1d`](generated/scipy.ndimage.correlate1d.html#scipy.ndimage.correlate1d
    "scipy.ndimage.correlate1d")(input, weights[, axis, output, ...]) | Calculate
    a 1-D correlation along the given axis. |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [`correlate1d`](generated/scipy.ndimage.correlate1d.html#scipy.ndimage.correlate1d
    "scipy.ndimage.correlate1d")(input, weights[, axis, output, ...]) | 沿指定轴计算一维相关运算。
    |'
- en: '| [`gaussian_filter`](generated/scipy.ndimage.gaussian_filter.html#scipy.ndimage.gaussian_filter
    "scipy.ndimage.gaussian_filter")(input, sigma[, order, ...]) | Multidimensional
    Gaussian filter. |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| [`gaussian_filter`](generated/scipy.ndimage.gaussian_filter.html#scipy.ndimage.gaussian_filter
    "scipy.ndimage.gaussian_filter")(input, sigma[, order, ...]) | 多维高斯滤波器。 |'
- en: '| [`gaussian_filter1d`](generated/scipy.ndimage.gaussian_filter1d.html#scipy.ndimage.gaussian_filter1d
    "scipy.ndimage.gaussian_filter1d")(input, sigma[, axis, ...]) | 1-D Gaussian filter.
    |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| [`gaussian_filter1d`](generated/scipy.ndimage.gaussian_filter1d.html#scipy.ndimage.gaussian_filter1d
    "scipy.ndimage.gaussian_filter1d")(input, sigma[, axis, ...]) | 一维高斯滤波器。 |'
- en: '| [`gaussian_gradient_magnitude`](generated/scipy.ndimage.gaussian_gradient_magnitude.html#scipy.ndimage.gaussian_gradient_magnitude
    "scipy.ndimage.gaussian_gradient_magnitude")(input, sigma[, ...]) | Multidimensional
    gradient magnitude using Gaussian derivatives. |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| [`gaussian_gradient_magnitude`](generated/scipy.ndimage.gaussian_gradient_magnitude.html#scipy.ndimage.gaussian_gradient_magnitude
    "scipy.ndimage.gaussian_gradient_magnitude")(input, sigma[, ...]) | 使用高斯导数计算多维梯度幅值。
    |'
- en: '| [`gaussian_laplace`](generated/scipy.ndimage.gaussian_laplace.html#scipy.ndimage.gaussian_laplace
    "scipy.ndimage.gaussian_laplace")(input, sigma[, output, ...]) | Multidimensional
    Laplace filter using Gaussian second derivatives. |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| [`gaussian_laplace`](generated/scipy.ndimage.gaussian_laplace.html#scipy.ndimage.gaussian_laplace
    "scipy.ndimage.gaussian_laplace")(input, sigma[, output, ...]) | 使用高斯二阶导数的多维拉普拉斯滤波器。
    |'
- en: '| [`generic_filter`](generated/scipy.ndimage.generic_filter.html#scipy.ndimage.generic_filter
    "scipy.ndimage.generic_filter")(input, function[, size, ...]) | Calculate a multidimensional
    filter using the given function. |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| [`generic_filter`](generated/scipy.ndimage.generic_filter.html#scipy.ndimage.generic_filter
    "scipy.ndimage.generic_filter")(input, function[, size, ...]) | 使用给定函数计算多维滤波器。
    |'
- en: '| [`generic_filter1d`](generated/scipy.ndimage.generic_filter1d.html#scipy.ndimage.generic_filter1d
    "scipy.ndimage.generic_filter1d")(input, function, filter_size) | Calculate a
    1-D filter along the given axis. |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| [`generic_filter1d`](generated/scipy.ndimage.generic_filter1d.html#scipy.ndimage.generic_filter1d
    "scipy.ndimage.generic_filter1d")(input, function, filter_size) | 沿指定轴计算一维滤波器。
    |'
- en: '| [`generic_gradient_magnitude`](generated/scipy.ndimage.generic_gradient_magnitude.html#scipy.ndimage.generic_gradient_magnitude
    "scipy.ndimage.generic_gradient_magnitude")(input, derivative) | Gradient magnitude
    using a provided gradient function. |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [`generic_gradient_magnitude`](generated/scipy.ndimage.generic_gradient_magnitude.html#scipy.ndimage.generic_gradient_magnitude
    "scipy.ndimage.generic_gradient_magnitude")(input, derivative) | 使用提供的梯度函数计算梯度幅值。
    |'
- en: '| [`generic_laplace`](generated/scipy.ndimage.generic_laplace.html#scipy.ndimage.generic_laplace
    "scipy.ndimage.generic_laplace")(input, derivative2[, ...]) | N-D Laplace filter
    using a provided second derivative function. |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| [`generic_laplace`](generated/scipy.ndimage.generic_laplace.html#scipy.ndimage.generic_laplace
    "scipy.ndimage.generic_laplace")(input, derivative2[, ...]) | 使用提供的二阶导数函数进行N维拉普拉斯滤波器。
    |'
- en: '| [`laplace`](generated/scipy.ndimage.laplace.html#scipy.ndimage.laplace "scipy.ndimage.laplace")(input[, output, mode, cval])
    | N-D Laplace filter based on approximate second derivatives. |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [`laplace`](generated/scipy.ndimage.laplace.html#scipy.ndimage.laplace "scipy.ndimage.laplace")(input[, output, mode, cval])
    | 基于近似二阶导数的N维拉普拉斯滤波器。 |'
- en: '| [`maximum_filter`](generated/scipy.ndimage.maximum_filter.html#scipy.ndimage.maximum_filter
    "scipy.ndimage.maximum_filter")(input[, size, footprint, ...]) | Calculate a multidimensional
    maximum filter. |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [`maximum_filter`](generated/scipy.ndimage.maximum_filter.html#scipy.ndimage.maximum_filter
    "scipy.ndimage.maximum_filter")(input[, size, footprint, ...]) | 计算多维最大值滤波器。 |'
- en: '| [`maximum_filter1d`](generated/scipy.ndimage.maximum_filter1d.html#scipy.ndimage.maximum_filter1d
    "scipy.ndimage.maximum_filter1d")(input, size[, axis, ...]) | Calculate a 1-D
    maximum filter along the given axis. |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [`maximum_filter1d`](generated/scipy.ndimage.maximum_filter1d.html#scipy.ndimage.maximum_filter1d
    "scipy.ndimage.maximum_filter1d")(input, size[, axis, ...]) | 沿指定轴计算1-D最大值滤波器。
    |'
- en: '| [`median_filter`](generated/scipy.ndimage.median_filter.html#scipy.ndimage.median_filter
    "scipy.ndimage.median_filter")(input[, size, footprint, ...]) | Calculate a multidimensional
    median filter. |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [`median_filter`](generated/scipy.ndimage.median_filter.html#scipy.ndimage.median_filter
    "scipy.ndimage.median_filter")(input[, size, footprint, ...]) | 计算多维中值滤波器。 |'
- en: '| [`minimum_filter`](generated/scipy.ndimage.minimum_filter.html#scipy.ndimage.minimum_filter
    "scipy.ndimage.minimum_filter")(input[, size, footprint, ...]) | Calculate a multidimensional
    minimum filter. |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`minimum_filter`](generated/scipy.ndimage.minimum_filter.html#scipy.ndimage.minimum_filter
    "scipy.ndimage.minimum_filter")(input[, size, footprint, ...]) | 计算多维最小值滤波器。 |'
- en: '| [`minimum_filter1d`](generated/scipy.ndimage.minimum_filter1d.html#scipy.ndimage.minimum_filter1d
    "scipy.ndimage.minimum_filter1d")(input, size[, axis, ...]) | Calculate a 1-D
    minimum filter along the given axis. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`minimum_filter1d`](generated/scipy.ndimage.minimum_filter1d.html#scipy.ndimage.minimum_filter1d
    "scipy.ndimage.minimum_filter1d")(input, size[, axis, ...]) | 沿指定轴计算1-D最小值滤波器。
    |'
- en: '| [`percentile_filter`](generated/scipy.ndimage.percentile_filter.html#scipy.ndimage.percentile_filter
    "scipy.ndimage.percentile_filter")(input, percentile[, size, ...]) | Calculate
    a multidimensional percentile filter. |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [`percentile_filter`](generated/scipy.ndimage.percentile_filter.html#scipy.ndimage.percentile_filter
    "scipy.ndimage.percentile_filter")(input, percentile[, size, ...]) | 计算多维百分位数滤波器。
    |'
- en: '| [`prewitt`](generated/scipy.ndimage.prewitt.html#scipy.ndimage.prewitt "scipy.ndimage.prewitt")(input[, axis, output, mode, cval])
    | Calculate a Prewitt filter. |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [`prewitt`](generated/scipy.ndimage.prewitt.html#scipy.ndimage.prewitt "scipy.ndimage.prewitt")(input[, axis, output, mode, cval])
    | 计算普雷维特滤波器。 |'
- en: '| [`rank_filter`](generated/scipy.ndimage.rank_filter.html#scipy.ndimage.rank_filter
    "scipy.ndimage.rank_filter")(input, rank[, size, footprint, ...]) | Calculate
    a multidimensional rank filter. |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [`rank_filter`](generated/scipy.ndimage.rank_filter.html#scipy.ndimage.rank_filter
    "scipy.ndimage.rank_filter")(input, rank[, size, footprint, ...]) | 计算多维秩滤波器。
    |'
- en: '| [`sobel`](generated/scipy.ndimage.sobel.html#scipy.ndimage.sobel "scipy.ndimage.sobel")(input[, axis, output, mode, cval])
    | Calculate a Sobel filter. |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [`sobel`](generated/scipy.ndimage.sobel.html#scipy.ndimage.sobel "scipy.ndimage.sobel")(input[, axis, output, mode, cval])
    | 计算Sobel滤波器。 |'
- en: '| [`uniform_filter`](generated/scipy.ndimage.uniform_filter.html#scipy.ndimage.uniform_filter
    "scipy.ndimage.uniform_filter")(input[, size, output, mode, ...]) | Multidimensional
    uniform filter. |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [`uniform_filter`](generated/scipy.ndimage.uniform_filter.html#scipy.ndimage.uniform_filter
    "scipy.ndimage.uniform_filter")(input[, size, output, mode, ...]) | 多维均匀过滤器。 |'
- en: '| [`uniform_filter1d`](generated/scipy.ndimage.uniform_filter1d.html#scipy.ndimage.uniform_filter1d
    "scipy.ndimage.uniform_filter1d")(input, size[, axis, ...]) | Calculate a 1-D
    uniform filter along the given axis. |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| [`uniform_filter1d`](generated/scipy.ndimage.uniform_filter1d.html#scipy.ndimage.uniform_filter1d
    "scipy.ndimage.uniform_filter1d")(input, size[, axis, ...]) | 沿指定轴计算1-D均匀滤波器。
    |'
- en: Fourier filters
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Fourier filters
- en: '| [`fourier_ellipsoid`](generated/scipy.ndimage.fourier_ellipsoid.html#scipy.ndimage.fourier_ellipsoid
    "scipy.ndimage.fourier_ellipsoid")(input, size[, n, axis, output]) | Multidimensional
    ellipsoid Fourier filter. |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [`fourier_ellipsoid`](generated/scipy.ndimage.fourier_ellipsoid.html#scipy.ndimage.fourier_ellipsoid
    "scipy.ndimage.fourier_ellipsoid")(input, size[, n, axis, output]) | 多维椭球傅里叶滤波器。
    |'
- en: '| [`fourier_gaussian`](generated/scipy.ndimage.fourier_gaussian.html#scipy.ndimage.fourier_gaussian
    "scipy.ndimage.fourier_gaussian")(input, sigma[, n, axis, output]) | Multidimensional
    Gaussian fourier filter. |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [`fourier_gaussian`](generated/scipy.ndimage.fourier_gaussian.html#scipy.ndimage.fourier_gaussian
    "scipy.ndimage.fourier_gaussian")(input, sigma[, n, axis, output]) | 多维高斯傅里叶滤波器。
    |'
- en: '| [`fourier_shift`](generated/scipy.ndimage.fourier_shift.html#scipy.ndimage.fourier_shift
    "scipy.ndimage.fourier_shift")(input, shift[, n, axis, output]) | Multidimensional
    Fourier shift filter. |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [`fourier_shift`](generated/scipy.ndimage.fourier_shift.html#scipy.ndimage.fourier_shift
    "scipy.ndimage.fourier_shift")(input, shift[, n, axis, output]) | 多维傅立叶移位滤波器。
    |'
- en: '| [`fourier_uniform`](generated/scipy.ndimage.fourier_uniform.html#scipy.ndimage.fourier_uniform
    "scipy.ndimage.fourier_uniform")(input, size[, n, axis, output]) | Multidimensional
    uniform fourier filter. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`fourier_uniform`](generated/scipy.ndimage.fourier_uniform.html#scipy.ndimage.fourier_uniform
    "scipy.ndimage.fourier_uniform")(input, size[, n, axis, output]) | 多维均匀傅立叶滤波器。
    |'
- en: Interpolation
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 插值
- en: '| [`affine_transform`](generated/scipy.ndimage.affine_transform.html#scipy.ndimage.affine_transform
    "scipy.ndimage.affine_transform")(input, matrix[, offset, ...]) | Apply an affine
    transformation. |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [`affine_transform`](generated/scipy.ndimage.affine_transform.html#scipy.ndimage.affine_transform
    "scipy.ndimage.affine_transform")(input, matrix[, offset, ...]) | 应用仿射变换。 |'
- en: '| [`geometric_transform`](generated/scipy.ndimage.geometric_transform.html#scipy.ndimage.geometric_transform
    "scipy.ndimage.geometric_transform")(input, mapping[, ...]) | Apply an arbitrary
    geometric transform. |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| [`geometric_transform`](generated/scipy.ndimage.geometric_transform.html#scipy.ndimage.geometric_transform
    "scipy.ndimage.geometric_transform")(input, mapping[, ...]) | 应用任意几何变换。 |'
- en: '| [`map_coordinates`](generated/scipy.ndimage.map_coordinates.html#scipy.ndimage.map_coordinates
    "scipy.ndimage.map_coordinates")(input, coordinates[, ...]) | Map the input array
    to new coordinates by interpolation. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| [`map_coordinates`](generated/scipy.ndimage.map_coordinates.html#scipy.ndimage.map_coordinates
    "scipy.ndimage.map_coordinates")(input, coordinates[, ...]) | 通过插值将输入数组映射到新坐标。
    |'
- en: '| [`rotate`](generated/scipy.ndimage.rotate.html#scipy.ndimage.rotate "scipy.ndimage.rotate")(input, angle[, axes, reshape, ...])
    | Rotate an array. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| [`rotate`](generated/scipy.ndimage.rotate.html#scipy.ndimage.rotate "scipy.ndimage.rotate")(input, angle[, axes, reshape, ...])
    | 旋转数组。 |'
- en: '| [`shift`](generated/scipy.ndimage.shift.html#scipy.ndimage.shift "scipy.ndimage.shift")(input, shift[, output, order, mode, ...])
    | Shift an array. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| [`shift`](generated/scipy.ndimage.shift.html#scipy.ndimage.shift "scipy.ndimage.shift")(input, shift[, output, order, mode, ...])
    | 移动数组。 |'
- en: '| [`spline_filter`](generated/scipy.ndimage.spline_filter.html#scipy.ndimage.spline_filter
    "scipy.ndimage.spline_filter")(input[, order, output, mode]) | Multidimensional
    spline filter. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [`spline_filter`](generated/scipy.ndimage.spline_filter.html#scipy.ndimage.spline_filter
    "scipy.ndimage.spline_filter")(input[, order, output, mode]) | 多维样条滤波器。 |'
- en: '| [`spline_filter1d`](generated/scipy.ndimage.spline_filter1d.html#scipy.ndimage.spline_filter1d
    "scipy.ndimage.spline_filter1d")(input[, order, axis, ...]) | Calculate a 1-D
    spline filter along the given axis. |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| [`spline_filter1d`](generated/scipy.ndimage.spline_filter1d.html#scipy.ndimage.spline_filter1d
    "scipy.ndimage.spline_filter1d")(input[, order, axis, ...]) | 沿给定轴计算一维样条滤波器。 |'
- en: '| [`zoom`](generated/scipy.ndimage.zoom.html#scipy.ndimage.zoom "scipy.ndimage.zoom")(input, zoom[, output, order, mode, ...])
    | Zoom an array. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| [`zoom`](generated/scipy.ndimage.zoom.html#scipy.ndimage.zoom "scipy.ndimage.zoom")(input, zoom[, output, order, mode, ...])
    | 缩放数组。 |'
- en: Measurements
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测量
- en: '| [`center_of_mass`](generated/scipy.ndimage.center_of_mass.html#scipy.ndimage.center_of_mass
    "scipy.ndimage.center_of_mass")(input[, labels, index]) | Calculate the center
    of mass of the values of an array at labels. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| [`center_of_mass`](generated/scipy.ndimage.center_of_mass.html#scipy.ndimage.center_of_mass
    "scipy.ndimage.center_of_mass")(input[, labels, index]) | 计算数组中标签值的质心。 |'
- en: '| [`extrema`](generated/scipy.ndimage.extrema.html#scipy.ndimage.extrema "scipy.ndimage.extrema")(input[, labels, index])
    | Calculate the minimums and maximums of the values of an array at labels, along
    with their positions. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| [`extrema`](generated/scipy.ndimage.extrema.html#scipy.ndimage.extrema "scipy.ndimage.extrema")(input[, labels, index])
    | 计算数组中标签处的最小值和最大值及其位置。 |'
- en: '| [`find_objects`](generated/scipy.ndimage.find_objects.html#scipy.ndimage.find_objects
    "scipy.ndimage.find_objects")(input[, max_label]) | Find objects in a labeled
    array. |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| [`find_objects`](generated/scipy.ndimage.find_objects.html#scipy.ndimage.find_objects
    "scipy.ndimage.find_objects")(input[, max_label]) | 在标记数组中查找对象。 |'
- en: '| [`histogram`](generated/scipy.ndimage.histogram.html#scipy.ndimage.histogram
    "scipy.ndimage.histogram")(input, min, max, bins[, labels, index]) | Calculate
    the histogram of the values of an array, optionally at labels. |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| [`histogram`](generated/scipy.ndimage.histogram.html#scipy.ndimage.histogram
    "scipy.ndimage.histogram")(input, min, max, bins[, labels, index]) | 计算数组值的直方图，可选地在标签处计算。
    |'
- en: '| [`label`](generated/scipy.ndimage.label.html#scipy.ndimage.label "scipy.ndimage.label")(input[, structure, output])
    | Label features in an array. |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| [`label`](generated/scipy.ndimage.label.html#scipy.ndimage.label "scipy.ndimage.label")(input[, structure, output])
    | 对数组中的特征进行标记。 |'
- en: '| [`labeled_comprehension`](generated/scipy.ndimage.labeled_comprehension.html#scipy.ndimage.labeled_comprehension
    "scipy.ndimage.labeled_comprehension")(input, labels, index, ...) | Roughly equivalent
    to [func(input[labels == i]) for i in index]. |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '[`labeled_comprehension`](generated/scipy.ndimage.labeled_comprehension.html#scipy.ndimage.labeled_comprehension
    "scipy.ndimage.labeled_comprehension")(input, labels, index, ...) | 大致相当于 [func(input[labels
    == i]) for i in index]。'
- en: '| [`maximum`](generated/scipy.ndimage.maximum.html#scipy.ndimage.maximum "scipy.ndimage.maximum")(input[, labels, index])
    | Calculate the maximum of the values of an array over labeled regions. |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '[`maximum`](generated/scipy.ndimage.maximum.html#scipy.ndimage.maximum "scipy.ndimage.maximum")(input[, labels, index])
    | 计算带标签区域数组值的最大值。'
- en: '| [`maximum_position`](generated/scipy.ndimage.maximum_position.html#scipy.ndimage.maximum_position
    "scipy.ndimage.maximum_position")(input[, labels, index]) | Find the positions
    of the maximums of the values of an array at labels. |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '[`maximum_position`](generated/scipy.ndimage.maximum_position.html#scipy.ndimage.maximum_position
    "scipy.ndimage.maximum_position")(input[, labels, index]) | 查找数组标签处数值最大值的位置。'
- en: '| [`mean`](generated/scipy.ndimage.mean.html#scipy.ndimage.mean "scipy.ndimage.mean")(input[, labels, index])
    | Calculate the mean of the values of an array at labels. |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '[`mean`](generated/scipy.ndimage.mean.html#scipy.ndimage.mean "scipy.ndimage.mean")(input[, labels, index])
    | 计算带标签数组值的平均值。'
- en: '| [`median`](generated/scipy.ndimage.median.html#scipy.ndimage.median "scipy.ndimage.median")(input[, labels, index])
    | Calculate the median of the values of an array over labeled regions. |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '[`median`](generated/scipy.ndimage.median.html#scipy.ndimage.median "scipy.ndimage.median")(input[, labels, index])
    | 计算带标签区域数组值的中位数。'
- en: '| [`minimum`](generated/scipy.ndimage.minimum.html#scipy.ndimage.minimum "scipy.ndimage.minimum")(input[, labels, index])
    | Calculate the minimum of the values of an array over labeled regions. |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '[`minimum`](generated/scipy.ndimage.minimum.html#scipy.ndimage.minimum "scipy.ndimage.minimum")(input[, labels, index])
    | 计算带标签区域数组值的最小值。'
- en: '| [`minimum_position`](generated/scipy.ndimage.minimum_position.html#scipy.ndimage.minimum_position
    "scipy.ndimage.minimum_position")(input[, labels, index]) | Find the positions
    of the minimums of the values of an array at labels. |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '[`minimum_position`](generated/scipy.ndimage.minimum_position.html#scipy.ndimage.minimum_position
    "scipy.ndimage.minimum_position")(input[, labels, index]) | 查找数组标签处数值最小值的位置。'
- en: '| [`standard_deviation`](generated/scipy.ndimage.standard_deviation.html#scipy.ndimage.standard_deviation
    "scipy.ndimage.standard_deviation")(input[, labels, index]) | Calculate the standard
    deviation of the values of an N-D image array, optionally at specified sub-regions.
    |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '[`standard_deviation`](generated/scipy.ndimage.standard_deviation.html#scipy.ndimage.standard_deviation
    "scipy.ndimage.standard_deviation")(input[, labels, index]) | 计算N维图像数组值的标准差，可选择指定的子区域。'
- en: '| [`sum_labels`](generated/scipy.ndimage.sum_labels.html#scipy.ndimage.sum_labels
    "scipy.ndimage.sum_labels")(input[, labels, index]) | Calculate the sum of the
    values of the array. |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '[`sum_labels`](generated/scipy.ndimage.sum_labels.html#scipy.ndimage.sum_labels
    "scipy.ndimage.sum_labels")(input[, labels, index]) | 计算数组值的总和。'
- en: '| [`value_indices`](generated/scipy.ndimage.value_indices.html#scipy.ndimage.value_indices
    "scipy.ndimage.value_indices")(arr, *[, ignore_value]) | Find indices of each
    distinct value in given array. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '[`value_indices`](generated/scipy.ndimage.value_indices.html#scipy.ndimage.value_indices
    "scipy.ndimage.value_indices")(arr, *[, ignore_value]) | 查找给定数组中每个不同值的索引。'
- en: '| [`variance`](generated/scipy.ndimage.variance.html#scipy.ndimage.variance
    "scipy.ndimage.variance")(input[, labels, index]) | Calculate the variance of
    the values of an N-D image array, optionally at specified sub-regions. |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '[`variance`](generated/scipy.ndimage.variance.html#scipy.ndimage.variance "scipy.ndimage.variance")(input[, labels, index])
    | 计算N维图像数组值的方差，可选择指定的子区域。'
- en: '| [`watershed_ift`](generated/scipy.ndimage.watershed_ift.html#scipy.ndimage.watershed_ift
    "scipy.ndimage.watershed_ift")(input, markers[, structure, ...]) | Apply watershed
    from markers using image foresting transform algorithm. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '[`watershed_ift`](generated/scipy.ndimage.watershed_ift.html#scipy.ndimage.watershed_ift
    "scipy.ndimage.watershed_ift")(input, markers[, structure, ...]) | 使用图像森林变换算法从标记应用分水岭。'
- en: Morphology
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 形态学
- en: '| [`binary_closing`](generated/scipy.ndimage.binary_closing.html#scipy.ndimage.binary_closing
    "scipy.ndimage.binary_closing")(input[, structure, ...]) | Multidimensional binary
    closing with the given structuring element. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '[`binary_closing`](generated/scipy.ndimage.binary_closing.html#scipy.ndimage.binary_closing
    "scipy.ndimage.binary_closing")(input[, structure, ...]) | 使用给定的结构元素进行多维二值闭运算。'
- en: '| [`binary_dilation`](generated/scipy.ndimage.binary_dilation.html#scipy.ndimage.binary_dilation
    "scipy.ndimage.binary_dilation")(input[, structure, ...]) | Multidimensional binary
    dilation with the given structuring element. |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '[`binary_dilation`](generated/scipy.ndimage.binary_dilation.html#scipy.ndimage.binary_dilation
    "scipy.ndimage.binary_dilation")(input[, structure, ...]) | 使用给定的结构元素进行多维二进制膨胀。'
- en: '| [`binary_erosion`](generated/scipy.ndimage.binary_erosion.html#scipy.ndimage.binary_erosion
    "scipy.ndimage.binary_erosion")(input[, structure, ...]) | Multidimensional binary
    erosion with a given structuring element. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '[`binary_erosion`](generated/scipy.ndimage.binary_erosion.html#scipy.ndimage.binary_erosion
    "scipy.ndimage.binary_erosion")(input[, structure, ...]) | 使用给定的结构元素进行多维二进制腐蚀。'
- en: '| [`binary_fill_holes`](generated/scipy.ndimage.binary_fill_holes.html#scipy.ndimage.binary_fill_holes
    "scipy.ndimage.binary_fill_holes")(input[, structure, ...]) | Fill the holes in
    binary objects. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '[`binary_fill_holes`](generated/scipy.ndimage.binary_fill_holes.html#scipy.ndimage.binary_fill_holes
    "scipy.ndimage.binary_fill_holes")(input[, structure, ...]) | 填补二进制对象中的空洞。'
- en: '| [`binary_hit_or_miss`](generated/scipy.ndimage.binary_hit_or_miss.html#scipy.ndimage.binary_hit_or_miss
    "scipy.ndimage.binary_hit_or_miss")(input[, structure1, ...]) | Multidimensional
    binary hit-or-miss transform. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '[`binary_hit_or_miss`](generated/scipy.ndimage.binary_hit_or_miss.html#scipy.ndimage.binary_hit_or_miss
    "scipy.ndimage.binary_hit_or_miss")(input[, structure1, ...]) | 多维二进制击中或错过变换。'
- en: '| [`binary_opening`](generated/scipy.ndimage.binary_opening.html#scipy.ndimage.binary_opening
    "scipy.ndimage.binary_opening")(input[, structure, ...]) | Multidimensional binary
    opening with the given structuring element. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '[`binary_opening`](generated/scipy.ndimage.binary_opening.html#scipy.ndimage.binary_opening
    "scipy.ndimage.binary_opening")(input[, structure, ...]) | 使用给定的结构元素进行多维二进制开运算。'
- en: '| [`binary_propagation`](generated/scipy.ndimage.binary_propagation.html#scipy.ndimage.binary_propagation
    "scipy.ndimage.binary_propagation")(input[, structure, mask, ...]) | Multidimensional
    binary propagation with the given structuring element. |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '[`binary_propagation`](generated/scipy.ndimage.binary_propagation.html#scipy.ndimage.binary_propagation
    "scipy.ndimage.binary_propagation")(input[, structure, mask, ...]) | 使用给定的结构元素进行多维二进制传播。'
- en: '| [`black_tophat`](generated/scipy.ndimage.black_tophat.html#scipy.ndimage.black_tophat
    "scipy.ndimage.black_tophat")(input[, size, footprint, ...]) | Multidimensional
    black tophat filter. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '[`black_tophat`](generated/scipy.ndimage.black_tophat.html#scipy.ndimage.black_tophat
    "scipy.ndimage.black_tophat")(input[, size, footprint, ...]) | 多维黑顶帽滤波器。'
- en: '| [`distance_transform_bf`](generated/scipy.ndimage.distance_transform_bf.html#scipy.ndimage.distance_transform_bf
    "scipy.ndimage.distance_transform_bf")(input[, metric, ...]) | Distance transform
    function by a brute force algorithm. |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '[`distance_transform_bf`](generated/scipy.ndimage.distance_transform_bf.html#scipy.ndimage.distance_transform_bf
    "scipy.ndimage.distance_transform_bf")(input[, metric, ...]) | 通过蛮力算法进行的距离变换函数。'
- en: '| [`distance_transform_cdt`](generated/scipy.ndimage.distance_transform_cdt.html#scipy.ndimage.distance_transform_cdt
    "scipy.ndimage.distance_transform_cdt")(input[, metric, ...]) | Distance transform
    for chamfer type of transforms. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '[`distance_transform_cdt`](generated/scipy.ndimage.distance_transform_cdt.html#scipy.ndimage.distance_transform_cdt
    "scipy.ndimage.distance_transform_cdt")(input[, metric, ...]) | 针对 chamfer 类型变换的距离变换。'
- en: '| [`distance_transform_edt`](generated/scipy.ndimage.distance_transform_edt.html#scipy.ndimage.distance_transform_edt
    "scipy.ndimage.distance_transform_edt")(input[, sampling, ...]) | Exact Euclidean
    distance transform. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '[`distance_transform_edt`](generated/scipy.ndimage.distance_transform_edt.html#scipy.ndimage.distance_transform_edt
    "scipy.ndimage.distance_transform_edt")(input[, sampling, ...]) | 精确的欧几里得距离变换。'
- en: '| [`generate_binary_structure`](generated/scipy.ndimage.generate_binary_structure.html#scipy.ndimage.generate_binary_structure
    "scipy.ndimage.generate_binary_structure")(rank, connectivity) | Generate a binary
    structure for binary morphological operations. |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '[`generate_binary_structure`](generated/scipy.ndimage.generate_binary_structure.html#scipy.ndimage.generate_binary_structure
    "scipy.ndimage.generate_binary_structure")(rank, connectivity) | 为二进制形态学操作生成二进制结构。'
- en: '| [`grey_closing`](generated/scipy.ndimage.grey_closing.html#scipy.ndimage.grey_closing
    "scipy.ndimage.grey_closing")(input[, size, footprint, ...]) | Multidimensional
    grayscale closing. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '[`grey_closing`](generated/scipy.ndimage.grey_closing.html#scipy.ndimage.grey_closing
    "scipy.ndimage.grey_closing")(input[, size, footprint, ...]) | 多维灰度闭运算。'
- en: '| [`grey_dilation`](generated/scipy.ndimage.grey_dilation.html#scipy.ndimage.grey_dilation
    "scipy.ndimage.grey_dilation")(input[, size, footprint, ...]) | Calculate a greyscale
    dilation, using either a structuring element, or a footprint corresponding to
    a flat structuring element. |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '[`grey_dilation`](generated/scipy.ndimage.grey_dilation.html#scipy.ndimage.grey_dilation
    "scipy.ndimage.grey_dilation")(input[, size, footprint, ...]) | 计算灰度膨胀，使用结构元素或对应于平坦结构元素的足迹。'
- en: '| [`grey_erosion`](generated/scipy.ndimage.grey_erosion.html#scipy.ndimage.grey_erosion
    "scipy.ndimage.grey_erosion")(input[, size, footprint, ...]) | Calculate a greyscale
    erosion, using either a structuring element, or a footprint corresponding to a
    flat structuring element. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '[`grey_erosion`](generated/scipy.ndimage.grey_erosion.html#scipy.ndimage.grey_erosion
    "scipy.ndimage.grey_erosion")(input[, size, footprint, ...]) | 计算灰度侵蚀，可以使用结构元素或与平面结构元素对应的足印。'
- en: '| [`grey_opening`](generated/scipy.ndimage.grey_opening.html#scipy.ndimage.grey_opening
    "scipy.ndimage.grey_opening")(input[, size, footprint, ...]) | Multidimensional
    grayscale opening. |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '[`grey_opening`](generated/scipy.ndimage.grey_opening.html#scipy.ndimage.grey_opening
    "scipy.ndimage.grey_opening")(input[, size, footprint, ...]) | 多维灰度开运算。'
- en: '| [`iterate_structure`](generated/scipy.ndimage.iterate_structure.html#scipy.ndimage.iterate_structure
    "scipy.ndimage.iterate_structure")(structure, iterations[, ...]) | Iterate a structure
    by dilating it with itself. |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '[`iterate_structure`](generated/scipy.ndimage.iterate_structure.html#scipy.ndimage.iterate_structure
    "scipy.ndimage.iterate_structure")(structure, iterations[, ...]) | 通过自身的膨胀迭代结构。'
- en: '| [`morphological_gradient`](generated/scipy.ndimage.morphological_gradient.html#scipy.ndimage.morphological_gradient
    "scipy.ndimage.morphological_gradient")(input[, size, ...]) | Multidimensional
    morphological gradient. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '[`morphological_gradient`](generated/scipy.ndimage.morphological_gradient.html#scipy.ndimage.morphological_gradient
    "scipy.ndimage.morphological_gradient")(input[, size, ...]) | 多维形态梯度。'
- en: '| [`morphological_laplace`](generated/scipy.ndimage.morphological_laplace.html#scipy.ndimage.morphological_laplace
    "scipy.ndimage.morphological_laplace")(input[, size, ...]) | Multidimensional
    morphological laplace. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '[`morphological_laplace`](generated/scipy.ndimage.morphological_laplace.html#scipy.ndimage.morphological_laplace
    "scipy.ndimage.morphological_laplace")(input[, size, ...]) | 多维形态拉普拉斯。'
- en: '| [`white_tophat`](generated/scipy.ndimage.white_tophat.html#scipy.ndimage.white_tophat
    "scipy.ndimage.white_tophat")(input[, size, footprint, ...]) | Multidimensional
    white tophat filter. |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '[`white_tophat`](generated/scipy.ndimage.white_tophat.html#scipy.ndimage.white_tophat
    "scipy.ndimage.white_tophat")(input[, size, footprint, ...]) | 多维白顶帽滤波器。'
