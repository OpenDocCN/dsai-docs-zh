- en: scipy.signal.oaconvolve
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.oaconvolve.html#scipy.signal.oaconvolve](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.oaconvolve.html#scipy.signal.oaconvolve)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Convolve two N-dimensional arrays using the overlap-add method.
  prefs: []
  type: TYPE_NORMAL
- en: Convolve *in1* and *in2* using the overlap-add method, with the output size
    determined by the *mode* argument.
  prefs: []
  type: TYPE_NORMAL
- en: This is generally much faster than [`convolve`](scipy.signal.convolve.html#scipy.signal.convolve
    "scipy.signal.convolve") for large arrays (n > ~500), and generally much faster
    than [`fftconvolve`](scipy.signal.fftconvolve.html#scipy.signal.fftconvolve "scipy.signal.fftconvolve")
    when one array is much larger than the other, but can be slower when only a few
    output values are needed or when the arrays are very similar in shape, and can
    only output float arrays (int or object array inputs will be cast to float).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**in1**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: First input.
  prefs: []
  type: TYPE_NORMAL
- en: '**in2**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Second input. Should have the same number of dimensions as *in1*.
  prefs: []
  type: TYPE_NORMAL
- en: '**mode**str {‘full’, ‘valid’, ‘same’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'A string indicating the size of the output:'
  prefs: []
  type: TYPE_NORMAL
- en: '`full`'
  prefs: []
  type: TYPE_NORMAL
- en: The output is the full discrete linear convolution of the inputs. (Default)
  prefs: []
  type: TYPE_NORMAL
- en: '`valid`'
  prefs: []
  type: TYPE_NORMAL
- en: The output consists only of those elements that do not rely on the zero-padding.
    In ‘valid’ mode, either *in1* or *in2* must be at least as large as the other
    in every dimension.
  prefs: []
  type: TYPE_NORMAL
- en: '`same`'
  prefs: []
  type: TYPE_NORMAL
- en: The output is the same size as *in1*, centered with respect to the ‘full’ output.
  prefs: []
  type: TYPE_NORMAL
- en: '**axes**int or array_like of ints or None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axes over which to compute the convolution. The default is over all axes.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**array'
  prefs: []
  type: TYPE_NORMAL
- en: An N-dimensional array containing a subset of the discrete linear convolution
    of *in1* with *in2*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`convolve`](scipy.signal.convolve.html#scipy.signal.convolve "scipy.signal.convolve")'
  prefs: []
  type: TYPE_NORMAL
- en: Uses the direct convolution or FFT convolution algorithm depending on which
    is faster.
  prefs: []
  type: TYPE_NORMAL
- en: '[`fftconvolve`](scipy.signal.fftconvolve.html#scipy.signal.fftconvolve "scipy.signal.fftconvolve")'
  prefs: []
  type: TYPE_NORMAL
- en: An implementation of convolution using FFT.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.4.0.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1]'
  prefs: []
  type: TYPE_NORMAL
- en: Wikipedia, “Overlap-add_method”. [https://en.wikipedia.org/wiki/Overlap-add_method](https://en.wikipedia.org/wiki/Overlap-add_method)
  prefs: []
  type: TYPE_NORMAL
- en: '[2]'
  prefs: []
  type: TYPE_NORMAL
- en: 'Richard G. Lyons. Understanding Digital Signal Processing, Third Edition, 2011\.
    Chapter 13.10. ISBN 13: 978-0137-02741-5'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Convolve a 100,000 sample signal with a 512-sample filter.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-signal-oaconvolve-1.png](../Images/8836cf343a585d775cb376277c3bd7f1.png)'
  prefs: []
  type: TYPE_IMG
