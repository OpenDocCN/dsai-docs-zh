- en: scipy.optimize.linprog_verbose_callback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.linprog_verbose_callback.html#scipy.optimize.linprog_verbose_callback](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.linprog_verbose_callback.html#scipy.optimize.linprog_verbose_callback)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: A sample callback function demonstrating the linprog callback interface. This
    callback produces detailed output to sys.stdout before each iteration and after
    the final iteration of the simplex algorithm.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**res**A [`scipy.optimize.OptimizeResult`](scipy.optimize.OptimizeResult.html#scipy.optimize.OptimizeResult
    "scipy.optimize.OptimizeResult") consisting of the following fields:'
  prefs: []
  type: TYPE_NORMAL
- en: x1-D array
  prefs: []
  type: TYPE_NORMAL
- en: The independent variable vector which optimizes the linear programming problem.
  prefs: []
  type: TYPE_NORMAL
- en: funfloat
  prefs: []
  type: TYPE_NORMAL
- en: Value of the objective function.
  prefs: []
  type: TYPE_NORMAL
- en: successbool
  prefs: []
  type: TYPE_NORMAL
- en: True if the algorithm succeeded in finding an optimal solution.
  prefs: []
  type: TYPE_NORMAL
- en: slack1-D array
  prefs: []
  type: TYPE_NORMAL
- en: The values of the slack variables. Each slack variable corresponds to an inequality
    constraint. If the slack is zero, then the corresponding constraint is active.
  prefs: []
  type: TYPE_NORMAL
- en: con1-D array
  prefs: []
  type: TYPE_NORMAL
- en: The (nominally zero) residuals of the equality constraints, that is, `b - A_eq
    @ x`
  prefs: []
  type: TYPE_NORMAL
- en: phaseint
  prefs: []
  type: TYPE_NORMAL
- en: The phase of the optimization being executed. In phase 1 a basic feasible solution
    is sought and the T has an additional row representing an alternate objective
    function.
  prefs: []
  type: TYPE_NORMAL
- en: statusint
  prefs: []
  type: TYPE_NORMAL
- en: 'An integer representing the exit status of the optimization:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: nitint
  prefs: []
  type: TYPE_NORMAL
- en: The number of iterations performed.
  prefs: []
  type: TYPE_NORMAL
- en: messagestr
  prefs: []
  type: TYPE_NORMAL
- en: A string descriptor of the exit status of the optimization.
  prefs: []
  type: TYPE_NORMAL
