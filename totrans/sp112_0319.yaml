- en: scipy.linalg.convolution_matrix
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.linalg.convolution_matrix
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.convolution_matrix.html#scipy.linalg.convolution_matrix](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.convolution_matrix.html#scipy.linalg.convolution_matrix)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.convolution_matrix.html#scipy.linalg.convolution_matrix](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.convolution_matrix.html#scipy.linalg.convolution_matrix)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Construct a convolution matrix.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 构造一个卷积矩阵。
- en: Constructs the Toeplitz matrix representing one-dimensional convolution [[1]](#r8b920faad2e4-1).
    See the notes below for details.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 构造表示一维卷积的 Toeplitz 矩阵[[1]](#r8b920faad2e4-1)。详细信息请参见下面的注释。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a**(m,) array_like'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**(m,) array_like'
- en: The 1-D array to convolve.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要卷积的一维数组。
- en: '**n**int'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**int'
- en: The number of columns in the resulting matrix. It gives the length of the input
    to be convolved with *a*. This is analogous to the length of *v* in `numpy.convolve(a,
    v)`.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 结果矩阵中的列数。它给出要与 *a* 进行卷积的输入长度。这类似于 `numpy.convolve(a, v)` 中 *v* 的长度。
- en: '**mode**str'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**mode**str'
- en: This is analogous to *mode* in `numpy.convolve(v, a, mode)`. It must be one
    of (‘full’, ‘valid’, ‘same’). See below for how *mode* determines the shape of
    the result.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这类似于 `numpy.convolve(v, a, mode)` 中的 *mode*。它必须是 (‘full’, ‘valid’, ‘same’) 之一。有关
    *mode* 如何确定结果形状，请参见下文。
- en: 'Returns:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**A**(k, n) ndarray'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**A**(k, n) ndarray'
- en: 'The convolution matrix whose row count *k* depends on *mode*:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 卷积矩阵的行数 *k* 取决于 *mode*：
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: See also
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`toeplitz`](scipy.linalg.toeplitz.html#scipy.linalg.toeplitz "scipy.linalg.toeplitz")'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[`toeplitz`](scipy.linalg.toeplitz.html#scipy.linalg.toeplitz "scipy.linalg.toeplitz")'
- en: Toeplitz matrix
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Toeplitz 矩阵
- en: Notes
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: 'The code:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 代码：
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: creates a Toeplitz matrix *A* such that `A @ v` is equivalent to using `convolve(a,
    v, mode)`. The returned array always has *n* columns. The number of rows depends
    on the specified *mode*, as explained above.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个 Toeplitz 矩阵 *A*，使得 `A @ v` 等同于使用 `convolve(a, v, mode)`。返回的数组始终有 *n* 列。行数取决于上述指定的
    *mode*。
- en: 'In the default ‘full’ mode, the entries of *A* are given by:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在默认的 ‘full’ 模式下，*A* 的条目如下：
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'where `m = len(a)`. Suppose, for example, the input array is `[x, y, z]`. The
    convolution matrix has the form:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 `m = len(a)`。例如，输入数组为 `[x, y, z]`。卷积矩阵的形式如下：
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In ‘valid’ mode, the entries of *A* are given by:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在 ‘valid’ 模式下，*A* 的条目如下：
- en: '[PRE5]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This corresponds to a matrix whose rows are the subset of those from the ‘full’
    case where all the coefficients in *a* are contained in the row. For input `[x,
    y, z]`, this array looks like:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这对应于一个矩阵，其行是从 ‘full’ 情况中子集的行，其中 *a* 中的所有系数都包含在行中。对于输入 `[x, y, z]`，此数组如下所示：
- en: '[PRE6]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'In the ‘same’ mode, the entries of *A* are given by:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在 ‘same’ 模式下，*A* 的条目如下：
- en: '[PRE7]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The typical application of the ‘same’ mode is when one has a signal of length
    *n* (with *n* greater than `len(a)`), and the desired output is a filtered signal
    that is still of length *n*.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: “same” 模式的典型应用是当信号的长度为 *n*（其中 *n* 大于 `len(a)`）时，所得输出为仍然长度为 *n* 的滤波信号。
- en: 'For input `[x, y, z]`, this array looks like:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 对于输入 `[x, y, z]`，此数组如下所示：
- en: '[PRE8]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: New in version 1.5.0.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 新增于版本 1.5.0。
- en: References
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[1](#id1)]'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[[1](#id1)]'
- en: “Convolution”, [https://en.wikipedia.org/wiki/Convolution](https://en.wikipedia.org/wiki/Convolution)
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: “卷积”，[https://en.wikipedia.org/wiki/Convolution](https://en.wikipedia.org/wiki/Convolution)
- en: Examples
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE9]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Compare multiplication by *A* with the use of [`numpy.convolve`](https://numpy.org/devdocs/reference/generated/numpy.convolve.html#numpy.convolve
    "(in NumPy v2.0.dev0)").
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 与使用 [`numpy.convolve`](https://numpy.org/devdocs/reference/generated/numpy.convolve.html#numpy.convolve
    "(在 NumPy v2.0.dev0 中)") 进行乘法比较。
- en: '[PRE10]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Verify that `A @ x` produced the same result as applying the convolution function.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 验证 `A @ x` 是否产生与应用卷积函数相同的结果。
- en: '[PRE11]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: For comparison to the case `mode='same'` shown above, here are the matrices
    produced by `mode='full'` and `mode='valid'` for the same coefficients and size.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 作为 `mode='same'` 情况的比较，这里显示了相同系数和大小的 `mode='full'` 和 `mode='valid'` 产生的矩阵。
- en: '[PRE12]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
