- en: Operations on holonomic functions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/holonomic/operations.html](https://docs.sympy.org/latest/modules/holonomic/operations.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Addition and Multiplication
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Two holonomic functions can be added or multiplied with the result also a holonomic
    functions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_BQ
  type: TYPE_PRE
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`p` and `q` here are holonomic representation of \(e^x\) and \(\sin(x)\) respectively.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_BQ
  type: TYPE_PRE
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Holonomic representation of \(e^x+\sin(x)\)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_BQ
  type: TYPE_PRE
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Holonomic representation of \(e^x \cdot \sin(x)\)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_BQ
  type: TYPE_PRE
- en: Integration and Differentiation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Integrates the given holonomic function.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Differentiation of the given Holonomic function.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`integrate`](#sympy.holonomic.holonomic.HolonomicFunction.integrate "sympy.holonomic.holonomic.HolonomicFunction.integrate")'
  prefs: []
  type: TYPE_NORMAL
- en: Composition with polynomials
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Returns function after composition of a holonomic function with an algebraic
    function. The method cannot compute initial conditions for the result by itself,
    so they can be also be provided.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`from_hyper`](convert.html#sympy.holonomic.holonomic.from_hyper "sympy.holonomic.holonomic.from_hyper")'
  prefs: []
  type: TYPE_NORMAL
- en: Convert to holonomic sequence
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Finds recurrence relation for the coefficients in the series expansion of the
    function about \(x_0\), where \(x_0\) is the point at which the initial condition
    is stored.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: If the point \(x_0\) is ordinary, solution of the form \([(R, n_0)]\) is returned.
    Where \(R\) is the recurrence relation and \(n_0\) is the smallest `n` for which
    the recurrence holds true.
  prefs: []
  type: TYPE_NORMAL
- en: If the point \(x_0\) is regular singular, a list of solutions in the format
    \((R, p, n_0)\) is returned, i.e. \([(R, p, n_0), ... ]\). Each tuple in this
    vector represents a recurrence relation \(R\) associated with a root of the indicial
    equation `p`. Conditions of a different format can also be provided in this case,
    see the docstring of HolonomicFunction class.
  prefs: []
  type: TYPE_NORMAL
- en: If it’s not possible to numerically compute a initial condition, it is returned
    as a symbol \(C_j\), denoting the coefficient of \((x - x_0)^j\) in the power
    series about \(x_0\).
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`HolonomicFunction.series`](#sympy.holonomic.holonomic.HolonomicFunction.series
    "sympy.holonomic.holonomic.HolonomicFunction.series")'
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[R565](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://hal.inria.fr/inria-00070025/document](https://hal.inria.fr/inria-00070025/document)'
  prefs: []
  type: TYPE_NORMAL
- en: '[[R566](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www3.risc.jku.at/publications/download/risc_2244/DIPLFORM.pdf](https://www3.risc.jku.at/publications/download/risc_2244/DIPLFORM.pdf)'
  prefs: []
  type: TYPE_NORMAL
- en: Series expansion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Finds the power series expansion of given holonomic function about \(x_0\).
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: A list of series might be returned if \(x_0\) is a regular point with multiple
    roots of the indicial equation.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`HolonomicFunction.to_sequence`](#sympy.holonomic.holonomic.HolonomicFunction.to_sequence
    "sympy.holonomic.holonomic.HolonomicFunction.to_sequence")'
  prefs: []
  type: TYPE_NORMAL
- en: Numerical evaluation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Finds numerical value of a holonomic function using numerical methods. (RK4
    by default). A set of points (real or complex) must be provided which will be
    the path for the numerical integration.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The path should be given as a list \([x_1, x_2, \dots x_n]\). The numerical
    values will be computed at each point in this order \(x_1 \rightarrow x_2 \rightarrow
    x_3 \dots \rightarrow x_n\).
  prefs: []
  type: TYPE_NORMAL
- en: Returns values of the function at \(x_1, x_2, \dots x_n\) in a list.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: A straight line on the real axis from (0 to 1)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Runge-Kutta 4th order on e^x from 0.1 to 1. Exact solution at 1 is 2.71828182845905
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Euler’s method for the same
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: One can also observe that the value obtained using Runge-Kutta 4th order is
    much more accurate than Euler’s method.
  prefs: []
  type: TYPE_NORMAL
- en: Convert to a linear combination of hypergeometric functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Returns a hypergeometric function (or linear combination of them) representing
    the given holonomic function.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns an answer of the form: \(a_1 \cdot x^{b_1} \cdot{hyper()} + a_2 \cdot
    x^{b_2} \cdot{hyper()} \dots\)'
  prefs: []
  type: TYPE_NORMAL
- en: This is very useful as one can now use `hyperexpand` to find the symbolic expressions/functions.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`from_hyper`](convert.html#sympy.holonomic.holonomic.from_hyper "sympy.holonomic.holonomic.from_hyper"),
    [`from_meijerg`](convert.html#sympy.holonomic.holonomic.from_meijerg "sympy.holonomic.holonomic.from_meijerg")'
  prefs: []
  type: TYPE_NORMAL
- en: Convert to a linear combination of Meijer G-functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Returns a linear combination of Meijer G-functions.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`to_hyper`](#sympy.holonomic.holonomic.HolonomicFunction.to_hyper "sympy.holonomic.holonomic.HolonomicFunction.to_hyper")'
  prefs: []
  type: TYPE_NORMAL
- en: Convert to expressions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: Converts a Holonomic Function back to elementary functions.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
