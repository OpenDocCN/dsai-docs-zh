["```py\nscipy.stats.yulesimon = <scipy.stats._discrete_distns.yulesimon_gen object>\n```", "```py\n>>> import numpy as np\n>>> from scipy.stats import yulesimon\n>>> import matplotlib.pyplot as plt\n>>> fig, ax = plt.subplots(1, 1) \n```", "```py\n>>> alpha = 11\n>>> mean, var, skew, kurt = yulesimon.stats(alpha, moments='mvsk') \n```", "```py\n>>> x = np.arange(yulesimon.ppf(0.01, alpha),\n...               yulesimon.ppf(0.99, alpha))\n>>> ax.plot(x, yulesimon.pmf(x, alpha), 'bo', ms=8, label='yulesimon pmf')\n>>> ax.vlines(x, 0, yulesimon.pmf(x, alpha), colors='b', lw=5, alpha=0.5) \n```", "```py\n>>> rv = yulesimon(alpha)\n>>> ax.vlines(x, 0, rv.pmf(x), colors='k', linestyles='-', lw=1,\n...         label='frozen pmf')\n>>> ax.legend(loc='best', frameon=False)\n>>> plt.show() \n```", "```py\n>>> prob = yulesimon.cdf(x, alpha)\n>>> np.allclose(x, yulesimon.ppf(prob, alpha))\nTrue \n```", "```py\n>>> r = yulesimon.rvs(alpha, size=1000) \n```"]