- en: scipy.signal.unique_roots
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.unique_roots.html#scipy.signal.unique_roots](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.unique_roots.html#scipy.signal.unique_roots)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Determine unique roots and their multiplicities from a list of roots.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**p**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The list of roots.
  prefs: []
  type: TYPE_NORMAL
- en: '**tol**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The tolerance for two roots to be considered equal in terms of the distance
    between them. Default is 1e-3\. Refer to Notes about the details on roots grouping.
  prefs: []
  type: TYPE_NORMAL
- en: '**rtype**{‘max’, ‘maximum’, ‘min’, ‘minimum’, ‘avg’, ‘mean’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: How to determine the returned root if multiple roots are within *tol* of each
    other.
  prefs: []
  type: TYPE_NORMAL
- en: '‘max’, ‘maximum’: pick the maximum of those roots'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘min’, ‘minimum’: pick the minimum of those roots'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘avg’, ‘mean’: take the average of those roots'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: When finding minimum or maximum among complex roots they are compared first
    by the real part and then by the imaginary part.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**unique**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The list of unique roots.
  prefs: []
  type: TYPE_NORMAL
- en: '**multiplicity**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The multiplicity of each root.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: If we have 3 roots `a`, `b` and `c`, such that `a` is close to `b` and `b` is
    close to `c` (distance is less than *tol*), then it doesn’t necessarily mean that
    `a` is close to `c`. It means that roots grouping is not unique. In this function
    we use “greedy” grouping going through the roots in the order they are given in
    the input *p*.
  prefs: []
  type: TYPE_NORMAL
- en: This utility function is not specific to roots but can be used for any sequence
    of values for which uniqueness and multiplicity has to be determined. For a more
    general routine, see [`numpy.unique`](https://numpy.org/devdocs/reference/generated/numpy.unique.html#numpy.unique
    "(in NumPy v2.0.dev0)").
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Check which roots have multiplicity larger than 1:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
