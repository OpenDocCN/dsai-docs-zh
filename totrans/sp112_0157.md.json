["```py\nscipy.integrate.odeint(func, y0, t, args=(), Dfun=None, col_deriv=0, full_output=0, ml=None, mu=None, rtol=None, atol=None, tcrit=None, h0=0.0, hmax=0.0, hmin=0.0, ixpr=0, mxstep=0, mxhnil=0, mxordn=12, mxords=5, printmessg=0, tfirst=False)\n```", "```py\ndy/dt = func(y, t, ...)  [or func(t, y, ...)] \n```", "```py\ntheta''(t) + b*theta'(t) + c*sin(theta(t)) = 0 \n```", "```py\ntheta'(t) = omega(t)\nomega'(t) = -b*omega(t) - c*sin(theta(t)) \n```", "```py\n>>> import numpy as np\n>>> def pend(y, t, b, c):\n...     theta, omega = y\n...     dydt = [omega, -b*omega - c*np.sin(theta)]\n...     return dydt\n... \n```", "```py\n>>> b = 0.25\n>>> c = 5.0 \n```", "```py\n>>> y0 = [np.pi - 0.1, 0.0] \n```", "```py\n>>> t = np.linspace(0, 10, 101) \n```", "```py\n>>> from scipy.integrate import odeint\n>>> sol = odeint(pend, y0, t, args=(b, c)) \n```", "```py\n>>> import matplotlib.pyplot as plt\n>>> plt.plot(t, sol[:, 0], 'b', label='theta(t)')\n>>> plt.plot(t, sol[:, 1], 'g', label='omega(t)')\n>>> plt.legend(loc='best')\n>>> plt.xlabel('t')\n>>> plt.grid()\n>>> plt.show() \n```"]