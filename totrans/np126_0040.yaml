- en: numpy.ndarray.item
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.item.html](https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.item.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: method
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Copy an element of an array to a standard Python scalar and return it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '***args**Arguments (variable number and type)'
  prefs: []
  type: TYPE_NORMAL
- en: 'none: in this case, the method only works for arrays with one element (*a.size
    == 1*), which element is copied into a standard Python scalar object and returned.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'int_type: this argument is interpreted as a flat index into the array, specifying
    which element to copy and return.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'tuple of int_types: functions as does a single int_type argument, except that
    the argument is interpreted as an nd-index into the array.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**z**Standard Python scalar object'
  prefs: []
  type: TYPE_NORMAL
- en: A copy of the specified element of the array as a suitable Python scalar
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: When the data type of *a* is longdouble or clongdouble, item() returns a scalar
    array object because there is no available Python scalar that would not lose information.
    Void arrays return a buffer object for item(), unless fields are defined, in which
    case a tuple is returned.
  prefs: []
  type: TYPE_NORMAL
- en: '[`item`](#numpy.ndarray.item "numpy.ndarray.item") is very similar to a[args],
    except, instead of an array scalar, a standard Python scalar is returned. This
    can be useful for speeding up access to elements of the array and doing arithmetic
    on elements of the array using Python’s optimized math.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
