- en: Calculus
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 微积分
- en: Original text：[https://docs.sympy.org/latest/modules/calculus/index.html](https://docs.sympy.org/latest/modules/calculus/index.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.sympy.org/latest/modules/calculus/index.html](https://docs.sympy.org/latest/modules/calculus/index.html)
- en: Calculus-related methods.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 与微积分相关的方法。
- en: This module implements a method to find Euler-Lagrange Equations for given Lagrangian.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 此模块实现了一种查找给定拉格朗日量的欧拉-拉格朗日方程的方法。
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Find the Euler-Lagrange equations [[R31]](#r31) for a given Lagrangian.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 查找给定拉格朗日量的欧拉-拉格朗日方程[[R31]](#r31)。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**L** : Expr'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**L**：Expr'
- en: The Lagrangian that should be a function of the functions listed in the second
    argument and their derivatives.
  id: totrans-8
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 拉格朗日量应该是列在第二个参数中的函数及其导数的函数。
- en: ''
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'For example, in the case of two functions \(f(x,y)\), \(g(x,y)\) and two independent
    variables \(x\), \(y\) the Lagrangian has the form:'
  id: totrans-10
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 例如，在两个函数 \(f(x,y)\)，\(g(x,y)\) 和两个自变量 \(x\)，\(y\) 的情况下，拉格朗日量的形式为：
- en: ''
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: \[L\left(f(x,y),g(x,y),\frac{\partial f(x,y)}{\partial x}, \frac{\partial f(x,y)}{\partial
    y}, \frac{\partial g(x,y)}{\partial x}, \frac{\partial g(x,y)}{\partial y},x,y\right)\]
  id: totrans-12
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \[L\left(f(x,y),g(x,y),\frac{\partial f(x,y)}{\partial x}, \frac{\partial f(x,y)}{\partial
    y}, \frac{\partial g(x,y)}{\partial x}, \frac{\partial g(x,y)}{\partial y},x,y\right)\]
- en: ''
  id: totrans-13
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In many cases it is not necessary to provide anything, except the Lagrangian,
    it will be auto-detected (and an error raised if this cannot be done).
  id: totrans-14
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在许多情况下，除了拉格朗日量之外，通常不需要提供任何内容，它将会自动检测到（如果不能完成这个操作，那么将会产生一个错误）。
- en: '**funcs** : Function or an iterable of Functions'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**函数**：Function 或者 函数的可迭代对象'
- en: The functions that the Lagrangian depends on. The Euler equations are differential
    equations for each of these functions.
  id: totrans-16
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 拉格朗日量所依赖的函数。 欧拉方程是每个这些函数的微分方程。
- en: '**vars** : Symbol or an iterable of Symbols'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**变量**：Symbol 或者 符号的可迭代对象'
- en: The Symbols that are the independent variables of the functions.
  id: totrans-18
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 是这些函数的自变量的符号。
- en: 'Returns:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**eqns** : list of Eq'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**方程**：Eq 列表'
- en: The list of differential equations, one for each function.
  id: totrans-21
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 差分方程的列表，每个函数一个。
- en: Examples
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: References
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[R31] ([1](#id1),[2](#id2))'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[R31] ([1](#id1),[2](#id2))'
- en: '[https://en.wikipedia.org/wiki/Euler%E2%80%93Lagrange_equation](https://en.wikipedia.org/wiki/Euler%E2%80%93Lagrange_equation)'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Euler%E2%80%93Lagrange_equation](https://en.wikipedia.org/wiki/Euler%E2%80%93Lagrange_equation)'
- en: '## Singularities'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '## 奇点'
- en: This module implements algorithms for finding singularities for a function and
    identifying types of functions.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 此模块实现了查找函数的奇点以及识别函数类型的算法。
- en: 'The differential calculus methods in this module include methods to identify
    the following function types in the given `Interval`: - Increasing - Strictly
    Increasing - Decreasing - Strictly Decreasing - Monotonic'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 本模块中的微分计算方法包括以下方法来识别给定`Interval`中的以下函数类型： - 增加 - 严格增加 - 减少 - 严格减少 - 单调
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Return whether the function is decreasing in the given interval.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 返回函数在给定区间内是否减少。
- en: 'Parameters:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**expression** : Expr'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**表达式**：Expr'
- en: The target function which is being checked.
  id: totrans-34
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 正在检查的目标函数。
- en: '**interval** : Set, optional'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**区间**：Set，可选'
- en: The range of values in which we are testing (defaults to set of all real numbers).
  id: totrans-36
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 测试范围中的值的范围（默认为所有实数的集合）。
- en: '**symbol** : Symbol, optional'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**符号**：Symbol，可选'
- en: The symbol present in expression which gets varied over the given range.
  id: totrans-38
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 表达式中存在的符号在给定范围内变化。
- en: 'Returns:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: Boolean
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔值
- en: True if `expression` is decreasing (either strictly decreasing or constant)
    in the given `interval`, False otherwise.
  id: totrans-41
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果`expression`在给定的`interval`中减少（严格减少或常数），则为True。
- en: Examples
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE3]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Return whether the function is increasing in the given interval.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 返回函数在给定区间内是否增加。
- en: 'Parameters:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**expression** : Expr'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**表达式**：Expr'
- en: The target function which is being checked.
  id: totrans-48
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 正在检查的目标函数。
- en: '**interval** : Set, optional'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**区间**：Set，可选'
- en: The range of values in which we are testing (defaults to set of all real numbers).
  id: totrans-50
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 测试范围中的值的范围（默认为所有实数的集合）。
- en: '**symbol** : Symbol, optional'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**符号**：Symbol，可选'
- en: The symbol present in expression which gets varied over the given range.
  id: totrans-52
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 表达式中存在的符号在给定范围内变化。
- en: 'Returns:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: Boolean
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔值
- en: True if `expression` is increasing (either strictly increasing or constant)
    in the given `interval`, False otherwise.
  id: totrans-55
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果`expression`在给定的`interval`中增加（严格增加或常数），则为True。
- en: Examples
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE5]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Return whether the function is monotonic in the given interval.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 返回函数在给定区间内是否单调。
- en: 'Parameters:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**expression** : Expr'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**表达式**：Expr'
- en: The target function which is being checked.
  id: totrans-62
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 正在检查的目标函数。
- en: '**interval** : Set, optional'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**区间**：Set，可选'
- en: The range of values in which we are testing (defaults to set of all real numbers).
  id: totrans-64
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们正在测试的值的范围（默认为所有实数的集合）。
- en: '**symbol** : Symbol, optional'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**符号**：符号，可选'
- en: The symbol present in expression which gets varied over the given range.
  id: totrans-66
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在给定范围内变化的表达式中出现的符号。
- en: 'Returns:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: Boolean
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔值
- en: True if `expression` is monotonic in the given `interval`, False otherwise.
  id: totrans-69
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果`expression`在给定的`interval`中是单调的，则为真，否则为假。
- en: 'Raises:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: '**NotImplementedError**'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**未实现错误**'
- en: Monotonicity check has not been implemented for the queried function.
  id: totrans-72
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 未对查询函数实施单调性检查。
- en: Examples
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE7]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Return whether the function is strictly decreasing in the given interval.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 返回函数在给定区间内是否严格递减。
- en: 'Parameters:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**expression** : Expr'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**expression**：表达式'
- en: The target function which is being checked.
  id: totrans-79
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 正在检查的目标函数。
- en: '**interval** : Set, optional'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**interval**：集合，可选'
- en: The range of values in which we are testing (defaults to set of all real numbers).
  id: totrans-81
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们正在测试的值的范围（默认为所有实数的集合）。
- en: '**symbol** : Symbol, optional'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**符号**：符号，可选'
- en: The symbol present in expression which gets varied over the given range.
  id: totrans-83
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在给定范围内变化的表达式中出现的符号。
- en: 'Returns:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: Boolean
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔值
- en: True if `expression` is strictly decreasing in the given `interval`, False otherwise.
  id: totrans-86
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果`expression`在给定的`interval`中严格递减，则为True，否则为False。
- en: Examples
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE9]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Return whether the function is strictly increasing in the given interval.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 返回函数在给定区间内是否严格递增。
- en: 'Parameters:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**expression** : Expr'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**expression**：表达式'
- en: The target function which is being checked.
  id: totrans-93
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 正在检查的目标函数。
- en: '**interval** : Set, optional'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**interval**：集合，可选'
- en: The range of values in which we are testing (defaults to set of all real numbers).
  id: totrans-95
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们正在测试的值的范围（默认为所有实数的集合）。
- en: '**symbol** : Symbol, optional'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**符号**：符号，可选'
- en: The symbol present in expression which gets varied over the given range.
  id: totrans-97
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在给定范围内变化的表达式中出现的符号。
- en: 'Returns:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: Boolean
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔值
- en: True if `expression` is strictly increasing in the given `interval`, False otherwise.
  id: totrans-100
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果`expression`在给定的`interval`中严格递增，则为True，否则为False。
- en: Examples
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE11]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Helper function for functions checking function monotonicity.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 函数助手，用于检查函数单调性的函数。
- en: 'Parameters:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**expression** : Expr'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '**expression**：表达式'
- en: The target function which is being checked
  id: totrans-107
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 正在检查的目标函数
- en: '**predicate** : function'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**谓词**：函数'
- en: The property being tested for. The function takes in an integer and returns
    a boolean. The integer input is the derivative and the boolean result should be
    true if the property is being held, and false otherwise.
  id: totrans-109
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 正在测试的属性。该函数接受一个整数并返回一个布尔值。如果属性被满足，则整数输入是导数，布尔结果应为真，否则为假。
- en: '**interval** : Set, optional'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '**interval**：集合，可选'
- en: The range of values in which we are testing, defaults to all reals.
  id: totrans-111
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们正在测试的值的范围，默认为所有实数。
- en: '**symbol** : Symbol, optional'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**符号**：符号，可选'
- en: The symbol present in expression which gets varied over the given range.
  id: totrans-113
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在给定范围内变化的表达式中出现的符号。
- en: '**It returns a boolean indicating whether the interval in which**'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '**它返回一个布尔值，指示区间是否**'
- en: '**the function’s derivative satisfies given predicate is a superset**'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '**函数的导数满足给定谓词是一个超集**'
- en: '**of the given interval.**'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '**给定区间的。**'
- en: 'Returns:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: Boolean
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔值
- en: True if `predicate` is true for all the derivatives when `symbol` is varied
    in `range`, False otherwise.
  id: totrans-119
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当在`range`中变化`symbol`时，如果所有导数都为真，则为`predicate`，否则为假。
- en: '[PRE13]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Find singularities of a given function.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 查找给定函数的奇点。
- en: 'Parameters:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**expression** : Expr'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**expression**：表达式'
- en: The target function in which singularities need to be found.
  id: totrans-124
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 需要找到奇点的目标函数。
- en: '**symbol** : Symbol'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**符号**：符号'
- en: The symbol over the values of which the singularity in expression in being searched
    for.
  id: totrans-126
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 表达式中正在搜索的奇点的符号变化的值。
- en: 'Returns:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: Set
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 集合
- en: A set of values for `symbol` for which `expression` has a singularity. An `EmptySet`
    is returned if `expression` has no singularities for any given value of `Symbol`.
  id: totrans-129
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 为`symbol`的一组值，对于这些值的任何给定值，`expression`都具有奇点。如果`expression`没有任何奇点，则返回`EmptySet`。
- en: 'Raises:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: '**NotImplementedError**'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '**未实现错误**'
- en: Methods for determining the singularities of this function have not been developed.
  id: totrans-132
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 尚未开发此函数的奇点确定方法。
- en: Notes
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 注：
- en: This function does not find non-isolated singularities nor does it find branch
    points of the expression.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数不查找非孤立的奇点，也不查找表达式的分支点。
- en: 'Currently supported functions are:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 目前支持的函数有：
- en: univariate continuous (real or complex) functions
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单变量连续（实数或复数）函数
- en: Examples
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE14]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: References
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 参考资料
- en: '[[R32](#id3)]'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R32](#id3)]'
- en: '[https://en.wikipedia.org/wiki/Mathematical_singularity](https://en.wikipedia.org/wiki/Mathematical_singularity)'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Mathematical_singularity](https://en.wikipedia.org/wiki/Mathematical_singularity)'
- en: '## Finite difference weights'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '## 有限差分权重'
- en: This module implements an algorithm for efficient generation of finite difference
    weights for ordinary differentials of functions for derivatives from 0 (interpolation)
    up to arbitrary order.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: 'The core algorithm is provided in the finite difference weight generating function
    (`finite_diff_weights`), and two convenience functions are provided for:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 核心算法提供了用于生成有限差分权重的函数 (`finite_diff_weights`)，并提供了两个便利函数用于：
- en: estimating a derivative (or interpolate) directly from a series of points
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 示例
- en: is also provided (`apply_finite_diff`).
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 也提供了 (`apply_finite_diff`)。
- en: differentiating by using finite difference approximations
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用有限差分近似进行微分
- en: (`differentiate_finite`).
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 本模块实现了一个用于常微分方程中的函数导数的有效生成有限差分权重的算法，从 0 阶（插值）到任意阶数。（`differentiate_finite`）。
- en: '[PRE15]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Calculates the finite difference approximation of the derivative of requested
    order at `x0` from points provided in `x_list` and `y_list`.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 直接从一系列点中估算导数（或插值）
- en: 'Parameters:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '**order: int**'
- en: '**order: int**'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '**y_list: sequence**'
- en: order of derivative to approximate. 0 corresponds to interpolation.
  id: totrans-153
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 待翻译的文本有很多行，请稍等，正在处理中。```markdown
- en: '**x_list: sequence**'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: Sequence of (unique) values for the independent variable.
  id: totrans-155
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 独立变量的（唯一）值序列。
- en: '**y_list: sequence**'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 待翻译的文本有很多行，请稍等，正在处理中。
- en: The function value at corresponding values for the independent variable in x_list.
  id: totrans-157
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 示例
- en: '**x0: Number or Symbol**'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '**x0: Number or Symbol**'
- en: At what value of the independent variable the derivative should be evaluated.
    Defaults to 0.
  id: totrans-159
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在哪个独立变量的值上应该评估导数。默认为 0。
- en: 'Returns:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: sympy.core.add.Add or sympy.core.numbers.Number
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: sympy.core.add.Add or sympy.core.numbers.Number
- en: The finite difference expression approximating the requested derivative order
    at `x0`.
  id: totrans-162
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在 `x0` 处近似请求的导数阶数的有限差分表达式。
- en: Examples
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '**x_list: sequence**'
- en: '[PRE16]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'we see that the example above only contain rounding errors. apply_finite_diff
    can also be used on more abstract objects:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到上面的示例仅包含舍入误差。apply_finite_diff 也可用于更抽象的对象：
- en: '[PRE17]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Notes
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: Order = 0 corresponds to interpolation. Only supply so many points you think
    makes sense to around x0 when extracting the derivative (the function need to
    be well behaved within that region). Also beware of Runge’s phenomenon.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 阶数 = 0 对应插值。仅在提取导数时提供足够多的点是有意义的（函数在该区域内表现良好）。也注意 Runge 现象。
- en: See also
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '***symbols** : 对符号进行微分'
- en: '[`sympy.calculus.finite_diff.finite_diff_weights`](#sympy.calculus.finite_diff.finite_diff_weights
    "sympy.calculus.finite_diff.finite_diff_weights")'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.calculus.finite_diff.finite_diff_weights`](#sympy.calculus.finite_diff.finite_diff_weights
    "sympy.calculus.finite_diff.finite_diff_weights")'
- en: References
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'Fortran 90 implementation with Python interface for numerics: [finitediff](https://github.com/bjodah/finitediff)'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 用于数值计算的 Python 接口的 Fortran 90 实现：[finitediff](https://github.com/bjodah/finitediff)
- en: '[PRE18]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Differentiate expr and replace Derivatives with finite differences.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 对表达式进行微分，并用有限差分替换导数。
- en: 'Parameters:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**expr** : expression'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '**expr** : 表达式'
- en: '***symbols** : differentiate with respect to symbols'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 计算在提供的 `x_list` 和 `y_list` 中，在 `x0` 处请求的阶数的有限差分近似的导数。
- en: '**points: sequence, coefficient or undefined function, optional**'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '**points: sequence, coefficient or undefined function, optional**'
- en: see `Derivative.as_finite_difference`
  id: totrans-179
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x0: number or Symbol, optional**'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '**x0: number or Symbol, optional**'
- en: see `Derivative.as_finite_difference`
  id: totrans-181
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参见 `Derivative.as_finite_difference`
- en: '**wrt: Symbol, optional**'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '**wrt: Symbol, optional**'
- en: see `Derivative.as_finite_difference`
  id: totrans-183
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参见 `Derivative.as_finite_difference`
- en: Examples
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 参见 `Derivative.as_finite_difference`
- en: '[PRE19]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '`differentiate_finite` works on any expression, including the expressions with
    embedded derivatives:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '`differentiate_finite` 适用于任何表达式，包括带有嵌入导数的表达式：'
- en: '[PRE20]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'To make finite difference with non-constant discretization step use undefined
    functions:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 若要使用非恒定离散化步长进行有限差分，请使用未定义的函数：
- en: '[PRE21]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Calculates the finite difference weights for an arbitrarily spaced one-dimensional
    grid (`x_list`) for derivatives at `x0` of order 0, 1, …, up to `order` using
    a recursive formula. Order of accuracy is at least `len(x_list) - order`, if `x_list`
    is defined correctly.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 使用递归公式计算 `x_list` 上任意间隔的一维网格的 `x0` 处的阶数 0、1、…、`order` 的有限差分权重。如果 `x_list` 正确定义，则精度顺序至少为
    `len(x_list) - order`。
- en: 'Parameters:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 独立变量在 `x_list` 中相应值处的函数值。
- en: '**order: int**'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '**order: int**'
- en: Up to what derivative order weights should be calculated. 0 corresponds to interpolation.
  id: totrans-194
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 权重应计算到哪个导数阶数。0 对应插值。
- en: '**x_list: sequence**'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '**x_list: sequence**'
- en: Sequence of (unique) values for the independent variable. It is useful (but
    not necessary) to order `x_list` from nearest to furthest from `x0`; see examples
    below.
  id: totrans-196
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 独立变量的（唯一）值序列。有用（但不必要）将`x_list`从离`x0`最近到最远进行排序；请参见下面的示例。
- en: '**x0: Number or Symbol**'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '**x0: Number or Symbol**'
- en: Root or value of the independent variable for which the finite difference weights
    should be generated. Default is `S.One`.
  id: totrans-198
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 应生成有限差分权重的根或独立变量的值。默认为`S.One`。
- en: 'Returns:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: list
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 列表
- en: A list of sublists, each corresponding to coefficients for increasing derivative
    order, and each containing lists of coefficients for increasing subsets of x_list.
  id: totrans-201
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一个子列表的列表，每个子列表对应于增加的导数阶数的系数，并且每个子列表包含增加的`x_list`子集的系数列表。
- en: Examples
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE23]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Each sublist contains the most accurate formula at the end. Note, that in the
    above example `res[1][1]` is the same as `res[1][2]`. Since res[1][2] has an order
    of accuracy of `len(x_list[:3]) - order = 3 - 1 = 2`, the same is true for `res[1][1]`!
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 每个子列表包含最精确的公式在最后。请注意，在上面的示例中，`res[1][1]`与`res[1][2]`相同。由于`res[1][2]`的精度顺序为`len(x_list[:3])
    - order = 3 - 1 = 2`，对于`res[1][1]`也是如此！
- en: '[PRE24]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Let us compare this to a differently defined `x_list`. Pay attention to `foo[i][k]`
    corresponding to the gridpoint defined by `x_list[k]`.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将其与另外定义的`x_list`进行比较。注意`foo[i][k]`对应于由`x_list[k]`定义的网格点。
- en: '[PRE25]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Note that, unless you plan on using approximations based on subsets of `x_list`,
    the order of gridpoints does not matter.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，除非您计划使用基于`x_list`子集的逼近，否则网格点的顺序不重要。
- en: 'The capability to generate weights at arbitrary points can be used e.g. to
    minimize Runge’s phenomenon by using Chebyshev nodes:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在任意点生成权重的能力，例如可以通过使用切比雪夫节点来最小化朗格现象：
- en: '[PRE26]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Notes
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: If weights for a finite difference approximation of 3rd order derivative is
    wanted, weights for 0th, 1st and 2nd order are calculated “for free”, so are formulae
    using subsets of `x_list`. This is something one can take advantage of to save
    computational cost. Be aware that one should define `x_list` from nearest to furthest
    from `x0`. If not, subsets of `x_list` will yield poorer approximations, which
    might not grand an order of accuracy of `len(x_list) - order`.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 如果想要用于有限差分逼近的三阶导数的权重，则可以免费计算零阶、一阶和二阶的权重，以及使用`x_list`子集的公式。这是可以利用以节省计算成本的东西。请注意，应该将`x_list`从离`x0`最近到最远进行定义。如果不是这样，`x_list`的子集将产生较差的逼近，可能无法获得`len(x_list)
    - order`的精度顺序。
- en: See also
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.calculus.finite_diff.apply_finite_diff`](#sympy.calculus.finite_diff.apply_finite_diff
    "sympy.calculus.finite_diff.apply_finite_diff")'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.calculus.finite_diff.apply_finite_diff`](#sympy.calculus.finite_diff.apply_finite_diff
    "sympy.calculus.finite_diff.apply_finite_diff")'
- en: References
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R33](#id4)]'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R33](#id4)]'
- en: Generation of Finite Difference Formulas on Arbitrarily Spaced Grids, Bengt
    Fornberg; Mathematics of computation; 51; 184; (1988); 699-706; doi:10.1090/S0025-5718-1988-0935077-0
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在任意间隔网格上生成有限差分公式，Bengt Fornberg；计算数学；51；184；（1988）；699-706；doi:10.1090/S0025-5718-1988-0935077-0
- en: '[PRE27]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Returns the domain on which the function expression f is continuous.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 返回函数表达式`f`连续的定义域。
- en: This function is limited by the ability to determine the various singularities
    and discontinuities of the given function. The result is either given as a union
    of intervals or constructed using other set operations.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数受限于确定给定函数的各种奇点和不连续性的能力。结果要么作为间隔的并集给出，要么使用其他集合运算构造。
- en: 'Parameters:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**f** : [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '**f** : [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")'
- en: The concerned function.
  id: totrans-223
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 相关的函数。
- en: '**symbol** : [`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol")'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '**symbol** : [`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol")'
- en: The variable for which the intervals are to be determined.
  id: totrans-225
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 要确定间隔的变量。
- en: '**domain** : [`Interval`](../sets.html#sympy.sets.sets.Interval "sympy.sets.sets.Interval")'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '**domain** : [`Interval`](../sets.html#sympy.sets.sets.Interval "sympy.sets.sets.Interval")'
- en: The domain over which the continuity of the symbol has to be checked.
  id: totrans-227
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 必须检查符号连续性的定义域。
- en: 'Returns:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '[`Interval`](../sets.html#sympy.sets.sets.Interval "sympy.sets.sets.Interval")'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Interval`](../sets.html#sympy.sets.sets.Interval "sympy.sets.sets.Interval")'
- en: Union of all intervals where the function is continuous.
  id: totrans-230
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 函数连续的所有间隔的并集。
- en: 'Raises:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 异常：
- en: '**NotImplementedError**'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '**NotImplementedError**'
- en: If the method to determine continuity of such a function has not yet been developed.
  id: totrans-233
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果尚未开发出确定此类函数连续性的方法。
- en: Examples
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE28]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Finds the range of a function in a given domain. This method is limited by the
    ability to determine the singularities and determine limits.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 在给定域中找到函数的范围。该方法受限于确定奇点和确定极限的能力。
- en: 'Parameters:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**f** : [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '**f**：[`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")'
- en: The concerned function.
  id: totrans-240
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 相关函数。
- en: '**symbol** : [`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol")'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '**符号**：[`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol")'
- en: The variable for which the range of function is to be determined.
  id: totrans-242
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 要确定函数范围的变量。
- en: '**domain** : [`Interval`](../sets.html#sympy.sets.sets.Interval "sympy.sets.sets.Interval")'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '**域**：[`Interval`](../sets.html#sympy.sets.sets.Interval "sympy.sets.sets.Interval")'
- en: The domain under which the range of the function has to be found.
  id: totrans-244
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 函数的范围必须找到的域。
- en: 'Returns:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '[`Interval`](../sets.html#sympy.sets.sets.Interval "sympy.sets.sets.Interval")'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Interval`](../sets.html#sympy.sets.sets.Interval "sympy.sets.sets.Interval")'
- en: Union of all ranges for all intervals under domain where function is continuous.
  id: totrans-247
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 所有区间下函数连续的域的所有范围的并集。
- en: 'Raises:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 异常：
- en: '**NotImplementedError**'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '**未实现错误**'
- en: If any of the intervals, in the given domain, for which function is continuous
    are not finite or real, OR if the critical points of the function on the domain
    cannot be found.
  id: totrans-250
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果给定域中任何一个区间中的函数连续不是有限的或实数的，或者无法找到域上函数的临界点。
- en: Examples
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE30]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Determines the convexity of the function passed in the argument.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 确定传入参数中函数的凸性。
- en: 'Parameters:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**f** : [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '**f**：[`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")'
- en: The concerned function.
  id: totrans-257
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 相关函数。
- en: '**syms** : Tuple of [`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol")'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '**符号**：[`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol")的元组'
- en: The variables with respect to which the convexity is to be determined.
  id: totrans-259
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 要确定凸性的变量。
- en: '**domain** : [`Interval`](../sets.html#sympy.sets.sets.Interval "sympy.sets.sets.Interval"),
    optional'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '**域**：[`Interval`](../sets.html#sympy.sets.sets.Interval "sympy.sets.sets.Interval")，可选'
- en: The domain over which the convexity of the function has to be checked. If unspecified,
    S.Reals will be the default domain.
  id: totrans-261
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 要检查函数凸性的域。如果未指定，S.Reals将是默认域。
- en: 'Returns:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: bool
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔
- en: The method returns `True` if the function is convex otherwise it returns `False`.
  id: totrans-264
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果函数是凸的，则方法返回`True`，否则返回`False`。
- en: 'Raises:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 异常：
- en: '**NotImplementedError**'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '**未实现错误**'
- en: The check for the convexity of multivariate functions is not implemented yet.
  id: totrans-267
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 尚未实现多变量函数的凸性检查。
- en: Notes
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To determine concavity of a function pass \(-f\) as the concerned function.
    To determine logarithmic convexity of a function pass \(\log(f)\) as concerned
    function. To determine logarithmic concavity of a function pass \(-\log(f)\) as
    concerned function.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 要确定函数的凹性，请将\(-f\)传递为相关函数。要确定函数的对数凸性，请将\(\log(f)\)作为相关函数。要确定函数的对数凹性，请将\(-\log(f)\)作为相关函数。
- en: Currently, convexity check of multivariate functions is not handled.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，不处理多变量函数的凸性检查。
- en: Examples
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE32]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: References
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 参考资料
- en: '[[R34](#id5)]'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R34](#id5)]'
- en: '[https://en.wikipedia.org/wiki/Convex_function](https://en.wikipedia.org/wiki/Convex_function)'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/凸函数](https://zh.wikipedia.org/wiki/凸函数)'
- en: '[[R35](#id6)]'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R35](#id6)]'
- en: '[http://www.ifp.illinois.edu/~angelia/L3_convfunc.pdf](http://www.ifp.illinois.edu/~angelia/L3_convfunc.pdf)'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.ifp.illinois.edu/~angelia/L3_convfunc.pdf](http://www.ifp.illinois.edu/~angelia/L3_convfunc.pdf)'
- en: '[[R36](#id7)]'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R36](#id7)]'
- en: '[https://en.wikipedia.org/wiki/Logarithmically_convex_function](https://en.wikipedia.org/wiki/Logarithmically_convex_function)'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/对数凸函数](https://zh.wikipedia.org/wiki/对数凸函数)'
- en: '[[R37](#id8)]'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R37](#id8)]'
- en: '[https://en.wikipedia.org/wiki/Logarithmically_concave_function](https://en.wikipedia.org/wiki/Logarithmically_concave_function)'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/对数凹函数](https://zh.wikipedia.org/wiki/对数凹函数)'
- en: '[[R38](#id9)]'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R38](#id9)]'
- en: '[https://en.wikipedia.org/wiki/Concave_function](https://en.wikipedia.org/wiki/Concave_function)'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/凹函数](https://zh.wikipedia.org/wiki/凹函数)'
- en: '[PRE33]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Returns the least common integral multiple of a list of numbers.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 返回数字列表的最小公倍数。
- en: The numbers can be rational or irrational or a mixture of both. \(None\) is
    returned for incommensurable numbers.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 数字可以是有理数或无理数或两者混合。对于不可共同测量的数字，返回\(None\)。
- en: 'Parameters:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**numbers** : list'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '**数字**：列表'
- en: Numbers (rational and/or irrational) for which lcim is to be found.
  id: totrans-289
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 要找到lcim的有理和/或无理数。
- en: 'Returns:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: number
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 数字
- en: lcim if it exists, otherwise `None` for incommensurable numbers.
  id: totrans-292
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果存在，则返回lcim，否则对于不可比较的数字返回`None`。
- en: Examples
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE34]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Returns the maximum value of a function in the given domain.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 返回给定定义域内函数的最大值。
- en: 'Parameters:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**f** : [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: '**f** : [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")'
- en: The concerned function.
  id: totrans-299
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 相关函数。
- en: '**symbol** : [`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol")'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '**symbol** : [`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol")'
- en: The variable for maximum value needs to be determined.
  id: totrans-301
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 需要确定最大值变量。
- en: '**domain** : [`Interval`](../sets.html#sympy.sets.sets.Interval "sympy.sets.sets.Interval")'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '**domain** : [`Interval`](../sets.html#sympy.sets.sets.Interval "sympy.sets.sets.Interval")'
- en: The domain over which the maximum have to be checked. If unspecified, then the
    global maximum is returned.
  id: totrans-303
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 需要确定最大值的定义域。如果未指定，则返回全局最大值。
- en: 'Returns:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: number
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 数字
- en: Maximum value of the function in given domain.
  id: totrans-306
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 给定定义域内函数的最大值。
- en: Examples
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE36]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Returns the minimum value of a function in the given domain.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 返回给定定义域内函数的最小值。
- en: 'Parameters:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**f** : [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '**f** : [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")'
- en: The concerned function.
  id: totrans-316
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 相关函数。
- en: '**symbol** : [`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol")'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '**symbol** : [`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol")'
- en: The variable for minimum value needs to be determined.
  id: totrans-318
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 需要确定最小值变量。
- en: '**domain** : [`Interval`](../sets.html#sympy.sets.sets.Interval "sympy.sets.sets.Interval")'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '**domain** : [`Interval`](../sets.html#sympy.sets.sets.Interval "sympy.sets.sets.Interval")'
- en: The domain over which the minimum have to be checked. If unspecified, then the
    global minimum is returned.
  id: totrans-320
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 需要确定最小值的定义域。如果未指定，则返回全局最小值。
- en: 'Returns:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: number
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 数字
- en: Minimum value of the function in the given domain.
  id: totrans-323
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 给定定义域内函数的最小值。
- en: Examples
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE41]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[PRE43]'
  id: totrans-327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[PRE45]'
  id: totrans-329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Finds the domain of the functions in `finset_intersection` in which the `finite_set`
    is not-empty.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 在`finset_intersection`中找到函数的定义域，其中`finite_set`非空。
- en: 'Parameters:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**finset_intersection** : Intersection of FiniteSet'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '**finset_intersection** : 有限集的交集'
- en: The unevaluated intersection of FiniteSet containing real-valued functions with
    Union of Sets
  id: totrans-333
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 未计算的交集，包含具有联合集的实值函数的有限集
- en: '**syms** : Tuple of symbols'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '**syms** : 符号元组'
- en: Symbol for which domain is to be found
  id: totrans-335
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 寻找要找到其定义域的符号
- en: 'Raises:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: '**NotImplementedError**'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '**NotImplementedError**'
- en: The algorithms to find the non-emptiness of the given FiniteSet are not yet
    implemented.
  id: totrans-338
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 尚未实现用于查找给定有限集非空性的算法。
- en: '**ValueError**'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '**ValueError**'
- en: The input is not valid.
  id: totrans-340
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 输入无效。
- en: '**RuntimeError**'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '**RuntimeError**'
- en: It is a bug, please report it to the github issue tracker ([https://github.com/sympy/sympy/issues](https://github.com/sympy/sympy/issues)).
  id: totrans-342
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这是一个bug，请报告给github问题跟踪器（[https://github.com/sympy/sympy/issues](https://github.com/sympy/sympy/issues)）。
- en: Examples
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE46]'
  id: totrans-344
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[PRE47]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Tests the given function for periodicity in the given symbol.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 测试给定符号中函数的周期性。
- en: 'Parameters:'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**f** : [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: '**f** : [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")'
- en: The concerned function.
  id: totrans-349
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 相关函数。
- en: '**symbol** : [`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol")'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: '**symbol** : [`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol")'
- en: The variable for which the period is to be determined.
  id: totrans-351
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 需要确定周期的变量。
- en: '**check** : bool, optional'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: '**check** : bool, 可选'
- en: The flag to verify whether the value being returned is a period or not.
  id: totrans-353
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 用于验证返回值是否为周期的标志。
- en: 'Returns:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: period
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 周期
- en: The period of the function is returned. `None` is returned when the function
    is aperiodic or has a complex period. The value of \(0\) is returned as the period
    of a constant function.
  id: totrans-356
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回函数的周期。当函数是非周期的或具有复杂周期时，返回`None`。常数函数的周期值为\(0\)。
- en: 'Raises:'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: '**NotImplementedError**'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: '**NotImplementedError**'
- en: The value of the period computed cannot be verified.
  id: totrans-359
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 无法验证计算出的周期值。
- en: Notes
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: Currently, we do not support functions with a complex period. The period of
    functions having complex periodic values such as `exp`, `sinh` is evaluated to
    `None`.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，我们不支持具有复杂周期的函数。评估具有复杂周期值（例如`exp`、`sinh`）的函数周期为`None`。
- en: The value returned might not be the “fundamental” period of the given function
    i.e. it may not be the smallest periodic value of the function.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的值可能不是给定函数的“基本”周期，即它可能不是函数的最小周期值。
- en: The verification of the period through the `check` flag is not reliable due
    to internal simplification of the given expression. Hence, it is set to `False`
    by default.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 由于给定表达式的内部简化，通过`check`标志验证周期不可靠。因此，默认情况下将其设置为`False`。
- en: Examples
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE48]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[PRE49]'
  id: totrans-366
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Returns the stationary points of a function (where derivative of the function
    is 0) in the given domain.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 返回给定域内函数的静止点（函数的导数为0的地方）。
- en: 'Parameters:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**f** : [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '**f**：[`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")'
- en: The concerned function.
  id: totrans-370
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 相关的函数。
- en: '**symbol** : [`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol")'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '**symbol**：[`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol")'
- en: The variable for which the stationary points are to be determined.
  id: totrans-372
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 要确定静止点的变量。
- en: '**domain** : [`Interval`](../sets.html#sympy.sets.sets.Interval "sympy.sets.sets.Interval")'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: '**domain**：[`Interval`](../sets.html#sympy.sets.sets.Interval "sympy.sets.sets.Interval")'
- en: The domain over which the stationary points have to be checked. If unspecified,
    `S.Reals` will be the default domain.
  id: totrans-374
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 要检查静止点的定义域。如果未指定，默认情况下为`S.Reals`。
- en: 'Returns:'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: Set
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 集合
- en: A set of stationary points for the function. If there are no stationary point,
    an [`EmptySet`](../sets.html#sympy.sets.sets.EmptySet "sympy.sets.sets.EmptySet")
    is returned.
  id: totrans-377
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 函数的一组静止点。如果没有静止点，则返回一个[`EmptySet`](../sets.html#sympy.sets.sets.EmptySet "sympy.sets.sets.EmptySet")。
- en: Examples
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE50]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-381
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '[PRE53]'
  id: totrans-382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
