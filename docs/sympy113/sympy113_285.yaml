- en: Reference docs for the Poly Domains
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多项式域的参考文档
- en: Original text：[https://docs.sympy.org/latest/modules/polys/domainsref.html](https://docs.sympy.org/latest/modules/polys/domainsref.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.sympy.org/latest/modules/polys/domainsref.html](https://docs.sympy.org/latest/modules/polys/domainsref.html)
- en: This page lists the reference documentation for the domains in the polys module.
    For a general introduction to the polys module it is recommended to read [Basic
    functionality of the module](basics.html#polys-basics) instead. For an introductory
    explanation of the what the domain system is and how it is used it is recommended
    to read [Introducing the Domains of the poly module](domainsintro.html#polys-domainsintro).
    This page lists the reference docs for the [`Domain`](#sympy.polys.domains.domain.Domain
    "sympy.polys.domains.domain.Domain") class and its subclasses (the specific domains
    such as `ZZ`) as well as the classes that represent the domain elements.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 此页面列出了 polys 模块中域的参考文档。推荐阅读[模块的基本功能](basics.html#polys-basics)以获得 polys 模块的一般介绍。建议阅读[介绍多项式模块中的域](domainsintro.html#polys-domainsintro)以了解域系统的基本功能和使用方法的介绍。此页面列出了[`Domain`](#sympy.polys.domains.domain.Domain
    "sympy.polys.domains.domain.Domain")类及其子类（例如 `ZZ` 等具体域）的参考文档，以及表示域元素的类。
- en: Domains
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 域
- en: 'Here we document the various implemented ground domains (see [Introducing the
    Domains of the poly module](domainsintro.html#polys-domainsintro) for more of
    an explanation). There are three types of [`Domain`](#sympy.polys.domains.domain.Domain
    "sympy.polys.domains.domain.Domain") subclass: abstract domains, concrete domains,
    and “implementation domains”. Abstract domains cannot be (usefully) instantiated
    at all, and just collect together functionality shared by many other domains.
    Concrete domains are those meant to be instantiated and used in the polynomial
    manipulation algorithms. In some cases, there are various possible ways to implement
    the data type the domain provides. For example, depending on what libraries are
    available on the system, the integers are implemented either using the python
    built-in integers, or using gmpy. Note that various aliases are created automatically
    depending on the libraries available. As such e.g. `ZZ` always refers to the most
    efficient implementation of the integer ring available.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们记录了各种已实现的基础域（详见[介绍多项式模块中的域](domainsintro.html#polys-domainsintro)）。有三种[`Domain`](#sympy.polys.domains.domain.Domain
    "sympy.polys.domains.domain.Domain")子类：抽象域、具体域和“实现域”。抽象域不能（有用地）被实例化，并且仅仅汇集了许多其他域共享的功能。具体域意味着可以实例化并用于多项式操作算法中。在某些情况下，实现数据类型的方式有多种可能性。例如，依赖于系统上可用的库，整数可以使用
    Python 内置整数或使用 gmpy 实现。请注意，根据可用的库会自动创建各种别名。因此，例如 `ZZ` 总是指向系统中最有效的整数环的实现。
- en: Abstract Domains
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 抽象域
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Superclass for all domains in the polys domains system.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: polys 域系统中所有域的超类。
- en: See [Introducing the Domains of the poly module](domainsintro.html#polys-domainsintro)
    for an introductory explanation of the domains system.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 参见[介绍多项式模块中的域](domainsintro.html#polys-domainsintro)以了解域系统的介绍。
- en: The [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")
    class is an abstract base class for all of the concrete domain types. There are
    many different [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")
    subclasses each of which has an associated `dtype` which is a class representing
    the elements of the domain. The coefficients of a [`Poly`](reference.html#sympy.polys.polytools.Poly
    "sympy.polys.polytools.Poly") are elements of a domain which must be a subclass
    of [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain").
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")
    类是所有具体域类型的抽象基类。有许多不同的[`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")子类，每个子类都有一个关联的
    `dtype`，它是表示域元素的类。[`Poly`](reference.html#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")
    的系数是域的元素，必须是 [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")
    的子类。'
- en: Examples
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: The most common example domains are the integers [ZZ](#zz) and the rationals
    [QQ](#qq).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 最常见的示例域是整数 [ZZ](#zz) 和有理数 [QQ](#qq)。
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The domains can be used directly in which case the domain object e.g. ([ZZ](#zz)
    or [QQ](#qq)) can be used as a constructor for elements of `dtype`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 可以直接使用域对象（例如 ([ZZ](#zz) 或 [QQ](#qq)）作为 `dtype` 元素的构造函数。
- en: '[PRE2]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The corresponding domain elements can be used with the arithmetic operations
    `+,-,*,**` and depending on the domain some combination of `/,//,%` might be usable.
    For example in [ZZ](#zz) both `//` (floor division) and `%` (modulo division)
    can be used but `/` (true division) cannot. Since [QQ](#qq) is a [`Field`](#sympy.polys.domains.field.Field
    "sympy.polys.domains.field.Field") its elements can be used with `/` but `//`
    and `%` should not be used. Some domains have a [`gcd()`](#sympy.polys.domains.domain.Domain.gcd
    "sympy.polys.domains.domain.Domain.gcd") method.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 相应的域元素可以用于算术运算 `+,-,*,**`，根据域的不同，可能还可以使用 `/,//,%` 的某些组合。例如，在 [ZZ](#zz) 中，`//`（地板除法）和
    `%`（模除法）都可以使用，但 `/`（真除法）不能使用。由于 [QQ](#qq) 是一个 [`Field`](#sympy.polys.domains.field.Field
    "sympy.polys.domains.field.Field")，它的元素可以使用 `/`，但不应使用 `//` 和 `%`。一些域有 [`gcd()`](#sympy.polys.domains.domain.Domain.gcd
    "sympy.polys.domains.domain.Domain.gcd") 方法。
- en: '[PRE3]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'There are also many other domains including:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多其他的域，包括：
- en: '[GF(p)](#gf-p) for finite fields of prime order.'
  id: totrans-18
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[GF(p)](#gf-p) 代表素数阶有限域。'
- en: ''
  id: totrans-19
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-20
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[RR](#rr) for real (floating point) numbers.'
  id: totrans-21
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[RR](#rr) 代表实数（浮点数）。'
- en: ''
  id: totrans-22
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-23
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[CC](#cc) for complex (floating point) numbers.'
  id: totrans-24
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[CC](#cc) 代表复数（浮点数）。'
- en: ''
  id: totrans-25
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-26
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[QQ<a>](#qq-a) for algebraic number fields.'
  id: totrans-27
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[QQ<a>](#qq-a) 代表代数数域。'
- en: ''
  id: totrans-28
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-29
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[K[x]](#k-x) for polynomial rings.'
  id: totrans-30
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[K[x]](#k-x) 代表多项式环。'
- en: ''
  id: totrans-31
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-32
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[K(x)](#id11) for rational function fields.'
  id: totrans-33
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[K(x)](#id11) 代表有理函数域。'
- en: ''
  id: totrans-34
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-35
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[EX](#ex) for arbitrary expressions.'
  id: totrans-36
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[EX](#ex) 代表任意表达式。'
- en: Each domain is represented by a domain object and also an implementation class
    (`dtype`) for the elements of the domain. For example the [K[x]](#k-x) domains
    are represented by a domain object which is an instance of [`PolynomialRing`](#sympy.polys.domains.PolynomialRing
    "sympy.polys.domains.PolynomialRing") and the elements are always instances of
    [`PolyElement`](#sympy.polys.rings.PolyElement "sympy.polys.rings.PolyElement").
    The implementation class represents particular types of mathematical expressions
    in a way that is more efficient than a normal SymPy expression which is of type
    [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr"). The domain
    methods [`from_sympy()`](#sympy.polys.domains.domain.Domain.from_sympy "sympy.polys.domains.domain.Domain.from_sympy")
    and [`to_sympy()`](#sympy.polys.domains.domain.Domain.to_sympy "sympy.polys.domains.domain.Domain.to_sympy")
    are used to convert from [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")
    to a domain element and vice versa.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 每个域都由一个域对象和一个元素域的实现类（`dtype`）表示。例如，[K[x]](#k-x) 域由一个域对象表示，该对象是 [`PolynomialRing`](#sympy.polys.domains.PolynomialRing
    "sympy.polys.domains.PolynomialRing") 的一个实例，其元素始终是 [`PolyElement`](#sympy.polys.rings.PolyElement
    "sympy.polys.rings.PolyElement") 的实例。这个实现类以比 SymPy 表达式（类型为 [`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr")）更高效的方式表示特定类型的数学表达式。域方法 [`from_sympy()`](#sympy.polys.domains.domain.Domain.from_sympy
    "sympy.polys.domains.domain.Domain.from_sympy") 和 [`to_sympy()`](#sympy.polys.domains.domain.Domain.to_sympy
    "sympy.polys.domains.domain.Domain.to_sympy") 用于在 [`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr") 和域元素之间进行转换。
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The [`convert_from()`](#sympy.polys.domains.domain.Domain.convert_from "sympy.polys.domains.domain.Domain.convert_from")
    method is used to convert domain elements from one domain to another.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 方法 [`convert_from()`](#sympy.polys.domains.domain.Domain.convert_from "sympy.polys.domains.domain.Domain.convert_from")
    用于将域元素从一个域转换到另一个域。
- en: '[PRE5]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Elements from different domains should not be mixed in arithmetic or other
    operations: they should be converted to a common domain first. The domain method
    [`unify()`](#sympy.polys.domains.domain.Domain.unify "sympy.polys.domains.domain.Domain.unify")
    is used to find a domain that can represent all the elements of two given domains.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 不同域的元素不应混合在算术或其他操作中：它们应首先转换为一个公共域。域方法 [`unify()`](#sympy.polys.domains.domain.Domain.unify
    "sympy.polys.domains.domain.Domain.unify") 用于找到一个可以表示两个给定域所有元素的域。
- en: '[PRE6]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: If a domain is a [`Ring`](#sympy.polys.domains.ring.Ring "sympy.polys.domains.ring.Ring")
    then is might have an associated [`Field`](#sympy.polys.domains.field.Field "sympy.polys.domains.field.Field")
    and vice versa. The [`get_field()`](#sympy.polys.domains.domain.Domain.get_field
    "sympy.polys.domains.domain.Domain.get_field") and [`get_ring()`](#sympy.polys.domains.domain.Domain.get_ring
    "sympy.polys.domains.domain.Domain.get_ring") methods will find or create the
    associated domain.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个域是 [`Ring`](#sympy.polys.domains.ring.Ring "sympy.polys.domains.ring.Ring")，那么可能有一个关联的
    [`Field`](#sympy.polys.domains.field.Field "sympy.polys.domains.field.Field")，反之亦然。方法
    [`get_field()`](#sympy.polys.domains.domain.Domain.get_field "sympy.polys.domains.domain.Domain.get_field")
    和 [`get_ring()`](#sympy.polys.domains.domain.Domain.get_ring "sympy.polys.domains.domain.Domain.get_ring")
    将找到或创建相关联的域。
- en: '[PRE7]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: See also
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`DomainElement`](#sympy.polys.domains.domainelement.DomainElement "sympy.polys.domains.domainelement.DomainElement")'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DomainElement`](#sympy.polys.domains.domainelement.DomainElement "sympy.polys.domains.domainelement.DomainElement")'
- en: abstract base class for domain elements
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 一些表达式的最小域的抽象基类
- en: '[`construct_domain`](reference.html#sympy.polys.constructor.construct_domain
    "sympy.polys.constructor.construct_domain")'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[`construct_domain`](reference.html#sympy.polys.constructor.construct_domain
    "sympy.polys.constructor.construct_domain")'
- en: construct a minimal domain for some expressions
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 构造一些表达式的最小域。
- en: '[PRE8]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Absolute value of `a`, implies `__abs__`.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`a` 的绝对值，意味着 `__abs__`。'
- en: '[PRE9]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Sum of `a` and `b`, implies `__add__`.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`a` 和 `b` 的和，意味着 `__add__`。'
- en: '[PRE10]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Convenience method to construct an algebraic extension on a root of a polynomial,
    chosen by root index.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 便捷方法，根据根索引在多项式的根上构造代数扩展。
- en: 'Parameters:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**poly** : [`Poly`](reference.html#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**poly** : [`Poly`](reference.html#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")'
- en: The polynomial whose root generates the extension.
  id: totrans-58
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 生成扩展的多项式。
- en: '**alias** : str, optional (default=None)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**alias** : 字符串，可选（默认为None）'
- en: Symbol name for the generator of the extension. E.g. “alpha” or “theta”.
  id: totrans-60
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 扩展的生成器的符号名称。例如“alpha”或“theta”。
- en: '**root_index** : int, optional (default=-1)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**root_index** : 整数，可选（默认为-1）'
- en: Specifies which root of the polynomial is desired. The ordering is as defined
    by the [`ComplexRootOf`](reference.html#sympy.polys.rootoftools.ComplexRootOf
    "sympy.polys.rootoftools.ComplexRootOf") class. The default of `-1` selects the
    most natural choice in the common cases of quadratic and cyclotomic fields (the
    square root on the positive real or imaginary axis, resp. \(\mathrm{e}^{2\pi i/n}\)).
  id: totrans-62
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 指定所需的多项式根。排序方式由[`ComplexRootOf`](reference.html#sympy.polys.rootoftools.ComplexRootOf
    "sympy.polys.rootoftools.ComplexRootOf")类定义。在二次和旋转多边形场合的常见情况下，默认值为`-1`选择最自然的选择（正实轴或虚轴上的平方根，即
    \(\mathrm{e}^{2\pi i/n}\)）。
- en: Examples
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE11]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Returns an algebraic field, i.e. \(K(\alpha, \ldots)\).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个代数域，即 \(K(\alpha, \ldots)\)。
- en: '[PRE13]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Check if `a` and `b` are almost equal.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 检查 `a` 和 `b` 是否几乎相等。
- en: '[PRE14]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Return the characteristic of this domain.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此域的特征。
- en: '[PRE15]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Returns GCD and cofactors of `a` and `b`.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `a` 和 `b` 的最大公因数及其余子。
- en: '[PRE16]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Convert `element` to `self.dtype`.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `element` 转换为 `self.dtype`。
- en: '[PRE17]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Convert `element` to `self.dtype` given the base domain.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 根据基域给定的域元素将 `element` 转换为 `self.dtype`。
- en: '[PRE18]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Convenience method to construct a cyclotomic field.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 便捷方法，构造旋转多边形场。
- en: 'Parameters:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : int'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**n** : 整数'
- en: Construct the nth cyclotomic field.
  id: totrans-81
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 构造第`n`个旋转多边形场。
- en: '**ss** : boolean, optional (default=False)'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**ss** : 布尔值，可选（默认为False）'
- en: If True, append *n* as a subscript on the alias string.
  id: totrans-83
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果为真，在别名字符串上附加 *n* 作为下标。
- en: '**alias** : str, optional (default=”zeta”)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**alias** : 字符串，可选（默认为“zeta”）'
- en: Symbol name for the generator.
  id: totrans-85
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 生成器的符号名称。
- en: '**gen** : [`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol"),
    optional (default=None)'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**gen** : [`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol")，可选（默认为None）'
- en: Desired variable for the cyclotomic polynomial that defines the field. If `None`,
    a dummy variable will be used.
  id: totrans-87
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 欲定义该领域的旋转多边形的变量。如果为 `None`，将使用虚拟变量。
- en: '**root_index** : int, optional (default=-1)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**root_index** : 整数，可选（默认为-1）'
- en: Specifies which root of the polynomial is desired. The ordering is as defined
    by the [`ComplexRootOf`](reference.html#sympy.polys.rootoftools.ComplexRootOf
    "sympy.polys.rootoftools.ComplexRootOf") class. The default of `-1` selects the
    root \(\mathrm{e}^{2\pi i/n}\).
  id: totrans-89
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 指定所需的多项式根。排序方式由[`ComplexRootOf`](reference.html#sympy.polys.rootoftools.ComplexRootOf
    "sympy.polys.rootoftools.ComplexRootOf")类定义。默认值为`-1`选择根 \(\mathrm{e}^{2\pi i/n}\)。
- en: Examples
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE19]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Returns denominator of `a`.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `a` 的分母。
- en: '[PRE21]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Quotient and remainder for *a* and *b*. Analogue of `divmod(a, b)`
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '*a* 和 *b* 的商和余数。类似于 `divmod(a, b)`'
- en: 'Parameters:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a: domain element**'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**a：域元素**'
- en: The dividend
  id: totrans-98
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 被除数
- en: '**b: domain element**'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**b：域元素**'
- en: The divisor
  id: totrans-100
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 除数
- en: 'Returns:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '(q, r): tuple of domain elements'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '(q, r): 域元素的元组'
- en: The quotient and remainder
  id: totrans-103
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 商和余数
- en: 'Raises:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 异常：
- en: '**ZeroDivisionError: when the divisor is zero.**'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '**当除数为零时，抛出ZeroDivisionError。**'
- en: Explanation
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: This is essentially the same as `divmod(a, b)` except that is more consistent
    when working over some [`Field`](#sympy.polys.domains.field.Field "sympy.polys.domains.field.Field")
    domains such as [QQ](#qq). When working over an arbitrary [`Domain`](#sympy.polys.domains.domain.Domain
    "sympy.polys.domains.domain.Domain") the [`div()`](#sympy.polys.domains.domain.Domain.div
    "sympy.polys.domains.domain.Domain.div") method should be used instead of `divmod`.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在一些 [`Field`](#sympy.polys.domains.field.Field "sympy.polys.domains.field.Field")
    域上工作时，这与 `divmod(a, b)` 本质上相同，例如 [QQ](#qq)。在任意 [`Domain`](#sympy.polys.domains.domain.Domain
    "sympy.polys.domains.domain.Domain") 上工作时，应使用 [`div()`](#sympy.polys.domains.domain.Domain.div
    "sympy.polys.domains.domain.Domain.div") 方法而不是 `divmod`。
- en: The key invariant is that if `q, r = K.div(a, b)` then `a == b*q + r`.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 关键不变性是，如果 `q, r = K.div(a, b)`，那么 `a == b*q + r`。
- en: The result of `K.div(a, b)` is the same as the tuple `(K.quo(a, b), K.rem(a,
    b))` except that if both quotient and remainder are needed then it is more efficient
    to use [`div()`](#sympy.polys.domains.domain.Domain.div "sympy.polys.domains.domain.Domain.div").
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '`K.div(a, b)` 的结果与元组 `(K.quo(a, b), K.rem(a, b))` 相同，只是如果需要商和余数，则使用 [`div()`](#sympy.polys.domains.domain.Domain.div
    "sympy.polys.domains.domain.Domain.div") 更有效率。'
- en: Examples
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: We can use `K.div` instead of `divmod` for floor division and remainder.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 `K.div` 替代 `divmod` 进行地板除法和余数运算。
- en: '[PRE22]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: If `K` is a [`Field`](#sympy.polys.domains.field.Field "sympy.polys.domains.field.Field")
    then the division is always exact with a remainder of [`zero`](#sympy.polys.domains.domain.Domain.zero
    "sympy.polys.domains.domain.Domain.zero").
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `K` 是一个 [`Field`](#sympy.polys.domains.field.Field "sympy.polys.domains.field.Field")，则除法总是精确的，并且余数为
    [`zero`](#sympy.polys.domains.domain.Domain.zero "sympy.polys.domains.domain.Domain.zero")。
- en: '[PRE23]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Notes
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: If `gmpy` is installed then the `gmpy.mpq` type will be used as the [`dtype`](#sympy.polys.domains.domain.Domain.dtype
    "sympy.polys.domains.domain.Domain.dtype") for [QQ](#qq). The `gmpy.mpq` type
    defines `divmod` in a way that is undesirable so [`div()`](#sympy.polys.domains.domain.Domain.div
    "sympy.polys.domains.domain.Domain.div") should be used instead of `divmod`.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 如果安装了 `gmpy`，则 [`dtype`](#sympy.polys.domains.domain.Domain.dtype "sympy.polys.domains.domain.Domain.dtype")
    将使用 `gmpy.mpq` 类型作为 [QQ](#qq) 的类型。`gmpy.mpq` 类型定义了 `divmod`，但其行为不佳，因此应使用 [`div()`](#sympy.polys.domains.domain.Domain.div
    "sympy.polys.domains.domain.Domain.div") 而不是 `divmod`。
- en: '[PRE24]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Using `//` or `%` with [QQ](#qq) will lead to incorrect results so [`div()`](#sympy.polys.domains.domain.Domain.div
    "sympy.polys.domains.domain.Domain.div") should be used instead.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [QQ](#qq) 中使用 `//` 或 `%` 会导致不正确的结果，因此应使用 [`div()`](#sympy.polys.domains.domain.Domain.div
    "sympy.polys.domains.domain.Domain.div")。
- en: See also
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`quo`](#sympy.polys.domains.domain.Domain.quo "sympy.polys.domains.domain.Domain.quo")'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '[`quo`](#sympy.polys.domains.domain.Domain.quo "sympy.polys.domains.domain.Domain.quo")'
- en: Analogue of `a // b`
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟 `a // b`
- en: '[`rem`](#sympy.polys.domains.domain.Domain.rem "sympy.polys.domains.domain.Domain.rem")'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '[`rem`](#sympy.polys.domains.domain.Domain.rem "sympy.polys.domains.domain.Domain.rem")'
- en: Analogue of `a % b`
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟 `a % b`
- en: '[`exquo`](#sympy.polys.domains.domain.Domain.exquo "sympy.polys.domains.domain.Domain.exquo")'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '[`exquo`](#sympy.polys.domains.domain.Domain.exquo "sympy.polys.domains.domain.Domain.exquo")'
- en: Analogue of `a / b`
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟 `a / b`
- en: '[PRE25]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Drop generators from this domain.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 从该域中删除生成器。
- en: '[PRE26]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The type (class) of the elements of this [`Domain`](#sympy.polys.domains.domain.Domain
    "sympy.polys.domains.domain.Domain"):'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 此 [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")
    中元素的类型（类）：
- en: '[PRE27]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Every domain has an associated **dtype** (“datatype”) which is the class of
    the associated domain elements.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 每个域都有一个关联的 **dtype**（“数据类型”），即关联域元素的类。
- en: See also
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`of_type`](#sympy.polys.domains.domain.Domain.of_type "sympy.polys.domains.domain.Domain.of_type")'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '[`of_type`](#sympy.polys.domains.domain.Domain.of_type "sympy.polys.domains.domain.Domain.of_type")'
- en: '[PRE28]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Returns numerical approximation of `a`.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `a` 的数值近似。
- en: '[PRE29]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Exact quotient of *a* and *b*. Analogue of `a / b`.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '*a* 和 *b* 的精确商。模拟 `a / b`。'
- en: 'Parameters:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a: domain element**'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '**a: 域元素**'
- en: The dividend
  id: totrans-140
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 被除数
- en: '**b: domain element**'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '**b: 域元素**'
- en: The divisor
  id: totrans-142
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 除数
- en: 'Returns:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: 'q: domain element'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 'q: 域元素'
- en: The exact quotient
  id: totrans-145
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 精确商
- en: 'Raises:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: '**ExactQuotientFailed: if exact division is not possible.**'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '**ExactQuotientFailed: 如果无法进行精确除法。**'
- en: '**ZeroDivisionError: when the divisor is zero.**'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '**ZeroDivisionError: 当除数为零时。**'
- en: Explanation
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This is essentially the same as `a / b` except that an error will be raised
    if the division is inexact (if there is any remainder) and the result will always
    be a domain element. When working in a [`Domain`](#sympy.polys.domains.domain.Domain
    "sympy.polys.domains.domain.Domain") that is not a [`Field`](#sympy.polys.domains.field.Field
    "sympy.polys.domains.field.Field") (e.g. [ZZ](#zz) or [K[x]](#k-x)) `exquo` should
    be used instead of `/`.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 这本质上与 `a / b` 相同，但如果除法不精确（即存在任何余数），则会引发错误，并且结果始终是域元素。在工作于不是 [`Field`](#sympy.polys.domains.field.Field
    "sympy.polys.domains.field.Field") 的 [`Domain`](#sympy.polys.domains.domain.Domain
    "sympy.polys.domains.domain.Domain") 中时（例如 [ZZ](#zz) 或 [K[x]](#k-x)），应使用 `exquo`
    而不是 `/`。
- en: The key invariant is that if `q = K.exquo(a, b)` (and `exquo` does not raise
    an exception) then `a == b*q`.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 关键不变量是如果 `q = K.exquo(a, b)`（且 `exquo` 没有引发异常），则 `a == b*q`。
- en: Examples
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: We can use `K.exquo` instead of `/` for exact division.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 `K.exquo` 而不是 `/` 进行精确除法。
- en: '[PRE30]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Over a [`Field`](#sympy.polys.domains.field.Field "sympy.polys.domains.field.Field")
    such as [QQ](#qq), division (with nonzero divisor) is always exact so in that
    case `/` can be used instead of [`exquo()`](#sympy.polys.domains.domain.Domain.exquo
    "sympy.polys.domains.domain.Domain.exquo").
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在像 [QQ](#qq) 这样的 [`Field`](#sympy.polys.domains.field.Field "sympy.polys.domains.field.Field")
    上，除法（非零除数）总是精确的，因此在这种情况下可以使用 `/` 而不是 [`exquo()`](#sympy.polys.domains.domain.Domain.exquo
    "sympy.polys.domains.domain.Domain.exquo")。
- en: '[PRE31]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Notes
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Since the default [`dtype`](#sympy.polys.domains.domain.Domain.dtype "sympy.polys.domains.domain.Domain.dtype")
    for [ZZ](#zz) is `int` (or `mpz`) division as `a / b` should not be used as it
    would give a `float` which is not a domain element.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 由于默认的 [`dtype`](#sympy.polys.domains.domain.Domain.dtype "sympy.polys.domains.domain.Domain.dtype")
    对于 [ZZ](#zz) 是 `int`（或 `mpz`），所以应避免使用 `a / b`，因为它会给出一个不是域元素的 `float`。
- en: '[PRE32]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'On the other hand with \(SYMPY_GROUND_TYPES=flint\) elements of [ZZ](#zz) are
    `flint.fmpz` and division would raise an exception:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，使用 \(SYMPY_GROUND_TYPES=flint\) 在 [ZZ](#zz) 中的元素是 `flint.fmpz`，并且除法将引发异常：
- en: '[PRE33]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Using `/` with [ZZ](#zz) will lead to incorrect results so [`exquo()`](#sympy.polys.domains.domain.Domain.exquo
    "sympy.polys.domains.domain.Domain.exquo") should be used instead.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [ZZ](#zz) 使用 `/` 将导致不正确的结果，因此应该使用 [`exquo()`](#sympy.polys.domains.domain.Domain.exquo
    "sympy.polys.domains.domain.Domain.exquo") 而不是 `/`。
- en: See also
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`quo`](#sympy.polys.domains.domain.Domain.quo "sympy.polys.domains.domain.Domain.quo")'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '[`quo`](#sympy.polys.domains.domain.Domain.quo "sympy.polys.domains.domain.Domain.quo")'
- en: Analogue of `a // b`
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '`a // b` 的类似物'
- en: '[`rem`](#sympy.polys.domains.domain.Domain.rem "sympy.polys.domains.domain.Domain.rem")'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '[`rem`](#sympy.polys.domains.domain.Domain.rem "sympy.polys.domains.domain.Domain.rem")'
- en: Analogue of `a % b`
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '`a % b` 的类似物'
- en: '[`div`](#sympy.polys.domains.domain.Domain.div "sympy.polys.domains.domain.Domain.div")'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '[`div`](#sympy.polys.domains.domain.Domain.div "sympy.polys.domains.domain.Domain.div")'
- en: Analogue of `divmod(a, b)`
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '`divmod(a, b)` 的类似物'
- en: '[PRE34]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Principal square root of a within the domain if `a` is square.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `a` 是平方的，域内 `a` 的主要平方根。
- en: Explanation
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The implementation of this method should return an element `b` in the domain
    such that `b * b == a`, or `None` if there is no such `b`. For inexact domains
    like [RR](#rr) and [CC](#cc), a tiny difference in this equality can be tolerated.
    The choice of a “principal” square root should follow a consistent rule whenever
    possible.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法的实现应返回域内的元素 `b`，使得 `b * b == a`，如果没有这样的 `b` 则返回 `None`。对于不精确的域如 [RR](#rr)
    和 [CC](#cc)，在这个相等性上可以容忍微小差异。在可能的情况下，应遵循一致的规则选择“主要”平方根。
- en: See also
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sqrt`](#sympy.polys.domains.domain.Domain.sqrt "sympy.polys.domains.domain.Domain.sqrt"),
    [`is_square`](#sympy.polys.domains.domain.Domain.is_square "sympy.polys.domains.domain.Domain.is_square")'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sqrt`](#sympy.polys.domains.domain.Domain.sqrt "sympy.polys.domains.domain.Domain.sqrt")，[`is_square`](#sympy.polys.domains.domain.Domain.is_square
    "sympy.polys.domains.domain.Domain.is_square")'
- en: '[PRE35]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Returns a fraction field, i.e. \(K(X)\).
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个分式域，即 \(K(X)\)。
- en: '[PRE36]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Convert an algebraic number to `dtype`.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 将代数数转换为 `dtype`。
- en: '[PRE37]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Convert a complex element to `dtype`.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 将复数元素转换为 `dtype`。
- en: '[PRE38]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Convert a `EX` object to `dtype`.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `EX` 对象转换为 `dtype`。
- en: '[PRE39]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Convert a `EX` object to `dtype`.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `EX` 对象转换为 `dtype`。
- en: '[PRE40]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Convert `ModularInteger(int)` to `dtype`.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `ModularInteger(int)` 转换为 `dtype`。
- en: '[PRE41]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Convert `ModularInteger(mpz)` to `dtype`.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `ModularInteger(mpz)` 转换为 `dtype`。
- en: '[PRE42]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Convert `ModularInteger(int)` to `dtype`.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `ModularInteger(int)` 转换为 `dtype`。
- en: '[PRE43]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Convert a rational function to `dtype`.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 将有理函数转换为 `dtype`。
- en: '[PRE44]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Convert a polynomial to `dtype`.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 将多项式转换为 `dtype`。
- en: '[PRE45]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Convert an `ExtensionElement` to `dtype`.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `ExtensionElement` 转换为 `dtype`。
- en: '[PRE46]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Convert a polynomial to `dtype`.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 将多项式转换为 `dtype`。
- en: '[PRE47]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Convert a GMPY `mpq` object to `dtype`.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 将 GMPY 的 `mpq` 对象转换为 `dtype`。
- en: '[PRE48]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Convert a Python `Fraction` object to `dtype`.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python 的 `Fraction` 对象转换为 `dtype`。
- en: '[PRE49]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Convert a real element object to `dtype`.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 将实数元素对象转换为`dtype`。
- en: '[PRE50]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Convert a GMPY `mpz` object to `dtype`.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 将 GMPY 的 `mpz` 对象转换为 `dtype`。
- en: '[PRE51]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Convert a Python `int` object to `dtype`.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python 的 `int` 对象转换为 `dtype`。
- en: '[PRE52]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Convert a SymPy expression to an element of this domain.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 将 SymPy 表达式转换为该域的元素。
- en: 'Parameters:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**expr: Expr**'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '**expr: Expr**'
- en: A normal SymPy expression of type [`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr").
  id: totrans-214
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一个普通的 SymPy 表达式，类型为[`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")。
- en: 'Returns:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: 'a: domain element'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 'a: 域元素'
- en: An element of this [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain").
  id: totrans-217
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 该[`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")的一个元素。
- en: Explanation
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: See [`to_sympy()`](#sympy.polys.domains.domain.Domain.to_sympy "sympy.polys.domains.domain.Domain.to_sympy")
    for explanation and examples.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 参见[`to_sympy()`](#sympy.polys.domains.domain.Domain.to_sympy "sympy.polys.domains.domain.Domain.to_sympy")以获取说明和示例。
- en: See also
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`to_sympy`](#sympy.polys.domains.domain.Domain.to_sympy "sympy.polys.domains.domain.Domain.to_sympy"),
    [`convert_from`](#sympy.polys.domains.domain.Domain.convert_from "sympy.polys.domains.domain.Domain.convert_from")'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '[`to_sympy`](#sympy.polys.domains.domain.Domain.to_sympy "sympy.polys.domains.domain.Domain.to_sympy"),
    [`convert_from`](#sympy.polys.domains.domain.Domain.convert_from "sympy.polys.domains.domain.Domain.convert_from")'
- en: '[PRE53]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Returns GCD of `a` and `b`.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`a`和`b`的最大公约数。
- en: '[PRE54]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Extended GCD of `a` and `b`.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '`a`和`b`的扩展欧几里得算法。'
- en: '[PRE55]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Returns an exact domain associated with `self`.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与`self`相关联的精确域。
- en: '[PRE56]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Returns a field associated with `self`.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与`self`相关联的域。
- en: '[PRE57]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Returns a ring associated with `self`.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与`self`相关联的环。
- en: '[PRE58]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Half extended GCD of `a` and `b`.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '`a`和`b`的半扩展欧几里得算法。'
- en: '[PRE59]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Boolean flag indicating if the domain has an associated [`Field`](#sympy.polys.domains.field.Field
    "sympy.polys.domains.field.Field").
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔标志，指示域是否具有关联的[`Field`](#sympy.polys.domains.field.Field "sympy.polys.domains.field.Field")。
- en: '[PRE60]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: See also
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`is_Field`](#sympy.polys.domains.domain.Domain.is_Field "sympy.polys.domains.domain.Domain.is_Field"),
    [`get_field`](#sympy.polys.domains.domain.Domain.get_field "sympy.polys.domains.domain.Domain.get_field")'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '[`is_Field`](#sympy.polys.domains.domain.Domain.is_Field "sympy.polys.domains.domain.Domain.is_Field"),
    [`get_field`](#sympy.polys.domains.domain.Domain.get_field "sympy.polys.domains.domain.Domain.get_field")'
- en: '[PRE61]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: Boolean flag indicating if the domain has an associated [`Ring`](#sympy.polys.domains.ring.Ring
    "sympy.polys.domains.ring.Ring").
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔标志，指示域是否具有关联的[`Ring`](#sympy.polys.domains.ring.Ring "sympy.polys.domains.ring.Ring")。
- en: '[PRE62]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: See also
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`is_Field`](#sympy.polys.domains.domain.Domain.is_Field "sympy.polys.domains.domain.Domain.is_Field"),
    [`get_ring`](#sympy.polys.domains.domain.Domain.get_ring "sympy.polys.domains.domain.Domain.get_ring")'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '[`is_Field`](#sympy.polys.domains.domain.Domain.is_Field "sympy.polys.domains.domain.Domain.is_Field"),
    [`get_ring`](#sympy.polys.domains.domain.Domain.get_ring "sympy.polys.domains.domain.Domain.get_ring")'
- en: '[PRE63]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Inject generators into this domain.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 将生成器注入到此域。
- en: '[PRE64]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: Returns inversion of `a mod b`, implies something.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`a mod b`的倒数，暗示某事。
- en: '[PRE65]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: Boolean flag indicating if the domain is a [`Field`](#sympy.polys.domains.field.Field
    "sympy.polys.domains.field.Field").
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔标志，指示域是否为[`Field`](#sympy.polys.domains.field.Field "sympy.polys.domains.field.Field")。
- en: '[PRE66]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: See also
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`is_PID`](#sympy.polys.domains.domain.Domain.is_PID "sympy.polys.domains.domain.Domain.is_PID"),
    [`is_Ring`](#sympy.polys.domains.domain.Domain.is_Ring "sympy.polys.domains.domain.Domain.is_Ring"),
    [`get_field`](#sympy.polys.domains.domain.Domain.get_field "sympy.polys.domains.domain.Domain.get_field"),
    [`has_assoc_Field`](#sympy.polys.domains.domain.Domain.has_assoc_Field "sympy.polys.domains.domain.Domain.has_assoc_Field")'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '[`is_PID`](#sympy.polys.domains.domain.Domain.is_PID "sympy.polys.domains.domain.Domain.is_PID"),
    [`is_Ring`](#sympy.polys.domains.domain.Domain.is_Ring "sympy.polys.domains.domain.Domain.is_Ring"),
    [`get_field`](#sympy.polys.domains.domain.Domain.get_field "sympy.polys.domains.domain.Domain.get_field"),
    [`has_assoc_Field`](#sympy.polys.domains.domain.Domain.has_assoc_Field "sympy.polys.domains.domain.Domain.has_assoc_Field")'
- en: '[PRE67]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Boolean flag indicating if the domain is a [principal ideal domain](https://en.wikipedia.org/wiki/Principal_ideal_domain).
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔标志，指示域是否为[主理想域](https://en.wikipedia.org/wiki/Principal_ideal_domain)。
- en: '[PRE68]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: See also
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`is_Field`](#sympy.polys.domains.domain.Domain.is_Field "sympy.polys.domains.domain.Domain.is_Field"),
    [`get_field`](#sympy.polys.domains.domain.Domain.get_field "sympy.polys.domains.domain.Domain.get_field")'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '[`is_Field`](#sympy.polys.domains.domain.Domain.is_Field "sympy.polys.domains.domain.Domain.is_Field"),
    [`get_field`](#sympy.polys.domains.domain.Domain.get_field "sympy.polys.domains.domain.Domain.get_field")'
- en: '[PRE69]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Boolean flag indicating if the domain is a [`Ring`](#sympy.polys.domains.ring.Ring
    "sympy.polys.domains.ring.Ring").
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔标志，指示域是否为[`Ring`](#sympy.polys.domains.ring.Ring "sympy.polys.domains.ring.Ring")。
- en: '[PRE70]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: Basically every [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")
    represents a ring so this flag is not that useful.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上每个[`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")都代表一个环，所以这个标志并不那么有用。
- en: See also
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`is_PID`](#sympy.polys.domains.domain.Domain.is_PID "sympy.polys.domains.domain.Domain.is_PID"),
    [`is_Field`](#sympy.polys.domains.domain.Domain.is_Field "sympy.polys.domains.domain.Domain.is_Field"),
    [`get_ring`](#sympy.polys.domains.domain.Domain.get_ring "sympy.polys.domains.domain.Domain.get_ring"),
    [`has_assoc_Ring`](#sympy.polys.domains.domain.Domain.has_assoc_Ring "sympy.polys.domains.domain.Domain.has_assoc_Ring")'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '[`is_PID`](#sympy.polys.domains.domain.Domain.is_PID "sympy.polys.domains.domain.Domain.is_PID"),
    [`is_Field`](#sympy.polys.domains.domain.Domain.is_Field "sympy.polys.domains.domain.Domain.is_Field"),
    [`get_ring`](#sympy.polys.domains.domain.Domain.get_ring "sympy.polys.domains.domain.Domain.get_ring"),
    [`has_assoc_Ring`](#sympy.polys.domains.domain.Domain.has_assoc_Ring "sympy.polys.domains.domain.Domain.has_assoc_Ring")'
- en: '[PRE71]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Returns True if `a` is negative.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `a` 是负数则返回 True。
- en: '[PRE72]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: Returns True if `a` is non-negative.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `a` 是非负数则返回 True。
- en: '[PRE73]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: Returns True if `a` is non-positive.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `a` 是非正数则返回 True。
- en: '[PRE74]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: Returns True if `a` is one.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `a` 是一则返回 True。
- en: '[PRE75]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: Returns True if `a` is positive.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `a` 是正数则返回 True。
- en: '[PRE76]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: Returns whether `a` is a square in the domain.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `a` 在域中是否是平方数。
- en: Explanation
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Returns `True` if there is an element `b` in the domain such that `b * b ==
    a`, otherwise returns `False`. For inexact domains like [RR](#rr) and [CC](#cc),
    a tiny difference in this equality can be tolerated.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在域中存在元素 `b` 使得 `b * b == a`，则返回 `True`，否则返回 `False`。对于像 [RR](#rr) 和 [CC](#cc)
    这样的不精确域，可以容忍此等式的微小差异。
- en: See also
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`exsqrt`](#sympy.polys.domains.domain.Domain.exsqrt "sympy.polys.domains.domain.Domain.exsqrt")'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '[`exsqrt`](#sympy.polys.domains.domain.Domain.exsqrt "sympy.polys.domains.domain.Domain.exsqrt")'
- en: '[PRE77]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: Returns True if `a` is zero.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `a` 是零则返回 True。
- en: '[PRE78]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: Returns LCM of `a` and `b`.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `a` 和 `b` 的最小公倍数。
- en: '[PRE79]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: Returns b-base logarithm of `a`.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `a` 的以 `b` 为底的对数。
- en: '[PRE80]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Rersively apply `self` to all elements of `seq`.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 递归地将 `self` 应用于 `seq` 的所有元素。
- en: '[PRE81]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: Product of `a` and `b`, implies `__mul__`.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '`a` 和 `b` 的乘积，意味着 `__mul__`。'
- en: '[PRE82]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: Returns numerical approximation of `a`.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `a` 的数值近似。
- en: '[PRE83]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: Returns `a` negated, implies `__neg__`.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `a` 的相反数，意味着 `__neg__`。
- en: '[PRE84]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: Returns numerator of `a`.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `a` 的分子。
- en: '[PRE85]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: Check if `a` is of type `dtype`.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 检查 `a` 是否是 `dtype` 类型。
- en: '[PRE86]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: Returns a fraction field, i.e. \(K(X)\).
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个分式域，即 \(K(X)\)。
- en: '[PRE87]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: Returns a polynomial ring, i.e. \(K[X]\).
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个多项式环，即 \(K[X]\)。
- en: '[PRE88]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: 'The one element of the [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain"):'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")
    的唯一元素：'
- en: '[PRE89]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: See also
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`of_type`](#sympy.polys.domains.domain.Domain.of_type "sympy.polys.domains.domain.Domain.of_type"),
    [`zero`](#sympy.polys.domains.domain.Domain.zero "sympy.polys.domains.domain.Domain.zero")'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '[`of_type`](#sympy.polys.domains.domain.Domain.of_type "sympy.polys.domains.domain.Domain.of_type"),
    [`zero`](#sympy.polys.domains.domain.Domain.zero "sympy.polys.domains.domain.Domain.zero")'
- en: '[PRE90]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: Returns a polynomial ring, i.e. \(K[X]\).
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个多项式环，即 \(K[X]\)。
- en: '[PRE91]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: Returns `a` positive, implies `__pos__`.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `a` 的正数，意味着 `__pos__`。
- en: '[PRE92]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: Raise `a` to power `b`, implies `__pow__`.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `a` 的 `b` 次幂返回，意味着 `__pow__`。
- en: '[PRE93]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: Quotient of *a* and *b*. Analogue of `a // b`.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '*a* 和 *b* 的商。`a // b` 的类似物。'
- en: '`K.quo(a, b)` is equivalent to `K.div(a, b)[0]`. See [`div()`](#sympy.polys.domains.domain.Domain.div
    "sympy.polys.domains.domain.Domain.div") for more explanation.'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '`K.quo(a, b)` 等同于 `K.div(a, b)[0]`。详见 [`div()`](#sympy.polys.domains.domain.Domain.div
    "sympy.polys.domains.domain.Domain.div") 以获取更多解释。'
- en: See also
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`rem`](#sympy.polys.domains.domain.Domain.rem "sympy.polys.domains.domain.Domain.rem")'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '[`rem`](#sympy.polys.domains.domain.Domain.rem "sympy.polys.domains.domain.Domain.rem")'
- en: Analogue of `a % b`
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: '`a % b` 的类似物'
- en: '[`div`](#sympy.polys.domains.domain.Domain.div "sympy.polys.domains.domain.Domain.div")'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '[`div`](#sympy.polys.domains.domain.Domain.div "sympy.polys.domains.domain.Domain.div")'
- en: Analogue of `divmod(a, b)`
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '`divmod(a, b)` 的类似物'
- en: '[`exquo`](#sympy.polys.domains.domain.Domain.exquo "sympy.polys.domains.domain.Domain.exquo")'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '[`exquo`](#sympy.polys.domains.domain.Domain.exquo "sympy.polys.domains.domain.Domain.exquo")'
- en: Analogue of `a / b`
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '`a / b` 的类似物'
- en: '[PRE94]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: Modulo division of *a* and *b*. Analogue of `a % b`.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '*a* 和 *b* 的模除。`a % b` 的类似物。'
- en: '`K.rem(a, b)` is equivalent to `K.div(a, b)[1]`. See [`div()`](#sympy.polys.domains.domain.Domain.div
    "sympy.polys.domains.domain.Domain.div") for more explanation.'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '`K.rem(a, b)` 等同于 `K.div(a, b)[1]`。详见 [`div()`](#sympy.polys.domains.domain.Domain.div
    "sympy.polys.domains.domain.Domain.div") 以获取更多解释。'
- en: See also
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`quo`](#sympy.polys.domains.domain.Domain.quo "sympy.polys.domains.domain.Domain.quo")'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '[`quo`](#sympy.polys.domains.domain.Domain.quo "sympy.polys.domains.domain.Domain.quo")'
- en: Analogue of `a // b`
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '`a // b` 的类似物'
- en: '[`div`](#sympy.polys.domains.domain.Domain.div "sympy.polys.domains.domain.Domain.div")'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '[`div`](#sympy.polys.domains.domain.Domain.div "sympy.polys.domains.domain.Domain.div")'
- en: Analogue of `divmod(a, b)`
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '`divmod(a, b)` 的类似物'
- en: '[`exquo`](#sympy.polys.domains.domain.Domain.exquo "sympy.polys.domains.domain.Domain.exquo")'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '[`exquo`](#sympy.polys.domains.domain.Domain.exquo "sympy.polys.domains.domain.Domain.exquo")'
- en: Analogue of `a / b`
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '`a / b` 的类似物'
- en: '[PRE95]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: Returns `a**(-1)` if possible.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 如果可能则返回 `a**(-1)`。
- en: '[PRE96]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: Returns a (possibly inexact) square root of `a`.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`a`的（可能是不精确的）平方根。
- en: Explanation
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: There is no universal definition of “inexact square root” for all domains. It
    is not recommended to implement this method for domains other then [ZZ](#zz).
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 不同域中“不精确平方根”的普遍定义不存在。不建议为除[ZZ](#zz)外的其他域实现此方法。
- en: See also
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`exsqrt`](#sympy.polys.domains.domain.Domain.exsqrt "sympy.polys.domains.domain.Domain.exsqrt")'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: '[`exsqrt`](#sympy.polys.domains.domain.Domain.exsqrt "sympy.polys.domains.domain.Domain.exsqrt")'
- en: '[PRE97]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: Difference of `a` and `b`, implies `__sub__`.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '`a` 和 `b` 的差异，意味着 `__sub__`。'
- en: '[PRE98]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: Convert domain element *a* to a SymPy expression (Expr).
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 将域元素 *a* 转换为 SymPy 表达式（Expr）。
- en: 'Parameters:'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a: domain element**'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: '**a：域元素**'
- en: An element of this [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain").
  id: totrans-347
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这个[`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")的一个元素。
- en: 'Returns:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: 'expr: Expr'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 'expr: Expr'
- en: A normal SymPy expression of type [`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr").
  id: totrans-350
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一个类型为[`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")的普通SymPy表达式。
- en: Explanation
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Convert a [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")
    element *a* to [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr").
    Most public SymPy functions work with objects of type [`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr"). The elements of a [`Domain`](#sympy.polys.domains.domain.Domain
    "sympy.polys.domains.domain.Domain") have a different internal representation.
    It is not possible to mix domain elements with [`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr") so each domain has [`to_sympy()`](#sympy.polys.domains.domain.Domain.to_sympy
    "sympy.polys.domains.domain.Domain.to_sympy") and [`from_sympy()`](#sympy.polys.domains.domain.Domain.from_sympy
    "sympy.polys.domains.domain.Domain.from_sympy") methods to convert its domain
    elements to and from [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr").
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 将[`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")元素*a*转换为[`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr")。大多数公共SymPy函数与[`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr")对象一起工作。[`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")的元素具有不同的内部表示。不可能将域元素与[`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr")混合使用，因此每个域都有[`to_sympy()`](#sympy.polys.domains.domain.Domain.to_sympy
    "sympy.polys.domains.domain.Domain.to_sympy")和[`from_sympy()`](#sympy.polys.domains.domain.Domain.from_sympy
    "sympy.polys.domains.domain.Domain.from_sympy")方法来将其域元素转换为和从[`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr")。
- en: Examples
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: Construct an element of the [QQ](#qq) domain and then convert it to [`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr").
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 构造[QQ](#qq)领域的元素，然后将其转换为[`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")。
- en: '[PRE99]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: Although the printed forms look similar these objects are not of the same type.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管打印形式看起来相似，但这些对象并非同一类型。
- en: '[PRE100]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: Construct an element of [K[x]](#k-x) and convert to [`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr").
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 构造[K[x]](#k-x)领域的元素并转换为[`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")。
- en: '[PRE101]'
  id: totrans-359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: The [`from_sympy()`](#sympy.polys.domains.domain.Domain.from_sympy "sympy.polys.domains.domain.Domain.from_sympy")
    method is used for the opposite conversion from a normal SymPy expression to a
    domain element.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: '[`from_sympy()`](#sympy.polys.domains.domain.Domain.from_sympy "sympy.polys.domains.domain.Domain.from_sympy")方法用于从普通的SymPy表达式到域元素的相反转换。'
- en: '[PRE102]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: The [`from_sympy()`](#sympy.polys.domains.domain.Domain.from_sympy "sympy.polys.domains.domain.Domain.from_sympy")
    method makes it easier to construct domain elements interactively.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: '[`from_sympy()`](#sympy.polys.domains.domain.Domain.from_sympy "sympy.polys.domains.domain.Domain.from_sympy")方法使得交互式构造域元素更加容易。'
- en: '[PRE103]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: See also
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`from_sympy`](#sympy.polys.domains.domain.Domain.from_sympy "sympy.polys.domains.domain.Domain.from_sympy"),
    [`convert_from`](#sympy.polys.domains.domain.Domain.convert_from "sympy.polys.domains.domain.Domain.convert_from")'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: '[`from_sympy`](#sympy.polys.domains.domain.Domain.from_sympy "sympy.polys.domains.domain.Domain.from_sympy")，[`convert_from`](#sympy.polys.domains.domain.Domain.convert_from
    "sympy.polys.domains.domain.Domain.convert_from")'
- en: '[PRE104]'
  id: totrans-366
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: Alias for [`dtype`](#sympy.polys.domains.domain.Domain.dtype "sympy.polys.domains.domain.Domain.dtype")
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dtype`](#sympy.polys.domains.domain.Domain.dtype "sympy.polys.domains.domain.Domain.dtype")的别名'
- en: '[PRE105]'
  id: totrans-368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: Construct a minimal domain that contains elements of `K0` and `K1`.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 构造包含`K0`和`K1`元素的最小域。
- en: 'Known domains (from smallest to largest):'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 已知领域（从最小到最大）：
- en: '`GF(p)`'
  id: totrans-371
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GF(p)`'
- en: '`ZZ`'
  id: totrans-372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ZZ`'
- en: '`QQ`'
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QQ`'
- en: '`RR(prec, tol)`'
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RR(prec, tol)`'
- en: '`CC(prec, tol)`'
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CC(prec, tol)`'
- en: '`ALG(a, b, c)`'
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ALG(a, b, c)`'
- en: '`K[x, y, z]`'
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`K[x, y, z]`'
- en: '`K(x, y, z)`'
  id: totrans-378
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`K(x, y, z)`'
- en: '`EX`'
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`EX`'
- en: '[PRE106]'
  id: totrans-380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: Unify two domains where at least one is composite.
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 统一至少一个是复合的两个域。
- en: '[PRE107]'
  id: totrans-382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: 'The zero element of the [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain"):'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 'The zero element of the [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain"):'
- en: '[PRE108]'
  id: totrans-384
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: See also
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: See also
- en: '[`of_type`](#sympy.polys.domains.domain.Domain.of_type "sympy.polys.domains.domain.Domain.of_type"),
    [`one`](#sympy.polys.domains.domain.Domain.one "sympy.polys.domains.domain.Domain.one")'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: '[`of_type`](#sympy.polys.domains.domain.Domain.of_type "sympy.polys.domains.domain.Domain.of_type"),
    [`one`](#sympy.polys.domains.domain.Domain.one "sympy.polys.domains.domain.Domain.one")'
- en: '[PRE109]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: Represents an element of a domain.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: Represents an element of a domain.
- en: Mix in this trait into a class whose instances should be recognized as elements
    of a domain. Method `parent()` gives that domain.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: Mix in this trait into a class whose instances should be recognized as elements
    of a domain. Method `parent()` gives that domain.
- en: '[PRE110]'
  id: totrans-390
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: Get the domain associated with `self`
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: Get the domain associated with `self`
- en: Examples
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE111]'
  id: totrans-393
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: Notes
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: Notes
- en: This is used by [`convert()`](#sympy.polys.domains.domain.Domain.convert "sympy.polys.domains.domain.Domain.convert")
    to identify the domain associated with a domain element.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: This is used by [`convert()`](#sympy.polys.domains.domain.Domain.convert "sympy.polys.domains.domain.Domain.convert")
    to identify the domain associated with a domain element.
- en: '[PRE112]'
  id: totrans-396
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: Represents a field domain.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: Represents a field domain.
- en: '[PRE113]'
  id: totrans-398
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: Division of `a` and `b`, implies `__truediv__`.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: Division of `a` and `b`, implies `__truediv__`.
- en: '[PRE114]'
  id: totrans-400
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: Exact quotient of `a` and `b`, implies `__truediv__`.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: Exact quotient of `a` and `b`, implies `__truediv__`.
- en: '[PRE115]'
  id: totrans-402
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: Returns GCD of `a` and `b`.
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: Returns GCD of `a` and `b`.
- en: This definition of GCD over fields allows to clear denominators in \(primitive()\).
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: This definition of GCD over fields allows to clear denominators in \(primitive()\).
- en: Examples
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE116]'
  id: totrans-406
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: '[PRE117]'
  id: totrans-407
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: '[PRE118]'
  id: totrans-408
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: Returns a field associated with `self`.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: Returns a field associated with `self`.
- en: '[PRE119]'
  id: totrans-410
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: Returns a ring associated with `self`.
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: Returns a ring associated with `self`.
- en: '[PRE120]'
  id: totrans-412
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: Return true if `a` is a invertible
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: Return true if `a` is a invertible
- en: '[PRE121]'
  id: totrans-414
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: Returns LCM of `a` and `b`.
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: Returns LCM of `a` and `b`.
- en: '[PRE122]'
  id: totrans-416
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: '[PRE123]'
  id: totrans-417
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: '[PRE124]'
  id: totrans-418
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: Quotient of `a` and `b`, implies `__truediv__`.
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: Quotient of `a` and `b`, implies `__truediv__`.
- en: '[PRE125]'
  id: totrans-420
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: Remainder of `a` and `b`, implies nothing.
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: Remainder of `a` and `b`, implies nothing.
- en: '[PRE126]'
  id: totrans-422
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: Returns `a**(-1)` if possible.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: Returns `a**(-1)` if possible.
- en: '[PRE127]'
  id: totrans-424
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: Represents a ring domain.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: Represents a ring domain.
- en: '[PRE128]'
  id: totrans-426
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: Returns denominator of \(a\).
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: Returns denominator of \(a\).
- en: '[PRE129]'
  id: totrans-428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: Division of `a` and `b`, implies `__divmod__`.
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: Division of `a` and `b`, implies `__divmod__`.
- en: '[PRE130]'
  id: totrans-430
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: Exact quotient of `a` and `b`, implies `__floordiv__`.
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: Exact quotient of `a` and `b`, implies `__floordiv__`.
- en: '[PRE131]'
  id: totrans-432
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: Generate a free module of rank `rank` over self.
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: Generate a free module of rank `rank` over self.
- en: '[PRE132]'
  id: totrans-434
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: '[PRE133]'
  id: totrans-435
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: Returns a ring associated with `self`.
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: Returns a ring associated with `self`.
- en: '[PRE134]'
  id: totrans-437
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: Generate an ideal of `self`.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: Generate an ideal of `self`.
- en: '[PRE135]'
  id: totrans-439
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: '[PRE136]'
  id: totrans-440
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: Returns inversion of `a mod b`.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: Returns inversion of `a mod b`.
- en: '[PRE137]'
  id: totrans-442
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: Returns numerator of `a`.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: Returns numerator of `a`.
- en: '[PRE138]'
  id: totrans-444
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: Quotient of `a` and `b`, implies `__floordiv__`.
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: Quotient of `a` and `b`, implies `__floordiv__`.
- en: '[PRE139]'
  id: totrans-446
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: Form a quotient ring of `self`.
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: Form a quotient ring of `self`.
- en: Here `e` can be an ideal or an iterable.
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: Here `e` can be an ideal or an iterable.
- en: '[PRE140]'
  id: totrans-449
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: 'The division operator has been overloaded for this:'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 'The division operator has been overloaded for this:'
- en: '[PRE141]'
  id: totrans-451
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: '[PRE142]'
  id: totrans-452
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: Remainder of `a` and `b`, implies `__mod__`.
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: Remainder of `a` and `b`, implies `__mod__`.
- en: '[PRE143]'
  id: totrans-454
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: Returns `a**(-1)` if possible.
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: Returns `a**(-1)` if possible.
- en: '[PRE144]'
  id: totrans-456
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: Base class for simple domains, e.g. ZZ, QQ.
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: Base class for simple domains, e.g. ZZ, QQ.
- en: '[PRE145]'
  id: totrans-458
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: Inject generators into this domain.
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: Inject generators into this domain.
- en: '[PRE146]'
  id: totrans-460
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: Base class for composite domains, e.g. ZZ[x], ZZ(X).
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: Base class for composite domains, e.g. ZZ[x], ZZ(X).
- en: '[PRE147]'
  id: totrans-462
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: Drop generators from this domain.
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: Drop generators from this domain.
- en: '[PRE148]'
  id: totrans-464
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: Returns an exact version of this domain.
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: Returns an exact version of this domain.
- en: '[PRE149]'
  id: totrans-466
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: Inject generators into this domain.
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: Inject generators into this domain.
- en: '[PRE150]'
  id: totrans-468
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: Returns `True` if this domain is exact.
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: Returns `True` if this domain is exact.
- en: '[PRE151]'
  id: totrans-470
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: Set the ground domain of this domain.
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: Set the ground domain of this domain.
- en: '## GF(p)'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: '## GF(p)'
- en: '[PRE152]'
  id: totrans-473
  prefs: []
  type: TYPE_PRE
  zh: '[PRE152]'
- en: Finite field of prime order [GF(p)](#gf-p)
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: Finite field of prime order [GF(p)](#gf-p)
- en: A [GF(p)](#gf-p) domain represents a [finite field](https://en.wikipedia.org/wiki/Finite_field)
    \(\mathbb{F}_p\) of prime order as [`Domain`](#sympy.polys.domains.domain.Domain
    "sympy.polys.domains.domain.Domain") in the domain system (see [Introducing the
    Domains of the poly module](domainsintro.html#polys-domainsintro)).
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: A [GF(p)](#gf-p) domain represents a [finite field](https://en.wikipedia.org/wiki/Finite_field)
    \(\mathbb{F}_p\) of prime order as [`Domain`](#sympy.polys.domains.domain.Domain
    "sympy.polys.domains.domain.Domain") in the domain system (see [Introducing the
    Domains of the poly module](domainsintro.html#polys-domainsintro)).
- en: A [`Poly`](reference.html#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")
    created from an expression with integer coefficients will have the domain [ZZ](#zz).
    However, if the `modulus=p` option is given then the domain will be a finite field
    instead.
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: A [`Poly`](reference.html#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")
    created from an expression with integer coefficients will have the domain [ZZ](#zz).
    However, if the `modulus=p` option is given then the domain will be a finite field
    instead.
- en: '[PRE153]'
  id: totrans-477
  prefs: []
  type: TYPE_PRE
  zh: '[PRE153]'
- en: It is possible to factorise a polynomial over [GF(p)](#gf-p) using the modulus
    argument to [`factor()`](reference.html#sympy.polys.polytools.factor "sympy.polys.polytools.factor")
    or by specifying the domain explicitly. The domain can also be given as a string.
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用模参数来在 [GF(p)](#gf-p) 上因式分解多项式，也可以通过明确指定域来实现。域也可以以字符串形式给出。
- en: '[PRE154]'
  id: totrans-479
  prefs: []
  type: TYPE_PRE
  zh: '[PRE154]'
- en: It is also possible to use [GF(p)](#gf-p) with the [`cancel()`](reference.html#sympy.polys.polytools.cancel
    "sympy.polys.polytools.cancel") and [`gcd()`](reference.html#sympy.polys.polytools.gcd
    "sympy.polys.polytools.gcd") functions.
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以使用 [GF(p)](#gf-p) 与 [`cancel()`](reference.html#sympy.polys.polytools.cancel
    "sympy.polys.polytools.cancel") 和 [`gcd()`](reference.html#sympy.polys.polytools.gcd
    "sympy.polys.polytools.gcd") 函数。
- en: '[PRE155]'
  id: totrans-481
  prefs: []
  type: TYPE_PRE
  zh: '[PRE155]'
- en: When using the domain directly [GF(p)](#gf-p) can be used as a constructor to
    create instances which then support the operations `+,-,*,**,/`
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 直接使用域 [GF(p)](#gf-p) 可以用作构造函数来创建支持操作 `+,-,*,**,/` 的实例。
- en: '[PRE156]'
  id: totrans-483
  prefs: []
  type: TYPE_PRE
  zh: '[PRE156]'
- en: Notes
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'It is also possible to create a [GF(p)](#gf-p) domain of **non-prime** order
    but the resulting ring is **not** a field: it is just the ring of the integers
    modulo `n`.'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以创建一个 [GF(p)](#gf-p) 域，其阶数为**非素数**，但生成的环**不是**域：它只是模 `n` 的整数环。
- en: '[PRE157]'
  id: totrans-486
  prefs: []
  type: TYPE_PRE
  zh: '[PRE157]'
- en: It would be good to have a proper implementation of prime power fields (`GF(p**n)`)
    but these are not yet implemented in SymPY.
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: 很好地实现素数幂域 (`GF(p**n)`) 将很有帮助，但这些在 SymPY 中尚未实现。
- en: '[PRE158]'
  id: totrans-488
  prefs: []
  type: TYPE_PRE
  zh: '[PRE158]'
- en: Return the characteristic of this domain.
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此域的特征。
- en: '[PRE159]'
  id: totrans-490
  prefs: []
  type: TYPE_PRE
  zh: '[PRE159]'
- en: Square root modulo p of `a` if it is a quadratic residue.
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `a` 是二次剩余，则返回模 p 的平方根。
- en: Explanation
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Always returns the square root that is no larger than `p // 2`.
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 总是返回不大于 `p // 2` 的平方根。
- en: '[PRE160]'
  id: totrans-494
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: Convert `ModularInteger(int)` to `dtype`.
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `ModularInteger(int)` 转换为 `dtype`。
- en: '[PRE161]'
  id: totrans-496
  prefs: []
  type: TYPE_PRE
  zh: '[PRE161]'
- en: Convert `ModularInteger(mpz)` to `dtype`.
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `ModularInteger(mpz)` 转换为 `dtype`。
- en: '[PRE162]'
  id: totrans-498
  prefs: []
  type: TYPE_PRE
  zh: '[PRE162]'
- en: Convert `ModularInteger(int)` to `dtype`.
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `ModularInteger(int)` 转换为 `dtype`。
- en: '[PRE163]'
  id: totrans-500
  prefs: []
  type: TYPE_PRE
  zh: '[PRE163]'
- en: Convert Python’s `Fraction` to `dtype`.
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python 的 `Fraction` 转换为 `dtype`。
- en: '[PRE164]'
  id: totrans-502
  prefs: []
  type: TYPE_PRE
  zh: '[PRE164]'
- en: Convert GMPY’s `mpq` to `dtype`.
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 将 GMPY 的 `mpq` 转换为 `dtype`。
- en: '[PRE165]'
  id: totrans-504
  prefs: []
  type: TYPE_PRE
  zh: '[PRE165]'
- en: Convert Python’s `Fraction` to `dtype`.
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python 的 `Fraction` 转换为 `dtype`。
- en: '[PRE166]'
  id: totrans-506
  prefs: []
  type: TYPE_PRE
  zh: '[PRE166]'
- en: Convert mpmath’s `mpf` to `dtype`.
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 将 mpmath 的 `mpf` 转换为 `dtype`。
- en: '[PRE167]'
  id: totrans-508
  prefs: []
  type: TYPE_PRE
  zh: '[PRE167]'
- en: Convert Python’s `int` to `dtype`.
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python 的 `int` 转换为 `dtype`。
- en: '[PRE168]'
  id: totrans-510
  prefs: []
  type: TYPE_PRE
  zh: '[PRE168]'
- en: Convert GMPY’s `mpz` to `dtype`.
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 将 GMPY 的 `mpz` 转换为 `dtype`。
- en: '[PRE169]'
  id: totrans-512
  prefs: []
  type: TYPE_PRE
  zh: '[PRE169]'
- en: Convert Python’s `int` to `dtype`.
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python 的 `int` 转换为 `dtype`。
- en: '[PRE170]'
  id: totrans-514
  prefs: []
  type: TYPE_PRE
  zh: '[PRE170]'
- en: Convert SymPy’s Integer to SymPy’s `Integer`.
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 将 SymPy 的整数转换为 SymPy 的 `Integer`。
- en: '[PRE171]'
  id: totrans-516
  prefs: []
  type: TYPE_PRE
  zh: '[PRE171]'
- en: Returns a field associated with `self`.
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与 `self` 关联的字段。
- en: '[PRE172]'
  id: totrans-518
  prefs: []
  type: TYPE_PRE
  zh: '[PRE172]'
- en: Returns True if `a` is negative.
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `a` 是负数，则返回 True。
- en: '[PRE173]'
  id: totrans-520
  prefs: []
  type: TYPE_PRE
  zh: '[PRE173]'
- en: Returns True if `a` is non-negative.
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `a` 是非负数，则返回 True。
- en: '[PRE174]'
  id: totrans-522
  prefs: []
  type: TYPE_PRE
  zh: '[PRE174]'
- en: Returns True if `a` is non-positive.
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `a` 是非正数，则返回 True。
- en: '[PRE175]'
  id: totrans-524
  prefs: []
  type: TYPE_PRE
  zh: '[PRE175]'
- en: Returns True if `a` is positive.
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `a` 是正数，则返回 True。
- en: '[PRE176]'
  id: totrans-526
  prefs: []
  type: TYPE_PRE
  zh: '[PRE176]'
- en: Returns True if `a` is a quadratic residue modulo p.
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `a` 对模 p 是二次剩余，则返回 True。
- en: '[PRE177]'
  id: totrans-528
  prefs: []
  type: TYPE_PRE
  zh: '[PRE177]'
- en: Convert `val` to a Python `int` object.
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `val` 转换为 Python 的 `int` 对象。
- en: '[PRE178]'
  id: totrans-530
  prefs: []
  type: TYPE_PRE
  zh: '[PRE178]'
- en: Convert `a` to a SymPy object.
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `a` 转换为 SymPy 对象。
- en: '[PRE179]'
  id: totrans-532
  prefs: []
  type: TYPE_PRE
  zh: '[PRE179]'
- en: Finite field based on Python’s integers.
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: 基于 Python 整数的有限域。
- en: '[PRE180]'
  id: totrans-534
  prefs: []
  type: TYPE_PRE
  zh: '[PRE180]'
- en: 'Finite field based on GMPY integers.  ## ZZ'
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: '基于 GMPY 整数的有限域。  ## ZZ'
- en: The [ZZ](#zz) domain represents the [integers](https://en.wikipedia.org/wiki/Integer)
    \(\mathbb{Z}\) as a [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")
    in the domain system (see [Introducing the Domains of the poly module](domainsintro.html#polys-domainsintro)).
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: '[ZZ](#zz) 域表示整数 [integers](https://en.wikipedia.org/wiki/Integer) \(\mathbb{Z}\)
    作为 [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")
    在域系统中（参见 [Introducing the Domains of the poly module](domainsintro.html#polys-domainsintro)）。'
- en: 'By default a [`Poly`](reference.html#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")
    created from an expression with integer coefficients will have the domain [ZZ](#zz):'
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，从具有整数系数的表达式创建的 [`Poly`](reference.html#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")
    将具有域 [ZZ](#zz)。
- en: '[PRE181]'
  id: totrans-538
  prefs: []
  type: TYPE_PRE
  zh: '[PRE181]'
- en: 'The corresponding [field of fractions](https://en.wikipedia.org/wiki/Field_of_fractions)
    is the domain of the rationals [QQ](#qq). Conversely [ZZ](#zz) is the [ring of
    integers](https://en.wikipedia.org/wiki/Ring_of_integers) of [QQ](#qq):'
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: 相应的 [分式域](https://en.wikipedia.org/wiki/Field_of_fractions) 是有理数 [QQ](#qq) 的域。反过来，[ZZ](#zz)
    是 [QQ](#qq) 的 [整数环](https://en.wikipedia.org/wiki/Ring_of_integers)：
- en: '[PRE182]'
  id: totrans-540
  prefs: []
  type: TYPE_PRE
  zh: '[PRE182]'
- en: 'When using the domain directly [ZZ](#zz) can be used as a constructor to create
    instances which then support the operations `+,-,*,**,//,%` (true division `/`
    should not be used with [ZZ](#zz) - see the [`exquo()`](#sympy.polys.domains.domain.Domain.exquo
    "sympy.polys.domains.domain.Domain.exquo") domain method):'
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: 直接使用域 [ZZ](#zz) 可以用作构造函数来创建支持操作 `+,-,*,**,//,%` 的实例（真除法 `/` 不应与 [ZZ](#zz) 一起使用
    - 参见 [`exquo()`](#sympy.polys.domains.domain.Domain.exquo "sympy.polys.domains.domain.Domain.exquo")
    域方法）：
- en: '[PRE183]'
  id: totrans-542
  prefs: []
  type: TYPE_PRE
  zh: '[PRE183]'
- en: 'The [`gcd()`](#sympy.polys.domains.domain.Domain.gcd "sympy.polys.domains.domain.Domain.gcd")
    method can be used to compute the [gcd](https://en.wikipedia.org/wiki/Greatest_common_divisor)
    of any two elements:'
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: '[`gcd()`](#sympy.polys.domains.domain.Domain.gcd "sympy.polys.domains.domain.Domain.gcd")
    方法可用于计算任意两个元素的 [gcd](https://en.wikipedia.org/wiki/Greatest_common_divisor)：'
- en: '[PRE184]'
  id: totrans-544
  prefs: []
  type: TYPE_PRE
  zh: '[PRE184]'
- en: There are two implementations of [ZZ](#zz) in SymPy. If `gmpy` or `gmpy2` is
    installed then [ZZ](#zz) will be implemented by [`GMPYIntegerRing`](#sympy.polys.domains.GMPYIntegerRing
    "sympy.polys.domains.GMPYIntegerRing") and the elements will be instances of the
    `gmpy.mpz` type. Otherwise if `gmpy` and `gmpy2` are not installed then [ZZ](#zz)
    will be implemented by [`PythonIntegerRing`](#sympy.polys.domains.PythonIntegerRing
    "sympy.polys.domains.PythonIntegerRing") which uses Python’s standard builtin
    `int` type. With larger integers `gmpy` can be more efficient so it is preferred
    when available.
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: SymPy 中有两种 [ZZ](#zz) 的实现。如果安装了 `gmpy` 或 `gmpy2`，则 [ZZ](#zz) 将由 [`GMPYIntegerRing`](#sympy.polys.domains.GMPYIntegerRing
    "sympy.polys.domains.GMPYIntegerRing") 实现，并且元素将是 `gmpy.mpz` 类型的实例。否则，如果未安装 `gmpy`
    和 `gmpy2`，则 [ZZ](#zz) 将由 [`PythonIntegerRing`](#sympy.polys.domains.PythonIntegerRing
    "sympy.polys.domains.PythonIntegerRing") 实现，使用 Python 的标准内置 `int` 类型。对于更大的整数，使用
    `gmpy` 可能更有效率，因此在可用时推荐使用。
- en: '[PRE185]'
  id: totrans-546
  prefs: []
  type: TYPE_PRE
  zh: '[PRE185]'
- en: The domain `ZZ` representing the integers \(\mathbb{Z}\).
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: 表示整数的域 `ZZ` 是 \(\mathbb{Z}\)。
- en: The [`IntegerRing`](#sympy.polys.domains.IntegerRing "sympy.polys.domains.IntegerRing")
    class represents the ring of integers as a [`Domain`](#sympy.polys.domains.domain.Domain
    "sympy.polys.domains.domain.Domain") in the domain system. [`IntegerRing`](#sympy.polys.domains.IntegerRing
    "sympy.polys.domains.IntegerRing") is a super class of [`PythonIntegerRing`](#sympy.polys.domains.PythonIntegerRing
    "sympy.polys.domains.PythonIntegerRing") and [`GMPYIntegerRing`](#sympy.polys.domains.GMPYIntegerRing
    "sympy.polys.domains.GMPYIntegerRing") one of which will be the implementation
    for [ZZ](#zz) depending on whether or not `gmpy` or `gmpy2` is installed.
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: '[`IntegerRing`](#sympy.polys.domains.IntegerRing "sympy.polys.domains.IntegerRing")
    类作为 [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")
    在域系统中表示整数环。[`IntegerRing`](#sympy.polys.domains.IntegerRing "sympy.polys.domains.IntegerRing")
    是 [`PythonIntegerRing`](#sympy.polys.domains.PythonIntegerRing "sympy.polys.domains.PythonIntegerRing")
    和 [`GMPYIntegerRing`](#sympy.polys.domains.GMPYIntegerRing "sympy.polys.domains.GMPYIntegerRing")
    的超类，根据是否安装 `gmpy` 或 `gmpy2` 中的一个来实现 [ZZ](#zz)。'
- en: See also
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")'
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")'
- en: '[PRE186]'
  id: totrans-551
  prefs: []
  type: TYPE_PRE
  zh: '[PRE186]'
- en: Returns an algebraic field, i.e. \(\mathbb{Q}(\alpha, \ldots)\).
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个代数域，即 \(\mathbb{Q}(\alpha, \ldots)\)。
- en: 'Parameters:'
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '***extension** : One or more [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr").'
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: '**extension**：一个或多个 [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")。'
- en: Generators of the extension. These should be expressions that are algebraic
    over \(\mathbb{Q}\).
  id: totrans-555
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 扩展的生成元。这些应该是代数上 \(\mathbb{Q}\) 的表达式。
- en: '**alias** : str, [`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol"),
    None, optional (default=None)'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: '**alias**：str，[`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol")，可选（默认为
    None）'
- en: If provided, this will be used as the alias symbol for the primitive element
    of the returned [`AlgebraicField`](#sympy.polys.domains.AlgebraicField "sympy.polys.domains.AlgebraicField").
  id: totrans-557
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果提供，这将被用作返回的 [`AlgebraicField`](#sympy.polys.domains.AlgebraicField "sympy.polys.domains.AlgebraicField")
    的原始元的别名符号。
- en: 'Returns:'
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '[`AlgebraicField`](#sympy.polys.domains.AlgebraicField "sympy.polys.domains.AlgebraicField")'
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: '[`AlgebraicField`](#sympy.polys.domains.AlgebraicField "sympy.polys.domains.AlgebraicField")'
- en: A [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")
    representing the algebraic field extension.
  id: totrans-560
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 表示代数域扩展的 [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")。
- en: Examples
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE187]'
  id: totrans-562
  prefs: []
  type: TYPE_PRE
  zh: '[PRE187]'
- en: '[PRE188]'
  id: totrans-563
  prefs: []
  type: TYPE_PRE
  zh: '[PRE188]'
- en: Non-negative square root of `a` if `a` is a square.
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `a` 是一个平方数，则返回 `a` 的非负平方根。
- en: See also
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`is_square`](#sympy.polys.domains.IntegerRing.is_square "sympy.polys.domains.IntegerRing.is_square")'
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: '[`is_square`](#sympy.polys.domains.IntegerRing.is_square "sympy.polys.domains.IntegerRing.is_square")'
- en: '[PRE189]'
  id: totrans-567
  prefs: []
  type: TYPE_PRE
  zh: '[PRE189]'
- en: Compute factorial of `a`.
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `a` 的阶乘。
- en: '[PRE190]'
  id: totrans-569
  prefs: []
  type: TYPE_PRE
  zh: '[PRE190]'
- en: Convert a [`ANP`](#sympy.polys.polyclasses.ANP "sympy.polys.polyclasses.ANP")
    object to [ZZ](#zz).
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: 将 [`ANP`](#sympy.polys.polyclasses.ANP "sympy.polys.polyclasses.ANP") 对象转换为
    [ZZ](#zz)。
- en: See [`convert()`](#sympy.polys.domains.domain.Domain.convert "sympy.polys.domains.domain.Domain.convert").
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: 参见 [`convert()`](#sympy.polys.domains.domain.Domain.convert "sympy.polys.domains.domain.Domain.convert")。
- en: '[PRE191]'
  id: totrans-572
  prefs: []
  type: TYPE_PRE
  zh: '[PRE191]'
- en: Convert `Expression` to GMPY’s `mpz`.
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `Expression` 转换为 GMPY 的 `mpz`。
- en: '[PRE192]'
  id: totrans-574
  prefs: []
  type: TYPE_PRE
  zh: '[PRE192]'
- en: Convert `ModularInteger(int)` to GMPY’s `mpz`.
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `ModularInteger(int)` 转换为 GMPY 的 `mpz`。
- en: '[PRE193]'
  id: totrans-576
  prefs: []
  type: TYPE_PRE
  zh: '[PRE193]'
- en: Convert `ModularInteger(mpz)` to GMPY’s `mpz`.
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `ModularInteger(mpz)` 转换为 GMPY 的 `mpz`。
- en: '[PRE194]'
  id: totrans-578
  prefs: []
  type: TYPE_PRE
  zh: '[PRE194]'
- en: Convert `ModularInteger(int)` to GMPY’s `mpz`.
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `ModularInteger(int)` 转换为 GMPY 的 `mpz`。
- en: '[PRE195]'
  id: totrans-580
  prefs: []
  type: TYPE_PRE
  zh: '[PRE195]'
- en: Convert Python’s `Fraction` to GMPY’s `mpz`.
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python 的 `Fraction` 转换为 GMPY 的 `mpz`。
- en: '[PRE196]'
  id: totrans-582
  prefs: []
  type: TYPE_PRE
  zh: '[PRE196]'
- en: Convert GMPY `mpq` to GMPY’s `mpz`.
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: 将 GMPY 的 `mpq` 转换为 GMPY 的 `mpz`。
- en: '[PRE197]'
  id: totrans-584
  prefs: []
  type: TYPE_PRE
  zh: '[PRE197]'
- en: Convert Python’s `Fraction` to GMPY’s `mpz`.
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python 的 `Fraction` 转换为 GMPY 的 `mpz`。
- en: '[PRE198]'
  id: totrans-586
  prefs: []
  type: TYPE_PRE
  zh: '[PRE198]'
- en: Convert mpmath’s `mpf` to GMPY’s `mpz`.
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `mpmath` 的 `mpf` 转换为 GMPY 的 `mpz`。
- en: '[PRE199]'
  id: totrans-588
  prefs: []
  type: TYPE_PRE
  zh: '[PRE199]'
- en: Convert Python’s `int` to GMPY’s `mpz`.
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python 的 `int` 转换为 GMPY 的 `mpz`。
- en: '[PRE200]'
  id: totrans-590
  prefs: []
  type: TYPE_PRE
  zh: '[PRE200]'
- en: Convert GMPY’s `mpz` to GMPY’s `mpz`.
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
  zh: 将 GMPY 的 `mpz` 转换为 GMPY 的 `mpz`。
- en: '[PRE201]'
  id: totrans-592
  prefs: []
  type: TYPE_PRE
  zh: '[PRE201]'
- en: Convert Python’s `int` to GMPY’s `mpz`.
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python 的 `int` 转换为 GMPY 的 `mpz`。
- en: '[PRE202]'
  id: totrans-594
  prefs: []
  type: TYPE_PRE
  zh: '[PRE202]'
- en: Convert SymPy’s Integer to `dtype`.
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
  zh: 将 SymPy 的整数转换为 `dtype`。
- en: '[PRE203]'
  id: totrans-596
  prefs: []
  type: TYPE_PRE
  zh: '[PRE203]'
- en: Compute GCD of `a` and `b`.
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `a` 和 `b` 的最大公约数。
- en: '[PRE204]'
  id: totrans-598
  prefs: []
  type: TYPE_PRE
  zh: '[PRE204]'
- en: Compute extended GCD of `a` and `b`.
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `a` 和 `b` 的扩展最大公约数。
- en: '[PRE205]'
  id: totrans-600
  prefs: []
  type: TYPE_PRE
  zh: '[PRE205]'
- en: Return the associated field of fractions [QQ](#qq)
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: 返回关联的分式域 [QQ](#qq)。
- en: 'Returns:'
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '[QQ](#qq):'
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: '[QQ](#qq)：'
- en: The associated field of fractions [QQ](#qq), a [`Domain`](#sympy.polys.domains.domain.Domain
    "sympy.polys.domains.domain.Domain") representing the rational numbers \(\mathbb{Q}\).
  id: totrans-604
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 关联的分式域 [QQ](#qq)，表示有理数 \(\mathbb{Q}\) 的 [`Domain`](#sympy.polys.domains.domain.Domain
    "sympy.polys.domains.domain.Domain")。
- en: Examples
  id: totrans-605
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE206]'
  id: totrans-606
  prefs: []
  type: TYPE_PRE
  zh: '[PRE206]'
- en: '[PRE207]'
  id: totrans-607
  prefs: []
  type: TYPE_PRE
  zh: '[PRE207]'
- en: Return `True` if `a` is a square.
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `a` 是完全平方数，则返回 `True`。
- en: Explanation
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: An integer is a square if and only if there exists an integer `b` such that
    `b * b == a`.
  id: totrans-610
  prefs: []
  type: TYPE_NORMAL
  zh: 如果存在整数 `b` 满足 `b * b == a`，则整数 `a` 是完全平方数。
- en: '[PRE208]'
  id: totrans-611
  prefs: []
  type: TYPE_PRE
  zh: '[PRE208]'
- en: Compute LCM of `a` and `b`.
  id: totrans-612
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `a` 和 `b` 的最小公倍数。
- en: '[PRE209]'
  id: totrans-613
  prefs: []
  type: TYPE_PRE
  zh: '[PRE209]'
- en: Logarithm of *a* to the base *b*.
  id: totrans-614
  prefs: []
  type: TYPE_NORMAL
  zh: '*a* 的以 *b* 为底的对数。'
- en: 'Parameters:'
  id: totrans-615
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a: number**'
  id: totrans-616
  prefs: []
  type: TYPE_NORMAL
  zh: '**a: number**'
- en: '**b: number**'
  id: totrans-617
  prefs: []
  type: TYPE_NORMAL
  zh: '**b: number**'
- en: 'Returns:'
  id: totrans-618
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '\(\\lfloor\log(a, b)\\rfloor\):'
  id: totrans-619
  prefs: []
  type: TYPE_NORMAL
  zh: \(\\lfloor\log(a, b)\\rfloor\)：
- en: Floor of the logarithm of *a* to the base *b*
  id: totrans-620
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*a* 的以 *b* 为底的对数的下取整。'
- en: Examples
  id: totrans-621
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE210]'
  id: totrans-622
  prefs: []
  type: TYPE_PRE
  zh: '[PRE210]'
- en: Notes
  id: totrans-623
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: This function uses `math.log` which is based on `float` so it will fail for
    large integer arguments.
  id: totrans-624
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数使用基于 `float` 的 `math.log`，因此对于大整数参数将失败。
- en: '[PRE211]'
  id: totrans-625
  prefs: []
  type: TYPE_PRE
  zh: '[PRE211]'
- en: Compute square root of `a`.
  id: totrans-626
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `a` 的平方根。
- en: '[PRE212]'
  id: totrans-627
  prefs: []
  type: TYPE_PRE
  zh: '[PRE212]'
- en: Convert `a` to a SymPy object.
  id: totrans-628
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `a` 转换为 SymPy 对象。
- en: '[PRE213]'
  id: totrans-629
  prefs: []
  type: TYPE_PRE
  zh: '[PRE213]'
- en: Integer ring based on Python’s `int` type.
  id: totrans-630
  prefs: []
  type: TYPE_NORMAL
  zh: 基于 Python 的 `int` 类型的整数环。
- en: This will be used as [ZZ](#zz) if `gmpy` and `gmpy2` are not installed. Elements
    are instances of the standard Python `int` type.
  id: totrans-631
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未安装 `gmpy` 和 `gmpy2`，将使用 [ZZ](#zz)。元素是标准 Python `int` 类型的实例。
- en: '[PRE214]'
  id: totrans-632
  prefs: []
  type: TYPE_PRE
  zh: '[PRE214]'
- en: Integer ring based on GMPY’s `mpz` type.
  id: totrans-633
  prefs: []
  type: TYPE_NORMAL
  zh: 基于 GMPY 的 `mpz` 类型的整数环。
- en: This will be the implementation of [ZZ](#zz) if `gmpy` or `gmpy2` is installed.
    Elements will be of type `gmpy.mpz`.
  id: totrans-634
  prefs: []
  type: TYPE_NORMAL
  zh: 如果安装了 `gmpy` 或 `gmpy2`，这将是 [ZZ](#zz) 的实现。元素将是类型为 `gmpy.mpz` 的对象。
- en: '[PRE215]'
  id: totrans-635
  prefs: []
  type: TYPE_PRE
  zh: '[PRE215]'
- en: Compute factorial of `a`.
  id: totrans-636
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `a` 的阶乘。
- en: '[PRE216]'
  id: totrans-637
  prefs: []
  type: TYPE_PRE
  zh: '[PRE216]'
- en: Convert `ModularInteger(mpz)` to GMPY’s `mpz`.
  id: totrans-638
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `ModularInteger(mpz)` 转换为 GMPY 的 `mpz`。
- en: '[PRE217]'
  id: totrans-639
  prefs: []
  type: TYPE_PRE
  zh: '[PRE217]'
- en: Convert `ModularInteger(int)` to GMPY’s `mpz`.
  id: totrans-640
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `ModularInteger(int)` 转换为 GMPY 的 `mpz`。
- en: '[PRE218]'
  id: totrans-641
  prefs: []
  type: TYPE_PRE
  zh: '[PRE218]'
- en: Convert Python’s `Fraction` to GMPY’s `mpz`.
  id: totrans-642
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python 的 `Fraction` 转换为 GMPY 的 `mpz`。
- en: '[PRE219]'
  id: totrans-643
  prefs: []
  type: TYPE_PRE
  zh: '[PRE219]'
- en: Convert GMPY `mpq` to GMPY’s `mpz`.
  id: totrans-644
  prefs: []
  type: TYPE_NORMAL
  zh: 将 GMPY 的 `mpq` 转换为 GMPY 的 `mpz`。
- en: '[PRE220]'
  id: totrans-645
  prefs: []
  type: TYPE_PRE
  zh: '[PRE220]'
- en: Convert Python’s `Fraction` to GMPY’s `mpz`.
  id: totrans-646
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python 的 `Fraction` 转换为 GMPY 的 `mpz`。
- en: '[PRE221]'
  id: totrans-647
  prefs: []
  type: TYPE_PRE
  zh: '[PRE221]'
- en: Convert mpmath’s `mpf` to GMPY’s `mpz`.
  id: totrans-648
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `mpmath` 的 `mpf` 转换为 GMPY 的 `mpz`。
- en: '[PRE222]'
  id: totrans-649
  prefs: []
  type: TYPE_PRE
  zh: '[PRE222]'
- en: Convert GMPY’s `mpz` to GMPY’s `mpz`.
  id: totrans-650
  prefs: []
  type: TYPE_NORMAL
  zh: 将 GMPY 的 `mpz` 转换为 GMPY 的 `mpz`。
- en: '[PRE223]'
  id: totrans-651
  prefs: []
  type: TYPE_PRE
  zh: '[PRE223]'
- en: Convert Python’s `int` to GMPY’s `mpz`.
  id: totrans-652
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python 的 `int` 转换为 GMPY 的 `mpz`。
- en: '[PRE224]'
  id: totrans-653
  prefs: []
  type: TYPE_PRE
  zh: '[PRE224]'
- en: Convert SymPy’s Integer to `dtype`.
  id: totrans-654
  prefs: []
  type: TYPE_NORMAL
  zh: 将 SymPy 的整数转换为 `dtype`。
- en: '[PRE225]'
  id: totrans-655
  prefs: []
  type: TYPE_PRE
  zh: '[PRE225]'
- en: Compute GCD of `a` and `b`.
  id: totrans-656
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `a` 和 `b` 的最大公约数。
- en: '[PRE226]'
  id: totrans-657
  prefs: []
  type: TYPE_PRE
  zh: '[PRE226]'
- en: Compute extended GCD of `a` and `b`.
  id: totrans-658
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `a` 和 `b` 的扩展最大公约数。
- en: '[PRE227]'
  id: totrans-659
  prefs: []
  type: TYPE_PRE
  zh: '[PRE227]'
- en: Compute LCM of `a` and `b`.
  id: totrans-660
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `a` 和 `b` 的最小公倍数。
- en: '[PRE228]'
  id: totrans-661
  prefs: []
  type: TYPE_PRE
  zh: '[PRE228]'
- en: Compute square root of `a`.
  id: totrans-662
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `a` 的平方根。
- en: '[PRE229]'
  id: totrans-663
  prefs: []
  type: TYPE_PRE
  zh: '[PRE229]'
- en: 'Convert `a` to a SymPy object.  ## QQ'
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
  zh: '将 `a` 转换为 SymPy 对象。  ## QQ'
- en: The [QQ](#qq) domain represents the [rationals](https://en.wikipedia.org/wiki/Rational_number)
    \(\mathbb{Q}\) as a [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")
    in the domain system (see [Introducing the Domains of the poly module](domainsintro.html#polys-domainsintro)).
  id: totrans-665
  prefs: []
  type: TYPE_NORMAL
  zh: '[QQ](#qq) 领域将有理数（[rationals](https://en.wikipedia.org/wiki/Rational_number)
    \(\mathbb{Q}\)）表示为 [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")
    的一部分（见 [Introducing the Domains of the poly module](domainsintro.html#polys-domainsintro)）。'
- en: 'By default a [`Poly`](reference.html#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")
    created from an expression with rational coefficients will have the domain [QQ](#qq):'
  id: totrans-666
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，从具有有理数系数的表达式创建的 [`Poly`](reference.html#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")
    将具有 [QQ](#qq) 域：
- en: '[PRE230]'
  id: totrans-667
  prefs: []
  type: TYPE_PRE
  zh: '[PRE230]'
- en: 'The corresponding [ring of integers](https://en.wikipedia.org/wiki/Ring_of_integers)
    is the [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")
    of the integers [ZZ](#zz). Conversely [QQ](#qq) is the [field of fractions](https://en.wikipedia.org/wiki/Field_of_fractions)
    of [ZZ](#zz):'
  id: totrans-668
  prefs: []
  type: TYPE_NORMAL
  zh: 相应的[整数环](https://en.wikipedia.org/wiki/Ring_of_integers)是整数 [ZZ](#zz) 的 [`Domain`](#sympy.polys.domains.domain.Domain
    "sympy.polys.domains.domain.Domain")。相反，[QQ](#qq) 是[整数环](https://en.wikipedia.org/wiki/Ring_of_integers)的[分式域](https://en.wikipedia.org/wiki/Field_of_fractions)：
- en: '[PRE231]'
  id: totrans-669
  prefs: []
  type: TYPE_PRE
  zh: '[PRE231]'
- en: 'When using the domain directly [QQ](#qq) can be used as a constructor to create
    instances which then support the operations `+,-,*,**,/` (true division `/` is
    always possible for nonzero divisors in [QQ](#qq)):'
  id: totrans-670
  prefs: []
  type: TYPE_NORMAL
  zh: 当直接使用域[QQ](#qq)时，可以作为构造函数用于创建实例，这些实例支持操作`+,-,*,**,/`（对于[QQ](#qq)，非零除数总是可以进行真除`/`）：
- en: '[PRE232]'
  id: totrans-671
  prefs: []
  type: TYPE_PRE
  zh: '[PRE232]'
- en: There are two implementations of [QQ](#qq) in SymPy. If `gmpy` or `gmpy2` is
    installed then [QQ](#qq) will be implemented by [`GMPYRationalField`](#sympy.polys.domains.GMPYRationalField
    "sympy.polys.domains.GMPYRationalField") and the elements will be instances of
    the `gmpy.mpq` type. Otherwise if `gmpy` and `gmpy2` are not installed then [QQ](#qq)
    will be implemented by [`PythonRationalField`](#sympy.polys.domains.PythonRationalField
    "sympy.polys.domains.PythonRationalField") which is a pure Python class as part
    of sympy. The `gmpy` implementation is preferred because it is significantly faster.
  id: totrans-672
  prefs: []
  type: TYPE_NORMAL
  zh: SymPy中有两种[QQ](#qq)的实现。如果安装了`gmpy`或`gmpy2`，则[QQ](#qq)将由[`GMPYRationalField`](#sympy.polys.domains.GMPYRationalField
    "sympy.polys.domains.GMPYRationalField")实现，元素将是`gmpy.mpq`类型的实例。否则，如果未安装`gmpy`和`gmpy2`，则[QQ](#qq)将由[`PythonRationalField`](#sympy.polys.domains.PythonRationalField
    "sympy.polys.domains.PythonRationalField")实现，这是SymPy的纯Python类之一。优选`gmpy`实现，因为速度显著更快。
- en: '[PRE233]'
  id: totrans-673
  prefs: []
  type: TYPE_PRE
  zh: '[PRE233]'
- en: Abstract base class for the domain [QQ](#qq).
  id: totrans-674
  prefs: []
  type: TYPE_NORMAL
  zh: 抽象基类，用于领域[QQ](#qq)。
- en: The [`RationalField`](#sympy.polys.domains.RationalField "sympy.polys.domains.RationalField")
    class represents the field of rational numbers \(\mathbb{Q}\) as a [`Domain`](#sympy.polys.domains.domain.Domain
    "sympy.polys.domains.domain.Domain") in the domain system. [`RationalField`](#sympy.polys.domains.RationalField
    "sympy.polys.domains.RationalField") is a superclass of [`PythonRationalField`](#sympy.polys.domains.PythonRationalField
    "sympy.polys.domains.PythonRationalField") and [`GMPYRationalField`](#sympy.polys.domains.GMPYRationalField
    "sympy.polys.domains.GMPYRationalField") one of which will be the implementation
    for [QQ](#qq) depending on whether either of `gmpy` or `gmpy2` is installed or
    not.
  id: totrans-675
  prefs: []
  type: TYPE_NORMAL
  zh: '[`RationalField`](#sympy.polys.domains.RationalField "sympy.polys.domains.RationalField")类将有理数域\(\mathbb{Q}\)作为[`Domain`](#sympy.polys.domains.domain.Domain
    "sympy.polys.domains.domain.Domain")的一部分来表示。[`RationalField`](#sympy.polys.domains.RationalField
    "sympy.polys.domains.RationalField")是[`PythonRationalField`](#sympy.polys.domains.PythonRationalField
    "sympy.polys.domains.PythonRationalField")和[`GMPYRationalField`](#sympy.polys.domains.GMPYRationalField
    "sympy.polys.domains.GMPYRationalField")的超类之一，具体实现取决于是否安装了`gmpy`或`gmpy2`。[QQ](#qq)的实现将由安装了`gmpy`或`gmpy2`的情况下的[`GMPYRationalField`](#sympy.polys.domains.GMPYRationalField
    "sympy.polys.domains.GMPYRationalField")提供，其元素将是`gmpy.mpq`类型的实例。否则，如果未安装`gmpy`和`gmpy2`，则[QQ](#qq)将由纯Python类[`PythonRationalField`](#sympy.polys.domains.PythonRationalField
    "sympy.polys.domains.PythonRationalField")实现。`gmpy`实现优选，因为它速度显著更快。'
- en: See also
  id: totrans-676
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")'
  id: totrans-677
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")'
- en: '[PRE234]'
  id: totrans-678
  prefs: []
  type: TYPE_PRE
  zh: '[PRE234]'
- en: Returns an algebraic field, i.e. \(\mathbb{Q}(\alpha, \ldots)\).
  id: totrans-679
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个代数域，即\(\mathbb{Q}(\alpha, \ldots)\)。
- en: 'Parameters:'
  id: totrans-680
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '***extension** : One or more [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")'
  id: totrans-681
  prefs: []
  type: TYPE_NORMAL
  zh: '**扩展**：一个或多个[`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")'
- en: Generators of the extension. These should be expressions that are algebraic
    over \(\mathbb{Q}\).
  id: totrans-682
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 扩展的生成器。这些应该是在\(\mathbb{Q}\)上代数的表达式。
- en: '**alias** : str, [`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol"),
    None, optional (default=None)'
  id: totrans-683
  prefs: []
  type: TYPE_NORMAL
  zh: '**别名**：str，[`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol")，None，可选（默认=None）'
- en: If provided, this will be used as the alias symbol for the primitive element
    of the returned [`AlgebraicField`](#sympy.polys.domains.AlgebraicField "sympy.polys.domains.AlgebraicField").
  id: totrans-684
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果提供，将用作返回的[`AlgebraicField`](#sympy.polys.domains.AlgebraicField "sympy.polys.domains.AlgebraicField")的原始元素的别名符号。
- en: 'Returns:'
  id: totrans-685
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '[`AlgebraicField`](#sympy.polys.domains.AlgebraicField "sympy.polys.domains.AlgebraicField")'
  id: totrans-686
  prefs: []
  type: TYPE_NORMAL
  zh: '[`AlgebraicField`](#sympy.polys.domains.AlgebraicField "sympy.polys.domains.AlgebraicField")'
- en: A [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")
    representing the algebraic field extension.
  id: totrans-687
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 代表代数域扩展的[`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")。
- en: Examples
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE235]'
  id: totrans-689
  prefs: []
  type: TYPE_PRE
  zh: '[PRE235]'
- en: '[PRE236]'
  id: totrans-690
  prefs: []
  type: TYPE_PRE
  zh: '[PRE236]'
- en: Returns denominator of `a`.
  id: totrans-691
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`a`的分母。
- en: '[PRE237]'
  id: totrans-692
  prefs: []
  type: TYPE_PRE
  zh: '[PRE237]'
- en: Division of `a` and `b`, implies `__truediv__`.
  id: totrans-693
  prefs: []
  type: TYPE_NORMAL
  zh: '`a`和`b`的除法，意味着`__truediv__`。'
- en: '[PRE238]'
  id: totrans-694
  prefs: []
  type: TYPE_PRE
  zh: '[PRE238]'
- en: Exact quotient of `a` and `b`, implies `__truediv__`.
  id: totrans-695
  prefs: []
  type: TYPE_NORMAL
  zh: '`a`和`b`的精确商，意味着`__truediv__`。'
- en: '[PRE239]'
  id: totrans-696
  prefs: []
  type: TYPE_PRE
  zh: '[PRE239]'
- en: Non-negative square root of `a` if `a` is a square.
  id: totrans-697
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`a`是平方数，则为`a`的非负平方根。
- en: See also
  id: totrans-698
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`is_square`](#sympy.polys.domains.RationalField.is_square "sympy.polys.domains.RationalField.is_square")'
  id: totrans-699
  prefs: []
  type: TYPE_NORMAL
  zh: '[`is_square`](#sympy.polys.domains.RationalField.is_square "sympy.polys.domains.RationalField.is_square")'
- en: '[PRE240]'
  id: totrans-700
  prefs: []
  type: TYPE_PRE
  zh: '[PRE240]'
- en: Convert a [`ANP`](#sympy.polys.polyclasses.ANP "sympy.polys.polyclasses.ANP")
    object to [QQ](#qq).
  id: totrans-701
  prefs: []
  type: TYPE_NORMAL
  zh: 将[`ANP`](#sympy.polys.polyclasses.ANP "sympy.polys.polyclasses.ANP")对象转换为[QQ](#qq)。
- en: See [`convert()`](#sympy.polys.domains.domain.Domain.convert "sympy.polys.domains.domain.Domain.convert")
  id: totrans-702
  prefs: []
  type: TYPE_NORMAL
  zh: 参见[`convert()`](#sympy.polys.domains.domain.Domain.convert "sympy.polys.domains.domain.Domain.convert")
- en: '[PRE241]'
  id: totrans-703
  prefs: []
  type: TYPE_PRE
  zh: '[PRE241]'
- en: Convert a `GaussianElement` object to `dtype`.
  id: totrans-704
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `GaussianElement` 对象转换为 `dtype`。
- en: '[PRE242]'
  id: totrans-705
  prefs: []
  type: TYPE_PRE
  zh: '[PRE242]'
- en: Convert a Python `Fraction` object to `dtype`.
  id: totrans-706
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python 的 `Fraction` 对象转换为 `dtype`。
- en: '[PRE243]'
  id: totrans-707
  prefs: []
  type: TYPE_PRE
  zh: '[PRE243]'
- en: Convert a GMPY `mpq` object to `dtype`.
  id: totrans-708
  prefs: []
  type: TYPE_NORMAL
  zh: 将 GMPY 的 `mpq` 对象转换为 `dtype`。
- en: '[PRE244]'
  id: totrans-709
  prefs: []
  type: TYPE_PRE
  zh: '[PRE244]'
- en: Convert a Python `Fraction` object to `dtype`.
  id: totrans-710
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python 的 `Fraction` 对象转换为 `dtype`。
- en: '[PRE245]'
  id: totrans-711
  prefs: []
  type: TYPE_PRE
  zh: '[PRE245]'
- en: Convert a mpmath `mpf` object to `dtype`.
  id: totrans-712
  prefs: []
  type: TYPE_NORMAL
  zh: 将 mpmath 的 `mpf` 对象转换为 `dtype`。
- en: '[PRE246]'
  id: totrans-713
  prefs: []
  type: TYPE_PRE
  zh: '[PRE246]'
- en: Convert a Python `int` object to `dtype`.
  id: totrans-714
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python 的 `int` 对象转换为 `dtype`。
- en: '[PRE247]'
  id: totrans-715
  prefs: []
  type: TYPE_PRE
  zh: '[PRE247]'
- en: Convert a GMPY `mpz` object to `dtype`.
  id: totrans-716
  prefs: []
  type: TYPE_NORMAL
  zh: 将 GMPY 的 `mpz` 对象转换为 `self.dtype`。
- en: '[PRE248]'
  id: totrans-717
  prefs: []
  type: TYPE_PRE
  zh: '[PRE248]'
- en: Convert a Python `int` object to `dtype`.
  id: totrans-718
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python 的 `int` 对象转换为 `dtype`。
- en: '[PRE249]'
  id: totrans-719
  prefs: []
  type: TYPE_PRE
  zh: '[PRE249]'
- en: Convert SymPy’s Integer to `dtype`.
  id: totrans-720
  prefs: []
  type: TYPE_NORMAL
  zh: 将 SymPy 的 Integer 转换为 `dtype`。
- en: '[PRE250]'
  id: totrans-721
  prefs: []
  type: TYPE_PRE
  zh: '[PRE250]'
- en: Returns ring associated with `self`.
  id: totrans-722
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与 `self` 关联的环。
- en: '[PRE251]'
  id: totrans-723
  prefs: []
  type: TYPE_PRE
  zh: '[PRE251]'
- en: Return `True` if `a` is a square.
  id: totrans-724
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `a` 是平方数，则返回 `True`。
- en: Explanation
  id: totrans-725
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: A rational number is a square if and only if there exists a rational number
    `b` such that `b * b == a`.
  id: totrans-726
  prefs: []
  type: TYPE_NORMAL
  zh: 如果存在有理数 `b` 使得 `b * b == a`，则有理数 `a` 是平方数。
- en: '[PRE252]'
  id: totrans-727
  prefs: []
  type: TYPE_PRE
  zh: '[PRE252]'
- en: Returns numerator of `a`.
  id: totrans-728
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `a` 的分子。
- en: '[PRE253]'
  id: totrans-729
  prefs: []
  type: TYPE_PRE
  zh: '[PRE253]'
- en: Quotient of `a` and `b`, implies `__truediv__`.
  id: totrans-730
  prefs: []
  type: TYPE_NORMAL
  zh: '`a` 和 `b` 的商，意味着 `__truediv__`。'
- en: '[PRE254]'
  id: totrans-731
  prefs: []
  type: TYPE_PRE
  zh: '[PRE254]'
- en: Remainder of `a` and `b`, implies nothing.
  id: totrans-732
  prefs: []
  type: TYPE_NORMAL
  zh: '`a` 和 `b` 的余数，无特殊意义。'
- en: '[PRE255]'
  id: totrans-733
  prefs: []
  type: TYPE_PRE
  zh: '[PRE255]'
- en: Convert `a` to a SymPy object.
  id: totrans-734
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `a` 转换为 SymPy 对象。
- en: '[PRE256]'
  id: totrans-735
  prefs: []
  type: TYPE_PRE
  zh: '[PRE256]'
- en: Rational field based on [MPQ](#mpq).
  id: totrans-736
  prefs: []
  type: TYPE_NORMAL
  zh: 基于 [MPQ](#mpq) 的有理数域。
- en: This will be used as [QQ](#qq) if `gmpy` and `gmpy2` are not installed. Elements
    are instances of [MPQ](#mpq).
  id: totrans-737
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未安装 `gmpy` 和 `gmpy2`，则将用作 [QQ](#qq)。元素是 [MPQ](#mpq) 的实例。
- en: '[PRE257]'
  id: totrans-738
  prefs: []
  type: TYPE_PRE
  zh: '[PRE257]'
- en: Rational field based on GMPY’s `mpq` type.
  id: totrans-739
  prefs: []
  type: TYPE_NORMAL
  zh: 基于 GMPY 的 `mpq` 类型的有理数域。
- en: This will be the implementation of [QQ](#qq) if `gmpy` or `gmpy2` is installed.
    Elements will be of type `gmpy.mpq`.
  id: totrans-740
  prefs: []
  type: TYPE_NORMAL
  zh: 如果安装了 `gmpy` 或 `gmpy2`，则将实现为 [QQ](#qq)。元素将是 `gmpy.mpq` 类型。
- en: '[PRE258]'
  id: totrans-741
  prefs: []
  type: TYPE_PRE
  zh: '[PRE258]'
- en: Returns denominator of `a`.
  id: totrans-742
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `a` 的分母。
- en: '[PRE259]'
  id: totrans-743
  prefs: []
  type: TYPE_PRE
  zh: '[PRE259]'
- en: Division of `a` and `b`, implies `__truediv__`.
  id: totrans-744
  prefs: []
  type: TYPE_NORMAL
  zh: '`a` 和 `b` 的除法，意味着 `__truediv__`。'
- en: '[PRE260]'
  id: totrans-745
  prefs: []
  type: TYPE_PRE
  zh: '[PRE260]'
- en: Exact quotient of `a` and `b`, implies `__truediv__`.
  id: totrans-746
  prefs: []
  type: TYPE_NORMAL
  zh: '`a` 和 `b` 的精确商，意味着 `__truediv__`。'
- en: '[PRE261]'
  id: totrans-747
  prefs: []
  type: TYPE_PRE
  zh: '[PRE261]'
- en: Returns factorial of `a`.
  id: totrans-748
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `a` 的阶乘。
- en: '[PRE262]'
  id: totrans-749
  prefs: []
  type: TYPE_PRE
  zh: '[PRE262]'
- en: Convert a `GaussianElement` object to `dtype`.
  id: totrans-750
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `GaussianElement` 对象转换为 `dtype`。
- en: '[PRE263]'
  id: totrans-751
  prefs: []
  type: TYPE_PRE
  zh: '[PRE263]'
- en: Convert a GMPY `mpq` object to `dtype`.
  id: totrans-752
  prefs: []
  type: TYPE_NORMAL
  zh: 将 GMPY 的 `mpq` 对象转换为 `dtype`。
- en: '[PRE264]'
  id: totrans-753
  prefs: []
  type: TYPE_PRE
  zh: '[PRE264]'
- en: Convert a Python `Fraction` object to `dtype`.
  id: totrans-754
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python 的 `Fraction` 对象转换为 `dtype`。
- en: '[PRE265]'
  id: totrans-755
  prefs: []
  type: TYPE_PRE
  zh: '[PRE265]'
- en: Convert a mpmath `mpf` object to `dtype`.
  id: totrans-756
  prefs: []
  type: TYPE_NORMAL
  zh: 将 mpmath 的 `mpf` 对象转换为 `dtype`。
- en: '[PRE266]'
  id: totrans-757
  prefs: []
  type: TYPE_PRE
  zh: '[PRE266]'
- en: Convert a GMPY `mpz` object to `dtype`.
  id: totrans-758
  prefs: []
  type: TYPE_NORMAL
  zh: 将 GMPY 的 `mpz` 对象转换为 `dtype`。
- en: '[PRE267]'
  id: totrans-759
  prefs: []
  type: TYPE_PRE
  zh: '[PRE267]'
- en: Convert a Python `int` object to `dtype`.
  id: totrans-760
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python 的 `int` 对象转换为 `dtype`。
- en: '[PRE268]'
  id: totrans-761
  prefs: []
  type: TYPE_PRE
  zh: '[PRE268]'
- en: Convert SymPy’s Integer to `dtype`.
  id: totrans-762
  prefs: []
  type: TYPE_NORMAL
  zh: 将 SymPy 的 Integer 转换为 `dtype`。
- en: '[PRE269]'
  id: totrans-763
  prefs: []
  type: TYPE_PRE
  zh: '[PRE269]'
- en: Returns ring associated with `self`.
  id: totrans-764
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与 `self` 相关联的环。
- en: '[PRE270]'
  id: totrans-765
  prefs: []
  type: TYPE_PRE
  zh: '[PRE270]'
- en: Returns numerator of `a`.
  id: totrans-766
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `a` 的分子。
- en: '[PRE271]'
  id: totrans-767
  prefs: []
  type: TYPE_PRE
  zh: '[PRE271]'
- en: Quotient of `a` and `b`, implies `__truediv__`.
  id: totrans-768
  prefs: []
  type: TYPE_NORMAL
  zh: '`a` 和 `b` 的商，意味着 `__truediv__`。'
- en: '[PRE272]'
  id: totrans-769
  prefs: []
  type: TYPE_PRE
  zh: '[PRE272]'
- en: Remainder of `a` and `b`, implies nothing.
  id: totrans-770
  prefs: []
  type: TYPE_NORMAL
  zh: '`a` 和 `b` 的余数，无特殊意义。'
- en: '[PRE273]'
  id: totrans-771
  prefs: []
  type: TYPE_PRE
  zh: '[PRE273]'
- en: Convert `a` to a SymPy object.
  id: totrans-772
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `a` 转换为 SymPy 对象。
- en: '[PRE274]'
  id: totrans-773
  prefs: []
  type: TYPE_PRE
  zh: '[PRE274]'
- en: Rational number implementation that is intended to be compatible with gmpy2’s
    mpq.
  id: totrans-774
  prefs: []
  type: TYPE_NORMAL
  zh: 旨在与 gmpy2 的 mpq 兼容的有理数实现。
- en: Also slightly faster than fractions.Fraction.
  id: totrans-775
  prefs: []
  type: TYPE_NORMAL
  zh: 也比 fractions.Fraction 稍快。
- en: 'PythonMPQ should be treated as immutable although no effort is made to prevent
    mutation (since that might slow down calculations).  ## MPQ'
  id: totrans-776
  prefs: []
  type: TYPE_NORMAL
  zh: PythonMPQ 应被视为不可变的，尽管不会采取措施来防止突变（因为这可能会减慢计算速度）。## MPQ
- en: The `MPQ` type is either [`PythonMPQ`](#sympy.external.pythonmpq.PythonMPQ "sympy.external.pythonmpq.PythonMPQ")
    or otherwise the `mpq` type from `gmpy2`.
  id: totrans-777
  prefs: []
  type: TYPE_NORMAL
  zh: '`MPQ` 类型可以是 [`PythonMPQ`](#sympy.external.pythonmpq.PythonMPQ "sympy.external.pythonmpq.PythonMPQ")
    或者来自 `gmpy2` 的 `mpq` 类型。'
- en: Gaussian domains
  id: totrans-778
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Gaussian 域
- en: The Gaussian domains [ZZ_I](#zz-i) and [QQ_I](#qq-i) share common superclasses
    [`GaussianElement`](#sympy.polys.domains.gaussiandomains.GaussianElement "sympy.polys.domains.gaussiandomains.GaussianElement")
    for the domain elements and [`GaussianDomain`](#sympy.polys.domains.gaussiandomains.GaussianDomain
    "sympy.polys.domains.gaussiandomains.GaussianDomain") for the domains themselves.
  id: totrans-779
  prefs: []
  type: TYPE_NORMAL
  zh: Gaussian 域 [ZZ_I](#zz-i) 和 [QQ_I](#qq-i) 共享公共超类 [`GaussianElement`](#sympy.polys.domains.gaussiandomains.GaussianElement
    "sympy.polys.domains.gaussiandomains.GaussianElement") 用于域元素和 [`GaussianDomain`](#sympy.polys.domains.gaussiandomains.GaussianDomain
    "sympy.polys.domains.gaussiandomains.GaussianDomain") 用于域本身。
- en: '[PRE275]'
  id: totrans-780
  prefs: []
  type: TYPE_PRE
  zh: '[PRE275]'
- en: Base class for Gaussian domains.
  id: totrans-781
  prefs: []
  type: TYPE_NORMAL
  zh: Gaussian 域的基类。
- en: '[PRE276]'
  id: totrans-782
  prefs: []
  type: TYPE_PRE
  zh: '[PRE276]'
- en: Convert an element from ZZ<I> or QQ<I> to `self.dtype`.
  id: totrans-783
  prefs: []
  type: TYPE_NORMAL
  zh: 将从 ZZ<I> 或 QQ<I> 转换为 `self.dtype` 的元素。
- en: '[PRE277]'
  id: totrans-784
  prefs: []
  type: TYPE_PRE
  zh: '[PRE277]'
- en: Convert a GMPY mpq to `self.dtype`.
  id: totrans-785
  prefs: []
  type: TYPE_NORMAL
  zh: 将 GMPY 的 mpq 转换为 `self.dtype`。
- en: '[PRE278]'
  id: totrans-786
  prefs: []
  type: TYPE_PRE
  zh: '[PRE278]'
- en: Convert a GMPY mpq to `self.dtype`.
  id: totrans-787
  prefs: []
  type: TYPE_NORMAL
  zh: 将 GMPY 的 mpq 转换为 `self.dtype`。
- en: '[PRE279]'
  id: totrans-788
  prefs: []
  type: TYPE_PRE
  zh: '[PRE279]'
- en: Convert a QQ_python element to `self.dtype`.
  id: totrans-789
  prefs: []
  type: TYPE_NORMAL
  zh: 将 QQ_python 元素转换为 `self.dtype`。
- en: '[PRE280]'
  id: totrans-790
  prefs: []
  type: TYPE_PRE
  zh: '[PRE280]'
- en: Convert a ZZ_python element to `self.dtype`.
  id: totrans-791
  prefs: []
  type: TYPE_NORMAL
  zh: 将 ZZ_python 元素转换为 `self.dtype`。
- en: '[PRE281]'
  id: totrans-792
  prefs: []
  type: TYPE_PRE
  zh: '[PRE281]'
- en: Convert a GMPY mpz to `self.dtype`.
  id: totrans-793
  prefs: []
  type: TYPE_NORMAL
  zh: 将 GMPY 的 mpz 转换为 `self.dtype`。
- en: '[PRE282]'
  id: totrans-794
  prefs: []
  type: TYPE_PRE
  zh: '[PRE282]'
- en: Convert a ZZ_python element to `self.dtype`.
  id: totrans-795
  prefs: []
  type: TYPE_NORMAL
  zh: 将 ZZ_python 元素转换为 `self.dtype`。
- en: '[PRE283]'
  id: totrans-796
  prefs: []
  type: TYPE_PRE
  zh: '[PRE283]'
- en: Convert a SymPy object to `self.dtype`.
  id: totrans-797
  prefs: []
  type: TYPE_NORMAL
  zh: 将 SymPy 对象转换为 `self.dtype`。
- en: '[PRE284]'
  id: totrans-798
  prefs: []
  type: TYPE_PRE
  zh: '[PRE284]'
- en: Inject generators into this domain.
  id: totrans-799
  prefs: []
  type: TYPE_NORMAL
  zh: 将生成器注入到此域中。
- en: '[PRE285]'
  id: totrans-800
  prefs: []
  type: TYPE_PRE
  zh: '[PRE285]'
- en: Returns `False` for any `GaussianElement`.
  id: totrans-801
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何 `GaussianElement` 返回 `False`。
- en: '[PRE286]'
  id: totrans-802
  prefs: []
  type: TYPE_PRE
  zh: '[PRE286]'
- en: Returns `False` for any `GaussianElement`.
  id: totrans-803
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何 `GaussianElement` 返回 `False`。
- en: '[PRE287]'
  id: totrans-804
  prefs: []
  type: TYPE_PRE
  zh: '[PRE287]'
- en: Returns `False` for any `GaussianElement`.
  id: totrans-805
  prefs: []
  type: TYPE_NORMAL
  zh: 返回任何 `高斯元素` 的 `False`。
- en: '[PRE288]'
  id: totrans-806
  prefs: []
  type: TYPE_PRE
  zh: '[PRE288]'
- en: Returns `False` for any `GaussianElement`.
  id: totrans-807
  prefs: []
  type: TYPE_NORMAL
  zh: 返回任何 `高斯元素` 的 `False`。
- en: '[PRE289]'
  id: totrans-808
  prefs: []
  type: TYPE_PRE
  zh: '[PRE289]'
- en: Convert `a` to a SymPy object.
  id: totrans-809
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `a` 转换为 SymPy 对象。
- en: '[PRE290]'
  id: totrans-810
  prefs: []
  type: TYPE_PRE
  zh: '[PRE290]'
- en: Base class for elements of Gaussian type domains.
  id: totrans-811
  prefs: []
  type: TYPE_NORMAL
  zh: 高斯型域元素的基类。
- en: '[PRE291]'
  id: totrans-812
  prefs: []
  type: TYPE_PRE
  zh: '[PRE291]'
- en: Create a new GaussianElement of the same domain.
  id: totrans-813
  prefs: []
  type: TYPE_NORMAL
  zh: 创建相同域的新高斯元素。
- en: '[PRE292]'
  id: totrans-814
  prefs: []
  type: TYPE_PRE
  zh: '[PRE292]'
- en: The domain that this is an element of (ZZ_I or QQ_I)
  id: totrans-815
  prefs: []
  type: TYPE_NORMAL
  zh: 这是所属的域 (ZZ_I 或 QQ_I) 的元素。
- en: '[PRE293]'
  id: totrans-816
  prefs: []
  type: TYPE_PRE
  zh: '[PRE293]'
- en: Return quadrant index 0-3.
  id: totrans-817
  prefs: []
  type: TYPE_NORMAL
  zh: 返回象限索引 0-3。
- en: 0 is included in quadrant 0.
  id: totrans-818
  prefs: []
  type: TYPE_NORMAL
  zh: 0 包含在象限 0 中。
- en: '## ZZ_I'
  id: totrans-819
  prefs: []
  type: TYPE_NORMAL
  zh: '## ZZ_I'
- en: '[PRE294]'
  id: totrans-820
  prefs: []
  type: TYPE_PRE
  zh: '[PRE294]'
- en: Ring of Gaussian integers `ZZ_I`
  id: totrans-821
  prefs: []
  type: TYPE_NORMAL
  zh: 高斯整数环 `ZZ_I`
- en: The [ZZ_I](#zz-i) domain represents the [Gaussian integers](https://en.wikipedia.org/wiki/Gaussian_integer)
    \(\mathbb{Z}[i]\) as a [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")
    in the domain system (see [Introducing the Domains of the poly module](domainsintro.html#polys-domainsintro)).
  id: totrans-822
  prefs: []
  type: TYPE_NORMAL
  zh: '[ZZ_I](#zz-i) 域将 [高斯整数](https://en.wikipedia.org/wiki/Gaussian_integer) \(\mathbb{Z}[i]\)
    表示为域系统中的 [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")（参见
    [Introducing the Domains of the poly module](domainsintro.html#polys-domainsintro)）。'
- en: By default a [`Poly`](reference.html#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")
    created from an expression with coefficients that are combinations of integers
    and `I` (\(\sqrt{-1}\)) will have the domain [ZZ_I](#zz-i).
  id: totrans-823
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，从整数和 `I`（\(\sqrt{-1}\)）的组合构成的表达式创建的 [`Poly`](reference.html#sympy.polys.polytools.Poly
    "sympy.polys.polytools.Poly") 将具有域 [ZZ_I](#zz-i)。
- en: '[PRE295]'
  id: totrans-824
  prefs: []
  type: TYPE_PRE
  zh: '[PRE295]'
- en: The [ZZ_I](#zz-i) domain can be used to factorise polynomials that are reducible
    over the Gaussian integers.
  id: totrans-825
  prefs: []
  type: TYPE_NORMAL
  zh: '[ZZ_I](#zz-i) 域可用于分解在高斯整数上可约的多项式。'
- en: '[PRE296]'
  id: totrans-826
  prefs: []
  type: TYPE_PRE
  zh: '[PRE296]'
- en: The corresponding [field of fractions](https://en.wikipedia.org/wiki/Field_of_fractions)
    is the domain of the Gaussian rationals [QQ_I](#qq-i). Conversely [ZZ_I](#zz-i)
    is the [ring of integers](https://en.wikipedia.org/wiki/Ring_of_integers) of [QQ_I](#qq-i).
  id: totrans-827
  prefs: []
  type: TYPE_NORMAL
  zh: 对应的 [分式域](https://en.wikipedia.org/wiki/Field_of_fractions) 是高斯有理数的域 [QQ_I](#qq-i)。相反，[ZZ_I](#zz-i)
    是 [QQ_I](#qq-i) 的 [整数环](https://en.wikipedia.org/wiki/Ring_of_integers)。
- en: '[PRE297]'
  id: totrans-828
  prefs: []
  type: TYPE_PRE
  zh: '[PRE297]'
- en: When using the domain directly [ZZ_I](#zz-i) can be used as a constructor.
  id: totrans-829
  prefs: []
  type: TYPE_NORMAL
  zh: 直接使用域时，[ZZ_I](#zz-i) 可作为构造函数使用。
- en: '[PRE298]'
  id: totrans-830
  prefs: []
  type: TYPE_PRE
  zh: '[PRE298]'
- en: The domain elements of [ZZ_I](#zz-i) are instances of [`GaussianInteger`](#sympy.polys.domains.gaussiandomains.GaussianInteger
    "sympy.polys.domains.gaussiandomains.GaussianInteger") which support the rings
    operations `+,-,*,**`.
  id: totrans-831
  prefs: []
  type: TYPE_NORMAL
  zh: '[ZZ_I](#zz-i) 的域元素是支持环操作 `+,-,*,**` 的 [`高斯整数`](#sympy.polys.domains.gaussiandomains.GaussianInteger
    "sympy.polys.domains.gaussiandomains.GaussianInteger") 实例。'
- en: '[PRE299]'
  id: totrans-832
  prefs: []
  type: TYPE_PRE
  zh: '[PRE299]'
- en: Both floor (`//`) and modulo (`%`) division work with [`GaussianInteger`](#sympy.polys.domains.gaussiandomains.GaussianInteger
    "sympy.polys.domains.gaussiandomains.GaussianInteger") (see the [`div()`](#sympy.polys.domains.domain.Domain.div
    "sympy.polys.domains.domain.Domain.div") method).
  id: totrans-833
  prefs: []
  type: TYPE_NORMAL
  zh: 地板除法 (`//`) 和模除法 (`%`) 在 [`高斯整数`](#sympy.polys.domains.gaussiandomains.GaussianInteger
    "sympy.polys.domains.gaussiandomains.GaussianInteger") (参见 [`div()`](#sympy.polys.domains.domain.Domain.div
    "sympy.polys.domains.domain.Domain.div") 方法) 上均有效。
- en: '[PRE300]'
  id: totrans-834
  prefs: []
  type: TYPE_PRE
  zh: '[PRE300]'
- en: True division (`/`) in [ZZ_I](#zz-i) gives an element of [QQ_I](#qq-i). The
    [`exquo()`](#sympy.polys.domains.domain.Domain.exquo "sympy.polys.domains.domain.Domain.exquo")
    method can be used to divide in [ZZ_I](#zz-i) when exact division is possible.
  id: totrans-835
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [ZZ_I](#zz-i) 中，真除法 (`/`) 给出 [QQ_I](#qq-i) 的一个元素。可以使用 [`exquo()`](#sympy.polys.domains.domain.Domain.exquo
    "sympy.polys.domains.domain.Domain.exquo") 方法在 [ZZ_I](#zz-i) 上进行精确除法。
- en: '[PRE301]'
  id: totrans-836
  prefs: []
  type: TYPE_PRE
  zh: '[PRE301]'
- en: The [`gcd()`](#sympy.polys.domains.domain.Domain.gcd "sympy.polys.domains.domain.Domain.gcd")
    method can be used to compute the [gcd](https://en.wikipedia.org/wiki/Greatest_common_divisor)
    of any two elements.
  id: totrans-837
  prefs: []
  type: TYPE_NORMAL
  zh: '[`gcd()`](#sympy.polys.domains.domain.Domain.gcd "sympy.polys.domains.domain.Domain.gcd")
    方法可用于计算任意两个元素的 [gcd](https://en.wikipedia.org/wiki/Greatest_common_divisor)。'
- en: '[PRE302]'
  id: totrans-838
  prefs: []
  type: TYPE_PRE
  zh: '[PRE302]'
- en: '[PRE303]'
  id: totrans-839
  prefs: []
  type: TYPE_PRE
  zh: '[PRE303]'
- en: alias of [`GaussianInteger`](#sympy.polys.domains.gaussiandomains.GaussianInteger
    "sympy.polys.domains.gaussiandomains.GaussianInteger")
  id: totrans-840
  prefs: []
  type: TYPE_NORMAL
  zh: '[`高斯整数`](#sympy.polys.domains.gaussiandomains.GaussianInteger "sympy.polys.domains.gaussiandomains.GaussianInteger")
    的别名。'
- en: '[PRE304]'
  id: totrans-841
  prefs: []
  type: TYPE_PRE
  zh: '[PRE304]'
- en: Convert a ZZ_I element to ZZ_I.
  id: totrans-842
  prefs: []
  type: TYPE_NORMAL
  zh: 将 ZZ_I 元素转换为 ZZ_I。
- en: '[PRE305]'
  id: totrans-843
  prefs: []
  type: TYPE_PRE
  zh: '[PRE305]'
- en: Convert a QQ_I element to ZZ_I.
  id: totrans-844
  prefs: []
  type: TYPE_NORMAL
  zh: 将 QQ_I 元素转换为 ZZ_I。
- en: '[PRE306]'
  id: totrans-845
  prefs: []
  type: TYPE_PRE
  zh: '[PRE306]'
- en: Greatest common divisor of a and b over ZZ_I.
  id: totrans-846
  prefs: []
  type: TYPE_NORMAL
  zh: 在 ZZ_I 上 a 和 b 的最大公约数。
- en: '[PRE307]'
  id: totrans-847
  prefs: []
  type: TYPE_PRE
  zh: '[PRE307]'
- en: Returns a field associated with `self`.
  id: totrans-848
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与 `self` 关联的一个字段。
- en: '[PRE308]'
  id: totrans-849
  prefs: []
  type: TYPE_PRE
  zh: '[PRE308]'
- en: Returns a ring associated with `self`.
  id: totrans-850
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与 `self` 关联的一个环。
- en: '[PRE309]'
  id: totrans-851
  prefs: []
  type: TYPE_PRE
  zh: '[PRE309]'
- en: Least common multiple of a and b over ZZ_I.
  id: totrans-852
  prefs: []
  type: TYPE_NORMAL
  zh: 在 ZZ_I 上的 a 和 b 的最小公倍数。
- en: '[PRE310]'
  id: totrans-853
  prefs: []
  type: TYPE_PRE
  zh: '[PRE310]'
- en: Return first quadrant element associated with `d`.
  id: totrans-854
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与 `d` 关联的第一象限元素。
- en: Also multiply the other arguments by the same power of i.
  id: totrans-855
  prefs: []
  type: TYPE_NORMAL
  zh: 也将其他参数乘以相同的 i 的幂次。
- en: '[PRE311]'
  id: totrans-856
  prefs: []
  type: TYPE_PRE
  zh: '[PRE311]'
- en: 'Gaussian integer: domain element for [ZZ_I](#zz-i)'
  id: totrans-857
  prefs: []
  type: TYPE_NORMAL
  zh: 高斯整数：[ZZ_I](#zz-i) 的域元素。
- en: '[PRE312]  ## QQ_I'
  id: totrans-858
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE312]  ## QQ_I'
- en: '[PRE313]'
  id: totrans-859
  prefs: []
  type: TYPE_PRE
  zh: '[PRE313]'
- en: Field of Gaussian rationals `QQ_I`
  id: totrans-860
  prefs: []
  type: TYPE_NORMAL
  zh: 高斯有理数域 `QQ_I`
- en: The [QQ_I](#qq-i) domain represents the [Gaussian rationals](https://en.wikipedia.org/wiki/Gaussian_rational)
    \(\mathbb{Q}(i)\) as a [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")
    in the domain system (see [Introducing the Domains of the poly module](domainsintro.html#polys-domainsintro)).
  id: totrans-861
  prefs: []
  type: TYPE_NORMAL
  zh: '[QQ_I](#qq-i) 域将[高斯有理数](https://en.wikipedia.org/wiki/Gaussian_rational) \(\mathbb{Q}(i)\)
    表示为域系统中的[`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")（参见[引入多项式模块的域](domainsintro.html#polys-domainsintro)）。'
- en: By default a [`Poly`](reference.html#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")
    created from an expression with coefficients that are combinations of rationals
    and `I` (\(\sqrt{-1}\)) will have the domain [QQ_I](#qq-i).
  id: totrans-862
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，从具有有理数和`I`（\(\sqrt{-1}\)）组合的系数表达式创建的[`Poly`](reference.html#sympy.polys.polytools.Poly
    "sympy.polys.polytools.Poly") 将具有域[QQ_I](#qq-i)。
- en: '[PRE314]'
  id: totrans-863
  prefs: []
  type: TYPE_PRE
  zh: '[PRE314]'
- en: The polys option `gaussian=True` can be used to specify that the domain should
    be [QQ_I](#qq-i) even if the coefficients do not contain `I` or are all integers.
  id: totrans-864
  prefs: []
  type: TYPE_NORMAL
  zh: 即使系数不包含`I`或全为整数，polys选项`gaussian=True`也可以用来指定域应为[QQ_I](#qq-i)。
- en: '[PRE315]'
  id: totrans-865
  prefs: []
  type: TYPE_PRE
  zh: '[PRE315]'
- en: The [QQ_I](#qq-i) domain can be used to factorise polynomials that are reducible
    over the Gaussian rationals.
  id: totrans-866
  prefs: []
  type: TYPE_NORMAL
  zh: '[QQ_I](#qq-i) 域可用于分解在高斯有理数上是可约的多项式。'
- en: '[PRE316]'
  id: totrans-867
  prefs: []
  type: TYPE_PRE
  zh: '[PRE316]'
- en: It is also possible to specify the [QQ_I](#qq-i) domain explicitly with polys
    functions like [`apart()`](reference.html#sympy.polys.partfrac.apart "sympy.polys.partfrac.apart").
  id: totrans-868
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以使用 polys 函数如[`apart()`](reference.html#sympy.polys.partfrac.apart "sympy.polys.partfrac.apart")
    明确指定[QQ_I](#qq-i) 域。
- en: '[PRE317]'
  id: totrans-869
  prefs: []
  type: TYPE_PRE
  zh: '[PRE317]'
- en: The corresponding [ring of integers](https://en.wikipedia.org/wiki/Ring_of_integers)
    is the domain of the Gaussian integers [ZZ_I](#zz-i). Conversely [QQ_I](#qq-i)
    is the [field of fractions](https://en.wikipedia.org/wiki/Field_of_fractions)
    of [ZZ_I](#zz-i).
  id: totrans-870
  prefs: []
  type: TYPE_NORMAL
  zh: 对应的[整数环](https://en.wikipedia.org/wiki/Ring_of_integers) 是高斯整数[ZZ_I](#zz-i)的域。反之，[QQ_I](#qq-i)
    是[ZZ_I](#zz-i) 的[分式域](https://en.wikipedia.org/wiki/Field_of_fractions)。
- en: '[PRE318]'
  id: totrans-871
  prefs: []
  type: TYPE_PRE
  zh: '[PRE318]'
- en: When using the domain directly [QQ_I](#qq-i) can be used as a constructor.
  id: totrans-872
  prefs: []
  type: TYPE_NORMAL
  zh: 直接使用域[QQ_I](#qq-i) 时，可以作为构造函数使用。
- en: '[PRE319]'
  id: totrans-873
  prefs: []
  type: TYPE_PRE
  zh: '[PRE319]'
- en: The domain elements of [QQ_I](#qq-i) are instances of [`GaussianRational`](#sympy.polys.domains.gaussiandomains.GaussianRational
    "sympy.polys.domains.gaussiandomains.GaussianRational") which support the field
    operations `+,-,*,**,/`.
  id: totrans-874
  prefs: []
  type: TYPE_NORMAL
  zh: '[QQ_I](#qq-i) 的域元素是支持字段操作`+,-,*,**,/`的[`GaussianRational`](#sympy.polys.domains.gaussiandomains.GaussianRational
    "sympy.polys.domains.gaussiandomains.GaussianRational") 实例。'
- en: '[PRE320]'
  id: totrans-875
  prefs: []
  type: TYPE_PRE
  zh: '[PRE320]'
- en: True division (`/`) in [QQ_I](#qq-i) gives an element of [QQ_I](#qq-i) and is
    always exact.
  id: totrans-876
  prefs: []
  type: TYPE_NORMAL
  zh: 在[QQ_I](#qq-i) 中，真除法(`/`) 给出[QQ_I](#qq-i) 的元素，并且始终是精确的。
- en: '[PRE321]'
  id: totrans-877
  prefs: []
  type: TYPE_PRE
  zh: '[PRE321]'
- en: Both floor (`//`) and modulo (`%`) division can be used with [`GaussianRational`](#sympy.polys.domains.gaussiandomains.GaussianRational
    "sympy.polys.domains.gaussiandomains.GaussianRational") (see [`div()`](#sympy.polys.domains.domain.Domain.div
    "sympy.polys.domains.domain.Domain.div")) but division is always exact so there
    is no remainder.
  id: totrans-878
  prefs: []
  type: TYPE_NORMAL
  zh: 对于[`GaussianRational`](#sympy.polys.domains.gaussiandomains.GaussianRational
    "sympy.polys.domains.gaussiandomains.GaussianRational")，可以使用 floor (`//`) 和 modulo
    (`%`) 运算（参见[`div()`](#sympy.polys.domains.domain.Domain.div "sympy.polys.domains.domain.Domain.div")），但是由于除法始终是精确的，因此没有余数。
- en: '[PRE322]'
  id: totrans-879
  prefs: []
  type: TYPE_PRE
  zh: '[PRE322]'
- en: '[PRE323]'
  id: totrans-880
  prefs: []
  type: TYPE_PRE
  zh: '[PRE323]'
- en: Get equivalent domain as an `AlgebraicField`.
  id: totrans-881
  prefs: []
  type: TYPE_NORMAL
  zh: 作为`AlgebraicField`的等价域。
- en: '[PRE324]'
  id: totrans-882
  prefs: []
  type: TYPE_PRE
  zh: '[PRE324]'
- en: Get the denominator of `a`.
  id: totrans-883
  prefs: []
  type: TYPE_NORMAL
  zh: 获取`a`的分母。
- en: '[PRE325]'
  id: totrans-884
  prefs: []
  type: TYPE_PRE
  zh: '[PRE325]'
- en: alias of [`GaussianRational`](#sympy.polys.domains.gaussiandomains.GaussianRational
    "sympy.polys.domains.gaussiandomains.GaussianRational")
  id: totrans-885
  prefs: []
  type: TYPE_NORMAL
  zh: '[`GaussianRational`](#sympy.polys.domains.gaussiandomains.GaussianRational
    "sympy.polys.domains.gaussiandomains.GaussianRational") 的别名'
- en: '[PRE326]'
  id: totrans-886
  prefs: []
  type: TYPE_PRE
  zh: '[PRE326]'
- en: Convert a ComplexField element to QQ_I.
  id: totrans-887
  prefs: []
  type: TYPE_NORMAL
  zh: 将ComplexField元素转换为QQ_I。
- en: '[PRE327]'
  id: totrans-888
  prefs: []
  type: TYPE_PRE
  zh: '[PRE327]'
- en: Convert a ZZ_I element to QQ_I.
  id: totrans-889
  prefs: []
  type: TYPE_NORMAL
  zh: 将ZZ_I元素转换为QQ_I。
- en: '[PRE328]'
  id: totrans-890
  prefs: []
  type: TYPE_PRE
  zh: '[PRE328]'
- en: Convert a QQ_I element to QQ_I.
  id: totrans-891
  prefs: []
  type: TYPE_NORMAL
  zh: 将QQ_I元素转换为QQ_I。
- en: '[PRE329]'
  id: totrans-892
  prefs: []
  type: TYPE_PRE
  zh: '[PRE329]'
- en: Returns a field associated with `self`.
  id: totrans-893
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与`self`相关的字段。
- en: '[PRE330]'
  id: totrans-894
  prefs: []
  type: TYPE_PRE
  zh: '[PRE330]'
- en: Returns a ring associated with `self`.
  id: totrans-895
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与`self`相关联的环。
- en: '[PRE331]'
  id: totrans-896
  prefs: []
  type: TYPE_PRE
  zh: '[PRE331]'
- en: Get the numerator of `a`.
  id: totrans-897
  prefs: []
  type: TYPE_NORMAL
  zh: 获取`a`的分子。
- en: '[PRE332]'
  id: totrans-898
  prefs: []
  type: TYPE_PRE
  zh: '[PRE332]'
- en: 'Gaussian rational: domain element for [QQ_I](#qq-i)'
  id: totrans-899
  prefs: []
  type: TYPE_NORMAL
  zh: 高斯有理数：[QQ_I](#qq-i) 的域元素
- en: '[PRE333]  ## QQ<a>'
  id: totrans-900
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE333]  ## QQ<a>'
- en: '[PRE334]'
  id: totrans-901
  prefs: []
  type: TYPE_PRE
  zh: '[PRE334]'
- en: Algebraic number field [QQ<a>](#qq-a)
  id: totrans-902
  prefs: []
  type: TYPE_NORMAL
  zh: 代数数域[QQ<a>](#qq-a)
- en: A [QQ<a>](#qq-a) domain represents an [algebraic number field](https://en.wikipedia.org/wiki/Algebraic_number_field)
    \(\mathbb{Q}(a)\) as a [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")
    in the domain system (see [Introducing the Domains of the poly module](domainsintro.html#polys-domainsintro)).
  id: totrans-903
  prefs: []
  type: TYPE_NORMAL
  zh: '[QQ<a>](#qq-a) 域将[代数数域](https://en.wikipedia.org/wiki/Algebraic_number_field)
    \(\mathbb{Q}(a)\) 表示为域系统中的[`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")（参见[引入多项式模块的域](domainsintro.html#polys-domainsintro)）。'
- en: A [`Poly`](reference.html#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")
    created from an expression involving [algebraic numbers](https://en.wikipedia.org/wiki/Algebraic_number)
    will treat the algebraic numbers as generators if the generators argument is not
    specified.
  id: totrans-904
  prefs: []
  type: TYPE_NORMAL
  zh: 从涉及[algebraic numbers](https://en.wikipedia.org/wiki/Algebraic_number)的表达式创建的[`Poly`](reference.html#sympy.polys.polytools.Poly
    "sympy.polys.polytools.Poly")将把代数数视为生成器（如果未指定生成器参数）。
- en: '[PRE335]'
  id: totrans-905
  prefs: []
  type: TYPE_PRE
  zh: '[PRE335]'
- en: That is a multivariate polynomial with `sqrt(2)` treated as one of the generators
    (variables). If the generators are explicitly specified then `sqrt(2)` will be
    considered to be a coefficient but by default the [EX](#ex) domain is used. To
    make a [`Poly`](reference.html#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")
    with a [QQ<a>](#qq-a) domain the argument `extension=True` can be given.
  id: totrans-906
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个多变量多项式，其中`sqrt(2)`被视为生成器（变量）之一。如果明确指定生成器，则`sqrt(2)`将被视为系数，但默认情况下使用[EX](#ex)域。要在[QQ<a>](#qq-a)域中创建[`Poly`](reference.html#sympy.polys.polytools.Poly
    "sympy.polys.polytools.Poly")，可以给定参数`extension=True`。
- en: '[PRE336]'
  id: totrans-907
  prefs: []
  type: TYPE_PRE
  zh: '[PRE336]'
- en: A generator of the algebraic field extension can also be specified explicitly
    which is particularly useful if the coefficients are all rational but an extension
    field is needed (e.g. to factor the polynomial).
  id: totrans-908
  prefs: []
  type: TYPE_NORMAL
  zh: 如果系数全为有理数但需要扩展域（例如因式分解多项式），也可以显式指定代数域扩展的生成器。
- en: '[PRE337]'
  id: totrans-909
  prefs: []
  type: TYPE_PRE
  zh: '[PRE337]'
- en: It is possible to factorise a polynomial over a [QQ<a>](#qq-a) domain using
    the `extension` argument to [`factor()`](reference.html#sympy.polys.polytools.factor
    "sympy.polys.polytools.factor") or by specifying the domain explicitly.
  id: totrans-910
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`extension`参数在[QQ<a>](#qq-a)域上因式分解多项式，或者明确指定域。
- en: '[PRE338]'
  id: totrans-911
  prefs: []
  type: TYPE_PRE
  zh: '[PRE338]'
- en: The `extension=True` argument can be used but will only create an extension
    that contains the coefficients which is usually not enough to factorise the polynomial.
  id: totrans-912
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用参数`extension=True`，但这只会创建包含系数的扩展，通常不足以因式分解多项式。
- en: '[PRE339]'
  id: totrans-913
  prefs: []
  type: TYPE_PRE
  zh: '[PRE339]'
- en: It is also possible to use [QQ<a>](#qq-a) with the [`cancel()`](reference.html#sympy.polys.polytools.cancel
    "sympy.polys.polytools.cancel") and [`gcd()`](reference.html#sympy.polys.polytools.gcd
    "sympy.polys.polytools.gcd") functions.
  id: totrans-914
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以在[`cancel()`](reference.html#sympy.polys.polytools.cancel "sympy.polys.polytools.cancel")和[`gcd()`](reference.html#sympy.polys.polytools.gcd
    "sympy.polys.polytools.gcd")函数中使用[QQ<a>](#qq-a)。
- en: '[PRE340]'
  id: totrans-915
  prefs: []
  type: TYPE_PRE
  zh: '[PRE340]'
- en: When using the domain directly [QQ<a>](#qq-a) can be used as a constructor to
    create instances which then support the operations `+,-,*,**,/`. The [`algebraic_field()`](#sympy.polys.domains.domain.Domain.algebraic_field
    "sympy.polys.domains.domain.Domain.algebraic_field") method is used to construct
    a particular [QQ<a>](#qq-a) domain. The [`from_sympy()`](#sympy.polys.domains.domain.Domain.from_sympy
    "sympy.polys.domains.domain.Domain.from_sympy") method can be used to create domain
    elements from normal SymPy expressions.
  id: totrans-916
  prefs: []
  type: TYPE_NORMAL
  zh: 在直接使用域时，可以使用[QQ<a>](#qq-a)作为构造函数创建实例，从而支持`+,-,*,**,/`等操作。[`algebraic_field()`](#sympy.polys.domains.domain.Domain.algebraic_field
    "sympy.polys.domains.domain.Domain.algebraic_field")方法用于构造特定的[QQ<a>](#qq-a)域。[`from_sympy()`](#sympy.polys.domains.domain.Domain.from_sympy
    "sympy.polys.domains.domain.Domain.from_sympy")方法可用于从普通的SymPy表达式创建域元素。
- en: '[PRE341]'
  id: totrans-917
  prefs: []
  type: TYPE_PRE
  zh: '[PRE341]'
- en: Elements of [QQ<a>](#qq-a) are instances of [`ANP`](#sympy.polys.polyclasses.ANP
    "sympy.polys.polyclasses.ANP") which have limited printing support. The raw display
    shows the internal representation of the element as the list `[4, 3]` representing
    the coefficients of `1` and `sqrt(2)` for this element in the form `a * sqrt(2)
    + b * 1` where `a` and `b` are elements of [QQ](#qq). The minimal polynomial for
    the generator `(x**2 - 2)` is also shown in the [DUP representation](domainsintro.html#dup-representation)
    as the list `[1, 0, -2]`. We can use [`to_sympy()`](#sympy.polys.domains.domain.Domain.to_sympy
    "sympy.polys.domains.domain.Domain.to_sympy") to get a better printed form for
    the elements and to see the results of operations.
  id: totrans-918
  prefs: []
  type: TYPE_NORMAL
  zh: '[QQ<a>](#qq-a)的元素是[`ANP`](#sympy.polys.polyclasses.ANP "sympy.polys.polyclasses.ANP")的实例，它们具有有限的打印支持。原始显示显示元素的内部表示，例如列表`[4,
    3]`，表示形式为`a * sqrt(2) + b * 1`，其中`a`和`b`是[QQ](#qq)中的元素，分别代表`1`和`sqrt(2)`的系数。生成器`(x**2
    - 2)`的最小多项式也显示在[DUP representation](domainsintro.html#dup-representation)中，表示为列表`[1,
    0, -2]`。我们可以使用[`to_sympy()`](#sympy.polys.domains.domain.Domain.to_sympy "sympy.polys.domains.domain.Domain.to_sympy")以获得更好的元素打印形式并查看操作的结果。'
- en: '[PRE342]'
  id: totrans-919
  prefs: []
  type: TYPE_PRE
  zh: '[PRE342]'
- en: Any expression representing an algebraic number can be used to generate a [QQ<a>](#qq-a)
    domain provided its [minimal polynomial](https://en.wikipedia.org/wiki/Minimal_polynomial_(field_theory))
    can be computed. The function [`minpoly()`](numberfields.html#sympy.polys.numberfields.minpoly.minpoly
    "sympy.polys.numberfields.minpoly.minpoly") function is used for this.
  id: totrans-920
  prefs: []
  type: TYPE_NORMAL
  zh: 任何表示代数数的表达式都可以用来生成一个[QQ<a>](#qq-a)域，只要能计算其[最小多项式](https://en.wikipedia.org/wiki/Minimal_polynomial_(field_theory))。使用[`minpoly()`](numberfields.html#sympy.polys.numberfields.minpoly.minpoly
    "sympy.polys.numberfields.minpoly.minpoly")函数进行此操作。
- en: '[PRE343]'
  id: totrans-921
  prefs: []
  type: TYPE_PRE
  zh: '[PRE343]'
- en: It is also possible to make an algebraic field from multiple extension elements.
  id: totrans-922
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以从多个扩展元素生成一个代数域。
- en: '[PRE344]'
  id: totrans-923
  prefs: []
  type: TYPE_PRE
  zh: '[PRE344]'
- en: Multiple extension elements are always combined together to make a single [primitive
    element](https://en.wikipedia.org/wiki/Primitive_element_theorem). In the case
    of `[sqrt(2), sqrt(3)]` the primitive element chosen is `sqrt(2) + sqrt(3)` which
    is why the domain displays as `QQ<sqrt(2) + sqrt(3)>`. The minimal polynomial
    for the primitive element is computed using the [`primitive_element()`](numberfields.html#sympy.polys.numberfields.subfield.primitive_element
    "sympy.polys.numberfields.subfield.primitive_element") function.
  id: totrans-924
  prefs: []
  type: TYPE_NORMAL
  zh: 多个扩展元素总是组合在一起形成一个单一的[原始元素](https://en.wikipedia.org/wiki/Primitive_element_theorem)。在`[sqrt(2),
    sqrt(3)]`的情况下，选择的原始元素是`sqrt(2) + sqrt(3)`，这就是为什么该域显示为`QQ<sqrt(2) + sqrt(3)>`。使用[`primitive_element()`](numberfields.html#sympy.polys.numberfields.subfield.primitive_element
    "sympy.polys.numberfields.subfield.primitive_element")函数计算原始元素的最小多项式。
- en: '[PRE345]'
  id: totrans-925
  prefs: []
  type: TYPE_PRE
  zh: '[PRE345]'
- en: The extension elements that generate the domain can be accessed from the domain
    using the [`ext`](#sympy.polys.domains.AlgebraicField.ext "sympy.polys.domains.AlgebraicField.ext")
    and [`orig_ext`](#sympy.polys.domains.AlgebraicField.orig_ext "sympy.polys.domains.AlgebraicField.orig_ext")
    attributes as instances of [`AlgebraicNumber`](../core.html#sympy.core.numbers.AlgebraicNumber
    "sympy.core.numbers.AlgebraicNumber"). The minimal polynomial for the primitive
    element as a [`DMP`](#sympy.polys.polyclasses.DMP "sympy.polys.polyclasses.DMP")
    instance is available as [`mod`](#sympy.polys.domains.AlgebraicField.mod "sympy.polys.domains.AlgebraicField.mod").
  id: totrans-926
  prefs: []
  type: TYPE_NORMAL
  zh: 从域中可以使用[`ext`](#sympy.polys.domains.AlgebraicField.ext "sympy.polys.domains.AlgebraicField.ext")和[`orig_ext`](#sympy.polys.domains.AlgebraicField.orig_ext
    "sympy.polys.domains.AlgebraicField.orig_ext")属性访问生成域的扩展元素，它们是[`AlgebraicNumber`](../core.html#sympy.core.numbers.AlgebraicNumber
    "sympy.core.numbers.AlgebraicNumber")的实例。作为[`DMP`](#sympy.polys.polyclasses.DMP
    "sympy.polys.polyclasses.DMP")实例的原始元素的最小多项式可用作[`mod`](#sympy.polys.domains.AlgebraicField.mod
    "sympy.polys.domains.AlgebraicField.mod")。
- en: '[PRE346]'
  id: totrans-927
  prefs: []
  type: TYPE_PRE
  zh: '[PRE346]'
- en: The [discriminant](https://en.wikipedia.org/wiki/Discriminant_of_an_algebraic_number_field)
    of the field can be obtained from the [`discriminant()`](#sympy.polys.domains.AlgebraicField.discriminant
    "sympy.polys.domains.AlgebraicField.discriminant") method, and an [integral basis](https://en.wikipedia.org/wiki/Algebraic_number_field#Integral_basis)
    from the [`integral_basis()`](#sympy.polys.domains.AlgebraicField.integral_basis
    "sympy.polys.domains.AlgebraicField.integral_basis") method. The latter returns
    a list of [`ANP`](#sympy.polys.polyclasses.ANP "sympy.polys.polyclasses.ANP")
    instances by default, but can be made to return instances of [`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr") or [`AlgebraicNumber`](../core.html#sympy.core.numbers.AlgebraicNumber
    "sympy.core.numbers.AlgebraicNumber") by passing a `fmt` argument. The maximal
    order, or ring of integers, of the field can also be obtained from the [`maximal_order()`](#sympy.polys.domains.AlgebraicField.maximal_order
    "sympy.polys.domains.AlgebraicField.maximal_order") method, as a [`Submodule`](numberfields.html#sympy.polys.numberfields.modules.Submodule
    "sympy.polys.numberfields.modules.Submodule").
  id: totrans-928
  prefs: []
  type: TYPE_NORMAL
  zh: 从域的[`discriminant()`](#sympy.polys.domains.AlgebraicField.discriminant "sympy.polys.domains.AlgebraicField.discriminant")方法可以获取其[判别式](https://en.wikipedia.org/wiki/Discriminant_of_an_algebraic_number_field)，从[`integral_basis()`](#sympy.polys.domains.AlgebraicField.integral_basis
    "sympy.polys.domains.AlgebraicField.integral_basis")方法可以获取[整基](https://en.wikipedia.org/wiki/Algebraic_number_field#Integral_basis)。后者默认返回[`ANP`](#sympy.polys.polyclasses.ANP
    "sympy.polys.polyclasses.ANP")实例的列表，但可以通过传递`fmt`参数使其返回[`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr")或[`AlgebraicNumber`](../core.html#sympy.core.numbers.AlgebraicNumber
    "sympy.core.numbers.AlgebraicNumber")实例。域的最大秩，或整数环，也可以从[`maximal_order()`](#sympy.polys.domains.AlgebraicField.maximal_order
    "sympy.polys.domains.AlgebraicField.maximal_order")方法获取，作为[`Submodule`](numberfields.html#sympy.polys.numberfields.modules.Submodule
    "sympy.polys.numberfields.modules.Submodule")。
- en: '[PRE347]'
  id: totrans-929
  prefs: []
  type: TYPE_PRE
  zh: '[PRE347]'
- en: The factorization of a rational prime into prime ideals of the field is computed
    by the [`primes_above()`](#sympy.polys.domains.AlgebraicField.primes_above "sympy.polys.domains.AlgebraicField.primes_above")
    method, which returns a list of [`PrimeIdeal`](numberfields.html#sympy.polys.numberfields.primes.PrimeIdeal
    "sympy.polys.numberfields.primes.PrimeIdeal") instances.
  id: totrans-930
  prefs: []
  type: TYPE_NORMAL
  zh: 有理素数在域的素理想中的分解由[`primes_above()`](#sympy.polys.domains.AlgebraicField.primes_above
    "sympy.polys.domains.AlgebraicField.primes_above")方法计算，该方法返回[`PrimeIdeal`](numberfields.html#sympy.polys.numberfields.primes.PrimeIdeal
    "sympy.polys.numberfields.primes.PrimeIdeal")实例的列表。
- en: '[PRE348]'
  id: totrans-931
  prefs: []
  type: TYPE_PRE
  zh: '[PRE348]'
- en: The Galois group of the Galois closure of the field can be computed (when the
    minimal polynomial of the field is of sufficiently small degree).
  id: totrans-932
  prefs: []
  type: TYPE_NORMAL
  zh: 当域的最小多项式的次数足够小时，可以计算域的Galois闭包的Galois群。
- en: '[PRE349]'
  id: totrans-933
  prefs: []
  type: TYPE_PRE
  zh: '[PRE349]'
- en: Notes
  id: totrans-934
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: It is not currently possible to generate an algebraic extension over any domain
    other than [QQ](#qq). Ideally it would be possible to generate extensions like
    `QQ(x)(sqrt(x**2 - 2))`. This is equivalent to the quotient ring `QQ(x)[y]/(y**2
    - x**2 + 2)` and there are two implementations of this kind of quotient ring/extension
    in the [`QuotientRing`](#sympy.polys.domains.quotientring.QuotientRing "sympy.polys.domains.quotientring.QuotientRing")
    and [`MonogenicFiniteExtension`](agca.html#sympy.polys.agca.extensions.MonogenicFiniteExtension
    "sympy.polys.agca.extensions.MonogenicFiniteExtension") classes. Each of those
    implementations needs some work to make them fully usable though.
  id: totrans-935
  prefs: []
  type: TYPE_NORMAL
  zh: 目前无法在除[QQ](#qq)以外的任何域上生成代数扩展。理想情况下，可以生成类似`QQ(x)(sqrt(x**2 - 2))`的扩展。这等同于商环`QQ(x)[y]/(y**2
    - x**2 + 2)`，在[`QuotientRing`](#sympy.polys.domains.quotientring.QuotientRing
    "sympy.polys.domains.quotientring.QuotientRing")和[`MonogenicFiniteExtension`](agca.html#sympy.polys.agca.extensions.MonogenicFiniteExtension
    "sympy.polys.agca.extensions.MonogenicFiniteExtension")类中有两种实现这种商环/扩展。尽管如此，这些实现都需要一些工作才能完全可用。
- en: '[PRE350]'
  id: totrans-936
  prefs: []
  type: TYPE_PRE
  zh: '[PRE350]'
- en: Returns an algebraic field, i.e. \(\mathbb{Q}(\alpha, \ldots)\).
  id: totrans-937
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个代数域，即\(\mathbb{Q}(\alpha, \ldots)\)。
- en: '[PRE351]'
  id: totrans-938
  prefs: []
  type: TYPE_PRE
  zh: '[PRE351]'
- en: Returns denominator of `a`.
  id: totrans-939
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`a`的分母。
- en: '[PRE352]'
  id: totrans-940
  prefs: []
  type: TYPE_PRE
  zh: '[PRE352]'
- en: Get the discriminant of the field.
  id: totrans-941
  prefs: []
  type: TYPE_NORMAL
  zh: 获取域的判别式。
- en: '[PRE353]'
  id: totrans-942
  prefs: []
  type: TYPE_PRE
  zh: '[PRE353]'
- en: alias of [`ANP`](#sympy.polys.polyclasses.ANP "sympy.polys.polyclasses.ANP")
  id: totrans-943
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ANP`](#sympy.polys.polyclasses.ANP "sympy.polys.polyclasses.ANP")的别名'
- en: '[PRE354]'
  id: totrans-944
  prefs: []
  type: TYPE_PRE
  zh: '[PRE354]'
- en: Primitive element used for the extension.
  id: totrans-945
  prefs: []
  type: TYPE_NORMAL
  zh: 用于扩展的原始元素。
- en: '[PRE355]'
  id: totrans-946
  prefs: []
  type: TYPE_PRE
  zh: '[PRE355]'
- en: '[PRE356]'
  id: totrans-947
  prefs: []
  type: TYPE_PRE
  zh: '[PRE356]'
- en: Convert AlgebraicField element ‘a’ to another AlgebraicField
  id: totrans-948
  prefs: []
  type: TYPE_NORMAL
  zh: 将AlgebraicField元素‘a’转换为另一个AlgebraicField
- en: '[PRE357]'
  id: totrans-949
  prefs: []
  type: TYPE_PRE
  zh: '[PRE357]'
- en: Convert a GaussianInteger element ‘a’ to `dtype`.
  id: totrans-950
  prefs: []
  type: TYPE_NORMAL
  zh: 将高斯整数元素‘a’转换为`dtype`。
- en: '[PRE358]'
  id: totrans-951
  prefs: []
  type: TYPE_PRE
  zh: '[PRE358]'
- en: Convert a GaussianRational element ‘a’ to `dtype`.
  id: totrans-952
  prefs: []
  type: TYPE_NORMAL
  zh: 将高斯有理数元素‘a’转换为`dtype`。
- en: '[PRE359]'
  id: totrans-953
  prefs: []
  type: TYPE_PRE
  zh: '[PRE359]'
- en: Convert a Python `Fraction` object to `dtype`.
  id: totrans-954
  prefs: []
  type: TYPE_NORMAL
  zh: 将Python的`Fraction`对象转换为`dtype`。
- en: '[PRE360]'
  id: totrans-955
  prefs: []
  type: TYPE_PRE
  zh: '[PRE360]'
- en: Convert a GMPY `mpq` object to `dtype`.
  id: totrans-956
  prefs: []
  type: TYPE_NORMAL
  zh: 将GMPY的`mpq`对象转换为`dtype`。
- en: '[PRE361]'
  id: totrans-957
  prefs: []
  type: TYPE_PRE
  zh: '[PRE361]'
- en: Convert a Python `Fraction` object to `dtype`.
  id: totrans-958
  prefs: []
  type: TYPE_NORMAL
  zh: 将Python的`Fraction`对象转换为`dtype`。
- en: '[PRE362]'
  id: totrans-959
  prefs: []
  type: TYPE_PRE
  zh: '[PRE362]'
- en: Convert a mpmath `mpf` object to `dtype`.
  id: totrans-960
  prefs: []
  type: TYPE_NORMAL
  zh: 将mpmath的`mpf`对象转换为`dtype`。
- en: '[PRE363]'
  id: totrans-961
  prefs: []
  type: TYPE_PRE
  zh: '[PRE363]'
- en: Convert a Python `int` object to `dtype`.
  id: totrans-962
  prefs: []
  type: TYPE_NORMAL
  zh: 将Python的`int`对象转换为`dtype`。
- en: '[PRE364]'
  id: totrans-963
  prefs: []
  type: TYPE_PRE
  zh: '[PRE364]'
- en: Convert a GMPY `mpz` object to `dtype`.
  id: totrans-964
  prefs: []
  type: TYPE_NORMAL
  zh: 将GMPY的`mpz`对象转换为`dtype`。
- en: '[PRE365]'
  id: totrans-965
  prefs: []
  type: TYPE_PRE
  zh: '[PRE365]'
- en: Convert a Python `int` object to `dtype`.
  id: totrans-966
  prefs: []
  type: TYPE_NORMAL
  zh: 将Python的`int`对象转换为`dtype`。
- en: '[PRE366]'
  id: totrans-967
  prefs: []
  type: TYPE_PRE
  zh: '[PRE366]'
- en: Convert SymPy’s expression to `dtype`.
  id: totrans-968
  prefs: []
  type: TYPE_NORMAL
  zh: 将SymPy的表达式转换为`dtype`。
- en: '[PRE367]'
  id: totrans-969
  prefs: []
  type: TYPE_PRE
  zh: '[PRE367]'
- en: Compute the Galois group of the Galois closure of this field.
  id: totrans-970
  prefs: []
  type: TYPE_NORMAL
  zh: 计算此域的Galois闭包的Galois群。
- en: Examples
  id: totrans-971
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'If the field is Galois, the order of the group will equal the degree of the
    field:'
  id: totrans-972
  prefs: []
  type: TYPE_NORMAL
  zh: 如果域是Galois域，则群的阶数将等于域的次数：
- en: '[PRE368]'
  id: totrans-973
  prefs: []
  type: TYPE_PRE
  zh: '[PRE368]'
- en: 'If the field is not Galois, then its Galois closure is a proper extension,
    and the order of the Galois group will be greater than the degree of the field:'
  id: totrans-974
  prefs: []
  type: TYPE_NORMAL
  zh: 如果域不是Galois域，则其Galois闭包是一个适当的扩展，并且Galois群的阶数将大于域的次数：
- en: '[PRE369]'
  id: totrans-975
  prefs: []
  type: TYPE_PRE
  zh: '[PRE369]'
- en: See also
  id: totrans-976
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.polys.numberfields.galoisgroups.galois_group`](numberfields.html#sympy.polys.numberfields.galoisgroups.galois_group
    "sympy.polys.numberfields.galoisgroups.galois_group")'
  id: totrans-977
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.polys.numberfields.galoisgroups.galois_group`](numberfields.html#sympy.polys.numberfields.galoisgroups.galois_group
    "sympy.polys.numberfields.galoisgroups.galois_group")的别名'
- en: '[PRE370]'
  id: totrans-978
  prefs: []
  type: TYPE_PRE
  zh: '[PRE370]'
- en: Returns a ring associated with `self`.
  id: totrans-979
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与`self`相关联的环。
- en: '[PRE371]'
  id: totrans-980
  prefs: []
  type: TYPE_PRE
  zh: '[PRE371]'
- en: Get an integral basis for the field.
  id: totrans-981
  prefs: []
  type: TYPE_NORMAL
  zh: 获取域的整数基。
- en: 'Parameters:'
  id: totrans-982
  prefs: []
  type: TYPE_NORMAL
  zh: '参数:'
- en: '**fmt** : str, None, optional (default=None)'
  id: totrans-983
  prefs: []
  type: TYPE_NORMAL
  zh: '**fmt**：str，可选（默认为None）'
- en: If `None`, return a list of [`ANP`](#sympy.polys.polyclasses.ANP "sympy.polys.polyclasses.ANP")
    instances. If `"sympy"`, convert each element of the list to an [`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr"), using `self.to_sympy()`. If `"alg"`, convert each element
    of the list to an [`AlgebraicNumber`](../core.html#sympy.core.numbers.AlgebraicNumber
    "sympy.core.numbers.AlgebraicNumber"), using `self.to_alg_num()`.
  id: totrans-984
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果为`None`，则返回[`ANP`](#sympy.polys.polyclasses.ANP "sympy.polys.polyclasses.ANP")实例的列表。如果为`"sympy"`，则使用`self.to_sympy()`将列表中的每个元素转换为[`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr")。如果为`"alg"`，则使用`self.to_alg_num()`将列表中的每个元素转换为[`AlgebraicNumber`](../core.html#sympy.core.numbers.AlgebraicNumber
    "sympy.core.numbers.AlgebraicNumber")。
- en: Examples
  id: totrans-985
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE372]'
  id: totrans-986
  prefs: []
  type: TYPE_PRE
  zh: '[PRE372]'
- en: 'In the last two cases we get legible expressions, which print somewhat differently
    because of the different types involved:'
  id: totrans-987
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后两种情况下，我们得到易读的表达式，由于涉及不同类型，打印方式略有不同：
- en: '[PRE373]'
  id: totrans-988
  prefs: []
  type: TYPE_PRE
  zh: '[PRE373]'
- en: See also
  id: totrans-989
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`to_sympy`](#sympy.polys.domains.AlgebraicField.to_sympy "sympy.polys.domains.AlgebraicField.to_sympy"),
    [`to_alg_num`](#sympy.polys.domains.AlgebraicField.to_alg_num "sympy.polys.domains.AlgebraicField.to_alg_num"),
    [`maximal_order`](#sympy.polys.domains.AlgebraicField.maximal_order "sympy.polys.domains.AlgebraicField.maximal_order")'
  id: totrans-990
  prefs: []
  type: TYPE_NORMAL
  zh: '[`to_sympy`](#sympy.polys.domains.AlgebraicField.to_sympy "sympy.polys.domains.AlgebraicField.to_sympy"),
    [`to_alg_num`](#sympy.polys.domains.AlgebraicField.to_alg_num "sympy.polys.domains.AlgebraicField.to_alg_num"),
    [`maximal_order`](#sympy.polys.domains.AlgebraicField.maximal_order "sympy.polys.domains.AlgebraicField.maximal_order")'
- en: '[PRE374]'
  id: totrans-991
  prefs: []
  type: TYPE_PRE
  zh: '[PRE374]'
- en: Returns True if `a` is negative.
  id: totrans-992
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`a`为负数，则返回True。
- en: '[PRE375]'
  id: totrans-993
  prefs: []
  type: TYPE_PRE
  zh: '[PRE375]'
- en: Returns True if `a` is non-negative.
  id: totrans-994
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`a`是非负数，则返回True。
- en: '[PRE376]'
  id: totrans-995
  prefs: []
  type: TYPE_PRE
  zh: '[PRE376]'
- en: Returns True if `a` is non-positive.
  id: totrans-996
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`a`是非正数，则返回True。
- en: '[PRE377]'
  id: totrans-997
  prefs: []
  type: TYPE_PRE
  zh: '[PRE377]'
- en: Returns True if `a` is positive.
  id: totrans-998
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`a`为正数，则返回True。
- en: '[PRE378]'
  id: totrans-999
  prefs: []
  type: TYPE_PRE
  zh: '[PRE378]'
- en: Compute the maximal order, or ring of integers, of the field.
  id: totrans-1000
  prefs: []
  type: TYPE_NORMAL
  zh: 计算字段的最大秩或整数环。
- en: 'Returns:'
  id: totrans-1001
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '[`Submodule`](numberfields.html#sympy.polys.numberfields.modules.Submodule
    "sympy.polys.numberfields.modules.Submodule").'
  id: totrans-1002
  prefs: []
  type: TYPE_NORMAL
  zh: '[`子模块`](numberfields.html#sympy.polys.numberfields.modules.Submodule "sympy.polys.numberfields.modules.Submodule")。'
- en: See also
  id: totrans-1003
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`integral_basis`](#sympy.polys.domains.AlgebraicField.integral_basis "sympy.polys.domains.AlgebraicField.integral_basis")'
  id: totrans-1004
  prefs: []
  type: TYPE_NORMAL
  zh: '[`整体基础`](#sympy.polys.domains.AlgebraicField.integral_basis "sympy.polys.domains.AlgebraicField.integral_basis")'
- en: '[PRE379]'
  id: totrans-1005
  prefs: []
  type: TYPE_PRE
  zh: '[PRE379]'
- en: Minimal polynomial for the primitive element of the extension.
  id: totrans-1006
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展的原始元素的最小多项式。
- en: '[PRE380]'
  id: totrans-1007
  prefs: []
  type: TYPE_PRE
  zh: '[PRE380]'
- en: '[PRE381]'
  id: totrans-1008
  prefs: []
  type: TYPE_PRE
  zh: '[PRE381]'
- en: Returns numerator of `a`.
  id: totrans-1009
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`a`的分子。
- en: '[PRE382]'
  id: totrans-1010
  prefs: []
  type: TYPE_PRE
  zh: '[PRE382]'
- en: Original elements given to generate the extension.
  id: totrans-1011
  prefs: []
  type: TYPE_NORMAL
  zh: 给定用于生成扩展的原始元素。
- en: '[PRE383]'
  id: totrans-1012
  prefs: []
  type: TYPE_PRE
  zh: '[PRE383]'
- en: '[PRE384]'
  id: totrans-1013
  prefs: []
  type: TYPE_PRE
  zh: '[PRE384]'
- en: Compute the prime ideals lying above a given rational prime *p*.
  id: totrans-1014
  prefs: []
  type: TYPE_NORMAL
  zh: 计算位于给定有理素数*p*之上的素数理想。
- en: '[PRE385]'
  id: totrans-1015
  prefs: []
  type: TYPE_PRE
  zh: '[PRE385]'
- en: Convert `a` of `dtype` to an [`AlgebraicNumber`](../core.html#sympy.core.numbers.AlgebraicNumber
    "sympy.core.numbers.AlgebraicNumber").
  id: totrans-1016
  prefs: []
  type: TYPE_NORMAL
  zh: 将`dtype`的`a`转换为[`AlgebraicNumber`](../core.html#sympy.core.numbers.AlgebraicNumber
    "sympy.core.numbers.AlgebraicNumber")。
- en: '[PRE386]'
  id: totrans-1017
  prefs: []
  type: TYPE_PRE
  zh: '[PRE386]'
- en: 'Convert `a` of `dtype` to a SymPy object.  ## RR'
  id: totrans-1018
  prefs: []
  type: TYPE_NORMAL
  zh: 将`dtype`的`a`转换为SymPy对象。## RR
- en: '[PRE387]'
  id: totrans-1019
  prefs: []
  type: TYPE_PRE
  zh: '[PRE387]'
- en: Real numbers up to the given precision.
  id: totrans-1020
  prefs: []
  type: TYPE_NORMAL
  zh: 给定精度的实数。
- en: '[PRE388]'
  id: totrans-1021
  prefs: []
  type: TYPE_PRE
  zh: '[PRE388]'
- en: Check if `a` and `b` are almost equal.
  id: totrans-1022
  prefs: []
  type: TYPE_NORMAL
  zh: 检查`a`和`b`是否几乎相等。
- en: '[PRE389]'
  id: totrans-1023
  prefs: []
  type: TYPE_PRE
  zh: '[PRE389]'
- en: Non-negative square root for `a >= 0` and `None` otherwise.
  id: totrans-1024
  prefs: []
  type: TYPE_NORMAL
  zh: 非负数的平方根，对于`a >= 0`，否则为`None`。
- en: Explanation
  id: totrans-1025
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: The square root may be slightly inaccurate due to floating point rounding error.
  id: totrans-1026
  prefs: []
  type: TYPE_NORMAL
  zh: 由于浮点舍入误差，平方根可能略有不准确。
- en: '[PRE390]'
  id: totrans-1027
  prefs: []
  type: TYPE_PRE
  zh: '[PRE390]'
- en: Convert SymPy’s number to `dtype`.
  id: totrans-1028
  prefs: []
  type: TYPE_NORMAL
  zh: 将SymPy的数字转换为`dtype`。
- en: '[PRE391]'
  id: totrans-1029
  prefs: []
  type: TYPE_PRE
  zh: '[PRE391]'
- en: Returns GCD of `a` and `b`.
  id: totrans-1030
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`a`和`b`的最大公约数。
- en: '[PRE392]'
  id: totrans-1031
  prefs: []
  type: TYPE_PRE
  zh: '[PRE392]'
- en: Returns an exact domain associated with `self`.
  id: totrans-1032
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与`self`相关的精确域。
- en: '[PRE393]'
  id: totrans-1033
  prefs: []
  type: TYPE_PRE
  zh: '[PRE393]'
- en: Returns a ring associated with `self`.
  id: totrans-1034
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与`self`相关的环。
- en: '[PRE394]'
  id: totrans-1035
  prefs: []
  type: TYPE_PRE
  zh: '[PRE394]'
- en: Returns `True` if `a >= 0` and `False` otherwise.
  id: totrans-1036
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`a >= 0`则返回True，否则返回False。
- en: '[PRE395]'
  id: totrans-1037
  prefs: []
  type: TYPE_PRE
  zh: '[PRE395]'
- en: Returns LCM of `a` and `b`.
  id: totrans-1038
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`a`和`b`的最小公倍数。
- en: '[PRE396]'
  id: totrans-1039
  prefs: []
  type: TYPE_PRE
  zh: '[PRE396]'
- en: Convert a real number to rational number.
  id: totrans-1040
  prefs: []
  type: TYPE_NORMAL
  zh: 将实数转换为有理数。
- en: '[PRE397]'
  id: totrans-1041
  prefs: []
  type: TYPE_PRE
  zh: '[PRE397]'
- en: Convert `element` to SymPy number.
  id: totrans-1042
  prefs: []
  type: TYPE_NORMAL
  zh: 将`element`转换为SymPy数字。
- en: '[PRE398]'
  id: totrans-1043
  prefs: []
  type: TYPE_PRE
  zh: '[PRE398]'
- en: 'An element of a real domain.  ## CC'
  id: totrans-1044
  prefs: []
  type: TYPE_NORMAL
  zh: 实域的一个元素。## CC
- en: '[PRE399]'
  id: totrans-1045
  prefs: []
  type: TYPE_PRE
  zh: '[PRE399]'
- en: Complex numbers up to the given precision.
  id: totrans-1046
  prefs: []
  type: TYPE_NORMAL
  zh: 给定精度的复数。
- en: '[PRE400]'
  id: totrans-1047
  prefs: []
  type: TYPE_PRE
  zh: '[PRE400]'
- en: Check if `a` and `b` are almost equal.
  id: totrans-1048
  prefs: []
  type: TYPE_NORMAL
  zh: 检查`a`和`b`是否几乎相等。
- en: '[PRE401]'
  id: totrans-1049
  prefs: []
  type: TYPE_PRE
  zh: '[PRE401]'
- en: Returns the principal complex square root of `a`.
  id: totrans-1050
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`a`的主复数平方根。
- en: Explanation
  id: totrans-1051
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: The argument of the principal square root is always within \((-\frac{\pi}{2},
    \frac{\pi}{2}]\). The square root may be slightly inaccurate due to floating point
    rounding error.
  id: totrans-1052
  prefs: []
  type: TYPE_NORMAL
  zh: 主平方根的参数始终在\((-\frac{\pi}{2}, \frac{\pi}{2}]\)之间。由于浮点舍入误差，平方根可能略有不准确。
- en: '[PRE402]'
  id: totrans-1053
  prefs: []
  type: TYPE_PRE
  zh: '[PRE402]'
- en: Convert SymPy’s number to `dtype`.
  id: totrans-1054
  prefs: []
  type: TYPE_NORMAL
  zh: 将SymPy的数字转换为`dtype`。
- en: '[PRE403]'
  id: totrans-1055
  prefs: []
  type: TYPE_PRE
  zh: '[PRE403]'
- en: Returns GCD of `a` and `b`.
  id: totrans-1056
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`a`和`b`的最大公约数。
- en: '[PRE404]'
  id: totrans-1057
  prefs: []
  type: TYPE_PRE
  zh: '[PRE404]'
- en: Returns an exact domain associated with `self`.
  id: totrans-1058
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与`self`相关的精确域。
- en: '[PRE405]'
  id: totrans-1059
  prefs: []
  type: TYPE_PRE
  zh: '[PRE405]'
- en: Returns a ring associated with `self`.
  id: totrans-1060
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与`self`相关的环。
- en: '[PRE406]'
  id: totrans-1061
  prefs: []
  type: TYPE_PRE
  zh: '[PRE406]'
- en: Returns `False` for any `ComplexElement`.
  id: totrans-1062
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何`ComplexElement`返回`False`。
- en: '[PRE407]'
  id: totrans-1063
  prefs: []
  type: TYPE_PRE
  zh: '[PRE407]'
- en: Returns `False` for any `ComplexElement`.
  id: totrans-1064
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何`ComplexElement`返回`False`。
- en: '[PRE408]'
  id: totrans-1065
  prefs: []
  type: TYPE_PRE
  zh: '[PRE408]'
- en: Returns `False` for any `ComplexElement`.
  id: totrans-1066
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何`ComplexElement`返回`False`。
- en: '[PRE409]'
  id: totrans-1067
  prefs: []
  type: TYPE_PRE
  zh: '[PRE409]'
- en: Returns `False` for any `ComplexElement`.
  id: totrans-1068
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何`ComplexElement`返回`False`。
- en: '[PRE410]'
  id: totrans-1069
  prefs: []
  type: TYPE_PRE
  zh: '[PRE410]'
- en: Returns `True`. Every complex number has a complex square root.
  id: totrans-1070
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `True`。每个复数都有一个复平方根。
- en: '[PRE411]'
  id: totrans-1071
  prefs: []
  type: TYPE_PRE
  zh: '[PRE411]'
- en: Returns LCM of `a` and `b`.
  id: totrans-1072
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 \(a\) 和 \(b\) 的最小公倍数。
- en: '[PRE412]'
  id: totrans-1073
  prefs: []
  type: TYPE_PRE
  zh: '[PRE412]'
- en: Convert `element` to SymPy number.
  id: totrans-1074
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `element` 转换为 SymPy 数字。
- en: '[PRE413]'
  id: totrans-1075
  prefs: []
  type: TYPE_PRE
  zh: '[PRE413]'
- en: 'An element of a complex domain.  ## K[x]'
  id: totrans-1076
  prefs: []
  type: TYPE_NORMAL
  zh: '复杂域的一个元素。  ## K[x]'
- en: '[PRE414]'
  id: totrans-1077
  prefs: []
  type: TYPE_PRE
  zh: '[PRE414]'
- en: A class for representing multivariate polynomial rings.
  id: totrans-1078
  prefs: []
  type: TYPE_NORMAL
  zh: 表示多变量多项式环的类。
- en: '[PRE415]'
  id: totrans-1079
  prefs: []
  type: TYPE_PRE
  zh: '[PRE415]'
- en: Returns factorial of \(a\).
  id: totrans-1080
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 \(a\) 的阶乘。
- en: '[PRE416]'
  id: totrans-1081
  prefs: []
  type: TYPE_PRE
  zh: '[PRE416]'
- en: Convert an algebraic number to `dtype`.
  id: totrans-1082
  prefs: []
  type: TYPE_NORMAL
  zh: 将代数数转换为 `dtype`。
- en: '[PRE417]'
  id: totrans-1083
  prefs: []
  type: TYPE_PRE
  zh: '[PRE417]'
- en: Convert a mpmath \(mpf\) object to \(dtype\).
  id: totrans-1084
  prefs: []
  type: TYPE_NORMAL
  zh: 将 mpmath \(mpf\) 对象转换为 `dtype`。
- en: '[PRE418]'
  id: totrans-1085
  prefs: []
  type: TYPE_PRE
  zh: '[PRE418]'
- en: Convert a rational function to `dtype`.
  id: totrans-1086
  prefs: []
  type: TYPE_NORMAL
  zh: 将有理函数转换为 `dtype`。
- en: '[PRE419]'
  id: totrans-1087
  prefs: []
  type: TYPE_PRE
  zh: '[PRE419]'
- en: Convert a \(GaussianInteger\) object to \(dtype\).
  id: totrans-1088
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `GaussianInteger` 对象转换为 `dtype`。
- en: '[PRE420]'
  id: totrans-1089
  prefs: []
  type: TYPE_PRE
  zh: '[PRE420]'
- en: Convert a \(GaussianRational\) object to \(dtype\).
  id: totrans-1090
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `GaussianRational` 对象转换为 `dtype`。
- en: '[PRE421]'
  id: totrans-1091
  prefs: []
  type: TYPE_PRE
  zh: '[PRE421]'
- en: Convert from old poly ring to `dtype`.
  id: totrans-1092
  prefs: []
  type: TYPE_NORMAL
  zh: 从旧多项式环转换为 `dtype`。
- en: '[PRE422]'
  id: totrans-1093
  prefs: []
  type: TYPE_PRE
  zh: '[PRE422]'
- en: Convert a polynomial to `dtype`.
  id: totrans-1094
  prefs: []
  type: TYPE_NORMAL
  zh: 将多项式转换为 `dtype`。
- en: '[PRE423]'
  id: totrans-1095
  prefs: []
  type: TYPE_PRE
  zh: '[PRE423]'
- en: Convert a Python \(Fraction\) object to \(dtype\).
  id: totrans-1096
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python `Fraction` 对象转换为 `dtype`。
- en: '[PRE424]'
  id: totrans-1097
  prefs: []
  type: TYPE_PRE
  zh: '[PRE424]'
- en: Convert a GMPY \(mpq\) object to \(dtype\).
  id: totrans-1098
  prefs: []
  type: TYPE_NORMAL
  zh: 将 GMPY \(mpq\) 对象转换为 `dtype`。
- en: '[PRE425]'
  id: totrans-1099
  prefs: []
  type: TYPE_PRE
  zh: '[PRE425]'
- en: Convert a Python \(Fraction\) object to \(dtype\).
  id: totrans-1100
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python `Fraction` 对象转换为 `dtype`。
- en: '[PRE426]'
  id: totrans-1101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE426]'
- en: Convert a mpmath \(mpf\) object to \(dtype\).
  id: totrans-1102
  prefs: []
  type: TYPE_NORMAL
  zh: 将 mpmath `mpf` 对象转换为 `dtype`。
- en: '[PRE427]'
  id: totrans-1103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE427]'
- en: Convert a Python \(int\) object to \(dtype\).
  id: totrans-1104
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python \(int\) 对象转换为 \(dtype\)。
- en: '[PRE428]'
  id: totrans-1105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE428]'
- en: Convert a GMPY \(mpz\) object to \(dtype\).
  id: totrans-1106
  prefs: []
  type: TYPE_NORMAL
  zh: 将 GMPY \(mpz\) 对象转换为 \(dtype\)。
- en: '[PRE429]'
  id: totrans-1107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE429]'
- en: Convert a Python \(int\) object to \(dtype\).
  id: totrans-1108
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python \(int\) 对象转换为 \(dtype\)。
- en: '[PRE430]'
  id: totrans-1109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE430]'
- en: Convert SymPy’s expression to \(dtype\).
  id: totrans-1110
  prefs: []
  type: TYPE_NORMAL
  zh: 将 SymPy 表达式转换为 \(dtype\)。
- en: '[PRE431]'
  id: totrans-1111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE431]'
- en: Returns GCD of \(a\) and \(b\).
  id: totrans-1112
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 \(a\) 和 \(b\) 的最大公约数。
- en: '[PRE432]'
  id: totrans-1113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE432]'
- en: Extended GCD of \(a\) and \(b\).
  id: totrans-1114
  prefs: []
  type: TYPE_NORMAL
  zh: \(a\) 和 \(b\) 的扩展最大公约数。
- en: '[PRE433]'
  id: totrans-1115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE433]'
- en: Returns a field associated with \(self\).
  id: totrans-1116
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与 \(self\) 关联的一个域。
- en: '[PRE434]'
  id: totrans-1117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE434]'
- en: Returns True if \(LC(a)\) is negative.
  id: totrans-1118
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `LC(a)` 是负则返回 True。
- en: '[PRE435]'
  id: totrans-1119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE435]'
- en: Returns True if \(LC(a)\) is non-negative.
  id: totrans-1120
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `LC(a)` 非负则返回 True。
- en: '[PRE436]'
  id: totrans-1121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE436]'
- en: Returns True if \(LC(a)\) is non-positive.
  id: totrans-1122
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `LC(a)` 非正则返回 True。
- en: '[PRE437]'
  id: totrans-1123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE437]'
- en: Returns True if \(LC(a)\) is positive.
  id: totrans-1124
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `LC(a)` 是正则返回 True。
- en: '[PRE438]'
  id: totrans-1125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE438]'
- en: Returns `True` if `a` is a unit of `self`
  id: totrans-1126
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `a` 是 `self` 的单元返回 `True`。
- en: '[PRE439]'
  id: totrans-1127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE439]'
- en: Returns LCM of \(a\) and \(b\).
  id: totrans-1128
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 \(a\) 和 \(b\) 的最小公倍数。
- en: '[PRE440]'
  id: totrans-1129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE440]'
- en: 'Convert \(a\) to a SymPy object.  ## K(x)'
  id: totrans-1130
  prefs: []
  type: TYPE_NORMAL
  zh: '将 \(a\) 转换为 SymPy 对象。  ## K(x)'
- en: '[PRE441]'
  id: totrans-1131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE441]'
- en: A class for representing multivariate rational function fields.
  id: totrans-1132
  prefs: []
  type: TYPE_NORMAL
  zh: 表示多变量有理函数域的类。
- en: '[PRE442]'
  id: totrans-1133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE442]'
- en: Returns denominator of `a`.
  id: totrans-1134
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `a` 的分母。
- en: '[PRE443]'
  id: totrans-1135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE443]'
- en: Returns factorial of `a`.
  id: totrans-1136
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `a` 的阶乘。
- en: '[PRE444]'
  id: totrans-1137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE444]'
- en: Convert an algebraic number to `dtype`.
  id: totrans-1138
  prefs: []
  type: TYPE_NORMAL
  zh: 将代数数转换为 `dtype`。
- en: '[PRE445]'
  id: totrans-1139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE445]'
- en: Convert a mpmath `mpf` object to `dtype`.
  id: totrans-1140
  prefs: []
  type: TYPE_NORMAL
  zh: 将 mpmath `mpf` 对象转换为 `dtype`。
- en: '[PRE446]'
  id: totrans-1141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE446]'
- en: Convert a rational function to `dtype`.
  id: totrans-1142
  prefs: []
  type: TYPE_NORMAL
  zh: 将有理函数转换为 `dtype`。
- en: '[PRE447]'
  id: totrans-1143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE447]'
- en: Convert a `GaussianInteger` object to `dtype`.
  id: totrans-1144
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `GaussianInteger` 对象转换为 `dtype`。
- en: '[PRE448]'
  id: totrans-1145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE448]'
- en: Convert a `GaussianRational` object to `dtype`.
  id: totrans-1146
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `GaussianRational` 对象转换为 `dtype`。
- en: '[PRE449]'
  id: totrans-1147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE449]'
- en: Convert a polynomial to `dtype`.
  id: totrans-1148
  prefs: []
  type: TYPE_NORMAL
  zh: 将多项式转换为 `dtype`。
- en: '[PRE450]'
  id: totrans-1149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE450]'
- en: Convert a Python `Fraction` object to `dtype`.
  id: totrans-1150
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python `Fraction` 对象转换为 `dtype`。
- en: '[PRE451]'
  id: totrans-1151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE451]'
- en: Convert a GMPY `mpq` object to `dtype`.
  id: totrans-1152
  prefs: []
  type: TYPE_NORMAL
  zh: 将 GMPY `mpq` 对象转换为 `dtype`。
- en: '[PRE452]'
  id: totrans-1153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE452]'
- en: Convert a Python `Fraction` object to `dtype`.
  id: totrans-1154
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python `Fraction` 对象转换为 `dtype`。
- en: '[PRE453]'
  id: totrans-1155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE453]'
- en: Convert a mpmath `mpf` object to `dtype`.
  id: totrans-1156
  prefs: []
  type: TYPE_NORMAL
  zh: 将 mpmath `mpf` 对象转换为 `dtype`。
- en: '[PRE454]'
  id: totrans-1157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE454]'
- en: Convert a Python `int` object to `dtype`.
  id: totrans-1158
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python `int` 对象转换为 `dtype`。
- en: '[PRE455]'
  id: totrans-1159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE455]'
- en: Convert a GMPY `mpz` object to `dtype`.
  id: totrans-1160
  prefs: []
  type: TYPE_NORMAL
  zh: 将 GMPY `mpz` 对象转换为 `dtype`。
- en: '[PRE456]'
  id: totrans-1161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE456]'
- en: Convert a Python `int` object to `dtype`.
  id: totrans-1162
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python `int` 对象转换为 `dtype`。
- en: '[PRE457]'
  id: totrans-1163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE457]'
- en: Convert SymPy’s expression to `dtype`.
  id: totrans-1164
  prefs: []
  type: TYPE_NORMAL
  zh: 将 SymPy 表达式转换为 `dtype`。
- en: '[PRE458]'
  id: totrans-1165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE458]'
- en: Returns a field associated with `self`.
  id: totrans-1166
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与 `self` 关联的一个域。
- en: '[PRE459]'
  id: totrans-1167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE459]'
- en: Returns True if `LC(a)` is negative.
  id: totrans-1168
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `LC(a)` 是负则返回 True。
- en: '[PRE460]'
  id: totrans-1169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE460]'
- en: Returns True if `LC(a)` is non-negative.
  id: totrans-1170
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `LC(a)` 非负则返回 True。
- en: '[PRE461]'
  id: totrans-1171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE461]'
- en: Returns True if `LC(a)` is non-positive.
  id: totrans-1172
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `LC(a)` 非正则返回 True。
- en: '[PRE462]'
  id: totrans-1173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE462]'
- en: Returns True if `LC(a)` is positive.
  id: totrans-1174
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `LC(a)` 是正则返回 True。
- en: '[PRE463]'
  id: totrans-1175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE463]'
- en: Returns numerator of `a`.
  id: totrans-1176
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `a` 的分子。
- en: '[PRE464]'
  id: totrans-1177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE464]'
- en: 'Convert `a` to a SymPy object.  ## EX'
  id: totrans-1178
  prefs: []
  type: TYPE_NORMAL
  zh: '将 `a` 转换为 SymPy 对象。  ## EX'
- en: '[PRE465]'
  id: totrans-1179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE465]'
- en: A class for arbitrary expressions.
  id: totrans-1180
  prefs: []
  type: TYPE_NORMAL
  zh: 一个表示任意表达式的类。
- en: '[PRE466]'
  id: totrans-1181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE466]'
- en: An arbitrary expression.
  id: totrans-1182
  prefs: []
  type: TYPE_NORMAL
  zh: 任意表达式。
- en: '[PRE467]'
  id: totrans-1183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE467]'
- en: Returns denominator of `a`.
  id: totrans-1184
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `a` 的分母。
- en: '[PRE468]'
  id: totrans-1185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE468]'
- en: alias of [`Expression`](#sympy.polys.domains.expressiondomain.ExpressionDomain.Expression
    "sympy.polys.domains.expressiondomain.ExpressionDomain.Expression")
  id: totrans-1186
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Expression`](#sympy.polys.domains.expressiondomain.ExpressionDomain.Expression
    "sympy.polys.domains.expressiondomain.ExpressionDomain.Expression") 的别名。'
- en: '[PRE469]'
  id: totrans-1187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE469]'
- en: Convert an `ANP` object to `dtype`.
  id: totrans-1188
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `ANP` 对象转换为 `dtype`。
- en: '[PRE470]'
  id: totrans-1189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE470]'
- en: Convert a mpmath `mpc` object to `dtype`.
  id: totrans-1190
  prefs: []
  type: TYPE_NORMAL
  zh: 将 mpmath `mpc` 对象转换为 `dtype`。
- en: '[PRE471]'
  id: totrans-1191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE471]'
- en: Convert a `EX` object to `dtype`.
  id: totrans-1192
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `EX` 对象转换为 `dtype`。
- en: '[PRE472]'
  id: totrans-1193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE472]'
- en: Convert a `DMF` object to `dtype`.
  id: totrans-1194
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `DMF` 对象转换为 `dtype`。
- en: '[PRE473]'
  id: totrans-1195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE473]'
- en: Convert a `GaussianRational` object to `dtype`.
  id: totrans-1196
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `GaussianRational` 对象转换为 `dtype`。
- en: '[PRE474]'
  id: totrans-1197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE474]'
- en: Convert a `GaussianRational` object to `dtype`.
  id: totrans-1198
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `GaussianRational` 对象转换为 `dtype`。
- en: '[PRE475]'
  id: totrans-1199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE475]'
- en: Convert a `DMP` object to `dtype`.
  id: totrans-1200
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `DMP` 对象转换为 `dtype`。
- en: '[PRE476]'
  id: totrans-1201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE476]'
- en: Convert a Python `Fraction` object to `dtype`.
  id: totrans-1202
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python `Fraction` 对象转换为 `dtype`。
- en: '[PRE477]'
  id: totrans-1203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE477]'
- en: Convert a GMPY `mpq` object to `dtype`.
  id: totrans-1204
  prefs: []
  type: TYPE_NORMAL
  zh: 将 GMPY `mpq` 对象转换为 `dtype`。
- en: '[PRE478]'
  id: totrans-1205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE478]'
- en: Convert a Python `Fraction` object to `dtype`.
  id: totrans-1206
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Python `Fraction` 对象转换为 `dtype`。
- en: '[PRE479]'
  id: totrans-1207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE479]'
- en: Convert a mpmath `mpf` object to `dtype`.
  id: totrans-1208
  prefs: []
  type: TYPE_NORMAL
  zh: 将 mpmath `mpf` 对象转换为 `dtype`。
- en: '[PRE480]'
  id: totrans-1209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE480]'
- en: Convert a Python `int` object to `dtype`.
  id: totrans-1210
  prefs: []
  type: TYPE_NORMAL
  zh: 将Python的`int`对象转换为`dtype`。
- en: '[PRE481]'
  id: totrans-1211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE481]'
- en: Convert a GMPY `mpz` object to `dtype`.
  id: totrans-1212
  prefs: []
  type: TYPE_NORMAL
  zh: 将GMPY的`mpz`对象转换为`dtype`。
- en: '[PRE482]'
  id: totrans-1213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE482]'
- en: Convert a Python `int` object to `dtype`.
  id: totrans-1214
  prefs: []
  type: TYPE_NORMAL
  zh: 将Python的`int`对象转换为`dtype`。
- en: '[PRE483]'
  id: totrans-1215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE483]'
- en: Convert SymPy’s expression to `dtype`.
  id: totrans-1216
  prefs: []
  type: TYPE_NORMAL
  zh: 将SymPy表达式转换为`dtype`。
- en: '[PRE484]'
  id: totrans-1217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE484]'
- en: Returns a field associated with `self`.
  id: totrans-1218
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与`self`相关联的字段。
- en: '[PRE485]'
  id: totrans-1219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE485]'
- en: Returns a ring associated with `self`.
  id: totrans-1220
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与`self`相关联的环。
- en: '[PRE486]'
  id: totrans-1221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE486]'
- en: Returns True if `a` is negative.
  id: totrans-1222
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`a`为负数则返回True。
- en: '[PRE487]'
  id: totrans-1223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE487]'
- en: Returns True if `a` is non-negative.
  id: totrans-1224
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`a`为非负数则返回True。
- en: '[PRE488]'
  id: totrans-1225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE488]'
- en: Returns True if `a` is non-positive.
  id: totrans-1226
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`a`为非正数则返回True。
- en: '[PRE489]'
  id: totrans-1227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE489]'
- en: Returns True if `a` is positive.
  id: totrans-1228
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`a`为正数则返回True。
- en: '[PRE490]'
  id: totrans-1229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE490]'
- en: Returns numerator of `a`.
  id: totrans-1230
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`a`的分子。
- en: '[PRE491]'
  id: totrans-1231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE491]'
- en: Convert `a` to a SymPy object.
  id: totrans-1232
  prefs: []
  type: TYPE_NORMAL
  zh: 将`a`转换为SymPy对象。
- en: '[PRE492]'
  id: totrans-1233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE492]'
- en: An arbitrary expression.
  id: totrans-1234
  prefs: []
  type: TYPE_NORMAL
  zh: 任意表达式。
- en: Quotient ring
  id: totrans-1235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 商环
- en: '[PRE493]'
  id: totrans-1236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE493]'
- en: Class representing (commutative) quotient rings.
  id: totrans-1237
  prefs: []
  type: TYPE_NORMAL
  zh: 表示（交换）商环的类。
- en: You should not usually instantiate this by hand, instead use the constructor
    from the base ring in the construction.
  id: totrans-1238
  prefs: []
  type: TYPE_NORMAL
  zh: 通常不应手动实例化此对象，而是应在构造中使用基本环的构造函数。
- en: '[PRE494]'
  id: totrans-1239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE494]'
- en: 'Shorter versions are possible:'
  id: totrans-1240
  prefs: []
  type: TYPE_NORMAL
  zh: 可以有更短的版本：
- en: '[PRE495]'
  id: totrans-1241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE495]'
- en: '[PRE496]'
  id: totrans-1242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE496]'
- en: 'Attributes:'
  id: totrans-1243
  prefs: []
  type: TYPE_NORMAL
  zh: 属性：
- en: ring - the base ring
  id: totrans-1244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 环 - 基本环
- en: base_ideal - the ideal used to form the quotient
  id: totrans-1245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本理想 - 用于形成商的理想
- en: Sparse polynomials
  id: totrans-1246
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 稀疏多项式
- en: Sparse polynomials are represented as dictionaries.
  id: totrans-1247
  prefs: []
  type: TYPE_NORMAL
  zh: 稀疏多项式表示为字典。
- en: '[PRE497]'
  id: totrans-1248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE497]'
- en: Construct a polynomial ring returning `(ring, x_1, ..., x_n)`.
  id: totrans-1249
  prefs: []
  type: TYPE_NORMAL
  zh: 构造一个多项式环，返回`(ring, x_1, ..., x_n)`。
- en: 'Parameters:'
  id: totrans-1250
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**symbols** : str'
  id: totrans-1251
  prefs: []
  type: TYPE_NORMAL
  zh: '**symbols**：str'
- en: Symbol/Expr or sequence of str, Symbol/Expr (non-empty)
  id: totrans-1252
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Symbol/Expr或str、Symbol/Expr序列（非空）
- en: '**domain** : [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")
    or coercible'
  id: totrans-1253
  prefs: []
  type: TYPE_NORMAL
  zh: '**domain**：[`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")或可转换类型'
- en: '**order** : [`MonomialOrder`](reference.html#sympy.polys.orderings.MonomialOrder
    "sympy.polys.orderings.MonomialOrder") or coercible, optional, defaults to `lex`'
  id: totrans-1254
  prefs: []
  type: TYPE_NORMAL
  zh: '**order**：[`MonomialOrder`](reference.html#sympy.polys.orderings.MonomialOrder
    "sympy.polys.orderings.MonomialOrder")或可转换类型，可选，默认为`lex`'
- en: Examples
  id: totrans-1255
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE498]'
  id: totrans-1256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE498]'
- en: '[PRE499]'
  id: totrans-1257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE499]'
- en: '[PRE500]'
  id: totrans-1258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE500]'
- en: Construct a polynomial ring returning `(ring, (x_1, ..., x_n))`.
  id: totrans-1259
  prefs: []
  type: TYPE_NORMAL
  zh: 构造一个多项式环，返回`(ring, (x_1, ..., x_n))`。
- en: 'Parameters:'
  id: totrans-1260
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**symbols** : str'
  id: totrans-1261
  prefs: []
  type: TYPE_NORMAL
  zh: '**symbols**：str'
- en: Symbol/Expr or sequence of str, Symbol/Expr (non-empty)
  id: totrans-1262
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Symbol/Expr或str、Symbol/Expr序列（非空）
- en: '**domain** : [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")
    or coercible'
  id: totrans-1263
  prefs: []
  type: TYPE_NORMAL
  zh: '**domain**：[`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")或可转换类型'
- en: '**order** : [`MonomialOrder`](reference.html#sympy.polys.orderings.MonomialOrder
    "sympy.polys.orderings.MonomialOrder") or coercible, optional, defaults to `lex`'
  id: totrans-1264
  prefs: []
  type: TYPE_NORMAL
  zh: '**order**：[`MonomialOrder`](reference.html#sympy.polys.orderings.MonomialOrder
    "sympy.polys.orderings.MonomialOrder")或可转换类型，可选，默认为`lex`'
- en: Examples
  id: totrans-1265
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE501]'
  id: totrans-1266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE501]'
- en: '[PRE502]'
  id: totrans-1267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE502]'
- en: '[PRE503]'
  id: totrans-1268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE503]'
- en: Construct a polynomial ring and inject `x_1, ..., x_n` into the global namespace.
  id: totrans-1269
  prefs: []
  type: TYPE_NORMAL
  zh: 构造一个多项式环，并将`x_1, ..., x_n`注入全局命名空间。
- en: 'Parameters:'
  id: totrans-1270
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**symbols** : str'
  id: totrans-1271
  prefs: []
  type: TYPE_NORMAL
  zh: '**symbols**：str'
- en: Symbol/Expr or sequence of str, Symbol/Expr (non-empty)
  id: totrans-1272
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Symbol/Expr或str、Symbol/Expr序列（非空）
- en: '**domain** : [`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")
    or coercible'
  id: totrans-1273
  prefs: []
  type: TYPE_NORMAL
  zh: '**domain**：[`Domain`](#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")或可转换类型'
- en: '**order** : [`MonomialOrder`](reference.html#sympy.polys.orderings.MonomialOrder
    "sympy.polys.orderings.MonomialOrder") or coercible, optional, defaults to `lex`'
  id: totrans-1274
  prefs: []
  type: TYPE_NORMAL
  zh: '**order**：[`MonomialOrder`](reference.html#sympy.polys.orderings.MonomialOrder
    "sympy.polys.orderings.MonomialOrder")或可转换类型，可选，默认为`lex`'
- en: Examples
  id: totrans-1275
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE504]'
  id: totrans-1276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE504]'
- en: '[PRE505]'
  id: totrans-1277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE505]'
- en: '[PRE506]'
  id: totrans-1278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE506]'
- en: Construct a ring deriving generators and domain from options and input expressions.
  id: totrans-1279
  prefs: []
  type: TYPE_NORMAL
  zh: 构造一个环，从选项和输入表达式中派生生成器和域。
- en: 'Parameters:'
  id: totrans-1280
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**exprs** : [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")
    or sequence of [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")
    (sympifiable)'
  id: totrans-1281
  prefs: []
  type: TYPE_NORMAL
  zh: '**exprs**：[`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")或[`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr")序列（可简化）'
- en: '**symbols** : sequence of [`Symbol`](../core.html#sympy.core.symbol.Symbol
    "sympy.core.symbol.Symbol")/[`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")'
  id: totrans-1282
  prefs: []
  type: TYPE_NORMAL
  zh: '**symbols**：[`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol")/[`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr")序列'
- en: '**options** : keyword arguments understood by [`Options`](internals.html#sympy.polys.polyoptions.Options
    "sympy.polys.polyoptions.Options")'
  id: totrans-1283
  prefs: []
  type: TYPE_NORMAL
  zh: '**options**：由[`Options`](internals.html#sympy.polys.polyoptions.Options "sympy.polys.polyoptions.Options")理解的关键字参数'
- en: Examples
  id: totrans-1284
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE507]'
  id: totrans-1285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE507]'
- en: '[PRE508]'
  id: totrans-1286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE508]'
- en: '[PRE509]'
  id: totrans-1287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE509]'
- en: Multivariate distributed polynomial ring.
  id: totrans-1288
  prefs: []
  type: TYPE_NORMAL
  zh: 多元分布式多项式环。
- en: '[PRE510]'
  id: totrans-1289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE510]'
- en: Add a sequence of polynomials or containers of polynomials.
  id: totrans-1290
  prefs: []
  type: TYPE_NORMAL
  zh: 添加一系列多项式或多项式容器。
- en: Examples
  id: totrans-1291
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE511]'
  id: totrans-1292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE511]'
- en: '[PRE512]'
  id: totrans-1293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE512]'
- en: '[PRE513]'
  id: totrans-1294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE513]'
- en: Add the elements of `symbols` as generators to `self`
  id: totrans-1295
  prefs: []
  type: TYPE_NORMAL
  zh: 将`symbols`的元素作为生成器添加到`self`
- en: '[PRE514]'
  id: totrans-1296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE514]'
- en: Add the generators of `other` to `self`
  id: totrans-1297
  prefs: []
  type: TYPE_NORMAL
  zh: 将`other`的生成器添加到`self`中
- en: '[PRE515]'
  id: totrans-1298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE515]'
- en: Remove specified generators from this ring.
  id: totrans-1299
  prefs: []
  type: TYPE_NORMAL
  zh: 从此环中移除指定的生成器。
- en: '[PRE516]'
  id: totrans-1300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE516]'
- en: Remove specified generators from the ring and inject them into its domain.
  id: totrans-1301
  prefs: []
  type: TYPE_NORMAL
  zh: 从环中删除指定的生成元并将其注入到其域中。
- en: '[PRE517]'
  id: totrans-1302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE517]'
- en: Compute index of `gen` in `self.gens`.
  id: totrans-1303
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `self.gens` 中 `gen` 的索引。
- en: '[PRE518]'
  id: totrans-1304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE518]'
- en: Return the ith-basis element.
  id: totrans-1305
  prefs: []
  type: TYPE_NORMAL
  zh: 返回第 `i` 个基础元素。
- en: '[PRE519]'
  id: totrans-1306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE519]'
- en: Multiply a sequence of polynomials or containers of polynomials.
  id: totrans-1307
  prefs: []
  type: TYPE_NORMAL
  zh: 将一系列多项式或多项式容器相乘。
- en: Examples
  id: totrans-1308
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE520]'
  id: totrans-1309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE520]'
- en: '[PRE521]'
  id: totrans-1310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE521]'
- en: '[PRE522]'
  id: totrans-1311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE522]'
- en: Return the elementary symmetric polynomial of degree *n* over this ring’s generators.
  id: totrans-1312
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此环生成器上的度为 *n* 的基本对称多项式。
- en: '[PRE523]'
  id: totrans-1313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE523]'
- en: Element of multivariate distributed polynomial ring.
  id: totrans-1314
  prefs: []
  type: TYPE_NORMAL
  zh: 多变量分布多项式环中的元素。
- en: '[PRE524]'
  id: totrans-1315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE524]'
- en: Approximate equality test for polynomials.
  id: totrans-1316
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式的近似相等性测试。
- en: '[PRE525]'
  id: totrans-1317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE525]'
- en: Cancel common factors in a rational function `f/g`.
  id: totrans-1318
  prefs: []
  type: TYPE_NORMAL
  zh: 取消有理函数 `f/g` 中的公因子。
- en: Examples
  id: totrans-1319
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE526]'
  id: totrans-1320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE526]'
- en: '[PRE527]'
  id: totrans-1321
  prefs: []
  type: TYPE_PRE
  zh: '[PRE527]'
- en: '[PRE528]'
  id: totrans-1322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE528]'
- en: Returns the coefficient that stands next to the given monomial.
  id: totrans-1323
  prefs: []
  type: TYPE_NORMAL
  zh: 返回紧挨给定单项式的系数。
- en: 'Parameters:'
  id: totrans-1324
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**element** : PolyElement (with `is_monomial = True`) or 1'
  id: totrans-1325
  prefs: []
  type: TYPE_NORMAL
  zh: '**element**：PolyElement（带有 `is_monomial = True`）或 1'
- en: Examples
  id: totrans-1326
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE529]'
  id: totrans-1327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE529]'
- en: '[PRE530]'
  id: totrans-1328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE530]'
- en: '[PRE531]'
  id: totrans-1329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE531]'
- en: '[PRE532]'
  id: totrans-1330
  prefs: []
  type: TYPE_PRE
  zh: '[PRE532]'
- en: Coefficient of `self` with respect to `x**deg`.
  id: totrans-1331
  prefs: []
  type: TYPE_NORMAL
  zh: 相对于 `x**deg` 的 `self` 的系数。
- en: Treating `self` as a univariate polynomial in `x` this finds the coefficient
    of `x**deg` as a polynomial in the other generators.
  id: totrans-1332
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `self` 视为 `x` 中的一元多项式，找到作为其他生成元的多项式 `x**deg` 的系数。
- en: 'Parameters:'
  id: totrans-1333
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x** : generator or generator index'
  id: totrans-1334
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**：生成元或生成元索引'
- en: The generator or generator index to compute the expression for.
  id: totrans-1335
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 用于计算表达式的生成元或生成元索引。
- en: '**deg** : int'
  id: totrans-1336
  prefs: []
  type: TYPE_NORMAL
  zh: '**deg**：整数'
- en: The degree of the monomial to compute the expression for.
  id: totrans-1337
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 计算表达式的单项式的次数。
- en: 'Returns:'
  id: totrans-1338
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '[`PolyElement`](#sympy.polys.rings.PolyElement "sympy.polys.rings.PolyElement")'
  id: totrans-1339
  prefs: []
  type: TYPE_NORMAL
  zh: '[`PolyElement`](#sympy.polys.rings.PolyElement "sympy.polys.rings.PolyElement")'
- en: The coefficient of `x**deg` as a polynomial in the same ring.
  id: totrans-1340
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 作为同一环中多项式的 `x**deg` 的系数。
- en: Examples
  id: totrans-1341
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE533]'
  id: totrans-1342
  prefs: []
  type: TYPE_PRE
  zh: '[PRE533]'
- en: '[PRE534]'
  id: totrans-1343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE534]'
- en: See also
  id: totrans-1344
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`coeff`](#sympy.polys.rings.PolyElement.coeff "sympy.polys.rings.PolyElement.coeff"),
    [`coeffs`](#sympy.polys.rings.PolyElement.coeffs "sympy.polys.rings.PolyElement.coeffs")'
  id: totrans-1345
  prefs: []
  type: TYPE_NORMAL
  zh: '[`coeff`](#sympy.polys.rings.PolyElement.coeff "sympy.polys.rings.PolyElement.coeff"),
    [`coeffs`](#sympy.polys.rings.PolyElement.coeffs "sympy.polys.rings.PolyElement.coeffs")'
- en: '[PRE535]'
  id: totrans-1346
  prefs: []
  type: TYPE_PRE
  zh: '[PRE535]'
- en: Ordered list of polynomial coefficients.
  id: totrans-1347
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式的有序系数列表。
- en: 'Parameters:'
  id: totrans-1348
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**order** : [`MonomialOrder`](reference.html#sympy.polys.orderings.MonomialOrder
    "sympy.polys.orderings.MonomialOrder") or coercible, optional'
  id: totrans-1349
  prefs: []
  type: TYPE_NORMAL
  zh: '**order**：[`MonomialOrder`](reference.html#sympy.polys.orderings.MonomialOrder
    "sympy.polys.orderings.MonomialOrder") 或可强制类型转换，可选'
- en: Examples
  id: totrans-1350
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE536]'
  id: totrans-1351
  prefs: []
  type: TYPE_PRE
  zh: '[PRE536]'
- en: '[PRE537]'
  id: totrans-1352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE537]'
- en: '[PRE538]'
  id: totrans-1353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE538]'
- en: '[PRE539]'
  id: totrans-1354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE539]'
- en: Returns the constant coefficient.
  id: totrans-1355
  prefs: []
  type: TYPE_NORMAL
  zh: 返回常数系数。
- en: '[PRE540]'
  id: totrans-1356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE540]'
- en: Returns GCD of polynomial’s coefficients.
  id: totrans-1357
  prefs: []
  type: TYPE_NORMAL
  zh: 返回多项式系数的最大公约数。
- en: '[PRE541]'
  id: totrans-1358
  prefs: []
  type: TYPE_PRE
  zh: '[PRE541]'
- en: Return a copy of polynomial self.
  id: totrans-1359
  prefs: []
  type: TYPE_NORMAL
  zh: 返回多项式 `self` 的副本。
- en: Polynomials are mutable; if one is interested in preserving a polynomial, and
    one plans to use inplace operations, one can copy the polynomial. This method
    makes a shallow copy.
  id: totrans-1360
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式是可变的；如果有人希望保留一个多项式并且打算使用原地操作，则可以复制多项式。此方法进行浅复制。
- en: Examples
  id: totrans-1361
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE542]'
  id: totrans-1362
  prefs: []
  type: TYPE_PRE
  zh: '[PRE542]'
- en: '[PRE543]'
  id: totrans-1363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE543]'
- en: '[PRE544]'
  id: totrans-1364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE544]'
- en: The leading degree in `x` or the main variable.
  id: totrans-1365
  prefs: []
  type: TYPE_NORMAL
  zh: '`x` 的主导次数或主变量。'
- en: Note that the degree of 0 is negative infinity (`float('-inf')`)
  id: totrans-1366
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，0 的次数为负无穷 (`float('-inf')`)
- en: '[PRE545]'
  id: totrans-1367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE545]'
- en: A tuple containing leading degrees in all variables.
  id: totrans-1368
  prefs: []
  type: TYPE_NORMAL
  zh: 包含所有变量中的领先次数的元组。
- en: Note that the degree of 0 is negative infinity (`float('-inf')`)
  id: totrans-1369
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，0 的次数为负无穷 (`float('-inf')`)
- en: '[PRE546]'
  id: totrans-1370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE546]'
- en: Computes partial derivative in `x`.
  id: totrans-1371
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `x` 中计算偏导数。
- en: Examples
  id: totrans-1372
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE547]'
  id: totrans-1373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE547]'
- en: '[PRE548]'
  id: totrans-1374
  prefs: []
  type: TYPE_PRE
  zh: '[PRE548]'
- en: '[PRE549]'
  id: totrans-1375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE549]'
- en: Division algorithm, see [CLO] p64.
  id: totrans-1376
  prefs: []
  type: TYPE_NORMAL
  zh: 除法算法，见 [CLO] p64。
- en: fv array of polynomials
  id: totrans-1377
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式数组的 `fv`。
- en: return qv, r such that self = sum(fv[i]*qv[i]) + r
  id: totrans-1378
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `qv, r`，使得 `self = sum(fv[i]*qv[i]) + r`
- en: All polynomials are required not to be Laurent polynomials.
  id: totrans-1379
  prefs: []
  type: TYPE_NORMAL
  zh: 所有多项式都要求不是 Laurent 多项式。
- en: Examples
  id: totrans-1380
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE550]'
  id: totrans-1381
  prefs: []
  type: TYPE_PRE
  zh: '[PRE550]'
- en: '[PRE551]'
  id: totrans-1382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE551]'
- en: '[PRE552]'
  id: totrans-1383
  prefs: []
  type: TYPE_PRE
  zh: '[PRE552]'
- en: multiply inplace the polynomial p by an element in the coefficient ring, provided
    p is not one of the generators; else multiply not inplace
  id: totrans-1384
  prefs: []
  type: TYPE_NORMAL
  zh: 将多项式 `p` 乘以系数环中的元素，如果 `p` 不是生成元之一，则原地乘；否则，不原地乘。
- en: Examples
  id: totrans-1385
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE553]'
  id: totrans-1386
  prefs: []
  type: TYPE_PRE
  zh: '[PRE553]'
- en: '[PRE554]'
  id: totrans-1387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE554]'
- en: '[PRE555]'
  id: totrans-1388
  prefs: []
  type: TYPE_PRE
  zh: '[PRE555]'
- en: Iterator over coefficients of a polynomial.
  id: totrans-1389
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式系数的系数迭代器。
- en: '[PRE556]'
  id: totrans-1390
  prefs: []
  type: TYPE_PRE
  zh: '[PRE556]'
- en: Iterator over monomials of a polynomial.
  id: totrans-1391
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式单项式的单项式迭代器。
- en: '[PRE557]'
  id: totrans-1392
  prefs: []
  type: TYPE_PRE
  zh: '[PRE557]'
- en: Iterator over terms of a polynomial.
  id: totrans-1393
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式项的项迭代器。
- en: '[PRE558]'
  id: totrans-1394
  prefs: []
  type: TYPE_PRE
  zh: '[PRE558]'
- en: Leading monomial tuple according to the monomial ordering.
  id: totrans-1395
  prefs: []
  type: TYPE_NORMAL
  zh: 根据单项式顺序的领先单项式元组。
- en: Examples
  id: totrans-1396
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE559]'
  id: totrans-1397
  prefs: []
  type: TYPE_PRE
  zh: '[PRE559]'
- en: '[PRE560]'
  id: totrans-1398
  prefs: []
  type: TYPE_PRE
  zh: '[PRE560]'
- en: '[PRE561]'
  id: totrans-1399
  prefs: []
  type: TYPE_PRE
  zh: '[PRE561]'
- en: Leading monomial as a polynomial element.
  id: totrans-1400
  prefs: []
  type: TYPE_NORMAL
  zh: 领先单项式作为多项式元素。
- en: Examples
  id: totrans-1401
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE562]'
  id: totrans-1402
  prefs: []
  type: TYPE_PRE
  zh: '[PRE562]'
- en: '[PRE563]'
  id: totrans-1403
  prefs: []
  type: TYPE_PRE
  zh: '[PRE563]'
- en: '[PRE564]'
  id: totrans-1404
  prefs: []
  type: TYPE_PRE
  zh: '[PRE564]'
- en: Leading term as a polynomial element.
  id: totrans-1405
  prefs: []
  type: TYPE_NORMAL
  zh: 领先项作为多项式元素。
- en: Examples
  id: totrans-1406
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE565]'
  id: totrans-1407
  prefs: []
  type: TYPE_PRE
  zh: '[PRE565]'
- en: '[PRE566]'
  id: totrans-1408
  prefs: []
  type: TYPE_PRE
  zh: '[PRE566]'
- en: '[PRE567]'
  id: totrans-1409
  prefs: []
  type: TYPE_PRE
  zh: '[PRE567]'
- en: Unordered list of polynomial coefficients.
  id: totrans-1410
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式系数的无序列表。
- en: '[PRE568]'
  id: totrans-1411
  prefs: []
  type: TYPE_PRE
  zh: '[PRE568]'
- en: Unordered list of polynomial monomials.
  id: totrans-1412
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式单项式的无序列表。
- en: '[PRE569]'
  id: totrans-1413
  prefs: []
  type: TYPE_PRE
  zh: '[PRE569]'
- en: Unordered list of polynomial terms.
  id: totrans-1414
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式项的无序列表。
- en: '[PRE570]'
  id: totrans-1415
  prefs: []
  type: TYPE_PRE
  zh: '[PRE570]'
- en: Divides all coefficients by the leading coefficient.
  id: totrans-1416
  prefs: []
  type: TYPE_NORMAL
  zh: 将所有系数除以领先系数。
- en: '[PRE571]'
  id: totrans-1417
  prefs: []
  type: TYPE_PRE
  zh: '[PRE571]'
- en: Ordered list of polynomial monomials.
  id: totrans-1418
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式单项式的有序列表。
- en: 'Parameters:'
  id: totrans-1419
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**order** : [`MonomialOrder`](reference.html#sympy.polys.orderings.MonomialOrder
    "sympy.polys.orderings.MonomialOrder") or coercible, optional'
  id: totrans-1420
  prefs: []
  type: TYPE_NORMAL
  zh: '**order**：[`MonomialOrder`](reference.html#sympy.polys.orderings.MonomialOrder
    "sympy.polys.orderings.MonomialOrder") 或可强制转换的，可选'
- en: Examples
  id: totrans-1421
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE572]'
  id: totrans-1422
  prefs: []
  type: TYPE_PRE
  zh: '[PRE572]'
- en: '[PRE573]'
  id: totrans-1423
  prefs: []
  type: TYPE_PRE
  zh: '[PRE573]'
- en: '[PRE574]'
  id: totrans-1424
  prefs: []
  type: TYPE_PRE
  zh: '[PRE574]'
- en: '[PRE575]'
  id: totrans-1425
  prefs: []
  type: TYPE_PRE
  zh: '[PRE575]'
- en: Computes the pseudo-division of the polynomial `self` with respect to `g`.
  id: totrans-1426
  prefs: []
  type: TYPE_NORMAL
  zh: 计算与多项式`self`相对于`g`的伪除。
- en: The pseudo-division algorithm is used to find the pseudo-quotient `q` and pseudo-remainder
    `r` such that `m*f = g*q + r`, where `m` represents the multiplier and `f` is
    the dividend polynomial.
  id: totrans-1427
  prefs: []
  type: TYPE_NORMAL
  zh: 伪除算法用于找到伪商`q`和伪余数`r`，使得`m*f = g*q + r`，其中`m`表示乘数，`f`是被除多项式。
- en: The pseudo-quotient `q` and pseudo-remainder `r` are polynomials in the variable
    `x`, with the degree of `r` with respect to `x` being strictly less than the degree
    of `g` with respect to `x`.
  id: totrans-1428
  prefs: []
  type: TYPE_NORMAL
  zh: 伪商`q`和伪余数`r`是关于变量`x`的多项式，其中`r`相对于`x`的度严格小于`g`相对于`x`的度。
- en: The multiplier `m` is defined as `LC(g, x) ^ (deg(f, x) - deg(g, x) + 1)`, where
    `LC(g, x)` represents the leading coefficient of `g`.
  id: totrans-1429
  prefs: []
  type: TYPE_NORMAL
  zh: 乘数`m`被定义为`LC(g, x) ^ (deg(f, x) - deg(g, x) + 1)`，其中`LC(g, x)`表示`g`的主导系数。
- en: It is important to note that in the context of the `prem` method, multivariate
    polynomials in a ring, such as `R[x,y,z]`, are treated as univariate polynomials
    with coefficients that are polynomials, such as `R[x,y][z]`. When dividing `f`
    by `g` with respect to the variable `z`, the pseudo-quotient `q` and pseudo-remainder
    `r` satisfy `m*f = g*q + r`, where `deg(r, z) < deg(g, z)` and `m = LC(g, z)^(deg(f,
    z) - deg(g, z) + 1)`.
  id: totrans-1430
  prefs: []
  type: TYPE_NORMAL
  zh: 在`prem`方法的上下文中，环中的多变量多项式，如`R[x,y,z]`，被视为具有多项式系数的单变量多项式，如`R[x,y][z]`。当相对于变量`z`除以`f`和`g`时，伪商`q`和伪余数`r`满足`m*f
    = g*q + r`，其中`deg(r, z) < deg(g, z)`，且`m = LC(g, z)^(deg(f, z) - deg(g, z) + 1)`。
- en: In this function, the pseudo-remainder `r` can be obtained using the `prem`
    method, the pseudo-quotient `q` can be obtained using the `pquo` method, and the
    function `pdiv` itself returns a tuple `(q, r)`.
  id: totrans-1431
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个函数中，伪余数`r`可以通过`prem`方法获得，伪商`q`可以通过`pquo`方法获得，函数`pdiv`本身返回一个元组`(q, r)`。
- en: 'Parameters:'
  id: totrans-1432
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**g** : [`PolyElement`](#sympy.polys.rings.PolyElement "sympy.polys.rings.PolyElement")'
  id: totrans-1433
  prefs: []
  type: TYPE_NORMAL
  zh: '**g**：[`PolyElement`](#sympy.polys.rings.PolyElement "sympy.polys.rings.PolyElement")'
- en: The polynomial to divide `self` by.
  id: totrans-1434
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 被除多项式。
- en: '**x** : generator or generator index, optional'
  id: totrans-1435
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**：生成器或生成器索引，可选'
- en: The main variable of the polynomials and default is first generator.
  id: totrans-1436
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多项式的主变量及默认为第一个生成器。
- en: 'Returns:'
  id: totrans-1437
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '[`PolyElement`](#sympy.polys.rings.PolyElement "sympy.polys.rings.PolyElement")'
  id: totrans-1438
  prefs: []
  type: TYPE_NORMAL
  zh: '[`PolyElement`](#sympy.polys.rings.PolyElement "sympy.polys.rings.PolyElement")'
- en: The pseudo-division polynomial (tuple of `q` and `r`).
  id: totrans-1439
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 伪除多项式（元组`q`和`r`）。
- en: 'Raises:'
  id: totrans-1440
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: '**ZeroDivisionError** : If `g` is the zero polynomial.'
  id: totrans-1441
  prefs: []
  type: TYPE_NORMAL
  zh: '**ZeroDivisionError**：如果`g`是零多项式。'
- en: Examples
  id: totrans-1442
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE576]'
  id: totrans-1443
  prefs: []
  type: TYPE_PRE
  zh: '[PRE576]'
- en: '[PRE577]'
  id: totrans-1444
  prefs: []
  type: TYPE_PRE
  zh: '[PRE577]'
- en: See also
  id: totrans-1445
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`prem`](#sympy.polys.rings.PolyElement.prem "sympy.polys.rings.PolyElement.prem")'
  id: totrans-1446
  prefs: []
  type: TYPE_NORMAL
  zh: '[`prem`](#sympy.polys.rings.PolyElement.prem "sympy.polys.rings.PolyElement.prem")'
- en: Computes only the pseudo-remainder more efficiently than \(f.pdiv(g)[1]\).
  id: totrans-1447
  prefs: []
  type: TYPE_NORMAL
  zh: 比\(f.pdiv(g)[1]\)更高效地计算仅伪余数。
- en: '[`pquo`](#sympy.polys.rings.PolyElement.pquo "sympy.polys.rings.PolyElement.pquo")'
  id: totrans-1448
  prefs: []
  type: TYPE_NORMAL
  zh: '[`pquo`](#sympy.polys.rings.PolyElement.pquo "sympy.polys.rings.PolyElement.pquo")'
- en: Returns only the pseudo-quotient.
  id: totrans-1449
  prefs: []
  type: TYPE_NORMAL
  zh: 仅返回伪商。
- en: '[`pexquo`](#sympy.polys.rings.PolyElement.pexquo "sympy.polys.rings.PolyElement.pexquo")'
  id: totrans-1450
  prefs: []
  type: TYPE_NORMAL
  zh: '[`pexquo`](#sympy.polys.rings.PolyElement.pexquo "sympy.polys.rings.PolyElement.pexquo")'
- en: Returns only an exact pseudo-quotient having no remainder.
  id: totrans-1451
  prefs: []
  type: TYPE_NORMAL
  zh: 仅返回无余项的精确伪商。
- en: '[`div`](#sympy.polys.rings.PolyElement.div "sympy.polys.rings.PolyElement.div")'
  id: totrans-1452
  prefs: []
  type: TYPE_NORMAL
  zh: '[`div`](#sympy.polys.rings.PolyElement.div "sympy.polys.rings.PolyElement.div")'
- en: Returns quotient and remainder of f and g polynomials.
  id: totrans-1453
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`和`g`多项式的商和余数。
- en: '[PRE578]'
  id: totrans-1454
  prefs: []
  type: TYPE_PRE
  zh: '[PRE578]'
- en: Polynomial exact pseudo-quotient in multivariate polynomial ring.
  id: totrans-1455
  prefs: []
  type: TYPE_NORMAL
  zh: 多变量多项式环中的精确多项式伪商。
- en: Examples
  id: totrans-1456
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE579]'
  id: totrans-1457
  prefs: []
  type: TYPE_PRE
  zh: '[PRE579]'
- en: '[PRE580]'
  id: totrans-1458
  prefs: []
  type: TYPE_PRE
  zh: '[PRE580]'
- en: See also
  id: totrans-1459
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`prem`](#sympy.polys.rings.PolyElement.prem "sympy.polys.rings.PolyElement.prem"),
    [`pdiv`](#sympy.polys.rings.PolyElement.pdiv "sympy.polys.rings.PolyElement.pdiv"),
    [`pquo`](#sympy.polys.rings.PolyElement.pquo "sympy.polys.rings.PolyElement.pquo"),
    [`sympy.polys.domains.ring.Ring.exquo`](#sympy.polys.domains.ring.Ring.exquo "sympy.polys.domains.ring.Ring.exquo")'
  id: totrans-1460
  prefs: []
  type: TYPE_NORMAL
  zh: '[`prem`](#sympy.polys.rings.PolyElement.prem "sympy.polys.rings.PolyElement.prem")，[`pdiv`](#sympy.polys.rings.PolyElement.pdiv
    "sympy.polys.rings.PolyElement.pdiv")，[`pquo`](#sympy.polys.rings.PolyElement.pquo
    "sympy.polys.rings.PolyElement.pquo")，[`sympy.polys.domains.ring.Ring.exquo`](#sympy.polys.domains.ring.Ring.exquo
    "sympy.polys.domains.ring.Ring.exquo")'
- en: '[PRE581]'
  id: totrans-1461
  prefs: []
  type: TYPE_PRE
  zh: '[PRE581]'
- en: Polynomial pseudo-quotient in multivariate polynomial ring.
  id: totrans-1462
  prefs: []
  type: TYPE_NORMAL
  zh: 多变量多项式环中的多项式伪商。
- en: Examples
  id: totrans-1463
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE582]'
  id: totrans-1464
  prefs: []
  type: TYPE_PRE
  zh: '[PRE582]'
- en: '[PRE583]'
  id: totrans-1465
  prefs: []
  type: TYPE_PRE
  zh: '[PRE583]'
- en: See also
  id: totrans-1466
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`prem`](#sympy.polys.rings.PolyElement.prem "sympy.polys.rings.PolyElement.prem"),
    [`pdiv`](#sympy.polys.rings.PolyElement.pdiv "sympy.polys.rings.PolyElement.pdiv"),
    [`pexquo`](#sympy.polys.rings.PolyElement.pexquo "sympy.polys.rings.PolyElement.pexquo"),
    [`sympy.polys.domains.ring.Ring.quo`](#sympy.polys.domains.ring.Ring.quo "sympy.polys.domains.ring.Ring.quo")'
  id: totrans-1467
  prefs: []
  type: TYPE_NORMAL
  zh: '[`prem`](#sympy.polys.rings.PolyElement.prem "sympy.polys.rings.PolyElement.prem"),
    [`pdiv`](#sympy.polys.rings.PolyElement.pdiv "sympy.polys.rings.PolyElement.pdiv"),
    [`pexquo`](#sympy.polys.rings.PolyElement.pexquo "sympy.polys.rings.PolyElement.pexquo"),
    [`sympy.polys.domains.ring.Ring.quo`](#sympy.polys.domains.ring.Ring.quo "sympy.polys.domains.ring.Ring.quo")'
- en: '[PRE584]'
  id: totrans-1468
  prefs: []
  type: TYPE_PRE
  zh: '[PRE584]'
- en: Pseudo-remainder of the polynomial `self` with respect to `g`.
  id: totrans-1469
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式`self`相对于`g`的伪余数。
- en: The pseudo-quotient `q` and pseudo-remainder `r` with respect to `z` when dividing
    `f` by `g` satisfy `m*f = g*q + r`, where `deg(r,z) < deg(g,z)` and `m = LC(g,z)**(deg(f,z)
    - deg(g,z)+1)`.
  id: totrans-1470
  prefs: []
  type: TYPE_NORMAL
  zh: 将`f`除以`g`时，相对于`z`的伪商`q`和伪余数`r`满足`m*f = g*q + r`，其中`deg(r,z) < deg(g,z)`，并且`m
    = LC(g,z)**(deg(f,z) - deg(g,z)+1)`。
- en: See [`pdiv()`](#sympy.polys.rings.PolyElement.pdiv "sympy.polys.rings.PolyElement.pdiv")
    for explanation of pseudo-division.
  id: totrans-1471
  prefs: []
  type: TYPE_NORMAL
  zh: 参见[`pdiv()`](#sympy.polys.rings.PolyElement.pdiv "sympy.polys.rings.PolyElement.pdiv")以了解伪除法的解释。
- en: 'Parameters:'
  id: totrans-1472
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**g** : [`PolyElement`](#sympy.polys.rings.PolyElement "sympy.polys.rings.PolyElement")'
  id: totrans-1473
  prefs: []
  type: TYPE_NORMAL
  zh: '**g**：[`PolyElement`](#sympy.polys.rings.PolyElement "sympy.polys.rings.PolyElement")'
- en: The polynomial to divide `self` by.
  id: totrans-1474
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 被`self`除以的多项式。
- en: '**x** : generator or generator index, optional'
  id: totrans-1475
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**：生成器或生成器索引，可选'
- en: The main variable of the polynomials and default is first generator.
  id: totrans-1476
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多项式的主变量，默认为第一个生成器。
- en: 'Returns:'
  id: totrans-1477
  prefs: []
  type: TYPE_NORMAL
  zh: 'Returns:'
- en: '[`PolyElement`](#sympy.polys.rings.PolyElement "sympy.polys.rings.PolyElement")'
  id: totrans-1478
  prefs: []
  type: TYPE_NORMAL
  zh: '[`PolyElement`](#sympy.polys.rings.PolyElement "sympy.polys.rings.PolyElement")'
- en: The pseudo-remainder polynomial.
  id: totrans-1479
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 伪余数多项式。
- en: 'Raises:'
  id: totrans-1480
  prefs: []
  type: TYPE_NORMAL
  zh: 'Raises:'
- en: '**ZeroDivisionError** : If `g` is the zero polynomial.'
  id: totrans-1481
  prefs: []
  type: TYPE_NORMAL
  zh: '**ZeroDivisionError**：如果`g`是零多项式。'
- en: Examples
  id: totrans-1482
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE585]'
  id: totrans-1483
  prefs: []
  type: TYPE_PRE
  zh: '[PRE585]'
- en: '[PRE586]'
  id: totrans-1484
  prefs: []
  type: TYPE_PRE
  zh: '[PRE586]'
- en: See also
  id: totrans-1485
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`pdiv`](#sympy.polys.rings.PolyElement.pdiv "sympy.polys.rings.PolyElement.pdiv"),
    [`pquo`](#sympy.polys.rings.PolyElement.pquo "sympy.polys.rings.PolyElement.pquo"),
    [`pexquo`](#sympy.polys.rings.PolyElement.pexquo "sympy.polys.rings.PolyElement.pexquo"),
    [`sympy.polys.domains.ring.Ring.rem`](#sympy.polys.domains.ring.Ring.rem "sympy.polys.domains.ring.Ring.rem")'
  id: totrans-1486
  prefs: []
  type: TYPE_NORMAL
  zh: '[`pdiv`](#sympy.polys.rings.PolyElement.pdiv "sympy.polys.rings.PolyElement.pdiv"),
    [`pquo`](#sympy.polys.rings.PolyElement.pquo "sympy.polys.rings.PolyElement.pquo"),
    [`pexquo`](#sympy.polys.rings.PolyElement.pexquo "sympy.polys.rings.PolyElement.pexquo"),
    [`sympy.polys.domains.ring.Ring.rem`](#sympy.polys.domains.ring.Ring.rem "sympy.polys.domains.ring.Ring.rem")'
- en: '[PRE587]'
  id: totrans-1487
  prefs: []
  type: TYPE_PRE
  zh: '[PRE587]'
- en: Returns content and a primitive polynomial.
  id: totrans-1488
  prefs: []
  type: TYPE_NORMAL
  zh: 返回内容和原始多项式。
- en: '[PRE588]'
  id: totrans-1489
  prefs: []
  type: TYPE_PRE
  zh: '[PRE588]'
- en: square of a polynomial
  id: totrans-1490
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式的平方
- en: Examples
  id: totrans-1491
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE589]'
  id: totrans-1492
  prefs: []
  type: TYPE_PRE
  zh: '[PRE589]'
- en: '[PRE590]'
  id: totrans-1493
  prefs: []
  type: TYPE_PRE
  zh: '[PRE590]'
- en: '[PRE591]'
  id: totrans-1494
  prefs: []
  type: TYPE_PRE
  zh: '[PRE591]'
- en: Eliminate monomials with zero coefficient.
  id: totrans-1495
  prefs: []
  type: TYPE_NORMAL
  zh: 消除零系数的单项式。
- en: '[PRE592]'
  id: totrans-1496
  prefs: []
  type: TYPE_PRE
  zh: '[PRE592]'
- en: Computes the subresultant PRS of two polynomials `self` and `g`.
  id: totrans-1497
  prefs: []
  type: TYPE_NORMAL
  zh: 计算两个多项式`self`和`g`的次结果PRS。
- en: 'Parameters:'
  id: totrans-1498
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**g** : [`PolyElement`](#sympy.polys.rings.PolyElement "sympy.polys.rings.PolyElement")'
  id: totrans-1499
  prefs: []
  type: TYPE_NORMAL
  zh: '**g**：[`PolyElement`](#sympy.polys.rings.PolyElement "sympy.polys.rings.PolyElement")'
- en: The second polynomial.
  id: totrans-1500
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 第二个多项式。
- en: '**x** : generator or generator index'
  id: totrans-1501
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**：生成器或生成器索引'
- en: The variable with respect to which the subresultant sequence is computed.
  id: totrans-1502
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 计算次结果序列的变量。
- en: 'Returns:'
  id: totrans-1503
  prefs: []
  type: TYPE_NORMAL
  zh: 'Returns:'
- en: '**R** : list'
  id: totrans-1504
  prefs: []
  type: TYPE_NORMAL
  zh: '**R**：列表'
- en: Returns a list polynomials representing the subresultant PRS.
  id: totrans-1505
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回一个表示次结果PRS的多项式列表。
- en: Examples
  id: totrans-1506
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE593]'
  id: totrans-1507
  prefs: []
  type: TYPE_PRE
  zh: '[PRE593]'
- en: '[PRE594]'
  id: totrans-1508
  prefs: []
  type: TYPE_PRE
  zh: '[PRE594]'
- en: '[PRE595]'
  id: totrans-1509
  prefs: []
  type: TYPE_PRE
  zh: '[PRE595]'
- en: Rewrite *self* in terms of elementary symmetric polynomials.
  id: totrans-1510
  prefs: []
  type: TYPE_NORMAL
  zh: 用基本对称多项式重新表达*self*。
- en: 'Returns:'
  id: totrans-1511
  prefs: []
  type: TYPE_NORMAL
  zh: 'Returns:'
- en: Triple `(p, r, m)`
  id: totrans-1512
  prefs: []
  type: TYPE_NORMAL
  zh: 三元组`(p, r, m)`
- en: '`p` is a [`PolyElement`](#sympy.polys.rings.PolyElement "sympy.polys.rings.PolyElement")
    that represents our attempt to express *self* as a function of elementary symmetric
    polynomials. Each variable in `p` stands for one of the elementary symmetric polynomials.
    The correspondence is given by `m`.'
  id: totrans-1513
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`p`是一个[`PolyElement`](#sympy.polys.rings.PolyElement "sympy.polys.rings.PolyElement")，代表我们尝试将*self*表示为基本对称多项式函数的结果。`p`中的每个变量代表一个基本对称多项式，映射由`m`给出。'
- en: ''
  id: totrans-1514
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`r` is the remainder.'
  id: totrans-1515
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`r`是余数。'
- en: ''
  id: totrans-1516
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`m` is a list of pairs, giving the mapping from variables in `p` to elementary
    symmetric polynomials.'
  id: totrans-1517
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`m`是一个列表，给出了从`p`中的变量到基本对称多项式的映射。'
- en: ''
  id: totrans-1518
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The triple satisfies the equation `p.compose(m) + r == self`. If the remainder
    `r` is zero, *self* is symmetric. If it is nonzero, we were not able to represent
    *self* as symmetric.
  id: totrans-1519
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 三元组满足方程`p.compose(m) + r == self`。如果余数`r`为零，则*self*是对称的。如果不为零，则我们无法将*self*表示为对称的。
- en: Explanation
  id: totrans-1520
  prefs: []
  type: TYPE_NORMAL
  zh: Explanation
- en: If this [`PolyElement`](#sympy.polys.rings.PolyElement "sympy.polys.rings.PolyElement")
    belongs to a ring of \(n\) variables, we can try to write it as a function of
    the elementary symmetric polynomials on \(n\) variables. We compute a symmetric
    part, and a remainder for any part we were not able to symmetrize.
  id: totrans-1521
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这个[`PolyElement`](#sympy.polys.rings.PolyElement "sympy.polys.rings.PolyElement")属于\(n\)变量的环，我们可以尝试将其写成\(n\)变量的基本对称多项式的函数。我们计算对称部分和任何无法对称化的余数的余数。
- en: Examples
  id: totrans-1522
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE596]'
  id: totrans-1523
  prefs: []
  type: TYPE_PRE
  zh: '[PRE596]'
- en: '[PRE597]'
  id: totrans-1524
  prefs: []
  type: TYPE_PRE
  zh: '[PRE597]'
- en: '[PRE598]'
  id: totrans-1525
  prefs: []
  type: TYPE_PRE
  zh: '[PRE598]'
- en: See also
  id: totrans-1526
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`sympy.polys.polyfuncs.symmetrize`](reference.html#sympy.polys.polyfuncs.symmetrize
    "sympy.polys.polyfuncs.symmetrize")'
  id: totrans-1527
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.polys.polyfuncs.symmetrize`](reference.html#sympy.polys.polyfuncs.symmetrize
    "sympy.polys.polyfuncs.symmetrize")'
- en: References
  id: totrans-1528
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R783](#id14)]'
  id: totrans-1529
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R783](#id14)]'
- en: Lauer, E. Algorithms for symmetrical polynomials, Proc. 1976 ACM Symp. on Symbolic
    and Algebraic Computing, NY 242-247. [https://dl.acm.org/doi/pdf/10.1145/800205.806342](https://dl.acm.org/doi/pdf/10.1145/800205.806342)
  id: totrans-1530
  prefs: []
  type: TYPE_NORMAL
  zh: Lauer, E. Symmetrical polynomials算法，Proc. 1976 ACM Symp. on Symbolic and Algebraic
    Computing，NY 242-247。[https://dl.acm.org/doi/pdf/10.1145/800205.806342](https://dl.acm.org/doi/pdf/10.1145/800205.806342)
- en: '[PRE599]'
  id: totrans-1531
  prefs: []
  type: TYPE_PRE
  zh: '[PRE599]'
- en: The tail degree in `x` or the main variable.
  id: totrans-1532
  prefs: []
  type: TYPE_NORMAL
  zh: '`x`的尾度或主变量。'
- en: Note that the degree of 0 is negative infinity (`float('-inf')`)
  id: totrans-1533
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，0的度为负无穷（`float('-inf')`）
- en: '[PRE600]'
  id: totrans-1534
  prefs: []
  type: TYPE_PRE
  zh: '[PRE600]'
- en: A tuple containing tail degrees in all variables.
  id: totrans-1535
  prefs: []
  type: TYPE_NORMAL
  zh: 包含所有变量的尾度的元组。
- en: Note that the degree of 0 is negative infinity (`float('-inf')`)
  id: totrans-1536
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，0的度为负无穷（`float('-inf')`）
- en: '[PRE601]'
  id: totrans-1537
  prefs: []
  type: TYPE_PRE
  zh: '[PRE601]'
- en: Ordered list of polynomial terms.
  id: totrans-1538
  prefs: []
  type: TYPE_NORMAL
  zh: 有序多项式项的列表。
- en: 'Parameters:'
  id: totrans-1539
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**order** : [`MonomialOrder`](reference.html#sympy.polys.orderings.MonomialOrder
    "sympy.polys.orderings.MonomialOrder") or coercible, optional'
  id: totrans-1540
  prefs: []
  type: TYPE_NORMAL
  zh: '**order**：[`MonomialOrder`](reference.html#sympy.polys.orderings.MonomialOrder
    "sympy.polys.orderings.MonomialOrder")或者可强制转换的，可选'
- en: Examples
  id: totrans-1541
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE602]'
  id: totrans-1542
  prefs: []
  type: TYPE_PRE
  zh: '[PRE602]'
- en: '[PRE603]'
  id: totrans-1543
  prefs: []
  type: TYPE_PRE
  zh: '[PRE603]'
- en: '[PRE604]'
  id: totrans-1544
  prefs: []
  type: TYPE_PRE
  zh: '[PRE604]'
- en: Sparse rational functions
  id: totrans-1545
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 稀疏有理函数
- en: Sparse polynomials are represented as dictionaries.
  id: totrans-1546
  prefs: []
  type: TYPE_NORMAL
  zh: 稀疏多项式表示为字典。
- en: '[PRE605]'
  id: totrans-1547
  prefs: []
  type: TYPE_PRE
  zh: '[PRE605]'
- en: Construct new rational function field returning (field, x1, …, xn).
  id: totrans-1548
  prefs: []
  type: TYPE_NORMAL
  zh: 构造新的有理函数域，返回（域，x1，…，xn）。
- en: '[PRE606]'
  id: totrans-1549
  prefs: []
  type: TYPE_PRE
  zh: '[PRE606]'
- en: Construct new rational function field returning (field, (x1, …, xn)).
  id: totrans-1550
  prefs: []
  type: TYPE_NORMAL
  zh: 构造新的有理函数域，返回（域，（x1，…，xn））。
- en: '[PRE607]'
  id: totrans-1551
  prefs: []
  type: TYPE_PRE
  zh: '[PRE607]'
- en: Construct new rational function field and inject generators into global namespace.
  id: totrans-1552
  prefs: []
  type: TYPE_NORMAL
  zh: 构造新的有理函数域，并将生成器注入全局命名空间。
- en: '[PRE608]'
  id: totrans-1553
  prefs: []
  type: TYPE_PRE
  zh: '[PRE608]'
- en: Construct a field deriving generators and domain from options and input expressions.
  id: totrans-1554
  prefs: []
  type: TYPE_NORMAL
  zh: 根据选项和输入表达式构造一个域，并生成域。
- en: 'Parameters:'
  id: totrans-1555
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**exprs** : py:class:\(~.Expr\) or sequence of [`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr") (sympifiable)'
  id: totrans-1556
  prefs: []
  type: TYPE_NORMAL
  zh: '**exprs**：py:class:\(~.Expr\) 或者 [`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr") 的序列（可简化）'
- en: '**symbols** : sequence of [`Symbol`](../core.html#sympy.core.symbol.Symbol
    "sympy.core.symbol.Symbol")/[`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")'
  id: totrans-1557
  prefs: []
  type: TYPE_NORMAL
  zh: '**符号**：[`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol")/[`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr")的序列'
- en: '**options** : keyword arguments understood by [`Options`](internals.html#sympy.polys.polyoptions.Options
    "sympy.polys.polyoptions.Options")'
  id: totrans-1558
  prefs: []
  type: TYPE_NORMAL
  zh: '**选项**：被[`Options`](internals.html#sympy.polys.polyoptions.Options "sympy.polys.polyoptions.Options")理解的关键字参数'
- en: Examples
  id: totrans-1559
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE609]'
  id: totrans-1560
  prefs: []
  type: TYPE_PRE
  zh: '[PRE609]'
- en: '[PRE610]'
  id: totrans-1561
  prefs: []
  type: TYPE_PRE
  zh: '[PRE610]'
- en: '[PRE611]'
  id: totrans-1562
  prefs: []
  type: TYPE_PRE
  zh: '[PRE611]'
- en: Multivariate distributed rational function field.
  id: totrans-1563
  prefs: []
  type: TYPE_NORMAL
  zh: 多变量分布有理函数域。
- en: '[PRE612]'
  id: totrans-1564
  prefs: []
  type: TYPE_PRE
  zh: '[PRE612]'
- en: Element of multivariate distributed rational function field.
  id: totrans-1565
  prefs: []
  type: TYPE_NORMAL
  zh: 多变量分布有理函数域的元素。
- en: '[PRE613]'
  id: totrans-1566
  prefs: []
  type: TYPE_PRE
  zh: '[PRE613]'
- en: Computes partial derivative in `x`.
  id: totrans-1567
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`x`中的偏导数。
- en: Examples
  id: totrans-1568
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE614]'
  id: totrans-1569
  prefs: []
  type: TYPE_PRE
  zh: '[PRE614]'
- en: '[PRE615]'
  id: totrans-1570
  prefs: []
  type: TYPE_PRE
  zh: '[PRE615]'
- en: Dense polynomials
  id: totrans-1571
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 密集多项式
- en: '[PRE616]'
  id: totrans-1572
  prefs: []
  type: TYPE_PRE
  zh: '[PRE616]'
- en: Dense Multivariate Polynomials over \(K\).
  id: totrans-1573
  prefs: []
  type: TYPE_NORMAL
  zh: 在\(K\)上的密集多变量多项式。
- en: '[PRE617]'
  id: totrans-1574
  prefs: []
  type: TYPE_PRE
  zh: '[PRE617]'
- en: Returns the leading coefficient of `f`.
  id: totrans-1575
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的首系数。
- en: '[PRE618]'
  id: totrans-1576
  prefs: []
  type: TYPE_PRE
  zh: '[PRE618]'
- en: Returns the trailing coefficient of `f`.
  id: totrans-1577
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的尾系数。
- en: '[PRE619]'
  id: totrans-1578
  prefs: []
  type: TYPE_PRE
  zh: '[PRE619]'
- en: Make all coefficients in `f` positive.
  id: totrans-1579
  prefs: []
  type: TYPE_NORMAL
  zh: 使`f`中的所有系数均为正。
- en: '[PRE620]'
  id: totrans-1580
  prefs: []
  type: TYPE_PRE
  zh: '[PRE620]'
- en: Add two multivariate polynomials `f` and `g`.
  id: totrans-1581
  prefs: []
  type: TYPE_NORMAL
  zh: 添加两个多变量多项式`f`和`g`。
- en: '[PRE621]'
  id: totrans-1582
  prefs: []
  type: TYPE_PRE
  zh: '[PRE621]'
- en: Add an element of the ground domain to `f`.
  id: totrans-1583
  prefs: []
  type: TYPE_NORMAL
  zh: 将一个地域域的元素添加到`f`。
- en: '[PRE622]'
  id: totrans-1584
  prefs: []
  type: TYPE_PRE
  zh: '[PRE622]'
- en: Returns all coefficients from `f`.
  id: totrans-1585
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的所有系数。
- en: '[PRE623]'
  id: totrans-1586
  prefs: []
  type: TYPE_PRE
  zh: '[PRE623]'
- en: Returns all monomials from `f`.
  id: totrans-1587
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`中的所有单项式。
- en: '[PRE624]'
  id: totrans-1588
  prefs: []
  type: TYPE_PRE
  zh: '[PRE624]'
- en: Returns all terms from a `f`.
  id: totrans-1589
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的所有项。
- en: '[PRE625]'
  id: totrans-1590
  prefs: []
  type: TYPE_PRE
  zh: '[PRE625]'
- en: Cancel common factors in a rational function `f/g`.
  id: totrans-1591
  prefs: []
  type: TYPE_NORMAL
  zh: 取消有理函数`f/g`中的公因子。
- en: '[PRE626]'
  id: totrans-1592
  prefs: []
  type: TYPE_PRE
  zh: '[PRE626]'
- en: Computes the Cauchy lower bound on the nonzero roots of `f`.
  id: totrans-1593
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`f`的非零根的柯西下界。
- en: '[PRE627]'
  id: totrans-1594
  prefs: []
  type: TYPE_PRE
  zh: '[PRE627]'
- en: Computes the Cauchy upper bound on the roots of `f`.
  id: totrans-1595
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`f`的根的柯西上界。
- en: '[PRE628]'
  id: totrans-1596
  prefs: []
  type: TYPE_PRE
  zh: '[PRE628]'
- en: Clear denominators, but keep the ground domain.
  id: totrans-1597
  prefs: []
  type: TYPE_NORMAL
  zh: 清除分母，但保留地域域。
- en: '[PRE629]'
  id: totrans-1598
  prefs: []
  type: TYPE_PRE
  zh: '[PRE629]'
- en: Returns all non-zero coefficients from `f` in lex order.
  id: totrans-1599
  prefs: []
  type: TYPE_NORMAL
  zh: 按字典序返回`f`中的所有非零系数。
- en: '[PRE630]'
  id: totrans-1600
  prefs: []
  type: TYPE_PRE
  zh: '[PRE630]'
- en: Returns GCD of `f` and `g` and their cofactors.
  id: totrans-1601
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`和`g`的GCD及其余式。
- en: '[PRE631]'
  id: totrans-1602
  prefs: []
  type: TYPE_PRE
  zh: '[PRE631]'
- en: Computes functional composition of `f` and `g`.
  id: totrans-1603
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`f`和`g`的函数组合。
- en: '[PRE632]'
  id: totrans-1604
  prefs: []
  type: TYPE_PRE
  zh: '[PRE632]'
- en: Returns GCD of polynomial coefficients.
  id: totrans-1605
  prefs: []
  type: TYPE_NORMAL
  zh: 返回多项式系数的GCD。
- en: '[PRE633]'
  id: totrans-1606
  prefs: []
  type: TYPE_PRE
  zh: '[PRE633]'
- en: Convert `f` to a `DMP` over the new domain.
  id: totrans-1607
  prefs: []
  type: TYPE_NORMAL
  zh: 将`f`转换为在新域上的`DMP`。
- en: '[PRE634]'
  id: totrans-1608
  prefs: []
  type: TYPE_PRE
  zh: '[PRE634]'
- en: Return the number of complex roots of `f` in `[inf, sup]`.
  id: totrans-1609
  prefs: []
  type: TYPE_NORMAL
  zh: 在`[inf, sup]`中计算`f`的复根的数量。
- en: '[PRE635]'
  id: totrans-1610
  prefs: []
  type: TYPE_PRE
  zh: '[PRE635]'
- en: Return the number of real roots of `f` in `[inf, sup]`.
  id: totrans-1611
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`在`[inf, sup]`中的实根数。
- en: '[PRE636]'
  id: totrans-1612
  prefs: []
  type: TYPE_PRE
  zh: '[PRE636]'
- en: Computes functional decomposition of `f`.
  id: totrans-1613
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`f`的函数分解。
- en: '[PRE637]'
  id: totrans-1614
  prefs: []
  type: TYPE_PRE
  zh: '[PRE637]'
- en: Reduce degree of \(f\) by mapping \(x_i^m\) to \(y_i\).
  id: totrans-1615
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将\(x_i^m\)映射到\(y_i\)来减少\(f\)的次数。
- en: '[PRE638]'
  id: totrans-1616
  prefs: []
  type: TYPE_PRE
  zh: '[PRE638]'
- en: Returns the leading degree of `f` in `x_j`.
  id: totrans-1617
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`在`x_j`中的主导度。
- en: '[PRE639]'
  id: totrans-1618
  prefs: []
  type: TYPE_PRE
  zh: '[PRE639]'
- en: Returns a list of degrees of `f`.
  id: totrans-1619
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的次数列表。
- en: '[PRE640]'
  id: totrans-1620
  prefs: []
  type: TYPE_PRE
  zh: '[PRE640]'
- en: Computes the `m`-th order derivative of `f` in `x_j`.
  id: totrans-1621
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`f`在`x_j`处的`m`阶导数。
- en: '[PRE641]'
  id: totrans-1622
  prefs: []
  type: TYPE_PRE
  zh: '[PRE641]'
- en: Computes discriminant of `f`.
  id: totrans-1623
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`f`的判别式。
- en: '[PRE642]'
  id: totrans-1624
  prefs: []
  type: TYPE_PRE
  zh: '[PRE642]'
- en: Polynomial division with remainder of `f` and `g`.
  id: totrans-1625
  prefs: []
  type: TYPE_NORMAL
  zh: '`f`和`g`的多项式除法及余数。'
- en: '[PRE643]'
  id: totrans-1626
  prefs: []
  type: TYPE_PRE
  zh: '[PRE643]'
- en: Eject selected generators into the ground domain.
  id: totrans-1627
  prefs: []
  type: TYPE_NORMAL
  zh: 将选定的生成器弹出到基域。
- en: '[PRE644]'
  id: totrans-1628
  prefs: []
  type: TYPE_PRE
  zh: '[PRE644]'
- en: Evaluates `f` at the given point `a` in `x_j`.
  id: totrans-1629
  prefs: []
  type: TYPE_NORMAL
  zh: 在给定点`a`处评估`f`在`x_j`中。
- en: '[PRE645]'
  id: totrans-1630
  prefs: []
  type: TYPE_PRE
  zh: '[PRE645]'
- en: Remove useless generators from `f`.
  id: totrans-1631
  prefs: []
  type: TYPE_NORMAL
  zh: 从`f`中删除无用的生成器。
- en: Returns the removed generators and the new excluded `f`.
  id: totrans-1632
  prefs: []
  type: TYPE_NORMAL
  zh: 返回移除的生成器和新排除的`f`。
- en: Examples
  id: totrans-1633
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE646]'
  id: totrans-1634
  prefs: []
  type: TYPE_PRE
  zh: '[PRE646]'
- en: '[PRE647]'
  id: totrans-1635
  prefs: []
  type: TYPE_PRE
  zh: '[PRE647]'
- en: '[PRE648]'
  id: totrans-1636
  prefs: []
  type: TYPE_PRE
  zh: '[PRE648]'
- en: Computes polynomial exact quotient of `f` and `g`.
  id: totrans-1637
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`f`和`g`的多项式精确商。
- en: '[PRE649]'
  id: totrans-1638
  prefs: []
  type: TYPE_PRE
  zh: '[PRE649]'
- en: Exact quotient of `f` by a an element of the ground domain.
  id: totrans-1639
  prefs: []
  type: TYPE_NORMAL
  zh: 通过基域元素精确除`f`的商。
- en: '[PRE650]'
  id: totrans-1640
  prefs: []
  type: TYPE_PRE
  zh: '[PRE650]'
- en: Returns a list of irreducible factors of `f`.
  id: totrans-1641
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的不可约因子列表。
- en: '[PRE651]'
  id: totrans-1642
  prefs: []
  type: TYPE_PRE
  zh: '[PRE651]'
- en: Returns a list of irreducible factors of `f`.
  id: totrans-1643
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的不可约因子列表。
- en: '[PRE652]'
  id: totrans-1644
  prefs: []
  type: TYPE_PRE
  zh: '[PRE652]'
- en: Create an instance of `cls` given a list of native coefficients.
  id: totrans-1645
  prefs: []
  type: TYPE_NORMAL
  zh: 给定原生系数列表，创建`cls`的实例。
- en: '[PRE653]'
  id: totrans-1646
  prefs: []
  type: TYPE_PRE
  zh: '[PRE653]'
- en: Create an instance of `cls` given a list of SymPy coefficients.
  id: totrans-1647
  prefs: []
  type: TYPE_NORMAL
  zh: 给定SymPy系数列表，创建`cls`的实例。
- en: '[PRE654]'
  id: totrans-1648
  prefs: []
  type: TYPE_PRE
  zh: '[PRE654]'
- en: Returns polynomial GCD of `f` and `g`.
  id: totrans-1649
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`和`g`的多项式最大公约数。
- en: '[PRE655]'
  id: totrans-1650
  prefs: []
  type: TYPE_PRE
  zh: '[PRE655]'
- en: Extended Euclidean algorithm, if univariate.
  id: totrans-1651
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展欧几里得算法，如果是一元的。
- en: '[PRE656]'
  id: totrans-1652
  prefs: []
  type: TYPE_PRE
  zh: '[PRE656]'
- en: Computes greatest factorial factorization of `f`.
  id: totrans-1653
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`f`的最大阶乘因子分解。
- en: '[PRE657]'
  id: totrans-1654
  prefs: []
  type: TYPE_PRE
  zh: '[PRE657]'
- en: Construct a new ground instance of `f`.
  id: totrans-1655
  prefs: []
  type: TYPE_NORMAL
  zh: 构造`f`的新基域实例。
- en: '[PRE658]'
  id: totrans-1656
  prefs: []
  type: TYPE_PRE
  zh: '[PRE658]'
- en: Half extended Euclidean algorithm, if univariate.
  id: totrans-1657
  prefs: []
  type: TYPE_NORMAL
  zh: 半扩展欧几里得算法，如果是一元的。
- en: '[PRE659]'
  id: totrans-1658
  prefs: []
  type: TYPE_PRE
  zh: '[PRE659]'
- en: Returns the homogeneous order of `f`.
  id: totrans-1659
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的齐次阶数。
- en: '[PRE660]'
  id: totrans-1660
  prefs: []
  type: TYPE_PRE
  zh: '[PRE660]'
- en: Return homogeneous polynomial of `f`
  id: totrans-1661
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的齐次多项式。
- en: '[PRE661]'
  id: totrans-1662
  prefs: []
  type: TYPE_PRE
  zh: '[PRE661]'
- en: Inject ground domain generators into `f`.
  id: totrans-1663
  prefs: []
  type: TYPE_NORMAL
  zh: 将基域生成器注入到`f`中。
- en: '[PRE662]'
  id: totrans-1664
  prefs: []
  type: TYPE_PRE
  zh: '[PRE662]'
- en: Computes the `m`-th order indefinite integral of `f` in `x_j`.
  id: totrans-1665
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`f`在`x_j`中的`m`阶不定积分。
- en: '[PRE663]'
  id: totrans-1666
  prefs: []
  type: TYPE_PRE
  zh: '[PRE663]'
- en: Compute isolating intervals for roots of `f`.
  id: totrans-1667
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`f`的根的隔离区间。
- en: '[PRE664]'
  id: totrans-1668
  prefs: []
  type: TYPE_PRE
  zh: '[PRE664]'
- en: Invert `f` modulo `g`, if possible.
  id: totrans-1669
  prefs: []
  type: TYPE_NORMAL
  zh: 如果可能，对`f`关于`g`取模倒数。
- en: '[PRE665]'
  id: totrans-1670
  prefs: []
  type: TYPE_PRE
  zh: '[PRE665]'
- en: Returns `True` if `f` is a cyclotomic polynomial.
  id: totrans-1671
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`f`是循环多项式，则返回`True`。
- en: '[PRE666]'
  id: totrans-1672
  prefs: []
  type: TYPE_PRE
  zh: '[PRE666]'
- en: Returns `True` if `f` is an element of the ground domain.
  id: totrans-1673
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`f`是基域的元素，则返回`True`。
- en: '[PRE667]'
  id: totrans-1674
  prefs: []
  type: TYPE_PRE
  zh: '[PRE667]'
- en: Returns `True` if `f` is a homogeneous polynomial.
  id: totrans-1675
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`f`是齐次多项式，则返回`True`。
- en: '[PRE668]'
  id: totrans-1676
  prefs: []
  type: TYPE_PRE
  zh: '[PRE668]'
- en: Returns `True` if `f` has no factors over its domain.
  id: totrans-1677
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`f`在其域中没有因子，则返回`True`。
- en: '[PRE669]'
  id: totrans-1678
  prefs: []
  type: TYPE_PRE
  zh: '[PRE669]'
- en: Returns `True` if `f` is linear in all its variables.
  id: totrans-1679
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`f`在所有变量中都是线性的，则返回`True`。
- en: '[PRE670]'
  id: totrans-1680
  prefs: []
  type: TYPE_PRE
  zh: '[PRE670]'
- en: Returns `True` if the leading coefficient of `f` is one.
  id: totrans-1681
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`f`的首项系数为1，则返回`True`。
- en: '[PRE671]'
  id: totrans-1682
  prefs: []
  type: TYPE_PRE
  zh: '[PRE671]'
- en: Returns `True` if `f` is zero or has only one term.
  id: totrans-1683
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`f`为零或只有一项，则返回`True`。
- en: '[PRE672]'
  id: totrans-1684
  prefs: []
  type: TYPE_PRE
  zh: '[PRE672]'
- en: Returns `True` if `f` is a unit polynomial.
  id: totrans-1685
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`f`是单位多项式，则返回`True`。
- en: '[PRE673]'
  id: totrans-1686
  prefs: []
  type: TYPE_PRE
  zh: '[PRE673]'
- en: Returns `True` if the GCD of the coefficients of `f` is one.
  id: totrans-1687
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`f`的系数的最大公约数为1，则返回`True`。
- en: '[PRE674]'
  id: totrans-1688
  prefs: []
  type: TYPE_PRE
  zh: '[PRE674]'
- en: Returns `True` if `f` is quadratic in all its variables.
  id: totrans-1689
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`f`在所有变量中都是二次的，则返回`True`。
- en: '[PRE675]'
  id: totrans-1690
  prefs: []
  type: TYPE_PRE
  zh: '[PRE675]'
- en: Returns `True` if `f` is a square-free polynomial.
  id: totrans-1691
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`f`是无平方根多项式，则返回`True`。
- en: '[PRE676]'
  id: totrans-1692
  prefs: []
  type: TYPE_PRE
  zh: '[PRE676]'
- en: Returns `True` if `f` is a zero polynomial.
  id: totrans-1693
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`f`是零多项式，则返回`True`。
- en: '[PRE677]'
  id: totrans-1694
  prefs: []
  type: TYPE_PRE
  zh: '[PRE677]'
- en: Returns l1 norm of `f`.
  id: totrans-1695
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的l1范数。
- en: '[PRE678]'
  id: totrans-1696
  prefs: []
  type: TYPE_PRE
  zh: '[PRE678]'
- en: Return squared l2 norm of `f`.
  id: totrans-1697
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的平方l2范数。
- en: '[PRE679]'
  id: totrans-1698
  prefs: []
  type: TYPE_PRE
  zh: '[PRE679]'
- en: Returns polynomial LCM of `f` and `g`.
  id: totrans-1699
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`和`g`的多项式最小公倍数。
- en: '[PRE680]'
  id: totrans-1700
  prefs: []
  type: TYPE_PRE
  zh: '[PRE680]'
- en: Convert algebraic coefficients to rationals.
  id: totrans-1701
  prefs: []
  type: TYPE_NORMAL
  zh: 将代数系数转换为有理数。
- en: '[PRE681]'
  id: totrans-1702
  prefs: []
  type: TYPE_PRE
  zh: '[PRE681]'
- en: Returns maximum norm of `f`.
  id: totrans-1703
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的最大范数。
- en: '[PRE682]'
  id: totrans-1704
  prefs: []
  type: TYPE_PRE
  zh: '[PRE682]'
- en: Computes the squared Mignotte bound on root separations of `f`.
  id: totrans-1705
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`f`根分离的平方Mignotte界。
- en: '[PRE683]'
  id: totrans-1706
  prefs: []
  type: TYPE_PRE
  zh: '[PRE683]'
- en: Divides all coefficients by `LC(f)`.
  id: totrans-1707
  prefs: []
  type: TYPE_NORMAL
  zh: 将`f`的所有系数除以`LC(f)`。
- en: '[PRE684]'
  id: totrans-1708
  prefs: []
  type: TYPE_PRE
  zh: '[PRE684]'
- en: Returns all non-zero monomials from `f` in lex order.
  id: totrans-1709
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`中按字典序的所有非零单项式。
- en: '[PRE685]'
  id: totrans-1710
  prefs: []
  type: TYPE_PRE
  zh: '[PRE685]'
- en: Multiply two multivariate polynomials `f` and `g`.
  id: totrans-1711
  prefs: []
  type: TYPE_NORMAL
  zh: 将两个多变量多项式`f`和`g`相乘。
- en: '[PRE686]'
  id: totrans-1712
  prefs: []
  type: TYPE_PRE
  zh: '[PRE686]'
- en: Multiply `f` by a an element of the ground domain.
  id: totrans-1713
  prefs: []
  type: TYPE_NORMAL
  zh: 将`f`乘以基域的元素。
- en: '[PRE687]'
  id: totrans-1714
  prefs: []
  type: TYPE_PRE
  zh: '[PRE687]'
- en: Negate all coefficients in `f`.
  id: totrans-1715
  prefs: []
  type: TYPE_NORMAL
  zh: 反转`f`中所有系数。
- en: '[PRE688]'
  id: totrans-1716
  prefs: []
  type: TYPE_PRE
  zh: '[PRE688]'
- en: Computes `Norm(f)`.
  id: totrans-1717
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`Norm(f)`。
- en: '[PRE689]'
  id: totrans-1718
  prefs: []
  type: TYPE_PRE
  zh: '[PRE689]'
- en: Returns the `n`-th coefficient of `f`.
  id: totrans-1719
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的第`n`个系数。
- en: '[PRE690]'
  id: totrans-1720
  prefs: []
  type: TYPE_PRE
  zh: '[PRE690]'
- en: Polynomial pseudo-division of `f` and `g`.
  id: totrans-1721
  prefs: []
  type: TYPE_NORMAL
  zh: '`f`和`g`的多项式伪除法。'
- en: '[PRE691]'
  id: totrans-1722
  prefs: []
  type: TYPE_PRE
  zh: '[PRE691]'
- en: Returns a polynomial in \(K[x_{P(1)}, ..., x_{P(n)}]\).
  id: totrans-1723
  prefs: []
  type: TYPE_NORMAL
  zh: 返回在\(K[x_{P(1)}, ..., x_{P(n)}]\)中的多项式。
- en: Examples
  id: totrans-1724
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE692]'
  id: totrans-1725
  prefs: []
  type: TYPE_PRE
  zh: '[PRE692]'
- en: '[PRE693]'
  id: totrans-1726
  prefs: []
  type: TYPE_PRE
  zh: '[PRE693]'
- en: '[PRE694]'
  id: totrans-1727
  prefs: []
  type: TYPE_PRE
  zh: '[PRE694]'
- en: '[PRE695]'
  id: totrans-1728
  prefs: []
  type: TYPE_PRE
  zh: '[PRE695]'
- en: Polynomial exact pseudo-quotient of `f` and `g`.
  id: totrans-1729
  prefs: []
  type: TYPE_NORMAL
  zh: '`f`和`g`的多项式精确伪商。'
- en: '[PRE696]'
  id: totrans-1730
  prefs: []
  type: TYPE_PRE
  zh: '[PRE696]'
- en: Raise `f` to a non-negative power `n`.
  id: totrans-1731
  prefs: []
  type: TYPE_NORMAL
  zh: 将`f`提升到非负幂`n`。
- en: '[PRE697]'
  id: totrans-1732
  prefs: []
  type: TYPE_PRE
  zh: '[PRE697]'
- en: Polynomial pseudo-quotient of `f` and `g`.
  id: totrans-1733
  prefs: []
  type: TYPE_NORMAL
  zh: '`f`和`g`的多项式伪商。'
- en: '[PRE698]'
  id: totrans-1734
  prefs: []
  type: TYPE_PRE
  zh: '[PRE698]'
- en: Polynomial pseudo-remainder of `f` and `g`.
  id: totrans-1735
  prefs: []
  type: TYPE_NORMAL
  zh: '`f`和`g`的多项式伪余数。'
- en: '[PRE699]'
  id: totrans-1736
  prefs: []
  type: TYPE_PRE
  zh: '[PRE699]'
- en: Returns content and a primitive form of `f`.
  id: totrans-1737
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的内容和一个原始形式。
- en: '[PRE700]'
  id: totrans-1738
  prefs: []
  type: TYPE_PRE
  zh: '[PRE700]'
- en: Computes polynomial quotient of `f` and `g`.
  id: totrans-1739
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`f`和`g`的多项式商。
- en: '[PRE701]'
  id: totrans-1740
  prefs: []
  type: TYPE_PRE
  zh: '[PRE701]'
- en: Quotient of `f` by a an element of the ground domain.
  id: totrans-1741
  prefs: []
  type: TYPE_NORMAL
  zh: 通过基域元素除`f`的商。
- en: '[PRE702]'
  id: totrans-1742
  prefs: []
  type: TYPE_PRE
  zh: '[PRE702]'
- en: Refine an isolating interval to the given precision.
  id: totrans-1743
  prefs: []
  type: TYPE_NORMAL
  zh: 精确化到给定精度的隔离区间。
- en: '`eps` should be a rational number.'
  id: totrans-1744
  prefs: []
  type: TYPE_NORMAL
  zh: '`eps` 应为一个有理数。'
- en: '[PRE703]'
  id: totrans-1745
  prefs: []
  type: TYPE_PRE
  zh: '[PRE703]'
- en: Computes polynomial remainder of `f` and `g`.
  id: totrans-1746
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 和 `g` 的多项式余数。
- en: '[PRE704]'
  id: totrans-1747
  prefs: []
  type: TYPE_PRE
  zh: '[PRE704]'
- en: Get the representation of `f`.
  id: totrans-1748
  prefs: []
  type: TYPE_NORMAL
  zh: 获取 `f` 的表示。
- en: '[PRE705]'
  id: totrans-1749
  prefs: []
  type: TYPE_PRE
  zh: '[PRE705]'
- en: Computes resultant of `f` and `g` via PRS.
  id: totrans-1750
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 PRS 计算 `f` 和 `g` 的结果。
- en: '[PRE706]'
  id: totrans-1751
  prefs: []
  type: TYPE_PRE
  zh: '[PRE706]'
- en: Compute `f**(-1)` mod `x**n`.
  id: totrans-1752
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f**(-1)` 模 `x**n`。
- en: '[PRE707]'
  id: totrans-1753
  prefs: []
  type: TYPE_PRE
  zh: '[PRE707]'
- en: Efficiently compute Taylor shift `f(x + a)`.
  id: totrans-1754
  prefs: []
  type: TYPE_NORMAL
  zh: 高效计算 Taylor 移位 `f(x + a)`。
- en: '[PRE708]'
  id: totrans-1755
  prefs: []
  type: TYPE_PRE
  zh: '[PRE708]'
- en: Efficiently compute Taylor shift `f(X + A)`.
  id: totrans-1756
  prefs: []
  type: TYPE_NORMAL
  zh: 高效计算 Taylor 移位 `f(X + A)`。
- en: '[PRE709]'
  id: totrans-1757
  prefs: []
  type: TYPE_PRE
  zh: '[PRE709]'
- en: Take a continuous subsequence of terms of `f`.
  id: totrans-1758
  prefs: []
  type: TYPE_NORMAL
  zh: 取 `f` 的项的连续子序列。
- en: '[PRE710]'
  id: totrans-1759
  prefs: []
  type: TYPE_PRE
  zh: '[PRE710]'
- en: Returns a list of square-free factors of `f`.
  id: totrans-1760
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的平方自由因子列表。
- en: '[PRE711]'
  id: totrans-1761
  prefs: []
  type: TYPE_PRE
  zh: '[PRE711]'
- en: Returns a list of square-free factors of `f`.
  id: totrans-1762
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的平方自由因子列表。
- en: '[PRE712]'
  id: totrans-1763
  prefs: []
  type: TYPE_PRE
  zh: '[PRE712]'
- en: Computes square-free norm of `f`.
  id: totrans-1764
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的平方自由规范。
- en: '[PRE713]'
  id: totrans-1765
  prefs: []
  type: TYPE_PRE
  zh: '[PRE713]'
- en: Computes square-free part of `f`.
  id: totrans-1766
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的平方自由部分。
- en: '[PRE714]'
  id: totrans-1767
  prefs: []
  type: TYPE_PRE
  zh: '[PRE714]'
- en: Square a multivariate polynomial `f`.
  id: totrans-1768
  prefs: []
  type: TYPE_NORMAL
  zh: 对多变量多项式 `f` 进行平方。
- en: '[PRE715]'
  id: totrans-1769
  prefs: []
  type: TYPE_PRE
  zh: '[PRE715]'
- en: Computes the Sturm sequence of `f`.
  id: totrans-1770
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的斯图姆序列。
- en: '[PRE716]'
  id: totrans-1771
  prefs: []
  type: TYPE_PRE
  zh: '[PRE716]'
- en: Subtract two multivariate polynomials `f` and `g`.
  id: totrans-1772
  prefs: []
  type: TYPE_NORMAL
  zh: 将两个多变量多项式 `f` 和 `g` 相减。
- en: '[PRE717]'
  id: totrans-1773
  prefs: []
  type: TYPE_PRE
  zh: '[PRE717]'
- en: Subtract an element of the ground domain from `f`.
  id: totrans-1774
  prefs: []
  type: TYPE_NORMAL
  zh: 从地面域中减去 `f` 的一个元素。
- en: '[PRE718]'
  id: totrans-1775
  prefs: []
  type: TYPE_PRE
  zh: '[PRE718]'
- en: Computes subresultant PRS sequence of `f` and `g`.
  id: totrans-1776
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 和 `g` 的子结果 PRS 序列。
- en: '[PRE719]'
  id: totrans-1777
  prefs: []
  type: TYPE_PRE
  zh: '[PRE719]'
- en: Returns all non-zero terms from `f` in lex order.
  id: totrans-1778
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 中按字典顺序的所有非零项。
- en: '[PRE720]'
  id: totrans-1779
  prefs: []
  type: TYPE_PRE
  zh: '[PRE720]'
- en: Remove GCD of terms from the polynomial `f`.
  id: totrans-1780
  prefs: []
  type: TYPE_NORMAL
  zh: 从多项式 `f` 中删除项的最大公因数。
- en: '[PRE721]'
  id: totrans-1781
  prefs: []
  type: TYPE_PRE
  zh: '[PRE721]'
- en: Convert to DUP_Flint if possible.
  id: totrans-1782
  prefs: []
  type: TYPE_NORMAL
  zh: 如果可能，转换为 DUP_Flint。
- en: This method should be used when the domain or level is changed and it potentially
    becomes possible to convert from DMP_Python to DUP_Flint.
  id: totrans-1783
  prefs: []
  type: TYPE_NORMAL
  zh: 当域或级别改变时应使用此方法，可能可以从 DMP_Python 转换为 DUP_Flint。
- en: '[PRE722]'
  id: totrans-1784
  prefs: []
  type: TYPE_PRE
  zh: '[PRE722]'
- en: Convert `f` to a dict representation with native coefficients.
  id: totrans-1785
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `f` 转换为具有本机系数的字典表示。
- en: '[PRE723]'
  id: totrans-1786
  prefs: []
  type: TYPE_PRE
  zh: '[PRE723]'
- en: Make the ground domain exact.
  id: totrans-1787
  prefs: []
  type: TYPE_NORMAL
  zh: 使地面域精确。
- en: '[PRE724]'
  id: totrans-1788
  prefs: []
  type: TYPE_PRE
  zh: '[PRE724]'
- en: Make the ground domain a field.
  id: totrans-1789
  prefs: []
  type: TYPE_NORMAL
  zh: 使地面域成为一个域。
- en: '[PRE725]'
  id: totrans-1790
  prefs: []
  type: TYPE_PRE
  zh: '[PRE725]'
- en: Convert `f` to a list representation with native coefficients.
  id: totrans-1791
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `f` 转换为具有本机系数的列表表示。
- en: '[PRE726]'
  id: totrans-1792
  prefs: []
  type: TYPE_PRE
  zh: '[PRE726]'
- en: Make the ground domain a ring.
  id: totrans-1793
  prefs: []
  type: TYPE_NORMAL
  zh: 使地面域成为一个环。
- en: '[PRE727]'
  id: totrans-1794
  prefs: []
  type: TYPE_PRE
  zh: '[PRE727]'
- en: Convert `f` to a dict representation with SymPy coefficients.
  id: totrans-1795
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `f` 转换为具有 SymPy 系数的字典表示。
- en: '[PRE728]'
  id: totrans-1796
  prefs: []
  type: TYPE_PRE
  zh: '[PRE728]'
- en: Convert `f` to a list representation with SymPy coefficients.
  id: totrans-1797
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `f` 转换为具有 SymPy 系数的列表表示。
- en: '[PRE729]'
  id: totrans-1798
  prefs: []
  type: TYPE_PRE
  zh: '[PRE729]'
- en: Convert `f` to a tuple representation with native coefficients.
  id: totrans-1799
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `f` 转换为具有本机系数的元组表示。
- en: This is needed for hashing.
  id: totrans-1800
  prefs: []
  type: TYPE_NORMAL
  zh: 这是哈希所需的。
- en: '[PRE730]'
  id: totrans-1801
  prefs: []
  type: TYPE_PRE
  zh: '[PRE730]'
- en: Returns the total degree of `f`.
  id: totrans-1802
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的总次数。
- en: '[PRE731]'
  id: totrans-1803
  prefs: []
  type: TYPE_PRE
  zh: '[PRE731]'
- en: Evaluate functional transformation `q**n * f(p/q)`.
  id: totrans-1804
  prefs: []
  type: TYPE_NORMAL
  zh: 评估功能变换 `q**n * f(p/q)`。
- en: '[PRE732]'
  id: totrans-1805
  prefs: []
  type: TYPE_PRE
  zh: '[PRE732]'
- en: Reduce `f` modulo a constant `p`.
  id: totrans-1806
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `f` 减去常数 `p` 的模。
- en: '[PRE733]'
  id: totrans-1807
  prefs: []
  type: TYPE_PRE
  zh: '[PRE733]'
- en: Unify and return `DMP` instances of `f` and `g`.
  id: totrans-1808
  prefs: []
  type: TYPE_NORMAL
  zh: 统一并返回 `f` 和 `g` 的 `DMP` 实例。
- en: '[PRE734]'
  id: totrans-1809
  prefs: []
  type: TYPE_PRE
  zh: '[PRE734]'
- en: Dense Multivariate Fractions over \(K\).
  id: totrans-1810
  prefs: []
  type: TYPE_NORMAL
  zh: 在域 \(K\) 上的密集多变量分数。
- en: '[PRE735]'
  id: totrans-1811
  prefs: []
  type: TYPE_PRE
  zh: '[PRE735]'
- en: Add two multivariate fractions `f` and `g`.
  id: totrans-1812
  prefs: []
  type: TYPE_NORMAL
  zh: 将两个多变量分数 `f` 和 `g` 相加。
- en: '[PRE736]'
  id: totrans-1813
  prefs: []
  type: TYPE_PRE
  zh: '[PRE736]'
- en: Add an element of the ground domain to `f`.
  id: totrans-1814
  prefs: []
  type: TYPE_NORMAL
  zh: 向 `f` 添加地面域的一个元素。
- en: '[PRE737]'
  id: totrans-1815
  prefs: []
  type: TYPE_PRE
  zh: '[PRE737]'
- en: Remove common factors from `f.num` and `f.den`.
  id: totrans-1816
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `f.num` 和 `f.den` 中删除公共因子。
- en: '[PRE738]'
  id: totrans-1817
  prefs: []
  type: TYPE_PRE
  zh: '[PRE738]'
- en: Returns the denominator of `f`.
  id: totrans-1818
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的分母。
- en: '[PRE739]'
  id: totrans-1819
  prefs: []
  type: TYPE_PRE
  zh: '[PRE739]'
- en: Computes quotient of fractions `f` and `g`.
  id: totrans-1820
  prefs: []
  type: TYPE_NORMAL
  zh: 计算分数 `f` 和 `g` 的商。
- en: '[PRE740]'
  id: totrans-1821
  prefs: []
  type: TYPE_PRE
  zh: '[PRE740]'
- en: Unify representations of two multivariate fractions.
  id: totrans-1822
  prefs: []
  type: TYPE_NORMAL
  zh: 统一两个多变量分数的表示。
- en: '[PRE741]'
  id: totrans-1823
  prefs: []
  type: TYPE_PRE
  zh: '[PRE741]'
- en: Create a DMP out of the given representation.
  id: totrans-1824
  prefs: []
  type: TYPE_NORMAL
  zh: 创建给定表示的 DMP。
- en: '[PRE742]'
  id: totrans-1825
  prefs: []
  type: TYPE_PRE
  zh: '[PRE742]'
- en: Computes inverse of a fraction `f`.
  id: totrans-1826
  prefs: []
  type: TYPE_NORMAL
  zh: 计算分数 `f` 的逆。
- en: '[PRE743]'
  id: totrans-1827
  prefs: []
  type: TYPE_PRE
  zh: '[PRE743]'
- en: Returns `True` if `f` is a unit fraction.
  id: totrans-1828
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `f` 是单位分数，返回 `True`。
- en: '[PRE744]'
  id: totrans-1829
  prefs: []
  type: TYPE_PRE
  zh: '[PRE744]'
- en: Returns `True` if `f` is a zero fraction.
  id: totrans-1830
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `f` 是零分数，返回 `True`。
- en: '[PRE745]'
  id: totrans-1831
  prefs: []
  type: TYPE_PRE
  zh: '[PRE745]'
- en: Multiply two multivariate fractions `f` and `g`.
  id: totrans-1832
  prefs: []
  type: TYPE_NORMAL
  zh: 乘以两个多变量分数 `f` 和 `g`。
- en: '[PRE746]'
  id: totrans-1833
  prefs: []
  type: TYPE_PRE
  zh: '[PRE746]'
- en: Negate all coefficients in `f`.
  id: totrans-1834
  prefs: []
  type: TYPE_NORMAL
  zh: 反转 `f` 中的所有系数。
- en: '[PRE747]'
  id: totrans-1835
  prefs: []
  type: TYPE_PRE
  zh: '[PRE747]'
- en: Returns the numerator of `f`.
  id: totrans-1836
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的分子。
- en: '[PRE748]'
  id: totrans-1837
  prefs: []
  type: TYPE_PRE
  zh: '[PRE748]'
- en: Create a DMF out of the given representation.
  id: totrans-1838
  prefs: []
  type: TYPE_NORMAL
  zh: 根据给定表示创建 DMF。
- en: '[PRE749]'
  id: totrans-1839
  prefs: []
  type: TYPE_PRE
  zh: '[PRE749]'
- en: Unify a multivariate fraction and a polynomial.
  id: totrans-1840
  prefs: []
  type: TYPE_NORMAL
  zh: 统一多变量分数和多项式。
- en: '[PRE750]'
  id: totrans-1841
  prefs: []
  type: TYPE_PRE
  zh: '[PRE750]'
- en: Raise `f` to a non-negative power `n`.
  id: totrans-1842
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `f` 提升到非负幂 `n`。
- en: '[PRE751]'
  id: totrans-1843
  prefs: []
  type: TYPE_PRE
  zh: '[PRE751]'
- en: Computes quotient of fractions `f` and `g`.
  id: totrans-1844
  prefs: []
  type: TYPE_NORMAL
  zh: 计算分数 `f` 和 `g` 的商。
- en: '[PRE752]'
  id: totrans-1845
  prefs: []
  type: TYPE_PRE
  zh: '[PRE752]'
- en: Subtract two multivariate fractions `f` and `g`.
  id: totrans-1846
  prefs: []
  type: TYPE_NORMAL
  zh: 将两个多变量分数 `f` 和 `g` 相减。
- en: '[PRE753]'
  id: totrans-1847
  prefs: []
  type: TYPE_PRE
  zh: '[PRE753]'
- en: Dense Algebraic Number Polynomials over a field.
  id: totrans-1848
  prefs: []
  type: TYPE_NORMAL
  zh: 在域上的密集代数数多项式。
- en: '[PRE754]'
  id: totrans-1849
  prefs: []
  type: TYPE_PRE
  zh: '[PRE754]'
- en: Returns the leading coefficient of `f`.
  id: totrans-1850
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的首项系数。
- en: '[PRE755]'
  id: totrans-1851
  prefs: []
  type: TYPE_PRE
  zh: '[PRE755]'
- en: Returns the trailing coefficient of `f`.
  id: totrans-1852
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的尾数系数。
- en: '[PRE756]'
  id: totrans-1853
  prefs: []
  type: TYPE_PRE
  zh: '[PRE756]'
- en: Add an element of the ground domain to `f`.
  id: totrans-1854
  prefs: []
  type: TYPE_NORMAL
  zh: 向 `f` 添加地面域的一个元素。
- en: '[PRE757]'
  id: totrans-1855
  prefs: []
  type: TYPE_PRE
  zh: '[PRE757]'
- en: Convert `f` to a `ANP` over a new domain.
  id: totrans-1856
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `f` 转换为新域上的 `ANP`。
- en: '[PRE758]'
  id: totrans-1857
  prefs: []
  type: TYPE_PRE
  zh: '[PRE758]'
- en: Returns `True` if `f` is an element of the ground domain.
  id: totrans-1858
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `f` 是地面域的元素，返回 `True`。
- en: '[PRE759]'
  id: totrans-1859
  prefs: []
  type: TYPE_PRE
  zh: '[PRE759]'
- en: Returns `True` if `f` is a unit algebraic number.
  id: totrans-1860
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `f` 是单位代数数，返回 `True`。
- en: '[PRE760]'
  id: totrans-1861
  prefs: []
  type: TYPE_PRE
  zh: '[PRE760]'
- en: Returns `True` if `f` is a zero algebraic number.
  id: totrans-1862
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `f` 是零代数数，返回 `True`。
- en: '[PRE761]'
  id: totrans-1863
  prefs: []
  type: TYPE_PRE
  zh: '[PRE761]'
- en: Return `f.mod` as a list with native coefficients.
  id: totrans-1864
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `f.mod` 作为具有本机系数的列表返回。
- en: '[PRE762]'
  id: totrans-1865
  prefs: []
  type: TYPE_PRE
  zh: '[PRE762]'
- en: Multiply `f` by an element of the ground domain.
  id: totrans-1866
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `f` 乘以地面域的一个元素。
- en: '[PRE763]'
  id: totrans-1867
  prefs: []
  type: TYPE_PRE
  zh: '[PRE763]'
- en: Raise `f` to a non-negative power `n`.
  id: totrans-1868
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `f` 提升到非负幂 `n`。
- en: '[PRE764]'
  id: totrans-1869
  prefs: []
  type: TYPE_PRE
  zh: '[PRE764]'
- en: Quotient of `f` by an element of the ground domain.
  id: totrans-1870
  prefs: []
  type: TYPE_NORMAL
  zh: 以地面域元素为除数`f`的商。
- en: '[PRE765]'
  id: totrans-1871
  prefs: []
  type: TYPE_PRE
  zh: '[PRE765]'
- en: Subtract an element of the ground domain from `f`.
  id: totrans-1872
  prefs: []
  type: TYPE_NORMAL
  zh: 从地面域元素中减去`f`。
- en: '[PRE766]'
  id: totrans-1873
  prefs: []
  type: TYPE_PRE
  zh: '[PRE766]'
- en: Convert `f` to a dict representation with native coefficients.
  id: totrans-1874
  prefs: []
  type: TYPE_NORMAL
  zh: 将`f`转换为具有本地系数的字典表示。
- en: '[PRE767]'
  id: totrans-1875
  prefs: []
  type: TYPE_PRE
  zh: '[PRE767]'
- en: Convert `f` to a list representation with native coefficients.
  id: totrans-1876
  prefs: []
  type: TYPE_NORMAL
  zh: 将`f`转换为具有本地系数的列表表示。
- en: '[PRE768]'
  id: totrans-1877
  prefs: []
  type: TYPE_PRE
  zh: '[PRE768]'
- en: Convert `f` to a dict representation with SymPy coefficients.
  id: totrans-1878
  prefs: []
  type: TYPE_NORMAL
  zh: 将`f`转换为具有SymPy系数的字典表示。
- en: '[PRE769]'
  id: totrans-1879
  prefs: []
  type: TYPE_PRE
  zh: '[PRE769]'
- en: Convert `f` to a list representation with SymPy coefficients.
  id: totrans-1880
  prefs: []
  type: TYPE_NORMAL
  zh: 将`f`转换为具有SymPy系数的列表表示。
- en: '[PRE770]'
  id: totrans-1881
  prefs: []
  type: TYPE_PRE
  zh: '[PRE770]'
- en: Convert `f` to a tuple representation with native coefficients.
  id: totrans-1882
  prefs: []
  type: TYPE_NORMAL
  zh: 将`f`转换为具有本地系数的元组表示。
- en: This is needed for hashing.
  id: totrans-1883
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于哈希是必需的。
- en: '[PRE771]'
  id: totrans-1884
  prefs: []
  type: TYPE_PRE
  zh: '[PRE771]'
- en: Unify representations of two algebraic numbers.
  id: totrans-1885
  prefs: []
  type: TYPE_NORMAL
  zh: 统一两个代数数的表示。
- en: '[PRE772]'
  id: totrans-1886
  prefs: []
  type: TYPE_PRE
  zh: '[PRE772]'
- en: Unify and return `DMP` instances of `f` and `g`.
  id: totrans-1887
  prefs: []
  type: TYPE_NORMAL
  zh: 统一并返回`f`和`g`的`DMP`实例。
