- en: What’s new in 0.23.0 (May 15, 2018)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/whatsnew/v0.23.0.html](https://pandas.pydata.org/docs/whatsnew/v0.23.0.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This is a major release from 0.22.0 and includes a number of API changes, deprecations,
    new features, enhancements, and performance improvements along with a large number
    of bug fixes. We recommend that all users upgrade to this version.
  prefs: []
  type: TYPE_NORMAL
- en: 'Highlights include:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Round-trippable JSON format with ‘table’ orient](#whatsnew-0230-enhancements-round-trippable-json).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Instantiation from dicts respects order for Python 3.6+](#whatsnew-0230-api-breaking-dict-insertion-order).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Dependent column arguments for assign](#whatsnew-0230-enhancements-assign-dependent).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Merging / sorting on a combination of columns and index levels](#whatsnew-0230-enhancements-merge-on-columns-and-levels).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Extending pandas with custom types](#whatsnew-023-enhancements-extension).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Excluding unobserved categories from groupby](#whatsnew-0230-enhancements-categorical-grouping).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Changes to make output shape of DataFrame.apply consistent](#whatsnew-0230-api-breaking-apply).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Check the [API Changes](#whatsnew-0230-api-breaking) and [deprecations](#whatsnew-0230-deprecations)
    before updating.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: Starting January 1, 2019, pandas feature releases will support Python 3 only.
    See [Dropping Python 2.7](https://pandas.pydata.org/pandas-docs/version/0.24/install.html#install-dropping-27)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: What’s new in v0.23.0
  prefs: []
  type: TYPE_NORMAL
- en: '[New features](#new-features)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[JSON read/write round-trippable with `orient=''table''`](#json-read-write-round-trippable-with-orient-table)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Method `.assign()` accepts dependent arguments](#method-assign-accepts-dependent-arguments)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Merging on a combination of columns and index levels](#merging-on-a-combination-of-columns-and-index-levels)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Sorting by a combination of columns and index levels](#sorting-by-a-combination-of-columns-and-index-levels)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Extending pandas with custom types (experimental)](#extending-pandas-with-custom-types-experimental)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[New `observed` keyword for excluding unobserved categories in `GroupBy`](#new-observed-keyword-for-excluding-unobserved-categories-in-groupby)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Rolling/Expanding.apply() accepts `raw=False` to pass a `Series` to the function](#rolling-expanding-apply-accepts-raw-false-to-pass-a-series-to-the-function)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.interpolate` has gained the `limit_area` kwarg](#dataframe-interpolate-has-gained-the-limit-area-kwarg)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Function `get_dummies` now supports `dtype` argument](#function-get-dummies-now-supports-dtype-argument)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Timedelta mod method](#timedelta-mod-method)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Method `.rank()` handles `inf` values when `NaN` are present](#method-rank-handles-inf-values-when-nan-are-present)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.str.cat` has gained the `join` kwarg](#series-str-cat-has-gained-the-join-kwarg)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.astype` performs column-wise conversion to `Categorical`](#dataframe-astype-performs-column-wise-conversion-to-categorical)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Other enhancements](#other-enhancements)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Backwards incompatible API changes](#backwards-incompatible-api-changes)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Dependencies have increased minimum versions](#dependencies-have-increased-minimum-versions)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Instantiation from dicts preserves dict insertion order for Python 3.6+](#instantiation-from-dicts-preserves-dict-insertion-order-for-python-3-6)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Deprecate Panel](#deprecate-panel)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas.core.common removals](#pandas-core-common-removals)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Changes to make output of `DataFrame.apply` consistent](#changes-to-make-output-of-dataframe-apply-consistent)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Concatenation will no longer sort](#concatenation-will-no-longer-sort)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Build changes](#build-changes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Index division by zero fills correctly](#index-division-by-zero-fills-correctly)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Extraction of matching patterns from strings](#extraction-of-matching-patterns-from-strings)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Default value for the `ordered` parameter of `CategoricalDtype`](#default-value-for-the-ordered-parameter-of-categoricaldtype)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Better pretty-printing of DataFrames in a terminal](#better-pretty-printing-of-dataframes-in-a-terminal)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Datetimelike API changes](#datetimelike-api-changes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Other API changes](#other-api-changes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Deprecations](#deprecations)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Removal of prior version deprecations/changes](#removal-of-prior-version-deprecations-changes)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Performance improvements](#performance-improvements)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Documentation changes](#documentation-changes)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Bug fixes](#bug-fixes)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Categorical](#categorical)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Datetimelike](#datetimelike)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Timedelta](#timedelta)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Timezones](#timezones)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Offsets](#offsets)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Numeric](#numeric)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Strings](#strings)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Indexing](#indexing)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[MultiIndex](#multiindex)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[IO](#io)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Plotting](#plotting)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[GroupBy/resample/rolling](#groupby-resample-rolling)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Sparse](#sparse)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Reshaping](#reshaping)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Other](#other)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Contributors](#contributors)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## New features'
  prefs: []
  type: TYPE_NORMAL
- en: '### JSON read/write round-trippable with `orient=''table''`'
  prefs: []
  type: TYPE_NORMAL
- en: A `DataFrame` can now be written to and subsequently read back via JSON while
    preserving metadata through usage of the `orient='table'` argument (see [GH 18912](https://github.com/pandas-dev/pandas/issues/18912)
    and [GH 9146](https://github.com/pandas-dev/pandas/issues/9146)). Previously,
    none of the available `orient` values guaranteed the preservation of dtypes and
    index names, amongst other metadata.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Please note that the string `index` is not supported with the round trip format,
    as it is used by default in `write_json` to indicate a missing index name.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]  ### Method `.assign()` accepts dependent arguments'
  prefs: []
  type: TYPE_NORMAL
- en: The [`DataFrame.assign()`](../reference/api/pandas.DataFrame.assign.html#pandas.DataFrame.assign
    "pandas.DataFrame.assign") now accepts dependent keyword arguments for python
    version later than 3.6 (see also [PEP 468](https://www.python.org/dev/peps/pep-0468/)).
    Later keyword arguments may now refer to earlier ones if the argument is a callable.
    See the [documentation here](../user_guide/dsintro.html#dsintro-chained-assignment)
    ([GH 14207](https://github.com/pandas-dev/pandas/issues/14207))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: This may subtly change the behavior of your code when you’re using `.assign()`
    to update an existing column. Previously, callables referring to other variables
    being updated would get the “old” values
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]  ### Merging on a combination of columns and index levels'
  prefs: []
  type: TYPE_NORMAL
- en: Strings passed to [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") as the `on`, `left_on`, and `right_on` parameters may
    now refer to either column names or index level names. This enables merging `DataFrame`
    instances on a combination of index levels and columns without resetting indexes.
    See the [Merge on columns and levels](../user_guide/merging.html#merging-merge-on-columns-and-levels)
    documentation section. ([GH 14355](https://github.com/pandas-dev/pandas/issues/14355))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]  ### Sorting by a combination of columns and index levels'
  prefs: []
  type: TYPE_NORMAL
- en: Strings passed to [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") as the `by` parameter may now refer to either
    column names or index level names. This enables sorting `DataFrame` instances
    by a combination of index levels and columns without resetting indexes. See the
    [Sorting by Indexes and Values](../user_guide/basics.html#basics-sort-indexes-and-values)
    documentation section. ([GH 14353](https://github.com/pandas-dev/pandas/issues/14353))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]  ### Extending pandas with custom types (experimental)'
  prefs: []
  type: TYPE_NORMAL
- en: pandas now supports storing array-like objects that aren’t necessarily 1-D NumPy
    arrays as columns in a DataFrame or values in a Series. This allows third-party
    libraries to implement extensions to NumPy’s types, similar to how pandas implemented
    categoricals, datetimes with timezones, periods, and intervals.
  prefs: []
  type: TYPE_NORMAL
- en: As a demonstration, we’ll use [cyberpandas](https://cyberpandas.readthedocs.io/en/latest/),
    which provides an `IPArray` type for storing ip addresses.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '`IPArray` isn’t a normal 1-D NumPy array, but because it’s a pandas [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray"), it can be stored properly inside pandas’
    containers.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Notice that the dtype is `ip`. The missing value semantics of the underlying
    array are respected:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'For more, see the [extension types](../development/extending.html#extending-extension-types)
    documentation. If you build an extension array, publicize it on [the ecosystem
    page](https://pandas.pydata.org/community/ecosystem.html).  ### New `observed`
    keyword for excluding unobserved categories in `GroupBy`'
  prefs: []
  type: TYPE_NORMAL
- en: Grouping by a categorical includes the unobserved categories in the output.
    When grouping by multiple categorical columns, this means you get the cartesian
    product of all the categories, including combinations where there are no observations,
    which can result in a large number of groups. We have added a keyword `observed`
    to control this behavior, it defaults to `observed=False` for backward-compatibility.
    ([GH 14942](https://github.com/pandas-dev/pandas/issues/14942), [GH 8138](https://github.com/pandas-dev/pandas/issues/8138),
    [GH 15217](https://github.com/pandas-dev/pandas/issues/15217), [GH 17594](https://github.com/pandas-dev/pandas/issues/17594),
    [GH 8669](https://github.com/pandas-dev/pandas/issues/8669), [GH 20583](https://github.com/pandas-dev/pandas/issues/20583),
    [GH 20902](https://github.com/pandas-dev/pandas/issues/20902))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'To show all values, the previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'To show only observed values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'For pivoting operations, this behavior is *already* controlled by the `dropna`
    keyword:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE14]  ### Rolling/Expanding.apply() accepts `raw=False` to pass a `Series`
    to the function'
  prefs: []
  type: TYPE_NORMAL
- en: '`Series.rolling().apply()`, `DataFrame.rolling().apply()`, `Series.expanding().apply()`,
    and `DataFrame.expanding().apply()` have gained a `raw=None` parameter. This is
    similar to `DataFame.apply()`. This parameter, if `True` allows one to send a
    `np.ndarray` to the applied function. If `False` a `Series` will be passed. The
    default is `None`, which preserves backward compatibility, so this will default
    to `True`, sending an `np.ndarray`. In a future version the default will be changed
    to `False`, sending a `Series`. ([GH 5071](https://github.com/pandas-dev/pandas/issues/5071),
    [GH 20584](https://github.com/pandas-dev/pandas/issues/20584))'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Pass a `Series`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Mimic the original behavior of passing a ndarray:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]  ### `DataFrame.interpolate` has gained the `limit_area` kwarg'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") has gained a `limit_area` parameter to allow further
    control of which `NaN` s are replaced. Use `limit_area=''inside''` to fill only
    NaNs surrounded by valid values or use `limit_area=''outside''` to fill only `NaN`
    s outside the existing valid values while preserving those inside. ([GH 16284](https://github.com/pandas-dev/pandas/issues/16284))
    See the [full documentation here](../user_guide/missing_data.html#missing-data-interp-limits).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Fill one consecutive inside value in both directions
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Fill all consecutive outside values backward
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Fill all consecutive outside values in both directions
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]  ### Function `get_dummies` now supports `dtype` argument'
  prefs: []
  type: TYPE_NORMAL
- en: The [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") now accepts a `dtype` argument, which specifies a dtype
    for the new columns. The default remains uint8\. ([GH 18330](https://github.com/pandas-dev/pandas/issues/18330))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]  ### Timedelta mod method'
  prefs: []
  type: TYPE_NORMAL
- en: '`mod` (%) and `divmod` operations are now defined on `Timedelta` objects when
    operating with either timedelta-like or with numeric arguments. See the [documentation
    here](../user_guide/timedeltas.html#timedeltas-mod-divmod). ([GH 19365](https://github.com/pandas-dev/pandas/issues/19365))'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]  ### Method `.rank()` handles `inf` values when `NaN` are present'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions, `.rank()` would assign `inf` elements `NaN` as their ranks.
    Now ranks are calculated properly. ([GH 6945](https://github.com/pandas-dev/pandas/issues/6945))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'Current behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: Furthermore, previously if you rank `inf` or `-inf` values together with `NaN`
    values, the calculation won’t distinguish `NaN` from infinity when using ‘top’
    or ‘bottom’ argument.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'Current behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'These bugs were squashed:'
  prefs: []
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank") and [`Series.rank()`](../reference/api/pandas.Series.rank.html#pandas.Series.rank
    "pandas.Series.rank") when `method='dense'` and `pct=True` in which percentile
    ranks were not being used with the number of distinct observations ([GH 15630](https://github.com/pandas-dev/pandas/issues/15630))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rank()`](../reference/api/pandas.Series.rank.html#pandas.Series.rank
    "pandas.Series.rank") and [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank") when `ascending='False'` failed to return correct ranks
    for infinity if `NaN` were present ([GH 19538](https://github.com/pandas-dev/pandas/issues/19538))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in `DataFrameGroupBy.rank()` where ranks were incorrect when both infinity
    and `NaN` were present ([GH 20561](https://github.com/pandas-dev/pandas/issues/20561))  ###
    `Series.str.cat` has gained the `join` kwarg'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Previously, [`Series.str.cat()`](../reference/api/pandas.Series.str.cat.html#pandas.Series.str.cat
    "pandas.Series.str.cat") did not – in contrast to most of `pandas` – align [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") on their index before concatenation (see [GH 18657](https://github.com/pandas-dev/pandas/issues/18657)).
    The method has now gained a keyword `join` to control the manner of alignment,
    see examples below and [here](../user_guide/text.html#text-concatenate).
  prefs: []
  type: TYPE_NORMAL
- en: In v.0.23 `join` will default to None (meaning no alignment), but this default
    will change to `'left'` in a future version of pandas.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'Furthermore, [`Series.str.cat()`](../reference/api/pandas.Series.str.cat.html#pandas.Series.str.cat
    "pandas.Series.str.cat") now works for `CategoricalIndex` as well (previously
    raised a `ValueError`; see [GH 20842](https://github.com/pandas-dev/pandas/issues/20842)).  ###
    `DataFrame.astype` performs column-wise conversion to `Categorical`'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") can now perform column-wise conversion to `Categorical`
    by supplying the string `''category''` or a `CategoricalDtype`. Previously, attempting
    this would raise a `NotImplementedError`. See the [Object creation](../user_guide/categorical.html#categorical-objectcreation)
    section of the documentation for more details and examples. ([GH 12860](https://github.com/pandas-dev/pandas/issues/12860),
    [GH 18099](https://github.com/pandas-dev/pandas/issues/18099))'
  prefs: []
  type: TYPE_NORMAL
- en: 'Supplying the string `''category''` performs column-wise conversion, with only
    labels appearing in a given column set as categories:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'Supplying a `CategoricalDtype` will make the categories in each column consistent
    with the supplied dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]  ### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: Unary `+` now permitted for `Series` and `DataFrame` as numeric operator ([GH
    16073](https://github.com/pandas-dev/pandas/issues/16073))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Better support for [`to_excel()`](../reference/api/pandas.io.formats.style.Styler.to_excel.html#pandas.io.formats.style.Styler.to_excel
    "pandas.io.formats.style.Styler.to_excel") output with the `xlsxwriter` engine.
    ([GH 16149](https://github.com/pandas-dev/pandas/issues/16149))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.tseries.frequencies.to_offset()`](../reference/api/pandas.tseries.frequencies.to_offset.html#pandas.tseries.frequencies.to_offset
    "pandas.tseries.frequencies.to_offset") now accepts leading ‘+’ signs e.g. ‘+1h’.
    ([GH 18171](https://github.com/pandas-dev/pandas/issues/18171))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`MultiIndex.unique()` now supports the `level=` argument, to get unique values
    from a specific index level ([GH 17896](https://github.com/pandas-dev/pandas/issues/17896))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.io.formats.style.Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") now has method `hide_index()` to determine whether
    the index will be rendered in output ([GH 14194](https://github.com/pandas-dev/pandas/issues/14194))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.io.formats.style.Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") now has method `hide_columns()` to determine
    whether columns will be hidden in output ([GH 14194](https://github.com/pandas-dev/pandas/issues/14194))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved wording of `ValueError` raised in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when `unit=` is passed with a non-convertible value ([GH
    14350](https://github.com/pandas-dev/pandas/issues/14350))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") now accepts a Series or a dict as a `value` for a categorical
    dtype ([GH 17033](https://github.com/pandas-dev/pandas/issues/17033))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.read_clipboard()`](../reference/api/pandas.read_clipboard.html#pandas.read_clipboard
    "pandas.read_clipboard") updated to use qtpy, falling back to PyQt5 and then PyQt4,
    adding compatibility with Python3 and multiple python-qt bindings ([GH 17722](https://github.com/pandas-dev/pandas/issues/17722))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved wording of `ValueError` raised in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when the `usecols` argument cannot match all columns. ([GH
    17301](https://github.com/pandas-dev/pandas/issues/17301))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.corrwith()`](../reference/api/pandas.DataFrame.corrwith.html#pandas.DataFrame.corrwith
    "pandas.DataFrame.corrwith") now silently drops non-numeric columns when passed
    a Series. Before, an exception was raised ([GH 18570](https://github.com/pandas-dev/pandas/issues/18570)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") now supports time zone aware `Interval` objects ([GH 18537](https://github.com/pandas-dev/pandas/issues/18537),
    [GH 18538](https://github.com/pandas-dev/pandas/issues/18538))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series()`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    / [`DataFrame()`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    tab completion also returns identifiers in the first level of a [`MultiIndex()`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"). ([GH 16326](https://github.com/pandas-dev/pandas/issues/16326))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") has gained the `nrows` parameter ([GH 16645](https://github.com/pandas-dev/pandas/issues/16645))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.append()` can now in more cases preserve the type of the calling
    dataframe’s columns (e.g. if both are `CategoricalIndex`) ([GH 18359](https://github.com/pandas-dev/pandas/issues/18359))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") and [`Series.to_json()`](../reference/api/pandas.Series.to_json.html#pandas.Series.to_json
    "pandas.Series.to_json") now accept an `index` argument which allows the user
    to exclude the index from the JSON output ([GH 17394](https://github.com/pandas-dev/pandas/issues/17394))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntervalIndex.to_tuples()` has gained the `na_tuple` parameter to control
    whether NA is returned as a tuple of NA, or NA itself ([GH 18756](https://github.com/pandas-dev/pandas/issues/18756))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.rename_categories`, `CategoricalIndex.rename_categories` and [`Series.cat.rename_categories`](../reference/api/pandas.Series.cat.rename_categories.html#pandas.Series.cat.rename_categories
    "pandas.Series.cat.rename_categories") can now take a callable as their argument
    ([GH 18862](https://github.com/pandas-dev/pandas/issues/18862))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Interval`](../reference/api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    and [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") have gained a `length` attribute ([GH 18789](https://github.com/pandas-dev/pandas/issues/18789))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Resampler` objects now have a functioning [`Resampler.pipe`](../reference/api/pandas.core.resample.Resampler.pipe.html#pandas.core.resample.Resampler.pipe
    "pandas.core.resample.Resampler.pipe") method. Previously, calls to `pipe` were
    diverted to the `mean` method ([GH 17905](https://github.com/pandas-dev/pandas/issues/17905)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`is_scalar()`](../reference/api/pandas.api.types.is_scalar.html#pandas.api.types.is_scalar
    "pandas.api.types.is_scalar") now returns `True` for `DateOffset` objects ([GH
    18943](https://github.com/pandas-dev/pandas/issues/18943)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") now accepts a list for the `values=` kwarg ([GH 17160](https://github.com/pandas-dev/pandas/issues/17160)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`pandas.api.extensions.register_dataframe_accessor()`](../reference/api/pandas.api.extensions.register_dataframe_accessor.html#pandas.api.extensions.register_dataframe_accessor
    "pandas.api.extensions.register_dataframe_accessor"), [`pandas.api.extensions.register_series_accessor()`](../reference/api/pandas.api.extensions.register_series_accessor.html#pandas.api.extensions.register_series_accessor
    "pandas.api.extensions.register_series_accessor"), and [`pandas.api.extensions.register_index_accessor()`](../reference/api/pandas.api.extensions.register_index_accessor.html#pandas.api.extensions.register_index_accessor
    "pandas.api.extensions.register_index_accessor"), accessor for libraries downstream
    of pandas to register custom accessors like `.cat` on pandas objects. See [Registering
    Custom Accessors](../development/extending.html#extending-register-accessors)
    for more ([GH 14781](https://github.com/pandas-dev/pandas/issues/14781)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntervalIndex.astype` now supports conversions between subtypes when passed
    an `IntervalDtype` ([GH 19197](https://github.com/pandas-dev/pandas/issues/19197))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") and its associated constructor methods (`from_arrays`,
    `from_breaks`, `from_tuples`) have gained a `dtype` parameter ([GH 19262](https://github.com/pandas-dev/pandas/issues/19262))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `SeriesGroupBy.is_monotonic_increasing()` and `SeriesGroupBy.is_monotonic_decreasing()`
    ([GH 17015](https://github.com/pandas-dev/pandas/issues/17015))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For subclassed `DataFrames`, [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") will now preserve the `Series` subclass (if defined)
    when passing the data to the applied function ([GH 19822](https://github.com/pandas-dev/pandas/issues/19822))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.from_dict()`](../reference/api/pandas.DataFrame.from_dict.html#pandas.DataFrame.from_dict
    "pandas.DataFrame.from_dict") now accepts a `columns` argument that can be used
    to specify the column names when `orient=''index''` is used ([GH 18529](https://github.com/pandas-dev/pandas/issues/18529))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added option `display.html.use_mathjax` so [MathJax](https://www.mathjax.org/)
    can be disabled when rendering tables in `Jupyter` notebooks ([GH 19856](https://github.com/pandas-dev/pandas/issues/19856),
    [GH 19824](https://github.com/pandas-dev/pandas/issues/19824))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") now supports the `method` parameter, which can be
    used to specify the replacement method when `to_replace` is a scalar, list or
    tuple and `value` is `None` ([GH 19632](https://github.com/pandas-dev/pandas/issues/19632))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp.month_name()`](../reference/api/pandas.Timestamp.month_name.html#pandas.Timestamp.month_name
    "pandas.Timestamp.month_name"), [`DatetimeIndex.month_name()`](../reference/api/pandas.DatetimeIndex.month_name.html#pandas.DatetimeIndex.month_name
    "pandas.DatetimeIndex.month_name"), and [`Series.dt.month_name()`](../reference/api/pandas.Series.dt.month_name.html#pandas.Series.dt.month_name
    "pandas.Series.dt.month_name") are now available ([GH 12805](https://github.com/pandas-dev/pandas/issues/12805))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp.day_name()`](../reference/api/pandas.Timestamp.day_name.html#pandas.Timestamp.day_name
    "pandas.Timestamp.day_name") and [`DatetimeIndex.day_name()`](../reference/api/pandas.DatetimeIndex.day_name.html#pandas.DatetimeIndex.day_name
    "pandas.DatetimeIndex.day_name") are now available to return day names with a
    specified locale ([GH 12806](https://github.com/pandas-dev/pandas/issues/12806))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") now performs a multi-value insert if the underlying
    connection supports itk rather than inserting row by row. `SQLAlchemy` dialects
    supporting multi-value inserts include: `mysql`, `postgresql`, `sqlite` and any
    dialect with `supports_multivalues_insert`. ([GH 14315](https://github.com/pandas-dev/pandas/issues/14315),
    [GH 8953](https://github.com/pandas-dev/pandas/issues/8953))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html "pandas.read_html")
    now accepts a `displayed_only` keyword argument to controls whether or not hidden
    elements are parsed (`True` by default) ([GH 20027](https://github.com/pandas-dev/pandas/issues/20027))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html "pandas.read_html")
    now reads all `<tbody>` elements in a `<table>`, not just the first. ([GH 20690](https://github.com/pandas-dev/pandas/issues/20690))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Rolling.quantile()`](../reference/api/pandas.core.window.rolling.Rolling.quantile.html#pandas.core.window.rolling.Rolling.quantile
    "pandas.core.window.rolling.Rolling.quantile") and [`Expanding.quantile()`](../reference/api/pandas.core.window.expanding.Expanding.quantile.html#pandas.core.window.expanding.Expanding.quantile
    "pandas.core.window.expanding.Expanding.quantile") now accept the `interpolation`
    keyword, `linear` by default ([GH 20497](https://github.com/pandas-dev/pandas/issues/20497))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: zip compression is supported via `compression=zip` in [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle"), [`Series.to_pickle()`](../reference/api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle"), [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv"), [`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv"), [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json"), [`Series.to_json()`](../reference/api/pandas.Series.to_json.html#pandas.Series.to_json
    "pandas.Series.to_json"). ([GH 17778](https://github.com/pandas-dev/pandas/issues/17778))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`WeekOfMonth`](../reference/api/pandas.tseries.offsets.WeekOfMonth.html#pandas.tseries.offsets.WeekOfMonth
    "pandas.tseries.offsets.WeekOfMonth") constructor now supports `n=0` ([GH 20517](https://github.com/pandas-dev/pandas/issues/20517)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    and [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    now support matrix multiplication (`@`) operator ([GH 10259](https://github.com/pandas-dev/pandas/issues/10259))
    for Python>=3.5'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Updated [`DataFrame.to_gbq()`](../reference/api/pandas.DataFrame.to_gbq.html#pandas.DataFrame.to_gbq
    "pandas.DataFrame.to_gbq") and [`pandas.read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq
    "pandas.read_gbq") signature and documentation to reflect changes from the pandas-gbq
    library version 0.4.0\. Adds intersphinx mapping to pandas-gbq library. ([GH 20564](https://github.com/pandas-dev/pandas/issues/20564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added new writer for exporting Stata dta files in version 117, `StataWriter117`.
    This format supports exporting strings with lengths up to 2,000,000 characters
    ([GH 16450](https://github.com/pandas-dev/pandas/issues/16450))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_hdf()` and [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") now accept an `errors` keyword argument to control encoding
    error handling ([GH 20835](https://github.com/pandas-dev/pandas/issues/20835))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") has gained
    the `duplicates=''raise''|''drop''` option to control whether to raise on duplicated
    edges ([GH 20947](https://github.com/pandas-dev/pandas/issues/20947))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range"), [`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range"), and [`interval_range()`](../reference/api/pandas.interval_range.html#pandas.interval_range
    "pandas.interval_range") now return a linearly spaced index if `start`, `stop`,
    and `periods` are specified, but `freq` is not. ([GH 20808](https://github.com/pandas-dev/pandas/issues/20808),
    [GH 20983](https://github.com/pandas-dev/pandas/issues/20983), [GH 20976](https://github.com/pandas-dev/pandas/issues/20976))  ##
    Backwards incompatible API changes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Dependencies have increased minimum versions'
  prefs: []
  type: TYPE_NORMAL
- en: 'We have updated our minimum supported versions of dependencies ([GH 15184](https://github.com/pandas-dev/pandas/issues/15184)).
    If installed, we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Issue |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.5.0 | X | [GH 15184](https://github.com/pandas-dev/pandas/issues/15184)
    |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 2.4.0 |  | [GH 15184](https://github.com/pandas-dev/pandas/issues/15184)
    |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.2.1 |  | [GH 20082](https://github.com/pandas-dev/pandas/issues/20082)
    |'
  prefs: []
  type: TYPE_TB
- en: '| setuptools | 24.2.0 |  | [GH 20698](https://github.com/pandas-dev/pandas/issues/20698)
    |  ### Instantiation from dicts preserves dict insertion order for Python 3.6+'
  prefs: []
  type: TYPE_NORMAL
- en: Until Python 3.6, dicts in Python had no formally defined ordering. For Python
    version 3.6 and later, dicts are ordered by insertion order, see [PEP 468](https://www.python.org/dev/peps/pep-0468/).
    pandas will use the dict’s insertion order, when creating a `Series` or `DataFrame`
    from a dict and you’re using Python version 3.6 or higher. ([GH 19884](https://github.com/pandas-dev/pandas/issues/19884))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior (and current behavior if on Python < 3.6):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: Note the Series above is ordered alphabetically by the index values.
  prefs: []
  type: TYPE_NORMAL
- en: 'New behavior (for Python >= 3.6):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: Notice that the Series is now ordered by insertion order. This new behavior
    is used for all relevant pandas types (`Series`, `DataFrame`, `SparseSeries` and
    `SparseDataFrame`).
  prefs: []
  type: TYPE_NORMAL
- en: 'If you wish to retain the old behavior while using Python >= 3.6, you can use
    `.sort_index()`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]  ### Deprecate Panel'
  prefs: []
  type: TYPE_NORMAL
- en: '`Panel` was deprecated in the 0.20.x release, showing as a `DeprecationWarning`.
    Using `Panel` will now show a `FutureWarning`. The recommended way to represent
    3-D data are with a `MultiIndex` on a `DataFrame` via the `to_frame()` or with
    the [xarray package](http://xarray.pydata.org/en/stable/). pandas provides a `to_xarray()`
    method to automate this conversion ([GH 13563](https://github.com/pandas-dev/pandas/issues/13563),
    [GH 18324](https://github.com/pandas-dev/pandas/issues/18324)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: Convert to a MultiIndex DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: Convert to an xarray DataArray
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]  ### pandas.core.common removals'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following error & warning messages are removed from `pandas.core.common`
    ([GH 13634](https://github.com/pandas-dev/pandas/issues/13634), [GH 19769](https://github.com/pandas-dev/pandas/issues/19769)):'
  prefs: []
  type: TYPE_NORMAL
- en: '`PerformanceWarning`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`UnsupportedFunctionCall`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`UnsortedIndexError`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`AbstractMethodError`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'These are available from import from `pandas.errors` (since 0.19.0).  ### Changes
    to make output of `DataFrame.apply` consistent'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") was inconsistent when applying an arbitrary user-defined-function
    that returned a list-like with `axis=1`. Several bugs and inconsistencies are
    resolved. If the applied function returns a Series, then pandas will return a
    DataFrame; otherwise a Series will be returned, this includes the case where a
    list-like (e.g. `tuple` or `list` is returned) ([GH 16353](https://github.com/pandas-dev/pandas/issues/16353),
    [GH 17437](https://github.com/pandas-dev/pandas/issues/17437), [GH 17970](https://github.com/pandas-dev/pandas/issues/17970),
    [GH 17348](https://github.com/pandas-dev/pandas/issues/17348), [GH 17892](https://github.com/pandas-dev/pandas/issues/17892),
    [GH 18573](https://github.com/pandas-dev/pandas/issues/18573), [GH 17602](https://github.com/pandas-dev/pandas/issues/17602),
    [GH 18775](https://github.com/pandas-dev/pandas/issues/18775), [GH 18901](https://github.com/pandas-dev/pandas/issues/18901),
    [GH 18919](https://github.com/pandas-dev/pandas/issues/18919)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior: if the returned shape happened to match the length of original
    columns, this would return a `DataFrame`. If the return shape did not match, a
    `Series` with lists was returned.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior: When the applied function returns a list-like, this will now
    *always* return a `Series`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: To have expanded columns, you can use `result_type='expand'`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: To broadcast the result across the original columns (the old behaviour for list-likes
    of the correct length), you can use `result_type='broadcast'`. The shape must
    match the original columns.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: 'Returning a `Series` allows one to control the exact return structure and column
    names:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]  ### Concatenation will no longer sort'
  prefs: []
  type: TYPE_NORMAL
- en: In a future version of pandas [`pandas.concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") will no longer sort the non-concatenation axis when it is not
    already aligned. The current behavior is the same as the previous (sorting), but
    now a warning is issued when `sort` is not specified and the non-concatenation
    axis is not aligned ([GH 4588](https://github.com/pandas-dev/pandas/issues/4588)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: To keep the previous behavior (sorting) and silence the warning, pass `sort=True`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: To accept the future behavior (no sorting), pass `sort=False`
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that this change also applies to `DataFrame.append()`, which has also
    received a `sort` keyword for controlling this behavior.  ### Build changes'
  prefs: []
  type: TYPE_NORMAL
- en: Building pandas for development now requires `cython >= 0.24` ([GH 18613](https://github.com/pandas-dev/pandas/issues/18613))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Building from source now explicitly requires `setuptools` in `setup.py` ([GH
    18113](https://github.com/pandas-dev/pandas/issues/18113))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Updated conda recipe to be in compliance with conda-build 3.0+ ([GH 18002](https://github.com/pandas-dev/pandas/issues/18002))  ###
    Index division by zero fills correctly'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Division operations on `Index` and subclasses will now fill division of positive
    numbers by zero with `np.inf`, division of negative numbers by zero with `-np.inf`
    and `0 / 0` with `np.nan`. This matches existing `Series` behavior. ([GH 19322](https://github.com/pandas-dev/pandas/issues/19322),
    [GH 19347](https://github.com/pandas-dev/pandas/issues/19347))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: 'Current behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]  ### Extraction of matching patterns from strings'
  prefs: []
  type: TYPE_NORMAL
- en: By default, extracting matching patterns from strings with `str.extract()` used
    to return a `Series` if a single group was being extracted (a `DataFrame` if more
    than one group was extracted). As of pandas 0.23.0 `str.extract()` always returns
    a `DataFrame`, unless `expand` is set to `False`. Finally, `None` was an accepted
    value for the `expand` parameter (which was equivalent to `False`), but now raises
    a `ValueError`. ([GH 11386](https://github.com/pandas-dev/pandas/issues/11386))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: 'To restore previous behavior, simply set `expand` to `False`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]  ### Default value for the `ordered` parameter of `CategoricalDtype`'
  prefs: []
  type: TYPE_NORMAL
- en: The default value of the `ordered` parameter for `CategoricalDtype` has changed
    from `False` to `None` to allow updating of `categories` without impacting `ordered`.
    Behavior should remain consistent for downstream objects, such as [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") ([GH 18790](https://github.com/pandas-dev/pandas/issues/18790))
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions, the default value for the `ordered` parameter was `False`.
    This could potentially lead to the `ordered` parameter unintentionally being changed
    from `True` to `False` when users attempt to update `categories` if `ordered`
    is not explicitly specified, as it would silently default to `False`. The new
    behavior for `ordered=None` is to retain the existing value of `ordered`.
  prefs: []
  type: TYPE_NORMAL
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: Notice in the example above that the converted `Categorical` has retained `ordered=True`.
    Had the default value for `ordered` remained as `False`, the converted `Categorical`
    would have become unordered, despite `ordered=False` never being explicitly specified.
    To change the value of `ordered`, explicitly pass it to the new dtype, e.g. `CategoricalDtype(categories=list('cbad'),
    ordered=False)`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that the unintentional conversion of `ordered` discussed above did not
    arise in previous versions due to separate bugs that prevented `astype` from doing
    any type of category to category conversion ([GH 10696](https://github.com/pandas-dev/pandas/issues/10696),
    [GH 18593](https://github.com/pandas-dev/pandas/issues/18593)). These bugs have
    been fixed in this release, and motivated changing the default value of `ordered`.  ###
    Better pretty-printing of DataFrames in a terminal'
  prefs: []
  type: TYPE_NORMAL
- en: 'Previously, the default value for the maximum number of columns was `pd.options.display.max_columns=20`.
    This meant that relatively wide data frames would not fit within the terminal
    width, and pandas would introduce line breaks to display these 20 columns. This
    resulted in an output that was relatively difficult to read:'
  prefs: []
  type: TYPE_NORMAL
- en: '![../_images/print_df_old.png](../Images/fbbeeee49fbf8f7df732a5d18f69c4d9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If Python runs in a terminal, the maximum number of columns is now determined
    automatically so that the printed data frame fits within the current terminal
    width (`pd.options.display.max_columns=0`) ([GH 17023](https://github.com/pandas-dev/pandas/issues/17023)).
    If Python runs as a Jupyter kernel (such as the Jupyter QtConsole or a Jupyter
    notebook, as well as in many IDEs), this value cannot be inferred automatically
    and is thus set to `20` as in previous versions. In a terminal, this results in
    a much nicer output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![../_images/print_df_new.png](../Images/d48dbcf410ad41a0f4cee1ad0cb0171a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Note that if you don’t like the new default, you can always set this option
    yourself. To revert to the old setting, you can run this line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]  ### Datetimelike API changes'
  prefs: []
  type: TYPE_NORMAL
- en: The default `Timedelta` constructor now accepts an `ISO 8601 Duration` string
    as an argument ([GH 19040](https://github.com/pandas-dev/pandas/issues/19040))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Subtracting `NaT` from a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `dtype='datetime64[ns]'` returns a `Series` with `dtype='timedelta64[ns]'`
    instead of `dtype='datetime64[ns]'` ([GH 18808](https://github.com/pandas-dev/pandas/issues/18808))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Addition or subtraction of `NaT` from [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") will return `TimedeltaIndex` instead of `DatetimeIndex`
    ([GH 19124](https://github.com/pandas-dev/pandas/issues/19124))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.shift()` and `TimedeltaIndex.shift()` will now raise `NullFrequencyError`
    (which subclasses `ValueError`, which was raised in older versions) when the index
    object frequency is `None` ([GH 19147](https://github.com/pandas-dev/pandas/issues/19147))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Addition and subtraction of `NaN` from a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `dtype='timedelta64[ns]'` will raise a `TypeError` instead
    of treating the `NaN` as `NaT` ([GH 19274](https://github.com/pandas-dev/pandas/issues/19274))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NaT` division with [`datetime.timedelta`](https://docs.python.org/3/library/datetime.html#datetime.timedelta
    "(in Python v3.12)") will now return `NaN` instead of raising ([GH 17876](https://github.com/pandas-dev/pandas/issues/17876))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Operations between a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with dtype `dtype='datetime64[ns]'` and a [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") will correctly raises `TypeError` ([GH 18850](https://github.com/pandas-dev/pandas/issues/18850))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Subtraction of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with timezone-aware `dtype='datetime64[ns]'` with mismatched
    timezones will raise `TypeError` instead of `ValueError` ([GH 18817](https://github.com/pandas-dev/pandas/issues/18817))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    will no longer silently ignore unused or invalid `tz` or `tzinfo` keyword arguments
    ([GH 17690](https://github.com/pandas-dev/pandas/issues/17690))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    will no longer silently ignore invalid `freq` arguments ([GH 5168](https://github.com/pandas-dev/pandas/issues/5168))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`CacheableOffset` and `WeekDay` are no longer available in the `pandas.tseries.offsets`
    module ([GH 17830](https://github.com/pandas-dev/pandas/issues/17830))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.tseries.frequencies.get_freq_group()` and `pandas.tseries.frequencies.DAYS`
    are removed from the public API ([GH 18034](https://github.com/pandas-dev/pandas/issues/18034))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.truncate()`](../reference/api/pandas.Series.truncate.html#pandas.Series.truncate
    "pandas.Series.truncate") and [`DataFrame.truncate()`](../reference/api/pandas.DataFrame.truncate.html#pandas.DataFrame.truncate
    "pandas.DataFrame.truncate") will raise a `ValueError` if the index is not sorted
    instead of an unhelpful `KeyError` ([GH 17935](https://github.com/pandas-dev/pandas/issues/17935))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.first`](../reference/api/pandas.Series.first.html#pandas.Series.first
    "pandas.Series.first") and [`DataFrame.first`](../reference/api/pandas.DataFrame.first.html#pandas.DataFrame.first
    "pandas.DataFrame.first") will now raise a `TypeError` rather than `NotImplementedError`
    when index is not a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 20725](https://github.com/pandas-dev/pandas/issues/20725)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.last`](../reference/api/pandas.Series.last.html#pandas.Series.last
    "pandas.Series.last") and [`DataFrame.last`](../reference/api/pandas.DataFrame.last.html#pandas.DataFrame.last
    "pandas.DataFrame.last") will now raise a `TypeError` rather than `NotImplementedError`
    when index is not a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 20725](https://github.com/pandas-dev/pandas/issues/20725)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Restricted `DateOffset` keyword arguments. Previously, `DateOffset` subclasses
    allowed arbitrary keyword arguments which could lead to unexpected behavior. Now,
    only valid arguments will be accepted. ([GH 17176](https://github.com/pandas-dev/pandas/issues/17176),
    [GH 18226](https://github.com/pandas-dev/pandas/issues/18226)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    provides a more informative error message when trying to merge on timezone-aware
    and timezone-naive columns ([GH 15800](https://github.com/pandas-dev/pandas/issues/15800))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") with `freq=None`, addition or subtraction of integer-dtyped
    array or `Index` will raise `NullFrequencyError` instead of `TypeError` ([GH 19895](https://github.com/pandas-dev/pandas/issues/19895))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    constructor now accepts a `nanosecond` keyword or positional argument ([GH 18898](https://github.com/pandas-dev/pandas/issues/18898))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") will now raise an `AttributeError` when the `tz` attribute
    is set after instantiation ([GH 3746](https://github.com/pandas-dev/pandas/issues/3746))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with a `pytz` timezone will now return a consistent `pytz`
    timezone ([GH 18595](https://github.com/pandas-dev/pandas/issues/18595))  ###
    Other API changes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") and [`Index.astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype") with an incompatible dtype will now raise a `TypeError`
    rather than a `ValueError` ([GH 18231](https://github.com/pandas-dev/pandas/issues/18231))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series` construction with an `object` dtyped tz-aware datetime and `dtype=object`
    specified, will now return an `object` dtyped `Series`, previously this would
    infer the datetime dtype ([GH 18231](https://github.com/pandas-dev/pandas/issues/18231))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    of `dtype=category` constructed from an empty `dict` will now have categories
    of `dtype=object` rather than `dtype=float64`, consistently with the case in which
    an empty list is passed ([GH 18515](https://github.com/pandas-dev/pandas/issues/18515))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All-NaN levels in a `MultiIndex` are now assigned `float` rather than `object`
    dtype, promoting consistency with `Index` ([GH 17929](https://github.com/pandas-dev/pandas/issues/17929)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Levels names of a `MultiIndex` (when not None) are now required to be unique:
    trying to create a `MultiIndex` with repeated names will raise a `ValueError`
    ([GH 18872](https://github.com/pandas-dev/pandas/issues/18872))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Both construction and renaming of `Index`/`MultiIndex` with non-hashable `name`/`names`
    will now raise `TypeError` ([GH 20527](https://github.com/pandas-dev/pandas/issues/20527))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.map()`](../reference/api/pandas.Index.map.html#pandas.Index.map "pandas.Index.map")
    can now accept `Series` and dictionary input objects ([GH 12756](https://github.com/pandas-dev/pandas/issues/12756),
    [GH 18482](https://github.com/pandas-dev/pandas/issues/18482), [GH 18509](https://github.com/pandas-dev/pandas/issues/18509)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") will now default to filling with `np.nan` for `object`
    columns. ([GH 12815](https://github.com/pandas-dev/pandas/issues/12815))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") constructor will raise if the `closed` parameter conflicts
    with how the input data is inferred to be closed ([GH 18421](https://github.com/pandas-dev/pandas/issues/18421))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Inserting missing values into indexes will work for all types of indexes and
    automatically insert the correct type of missing value (`NaN`, `NaT`, etc.) regardless
    of the type passed in ([GH 18295](https://github.com/pandas-dev/pandas/issues/18295))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When created with duplicate labels, `MultiIndex` now raises a `ValueError`.
    ([GH 17464](https://github.com/pandas-dev/pandas/issues/17464))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") now raises a `TypeError` instead of a `ValueError` when
    passed a list, tuple or DataFrame as a `value` ([GH 18293](https://github.com/pandas-dev/pandas/issues/18293))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") no longer casts a `float` column to `object` when merging
    on `int` and `float` columns ([GH 16572](https://github.com/pandas-dev/pandas/issues/16572))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    now raises a `ValueError` when trying to merge on incompatible data types ([GH
    9780](https://github.com/pandas-dev/pandas/issues/9780))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The default NA value for `UInt64Index` has changed from 0 to `NaN`, which impacts
    methods that mask with NA, such as `UInt64Index.where()` ([GH 18398](https://github.com/pandas-dev/pandas/issues/18398))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Refactored `setup.py` to use `find_packages` instead of explicitly listing out
    all subpackages ([GH 18535](https://github.com/pandas-dev/pandas/issues/18535))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rearranged the order of keyword arguments in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") to align with [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") ([GH 16672](https://github.com/pandas-dev/pandas/issues/16672))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`wide_to_long()`](../reference/api/pandas.wide_to_long.html#pandas.wide_to_long
    "pandas.wide_to_long") previously kept numeric-like suffixes as `object` dtype.
    Now they are cast to numeric if possible ([GH 17627](https://github.com/pandas-dev/pandas/issues/17627))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"), the `comment` argument is now exposed as a named parameter
    ([GH 18735](https://github.com/pandas-dev/pandas/issues/18735))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rearranged the order of keyword arguments in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") to align with [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") ([GH 16672](https://github.com/pandas-dev/pandas/issues/16672))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The options `html.border` and `mode.use_inf_as_null` were deprecated in prior
    versions, these will now show `FutureWarning` rather than a `DeprecationWarning`
    ([GH 19003](https://github.com/pandas-dev/pandas/issues/19003))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") and `IntervalDtype` no longer support categorical, object,
    and string subtypes ([GH 19016](https://github.com/pandas-dev/pandas/issues/19016))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntervalDtype` now returns `True` when compared against `''interval''` regardless
    of subtype, and `IntervalDtype.name` now returns `''interval''` regardless of
    subtype ([GH 18980](https://github.com/pandas-dev/pandas/issues/18980))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`KeyError` now raises instead of `ValueError` in [`drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop"), `drop()`, [`drop()`](../reference/api/pandas.Series.drop.html#pandas.Series.drop
    "pandas.Series.drop"), [`drop()`](../reference/api/pandas.Index.drop.html#pandas.Index.drop
    "pandas.Index.drop") when dropping a non-existent element in an axis with duplicates
    ([GH 19186](https://github.com/pandas-dev/pandas/issues/19186))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv") now accepts a `compression` argument that works in the
    same way as the `compression` argument in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") ([GH 18958](https://github.com/pandas-dev/pandas/issues/18958))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Set operations (union, difference…) on [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") with incompatible index types will now raise a `TypeError`
    rather than a `ValueError` ([GH 19329](https://github.com/pandas-dev/pandas/issues/19329))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DateOffset` objects render more simply, e.g. `<DateOffset: days=1>` instead
    of `<DateOffset: kwds={''days'': 1}>` ([GH 19403](https://github.com/pandas-dev/pandas/issues/19403))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.fillna` now validates its `value` and `method` keyword arguments.
    It now raises when both or none are specified, matching the behavior of [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") ([GH 19682](https://github.com/pandas-dev/pandas/issues/19682))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.to_datetime(''today'')` now returns a datetime, consistent with `pd.Timestamp(''today'')`;
    previously `pd.to_datetime(''today'')` returned a `.normalized()` datetime ([GH
    19935](https://github.com/pandas-dev/pandas/issues/19935))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.str.replace()`](../reference/api/pandas.Series.str.replace.html#pandas.Series.str.replace
    "pandas.Series.str.replace") now takes an optional `regex` keyword which, when
    set to `False`, uses literal string replacement rather than regex replacement
    ([GH 16808](https://github.com/pandas-dev/pandas/issues/16808))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DatetimeIndex.strftime()`](../reference/api/pandas.DatetimeIndex.strftime.html#pandas.DatetimeIndex.strftime
    "pandas.DatetimeIndex.strftime") and [`PeriodIndex.strftime()`](../reference/api/pandas.PeriodIndex.strftime.html#pandas.PeriodIndex.strftime
    "pandas.PeriodIndex.strftime") now return an `Index` instead of a numpy array
    to be consistent with similar accessors ([GH 20127](https://github.com/pandas-dev/pandas/issues/20127))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Constructing a Series from a list of length 1 no longer broadcasts this list
    when a longer index is specified ([GH 19714](https://github.com/pandas-dev/pandas/issues/19714),
    [GH 20391](https://github.com/pandas-dev/pandas/issues/20391)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") with `orient=''index''` no longer casts int columns
    to float for a DataFrame with only int and float columns ([GH 18580](https://github.com/pandas-dev/pandas/issues/18580))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A user-defined-function that is passed to `Series.rolling().aggregate()`, `DataFrame.rolling().aggregate()`,
    or its expanding cousins, will now *always* be passed a `Series`, rather than
    a `np.array`; `.apply()` only has the `raw` keyword, see [here](#whatsnew-0230-enhancements-window-raw).
    This is consistent with the signatures of `.aggregate()` across pandas ([GH 20584](https://github.com/pandas-dev/pandas/issues/20584))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Rolling and Expanding types raise `NotImplementedError` upon iteration ([GH
    11704](https://github.com/pandas-dev/pandas/issues/11704)).  ## Deprecations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.from_array` and `SparseSeries.from_array` are deprecated. Use the normal
    constructor `Series(..)` and `SparseSeries(..)` instead ([GH 18213](https://github.com/pandas-dev/pandas/issues/18213)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.as_matrix` is deprecated. Use `DataFrame.values` instead ([GH 18458](https://github.com/pandas-dev/pandas/issues/18458)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.asobject`, `DatetimeIndex.asobject`, `PeriodIndex.asobject` and `TimeDeltaIndex.asobject`
    have been deprecated. Use `.astype(object)` instead ([GH 18572](https://github.com/pandas-dev/pandas/issues/18572))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Grouping by a tuple of keys now emits a `FutureWarning` and is deprecated. In
    the future, a tuple passed to `'by'` will always refer to a single key that is
    the actual tuple, instead of treating the tuple as multiple keys. To retain the
    previous behavior, use a list instead of a tuple ([GH 18314](https://github.com/pandas-dev/pandas/issues/18314))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.valid` is deprecated. Use [`Series.dropna()`](../reference/api/pandas.Series.dropna.html#pandas.Series.dropna
    "pandas.Series.dropna") instead ([GH 18800](https://github.com/pandas-dev/pandas/issues/18800)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") has deprecated the `skip_footer` parameter. Use `skipfooter`
    instead ([GH 18836](https://github.com/pandas-dev/pandas/issues/18836))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ExcelFile.parse()`](../reference/api/pandas.ExcelFile.parse.html#pandas.ExcelFile.parse
    "pandas.ExcelFile.parse") has deprecated `sheetname` in favor of `sheet_name`
    for consistency with [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") ([GH 20920](https://github.com/pandas-dev/pandas/issues/20920)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `is_copy` attribute is deprecated and will be removed in a future version
    ([GH 18801](https://github.com/pandas-dev/pandas/issues/18801)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntervalIndex.from_intervals` is deprecated in favor of the [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") constructor ([GH 19263](https://github.com/pandas-dev/pandas/issues/19263))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.from_items` is deprecated. Use [`DataFrame.from_dict()`](../reference/api/pandas.DataFrame.from_dict.html#pandas.DataFrame.from_dict
    "pandas.DataFrame.from_dict") instead, or `DataFrame.from_dict(OrderedDict())`
    if you wish to preserve the key order ([GH 17320](https://github.com/pandas-dev/pandas/issues/17320),
    [GH 17312](https://github.com/pandas-dev/pandas/issues/17312))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") or a `FloatIndex` with a list containing some missing keys
    will now show a [`FutureWarning`](https://docs.python.org/3/library/exceptions.html#FutureWarning
    "(in Python v3.12)"), which is consistent with other types of indexes ([GH 17758](https://github.com/pandas-dev/pandas/issues/17758)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `broadcast` parameter of `.apply()` is deprecated in favor of `result_type='broadcast'`
    ([GH 18577](https://github.com/pandas-dev/pandas/issues/18577))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `reduce` parameter of `.apply()` is deprecated in favor of `result_type='reduce'`
    ([GH 18577](https://github.com/pandas-dev/pandas/issues/18577))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `order` parameter of [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") is deprecated and will be removed in a future release ([GH
    19727](https://github.com/pandas-dev/pandas/issues/19727))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Timestamp.weekday_name`, `DatetimeIndex.weekday_name`, and `Series.dt.weekday_name`
    are deprecated in favor of [`Timestamp.day_name()`](../reference/api/pandas.Timestamp.day_name.html#pandas.Timestamp.day_name
    "pandas.Timestamp.day_name"), [`DatetimeIndex.day_name()`](../reference/api/pandas.DatetimeIndex.day_name.html#pandas.DatetimeIndex.day_name
    "pandas.DatetimeIndex.day_name"), and [`Series.dt.day_name()`](../reference/api/pandas.Series.dt.day_name.html#pandas.Series.dt.day_name
    "pandas.Series.dt.day_name") ([GH 12806](https://github.com/pandas-dev/pandas/issues/12806))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.tseries.plotting.tsplot` is deprecated. Use [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") instead ([GH 18627](https://github.com/pandas-dev/pandas/issues/18627))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Index.summary()` is deprecated and will be removed in a future version ([GH
    18217](https://github.com/pandas-dev/pandas/issues/18217))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NDFrame.get_ftype_counts()` is deprecated and will be removed in a future
    version ([GH 18243](https://github.com/pandas-dev/pandas/issues/18243))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `convert_datetime64` parameter in [`DataFrame.to_records()`](../reference/api/pandas.DataFrame.to_records.html#pandas.DataFrame.to_records
    "pandas.DataFrame.to_records") has been deprecated and will be removed in a future
    version. The NumPy bug motivating this parameter has been resolved. The default
    value for this parameter has also changed from `True` to `None` ([GH 18160](https://github.com/pandas-dev/pandas/issues/18160)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.rolling().apply()`, `DataFrame.rolling().apply()`, `Series.expanding().apply()`,
    and `DataFrame.expanding().apply()` have deprecated passing an `np.array` by default.
    One will need to pass the new `raw` parameter to be explicit about what is passed
    ([GH 20584](https://github.com/pandas-dev/pandas/issues/20584))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `data`, `base`, `strides`, `flags` and `itemsize` properties of the `Series`
    and `Index` classes have been deprecated and will be removed in a future version
    ([GH 20419](https://github.com/pandas-dev/pandas/issues/20419)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.offset` is deprecated. Use `DatetimeIndex.freq` instead ([GH
    20716](https://github.com/pandas-dev/pandas/issues/20716))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Floor division between an integer ndarray and a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") is deprecated. Divide by [`Timedelta.value`](../reference/api/pandas.Timedelta.value.html#pandas.Timedelta.value
    "pandas.Timedelta.value") instead ([GH 19761](https://github.com/pandas-dev/pandas/issues/19761))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting `PeriodIndex.freq` (which was not guaranteed to work correctly) is deprecated.
    Use [`PeriodIndex.asfreq()`](../reference/api/pandas.PeriodIndex.asfreq.html#pandas.PeriodIndex.asfreq
    "pandas.PeriodIndex.asfreq") instead ([GH 20678](https://github.com/pandas-dev/pandas/issues/20678))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Index.get_duplicates()` is deprecated and will be removed in a future version
    ([GH 20239](https://github.com/pandas-dev/pandas/issues/20239))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The previous default behavior of negative indices in `Categorical.take` is deprecated.
    In a future version it will change from meaning missing values to meaning positional
    indices from the right. The future behavior is consistent with [`Series.take()`](../reference/api/pandas.Series.take.html#pandas.Series.take
    "pandas.Series.take") ([GH 20664](https://github.com/pandas-dev/pandas/issues/20664)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Passing multiple axes to the `axis` parameter in [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") has been deprecated and will be removed in a future
    version ([GH 20987](https://github.com/pandas-dev/pandas/issues/20987))  ## Removal
    of prior version deprecations/changes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Warnings against the obsolete usage `Categorical(codes, categories)`, which
    were emitted for instance when the first two arguments to `Categorical()` had
    different dtypes, and recommended the use of `Categorical.from_codes`, have now
    been removed ([GH 8074](https://github.com/pandas-dev/pandas/issues/8074))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `levels` and `labels` attributes of a `MultiIndex` can no longer be set
    directly ([GH 4039](https://github.com/pandas-dev/pandas/issues/4039)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.tseries.util.pivot_annual` has been removed (deprecated since v0.19). Use
    `pivot_table` instead ([GH 18370](https://github.com/pandas-dev/pandas/issues/18370))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.tseries.util.isleapyear` has been removed (deprecated since v0.19). Use
    `.is_leap_year` property in Datetime-likes instead ([GH 18370](https://github.com/pandas-dev/pandas/issues/18370))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.ordered_merge` has been removed (deprecated since v0.19). Use `pd.merge_ordered`
    instead ([GH 18459](https://github.com/pandas-dev/pandas/issues/18459))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `SparseList` class has been removed ([GH 14007](https://github.com/pandas-dev/pandas/issues/14007))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `pandas.io.wb` and `pandas.io.data` stub modules have been removed ([GH
    13735](https://github.com/pandas-dev/pandas/issues/13735))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.from_array` has been removed ([GH 13854](https://github.com/pandas-dev/pandas/issues/13854))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `freq` and `how` parameters have been removed from the `rolling`/`expanding`/`ewm`
    methods of DataFrame and Series (deprecated since v0.18). Instead, resample before
    calling the methods. ([GH 18601](https://github.com/pandas-dev/pandas/issues/18601)
    & [GH 18668](https://github.com/pandas-dev/pandas/issues/18668))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.to_datetime`, `Timestamp.to_datetime`, `PeriodIndex.to_datetime`,
    and `Index.to_datetime` have been removed ([GH 8254](https://github.com/pandas-dev/pandas/issues/8254),
    [GH 14096](https://github.com/pandas-dev/pandas/issues/14096), [GH 14113](https://github.com/pandas-dev/pandas/issues/14113))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    has dropped the `skip_footer` parameter ([GH 13386](https://github.com/pandas-dev/pandas/issues/13386))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    has dropped the `as_recarray` parameter ([GH 13373](https://github.com/pandas-dev/pandas/issues/13373))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    has dropped the `buffer_lines` parameter ([GH 13360](https://github.com/pandas-dev/pandas/issues/13360))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    has dropped the `compact_ints` and `use_unsigned` parameters ([GH 13323](https://github.com/pandas-dev/pandas/issues/13323))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Timestamp` class has dropped the `offset` attribute in favor of `freq`
    ([GH 13593](https://github.com/pandas-dev/pandas/issues/13593))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Series`, `Categorical`, and `Index` classes have dropped the `reshape`
    method ([GH 13012](https://github.com/pandas-dev/pandas/issues/13012))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.tseries.frequencies.get_standard_freq` has been removed in favor of
    `pandas.tseries.frequencies.to_offset(freq).rule_code` ([GH 13874](https://github.com/pandas-dev/pandas/issues/13874))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `freqstr` keyword has been removed from `pandas.tseries.frequencies.to_offset`
    in favor of `freq` ([GH 13874](https://github.com/pandas-dev/pandas/issues/13874))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Panel4D` and `PanelND` classes have been removed ([GH 13776](https://github.com/pandas-dev/pandas/issues/13776))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Panel` class has dropped the `to_long` and `toLong` methods ([GH 19077](https://github.com/pandas-dev/pandas/issues/19077))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The options `display.line_with` and `display.height` are removed in favor of
    `display.width` and `display.max_rows` respectively ([GH 4391](https://github.com/pandas-dev/pandas/issues/4391),
    [GH 19107](https://github.com/pandas-dev/pandas/issues/19107))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `labels` attribute of the `Categorical` class has been removed in favor
    of [`Categorical.codes`](../reference/api/pandas.Categorical.codes.html#pandas.Categorical.codes
    "pandas.Categorical.codes") ([GH 7768](https://github.com/pandas-dev/pandas/issues/7768))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `flavor` parameter have been removed from `to_sql()` method ([GH 13611](https://github.com/pandas-dev/pandas/issues/13611))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The modules `pandas.tools.hashing` and `pandas.util.hashing` have been removed
    ([GH 16223](https://github.com/pandas-dev/pandas/issues/16223))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The top-level functions `pd.rolling_*`, `pd.expanding_*` and `pd.ewm*` have
    been removed (Deprecated since v0.18). Instead, use the DataFrame/Series methods
    [`rolling`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling"), [`expanding`](../reference/api/pandas.DataFrame.expanding.html#pandas.DataFrame.expanding
    "pandas.DataFrame.expanding") and [`ewm`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm") ([GH 18723](https://github.com/pandas-dev/pandas/issues/18723))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Imports from `pandas.core.common` for functions such as `is_datetime64_dtype`
    are now removed. These are located in `pandas.api.types`. ([GH 13634](https://github.com/pandas-dev/pandas/issues/13634),
    [GH 19769](https://github.com/pandas-dev/pandas/issues/19769))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `infer_dst` keyword in [`Series.tz_localize()`](../reference/api/pandas.Series.tz_localize.html#pandas.Series.tz_localize
    "pandas.Series.tz_localize"), [`DatetimeIndex.tz_localize()`](../reference/api/pandas.DatetimeIndex.tz_localize.html#pandas.DatetimeIndex.tz_localize
    "pandas.DatetimeIndex.tz_localize") and [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") have been removed. `infer_dst=True` is equivalent to `ambiguous='infer'`,
    and `infer_dst=False` to `ambiguous='raise'` ([GH 7963](https://github.com/pandas-dev/pandas/issues/7963)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When `.resample()` was changed from an eager to a lazy operation, like `.groupby()`
    in v0.18.0, we put in place compatibility (with a `FutureWarning`), so operations
    would continue to work. This is now fully removed, so a `Resampler` will no longer
    forward compat operations ([GH 20554](https://github.com/pandas-dev/pandas/issues/20554))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Remove long deprecated `axis=None` parameter from `.replace()` ([GH 20271](https://github.com/pandas-dev/pandas/issues/20271))  ##
    Performance improvements'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexers on `Series` or `DataFrame` no longer create a reference cycle ([GH
    17956](https://github.com/pandas-dev/pandas/issues/17956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added a keyword argument, `cache`, to [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") that improved the performance of converting duplicate datetime
    arguments ([GH 11665](https://github.com/pandas-dev/pandas/issues/11665))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DateOffset` arithmetic performance is improved ([GH 18218](https://github.com/pandas-dev/pandas/issues/18218))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Converting a `Series` of `Timedelta` objects to days, seconds, etc… sped up
    through vectorization of underlying methods ([GH 18092](https://github.com/pandas-dev/pandas/issues/18092))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `.map()` with a `Series/dict` input ([GH 15081](https://github.com/pandas-dev/pandas/issues/15081))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The overridden `Timedelta` properties of days, seconds and microseconds have
    been removed, leveraging their built-in Python versions instead ([GH 18242](https://github.com/pandas-dev/pandas/issues/18242))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series` construction will reduce the number of copies made of the input data
    in certain cases ([GH 17449](https://github.com/pandas-dev/pandas/issues/17449))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`Series.dt.date()`](../reference/api/pandas.Series.dt.date.html#pandas.Series.dt.date
    "pandas.Series.dt.date") and [`DatetimeIndex.date()`](../reference/api/pandas.DatetimeIndex.date.html#pandas.DatetimeIndex.date
    "pandas.DatetimeIndex.date") ([GH 18058](https://github.com/pandas-dev/pandas/issues/18058))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`Series.dt.time()`](../reference/api/pandas.Series.dt.time.html#pandas.Series.dt.time
    "pandas.Series.dt.time") and [`DatetimeIndex.time()`](../reference/api/pandas.DatetimeIndex.time.html#pandas.DatetimeIndex.time
    "pandas.DatetimeIndex.time") ([GH 18461](https://github.com/pandas-dev/pandas/issues/18461))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `IntervalIndex.symmetric_difference()` ([GH 18475](https://github.com/pandas-dev/pandas/issues/18475))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `DatetimeIndex` and `Series` arithmetic operations with
    Business-Month and Business-Quarter frequencies ([GH 18489](https://github.com/pandas-dev/pandas/issues/18489))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series()`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    / [`DataFrame()`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    tab completion limits to 100 values, for better performance. ([GH 18587](https://github.com/pandas-dev/pandas/issues/18587))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`DataFrame.median()`](../reference/api/pandas.DataFrame.median.html#pandas.DataFrame.median
    "pandas.DataFrame.median") with `axis=1` when bottleneck is not installed ([GH
    16468](https://github.com/pandas-dev/pandas/issues/16468))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") for large indexes, at the cost of a reduction in
    performance for small ones ([GH 18519](https://github.com/pandas-dev/pandas/issues/18519))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`MultiIndex.remove_unused_levels()`](../reference/api/pandas.MultiIndex.remove_unused_levels.html#pandas.MultiIndex.remove_unused_levels
    "pandas.MultiIndex.remove_unused_levels") when there are no unused levels, at
    the cost of a reduction in performance when there are ([GH 19289](https://github.com/pandas-dev/pandas/issues/19289))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`Index.get_loc()`](../reference/api/pandas.Index.get_loc.html#pandas.Index.get_loc
    "pandas.Index.get_loc") for non-unique indexes ([GH 19478](https://github.com/pandas-dev/pandas/issues/19478))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of pairwise `.rolling()` and `.expanding()` with `.cov()`
    and `.corr()` operations ([GH 17917](https://github.com/pandas-dev/pandas/issues/17917))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `GroupBy.rank()` ([GH 15779](https://github.com/pandas-dev/pandas/issues/15779))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of variable `.rolling()` on `.min()` and `.max()` ([GH
    19521](https://github.com/pandas-dev/pandas/issues/19521))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `GroupBy.ffill()` and `GroupBy.bfill()` ([GH 11296](https://github.com/pandas-dev/pandas/issues/11296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `GroupBy.any()` and `GroupBy.all()` ([GH 15435](https://github.com/pandas-dev/pandas/issues/15435))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `GroupBy.pct_change()` ([GH 19165](https://github.com/pandas-dev/pandas/issues/19165))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") in the case of categorical dtypes ([GH 20003](https://github.com/pandas-dev/pandas/issues/20003))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `getattr(Series, attr)` when the Series has certain
    index types. This manifested in slow printing of large Series with a `DatetimeIndex`
    ([GH 19764](https://github.com/pandas-dev/pandas/issues/19764))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed a performance regression for `GroupBy.nth()` and `GroupBy.last()` with
    some object columns ([GH 19283](https://github.com/pandas-dev/pandas/issues/19283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Improved performance of `Categorical.from_codes()` ([GH 18501](https://github.com/pandas-dev/pandas/issues/18501))  ##
    Documentation changes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thanks to all of the contributors who participated in the pandas Documentation
    Sprint, which took place on March 10th. We had about 500 participants from over
    30 locations across the world. You should notice that many of the [API docstrings](../reference/index.html#api)
    have greatly improved.
  prefs: []
  type: TYPE_NORMAL
- en: There were too many simultaneous contributions to include a release note for
    each improvement, but this [GitHub search](https://github.com/pandas-dev/pandas/pulls?utf8=%E2%9C%93&q=is%3Apr+label%3ADocs+created%3A2018-03-10..2018-03-15+)
    should give you an idea of how many docstrings were improved.
  prefs: []
  type: TYPE_NORMAL
- en: Special thanks to [Marc Garcia](https://github.com/datapythonista) for organizing
    the sprint. For more information, read the [NumFOCUS blogpost](https://www.numfocus.org/blog/worldwide-pandas-sprint/)
    recapping the sprint.
  prefs: []
  type: TYPE_NORMAL
- en: Changed spelling of “numpy” to “NumPy”, and “python” to “Python”. ([GH 19017](https://github.com/pandas-dev/pandas/issues/19017))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Consistency when introducing code samples, using either colon or period. Rewrote
    some sentences for greater clarity, added more dynamic references to functions,
    methods and classes. ([GH 18941](https://github.com/pandas-dev/pandas/issues/18941),
    [GH 18948](https://github.com/pandas-dev/pandas/issues/18948), [GH 18973](https://github.com/pandas-dev/pandas/issues/18973),
    [GH 19017](https://github.com/pandas-dev/pandas/issues/19017))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Added a reference to [`DataFrame.assign()`](../reference/api/pandas.DataFrame.assign.html#pandas.DataFrame.assign
    "pandas.DataFrame.assign") in the concatenate section of the merging documentation
    ([GH 18665](https://github.com/pandas-dev/pandas/issues/18665))  ## Bug fixes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: A class of bugs were introduced in pandas 0.21 with `CategoricalDtype` that
    affects the correctness of operations like `merge`, `concat`, and indexing when
    comparing multiple unordered `Categorical` arrays that have the same categories,
    but in a different order. We highly recommend upgrading or manually aligning your
    categories before doing these operations.
  prefs: []
  type: TYPE_NORMAL
- en: Bug in `Categorical.equals` returning the wrong result when comparing two unordered
    `Categorical` arrays with the same categories, but in a different order ([GH 16603](https://github.com/pandas-dev/pandas/issues/16603))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.api.types.union_categoricals()`](../reference/api/pandas.api.types.union_categoricals.html#pandas.api.types.union_categoricals
    "pandas.api.types.union_categoricals") returning the wrong result when for unordered
    categoricals with the categories in a different order. This affected [`pandas.concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") with Categorical data ([GH 19096](https://github.com/pandas-dev/pandas/issues/19096)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    returning the wrong result when joining on an unordered `Categorical` that had
    the same categories but in a different order ([GH 19551](https://github.com/pandas-dev/pandas/issues/19551))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CategoricalIndex.get_indexer()` returning the wrong result when `target`
    was an unordered `Categorical` that had the same categories as `self` but in a
    different order ([GH 19551](https://github.com/pandas-dev/pandas/issues/19551))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype") with a categorical dtype where the resultant index is not
    converted to a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") for all types of index ([GH 18630](https://github.com/pandas-dev/pandas/issues/18630))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") and `Categorical.astype()` where an existing categorical
    data does not get updated ([GH 10696](https://github.com/pandas-dev/pandas/issues/10696),
    [GH 18593](https://github.com/pandas-dev/pandas/issues/18593))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.split()`](../reference/api/pandas.Series.str.split.html#pandas.Series.str.split
    "pandas.Series.str.split") with `expand=True` incorrectly raising an IndexError
    on empty strings ([GH 20002](https://github.com/pandas-dev/pandas/issues/20002)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    constructor with `dtype=CategoricalDtype(...)` where `categories` and `ordered`
    are not maintained ([GH 19032](https://github.com/pandas-dev/pandas/issues/19032))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor with scalar and `dtype=CategoricalDtype(...)` where `categories` and
    `ordered` are not maintained ([GH 19565](https://github.com/pandas-dev/pandas/issues/19565))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.__iter__` not converting to Python types ([GH 19909](https://github.com/pandas-dev/pandas/issues/19909))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") returning the unique codes for the `uniques`. This now returns
    a `Categorical` with the same dtype as the input ([GH 19721](https://github.com/pandas-dev/pandas/issues/19721))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") including an item for missing values in the `uniques` return
    value ([GH 19721](https://github.com/pandas-dev/pandas/issues/19721))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.take()`](../reference/api/pandas.Series.take.html#pandas.Series.take
    "pandas.Series.take") with categorical data interpreting `-1` in `indices` as
    missing value markers, rather than the last element of the Series ([GH 20664](https://github.com/pandas-dev/pandas/issues/20664))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Series.__sub__()` subtracting a non-nanosecond `np.datetime64` object
    from a `Series` gave incorrect results ([GH 7996](https://github.com/pandas-dev/pandas/issues/7996))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") addition and subtraction of zero-dimensional integer
    arrays gave incorrect results ([GH 19012](https://github.com/pandas-dev/pandas/issues/19012))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") where adding or subtracting an array-like of `DateOffset`
    objects either raised (`np.array`, `pd.Index`) or broadcast incorrectly (`pd.Series`)
    ([GH 18849](https://github.com/pandas-dev/pandas/issues/18849))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__add__()` adding Series with dtype `timedelta64[ns]` to a timezone-aware
    `DatetimeIndex` incorrectly dropped timezone information ([GH 13905](https://github.com/pandas-dev/pandas/issues/13905))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding a `Period` object to a `datetime` or `Timestamp` object will now correctly
    raise a `TypeError` ([GH 17983](https://github.com/pandas-dev/pandas/issues/17983))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") where comparison with an array of `Timestamp` objects would
    result in a `RecursionError` ([GH 15183](https://github.com/pandas-dev/pandas/issues/15183))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    floor-division where operating on a scalar `timedelta` raises an exception ([GH
    18846](https://github.com/pandas-dev/pandas/issues/18846))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") where the repr was not showing high-precision time values
    at the end of a day (e.g., 23:59:59.999999999) ([GH 19030](https://github.com/pandas-dev/pandas/issues/19030))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.astype()` to non-ns timedelta units would hold the incorrect dtype
    ([GH 19176](https://github.com/pandas-dev/pandas/issues/19176), [GH 19223](https://github.com/pandas-dev/pandas/issues/19223),
    [GH 12425](https://github.com/pandas-dev/pandas/issues/12425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in subtracting [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") from `NaT` incorrectly returning `NaT` ([GH 19158](https://github.com/pandas-dev/pandas/issues/19158))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.truncate()`](../reference/api/pandas.Series.truncate.html#pandas.Series.truncate
    "pandas.Series.truncate") which raises `TypeError` with a monotonic `PeriodIndex`
    ([GH 17717](https://github.com/pandas-dev/pandas/issues/17717))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pct_change()`](../reference/api/pandas.DataFrame.pct_change.html#pandas.DataFrame.pct_change
    "pandas.DataFrame.pct_change") using `periods` and `freq` returned different length
    outputs ([GH 7292](https://github.com/pandas-dev/pandas/issues/7292))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in comparison of [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") against `None` or `datetime.date` objects raising `TypeError`
    for `==` and `!=` comparisons instead of all-`False` and all-`True`, respectively
    ([GH 19301](https://github.com/pandas-dev/pandas/issues/19301))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") and [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") where a string representing a barely out-of-bounds timestamp
    would be incorrectly rounded down instead of raising `OutOfBoundsDatetime` ([GH
    19382](https://github.com/pandas-dev/pandas/issues/19382))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.floor()`](../reference/api/pandas.Timestamp.floor.html#pandas.Timestamp.floor
    "pandas.Timestamp.floor") [`DatetimeIndex.floor()`](../reference/api/pandas.DatetimeIndex.floor.html#pandas.DatetimeIndex.floor
    "pandas.DatetimeIndex.floor") where time stamps far in the future and past were
    not rounded correctly ([GH 19206](https://github.com/pandas-dev/pandas/issues/19206))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") where passing an out-of-bounds datetime with `errors='coerce'`
    and `utc=True` would raise `OutOfBoundsDatetime` instead of parsing to `NaT` ([GH
    19612](https://github.com/pandas-dev/pandas/issues/19612))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") addition and subtraction where name of the returned object
    was not always set consistently. ([GH 19744](https://github.com/pandas-dev/pandas/issues/19744))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") addition and subtraction where operations with numpy
    arrays raised `TypeError` ([GH 19847](https://github.com/pandas-dev/pandas/issues/19847))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") where setting the `freq` attribute was not fully supported
    ([GH 20678](https://github.com/pandas-dev/pandas/issues/20678))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Timedelta.__mul__()` where multiplying by `NaT` returned `NaT` instead
    of raising a `TypeError` ([GH 19819](https://github.com/pandas-dev/pandas/issues/19819))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    with `dtype='timedelta64[ns]'` where addition or subtraction of `TimedeltaIndex`
    had results cast to `dtype='int64'` ([GH 17250](https://github.com/pandas-dev/pandas/issues/17250))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    with `dtype='timedelta64[ns]'` where addition or subtraction of `TimedeltaIndex`
    could return a `Series` with an incorrect name ([GH 19043](https://github.com/pandas-dev/pandas/issues/19043))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timedelta.__floordiv__()` and `Timedelta.__rfloordiv__()` dividing by
    many incompatible numpy objects was incorrectly allowed ([GH 18846](https://github.com/pandas-dev/pandas/issues/18846))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where dividing a scalar timedelta-like object with [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") performed the reciprocal operation ([GH 19125](https://github.com/pandas-dev/pandas/issues/19125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") where division by a `Series` would return a `TimedeltaIndex`
    instead of a `Series` ([GH 19042](https://github.com/pandas-dev/pandas/issues/19042))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timedelta.__add__()`, `Timedelta.__sub__()` where adding or subtracting
    a `np.timedelta64` object would return another `np.timedelta64` instead of a `Timedelta`
    ([GH 19738](https://github.com/pandas-dev/pandas/issues/19738))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timedelta.__floordiv__()`, `Timedelta.__rfloordiv__()` where operating
    with a `Tick` object would raise a `TypeError` instead of returning a numeric
    value ([GH 19738](https://github.com/pandas-dev/pandas/issues/19738))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period.asfreq()`](../reference/api/pandas.Period.asfreq.html#pandas.Period.asfreq
    "pandas.Period.asfreq") where periods near `datetime(1, 1, 1)` could be converted
    incorrectly ([GH 19643](https://github.com/pandas-dev/pandas/issues/19643), [GH
    19834](https://github.com/pandas-dev/pandas/issues/19834))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta.total_seconds()`](../reference/api/pandas.Timedelta.total_seconds.html#pandas.Timedelta.total_seconds
    "pandas.Timedelta.total_seconds") causing precision errors, for example `Timedelta('30S').total_seconds()==30.000000000000004`
    ([GH 19458](https://github.com/pandas-dev/pandas/issues/19458))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timedelta.__rmod__()` where operating with a `numpy.timedelta64` returned
    a `timedelta64` object instead of a `Timedelta` ([GH 19820](https://github.com/pandas-dev/pandas/issues/19820))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Multiplication of [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") by `TimedeltaIndex` will now raise `TypeError` instead
    of raising `ValueError` in cases of length mismatch ([GH 19333](https://github.com/pandas-dev/pandas/issues/19333))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") with a `np.timedelta64` object which was raising a `TypeError`
    ([GH 20393](https://github.com/pandas-dev/pandas/issues/20393))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in creating a `Series` from an array that contains both tz-naive and tz-aware
    values will result in a `Series` whose dtype is tz-aware instead of object ([GH
    16406](https://github.com/pandas-dev/pandas/issues/16406))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in comparison of timezone-aware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") against `NaT` incorrectly raising `TypeError` ([GH 19276](https://github.com/pandas-dev/pandas/issues/19276))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.astype()` when converting between timezone aware dtypes,
    and converting from timezone aware to naive ([GH 18951](https://github.com/pandas-dev/pandas/issues/18951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in comparing [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), which failed to raise `TypeError` when attempting to
    compare timezone-aware and timezone-naive datetimelike objects ([GH 18162](https://github.com/pandas-dev/pandas/issues/18162))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in localization of a naive, datetime string in a `Series` constructor with
    a `datetime64[ns, tz]` dtype ([GH 174151](https://github.com/pandas-dev/pandas/issues/174151))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp.replace()`](../reference/api/pandas.Timestamp.replace.html#pandas.Timestamp.replace
    "pandas.Timestamp.replace") will now handle Daylight Savings transitions gracefully
    ([GH 18319](https://github.com/pandas-dev/pandas/issues/18319))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in tz-aware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") where addition/subtraction with a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") or array with `dtype='timedelta64[ns]'` was incorrect
    ([GH 17558](https://github.com/pandas-dev/pandas/issues/17558))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.insert()` where inserting `NaT` into a timezone-aware
    index incorrectly raised ([GH 16357](https://github.com/pandas-dev/pandas/issues/16357))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor, where tz-aware Datetimeindex and a given column
    name will result in an empty `DataFrame` ([GH 19157](https://github.com/pandas-dev/pandas/issues/19157))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.tz_localize()`](../reference/api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize") where localizing a timestamp near the minimum
    or maximum valid values could overflow and return a timestamp with an incorrect
    nanosecond value ([GH 12677](https://github.com/pandas-dev/pandas/issues/12677))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when iterating over [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") that was localized with fixed timezone offset that rounded
    nanosecond precision to microseconds ([GH 19603](https://github.com/pandas-dev/pandas/issues/19603))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.diff()`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff") that raised an `IndexError` with tz-aware values ([GH
    18578](https://github.com/pandas-dev/pandas/issues/18578))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt")
    that converted tz-aware dtypes to tz-naive ([GH 15785](https://github.com/pandas-dev/pandas/issues/15785))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Dataframe.count()` that raised an `ValueError`, if `Dataframe.dropna()`
    was called for a single column with timezone-aware values. ([GH 13407](https://github.com/pandas-dev/pandas/issues/13407))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Offsets
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `WeekOfMonth` and `Week` where addition and subtraction did not roll
    correctly ([GH 18510](https://github.com/pandas-dev/pandas/issues/18510), [GH
    18672](https://github.com/pandas-dev/pandas/issues/18672), [GH 18864](https://github.com/pandas-dev/pandas/issues/18864))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `WeekOfMonth` and `LastWeekOfMonth` where default keyword arguments for
    constructor raised `ValueError` ([GH 19142](https://github.com/pandas-dev/pandas/issues/19142))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `FY5253Quarter`, `LastWeekOfMonth` where rollback and rollforward behavior
    was inconsistent with addition and subtraction behavior ([GH 18854](https://github.com/pandas-dev/pandas/issues/18854))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `FY5253` where `datetime` addition and subtraction incremented incorrectly
    for dates on the year-end but not normalized to midnight ([GH 18854](https://github.com/pandas-dev/pandas/issues/18854))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `FY5253` where date offsets could incorrectly raise an `AssertionError`
    in arithmetic operations ([GH 14774](https://github.com/pandas-dev/pandas/issues/14774))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor with an int or float list where specifying `dtype=str`, `dtype='str'`
    or `dtype='U'` failed to convert the data elements to strings ([GH 16605](https://github.com/pandas-dev/pandas/issues/16605))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    multiplication and division methods where operating with a `Series` would return
    an `Index` object instead of a `Series` object ([GH 19042](https://github.com/pandas-dev/pandas/issues/19042))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor in which data containing very large positive or
    very large negative numbers was causing `OverflowError` ([GH 18584](https://github.com/pandas-dev/pandas/issues/18584))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    constructor with `dtype='uint64'` where int-like floats were not coerced to `UInt64Index`
    ([GH 18400](https://github.com/pandas-dev/pandas/issues/18400))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") flex arithmetic (e.g. `df.add(other, fill_value=foo)`) with
    a `fill_value` other than `None` failed to raise `NotImplementedError` in corner
    cases where either the frame or `other` has length zero ([GH 19522](https://github.com/pandas-dev/pandas/issues/19522))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Multiplication and division of numeric-dtyped [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") objects with timedelta-like scalars returns `TimedeltaIndex` instead
    of raising `TypeError` ([GH 19333](https://github.com/pandas-dev/pandas/issues/19333))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where `NaN` was returned instead of 0 by [`Series.pct_change()`](../reference/api/pandas.Series.pct_change.html#pandas.Series.pct_change
    "pandas.Series.pct_change") and [`DataFrame.pct_change()`](../reference/api/pandas.DataFrame.pct_change.html#pandas.DataFrame.pct_change
    "pandas.DataFrame.pct_change") when `fill_method` is not `None` ([GH 19873](https://github.com/pandas-dev/pandas/issues/19873))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.str.get()`](../reference/api/pandas.Series.str.get.html#pandas.Series.str.get
    "pandas.Series.str.get") with a dictionary in the values and the index not in
    the keys, raising `KeyError` ([GH 20671](https://github.com/pandas-dev/pandas/issues/20671))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    construction from list of mixed type tuples ([GH 18505](https://github.com/pandas-dev/pandas/issues/18505))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.drop()`](../reference/api/pandas.Index.drop.html#pandas.Index.drop
    "pandas.Index.drop") when passing a list of both tuples and non-tuples ([GH 18304](https://github.com/pandas-dev/pandas/issues/18304))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop"), `Panel.drop()`, [`Series.drop()`](../reference/api/pandas.Series.drop.html#pandas.Series.drop
    "pandas.Series.drop"), [`Index.drop()`](../reference/api/pandas.Index.drop.html#pandas.Index.drop
    "pandas.Index.drop") where no `KeyError` is raised when dropping a non-existent
    element from an axis that contains duplicates ([GH 19186](https://github.com/pandas-dev/pandas/issues/19186))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing a datetimelike `Index` that raised `ValueError` instead of `IndexError`
    ([GH 18386](https://github.com/pandas-dev/pandas/issues/18386)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.to_series()`](../reference/api/pandas.Index.to_series.html#pandas.Index.to_series
    "pandas.Index.to_series") now accepts `index` and `name` kwargs ([GH 18699](https://github.com/pandas-dev/pandas/issues/18699))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DatetimeIndex.to_series()`](../reference/api/pandas.DatetimeIndex.to_series.html#pandas.DatetimeIndex.to_series
    "pandas.DatetimeIndex.to_series") now accepts `index` and `name` kwargs ([GH 18699](https://github.com/pandas-dev/pandas/issues/18699))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing non-scalar value from `Series` having non-unique `Index` will
    return value flattened ([GH 17610](https://github.com/pandas-dev/pandas/issues/17610))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing with iterator containing only missing keys, which raised no
    error ([GH 20748](https://github.com/pandas-dev/pandas/issues/20748))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed inconsistency in `.ix` between list and scalar keys when the index has
    integer dtype and does not include the desired keys ([GH 20753](https://github.com/pandas-dev/pandas/issues/20753))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `__setitem__` when indexing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a 2-d boolean ndarray ([GH 18582](https://github.com/pandas-dev/pandas/issues/18582))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `str.extractall` when there were no matches empty [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") was returned instead of appropriate [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 19034](https://github.com/pandas-dev/pandas/issues/19034))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") where empty and purely NA data was constructed inconsistently
    depending on the construction method ([GH 18421](https://github.com/pandas-dev/pandas/issues/18421))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.symmetric_difference()` where the symmetric difference
    with a non-`IntervalIndex` did not raise ([GH 18475](https://github.com/pandas-dev/pandas/issues/18475))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") where set operations that returned an empty `IntervalIndex`
    had the wrong dtype ([GH 19101](https://github.com/pandas-dev/pandas/issues/19101))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.drop_duplicates()`](../reference/api/pandas.DataFrame.drop_duplicates.html#pandas.DataFrame.drop_duplicates
    "pandas.DataFrame.drop_duplicates") where no `KeyError` is raised when passing
    in columns that don’t exist on the `DataFrame` ([GH 19726](https://github.com/pandas-dev/pandas/issues/19726))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index` subclasses constructors that ignore unexpected keyword arguments
    ([GH 19348](https://github.com/pandas-dev/pandas/issues/19348))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.difference()`](../reference/api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference") when taking difference of an `Index` with itself ([GH
    20040](https://github.com/pandas-dev/pandas/issues/20040))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.first_valid_index()`](../reference/api/pandas.DataFrame.first_valid_index.html#pandas.DataFrame.first_valid_index
    "pandas.DataFrame.first_valid_index") and [`DataFrame.last_valid_index()`](../reference/api/pandas.DataFrame.last_valid_index.html#pandas.DataFrame.last_valid_index
    "pandas.DataFrame.last_valid_index") in presence of entire rows of NaNs in the
    middle of values ([GH 20499](https://github.com/pandas-dev/pandas/issues/20499)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") where some indexing operations were not supported for
    overlapping or non-monotonic `uint64` data ([GH 20636](https://github.com/pandas-dev/pandas/issues/20636))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.is_unique` where extraneous output in stderr is shown if Series
    contains objects with `__ne__` defined ([GH 20661](https://github.com/pandas-dev/pandas/issues/20661))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.loc` assignment with a single-element list-like incorrectly assigns
    as a list ([GH 19474](https://github.com/pandas-dev/pandas/issues/19474))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in partial string indexing on a `Series/DataFrame` with a monotonic decreasing
    `DatetimeIndex` ([GH 19362](https://github.com/pandas-dev/pandas/issues/19362))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in performing in-place operations on a `DataFrame` with a duplicate `Index`
    ([GH 17105](https://github.com/pandas-dev/pandas/issues/17105))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.get_loc()`](../reference/api/pandas.IntervalIndex.get_loc.html#pandas.IntervalIndex.get_loc
    "pandas.IntervalIndex.get_loc") and [`IntervalIndex.get_indexer()`](../reference/api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer") when used with an [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") containing a single interval ([GH 17284](https://github.com/pandas-dev/pandas/issues/17284),
    [GH 20921](https://github.com/pandas-dev/pandas/issues/20921))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.loc` with a `uint64` indexer ([GH 20722](https://github.com/pandas-dev/pandas/issues/20722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.__contains__()` where non-tuple keys would return `True`
    even if they had been dropped ([GH 19027](https://github.com/pandas-dev/pandas/issues/19027))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.set_labels()` which would cause casting (and potentially
    clipping) of the new labels if the `level` argument is not 0 or a list like [0,
    1, … ] ([GH 19057](https://github.com/pandas-dev/pandas/issues/19057))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_level_values()`](../reference/api/pandas.MultiIndex.get_level_values.html#pandas.MultiIndex.get_level_values
    "pandas.MultiIndex.get_level_values") which would return an invalid index on level
    of ints with missing values ([GH 17924](https://github.com/pandas-dev/pandas/issues/17924))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.unique()` when called on empty [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 20568](https://github.com/pandas-dev/pandas/issues/20568))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.unique()` which would not preserve level names ([GH 20570](https://github.com/pandas-dev/pandas/issues/20570))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.remove_unused_levels()`](../reference/api/pandas.MultiIndex.remove_unused_levels.html#pandas.MultiIndex.remove_unused_levels
    "pandas.MultiIndex.remove_unused_levels") which would fill nan values ([GH 18417](https://github.com/pandas-dev/pandas/issues/18417))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.from_tuples()`](../reference/api/pandas.MultiIndex.from_tuples.html#pandas.MultiIndex.from_tuples
    "pandas.MultiIndex.from_tuples") which would fail to take zipped tuples in python3
    ([GH 18434](https://github.com/pandas-dev/pandas/issues/18434))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") which would fail to automatically cast values between
    float and int ([GH 18818](https://github.com/pandas-dev/pandas/issues/18818),
    [GH 15994](https://github.com/pandas-dev/pandas/issues/15994))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") which would cast boolean to integer labels ([GH 19086](https://github.com/pandas-dev/pandas/issues/19086))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") which would fail to locate keys containing `NaN`
    ([GH 18485](https://github.com/pandas-dev/pandas/issues/18485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") in large [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"), would fail when levels had different dtypes ([GH 18520](https://github.com/pandas-dev/pandas/issues/18520))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing where nested indexers having only numpy arrays are handled incorrectly
    ([GH 19686](https://github.com/pandas-dev/pandas/issues/19686))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IO
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html "pandas.read_html")
    now rewinds seekable IO objects after parse failure, before attempting to parse
    with a new parser. If a parser errors and the object is non-seekable, an informative
    error is raised suggesting the use of a different parser ([GH 17975](https://github.com/pandas-dev/pandas/issues/17975))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") now has an option to add an id to the leading `<table>`
    tag ([GH 8496](https://github.com/pandas-dev/pandas/issues/8496))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `read_msgpack()` with a non existent file is passed in Python 2 ([GH
    15296](https://github.com/pandas-dev/pandas/issues/15296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where a `MultiIndex` with duplicate columns was not being mangled
    appropriately ([GH 18062](https://github.com/pandas-dev/pandas/issues/18062))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where missing values were not being handled properly when `keep_default_na=False`
    with dictionary `na_values` ([GH 19227](https://github.com/pandas-dev/pandas/issues/19227))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") causing heap corruption on 32-bit, big-endian architectures
    ([GH 20785](https://github.com/pandas-dev/pandas/issues/20785))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") where a file with 0 variables gave an `AttributeError` incorrectly.
    Now it gives an `EmptyDataError` ([GH 18184](https://github.com/pandas-dev/pandas/issues/18184))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") where pairs of braces meant to serve as invisible
    placeholders were escaped ([GH 18667](https://github.com/pandas-dev/pandas/issues/18667))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") where a `NaN` in a `MultiIndex` would cause an `IndexError`
    or incorrect output ([GH 14249](https://github.com/pandas-dev/pandas/issues/14249))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") where a non-string index-level name would result
    in an `AttributeError` ([GH 19981](https://github.com/pandas-dev/pandas/issues/19981))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") where the combination of an index name and the `index_names=False`
    option would result in incorrect output ([GH 18326](https://github.com/pandas-dev/pandas/issues/18326))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") where a `MultiIndex` with an empty string as its
    name would result in incorrect output ([GH 18669](https://github.com/pandas-dev/pandas/issues/18669))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") where missing space characters caused wrong escaping
    and produced non-valid latex in some cases ([GH 20859](https://github.com/pandas-dev/pandas/issues/20859))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") where large numeric values were causing an `OverflowError`
    ([GH 18842](https://github.com/pandas-dev/pandas/issues/18842))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") where an exception was raised if the write destination
    is S3 ([GH 19134](https://github.com/pandas-dev/pandas/issues/19134))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Interval`](../reference/api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    now supported in [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") for all Excel file types ([GH 19242](https://github.com/pandas-dev/pandas/issues/19242))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    now supported in [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") for all Excel file types ([GH 19242](https://github.com/pandas-dev/pandas/issues/19242),
    [GH 9155](https://github.com/pandas-dev/pandas/issues/9155), [GH 19900](https://github.com/pandas-dev/pandas/issues/19900))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.io.stata.StataReader.value_labels()`](../reference/api/pandas.io.stata.StataReader.value_labels.html#pandas.io.stata.StataReader.value_labels
    "pandas.io.stata.StataReader.value_labels") raising an `AttributeError` when called
    on very old files. Now returns an empty dict ([GH 19417](https://github.com/pandas-dev/pandas/issues/19417))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle") when unpickling objects with [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") or `Float64Index` created with pandas prior to version
    0.20 ([GH 19939](https://github.com/pandas-dev/pandas/issues/19939))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas.io.json.json_normalize()` where sub-records are not properly
    normalized if any sub-records values are NoneType ([GH 20030](https://github.com/pandas-dev/pandas/issues/20030))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `usecols` parameter in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where error is not raised correctly when passing a string.
    ([GH 20529](https://github.com/pandas-dev/pandas/issues/20529))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`HDFStore.keys()`](../reference/api/pandas.HDFStore.keys.html#pandas.HDFStore.keys
    "pandas.HDFStore.keys") when reading a file with a soft link causes exception
    ([GH 20523](https://github.com/pandas-dev/pandas/issues/20523))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `HDFStore.select_column()` where a key which is not a valid store raised
    an `AttributeError` instead of a `KeyError` ([GH 17912](https://github.com/pandas-dev/pandas/issues/17912))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Better error message when attempting to plot but matplotlib is not installed
    ([GH 19810](https://github.com/pandas-dev/pandas/issues/19810)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") now raises a `ValueError` when the `x` or `y` argument
    is improperly formed ([GH 18671](https://github.com/pandas-dev/pandas/issues/18671))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") when `x` and `y` arguments given as positions caused
    incorrect referenced columns for line, bar and area plots ([GH 20056](https://github.com/pandas-dev/pandas/issues/20056))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in formatting tick labels with `datetime.time()` and fractional seconds
    ([GH 18478](https://github.com/pandas-dev/pandas/issues/18478)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.plot.kde()`](../reference/api/pandas.Series.plot.kde.html#pandas.Series.plot.kde
    "pandas.Series.plot.kde") has exposed the args `ind` and `bw_method` in the docstring
    ([GH 18461](https://github.com/pandas-dev/pandas/issues/18461)). The argument
    `ind` may now also be an integer (number of sample points).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") now supports multiple columns to the `y` argument ([GH
    19699](https://github.com/pandas-dev/pandas/issues/19699))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GroupBy/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug when grouping by a single column and aggregating with a class like `list`
    or `tuple` ([GH 18079](https://github.com/pandas-dev/pandas/issues/18079))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") which would not emit an error when called with a tuple
    key not in the index ([GH 18798](https://github.com/pandas-dev/pandas/issues/18798))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") which silently ignored unsupported (or mistyped)
    options for `label`, `closed` and `convention` ([GH 19303](https://github.com/pandas-dev/pandas/issues/19303))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") where tuples were interpreted as lists of keys rather
    than as keys ([GH 17979](https://github.com/pandas-dev/pandas/issues/17979), [GH
    18249](https://github.com/pandas-dev/pandas/issues/18249))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") where aggregation by `first`/`last`/`min`/`max` was
    causing timestamps to lose precision ([GH 19526](https://github.com/pandas-dev/pandas/issues/19526))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.transform()`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform") where particular aggregation functions were being
    incorrectly cast to match the dtype(s) of the grouped data ([GH 19200](https://github.com/pandas-dev/pandas/issues/19200))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") passing the `on=` kwarg, and subsequently using `.apply()`
    ([GH 17813](https://github.com/pandas-dev/pandas/issues/17813))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.resample().aggregate` not raising a `KeyError` when aggregating
    a non-existent column ([GH 16766](https://github.com/pandas-dev/pandas/issues/16766),
    [GH 19566](https://github.com/pandas-dev/pandas/issues/19566))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.cumsum()` and `DataFrameGroupBy.cumprod()` when `skipna`
    was passed ([GH 19806](https://github.com/pandas-dev/pandas/issues/19806))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") that dropped timezone information ([GH 13238](https://github.com/pandas-dev/pandas/issues/13238))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") where transformations using `np.all` and `np.any`
    were raising a `ValueError` ([GH 20653](https://github.com/pandas-dev/pandas/issues/20653))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") where `ffill`, `bfill`, `pad`, `backfill`, `fillna`,
    `interpolate`, and `asfreq` were ignoring `loffset`. ([GH 20744](https://github.com/pandas-dev/pandas/issues/20744))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") when applying a function that has mixed data types
    and the user supplied function can fail on the grouping column ([GH 20949](https://github.com/pandas-dev/pandas/issues/20949))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.rolling().apply()` where operations performed against
    the associated `DataFrameGroupBy` object could impact the inclusion of the grouped
    item(s) in the result ([GH 14013](https://github.com/pandas-dev/pandas/issues/14013))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in which creating a `SparseDataFrame` from a dense `Series` or an unsupported
    type raised an uncontrolled exception ([GH 19374](https://github.com/pandas-dev/pandas/issues/19374))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseDataFrame.to_csv` causing exception ([GH 19384](https://github.com/pandas-dev/pandas/issues/19384))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseSeries.memory_usage` which caused segfault by accessing non sparse
    elements ([GH 19368](https://github.com/pandas-dev/pandas/issues/19368))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in constructing a `SparseArray`: if `data` is a scalar and `index` is defined
    it will coerce to `float64` regardless of scalar’s dtype. ([GH 19163](https://github.com/pandas-dev/pandas/issues/19163))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") where referencing a `CategoricalIndex` by name, where
    the `by` kwarg would `KeyError` ([GH 20777](https://github.com/pandas-dev/pandas/issues/20777))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") which fails trying to sort mixed type levels under Python
    3 ([GH 18310](https://github.com/pandas-dev/pandas/issues/18310))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") which casts int to float if `columns` is a `MultiIndex`
    with unused levels ([GH 17845](https://github.com/pandas-dev/pandas/issues/17845))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") which raises an error if `index` is a `MultiIndex`
    with unused labels on the unstacked level ([GH 18562](https://github.com/pandas-dev/pandas/issues/18562))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed construction of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") from a `dict` containing `NaN` as key ([GH 18480](https://github.com/pandas-dev/pandas/issues/18480))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed construction of a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from a `dict` containing `NaN` as key ([GH 18455](https://github.com/pandas-dev/pandas/issues/18455))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disabled construction of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") where len(index) > len(data) = 1, which previously would broadcast
    the data item, and now raises a `ValueError` ([GH 18819](https://github.com/pandas-dev/pandas/issues/18819))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Suppressed error in the construction of a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from a `dict` containing scalar values when the corresponding
    keys are not included in the passed index ([GH 18600](https://github.com/pandas-dev/pandas/issues/18600))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed (changed from `object` to `float64`) dtype of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") initialized with axes, no data, and `dtype=int` ([GH 19646](https://github.com/pandas-dev/pandas/issues/19646))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rank()`](../reference/api/pandas.Series.rank.html#pandas.Series.rank
    "pandas.Series.rank") where `Series` containing `NaT` modifies the `Series` inplace
    ([GH 18521](https://github.com/pandas-dev/pandas/issues/18521))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") which
    fails when using readonly arrays ([GH 18773](https://github.com/pandas-dev/pandas/issues/18773))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") which fails when the `aggfunc` arg is of type
    string. The behavior is now consistent with other methods like `agg` and `apply`
    ([GH 18713](https://github.com/pandas-dev/pandas/issues/18713))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") in which merging using `Index` objects as vectors raised
    an Exception ([GH 19038](https://github.com/pandas-dev/pandas/issues/19038))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack"), [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack"), [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack") which were not returning subclasses ([GH 15563](https://github.com/pandas-dev/pandas/issues/15563))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in timezone comparisons, manifesting as a conversion of the index to UTC
    in `.concat()` ([GH 18523](https://github.com/pandas-dev/pandas/issues/18523))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    when concatenating sparse and dense series it returns only a `SparseDataFrame`.
    Should be a `DataFrame`. ([GH 18914](https://github.com/pandas-dev/pandas/issues/18914),
    [GH 18686](https://github.com/pandas-dev/pandas/issues/18686), and [GH 16874](https://github.com/pandas-dev/pandas/issues/16874))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message for [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") when there is no common merge key ([GH 19427](https://github.com/pandas-dev/pandas/issues/19427))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") which does an `outer` instead of a `left` join when being
    called with multiple DataFrames and some have non-unique indices ([GH 19624](https://github.com/pandas-dev/pandas/issues/19624))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.rename()`](../reference/api/pandas.Series.rename.html#pandas.Series.rename
    "pandas.Series.rename") now accepts `axis` as a kwarg ([GH 18589](https://github.com/pandas-dev/pandas/issues/18589))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`rename()`](../reference/api/pandas.DataFrame.rename.html#pandas.DataFrame.rename
    "pandas.DataFrame.rename") where an Index of same-length tuples was converted
    to a MultiIndex ([GH 19497](https://github.com/pandas-dev/pandas/issues/19497))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Comparisons between [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") would return a `Series` with an incorrect name, ignoring the `Index`’s
    name attribute ([GH 19582](https://github.com/pandas-dev/pandas/issues/19582))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`qcut()`](../reference/api/pandas.qcut.html#pandas.qcut "pandas.qcut")
    where datetime and timedelta data with `NaT` present raised a `ValueError` ([GH
    19768](https://github.com/pandas-dev/pandas/issues/19768))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iterrows()`](../reference/api/pandas.DataFrame.iterrows.html#pandas.DataFrame.iterrows
    "pandas.DataFrame.iterrows"), which would infers strings not compliant to [ISO8601](https://en.wikipedia.org/wiki/ISO_8601)
    to datetimes ([GH 19671](https://github.com/pandas-dev/pandas/issues/19671))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor with `Categorical` where a `ValueError` is not raised when an index
    of different length is given ([GH 19342](https://github.com/pandas-dev/pandas/issues/19342))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") where column metadata is lost when converting to categorical
    or a dictionary of dtypes ([GH 19920](https://github.com/pandas-dev/pandas/issues/19920))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") and
    [`qcut()`](../reference/api/pandas.qcut.html#pandas.qcut "pandas.qcut") where
    timezone information was dropped ([GH 19872](https://github.com/pandas-dev/pandas/issues/19872))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor with a `dtype=str`, previously raised in some cases ([GH 19853](https://github.com/pandas-dev/pandas/issues/19853))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies"), and `select_dtypes()`, where duplicate column names caused
    incorrect behavior ([GH 20848](https://github.com/pandas-dev/pandas/issues/20848))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`isna()`](../reference/api/pandas.isna.html#pandas.isna "pandas.isna"),
    which cannot handle ambiguous typed lists ([GH 20675](https://github.com/pandas-dev/pandas/issues/20675))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    which raises an error when concatenating TZ-aware dataframes and all-NaT dataframes
    ([GH 12396](https://github.com/pandas-dev/pandas/issues/12396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    which raises an error when concatenating empty TZ-aware series ([GH 18447](https://github.com/pandas-dev/pandas/issues/18447))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Improved error message when attempting to use a Python keyword as an identifier
    in a `numexpr` backed query ([GH 18221](https://github.com/pandas-dev/pandas/issues/18221))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in accessing a [`pandas.get_option()`](../reference/api/pandas.get_option.html#pandas.get_option
    "pandas.get_option"), which raised `KeyError` rather than `OptionError` when looking
    up a non-existent option key in some cases ([GH 19789](https://github.com/pandas-dev/pandas/issues/19789))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") and [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") for Series or DataFrames with differing unicode
    data ([GH 20503](https://github.com/pandas-dev/pandas/issues/20503))  ## Contributors'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A total of 328 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: Aaron Critchley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AbdealiJK +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam Hooper +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Albert Villanova del Moral
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alejandro Giacometti +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alejandro Hohmann +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Rychyk
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexander Buchkovsky
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexander Lenail +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexander Michael Schade
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aly Sivji +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andreas Költringer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Bui +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: András Novoszáth +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andy Craze +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andy R. Terrel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anh Le +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anil Kumar Pallekonda +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antoine Pitrou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antonio Linde +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antonio Molina +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antonio Quinonez +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Armin Varshokar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Artem Bogachev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avi Sen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azeez Oluwafemi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben Auffarth +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bernhard Thiel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bhavesh Poddar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: BielStela +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blair +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bob Haffner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brett Naul +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brock Mendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bryce Guinta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Carlos Eduardo Moreira dos Santos +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Carlos García Márquez +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Carol Willing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cheuk Ting Ho +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chitrank Dixit +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Burr +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Catalfo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Mazzullo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christian Chwala +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cihan Ceyhan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clemens Brunner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Colin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cornelius Riemenschneider
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Crystal Gong +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DaanVanHauwermeiren
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dan Dixey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Frank +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Garrido +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Sakuma +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DataOmbudsman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dave Hirschfeld
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dave Lewis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Adrián Cañones Castellano +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Arcos +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David C Hall +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Fischer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Hoese +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Lutz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Polo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Stansby
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dennis Kamau +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dillon Niederhut
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dimitri +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dr. Irv
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dror Atariah
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eric Chea +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eric Kisslinger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eric O. LEBIGOT (EOL) +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: FAN-GOD +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fabian Retkowski +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fer Sar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gabriel de Maeztu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gianpaolo Macario +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Giftlin Rajaiah
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gilberto Olimpio +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gina +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gjelt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Graham Inggs +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Grant Roch
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Grant Smith +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Grzegorz Konefał +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guilherme Beltramini
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HagaiHargil +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hamish Pitkeathly +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hammad Mashkoor +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hannah Ferchland +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hans
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Haochen Wu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hissashi Rocha +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Iain Barr +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ibrahim Sharaf ElDen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ignasi Fosch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Igor Conrado Alves de Lima +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Igor Shelvinskyi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Imanflow +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ingolf Becker
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Israel Saeta Pérez
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Iva Koevska +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jakub Nowacki +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan F-F +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Koch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Werkmann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Janelle Zoutkamp +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jason Bandlow +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jaume Bonet +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jay Alammar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JennaVergeynst
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jimmy Woo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jing Qiang Goh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joachim Wagner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joan Martin Miralles +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joel Nothman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joeun Park +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John Cant +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Johnny Metz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jon Mease
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonas Schulze +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jongwony +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jordi Contestí +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: José F. R. Fonseca +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jovixe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julio Martinez +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jörg Döpfert
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: KOBAYASHI Ittoku +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kate Surta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kenneth +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Kuhl
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Krzysztof Chomski
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ksenia +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ksenia Bobrova +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kunal Gosar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kurtis Kerstein +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kyle Barron +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Laksh Arora +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Laurens Geffert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leif Walsh
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Liam Marshall +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Liam3851 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Licht Takeuchi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Liudmila +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ludovico Russo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mabel Villalba +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Manan Pal Singh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Manraj Singh
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Garcia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Hemken +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maria del Mar Bibiloni +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mario Corchero +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mark Woodbridge +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Journois +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mason Gallo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matias Heikkilä +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Braymer-Hayes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Kirk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Maybeno +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Kirk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Rocklin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthias Bussonnier +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Max Mikhaylov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maxim Veksler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maximilian Roos
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maximiliano Greco +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Penkov
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Röttger +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Selik +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Waskom
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mie~~~
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mike Kutzma +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ming Li +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mitar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mitch Negus +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Montana Low +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Moritz Münst +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mortada Mehyar
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Myles Braithwaite +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nate Yoder
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nicholas Ursa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nick Chmura
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nikos Karagiannakis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nipun Sadvilkar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nis Martensen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Noah +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Noémi Éltető +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Olivier Bilodeau +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ondrej Kokes +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Onno Eberhard +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul Ganssle +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul Mannino +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul Reidy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paulo Roberto de Oliveira Castro +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pepe Flores +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter Hoffmann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Phil Ngo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pietro Battiston
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pranav Suri +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Priyanka Ojha +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pulkit Maloo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: README Bot +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ray Bell +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Riccardo Magliocchetti +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ridhwan Luthra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert Meyer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robin Kiplang’at +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rohan Pandit +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rok Mihevc +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rouz Azari
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ryszard T. Kaleta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sam Cohan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sam Foo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Samir Musali +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Samuel Sinayoko +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sangwoong Yoon
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SarahJessica +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sharad Vijalapuram +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shubham Chaudhary +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SiYoungOh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sietse Brouwer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simone Basso +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefania Delprete +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefano Cianciulli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stephen Childs +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: StephenVoland +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stijn Van Hoey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sven
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Talitha Pumar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tarbo Fukazawa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ted Petrou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas A Caswell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Hoffmann +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Swast
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Augspurger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tommy +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tulio Casagrande +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tushar Gupta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tushar Mittal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Upkar Lidder +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Victor Villas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vince W +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vinícius Figueiredo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vipin Kumar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: WBare
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wenhuan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wes Turner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Ayd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wilson Lin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Xbar
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yaroslav Halchenko
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yee Mey
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yeongseon Choe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yian +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yimeng Zhang
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ZhuBaohe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zihao Zhao +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: adatasetaday +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: akielbowicz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: akosel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alinde1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: amuta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bolkedebruin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cbertinato
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cgohlke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: charlie0389 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: chris-b1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: csfarkas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dajcs +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: deflatSOCO +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: derestle-htwg
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: discort
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dmanikowski-reef +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: donK23 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: elrubio +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: fivemok +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: fjdiod
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: fjetter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: froessler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gabrielclow
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gfyoung
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ghasemnaddaf
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: h-vetinari +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: himanshu awasthi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ignamv +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jayfoad +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jazzmuesli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jen w +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jjames34 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: joaoavf +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: joders +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jschendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: juan huguet +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: l736x +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: luzpaz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mdeboc +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: miguelmorin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: miker985
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: miquelcamprodon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: orereta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ottiP +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: peterpanmj +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rafarui +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: raph-m +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: readyready15728 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rmihael +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: samghelms +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: scriptomation +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sfoo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: stefansimik +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: stonebig
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tmnhat2001 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tomneep +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: topper-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tv3141 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: verakai +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: xpvpc +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'zhanghui +  ## New features'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### JSON read/write round-trippable with `orient=''table''`'
  prefs: []
  type: TYPE_NORMAL
- en: A `DataFrame` can now be written to and subsequently read back via JSON while
    preserving metadata through usage of the `orient='table'` argument (see [GH 18912](https://github.com/pandas-dev/pandas/issues/18912)
    and [GH 9146](https://github.com/pandas-dev/pandas/issues/9146)). Previously,
    none of the available `orient` values guaranteed the preservation of dtypes and
    index names, amongst other metadata.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: Please note that the string `index` is not supported with the round trip format,
    as it is used by default in `write_json` to indicate a missing index name.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]  ### Method `.assign()` accepts dependent arguments'
  prefs: []
  type: TYPE_NORMAL
- en: The [`DataFrame.assign()`](../reference/api/pandas.DataFrame.assign.html#pandas.DataFrame.assign
    "pandas.DataFrame.assign") now accepts dependent keyword arguments for python
    version later than 3.6 (see also [PEP 468](https://www.python.org/dev/peps/pep-0468/)).
    Later keyword arguments may now refer to earlier ones if the argument is a callable.
    See the [documentation here](../user_guide/dsintro.html#dsintro-chained-assignment)
    ([GH 14207](https://github.com/pandas-dev/pandas/issues/14207))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: This may subtly change the behavior of your code when you’re using `.assign()`
    to update an existing column. Previously, callables referring to other variables
    being updated would get the “old” values
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]  ### Merging on a combination of columns and index levels'
  prefs: []
  type: TYPE_NORMAL
- en: Strings passed to [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") as the `on`, `left_on`, and `right_on` parameters may
    now refer to either column names or index level names. This enables merging `DataFrame`
    instances on a combination of index levels and columns without resetting indexes.
    See the [Merge on columns and levels](../user_guide/merging.html#merging-merge-on-columns-and-levels)
    documentation section. ([GH 14355](https://github.com/pandas-dev/pandas/issues/14355))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]  ### Sorting by a combination of columns and index levels'
  prefs: []
  type: TYPE_NORMAL
- en: Strings passed to [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") as the `by` parameter may now refer to either
    column names or index level names. This enables sorting `DataFrame` instances
    by a combination of index levels and columns without resetting indexes. See the
    [Sorting by Indexes and Values](../user_guide/basics.html#basics-sort-indexes-and-values)
    documentation section. ([GH 14353](https://github.com/pandas-dev/pandas/issues/14353))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]  ### Extending pandas with custom types (experimental)'
  prefs: []
  type: TYPE_NORMAL
- en: pandas now supports storing array-like objects that aren’t necessarily 1-D NumPy
    arrays as columns in a DataFrame or values in a Series. This allows third-party
    libraries to implement extensions to NumPy’s types, similar to how pandas implemented
    categoricals, datetimes with timezones, periods, and intervals.
  prefs: []
  type: TYPE_NORMAL
- en: As a demonstration, we’ll use [cyberpandas](https://cyberpandas.readthedocs.io/en/latest/),
    which provides an `IPArray` type for storing ip addresses.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: '`IPArray` isn’t a normal 1-D NumPy array, but because it’s a pandas [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray"), it can be stored properly inside pandas’
    containers.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: 'Notice that the dtype is `ip`. The missing value semantics of the underlying
    array are respected:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: 'For more, see the [extension types](../development/extending.html#extending-extension-types)
    documentation. If you build an extension array, publicize it on [the ecosystem
    page](https://pandas.pydata.org/community/ecosystem.html).  ### New `observed`
    keyword for excluding unobserved categories in `GroupBy`'
  prefs: []
  type: TYPE_NORMAL
- en: Grouping by a categorical includes the unobserved categories in the output.
    When grouping by multiple categorical columns, this means you get the cartesian
    product of all the categories, including combinations where there are no observations,
    which can result in a large number of groups. We have added a keyword `observed`
    to control this behavior, it defaults to `observed=False` for backward-compatibility.
    ([GH 14942](https://github.com/pandas-dev/pandas/issues/14942), [GH 8138](https://github.com/pandas-dev/pandas/issues/8138),
    [GH 15217](https://github.com/pandas-dev/pandas/issues/15217), [GH 17594](https://github.com/pandas-dev/pandas/issues/17594),
    [GH 8669](https://github.com/pandas-dev/pandas/issues/8669), [GH 20583](https://github.com/pandas-dev/pandas/issues/20583),
    [GH 20902](https://github.com/pandas-dev/pandas/issues/20902))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: 'To show all values, the previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: 'To show only observed values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: 'For pivoting operations, this behavior is *already* controlled by the `dropna`
    keyword:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE68]  ### Rolling/Expanding.apply() accepts `raw=False` to pass a `Series`
    to the function'
  prefs: []
  type: TYPE_NORMAL
- en: '`Series.rolling().apply()`, `DataFrame.rolling().apply()`, `Series.expanding().apply()`,
    and `DataFrame.expanding().apply()` have gained a `raw=None` parameter. This is
    similar to `DataFame.apply()`. This parameter, if `True` allows one to send a
    `np.ndarray` to the applied function. If `False` a `Series` will be passed. The
    default is `None`, which preserves backward compatibility, so this will default
    to `True`, sending an `np.ndarray`. In a future version the default will be changed
    to `False`, sending a `Series`. ([GH 5071](https://github.com/pandas-dev/pandas/issues/5071),
    [GH 20584](https://github.com/pandas-dev/pandas/issues/20584))'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: 'Pass a `Series`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: 'Mimic the original behavior of passing a ndarray:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]  ### `DataFrame.interpolate` has gained the `limit_area` kwarg'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") has gained a `limit_area` parameter to allow further
    control of which `NaN` s are replaced. Use `limit_area=''inside''` to fill only
    NaNs surrounded by valid values or use `limit_area=''outside''` to fill only `NaN`
    s outside the existing valid values while preserving those inside. ([GH 16284](https://github.com/pandas-dev/pandas/issues/16284))
    See the [full documentation here](../user_guide/missing_data.html#missing-data-interp-limits).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: Fill one consecutive inside value in both directions
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: Fill all consecutive outside values backward
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: Fill all consecutive outside values in both directions
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]  ### Function `get_dummies` now supports `dtype` argument'
  prefs: []
  type: TYPE_NORMAL
- en: The [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") now accepts a `dtype` argument, which specifies a dtype
    for the new columns. The default remains uint8\. ([GH 18330](https://github.com/pandas-dev/pandas/issues/18330))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]  ### Timedelta mod method'
  prefs: []
  type: TYPE_NORMAL
- en: '`mod` (%) and `divmod` operations are now defined on `Timedelta` objects when
    operating with either timedelta-like or with numeric arguments. See the [documentation
    here](../user_guide/timedeltas.html#timedeltas-mod-divmod). ([GH 19365](https://github.com/pandas-dev/pandas/issues/19365))'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]  ### Method `.rank()` handles `inf` values when `NaN` are present'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions, `.rank()` would assign `inf` elements `NaN` as their ranks.
    Now ranks are calculated properly. ([GH 6945](https://github.com/pandas-dev/pandas/issues/6945))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: 'Current behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: Furthermore, previously if you rank `inf` or `-inf` values together with `NaN`
    values, the calculation won’t distinguish `NaN` from infinity when using ‘top’
    or ‘bottom’ argument.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: 'Current behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: 'These bugs were squashed:'
  prefs: []
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank") and [`Series.rank()`](../reference/api/pandas.Series.rank.html#pandas.Series.rank
    "pandas.Series.rank") when `method='dense'` and `pct=True` in which percentile
    ranks were not being used with the number of distinct observations ([GH 15630](https://github.com/pandas-dev/pandas/issues/15630))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rank()`](../reference/api/pandas.Series.rank.html#pandas.Series.rank
    "pandas.Series.rank") and [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank") when `ascending='False'` failed to return correct ranks
    for infinity if `NaN` were present ([GH 19538](https://github.com/pandas-dev/pandas/issues/19538))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in `DataFrameGroupBy.rank()` where ranks were incorrect when both infinity
    and `NaN` were present ([GH 20561](https://github.com/pandas-dev/pandas/issues/20561))  ###
    `Series.str.cat` has gained the `join` kwarg'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Previously, [`Series.str.cat()`](../reference/api/pandas.Series.str.cat.html#pandas.Series.str.cat
    "pandas.Series.str.cat") did not – in contrast to most of `pandas` – align [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") on their index before concatenation (see [GH 18657](https://github.com/pandas-dev/pandas/issues/18657)).
    The method has now gained a keyword `join` to control the manner of alignment,
    see examples below and [here](../user_guide/text.html#text-concatenate).
  prefs: []
  type: TYPE_NORMAL
- en: In v.0.23 `join` will default to None (meaning no alignment), but this default
    will change to `'left'` in a future version of pandas.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: 'Furthermore, [`Series.str.cat()`](../reference/api/pandas.Series.str.cat.html#pandas.Series.str.cat
    "pandas.Series.str.cat") now works for `CategoricalIndex` as well (previously
    raised a `ValueError`; see [GH 20842](https://github.com/pandas-dev/pandas/issues/20842)).  ###
    `DataFrame.astype` performs column-wise conversion to `Categorical`'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") can now perform column-wise conversion to `Categorical`
    by supplying the string `''category''` or a `CategoricalDtype`. Previously, attempting
    this would raise a `NotImplementedError`. See the [Object creation](../user_guide/categorical.html#categorical-objectcreation)
    section of the documentation for more details and examples. ([GH 12860](https://github.com/pandas-dev/pandas/issues/12860),
    [GH 18099](https://github.com/pandas-dev/pandas/issues/18099))'
  prefs: []
  type: TYPE_NORMAL
- en: 'Supplying the string `''category''` performs column-wise conversion, with only
    labels appearing in a given column set as categories:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: 'Supplying a `CategoricalDtype` will make the categories in each column consistent
    with the supplied dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]  ### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: Unary `+` now permitted for `Series` and `DataFrame` as numeric operator ([GH
    16073](https://github.com/pandas-dev/pandas/issues/16073))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Better support for [`to_excel()`](../reference/api/pandas.io.formats.style.Styler.to_excel.html#pandas.io.formats.style.Styler.to_excel
    "pandas.io.formats.style.Styler.to_excel") output with the `xlsxwriter` engine.
    ([GH 16149](https://github.com/pandas-dev/pandas/issues/16149))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.tseries.frequencies.to_offset()`](../reference/api/pandas.tseries.frequencies.to_offset.html#pandas.tseries.frequencies.to_offset
    "pandas.tseries.frequencies.to_offset") now accepts leading ‘+’ signs e.g. ‘+1h’.
    ([GH 18171](https://github.com/pandas-dev/pandas/issues/18171))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`MultiIndex.unique()` now supports the `level=` argument, to get unique values
    from a specific index level ([GH 17896](https://github.com/pandas-dev/pandas/issues/17896))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.io.formats.style.Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") now has method `hide_index()` to determine whether
    the index will be rendered in output ([GH 14194](https://github.com/pandas-dev/pandas/issues/14194))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.io.formats.style.Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") now has method `hide_columns()` to determine
    whether columns will be hidden in output ([GH 14194](https://github.com/pandas-dev/pandas/issues/14194))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved wording of `ValueError` raised in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when `unit=` is passed with a non-convertible value ([GH
    14350](https://github.com/pandas-dev/pandas/issues/14350))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") now accepts a Series or a dict as a `value` for a categorical
    dtype ([GH 17033](https://github.com/pandas-dev/pandas/issues/17033))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.read_clipboard()`](../reference/api/pandas.read_clipboard.html#pandas.read_clipboard
    "pandas.read_clipboard") updated to use qtpy, falling back to PyQt5 and then PyQt4,
    adding compatibility with Python3 and multiple python-qt bindings ([GH 17722](https://github.com/pandas-dev/pandas/issues/17722))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved wording of `ValueError` raised in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when the `usecols` argument cannot match all columns. ([GH
    17301](https://github.com/pandas-dev/pandas/issues/17301))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.corrwith()`](../reference/api/pandas.DataFrame.corrwith.html#pandas.DataFrame.corrwith
    "pandas.DataFrame.corrwith") now silently drops non-numeric columns when passed
    a Series. Before, an exception was raised ([GH 18570](https://github.com/pandas-dev/pandas/issues/18570)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") now supports time zone aware `Interval` objects ([GH 18537](https://github.com/pandas-dev/pandas/issues/18537),
    [GH 18538](https://github.com/pandas-dev/pandas/issues/18538))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series()`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    / [`DataFrame()`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    tab completion also returns identifiers in the first level of a [`MultiIndex()`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"). ([GH 16326](https://github.com/pandas-dev/pandas/issues/16326))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") has gained the `nrows` parameter ([GH 16645](https://github.com/pandas-dev/pandas/issues/16645))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.append()` can now in more cases preserve the type of the calling
    dataframe’s columns (e.g. if both are `CategoricalIndex`) ([GH 18359](https://github.com/pandas-dev/pandas/issues/18359))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") and [`Series.to_json()`](../reference/api/pandas.Series.to_json.html#pandas.Series.to_json
    "pandas.Series.to_json") now accept an `index` argument which allows the user
    to exclude the index from the JSON output ([GH 17394](https://github.com/pandas-dev/pandas/issues/17394))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntervalIndex.to_tuples()` has gained the `na_tuple` parameter to control
    whether NA is returned as a tuple of NA, or NA itself ([GH 18756](https://github.com/pandas-dev/pandas/issues/18756))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.rename_categories`, `CategoricalIndex.rename_categories` and [`Series.cat.rename_categories`](../reference/api/pandas.Series.cat.rename_categories.html#pandas.Series.cat.rename_categories
    "pandas.Series.cat.rename_categories") can now take a callable as their argument
    ([GH 18862](https://github.com/pandas-dev/pandas/issues/18862))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Interval`](../reference/api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    and [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") have gained a `length` attribute ([GH 18789](https://github.com/pandas-dev/pandas/issues/18789))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Resampler` objects now have a functioning [`Resampler.pipe`](../reference/api/pandas.core.resample.Resampler.pipe.html#pandas.core.resample.Resampler.pipe
    "pandas.core.resample.Resampler.pipe") method. Previously, calls to `pipe` were
    diverted to the `mean` method ([GH 17905](https://github.com/pandas-dev/pandas/issues/17905)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`is_scalar()`](../reference/api/pandas.api.types.is_scalar.html#pandas.api.types.is_scalar
    "pandas.api.types.is_scalar") now returns `True` for `DateOffset` objects ([GH
    18943](https://github.com/pandas-dev/pandas/issues/18943)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") now accepts a list for the `values=` kwarg ([GH 17160](https://github.com/pandas-dev/pandas/issues/17160)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`pandas.api.extensions.register_dataframe_accessor()`](../reference/api/pandas.api.extensions.register_dataframe_accessor.html#pandas.api.extensions.register_dataframe_accessor
    "pandas.api.extensions.register_dataframe_accessor"), [`pandas.api.extensions.register_series_accessor()`](../reference/api/pandas.api.extensions.register_series_accessor.html#pandas.api.extensions.register_series_accessor
    "pandas.api.extensions.register_series_accessor"), and [`pandas.api.extensions.register_index_accessor()`](../reference/api/pandas.api.extensions.register_index_accessor.html#pandas.api.extensions.register_index_accessor
    "pandas.api.extensions.register_index_accessor"), accessor for libraries downstream
    of pandas to register custom accessors like `.cat` on pandas objects. See [Registering
    Custom Accessors](../development/extending.html#extending-register-accessors)
    for more ([GH 14781](https://github.com/pandas-dev/pandas/issues/14781)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntervalIndex.astype` now supports conversions between subtypes when passed
    an `IntervalDtype` ([GH 19197](https://github.com/pandas-dev/pandas/issues/19197))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") and its associated constructor methods (`from_arrays`,
    `from_breaks`, `from_tuples`) have gained a `dtype` parameter ([GH 19262](https://github.com/pandas-dev/pandas/issues/19262))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `SeriesGroupBy.is_monotonic_increasing()` and `SeriesGroupBy.is_monotonic_decreasing()`
    ([GH 17015](https://github.com/pandas-dev/pandas/issues/17015))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For subclassed `DataFrames`, [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") will now preserve the `Series` subclass (if defined)
    when passing the data to the applied function ([GH 19822](https://github.com/pandas-dev/pandas/issues/19822))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.from_dict()`](../reference/api/pandas.DataFrame.from_dict.html#pandas.DataFrame.from_dict
    "pandas.DataFrame.from_dict") now accepts a `columns` argument that can be used
    to specify the column names when `orient=''index''` is used ([GH 18529](https://github.com/pandas-dev/pandas/issues/18529))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added option `display.html.use_mathjax` so [MathJax](https://www.mathjax.org/)
    can be disabled when rendering tables in `Jupyter` notebooks ([GH 19856](https://github.com/pandas-dev/pandas/issues/19856),
    [GH 19824](https://github.com/pandas-dev/pandas/issues/19824))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") now supports the `method` parameter, which can be
    used to specify the replacement method when `to_replace` is a scalar, list or
    tuple and `value` is `None` ([GH 19632](https://github.com/pandas-dev/pandas/issues/19632))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp.month_name()`](../reference/api/pandas.Timestamp.month_name.html#pandas.Timestamp.month_name
    "pandas.Timestamp.month_name"), [`DatetimeIndex.month_name()`](../reference/api/pandas.DatetimeIndex.month_name.html#pandas.DatetimeIndex.month_name
    "pandas.DatetimeIndex.month_name"), and [`Series.dt.month_name()`](../reference/api/pandas.Series.dt.month_name.html#pandas.Series.dt.month_name
    "pandas.Series.dt.month_name") are now available ([GH 12805](https://github.com/pandas-dev/pandas/issues/12805))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp.day_name()`](../reference/api/pandas.Timestamp.day_name.html#pandas.Timestamp.day_name
    "pandas.Timestamp.day_name") and [`DatetimeIndex.day_name()`](../reference/api/pandas.DatetimeIndex.day_name.html#pandas.DatetimeIndex.day_name
    "pandas.DatetimeIndex.day_name") are now available to return day names with a
    specified locale ([GH 12806](https://github.com/pandas-dev/pandas/issues/12806))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") now performs a multi-value insert if the underlying
    connection supports itk rather than inserting row by row. `SQLAlchemy` dialects
    supporting multi-value inserts include: `mysql`, `postgresql`, `sqlite` and any
    dialect with `supports_multivalues_insert`. ([GH 14315](https://github.com/pandas-dev/pandas/issues/14315),
    [GH 8953](https://github.com/pandas-dev/pandas/issues/8953))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html "pandas.read_html")
    now accepts a `displayed_only` keyword argument to controls whether or not hidden
    elements are parsed (`True` by default) ([GH 20027](https://github.com/pandas-dev/pandas/issues/20027))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html "pandas.read_html")
    now reads all `<tbody>` elements in a `<table>`, not just the first. ([GH 20690](https://github.com/pandas-dev/pandas/issues/20690))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Rolling.quantile()`](../reference/api/pandas.core.window.rolling.Rolling.quantile.html#pandas.core.window.rolling.Rolling.quantile
    "pandas.core.window.rolling.Rolling.quantile") and [`Expanding.quantile()`](../reference/api/pandas.core.window.expanding.Expanding.quantile.html#pandas.core.window.expanding.Expanding.quantile
    "pandas.core.window.expanding.Expanding.quantile") now accept the `interpolation`
    keyword, `linear` by default ([GH 20497](https://github.com/pandas-dev/pandas/issues/20497))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: zip compression is supported via `compression=zip` in [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle"), [`Series.to_pickle()`](../reference/api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle"), [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv"), [`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv"), [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json"), [`Series.to_json()`](../reference/api/pandas.Series.to_json.html#pandas.Series.to_json
    "pandas.Series.to_json"). ([GH 17778](https://github.com/pandas-dev/pandas/issues/17778))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`WeekOfMonth`](../reference/api/pandas.tseries.offsets.WeekOfMonth.html#pandas.tseries.offsets.WeekOfMonth
    "pandas.tseries.offsets.WeekOfMonth") constructor now supports `n=0` ([GH 20517](https://github.com/pandas-dev/pandas/issues/20517)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    and [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    now support matrix multiplication (`@`) operator ([GH 10259](https://github.com/pandas-dev/pandas/issues/10259))
    for Python>=3.5'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Updated [`DataFrame.to_gbq()`](../reference/api/pandas.DataFrame.to_gbq.html#pandas.DataFrame.to_gbq
    "pandas.DataFrame.to_gbq") and [`pandas.read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq
    "pandas.read_gbq") signature and documentation to reflect changes from the pandas-gbq
    library version 0.4.0\. Adds intersphinx mapping to pandas-gbq library. ([GH 20564](https://github.com/pandas-dev/pandas/issues/20564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added new writer for exporting Stata dta files in version 117, `StataWriter117`.
    This format supports exporting strings with lengths up to 2,000,000 characters
    ([GH 16450](https://github.com/pandas-dev/pandas/issues/16450))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_hdf()` and [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") now accept an `errors` keyword argument to control encoding
    error handling ([GH 20835](https://github.com/pandas-dev/pandas/issues/20835))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") has gained
    the `duplicates=''raise''|''drop''` option to control whether to raise on duplicated
    edges ([GH 20947](https://github.com/pandas-dev/pandas/issues/20947))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range"), [`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range"), and [`interval_range()`](../reference/api/pandas.interval_range.html#pandas.interval_range
    "pandas.interval_range") now return a linearly spaced index if `start`, `stop`,
    and `periods` are specified, but `freq` is not. ([GH 20808](https://github.com/pandas-dev/pandas/issues/20808),
    [GH 20983](https://github.com/pandas-dev/pandas/issues/20983), [GH 20976](https://github.com/pandas-dev/pandas/issues/20976))  ###
    JSON read/write round-trippable with `orient=''table''`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A `DataFrame` can now be written to and subsequently read back via JSON while
    preserving metadata through usage of the `orient='table'` argument (see [GH 18912](https://github.com/pandas-dev/pandas/issues/18912)
    and [GH 9146](https://github.com/pandas-dev/pandas/issues/9146)). Previously,
    none of the available `orient` values guaranteed the preservation of dtypes and
    index names, amongst other metadata.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]'
  prefs: []
  type: TYPE_PRE
- en: Please note that the string `index` is not supported with the round trip format,
    as it is used by default in `write_json` to indicate a missing index name.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: '### Method `.assign()` accepts dependent arguments'
  prefs: []
  type: TYPE_NORMAL
- en: The [`DataFrame.assign()`](../reference/api/pandas.DataFrame.assign.html#pandas.DataFrame.assign
    "pandas.DataFrame.assign") now accepts dependent keyword arguments for python
    version later than 3.6 (see also [PEP 468](https://www.python.org/dev/peps/pep-0468/)).
    Later keyword arguments may now refer to earlier ones if the argument is a callable.
    See the [documentation here](../user_guide/dsintro.html#dsintro-chained-assignment)
    ([GH 14207](https://github.com/pandas-dev/pandas/issues/14207))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]'
  prefs: []
  type: TYPE_PRE
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: This may subtly change the behavior of your code when you’re using `.assign()`
    to update an existing column. Previously, callables referring to other variables
    being updated would get the “old” values
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]'
  prefs: []
  type: TYPE_PRE
- en: '### Merging on a combination of columns and index levels'
  prefs: []
  type: TYPE_NORMAL
- en: Strings passed to [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") as the `on`, `left_on`, and `right_on` parameters may
    now refer to either column names or index level names. This enables merging `DataFrame`
    instances on a combination of index levels and columns without resetting indexes.
    See the [Merge on columns and levels](../user_guide/merging.html#merging-merge-on-columns-and-levels)
    documentation section. ([GH 14355](https://github.com/pandas-dev/pandas/issues/14355))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: '### Sorting by a combination of columns and index levels'
  prefs: []
  type: TYPE_NORMAL
- en: Strings passed to [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") as the `by` parameter may now refer to either
    column names or index level names. This enables sorting `DataFrame` instances
    by a combination of index levels and columns without resetting indexes. See the
    [Sorting by Indexes and Values](../user_guide/basics.html#basics-sort-indexes-and-values)
    documentation section. ([GH 14353](https://github.com/pandas-dev/pandas/issues/14353))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE93]'
  prefs: []
  type: TYPE_PRE
- en: '### Extending pandas with custom types (experimental)'
  prefs: []
  type: TYPE_NORMAL
- en: pandas now supports storing array-like objects that aren’t necessarily 1-D NumPy
    arrays as columns in a DataFrame or values in a Series. This allows third-party
    libraries to implement extensions to NumPy’s types, similar to how pandas implemented
    categoricals, datetimes with timezones, periods, and intervals.
  prefs: []
  type: TYPE_NORMAL
- en: As a demonstration, we’ll use [cyberpandas](https://cyberpandas.readthedocs.io/en/latest/),
    which provides an `IPArray` type for storing ip addresses.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE94]'
  prefs: []
  type: TYPE_PRE
- en: '`IPArray` isn’t a normal 1-D NumPy array, but because it’s a pandas [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray"), it can be stored properly inside pandas’
    containers.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: 'Notice that the dtype is `ip`. The missing value semantics of the underlying
    array are respected:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE96]'
  prefs: []
  type: TYPE_PRE
- en: For more, see the [extension types](../development/extending.html#extending-extension-types)
    documentation. If you build an extension array, publicize it on [the ecosystem
    page](https://pandas.pydata.org/community/ecosystem.html).
  prefs: []
  type: TYPE_NORMAL
- en: '### New `observed` keyword for excluding unobserved categories in `GroupBy`'
  prefs: []
  type: TYPE_NORMAL
- en: Grouping by a categorical includes the unobserved categories in the output.
    When grouping by multiple categorical columns, this means you get the cartesian
    product of all the categories, including combinations where there are no observations,
    which can result in a large number of groups. We have added a keyword `observed`
    to control this behavior, it defaults to `observed=False` for backward-compatibility.
    ([GH 14942](https://github.com/pandas-dev/pandas/issues/14942), [GH 8138](https://github.com/pandas-dev/pandas/issues/8138),
    [GH 15217](https://github.com/pandas-dev/pandas/issues/15217), [GH 17594](https://github.com/pandas-dev/pandas/issues/17594),
    [GH 8669](https://github.com/pandas-dev/pandas/issues/8669), [GH 20583](https://github.com/pandas-dev/pandas/issues/20583),
    [GH 20902](https://github.com/pandas-dev/pandas/issues/20902))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE97]'
  prefs: []
  type: TYPE_PRE
- en: 'To show all values, the previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE98]'
  prefs: []
  type: TYPE_PRE
- en: 'To show only observed values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE99]'
  prefs: []
  type: TYPE_PRE
- en: 'For pivoting operations, this behavior is *already* controlled by the `dropna`
    keyword:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE100]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE101]'
  prefs: []
  type: TYPE_PRE
- en: '### Rolling/Expanding.apply() accepts `raw=False` to pass a `Series` to the
    function'
  prefs: []
  type: TYPE_NORMAL
- en: '`Series.rolling().apply()`, `DataFrame.rolling().apply()`, `Series.expanding().apply()`,
    and `DataFrame.expanding().apply()` have gained a `raw=None` parameter. This is
    similar to `DataFame.apply()`. This parameter, if `True` allows one to send a
    `np.ndarray` to the applied function. If `False` a `Series` will be passed. The
    default is `None`, which preserves backward compatibility, so this will default
    to `True`, sending an `np.ndarray`. In a future version the default will be changed
    to `False`, sending a `Series`. ([GH 5071](https://github.com/pandas-dev/pandas/issues/5071),
    [GH 20584](https://github.com/pandas-dev/pandas/issues/20584))'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE102]'
  prefs: []
  type: TYPE_PRE
- en: 'Pass a `Series`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE103]'
  prefs: []
  type: TYPE_PRE
- en: 'Mimic the original behavior of passing a ndarray:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE104]'
  prefs: []
  type: TYPE_PRE
- en: '### `DataFrame.interpolate` has gained the `limit_area` kwarg'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") has gained a `limit_area` parameter to allow further
    control of which `NaN` s are replaced. Use `limit_area=''inside''` to fill only
    NaNs surrounded by valid values or use `limit_area=''outside''` to fill only `NaN`
    s outside the existing valid values while preserving those inside. ([GH 16284](https://github.com/pandas-dev/pandas/issues/16284))
    See the [full documentation here](../user_guide/missing_data.html#missing-data-interp-limits).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE105]'
  prefs: []
  type: TYPE_PRE
- en: Fill one consecutive inside value in both directions
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE106]'
  prefs: []
  type: TYPE_PRE
- en: Fill all consecutive outside values backward
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE107]'
  prefs: []
  type: TYPE_PRE
- en: Fill all consecutive outside values in both directions
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE108]'
  prefs: []
  type: TYPE_PRE
- en: '### Function `get_dummies` now supports `dtype` argument'
  prefs: []
  type: TYPE_NORMAL
- en: The [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") now accepts a `dtype` argument, which specifies a dtype
    for the new columns. The default remains uint8\. ([GH 18330](https://github.com/pandas-dev/pandas/issues/18330))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE109]'
  prefs: []
  type: TYPE_PRE
- en: '### Timedelta mod method'
  prefs: []
  type: TYPE_NORMAL
- en: '`mod` (%) and `divmod` operations are now defined on `Timedelta` objects when
    operating with either timedelta-like or with numeric arguments. See the [documentation
    here](../user_guide/timedeltas.html#timedeltas-mod-divmod). ([GH 19365](https://github.com/pandas-dev/pandas/issues/19365))'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE110]'
  prefs: []
  type: TYPE_PRE
- en: '### Method `.rank()` handles `inf` values when `NaN` are present'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions, `.rank()` would assign `inf` elements `NaN` as their ranks.
    Now ranks are calculated properly. ([GH 6945](https://github.com/pandas-dev/pandas/issues/6945))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE111]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE112]'
  prefs: []
  type: TYPE_PRE
- en: 'Current behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE113]'
  prefs: []
  type: TYPE_PRE
- en: Furthermore, previously if you rank `inf` or `-inf` values together with `NaN`
    values, the calculation won’t distinguish `NaN` from infinity when using ‘top’
    or ‘bottom’ argument.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE114]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE115]'
  prefs: []
  type: TYPE_PRE
- en: 'Current behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE116]'
  prefs: []
  type: TYPE_PRE
- en: 'These bugs were squashed:'
  prefs: []
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank") and [`Series.rank()`](../reference/api/pandas.Series.rank.html#pandas.Series.rank
    "pandas.Series.rank") when `method='dense'` and `pct=True` in which percentile
    ranks were not being used with the number of distinct observations ([GH 15630](https://github.com/pandas-dev/pandas/issues/15630))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rank()`](../reference/api/pandas.Series.rank.html#pandas.Series.rank
    "pandas.Series.rank") and [`DataFrame.rank()`](../reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank
    "pandas.DataFrame.rank") when `ascending='False'` failed to return correct ranks
    for infinity if `NaN` were present ([GH 19538](https://github.com/pandas-dev/pandas/issues/19538))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.rank()` where ranks were incorrect when both infinity
    and `NaN` were present ([GH 20561](https://github.com/pandas-dev/pandas/issues/20561))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### `Series.str.cat` has gained the `join` kwarg'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, [`Series.str.cat()`](../reference/api/pandas.Series.str.cat.html#pandas.Series.str.cat
    "pandas.Series.str.cat") did not – in contrast to most of `pandas` – align [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") on their index before concatenation (see [GH 18657](https://github.com/pandas-dev/pandas/issues/18657)).
    The method has now gained a keyword `join` to control the manner of alignment,
    see examples below and [here](../user_guide/text.html#text-concatenate).
  prefs: []
  type: TYPE_NORMAL
- en: In v.0.23 `join` will default to None (meaning no alignment), but this default
    will change to `'left'` in a future version of pandas.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE117]'
  prefs: []
  type: TYPE_PRE
- en: Furthermore, [`Series.str.cat()`](../reference/api/pandas.Series.str.cat.html#pandas.Series.str.cat
    "pandas.Series.str.cat") now works for `CategoricalIndex` as well (previously
    raised a `ValueError`; see [GH 20842](https://github.com/pandas-dev/pandas/issues/20842)).
  prefs: []
  type: TYPE_NORMAL
- en: '### `DataFrame.astype` performs column-wise conversion to `Categorical`'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") can now perform column-wise conversion to `Categorical`
    by supplying the string `''category''` or a `CategoricalDtype`. Previously, attempting
    this would raise a `NotImplementedError`. See the [Object creation](../user_guide/categorical.html#categorical-objectcreation)
    section of the documentation for more details and examples. ([GH 12860](https://github.com/pandas-dev/pandas/issues/12860),
    [GH 18099](https://github.com/pandas-dev/pandas/issues/18099))'
  prefs: []
  type: TYPE_NORMAL
- en: 'Supplying the string `''category''` performs column-wise conversion, with only
    labels appearing in a given column set as categories:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE118]'
  prefs: []
  type: TYPE_PRE
- en: 'Supplying a `CategoricalDtype` will make the categories in each column consistent
    with the supplied dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE119]'
  prefs: []
  type: TYPE_PRE
- en: '### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: Unary `+` now permitted for `Series` and `DataFrame` as numeric operator ([GH
    16073](https://github.com/pandas-dev/pandas/issues/16073))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Better support for [`to_excel()`](../reference/api/pandas.io.formats.style.Styler.to_excel.html#pandas.io.formats.style.Styler.to_excel
    "pandas.io.formats.style.Styler.to_excel") output with the `xlsxwriter` engine.
    ([GH 16149](https://github.com/pandas-dev/pandas/issues/16149))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.tseries.frequencies.to_offset()`](../reference/api/pandas.tseries.frequencies.to_offset.html#pandas.tseries.frequencies.to_offset
    "pandas.tseries.frequencies.to_offset") now accepts leading ‘+’ signs e.g. ‘+1h’.
    ([GH 18171](https://github.com/pandas-dev/pandas/issues/18171))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`MultiIndex.unique()` now supports the `level=` argument, to get unique values
    from a specific index level ([GH 17896](https://github.com/pandas-dev/pandas/issues/17896))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.io.formats.style.Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") now has method `hide_index()` to determine whether
    the index will be rendered in output ([GH 14194](https://github.com/pandas-dev/pandas/issues/14194))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.io.formats.style.Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") now has method `hide_columns()` to determine
    whether columns will be hidden in output ([GH 14194](https://github.com/pandas-dev/pandas/issues/14194))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved wording of `ValueError` raised in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when `unit=` is passed with a non-convertible value ([GH
    14350](https://github.com/pandas-dev/pandas/issues/14350))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") now accepts a Series or a dict as a `value` for a categorical
    dtype ([GH 17033](https://github.com/pandas-dev/pandas/issues/17033))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.read_clipboard()`](../reference/api/pandas.read_clipboard.html#pandas.read_clipboard
    "pandas.read_clipboard") updated to use qtpy, falling back to PyQt5 and then PyQt4,
    adding compatibility with Python3 and multiple python-qt bindings ([GH 17722](https://github.com/pandas-dev/pandas/issues/17722))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved wording of `ValueError` raised in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when the `usecols` argument cannot match all columns. ([GH
    17301](https://github.com/pandas-dev/pandas/issues/17301))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.corrwith()`](../reference/api/pandas.DataFrame.corrwith.html#pandas.DataFrame.corrwith
    "pandas.DataFrame.corrwith") now silently drops non-numeric columns when passed
    a Series. Before, an exception was raised ([GH 18570](https://github.com/pandas-dev/pandas/issues/18570)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") now supports time zone aware `Interval` objects ([GH 18537](https://github.com/pandas-dev/pandas/issues/18537),
    [GH 18538](https://github.com/pandas-dev/pandas/issues/18538))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series()`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    / [`DataFrame()`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    tab completion also returns identifiers in the first level of a [`MultiIndex()`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"). ([GH 16326](https://github.com/pandas-dev/pandas/issues/16326))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") has gained the `nrows` parameter ([GH 16645](https://github.com/pandas-dev/pandas/issues/16645))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.append()` can now in more cases preserve the type of the calling
    dataframe’s columns (e.g. if both are `CategoricalIndex`) ([GH 18359](https://github.com/pandas-dev/pandas/issues/18359))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") and [`Series.to_json()`](../reference/api/pandas.Series.to_json.html#pandas.Series.to_json
    "pandas.Series.to_json") now accept an `index` argument which allows the user
    to exclude the index from the JSON output ([GH 17394](https://github.com/pandas-dev/pandas/issues/17394))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntervalIndex.to_tuples()` has gained the `na_tuple` parameter to control
    whether NA is returned as a tuple of NA, or NA itself ([GH 18756](https://github.com/pandas-dev/pandas/issues/18756))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.rename_categories`, `CategoricalIndex.rename_categories` and [`Series.cat.rename_categories`](../reference/api/pandas.Series.cat.rename_categories.html#pandas.Series.cat.rename_categories
    "pandas.Series.cat.rename_categories") can now take a callable as their argument
    ([GH 18862](https://github.com/pandas-dev/pandas/issues/18862))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Interval`](../reference/api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    and [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") have gained a `length` attribute ([GH 18789](https://github.com/pandas-dev/pandas/issues/18789))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Resampler` objects now have a functioning [`Resampler.pipe`](../reference/api/pandas.core.resample.Resampler.pipe.html#pandas.core.resample.Resampler.pipe
    "pandas.core.resample.Resampler.pipe") method. Previously, calls to `pipe` were
    diverted to the `mean` method ([GH 17905](https://github.com/pandas-dev/pandas/issues/17905)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`is_scalar()`](../reference/api/pandas.api.types.is_scalar.html#pandas.api.types.is_scalar
    "pandas.api.types.is_scalar") now returns `True` for `DateOffset` objects ([GH
    18943](https://github.com/pandas-dev/pandas/issues/18943)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") now accepts a list for the `values=` kwarg ([GH 17160](https://github.com/pandas-dev/pandas/issues/17160)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`pandas.api.extensions.register_dataframe_accessor()`](../reference/api/pandas.api.extensions.register_dataframe_accessor.html#pandas.api.extensions.register_dataframe_accessor
    "pandas.api.extensions.register_dataframe_accessor"), [`pandas.api.extensions.register_series_accessor()`](../reference/api/pandas.api.extensions.register_series_accessor.html#pandas.api.extensions.register_series_accessor
    "pandas.api.extensions.register_series_accessor"), and [`pandas.api.extensions.register_index_accessor()`](../reference/api/pandas.api.extensions.register_index_accessor.html#pandas.api.extensions.register_index_accessor
    "pandas.api.extensions.register_index_accessor"), accessor for libraries downstream
    of pandas to register custom accessors like `.cat` on pandas objects. See [Registering
    Custom Accessors](../development/extending.html#extending-register-accessors)
    for more ([GH 14781](https://github.com/pandas-dev/pandas/issues/14781)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntervalIndex.astype` now supports conversions between subtypes when passed
    an `IntervalDtype` ([GH 19197](https://github.com/pandas-dev/pandas/issues/19197))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") and its associated constructor methods (`from_arrays`,
    `from_breaks`, `from_tuples`) have gained a `dtype` parameter ([GH 19262](https://github.com/pandas-dev/pandas/issues/19262))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `SeriesGroupBy.is_monotonic_increasing()` and `SeriesGroupBy.is_monotonic_decreasing()`
    ([GH 17015](https://github.com/pandas-dev/pandas/issues/17015))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For subclassed `DataFrames`, [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") will now preserve the `Series` subclass (if defined)
    when passing the data to the applied function ([GH 19822](https://github.com/pandas-dev/pandas/issues/19822))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.from_dict()`](../reference/api/pandas.DataFrame.from_dict.html#pandas.DataFrame.from_dict
    "pandas.DataFrame.from_dict") now accepts a `columns` argument that can be used
    to specify the column names when `orient=''index''` is used ([GH 18529](https://github.com/pandas-dev/pandas/issues/18529))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added option `display.html.use_mathjax` so [MathJax](https://www.mathjax.org/)
    can be disabled when rendering tables in `Jupyter` notebooks ([GH 19856](https://github.com/pandas-dev/pandas/issues/19856),
    [GH 19824](https://github.com/pandas-dev/pandas/issues/19824))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") now supports the `method` parameter, which can be
    used to specify the replacement method when `to_replace` is a scalar, list or
    tuple and `value` is `None` ([GH 19632](https://github.com/pandas-dev/pandas/issues/19632))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp.month_name()`](../reference/api/pandas.Timestamp.month_name.html#pandas.Timestamp.month_name
    "pandas.Timestamp.month_name"), [`DatetimeIndex.month_name()`](../reference/api/pandas.DatetimeIndex.month_name.html#pandas.DatetimeIndex.month_name
    "pandas.DatetimeIndex.month_name"), and [`Series.dt.month_name()`](../reference/api/pandas.Series.dt.month_name.html#pandas.Series.dt.month_name
    "pandas.Series.dt.month_name") are now available ([GH 12805](https://github.com/pandas-dev/pandas/issues/12805))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp.day_name()`](../reference/api/pandas.Timestamp.day_name.html#pandas.Timestamp.day_name
    "pandas.Timestamp.day_name") and [`DatetimeIndex.day_name()`](../reference/api/pandas.DatetimeIndex.day_name.html#pandas.DatetimeIndex.day_name
    "pandas.DatetimeIndex.day_name") are now available to return day names with a
    specified locale ([GH 12806](https://github.com/pandas-dev/pandas/issues/12806))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") now performs a multi-value insert if the underlying
    connection supports itk rather than inserting row by row. `SQLAlchemy` dialects
    supporting multi-value inserts include: `mysql`, `postgresql`, `sqlite` and any
    dialect with `supports_multivalues_insert`. ([GH 14315](https://github.com/pandas-dev/pandas/issues/14315),
    [GH 8953](https://github.com/pandas-dev/pandas/issues/8953))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html "pandas.read_html")
    now accepts a `displayed_only` keyword argument to controls whether or not hidden
    elements are parsed (`True` by default) ([GH 20027](https://github.com/pandas-dev/pandas/issues/20027))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html "pandas.read_html")
    now reads all `<tbody>` elements in a `<table>`, not just the first. ([GH 20690](https://github.com/pandas-dev/pandas/issues/20690))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Rolling.quantile()`](../reference/api/pandas.core.window.rolling.Rolling.quantile.html#pandas.core.window.rolling.Rolling.quantile
    "pandas.core.window.rolling.Rolling.quantile") and [`Expanding.quantile()`](../reference/api/pandas.core.window.expanding.Expanding.quantile.html#pandas.core.window.expanding.Expanding.quantile
    "pandas.core.window.expanding.Expanding.quantile") now accept the `interpolation`
    keyword, `linear` by default ([GH 20497](https://github.com/pandas-dev/pandas/issues/20497))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: zip compression is supported via `compression=zip` in [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle"), [`Series.to_pickle()`](../reference/api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle"), [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv"), [`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv"), [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json"), [`Series.to_json()`](../reference/api/pandas.Series.to_json.html#pandas.Series.to_json
    "pandas.Series.to_json"). ([GH 17778](https://github.com/pandas-dev/pandas/issues/17778))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`WeekOfMonth`](../reference/api/pandas.tseries.offsets.WeekOfMonth.html#pandas.tseries.offsets.WeekOfMonth
    "pandas.tseries.offsets.WeekOfMonth") constructor now supports `n=0` ([GH 20517](https://github.com/pandas-dev/pandas/issues/20517)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    and [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    now support matrix multiplication (`@`) operator ([GH 10259](https://github.com/pandas-dev/pandas/issues/10259))
    for Python>=3.5'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Updated [`DataFrame.to_gbq()`](../reference/api/pandas.DataFrame.to_gbq.html#pandas.DataFrame.to_gbq
    "pandas.DataFrame.to_gbq") and [`pandas.read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq
    "pandas.read_gbq") signature and documentation to reflect changes from the pandas-gbq
    library version 0.4.0\. Adds intersphinx mapping to pandas-gbq library. ([GH 20564](https://github.com/pandas-dev/pandas/issues/20564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added new writer for exporting Stata dta files in version 117, `StataWriter117`.
    This format supports exporting strings with lengths up to 2,000,000 characters
    ([GH 16450](https://github.com/pandas-dev/pandas/issues/16450))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_hdf()` and [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") now accept an `errors` keyword argument to control encoding
    error handling ([GH 20835](https://github.com/pandas-dev/pandas/issues/20835))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") has gained
    the `duplicates=''raise''|''drop''` option to control whether to raise on duplicated
    edges ([GH 20947](https://github.com/pandas-dev/pandas/issues/20947))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range"), [`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range"), and [`interval_range()`](../reference/api/pandas.interval_range.html#pandas.interval_range
    "pandas.interval_range") now return a linearly spaced index if `start`, `stop`,
    and `periods` are specified, but `freq` is not. ([GH 20808](https://github.com/pandas-dev/pandas/issues/20808),
    [GH 20983](https://github.com/pandas-dev/pandas/issues/20983), [GH 20976](https://github.com/pandas-dev/pandas/issues/20976))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Backwards incompatible API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '### Dependencies have increased minimum versions'
  prefs: []
  type: TYPE_NORMAL
- en: 'We have updated our minimum supported versions of dependencies ([GH 15184](https://github.com/pandas-dev/pandas/issues/15184)).
    If installed, we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Issue |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.5.0 | X | [GH 15184](https://github.com/pandas-dev/pandas/issues/15184)
    |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 2.4.0 |  | [GH 15184](https://github.com/pandas-dev/pandas/issues/15184)
    |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.2.1 |  | [GH 20082](https://github.com/pandas-dev/pandas/issues/20082)
    |'
  prefs: []
  type: TYPE_TB
- en: '| setuptools | 24.2.0 |  | [GH 20698](https://github.com/pandas-dev/pandas/issues/20698)
    |  ### Instantiation from dicts preserves dict insertion order for Python 3.6+'
  prefs: []
  type: TYPE_NORMAL
- en: Until Python 3.6, dicts in Python had no formally defined ordering. For Python
    version 3.6 and later, dicts are ordered by insertion order, see [PEP 468](https://www.python.org/dev/peps/pep-0468/).
    pandas will use the dict’s insertion order, when creating a `Series` or `DataFrame`
    from a dict and you’re using Python version 3.6 or higher. ([GH 19884](https://github.com/pandas-dev/pandas/issues/19884))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior (and current behavior if on Python < 3.6):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE120]'
  prefs: []
  type: TYPE_PRE
- en: Note the Series above is ordered alphabetically by the index values.
  prefs: []
  type: TYPE_NORMAL
- en: 'New behavior (for Python >= 3.6):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE121]'
  prefs: []
  type: TYPE_PRE
- en: Notice that the Series is now ordered by insertion order. This new behavior
    is used for all relevant pandas types (`Series`, `DataFrame`, `SparseSeries` and
    `SparseDataFrame`).
  prefs: []
  type: TYPE_NORMAL
- en: 'If you wish to retain the old behavior while using Python >= 3.6, you can use
    `.sort_index()`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE122]  ### Deprecate Panel'
  prefs: []
  type: TYPE_NORMAL
- en: '`Panel` was deprecated in the 0.20.x release, showing as a `DeprecationWarning`.
    Using `Panel` will now show a `FutureWarning`. The recommended way to represent
    3-D data are with a `MultiIndex` on a `DataFrame` via the `to_frame()` or with
    the [xarray package](http://xarray.pydata.org/en/stable/). pandas provides a `to_xarray()`
    method to automate this conversion ([GH 13563](https://github.com/pandas-dev/pandas/issues/13563),
    [GH 18324](https://github.com/pandas-dev/pandas/issues/18324)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE123]'
  prefs: []
  type: TYPE_PRE
- en: Convert to a MultiIndex DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE124]'
  prefs: []
  type: TYPE_PRE
- en: Convert to an xarray DataArray
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE125]  ### pandas.core.common removals'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following error & warning messages are removed from `pandas.core.common`
    ([GH 13634](https://github.com/pandas-dev/pandas/issues/13634), [GH 19769](https://github.com/pandas-dev/pandas/issues/19769)):'
  prefs: []
  type: TYPE_NORMAL
- en: '`PerformanceWarning`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`UnsupportedFunctionCall`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`UnsortedIndexError`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`AbstractMethodError`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'These are available from import from `pandas.errors` (since 0.19.0).  ### Changes
    to make output of `DataFrame.apply` consistent'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") was inconsistent when applying an arbitrary user-defined-function
    that returned a list-like with `axis=1`. Several bugs and inconsistencies are
    resolved. If the applied function returns a Series, then pandas will return a
    DataFrame; otherwise a Series will be returned, this includes the case where a
    list-like (e.g. `tuple` or `list` is returned) ([GH 16353](https://github.com/pandas-dev/pandas/issues/16353),
    [GH 17437](https://github.com/pandas-dev/pandas/issues/17437), [GH 17970](https://github.com/pandas-dev/pandas/issues/17970),
    [GH 17348](https://github.com/pandas-dev/pandas/issues/17348), [GH 17892](https://github.com/pandas-dev/pandas/issues/17892),
    [GH 18573](https://github.com/pandas-dev/pandas/issues/18573), [GH 17602](https://github.com/pandas-dev/pandas/issues/17602),
    [GH 18775](https://github.com/pandas-dev/pandas/issues/18775), [GH 18901](https://github.com/pandas-dev/pandas/issues/18901),
    [GH 18919](https://github.com/pandas-dev/pandas/issues/18919)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE126]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior: if the returned shape happened to match the length of original
    columns, this would return a `DataFrame`. If the return shape did not match, a
    `Series` with lists was returned.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE127]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior: When the applied function returns a list-like, this will now
    *always* return a `Series`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE128]'
  prefs: []
  type: TYPE_PRE
- en: To have expanded columns, you can use `result_type='expand'`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE129]'
  prefs: []
  type: TYPE_PRE
- en: To broadcast the result across the original columns (the old behaviour for list-likes
    of the correct length), you can use `result_type='broadcast'`. The shape must
    match the original columns.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE130]'
  prefs: []
  type: TYPE_PRE
- en: 'Returning a `Series` allows one to control the exact return structure and column
    names:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE131]  ### Concatenation will no longer sort'
  prefs: []
  type: TYPE_NORMAL
- en: In a future version of pandas [`pandas.concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") will no longer sort the non-concatenation axis when it is not
    already aligned. The current behavior is the same as the previous (sorting), but
    now a warning is issued when `sort` is not specified and the non-concatenation
    axis is not aligned ([GH 4588](https://github.com/pandas-dev/pandas/issues/4588)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE132]'
  prefs: []
  type: TYPE_PRE
- en: To keep the previous behavior (sorting) and silence the warning, pass `sort=True`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE133]'
  prefs: []
  type: TYPE_PRE
- en: To accept the future behavior (no sorting), pass `sort=False`
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that this change also applies to `DataFrame.append()`, which has also
    received a `sort` keyword for controlling this behavior.  ### Build changes'
  prefs: []
  type: TYPE_NORMAL
- en: Building pandas for development now requires `cython >= 0.24` ([GH 18613](https://github.com/pandas-dev/pandas/issues/18613))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Building from source now explicitly requires `setuptools` in `setup.py` ([GH
    18113](https://github.com/pandas-dev/pandas/issues/18113))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Updated conda recipe to be in compliance with conda-build 3.0+ ([GH 18002](https://github.com/pandas-dev/pandas/issues/18002))  ###
    Index division by zero fills correctly'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Division operations on `Index` and subclasses will now fill division of positive
    numbers by zero with `np.inf`, division of negative numbers by zero with `-np.inf`
    and `0 / 0` with `np.nan`. This matches existing `Series` behavior. ([GH 19322](https://github.com/pandas-dev/pandas/issues/19322),
    [GH 19347](https://github.com/pandas-dev/pandas/issues/19347))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE134]'
  prefs: []
  type: TYPE_PRE
- en: 'Current behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE135]  ### Extraction of matching patterns from strings'
  prefs: []
  type: TYPE_NORMAL
- en: By default, extracting matching patterns from strings with `str.extract()` used
    to return a `Series` if a single group was being extracted (a `DataFrame` if more
    than one group was extracted). As of pandas 0.23.0 `str.extract()` always returns
    a `DataFrame`, unless `expand` is set to `False`. Finally, `None` was an accepted
    value for the `expand` parameter (which was equivalent to `False`), but now raises
    a `ValueError`. ([GH 11386](https://github.com/pandas-dev/pandas/issues/11386))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE136]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE137]'
  prefs: []
  type: TYPE_PRE
- en: 'To restore previous behavior, simply set `expand` to `False`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE138]  ### Default value for the `ordered` parameter of `CategoricalDtype`'
  prefs: []
  type: TYPE_NORMAL
- en: The default value of the `ordered` parameter for `CategoricalDtype` has changed
    from `False` to `None` to allow updating of `categories` without impacting `ordered`.
    Behavior should remain consistent for downstream objects, such as [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") ([GH 18790](https://github.com/pandas-dev/pandas/issues/18790))
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions, the default value for the `ordered` parameter was `False`.
    This could potentially lead to the `ordered` parameter unintentionally being changed
    from `True` to `False` when users attempt to update `categories` if `ordered`
    is not explicitly specified, as it would silently default to `False`. The new
    behavior for `ordered=None` is to retain the existing value of `ordered`.
  prefs: []
  type: TYPE_NORMAL
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE139]'
  prefs: []
  type: TYPE_PRE
- en: Notice in the example above that the converted `Categorical` has retained `ordered=True`.
    Had the default value for `ordered` remained as `False`, the converted `Categorical`
    would have become unordered, despite `ordered=False` never being explicitly specified.
    To change the value of `ordered`, explicitly pass it to the new dtype, e.g. `CategoricalDtype(categories=list('cbad'),
    ordered=False)`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that the unintentional conversion of `ordered` discussed above did not
    arise in previous versions due to separate bugs that prevented `astype` from doing
    any type of category to category conversion ([GH 10696](https://github.com/pandas-dev/pandas/issues/10696),
    [GH 18593](https://github.com/pandas-dev/pandas/issues/18593)). These bugs have
    been fixed in this release, and motivated changing the default value of `ordered`.  ###
    Better pretty-printing of DataFrames in a terminal'
  prefs: []
  type: TYPE_NORMAL
- en: 'Previously, the default value for the maximum number of columns was `pd.options.display.max_columns=20`.
    This meant that relatively wide data frames would not fit within the terminal
    width, and pandas would introduce line breaks to display these 20 columns. This
    resulted in an output that was relatively difficult to read:'
  prefs: []
  type: TYPE_NORMAL
- en: '![../_images/print_df_old.png](../Images/fbbeeee49fbf8f7df732a5d18f69c4d9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If Python runs in a terminal, the maximum number of columns is now determined
    automatically so that the printed data frame fits within the current terminal
    width (`pd.options.display.max_columns=0`) ([GH 17023](https://github.com/pandas-dev/pandas/issues/17023)).
    If Python runs as a Jupyter kernel (such as the Jupyter QtConsole or a Jupyter
    notebook, as well as in many IDEs), this value cannot be inferred automatically
    and is thus set to `20` as in previous versions. In a terminal, this results in
    a much nicer output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![../_images/print_df_new.png](../Images/d48dbcf410ad41a0f4cee1ad0cb0171a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Note that if you don’t like the new default, you can always set this option
    yourself. To revert to the old setting, you can run this line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE140]  ### Datetimelike API changes'
  prefs: []
  type: TYPE_NORMAL
- en: The default `Timedelta` constructor now accepts an `ISO 8601 Duration` string
    as an argument ([GH 19040](https://github.com/pandas-dev/pandas/issues/19040))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Subtracting `NaT` from a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `dtype='datetime64[ns]'` returns a `Series` with `dtype='timedelta64[ns]'`
    instead of `dtype='datetime64[ns]'` ([GH 18808](https://github.com/pandas-dev/pandas/issues/18808))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Addition or subtraction of `NaT` from [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") will return `TimedeltaIndex` instead of `DatetimeIndex`
    ([GH 19124](https://github.com/pandas-dev/pandas/issues/19124))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.shift()` and `TimedeltaIndex.shift()` will now raise `NullFrequencyError`
    (which subclasses `ValueError`, which was raised in older versions) when the index
    object frequency is `None` ([GH 19147](https://github.com/pandas-dev/pandas/issues/19147))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Addition and subtraction of `NaN` from a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `dtype='timedelta64[ns]'` will raise a `TypeError` instead
    of treating the `NaN` as `NaT` ([GH 19274](https://github.com/pandas-dev/pandas/issues/19274))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NaT` division with [`datetime.timedelta`](https://docs.python.org/3/library/datetime.html#datetime.timedelta
    "(in Python v3.12)") will now return `NaN` instead of raising ([GH 17876](https://github.com/pandas-dev/pandas/issues/17876))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Operations between a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with dtype `dtype='datetime64[ns]'` and a [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") will correctly raises `TypeError` ([GH 18850](https://github.com/pandas-dev/pandas/issues/18850))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Subtraction of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with timezone-aware `dtype='datetime64[ns]'` with mismatched
    timezones will raise `TypeError` instead of `ValueError` ([GH 18817](https://github.com/pandas-dev/pandas/issues/18817))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    will no longer silently ignore unused or invalid `tz` or `tzinfo` keyword arguments
    ([GH 17690](https://github.com/pandas-dev/pandas/issues/17690))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    will no longer silently ignore invalid `freq` arguments ([GH 5168](https://github.com/pandas-dev/pandas/issues/5168))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`CacheableOffset` and `WeekDay` are no longer available in the `pandas.tseries.offsets`
    module ([GH 17830](https://github.com/pandas-dev/pandas/issues/17830))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.tseries.frequencies.get_freq_group()` and `pandas.tseries.frequencies.DAYS`
    are removed from the public API ([GH 18034](https://github.com/pandas-dev/pandas/issues/18034))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.truncate()`](../reference/api/pandas.Series.truncate.html#pandas.Series.truncate
    "pandas.Series.truncate") and [`DataFrame.truncate()`](../reference/api/pandas.DataFrame.truncate.html#pandas.DataFrame.truncate
    "pandas.DataFrame.truncate") will raise a `ValueError` if the index is not sorted
    instead of an unhelpful `KeyError` ([GH 17935](https://github.com/pandas-dev/pandas/issues/17935))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.first`](../reference/api/pandas.Series.first.html#pandas.Series.first
    "pandas.Series.first") and [`DataFrame.first`](../reference/api/pandas.DataFrame.first.html#pandas.DataFrame.first
    "pandas.DataFrame.first") will now raise a `TypeError` rather than `NotImplementedError`
    when index is not a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 20725](https://github.com/pandas-dev/pandas/issues/20725)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.last`](../reference/api/pandas.Series.last.html#pandas.Series.last
    "pandas.Series.last") and [`DataFrame.last`](../reference/api/pandas.DataFrame.last.html#pandas.DataFrame.last
    "pandas.DataFrame.last") will now raise a `TypeError` rather than `NotImplementedError`
    when index is not a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 20725](https://github.com/pandas-dev/pandas/issues/20725)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Restricted `DateOffset` keyword arguments. Previously, `DateOffset` subclasses
    allowed arbitrary keyword arguments which could lead to unexpected behavior. Now,
    only valid arguments will be accepted. ([GH 17176](https://github.com/pandas-dev/pandas/issues/17176),
    [GH 18226](https://github.com/pandas-dev/pandas/issues/18226)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    provides a more informative error message when trying to merge on timezone-aware
    and timezone-naive columns ([GH 15800](https://github.com/pandas-dev/pandas/issues/15800))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") with `freq=None`, addition or subtraction of integer-dtyped
    array or `Index` will raise `NullFrequencyError` instead of `TypeError` ([GH 19895](https://github.com/pandas-dev/pandas/issues/19895))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    constructor now accepts a `nanosecond` keyword or positional argument ([GH 18898](https://github.com/pandas-dev/pandas/issues/18898))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") will now raise an `AttributeError` when the `tz` attribute
    is set after instantiation ([GH 3746](https://github.com/pandas-dev/pandas/issues/3746))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with a `pytz` timezone will now return a consistent `pytz`
    timezone ([GH 18595](https://github.com/pandas-dev/pandas/issues/18595))  ###
    Other API changes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") and [`Index.astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype") with an incompatible dtype will now raise a `TypeError`
    rather than a `ValueError` ([GH 18231](https://github.com/pandas-dev/pandas/issues/18231))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series` construction with an `object` dtyped tz-aware datetime and `dtype=object`
    specified, will now return an `object` dtyped `Series`, previously this would
    infer the datetime dtype ([GH 18231](https://github.com/pandas-dev/pandas/issues/18231))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    of `dtype=category` constructed from an empty `dict` will now have categories
    of `dtype=object` rather than `dtype=float64`, consistently with the case in which
    an empty list is passed ([GH 18515](https://github.com/pandas-dev/pandas/issues/18515))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All-NaN levels in a `MultiIndex` are now assigned `float` rather than `object`
    dtype, promoting consistency with `Index` ([GH 17929](https://github.com/pandas-dev/pandas/issues/17929)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Levels names of a `MultiIndex` (when not None) are now required to be unique:
    trying to create a `MultiIndex` with repeated names will raise a `ValueError`
    ([GH 18872](https://github.com/pandas-dev/pandas/issues/18872))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Both construction and renaming of `Index`/`MultiIndex` with non-hashable `name`/`names`
    will now raise `TypeError` ([GH 20527](https://github.com/pandas-dev/pandas/issues/20527))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.map()`](../reference/api/pandas.Index.map.html#pandas.Index.map "pandas.Index.map")
    can now accept `Series` and dictionary input objects ([GH 12756](https://github.com/pandas-dev/pandas/issues/12756),
    [GH 18482](https://github.com/pandas-dev/pandas/issues/18482), [GH 18509](https://github.com/pandas-dev/pandas/issues/18509)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") will now default to filling with `np.nan` for `object`
    columns. ([GH 12815](https://github.com/pandas-dev/pandas/issues/12815))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") constructor will raise if the `closed` parameter conflicts
    with how the input data is inferred to be closed ([GH 18421](https://github.com/pandas-dev/pandas/issues/18421))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Inserting missing values into indexes will work for all types of indexes and
    automatically insert the correct type of missing value (`NaN`, `NaT`, etc.) regardless
    of the type passed in ([GH 18295](https://github.com/pandas-dev/pandas/issues/18295))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When created with duplicate labels, `MultiIndex` now raises a `ValueError`.
    ([GH 17464](https://github.com/pandas-dev/pandas/issues/17464))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") now raises a `TypeError` instead of a `ValueError` when
    passed a list, tuple or DataFrame as a `value` ([GH 18293](https://github.com/pandas-dev/pandas/issues/18293))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") no longer casts a `float` column to `object` when merging
    on `int` and `float` columns ([GH 16572](https://github.com/pandas-dev/pandas/issues/16572))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    now raises a `ValueError` when trying to merge on incompatible data types ([GH
    9780](https://github.com/pandas-dev/pandas/issues/9780))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The default NA value for `UInt64Index` has changed from 0 to `NaN`, which impacts
    methods that mask with NA, such as `UInt64Index.where()` ([GH 18398](https://github.com/pandas-dev/pandas/issues/18398))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Refactored `setup.py` to use `find_packages` instead of explicitly listing out
    all subpackages ([GH 18535](https://github.com/pandas-dev/pandas/issues/18535))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rearranged the order of keyword arguments in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") to align with [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") ([GH 16672](https://github.com/pandas-dev/pandas/issues/16672))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`wide_to_long()`](../reference/api/pandas.wide_to_long.html#pandas.wide_to_long
    "pandas.wide_to_long") previously kept numeric-like suffixes as `object` dtype.
    Now they are cast to numeric if possible ([GH 17627](https://github.com/pandas-dev/pandas/issues/17627))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"), the `comment` argument is now exposed as a named parameter
    ([GH 18735](https://github.com/pandas-dev/pandas/issues/18735))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rearranged the order of keyword arguments in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") to align with [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") ([GH 16672](https://github.com/pandas-dev/pandas/issues/16672))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The options `html.border` and `mode.use_inf_as_null` were deprecated in prior
    versions, these will now show `FutureWarning` rather than a `DeprecationWarning`
    ([GH 19003](https://github.com/pandas-dev/pandas/issues/19003))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") and `IntervalDtype` no longer support categorical, object,
    and string subtypes ([GH 19016](https://github.com/pandas-dev/pandas/issues/19016))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntervalDtype` now returns `True` when compared against `''interval''` regardless
    of subtype, and `IntervalDtype.name` now returns `''interval''` regardless of
    subtype ([GH 18980](https://github.com/pandas-dev/pandas/issues/18980))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`KeyError` now raises instead of `ValueError` in [`drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop"), `drop()`, [`drop()`](../reference/api/pandas.Series.drop.html#pandas.Series.drop
    "pandas.Series.drop"), [`drop()`](../reference/api/pandas.Index.drop.html#pandas.Index.drop
    "pandas.Index.drop") when dropping a non-existent element in an axis with duplicates
    ([GH 19186](https://github.com/pandas-dev/pandas/issues/19186))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv") now accepts a `compression` argument that works in the
    same way as the `compression` argument in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") ([GH 18958](https://github.com/pandas-dev/pandas/issues/18958))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Set operations (union, difference…) on [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") with incompatible index types will now raise a `TypeError`
    rather than a `ValueError` ([GH 19329](https://github.com/pandas-dev/pandas/issues/19329))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DateOffset` objects render more simply, e.g. `<DateOffset: days=1>` instead
    of `<DateOffset: kwds={''days'': 1}>` ([GH 19403](https://github.com/pandas-dev/pandas/issues/19403))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.fillna` now validates its `value` and `method` keyword arguments.
    It now raises when both or none are specified, matching the behavior of [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") ([GH 19682](https://github.com/pandas-dev/pandas/issues/19682))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.to_datetime(''today'')` now returns a datetime, consistent with `pd.Timestamp(''today'')`;
    previously `pd.to_datetime(''today'')` returned a `.normalized()` datetime ([GH
    19935](https://github.com/pandas-dev/pandas/issues/19935))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.str.replace()`](../reference/api/pandas.Series.str.replace.html#pandas.Series.str.replace
    "pandas.Series.str.replace") now takes an optional `regex` keyword which, when
    set to `False`, uses literal string replacement rather than regex replacement
    ([GH 16808](https://github.com/pandas-dev/pandas/issues/16808))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DatetimeIndex.strftime()`](../reference/api/pandas.DatetimeIndex.strftime.html#pandas.DatetimeIndex.strftime
    "pandas.DatetimeIndex.strftime") and [`PeriodIndex.strftime()`](../reference/api/pandas.PeriodIndex.strftime.html#pandas.PeriodIndex.strftime
    "pandas.PeriodIndex.strftime") now return an `Index` instead of a numpy array
    to be consistent with similar accessors ([GH 20127](https://github.com/pandas-dev/pandas/issues/20127))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Constructing a Series from a list of length 1 no longer broadcasts this list
    when a longer index is specified ([GH 19714](https://github.com/pandas-dev/pandas/issues/19714),
    [GH 20391](https://github.com/pandas-dev/pandas/issues/20391)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") with `orient=''index''` no longer casts int columns
    to float for a DataFrame with only int and float columns ([GH 18580](https://github.com/pandas-dev/pandas/issues/18580))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A user-defined-function that is passed to `Series.rolling().aggregate()`, `DataFrame.rolling().aggregate()`,
    or its expanding cousins, will now *always* be passed a `Series`, rather than
    a `np.array`; `.apply()` only has the `raw` keyword, see [here](#whatsnew-0230-enhancements-window-raw).
    This is consistent with the signatures of `.aggregate()` across pandas ([GH 20584](https://github.com/pandas-dev/pandas/issues/20584))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Rolling and Expanding types raise `NotImplementedError` upon iteration ([GH
    11704](https://github.com/pandas-dev/pandas/issues/11704)).  ### Dependencies
    have increased minimum versions'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We have updated our minimum supported versions of dependencies ([GH 15184](https://github.com/pandas-dev/pandas/issues/15184)).
    If installed, we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Issue |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.5.0 | X | [GH 15184](https://github.com/pandas-dev/pandas/issues/15184)
    |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 2.4.0 |  | [GH 15184](https://github.com/pandas-dev/pandas/issues/15184)
    |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.2.1 |  | [GH 20082](https://github.com/pandas-dev/pandas/issues/20082)
    |'
  prefs: []
  type: TYPE_TB
- en: '| setuptools | 24.2.0 |  | [GH 20698](https://github.com/pandas-dev/pandas/issues/20698)
    |'
  prefs: []
  type: TYPE_TB
- en: '### Instantiation from dicts preserves dict insertion order for Python 3.6+'
  prefs: []
  type: TYPE_NORMAL
- en: Until Python 3.6, dicts in Python had no formally defined ordering. For Python
    version 3.6 and later, dicts are ordered by insertion order, see [PEP 468](https://www.python.org/dev/peps/pep-0468/).
    pandas will use the dict’s insertion order, when creating a `Series` or `DataFrame`
    from a dict and you’re using Python version 3.6 or higher. ([GH 19884](https://github.com/pandas-dev/pandas/issues/19884))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior (and current behavior if on Python < 3.6):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE141]'
  prefs: []
  type: TYPE_PRE
- en: Note the Series above is ordered alphabetically by the index values.
  prefs: []
  type: TYPE_NORMAL
- en: 'New behavior (for Python >= 3.6):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE142]'
  prefs: []
  type: TYPE_PRE
- en: Notice that the Series is now ordered by insertion order. This new behavior
    is used for all relevant pandas types (`Series`, `DataFrame`, `SparseSeries` and
    `SparseDataFrame`).
  prefs: []
  type: TYPE_NORMAL
- en: 'If you wish to retain the old behavior while using Python >= 3.6, you can use
    `.sort_index()`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE143]'
  prefs: []
  type: TYPE_PRE
- en: '### Deprecate Panel'
  prefs: []
  type: TYPE_NORMAL
- en: '`Panel` was deprecated in the 0.20.x release, showing as a `DeprecationWarning`.
    Using `Panel` will now show a `FutureWarning`. The recommended way to represent
    3-D data are with a `MultiIndex` on a `DataFrame` via the `to_frame()` or with
    the [xarray package](http://xarray.pydata.org/en/stable/). pandas provides a `to_xarray()`
    method to automate this conversion ([GH 13563](https://github.com/pandas-dev/pandas/issues/13563),
    [GH 18324](https://github.com/pandas-dev/pandas/issues/18324)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE144]'
  prefs: []
  type: TYPE_PRE
- en: Convert to a MultiIndex DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE145]'
  prefs: []
  type: TYPE_PRE
- en: Convert to an xarray DataArray
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE146]'
  prefs: []
  type: TYPE_PRE
- en: '### pandas.core.common removals'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following error & warning messages are removed from `pandas.core.common`
    ([GH 13634](https://github.com/pandas-dev/pandas/issues/13634), [GH 19769](https://github.com/pandas-dev/pandas/issues/19769)):'
  prefs: []
  type: TYPE_NORMAL
- en: '`PerformanceWarning`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`UnsupportedFunctionCall`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`UnsortedIndexError`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`AbstractMethodError`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are available from import from `pandas.errors` (since 0.19.0).
  prefs: []
  type: TYPE_NORMAL
- en: '### Changes to make output of `DataFrame.apply` consistent'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") was inconsistent when applying an arbitrary user-defined-function
    that returned a list-like with `axis=1`. Several bugs and inconsistencies are
    resolved. If the applied function returns a Series, then pandas will return a
    DataFrame; otherwise a Series will be returned, this includes the case where a
    list-like (e.g. `tuple` or `list` is returned) ([GH 16353](https://github.com/pandas-dev/pandas/issues/16353),
    [GH 17437](https://github.com/pandas-dev/pandas/issues/17437), [GH 17970](https://github.com/pandas-dev/pandas/issues/17970),
    [GH 17348](https://github.com/pandas-dev/pandas/issues/17348), [GH 17892](https://github.com/pandas-dev/pandas/issues/17892),
    [GH 18573](https://github.com/pandas-dev/pandas/issues/18573), [GH 17602](https://github.com/pandas-dev/pandas/issues/17602),
    [GH 18775](https://github.com/pandas-dev/pandas/issues/18775), [GH 18901](https://github.com/pandas-dev/pandas/issues/18901),
    [GH 18919](https://github.com/pandas-dev/pandas/issues/18919)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE147]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior: if the returned shape happened to match the length of original
    columns, this would return a `DataFrame`. If the return shape did not match, a
    `Series` with lists was returned.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE148]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior: When the applied function returns a list-like, this will now
    *always* return a `Series`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE149]'
  prefs: []
  type: TYPE_PRE
- en: To have expanded columns, you can use `result_type='expand'`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE150]'
  prefs: []
  type: TYPE_PRE
- en: To broadcast the result across the original columns (the old behaviour for list-likes
    of the correct length), you can use `result_type='broadcast'`. The shape must
    match the original columns.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE151]'
  prefs: []
  type: TYPE_PRE
- en: 'Returning a `Series` allows one to control the exact return structure and column
    names:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE152]'
  prefs: []
  type: TYPE_PRE
- en: '### Concatenation will no longer sort'
  prefs: []
  type: TYPE_NORMAL
- en: In a future version of pandas [`pandas.concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") will no longer sort the non-concatenation axis when it is not
    already aligned. The current behavior is the same as the previous (sorting), but
    now a warning is issued when `sort` is not specified and the non-concatenation
    axis is not aligned ([GH 4588](https://github.com/pandas-dev/pandas/issues/4588)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE153]'
  prefs: []
  type: TYPE_PRE
- en: To keep the previous behavior (sorting) and silence the warning, pass `sort=True`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE154]'
  prefs: []
  type: TYPE_PRE
- en: To accept the future behavior (no sorting), pass `sort=False`
  prefs: []
  type: TYPE_NORMAL
- en: Note that this change also applies to `DataFrame.append()`, which has also received
    a `sort` keyword for controlling this behavior.
  prefs: []
  type: TYPE_NORMAL
- en: '### Build changes'
  prefs: []
  type: TYPE_NORMAL
- en: Building pandas for development now requires `cython >= 0.24` ([GH 18613](https://github.com/pandas-dev/pandas/issues/18613))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Building from source now explicitly requires `setuptools` in `setup.py` ([GH
    18113](https://github.com/pandas-dev/pandas/issues/18113))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Updated conda recipe to be in compliance with conda-build 3.0+ ([GH 18002](https://github.com/pandas-dev/pandas/issues/18002))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Index division by zero fills correctly'
  prefs: []
  type: TYPE_NORMAL
- en: Division operations on `Index` and subclasses will now fill division of positive
    numbers by zero with `np.inf`, division of negative numbers by zero with `-np.inf`
    and `0 / 0` with `np.nan`. This matches existing `Series` behavior. ([GH 19322](https://github.com/pandas-dev/pandas/issues/19322),
    [GH 19347](https://github.com/pandas-dev/pandas/issues/19347))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE155]'
  prefs: []
  type: TYPE_PRE
- en: 'Current behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE156]'
  prefs: []
  type: TYPE_PRE
- en: '### Extraction of matching patterns from strings'
  prefs: []
  type: TYPE_NORMAL
- en: By default, extracting matching patterns from strings with `str.extract()` used
    to return a `Series` if a single group was being extracted (a `DataFrame` if more
    than one group was extracted). As of pandas 0.23.0 `str.extract()` always returns
    a `DataFrame`, unless `expand` is set to `False`. Finally, `None` was an accepted
    value for the `expand` parameter (which was equivalent to `False`), but now raises
    a `ValueError`. ([GH 11386](https://github.com/pandas-dev/pandas/issues/11386))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE157]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE158]'
  prefs: []
  type: TYPE_PRE
- en: 'To restore previous behavior, simply set `expand` to `False`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE159]'
  prefs: []
  type: TYPE_PRE
- en: '### Default value for the `ordered` parameter of `CategoricalDtype`'
  prefs: []
  type: TYPE_NORMAL
- en: The default value of the `ordered` parameter for `CategoricalDtype` has changed
    from `False` to `None` to allow updating of `categories` without impacting `ordered`.
    Behavior should remain consistent for downstream objects, such as [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") ([GH 18790](https://github.com/pandas-dev/pandas/issues/18790))
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions, the default value for the `ordered` parameter was `False`.
    This could potentially lead to the `ordered` parameter unintentionally being changed
    from `True` to `False` when users attempt to update `categories` if `ordered`
    is not explicitly specified, as it would silently default to `False`. The new
    behavior for `ordered=None` is to retain the existing value of `ordered`.
  prefs: []
  type: TYPE_NORMAL
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE160]'
  prefs: []
  type: TYPE_PRE
- en: Notice in the example above that the converted `Categorical` has retained `ordered=True`.
    Had the default value for `ordered` remained as `False`, the converted `Categorical`
    would have become unordered, despite `ordered=False` never being explicitly specified.
    To change the value of `ordered`, explicitly pass it to the new dtype, e.g. `CategoricalDtype(categories=list('cbad'),
    ordered=False)`.
  prefs: []
  type: TYPE_NORMAL
- en: Note that the unintentional conversion of `ordered` discussed above did not
    arise in previous versions due to separate bugs that prevented `astype` from doing
    any type of category to category conversion ([GH 10696](https://github.com/pandas-dev/pandas/issues/10696),
    [GH 18593](https://github.com/pandas-dev/pandas/issues/18593)). These bugs have
    been fixed in this release, and motivated changing the default value of `ordered`.
  prefs: []
  type: TYPE_NORMAL
- en: '### Better pretty-printing of DataFrames in a terminal'
  prefs: []
  type: TYPE_NORMAL
- en: 'Previously, the default value for the maximum number of columns was `pd.options.display.max_columns=20`.
    This meant that relatively wide data frames would not fit within the terminal
    width, and pandas would introduce line breaks to display these 20 columns. This
    resulted in an output that was relatively difficult to read:'
  prefs: []
  type: TYPE_NORMAL
- en: '![../_images/print_df_old.png](../Images/fbbeeee49fbf8f7df732a5d18f69c4d9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If Python runs in a terminal, the maximum number of columns is now determined
    automatically so that the printed data frame fits within the current terminal
    width (`pd.options.display.max_columns=0`) ([GH 17023](https://github.com/pandas-dev/pandas/issues/17023)).
    If Python runs as a Jupyter kernel (such as the Jupyter QtConsole or a Jupyter
    notebook, as well as in many IDEs), this value cannot be inferred automatically
    and is thus set to `20` as in previous versions. In a terminal, this results in
    a much nicer output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![../_images/print_df_new.png](../Images/d48dbcf410ad41a0f4cee1ad0cb0171a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Note that if you don’t like the new default, you can always set this option
    yourself. To revert to the old setting, you can run this line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE161]'
  prefs: []
  type: TYPE_PRE
- en: '### Datetimelike API changes'
  prefs: []
  type: TYPE_NORMAL
- en: The default `Timedelta` constructor now accepts an `ISO 8601 Duration` string
    as an argument ([GH 19040](https://github.com/pandas-dev/pandas/issues/19040))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Subtracting `NaT` from a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `dtype='datetime64[ns]'` returns a `Series` with `dtype='timedelta64[ns]'`
    instead of `dtype='datetime64[ns]'` ([GH 18808](https://github.com/pandas-dev/pandas/issues/18808))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Addition or subtraction of `NaT` from [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") will return `TimedeltaIndex` instead of `DatetimeIndex`
    ([GH 19124](https://github.com/pandas-dev/pandas/issues/19124))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.shift()` and `TimedeltaIndex.shift()` will now raise `NullFrequencyError`
    (which subclasses `ValueError`, which was raised in older versions) when the index
    object frequency is `None` ([GH 19147](https://github.com/pandas-dev/pandas/issues/19147))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Addition and subtraction of `NaN` from a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `dtype='timedelta64[ns]'` will raise a `TypeError` instead
    of treating the `NaN` as `NaT` ([GH 19274](https://github.com/pandas-dev/pandas/issues/19274))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NaT` division with [`datetime.timedelta`](https://docs.python.org/3/library/datetime.html#datetime.timedelta
    "(in Python v3.12)") will now return `NaN` instead of raising ([GH 17876](https://github.com/pandas-dev/pandas/issues/17876))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Operations between a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with dtype `dtype='datetime64[ns]'` and a [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") will correctly raises `TypeError` ([GH 18850](https://github.com/pandas-dev/pandas/issues/18850))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Subtraction of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with timezone-aware `dtype='datetime64[ns]'` with mismatched
    timezones will raise `TypeError` instead of `ValueError` ([GH 18817](https://github.com/pandas-dev/pandas/issues/18817))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    will no longer silently ignore unused or invalid `tz` or `tzinfo` keyword arguments
    ([GH 17690](https://github.com/pandas-dev/pandas/issues/17690))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    will no longer silently ignore invalid `freq` arguments ([GH 5168](https://github.com/pandas-dev/pandas/issues/5168))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`CacheableOffset` and `WeekDay` are no longer available in the `pandas.tseries.offsets`
    module ([GH 17830](https://github.com/pandas-dev/pandas/issues/17830))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.tseries.frequencies.get_freq_group()` and `pandas.tseries.frequencies.DAYS`
    are removed from the public API ([GH 18034](https://github.com/pandas-dev/pandas/issues/18034))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.truncate()`](../reference/api/pandas.Series.truncate.html#pandas.Series.truncate
    "pandas.Series.truncate") and [`DataFrame.truncate()`](../reference/api/pandas.DataFrame.truncate.html#pandas.DataFrame.truncate
    "pandas.DataFrame.truncate") will raise a `ValueError` if the index is not sorted
    instead of an unhelpful `KeyError` ([GH 17935](https://github.com/pandas-dev/pandas/issues/17935))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.first`](../reference/api/pandas.Series.first.html#pandas.Series.first
    "pandas.Series.first") and [`DataFrame.first`](../reference/api/pandas.DataFrame.first.html#pandas.DataFrame.first
    "pandas.DataFrame.first") will now raise a `TypeError` rather than `NotImplementedError`
    when index is not a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 20725](https://github.com/pandas-dev/pandas/issues/20725)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.last`](../reference/api/pandas.Series.last.html#pandas.Series.last
    "pandas.Series.last") and [`DataFrame.last`](../reference/api/pandas.DataFrame.last.html#pandas.DataFrame.last
    "pandas.DataFrame.last") will now raise a `TypeError` rather than `NotImplementedError`
    when index is not a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 20725](https://github.com/pandas-dev/pandas/issues/20725)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Restricted `DateOffset` keyword arguments. Previously, `DateOffset` subclasses
    allowed arbitrary keyword arguments which could lead to unexpected behavior. Now,
    only valid arguments will be accepted. ([GH 17176](https://github.com/pandas-dev/pandas/issues/17176),
    [GH 18226](https://github.com/pandas-dev/pandas/issues/18226)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    provides a more informative error message when trying to merge on timezone-aware
    and timezone-naive columns ([GH 15800](https://github.com/pandas-dev/pandas/issues/15800))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") with `freq=None`, addition or subtraction of integer-dtyped
    array or `Index` will raise `NullFrequencyError` instead of `TypeError` ([GH 19895](https://github.com/pandas-dev/pandas/issues/19895))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    constructor now accepts a `nanosecond` keyword or positional argument ([GH 18898](https://github.com/pandas-dev/pandas/issues/18898))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") will now raise an `AttributeError` when the `tz` attribute
    is set after instantiation ([GH 3746](https://github.com/pandas-dev/pandas/issues/3746))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with a `pytz` timezone will now return a consistent `pytz`
    timezone ([GH 18595](https://github.com/pandas-dev/pandas/issues/18595))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") and [`Index.astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype") with an incompatible dtype will now raise a `TypeError`
    rather than a `ValueError` ([GH 18231](https://github.com/pandas-dev/pandas/issues/18231))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series` construction with an `object` dtyped tz-aware datetime and `dtype=object`
    specified, will now return an `object` dtyped `Series`, previously this would
    infer the datetime dtype ([GH 18231](https://github.com/pandas-dev/pandas/issues/18231))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    of `dtype=category` constructed from an empty `dict` will now have categories
    of `dtype=object` rather than `dtype=float64`, consistently with the case in which
    an empty list is passed ([GH 18515](https://github.com/pandas-dev/pandas/issues/18515))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All-NaN levels in a `MultiIndex` are now assigned `float` rather than `object`
    dtype, promoting consistency with `Index` ([GH 17929](https://github.com/pandas-dev/pandas/issues/17929)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Levels names of a `MultiIndex` (when not None) are now required to be unique:
    trying to create a `MultiIndex` with repeated names will raise a `ValueError`
    ([GH 18872](https://github.com/pandas-dev/pandas/issues/18872))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Both construction and renaming of `Index`/`MultiIndex` with non-hashable `name`/`names`
    will now raise `TypeError` ([GH 20527](https://github.com/pandas-dev/pandas/issues/20527))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.map()`](../reference/api/pandas.Index.map.html#pandas.Index.map "pandas.Index.map")
    can now accept `Series` and dictionary input objects ([GH 12756](https://github.com/pandas-dev/pandas/issues/12756),
    [GH 18482](https://github.com/pandas-dev/pandas/issues/18482), [GH 18509](https://github.com/pandas-dev/pandas/issues/18509)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") will now default to filling with `np.nan` for `object`
    columns. ([GH 12815](https://github.com/pandas-dev/pandas/issues/12815))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") constructor will raise if the `closed` parameter conflicts
    with how the input data is inferred to be closed ([GH 18421](https://github.com/pandas-dev/pandas/issues/18421))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Inserting missing values into indexes will work for all types of indexes and
    automatically insert the correct type of missing value (`NaN`, `NaT`, etc.) regardless
    of the type passed in ([GH 18295](https://github.com/pandas-dev/pandas/issues/18295))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When created with duplicate labels, `MultiIndex` now raises a `ValueError`.
    ([GH 17464](https://github.com/pandas-dev/pandas/issues/17464))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") now raises a `TypeError` instead of a `ValueError` when
    passed a list, tuple or DataFrame as a `value` ([GH 18293](https://github.com/pandas-dev/pandas/issues/18293))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") no longer casts a `float` column to `object` when merging
    on `int` and `float` columns ([GH 16572](https://github.com/pandas-dev/pandas/issues/16572))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    now raises a `ValueError` when trying to merge on incompatible data types ([GH
    9780](https://github.com/pandas-dev/pandas/issues/9780))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The default NA value for `UInt64Index` has changed from 0 to `NaN`, which impacts
    methods that mask with NA, such as `UInt64Index.where()` ([GH 18398](https://github.com/pandas-dev/pandas/issues/18398))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Refactored `setup.py` to use `find_packages` instead of explicitly listing out
    all subpackages ([GH 18535](https://github.com/pandas-dev/pandas/issues/18535))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rearranged the order of keyword arguments in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") to align with [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") ([GH 16672](https://github.com/pandas-dev/pandas/issues/16672))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`wide_to_long()`](../reference/api/pandas.wide_to_long.html#pandas.wide_to_long
    "pandas.wide_to_long") previously kept numeric-like suffixes as `object` dtype.
    Now they are cast to numeric if possible ([GH 17627](https://github.com/pandas-dev/pandas/issues/17627))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"), the `comment` argument is now exposed as a named parameter
    ([GH 18735](https://github.com/pandas-dev/pandas/issues/18735))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rearranged the order of keyword arguments in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") to align with [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") ([GH 16672](https://github.com/pandas-dev/pandas/issues/16672))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The options `html.border` and `mode.use_inf_as_null` were deprecated in prior
    versions, these will now show `FutureWarning` rather than a `DeprecationWarning`
    ([GH 19003](https://github.com/pandas-dev/pandas/issues/19003))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") and `IntervalDtype` no longer support categorical, object,
    and string subtypes ([GH 19016](https://github.com/pandas-dev/pandas/issues/19016))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntervalDtype` now returns `True` when compared against `''interval''` regardless
    of subtype, and `IntervalDtype.name` now returns `''interval''` regardless of
    subtype ([GH 18980](https://github.com/pandas-dev/pandas/issues/18980))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`KeyError` now raises instead of `ValueError` in [`drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop"), `drop()`, [`drop()`](../reference/api/pandas.Series.drop.html#pandas.Series.drop
    "pandas.Series.drop"), [`drop()`](../reference/api/pandas.Index.drop.html#pandas.Index.drop
    "pandas.Index.drop") when dropping a non-existent element in an axis with duplicates
    ([GH 19186](https://github.com/pandas-dev/pandas/issues/19186))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv") now accepts a `compression` argument that works in the
    same way as the `compression` argument in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") ([GH 18958](https://github.com/pandas-dev/pandas/issues/18958))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Set operations (union, difference…) on [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") with incompatible index types will now raise a `TypeError`
    rather than a `ValueError` ([GH 19329](https://github.com/pandas-dev/pandas/issues/19329))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DateOffset` objects render more simply, e.g. `<DateOffset: days=1>` instead
    of `<DateOffset: kwds={''days'': 1}>` ([GH 19403](https://github.com/pandas-dev/pandas/issues/19403))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.fillna` now validates its `value` and `method` keyword arguments.
    It now raises when both or none are specified, matching the behavior of [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") ([GH 19682](https://github.com/pandas-dev/pandas/issues/19682))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.to_datetime(''today'')` now returns a datetime, consistent with `pd.Timestamp(''today'')`;
    previously `pd.to_datetime(''today'')` returned a `.normalized()` datetime ([GH
    19935](https://github.com/pandas-dev/pandas/issues/19935))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.str.replace()`](../reference/api/pandas.Series.str.replace.html#pandas.Series.str.replace
    "pandas.Series.str.replace") now takes an optional `regex` keyword which, when
    set to `False`, uses literal string replacement rather than regex replacement
    ([GH 16808](https://github.com/pandas-dev/pandas/issues/16808))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DatetimeIndex.strftime()`](../reference/api/pandas.DatetimeIndex.strftime.html#pandas.DatetimeIndex.strftime
    "pandas.DatetimeIndex.strftime") and [`PeriodIndex.strftime()`](../reference/api/pandas.PeriodIndex.strftime.html#pandas.PeriodIndex.strftime
    "pandas.PeriodIndex.strftime") now return an `Index` instead of a numpy array
    to be consistent with similar accessors ([GH 20127](https://github.com/pandas-dev/pandas/issues/20127))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Constructing a Series from a list of length 1 no longer broadcasts this list
    when a longer index is specified ([GH 19714](https://github.com/pandas-dev/pandas/issues/19714),
    [GH 20391](https://github.com/pandas-dev/pandas/issues/20391)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") with `orient=''index''` no longer casts int columns
    to float for a DataFrame with only int and float columns ([GH 18580](https://github.com/pandas-dev/pandas/issues/18580))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A user-defined-function that is passed to `Series.rolling().aggregate()`, `DataFrame.rolling().aggregate()`,
    or its expanding cousins, will now *always* be passed a `Series`, rather than
    a `np.array`; `.apply()` only has the `raw` keyword, see [here](#whatsnew-0230-enhancements-window-raw).
    This is consistent with the signatures of `.aggregate()` across pandas ([GH 20584](https://github.com/pandas-dev/pandas/issues/20584))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rolling and Expanding types raise `NotImplementedError` upon iteration ([GH
    11704](https://github.com/pandas-dev/pandas/issues/11704)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: '`Series.from_array` and `SparseSeries.from_array` are deprecated. Use the normal
    constructor `Series(..)` and `SparseSeries(..)` instead ([GH 18213](https://github.com/pandas-dev/pandas/issues/18213)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.as_matrix` is deprecated. Use `DataFrame.values` instead ([GH 18458](https://github.com/pandas-dev/pandas/issues/18458)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.asobject`, `DatetimeIndex.asobject`, `PeriodIndex.asobject` and `TimeDeltaIndex.asobject`
    have been deprecated. Use `.astype(object)` instead ([GH 18572](https://github.com/pandas-dev/pandas/issues/18572))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Grouping by a tuple of keys now emits a `FutureWarning` and is deprecated. In
    the future, a tuple passed to `'by'` will always refer to a single key that is
    the actual tuple, instead of treating the tuple as multiple keys. To retain the
    previous behavior, use a list instead of a tuple ([GH 18314](https://github.com/pandas-dev/pandas/issues/18314))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.valid` is deprecated. Use [`Series.dropna()`](../reference/api/pandas.Series.dropna.html#pandas.Series.dropna
    "pandas.Series.dropna") instead ([GH 18800](https://github.com/pandas-dev/pandas/issues/18800)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") has deprecated the `skip_footer` parameter. Use `skipfooter`
    instead ([GH 18836](https://github.com/pandas-dev/pandas/issues/18836))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ExcelFile.parse()`](../reference/api/pandas.ExcelFile.parse.html#pandas.ExcelFile.parse
    "pandas.ExcelFile.parse") has deprecated `sheetname` in favor of `sheet_name`
    for consistency with [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") ([GH 20920](https://github.com/pandas-dev/pandas/issues/20920)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `is_copy` attribute is deprecated and will be removed in a future version
    ([GH 18801](https://github.com/pandas-dev/pandas/issues/18801)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntervalIndex.from_intervals` is deprecated in favor of the [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") constructor ([GH 19263](https://github.com/pandas-dev/pandas/issues/19263))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.from_items` is deprecated. Use [`DataFrame.from_dict()`](../reference/api/pandas.DataFrame.from_dict.html#pandas.DataFrame.from_dict
    "pandas.DataFrame.from_dict") instead, or `DataFrame.from_dict(OrderedDict())`
    if you wish to preserve the key order ([GH 17320](https://github.com/pandas-dev/pandas/issues/17320),
    [GH 17312](https://github.com/pandas-dev/pandas/issues/17312))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") or a `FloatIndex` with a list containing some missing keys
    will now show a [`FutureWarning`](https://docs.python.org/3/library/exceptions.html#FutureWarning
    "(in Python v3.12)"), which is consistent with other types of indexes ([GH 17758](https://github.com/pandas-dev/pandas/issues/17758)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `broadcast` parameter of `.apply()` is deprecated in favor of `result_type='broadcast'`
    ([GH 18577](https://github.com/pandas-dev/pandas/issues/18577))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `reduce` parameter of `.apply()` is deprecated in favor of `result_type='reduce'`
    ([GH 18577](https://github.com/pandas-dev/pandas/issues/18577))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `order` parameter of [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") is deprecated and will be removed in a future release ([GH
    19727](https://github.com/pandas-dev/pandas/issues/19727))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Timestamp.weekday_name`, `DatetimeIndex.weekday_name`, and `Series.dt.weekday_name`
    are deprecated in favor of [`Timestamp.day_name()`](../reference/api/pandas.Timestamp.day_name.html#pandas.Timestamp.day_name
    "pandas.Timestamp.day_name"), [`DatetimeIndex.day_name()`](../reference/api/pandas.DatetimeIndex.day_name.html#pandas.DatetimeIndex.day_name
    "pandas.DatetimeIndex.day_name"), and [`Series.dt.day_name()`](../reference/api/pandas.Series.dt.day_name.html#pandas.Series.dt.day_name
    "pandas.Series.dt.day_name") ([GH 12806](https://github.com/pandas-dev/pandas/issues/12806))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.tseries.plotting.tsplot` is deprecated. Use [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") instead ([GH 18627](https://github.com/pandas-dev/pandas/issues/18627))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Index.summary()` is deprecated and will be removed in a future version ([GH
    18217](https://github.com/pandas-dev/pandas/issues/18217))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NDFrame.get_ftype_counts()` is deprecated and will be removed in a future
    version ([GH 18243](https://github.com/pandas-dev/pandas/issues/18243))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `convert_datetime64` parameter in [`DataFrame.to_records()`](../reference/api/pandas.DataFrame.to_records.html#pandas.DataFrame.to_records
    "pandas.DataFrame.to_records") has been deprecated and will be removed in a future
    version. The NumPy bug motivating this parameter has been resolved. The default
    value for this parameter has also changed from `True` to `None` ([GH 18160](https://github.com/pandas-dev/pandas/issues/18160)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.rolling().apply()`, `DataFrame.rolling().apply()`, `Series.expanding().apply()`,
    and `DataFrame.expanding().apply()` have deprecated passing an `np.array` by default.
    One will need to pass the new `raw` parameter to be explicit about what is passed
    ([GH 20584](https://github.com/pandas-dev/pandas/issues/20584))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `data`, `base`, `strides`, `flags` and `itemsize` properties of the `Series`
    and `Index` classes have been deprecated and will be removed in a future version
    ([GH 20419](https://github.com/pandas-dev/pandas/issues/20419)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.offset` is deprecated. Use `DatetimeIndex.freq` instead ([GH
    20716](https://github.com/pandas-dev/pandas/issues/20716))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Floor division between an integer ndarray and a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") is deprecated. Divide by [`Timedelta.value`](../reference/api/pandas.Timedelta.value.html#pandas.Timedelta.value
    "pandas.Timedelta.value") instead ([GH 19761](https://github.com/pandas-dev/pandas/issues/19761))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting `PeriodIndex.freq` (which was not guaranteed to work correctly) is deprecated.
    Use [`PeriodIndex.asfreq()`](../reference/api/pandas.PeriodIndex.asfreq.html#pandas.PeriodIndex.asfreq
    "pandas.PeriodIndex.asfreq") instead ([GH 20678](https://github.com/pandas-dev/pandas/issues/20678))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Index.get_duplicates()` is deprecated and will be removed in a future version
    ([GH 20239](https://github.com/pandas-dev/pandas/issues/20239))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The previous default behavior of negative indices in `Categorical.take` is deprecated.
    In a future version it will change from meaning missing values to meaning positional
    indices from the right. The future behavior is consistent with [`Series.take()`](../reference/api/pandas.Series.take.html#pandas.Series.take
    "pandas.Series.take") ([GH 20664](https://github.com/pandas-dev/pandas/issues/20664)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing multiple axes to the `axis` parameter in [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") has been deprecated and will be removed in a future
    version ([GH 20987](https://github.com/pandas-dev/pandas/issues/20987))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Removal of prior version deprecations/changes'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings against the obsolete usage `Categorical(codes, categories)`, which
    were emitted for instance when the first two arguments to `Categorical()` had
    different dtypes, and recommended the use of `Categorical.from_codes`, have now
    been removed ([GH 8074](https://github.com/pandas-dev/pandas/issues/8074))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `levels` and `labels` attributes of a `MultiIndex` can no longer be set
    directly ([GH 4039](https://github.com/pandas-dev/pandas/issues/4039)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.tseries.util.pivot_annual` has been removed (deprecated since v0.19). Use
    `pivot_table` instead ([GH 18370](https://github.com/pandas-dev/pandas/issues/18370))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.tseries.util.isleapyear` has been removed (deprecated since v0.19). Use
    `.is_leap_year` property in Datetime-likes instead ([GH 18370](https://github.com/pandas-dev/pandas/issues/18370))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.ordered_merge` has been removed (deprecated since v0.19). Use `pd.merge_ordered`
    instead ([GH 18459](https://github.com/pandas-dev/pandas/issues/18459))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `SparseList` class has been removed ([GH 14007](https://github.com/pandas-dev/pandas/issues/14007))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `pandas.io.wb` and `pandas.io.data` stub modules have been removed ([GH
    13735](https://github.com/pandas-dev/pandas/issues/13735))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.from_array` has been removed ([GH 13854](https://github.com/pandas-dev/pandas/issues/13854))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `freq` and `how` parameters have been removed from the `rolling`/`expanding`/`ewm`
    methods of DataFrame and Series (deprecated since v0.18). Instead, resample before
    calling the methods. ([GH 18601](https://github.com/pandas-dev/pandas/issues/18601)
    & [GH 18668](https://github.com/pandas-dev/pandas/issues/18668))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.to_datetime`, `Timestamp.to_datetime`, `PeriodIndex.to_datetime`,
    and `Index.to_datetime` have been removed ([GH 8254](https://github.com/pandas-dev/pandas/issues/8254),
    [GH 14096](https://github.com/pandas-dev/pandas/issues/14096), [GH 14113](https://github.com/pandas-dev/pandas/issues/14113))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    has dropped the `skip_footer` parameter ([GH 13386](https://github.com/pandas-dev/pandas/issues/13386))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    has dropped the `as_recarray` parameter ([GH 13373](https://github.com/pandas-dev/pandas/issues/13373))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    has dropped the `buffer_lines` parameter ([GH 13360](https://github.com/pandas-dev/pandas/issues/13360))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    has dropped the `compact_ints` and `use_unsigned` parameters ([GH 13323](https://github.com/pandas-dev/pandas/issues/13323))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Timestamp` class has dropped the `offset` attribute in favor of `freq`
    ([GH 13593](https://github.com/pandas-dev/pandas/issues/13593))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Series`, `Categorical`, and `Index` classes have dropped the `reshape`
    method ([GH 13012](https://github.com/pandas-dev/pandas/issues/13012))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.tseries.frequencies.get_standard_freq` has been removed in favor of
    `pandas.tseries.frequencies.to_offset(freq).rule_code` ([GH 13874](https://github.com/pandas-dev/pandas/issues/13874))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `freqstr` keyword has been removed from `pandas.tseries.frequencies.to_offset`
    in favor of `freq` ([GH 13874](https://github.com/pandas-dev/pandas/issues/13874))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Panel4D` and `PanelND` classes have been removed ([GH 13776](https://github.com/pandas-dev/pandas/issues/13776))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Panel` class has dropped the `to_long` and `toLong` methods ([GH 19077](https://github.com/pandas-dev/pandas/issues/19077))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The options `display.line_with` and `display.height` are removed in favor of
    `display.width` and `display.max_rows` respectively ([GH 4391](https://github.com/pandas-dev/pandas/issues/4391),
    [GH 19107](https://github.com/pandas-dev/pandas/issues/19107))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `labels` attribute of the `Categorical` class has been removed in favor
    of [`Categorical.codes`](../reference/api/pandas.Categorical.codes.html#pandas.Categorical.codes
    "pandas.Categorical.codes") ([GH 7768](https://github.com/pandas-dev/pandas/issues/7768))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `flavor` parameter have been removed from `to_sql()` method ([GH 13611](https://github.com/pandas-dev/pandas/issues/13611))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The modules `pandas.tools.hashing` and `pandas.util.hashing` have been removed
    ([GH 16223](https://github.com/pandas-dev/pandas/issues/16223))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The top-level functions `pd.rolling_*`, `pd.expanding_*` and `pd.ewm*` have
    been removed (Deprecated since v0.18). Instead, use the DataFrame/Series methods
    [`rolling`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling"), [`expanding`](../reference/api/pandas.DataFrame.expanding.html#pandas.DataFrame.expanding
    "pandas.DataFrame.expanding") and [`ewm`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm") ([GH 18723](https://github.com/pandas-dev/pandas/issues/18723))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Imports from `pandas.core.common` for functions such as `is_datetime64_dtype`
    are now removed. These are located in `pandas.api.types`. ([GH 13634](https://github.com/pandas-dev/pandas/issues/13634),
    [GH 19769](https://github.com/pandas-dev/pandas/issues/19769))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `infer_dst` keyword in [`Series.tz_localize()`](../reference/api/pandas.Series.tz_localize.html#pandas.Series.tz_localize
    "pandas.Series.tz_localize"), [`DatetimeIndex.tz_localize()`](../reference/api/pandas.DatetimeIndex.tz_localize.html#pandas.DatetimeIndex.tz_localize
    "pandas.DatetimeIndex.tz_localize") and [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") have been removed. `infer_dst=True` is equivalent to `ambiguous='infer'`,
    and `infer_dst=False` to `ambiguous='raise'` ([GH 7963](https://github.com/pandas-dev/pandas/issues/7963)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When `.resample()` was changed from an eager to a lazy operation, like `.groupby()`
    in v0.18.0, we put in place compatibility (with a `FutureWarning`), so operations
    would continue to work. This is now fully removed, so a `Resampler` will no longer
    forward compat operations ([GH 20554](https://github.com/pandas-dev/pandas/issues/20554))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove long deprecated `axis=None` parameter from `.replace()` ([GH 20271](https://github.com/pandas-dev/pandas/issues/20271))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Performance improvements'
  prefs: []
  type: TYPE_NORMAL
- en: Indexers on `Series` or `DataFrame` no longer create a reference cycle ([GH
    17956](https://github.com/pandas-dev/pandas/issues/17956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added a keyword argument, `cache`, to [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") that improved the performance of converting duplicate datetime
    arguments ([GH 11665](https://github.com/pandas-dev/pandas/issues/11665))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DateOffset` arithmetic performance is improved ([GH 18218](https://github.com/pandas-dev/pandas/issues/18218))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Converting a `Series` of `Timedelta` objects to days, seconds, etc… sped up
    through vectorization of underlying methods ([GH 18092](https://github.com/pandas-dev/pandas/issues/18092))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `.map()` with a `Series/dict` input ([GH 15081](https://github.com/pandas-dev/pandas/issues/15081))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The overridden `Timedelta` properties of days, seconds and microseconds have
    been removed, leveraging their built-in Python versions instead ([GH 18242](https://github.com/pandas-dev/pandas/issues/18242))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series` construction will reduce the number of copies made of the input data
    in certain cases ([GH 17449](https://github.com/pandas-dev/pandas/issues/17449))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`Series.dt.date()`](../reference/api/pandas.Series.dt.date.html#pandas.Series.dt.date
    "pandas.Series.dt.date") and [`DatetimeIndex.date()`](../reference/api/pandas.DatetimeIndex.date.html#pandas.DatetimeIndex.date
    "pandas.DatetimeIndex.date") ([GH 18058](https://github.com/pandas-dev/pandas/issues/18058))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`Series.dt.time()`](../reference/api/pandas.Series.dt.time.html#pandas.Series.dt.time
    "pandas.Series.dt.time") and [`DatetimeIndex.time()`](../reference/api/pandas.DatetimeIndex.time.html#pandas.DatetimeIndex.time
    "pandas.DatetimeIndex.time") ([GH 18461](https://github.com/pandas-dev/pandas/issues/18461))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `IntervalIndex.symmetric_difference()` ([GH 18475](https://github.com/pandas-dev/pandas/issues/18475))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `DatetimeIndex` and `Series` arithmetic operations with
    Business-Month and Business-Quarter frequencies ([GH 18489](https://github.com/pandas-dev/pandas/issues/18489))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series()`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    / [`DataFrame()`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    tab completion limits to 100 values, for better performance. ([GH 18587](https://github.com/pandas-dev/pandas/issues/18587))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`DataFrame.median()`](../reference/api/pandas.DataFrame.median.html#pandas.DataFrame.median
    "pandas.DataFrame.median") with `axis=1` when bottleneck is not installed ([GH
    16468](https://github.com/pandas-dev/pandas/issues/16468))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") for large indexes, at the cost of a reduction in
    performance for small ones ([GH 18519](https://github.com/pandas-dev/pandas/issues/18519))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`MultiIndex.remove_unused_levels()`](../reference/api/pandas.MultiIndex.remove_unused_levels.html#pandas.MultiIndex.remove_unused_levels
    "pandas.MultiIndex.remove_unused_levels") when there are no unused levels, at
    the cost of a reduction in performance when there are ([GH 19289](https://github.com/pandas-dev/pandas/issues/19289))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`Index.get_loc()`](../reference/api/pandas.Index.get_loc.html#pandas.Index.get_loc
    "pandas.Index.get_loc") for non-unique indexes ([GH 19478](https://github.com/pandas-dev/pandas/issues/19478))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of pairwise `.rolling()` and `.expanding()` with `.cov()`
    and `.corr()` operations ([GH 17917](https://github.com/pandas-dev/pandas/issues/17917))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `GroupBy.rank()` ([GH 15779](https://github.com/pandas-dev/pandas/issues/15779))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of variable `.rolling()` on `.min()` and `.max()` ([GH
    19521](https://github.com/pandas-dev/pandas/issues/19521))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `GroupBy.ffill()` and `GroupBy.bfill()` ([GH 11296](https://github.com/pandas-dev/pandas/issues/11296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `GroupBy.any()` and `GroupBy.all()` ([GH 15435](https://github.com/pandas-dev/pandas/issues/15435))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `GroupBy.pct_change()` ([GH 19165](https://github.com/pandas-dev/pandas/issues/19165))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") in the case of categorical dtypes ([GH 20003](https://github.com/pandas-dev/pandas/issues/20003))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `getattr(Series, attr)` when the Series has certain
    index types. This manifested in slow printing of large Series with a `DatetimeIndex`
    ([GH 19764](https://github.com/pandas-dev/pandas/issues/19764))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed a performance regression for `GroupBy.nth()` and `GroupBy.last()` with
    some object columns ([GH 19283](https://github.com/pandas-dev/pandas/issues/19283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `Categorical.from_codes()` ([GH 18501](https://github.com/pandas-dev/pandas/issues/18501))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Documentation changes'
  prefs: []
  type: TYPE_NORMAL
- en: Thanks to all of the contributors who participated in the pandas Documentation
    Sprint, which took place on March 10th. We had about 500 participants from over
    30 locations across the world. You should notice that many of the [API docstrings](../reference/index.html#api)
    have greatly improved.
  prefs: []
  type: TYPE_NORMAL
- en: There were too many simultaneous contributions to include a release note for
    each improvement, but this [GitHub search](https://github.com/pandas-dev/pandas/pulls?utf8=%E2%9C%93&q=is%3Apr+label%3ADocs+created%3A2018-03-10..2018-03-15+)
    should give you an idea of how many docstrings were improved.
  prefs: []
  type: TYPE_NORMAL
- en: Special thanks to [Marc Garcia](https://github.com/datapythonista) for organizing
    the sprint. For more information, read the [NumFOCUS blogpost](https://www.numfocus.org/blog/worldwide-pandas-sprint/)
    recapping the sprint.
  prefs: []
  type: TYPE_NORMAL
- en: Changed spelling of “numpy” to “NumPy”, and “python” to “Python”. ([GH 19017](https://github.com/pandas-dev/pandas/issues/19017))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Consistency when introducing code samples, using either colon or period. Rewrote
    some sentences for greater clarity, added more dynamic references to functions,
    methods and classes. ([GH 18941](https://github.com/pandas-dev/pandas/issues/18941),
    [GH 18948](https://github.com/pandas-dev/pandas/issues/18948), [GH 18973](https://github.com/pandas-dev/pandas/issues/18973),
    [GH 19017](https://github.com/pandas-dev/pandas/issues/19017))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added a reference to [`DataFrame.assign()`](../reference/api/pandas.DataFrame.assign.html#pandas.DataFrame.assign
    "pandas.DataFrame.assign") in the concatenate section of the merging documentation
    ([GH 18665](https://github.com/pandas-dev/pandas/issues/18665))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Bug fixes'
  prefs: []
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: A class of bugs were introduced in pandas 0.21 with `CategoricalDtype` that
    affects the correctness of operations like `merge`, `concat`, and indexing when
    comparing multiple unordered `Categorical` arrays that have the same categories,
    but in a different order. We highly recommend upgrading or manually aligning your
    categories before doing these operations.
  prefs: []
  type: TYPE_NORMAL
- en: Bug in `Categorical.equals` returning the wrong result when comparing two unordered
    `Categorical` arrays with the same categories, but in a different order ([GH 16603](https://github.com/pandas-dev/pandas/issues/16603))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.api.types.union_categoricals()`](../reference/api/pandas.api.types.union_categoricals.html#pandas.api.types.union_categoricals
    "pandas.api.types.union_categoricals") returning the wrong result when for unordered
    categoricals with the categories in a different order. This affected [`pandas.concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") with Categorical data ([GH 19096](https://github.com/pandas-dev/pandas/issues/19096)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    returning the wrong result when joining on an unordered `Categorical` that had
    the same categories but in a different order ([GH 19551](https://github.com/pandas-dev/pandas/issues/19551))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CategoricalIndex.get_indexer()` returning the wrong result when `target`
    was an unordered `Categorical` that had the same categories as `self` but in a
    different order ([GH 19551](https://github.com/pandas-dev/pandas/issues/19551))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype") with a categorical dtype where the resultant index is not
    converted to a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") for all types of index ([GH 18630](https://github.com/pandas-dev/pandas/issues/18630))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") and `Categorical.astype()` where an existing categorical
    data does not get updated ([GH 10696](https://github.com/pandas-dev/pandas/issues/10696),
    [GH 18593](https://github.com/pandas-dev/pandas/issues/18593))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.split()`](../reference/api/pandas.Series.str.split.html#pandas.Series.str.split
    "pandas.Series.str.split") with `expand=True` incorrectly raising an IndexError
    on empty strings ([GH 20002](https://github.com/pandas-dev/pandas/issues/20002)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    constructor with `dtype=CategoricalDtype(...)` where `categories` and `ordered`
    are not maintained ([GH 19032](https://github.com/pandas-dev/pandas/issues/19032))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor with scalar and `dtype=CategoricalDtype(...)` where `categories` and
    `ordered` are not maintained ([GH 19565](https://github.com/pandas-dev/pandas/issues/19565))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.__iter__` not converting to Python types ([GH 19909](https://github.com/pandas-dev/pandas/issues/19909))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") returning the unique codes for the `uniques`. This now returns
    a `Categorical` with the same dtype as the input ([GH 19721](https://github.com/pandas-dev/pandas/issues/19721))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") including an item for missing values in the `uniques` return
    value ([GH 19721](https://github.com/pandas-dev/pandas/issues/19721))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.take()`](../reference/api/pandas.Series.take.html#pandas.Series.take
    "pandas.Series.take") with categorical data interpreting `-1` in `indices` as
    missing value markers, rather than the last element of the Series ([GH 20664](https://github.com/pandas-dev/pandas/issues/20664))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Series.__sub__()` subtracting a non-nanosecond `np.datetime64` object
    from a `Series` gave incorrect results ([GH 7996](https://github.com/pandas-dev/pandas/issues/7996))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") addition and subtraction of zero-dimensional integer
    arrays gave incorrect results ([GH 19012](https://github.com/pandas-dev/pandas/issues/19012))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") where adding or subtracting an array-like of `DateOffset`
    objects either raised (`np.array`, `pd.Index`) or broadcast incorrectly (`pd.Series`)
    ([GH 18849](https://github.com/pandas-dev/pandas/issues/18849))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__add__()` adding Series with dtype `timedelta64[ns]` to a timezone-aware
    `DatetimeIndex` incorrectly dropped timezone information ([GH 13905](https://github.com/pandas-dev/pandas/issues/13905))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding a `Period` object to a `datetime` or `Timestamp` object will now correctly
    raise a `TypeError` ([GH 17983](https://github.com/pandas-dev/pandas/issues/17983))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") where comparison with an array of `Timestamp` objects would
    result in a `RecursionError` ([GH 15183](https://github.com/pandas-dev/pandas/issues/15183))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    floor-division where operating on a scalar `timedelta` raises an exception ([GH
    18846](https://github.com/pandas-dev/pandas/issues/18846))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") where the repr was not showing high-precision time values
    at the end of a day (e.g., 23:59:59.999999999) ([GH 19030](https://github.com/pandas-dev/pandas/issues/19030))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.astype()` to non-ns timedelta units would hold the incorrect dtype
    ([GH 19176](https://github.com/pandas-dev/pandas/issues/19176), [GH 19223](https://github.com/pandas-dev/pandas/issues/19223),
    [GH 12425](https://github.com/pandas-dev/pandas/issues/12425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in subtracting [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") from `NaT` incorrectly returning `NaT` ([GH 19158](https://github.com/pandas-dev/pandas/issues/19158))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.truncate()`](../reference/api/pandas.Series.truncate.html#pandas.Series.truncate
    "pandas.Series.truncate") which raises `TypeError` with a monotonic `PeriodIndex`
    ([GH 17717](https://github.com/pandas-dev/pandas/issues/17717))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pct_change()`](../reference/api/pandas.DataFrame.pct_change.html#pandas.DataFrame.pct_change
    "pandas.DataFrame.pct_change") using `periods` and `freq` returned different length
    outputs ([GH 7292](https://github.com/pandas-dev/pandas/issues/7292))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in comparison of [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") against `None` or `datetime.date` objects raising `TypeError`
    for `==` and `!=` comparisons instead of all-`False` and all-`True`, respectively
    ([GH 19301](https://github.com/pandas-dev/pandas/issues/19301))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") and [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") where a string representing a barely out-of-bounds timestamp
    would be incorrectly rounded down instead of raising `OutOfBoundsDatetime` ([GH
    19382](https://github.com/pandas-dev/pandas/issues/19382))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.floor()`](../reference/api/pandas.Timestamp.floor.html#pandas.Timestamp.floor
    "pandas.Timestamp.floor") [`DatetimeIndex.floor()`](../reference/api/pandas.DatetimeIndex.floor.html#pandas.DatetimeIndex.floor
    "pandas.DatetimeIndex.floor") where time stamps far in the future and past were
    not rounded correctly ([GH 19206](https://github.com/pandas-dev/pandas/issues/19206))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") where passing an out-of-bounds datetime with `errors='coerce'`
    and `utc=True` would raise `OutOfBoundsDatetime` instead of parsing to `NaT` ([GH
    19612](https://github.com/pandas-dev/pandas/issues/19612))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") addition and subtraction where name of the returned object
    was not always set consistently. ([GH 19744](https://github.com/pandas-dev/pandas/issues/19744))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") addition and subtraction where operations with numpy
    arrays raised `TypeError` ([GH 19847](https://github.com/pandas-dev/pandas/issues/19847))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") where setting the `freq` attribute was not fully supported
    ([GH 20678](https://github.com/pandas-dev/pandas/issues/20678))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Timedelta.__mul__()` where multiplying by `NaT` returned `NaT` instead
    of raising a `TypeError` ([GH 19819](https://github.com/pandas-dev/pandas/issues/19819))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    with `dtype='timedelta64[ns]'` where addition or subtraction of `TimedeltaIndex`
    had results cast to `dtype='int64'` ([GH 17250](https://github.com/pandas-dev/pandas/issues/17250))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    with `dtype='timedelta64[ns]'` where addition or subtraction of `TimedeltaIndex`
    could return a `Series` with an incorrect name ([GH 19043](https://github.com/pandas-dev/pandas/issues/19043))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timedelta.__floordiv__()` and `Timedelta.__rfloordiv__()` dividing by
    many incompatible numpy objects was incorrectly allowed ([GH 18846](https://github.com/pandas-dev/pandas/issues/18846))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where dividing a scalar timedelta-like object with [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") performed the reciprocal operation ([GH 19125](https://github.com/pandas-dev/pandas/issues/19125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") where division by a `Series` would return a `TimedeltaIndex`
    instead of a `Series` ([GH 19042](https://github.com/pandas-dev/pandas/issues/19042))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timedelta.__add__()`, `Timedelta.__sub__()` where adding or subtracting
    a `np.timedelta64` object would return another `np.timedelta64` instead of a `Timedelta`
    ([GH 19738](https://github.com/pandas-dev/pandas/issues/19738))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timedelta.__floordiv__()`, `Timedelta.__rfloordiv__()` where operating
    with a `Tick` object would raise a `TypeError` instead of returning a numeric
    value ([GH 19738](https://github.com/pandas-dev/pandas/issues/19738))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period.asfreq()`](../reference/api/pandas.Period.asfreq.html#pandas.Period.asfreq
    "pandas.Period.asfreq") where periods near `datetime(1, 1, 1)` could be converted
    incorrectly ([GH 19643](https://github.com/pandas-dev/pandas/issues/19643), [GH
    19834](https://github.com/pandas-dev/pandas/issues/19834))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta.total_seconds()`](../reference/api/pandas.Timedelta.total_seconds.html#pandas.Timedelta.total_seconds
    "pandas.Timedelta.total_seconds") causing precision errors, for example `Timedelta('30S').total_seconds()==30.000000000000004`
    ([GH 19458](https://github.com/pandas-dev/pandas/issues/19458))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timedelta.__rmod__()` where operating with a `numpy.timedelta64` returned
    a `timedelta64` object instead of a `Timedelta` ([GH 19820](https://github.com/pandas-dev/pandas/issues/19820))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Multiplication of [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") by `TimedeltaIndex` will now raise `TypeError` instead
    of raising `ValueError` in cases of length mismatch ([GH 19333](https://github.com/pandas-dev/pandas/issues/19333))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") with a `np.timedelta64` object which was raising a `TypeError`
    ([GH 20393](https://github.com/pandas-dev/pandas/issues/20393))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in creating a `Series` from an array that contains both tz-naive and tz-aware
    values will result in a `Series` whose dtype is tz-aware instead of object ([GH
    16406](https://github.com/pandas-dev/pandas/issues/16406))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in comparison of timezone-aware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") against `NaT` incorrectly raising `TypeError` ([GH 19276](https://github.com/pandas-dev/pandas/issues/19276))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.astype()` when converting between timezone aware dtypes,
    and converting from timezone aware to naive ([GH 18951](https://github.com/pandas-dev/pandas/issues/18951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in comparing [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), which failed to raise `TypeError` when attempting to
    compare timezone-aware and timezone-naive datetimelike objects ([GH 18162](https://github.com/pandas-dev/pandas/issues/18162))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in localization of a naive, datetime string in a `Series` constructor with
    a `datetime64[ns, tz]` dtype ([GH 174151](https://github.com/pandas-dev/pandas/issues/174151))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp.replace()`](../reference/api/pandas.Timestamp.replace.html#pandas.Timestamp.replace
    "pandas.Timestamp.replace") will now handle Daylight Savings transitions gracefully
    ([GH 18319](https://github.com/pandas-dev/pandas/issues/18319))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in tz-aware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") where addition/subtraction with a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") or array with `dtype='timedelta64[ns]'` was incorrect
    ([GH 17558](https://github.com/pandas-dev/pandas/issues/17558))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.insert()` where inserting `NaT` into a timezone-aware
    index incorrectly raised ([GH 16357](https://github.com/pandas-dev/pandas/issues/16357))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor, where tz-aware Datetimeindex and a given column
    name will result in an empty `DataFrame` ([GH 19157](https://github.com/pandas-dev/pandas/issues/19157))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.tz_localize()`](../reference/api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize") where localizing a timestamp near the minimum
    or maximum valid values could overflow and return a timestamp with an incorrect
    nanosecond value ([GH 12677](https://github.com/pandas-dev/pandas/issues/12677))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when iterating over [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") that was localized with fixed timezone offset that rounded
    nanosecond precision to microseconds ([GH 19603](https://github.com/pandas-dev/pandas/issues/19603))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.diff()`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff") that raised an `IndexError` with tz-aware values ([GH
    18578](https://github.com/pandas-dev/pandas/issues/18578))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt")
    that converted tz-aware dtypes to tz-naive ([GH 15785](https://github.com/pandas-dev/pandas/issues/15785))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Dataframe.count()` that raised an `ValueError`, if `Dataframe.dropna()`
    was called for a single column with timezone-aware values. ([GH 13407](https://github.com/pandas-dev/pandas/issues/13407))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Offsets
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `WeekOfMonth` and `Week` where addition and subtraction did not roll
    correctly ([GH 18510](https://github.com/pandas-dev/pandas/issues/18510), [GH
    18672](https://github.com/pandas-dev/pandas/issues/18672), [GH 18864](https://github.com/pandas-dev/pandas/issues/18864))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `WeekOfMonth` and `LastWeekOfMonth` where default keyword arguments for
    constructor raised `ValueError` ([GH 19142](https://github.com/pandas-dev/pandas/issues/19142))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `FY5253Quarter`, `LastWeekOfMonth` where rollback and rollforward behavior
    was inconsistent with addition and subtraction behavior ([GH 18854](https://github.com/pandas-dev/pandas/issues/18854))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `FY5253` where `datetime` addition and subtraction incremented incorrectly
    for dates on the year-end but not normalized to midnight ([GH 18854](https://github.com/pandas-dev/pandas/issues/18854))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `FY5253` where date offsets could incorrectly raise an `AssertionError`
    in arithmetic operations ([GH 14774](https://github.com/pandas-dev/pandas/issues/14774))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor with an int or float list where specifying `dtype=str`, `dtype='str'`
    or `dtype='U'` failed to convert the data elements to strings ([GH 16605](https://github.com/pandas-dev/pandas/issues/16605))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    multiplication and division methods where operating with a `Series` would return
    an `Index` object instead of a `Series` object ([GH 19042](https://github.com/pandas-dev/pandas/issues/19042))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor in which data containing very large positive or
    very large negative numbers was causing `OverflowError` ([GH 18584](https://github.com/pandas-dev/pandas/issues/18584))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    constructor with `dtype='uint64'` where int-like floats were not coerced to `UInt64Index`
    ([GH 18400](https://github.com/pandas-dev/pandas/issues/18400))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") flex arithmetic (e.g. `df.add(other, fill_value=foo)`) with
    a `fill_value` other than `None` failed to raise `NotImplementedError` in corner
    cases where either the frame or `other` has length zero ([GH 19522](https://github.com/pandas-dev/pandas/issues/19522))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Multiplication and division of numeric-dtyped [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") objects with timedelta-like scalars returns `TimedeltaIndex` instead
    of raising `TypeError` ([GH 19333](https://github.com/pandas-dev/pandas/issues/19333))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where `NaN` was returned instead of 0 by [`Series.pct_change()`](../reference/api/pandas.Series.pct_change.html#pandas.Series.pct_change
    "pandas.Series.pct_change") and [`DataFrame.pct_change()`](../reference/api/pandas.DataFrame.pct_change.html#pandas.DataFrame.pct_change
    "pandas.DataFrame.pct_change") when `fill_method` is not `None` ([GH 19873](https://github.com/pandas-dev/pandas/issues/19873))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.str.get()`](../reference/api/pandas.Series.str.get.html#pandas.Series.str.get
    "pandas.Series.str.get") with a dictionary in the values and the index not in
    the keys, raising `KeyError` ([GH 20671](https://github.com/pandas-dev/pandas/issues/20671))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    construction from list of mixed type tuples ([GH 18505](https://github.com/pandas-dev/pandas/issues/18505))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.drop()`](../reference/api/pandas.Index.drop.html#pandas.Index.drop
    "pandas.Index.drop") when passing a list of both tuples and non-tuples ([GH 18304](https://github.com/pandas-dev/pandas/issues/18304))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop"), `Panel.drop()`, [`Series.drop()`](../reference/api/pandas.Series.drop.html#pandas.Series.drop
    "pandas.Series.drop"), [`Index.drop()`](../reference/api/pandas.Index.drop.html#pandas.Index.drop
    "pandas.Index.drop") where no `KeyError` is raised when dropping a non-existent
    element from an axis that contains duplicates ([GH 19186](https://github.com/pandas-dev/pandas/issues/19186))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing a datetimelike `Index` that raised `ValueError` instead of `IndexError`
    ([GH 18386](https://github.com/pandas-dev/pandas/issues/18386)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.to_series()`](../reference/api/pandas.Index.to_series.html#pandas.Index.to_series
    "pandas.Index.to_series") now accepts `index` and `name` kwargs ([GH 18699](https://github.com/pandas-dev/pandas/issues/18699))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DatetimeIndex.to_series()`](../reference/api/pandas.DatetimeIndex.to_series.html#pandas.DatetimeIndex.to_series
    "pandas.DatetimeIndex.to_series") now accepts `index` and `name` kwargs ([GH 18699](https://github.com/pandas-dev/pandas/issues/18699))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing non-scalar value from `Series` having non-unique `Index` will
    return value flattened ([GH 17610](https://github.com/pandas-dev/pandas/issues/17610))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing with iterator containing only missing keys, which raised no
    error ([GH 20748](https://github.com/pandas-dev/pandas/issues/20748))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed inconsistency in `.ix` between list and scalar keys when the index has
    integer dtype and does not include the desired keys ([GH 20753](https://github.com/pandas-dev/pandas/issues/20753))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `__setitem__` when indexing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a 2-d boolean ndarray ([GH 18582](https://github.com/pandas-dev/pandas/issues/18582))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `str.extractall` when there were no matches empty [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") was returned instead of appropriate [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 19034](https://github.com/pandas-dev/pandas/issues/19034))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") where empty and purely NA data was constructed inconsistently
    depending on the construction method ([GH 18421](https://github.com/pandas-dev/pandas/issues/18421))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.symmetric_difference()` where the symmetric difference
    with a non-`IntervalIndex` did not raise ([GH 18475](https://github.com/pandas-dev/pandas/issues/18475))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") where set operations that returned an empty `IntervalIndex`
    had the wrong dtype ([GH 19101](https://github.com/pandas-dev/pandas/issues/19101))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.drop_duplicates()`](../reference/api/pandas.DataFrame.drop_duplicates.html#pandas.DataFrame.drop_duplicates
    "pandas.DataFrame.drop_duplicates") where no `KeyError` is raised when passing
    in columns that don’t exist on the `DataFrame` ([GH 19726](https://github.com/pandas-dev/pandas/issues/19726))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index` subclasses constructors that ignore unexpected keyword arguments
    ([GH 19348](https://github.com/pandas-dev/pandas/issues/19348))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.difference()`](../reference/api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference") when taking difference of an `Index` with itself ([GH
    20040](https://github.com/pandas-dev/pandas/issues/20040))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.first_valid_index()`](../reference/api/pandas.DataFrame.first_valid_index.html#pandas.DataFrame.first_valid_index
    "pandas.DataFrame.first_valid_index") and [`DataFrame.last_valid_index()`](../reference/api/pandas.DataFrame.last_valid_index.html#pandas.DataFrame.last_valid_index
    "pandas.DataFrame.last_valid_index") in presence of entire rows of NaNs in the
    middle of values ([GH 20499](https://github.com/pandas-dev/pandas/issues/20499)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") where some indexing operations were not supported for
    overlapping or non-monotonic `uint64` data ([GH 20636](https://github.com/pandas-dev/pandas/issues/20636))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.is_unique` where extraneous output in stderr is shown if Series
    contains objects with `__ne__` defined ([GH 20661](https://github.com/pandas-dev/pandas/issues/20661))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.loc` assignment with a single-element list-like incorrectly assigns
    as a list ([GH 19474](https://github.com/pandas-dev/pandas/issues/19474))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in partial string indexing on a `Series/DataFrame` with a monotonic decreasing
    `DatetimeIndex` ([GH 19362](https://github.com/pandas-dev/pandas/issues/19362))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in performing in-place operations on a `DataFrame` with a duplicate `Index`
    ([GH 17105](https://github.com/pandas-dev/pandas/issues/17105))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.get_loc()`](../reference/api/pandas.IntervalIndex.get_loc.html#pandas.IntervalIndex.get_loc
    "pandas.IntervalIndex.get_loc") and [`IntervalIndex.get_indexer()`](../reference/api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer") when used with an [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") containing a single interval ([GH 17284](https://github.com/pandas-dev/pandas/issues/17284),
    [GH 20921](https://github.com/pandas-dev/pandas/issues/20921))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.loc` with a `uint64` indexer ([GH 20722](https://github.com/pandas-dev/pandas/issues/20722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.__contains__()` where non-tuple keys would return `True`
    even if they had been dropped ([GH 19027](https://github.com/pandas-dev/pandas/issues/19027))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.set_labels()` which would cause casting (and potentially
    clipping) of the new labels if the `level` argument is not 0 or a list like [0,
    1, … ] ([GH 19057](https://github.com/pandas-dev/pandas/issues/19057))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_level_values()`](../reference/api/pandas.MultiIndex.get_level_values.html#pandas.MultiIndex.get_level_values
    "pandas.MultiIndex.get_level_values") which would return an invalid index on level
    of ints with missing values ([GH 17924](https://github.com/pandas-dev/pandas/issues/17924))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.unique()` when called on empty [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 20568](https://github.com/pandas-dev/pandas/issues/20568))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.unique()` which would not preserve level names ([GH 20570](https://github.com/pandas-dev/pandas/issues/20570))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.remove_unused_levels()`](../reference/api/pandas.MultiIndex.remove_unused_levels.html#pandas.MultiIndex.remove_unused_levels
    "pandas.MultiIndex.remove_unused_levels") which would fill nan values ([GH 18417](https://github.com/pandas-dev/pandas/issues/18417))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.from_tuples()`](../reference/api/pandas.MultiIndex.from_tuples.html#pandas.MultiIndex.from_tuples
    "pandas.MultiIndex.from_tuples") which would fail to take zipped tuples in python3
    ([GH 18434](https://github.com/pandas-dev/pandas/issues/18434))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") which would fail to automatically cast values between
    float and int ([GH 18818](https://github.com/pandas-dev/pandas/issues/18818),
    [GH 15994](https://github.com/pandas-dev/pandas/issues/15994))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") which would cast boolean to integer labels ([GH 19086](https://github.com/pandas-dev/pandas/issues/19086))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") which would fail to locate keys containing `NaN`
    ([GH 18485](https://github.com/pandas-dev/pandas/issues/18485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") in large [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"), would fail when levels had different dtypes ([GH 18520](https://github.com/pandas-dev/pandas/issues/18520))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing where nested indexers having only numpy arrays are handled incorrectly
    ([GH 19686](https://github.com/pandas-dev/pandas/issues/19686))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IO
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html "pandas.read_html")
    now rewinds seekable IO objects after parse failure, before attempting to parse
    with a new parser. If a parser errors and the object is non-seekable, an informative
    error is raised suggesting the use of a different parser ([GH 17975](https://github.com/pandas-dev/pandas/issues/17975))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") now has an option to add an id to the leading `<table>`
    tag ([GH 8496](https://github.com/pandas-dev/pandas/issues/8496))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `read_msgpack()` with a non existent file is passed in Python 2 ([GH
    15296](https://github.com/pandas-dev/pandas/issues/15296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where a `MultiIndex` with duplicate columns was not being mangled
    appropriately ([GH 18062](https://github.com/pandas-dev/pandas/issues/18062))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where missing values were not being handled properly when `keep_default_na=False`
    with dictionary `na_values` ([GH 19227](https://github.com/pandas-dev/pandas/issues/19227))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") causing heap corruption on 32-bit, big-endian architectures
    ([GH 20785](https://github.com/pandas-dev/pandas/issues/20785))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") where a file with 0 variables gave an `AttributeError` incorrectly.
    Now it gives an `EmptyDataError` ([GH 18184](https://github.com/pandas-dev/pandas/issues/18184))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") where pairs of braces meant to serve as invisible
    placeholders were escaped ([GH 18667](https://github.com/pandas-dev/pandas/issues/18667))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") where a `NaN` in a `MultiIndex` would cause an `IndexError`
    or incorrect output ([GH 14249](https://github.com/pandas-dev/pandas/issues/14249))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") where a non-string index-level name would result
    in an `AttributeError` ([GH 19981](https://github.com/pandas-dev/pandas/issues/19981))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") where the combination of an index name and the `index_names=False`
    option would result in incorrect output ([GH 18326](https://github.com/pandas-dev/pandas/issues/18326))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") where a `MultiIndex` with an empty string as its
    name would result in incorrect output ([GH 18669](https://github.com/pandas-dev/pandas/issues/18669))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") where missing space characters caused wrong escaping
    and produced non-valid latex in some cases ([GH 20859](https://github.com/pandas-dev/pandas/issues/20859))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") where large numeric values were causing an `OverflowError`
    ([GH 18842](https://github.com/pandas-dev/pandas/issues/18842))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") where an exception was raised if the write destination
    is S3 ([GH 19134](https://github.com/pandas-dev/pandas/issues/19134))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Interval`](../reference/api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    now supported in [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") for all Excel file types ([GH 19242](https://github.com/pandas-dev/pandas/issues/19242))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    now supported in [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") for all Excel file types ([GH 19242](https://github.com/pandas-dev/pandas/issues/19242),
    [GH 9155](https://github.com/pandas-dev/pandas/issues/9155), [GH 19900](https://github.com/pandas-dev/pandas/issues/19900))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.io.stata.StataReader.value_labels()`](../reference/api/pandas.io.stata.StataReader.value_labels.html#pandas.io.stata.StataReader.value_labels
    "pandas.io.stata.StataReader.value_labels") raising an `AttributeError` when called
    on very old files. Now returns an empty dict ([GH 19417](https://github.com/pandas-dev/pandas/issues/19417))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle") when unpickling objects with [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") or `Float64Index` created with pandas prior to version
    0.20 ([GH 19939](https://github.com/pandas-dev/pandas/issues/19939))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas.io.json.json_normalize()` where sub-records are not properly
    normalized if any sub-records values are NoneType ([GH 20030](https://github.com/pandas-dev/pandas/issues/20030))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `usecols` parameter in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where error is not raised correctly when passing a string.
    ([GH 20529](https://github.com/pandas-dev/pandas/issues/20529))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`HDFStore.keys()`](../reference/api/pandas.HDFStore.keys.html#pandas.HDFStore.keys
    "pandas.HDFStore.keys") when reading a file with a soft link causes exception
    ([GH 20523](https://github.com/pandas-dev/pandas/issues/20523))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `HDFStore.select_column()` where a key which is not a valid store raised
    an `AttributeError` instead of a `KeyError` ([GH 17912](https://github.com/pandas-dev/pandas/issues/17912))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Better error message when attempting to plot but matplotlib is not installed
    ([GH 19810](https://github.com/pandas-dev/pandas/issues/19810)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") now raises a `ValueError` when the `x` or `y` argument
    is improperly formed ([GH 18671](https://github.com/pandas-dev/pandas/issues/18671))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") when `x` and `y` arguments given as positions caused
    incorrect referenced columns for line, bar and area plots ([GH 20056](https://github.com/pandas-dev/pandas/issues/20056))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in formatting tick labels with `datetime.time()` and fractional seconds
    ([GH 18478](https://github.com/pandas-dev/pandas/issues/18478)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.plot.kde()`](../reference/api/pandas.Series.plot.kde.html#pandas.Series.plot.kde
    "pandas.Series.plot.kde") has exposed the args `ind` and `bw_method` in the docstring
    ([GH 18461](https://github.com/pandas-dev/pandas/issues/18461)). The argument
    `ind` may now also be an integer (number of sample points).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") now supports multiple columns to the `y` argument ([GH
    19699](https://github.com/pandas-dev/pandas/issues/19699))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GroupBy/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug when grouping by a single column and aggregating with a class like `list`
    or `tuple` ([GH 18079](https://github.com/pandas-dev/pandas/issues/18079))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") which would not emit an error when called with a tuple
    key not in the index ([GH 18798](https://github.com/pandas-dev/pandas/issues/18798))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") which silently ignored unsupported (or mistyped)
    options for `label`, `closed` and `convention` ([GH 19303](https://github.com/pandas-dev/pandas/issues/19303))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") where tuples were interpreted as lists of keys rather
    than as keys ([GH 17979](https://github.com/pandas-dev/pandas/issues/17979), [GH
    18249](https://github.com/pandas-dev/pandas/issues/18249))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") where aggregation by `first`/`last`/`min`/`max` was
    causing timestamps to lose precision ([GH 19526](https://github.com/pandas-dev/pandas/issues/19526))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.transform()`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform") where particular aggregation functions were being
    incorrectly cast to match the dtype(s) of the grouped data ([GH 19200](https://github.com/pandas-dev/pandas/issues/19200))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") passing the `on=` kwarg, and subsequently using `.apply()`
    ([GH 17813](https://github.com/pandas-dev/pandas/issues/17813))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.resample().aggregate` not raising a `KeyError` when aggregating
    a non-existent column ([GH 16766](https://github.com/pandas-dev/pandas/issues/16766),
    [GH 19566](https://github.com/pandas-dev/pandas/issues/19566))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.cumsum()` and `DataFrameGroupBy.cumprod()` when `skipna`
    was passed ([GH 19806](https://github.com/pandas-dev/pandas/issues/19806))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") that dropped timezone information ([GH 13238](https://github.com/pandas-dev/pandas/issues/13238))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") where transformations using `np.all` and `np.any`
    were raising a `ValueError` ([GH 20653](https://github.com/pandas-dev/pandas/issues/20653))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") where `ffill`, `bfill`, `pad`, `backfill`, `fillna`,
    `interpolate`, and `asfreq` were ignoring `loffset`. ([GH 20744](https://github.com/pandas-dev/pandas/issues/20744))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") when applying a function that has mixed data types
    and the user supplied function can fail on the grouping column ([GH 20949](https://github.com/pandas-dev/pandas/issues/20949))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.rolling().apply()` where operations performed against
    the associated `DataFrameGroupBy` object could impact the inclusion of the grouped
    item(s) in the result ([GH 14013](https://github.com/pandas-dev/pandas/issues/14013))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in which creating a `SparseDataFrame` from a dense `Series` or an unsupported
    type raised an uncontrolled exception ([GH 19374](https://github.com/pandas-dev/pandas/issues/19374))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseDataFrame.to_csv` causing exception ([GH 19384](https://github.com/pandas-dev/pandas/issues/19384))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseSeries.memory_usage` which caused segfault by accessing non sparse
    elements ([GH 19368](https://github.com/pandas-dev/pandas/issues/19368))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in constructing a `SparseArray`: if `data` is a scalar and `index` is defined
    it will coerce to `float64` regardless of scalar’s dtype. ([GH 19163](https://github.com/pandas-dev/pandas/issues/19163))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") where referencing a `CategoricalIndex` by name, where
    the `by` kwarg would `KeyError` ([GH 20777](https://github.com/pandas-dev/pandas/issues/20777))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") which fails trying to sort mixed type levels under Python
    3 ([GH 18310](https://github.com/pandas-dev/pandas/issues/18310))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") which casts int to float if `columns` is a `MultiIndex`
    with unused levels ([GH 17845](https://github.com/pandas-dev/pandas/issues/17845))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") which raises an error if `index` is a `MultiIndex`
    with unused labels on the unstacked level ([GH 18562](https://github.com/pandas-dev/pandas/issues/18562))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed construction of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") from a `dict` containing `NaN` as key ([GH 18480](https://github.com/pandas-dev/pandas/issues/18480))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed construction of a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from a `dict` containing `NaN` as key ([GH 18455](https://github.com/pandas-dev/pandas/issues/18455))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disabled construction of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") where len(index) > len(data) = 1, which previously would broadcast
    the data item, and now raises a `ValueError` ([GH 18819](https://github.com/pandas-dev/pandas/issues/18819))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Suppressed error in the construction of a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from a `dict` containing scalar values when the corresponding
    keys are not included in the passed index ([GH 18600](https://github.com/pandas-dev/pandas/issues/18600))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed (changed from `object` to `float64`) dtype of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") initialized with axes, no data, and `dtype=int` ([GH 19646](https://github.com/pandas-dev/pandas/issues/19646))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rank()`](../reference/api/pandas.Series.rank.html#pandas.Series.rank
    "pandas.Series.rank") where `Series` containing `NaT` modifies the `Series` inplace
    ([GH 18521](https://github.com/pandas-dev/pandas/issues/18521))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") which
    fails when using readonly arrays ([GH 18773](https://github.com/pandas-dev/pandas/issues/18773))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") which fails when the `aggfunc` arg is of type
    string. The behavior is now consistent with other methods like `agg` and `apply`
    ([GH 18713](https://github.com/pandas-dev/pandas/issues/18713))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") in which merging using `Index` objects as vectors raised
    an Exception ([GH 19038](https://github.com/pandas-dev/pandas/issues/19038))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack"), [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack"), [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack") which were not returning subclasses ([GH 15563](https://github.com/pandas-dev/pandas/issues/15563))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in timezone comparisons, manifesting as a conversion of the index to UTC
    in `.concat()` ([GH 18523](https://github.com/pandas-dev/pandas/issues/18523))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    when concatenating sparse and dense series it returns only a `SparseDataFrame`.
    Should be a `DataFrame`. ([GH 18914](https://github.com/pandas-dev/pandas/issues/18914),
    [GH 18686](https://github.com/pandas-dev/pandas/issues/18686), and [GH 16874](https://github.com/pandas-dev/pandas/issues/16874))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message for [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") when there is no common merge key ([GH 19427](https://github.com/pandas-dev/pandas/issues/19427))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") which does an `outer` instead of a `left` join when being
    called with multiple DataFrames and some have non-unique indices ([GH 19624](https://github.com/pandas-dev/pandas/issues/19624))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.rename()`](../reference/api/pandas.Series.rename.html#pandas.Series.rename
    "pandas.Series.rename") now accepts `axis` as a kwarg ([GH 18589](https://github.com/pandas-dev/pandas/issues/18589))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`rename()`](../reference/api/pandas.DataFrame.rename.html#pandas.DataFrame.rename
    "pandas.DataFrame.rename") where an Index of same-length tuples was converted
    to a MultiIndex ([GH 19497](https://github.com/pandas-dev/pandas/issues/19497))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Comparisons between [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") would return a `Series` with an incorrect name, ignoring the `Index`’s
    name attribute ([GH 19582](https://github.com/pandas-dev/pandas/issues/19582))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`qcut()`](../reference/api/pandas.qcut.html#pandas.qcut "pandas.qcut")
    where datetime and timedelta data with `NaT` present raised a `ValueError` ([GH
    19768](https://github.com/pandas-dev/pandas/issues/19768))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iterrows()`](../reference/api/pandas.DataFrame.iterrows.html#pandas.DataFrame.iterrows
    "pandas.DataFrame.iterrows"), which would infers strings not compliant to [ISO8601](https://en.wikipedia.org/wiki/ISO_8601)
    to datetimes ([GH 19671](https://github.com/pandas-dev/pandas/issues/19671))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor with `Categorical` where a `ValueError` is not raised when an index
    of different length is given ([GH 19342](https://github.com/pandas-dev/pandas/issues/19342))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") where column metadata is lost when converting to categorical
    or a dictionary of dtypes ([GH 19920](https://github.com/pandas-dev/pandas/issues/19920))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") and
    [`qcut()`](../reference/api/pandas.qcut.html#pandas.qcut "pandas.qcut") where
    timezone information was dropped ([GH 19872](https://github.com/pandas-dev/pandas/issues/19872))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor with a `dtype=str`, previously raised in some cases ([GH 19853](https://github.com/pandas-dev/pandas/issues/19853))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies"), and `select_dtypes()`, where duplicate column names caused
    incorrect behavior ([GH 20848](https://github.com/pandas-dev/pandas/issues/20848))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`isna()`](../reference/api/pandas.isna.html#pandas.isna "pandas.isna"),
    which cannot handle ambiguous typed lists ([GH 20675](https://github.com/pandas-dev/pandas/issues/20675))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    which raises an error when concatenating TZ-aware dataframes and all-NaT dataframes
    ([GH 12396](https://github.com/pandas-dev/pandas/issues/12396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    which raises an error when concatenating empty TZ-aware series ([GH 18447](https://github.com/pandas-dev/pandas/issues/18447))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Improved error message when attempting to use a Python keyword as an identifier
    in a `numexpr` backed query ([GH 18221](https://github.com/pandas-dev/pandas/issues/18221))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in accessing a [`pandas.get_option()`](../reference/api/pandas.get_option.html#pandas.get_option
    "pandas.get_option"), which raised `KeyError` rather than `OptionError` when looking
    up a non-existent option key in some cases ([GH 19789](https://github.com/pandas-dev/pandas/issues/19789))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") and [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") for Series or DataFrames with differing unicode
    data ([GH 20503](https://github.com/pandas-dev/pandas/issues/20503))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: A class of bugs were introduced in pandas 0.21 with `CategoricalDtype` that
    affects the correctness of operations like `merge`, `concat`, and indexing when
    comparing multiple unordered `Categorical` arrays that have the same categories,
    but in a different order. We highly recommend upgrading or manually aligning your
    categories before doing these operations.
  prefs: []
  type: TYPE_NORMAL
- en: Bug in `Categorical.equals` returning the wrong result when comparing two unordered
    `Categorical` arrays with the same categories, but in a different order ([GH 16603](https://github.com/pandas-dev/pandas/issues/16603))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.api.types.union_categoricals()`](../reference/api/pandas.api.types.union_categoricals.html#pandas.api.types.union_categoricals
    "pandas.api.types.union_categoricals") returning the wrong result when for unordered
    categoricals with the categories in a different order. This affected [`pandas.concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") with Categorical data ([GH 19096](https://github.com/pandas-dev/pandas/issues/19096)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    returning the wrong result when joining on an unordered `Categorical` that had
    the same categories but in a different order ([GH 19551](https://github.com/pandas-dev/pandas/issues/19551))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CategoricalIndex.get_indexer()` returning the wrong result when `target`
    was an unordered `Categorical` that had the same categories as `self` but in a
    different order ([GH 19551](https://github.com/pandas-dev/pandas/issues/19551))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype") with a categorical dtype where the resultant index is not
    converted to a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") for all types of index ([GH 18630](https://github.com/pandas-dev/pandas/issues/18630))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") and `Categorical.astype()` where an existing categorical
    data does not get updated ([GH 10696](https://github.com/pandas-dev/pandas/issues/10696),
    [GH 18593](https://github.com/pandas-dev/pandas/issues/18593))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.split()`](../reference/api/pandas.Series.str.split.html#pandas.Series.str.split
    "pandas.Series.str.split") with `expand=True` incorrectly raising an IndexError
    on empty strings ([GH 20002](https://github.com/pandas-dev/pandas/issues/20002)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    constructor with `dtype=CategoricalDtype(...)` where `categories` and `ordered`
    are not maintained ([GH 19032](https://github.com/pandas-dev/pandas/issues/19032))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor with scalar and `dtype=CategoricalDtype(...)` where `categories` and
    `ordered` are not maintained ([GH 19565](https://github.com/pandas-dev/pandas/issues/19565))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.__iter__` not converting to Python types ([GH 19909](https://github.com/pandas-dev/pandas/issues/19909))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") returning the unique codes for the `uniques`. This now returns
    a `Categorical` with the same dtype as the input ([GH 19721](https://github.com/pandas-dev/pandas/issues/19721))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") including an item for missing values in the `uniques` return
    value ([GH 19721](https://github.com/pandas-dev/pandas/issues/19721))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.take()`](../reference/api/pandas.Series.take.html#pandas.Series.take
    "pandas.Series.take") with categorical data interpreting `-1` in `indices` as
    missing value markers, rather than the last element of the Series ([GH 20664](https://github.com/pandas-dev/pandas/issues/20664))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Series.__sub__()` subtracting a non-nanosecond `np.datetime64` object
    from a `Series` gave incorrect results ([GH 7996](https://github.com/pandas-dev/pandas/issues/7996))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") addition and subtraction of zero-dimensional integer
    arrays gave incorrect results ([GH 19012](https://github.com/pandas-dev/pandas/issues/19012))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") where adding or subtracting an array-like of `DateOffset`
    objects either raised (`np.array`, `pd.Index`) or broadcast incorrectly (`pd.Series`)
    ([GH 18849](https://github.com/pandas-dev/pandas/issues/18849))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__add__()` adding Series with dtype `timedelta64[ns]` to a timezone-aware
    `DatetimeIndex` incorrectly dropped timezone information ([GH 13905](https://github.com/pandas-dev/pandas/issues/13905))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding a `Period` object to a `datetime` or `Timestamp` object will now correctly
    raise a `TypeError` ([GH 17983](https://github.com/pandas-dev/pandas/issues/17983))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") where comparison with an array of `Timestamp` objects would
    result in a `RecursionError` ([GH 15183](https://github.com/pandas-dev/pandas/issues/15183))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    floor-division where operating on a scalar `timedelta` raises an exception ([GH
    18846](https://github.com/pandas-dev/pandas/issues/18846))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") where the repr was not showing high-precision time values
    at the end of a day (e.g., 23:59:59.999999999) ([GH 19030](https://github.com/pandas-dev/pandas/issues/19030))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.astype()` to non-ns timedelta units would hold the incorrect dtype
    ([GH 19176](https://github.com/pandas-dev/pandas/issues/19176), [GH 19223](https://github.com/pandas-dev/pandas/issues/19223),
    [GH 12425](https://github.com/pandas-dev/pandas/issues/12425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in subtracting [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") from `NaT` incorrectly returning `NaT` ([GH 19158](https://github.com/pandas-dev/pandas/issues/19158))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.truncate()`](../reference/api/pandas.Series.truncate.html#pandas.Series.truncate
    "pandas.Series.truncate") which raises `TypeError` with a monotonic `PeriodIndex`
    ([GH 17717](https://github.com/pandas-dev/pandas/issues/17717))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pct_change()`](../reference/api/pandas.DataFrame.pct_change.html#pandas.DataFrame.pct_change
    "pandas.DataFrame.pct_change") using `periods` and `freq` returned different length
    outputs ([GH 7292](https://github.com/pandas-dev/pandas/issues/7292))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in comparison of [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") against `None` or `datetime.date` objects raising `TypeError`
    for `==` and `!=` comparisons instead of all-`False` and all-`True`, respectively
    ([GH 19301](https://github.com/pandas-dev/pandas/issues/19301))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") and [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") where a string representing a barely out-of-bounds timestamp
    would be incorrectly rounded down instead of raising `OutOfBoundsDatetime` ([GH
    19382](https://github.com/pandas-dev/pandas/issues/19382))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.floor()`](../reference/api/pandas.Timestamp.floor.html#pandas.Timestamp.floor
    "pandas.Timestamp.floor") [`DatetimeIndex.floor()`](../reference/api/pandas.DatetimeIndex.floor.html#pandas.DatetimeIndex.floor
    "pandas.DatetimeIndex.floor") where time stamps far in the future and past were
    not rounded correctly ([GH 19206](https://github.com/pandas-dev/pandas/issues/19206))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") where passing an out-of-bounds datetime with `errors='coerce'`
    and `utc=True` would raise `OutOfBoundsDatetime` instead of parsing to `NaT` ([GH
    19612](https://github.com/pandas-dev/pandas/issues/19612))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") addition and subtraction where name of the returned object
    was not always set consistently. ([GH 19744](https://github.com/pandas-dev/pandas/issues/19744))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") addition and subtraction where operations with numpy
    arrays raised `TypeError` ([GH 19847](https://github.com/pandas-dev/pandas/issues/19847))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") where setting the `freq` attribute was not fully supported
    ([GH 20678](https://github.com/pandas-dev/pandas/issues/20678))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Timedelta.__mul__()` where multiplying by `NaT` returned `NaT` instead
    of raising a `TypeError` ([GH 19819](https://github.com/pandas-dev/pandas/issues/19819))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    with `dtype='timedelta64[ns]'` where addition or subtraction of `TimedeltaIndex`
    had results cast to `dtype='int64'` ([GH 17250](https://github.com/pandas-dev/pandas/issues/17250))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    with `dtype='timedelta64[ns]'` where addition or subtraction of `TimedeltaIndex`
    could return a `Series` with an incorrect name ([GH 19043](https://github.com/pandas-dev/pandas/issues/19043))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timedelta.__floordiv__()` and `Timedelta.__rfloordiv__()` dividing by
    many incompatible numpy objects was incorrectly allowed ([GH 18846](https://github.com/pandas-dev/pandas/issues/18846))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where dividing a scalar timedelta-like object with [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") performed the reciprocal operation ([GH 19125](https://github.com/pandas-dev/pandas/issues/19125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") where division by a `Series` would return a `TimedeltaIndex`
    instead of a `Series` ([GH 19042](https://github.com/pandas-dev/pandas/issues/19042))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timedelta.__add__()`, `Timedelta.__sub__()` where adding or subtracting
    a `np.timedelta64` object would return another `np.timedelta64` instead of a `Timedelta`
    ([GH 19738](https://github.com/pandas-dev/pandas/issues/19738))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timedelta.__floordiv__()`, `Timedelta.__rfloordiv__()` where operating
    with a `Tick` object would raise a `TypeError` instead of returning a numeric
    value ([GH 19738](https://github.com/pandas-dev/pandas/issues/19738))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period.asfreq()`](../reference/api/pandas.Period.asfreq.html#pandas.Period.asfreq
    "pandas.Period.asfreq") where periods near `datetime(1, 1, 1)` could be converted
    incorrectly ([GH 19643](https://github.com/pandas-dev/pandas/issues/19643), [GH
    19834](https://github.com/pandas-dev/pandas/issues/19834))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta.total_seconds()`](../reference/api/pandas.Timedelta.total_seconds.html#pandas.Timedelta.total_seconds
    "pandas.Timedelta.total_seconds") causing precision errors, for example `Timedelta('30S').total_seconds()==30.000000000000004`
    ([GH 19458](https://github.com/pandas-dev/pandas/issues/19458))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timedelta.__rmod__()` where operating with a `numpy.timedelta64` returned
    a `timedelta64` object instead of a `Timedelta` ([GH 19820](https://github.com/pandas-dev/pandas/issues/19820))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Multiplication of [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") by `TimedeltaIndex` will now raise `TypeError` instead
    of raising `ValueError` in cases of length mismatch ([GH 19333](https://github.com/pandas-dev/pandas/issues/19333))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") with a `np.timedelta64` object which was raising a `TypeError`
    ([GH 20393](https://github.com/pandas-dev/pandas/issues/20393))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in creating a `Series` from an array that contains both tz-naive and tz-aware
    values will result in a `Series` whose dtype is tz-aware instead of object ([GH
    16406](https://github.com/pandas-dev/pandas/issues/16406))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in comparison of timezone-aware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") against `NaT` incorrectly raising `TypeError` ([GH 19276](https://github.com/pandas-dev/pandas/issues/19276))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.astype()` when converting between timezone aware dtypes,
    and converting from timezone aware to naive ([GH 18951](https://github.com/pandas-dev/pandas/issues/18951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in comparing [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), which failed to raise `TypeError` when attempting to
    compare timezone-aware and timezone-naive datetimelike objects ([GH 18162](https://github.com/pandas-dev/pandas/issues/18162))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in localization of a naive, datetime string in a `Series` constructor with
    a `datetime64[ns, tz]` dtype ([GH 174151](https://github.com/pandas-dev/pandas/issues/174151))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp.replace()`](../reference/api/pandas.Timestamp.replace.html#pandas.Timestamp.replace
    "pandas.Timestamp.replace") will now handle Daylight Savings transitions gracefully
    ([GH 18319](https://github.com/pandas-dev/pandas/issues/18319))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in tz-aware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") where addition/subtraction with a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") or array with `dtype='timedelta64[ns]'` was incorrect
    ([GH 17558](https://github.com/pandas-dev/pandas/issues/17558))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.insert()` where inserting `NaT` into a timezone-aware
    index incorrectly raised ([GH 16357](https://github.com/pandas-dev/pandas/issues/16357))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor, where tz-aware Datetimeindex and a given column
    name will result in an empty `DataFrame` ([GH 19157](https://github.com/pandas-dev/pandas/issues/19157))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.tz_localize()`](../reference/api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize") where localizing a timestamp near the minimum
    or maximum valid values could overflow and return a timestamp with an incorrect
    nanosecond value ([GH 12677](https://github.com/pandas-dev/pandas/issues/12677))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when iterating over [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") that was localized with fixed timezone offset that rounded
    nanosecond precision to microseconds ([GH 19603](https://github.com/pandas-dev/pandas/issues/19603))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.diff()`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff") that raised an `IndexError` with tz-aware values ([GH
    18578](https://github.com/pandas-dev/pandas/issues/18578))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt")
    that converted tz-aware dtypes to tz-naive ([GH 15785](https://github.com/pandas-dev/pandas/issues/15785))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Dataframe.count()` that raised an `ValueError`, if `Dataframe.dropna()`
    was called for a single column with timezone-aware values. ([GH 13407](https://github.com/pandas-dev/pandas/issues/13407))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Offsets
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `WeekOfMonth` and `Week` where addition and subtraction did not roll
    correctly ([GH 18510](https://github.com/pandas-dev/pandas/issues/18510), [GH
    18672](https://github.com/pandas-dev/pandas/issues/18672), [GH 18864](https://github.com/pandas-dev/pandas/issues/18864))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `WeekOfMonth` and `LastWeekOfMonth` where default keyword arguments for
    constructor raised `ValueError` ([GH 19142](https://github.com/pandas-dev/pandas/issues/19142))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `FY5253Quarter`, `LastWeekOfMonth` where rollback and rollforward behavior
    was inconsistent with addition and subtraction behavior ([GH 18854](https://github.com/pandas-dev/pandas/issues/18854))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `FY5253` where `datetime` addition and subtraction incremented incorrectly
    for dates on the year-end but not normalized to midnight ([GH 18854](https://github.com/pandas-dev/pandas/issues/18854))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `FY5253` where date offsets could incorrectly raise an `AssertionError`
    in arithmetic operations ([GH 14774](https://github.com/pandas-dev/pandas/issues/14774))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor with an int or float list where specifying `dtype=str`, `dtype='str'`
    or `dtype='U'` failed to convert the data elements to strings ([GH 16605](https://github.com/pandas-dev/pandas/issues/16605))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    multiplication and division methods where operating with a `Series` would return
    an `Index` object instead of a `Series` object ([GH 19042](https://github.com/pandas-dev/pandas/issues/19042))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor in which data containing very large positive or
    very large negative numbers was causing `OverflowError` ([GH 18584](https://github.com/pandas-dev/pandas/issues/18584))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    constructor with `dtype='uint64'` where int-like floats were not coerced to `UInt64Index`
    ([GH 18400](https://github.com/pandas-dev/pandas/issues/18400))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") flex arithmetic (e.g. `df.add(other, fill_value=foo)`) with
    a `fill_value` other than `None` failed to raise `NotImplementedError` in corner
    cases where either the frame or `other` has length zero ([GH 19522](https://github.com/pandas-dev/pandas/issues/19522))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Multiplication and division of numeric-dtyped [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") objects with timedelta-like scalars returns `TimedeltaIndex` instead
    of raising `TypeError` ([GH 19333](https://github.com/pandas-dev/pandas/issues/19333))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where `NaN` was returned instead of 0 by [`Series.pct_change()`](../reference/api/pandas.Series.pct_change.html#pandas.Series.pct_change
    "pandas.Series.pct_change") and [`DataFrame.pct_change()`](../reference/api/pandas.DataFrame.pct_change.html#pandas.DataFrame.pct_change
    "pandas.DataFrame.pct_change") when `fill_method` is not `None` ([GH 19873](https://github.com/pandas-dev/pandas/issues/19873))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.str.get()`](../reference/api/pandas.Series.str.get.html#pandas.Series.str.get
    "pandas.Series.str.get") with a dictionary in the values and the index not in
    the keys, raising `KeyError` ([GH 20671](https://github.com/pandas-dev/pandas/issues/20671))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    construction from list of mixed type tuples ([GH 18505](https://github.com/pandas-dev/pandas/issues/18505))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.drop()`](../reference/api/pandas.Index.drop.html#pandas.Index.drop
    "pandas.Index.drop") when passing a list of both tuples and non-tuples ([GH 18304](https://github.com/pandas-dev/pandas/issues/18304))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop"), `Panel.drop()`, [`Series.drop()`](../reference/api/pandas.Series.drop.html#pandas.Series.drop
    "pandas.Series.drop"), [`Index.drop()`](../reference/api/pandas.Index.drop.html#pandas.Index.drop
    "pandas.Index.drop") where no `KeyError` is raised when dropping a non-existent
    element from an axis that contains duplicates ([GH 19186](https://github.com/pandas-dev/pandas/issues/19186))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing a datetimelike `Index` that raised `ValueError` instead of `IndexError`
    ([GH 18386](https://github.com/pandas-dev/pandas/issues/18386)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.to_series()`](../reference/api/pandas.Index.to_series.html#pandas.Index.to_series
    "pandas.Index.to_series") now accepts `index` and `name` kwargs ([GH 18699](https://github.com/pandas-dev/pandas/issues/18699))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DatetimeIndex.to_series()`](../reference/api/pandas.DatetimeIndex.to_series.html#pandas.DatetimeIndex.to_series
    "pandas.DatetimeIndex.to_series") now accepts `index` and `name` kwargs ([GH 18699](https://github.com/pandas-dev/pandas/issues/18699))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing non-scalar value from `Series` having non-unique `Index` will
    return value flattened ([GH 17610](https://github.com/pandas-dev/pandas/issues/17610))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing with iterator containing only missing keys, which raised no
    error ([GH 20748](https://github.com/pandas-dev/pandas/issues/20748))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed inconsistency in `.ix` between list and scalar keys when the index has
    integer dtype and does not include the desired keys ([GH 20753](https://github.com/pandas-dev/pandas/issues/20753))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `__setitem__` when indexing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a 2-d boolean ndarray ([GH 18582](https://github.com/pandas-dev/pandas/issues/18582))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `str.extractall` when there were no matches empty [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") was returned instead of appropriate [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 19034](https://github.com/pandas-dev/pandas/issues/19034))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") where empty and purely NA data was constructed inconsistently
    depending on the construction method ([GH 18421](https://github.com/pandas-dev/pandas/issues/18421))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.symmetric_difference()` where the symmetric difference
    with a non-`IntervalIndex` did not raise ([GH 18475](https://github.com/pandas-dev/pandas/issues/18475))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") where set operations that returned an empty `IntervalIndex`
    had the wrong dtype ([GH 19101](https://github.com/pandas-dev/pandas/issues/19101))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.drop_duplicates()`](../reference/api/pandas.DataFrame.drop_duplicates.html#pandas.DataFrame.drop_duplicates
    "pandas.DataFrame.drop_duplicates") where no `KeyError` is raised when passing
    in columns that don’t exist on the `DataFrame` ([GH 19726](https://github.com/pandas-dev/pandas/issues/19726))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index` subclasses constructors that ignore unexpected keyword arguments
    ([GH 19348](https://github.com/pandas-dev/pandas/issues/19348))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.difference()`](../reference/api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference") when taking difference of an `Index` with itself ([GH
    20040](https://github.com/pandas-dev/pandas/issues/20040))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.first_valid_index()`](../reference/api/pandas.DataFrame.first_valid_index.html#pandas.DataFrame.first_valid_index
    "pandas.DataFrame.first_valid_index") and [`DataFrame.last_valid_index()`](../reference/api/pandas.DataFrame.last_valid_index.html#pandas.DataFrame.last_valid_index
    "pandas.DataFrame.last_valid_index") in presence of entire rows of NaNs in the
    middle of values ([GH 20499](https://github.com/pandas-dev/pandas/issues/20499)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") where some indexing operations were not supported for
    overlapping or non-monotonic `uint64` data ([GH 20636](https://github.com/pandas-dev/pandas/issues/20636))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.is_unique` where extraneous output in stderr is shown if Series
    contains objects with `__ne__` defined ([GH 20661](https://github.com/pandas-dev/pandas/issues/20661))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.loc` assignment with a single-element list-like incorrectly assigns
    as a list ([GH 19474](https://github.com/pandas-dev/pandas/issues/19474))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in partial string indexing on a `Series/DataFrame` with a monotonic decreasing
    `DatetimeIndex` ([GH 19362](https://github.com/pandas-dev/pandas/issues/19362))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in performing in-place operations on a `DataFrame` with a duplicate `Index`
    ([GH 17105](https://github.com/pandas-dev/pandas/issues/17105))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.get_loc()`](../reference/api/pandas.IntervalIndex.get_loc.html#pandas.IntervalIndex.get_loc
    "pandas.IntervalIndex.get_loc") and [`IntervalIndex.get_indexer()`](../reference/api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer") when used with an [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") containing a single interval ([GH 17284](https://github.com/pandas-dev/pandas/issues/17284),
    [GH 20921](https://github.com/pandas-dev/pandas/issues/20921))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.loc` with a `uint64` indexer ([GH 20722](https://github.com/pandas-dev/pandas/issues/20722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.__contains__()` where non-tuple keys would return `True`
    even if they had been dropped ([GH 19027](https://github.com/pandas-dev/pandas/issues/19027))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.set_labels()` which would cause casting (and potentially
    clipping) of the new labels if the `level` argument is not 0 or a list like [0,
    1, … ] ([GH 19057](https://github.com/pandas-dev/pandas/issues/19057))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_level_values()`](../reference/api/pandas.MultiIndex.get_level_values.html#pandas.MultiIndex.get_level_values
    "pandas.MultiIndex.get_level_values") which would return an invalid index on level
    of ints with missing values ([GH 17924](https://github.com/pandas-dev/pandas/issues/17924))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.unique()` when called on empty [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 20568](https://github.com/pandas-dev/pandas/issues/20568))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.unique()` which would not preserve level names ([GH 20570](https://github.com/pandas-dev/pandas/issues/20570))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.remove_unused_levels()`](../reference/api/pandas.MultiIndex.remove_unused_levels.html#pandas.MultiIndex.remove_unused_levels
    "pandas.MultiIndex.remove_unused_levels") which would fill nan values ([GH 18417](https://github.com/pandas-dev/pandas/issues/18417))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.from_tuples()`](../reference/api/pandas.MultiIndex.from_tuples.html#pandas.MultiIndex.from_tuples
    "pandas.MultiIndex.from_tuples") which would fail to take zipped tuples in python3
    ([GH 18434](https://github.com/pandas-dev/pandas/issues/18434))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") which would fail to automatically cast values between
    float and int ([GH 18818](https://github.com/pandas-dev/pandas/issues/18818),
    [GH 15994](https://github.com/pandas-dev/pandas/issues/15994))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") which would cast boolean to integer labels ([GH 19086](https://github.com/pandas-dev/pandas/issues/19086))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") which would fail to locate keys containing `NaN`
    ([GH 18485](https://github.com/pandas-dev/pandas/issues/18485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_loc()`](../reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc") in large [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"), would fail when levels had different dtypes ([GH 18520](https://github.com/pandas-dev/pandas/issues/18520))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing where nested indexers having only numpy arrays are handled incorrectly
    ([GH 19686](https://github.com/pandas-dev/pandas/issues/19686))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IO
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html "pandas.read_html")
    now rewinds seekable IO objects after parse failure, before attempting to parse
    with a new parser. If a parser errors and the object is non-seekable, an informative
    error is raised suggesting the use of a different parser ([GH 17975](https://github.com/pandas-dev/pandas/issues/17975))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") now has an option to add an id to the leading `<table>`
    tag ([GH 8496](https://github.com/pandas-dev/pandas/issues/8496))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `read_msgpack()` with a non existent file is passed in Python 2 ([GH
    15296](https://github.com/pandas-dev/pandas/issues/15296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where a `MultiIndex` with duplicate columns was not being mangled
    appropriately ([GH 18062](https://github.com/pandas-dev/pandas/issues/18062))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where missing values were not being handled properly when `keep_default_na=False`
    with dictionary `na_values` ([GH 19227](https://github.com/pandas-dev/pandas/issues/19227))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") causing heap corruption on 32-bit, big-endian architectures
    ([GH 20785](https://github.com/pandas-dev/pandas/issues/20785))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") where a file with 0 variables gave an `AttributeError` incorrectly.
    Now it gives an `EmptyDataError` ([GH 18184](https://github.com/pandas-dev/pandas/issues/18184))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") where pairs of braces meant to serve as invisible
    placeholders were escaped ([GH 18667](https://github.com/pandas-dev/pandas/issues/18667))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") where a `NaN` in a `MultiIndex` would cause an `IndexError`
    or incorrect output ([GH 14249](https://github.com/pandas-dev/pandas/issues/14249))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") where a non-string index-level name would result
    in an `AttributeError` ([GH 19981](https://github.com/pandas-dev/pandas/issues/19981))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") where the combination of an index name and the `index_names=False`
    option would result in incorrect output ([GH 18326](https://github.com/pandas-dev/pandas/issues/18326))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") where a `MultiIndex` with an empty string as its
    name would result in incorrect output ([GH 18669](https://github.com/pandas-dev/pandas/issues/18669))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") where missing space characters caused wrong escaping
    and produced non-valid latex in some cases ([GH 20859](https://github.com/pandas-dev/pandas/issues/20859))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") where large numeric values were causing an `OverflowError`
    ([GH 18842](https://github.com/pandas-dev/pandas/issues/18842))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") where an exception was raised if the write destination
    is S3 ([GH 19134](https://github.com/pandas-dev/pandas/issues/19134))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Interval`](../reference/api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    now supported in [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") for all Excel file types ([GH 19242](https://github.com/pandas-dev/pandas/issues/19242))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    now supported in [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") for all Excel file types ([GH 19242](https://github.com/pandas-dev/pandas/issues/19242),
    [GH 9155](https://github.com/pandas-dev/pandas/issues/9155), [GH 19900](https://github.com/pandas-dev/pandas/issues/19900))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.io.stata.StataReader.value_labels()`](../reference/api/pandas.io.stata.StataReader.value_labels.html#pandas.io.stata.StataReader.value_labels
    "pandas.io.stata.StataReader.value_labels") raising an `AttributeError` when called
    on very old files. Now returns an empty dict ([GH 19417](https://github.com/pandas-dev/pandas/issues/19417))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle") when unpickling objects with [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") or `Float64Index` created with pandas prior to version
    0.20 ([GH 19939](https://github.com/pandas-dev/pandas/issues/19939))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas.io.json.json_normalize()` where sub-records are not properly
    normalized if any sub-records values are NoneType ([GH 20030](https://github.com/pandas-dev/pandas/issues/20030))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `usecols` parameter in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where error is not raised correctly when passing a string.
    ([GH 20529](https://github.com/pandas-dev/pandas/issues/20529))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`HDFStore.keys()`](../reference/api/pandas.HDFStore.keys.html#pandas.HDFStore.keys
    "pandas.HDFStore.keys") when reading a file with a soft link causes exception
    ([GH 20523](https://github.com/pandas-dev/pandas/issues/20523))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `HDFStore.select_column()` where a key which is not a valid store raised
    an `AttributeError` instead of a `KeyError` ([GH 17912](https://github.com/pandas-dev/pandas/issues/17912))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Better error message when attempting to plot but matplotlib is not installed
    ([GH 19810](https://github.com/pandas-dev/pandas/issues/19810)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") now raises a `ValueError` when the `x` or `y` argument
    is improperly formed ([GH 18671](https://github.com/pandas-dev/pandas/issues/18671))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") when `x` and `y` arguments given as positions caused
    incorrect referenced columns for line, bar and area plots ([GH 20056](https://github.com/pandas-dev/pandas/issues/20056))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in formatting tick labels with `datetime.time()` and fractional seconds
    ([GH 18478](https://github.com/pandas-dev/pandas/issues/18478)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.plot.kde()`](../reference/api/pandas.Series.plot.kde.html#pandas.Series.plot.kde
    "pandas.Series.plot.kde") has exposed the args `ind` and `bw_method` in the docstring
    ([GH 18461](https://github.com/pandas-dev/pandas/issues/18461)). The argument
    `ind` may now also be an integer (number of sample points).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") now supports multiple columns to the `y` argument ([GH
    19699](https://github.com/pandas-dev/pandas/issues/19699))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GroupBy/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug when grouping by a single column and aggregating with a class like `list`
    or `tuple` ([GH 18079](https://github.com/pandas-dev/pandas/issues/18079))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") which would not emit an error when called with a tuple
    key not in the index ([GH 18798](https://github.com/pandas-dev/pandas/issues/18798))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") which silently ignored unsupported (or mistyped)
    options for `label`, `closed` and `convention` ([GH 19303](https://github.com/pandas-dev/pandas/issues/19303))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") where tuples were interpreted as lists of keys rather
    than as keys ([GH 17979](https://github.com/pandas-dev/pandas/issues/17979), [GH
    18249](https://github.com/pandas-dev/pandas/issues/18249))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") where aggregation by `first`/`last`/`min`/`max` was
    causing timestamps to lose precision ([GH 19526](https://github.com/pandas-dev/pandas/issues/19526))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.transform()`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform") where particular aggregation functions were being
    incorrectly cast to match the dtype(s) of the grouped data ([GH 19200](https://github.com/pandas-dev/pandas/issues/19200))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") passing the `on=` kwarg, and subsequently using `.apply()`
    ([GH 17813](https://github.com/pandas-dev/pandas/issues/17813))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.resample().aggregate` not raising a `KeyError` when aggregating
    a non-existent column ([GH 16766](https://github.com/pandas-dev/pandas/issues/16766),
    [GH 19566](https://github.com/pandas-dev/pandas/issues/19566))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.cumsum()` and `DataFrameGroupBy.cumprod()` when `skipna`
    was passed ([GH 19806](https://github.com/pandas-dev/pandas/issues/19806))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") that dropped timezone information ([GH 13238](https://github.com/pandas-dev/pandas/issues/13238))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") where transformations using `np.all` and `np.any`
    were raising a `ValueError` ([GH 20653](https://github.com/pandas-dev/pandas/issues/20653))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") where `ffill`, `bfill`, `pad`, `backfill`, `fillna`,
    `interpolate`, and `asfreq` were ignoring `loffset`. ([GH 20744](https://github.com/pandas-dev/pandas/issues/20744))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") when applying a function that has mixed data types
    and the user supplied function can fail on the grouping column ([GH 20949](https://github.com/pandas-dev/pandas/issues/20949))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.rolling().apply()` where operations performed against
    the associated `DataFrameGroupBy` object could impact the inclusion of the grouped
    item(s) in the result ([GH 14013](https://github.com/pandas-dev/pandas/issues/14013))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in which creating a `SparseDataFrame` from a dense `Series` or an unsupported
    type raised an uncontrolled exception ([GH 19374](https://github.com/pandas-dev/pandas/issues/19374))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseDataFrame.to_csv` causing exception ([GH 19384](https://github.com/pandas-dev/pandas/issues/19384))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseSeries.memory_usage` which caused segfault by accessing non sparse
    elements ([GH 19368](https://github.com/pandas-dev/pandas/issues/19368))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in constructing a `SparseArray`: if `data` is a scalar and `index` is defined
    it will coerce to `float64` regardless of scalar’s dtype. ([GH 19163](https://github.com/pandas-dev/pandas/issues/19163))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") where referencing a `CategoricalIndex` by name, where
    the `by` kwarg would `KeyError` ([GH 20777](https://github.com/pandas-dev/pandas/issues/20777))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") which fails trying to sort mixed type levels under Python
    3 ([GH 18310](https://github.com/pandas-dev/pandas/issues/18310))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") which casts int to float if `columns` is a `MultiIndex`
    with unused levels ([GH 17845](https://github.com/pandas-dev/pandas/issues/17845))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") which raises an error if `index` is a `MultiIndex`
    with unused labels on the unstacked level ([GH 18562](https://github.com/pandas-dev/pandas/issues/18562))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed construction of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") from a `dict` containing `NaN` as key ([GH 18480](https://github.com/pandas-dev/pandas/issues/18480))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed construction of a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from a `dict` containing `NaN` as key ([GH 18455](https://github.com/pandas-dev/pandas/issues/18455))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disabled construction of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") where len(index) > len(data) = 1, which previously would broadcast
    the data item, and now raises a `ValueError` ([GH 18819](https://github.com/pandas-dev/pandas/issues/18819))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Suppressed error in the construction of a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from a `dict` containing scalar values when the corresponding
    keys are not included in the passed index ([GH 18600](https://github.com/pandas-dev/pandas/issues/18600))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed (changed from `object` to `float64`) dtype of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") initialized with axes, no data, and `dtype=int` ([GH 19646](https://github.com/pandas-dev/pandas/issues/19646))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rank()`](../reference/api/pandas.Series.rank.html#pandas.Series.rank
    "pandas.Series.rank") where `Series` containing `NaT` modifies the `Series` inplace
    ([GH 18521](https://github.com/pandas-dev/pandas/issues/18521))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") which
    fails when using readonly arrays ([GH 18773](https://github.com/pandas-dev/pandas/issues/18773))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") which fails when the `aggfunc` arg is of type
    string. The behavior is now consistent with other methods like `agg` and `apply`
    ([GH 18713](https://github.com/pandas-dev/pandas/issues/18713))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") in which merging using `Index` objects as vectors raised
    an Exception ([GH 19038](https://github.com/pandas-dev/pandas/issues/19038))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack"), [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack"), [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack") which were not returning subclasses ([GH 15563](https://github.com/pandas-dev/pandas/issues/15563))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in timezone comparisons, manifesting as a conversion of the index to UTC
    in `.concat()` ([GH 18523](https://github.com/pandas-dev/pandas/issues/18523))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    when concatenating sparse and dense series it returns only a `SparseDataFrame`.
    Should be a `DataFrame`. ([GH 18914](https://github.com/pandas-dev/pandas/issues/18914),
    [GH 18686](https://github.com/pandas-dev/pandas/issues/18686), and [GH 16874](https://github.com/pandas-dev/pandas/issues/16874))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message for [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") when there is no common merge key ([GH 19427](https://github.com/pandas-dev/pandas/issues/19427))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") which does an `outer` instead of a `left` join when being
    called with multiple DataFrames and some have non-unique indices ([GH 19624](https://github.com/pandas-dev/pandas/issues/19624))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.rename()`](../reference/api/pandas.Series.rename.html#pandas.Series.rename
    "pandas.Series.rename") now accepts `axis` as a kwarg ([GH 18589](https://github.com/pandas-dev/pandas/issues/18589))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`rename()`](../reference/api/pandas.DataFrame.rename.html#pandas.DataFrame.rename
    "pandas.DataFrame.rename") where an Index of same-length tuples was converted
    to a MultiIndex ([GH 19497](https://github.com/pandas-dev/pandas/issues/19497))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Comparisons between [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") would return a `Series` with an incorrect name, ignoring the `Index`’s
    name attribute ([GH 19582](https://github.com/pandas-dev/pandas/issues/19582))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`qcut()`](../reference/api/pandas.qcut.html#pandas.qcut "pandas.qcut")
    where datetime and timedelta data with `NaT` present raised a `ValueError` ([GH
    19768](https://github.com/pandas-dev/pandas/issues/19768))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iterrows()`](../reference/api/pandas.DataFrame.iterrows.html#pandas.DataFrame.iterrows
    "pandas.DataFrame.iterrows"), which would infers strings not compliant to [ISO8601](https://en.wikipedia.org/wiki/ISO_8601)
    to datetimes ([GH 19671](https://github.com/pandas-dev/pandas/issues/19671))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor with `Categorical` where a `ValueError` is not raised when an index
    of different length is given ([GH 19342](https://github.com/pandas-dev/pandas/issues/19342))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") where column metadata is lost when converting to categorical
    or a dictionary of dtypes ([GH 19920](https://github.com/pandas-dev/pandas/issues/19920))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") and
    [`qcut()`](../reference/api/pandas.qcut.html#pandas.qcut "pandas.qcut") where
    timezone information was dropped ([GH 19872](https://github.com/pandas-dev/pandas/issues/19872))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor with a `dtype=str`, previously raised in some cases ([GH 19853](https://github.com/pandas-dev/pandas/issues/19853))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies"), and `select_dtypes()`, where duplicate column names caused
    incorrect behavior ([GH 20848](https://github.com/pandas-dev/pandas/issues/20848))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`isna()`](../reference/api/pandas.isna.html#pandas.isna "pandas.isna"),
    which cannot handle ambiguous typed lists ([GH 20675](https://github.com/pandas-dev/pandas/issues/20675))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    which raises an error when concatenating TZ-aware dataframes and all-NaT dataframes
    ([GH 12396](https://github.com/pandas-dev/pandas/issues/12396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    which raises an error when concatenating empty TZ-aware series ([GH 18447](https://github.com/pandas-dev/pandas/issues/18447))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Improved error message when attempting to use a Python keyword as an identifier
    in a `numexpr` backed query ([GH 18221](https://github.com/pandas-dev/pandas/issues/18221))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in accessing a [`pandas.get_option()`](../reference/api/pandas.get_option.html#pandas.get_option
    "pandas.get_option"), which raised `KeyError` rather than `OptionError` when looking
    up a non-existent option key in some cases ([GH 19789](https://github.com/pandas-dev/pandas/issues/19789))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") and [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") for Series or DataFrames with differing unicode
    data ([GH 20503](https://github.com/pandas-dev/pandas/issues/20503))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Contributors'
  prefs: []
  type: TYPE_NORMAL
- en: A total of 328 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: Aaron Critchley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AbdealiJK +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam Hooper +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Albert Villanova del Moral
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alejandro Giacometti +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alejandro Hohmann +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Rychyk
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexander Buchkovsky
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexander Lenail +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexander Michael Schade
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aly Sivji +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andreas Költringer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Bui +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: András Novoszáth +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andy Craze +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andy R. Terrel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anh Le +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anil Kumar Pallekonda +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antoine Pitrou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antonio Linde +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antonio Molina +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antonio Quinonez +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Armin Varshokar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Artem Bogachev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avi Sen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azeez Oluwafemi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben Auffarth +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bernhard Thiel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bhavesh Poddar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: BielStela +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blair +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bob Haffner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brett Naul +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brock Mendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bryce Guinta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Carlos Eduardo Moreira dos Santos +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Carlos García Márquez +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Carol Willing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cheuk Ting Ho +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chitrank Dixit +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Burr +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Catalfo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Mazzullo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christian Chwala +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cihan Ceyhan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clemens Brunner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Colin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cornelius Riemenschneider
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Crystal Gong +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DaanVanHauwermeiren
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dan Dixey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Frank +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Garrido +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Sakuma +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DataOmbudsman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dave Hirschfeld
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dave Lewis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Adrián Cañones Castellano +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Arcos +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David C Hall +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Fischer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Hoese +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Lutz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Polo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Stansby
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dennis Kamau +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dillon Niederhut
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dimitri +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dr. Irv
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dror Atariah
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eric Chea +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eric Kisslinger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eric O. LEBIGOT (EOL) +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: FAN-GOD +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fabian Retkowski +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fer Sar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gabriel de Maeztu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gianpaolo Macario +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Giftlin Rajaiah
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gilberto Olimpio +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gina +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gjelt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Graham Inggs +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Grant Roch
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Grant Smith +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Grzegorz Konefał +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guilherme Beltramini
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HagaiHargil +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hamish Pitkeathly +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hammad Mashkoor +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hannah Ferchland +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hans
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Haochen Wu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hissashi Rocha +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Iain Barr +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ibrahim Sharaf ElDen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ignasi Fosch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Igor Conrado Alves de Lima +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Igor Shelvinskyi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Imanflow +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ingolf Becker
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Israel Saeta Pérez
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Iva Koevska +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jakub Nowacki +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan F-F +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Koch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Werkmann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Janelle Zoutkamp +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jason Bandlow +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jaume Bonet +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jay Alammar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JennaVergeynst
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jimmy Woo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jing Qiang Goh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joachim Wagner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joan Martin Miralles +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joel Nothman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joeun Park +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John Cant +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Johnny Metz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jon Mease
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonas Schulze +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jongwony +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jordi Contestí +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: José F. R. Fonseca +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jovixe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julio Martinez +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jörg Döpfert
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: KOBAYASHI Ittoku +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kate Surta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kenneth +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Kuhl
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Krzysztof Chomski
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ksenia +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ksenia Bobrova +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kunal Gosar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kurtis Kerstein +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kyle Barron +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Laksh Arora +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Laurens Geffert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leif Walsh
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Liam Marshall +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Liam3851 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Licht Takeuchi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Liudmila +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ludovico Russo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mabel Villalba +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Manan Pal Singh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Manraj Singh
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Garcia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Hemken +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maria del Mar Bibiloni +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mario Corchero +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mark Woodbridge +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Journois +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mason Gallo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matias Heikkilä +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Braymer-Hayes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Kirk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Maybeno +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Kirk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Rocklin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthias Bussonnier +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Max Mikhaylov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maxim Veksler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maximilian Roos
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maximiliano Greco +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Penkov
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Röttger +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Selik +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Waskom
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mie~~~
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mike Kutzma +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ming Li +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mitar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mitch Negus +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Montana Low +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Moritz Münst +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mortada Mehyar
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Myles Braithwaite +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nate Yoder
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nicholas Ursa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nick Chmura
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nikos Karagiannakis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nipun Sadvilkar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nis Martensen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Noah +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Noémi Éltető +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Olivier Bilodeau +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ondrej Kokes +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Onno Eberhard +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul Ganssle +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul Mannino +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul Reidy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paulo Roberto de Oliveira Castro +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pepe Flores +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter Hoffmann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Phil Ngo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pietro Battiston
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pranav Suri +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Priyanka Ojha +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pulkit Maloo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: README Bot +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ray Bell +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Riccardo Magliocchetti +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ridhwan Luthra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert Meyer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robin Kiplang’at +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rohan Pandit +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rok Mihevc +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rouz Azari
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ryszard T. Kaleta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sam Cohan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sam Foo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Samir Musali +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Samuel Sinayoko +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sangwoong Yoon
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SarahJessica +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sharad Vijalapuram +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shubham Chaudhary +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SiYoungOh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sietse Brouwer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simone Basso +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefania Delprete +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefano Cianciulli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stephen Childs +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: StephenVoland +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stijn Van Hoey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sven
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Talitha Pumar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tarbo Fukazawa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ted Petrou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas A Caswell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Hoffmann +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Swast
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Augspurger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tommy +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tulio Casagrande +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tushar Gupta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tushar Mittal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Upkar Lidder +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Victor Villas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vince W +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vinícius Figueiredo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vipin Kumar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: WBare
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wenhuan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wes Turner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Ayd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wilson Lin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Xbar
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yaroslav Halchenko
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yee Mey
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yeongseon Choe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yian +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yimeng Zhang
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ZhuBaohe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zihao Zhao +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: adatasetaday +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: akielbowicz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: akosel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alinde1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: amuta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bolkedebruin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cbertinato
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cgohlke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: charlie0389 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: chris-b1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: csfarkas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dajcs +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: deflatSOCO +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: derestle-htwg
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: discort
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dmanikowski-reef +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: donK23 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: elrubio +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: fivemok +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: fjdiod
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: fjetter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: froessler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gabrielclow
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gfyoung
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ghasemnaddaf
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: h-vetinari +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: himanshu awasthi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ignamv +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jayfoad +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jazzmuesli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jen w +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jjames34 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: joaoavf +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: joders +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jschendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: juan huguet +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: l736x +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: luzpaz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mdeboc +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: miguelmorin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: miker985
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: miquelcamprodon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: orereta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ottiP +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: peterpanmj +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rafarui +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: raph-m +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: readyready15728 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rmihael +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: samghelms +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: scriptomation +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sfoo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: stefansimik +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: stonebig
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tmnhat2001 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tomneep +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: topper-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tv3141 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: verakai +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: xpvpc +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: zhanghui +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
