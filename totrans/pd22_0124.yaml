- en: pandas.wide_to_long
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas.wide_to_long
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.wide_to_long.html](https://pandas.pydata.org/docs/reference/api/pandas.wide_to_long.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.wide_to_long.html](https://pandas.pydata.org/docs/reference/api/pandas.wide_to_long.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Unpivot a DataFrame from wide to long format.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 将DataFrame从宽格式转换为长格式。
- en: Less flexible but more user-friendly than melt.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 比melt更灵活但更用户友好。
- en: With stubnames [‘A’, ‘B’], this function expects to find one or more group of
    columns with format A-suffix1, A-suffix2,…, B-suffix1, B-suffix2,… You specify
    what you want to call this suffix in the resulting long format with j (for example
    j=’year’)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 使用存根名称[‘A’, ‘B’]，此函数期望找到一个或多个具有格式A-suffix1、A-suffix2、…、B-suffix1、B-suffix2、…的列组。您可以使用j指定在生成的长格式中称此后缀为什么（例如j=’year’）
- en: Each row of these wide variables are assumed to be uniquely identified by i
    (can be a single column name or a list of column names)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 假定这些宽变量的每一行都由i唯一标识（可以是单个列名或列名列表）
- en: All remaining variables in the data frame are left intact.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 数据框中的所有剩余变量保持不变。
- en: 'Parameters:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**df**DataFrame'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**df**DataFrame'
- en: The wide-format DataFrame.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 宽格式DataFrame。
- en: '**stubnames**str or list-like'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**存根名称**str或类似列表'
- en: The stub name(s). The wide format variables are assumed to start with the stub
    names.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 存根名称。假定宽格式变量以存根名称开头。
- en: '**i**str or list-like'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**i**str或类似列表'
- en: Column(s) to use as id variable(s).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 用作id变量的列。
- en: '**j**str'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**j**str'
- en: The name of the sub-observation variable. What you wish to name your suffix
    in the long format.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 子观察变量的名称。您希望在长格式中命名后缀的内容。
- en: '**sep**str, default “”'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**分隔符**str，默认为“”'
- en: A character indicating the separation of the variable names in the wide format,
    to be stripped from the names in the long format. For example, if your column
    names are A-suffix1, A-suffix2, you can strip the hyphen by specifying sep=’-’.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 表示宽格式变量名称之间的分隔符的字符，在长格式中从名称中剥离。例如，如果您的列名是A-suffix1、A-suffix2，您可以通过指定sep=’-’来去除连字符。
- en: '**suffix**str, default ‘\d+’'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**后缀**str，默认为‘\d+’'
- en: A regular expression capturing the wanted suffixes. ‘\d+’ captures numeric suffixes.
    Suffixes with no numbers could be specified with the negated character class ‘\D+’.
    You can also further disambiguate suffixes, for example, if your wide variables
    are of the form A-one, B-two,.., and you have an unrelated column A-rating, you
    can ignore the last one by specifying suffix=’(!?one|two)’. When all suffixes
    are numeric, they are cast to int64/float64.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 捕获所需后缀的正则表达式。‘\d+’捕获数字后缀。没有数字的后缀可以使用否定字符类‘\D+’指定。您还可以进一步消除后缀的歧义，例如，如果您的宽变量的形式为A-one、B-two，..，并且您有一个无关的列A-rating，您可以通过指定suffix=’(!?one|two)’来忽略最后一个。当所有后缀都是数字时，它们被转换为int64/float64。
- en: 'Returns:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: DataFrame
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: DataFrame
- en: A DataFrame that contains each stub name as a variable, with new index (i, j).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 一个包含每个存根名称作为变量的DataFrame，带有新的索引（i，j）。
- en: See also
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`melt`](pandas.melt.html#pandas.melt "pandas.melt")'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[`melt`](pandas.melt.html#pandas.melt "pandas.melt")'
- en: Unpivot a DataFrame from wide to long format, optionally leaving identifiers
    set.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 将DataFrame从宽格式转换为长格式，可选择保留标识符设置。
- en: '[`pivot`](pandas.pivot.html#pandas.pivot "pandas.pivot")'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[`pivot`](pandas.pivot.html#pandas.pivot "pandas.pivot")'
- en: Create a spreadsheet-style pivot table as a DataFrame.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个类似电子表格的透视表作为DataFrame。
- en: '[`DataFrame.pivot`](pandas.DataFrame.pivot.html#pandas.DataFrame.pivot "pandas.DataFrame.pivot")'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.pivot`](pandas.DataFrame.pivot.html#pandas.DataFrame.pivot "pandas.DataFrame.pivot")'
- en: Pivot without aggregation that can handle non-numeric data.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 可处理非数值数据的无聚合的pivot。
- en: '[`DataFrame.pivot_table`](pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table")'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.pivot_table`](pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table")'
- en: Generalization of pivot that can handle duplicate values for one index/column
    pair.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 可处理一个索引/列对的重复值的pivot的泛化。
- en: '[`DataFrame.unstack`](pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack")'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.unstack`](pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack")'
- en: Pivot based on the index values instead of a column.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 基于索引值而不是列的pivot。
- en: Notes
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: All extra variables are left untouched. This simply uses pandas.melt under the
    hood, but is hard-coded to “do the right thing” in a typical case.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 所有额外变量保持不变。这只是在内部使用pandas.melt，但在典型情况下硬编码为“做正确的事情”。
- en: Examples
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: With multiple id columns
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 具有多个id列
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Going from long back to wide just takes some creative use of unstack
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 从长格式返���到宽格式只需巧妙地使用unstack
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Less wieldy column names are also handled
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 处理较难处理的列名
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: If we have many columns, we could also use a regex to find our stubnames and
    pass that list on to wide_to_long
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们有许多列，我们也可以使用正则表达式来找到我们的 stubnames，并将该列表传递给 wide_to_long。
- en: '[PRE6]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: All of the above examples have integers as suffixes. It is possible to have
    non-integers as suffixes.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 以上所有示例都有整数作为后缀。也可以使用非整数作为后缀。
- en: '[PRE7]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
