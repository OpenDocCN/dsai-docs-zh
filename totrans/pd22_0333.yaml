- en: pandas.DataFrame.sample
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.sample.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.sample.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return a random sample of items from an axis of object.
  prefs: []
  type: TYPE_NORMAL
- en: You can use random_state for reproducibility.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**n**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Number of items from axis to return. Cannot be used with frac. Default = 1 if
    frac = None.
  prefs: []
  type: TYPE_NORMAL
- en: '**frac**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Fraction of axis items to return. Cannot be used with n.
  prefs: []
  type: TYPE_NORMAL
- en: '**replace**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Allow or disallow sampling of the same row more than once.
  prefs: []
  type: TYPE_NORMAL
- en: '**weights**str or ndarray-like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Default ‘None’ results in equal probability weighting. If passed a Series, will
    align with target object on index. Index values in weights not found in sampled
    object will be ignored and index values in sampled object not in weights will
    be assigned weights of zero. If called on a DataFrame, will accept the name of
    a column when axis = 0. Unless weights are a Series, weights must be same length
    as axis being sampled. If weights do not sum to 1, they will be normalized to
    sum to 1. Missing values in the weights column will be treated as zero. Infinite
    values not allowed.
  prefs: []
  type: TYPE_NORMAL
- en: '**random_state**int, array-like, BitGenerator, np.random.RandomState, np.random.Generator,
    optional'
  prefs: []
  type: TYPE_NORMAL
- en: If int, array-like, or BitGenerator, seed for random number generator. If np.random.RandomState
    or np.random.Generator, use as given.
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 1.4.0: np.random.Generator objects now accepted'
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**{0 or ‘index’, 1 or ‘columns’, None}, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Axis to sample. Accepts axis number or name. Default is stat axis for given
    data type. For Series this parameter is unused and defaults to None.
  prefs: []
  type: TYPE_NORMAL
- en: '**ignore_index**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: If True, the resulting index will be labeled 0, 1, …, n - 1.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.3.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: Series or DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: A new object of same type as caller containing n items randomly sampled from
    the caller object.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrameGroupBy.sample`'
  prefs: []
  type: TYPE_NORMAL
- en: Generates random samples from each group of a DataFrame object.
  prefs: []
  type: TYPE_NORMAL
- en: '`SeriesGroupBy.sample`'
  prefs: []
  type: TYPE_NORMAL
- en: Generates random samples from each group of a Series object.
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.random.choice`](https://numpy.org/doc/stable/reference/random/generated/numpy.random.choice.html#numpy.random.choice
    "(in NumPy v1.26)")'
  prefs: []
  type: TYPE_NORMAL
- en: Generates a random sample from a given 1-D numpy array.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: If frac > 1, replacement should be set to True.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Extract 3 random elements from the `Series` `df[''num_legs'']`: Note that we
    use random_state to ensure the reproducibility of the examples.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'A random 50% sample of the `DataFrame` with replacement:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'An upsample sample of the `DataFrame` with replacement: Note that replace parameter
    has to be True for frac parameter > 1.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Using a DataFrame column as weights. Rows with larger value in the num_specimen_seen
    column are more likely to be sampled.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
