- en: Poly solvers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/polys/solvers.html](https://docs.sympy.org/latest/modules/polys/solvers.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This module provides functions for solving systems of linear equations that
    are used internally in sympy.
  prefs: []
  type: TYPE_NORMAL
- en: Low-level linear systems solver.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Solve a system of linear equations from a PolynomialRing
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**eqs: list[PolyElement]**'
  prefs: []
  type: TYPE_NORMAL
- en: The linear equations to be solved as elements of a PolynomialRing (assumed equal
    to zero).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**ring: PolynomialRing**'
  prefs: []
  type: TYPE_NORMAL
- en: The polynomial ring from which eqs are drawn. The generators of this ring are
    the unknowns to be solved for and the domain of the ring is the domain of the
    coefficients of the system of equations.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**_raw: bool**'
  prefs: []
  type: TYPE_NORMAL
- en: 'If *_raw* is False, the keys and values in the returned dictionary will be
    of type Expr (and the unit of the field will be removed from the keys) otherwise
    the low-level polys types will be returned, e.g. PolyElement: PythonRational.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '`None` if the system has no solution.'
  prefs: []
  type: TYPE_NORMAL
- en: dict[Symbol, Expr] if _raw=False
  prefs: []
  type: TYPE_NORMAL
- en: dict[Symbol, DomainElement] if _raw=True.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: Solves a system of linear equations given as PolyElement instances of a PolynomialRing.
    The basic arithmetic is carried out using instance of DomainElement which is more
    efficient than [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")
    for the most common inputs.
  prefs: []
  type: TYPE_NORMAL
- en: While this is a public function it is intended primarily for internal use so
    its interface is not necessarily convenient. Users are suggested to use the [`sympy.solvers.solveset.linsolve()`](../solvers/solveset.html#sympy.solvers.solveset.linsolve
    "sympy.solvers.solveset.linsolve") function (which uses this function internally)
    instead.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Passing `_raw=False` returns the same result except that the keys are `Expr`
    rather than low-level poly types.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy_eqs_to_ring`](#sympy.polys.solvers.sympy_eqs_to_ring "sympy.polys.solvers.sympy_eqs_to_ring")'
  prefs: []
  type: TYPE_NORMAL
- en: prepares the inputs to `solve_lin_sys`.
  prefs: []
  type: TYPE_NORMAL
- en: '[`linsolve`](../solvers/solveset.html#sympy.solvers.solveset.linsolve "sympy.solvers.solveset.linsolve")'
  prefs: []
  type: TYPE_NORMAL
- en: '`linsolve` uses `solve_lin_sys` internally.'
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.solvers.solvers.solve`](../solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve")'
  prefs: []
  type: TYPE_NORMAL
- en: '`solve` uses `solve_lin_sys` internally.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Get matrix from linear equations in dict format.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**eqs_coeffs: list[dict[Symbol, DomainElement]]**'
  prefs: []
  type: TYPE_NORMAL
- en: The left hand sides of the equations as dicts mapping from symbols to coefficients
    where the coefficients are instances of DomainElement.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**eqs_rhs: list[DomainElements]**'
  prefs: []
  type: TYPE_NORMAL
- en: The right hand sides of the equations as instances of DomainElement.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**gens: list[Symbol]**'
  prefs: []
  type: TYPE_NORMAL
- en: The unknowns in the system of equations.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**domain: Domain**'
  prefs: []
  type: TYPE_NORMAL
- en: The domain for coefficients of both lhs and rhs.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: The augmented matrix representation of the system as a DomainMatrix.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: Get the matrix representation of a system of linear equations represented as
    dicts with low-level DomainElement coefficients. This is an *internal* function
    that is used by solve_lin_sys.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`solve_lin_sys`](#sympy.polys.solvers.solve_lin_sys "sympy.polys.solvers.solve_lin_sys")'
  prefs: []
  type: TYPE_NORMAL
- en: Uses [`eqs_to_matrix()`](#sympy.polys.solvers.eqs_to_matrix "sympy.polys.solvers.eqs_to_matrix")
    internally
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Convert a system of equations from Expr to a PolyRing
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**eqs: List of Expr**'
  prefs: []
  type: TYPE_NORMAL
- en: A list of equations as Expr instances
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**symbols: List of Symbol**'
  prefs: []
  type: TYPE_NORMAL
- en: A list of the symbols that are the unknowns in the system of equations.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Tuple[List[PolyElement], Ring]: The equations as PolyElement instances'
  prefs: []
  type: TYPE_NORMAL
- en: and the ring of polynomials within which each equation is represented.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: High-level functions like `solve` expect Expr as inputs but can use `solve_lin_sys`
    internally. This function converts equations from `Expr` to the low-level poly
    types used by the `solve_lin_sys` function.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'With the equations in this form they can be passed to `solve_lin_sys`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Solve a linear system from dict of PolynomialRing coefficients
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: This is an **internal** function used by [`solve_lin_sys()`](#sympy.polys.solvers.solve_lin_sys
    "sympy.polys.solvers.solve_lin_sys") after the equations have been preprocessed.
    The role of this function is to split the system into connected components and
    pass those to [`_solve_lin_sys_component()`](#sympy.polys.solvers._solve_lin_sys_component
    "sympy.polys.solvers._solve_lin_sys_component").
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Setup a system for \(x-y=0\) and \(x+y=2\) and solve:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`solve_lin_sys`](#sympy.polys.solvers.solve_lin_sys "sympy.polys.solvers.solve_lin_sys")'
  prefs: []
  type: TYPE_NORMAL
- en: This function is used internally by [`solve_lin_sys()`](#sympy.polys.solvers.solve_lin_sys
    "sympy.polys.solvers.solve_lin_sys").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Solve a linear system from dict of PolynomialRing coefficients
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: This is an **internal** function used by [`solve_lin_sys()`](#sympy.polys.solvers.solve_lin_sys
    "sympy.polys.solvers.solve_lin_sys") after the equations have been preprocessed.
    After [`_solve_lin_sys()`](#sympy.polys.solvers._solve_lin_sys "sympy.polys.solvers._solve_lin_sys")
    splits the system into connected components this function is called for each component.
    The system of equations is solved using Gauss-Jordan elimination with division
    followed by back-substitution.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Setup a system for \(x-y=0\) and \(x+y=2\) and solve:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`solve_lin_sys`](#sympy.polys.solvers.solve_lin_sys "sympy.polys.solvers.solve_lin_sys")'
  prefs: []
  type: TYPE_NORMAL
- en: This function is used internally by [`solve_lin_sys()`](#sympy.polys.solvers.solve_lin_sys
    "sympy.polys.solvers.solve_lin_sys").
  prefs: []
  type: TYPE_NORMAL
