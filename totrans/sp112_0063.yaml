- en: scipy.fft.dct
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.fft.dct
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.dct.html#scipy.fft.dct](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.dct.html#scipy.fft.dct)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.dct.html#scipy.fft.dct](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.dct.html#scipy.fft.dct)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Return the Discrete Cosine Transform of arbitrary type sequence x.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 返回任意类型序列`x`的离散余弦变换。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x**array_like'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**类数组'
- en: The input array.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数组。
- en: '**type**{1, 2, 3, 4}, optional'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**type**{1, 2, 3, 4}，可选'
- en: Type of the DCT (see Notes). Default type is 2.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: DCT的类型（见注释）。默认类型为2。
- en: '**n**int, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**，可选'
- en: Length of the transform. If `n < x.shape[axis]`, *x* is truncated. If `n > x.shape[axis]`,
    *x* is zero-padded. The default results in `n = x.shape[axis]`.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 变换的长度。如果`n < x.shape[axis]`，*x* 将被截断。如果`n > x.shape[axis]`，*x* 将被零填充。默认结果为`n
    = x.shape[axis]`。
- en: '**axis**int, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**axis**整数，可选'
- en: Axis along which the dct is computed; the default is over the last axis (i.e.,
    `axis=-1`).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 执行DCT的轴；默认是在最后一个轴上（即，`axis=-1`）。
- en: '**norm**{“backward”, “ortho”, “forward”}, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**norm**{“backward”, “ortho”, “forward”}，可选'
- en: Normalization mode (see Notes). Default is “backward”.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 规范化模式（见注释）。默认为“backward”。
- en: '**overwrite_x**bool, optional'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**overwrite_x**布尔值，可选'
- en: If True, the contents of *x* can be destroyed; the default is False.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为True，则*x*的内容可以被破坏；默认值为False。
- en: '**workers**int, optional'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**workers**整数，可选'
- en: Maximum number of workers to use for parallel computation. If negative, the
    value wraps around from `os.cpu_count()`. See [`fft`](scipy.fft.fft.html#scipy.fft.fft
    "scipy.fft.fft") for more details.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 可以用于并行计算的最大工作人员数。如果为负数，则该值从`os.cpu_count()`中循环。更多详情，请参阅[`fft`](scipy.fft.fft.html#scipy.fft.fft
    "scipy.fft.fft")。
- en: '**orthogonalize**bool, optional'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**orthogonalize**布尔值，可选'
- en: Whether to use the orthogonalized DCT variant (see Notes). Defaults to `True`
    when `norm="ortho"` and `False` otherwise.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 是否使用正交化的DCT变体（见注释）。当`norm="ortho"`时默认为`True`，否则为`False`。
- en: New in version 1.8.0.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 1.8.0版的新功能。
- en: 'Returns:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**y**ndarray of real'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**y**实数的ndarray'
- en: The transformed input array.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 转换后的输入数组。
- en: See also
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`idct`](scipy.fft.idct.html#scipy.fft.idct "scipy.fft.idct")'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[`idct`](scipy.fft.idct.html#scipy.fft.idct "scipy.fft.idct")'
- en: Inverse DCT
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 反向DCT
- en: Notes
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: For a single dimension array `x`, `dct(x, norm='ortho')` is equal to MATLAB
    `dct(x)`.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 对于单维数组`x`，`dct(x, norm='ortho')` 等同于MATLAB中的 `dct(x)`。
- en: Warning
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: For `type in {1, 2, 3}`, `norm="ortho"` breaks the direct correspondence with
    the direct Fourier transform. To recover it you must specify `orthogonalize=False`.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`type in {1, 2, 3}`，`norm="ortho"`打破了直接与直接傅立叶变换的对应关系。要恢复它，您必须指定`orthogonalize=False`。
- en: For `norm="ortho"` both the [`dct`](#scipy.fft.dct "scipy.fft.dct") and [`idct`](scipy.fft.idct.html#scipy.fft.idct
    "scipy.fft.idct") are scaled by the same overall factor in both directions. By
    default, the transform is also orthogonalized which for types 1, 2 and 3 means
    the transform definition is modified to give orthogonality of the DCT matrix (see
    below).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`norm="ortho"`，[`dct`](#scipy.fft.dct "scipy.fft.dct") 和[`idct`](scipy.fft.idct.html#scipy.fft.idct
    "scipy.fft.idct") 在两个方向上都按相同的总因子缩放。默认情况下，转换也是正交的，这意味着对于类型1、2和3，转换定义被修改以给出DCT矩阵的正交性（见下文）。
- en: For `norm="backward"`, there is no scaling on [`dct`](#scipy.fft.dct "scipy.fft.dct")
    and the [`idct`](scipy.fft.idct.html#scipy.fft.idct "scipy.fft.idct") is scaled
    by `1/N` where `N` is the “logical” size of the DCT. For `norm="forward"` the
    `1/N` normalization is applied to the forward [`dct`](#scipy.fft.dct "scipy.fft.dct")
    instead and the [`idct`](scipy.fft.idct.html#scipy.fft.idct "scipy.fft.idct")
    is unnormalized.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`norm="backward"`，[`dct`](#scipy.fft.dct "scipy.fft.dct") 没有缩放，而[`idct`](scipy.fft.idct.html#scipy.fft.idct
    "scipy.fft.idct") 按`1/N`缩放，其中`N`是DCT的“逻辑”大小。对于`norm="forward"`，`1/N`规范化应用于正向的[`dct`](#scipy.fft.dct
    "scipy.fft.dct")，而[`idct`](scipy.fft.idct.html#scipy.fft.idct "scipy.fft.idct")
    是未规范化的。
- en: There are, theoretically, 8 types of the DCT, only the first 4 types are implemented
    in SciPy.’The’ DCT generally refers to DCT type 2, and ‘the’ Inverse DCT generally
    refers to DCT type 3.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 离理论上有8种DCT类型，SciPy仅实现了前4种类型。一般所说的DCT通常指的是DCT类型2，而反向DCT通常指的是DCT类型3。
- en: '**Type I**'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**Type I**'
- en: There are several definitions of the DCT-I; we use the following (for `norm="backward"`)
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: DCT-I有几种定义；我们使用以下定义（对于`norm="backward"`）
- en: \[y_k = x_0 + (-1)^k x_{N-1} + 2 \sum_{n=1}^{N-2} x_n \cos\left( \frac{\pi k
    n}{N-1} \right)\]
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: \[y_k = x_0 + (-1)^k x_{N-1} + 2 \sum_{n=1}^{N-2} x_n \cos\left( \frac{\pi k
    n}{N-1} \right)\]
- en: If `orthogonalize=True`, `x[0]` and `x[N-1]` are multiplied by a scaling factor
    of \(\sqrt{2}\), and `y[0]` and `y[N-1]` are divided by \(\sqrt{2}\). When combined
    with `norm="ortho"`, this makes the corresponding matrix of coefficients orthonormal
    (`O @ O.T = np.eye(N)`).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `orthogonalize=True`，`x[0]` 和 `x[N-1]` 被乘以缩放因子 \(\sqrt{2}\)，而 `y[0]` 和 `y[N-1]`
    被除以 \(\sqrt{2}\)。与 `norm="ortho"` 结合，这使得相应的系数矩阵正交化（`O @ O.T = np.eye(N)`）。
- en: Note
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 注
- en: The DCT-I is only supported for input size > 1.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: DCT-I 仅支持输入大小 > 1。
- en: '**Type II**'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**类型 II**'
- en: There are several definitions of the DCT-II; we use the following (for `norm="backward"`)
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种定义的DCT-II；我们使用以下（用于 `norm="backward"`）
- en: \[y_k = 2 \sum_{n=0}^{N-1} x_n \cos\left(\frac{\pi k(2n+1)}{2N} \right)\]
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: \[y_k = 2 \sum_{n=0}^{N-1} x_n \cos\left(\frac{\pi k(2n+1)}{2N} \right)\]
- en: If `orthogonalize=True`, `y[0]` is divided by \(\sqrt{2}\) which, when combined
    with `norm="ortho"`, makes the corresponding matrix of coefficients orthonormal
    (`O @ O.T = np.eye(N)`).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `orthogonalize=True`，`y[0]` 被 \(\sqrt{2}\) 除以，与 `norm="ortho"` 结合，使相应的系数矩阵正交化（`O
    @ O.T = np.eye(N)`）。
- en: '**Type III**'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**类型 III**'
- en: There are several definitions, we use the following (for `norm="backward"`)
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种定义，我们使用以下（用于 `norm="backward"`）
- en: \[y_k = x_0 + 2 \sum_{n=1}^{N-1} x_n \cos\left(\frac{\pi(2k+1)n}{2N}\right)\]
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: \[y_k = x_0 + 2 \sum_{n=1}^{N-1} x_n \cos\left(\frac{\pi(2k+1)n}{2N}\right)\]
- en: If `orthogonalize=True`, `x[0]` terms are multiplied by \(\sqrt{2}\) which,
    when combined with `norm="ortho"`, makes the corresponding matrix of coefficients
    orthonormal (`O @ O.T = np.eye(N)`).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `orthogonalize=True`，`x[0]` 项被乘以 \(\sqrt{2}\)，与 `norm="ortho"` 结合，使相应的系数矩阵正交化（`O
    @ O.T = np.eye(N)`）。
- en: The (unnormalized) DCT-III is the inverse of the (unnormalized) DCT-II, up to
    a factor *2N*. The orthonormalized DCT-III is exactly the inverse of the orthonormalized
    DCT-II.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: （非归一化的）DCT-III 是（非归一化的）DCT-II 的逆，乘以因子 *2N*。经过正交化的DCT-III恰好是正交化的DCT-II的逆。
- en: '**Type IV**'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**类型 IV**'
- en: There are several definitions of the DCT-IV; we use the following (for `norm="backward"`)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种定义的DCT-IV；我们使用以下（用于 `norm="backward"`）
- en: \[y_k = 2 \sum_{n=0}^{N-1} x_n \cos\left(\frac{\pi(2k+1)(2n+1)}{4N} \right)\]
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: \[y_k = 2 \sum_{n=0}^{N-1} x_n \cos\left(\frac{\pi(2k+1)(2n+1)}{4N} \right)\]
- en: '`orthogonalize` has no effect here, as the DCT-IV matrix is already orthogonal
    up to a scale factor of `2N`.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`orthogonalize` 在这里没有效果，因为DCT-IV矩阵已经在缩放因子 `2N` 的范围内是正交的。'
- en: References
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1]'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[1]'
- en: ‘A Fast Cosine Transform in One and Two Dimensions’, by J. Makhoul, *IEEE Transactions
    on acoustics, speech and signal processing* vol. 28(1), pp. 27-34, [DOI:10.1109/TASSP.1980.1163351](https://doi.org/10.1109/TASSP.1980.1163351)
    (1980).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: ‘一维和二维快速余弦变换’, 作者 J. Makhoul, *IEEE Transactions on acoustics, speech and signal
    processing* vol. 28(1), pp. 27-34, [DOI:10.1109/TASSP.1980.1163351](https://doi.org/10.1109/TASSP.1980.1163351)
    (1980).
- en: '[2]'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '[2]'
- en: Wikipedia, “Discrete cosine transform”, [https://en.wikipedia.org/wiki/Discrete_cosine_transform](https://en.wikipedia.org/wiki/Discrete_cosine_transform)
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 维基百科，“离散余弦变换”，[https://en.wikipedia.org/wiki/Discrete_cosine_transform](https://en.wikipedia.org/wiki/Discrete_cosine_transform)
- en: Examples
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'The Type 1 DCT is equivalent to the FFT (though faster) for real, even-symmetrical
    inputs. The output is also real and even-symmetrical. Half of the FFT input is
    used to generate half of the FFT output:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 类型 1 DCT 对于实数、偶对称输入等效于FFT（但更快）。输出也是实数且偶对称的。FFT 输入的一半用于生成FFT 输出的一半：
- en: '[PRE1]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
