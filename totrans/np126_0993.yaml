- en: numpy.extract
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.extract.html](https://numpy.org/doc/1.26/reference/generated/numpy.extract.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return the elements of an array that satisfy some condition.
  prefs: []
  type: TYPE_NORMAL
- en: This is equivalent to `np.compress(ravel(condition), ravel(arr))`. If *condition*
    is boolean `np.extract` is equivalent to `arr[condition]`.
  prefs: []
  type: TYPE_NORMAL
- en: Note that [`place`](numpy.place.html#numpy.place "numpy.place") does the exact
    opposite of [`extract`](#numpy.extract "numpy.extract").
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**condition**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: An array whose nonzero or True entries indicate the elements of *arr* to extract.
  prefs: []
  type: TYPE_NORMAL
- en: '**arr**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input array of the same size as *condition*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**extract**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Rank 1 array of values from *arr* where *condition* is True.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`take`](numpy.take.html#numpy.take "numpy.take"), [`put`](numpy.put.html#numpy.put
    "numpy.put"), [`copyto`](numpy.copyto.html#numpy.copyto "numpy.copyto"), [`compress`](numpy.compress.html#numpy.compress
    "numpy.compress"), [`place`](numpy.place.html#numpy.place "numpy.place")'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'If *condition* is boolean:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
