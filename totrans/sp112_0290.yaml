- en: scipy.linalg.ordqz
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.linalg.ordqz
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.ordqz.html#scipy.linalg.ordqz](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.ordqz.html#scipy.linalg.ordqz)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.ordqz.html#scipy.linalg.ordqz](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.ordqz.html#scipy.linalg.ordqz)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: QZ decomposition for a pair of matrices with reordering.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 用于一对重新排序矩阵的 QZ 分解。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**A**(N, N) array_like'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**A**(N, N) array_like'
- en: 2-D array to decompose
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 2-D 数组进行分解
- en: '**B**(N, N) array_like'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**B**(N, N) array_like'
- en: 2-D array to decompose
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 2-D 数组进行分解
- en: '**sort**{callable, ‘lhp’, ‘rhp’, ‘iuc’, ‘ouc’}, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**sort**{callable，''lhp''，''rhp''，''iuc''，''ouc''}，可选'
- en: 'Specifies whether the upper eigenvalues should be sorted. A callable may be
    passed that, given an ordered pair `(alpha, beta)` representing the eigenvalue
    `x = (alpha/beta)`, returns a boolean denoting whether the eigenvalue should be
    sorted to the top-left (True). For the real matrix pairs `beta` is real while
    `alpha` can be complex, and for complex matrix pairs both `alpha` and `beta` can
    be complex. The callable must be able to accept a NumPy array. Alternatively,
    string parameters may be used:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 指定是否应对上部特征值进行排序。可以传递一个可调用函数，给定一个有序对 `(alpha, beta)` 表示特征值 `x = (alpha/beta)`，返回一个布尔值，表示是否应将特征值排序到左上角（True）。对于实矩阵对，beta
    是实数，而 alpha 可以是复数；对于复杂矩阵对，alpha 和 beta 都可以是复数。该可调用函数必须能够接受一个 NumPy 数组。另外，也可以使用字符串参数：
- en: ‘lhp’ Left-hand plane (x.real < 0.0)
  id: totrans-11
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘lhp’ 左半平面（x.real < 0.0）
- en: ''
  id: totrans-12
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-13
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ‘rhp’ Right-hand plane (x.real > 0.0)
  id: totrans-14
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘rhp’ 右半平面（x.real > 0.0）
- en: ''
  id: totrans-15
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-16
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ‘iuc’ Inside the unit circle (x*x.conjugate() < 1.0)
  id: totrans-17
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘iuc’ 单位圆内（x*x.conjugate() < 1.0）
- en: ''
  id: totrans-18
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-19
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ‘ouc’ Outside the unit circle (x*x.conjugate() > 1.0)
  id: totrans-20
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘ouc’ 单位圆外（x*x.conjugate() > 1.0）
- en: With the predefined sorting functions, an infinite eigenvalue (i.e., `alpha
    != 0` and `beta = 0`) is considered to lie in neither the left-hand nor the right-hand
    plane, but it is considered to lie outside the unit circle. For the eigenvalue
    `(alpha, beta) = (0, 0)`, the predefined sorting functions all return *False*.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 使用预定义的排序函数，无穷特征值（即 `alpha != 0` 且 `beta = 0`）被认为既不位于左半平面也不位于右半平面，但被认为位于单位圆外。对于特征值
    `(alpha, beta) = (0, 0)`，预定义的排序函数都返回 *False*。
- en: '**output**str {‘real’,’complex’}, optional'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**output**str {''real''，''complex''}，可选'
- en: Construct the real or complex QZ decomposition for real matrices. Default is
    ‘real’.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 构造实数或复数 QZ 分解的真实矩阵。默认为 'real'。
- en: '**overwrite_a**bool, optional'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**overwrite_a**bool, optional'
- en: If True, the contents of A are overwritten.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为真，则覆盖 A 的内容。
- en: '**overwrite_b**bool, optional'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**overwrite_b**bool, optional'
- en: If True, the contents of B are overwritten.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为真，则覆盖 B 的内容。
- en: '**check_finite**bool, optional'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**check_finite**bool, optional'
- en: If true checks the elements of *A* and *B* are finite numbers. If false does
    no checking and passes matrix through to underlying algorithm.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为真，则检查 *A* 和 *B* 的元素是否为有限数。如果为假，则不进行检查并将矩阵传递给底层算法。
- en: 'Returns:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**AA**(N, N) ndarray'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**AA**(N, N) ndarray'
- en: Generalized Schur form of A.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: A 的广义舒尔形式。
- en: '**BB**(N, N) ndarray'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**BB**(N, N) ndarray'
- en: Generalized Schur form of B.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: B 的广义舒尔形式。
- en: '**alpha**(N,) ndarray'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**alpha**(N,) ndarray'
- en: alpha = alphar + alphai * 1j. See notes.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: alpha = alphar + alphai * 1j。请参阅备注。
- en: '**beta**(N,) ndarray'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**beta**(N,) ndarray'
- en: See notes.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅备注。
- en: '**Q**(N, N) ndarray'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**Q**(N, N) ndarray'
- en: The left Schur vectors.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 左舒尔向量。
- en: '**Z**(N, N) ndarray'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**Z**(N, N) ndarray'
- en: The right Schur vectors.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 右舒尔向量。
- en: See also
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`qz`](scipy.linalg.qz.html#scipy.linalg.qz "scipy.linalg.qz")'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[`qz`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.qz.html#scipy.linalg.qz
    "scipy.linalg.qz")'
- en: Notes
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 备注
- en: On exit, `(ALPHAR(j) + ALPHAI(j)*i)/BETA(j), j=1,...,N`, will be the generalized
    eigenvalues. `ALPHAR(j) + ALPHAI(j)*i` and `BETA(j),j=1,...,N` are the diagonals
    of the complex Schur form (S,T) that would result if the 2-by-2 diagonal blocks
    of the real generalized Schur form of (A,B) were further reduced to triangular
    form using complex unitary transformations. If ALPHAI(j) is zero, then the jth
    eigenvalue is real; if positive, then the `j`th and `(j+1)`st eigenvalues are
    a complex conjugate pair, with `ALPHAI(j+1)` negative.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在退出时，`(ALPHAR(j) + ALPHAI(j)*i)/BETA(j), j=1,...,N`，将是广义特征值。 `ALPHAR(j) + ALPHAI(j)*i`
    和 `BETA(j),j=1,...,N` 是复杂舒尔形式（S，T）的对角线，如果实广义舒尔形式（A，B）的 2×2 对角块进一步通过复杂酉变换化为三角形式，则结果如此。如果
    ALPHAI(j) 为零，则第 j 个特征值为实数；如果为正，则第 `j` 个和 `(j+1)` 个特征值为复共轭对，其中 `ALPHAI(j+1)` 为负数。
- en: New in version 0.17.0.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 自版本 0.17.0 起新增。
- en: Examples
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Since we have sorted for left half plane eigenvalues, negatives come first
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已对左半平面特征值进行了排序，负值首先出现
- en: '[PRE2]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
