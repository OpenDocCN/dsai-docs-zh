- en: scipy.signal.filtfilt
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.signal.filtfilt
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.filtfilt.html#scipy.signal.filtfilt](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.filtfilt.html#scipy.signal.filtfilt)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.filtfilt.html#scipy.signal.filtfilt](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.filtfilt.html#scipy.signal.filtfilt)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Apply a digital filter forward and backward to a signal.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对信号应用线性数字滤波器，向前和向后。
- en: This function applies a linear digital filter twice, once forward and once backwards.
    The combined filter has zero phase and a filter order twice that of the original.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数对信号应用线性数字滤波器两次，一次向前，一次向后。组合的滤波器具有零相位和原始滤波器两倍的滤波器阶数。
- en: The function provides options for handling the edges of the signal.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数提供处理信号边缘的选项。
- en: The function [`sosfiltfilt`](scipy.signal.sosfiltfilt.html#scipy.signal.sosfiltfilt
    "scipy.signal.sosfiltfilt") (and filter design using `output='sos'`) should be
    preferred over [`filtfilt`](#scipy.signal.filtfilt "scipy.signal.filtfilt") for
    most filtering tasks, as second-order sections have fewer numerical problems.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 函数 [`sosfiltfilt`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.sosfiltfilt.html#scipy.signal.sosfiltfilt)（和使用
    `output='sos'` 进行滤波器设计）应优先于 [`filtfilt`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.filtfilt.html#scipy.signal.filtfilt)
    用于大多数滤波任务，因为二阶段节省去了更多的数值问题。
- en: 'Parameters:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '参数:'
- en: '**b**(N,) array_like'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**b**(N,) array_like'
- en: The numerator coefficient vector of the filter.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤器的分子系数向量。
- en: '**a**(N,) array_like'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**(N,) array_like'
- en: The denominator coefficient vector of the filter. If `a[0]` is not 1, then both
    *a* and *b* are normalized by `a[0]`.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤器的分母系数向量。如果 `a[0]` 不为 1，则 *a* 和 *b* 都将被 `a[0]` 归一化。
- en: '**x**array_like'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**array_like'
- en: The array of data to be filtered.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 需要过滤的数据数组。
- en: '**axis**int, optional'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**axis**int, 可选'
- en: The axis of *x* to which the filter is applied. Default is -1.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要应用滤波器的 *x* 的轴。默认为 -1。
- en: '**padtype**str or None, optional'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**padtype**str 或 None, 可选'
- en: Must be ‘odd’, ‘even’, ‘constant’, or None. This determines the type of extension
    to use for the padded signal to which the filter is applied. If *padtype* is None,
    no padding is used. The default is ‘odd’.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 必须是 'odd', 'even', 'constant' 或 None。这决定了要应用滤波器的填充信号的扩展类型。如果 *padtype* 是 None，则不使用填充。默认值为
    'odd'。
- en: '**padlen**int or None, optional'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**padlen**int 或 None, 可选'
- en: The number of elements by which to extend *x* at both ends of *axis* before
    applying the filter. This value must be less than `x.shape[axis] - 1`. `padlen=0`
    implies no padding. The default value is `3 * max(len(a), len(b))`.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *x* 的两端的 *axis* 扩展元素的数量。此值必须小于 `x.shape[axis] - 1`。 `padlen=0` 表示不填充。默认值为
    `3 * max(len(a), len(b))`。
- en: '**method**str, optional'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**method**str, 可选'
- en: Determines the method for handling the edges of the signal, either “pad” or
    “gust”. When *method* is “pad”, the signal is padded; the type of padding is determined
    by *padtype* and *padlen*, and *irlen* is ignored. When *method* is “gust”, Gustafsson’s
    method is used, and *padtype* and *padlen* are ignored.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 决定信号边缘处理方法的方法，可以是 “pad” 或 “gust”。当 *method* 是 “pad” 时，信号被填充；填充的类型由 *padtype*
    和 *padlen* 决定，*irlen* 被忽略。当 *method* 是 “gust” 时，使用 Gustafsson 方法，*padtype* 和 *padlen*
    被忽略。
- en: '**irlen**int or None, optional'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**irlen**int 或 None, 可选'
- en: When *method* is “gust”, *irlen* specifies the length of the impulse response
    of the filter. If *irlen* is None, no part of the impulse response is ignored.
    For a long signal, specifying *irlen* can significantly improve the performance
    of the filter.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 当 *method* 是 “gust” 时，*irlen* 指定滤波器的脉冲响应长度。如果 *irlen* 是 None，则不会忽略脉冲响应的任何部分。对于长信号，指定
    *irlen* 可显著改善滤波器的性能。
- en: 'Returns:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '返回:'
- en: '**y**ndarray'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**y**ndarray'
- en: The filtered output with the same shape as *x*.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 输出的滤波后的形状与 *x* 相同。
- en: See also
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sosfiltfilt`](scipy.signal.sosfiltfilt.html#scipy.signal.sosfiltfilt "scipy.signal.sosfiltfilt"),
    [`lfilter_zi`](scipy.signal.lfilter_zi.html#scipy.signal.lfilter_zi "scipy.signal.lfilter_zi"),
    [`lfilter`](scipy.signal.lfilter.html#scipy.signal.lfilter "scipy.signal.lfilter"),
    [`lfiltic`](scipy.signal.lfiltic.html#scipy.signal.lfiltic "scipy.signal.lfiltic"),
    [`savgol_filter`](scipy.signal.savgol_filter.html#scipy.signal.savgol_filter "scipy.signal.savgol_filter"),
    [`sosfilt`](scipy.signal.sosfilt.html#scipy.signal.sosfilt "scipy.signal.sosfilt")'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sosfiltfilt`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.sosfiltfilt.html#scipy.signal.sosfiltfilt
    "scipy.signal.sosfiltfilt"), [`lfilter_zi`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lfilter_zi.html#scipy.signal.lfilter_zi
    "scipy.signal.lfilter_zi"), [`lfilter`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lfilter.html#scipy.signal.lfilter
    "scipy.signal.lfilter"), [`lfiltic`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lfiltic.html#scipy.signal.lfiltic
    "scipy.signal.lfiltic"), [`savgol_filter`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.savgol_filter.html#scipy.signal.savgol_filter
    "scipy.signal.savgol_filter"), [`sosfilt`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.sosfilt.html#scipy.signal.sosfilt
    "scipy.signal.sosfilt")'
- en: Notes
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'When *method* is “pad”, the function pads the data along the given axis in
    one of three ways: odd, even or constant. The odd and even extensions have the
    corresponding symmetry about the end point of the data. The constant extension
    extends the data with the values at the end points. On both the forward and backward
    passes, the initial condition of the filter is found by using [`lfilter_zi`](scipy.signal.lfilter_zi.html#scipy.signal.lfilter_zi
    "scipy.signal.lfilter_zi") and scaling it by the end point of the extended data.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当 *method* 为 “pad” 时，函数在给定的轴上以三种方式之一填充数据：奇数、偶数或常数。奇数和偶数扩展在数据端点处具有相应的对称性。常数扩展使用端点处的值延伸数据。在前向和后向传递中，滤波器的初始条件通过使用
    [`lfilter_zi`](scipy.signal.lfilter_zi.html#scipy.signal.lfilter_zi "scipy.signal.lfilter_zi")
    找到，并通过扩展数据的端点进行缩放。
- en: When *method* is “gust”, Gustafsson’s method [[1]](#r10879a509a76-1) is used.
    Initial conditions are chosen for the forward and backward passes so that the
    forward-backward filter gives the same result as the backward-forward filter.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当 *method* 为 “gust” 时，使用 Gustafsson 方法 [[1]](#r10879a509a76-1)。选择前向和后向传递的初始条件，以便前后向滤波器给出与后前向滤波器相同的结果。
- en: The option to use Gustaffson’s method was added in scipy version 0.16.0.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在 scipy 版本 0.16.0 中添加了使用 Gustaffson 方法的选项。
- en: References
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[1](#id1)]'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[[1](#id1)]'
- en: F. Gustaffson, “Determining the initial states in forward-backward filtering”,
    Transactions on Signal Processing, Vol. 46, pp. 988-992, 1996.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: F. Gustaffson，“确定前向-后向滤波中的初始状态”，信号处理交易，Vol. 46，pp. 988-992，1996。
- en: Examples
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: The examples will use several functions from [`scipy.signal`](../signal.html#module-scipy.signal
    "scipy.signal").
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 示例将使用 [`scipy.signal`](../signal.html#module-scipy.signal "scipy.signal") 中的多个函数。
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: First we create a one second signal that is the sum of two pure sine waves,
    with frequencies 5 Hz and 250 Hz, sampled at 2000 Hz.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们创建一个持续一秒钟的信号，这个信号是两个纯正弦波（频率分别为 5 Hz 和 250 Hz）的和，采样率为 2000 Hz。
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now create a lowpass Butterworth filter with a cutoff of 0.125 times the Nyquist
    frequency, or 125 Hz, and apply it to `x` with [`filtfilt`](#scipy.signal.filtfilt
    "scipy.signal.filtfilt"). The result should be approximately `xlow`, with no phase
    shift.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在创建一个低通巴特沃斯滤波器，截止频率为 0.125 倍的奈奎斯特频率，即 125 Hz，并用 [`filtfilt`](#scipy.signal.filtfilt
    "scipy.signal.filtfilt") 应用于 `x`。结果应该是近似于 `xlow`，没有相移。
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We get a fairly clean result for this artificial example because the odd extension
    is exact, and with the moderately long padding, the filter’s transients have dissipated
    by the time the actual data is reached. In general, transient effects at the edges
    are unavoidable.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个人工示例，我们得到了一个相当干净的结果，因为奇数扩展是精确的，并且通过适度长的填充，滤波器的瞬态效应在实际数据到达时已经消失。一般来说，边缘处的瞬态效应是不可避免的。
- en: The following example demonstrates the option `method="gust"`.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的示例演示了选项 `method="gust"`。
- en: First, create a filter.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，创建一个滤波器。
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '*sig* is a random input signal to be filtered.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '*sig* 是一个要进行滤波的随机输入信号。'
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Apply [`filtfilt`](#scipy.signal.filtfilt "scipy.signal.filtfilt") to *sig*,
    once using the Gustafsson method, and once using padding, and plot the results
    for comparison.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 分别对 *sig* 应用 [`filtfilt`](#scipy.signal.filtfilt "scipy.signal.filtfilt")，一次使用
    Gustafsson 方法，一次使用填充，并绘制结果进行比较。
- en: '[PRE6]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![../../_images/scipy-signal-filtfilt-1_00_00.png](../Images/7094dc8e2e627f6d89567358db9bada3.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-signal-filtfilt-1_00_00.png](../Images/7094dc8e2e627f6d89567358db9bada3.png)'
- en: The *irlen* argument can be used to improve the performance of Gustafsson’s
    method.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '*irlen* 参数可用于改善 Gustafsson 方法的性能。'
- en: Estimate the impulse response length of the filter.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 估计滤波器的脉冲响应长度。
- en: '[PRE7]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Apply the filter to a longer signal, with and without the *irlen* argument.
    The difference between *y1* and *y2* is small. For long signals, using *irlen*
    gives a significant performance improvement.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 对较长的信号应用滤波器，有或没有 *irlen* 参数。*y1* 和 *y2* 之间的差异很小。对于长信号，使用 *irlen* 可显著提高性能。
- en: '[PRE8]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
