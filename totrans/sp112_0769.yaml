- en: scipy.special.yn
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.yn.html#scipy.special.yn](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.yn.html#scipy.special.yn)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Bessel function of the second kind of integer order and real argument.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**n**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Order (integer).
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Argument (float).
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Optional output array for the function results
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Y**scalar or ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Value of the Bessel function, \(Y_n(x)\).
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`yv`](scipy.special.yv.html#scipy.special.yv "scipy.special.yv")'
  prefs: []
  type: TYPE_NORMAL
- en: For real order and real or complex argument.
  prefs: []
  type: TYPE_NORMAL
- en: '[`y0`](scipy.special.y0.html#scipy.special.y0 "scipy.special.y0")'
  prefs: []
  type: TYPE_NORMAL
- en: faster implementation of this function for order 0
  prefs: []
  type: TYPE_NORMAL
- en: '[`y1`](scipy.special.y1.html#scipy.special.y1 "scipy.special.y1")'
  prefs: []
  type: TYPE_NORMAL
- en: faster implementation of this function for order 1
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Wrapper for the Cephes [[1]](#r4599b7086da2-1) routine [`yn`](#scipy.special.yn
    "scipy.special.yn").
  prefs: []
  type: TYPE_NORMAL
- en: The function is evaluated by forward recurrence on *n*, starting with values
    computed by the Cephes routines [`y0`](scipy.special.y0.html#scipy.special.y0
    "scipy.special.y0") and [`y1`](scipy.special.y1.html#scipy.special.y1 "scipy.special.y1").
    If *n = 0* or 1, the routine for [`y0`](scipy.special.y0.html#scipy.special.y0
    "scipy.special.y0") or [`y1`](scipy.special.y1.html#scipy.special.y1 "scipy.special.y1")
    is called directly.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: Cephes Mathematical Functions Library, [http://www.netlib.org/cephes/](http://www.netlib.org/cephes/)
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Evaluate the function of order 0 at one point.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Evaluate the function at one point for different orders.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The evaluation for different orders can be carried out in one call by providing
    a list or NumPy array as argument for the *v* parameter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Evaluate the function at several points for order 0 by providing an array for
    *z*.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'If *z* is an array, the order parameter *v* must be broadcastable to the correct
    shape if different orders shall be computed in one call. To calculate the orders
    0 and 1 for an 1D array:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Plot the functions of order 0 to 3 from 0 to 10.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-special-yn-1.png](../Images/ba047d67d4cb07cd487af243398eff46.png)'
  prefs: []
  type: TYPE_IMG
