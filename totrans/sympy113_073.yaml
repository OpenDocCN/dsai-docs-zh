- en: Elementary
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本
- en: Original text：[https://docs.sympy.org/latest/modules/functions/elementary.html](https://docs.sympy.org/latest/modules/functions/elementary.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.sympy.org/latest/modules/functions/elementary.html](https://docs.sympy.org/latest/modules/functions/elementary.html)
- en: This module implements elementary functions such as trigonometric, hyperbolic,
    and sqrt, as well as functions like `Abs`, `Max`, `Min` etc.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块实现了如三角函数、双曲函数、平方根等基本函数，以及诸如`Abs`、`Max`、`Min`等函数。
- en: Complex Functions
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 复数函数
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Returns real part of expression. This function performs only elementary analysis
    and so it will fail to decompose properly more complicated expressions. If completely
    simplified result is needed then use `Basic.as_real_imag()` or perform complex
    expansion on instance of this function.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 返回表达式的实部。此函数仅执行基本分析，因此无法正确分解更复杂的表达式。如果需要完全简化的结果，则使用`Basic.as_real_imag()`或在此函数实例上执行复杂展开。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**arg** : Expr'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**arg** : 表达式'
- en: Real or complex expression.
  id: totrans-8
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 实数或复数表达式。
- en: 'Returns:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**expr** : Expr'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**expr** : 表达式'
- en: Real part of expression.
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 表达式的实部。
- en: Examples
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: See also
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`im`](#sympy.functions.elementary.complexes.im "sympy.functions.elementary.complexes.im")'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[`im`](#sympy.functions.elementary.complexes.im "sympy.functions.elementary.complexes.im")'
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Returns the real number with a zero imaginary part.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 返回具有零虚部的实数。
- en: '[PRE3]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Returns imaginary part of expression. This function performs only elementary
    analysis and so it will fail to decompose properly more complicated expressions.
    If completely simplified result is needed then use `Basic.as_real_imag()` or perform
    complex expansion on instance of this function.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 返回表达式的虚部。此函数仅执行基本分析，因此无法正确分解更复杂的表达式。如果需要完全简化的结果，则使用`Basic.as_real_imag()`或在此函数实例上执行复杂展开。
- en: 'Parameters:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**arg** : Expr'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**arg** : 表达式'
- en: Real or complex expression.
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 实数或复数表达式。
- en: 'Returns:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**expr** : Expr'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**expr** : 表达式'
- en: Imaginary part of expression.
  id: totrans-25
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 表达式的虚部。
- en: Examples
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: See also
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`re`](#sympy.functions.elementary.complexes.re "sympy.functions.elementary.complexes.re")'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[`re`](#sympy.functions.elementary.complexes.re "sympy.functions.elementary.complexes.re")'
- en: '[PRE5]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Return the imaginary part with a zero real part.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 返回具有零实部的虚部。
- en: '[PRE6]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Returns the complex sign of an expression:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 返回表达式的复数符号：
- en: 'Parameters:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**arg** : Expr'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**arg** : 表达式'
- en: Real or imaginary expression.
  id: totrans-36
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 实数或虚数表达式。
- en: 'Returns:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**expr** : Expr'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**expr** : 表达式'
- en: Complex sign of expression.
  id: totrans-39
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 表达式的复数符号。
- en: Explanation
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'If the expression is real the sign will be:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果表达式为实数，则符号将为：
- en: \(1\) if expression is positive
  id: totrans-42
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果表达式为正则返回\(1\)。
- en: ''
  id: totrans-43
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-44
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: \(0\) if expression is equal to zero
  id: totrans-45
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果表达式等于零则返回\(0\)。
- en: ''
  id: totrans-46
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-47
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: \(-1\) if expression is negative
  id: totrans-48
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果表达式为负则返回\(-1\)。
- en: 'If the expression is imaginary the sign will be:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果表达式为虚数，则符号将为：
- en: \(I\) if im(expression) is positive
  id: totrans-50
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果im(expression)为正则返回\(I\)。
- en: ''
  id: totrans-51
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-52
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: \(-I\) if im(expression) is negative
  id: totrans-53
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果im(expression)为负则返回\(-I\)。
- en: Otherwise an unevaluated expression will be returned. When evaluated, the result
    (in general) will be `cos(arg(expr)) + I*sin(arg(expr))`.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 否则将返回未评估的表达式。一般情况下，当评估时，结果将是`cos(arg(expr)) + I*sin(arg(expr))`。
- en: Examples
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE7]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: See also
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`Abs`](#sympy.functions.elementary.complexes.Abs "sympy.functions.elementary.complexes.Abs"),
    [`conjugate`](#sympy.functions.elementary.complexes.conjugate "sympy.functions.elementary.complexes.conjugate")'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Abs`](#sympy.functions.elementary.complexes.Abs "sympy.functions.elementary.complexes.Abs"),
    [`conjugate`](#sympy.functions.elementary.complexes.conjugate "sympy.functions.elementary.complexes.conjugate")'
- en: '[PRE9]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Return the absolute value of the argument.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 返回参数的绝对值。
- en: 'Parameters:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**arg** : Expr'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**arg** : 表达式'
- en: Real or complex expression.
  id: totrans-64
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 实数或复数表达式。
- en: 'Returns:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**expr** : Expr'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**expr** : 表达式'
- en: Absolute value returned can be an expression or integer depending on input arg.
  id: totrans-67
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回的绝对值可以是表达式或整数，取决于输入参数。
- en: Explanation
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This is an extension of the built-in function `abs()` to accept symbolic values.
    If you pass a SymPy expression to the built-in `abs()`, it will pass it automatically
    to `Abs()`.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这是内置函数`abs()`的扩展，接受符号值。如果将SymPy表达式传递给内置的`abs()`，它将自动传递给`Abs()`。
- en: Examples
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE10]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Note that the Python built-in will return either an Expr or int depending on
    the argument:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 注意Python内置函数将根据参数返回Expr或int：
- en: '[PRE11]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Abs will always return a SymPy object.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Abs将始终返回一个SymPy对象。
- en: See also
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sign`](#sympy.functions.elementary.complexes.sign "sympy.functions.elementary.complexes.sign"),
    [`conjugate`](#sympy.functions.elementary.complexes.conjugate "sympy.functions.elementary.complexes.conjugate")'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sign`](#sympy.functions.elementary.complexes.sign "sympy.functions.elementary.complexes.sign"),
    [`conjugate`](#sympy.functions.elementary.complexes.conjugate "sympy.functions.elementary.complexes.conjugate")'
- en: '[PRE12]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Get the first derivative of the argument to Abs().
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 获取参数对Abs()的第一阶导数。
- en: '[PRE13]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Returns the argument (in radians) of a complex number. The argument is evaluated
    in consistent convention with `atan2` where the branch-cut is taken along the
    negative real axis and `arg(z)` is in the interval \((-\pi,\pi]\). For a positive
    number, the argument is always 0; the argument of a negative number is \(\pi\);
    and the argument of 0 is undefined and returns `nan`. So the `arg` function will
    never nest greater than 3 levels since at the 4th application, the result must
    be nan; for a real number, nan is returned on the 3rd application.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 返回复数的参数（弧度）。参数按照`atan2`的一致约定进行评估，其中分支切割沿负实轴进行，`arg(z)`在区间\((-\pi,\pi]\)内。对于正数，参数始终为0；负数的参数为\(\pi\)；0的参数未定义且返回`nan`。因此，`arg`函数永远不会嵌套超过3层，因为在第4次应用时，结果必须为nan；对于实数，在第3次应用时返回nan。
- en: 'Parameters:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**arg** : Expr'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**arg**：Expr'
- en: Real or complex expression.
  id: totrans-83
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 实数或复数表达式。
- en: 'Returns:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**value** : Expr'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**value**：Expr'
- en: Returns arc tangent of arg measured in radians.
  id: totrans-86
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回以弧度测量的arg的反正切。
- en: Examples
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE14]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Returns the *complex conjugate* [[R276]](#r276) of an argument. In mathematics,
    the complex conjugate of a complex number is given by changing the sign of the
    imaginary part.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 返回*复共轭*[[R276]](#r276)的参数。在数学中，复数的复共轭是通过改变虚部的符号得到的。
- en: Thus, the conjugate of the complex number \(a + ib\) (where \(a\) and \(b\)
    are real numbers) is \(a - ib\)
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，复数\(a + ib\)（其中\(a\)和\(b\)为实数）的共轭是\(a - ib\)
- en: 'Parameters:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**arg** : Expr'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**arg**：Expr'
- en: Real or complex expression.
  id: totrans-94
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 实数或复数表达式。
- en: 'Returns:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**arg** : Expr'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**arg**：Expr'
- en: Complex conjugate of arg as real, imaginary or mixed expression.
  id: totrans-97
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: arg的复共轭作为实数、虚数或混合表达式。
- en: Examples
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE16]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: See also
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sign`](#sympy.functions.elementary.complexes.sign "sympy.functions.elementary.complexes.sign"),
    [`Abs`](#sympy.functions.elementary.complexes.Abs "sympy.functions.elementary.complexes.Abs")'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sign`](#sympy.functions.elementary.complexes.sign "sympy.functions.elementary.complexes.sign"),
    [`Abs`](#sympy.functions.elementary.complexes.Abs "sympy.functions.elementary.complexes.Abs")'
- en: References
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[R276] ([1](#id1),[2](#id2))'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '[R276] ([1](#id1),[2](#id2))'
- en: '[https://en.wikipedia.org/wiki/Complex_conjugation](https://en.wikipedia.org/wiki/Complex_conjugation)'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Complex_conjugation](https://en.wikipedia.org/wiki/Complex_conjugation)'
- en: '[PRE17]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Lift argument to the Riemann surface of the logarithm, using the standard branch.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 将参数提升到对数的黎曼面，使用标准分支。
- en: 'Parameters:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**arg** : Expr'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**arg**：Expr'
- en: Real or complex expression.
  id: totrans-109
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 实数或复数表达式。
- en: Examples
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE18]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: See also
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sympy.functions.elementary.exponential.exp_polar`](#sympy.functions.elementary.exponential.exp_polar
    "sympy.functions.elementary.exponential.exp_polar"), [`periodic_argument`](#sympy.functions.elementary.complexes.periodic_argument
    "sympy.functions.elementary.complexes.periodic_argument")'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.functions.elementary.exponential.exp_polar`](#sympy.functions.elementary.exponential.exp_polar
    "sympy.functions.elementary.exponential.exp_polar"), [`periodic_argument`](#sympy.functions.elementary.complexes.periodic_argument
    "sympy.functions.elementary.complexes.periodic_argument")'
- en: '[PRE20]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Represent the argument on a quotient of the Riemann surface of the logarithm.
    That is, given a period \(P\), always return a value in \((-P/2, P/2]\), by using
    \(\exp(PI) = 1\).
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 表示在对数的黎曼面的商上的参数。也就是说，给定一个周期\(P\)，始终返回\((-P/2, P/2]\)内的值，通过使用\(\exp(PI) = 1\)。
- en: 'Parameters:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**ar** : Expr'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '**ar**：Expr'
- en: A polar number.
  id: totrans-119
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 极坐标数。
- en: '**period** : Expr'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '**period**：Expr'
- en: The period \(P\).
  id: totrans-121
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 周期\(P\)。
- en: Examples
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE21]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: See also
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sympy.functions.elementary.exponential.exp_polar`](#sympy.functions.elementary.exponential.exp_polar
    "sympy.functions.elementary.exponential.exp_polar")'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.functions.elementary.exponential.exp_polar`](#sympy.functions.elementary.exponential.exp_polar
    "sympy.functions.elementary.exponential.exp_polar")'
- en: '[`polar_lift`](#sympy.functions.elementary.complexes.polar_lift "sympy.functions.elementary.complexes.polar_lift")'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '[`polar_lift`](#sympy.functions.elementary.complexes.polar_lift "sympy.functions.elementary.complexes.polar_lift")'
- en: Lift argument to the Riemann surface of the logarithm
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 将参数提升到对数的黎曼面
- en: '[`principal_branch`](#sympy.functions.elementary.complexes.principal_branch
    "sympy.functions.elementary.complexes.principal_branch")'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '[`principal_branch`](#sympy.functions.elementary.complexes.principal_branch
    "sympy.functions.elementary.complexes.principal_branch")'
- en: '[PRE22]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Represent a polar number reduced to its principal branch on a quotient of the
    Riemann surface of the logarithm.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 表示在对数的黎曼面的商上的主分支的极坐标数。
- en: 'Parameters:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x** : Expr'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**：Expr'
- en: A polar number.
  id: totrans-133
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 极坐标数。
- en: '**period** : Expr'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '**period**：Expr'
- en: Positive real number or infinity.
  id: totrans-135
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 正实数或无穷大。
- en: Explanation
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This is a function of two arguments. The first argument is a polar number \(z\),
    and the second one a positive real number or infinity, \(p\). The result is `z
    mod exp_polar(I*p)`.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个两个参数的函数。第一个参数是极坐标数 \(z\)，第二个是正实数或无穷大，\(p\)。结果是 `z mod exp_polar(I*p)`。
- en: Examples
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE23]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: See also
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.functions.elementary.exponential.exp_polar`](#sympy.functions.elementary.exponential.exp_polar
    "sympy.functions.elementary.exponential.exp_polar")'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.functions.elementary.exponential.exp_polar`](#sympy.functions.elementary.exponential.exp_polar
    "sympy.functions.elementary.exponential.exp_polar")'
- en: '[`polar_lift`](#sympy.functions.elementary.complexes.polar_lift "sympy.functions.elementary.complexes.polar_lift")'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '[`polar_lift`](#sympy.functions.elementary.complexes.polar_lift "sympy.functions.elementary.complexes.polar_lift")'
- en: Lift argument to the Riemann surface of the logarithm
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 将参数提升到对数的黎曼曲面
- en: '[`periodic_argument`](#sympy.functions.elementary.complexes.periodic_argument
    "sympy.functions.elementary.complexes.periodic_argument")'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '[`periodic_argument`](#sympy.functions.elementary.complexes.periodic_argument
    "sympy.functions.elementary.complexes.periodic_argument")'
- en: Trigonometric
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 三角的
- en: '### Trigonometric Functions'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '### 三角函数'
- en: '[PRE24]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The sine function.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 正弦函数。
- en: Returns the sine of x (measured in radians).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 返回以弧度测量的 x 的正弦值。
- en: Explanation
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This function will evaluate automatically in the case \(x/\pi\) is some rational
    number [[R280]](#r280). For example, if \(x\) is a multiple of \(\pi\), \(\pi/2\),
    \(\pi/3\), \(\pi/4\), and \(\pi/6\).
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 当 \(x/\pi\) 是某个有理数时，此函数将自动评估 [[R280]](#r280)。例如，如果 \(x\) 是 \(\pi\) 的倍数，\(\pi/2\)，\(\pi/3\)，\(\pi/4\)
    和 \(\pi/6\)。
- en: Examples
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE25]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: See also
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`csc`](#sympy.functions.elementary.trigonometric.csc "sympy.functions.elementary.trigonometric.csc"),
    [`cos`](#sympy.functions.elementary.trigonometric.cos "sympy.functions.elementary.trigonometric.cos"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`tan`](#sympy.functions.elementary.trigonometric.tan "sympy.functions.elementary.trigonometric.tan"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`asin`](#sympy.functions.elementary.trigonometric.asin "sympy.functions.elementary.trigonometric.asin"),
    [`acsc`](#sympy.functions.elementary.trigonometric.acsc "sympy.functions.elementary.trigonometric.acsc"),
    [`acos`](#sympy.functions.elementary.trigonometric.acos "sympy.functions.elementary.trigonometric.acos"),
    [`asec`](#sympy.functions.elementary.trigonometric.asec "sympy.functions.elementary.trigonometric.asec"),
    [`atan`](#sympy.functions.elementary.trigonometric.atan "sympy.functions.elementary.trigonometric.atan"),
    [`acot`](#sympy.functions.elementary.trigonometric.acot "sympy.functions.elementary.trigonometric.acot"),
    [`atan2`](#sympy.functions.elementary.trigonometric.atan2 "sympy.functions.elementary.trigonometric.atan2")'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '[`csc`](#sympy.functions.elementary.trigonometric.csc "sympy.functions.elementary.trigonometric.csc"),
    [`cos`](#sympy.functions.elementary.trigonometric.cos "sympy.functions.elementary.trigonometric.cos"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`tan`](#sympy.functions.elementary.trigonometric.tan "sympy.functions.elementary.trigonometric.tan"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`asin`](#sympy.functions.elementary.trigonometric.asin "sympy.functions.elementary.trigonometric.asin"),
    [`acsc`](#sympy.functions.elementary.trigonometric.acsc "sympy.functions.elementary.trigonometric.acsc"),
    [`acos`](#sympy.functions.elementary.trigonometric.acos "sympy.functions.elementary.trigonometric.acos"),
    [`asec`](#sympy.functions.elementary.trigonometric.asec "sympy.functions.elementary.trigonometric.asec"),
    [`atan`](#sympy.functions.elementary.trigonometric.atan "sympy.functions.elementary.trigonometric.atan"),
    [`acot`](#sympy.functions.elementary.trigonometric.acot "sympy.functions.elementary.trigonometric.acot"),
    [`atan2`](#sympy.functions.elementary.trigonometric.atan2 "sympy.functions.elementary.trigonometric.atan2")'
- en: References
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R277](#id4)]'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R277](#id4)]'
- en: '[https://en.wikipedia.org/wiki/Trigonometric_functions](https://en.wikipedia.org/wiki/Trigonometric_functions)'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Trigonometric_functions](https://en.wikipedia.org/wiki/Trigonometric_functions)'
- en: '[[R278](#id5)]'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R278](#id5)]'
- en: '[https://dlmf.nist.gov/4.14](https://dlmf.nist.gov/4.14)'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/4.14](https://dlmf.nist.gov/4.14)'
- en: '[[R279](#id6)]'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R279](#id6)]'
- en: '[https://functions.wolfram.com/ElementaryFunctions/Sin](https://functions.wolfram.com/ElementaryFunctions/Sin)'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/ElementaryFunctions/Sin](https://functions.wolfram.com/ElementaryFunctions/Sin)'
- en: '[R280] ([1](#id3),[2](#id7))'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '[R280] ([1](#id3),[2](#id7))'
- en: '[https://mathworld.wolfram.com/TrigonometryAngles.html](https://mathworld.wolfram.com/TrigonometryAngles.html)'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/TrigonometryAngles.html](https://mathworld.wolfram.com/TrigonometryAngles.html)'
- en: '[PRE26]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The cosine function.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 余弦函数。
- en: Returns the cosine of x (measured in radians).
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 返回以弧度测量的 x 的余弦值。
- en: Explanation
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: See [`sin()`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin")
    for notes about automatic evaluation.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 有关自动评估的说明，请参见 [`sin()`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin")。
- en: Examples
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE27]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: See also
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin"),
    [`csc`](#sympy.functions.elementary.trigonometric.csc "sympy.functions.elementary.trigonometric.csc"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`tan`](#sympy.functions.elementary.trigonometric.tan "sympy.functions.elementary.trigonometric.tan"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`asin`](#sympy.functions.elementary.trigonometric.asin "sympy.functions.elementary.trigonometric.asin"),
    [`acsc`](#sympy.functions.elementary.trigonometric.acsc "sympy.functions.elementary.trigonometric.acsc"),
    [`acos`](#sympy.functions.elementary.trigonometric.acos "sympy.functions.elementary.trigonometric.acos"),
    [`asec`](#sympy.functions.elementary.trigonometric.asec "sympy.functions.elementary.trigonometric.asec"),
    [`atan`](#sympy.functions.elementary.trigonometric.atan "sympy.functions.elementary.trigonometric.atan"),
    [`acot`](#sympy.functions.elementary.trigonometric.acot "sympy.functions.elementary.trigonometric.acot"),
    [`atan2`](#sympy.functions.elementary.trigonometric.atan2 "sympy.functions.elementary.trigonometric.atan2")'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin"),
    [`csc`](#sympy.functions.elementary.trigonometric.csc "sympy.functions.elementary.trigonometric.csc"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`tan`](#sympy.functions.elementary.trigonometric.tan "sympy.functions.elementary.trigonometric.tan"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`asin`](#sympy.functions.elementary.trigonometric.asin "sympy.functions.elementary.trigonometric.asin"),
    [`acsc`](#sympy.functions.elementary.trigonometric.acsc "sympy.functions.elementary.trigonometric.acsc"),
    [`acos`](#sympy.functions.elementary.trigonometric.acos "sympy.functions.elementary.trigonometric.acos"),
    [`asec`](#sympy.functions.elementary.trigonometric.asec "sympy.functions.elementary.trigonometric.asec"),
    [`atan`](#sympy.functions.elementary.trigonometric.atan "sympy.functions.elementary.trigonometric.atan"),
    [`acot`](#sympy.functions.elementary.trigonometric.acot "sympy.functions.elementary.trigonometric.acot"),
    [`atan2`](#sympy.functions.elementary.trigonometric.atan2 "sympy.functions.elementary.trigonometric.atan2")'
- en: References
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R281](#id8)]'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R281](#id8)]'
- en: '[https://en.wikipedia.org/wiki/Trigonometric_functions](https://en.wikipedia.org/wiki/Trigonometric_functions)'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Trigonometric_functions](https://en.wikipedia.org/wiki/Trigonometric_functions)'
- en: '[[R282](#id9)]'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R282](#id9)]'
- en: '[https://dlmf.nist.gov/4.14](https://dlmf.nist.gov/4.14)'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/4.14](https://dlmf.nist.gov/4.14)'
- en: '[[R283](#id10)]'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R283](#id10)]'
- en: '[https://functions.wolfram.com/ElementaryFunctions/Cos](https://functions.wolfram.com/ElementaryFunctions/Cos)'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/ElementaryFunctions/Cos](https://functions.wolfram.com/ElementaryFunctions/Cos)'
- en: '[PRE28]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The tangent function.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 正切函数。
- en: Returns the tangent of x (measured in radians).
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 x 的正切值（以弧度为单位）。
- en: Explanation
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: See [`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin")
    for notes about automatic evaluation.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 有关自动评估的说明，请参见 [`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin")。
- en: Examples
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE29]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: See also
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin"),
    [`csc`](#sympy.functions.elementary.trigonometric.csc "sympy.functions.elementary.trigonometric.csc"),
    [`cos`](#sympy.functions.elementary.trigonometric.cos "sympy.functions.elementary.trigonometric.cos"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`asin`](#sympy.functions.elementary.trigonometric.asin "sympy.functions.elementary.trigonometric.asin"),
    [`acsc`](#sympy.functions.elementary.trigonometric.acsc "sympy.functions.elementary.trigonometric.acsc"),
    [`acos`](#sympy.functions.elementary.trigonometric.acos "sympy.functions.elementary.trigonometric.acos"),
    [`asec`](#sympy.functions.elementary.trigonometric.asec "sympy.functions.elementary.trigonometric.asec"),
    [`atan`](#sympy.functions.elementary.trigonometric.atan "sympy.functions.elementary.trigonometric.atan"),
    [`acot`](#sympy.functions.elementary.trigonometric.acot "sympy.functions.elementary.trigonometric.acot"),
    [`atan2`](#sympy.functions.elementary.trigonometric.atan2 "sympy.functions.elementary.trigonometric.atan2")'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin"),
    [`csc`](#sympy.functions.elementary.trigonometric.csc "sympy.functions.elementary.trigonometric.csc"),
    [`cos`](#sympy.functions.elementary.trigonometric.cos "sympy.functions.elementary.trigonometric.cos"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`asin`](#sympy.functions.elementary.trigonometric.asin "sympy.functions.elementary.trigonometric.asin"),
    [`acsc`](#sympy.functions.elementary.trigonometric.acsc "sympy.functions.elementary.trigonometric.acsc"),
    [`acos`](#sympy.functions.elementary.trigonometric.acos "sympy.functions.elementary.trigonometric.acos"),
    [`asec`](#sympy.functions.elementary.trigonometric.asec "sympy.functions.elementary.trigonometric.asec"),
    [`atan`](#sympy.functions.elementary.trigonometric.atan "sympy.functions.elementary.trigonometric.atan"),
    [`acot`](#sympy.functions.elementary.trigonometric.acot "sympy.functions.elementary.trigonometric.acot"),
    [`atan2`](#sympy.functions.elementary.trigonometric.atan2 "sympy.functions.elementary.trigonometric.atan2")'
- en: References
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R284](#id11)]'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R284](#id11)]'
- en: '[https://en.wikipedia.org/wiki/Trigonometric_functions](https://en.wikipedia.org/wiki/Trigonometric_functions)'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Trigonometric_functions](https://en.wikipedia.org/wiki/Trigonometric_functions)'
- en: '[[R285](#id12)]'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R285](#id12)]'
- en: '[https://dlmf.nist.gov/4.14](https://dlmf.nist.gov/4.14)'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/4.14](https://dlmf.nist.gov/4.14)'
- en: '[[R286](#id13)]'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R286](#id13)]'
- en: '[https://functions.wolfram.com/ElementaryFunctions/Tan](https://functions.wolfram.com/ElementaryFunctions/Tan)'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/ElementaryFunctions/Tan](https://functions.wolfram.com/ElementaryFunctions/Tan)'
- en: '[PRE30]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Returns the inverse of this function.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此函数的倒数。
- en: '[PRE31]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: The cotangent function.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 余切函数。
- en: Returns the cotangent of x (measured in radians).
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 x 的余切（以弧度表示）。
- en: Explanation
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: See [`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin")
    for notes about automatic evaluation.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 参见[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin")以获取有关自动评估的说明。
- en: Examples
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE32]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: See also
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin"),
    [`csc`](#sympy.functions.elementary.trigonometric.csc "sympy.functions.elementary.trigonometric.csc"),
    [`cos`](#sympy.functions.elementary.trigonometric.cos "sympy.functions.elementary.trigonometric.cos"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`tan`](#sympy.functions.elementary.trigonometric.tan "sympy.functions.elementary.trigonometric.tan"),
    [`asin`](#sympy.functions.elementary.trigonometric.asin "sympy.functions.elementary.trigonometric.asin"),
    [`acsc`](#sympy.functions.elementary.trigonometric.acsc "sympy.functions.elementary.trigonometric.acsc"),
    [`acos`](#sympy.functions.elementary.trigonometric.acos "sympy.functions.elementary.trigonometric.acos"),
    [`asec`](#sympy.functions.elementary.trigonometric.asec "sympy.functions.elementary.trigonometric.asec"),
    [`atan`](#sympy.functions.elementary.trigonometric.atan "sympy.functions.elementary.trigonometric.atan"),
    [`acot`](#sympy.functions.elementary.trigonometric.acot "sympy.functions.elementary.trigonometric.acot"),
    [`atan2`](#sympy.functions.elementary.trigonometric.atan2 "sympy.functions.elementary.trigonometric.atan2")'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin")，[`csc`](#sympy.functions.elementary.trigonometric.csc
    "sympy.functions.elementary.trigonometric.csc")，[`cos`](#sympy.functions.elementary.trigonometric.cos
    "sympy.functions.elementary.trigonometric.cos")，[`sec`](#sympy.functions.elementary.trigonometric.sec
    "sympy.functions.elementary.trigonometric.sec")，[`tan`](#sympy.functions.elementary.trigonometric.tan
    "sympy.functions.elementary.trigonometric.tan")，[`asin`](#sympy.functions.elementary.trigonometric.asin
    "sympy.functions.elementary.trigonometric.asin")，[`acsc`](#sympy.functions.elementary.trigonometric.acsc
    "sympy.functions.elementary.trigonometric.acsc")，[`acos`](#sympy.functions.elementary.trigonometric.acos
    "sympy.functions.elementary.trigonometric.acos")，[`asec`](#sympy.functions.elementary.trigonometric.asec
    "sympy.functions.elementary.trigonometric.asec")，[`atan`](#sympy.functions.elementary.trigonometric.atan
    "sympy.functions.elementary.trigonometric.atan")，[`acot`](#sympy.functions.elementary.trigonometric.acot
    "sympy.functions.elementary.trigonometric.acot")，[`atan2`](#sympy.functions.elementary.trigonometric.atan2
    "sympy.functions.elementary.trigonometric.atan2")'
- en: References
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 参考资料
- en: '[[R287](#id14)]'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R287](#id14)]'
- en: '[https://en.wikipedia.org/wiki/Trigonometric_functions](https://en.wikipedia.org/wiki/Trigonometric_functions)'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Trigonometric_functions](https://en.wikipedia.org/wiki/Trigonometric_functions)'
- en: '[[R288](#id15)]'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R288](#id15)]'
- en: '[https://dlmf.nist.gov/4.14](https://dlmf.nist.gov/4.14)'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/4.14](https://dlmf.nist.gov/4.14)'
- en: '[[R289](#id16)]'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R289](#id16)]'
- en: '[https://functions.wolfram.com/ElementaryFunctions/Cot](https://functions.wolfram.com/ElementaryFunctions/Cot)'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/ElementaryFunctions/Cot](https://functions.wolfram.com/ElementaryFunctions/Cot)'
- en: '[PRE33]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Returns the inverse of this function.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此函数的倒数。
- en: '[PRE34]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: The secant function.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 正割函数。
- en: Returns the secant of x (measured in radians).
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 x 的正割（以弧度表示）。
- en: Explanation
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: See [`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin")
    for notes about automatic evaluation.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 有关自动评估的说明，请参阅[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin")。
- en: Examples
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE35]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: See also
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin"),
    [`csc`](#sympy.functions.elementary.trigonometric.csc "sympy.functions.elementary.trigonometric.csc"),
    [`cos`](#sympy.functions.elementary.trigonometric.cos "sympy.functions.elementary.trigonometric.cos"),
    [`tan`](#sympy.functions.elementary.trigonometric.tan "sympy.functions.elementary.trigonometric.tan"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`asin`](#sympy.functions.elementary.trigonometric.asin "sympy.functions.elementary.trigonometric.asin"),
    [`acsc`](#sympy.functions.elementary.trigonometric.acsc "sympy.functions.elementary.trigonometric.acsc"),
    [`acos`](#sympy.functions.elementary.trigonometric.acos "sympy.functions.elementary.trigonometric.acos"),
    [`asec`](#sympy.functions.elementary.trigonometric.asec "sympy.functions.elementary.trigonometric.asec"),
    [`atan`](#sympy.functions.elementary.trigonometric.atan "sympy.functions.elementary.trigonometric.atan"),
    [`acot`](#sympy.functions.elementary.trigonometric.acot "sympy.functions.elementary.trigonometric.acot"),
    [`atan2`](#sympy.functions.elementary.trigonometric.atan2 "sympy.functions.elementary.trigonometric.atan2")'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin")，[`csc`](#sympy.functions.elementary.trigonometric.csc
    "sympy.functions.elementary.trigonometric.csc")，[`cos`](#sympy.functions.elementary.trigonometric.cos
    "sympy.functions.elementary.trigonometric.cos")，[`tan`](#sympy.functions.elementary.trigonometric.tan
    "sympy.functions.elementary.trigonometric.tan")，[`cot`](#sympy.functions.elementary.trigonometric.cot
    "sympy.functions.elementary.trigonometric.cot")，[`asin`](#sympy.functions.elementary.trigonometric.asin
    "sympy.functions.elementary.trigonometric.asin")，[`acsc`](#sympy.functions.elementary.trigonometric.acsc
    "sympy.functions.elementary.trigonometric.acsc")，[`acos`](#sympy.functions.elementary.trigonometric.acos
    "sympy.functions.elementary.trigonometric.acos")，[`asec`](#sympy.functions.elementary.trigonometric.asec
    "sympy.functions.elementary.trigonometric.asec")，[`atan`](#sympy.functions.elementary.trigonometric.atan
    "sympy.functions.elementary.trigonometric.atan")，[`acot`](#sympy.functions.elementary.trigonometric.acot
    "sympy.functions.elementary.trigonometric.acot")，[`atan2`](#sympy.functions.elementary.trigonometric.atan2
    "sympy.functions.elementary.trigonometric.atan2")'
- en: References
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R290](#id17)]'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R290](#id17)]'
- en: '[https://en.wikipedia.org/wiki/Trigonometric_functions](https://en.wikipedia.org/wiki/Trigonometric_functions)'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Trigonometric_functions](https://en.wikipedia.org/wiki/Trigonometric_functions)'
- en: '[[R291](#id18)]'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R291](#id18)]'
- en: '[https://dlmf.nist.gov/4.14](https://dlmf.nist.gov/4.14)'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/4.14](https://dlmf.nist.gov/4.14)'
- en: '[[R292](#id19)]'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R292](#id19)]'
- en: '[https://functions.wolfram.com/ElementaryFunctions/Sec](https://functions.wolfram.com/ElementaryFunctions/Sec)'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/ElementaryFunctions/Sec](https://functions.wolfram.com/ElementaryFunctions/Sec)'
- en: '[PRE36]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The cosecant function.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 余割函数。
- en: Returns the cosecant of x (measured in radians).
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 x 的余割（以弧度表示）。
- en: Explanation
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: See [`sin()`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin")
    for notes about automatic evaluation.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 有关自动评估的注释，请参见 [`sin()`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin")。
- en: Examples
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE37]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: See also
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin"),
    [`cos`](#sympy.functions.elementary.trigonometric.cos "sympy.functions.elementary.trigonometric.cos"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`tan`](#sympy.functions.elementary.trigonometric.tan "sympy.functions.elementary.trigonometric.tan"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`asin`](#sympy.functions.elementary.trigonometric.asin "sympy.functions.elementary.trigonometric.asin"),
    [`acsc`](#sympy.functions.elementary.trigonometric.acsc "sympy.functions.elementary.trigonometric.acsc"),
    [`acos`](#sympy.functions.elementary.trigonometric.acos "sympy.functions.elementary.trigonometric.acos"),
    [`asec`](#sympy.functions.elementary.trigonometric.asec "sympy.functions.elementary.trigonometric.asec"),
    [`atan`](#sympy.functions.elementary.trigonometric.atan "sympy.functions.elementary.trigonometric.atan"),
    [`acot`](#sympy.functions.elementary.trigonometric.acot "sympy.functions.elementary.trigonometric.acot"),
    [`atan2`](#sympy.functions.elementary.trigonometric.atan2 "sympy.functions.elementary.trigonometric.atan2")'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin"),
    [`cos`](#sympy.functions.elementary.trigonometric.cos "sympy.functions.elementary.trigonometric.cos"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`tan`](#sympy.functions.elementary.trigonometric.tan "sympy.functions.elementary.trigonometric.tan"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`asin`](#sympy.functions.elementary.trigonometric.asin "sympy.functions.elementary.trigonometric.asin"),
    [`acsc`](#sympy.functions.elementary.trigonometric.acsc "sympy.functions.elementary.trigonometric.acsc"),
    [`acos`](#sympy.functions.elementary.trigonometric.acos "sympy.functions.elementary.trigonometric.acos"),
    [`asec`](#sympy.functions.elementary.trigonometric.asec "sympy.functions.elementary.trigonometric.asec"),
    [`atan`](#sympy.functions.elementary.trigonometric.atan "sympy.functions.elementary.trigonometric.atan"),
    [`acot`](#sympy.functions.elementary.trigonometric.acot "sympy.functions.elementary.trigonometric.acot"),
    [`atan2`](#sympy.functions.elementary.trigonometric.atan2 "sympy.functions.elementary.trigonometric.atan2")'
- en: References
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R293](#id20)]'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R293](#id20)]'
- en: '[https://en.wikipedia.org/wiki/Trigonometric_functions](https://en.wikipedia.org/wiki/Trigonometric_functions)'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Trigonometric_functions](https://en.wikipedia.org/wiki/Trigonometric_functions)'
- en: '[[R294](#id21)]'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R294](#id21)]'
- en: '[https://dlmf.nist.gov/4.14](https://dlmf.nist.gov/4.14)'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/4.14](https://dlmf.nist.gov/4.14)'
- en: '[[R295](#id22)]'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R295](#id22)]'
- en: '[https://functions.wolfram.com/ElementaryFunctions/Csc](https://functions.wolfram.com/ElementaryFunctions/Csc)'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/ElementaryFunctions/Csc](https://functions.wolfram.com/ElementaryFunctions/Csc)'
- en: '[PRE38]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Represents an unnormalized sinc function:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 表示未归一化的 sinc 函数：
- en: \[\begin{split}\operatorname{sinc}(x) = \begin{cases} \frac{\sin x}{x} & \qquad
    x \neq 0 \\ 1 & \qquad x = 0 \end{cases}\end{split}\]
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}\operatorname{sinc}(x) = \begin{cases} \frac{\sin x}{x} & \qquad
    x \neq 0 \\ 1 & \qquad x = 0 \end{cases}\end{split}\]
- en: Examples
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE39]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Automated Evaluation
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动评估
- en: '[PRE40]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Differentiation
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 差分
- en: '[PRE41]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Series Expansion
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 级数展开
- en: '[PRE42]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: As zero’th order spherical Bessel Function
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为零阶球形贝塞尔函数
- en: '[PRE43]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: See also
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin")'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin")'
- en: References
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R296](#id23)]'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R296](#id23)]'
- en: '[https://en.wikipedia.org/wiki/Sinc_function](https://en.wikipedia.org/wiki/Sinc_function)'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Sinc_function](https://en.wikipedia.org/wiki/Sinc_function)'
- en: Trigonometric Inverses
  id: totrans-267
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 三角反函数
- en: '[PRE44]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: The inverse sine function.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 反正弦函数。
- en: Returns the arcsine of x in radians.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 x 的反正弦值（弧度）。
- en: Explanation
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: '`asin(x)` will evaluate automatically in the cases \(x \in \{\infty, -\infty,
    0, 1, -1\}\) and for some instances when the result is a rational multiple of
    \(\pi\) (see the `eval` class method).'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '`asin(x)` 将在 \(x \in \{\infty, -\infty, 0, 1, -1\}\) 和某些结果为 \(\pi\) 的有理倍数的情况下自动评估（参见
    `eval` 类方法）。'
- en: A purely imaginary argument will lead to an asinh expression.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 纯虚数参数将导致 asinh 表达式。
- en: Examples
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE45]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: See also
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin"),
    [`csc`](#sympy.functions.elementary.trigonometric.csc "sympy.functions.elementary.trigonometric.csc"),
    [`cos`](#sympy.functions.elementary.trigonometric.cos "sympy.functions.elementary.trigonometric.cos"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`tan`](#sympy.functions.elementary.trigonometric.tan "sympy.functions.elementary.trigonometric.tan"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`acsc`](#sympy.functions.elementary.trigonometric.acsc "sympy.functions.elementary.trigonometric.acsc"),
    [`acos`](#sympy.functions.elementary.trigonometric.acos "sympy.functions.elementary.trigonometric.acos"),
    [`asec`](#sympy.functions.elementary.trigonometric.asec "sympy.functions.elementary.trigonometric.asec"),
    [`atan`](#sympy.functions.elementary.trigonometric.atan "sympy.functions.elementary.trigonometric.atan"),
    [`acot`](#sympy.functions.elementary.trigonometric.acot "sympy.functions.elementary.trigonometric.acot"),
    [`atan2`](#sympy.functions.elementary.trigonometric.atan2 "sympy.functions.elementary.trigonometric.atan2")'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin"),
    [`csc`](#sympy.functions.elementary.trigonometric.csc "sympy.functions.elementary.trigonometric.csc"),
    [`cos`](#sympy.functions.elementary.trigonometric.cos "sympy.functions.elementary.trigonometric.cos"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`tan`](#sympy.functions.elementary.trigonometric.tan "sympy.functions.elementary.trigonometric.tan"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`acsc`](#sympy.functions.elementary.trigonometric.acsc "sympy.functions.elementary.trigonometric.acsc"),
    [`acos`](#sympy.functions.elementary.trigonometric.acos "sympy.functions.elementary.trigonometric.acos"),
    [`asec`](#sympy.functions.elementary.trigonometric.asec "sympy.functions.elementary.trigonometric.asec"),
    [`atan`](#sympy.functions.elementary.trigonometric.atan "sympy.functions.elementary.trigonometric.atan"),
    [`acot`](#sympy.functions.elementary.trigonometric.acot "sympy.functions.elementary.trigonometric.acot"),
    [`atan2`](#sympy.functions.elementary.trigonometric.atan2 "sympy.functions.elementary.trigonometric.atan2")'
- en: References
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R297](#id24)]'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R297](#id24)]'
- en: '[https://en.wikipedia.org/wiki/Inverse_trigonometric_functions](https://en.wikipedia.org/wiki/Inverse_trigonometric_functions)'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '[反三角函数](https://en.wikipedia.org/wiki/Inverse_trigonometric_functions)'
- en: '[[R298](#id25)]'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R298](#id25)]'
- en: '[https://dlmf.nist.gov/4.23](https://dlmf.nist.gov/4.23)'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: '[NIST 4.23](https://dlmf.nist.gov/4.23)'
- en: '[[R299](#id26)]'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R299](#id26)]'
- en: '[https://functions.wolfram.com/ElementaryFunctions/ArcSin](https://functions.wolfram.com/ElementaryFunctions/ArcSin)'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '[ArcSin函数](https://functions.wolfram.com/ElementaryFunctions/ArcSin)'
- en: '[PRE46]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Returns the inverse of this function.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 返回该函数的反函数。
- en: '[PRE47]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: The inverse cosine function.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 反余弦函数。
- en: Explanation
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Returns the arc cosine of x (measured in radians).
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 x 的反余弦（以弧度表示）。
- en: '`acos(x)` will evaluate automatically in the cases \(x \in \{\infty, -\infty,
    0, 1, -1\}\) and for some instances when the result is a rational multiple of
    \(\pi\) (see the eval class method).'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '`acos(x)` 在 \(x \in \{\infty, -\infty, 0, 1, -1\}\) 的情况下会自动计算，并且在结果为 \(\pi\)
    的有理倍数时也会计算（参见 eval 类方法）。'
- en: '`acos(zoo)` evaluates to `zoo` (see note in [`sympy.functions.elementary.trigonometric.asec`](#sympy.functions.elementary.trigonometric.asec
    "sympy.functions.elementary.trigonometric.asec"))'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '`acos(zoo)` 会计算为 `zoo`（参见 [`sympy.functions.elementary.trigonometric.asec`](#sympy.functions.elementary.trigonometric.asec
    "sympy.functions.elementary.trigonometric.asec") 的注释）。'
- en: A purely imaginary argument will be rewritten to asinh.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 纯虚参数将被重写为 asinh。
- en: Examples
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE48]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: See also
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin"),
    [`csc`](#sympy.functions.elementary.trigonometric.csc "sympy.functions.elementary.trigonometric.csc"),
    [`cos`](#sympy.functions.elementary.trigonometric.cos "sympy.functions.elementary.trigonometric.cos"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`tan`](#sympy.functions.elementary.trigonometric.tan "sympy.functions.elementary.trigonometric.tan"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`asin`](#sympy.functions.elementary.trigonometric.asin "sympy.functions.elementary.trigonometric.asin"),
    [`acsc`](#sympy.functions.elementary.trigonometric.acsc "sympy.functions.elementary.trigonometric.acsc"),
    [`asec`](#sympy.functions.elementary.trigonometric.asec "sympy.functions.elementary.trigonometric.asec"),
    [`atan`](#sympy.functions.elementary.trigonometric.atan "sympy.functions.elementary.trigonometric.atan"),
    [`acot`](#sympy.functions.elementary.trigonometric.acot "sympy.functions.elementary.trigonometric.acot"),
    [`atan2`](#sympy.functions.elementary.trigonometric.atan2 "sympy.functions.elementary.trigonometric.atan2")'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin"),
    [`csc`](#sympy.functions.elementary.trigonometric.csc "sympy.functions.elementary.trigonometric.csc"),
    [`cos`](#sympy.functions.elementary.trigonometric.cos "sympy.functions.elementary.trigonometric.cos"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`tan`](#sympy.functions.elementary.trigonometric.tan "sympy.functions.elementary.trigonometric.tan"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`asin`](#sympy.functions.elementary.trigonometric.asin "sympy.functions.elementary.trigonometric.asin"),
    [`acsc`](#sympy.functions.elementary.trigonometric.acsc "sympy.functions.elementary.trigonometric.acsc"),
    [`asec`](#sympy.functions.elementary.trigonometric.asec "sympy.functions.elementary.trigonometric.asec"),
    [`atan`](#sympy.functions.elementary.trigonometric.atan "sympy.functions.elementary.trigonometric.atan"),
    [`acot`](#sympy.functions.elementary.trigonometric.acot "sympy.functions.elementary.trigonometric.acot"),
    [`atan2`](#sympy.functions.elementary.trigonometric.atan2 "sympy.functions.elementary.trigonometric.atan2")'
- en: References
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 参考资料
- en: '[[R300](#id27)]'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R300](#id27)]'
- en: '[https://en.wikipedia.org/wiki/Inverse_trigonometric_functions](https://en.wikipedia.org/wiki/Inverse_trigonometric_functions)'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '[反三角函数](https://en.wikipedia.org/wiki/Inverse_trigonometric_functions)'
- en: '[[R301](#id28)]'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R301](#id28)]'
- en: '[https://dlmf.nist.gov/4.23](https://dlmf.nist.gov/4.23)'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/4.23](https://dlmf.nist.gov/4.23)'
- en: '[[R302](#id29)]'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R302](#id29)]'
- en: '[https://functions.wolfram.com/ElementaryFunctions/ArcCos](https://functions.wolfram.com/ElementaryFunctions/ArcCos)'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/ElementaryFunctions/ArcCos](https://functions.wolfram.com/ElementaryFunctions/ArcCos)'
- en: '[PRE49]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Returns the inverse of this function.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 返回该函数的倒数。
- en: '[PRE50]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: The inverse tangent function.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 反正切函数。
- en: Returns the arc tangent of x (measured in radians).
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 x 的反正切（单位为弧度）。
- en: Explanation
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: '`atan(x)` will evaluate automatically in the cases \(x \in \{\infty, -\infty,
    0, 1, -1\}\) and for some instances when the result is a rational multiple of
    \(\pi\) (see the eval class method).'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: '`atan(x)` 将自动计算在情况 \(x \in \{\infty, -\infty, 0, 1, -1\}\) 及某些结果为 \(\pi\) 的有理倍数时（见
    eval 类方法）。'
- en: Examples
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE51]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: See also
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin"),
    [`csc`](#sympy.functions.elementary.trigonometric.csc "sympy.functions.elementary.trigonometric.csc"),
    [`cos`](#sympy.functions.elementary.trigonometric.cos "sympy.functions.elementary.trigonometric.cos"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`tan`](#sympy.functions.elementary.trigonometric.tan "sympy.functions.elementary.trigonometric.tan"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`asin`](#sympy.functions.elementary.trigonometric.asin "sympy.functions.elementary.trigonometric.asin"),
    [`acsc`](#sympy.functions.elementary.trigonometric.acsc "sympy.functions.elementary.trigonometric.acsc"),
    [`acos`](#sympy.functions.elementary.trigonometric.acos "sympy.functions.elementary.trigonometric.acos"),
    [`asec`](#sympy.functions.elementary.trigonometric.asec "sympy.functions.elementary.trigonometric.asec"),
    [`acot`](#sympy.functions.elementary.trigonometric.acot "sympy.functions.elementary.trigonometric.acot"),
    [`atan2`](#sympy.functions.elementary.trigonometric.atan2 "sympy.functions.elementary.trigonometric.atan2")'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin"),
    [`csc`](#sympy.functions.elementary.trigonometric.csc "sympy.functions.elementary.trigonometric.csc"),
    [`cos`](#sympy.functions.elementary.trigonometric.cos "sympy.functions.elementary.trigonometric.cos"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`tan`](#sympy.functions.elementary.trigonometric.tan "sympy.functions.elementary.trigonometric.tan"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`asin`](#sympy.functions.elementary.trigonometric.asin "sympy.functions.elementary.trigonometric.asin"),
    [`acsc`](#sympy.functions.elementary.trigonometric.acsc "sympy.functions.elementary.trigonometric.acsc"),
    [`acos`](#sympy.functions.elementary.trigonometric.acos "sympy.functions.elementary.trigonometric.acos"),
    [`asec`](#sympy.functions.elementary.trigonometric.asec "sympy.functions.elementary.trigonometric.asec"),
    [`acot`](#sympy.functions.elementary.trigonometric.acot "sympy.functions.elementary.trigonometric.acot"),
    [`atan2`](#sympy.functions.elementary.trigonometric.atan2 "sympy.functions.elementary.trigonometric.atan2")'
- en: References
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R303](#id30)]'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R303](#id30)]'
- en: '[https://en.wikipedia.org/wiki/Inverse_trigonometric_functions](https://en.wikipedia.org/wiki/Inverse_trigonometric_functions)'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Inverse_trigonometric_functions](https://en.wikipedia.org/wiki/Inverse_trigonometric_functions)'
- en: '[[R304](#id31)]'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R304](#id31)]'
- en: '[https://dlmf.nist.gov/4.23](https://dlmf.nist.gov/4.23)'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/4.23](https://dlmf.nist.gov/4.23)'
- en: '[[R305](#id32)]'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R305](#id32)]'
- en: '[https://functions.wolfram.com/ElementaryFunctions/ArcTan](https://functions.wolfram.com/ElementaryFunctions/ArcTan)'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/ElementaryFunctions/ArcTan](https://functions.wolfram.com/ElementaryFunctions/ArcTan)'
- en: '[PRE52]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Returns the inverse of this function.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此函数的反函数。
- en: '[PRE53]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: The inverse cotangent function.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 反余切函数。
- en: Returns the arc cotangent of x (measured in radians).
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 x 的反余切（以弧度表示）。
- en: Explanation
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: '`acot(x)` will evaluate automatically in the cases \(x \in \{\infty, -\infty,
    \tilde{\infty}, 0, 1, -1\}\) and for some instances when the result is a rational
    multiple of \(\pi\) (see the eval class method).'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '`acot(x)` 将在 \(x \in \{\infty, -\infty, \tilde{\infty}, 0, 1, -1\}\) 的情况下自动评估，并在结果为
    \(\pi\) 的有理倍数之一时进行一些实例（参见 eval 类方法）。'
- en: A purely imaginary argument will lead to an `acoth` expression.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 纯虚数参数将导致 `acoth` 表达式。
- en: '`acot(x)` has a branch cut along \((-i, i)\), hence it is discontinuous at
    0\. Its range for real \(x\) is \((-\frac{\pi}{2}, \frac{\pi}{2}]\).'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '`acot(x)`在 \((-i, i)\) 范围内有一个分支切，因此在 0 处不连续。其在实数 \(x\) 范围内的取值是 \((-\frac{\pi}{2},
    \frac{\pi}{2}]\)。'
- en: Examples
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE54]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: See also
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin"),
    [`csc`](#sympy.functions.elementary.trigonometric.csc "sympy.functions.elementary.trigonometric.csc"),
    [`cos`](#sympy.functions.elementary.trigonometric.cos "sympy.functions.elementary.trigonometric.cos"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`tan`](#sympy.functions.elementary.trigonometric.tan "sympy.functions.elementary.trigonometric.tan"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`asin`](#sympy.functions.elementary.trigonometric.asin "sympy.functions.elementary.trigonometric.asin"),
    [`acsc`](#sympy.functions.elementary.trigonometric.acsc "sympy.functions.elementary.trigonometric.acsc"),
    [`acos`](#sympy.functions.elementary.trigonometric.acos "sympy.functions.elementary.trigonometric.acos"),
    [`asec`](#sympy.functions.elementary.trigonometric.asec "sympy.functions.elementary.trigonometric.asec"),
    [`atan`](#sympy.functions.elementary.trigonometric.atan "sympy.functions.elementary.trigonometric.atan"),
    [`atan2`](#sympy.functions.elementary.trigonometric.atan2 "sympy.functions.elementary.trigonometric.atan2")'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin"),
    [`csc`](#sympy.functions.elementary.trigonometric.csc "sympy.functions.elementary.trigonometric.csc"),
    [`cos`](#sympy.functions.elementary.trigonometric.cos "sympy.functions.elementary.trigonometric.cos"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`tan`](#sympy.functions.elementary.trigonometric.tan "sympy.functions.elementary.trigonometric.tan"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`asin`](#sympy.functions.elementary.trigonometric.asin "sympy.functions.elementary.trigonometric.asin"),
    [`acsc`](#sympy.functions.elementary.trigonometric.acsc "sympy.functions.elementary.trigonometric.acsc"),
    [`acos`](#sympy.functions.elementary.trigonometric.acos "sympy.functions.elementary.trigonometric.acos"),
    [`asec`](#sympy.functions.elementary.trigonometric.asec "sympy.functions.elementary.trigonometric.asec"),
    [`atan`](#sympy.functions.elementary.trigonometric.atan "sympy.functions.elementary.trigonometric.atan"),
    [`atan2`](#sympy.functions.elementary.trigonometric.atan2 "sympy.functions.elementary.trigonometric.atan2")'
- en: References
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R306](#id33)]'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R306](#id33)]'
- en: '[https://dlmf.nist.gov/4.23](https://dlmf.nist.gov/4.23)'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/4.23](https://dlmf.nist.gov/4.23)'
- en: '[[R307](#id34)]'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R307](#id34)]'
- en: '[https://functions.wolfram.com/ElementaryFunctions/ArcCot](https://functions.wolfram.com/ElementaryFunctions/ArcCot)'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/ElementaryFunctions/ArcCot](https://functions.wolfram.com/ElementaryFunctions/ArcCot)'
- en: '[PRE55]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Returns the inverse of this function.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 返回这个函数的反函数。
- en: '[PRE56]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: The inverse secant function.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 反余割函数。
- en: Returns the arc secant of x (measured in radians).
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 x 的反余割（弧秒，以弧度表示）。
- en: Explanation
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: '`asec(x)` will evaluate automatically in the cases \(x \in \{\infty, -\infty,
    0, 1, -1\}\) and for some instances when the result is a rational multiple of
    \(\pi\) (see the eval class method).'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '`asec(x)` 在情况 \(x \in \{\infty, -\infty, 0, 1, -1\}\) 时会自动评估，并且在结果是 \(\pi\)
    的有理倍数时（见 eval 类方法）。'
- en: '`asec(x)` has branch cut in the interval \([-1, 1]\). For complex arguments,
    it can be defined [[R311]](#r311) as'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: '`asec(x)` 在区间 \([-1, 1]\) 内有分支切割。对于复数参数，可以定义为 [[R311]](#r311)：'
- en: \[\operatorname{sec^{-1}}(z) = -i\frac{\log\left(\sqrt{1 - z^2} + 1\right)}{z}\]
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{sec^{-1}}(z) = -i\frac{\log\left(\sqrt{1 - z^2} + 1\right)}{z}\]
- en: At `x = 0`, for positive branch cut, the limit evaluates to `zoo`. For negative
    branch cut, the limit
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 当 `x = 0` 时，对于正分支切割，极限评估为 `zoo`。对于负分支切割，极限
- en: \[\lim_{z \to 0}-i\frac{\log\left(-\sqrt{1 - z^2} + 1\right)}{z}\]
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: \[\lim_{z \to 0}-i\frac{\log\left(-\sqrt{1 - z^2} + 1\right)}{z}\]
- en: simplifies to \(-i\log\left(z/2 + O\left(z^3\right)\right)\) which ultimately
    evaluates to `zoo`.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 简化为 \(-i\log\left(z/2 + O\left(z^3\right)\right)\)，最终评估为 `zoo`。
- en: As `acos(x) = asec(1/x)`, a similar argument can be given for `acos(x)`.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 `acos(x) = asec(1/x)`，对于 `acos(x)` 可以给出类似的论证。
- en: Examples
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE57]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: See also
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin"),
    [`csc`](#sympy.functions.elementary.trigonometric.csc "sympy.functions.elementary.trigonometric.csc"),
    [`cos`](#sympy.functions.elementary.trigonometric.cos "sympy.functions.elementary.trigonometric.cos"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`tan`](#sympy.functions.elementary.trigonometric.tan "sympy.functions.elementary.trigonometric.tan"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`asin`](#sympy.functions.elementary.trigonometric.asin "sympy.functions.elementary.trigonometric.asin"),
    [`acsc`](#sympy.functions.elementary.trigonometric.acsc "sympy.functions.elementary.trigonometric.acsc"),
    [`acos`](#sympy.functions.elementary.trigonometric.acos "sympy.functions.elementary.trigonometric.acos"),
    [`atan`](#sympy.functions.elementary.trigonometric.atan "sympy.functions.elementary.trigonometric.atan"),
    [`acot`](#sympy.functions.elementary.trigonometric.acot "sympy.functions.elementary.trigonometric.acot"),
    [`atan2`](#sympy.functions.elementary.trigonometric.atan2 "sympy.functions.elementary.trigonometric.atan2")'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin"),
    [`csc`](#sympy.functions.elementary.trigonometric.csc "sympy.functions.elementary.trigonometric.csc"),
    [`cos`](#sympy.functions.elementary.trigonometric.cos "sympy.functions.elementary.trigonometric.cos"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`tan`](#sympy.functions.elementary.trigonometric.tan "sympy.functions.elementary.trigonometric.tan"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`asin`](#sympy.functions.elementary.trigonometric.asin "sympy.functions.elementary.trigonometric.asin"),
    [`acsc`](#sympy.functions.elementary.trigonometric.acsc "sympy.functions.elementary.trigonometric.acsc"),
    [`acos`](#sympy.functions.elementary.trigonometric.acos "sympy.functions.elementary.trigonometric.acos"),
    [`atan`](#sympy.functions.elementary.trigonometric.atan "sympy.functions.elementary.trigonometric.atan"),
    [`acot`](#sympy.functions.elementary.trigonometric.acot "sympy.functions.elementary.trigonometric.acot"),
    [`atan2`](#sympy.functions.elementary.trigonometric.atan2 "sympy.functions.elementary.trigonometric.atan2")'
- en: References
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R308](#id36)]'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R308](#id36)]'
- en: '[https://en.wikipedia.org/wiki/Inverse_trigonometric_functions](https://en.wikipedia.org/wiki/Inverse_trigonometric_functions)'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Inverse_trigonometric_functions](https://en.wikipedia.org/wiki/Inverse_trigonometric_functions)'
- en: '[[R309](#id37)]'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R309](#id37)]'
- en: '[https://dlmf.nist.gov/4.23](https://dlmf.nist.gov/4.23)'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/4.23](https://dlmf.nist.gov/4.23)'
- en: '[[R310](#id38)]'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R310](#id38)]'
- en: '[https://functions.wolfram.com/ElementaryFunctions/ArcSec](https://functions.wolfram.com/ElementaryFunctions/ArcSec)'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/ElementaryFunctions/ArcSec](https://functions.wolfram.com/ElementaryFunctions/ArcSec)'
- en: '[R311] ([1](#id35),[2](#id39))'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: '[R311] ([1](#id35),[2](#id39))'
- en: '[https://reference.wolfram.com/language/ref/ArcSec.html](https://reference.wolfram.com/language/ref/ArcSec.html)'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://reference.wolfram.com/language/ref/ArcSec.html](https://reference.wolfram.com/language/ref/ArcSec.html)'
- en: '[PRE58]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Returns the inverse of this function.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此函数的反函数。
- en: '[PRE59]'
  id: totrans-369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: The inverse cosecant function.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 反三角函数。
- en: Returns the arc cosecant of x (measured in radians).
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 x 的反余割（以弧度表示）。
- en: Explanation
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: '`acsc(x)` will evaluate automatically in the cases \(x \in \{\infty, -\infty,
    0, 1, -1\}\)` and for some instances when the result is a rational multiple of
    \(\pi\) (see the `eval` class method).'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: '`acsc(x)` 在情况\(x \in \{\infty, -\infty, 0, 1, -1\}\)时将自动评估，并且在结果是\(π\)的有理倍数的一些情况下（见`eval`类方法）。'
- en: Examples
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE60]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: See also
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin"),
    [`csc`](#sympy.functions.elementary.trigonometric.csc "sympy.functions.elementary.trigonometric.csc"),
    [`cos`](#sympy.functions.elementary.trigonometric.cos "sympy.functions.elementary.trigonometric.cos"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`tan`](#sympy.functions.elementary.trigonometric.tan "sympy.functions.elementary.trigonometric.tan"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`asin`](#sympy.functions.elementary.trigonometric.asin "sympy.functions.elementary.trigonometric.asin"),
    [`acos`](#sympy.functions.elementary.trigonometric.acos "sympy.functions.elementary.trigonometric.acos"),
    [`asec`](#sympy.functions.elementary.trigonometric.asec "sympy.functions.elementary.trigonometric.asec"),
    [`atan`](#sympy.functions.elementary.trigonometric.atan "sympy.functions.elementary.trigonometric.atan"),
    [`acot`](#sympy.functions.elementary.trigonometric.acot "sympy.functions.elementary.trigonometric.acot"),
    [`atan2`](#sympy.functions.elementary.trigonometric.atan2 "sympy.functions.elementary.trigonometric.atan2")'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin"),
    [`csc`](#sympy.functions.elementary.trigonometric.csc "sympy.functions.elementary.trigonometric.csc"),
    [`cos`](#sympy.functions.elementary.trigonometric.cos "sympy.functions.elementary.trigonometric.cos"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`tan`](#sympy.functions.elementary.trigonometric.tan "sympy.functions.elementary.trigonometric.tan"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`asin`](#sympy.functions.elementary.trigonometric.asin "sympy.functions.elementary.trigonometric.asin"),
    [`acos`](#sympy.functions.elementary.trigonometric.acos "sympy.functions.elementary.trigonometric.acos"),
    [`asec`](#sympy.functions.elementary.trigonometric.asec "sympy.functions.elementary.trigonometric.asec"),
    [`atan`](#sympy.functions.elementary.trigonometric.atan "sympy.functions.elementary.trigonometric.atan"),
    [`acot`](#sympy.functions.elementary.trigonometric.acot "sympy.functions.elementary.trigonometric.acot"),
    [`atan2`](#sympy.functions.elementary.trigonometric.atan2 "sympy.functions.elementary.trigonometric.atan2")'
- en: References
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R312](#id40)]'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R312](#id40)]'
- en: '[https://en.wikipedia.org/wiki/Inverse_trigonometric_functions](https://en.wikipedia.org/wiki/Inverse_trigonometric_functions)'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Inverse_trigonometric_functions](https://en.wikipedia.org/wiki/Inverse_trigonometric_functions)'
- en: '[[R313](#id41)]'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R313](#id41)]'
- en: '[https://dlmf.nist.gov/4.23](https://dlmf.nist.gov/4.23)'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/4.23](https://dlmf.nist.gov/4.23)'
- en: '[[R314](#id42)]'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R314](#id42)]'
- en: '[https://functions.wolfram.com/ElementaryFunctions/ArcCsc](https://functions.wolfram.com/ElementaryFunctions/ArcCsc)'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/ElementaryFunctions/ArcCsc](https://functions.wolfram.com/ElementaryFunctions/ArcCsc)'
- en: '[PRE61]'
  id: totrans-385
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: Returns the inverse of this function.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此函数的反函数。
- en: '[PRE62]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'The function `atan2(y, x)` computes \(\operatorname{atan}(y/x)\) taking two
    arguments \(y\) and \(x\). Signs of both \(y\) and \(x\) are considered to determine
    the appropriate quadrant of \(\operatorname{atan}(y/x)\). The range is \((-\pi,
    \pi]\). The complete definition reads as follows:'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 函数`atan2(y, x)`计算\(\operatorname{atan}(y/x)\)，并接受两个参数\(y\)和\(x\)。考虑\(y\)和\(x\)的符号以确定\(\operatorname{atan}(y/x)\)的适当象限。其范围为\((-\pi,
    \pi]\)。完整的定义如下：
- en: \[\begin{split}\operatorname{atan2}(y, x) = \begin{cases} \arctan\left(\frac
    y x\right) & \qquad x > 0 \\ \arctan\left(\frac y x\right) + \pi& \qquad y \ge
    0, x < 0 \\ \arctan\left(\frac y x\right) - \pi& \qquad y < 0, x < 0 \\ +\frac{\pi}{2}
    & \qquad y > 0, x = 0 \\ -\frac{\pi}{2} & \qquad y < 0, x = 0 \\ \text{undefined}
    & \qquad y = 0, x = 0 \end{cases}\end{split}\]
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}\operatorname{atan2}(y, x) = \begin{cases} \arctan\left(\frac
    y x\right) & \qquad x > 0 \\ \arctan\left(\frac y x\right) + \pi& \qquad y \ge
    0, x < 0 \\ \arctan\left(\frac y x\right) - \pi& \qquad y < 0, x < 0 \\ +\frac{\pi}{2}
    & \qquad y > 0, x = 0 \\ -\frac{\pi}{2} & \qquad y < 0, x = 0 \\ \text{undefined}
    & \qquad y = 0, x = 0 \end{cases}\end{split}\]
- en: 'Attention: Note the role reversal of both arguments. The \(y\)-coordinate is
    the first argument and the \(x\)-coordinate the second.'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：注意到两个参数的角色互换。\(y\)-坐标是第一个参数，\(x\)-坐标是第二个参数。
- en: 'If either \(x\) or \(y\) is complex:'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 如果\(x\)或\(y\)是复数：
- en: \[\operatorname{atan2}(y, x) = -i\log\left(\frac{x + iy}{\sqrt{x^2 + y^2}}\right)\]
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{atan2}(y, x) = -i\log\left(\frac{x + iy}{\sqrt{x^2 + y^2}}\right)\]
- en: Examples
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: 'Going counter-clock wise around the origin we find the following angles:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 逆时针绕原点我们找到以下角度：
- en: '[PRE63]'
  id: totrans-395
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: which are all correct. Compare this to the results of the ordinary \(\operatorname{atan}\)
    function for the point \((x, y) = (-1, 1)\)
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 这些都是正确的。将其与普通的\(\operatorname{atan}\)函数在点\((x, y) = (-1, 1)\)处的结果进行比较
- en: '[PRE64]'
  id: totrans-397
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'where only the \(\operatorname{atan2}\) function reurns what we expect. We
    can differentiate the function with respect to both arguments:'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 只有\(\operatorname{atan2}\)函数返回我们期望的值。我们可以对两个参数分别求导：
- en: '[PRE65]'
  id: totrans-399
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '[PRE66]'
  id: totrans-400
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'We can express the \(\operatorname{atan2}\) function in terms of complex logarithms:'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以用复对数表示 \(\operatorname{atan2}\) 函数：
- en: '[PRE67]'
  id: totrans-402
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'and in terms of \(\operatorname(atan)\):'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 并且用 \(\operatorname{atan}\) 表示：
- en: '[PRE68]'
  id: totrans-404
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: but note that this form is undefined on the negative real axis.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 但请注意，此形式在负实轴上是未定义的。
- en: See also
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin"),
    [`csc`](#sympy.functions.elementary.trigonometric.csc "sympy.functions.elementary.trigonometric.csc"),
    [`cos`](#sympy.functions.elementary.trigonometric.cos "sympy.functions.elementary.trigonometric.cos"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`tan`](#sympy.functions.elementary.trigonometric.tan "sympy.functions.elementary.trigonometric.tan"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`asin`](#sympy.functions.elementary.trigonometric.asin "sympy.functions.elementary.trigonometric.asin"),
    [`acsc`](#sympy.functions.elementary.trigonometric.acsc "sympy.functions.elementary.trigonometric.acsc"),
    [`acos`](#sympy.functions.elementary.trigonometric.acos "sympy.functions.elementary.trigonometric.acos"),
    [`asec`](#sympy.functions.elementary.trigonometric.asec "sympy.functions.elementary.trigonometric.asec"),
    [`atan`](#sympy.functions.elementary.trigonometric.atan "sympy.functions.elementary.trigonometric.atan"),
    [`acot`](#sympy.functions.elementary.trigonometric.acot "sympy.functions.elementary.trigonometric.acot")'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sin`](#sympy.functions.elementary.trigonometric.sin "sympy.functions.elementary.trigonometric.sin"),
    [`csc`](#sympy.functions.elementary.trigonometric.csc "sympy.functions.elementary.trigonometric.csc"),
    [`cos`](#sympy.functions.elementary.trigonometric.cos "sympy.functions.elementary.trigonometric.cos"),
    [`sec`](#sympy.functions.elementary.trigonometric.sec "sympy.functions.elementary.trigonometric.sec"),
    [`tan`](#sympy.functions.elementary.trigonometric.tan "sympy.functions.elementary.trigonometric.tan"),
    [`cot`](#sympy.functions.elementary.trigonometric.cot "sympy.functions.elementary.trigonometric.cot"),
    [`asin`](#sympy.functions.elementary.trigonometric.asin "sympy.functions.elementary.trigonometric.asin"),
    [`acsc`](#sympy.functions.elementary.trigonometric.acsc "sympy.functions.elementary.trigonometric.acsc"),
    [`acos`](#sympy.functions.elementary.trigonometric.acos "sympy.functions.elementary.trigonometric.acos"),
    [`asec`](#sympy.functions.elementary.trigonometric.asec "sympy.functions.elementary.trigonometric.asec"),
    [`atan`](#sympy.functions.elementary.trigonometric.atan "sympy.functions.elementary.trigonometric.atan"),
    [`acot`](#sympy.functions.elementary.trigonometric.acot "sympy.functions.elementary.trigonometric.acot")'
- en: References
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R315](#id43)]'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R315](#id43)]'
- en: '[https://en.wikipedia.org/wiki/Inverse_trigonometric_functions](https://en.wikipedia.org/wiki/Inverse_trigonometric_functions)'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Inverse_trigonometric_functions](https://en.wikipedia.org/wiki/Inverse_trigonometric_functions)'
- en: '[[R316](#id44)]'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R316](#id44)]'
- en: '[https://en.wikipedia.org/wiki/Atan2](https://en.wikipedia.org/wiki/Atan2)'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Atan2](https://en.wikipedia.org/wiki/Atan2)'
- en: '[[R317](#id45)]'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R317](#id45)]'
- en: '[https://functions.wolfram.com/ElementaryFunctions/ArcTan2](https://functions.wolfram.com/ElementaryFunctions/ArcTan2)'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/ElementaryFunctions/ArcTan2](https://functions.wolfram.com/ElementaryFunctions/ArcTan2)'
- en: Hyperbolic
  id: totrans-415
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 双曲线
- en: Hyperbolic Functions
  id: totrans-416
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 双曲函数
- en: '[PRE69]'
  id: totrans-417
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Base class for hyperbolic functions.
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲函数的基类。
- en: See also
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sinh`](#sympy.functions.elementary.hyperbolic.sinh "sympy.functions.elementary.hyperbolic.sinh"),
    [`cosh`](#sympy.functions.elementary.hyperbolic.cosh "sympy.functions.elementary.hyperbolic.cosh"),
    [`tanh`](#sympy.functions.elementary.hyperbolic.tanh "sympy.functions.elementary.hyperbolic.tanh"),
    [`coth`](#sympy.functions.elementary.hyperbolic.coth "sympy.functions.elementary.hyperbolic.coth")'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sinh`](#sympy.functions.elementary.hyperbolic.sinh "sympy.functions.elementary.hyperbolic.sinh"),
    [`cosh`](#sympy.functions.elementary.hyperbolic.cosh "sympy.functions.elementary.hyperbolic.cosh"),
    [`tanh`](#sympy.functions.elementary.hyperbolic.tanh "sympy.functions.elementary.hyperbolic.tanh"),
    [`coth`](#sympy.functions.elementary.hyperbolic.coth "sympy.functions.elementary.hyperbolic.coth")'
- en: '[PRE70]'
  id: totrans-421
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '`sinh(x)` is the hyperbolic sine of `x`.'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: '`sinh(x)` 是 `x` 的双曲正弦。'
- en: The hyperbolic sine function is \(\frac{e^x - e^{-x}}{2}\).
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲正弦函数是 \(\frac{e^x - e^{-x}}{2}\)。
- en: Examples
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE71]'
  id: totrans-425
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: See also
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`cosh`](#sympy.functions.elementary.hyperbolic.cosh "sympy.functions.elementary.hyperbolic.cosh"),
    [`tanh`](#sympy.functions.elementary.hyperbolic.tanh "sympy.functions.elementary.hyperbolic.tanh"),
    [`asinh`](#sympy.functions.elementary.hyperbolic.asinh "sympy.functions.elementary.hyperbolic.asinh")'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: '[`cosh`](#sympy.functions.elementary.hyperbolic.cosh "sympy.functions.elementary.hyperbolic.cosh"),
    [`tanh`](#sympy.functions.elementary.hyperbolic.tanh "sympy.functions.elementary.hyperbolic.tanh"),
    [`asinh`](#sympy.functions.elementary.hyperbolic.asinh "sympy.functions.elementary.hyperbolic.asinh")'
- en: '[PRE72]'
  id: totrans-428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: Returns this function as a complex coordinate.
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此函数的复坐标。
- en: '[PRE73]'
  id: totrans-430
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: Returns the first derivative of this function.
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此函数的一阶导数。
- en: '[PRE74]'
  id: totrans-432
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: Returns the inverse of this function.
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此函数的反函数。
- en: '[PRE75]'
  id: totrans-434
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: Returns the next term in the Taylor series expansion.
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 返回泰勒级数展开中的下一个项。
- en: '[PRE76]'
  id: totrans-436
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: '`cosh(x)` is the hyperbolic cosine of `x`.'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: '`cosh(x)` 是 `x` 的双曲余弦。'
- en: The hyperbolic cosine function is \(\frac{e^x + e^{-x}}{2}\).
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲余弦函数为 \(\frac{e^x + e^{-x}}{2}\).
- en: Examples
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE77]'
  id: totrans-440
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: See also
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sinh`](#sympy.functions.elementary.hyperbolic.sinh "sympy.functions.elementary.hyperbolic.sinh"),
    [`tanh`](#sympy.functions.elementary.hyperbolic.tanh "sympy.functions.elementary.hyperbolic.tanh"),
    [`acosh`](#sympy.functions.elementary.hyperbolic.acosh "sympy.functions.elementary.hyperbolic.acosh")'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sinh`](#sympy.functions.elementary.hyperbolic.sinh "sympy.functions.elementary.hyperbolic.sinh"),
    [`tanh`](#sympy.functions.elementary.hyperbolic.tanh "sympy.functions.elementary.hyperbolic.tanh"),
    [`acosh`](#sympy.functions.elementary.hyperbolic.acosh "sympy.functions.elementary.hyperbolic.acosh")'
- en: '[PRE78]'
  id: totrans-443
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '`tanh(x)` is the hyperbolic tangent of `x`.'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: '`tanh(x)` 是 `x` 的双曲正切。'
- en: The hyperbolic tangent function is \(\frac{\sinh(x)}{\cosh(x)}\).
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲正切函数为 \(\frac{\sinh(x)}{\cosh(x)}\).
- en: Examples
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE79]'
  id: totrans-447
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: See also
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sinh`](#sympy.functions.elementary.hyperbolic.sinh "sympy.functions.elementary.hyperbolic.sinh"),
    [`cosh`](#sympy.functions.elementary.hyperbolic.cosh "sympy.functions.elementary.hyperbolic.cosh"),
    [`atanh`](#sympy.functions.elementary.hyperbolic.atanh "sympy.functions.elementary.hyperbolic.atanh")'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sinh`](#sympy.functions.elementary.hyperbolic.sinh "sympy.functions.elementary.hyperbolic.sinh"),
    [`cosh`](#sympy.functions.elementary.hyperbolic.cosh "sympy.functions.elementary.hyperbolic.cosh"),
    [`atanh`](#sympy.functions.elementary.hyperbolic.atanh "sympy.functions.elementary.hyperbolic.atanh")'
- en: '[PRE80]'
  id: totrans-450
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Returns the inverse of this function.
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此函数的反函数。
- en: '[PRE81]'
  id: totrans-452
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '`coth(x)` is the hyperbolic cotangent of `x`.'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: '`coth(x)` 是 `x` 的双曲余切。'
- en: The hyperbolic cotangent function is \(\frac{\cosh(x)}{\sinh(x)}\).
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲余切函数为 \(\frac{\cosh(x)}{\sinh(x)}\).
- en: Examples
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE82]'
  id: totrans-456
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: See also
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sinh`](#sympy.functions.elementary.hyperbolic.sinh "sympy.functions.elementary.hyperbolic.sinh"),
    [`cosh`](#sympy.functions.elementary.hyperbolic.cosh "sympy.functions.elementary.hyperbolic.cosh"),
    [`acoth`](#sympy.functions.elementary.hyperbolic.acoth "sympy.functions.elementary.hyperbolic.acoth")'
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sinh`](#sympy.functions.elementary.hyperbolic.sinh "sympy.functions.elementary.hyperbolic.sinh"),
    [`cosh`](#sympy.functions.elementary.hyperbolic.cosh "sympy.functions.elementary.hyperbolic.cosh"),
    [`acoth`](#sympy.functions.elementary.hyperbolic.acoth "sympy.functions.elementary.hyperbolic.acoth")'
- en: '[PRE83]'
  id: totrans-459
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: Returns the inverse of this function.
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此函数的反函数。
- en: '[PRE84]'
  id: totrans-461
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: '`sech(x)` is the hyperbolic secant of `x`.'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: '`sech(x)` 是 `x` 的双曲正切。'
- en: The hyperbolic secant function is \(\frac{2}{e^x + e^{-x}}\)
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲正切函数为 \(\frac{2}{e^x + e^{-x}}\)
- en: Examples
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE85]'
  id: totrans-465
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: See also
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sinh`](#sympy.functions.elementary.hyperbolic.sinh "sympy.functions.elementary.hyperbolic.sinh"),
    [`cosh`](#sympy.functions.elementary.hyperbolic.cosh "sympy.functions.elementary.hyperbolic.cosh"),
    [`tanh`](#sympy.functions.elementary.hyperbolic.tanh "sympy.functions.elementary.hyperbolic.tanh"),
    [`coth`](#sympy.functions.elementary.hyperbolic.coth "sympy.functions.elementary.hyperbolic.coth"),
    [`csch`](#sympy.functions.elementary.hyperbolic.csch "sympy.functions.elementary.hyperbolic.csch"),
    [`asinh`](#sympy.functions.elementary.hyperbolic.asinh "sympy.functions.elementary.hyperbolic.asinh"),
    [`acosh`](#sympy.functions.elementary.hyperbolic.acosh "sympy.functions.elementary.hyperbolic.acosh")'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sinh`](#sympy.functions.elementary.hyperbolic.sinh "sympy.functions.elementary.hyperbolic.sinh"),
    [`cosh`](#sympy.functions.elementary.hyperbolic.cosh "sympy.functions.elementary.hyperbolic.cosh"),
    [`tanh`](#sympy.functions.elementary.hyperbolic.tanh "sympy.functions.elementary.hyperbolic.tanh"),
    [`coth`](#sympy.functions.elementary.hyperbolic.coth "sympy.functions.elementary.hyperbolic.coth"),
    [`csch`](#sympy.functions.elementary.hyperbolic.csch "sympy.functions.elementary.hyperbolic.csch"),
    [`asinh`](#sympy.functions.elementary.hyperbolic.asinh "sympy.functions.elementary.hyperbolic.asinh"),
    [`acosh`](#sympy.functions.elementary.hyperbolic.acosh "sympy.functions.elementary.hyperbolic.acosh")'
- en: '[PRE86]'
  id: totrans-468
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: '`csch(x)` is the hyperbolic cosecant of `x`.'
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: '`csch(x)` 是 `x` 的双曲余切。'
- en: The hyperbolic cosecant function is \(\frac{2}{e^x - e^{-x}}\)
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲余切函数为 \(\frac{2}{e^x - e^{-x}}\)
- en: Examples
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE87]'
  id: totrans-472
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: See also
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sinh`](#sympy.functions.elementary.hyperbolic.sinh "sympy.functions.elementary.hyperbolic.sinh"),
    [`cosh`](#sympy.functions.elementary.hyperbolic.cosh "sympy.functions.elementary.hyperbolic.cosh"),
    [`tanh`](#sympy.functions.elementary.hyperbolic.tanh "sympy.functions.elementary.hyperbolic.tanh"),
    [`sech`](#sympy.functions.elementary.hyperbolic.sech "sympy.functions.elementary.hyperbolic.sech"),
    [`asinh`](#sympy.functions.elementary.hyperbolic.asinh "sympy.functions.elementary.hyperbolic.asinh"),
    [`acosh`](#sympy.functions.elementary.hyperbolic.acosh "sympy.functions.elementary.hyperbolic.acosh")'
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sinh`](#sympy.functions.elementary.hyperbolic.sinh "sympy.functions.elementary.hyperbolic.sinh"),
    [`cosh`](#sympy.functions.elementary.hyperbolic.cosh "sympy.functions.elementary.hyperbolic.cosh"),
    [`tanh`](#sympy.functions.elementary.hyperbolic.tanh "sympy.functions.elementary.hyperbolic.tanh"),
    [`sech`](#sympy.functions.elementary.hyperbolic.sech "sympy.functions.elementary.hyperbolic.sech"),
    [`asinh`](#sympy.functions.elementary.hyperbolic.asinh "sympy.functions.elementary.hyperbolic.asinh"),
    [`acosh`](#sympy.functions.elementary.hyperbolic.acosh "sympy.functions.elementary.hyperbolic.acosh")'
- en: '[PRE88]'
  id: totrans-475
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: Returns the first derivative of this function
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此函数的一阶导数
- en: '[PRE89]'
  id: totrans-477
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: Returns the next term in the Taylor series expansion
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 返回泰勒级数展开的下一项
- en: Hyperbolic Inverses
  id: totrans-479
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 双曲反函数
- en: '[PRE90]'
  id: totrans-480
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: '`asinh(x)` is the inverse hyperbolic sine of `x`.'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: '`asinh(x)` 是 `x` 的反双曲 sine 函数。'
- en: The inverse hyperbolic sine function.
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 反双曲正弦函数。
- en: Examples
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE91]'
  id: totrans-484
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: See also
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`acosh`](#sympy.functions.elementary.hyperbolic.acosh "sympy.functions.elementary.hyperbolic.acosh"),
    [`atanh`](#sympy.functions.elementary.hyperbolic.atanh "sympy.functions.elementary.hyperbolic.atanh"),
    [`sinh`](#sympy.functions.elementary.hyperbolic.sinh "sympy.functions.elementary.hyperbolic.sinh")'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: '[`acosh`](#sympy.functions.elementary.hyperbolic.acosh "sympy.functions.elementary.hyperbolic.acosh"),
    [`atanh`](#sympy.functions.elementary.hyperbolic.atanh "sympy.functions.elementary.hyperbolic.atanh"),
    [`sinh`](#sympy.functions.elementary.hyperbolic.sinh "sympy.functions.elementary.hyperbolic.sinh")'
- en: '[PRE92]'
  id: totrans-487
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: Returns the inverse of this function.
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 返回该函数的反函数。
- en: '[PRE93]'
  id: totrans-489
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: '`acosh(x)` is the inverse hyperbolic cosine of `x`.'
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: '`acosh(x)` 是 `x` 的反双曲 cosine 函数。'
- en: The inverse hyperbolic cosine function.
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: 反双曲余弦函数。
- en: Examples
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE94]'
  id: totrans-493
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: See also
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`asinh`](#sympy.functions.elementary.hyperbolic.asinh "sympy.functions.elementary.hyperbolic.asinh"),
    [`atanh`](#sympy.functions.elementary.hyperbolic.atanh "sympy.functions.elementary.hyperbolic.atanh"),
    [`cosh`](#sympy.functions.elementary.hyperbolic.cosh "sympy.functions.elementary.hyperbolic.cosh")'
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: '[`asinh`](#sympy.functions.elementary.hyperbolic.asinh "sympy.functions.elementary.hyperbolic.asinh"),
    [`atanh`](#sympy.functions.elementary.hyperbolic.atanh "sympy.functions.elementary.hyperbolic.atanh"),
    [`cosh`](#sympy.functions.elementary.hyperbolic.cosh "sympy.functions.elementary.hyperbolic.cosh")'
- en: '[PRE95]'
  id: totrans-496
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: Returns the inverse of this function.
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 返回该函数的反函数。
- en: '[PRE96]'
  id: totrans-498
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: '`atanh(x)` is the inverse hyperbolic tangent of `x`.'
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: '`atanh(x)` 是 `x` 的反双曲 tangent 函数。'
- en: The inverse hyperbolic tangent function.
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 反双曲正切函数。
- en: Examples
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE97]'
  id: totrans-502
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: See also
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`asinh`](#sympy.functions.elementary.hyperbolic.asinh "sympy.functions.elementary.hyperbolic.asinh"),
    [`acosh`](#sympy.functions.elementary.hyperbolic.acosh "sympy.functions.elementary.hyperbolic.acosh"),
    [`tanh`](#sympy.functions.elementary.hyperbolic.tanh "sympy.functions.elementary.hyperbolic.tanh")'
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: '[`asinh`](#sympy.functions.elementary.hyperbolic.asinh "sympy.functions.elementary.hyperbolic.asinh"),
    [`acosh`](#sympy.functions.elementary.hyperbolic.acosh "sympy.functions.elementary.hyperbolic.acosh"),
    [`tanh`](#sympy.functions.elementary.hyperbolic.tanh "sympy.functions.elementary.hyperbolic.tanh")'
- en: '[PRE98]'
  id: totrans-505
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: Returns the inverse of this function.
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 返回该函数的反函数。
- en: '[PRE99]'
  id: totrans-507
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: '`acoth(x)` is the inverse hyperbolic cotangent of `x`.'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: '`acoth(x)` 是 `x` 的反双曲 cotangent 函数。'
- en: The inverse hyperbolic cotangent function.
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 反双曲 cotangent 函数。
- en: Examples
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE100]'
  id: totrans-511
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: See also
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`asinh`](#sympy.functions.elementary.hyperbolic.asinh "sympy.functions.elementary.hyperbolic.asinh"),
    [`acosh`](#sympy.functions.elementary.hyperbolic.acosh "sympy.functions.elementary.hyperbolic.acosh"),
    [`coth`](#sympy.functions.elementary.hyperbolic.coth "sympy.functions.elementary.hyperbolic.coth")'
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: '[`asinh`](#sympy.functions.elementary.hyperbolic.asinh "sympy.functions.elementary.hyperbolic.asinh"),
    [`acosh`](#sympy.functions.elementary.hyperbolic.acosh "sympy.functions.elementary.hyperbolic.acosh"),
    [`coth`](#sympy.functions.elementary.hyperbolic.coth "sympy.functions.elementary.hyperbolic.coth")'
- en: '[PRE101]'
  id: totrans-514
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: Returns the inverse of this function.
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 返回该函数的反函数。
- en: '[PRE102]'
  id: totrans-516
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: '`asech(x)` is the inverse hyperbolic secant of `x`.'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: '`asech(x)` 是 `x` 的反双曲 secant 函数。'
- en: The inverse hyperbolic secant function.
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: 反双曲 secant 函数。
- en: Examples
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE103]'
  id: totrans-520
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: See also
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`asinh`](#sympy.functions.elementary.hyperbolic.asinh "sympy.functions.elementary.hyperbolic.asinh"),
    [`atanh`](#sympy.functions.elementary.hyperbolic.atanh "sympy.functions.elementary.hyperbolic.atanh"),
    [`cosh`](#sympy.functions.elementary.hyperbolic.cosh "sympy.functions.elementary.hyperbolic.cosh"),
    [`acoth`](#sympy.functions.elementary.hyperbolic.acoth "sympy.functions.elementary.hyperbolic.acoth")'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: '[`asinh`](#sympy.functions.elementary.hyperbolic.asinh "sympy.functions.elementary.hyperbolic.asinh"),
    [`atanh`](#sympy.functions.elementary.hyperbolic.atanh "sympy.functions.elementary.hyperbolic.atanh"),
    [`cosh`](#sympy.functions.elementary.hyperbolic.cosh "sympy.functions.elementary.hyperbolic.cosh"),
    [`acoth`](#sympy.functions.elementary.hyperbolic.acoth "sympy.functions.elementary.hyperbolic.acoth")'
- en: References
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: 参考资料
- en: '[[R318](#id46)]'
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R318](#id46)]'
- en: '[https://en.wikipedia.org/wiki/Hyperbolic_function](https://en.wikipedia.org/wiki/Hyperbolic_function)'
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Hyperbolic_function](https://en.wikipedia.org/wiki/Hyperbolic_function)'
- en: '[[R319](#id47)]'
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R319](#id47)]'
- en: '[https://dlmf.nist.gov/4.37](https://dlmf.nist.gov/4.37)'
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/4.37](https://dlmf.nist.gov/4.37)'
- en: '[[R320](#id48)]'
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R320](#id48)]'
- en: '[https://functions.wolfram.com/ElementaryFunctions/ArcSech/](https://functions.wolfram.com/ElementaryFunctions/ArcSech/)'
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/ElementaryFunctions/ArcSech/](https://functions.wolfram.com/ElementaryFunctions/ArcSech/)'
- en: '[PRE104]'
  id: totrans-530
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: Returns the inverse of this function.
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 返回该函数的反函数。
- en: '[PRE105]'
  id: totrans-532
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: '`acsch(x)` is the inverse hyperbolic cosecant of `x`.'
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: '`acsch(x)` 是 `x` 的反双曲 cosecant 函数。'
- en: The inverse hyperbolic cosecant function.
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: 反双曲 cosecant 函数。
- en: Examples
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE106]'
  id: totrans-536
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: See also
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`asinh`](#sympy.functions.elementary.hyperbolic.asinh "sympy.functions.elementary.hyperbolic.asinh")'
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: '[`asinh`](#sympy.functions.elementary.hyperbolic.asinh "sympy.functions.elementary.hyperbolic.asinh")'
- en: References
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: 参考资料
- en: '[[R321](#id49)]'
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R321](#id49)]'
- en: '[https://en.wikipedia.org/wiki/Hyperbolic_function](https://en.wikipedia.org/wiki/Hyperbolic_function)'
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Hyperbolic_function](https://en.wikipedia.org/wiki/Hyperbolic_function)'
- en: '[[R322](#id50)]'
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R322](#id50)]'
- en: '[https://dlmf.nist.gov/4.37](https://dlmf.nist.gov/4.37)'
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dlmf.nist.gov/4.37](https://dlmf.nist.gov/4.37)'
- en: '[[R323](#id51)]'
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R323](#id51)]'
- en: '[https://functions.wolfram.com/ElementaryFunctions/ArcCsch/](https://functions.wolfram.com/ElementaryFunctions/ArcCsch/)'
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://functions.wolfram.com/ElementaryFunctions/ArcCsch/](https://functions.wolfram.com/ElementaryFunctions/ArcCsch/)'
- en: '[PRE107]'
  id: totrans-546
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: Returns the inverse of this function.
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此函数的倒数。
- en: Integer Functions
  id: totrans-548
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 整数函数
- en: '[PRE108]'
  id: totrans-549
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: Ceiling is a univariate function which returns the smallest integer value not
    less than its argument. This implementation generalizes ceiling to complex numbers
    by taking the ceiling of the real and imaginary parts separately.
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: Ceiling 是一个一元函数，返回不小于其参数的最小整数值。此实现通过分别取实部和虚部的 ceiling 泛化到复数。
- en: Examples
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE109]'
  id: totrans-552
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: See also
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.functions.elementary.integers.floor`](#sympy.functions.elementary.integers.floor
    "sympy.functions.elementary.integers.floor")'
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.functions.elementary.integers.floor`](#sympy.functions.elementary.integers.floor
    "sympy.functions.elementary.integers.floor")'
- en: References
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R324](#id52)]'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R324](#id52)]'
- en: “Concrete mathematics” by Graham, pp. 87
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: “具体数学”由 Graham，第 87 页
- en: '[[R325](#id53)]'
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R325](#id53)]'
- en: '[https://mathworld.wolfram.com/CeilingFunction.html](https://mathworld.wolfram.com/CeilingFunction.html)'
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/CeilingFunction.html](https://mathworld.wolfram.com/CeilingFunction.html)'
- en: '[PRE110]'
  id: totrans-560
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: Floor is a univariate function which returns the largest integer value not greater
    than its argument. This implementation generalizes floor to complex numbers by
    taking the floor of the real and imaginary parts separately.
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: Floor 是一个一元函数，返回不大于其参数的最大整数值。此实现通过分别取实部和虚部的 floor 泛化到复数。
- en: Examples
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE111]'
  id: totrans-563
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: See also
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.functions.elementary.integers.ceiling`](#sympy.functions.elementary.integers.ceiling
    "sympy.functions.elementary.integers.ceiling")'
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.functions.elementary.integers.ceiling`](#sympy.functions.elementary.integers.ceiling
    "sympy.functions.elementary.integers.ceiling")'
- en: References
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R326](#id54)]'
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R326](#id54)]'
- en: “Concrete mathematics” by Graham, pp. 87
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: “具体数学”由 Graham，第 87 页
- en: '[[R327](#id55)]'
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R327](#id55)]'
- en: '[https://mathworld.wolfram.com/FloorFunction.html](https://mathworld.wolfram.com/FloorFunction.html)'
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/FloorFunction.html](https://mathworld.wolfram.com/FloorFunction.html)'
- en: '[PRE112]'
  id: totrans-571
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: Abstract base class for rounding functions.
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: 用于舍入函数的抽象基类。
- en: '[PRE113]'
  id: totrans-573
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: Represents the fractional part of x
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: 表示 x 的分数部分
- en: For real numbers it is defined [[R328]](#r328) as
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: 对于实数，其定义如 [[R328]](#r328)
- en: \[x - \left\lfloor{x}\right\rfloor\]
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: \[x - \left\lfloor{x}\right\rfloor\]
- en: Examples
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE114]'
  id: totrans-578
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: returns zero for integer arguments
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: 整数参数返回零
- en: '[PRE115]'
  id: totrans-580
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: rewrite as floor
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: 重写为 floor
- en: '[PRE116]'
  id: totrans-582
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: for complex arguments
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: 适用于复数参数
- en: '[PRE117]'
  id: totrans-584
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: See also
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.functions.elementary.integers.floor`](#sympy.functions.elementary.integers.floor
    "sympy.functions.elementary.integers.floor"), [`sympy.functions.elementary.integers.ceiling`](#sympy.functions.elementary.integers.ceiling
    "sympy.functions.elementary.integers.ceiling")'
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.functions.elementary.integers.floor`](#sympy.functions.elementary.integers.floor
    "sympy.functions.elementary.integers.floor"), [`sympy.functions.elementary.integers.ceiling`](#sympy.functions.elementary.integers.ceiling
    "sympy.functions.elementary.integers.ceiling")'
- en: References
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[R328] ([1](#id56),[2](#id57))'
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
  zh: '[R328] ([1](#id56),[2](#id57))'
- en: '[https://en.wikipedia.org/wiki/Fractional_part](https://en.wikipedia.org/wiki/Fractional_part)'
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Fractional_part](https://en.wikipedia.org/wiki/Fractional_part)'
- en: '[[R329](#id58)]'
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R329](#id58)]'
- en: '[https://mathworld.wolfram.com/FractionalPart.html](https://mathworld.wolfram.com/FractionalPart.html)'
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/FractionalPart.html](https://mathworld.wolfram.com/FractionalPart.html)'
- en: Exponential
  id: totrans-592
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 指数
- en: '[PRE118]'
  id: totrans-593
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: The exponential function, \(e^x\).
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: 指数函数，\(e^x\)。
- en: 'Parameters:'
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**arg** : Expr'
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
  zh: '**arg** : 表达式'
- en: Examples
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE119]'
  id: totrans-598
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: See also
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`log`](#sympy.functions.elementary.exponential.log "sympy.functions.elementary.exponential.log")'
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: '[`log`](#sympy.functions.elementary.exponential.log "sympy.functions.elementary.exponential.log")'
- en: '[PRE120]'
  id: totrans-601
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: Returns this function as a 2-tuple representing a complex number.
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此函数作为表示复数的二元组。
- en: Examples
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE121]'
  id: totrans-604
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: See also
  id: totrans-605
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.functions.elementary.complexes.re`](#sympy.functions.elementary.complexes.re
    "sympy.functions.elementary.complexes.re"), [`sympy.functions.elementary.complexes.im`](#sympy.functions.elementary.complexes.im
    "sympy.functions.elementary.complexes.im")'
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.functions.elementary.complexes.re`](#sympy.functions.elementary.complexes.re
    "sympy.functions.elementary.complexes.re"), [`sympy.functions.elementary.complexes.im`](#sympy.functions.elementary.complexes.im
    "sympy.functions.elementary.complexes.im")'
- en: '[PRE122]'
  id: totrans-607
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: Returns the base of the exponential function.
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: 返回指数函数的底数。
- en: '[PRE123]'
  id: totrans-609
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: Returns the first derivative of this function.
  id: totrans-610
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此函数的第一阶导数。
- en: '[PRE124]'
  id: totrans-611
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: Calculates the next term in the Taylor series expansion.
  id: totrans-612
  prefs: []
  type: TYPE_NORMAL
  zh: 计算泰勒级数展开的下一个项。
- en: '[PRE125]'
  id: totrans-613
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: The Lambert W function \(W(z)\) is defined as the inverse function of \(w \exp(w)\)
    [[R330]](#r330).
  id: totrans-614
  prefs: []
  type: TYPE_NORMAL
  zh: Lambert W 函数 \(W(z)\) 定义为 \(w \exp(w)\) 的反函数 [[R330]](#r330)。
- en: Explanation
  id: totrans-615
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: In other words, the value of \(W(z)\) is such that \(z = W(z) \exp(W(z))\) for
    any complex number \(z\). The Lambert W function is a multivalued function with
    infinitely many branches \(W_k(z)\), indexed by \(k \in \mathbb{Z}\). Each branch
    gives a different solution \(w\) of the equation \(z = w \exp(w)\).
  id: totrans-616
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，\(W(z)\) 的值使得对于任意复数 \(z\) 都有 \(z = W(z) \exp(W(z))\)。Lambert W 函数是一个多值函数，有无穷多个分支
    \(W_k(z)\)，其中 \(k \in \mathbb{Z}\)。每个分支给出方程 \(z = w \exp(w)\) 的不同解 \(w\)。
- en: 'The Lambert W function has two partially real branches: the principal branch
    (\(k = 0\)) is real for real \(z > -1/e\), and the \(k = -1\) branch is real for
    \(-1/e < z < 0\). All branches except \(k = 0\) have a logarithmic singularity
    at \(z = 0\).'
  id: totrans-617
  prefs: []
  type: TYPE_NORMAL
  zh: Lambert W 函数有两个部分实数分支：主分支 (\(k = 0\)) 在实数 \(z > -1/e\) 时为实数，\(k = -1\) 分支在 \(-1/e
    < z < 0\) 时为实数。除了 \(k = 0\) 外，所有分支在 \(z = 0\) 处有对数奇异性。
- en: Examples
  id: totrans-618
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE126]'
  id: totrans-619
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: References
  id: totrans-620
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[R330] ([1](#id59),[2](#id60))'
  id: totrans-621
  prefs: []
  type: TYPE_NORMAL
  zh: '[R330] ([1](#id59),[2](#id60))'
- en: '[https://en.wikipedia.org/wiki/Lambert_W_function](https://en.wikipedia.org/wiki/Lambert_W_function)'
  id: totrans-622
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Lambert_W_function](https://en.wikipedia.org/wiki/Lambert_W_function)'
- en: '[PRE127]'
  id: totrans-623
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: Return the first derivative of this function.
  id: totrans-624
  prefs: []
  type: TYPE_NORMAL
  zh: 返回该函数的一阶导数。
- en: '[PRE128]'
  id: totrans-625
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: The natural logarithm function \(\ln(x)\) or \(\log(x)\).
  id: totrans-626
  prefs: []
  type: TYPE_NORMAL
  zh: 自然对数函数 \(\ln(x)\) 或 \(\log(x)\)。
- en: Explanation
  id: totrans-627
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Logarithms are taken with the natural base, \(e\). To get a logarithm of a different
    base `b`, use `log(x, b)`, which is essentially short-hand for `log(x)/log(b)`.
  id: totrans-628
  prefs: []
  type: TYPE_NORMAL
  zh: 对数以自然底 \(e\) 取。要得到不同底数 \(b\) 的对数，使用 `log(x, b)`，这本质上是 `log(x)/log(b)` 的简写。
- en: '`log` represents the principal branch of the natural logarithm. As such it
    has a branch cut along the negative real axis and returns values having a complex
    argument in \((-\pi, \pi]\).'
  id: totrans-629
  prefs: []
  type: TYPE_NORMAL
  zh: '`log` 表示自然对数的主分支。因此，它在负实轴上有一个分支切断，并返回复数参数在 \((-\pi, \pi]\) 内的值。'
- en: Examples
  id: totrans-630
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE129]'
  id: totrans-631
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: See also
  id: totrans-632
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`exp`](#sympy.functions.elementary.exponential.exp "sympy.functions.elementary.exponential.exp")'
  id: totrans-633
  prefs: []
  type: TYPE_NORMAL
  zh: '[`exp`](#sympy.functions.elementary.exponential.exp "sympy.functions.elementary.exponential.exp")'
- en: '[PRE130]'
  id: totrans-634
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: Returns this function in the form (base, exponent).
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
  zh: 以 (base, exponent) 的形式返回该函数。
- en: '[PRE131]'
  id: totrans-636
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: Returns this function as a complex coordinate.
  id: totrans-637
  prefs: []
  type: TYPE_NORMAL
  zh: 以复数坐标返回该函数。
- en: Examples
  id: totrans-638
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE132]'
  id: totrans-639
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: '[PRE133]'
  id: totrans-640
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: Returns the first derivative of the function.
  id: totrans-641
  prefs: []
  type: TYPE_NORMAL
  zh: 返回该函数的一阶导数。
- en: '[PRE134]'
  id: totrans-642
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: Returns \(e^x\), the inverse function of \(\log(x)\).
  id: totrans-643
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 \(e^x\)，即 \(\log(x)\) 的反函数。
- en: '[PRE135]'
  id: totrans-644
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: Returns the next term in the Taylor series expansion of \(\log(1+x)\).
  id: totrans-645
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 \(\log(1+x)\) 泰勒级数展开的下一个项。
- en: '[PRE136]'
  id: totrans-646
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: Represent a *polar number* (see g-function Sphinx documentation).
  id: totrans-647
  prefs: []
  type: TYPE_NORMAL
  zh: 表示 *极坐标数*（请参阅 g-function Sphinx 文档）。
- en: Explanation
  id: totrans-648
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: '`exp_polar` represents the function \(Exp: \mathbb{C} \rightarrow \mathcal{S}\),
    sending the complex number \(z = a + bi\) to the polar number \(r = exp(a), \theta
    = b\). It is one of the main functions to construct polar numbers.'
  id: totrans-649
  prefs: []
  type: TYPE_NORMAL
  zh: '`exp_polar` 表示函数 \(Exp: \mathbb{C} \rightarrow \mathcal{S}\)，将复数 \(z = a +
    bi\) 发送到极坐标数 \(r = exp(a), \theta = b\)。它是构建极坐标数的主要函数之一。'
- en: Examples
  id: totrans-650
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE137]'
  id: totrans-651
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: 'The main difference is that polar numbers do not “wrap around” at \(2 \pi\):'
  id: totrans-652
  prefs: []
  type: TYPE_NORMAL
  zh: 主要区别在于极坐标数不会在 \(2 \pi\) 处“环绕”：
- en: '[PRE138]'
  id: totrans-653
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: 'apart from that they behave mostly like classical complex numbers:'
  id: totrans-654
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，它们的行为大多像经典复数一样：
- en: '[PRE139]'
  id: totrans-655
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: See also
  id: totrans-656
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.simplify.powsimp.powsimp`](../simplify/simplify.html#sympy.simplify.powsimp.powsimp
    "sympy.simplify.powsimp.powsimp"), [`polar_lift`](#sympy.functions.elementary.complexes.polar_lift
    "sympy.functions.elementary.complexes.polar_lift"), [`periodic_argument`](#sympy.functions.elementary.complexes.periodic_argument
    "sympy.functions.elementary.complexes.periodic_argument"), [`principal_branch`](#sympy.functions.elementary.complexes.principal_branch
    "sympy.functions.elementary.complexes.principal_branch")'
  id: totrans-657
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.simplify.powsimp.powsimp`](../simplify/simplify.html#sympy.simplify.powsimp.powsimp
    "sympy.simplify.powsimp.powsimp"), [`polar_lift`](#sympy.functions.elementary.complexes.polar_lift
    "sympy.functions.elementary.complexes.polar_lift"), [`periodic_argument`](#sympy.functions.elementary.complexes.periodic_argument
    "sympy.functions.elementary.complexes.periodic_argument"), [`principal_branch`](#sympy.functions.elementary.complexes.principal_branch
    "sympy.functions.elementary.complexes.principal_branch")'
- en: Piecewise
  id: totrans-658
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Piecewise
- en: '[PRE140]'
  id: totrans-659
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: Represents an expression, condition pair.
  id: totrans-660
  prefs: []
  type: TYPE_NORMAL
  zh: 表示一个表达式、条件对。
- en: '[PRE141]'
  id: totrans-661
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: Returns the condition of this pair.
  id: totrans-662
  prefs: []
  type: TYPE_NORMAL
  zh: 返回这对的条件。
- en: '[PRE142]'
  id: totrans-663
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: Returns the expression of this pair.
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
  zh: 返回这对的表达式。
- en: '[PRE143]'
  id: totrans-665
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: Represents a piecewise function.
  id: totrans-666
  prefs: []
  type: TYPE_NORMAL
  zh: 表示一个分段函数。
- en: 'Usage:'
  id: totrans-667
  prefs: []
  type: TYPE_NORMAL
  zh: 用法：
- en: Piecewise( (expr,cond), (expr,cond), … )
  id: totrans-668
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Piecewise( (expr,cond), (expr,cond), … )
- en: ''
  id: totrans-669
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Each argument is a 2-tuple defining an expression and condition
  id: totrans-670
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个参数都是定义表达式和条件的 2-元组
- en: ''
  id: totrans-671
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-672
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: The conds are evaluated in turn returning the first that is True. If any of
    the evaluated conds are not explicitly False, e.g. `x < 1`, the function is returned
    in symbolic form.
  id: totrans-673
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 逐个评估条件，返回第一个为`True`的条件。如果任何评估的条件不明确为`False`，例如`x < 1`，则函数以符号形式返回。
- en: ''
  id: totrans-674
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-675
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: If the function is evaluated at a place where all conditions are False, nan
    will be returned.
  id: totrans-676
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果在所有条件均为`False`的位置评估函数，则将返回`nan`。
- en: ''
  id: totrans-677
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-678
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Pairs where the cond is explicitly False, will be removed and no pair appearing
    after a True condition will ever be retained. If a single pair with a True condition
    remains, it will be returned, even when evaluation is False.
  id: totrans-679
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果`cond`明确为`False`，则将删除条件为`False`的对，并且在`True`条件后出现的对将永远不会被保留。如果只剩下一个带有`True`条件的对，则将返回它，即使评估为`False`也是如此。
- en: Examples
  id: totrans-680
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE144]'
  id: totrans-681
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: 'Booleans can contain Piecewise elements:'
  id: totrans-682
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔值可以包含分段元素：
- en: '[PRE145]'
  id: totrans-683
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: 'The folded version of this results in a Piecewise whose expressions are Booleans:'
  id: totrans-684
  prefs: []
  type: TYPE_NORMAL
  zh: 这种折叠版本的结果是一个布尔值的分段函数：
- en: '[PRE146]'
  id: totrans-685
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: 'When a Boolean containing Piecewise (like cond) or a Piecewise with Boolean
    expressions (like folded_cond) is used as a condition, it is converted to an equivalent
    [`ITE`](../logic.html#sympy.logic.boolalg.ITE "sympy.logic.boolalg.ITE") object:'
  id: totrans-686
  prefs: []
  type: TYPE_NORMAL
  zh: 当包含分段函数的布尔值（如`cond`）或带有布尔表达式的分段函数（如`folded_cond`）被用作条件时，它将转换为等效的[`ITE`](../logic.html#sympy.logic.boolalg.ITE
    "sympy.logic.boolalg.ITE")对象：
- en: '[PRE147]'
  id: totrans-687
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: 'When a condition is an `ITE`, it will be converted to a simplified Boolean
    expression:'
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
  zh: 当条件是一个`ITE`时，它将被转换为简化的布尔表达式：
- en: '[PRE148]'
  id: totrans-689
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: See also
  id: totrans-690
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`piecewise_fold`](#sympy.functions.elementary.piecewise.piecewise_fold "sympy.functions.elementary.piecewise.piecewise_fold"),
    [`piecewise_exclusive`](#sympy.functions.elementary.piecewise.piecewise_exclusive
    "sympy.functions.elementary.piecewise.piecewise_exclusive"), [`ITE`](../logic.html#sympy.logic.boolalg.ITE
    "sympy.logic.boolalg.ITE")'
  id: totrans-691
  prefs: []
  type: TYPE_NORMAL
  zh: '[`piecewise_fold`](#sympy.functions.elementary.piecewise.piecewise_fold "sympy.functions.elementary.piecewise.piecewise_fold"),
    [`piecewise_exclusive`](#sympy.functions.elementary.piecewise.piecewise_exclusive
    "sympy.functions.elementary.piecewise.piecewise_exclusive"), [`ITE`](../logic.html#sympy.logic.boolalg.ITE
    "sympy.logic.boolalg.ITE")'
- en: '[PRE149]'
  id: totrans-692
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: Return the indefinite integral of the Piecewise such that subsequent substitution
    of x with a value will give the value of the integral (not including the constant
    of integration) up to that point. To only integrate the individual parts of Piecewise,
    use the `piecewise_integrate` method.
  id: totrans-693
  prefs: []
  type: TYPE_NORMAL
  zh: 返回分段函数的不定积分，使得将x替换为一个值后将给出积分的值（不包括积分常数）。要仅积分分段函数的各部分，请使用`piecewise_integrate`方法。
- en: Examples
  id: totrans-694
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE150]'
  id: totrans-695
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: See also
  id: totrans-696
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`Piecewise.piecewise_integrate`](#sympy.functions.elementary.piecewise.Piecewise.piecewise_integrate
    "sympy.functions.elementary.piecewise.Piecewise.piecewise_integrate")'
  id: totrans-697
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Piecewise.piecewise_integrate`](#sympy.functions.elementary.piecewise.Piecewise.piecewise_integrate
    "sympy.functions.elementary.piecewise.Piecewise.piecewise_integrate")'
- en: '[PRE151]'
  id: totrans-698
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: Return tuples for each argument of self that give the expression and the interval
    in which it is valid which is contained within the given domain. If a condition
    cannot be converted to a set, an error will be raised. The variable of the conditions
    is assumed to be real; sets of real values are returned.
  id: totrans-699
  prefs: []
  type: TYPE_NORMAL
  zh: 返回每个self参数的元组，给出表达式和其在给定域内包含的有效区间。如果条件无法转换为集合，则会引发错误。假定条件的变量为实数；将返回实值集合。
- en: Examples
  id: totrans-700
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE152]'
  id: totrans-701
  prefs: []
  type: TYPE_PRE
  zh: '[PRE152]'
- en: '[PRE153]'
  id: totrans-702
  prefs: []
  type: TYPE_PRE
  zh: '[PRE153]'
- en: Evaluate this piecewise function.
  id: totrans-703
  prefs: []
  type: TYPE_NORMAL
  zh: 评估这个分段函数。
- en: '[PRE154]'
  id: totrans-704
  prefs: []
  type: TYPE_PRE
  zh: '[PRE154]'
- en: Either return a modified version of the args or, if no modifications were made,
    return None.
  id: totrans-705
  prefs: []
  type: TYPE_NORMAL
  zh: 要么返回参数的修改版本，或者如果没有进行修改，则返回`None`。
- en: 'Modifications that are made here:'
  id: totrans-706
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里进行的修改：
- en: relationals are made canonical
  id: totrans-707
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关系被规范化
- en: any False conditions are dropped
  id: totrans-708
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 丢弃任何`False`条件
- en: any repeat of a previous condition is ignored
  id: totrans-709
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 忽略任何重复的先前条件
- en: any args past one with a true condition are dropped
  id: totrans-710
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 任何带有真条件的参数均被丢弃
- en: If there are no args left, nan will be returned. If there is a single arg with
    a True condition, its corresponding expression will be returned.
  id: totrans-711
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有剩余的参数，则将返回`nan`。如果有一个带有`True`条件的单个参数，则将返回其对应的表达式。
- en: Examples
  id: totrans-712
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE155]'
  id: totrans-713
  prefs: []
  type: TYPE_PRE
  zh: '[PRE155]'
- en: '[PRE156]'
  id: totrans-714
  prefs: []
  type: TYPE_PRE
  zh: '[PRE156]'
- en: Return the Piecewise with each expression being replaced with its antiderivative.
    To obtain a continuous antiderivative, use the [`integrate()`](../integrals/integrals.html#sympy.integrals.integrals.integrate
    "sympy.integrals.integrals.integrate") function or method.
  id: totrans-715
  prefs: []
  type: TYPE_NORMAL
  zh: 返回每个表达式的反导数的分段函数。要获得连续的反导数，请使用[`integrate()`](../integrals/integrals.html#sympy.integrals.integrals.integrate
    "sympy.integrals.integrals.integrate")函数或方法。
- en: Examples
  id: totrans-716
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE157]'
  id: totrans-717
  prefs: []
  type: TYPE_PRE
  zh: '[PRE157]'
- en: 'Note that this does not give a continuous function, e.g. at x = 1 the 3rd condition
    applies and the antiderivative there is 2*x so the value of the antiderivative
    is 2:'
  id: totrans-718
  prefs: []
  type: TYPE_NORMAL
  zh: 注意这并不会产生连续函数，例如在 x = 1 处应用第三个条件，其原函数为 2*x，因此原函数的值为 2：
- en: '[PRE158]'
  id: totrans-719
  prefs: []
  type: TYPE_PRE
  zh: '[PRE158]'
- en: 'The continuous derivative accounts for the integral *up to* the point of interest,
    however:'
  id: totrans-720
  prefs: []
  type: TYPE_NORMAL
  zh: 连续导数考虑到感兴趣点之前的积分 *部分*，然而：
- en: '[PRE159]'
  id: totrans-721
  prefs: []
  type: TYPE_PRE
  zh: '[PRE159]'
- en: See also
  id: totrans-722
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`Piecewise._eval_integral`](#sympy.functions.elementary.piecewise.Piecewise._eval_integral
    "sympy.functions.elementary.piecewise.Piecewise._eval_integral")'
  id: totrans-723
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Piecewise._eval_integral`](#sympy.functions.elementary.piecewise.Piecewise._eval_integral
    "sympy.functions.elementary.piecewise.Piecewise._eval_integral")'
- en: '[PRE160]'
  id: totrans-724
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: Rewrite [`Piecewise`](#sympy.functions.elementary.piecewise.Piecewise "sympy.functions.elementary.piecewise.Piecewise")
    with mutually exclusive conditions.
  id: totrans-725
  prefs: []
  type: TYPE_NORMAL
  zh: 重写 [`Piecewise`](#sympy.functions.elementary.piecewise.Piecewise "sympy.functions.elementary.piecewise.Piecewise")
    以具有互斥条件。
- en: 'Parameters:'
  id: totrans-726
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**expr: a SymPy expression.**'
  id: totrans-727
  prefs: []
  type: TYPE_NORMAL
  zh: '**expr: SymPy 表达式。**'
- en: Any [`Piecewise`](#sympy.functions.elementary.piecewise.Piecewise "sympy.functions.elementary.piecewise.Piecewise")
    in the expression will be rewritten.
  id: totrans-728
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 表达式中的任何 [`Piecewise`](#sympy.functions.elementary.piecewise.Piecewise "sympy.functions.elementary.piecewise.Piecewise")
    将被重写。
- en: '**skip_nan: ``bool`` (default ``False``)**'
  id: totrans-729
  prefs: []
  type: TYPE_NORMAL
  zh: '**skip_nan: ``bool`` (默认 ``False``)**'
- en: If `skip_nan` is set to `True` then a final [`NaN`](../core.html#sympy.core.numbers.NaN
    "sympy.core.numbers.NaN") case will not be included.
  id: totrans-730
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果 `skip_nan` 设置为 `True`，则最终不会包括 [`NaN`](../core.html#sympy.core.numbers.NaN
    "sympy.core.numbers.NaN") 情况。
- en: '**deep: ``bool`` (default ``True``)**'
  id: totrans-731
  prefs: []
  type: TYPE_NORMAL
  zh: '**deep: ``bool`` (默认 ``True``)**'
- en: If `deep` is `True` then [`piecewise_exclusive()`](#sympy.functions.elementary.piecewise.piecewise_exclusive
    "sympy.functions.elementary.piecewise.piecewise_exclusive") will rewrite any [`Piecewise`](#sympy.functions.elementary.piecewise.Piecewise
    "sympy.functions.elementary.piecewise.Piecewise") subexpressions in `expr` rather
    than just rewriting `expr` itself.
  id: totrans-732
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果 `deep` 为 `True`，则 [`piecewise_exclusive()`](#sympy.functions.elementary.piecewise.piecewise_exclusive
    "sympy.functions.elementary.piecewise.piecewise_exclusive") 将重写 `expr` 中的任何 [`Piecewise`](#sympy.functions.elementary.piecewise.Piecewise
    "sympy.functions.elementary.piecewise.Piecewise") 子表达式，而不仅仅是重写 `expr` 本身。
- en: 'Returns:'
  id: totrans-733
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: An expression equivalent to `expr` but where all [`Piecewise`](#sympy.functions.elementary.piecewise.Piecewise
    "sympy.functions.elementary.piecewise.Piecewise") have
  id: totrans-734
  prefs: []
  type: TYPE_NORMAL
  zh: 一个与 `expr` 等价的表达式，但所有 [`Piecewise`](#sympy.functions.elementary.piecewise.Piecewise
    "sympy.functions.elementary.piecewise.Piecewise") 都具有
- en: been rewritten with mutually exclusive conditions.
  id: totrans-735
  prefs: []
  type: TYPE_NORMAL
  zh: 已使用互斥条件重写。
- en: Explanation
  id: totrans-736
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: SymPy represents the conditions of a [`Piecewise`](#sympy.functions.elementary.piecewise.Piecewise
    "sympy.functions.elementary.piecewise.Piecewise") in an “if-elif”-fashion, allowing
    more than one condition to be simultaneously True. The interpretation is that
    the first condition that is True is the case that holds. While this is a useful
    representation computationally it is not how a piecewise formula is typically
    shown in a mathematical text. The [`piecewise_exclusive()`](#sympy.functions.elementary.piecewise.piecewise_exclusive
    "sympy.functions.elementary.piecewise.piecewise_exclusive") function can be used
    to rewrite any [`Piecewise`](#sympy.functions.elementary.piecewise.Piecewise "sympy.functions.elementary.piecewise.Piecewise")
    with more typical mutually exclusive conditions.
  id: totrans-737
  prefs: []
  type: TYPE_NORMAL
  zh: SymPy 以 “if-elif” 方式表示 [`Piecewise`](#sympy.functions.elementary.piecewise.Piecewise
    "sympy.functions.elementary.piecewise.Piecewise") 的条件，允许多个条件同时为真。解释是首个为真的条件即为符合条件。虽然这在计算上是一个有用的表示，但这不是数学文本中典型显示分段函数的方式。可以使用
    [`piecewise_exclusive()`](#sympy.functions.elementary.piecewise.piecewise_exclusive
    "sympy.functions.elementary.piecewise.piecewise_exclusive") 函数将任何具有更典型互斥条件的 [`Piecewise`](#sympy.functions.elementary.piecewise.Piecewise
    "sympy.functions.elementary.piecewise.Piecewise") 重写。
- en: Note that further manipulation of the resulting [`Piecewise`](#sympy.functions.elementary.piecewise.Piecewise
    "sympy.functions.elementary.piecewise.Piecewise"), e.g. simplifying it, will most
    likely make it non-exclusive. Hence, this is primarily a function to be used in
    conjunction with printing the Piecewise or if one would like to reorder the expression-condition
    pairs.
  id: totrans-738
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，进一步处理结果的 [`Piecewise`](#sympy.functions.elementary.piecewise.Piecewise "sympy.functions.elementary.piecewise.Piecewise")，例如简化它，很可能会使它变得非排他。因此，这主要是一个与打印
    Piecewise 结合使用的函数，或者如果想要重新排序表达式条件对时使用的函数。
- en: If it is not possible to determine that all possibilities are covered by the
    different cases of the [`Piecewise`](#sympy.functions.elementary.piecewise.Piecewise
    "sympy.functions.elementary.piecewise.Piecewise") then a final [`NaN`](../core.html#sympy.core.numbers.NaN
    "sympy.core.numbers.NaN") case will be included explicitly. This can be prevented
    by passing `skip_nan=True`.
  id: totrans-739
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不能确定不同情况下的所有可能性都被[`Piecewise`](#sympy.functions.elementary.piecewise.Piecewise
    "sympy.functions.elementary.piecewise.Piecewise")覆盖，则最终将明确包含[`NaN`](../core.html#sympy.core.numbers.NaN
    "sympy.core.numbers.NaN")情况。可以通过传递`skip_nan=True`来防止这种情况。
- en: Examples
  id: totrans-740
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE161]'
  id: totrans-741
  prefs: []
  type: TYPE_PRE
  zh: '[PRE161]'
- en: See also
  id: totrans-742
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`Piecewise`](#sympy.functions.elementary.piecewise.Piecewise "sympy.functions.elementary.piecewise.Piecewise"),
    [`piecewise_fold`](#sympy.functions.elementary.piecewise.piecewise_fold "sympy.functions.elementary.piecewise.piecewise_fold")'
  id: totrans-743
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Piecewise`](#sympy.functions.elementary.piecewise.Piecewise "sympy.functions.elementary.piecewise.Piecewise"),
    [`piecewise_fold`](#sympy.functions.elementary.piecewise.piecewise_fold "sympy.functions.elementary.piecewise.piecewise_fold")'
- en: '[PRE162]'
  id: totrans-744
  prefs: []
  type: TYPE_PRE
  zh: '[PRE162]'
- en: Takes an expression containing a piecewise function and returns the expression
    in piecewise form. In addition, any ITE conditions are rewritten in negation normal
    form and simplified.
  id: totrans-745
  prefs: []
  type: TYPE_NORMAL
  zh: 获取包含分段函数的表达式并以分段形式返回表达式。此外，任何ITE条件都将被重写为否定标准形式并简化。
- en: The final Piecewise is evaluated (default) but if the raw form is desired, send
    `evaluate=False`; if trivial evaluation is desired, send `evaluate=None` and duplicate
    conditions and processing of True and False will be handled.
  id: totrans-746
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下评估最终的Piecewise，但如果需要原始形式，请发送`evaluate=False`；如果需要平凡评估，请发送`evaluate=None`，并处理True和False的重复条件和处理。
- en: Examples
  id: totrans-747
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE163]'
  id: totrans-748
  prefs: []
  type: TYPE_PRE
  zh: '[PRE163]'
- en: See also
  id: totrans-749
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`Piecewise`](#sympy.functions.elementary.piecewise.Piecewise "sympy.functions.elementary.piecewise.Piecewise"),
    [`piecewise_exclusive`](#sympy.functions.elementary.piecewise.piecewise_exclusive
    "sympy.functions.elementary.piecewise.piecewise_exclusive")'
  id: totrans-750
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Piecewise`](#sympy.functions.elementary.piecewise.Piecewise "sympy.functions.elementary.piecewise.Piecewise"),
    [`piecewise_exclusive`](#sympy.functions.elementary.piecewise.piecewise_exclusive
    "sympy.functions.elementary.piecewise.piecewise_exclusive")'
- en: Miscellaneous
  id: totrans-751
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 杂项
- en: '[PRE164]'
  id: totrans-752
  prefs: []
  type: TYPE_PRE
  zh: '[PRE164]'
- en: The identity function
  id: totrans-753
  prefs: []
  type: TYPE_NORMAL
  zh: 恒等函数
- en: Examples
  id: totrans-754
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE165]'
  id: totrans-755
  prefs: []
  type: TYPE_PRE
  zh: '[PRE165]'
- en: '[PRE166]'
  id: totrans-756
  prefs: []
  type: TYPE_PRE
  zh: '[PRE166]'
- en: Return, if possible, the minimum value of the list. It is named `Min` and not
    `min` to avoid conflicts with the built-in function `min`.
  id: totrans-757
  prefs: []
  type: TYPE_NORMAL
  zh: 返回列表的最小值，如果可能的话。它被命名为`Min`而不是`min`，以避免与内置函数`min`冲突。
- en: Examples
  id: totrans-758
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE167]'
  id: totrans-759
  prefs: []
  type: TYPE_PRE
  zh: '[PRE167]'
- en: '[PRE168]'
  id: totrans-760
  prefs: []
  type: TYPE_PRE
  zh: '[PRE168]'
- en: See also
  id: totrans-761
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`Max`](#sympy.functions.elementary.miscellaneous.Max "sympy.functions.elementary.miscellaneous.Max")'
  id: totrans-762
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Max`](#sympy.functions.elementary.miscellaneous.Max "sympy.functions.elementary.miscellaneous.Max")'
- en: find maximum values
  id: totrans-763
  prefs: []
  type: TYPE_NORMAL
  zh: 查找最大值
- en: '[PRE169]'
  id: totrans-764
  prefs: []
  type: TYPE_PRE
  zh: '[PRE169]'
- en: Return, if possible, the maximum value of the list.
  id: totrans-765
  prefs: []
  type: TYPE_NORMAL
  zh: 返回列表的最大值，如果可能的话。
- en: When number of arguments is equal one, then return this argument.
  id: totrans-766
  prefs: []
  type: TYPE_NORMAL
  zh: 当参数数量等于一时，返回该参数。
- en: When number of arguments is equal two, then return, if possible, the value from
    (a, b) that is \(\ge\) the other.
  id: totrans-767
  prefs: []
  type: TYPE_NORMAL
  zh: 当参数数量等于两时，返回(a, b)中较大的值。
- en: In common case, when the length of list greater than 2, the task is more complicated.
    Return only the arguments, which are greater than others, if it is possible to
    determine directional relation.
  id: totrans-768
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，当列表长度大于2时，任务更加复杂。如果可能确定方向关系，则仅返回大于其他参数的参数。
- en: If is not possible to determine such a relation, return a partially evaluated
    result.
  id: totrans-769
  prefs: []
  type: TYPE_NORMAL
  zh: 如果无法确定这样的关系，则返回部分评估结果。
- en: Assumptions are used to make the decision too.
  id: totrans-770
  prefs: []
  type: TYPE_NORMAL
  zh: 决策也使用假设。
- en: Also, only comparable arguments are permitted.
  id: totrans-771
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，只允许可比较的参数。
- en: It is named `Max` and not `max` to avoid conflicts with the built-in function
    `max`.
  id: totrans-772
  prefs: []
  type: TYPE_NORMAL
  zh: 它被命名为`Max`而不是`max`，以避免与内置函数`max`冲突。
- en: Examples
  id: totrans-773
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE170]'
  id: totrans-774
  prefs: []
  type: TYPE_PRE
  zh: '[PRE170]'
- en: '[PRE171]'
  id: totrans-775
  prefs: []
  type: TYPE_PRE
  zh: '[PRE171]'
- en: Algorithm
  id: totrans-776
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 算法
- en: The task can be considered as searching of supremums in the directed complete
    partial orders [[R331]](#r331).
  id: totrans-777
  prefs: []
  type: TYPE_NORMAL
  zh: 该任务可以被视为在有向完全偏序集合中寻找最小上界[[R331]](#r331)。
- en: The source values are sequentially allocated by the isolated subsets in which
    supremums are searched and result as Max arguments.
  id: totrans-778
  prefs: []
  type: TYPE_NORMAL
  zh: 源值按顺序分配给孤立子集，在其中搜索最小上界并作为Max参数返回。
- en: If the resulted supremum is single, then it is returned.
  id: totrans-779
  prefs: []
  type: TYPE_NORMAL
  zh: 如果结果的最小上界是唯一的，则返回该值。
- en: 'The isolated subsets are the sets of values which are only the comparable with
    each other in the current set. E.g. natural numbers are comparable with each other,
    but not comparable with the \(x\) symbol. Another example: the symbol \(x\) with
    negative assumption is comparable with a natural number.'
  id: totrans-780
  prefs: []
  type: TYPE_NORMAL
  zh: 孤立的子集是在当前集合中只能相互比较的值的集合。例如，自然数可以相互比较，但不能与符号\(x\)比较。另一个例子：带有负假设的符号\(x\)可以与自然数比较。
- en: Also there are “least” elements, which are comparable with all others, and have
    a zero property (maximum or minimum for all elements). For example, in case of
    \(\infty\), the allocation operation is terminated and only this value is returned.
  id: totrans-781
  prefs: []
  type: TYPE_NORMAL
  zh: 还有“最小”元素，它们与所有其他元素可比，并具有零属性（所有元素的最大或最小值）。例如，在\(\infty\)的情况下，分配操作终止，只返回此值。
- en: 'Assumption:'
  id: totrans-782
  prefs: []
  type: TYPE_NORMAL
  zh: 假设：
- en: if \(A > B > C\) then \(A > C\)
  id: totrans-783
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果\(A > B > C\)，则\(A > C\)
- en: if \(A = B\) then \(B\) can be removed
  id: totrans-784
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果\(A = B\)，则可以删除\(B\)
- en: See also
  id: totrans-785
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`Min`](#sympy.functions.elementary.miscellaneous.Min "sympy.functions.elementary.miscellaneous.Min")'
  id: totrans-786
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Min`](#sympy.functions.elementary.miscellaneous.Min "sympy.functions.elementary.miscellaneous.Min")'
- en: find minimum values
  id: totrans-787
  prefs: []
  type: TYPE_NORMAL
  zh: 查找最小值
- en: References
  id: totrans-788
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[R331] ([1](#id61),[2](#id62))'
  id: totrans-789
  prefs: []
  type: TYPE_NORMAL
  zh: '[R331] ([1](#id61),[2](#id62))'
- en: '[https://en.wikipedia.org/wiki/Directed_complete_partial_order](https://en.wikipedia.org/wiki/Directed_complete_partial_order)'
  id: totrans-790
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/定向完全偏序](https://en.wikipedia.org/wiki/Directed_complete_partial_order)'
- en: '[[R332](#id63)]'
  id: totrans-791
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R332](#id63)]'
- en: '[https://en.wikipedia.org/wiki/Lattice_%28order%29](https://en.wikipedia.org/wiki/Lattice_%28order%29)'
  id: totrans-792
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/格_(數學)](https://en.wikipedia.org/wiki/Lattice_%28order%29)'
- en: '[PRE172]'
  id: totrans-793
  prefs: []
  type: TYPE_PRE
  zh: '[PRE172]'
- en: Returns the *k*-th *n*-th root of `arg`.
  id: totrans-794
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`arg`的第*k*个第*n*个根。
- en: 'Parameters:'
  id: totrans-795
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**k** : int, optional'
  id: totrans-796
  prefs: []
  type: TYPE_NORMAL
  zh: '**k**：int，可选'
- en: Should be an integer in \(\{0, 1, ..., n-1\}\). Defaults to the principal root
    if \(0\).
  id: totrans-797
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 应为\(\{0, 1, ..., n-1\}\)中的整数。如果\(0\)，则默认为主根。
- en: '**evaluate** : bool, optional'
  id: totrans-798
  prefs: []
  type: TYPE_NORMAL
  zh: '**evaluate**：bool，可选'
- en: The parameter determines if the expression should be evaluated. If `None`, its
    value is taken from `global_parameters.evaluate`.
  id: totrans-799
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 此参数确定是否应评估表达式。如果为`None`，则其值来自`global_parameters.evaluate`。
- en: Examples
  id: totrans-800
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE173]'
  id: totrans-801
  prefs: []
  type: TYPE_PRE
  zh: '[PRE173]'
- en: '[PRE174]'
  id: totrans-802
  prefs: []
  type: TYPE_PRE
  zh: '[PRE174]'
- en: '[PRE175]'
  id: totrans-803
  prefs: []
  type: TYPE_PRE
  zh: '[PRE175]'
- en: '[PRE176]'
  id: totrans-804
  prefs: []
  type: TYPE_PRE
  zh: '[PRE176]'
- en: '[PRE177]'
  id: totrans-805
  prefs: []
  type: TYPE_PRE
  zh: '[PRE177]'
- en: 'To get the k-th n-th root, specify k:'
  id: totrans-806
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取第k个n次根，指定k：
- en: '[PRE178]'
  id: totrans-807
  prefs: []
  type: TYPE_PRE
  zh: '[PRE178]'
- en: 'To get all n n-th roots you can use the rootof function. The following examples
    show the roots of unity for n equal 2, 3 and 4:'
  id: totrans-808
  prefs: []
  type: TYPE_NORMAL
  zh: 要获得所有*n*个根，可以使用rootof函数。以下示例显示了n等于2、3和4时的单位根：
- en: '[PRE179]'
  id: totrans-809
  prefs: []
  type: TYPE_PRE
  zh: '[PRE179]'
- en: '[PRE180]'
  id: totrans-810
  prefs: []
  type: TYPE_PRE
  zh: '[PRE180]'
- en: '[PRE181]'
  id: totrans-811
  prefs: []
  type: TYPE_PRE
  zh: '[PRE181]'
- en: '[PRE182]'
  id: totrans-812
  prefs: []
  type: TYPE_PRE
  zh: '[PRE182]'
- en: 'SymPy, like other symbolic algebra systems, returns the complex root of negative
    numbers. This is the principal root and differs from the text-book result that
    one might be expecting. For example, the cube root of -8 does not come back as
    -2:'
  id: totrans-813
  prefs: []
  type: TYPE_NORMAL
  zh: SymPy与其他符号代数系统一样，返回负数的复根。这是主根，与可能期望的教科书结果不同。例如，-8的立方根不会返回为-2：
- en: '[PRE183]'
  id: totrans-814
  prefs: []
  type: TYPE_PRE
  zh: '[PRE183]'
- en: 'The real_root function can be used to either make the principal result real
    (or simply to return the real root directly):'
  id: totrans-815
  prefs: []
  type: TYPE_NORMAL
  zh: real_root函数可用于使主要结果变为实数（或直接返回实根）：
- en: '[PRE184]'
  id: totrans-816
  prefs: []
  type: TYPE_PRE
  zh: '[PRE184]'
- en: 'Alternatively, the n//2-th n-th root of a negative number can be computed with
    root:'
  id: totrans-817
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，可以使用root来计算负数的第n//2个n次根：
- en: '[PRE185]'
  id: totrans-818
  prefs: []
  type: TYPE_PRE
  zh: '[PRE185]'
- en: See also
  id: totrans-819
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.polys.rootoftools.rootof`](../polys/reference.html#sympy.polys.rootoftools.rootof
    "sympy.polys.rootoftools.rootof"), [`sympy.core.intfunc.integer_nthroot`](../core.html#sympy.core.intfunc.integer_nthroot
    "sympy.core.intfunc.integer_nthroot"), [`sqrt`](#sympy.functions.elementary.miscellaneous.sqrt
    "sympy.functions.elementary.miscellaneous.sqrt"), [`real_root`](#sympy.functions.elementary.miscellaneous.real_root
    "sympy.functions.elementary.miscellaneous.real_root")'
  id: totrans-820
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.polys.rootoftools.rootof`](../polys/reference.html#sympy.polys.rootoftools.rootof
    "sympy.polys.rootoftools.rootof"), [`sympy.core.intfunc.integer_nthroot`](../core.html#sympy.core.intfunc.integer_nthroot
    "sympy.core.intfunc.integer_nthroot"), [`sqrt`](#sympy.functions.elementary.miscellaneous.sqrt
    "sympy.functions.elementary.miscellaneous.sqrt"), [`real_root`](#sympy.functions.elementary.miscellaneous.real_root
    "sympy.functions.elementary.miscellaneous.real_root")'
- en: References
  id: totrans-821
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R333](#id64)]'
  id: totrans-822
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R333](#id64)]'
- en: '[https://en.wikipedia.org/wiki/Square_root](https://en.wikipedia.org/wiki/Square_root)'
  id: totrans-823
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/平方根](https://en.wikipedia.org/wiki/Square_root)'
- en: '[[R334](#id65)]'
  id: totrans-824
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R334](#id65)]'
- en: '[https://en.wikipedia.org/wiki/Real_root](https://en.wikipedia.org/wiki/Real_root)'
  id: totrans-825
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/实根](https://en.wikipedia.org/wiki/Real_root)'
- en: '[[R335](#id66)]'
  id: totrans-826
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R335](#id66)]'
- en: '[https://en.wikipedia.org/wiki/Root_of_unity](https://en.wikipedia.org/wiki/Root_of_unity)'
  id: totrans-827
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/单位根](https://en.wikipedia.org/wiki/Root_of_unity)'
- en: '[[R336](#id67)]'
  id: totrans-828
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R336](#id67)]'
- en: '[https://en.wikipedia.org/wiki/Principal_value](https://en.wikipedia.org/wiki/Principal_value)'
  id: totrans-829
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/主值](https://en.wikipedia.org/wiki/Principal_value)'
- en: '[[R337](#id68)]'
  id: totrans-830
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R337](#id68)]'
- en: '[https://mathworld.wolfram.com/CubeRoot.html](https://mathworld.wolfram.com/CubeRoot.html)'
  id: totrans-831
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/立方根](https://mathworld.wolfram.com/CubeRoot.html)'
- en: '[PRE186]'
  id: totrans-832
  prefs: []
  type: TYPE_PRE
  zh: '[PRE186]'
- en: Returns the principal square root.
  id: totrans-833
  prefs: []
  type: TYPE_NORMAL
  zh: 返回主平方根。
- en: 'Parameters:'
  id: totrans-834
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**evaluate** : bool, optional'
  id: totrans-835
  prefs: []
  type: TYPE_NORMAL
  zh: '**evaluate**：bool，可选'
- en: The parameter determines if the expression should be evaluated. If `None`, its
    value is taken from `global_parameters.evaluate`.
  id: totrans-836
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 此参数确定是否应评估表达式。如果为`None`，则其值来自`global_parameters.evaluate`。
- en: Examples
  id: totrans-837
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE187]'
  id: totrans-838
  prefs: []
  type: TYPE_PRE
  zh: '[PRE187]'
- en: '[PRE188]'
  id: totrans-839
  prefs: []
  type: TYPE_PRE
  zh: '[PRE188]'
- en: '[PRE189]'
  id: totrans-840
  prefs: []
  type: TYPE_PRE
  zh: '[PRE189]'
- en: Note that sqrt(x**2) does not simplify to x.
  id: totrans-841
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，sqrt(x**2)不简化为x。
- en: '[PRE190]'
  id: totrans-842
  prefs: []
  type: TYPE_PRE
  zh: '[PRE190]'
- en: 'This is because the two are not equal to each other in general. For example,
    consider x == -1:'
  id: totrans-843
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为一般情况下两者不相等。例如，考虑\(x == -1\)：
- en: '[PRE191]'
  id: totrans-844
  prefs: []
  type: TYPE_PRE
  zh: '[PRE191]'
- en: 'This is because sqrt computes the principal square root, so the square may
    put the argument in a different branch. This identity does hold if x is positive:'
  id: totrans-845
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为sqrt计算主方根，因此平方可能将参数放在不同的分支中。如果x为正数，则此恒等式成立：
- en: '[PRE192]'
  id: totrans-846
  prefs: []
  type: TYPE_PRE
  zh: '[PRE192]'
- en: 'You can force this simplification by using the powdenest() function with the
    force option set to True:'
  id: totrans-847
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过将force选项设置为True来强制使用powdenest()函数进行此简化：
- en: '[PRE193]'
  id: totrans-848
  prefs: []
  type: TYPE_PRE
  zh: '[PRE193]'
- en: 'To get both branches of the square root you can use the rootof function:'
  id: totrans-849
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取平方根的两个分支，可以使用`rootof`函数：
- en: '[PRE194]'
  id: totrans-850
  prefs: []
  type: TYPE_PRE
  zh: '[PRE194]'
- en: '[PRE195]'
  id: totrans-851
  prefs: []
  type: TYPE_PRE
  zh: '[PRE195]'
- en: 'Although `sqrt` is printed, there is no `sqrt` function so looking for `sqrt`
    in an expression will fail:'
  id: totrans-852
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然打印了`sqrt`，但没有`sqrt`函数，因此在表达式中查找`sqrt`将失败：
- en: '[PRE196]'
  id: totrans-853
  prefs: []
  type: TYPE_PRE
  zh: '[PRE196]'
- en: 'To find `sqrt` look for `Pow` with an exponent of `1/2`:'
  id: totrans-854
  prefs: []
  type: TYPE_NORMAL
  zh: 要查找`sqrt`，请查找带有指数`1/2`的`Pow`：
- en: '[PRE197]'
  id: totrans-855
  prefs: []
  type: TYPE_PRE
  zh: '[PRE197]'
- en: See also
  id: totrans-856
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.polys.rootoftools.rootof`](../polys/reference.html#sympy.polys.rootoftools.rootof
    "sympy.polys.rootoftools.rootof"), [`root`](#sympy.functions.elementary.miscellaneous.root
    "sympy.functions.elementary.miscellaneous.root"), [`real_root`](#sympy.functions.elementary.miscellaneous.real_root
    "sympy.functions.elementary.miscellaneous.real_root")'
  id: totrans-857
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.polys.rootoftools.rootof`](../polys/reference.html#sympy.polys.rootoftools.rootof
    "sympy.polys.rootoftools.rootof")，[`root`](#sympy.functions.elementary.miscellaneous.root
    "sympy.functions.elementary.miscellaneous.root")，[`real_root`](#sympy.functions.elementary.miscellaneous.real_root
    "sympy.functions.elementary.miscellaneous.real_root")'
- en: References
  id: totrans-858
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R338](#id69)]'
  id: totrans-859
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R338](#id69)]'
- en: '[https://en.wikipedia.org/wiki/Square_root](https://en.wikipedia.org/wiki/Square_root)'
  id: totrans-860
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Square_root](https://en.wikipedia.org/wiki/Square_root)'
- en: '[[R339](#id70)]'
  id: totrans-861
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R339](#id70)]'
- en: '[https://en.wikipedia.org/wiki/Principal_value](https://en.wikipedia.org/wiki/Principal_value)'
  id: totrans-862
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Principal_value](https://en.wikipedia.org/wiki/Principal_value)'
- en: '[PRE198]'
  id: totrans-863
  prefs: []
  type: TYPE_PRE
  zh: '[PRE198]'
- en: Returns the principal cube root.
  id: totrans-864
  prefs: []
  type: TYPE_NORMAL
  zh: 返回主立方根。
- en: 'Parameters:'
  id: totrans-865
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**evaluate** : bool, optional'
  id: totrans-866
  prefs: []
  type: TYPE_NORMAL
  zh: '**evaluate**：布尔值，可选'
- en: The parameter determines if the expression should be evaluated. If `None`, its
    value is taken from `global_parameters.evaluate`.
  id: totrans-867
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数确定是否应该评估表达式。如果为`None`，其值将从`global_parameters.evaluate`中获取。
- en: Examples
  id: totrans-868
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE199]'
  id: totrans-869
  prefs: []
  type: TYPE_PRE
  zh: '[PRE199]'
- en: '[PRE200]'
  id: totrans-870
  prefs: []
  type: TYPE_PRE
  zh: '[PRE200]'
- en: '[PRE201]'
  id: totrans-871
  prefs: []
  type: TYPE_PRE
  zh: '[PRE201]'
- en: Note that cbrt(x**3) does not simplify to x.
  id: totrans-872
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，cbrt(x**3)不简化为x。
- en: '[PRE202]'
  id: totrans-873
  prefs: []
  type: TYPE_PRE
  zh: '[PRE202]'
- en: 'This is because the two are not equal to each other in general. For example,
    consider \(x == -1\):'
  id: totrans-874
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为一般情况下两者不相等。例如，考虑\(x == -1\)：
- en: '[PRE203]'
  id: totrans-875
  prefs: []
  type: TYPE_PRE
  zh: '[PRE203]'
- en: 'This is because cbrt computes the principal cube root, this identity does hold
    if \(x\) is positive:'
  id: totrans-876
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为cbrt计算主立方根，如果\(x\)为正数，则此恒等式成立：
- en: '[PRE204]'
  id: totrans-877
  prefs: []
  type: TYPE_PRE
  zh: '[PRE204]'
- en: See also
  id: totrans-878
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.polys.rootoftools.rootof`](../polys/reference.html#sympy.polys.rootoftools.rootof
    "sympy.polys.rootoftools.rootof"), [`root`](#sympy.functions.elementary.miscellaneous.root
    "sympy.functions.elementary.miscellaneous.root"), [`real_root`](#sympy.functions.elementary.miscellaneous.real_root
    "sympy.functions.elementary.miscellaneous.real_root")'
  id: totrans-879
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.polys.rootoftools.rootof`](../polys/reference.html#sympy.polys.rootoftools.rootof
    "sympy.polys.rootoftools.rootof")，[`root`](#sympy.functions.elementary.miscellaneous.root
    "sympy.functions.elementary.miscellaneous.root")，[`real_root`](#sympy.functions.elementary.miscellaneous.real_root
    "sympy.functions.elementary.miscellaneous.real_root")'
- en: References
  id: totrans-880
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R340](#id71)]'
  id: totrans-881
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R340](#id71)]'
- en: '[https://en.wikipedia.org/wiki/Cube_root](https://en.wikipedia.org/wiki/Cube_root)'
  id: totrans-882
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Cube_root](https://en.wikipedia.org/wiki/Cube_root)'
- en: '[[R341](#id72)]'
  id: totrans-883
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R341](#id72)]'
- en: '[https://en.wikipedia.org/wiki/Principal_value](https://en.wikipedia.org/wiki/Principal_value)'
  id: totrans-884
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Principal_value](https://en.wikipedia.org/wiki/Principal_value)'
- en: '[PRE205]'
  id: totrans-885
  prefs: []
  type: TYPE_PRE
  zh: '[PRE205]'
- en: Return the real *n*’th-root of *arg* if possible.
  id: totrans-886
  prefs: []
  type: TYPE_NORMAL
  zh: 返回*arg*的实数第*n*次根（如果可能）。
- en: 'Parameters:'
  id: totrans-887
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : int or None, optional'
  id: totrans-888
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**：整数或`None`，可选'
- en: If *n* is `None`, then all instances of \((-n)^{1/\text{odd}}\) will be changed
    to \(-n^{1/\text{odd}}\). This will only create a real root of a principal root.
    The presence of other factors may cause the result to not be real.
  id: totrans-889
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果*n*为`None`，则所有\((-n)^{1/\text{odd}}\)的实例将更改为\(-n^{1/\text{odd}}\)。这仅会创建主根的实根。其他因素的存在可能导致结果不是实数。
- en: '**evaluate** : bool, optional'
  id: totrans-890
  prefs: []
  type: TYPE_NORMAL
  zh: '**evaluate**：布尔值，可选'
- en: The parameter determines if the expression should be evaluated. If `None`, its
    value is taken from `global_parameters.evaluate`.
  id: totrans-891
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数确定是否应该评估表达式。如果为`None`，其值将从`global_parameters.evaluate`中获取。
- en: Examples
  id: totrans-892
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE206]'
  id: totrans-893
  prefs: []
  type: TYPE_PRE
  zh: '[PRE206]'
- en: '[PRE207]'
  id: totrans-894
  prefs: []
  type: TYPE_PRE
  zh: '[PRE207]'
- en: 'If one creates a non-principal root and applies real_root, the result will
    not be real (so use with caution):'
  id: totrans-895
  prefs: []
  type: TYPE_NORMAL
  zh: 如果创建非主根并应用`real_root`，则结果将不是实数（因此请谨慎使用）：
- en: '[PRE208]'
  id: totrans-896
  prefs: []
  type: TYPE_PRE
  zh: '[PRE208]'
- en: See also
  id: totrans-897
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.polys.rootoftools.rootof`](../polys/reference.html#sympy.polys.rootoftools.rootof
    "sympy.polys.rootoftools.rootof"), [`sympy.core.intfunc.integer_nthroot`](../core.html#sympy.core.intfunc.integer_nthroot
    "sympy.core.intfunc.integer_nthroot"), [`root`](#sympy.functions.elementary.miscellaneous.root
    "sympy.functions.elementary.miscellaneous.root"), [`sqrt`](#sympy.functions.elementary.miscellaneous.sqrt
    "sympy.functions.elementary.miscellaneous.sqrt")'
  id: totrans-898
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.polys.rootoftools.rootof`](../polys/reference.html#sympy.polys.rootoftools.rootof
    "sympy.polys.rootoftools.rootof"), [`sympy.core.intfunc.integer_nthroot`](../core.html#sympy.core.intfunc.integer_nthroot
    "sympy.core.intfunc.integer_nthroot"), [`root`](#sympy.functions.elementary.miscellaneous.root
    "sympy.functions.elementary.miscellaneous.root"), [`sqrt`](#sympy.functions.elementary.miscellaneous.sqrt
    "sympy.functions.elementary.miscellaneous.sqrt")'
