- en: scipy.special.gegenbauer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.gegenbauer.html#scipy.special.gegenbauer](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.gegenbauer.html#scipy.special.gegenbauer)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Gegenbauer (ultraspherical) polynomial.
  prefs: []
  type: TYPE_NORMAL
- en: Defined to be the solution of
  prefs: []
  type: TYPE_NORMAL
- en: \[(1 - x^2)\frac{d^2}{dx^2}C_n^{(\alpha)} - (2\alpha + 1)x\frac{d}{dx}C_n^{(\alpha)}
    + n(n + 2\alpha)C_n^{(\alpha)} = 0\]
  prefs: []
  type: TYPE_NORMAL
- en: for \(\alpha > -1/2\); \(C_n^{(\alpha)}\) is a polynomial of degree \(n\).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**n**int'
  prefs: []
  type: TYPE_NORMAL
- en: Degree of the polynomial.
  prefs: []
  type: TYPE_NORMAL
- en: '**alpha**float'
  prefs: []
  type: TYPE_NORMAL
- en: Parameter, must be greater than -0.5.
  prefs: []
  type: TYPE_NORMAL
- en: '**monic**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If *True*, scale the leading coefficient to be 1\. Default is *False*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**C**orthopoly1d'
  prefs: []
  type: TYPE_NORMAL
- en: Gegenbauer polynomial.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The polynomials \(C_n^{(\alpha)}\) are orthogonal over \([-1,1]\) with weight
    function \((1 - x^2)^{(\alpha - 1/2)}\).
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: We can initialize a variable `p` as a Gegenbauer polynomial using the [`gegenbauer`](#scipy.special.gegenbauer
    "scipy.special.gegenbauer") function and evaluate at a point `x = 1`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'To evaluate `p` at various points `x` in the interval `(-3, 3)`, simply pass
    an array `x` to `p` as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: We can then visualize `x, y` using [`matplotlib.pyplot`](https://matplotlib.org/stable/api/pyplot_summary.html#module-matplotlib.pyplot
    "(in Matplotlib v3.8.2)").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-special-gegenbauer-1.png](../Images/7b488d7177c4b98cc5bf0a65a860ffd6.png)'
  prefs: []
  type: TYPE_IMG
