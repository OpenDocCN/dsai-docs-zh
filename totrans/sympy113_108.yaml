- en: Sets
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集合
- en: Original text：[https://docs.sympy.org/latest/modules/sets.html](https://docs.sympy.org/latest/modules/sets.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://docs.sympy.org/latest/modules/sets.html](https://docs.sympy.org/latest/modules/sets.html)
- en: '## Basic Sets'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '## 基本集合'
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The base class for any kind of set.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 任何种类集合的基类。
- en: Explanation
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Explanation
- en: This is not meant to be used directly as a container of items. It does not behave
    like the builtin `set`; see [`FiniteSet`](#sympy.sets.sets.FiniteSet "sympy.sets.sets.FiniteSet")
    for that.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这不应直接用作项目的容器。它不像内置的`set`那样运行；请查看[`FiniteSet`](#sympy.sets.sets.FiniteSet "sympy.sets.sets.FiniteSet")。
- en: Real intervals are represented by the [`Interval`](#sympy.sets.sets.Interval
    "sympy.sets.sets.Interval") class and unions of sets by the [`Union`](#sympy.sets.sets.Union
    "sympy.sets.sets.Union") class. The empty set is represented by the [`EmptySet`](#sympy.sets.sets.EmptySet
    "sympy.sets.sets.EmptySet") class and available as a singleton as `S.EmptySet`.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 实数区间由[`Interval`](#sympy.sets.sets.Interval "sympy.sets.sets.Interval")类表示，集合的并集由[`Union`](#sympy.sets.sets.Union
    "sympy.sets.sets.Union")类表示。空集由[`EmptySet`](#sympy.sets.sets.EmptySet "sympy.sets.sets.EmptySet")类表示，并作为单例`S.EmptySet`可用。
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The boundary or frontier of a set.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 集合的边界或前沿。
- en: Explanation
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Explanation
- en: A point x is on the boundary of a set S if
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个点x在集合S的边界上，则x在S的边界上。
- en: x is in the closure of S. I.e. Every neighborhood of x contains a point in S.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: x在S的闭包中。即，x的每个邻域都包含S中的一个点。
- en: x is not in the interior of S. I.e. There does not exist an open set centered
    on x contained entirely within S.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: x不在集合S的内部。即，不存在一个以x为中心的开集，完全包含在S中。
- en: There are the points on the outer rim of S. If S is open then these points need
    not actually be contained within S.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是S的外部边缘上的点。如果S是开放的，则这些点实际上不需要包含在S内。
- en: For example, the boundary of an interval is its start and end points. This is
    true regardless of whether or not the interval is open.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，一个区间的边界是其起始点和结束点。这一点不受区间是否开放的影响。
- en: Examples
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE2]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Property method which returns the closure of a set. The closure is defined as
    the union of the set itself and its boundary.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 返回集合的闭包的属性方法。闭包定义为集合本身与其边界的并集。
- en: Examples
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE4]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The complement of ‘self’ w.r.t the given universe.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 相对于给定的宇宙，‘self’的补集。
- en: Examples
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE6]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Returns a SymPy value indicating whether `other` is contained in `self`: `true`
    if it is, `false` if it is not, else an unevaluated `Contains` expression (or,
    as in the case of ConditionSet and a union of FiniteSet/Intervals, an expression
    indicating the conditions for containment).'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个SymPy值，指示`other`是否包含在`self`中：如果是，则返回`true`，否则返回`false`；若条件不满足（例如在ConditionSet和FiniteSet/Intervals的并集中），则返回一个未求值的`Contains`表达式。
- en: Examples
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE9]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: As a shortcut it is possible to use the `in` operator, but that will raise an
    error unless an affirmative true or false is not obtained.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一种快捷方式，可以使用`in`操作符，但是除非明确获得肯定的true或false，否则会引发错误。
- en: '[PRE11]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The result of ‘in’ is a bool, not a SymPy value
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: ‘in’的结果是一个布尔值，而不是SymPy值
- en: '[PRE12]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The infimum of `self`.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: ‘self’的下确界。
- en: Examples
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE14]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Property method which returns the interior of a set. The interior of a set S
    consists all points of S that do not belong to the boundary of S.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 返回集合的内部的属性方法。集合S的内部包含所有不属于S的边界的点。
- en: Examples
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE16]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Returns the intersection of ‘self’ and ‘other’.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 返回‘self’和‘other’的交集。
- en: Examples
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE18]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Alias for [`intersect()`](#sympy.sets.sets.Set.intersect "sympy.sets.sets.Set.intersect")
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[`intersect()`](#sympy.sets.sets.Set.intersect "sympy.sets.sets.Set.intersect")的别名。'
- en: '[PRE22]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: A property method to check whether a set is closed.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 一个用于检查集合是否闭合的属性方法。
- en: Explanation
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Explanation
- en: A set is closed if its complement is an open set. The closedness of a subset
    of the reals is determined with respect to R and its standard topology.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果其补集是一个开集，那么一个集合是封闭的。对于实数的子集来说，其封闭性是相对于R及其标准拓扑结构来确定的。
- en: Examples
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE23]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Returns True if `self` and `other` are disjoint.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`self`和`other`是不交集，则返回True。
- en: Examples
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE25]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: References
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: References
- en: '[[R837](#id1)]'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R837](#id1)]'
- en: '[https://en.wikipedia.org/wiki/Disjoint_sets](https://en.wikipedia.org/wiki/Disjoint_sets)'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/不交集](https://zh.wikipedia.org/wiki/不交集)'
- en: '[PRE26]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Property method to check whether a set is open.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 检查一个集合是否开放的属性方法。
- en: Explanation
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Explanation
- en: A set is open if and only if it has an empty intersection with its boundary.
    In particular, a subset A of the reals is open if and only if each one of its
    points is contained in an open interval that is a subset of A.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 一个集合是开放的当且仅当它与其边界的交集为空。特别地，实数的子集A是开放的当且仅当A中的每个点都包含在一个A的开区间中。
- en: Examples
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE27]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Returns True if `self` is a proper subset of `other`.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`self`是`other`的真子集，则返回True。
- en: Examples
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE29]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Returns True if `self` is a proper superset of `other`.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`self`是`other`的真超集，则返回True。
- en: Examples
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE31]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Returns True if `self` is a subset of `other`.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`self`是`other`的子集，则返回True。
- en: Examples
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE33]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Returns True if `self` is a superset of `other`.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`self`是`other`的超集，则返回True。
- en: Examples
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE35]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Alias for [`is_disjoint()`](#sympy.sets.sets.Set.is_disjoint "sympy.sets.sets.Set.is_disjoint")
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[`is_disjoint()`](#sympy.sets.sets.Set.is_disjoint "sympy.sets.sets.Set.is_disjoint")的别名'
- en: '[PRE37]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Alias for [`is_subset()`](#sympy.sets.sets.Set.is_subset "sympy.sets.sets.Set.is_subset")
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '[`is_subset()`](#sympy.sets.sets.Set.is_subset "sympy.sets.sets.Set.is_subset")的别名'
- en: '[PRE38]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Alias for [`is_superset()`](#sympy.sets.sets.Set.is_superset "sympy.sets.sets.Set.is_superset")
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '[`is_superset()`](#sympy.sets.sets.Set.is_superset "sympy.sets.sets.Set.is_superset")的别名'
- en: '[PRE39]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: The kind of a Set
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 集合的种类
- en: Explanation
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Any [`Set`](#sympy.sets.sets.Set "sympy.sets.sets.Set") will have kind [`SetKind`](#sympy.sets.conditionset.SetKind
    "sympy.sets.sets.SetKind") which is parametrised by the kind of the elements of
    the set. For example most sets are sets of numbers and will have kind `SetKind(NumberKind)`.
    If elements of sets are different in kind than their kind will `SetKind(UndefinedKind)`.
    See [`sympy.core.kind.Kind`](core.html#sympy.core.kind.Kind "sympy.core.kind.Kind")
    for an explanation of the kind system.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 任何[`Set`](#sympy.sets.sets.Set "sympy.sets.sets.Set")都将具有种类[`SetKind`](#sympy.sets.conditionset.SetKind
    "sympy.sets.sets.SetKind")，其由集合元素的种类参数化。例如，大多数集合是数字集合，并且其种类为`SetKind(NumberKind)`。如果集合元素在种类上不同，则其种类为`SetKind(UndefinedKind)`。参见[`sympy.core.kind.Kind`](core.html#sympy.core.kind.Kind
    "sympy.core.kind.Kind")以了解种类系统的解释。
- en: Examples
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE40]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[PRE41]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[PRE43]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'A [`sympy.sets.powerset.PowerSet`](#sympy.sets.powerset.PowerSet "sympy.sets.powerset.PowerSet")
    is a set of sets:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.sets.powerset.PowerSet`](#sympy.sets.powerset.PowerSet "sympy.sets.powerset.PowerSet")是一组集合的集合：'
- en: '[PRE44]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'A [`ProductSet`](#sympy.sets.sets.ProductSet "sympy.sets.sets.ProductSet")
    represents the set of tuples of elements of other sets. Its kind is [`sympy.core.containers.TupleKind`](core.html#sympy.core.containers.TupleKind
    "sympy.core.containers.TupleKind") parametrised by the kinds of the elements of
    those sets:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ProductSet`](#sympy.sets.sets.ProductSet "sympy.sets.sets.ProductSet")代表其他集合元素的元组集合。其种类为[`sympy.core.containers.TupleKind`](core.html#sympy.core.containers.TupleKind
    "sympy.core.containers.TupleKind")，由这些集合元素的种类参数化：'
- en: '[PRE45]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'When all elements of the set do not have same kind, the kind will be returned
    as `SetKind(UndefinedKind)`:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 当集合的所有元素不具有相同种类时，种类将返回为`SetKind(UndefinedKind)`：
- en: '[PRE46]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'The kind of the elements of a set are given by the `element_kind` attribute
    of `SetKind`:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 集合元素的种类由`SetKind`的`element_kind`属性给出：
- en: '[PRE47]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: See also
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`NumberKind`](core.html#sympy.core.kind.NumberKind "sympy.core.kind.NumberKind"),
    [`sympy.core.kind.UndefinedKind`](core.html#sympy.core.kind.UndefinedKind "sympy.core.kind.UndefinedKind"),
    [`sympy.core.containers.TupleKind`](core.html#sympy.core.containers.TupleKind
    "sympy.core.containers.TupleKind"), [`MatrixKind`](matrices/kind.html#sympy.matrices.kind.MatrixKind
    "sympy.matrices.kind.MatrixKind"), [`sympy.matrices.expressions.sets.MatrixSet`](matrices/expressions.html#sympy.matrices.expressions.MatrixSet
    "sympy.matrices.expressions.sets.MatrixSet"), [`sympy.sets.conditionset.ConditionSet`](#sympy.sets.conditionset.ConditionSet
    "sympy.sets.conditionset.ConditionSet"), [`Rationals`](#sympy.sets.fancysets.Rationals
    "sympy.sets.fancysets.Rationals"), [`Naturals`](#sympy.sets.fancysets.Naturals
    "sympy.sets.fancysets.Naturals"), [`Integers`](#sympy.sets.fancysets.Integers
    "sympy.sets.fancysets.Integers"), [`sympy.sets.fancysets.ImageSet`](#sympy.sets.fancysets.ImageSet
    "sympy.sets.fancysets.ImageSet"), [`sympy.sets.fancysets.Range`](#sympy.sets.fancysets.Range
    "sympy.sets.fancysets.Range"), [`sympy.sets.fancysets.ComplexRegion`](#sympy.sets.fancysets.ComplexRegion
    "sympy.sets.fancysets.ComplexRegion"), [`sympy.sets.powerset.PowerSet`](#sympy.sets.powerset.PowerSet
    "sympy.sets.powerset.PowerSet"), [`sympy.sets.sets.ProductSet`](#sympy.sets.sets.ProductSet
    "sympy.sets.sets.ProductSet"), [`sympy.sets.sets.Interval`](#sympy.sets.sets.Interval
    "sympy.sets.sets.Interval"), [`sympy.sets.sets.Union`](#sympy.sets.sets.Union
    "sympy.sets.sets.Union"), [`sympy.sets.sets.Intersection`](#sympy.sets.sets.Intersection
    "sympy.sets.sets.Intersection"), [`sympy.sets.sets.Complement`](#sympy.sets.sets.Complement
    "sympy.sets.sets.Complement"), [`sympy.sets.sets.EmptySet`](#sympy.sets.sets.EmptySet
    "sympy.sets.sets.EmptySet"), [`sympy.sets.sets.UniversalSet`](#sympy.sets.sets.UniversalSet
    "sympy.sets.sets.UniversalSet"), [`sympy.sets.sets.FiniteSet`](#sympy.sets.sets.FiniteSet
    "sympy.sets.sets.FiniteSet"), [`sympy.sets.sets.SymmetricDifference`](#sympy.sets.sets.SymmetricDifference
    "sympy.sets.sets.SymmetricDifference"), [`sympy.sets.sets.DisjointUnion`](#sympy.sets.sets.DisjointUnion
    "sympy.sets.sets.DisjointUnion")'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '[`NumberKind`](core.html#sympy.core.kind.NumberKind "sympy.core.kind.NumberKind"),
    [`sympy.core.kind.UndefinedKind`](core.html#sympy.core.kind.UndefinedKind "sympy.core.kind.UndefinedKind"),
    [`sympy.core.containers.TupleKind`](core.html#sympy.core.containers.TupleKind
    "sympy.core.containers.TupleKind"), [`MatrixKind`](matrices/kind.html#sympy.matrices.kind.MatrixKind
    "sympy.matrices.kind.MatrixKind"), [`sympy.matrices.expressions.sets.MatrixSet`](matrices/expressions.html#sympy.matrices.expressions.MatrixSet
    "sympy.matrices.expressions.sets.MatrixSet"), [`sympy.sets.conditionset.ConditionSet`](#sympy.sets.conditionset.ConditionSet
    "sympy.sets.conditionset.ConditionSet"), [`Rationals`](#sympy.sets.fancysets.Rationals
    "sympy.sets.fancysets.Rationals"), [`Naturals`](#sympy.sets.fancysets.Naturals
    "sympy.sets.fancysets.Naturals"), [`Integers`](#sympy.sets.fancysets.Integers
    "sympy.sets.fancysets.Integers"), [`sympy.sets.fancysets.ImageSet`](#sympy.sets.fancysets.ImageSet
    "sympy.sets.fancysets.ImageSet"), [`sympy.sets.fancysets.Range`](#sympy.sets.fancysets.Range
    "sympy.sets.fancysets.Range"), [`sympy.sets.fancysets.ComplexRegion`](#sympy.sets.fancysets.ComplexRegion
    "sympy.sets.fancysets.ComplexRegion"), [`sympy.sets.powerset.PowerSet`](#sympy.sets.powerset.PowerSet
    "sympy.sets.powerset.PowerSet"), [`sympy.sets.sets.ProductSet`](#sympy.sets.sets.ProductSet
    "sympy.sets.sets.ProductSet"), [`sympy.sets.sets.Interval`](#sympy.sets.sets.Interval
    "sympy.sets.sets.Interval"), [`sympy.sets.sets.Union`](#sympy.sets.sets.Union
    "sympy.sets.sets.Union"), [`sympy.sets.sets.Intersection`](#sympy.sets.sets.Intersection
    "sympy.sets.sets.Intersection"), [`sympy.sets.sets.Complement`](#sympy.sets.sets.Complement
    "sympy.sets.sets.Complement"), [`sympy.sets.sets.EmptySet`](#sympy.sets.sets.EmptySet
    "sympy.sets.sets.EmptySet"), [`sympy.sets.sets.UniversalSet`](#sympy.sets.sets.UniversalSet
    "sympy.sets.sets.UniversalSet"), [`sympy.sets.sets.FiniteSet`](#sympy.sets.sets.FiniteSet
    "sympy.sets.sets.FiniteSet"), [`sympy.sets.sets.SymmetricDifference`](#sympy.sets.sets.SymmetricDifference
    "sympy.sets.sets.SymmetricDifference"), [`sympy.sets.sets.DisjointUnion`](#sympy.sets.sets.DisjointUnion
    "sympy.sets.sets.DisjointUnion")'
- en: '[PRE48]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: The (Lebesgue) measure of `self`.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '`self`的（勒贝格）测度。'
- en: Examples
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE49]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[PRE50]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Find the Power set of `self`.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 找到`self`的幂集。
- en: Examples
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE51]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'A power set of an empty set:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 空集的幂集：
- en: '[PRE52]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'A power set of a finite set:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 有限集的幂集：
- en: '[PRE53]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'A power set of an interval:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 区间的幂集：
- en: '[PRE54]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: References
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R838](#id2)]'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R838](#id2)]'
- en: '[https://en.wikipedia.org/wiki/Power_set](https://en.wikipedia.org/wiki/Power_set)'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Power_set](https://en.wikipedia.org/wiki/Power_set)'
- en: '[PRE55]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: The supremum of `self`.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '`self`的最大值。'
- en: Examples
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE56]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '[PRE57]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Returns symmetric difference of `self` and `other`.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`self`和`other`的对称差异。
- en: Examples
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE58]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '[PRE59]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: References
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R839](#id3)]'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R839](#id3)]'
- en: '[https://en.wikipedia.org/wiki/Symmetric_difference](https://en.wikipedia.org/wiki/Symmetric_difference)'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Symmetric_difference](https://en.wikipedia.org/wiki/Symmetric_difference)'
- en: '[PRE60]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Returns the union of `self` and `other`.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`self`和`other`的并集。
- en: Examples
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'As a shortcut it is possible to use the `+` operator:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 作为快捷方式，可以使用`+`运算符：
- en: '[PRE61]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'Similarly it is possible to use the `-` operator for set differences:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 同样地，可以使用`-`运算符进行集合差异：
- en: '[PRE62]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '[PRE63]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Return an image of the set under transformation `f`.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 返回变换`f`下集合的图像。
- en: Explanation
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: If this function cannot compute the image, it returns an unevaluated ImageSet
    object.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 如果此函数无法计算图像，则返回一个未评估的ImageSet对象。
- en: \[\{ f(x) \mid x \in \mathrm{self} \}\]
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: \[\{ f(x) \mid x \in \mathrm{self} \}\]
- en: Examples
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE64]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '[PRE65]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '[PRE66]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: '[PRE67]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: '[PRE68]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Expressions applied to the set of Integers are simplified to show as few negatives
    as possible and linear expressions are converted to a canonical form. If this
    is not desirable then the unevaluated ImageSet should be used.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 应用于整数集合的表达式被简化，以显示尽可能少的负数，并将线性表达式转换为规范形式。如果不希望这样，则应使用未评估的ImageSet。
- en: '[PRE69]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: See also
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.sets.fancysets.ImageSet`](#sympy.sets.fancysets.ImageSet "sympy.sets.fancysets.ImageSet")'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.sets.fancysets.ImageSet`](#sympy.sets.fancysets.ImageSet "sympy.sets.fancysets.ImageSet")'
- en: Elementary Sets
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基本集合
- en: '[PRE70]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: Represents a real interval as a Set.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 将实数区间表示为一个集合。
- en: 'Usage:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 用法：
- en: Returns an interval with end points `start` and `end`.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 返回具有起始点`start`和结束点`end`的区间。
- en: For `left_open=True` (default `left_open` is `False`) the interval will be open
    on the left. Similarly, for `right_open=True` the interval will be open on the
    right.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`left_open=True`（默认`left_open`为`False`），区间左侧将是开放的。同样地，对于`right_open=True`，区间右侧将是开放的。
- en: Examples
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE71]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: '[PRE72]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: Notes
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Only real end points are supported
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅支持实数端点
- en: '`Interval(a, b)` with \(a > b\) will return the empty set'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Interval(a, b)`，其中 \(a > b\)，将返回空集'
- en: Use the `evalf()` method to turn an Interval into an mpmath `mpi` interval instance
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`evalf()`方法将区间转换为mpmath的`mpi`区间实例
- en: References
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R840](#id4)]'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R840](#id4)]'
- en: '[https://en.wikipedia.org/wiki/Interval_%28mathematics%29](https://en.wikipedia.org/wiki/Interval_%28mathematics%29)'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/区间_(数学)](https://en.wikipedia.org/wiki/Interval_%28mathematics%29)'
- en: '[PRE73]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: Return an interval not including the left boundary.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 返回不包含左边界的区间。
- en: '[PRE74]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: Return an interval not including the right boundary.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 返回不包含右边界的区间。
- en: '[PRE75]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: Rewrite an interval in terms of inequalities and logic operators.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 用不等式和逻辑运算符重写一个区间。
- en: '[PRE76]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: The right end point of the interval.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 区间的右端点。
- en: This property takes the same value as the `sup` property.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性与`sup`属性取相同值。
- en: Examples
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE77]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: '[PRE78]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: Return `True` if the left endpoint is negative infinity.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 如果左端点为负无穷，则返回`True`。
- en: '[PRE79]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: Return `True` if the right endpoint is positive infinity.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 如果右端点为正无穷，则返回`True`。
- en: '[PRE80]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: True if interval is left-open.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 如果区间左开放，则为`True`。
- en: Examples
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE81]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '[PRE82]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: Return an interval including neither boundary.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个不包含任何边界的区间。
- en: '[PRE83]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: True if interval is right-open.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 如果区间右开放，则为`True`。
- en: Examples
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE84]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: '[PRE85]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: The left end point of the interval.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 区间的左端点。
- en: This property takes the same value as the `inf` property.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性与`inf`属性取相同值。
- en: Examples
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE86]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: '[PRE87]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: Represents a finite set of Sympy expressions.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 表示一组有限的Sympy表达式。
- en: Examples
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE88]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: References
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R841](#id5)]'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R841](#id5)]'
- en: '[https://en.wikipedia.org/wiki/Finite_set](https://en.wikipedia.org/wiki/Finite_set)'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/有限集合](https://en.wikipedia.org/wiki/Finite_set)'
- en: '[PRE89]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: Rewrite a FiniteSet in terms of equalities and logic operators.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 用等式和逻辑运算符重写一个有限集。
- en: Compound Sets
  id: totrans-218
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 复合集合
- en: '[PRE90]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: Represents a union of sets as a [`Set`](#sympy.sets.sets.Set "sympy.sets.sets.Set").
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 表示集合的并集作为[`Set`](#sympy.sets.sets.Set "sympy.sets.sets.Set")。
- en: Examples
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE91]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: 'The Union constructor will always try to merge overlapping intervals, if possible.
    For example:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 并集构造函数将始终尝试合并重叠的区间，如果可能的话。例如：
- en: '[PRE92]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: See also
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`Intersection`](#sympy.sets.sets.Intersection "sympy.sets.sets.Intersection")'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Intersection`](#sympy.sets.sets.Intersection "sympy.sets.sets.Intersection")'
- en: References
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R842](#id6)]'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R842](#id6)]'
- en: '[https://en.wikipedia.org/wiki/Union_%28set_theory%29](https://en.wikipedia.org/wiki/Union_%28set_theory%29)'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/并集_(集合论)](https://en.wikipedia.org/wiki/Union_%28set_theory%29)'
- en: '[PRE93]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: Rewrite a Union in terms of equalities and logic operators.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 用等式和逻辑运算符重写并集。
- en: '[PRE94]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: Represents an intersection of sets as a [`Set`](#sympy.sets.sets.Set "sympy.sets.sets.Set").
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 表示集合的交集作为[`Set`](#sympy.sets.sets.Set "sympy.sets.sets.Set")。
- en: Examples
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE95]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: We often use the .intersect method
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 我们经常使用`.intersect`方法
- en: '[PRE96]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: See also
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`Union`](#sympy.sets.sets.Union "sympy.sets.sets.Union")'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Union`](#sympy.sets.sets.Union "sympy.sets.sets.Union")'
- en: References
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R843](#id7)]'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R843](#id7)]'
- en: '[https://en.wikipedia.org/wiki/Intersection_%28set_theory%29](https://en.wikipedia.org/wiki/Intersection_%28set_theory%29)'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/交集_(集合论)](https://en.wikipedia.org/wiki/Intersection_%28set_theory%29)'
- en: '[PRE97]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: Rewrite an Intersection in terms of equalities and logic operators
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 用等式和逻辑运算符重写一个交集。
- en: '[PRE98]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: Represents a Cartesian Product of Sets.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 表示集合的笛卡尔积。
- en: Explanation
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Returns a Cartesian product given several sets as either an iterable or individual
    arguments.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 给定多个集合作为可迭代或单个参数时返回笛卡尔积。
- en: Can use `*` operator on any sets for convenient shorthand.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在任何集合上使用`*`运算符进行方便的简写。
- en: Examples
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE99]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: '[PRE100]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: '[PRE101]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: '[PRE102]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: 'The Cartesian product is not commutative or associative e.g.:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 笛卡尔积不是可交换的或可结合的，例如：
- en: '[PRE103]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: Notes
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Passes most operations down to the argument sets
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将大多数操作传递到参数集合
- en: References
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R844](#id8)]'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R844](#id8)]'
- en: '[https://en.wikipedia.org/wiki/Cartesian_product](https://en.wikipedia.org/wiki/Cartesian_product)'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/笛卡尔积](https://zh.wikipedia.org/wiki/笛卡尔积)'
- en: '[PRE104]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: A property method which tests whether a set is iterable or not. Returns True
    if set is iterable, otherwise returns False.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 一个测试集合是否可迭代的属性方法。如果集合可迭代，则返回True，否则返回False。
- en: Examples
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE105]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: '[PRE106]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: Represents the set difference or relative complement of a set with another set.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 表示一个集合与另一个集合的集合差异或相对补集。
- en: \[A - B = \{x \in A \mid x \notin B\}\]
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: \[A - B = \{x \in A \mid x \notin B\}\]
- en: Examples
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE107]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: See also
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`Intersection`](#sympy.sets.sets.Intersection "sympy.sets.sets.Intersection"),
    [`Union`](#sympy.sets.sets.Union "sympy.sets.sets.Union")'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Intersection`](#sympy.sets.sets.Intersection "sympy.sets.sets.Intersection"),
    [`Union`](#sympy.sets.sets.Union "sympy.sets.sets.Union")'
- en: References
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R845](#id9)]'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R845](#id9)]'
- en: '[https://mathworld.wolfram.com/ComplementSet.html](https://mathworld.wolfram.com/ComplementSet.html)'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/补集.html](https://mathworld.wolfram.com/补集.html)'
- en: '[PRE108]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: Rewrite a complement in terms of equalities and logic operators
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 用等式和逻辑运算符重写一个补集
- en: '[PRE109]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: Simplify a [`Complement`](#sympy.sets.sets.Complement "sympy.sets.sets.Complement").
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 简化一个[`Complement`](#sympy.sets.sets.Complement "sympy.sets.sets.Complement")。
- en: '[PRE110]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: Represents the set of elements which are in either of the sets and not in their
    intersection.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 表示属于任一集合而不属于它们的交集的元素的集合。
- en: Examples
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE111]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: See also
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`Complement`](#sympy.sets.sets.Complement "sympy.sets.sets.Complement"), [`Union`](#sympy.sets.sets.Union
    "sympy.sets.sets.Union")'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Complement`](#sympy.sets.sets.Complement "sympy.sets.sets.Complement"), [`Union`](#sympy.sets.sets.Union
    "sympy.sets.sets.Union")'
- en: References
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R846](#id10)]'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R846](#id10)]'
- en: '[https://en.wikipedia.org/wiki/Symmetric_difference](https://en.wikipedia.org/wiki/Symmetric_difference)'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/对称差](https://zh.wikipedia.org/wiki/对称差)'
- en: '[PRE112]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: Rewrite a symmetric_difference in terms of equalities and logic operators
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 用等式和逻辑运算符重写对称差
- en: '[PRE113]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: Represents the disjoint union (also known as the external disjoint union) of
    a finite number of sets.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 表示有限个集合的不交并（也称为外不交并）。
- en: Examples
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE114]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: References
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[https://en.wikipedia.org/wiki/Disjoint_union](https://en.wikipedia.org/wiki/Disjoint_union)'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/不交并](https://zh.wikipedia.org/wiki/不交并)'
- en: Singleton Sets
  id: totrans-297
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 单例集合
- en: '[PRE115]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: Represents the empty set. The empty set is available as a singleton as `S.EmptySet`.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 表示空集。空集作为单例`S.EmptySet`提供。
- en: Examples
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE116]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: '[PRE117]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: See also
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`UniversalSet`](#sympy.sets.sets.UniversalSet "sympy.sets.sets.UniversalSet")'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '[`UniversalSet`](#sympy.sets.sets.UniversalSet "sympy.sets.sets.UniversalSet")'
- en: References
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R847](#id11)]'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R847](#id11)]'
- en: '[https://en.wikipedia.org/wiki/Empty_set](https://en.wikipedia.org/wiki/Empty_set)'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/空集](https://zh.wikipedia.org/wiki/空集)'
- en: '[PRE118]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: Represents the set of all things. The universal set is available as a singleton
    as `S.UniversalSet`.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 表示所有事物的集合。通用集合作为单例`S.UniversalSet`提供。
- en: Examples
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE119]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: '[PRE120]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: See also
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`EmptySet`](#sympy.sets.sets.EmptySet "sympy.sets.sets.EmptySet")'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '[`EmptySet`](#sympy.sets.sets.EmptySet "sympy.sets.sets.EmptySet")'
- en: References
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R848](#id12)]'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R848](#id12)]'
- en: '[https://en.wikipedia.org/wiki/Universal_set](https://en.wikipedia.org/wiki/Universal_set)'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/通用集合](https://zh.wikipedia.org/wiki/通用集合)'
- en: '## Special Sets'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: '## 特殊集合'
- en: '[PRE121]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: Represents the rational numbers. This set is also available as the singleton
    `S.Rationals`.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 表示有理数。此集合也作为单例`S.Rationals`提供。
- en: Examples
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE122]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: '[PRE123]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: Represents the natural numbers (or counting numbers) which are all positive
    integers starting from 1\. This set is also available as the singleton `S.Naturals`.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 表示自然数（或计数数），即从1开始的所有正整数。此集合也作为单例`S.Naturals`提供。
- en: Examples
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE124]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: See also
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`Naturals0`](#sympy.sets.fancysets.Naturals0 "sympy.sets.fancysets.Naturals0")'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Naturals0`](#sympy.sets.fancysets.Naturals0 "sympy.sets.fancysets.Naturals0")'
- en: non-negative integers (i.e. includes 0, too)
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 非负整数（即包括0）
- en: '[`Integers`](#sympy.sets.fancysets.Integers "sympy.sets.fancysets.Integers")'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Integers`](#sympy.sets.fancysets.Integers "sympy.sets.fancysets.Integers")'
- en: also includes negative integers
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 还包括负整数
- en: '[PRE125]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: Represents the whole numbers which are all the non-negative integers, inclusive
    of zero.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 表示全体非负整数，包括零。
- en: See also
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`Naturals`](#sympy.sets.fancysets.Naturals "sympy.sets.fancysets.Naturals")'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Naturals`](#sympy.sets.fancysets.Naturals "sympy.sets.fancysets.Naturals")'
- en: positive integers; does not include 0
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 正整数；不包括 0
- en: '[`Integers`](#sympy.sets.fancysets.Integers "sympy.sets.fancysets.Integers")'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '[`整数集`](#sympy.sets.fancysets.Integers "sympy.sets.fancysets.Integers")'
- en: also includes the negative integers
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 还包括负整数
- en: '[PRE126]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: 'Represents all integers: positive, negative and zero. This set is also available
    as the singleton `S.Integers`.'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 表示所有整数：正数、负数和零。这个集合也可以作为单例 `S.Integers`。
- en: Examples
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE127]'
  id: totrans-342
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: '[PRE128]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: See also
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`Naturals0`](#sympy.sets.fancysets.Naturals0 "sympy.sets.fancysets.Naturals0")'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Naturals0`](#sympy.sets.fancysets.Naturals0 "sympy.sets.fancysets.Naturals0")'
- en: non-negative integers
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 非负整数
- en: '[`Integers`](#sympy.sets.fancysets.Integers "sympy.sets.fancysets.Integers")'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '[`整数集`](#sympy.sets.fancysets.Integers "sympy.sets.fancysets.Integers")'
- en: positive and negative integers and zero
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 正整数、负整数和零
- en: '[PRE129]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: Represents all real numbers from negative infinity to positive infinity, including
    all integer, rational and irrational numbers. This set is also available as the
    singleton `S.Reals`.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 表示从负无穷到正无穷的所有实数，包括所有整数、有理数和无理数。这个集合也可以作为单例 `S.Reals`。
- en: Examples
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE130]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: See also
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`ComplexRegion`](#sympy.sets.fancysets.ComplexRegion "sympy.sets.fancysets.ComplexRegion")'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: '[`复数区域`](#sympy.sets.fancysets.ComplexRegion "sympy.sets.fancysets.ComplexRegion")'
- en: '[PRE131]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: The `Set` of all complex numbers
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 所有复数的`集`
- en: Examples
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE132]'
  id: totrans-358
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: See also
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`Reals`](#sympy.sets.fancysets.Reals "sympy.sets.fancysets.Reals"), [`ComplexRegion`](#sympy.sets.fancysets.ComplexRegion
    "sympy.sets.fancysets.ComplexRegion")'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: '[`实数集`](#sympy.sets.fancysets.Reals "sympy.sets.fancysets.Reals")，[`复数区域`](#sympy.sets.fancysets.ComplexRegion
    "sympy.sets.fancysets.ComplexRegion")'
- en: '[PRE133]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: Image of a set under a mathematical function. The transformation must be given
    as a Lambda function which has as many arguments as the elements of the set upon
    which it operates, e.g. 1 argument when acting on the set of integers or 2 arguments
    when acting on a complex region.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 数学函数下集的映像。变换必须作为 Lambda 函数给出，它有与其操作的集合元素相同数量的参数，例如，在整数集上操作时有 1 个参数或者在复数区域上操作时有
    2 个参数。
- en: This function is not normally called directly, but is called from `imageset`.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数通常不直接调用，但从 `imageset` 调用。
- en: Examples
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE134]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: '[PRE135]'
  id: totrans-366
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: '[PRE136]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: '[PRE137]'
  id: totrans-368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: If you want to get value for \(x\) = 2, 1/2 etc. (Please check whether the \(x\)
    value is in `base_set` or not before passing it as args)
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要获取 `x` = 2、1/2 等值（请在将其作为参数传递之前检查 `x` 值是否在 `base_set` 中）
- en: '[PRE138]'
  id: totrans-370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: '[PRE139]'
  id: totrans-371
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: See also
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sympy.sets.sets.imageset`](#sympy.sets.sets.imageset "sympy.sets.sets.imageset")'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.sets.sets.imageset`](#sympy.sets.sets.imageset "sympy.sets.sets.imageset")'
- en: '[PRE140]'
  id: totrans-374
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: Represents a range of integers. Can be called as `Range(stop)`, `Range(start,
    stop)`, or `Range(start, stop, step)`; when `step` is not given it defaults to
    1.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 表示整数范围。可以作为 `Range(stop)`、`Range(start, stop)` 或 `Range(start, stop, step)`
    调用；当未给出 `step` 时，默认为 1。
- en: '`Range(stop)` is the same as `Range(0, stop, 1)` and the stop value (just as
    for Python ranges) is not included in the Range values.'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: '`Range(stop)` 相当于 `Range(0, stop, 1)`，并且停止值（与 Python 的 range 类似）不包括在 Range
    值中。'
- en: '[PRE141]'
  id: totrans-377
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: 'The step can also be negative:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 步长也可以为负数：
- en: '[PRE142]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: 'The stop value is made canonical so equivalent ranges always have the same
    args:'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 停止值被作为标准，因此等效的范围始终具有相同的参数：
- en: '[PRE143]'
  id: totrans-381
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: 'Infinite ranges are allowed. `oo` and `-oo` are never included in the set (`Range`
    is always a subset of `Integers`). If the starting point is infinite, then the
    final value is `stop - step`. To iterate such a range, it needs to be reversed:'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 允许无限范围。`oo` 和 `-oo` 从不包括在集合中（`Range` 总是 `Integers` 的子集）。如果起始点是无限的，则最终值为 `stop
    - step`。要反向迭代这样的范围，需要将其反转：
- en: '[PRE144]'
  id: totrans-383
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: Although `Range` is a `Set` (and supports the normal set operations) it maintains
    the order of the elements and can be used in contexts where `range` would be used.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 `Range` 是一个 `集`（并支持常规的集操作），它保持元素的顺序，并可用于需要使用 `range` 的上下文中。
- en: '[PRE145]'
  id: totrans-385
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: 'Although slicing of a Range will always return a Range – possibly empty – an
    empty set will be returned from any intersection that is empty:'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然对`范围`的切片将始终返回一个`范围`（可能为空），但任何空交集都将返回一个空集：
- en: '[PRE146]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: 'Range will accept symbolic arguments but has very limited support for doing
    anything other than displaying the Range:'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: '`Range` 将接受符号参数，但对于除了显示 `Range` 外的其他操作支持非常有限：'
- en: '[PRE147]'
  id: totrans-389
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: 'Better success will be had when using integer symbols:'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用整数符号时，将获得更大的成功：
- en: '[PRE148]'
  id: totrans-391
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: '[PRE149]'
  id: totrans-392
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: Rewrite a Range in terms of equalities and logic operators.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 用等式和逻辑运算符重写一个`范围`。
- en: '[PRE150]'
  id: totrans-394
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: Return an equivalent Range in the opposite order.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个相反顺序的等效`范围`。
- en: Examples
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE151]'
  id: totrans-397
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: '[PRE152]'
  id: totrans-398
  prefs: []
  type: TYPE_PRE
  zh: '[PRE152]'
- en: Represents the Set of all Complex Numbers. It can represent a region of Complex
    Plane in both the standard forms Polar and Rectangular coordinates.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 表示所有复数的集合。它可以以标准形式的极坐标和直角坐标表示复平面的一个区域。
- en: Polar Form Input is in the form of the ProductSet or Union of ProductSets of
    the intervals of `r` and `theta`, and use the flag `polar=True`.
  id: totrans-400
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 极坐标形式输入以复数平面中复数的模数 `r` 和角度 `theta` 的 ProductSet 或 Union of ProductSets 形式给出，并使用标志
    `polar=True`。
- en: \[Z = \{z \in \mathbb{C} \mid z = r\times (\cos(\theta) + I\sin(\theta)), r
    \in [\texttt{r}], \theta \in [\texttt{theta}]\}\]
  id: totrans-401
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: \[Z = \{z \in \mathbb{C} \mid z = r\times (\cos(\theta) + I\sin(\theta)), r
    \in [\texttt{r}], \theta \in [\texttt{theta}]\}\]
- en: Rectangular Form Input is in the form of the ProductSet or Union of ProductSets
    of interval of x and y, the real and imaginary parts of the Complex numbers in
    a plane. Default input type is in rectangular form.
  id: totrans-402
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 矩形形式输入以复数平面中复数的实部和虚部 x 和 y 的 ProductSet 或 Union of ProductSets 形式给出。默认输入类型为矩形形式。
- en: \[Z = \{z \in \mathbb{C} \mid z = x + Iy, x \in [\operatorname{re}(z)], y \in
    [\operatorname{im}(z)]\}\]
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: \[Z = \{z \in \mathbb{C} \mid z = x + Iy, x \in [\operatorname{re}(z)], y \in
    [\operatorname{im}(z)]\}\]
- en: Examples
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE153]'
  id: totrans-405
  prefs: []
  type: TYPE_PRE
  zh: '[PRE153]'
- en: c1 represents the rectangular region in complex plane surrounded by the coordinates
    (2, 4), (3, 4), (3, 6) and (2, 6), of the four vertices.
  id: totrans-406
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: c1 表示复平面中由四个顶点 (2, 4), (3, 4), (3, 6) 和 (2, 6) 包围的矩形区域。
- en: '[PRE154]'
  id: totrans-407
  prefs: []
  type: TYPE_PRE
  zh: '[PRE154]'
- en: c2 represents the Union of two rectangular regions in complex plane. One of
    them surrounded by the coordinates of c1 and other surrounded by the coordinates
    (4, 1), (6, 1), (6, 8) and (4, 8).
  id: totrans-408
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: c2 表示复平面中两个矩形区域的并集。其中一个区域由 c1 的坐标包围，另一个区域由坐标 (4, 1), (6, 1), (6, 8) 和 (4, 8)
    包围。
- en: '[PRE155]'
  id: totrans-409
  prefs: []
  type: TYPE_PRE
  zh: '[PRE155]'
- en: '[PRE156]'
  id: totrans-410
  prefs: []
  type: TYPE_PRE
  zh: '[PRE156]'
- en: c2 represents the region in complex plane inside the Unit Disk centered at the
    origin.
  id: totrans-411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: c2 表示复平面中原点为圆心的单位圆内部的区域。
- en: '[PRE157]'
  id: totrans-412
  prefs: []
  type: TYPE_PRE
  zh: '[PRE157]'
- en: '[PRE158]'
  id: totrans-413
  prefs: []
  type: TYPE_PRE
  zh: '[PRE158]'
- en: See also
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`CartesianComplexRegion`](#sympy.sets.fancysets.CartesianComplexRegion "sympy.sets.fancysets.CartesianComplexRegion"),
    [`PolarComplexRegion`](#sympy.sets.fancysets.PolarComplexRegion "sympy.sets.fancysets.PolarComplexRegion"),
    [`Complexes`](#sympy.sets.fancysets.Complexes "sympy.sets.fancysets.Complexes")'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: '[`CartesianComplexRegion`](#sympy.sets.fancysets.CartesianComplexRegion "sympy.sets.fancysets.CartesianComplexRegion"),
    [`PolarComplexRegion`](#sympy.sets.fancysets.PolarComplexRegion "sympy.sets.fancysets.PolarComplexRegion"),
    [`Complexes`](#sympy.sets.fancysets.Complexes "sympy.sets.fancysets.Complexes")'
- en: '[PRE159]'
  id: totrans-416
  prefs: []
  type: TYPE_PRE
  zh: '[PRE159]'
- en: Return the union of intervals of \(x\) when, self is in rectangular form, or
    the union of intervals of \(r\) when self is in polar form.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 当 self 是矩形形式时，返回 \(x\) 的区间的并集，或者当 self 是极坐标形式时，返回 \(r\) 的区间的并集。
- en: Examples
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE160]'
  id: totrans-419
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: '[PRE161]'
  id: totrans-420
  prefs: []
  type: TYPE_PRE
  zh: '[PRE161]'
- en: Return the union of intervals of \(y\) when, self is in rectangular form, or
    the union of intervals of \(theta\) when self is in polar form.
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 当 self 是矩形形式时，返回 \(y\) 的区间的并集，或者当 self 是极坐标形式时，返回 \(theta\) 的区间的并集。
- en: Examples
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE162]'
  id: totrans-423
  prefs: []
  type: TYPE_PRE
  zh: '[PRE162]'
- en: '[PRE163]'
  id: totrans-424
  prefs: []
  type: TYPE_PRE
  zh: '[PRE163]'
- en: Converts given subset of real numbers to a complex region.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 将给定的实数子集转换为复数区域。
- en: Examples
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE164]'
  id: totrans-427
  prefs: []
  type: TYPE_PRE
  zh: '[PRE164]'
- en: '[PRE165]'
  id: totrans-428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE165]'
- en: Return a tuple of sets (ProductSets) input of the self.
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个包含输入 self 的 ProductSets 的元组。
- en: Examples
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE166]'
  id: totrans-431
  prefs: []
  type: TYPE_PRE
  zh: '[PRE166]'
- en: '[PRE167]'
  id: totrans-432
  prefs: []
  type: TYPE_PRE
  zh: '[PRE167]'
- en: Return raw input sets to the self.
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 返回原始输入集合给 self。
- en: Examples
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE168]'
  id: totrans-435
  prefs: []
  type: TYPE_PRE
  zh: '[PRE168]'
- en: '[PRE169]'
  id: totrans-436
  prefs: []
  type: TYPE_PRE
  zh: '[PRE169]'
- en: Set representing a square region of the complex plane.
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 表示复平面上一个正方形区域的集合。
- en: \[Z = \{z \in \mathbb{C} \mid z = x + Iy, x \in [\operatorname{re}(z)], y \in
    [\operatorname{im}(z)]\}\]
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: \[Z = \{z \in \mathbb{C} \mid z = x + Iy, x \in [\operatorname{re}(z)], y \in
    [\operatorname{im}(z)]\}\]
- en: Examples
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE170]'
  id: totrans-440
  prefs: []
  type: TYPE_PRE
  zh: '[PRE170]'
- en: See also
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`ComplexRegion`](#sympy.sets.fancysets.ComplexRegion "sympy.sets.fancysets.ComplexRegion"),
    [`PolarComplexRegion`](#sympy.sets.fancysets.PolarComplexRegion "sympy.sets.fancysets.PolarComplexRegion"),
    [`Complexes`](#sympy.sets.fancysets.Complexes "sympy.sets.fancysets.Complexes")'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ComplexRegion`](#sympy.sets.fancysets.ComplexRegion "sympy.sets.fancysets.ComplexRegion"),
    [`PolarComplexRegion`](#sympy.sets.fancysets.PolarComplexRegion "sympy.sets.fancysets.PolarComplexRegion"),
    [`Complexes`](#sympy.sets.fancysets.Complexes "sympy.sets.fancysets.Complexes")'
- en: '[PRE171]'
  id: totrans-443
  prefs: []
  type: TYPE_PRE
  zh: '[PRE171]'
- en: Set representing a polar region of the complex plane.
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 表示复平面上一个极坐标区域的集合。
- en: \[Z = \{z \in \mathbb{C} \mid z = r\times (\cos(\theta) + I\sin(\theta)), r
    \in [\texttt{r}], \theta \in [\texttt{theta}]\}\]
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: \[Z = \{z \in \mathbb{C} \mid z = r\times (\cos(\theta) + I\sin(\theta)), r
    \in [\texttt{r}], \theta \in [\texttt{theta}]\}\]
- en: Examples
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE172]'
  id: totrans-447
  prefs: []
  type: TYPE_PRE
  zh: '[PRE172]'
- en: See also
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`ComplexRegion`](#sympy.sets.fancysets.ComplexRegion "sympy.sets.fancysets.ComplexRegion"),
    [`CartesianComplexRegion`](#sympy.sets.fancysets.CartesianComplexRegion "sympy.sets.fancysets.CartesianComplexRegion"),
    [`Complexes`](#sympy.sets.fancysets.Complexes "sympy.sets.fancysets.Complexes")'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ComplexRegion`](#sympy.sets.fancysets.ComplexRegion "sympy.sets.fancysets.ComplexRegion"),
    [`CartesianComplexRegion`](#sympy.sets.fancysets.CartesianComplexRegion "sympy.sets.fancysets.CartesianComplexRegion"),
    [`Complexes`](#sympy.sets.fancysets.Complexes "sympy.sets.fancysets.Complexes")'
- en: '[PRE173]'
  id: totrans-450
  prefs: []
  type: TYPE_PRE
  zh: '[PRE173]'
- en: Normalize a Real Set \(theta\) in the interval \([0, 2\pi)\). It returns a normalized
    value of theta in the Set. For Interval, a maximum of one cycle \([0, 2\pi]\),
    is returned i.e. for theta equal to \([0, 10\pi]\), returned normalized value
    would be \([0, 2\pi)\). As of now intervals with end points as non-multiples of
    `pi` is not supported.
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 将实数集合 \( \theta \) 规范化到区间 \([0, 2\pi)\)。它返回集合中 \(\theta\) 的规范化值。对于区间，最多返回一个周期
    \([0, 2\pi]\)，即对于等于 \([0, 10\pi]\) 的 \(\theta\)，返回的规范化值将是 \([0, 2\pi)\)。目前不支持端点为
    `pi` 的非倍数的区间。
- en: 'Raises:'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 抛出：
- en: '**NotImplementedError**'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: '**未实现错误**'
- en: The algorithms for Normalizing theta Set are not yet implemented.
  id: totrans-454
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 尚未实现正规化 theta Set 的算法。
- en: '**ValueError**'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: '**数值错误**'
- en: The input is not valid, i.e. the input is not a real set.
  id: totrans-456
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 输入无效，即输入不是实集。
- en: '**RuntimeError**'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: '**运行时错误**'
- en: It is a bug, please report to the github issue tracker.
  id: totrans-458
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这是一个错误，请报告给 GitHub 问题跟踪器。
- en: Examples
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE174]  ## Power sets'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE174]  ## 幂集'
- en: '[PRE175]'
  id: totrans-461
  prefs: []
  type: TYPE_PRE
  zh: '[PRE175]'
- en: A symbolic object representing a power set.
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 代表幂集的符号对象。
- en: 'Parameters:'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**arg** : Set'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: '**arg**：集合'
- en: The set to take power of.
  id: totrans-465
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 进行幂操作的集合。
- en: '**evaluate** : bool'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: '**评估**：布尔值'
- en: The flag to control evaluation.
  id: totrans-467
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 控制评估的标志。
- en: ''
  id: totrans-468
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: If the evaluation is disabled for finite sets, it can take advantage of using
    subset test as a membership test.
  id: totrans-469
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果禁用有限集的评估，则可以利用子集测试作为成员测试的优势。
- en: Notes
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: Power set \(\mathcal{P}(S)\) is defined as a set containing all the subsets
    of \(S\).
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: 幂集 \(\mathcal{P}(S)\) 定义为包含 \(S\) 的所有子集的集合。
- en: If the set \(S\) is a finite set, its power set would have \(2^{\left| S \right|}\)
    elements, where \(\left| S \right|\) denotes the cardinality of \(S\).
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 如果集合 \(S\) 是有限集，则其幂集将具有 \(2^{\left| S \right|}\) 个元素，其中 \(\left| S \right|\)
    表示 \(S\) 的基数。
- en: Examples
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE176]'
  id: totrans-474
  prefs: []
  type: TYPE_PRE
  zh: '[PRE176]'
- en: 'A power set of a finite set:'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 有限集的幂集：
- en: '[PRE177]'
  id: totrans-476
  prefs: []
  type: TYPE_PRE
  zh: '[PRE177]'
- en: 'A power set of an empty set:'
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 空集的幂集：
- en: '[PRE178]'
  id: totrans-478
  prefs: []
  type: TYPE_PRE
  zh: '[PRE178]'
- en: 'A power set of an infinite set:'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: 无限集的幂集：
- en: '[PRE179]'
  id: totrans-480
  prefs: []
  type: TYPE_PRE
  zh: '[PRE179]'
- en: 'Evaluating the power set of a finite set to its explicit form:'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 对有限集的幂集进行显式形式的评估：
- en: '[PRE180]'
  id: totrans-482
  prefs: []
  type: TYPE_PRE
  zh: '[PRE180]'
- en: References
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 引用
- en: '[[R849](#id13)]'
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R849](#id13)]'
- en: '[https://en.wikipedia.org/wiki/Power_set](https://en.wikipedia.org/wiki/Power_set)'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Power_set](https://en.wikipedia.org/wiki/Power_set)'
- en: '[[R850](#id14)]'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R850](#id14)]'
- en: '[https://en.wikipedia.org/wiki/Axiom_of_power_set](https://en.wikipedia.org/wiki/Axiom_of_power_set)  ##
    Condition Sets'
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Axiom_of_power_set](https://en.wikipedia.org/wiki/Axiom_of_power_set)  ##
    条件集合'
- en: '[PRE181]'
  id: totrans-488
  prefs: []
  type: TYPE_PRE
  zh: '[PRE181]'
- en: Set of elements which satisfies a given condition.
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 满足给定条件的元素集合。
- en: \[\{x \mid \textrm{condition}(x) = \texttt{True}, x \in S\}\]
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: \[\{x \mid \textrm{condition}(x) = \texttt{True}, x \in S\}\]
- en: Examples
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE182]'
  id: totrans-492
  prefs: []
  type: TYPE_PRE
  zh: '[PRE182]'
- en: '[PRE183]'
  id: totrans-493
  prefs: []
  type: TYPE_PRE
  zh: '[PRE183]'
- en: 'If the value is not in the base set, the result is false:'
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 如果值不在基本集合中，则结果为假：
- en: '[PRE184]'
  id: totrans-495
  prefs: []
  type: TYPE_PRE
  zh: '[PRE184]'
- en: Notes
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: 'Symbols with assumptions should be avoided or else the condition may evaluate
    without consideration of the set:'
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 应避免具有假设的符号，否则条件可能会在不考虑集合的情况下进行评估：
- en: '[PRE185]'
  id: totrans-498
  prefs: []
  type: TYPE_PRE
  zh: '[PRE185]'
- en: 'Only free symbols can be changed by using \(subs\):'
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 只有自由符号可以通过 \(subs\) 进行更改：
- en: '[PRE186]'
  id: totrans-500
  prefs: []
  type: TYPE_PRE
  zh: '[PRE186]'
- en: 'To check if `pi` is in `c` use:'
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查 `pi` 是否在 `c` 中使用：
- en: '[PRE187]'
  id: totrans-502
  prefs: []
  type: TYPE_PRE
  zh: '[PRE187]'
- en: 'If no base set is specified, the universal set is implied:'
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未指定基本集合，则暗示通用集合：
- en: '[PRE188]'
  id: totrans-504
  prefs: []
  type: TYPE_PRE
  zh: '[PRE188]'
- en: 'Only symbols or symbol-like expressions can be used:'
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 只能使用符号或类似符号的表达式：
- en: '[PRE189]'
  id: totrans-506
  prefs: []
  type: TYPE_PRE
  zh: '[PRE189]'
- en: 'When the base set is a ConditionSet, the symbols will be unified if possible
    with preference for the outermost symbols:'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 当基本集合为 ConditionSet 时，如果可能的话，符号将被统一，并优先考虑最外层的符号：
- en: '[PRE190]'
  id: totrans-508
  prefs: []
  type: TYPE_PRE
  zh: '[PRE190]'
- en: '[PRE191]'
  id: totrans-509
  prefs: []
  type: TYPE_PRE
  zh: '[PRE191]'
- en: Asserts that x is an element of the set S.
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 断言 x 是集合 S 的元素。
- en: Examples
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE192]'
  id: totrans-512
  prefs: []
  type: TYPE_PRE
  zh: '[PRE192]'
- en: References
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 引用
- en: '[[R851](#id15)]'
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R851](#id15)]'
- en: '[https://en.wikipedia.org/wiki/Element_%28mathematics%29](https://en.wikipedia.org/wiki/Element_%28mathematics%29)'
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Element_%28mathematics%29](https://en.wikipedia.org/wiki/Element_%28mathematics%29)'
- en: SetKind
  id: totrans-516
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SetKind
- en: '[PRE193]'
  id: totrans-517
  prefs: []
  type: TYPE_PRE
  zh: '[PRE193]'
- en: SetKind is kind for all Sets
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: SetKind 是所有集合的种类
- en: Every instance of Set will have kind `SetKind` parametrised by the kind of the
    elements of the `Set`. The kind of the elements might be `NumberKind`, or `TupleKind`
    or something else. When not all elements have the same kind then the kind of the
    elements will be given as `UndefinedKind`.
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 Set 实例都将有一个由元素的种类 `SetKind` 参数化的参数。元素的种类可能是 `NumberKind`，或者 `TupleKind` 或其他某些种类。当不是所有元素都具有相同的种类时，元素的种类将被给定为
    `UndefinedKind`。
- en: 'Parameters:'
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**element_kind: Kind (optional)**'
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: '**element_kind：种类（可选）**'
- en: The kind of the elements of the set. In a well defined set all elements will
    have the same kind. Otherwise the kind should [`sympy.core.kind.UndefinedKind`](core.html#sympy.core.kind.UndefinedKind
    "sympy.core.kind.UndefinedKind"). The `element_kind` argument is optional but
    should only be omitted in the case of `EmptySet` whose kind is simply `SetKind()`
  id: totrans-522
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 集合元素的类型。在定义良好的集合中，所有元素将具有相同的类型。否则，类型应为[`sympy.core.kind.UndefinedKind`](core.html#sympy.core.kind.UndefinedKind
    "sympy.core.kind.UndefinedKind")。`element_kind` 参数是可选的，但只能在`EmptySet`的情况下省略，其类型仅为`SetKind()`
- en: Examples
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE194]'
  id: totrans-524
  prefs: []
  type: TYPE_PRE
  zh: '[PRE194]'
- en: See also
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`sympy.core.kind.NumberKind`](core.html#sympy.core.kind.NumberKind "sympy.core.kind.NumberKind"),
    [`sympy.matrices.kind.MatrixKind`](matrices/kind.html#sympy.matrices.kind.MatrixKind
    "sympy.matrices.kind.MatrixKind"), [`sympy.core.containers.TupleKind`](core.html#sympy.core.containers.TupleKind
    "sympy.core.containers.TupleKind")'
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.core.kind.NumberKind`](core.html#sympy.core.kind.NumberKind "sympy.core.kind.NumberKind"),
    [`sympy.matrices.kind.MatrixKind`](matrices/kind.html#sympy.matrices.kind.MatrixKind
    "sympy.matrices.kind.MatrixKind"), [`sympy.core.containers.TupleKind`](core.html#sympy.core.containers.TupleKind
    "sympy.core.containers.TupleKind")'
- en: Iteration over sets
  id: totrans-527
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 集合的迭代
- en: For set unions, \(\{a, b\} \cup \{x, y\}\) can be treated as \(\{a, b, x, y\}\)
    for iteration regardless of the distinctiveness of the elements, however, for
    set intersections, assuming that \(\{a, b\} \cap \{x, y\}\) is \(\varnothing\)
    or \(\{a, b \}\) would not always be valid, since some of \(a\), \(b\), \(x\)
    or \(y\) may or may not be the elements of the intersection.
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 对于集合的并集，\(\{a, b\} \cup \{x, y\}\) 可以视为 \(\{a, b, x, y\}\) 进行迭代，无论元素的唯一性如何，但是对于集合的交集，假设
    \(\{a, b\} \cap \{x, y\}\) 是 \(\varnothing\) 或 \(\{a, b \}\) 并不总是有效的，因为其中的一些 \(a\),
    \(b\), \(x\) 或 \(y\) 可能不是交集的元素。
- en: Iterating over the elements of a set involving intersection, complement, or
    symmetric difference yields (possibly duplicate) elements of the set provided
    that all elements are known to be the elements of the set. If any element cannot
    be determined to be a member of a set then the iteration gives `TypeError`. This
    happens in the same cases where `x in y` would give an error.
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: 对涉及交集、补集或对称差的集合元素进行迭代会产生（可能重复的）集合元素，前提是所有元素都已知是集合的元素。如果任何元素不能确定是集合的成员，则迭代会产生`TypeError`。这与`x
    in y`会产生错误的情况相同。
- en: There are some reasons to implement like this, even if it breaks the consistency
    with how the python set iterator works. We keep in mind that sympy set comprehension
    like `FiniteSet(*s)` from a existing sympy sets could be a common usage. And this
    approach would make `FiniteSet(*s)` to be consistent with any symbolic set processing
    methods like `FiniteSet(*simplify(s))`.
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些原因可以这样实现，即使这破坏了与 Python 集合迭代器工作方式的一致性。我们要记住，像`FiniteSet(*s)`从现有的 sympy 集合中推导出的集合可能是常见用法。这种方法会使`FiniteSet(*s)`与任何符号集合处理方法（如`FiniteSet(*simplify(s))`）保持一致。
