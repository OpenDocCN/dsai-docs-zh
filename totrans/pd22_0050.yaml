- en: Cookbook
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/user_guide/cookbook.html](https://pandas.pydata.org/docs/user_guide/cookbook.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This is a repository for *short and sweet* examples and links for useful pandas
    recipes. We encourage users to add to this documentation.
  prefs: []
  type: TYPE_NORMAL
- en: Adding interesting links and/or inline examples to this section is a great *First
    Pull Request*.
  prefs: []
  type: TYPE_NORMAL
- en: Simplified, condensed, new-user friendly, in-line examples have been inserted
    where possible to augment the Stack-Overflow and GitHub links. Many of the links
    contain expanded information, above what the in-line examples offer.
  prefs: []
  type: TYPE_NORMAL
- en: pandas (pd) and NumPy (np) are the only two abbreviated imported modules. The
    rest are kept explicitly imported for newer users.
  prefs: []
  type: TYPE_NORMAL
- en: Idioms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: These are some neat pandas `idioms`
  prefs: []
  type: TYPE_NORMAL
- en: '[if-then/if-then-else on one column, and assignment to another one or more
    columns:](https://stackoverflow.com/questions/17128302/python-pandas-idiom-for-if-then-else)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: if-then…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: An if-then on one column
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'An if-then with assignment to 2 columns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Add another line with different logic, to do the -else
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Or use pandas where after you’ve set up a mask
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[if-then-else using NumPy’s where()](https://stackoverflow.com/questions/19913659/pandas-conditional-creation-of-a-series-dataframe-column)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Splitting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Split a frame with a boolean criterion](https://stackoverflow.com/questions/14957116/how-to-split-a-dataframe-according-to-a-boolean-criterion)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Building criteria
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Select with multi-column criteria](https://stackoverflow.com/questions/15315452/selecting-with-complex-criteria-from-pandas-dataframe)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: …and (without assignment returns a Series)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: …or (without assignment returns a Series)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: …or (with assignment modifies the DataFrame.)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[Select rows with data closest to certain value using argsort](https://stackoverflow.com/questions/17758023/return-rows-in-a-dataframe-closest-to-a-user-defined-number)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[Dynamically reduce a list of criteria using a binary operators](https://stackoverflow.com/questions/21058254/pandas-boolean-operation-in-a-python-list/21058331)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'One could hard code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: …Or it can be done with a list of dynamically built criteria
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '## Selection'
  prefs: []
  type: TYPE_NORMAL
- en: Dataframes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The [indexing](indexing.html#indexing) docs.
  prefs: []
  type: TYPE_NORMAL
- en: '[Using both row labels and value conditionals](https://stackoverflow.com/questions/14725068/pandas-using-row-labels-in-boolean-indexing)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Use loc for label-oriented slicing and iloc positional slicing [GH 2904](https://github.com/pandas-dev/pandas/issues/2904)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: There are 2 explicit slicing methods, with a third general case
  prefs: []
  type: TYPE_NORMAL
- en: 'Positional-oriented (Python slicing style : exclusive of end)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Label-oriented (Non-Python slicing style : inclusive of end)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'General (Either slicing style : depends on if the slice contains labels or
    positions)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Ambiguity arises when an index consists of integers with a non-zero start or
    non-unit increment.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '[Using inverse operator (~) to take the complement of a mask](https://stackoverflow.com/q/14986510)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: New columns
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Efficiently and dynamically creating new columns using DataFrame.map (previously
    named applymap)](https://stackoverflow.com/questions/16575868/efficiently-creating-additional-columns-in-a-pandas-dataframe-using-map)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: '[Keep other columns when using min() with groupby](https://stackoverflow.com/q/23394476)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'Method 1 : idxmin() to get the index of the minimums'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'Method 2 : sort then take first of each'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'Notice the same results, with the exception of the index.  ## Multiindexing'
  prefs: []
  type: TYPE_NORMAL
- en: The [multindexing](advanced.html#advanced-hierarchical) docs.
  prefs: []
  type: TYPE_NORMAL
- en: '[Creating a MultiIndex from a labeled frame](https://stackoverflow.com/questions/14916358/reshaping-dataframes-in-pandas-based-on-column-labels)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: Arithmetic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Performing arithmetic with a MultiIndex that needs broadcasting](https://stackoverflow.com/questions/19501510/divide-entire-pandas-multiindex-dataframe-by-dataframe-variable/19502176#19502176)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: Slicing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Slicing a MultiIndex with xs](https://stackoverflow.com/questions/12590131/how-to-slice-multindex-columns-in-pandas-dataframes)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'To take the cross section of the 1st level and 1st axis the index:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: …and now the 2nd level of the 1st axis.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: '[Slicing a MultiIndex with xs, method #2](https://stackoverflow.com/questions/14964493/multiindex-based-indexing-in-pandas)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: '[Setting portions of a MultiIndex with xs](https://stackoverflow.com/questions/19319432/pandas-selecting-a-lower-level-in-a-dataframe-to-do-a-ffill)'
  prefs: []
  type: TYPE_NORMAL
- en: Sorting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Sort by specific column or an ordered list of columns, with a MultiIndex](https://stackoverflow.com/q/14733871)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: Partial selection, the need for sortedness [GH 2995](https://github.com/pandas-dev/pandas/issues/2995)
  prefs: []
  type: TYPE_NORMAL
- en: Levels
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Prepending a level to a multiindex](https://stackoverflow.com/questions/14744068/prepend-a-level-to-a-pandas-multiindex)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Flatten Hierarchical columns](https://stackoverflow.com/q/14507794)  ## Missing
    data'
  prefs: []
  type: TYPE_NORMAL
- en: The [missing data](missing_data.html#missing-data) docs.
  prefs: []
  type: TYPE_NORMAL
- en: Fill forward a reversed timeseries
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: '[cumsum reset at NaN values](https://stackoverflow.com/questions/18196811/cumsum-reset-at-nan)'
  prefs: []
  type: TYPE_NORMAL
- en: Replace
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Using replace with backrefs](https://stackoverflow.com/questions/16818871/extracting-value-and-creating-new-column-out-of-it)  ##
    Grouping'
  prefs: []
  type: TYPE_NORMAL
- en: The [grouping](groupby.html#groupby) docs.
  prefs: []
  type: TYPE_NORMAL
- en: '[Basic grouping with apply](https://stackoverflow.com/questions/15322632/python-pandas-df-groupy-agg-column-reference-in-agg)'
  prefs: []
  type: TYPE_NORMAL
- en: Unlike agg, apply’s callable is passed a sub-DataFrame which gives you access
    to all the columns
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: '[Using get_group](https://stackoverflow.com/questions/14734533/how-to-access-pandas-groupby-dataframe-by-key)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: '[Apply to different items in a group](https://stackoverflow.com/questions/15262134/apply-different-functions-to-different-items-in-group-object-python-pandas)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: '[Expanding apply](https://stackoverflow.com/questions/14542145/reductions-down-a-column-in-pandas)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: '[Replacing some values with mean of the rest of a group](https://stackoverflow.com/questions/14760757/replacing-values-with-groupby-means)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: '[Sort groups by aggregated data](https://stackoverflow.com/questions/14941366/pandas-sort-by-group-aggregate-and-column)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: '[Create multiple aggregated columns](https://stackoverflow.com/questions/14897100/create-multiple-columns-in-pandas-aggregation-function)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: '[Create a value counts column and reassign back to the DataFrame](https://stackoverflow.com/q/17709270)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: '[Shift groups of the values in a column based on the index](https://stackoverflow.com/q/23198053/190597)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: '[Select row with maximum value from each group](https://stackoverflow.com/q/26701849/190597)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: '[Grouping like Python’s itertools.groupby](https://stackoverflow.com/q/29142487/846892)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: Expanding data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Alignment and to-date](https://stackoverflow.com/questions/15489011/python-time-series-alignment-and-to-date-functions)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Rolling Computation window based on values instead of counts](https://stackoverflow.com/questions/14300768/pandas-rolling-computation-with-window-based-on-values-instead-of-counts)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Rolling Mean by Time Interval](https://stackoverflow.com/questions/15771472/pandas-rolling-mean-by-time-interval)'
  prefs: []
  type: TYPE_NORMAL
- en: Splitting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Splitting a frame](https://stackoverflow.com/questions/13353233/best-way-to-split-a-dataframe-given-an-edge/15449992#15449992)'
  prefs: []
  type: TYPE_NORMAL
- en: Create a list of dataframes, split using a delineation based on logic included
    in rows.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: '### Pivot'
  prefs: []
  type: TYPE_NORMAL
- en: The [Pivot](reshaping.html#reshaping-pivot) docs.
  prefs: []
  type: TYPE_NORMAL
- en: '[Partial sums and subtotals](https://stackoverflow.com/a/15574875)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: '[Frequency table like plyr in R](https://stackoverflow.com/questions/15589354/frequency-tables-in-pandas-like-plyr-in-r)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: '[Plot pandas DataFrame with year over year data](https://stackoverflow.com/questions/30379789/plot-pandas-data-frame-with-year-over-year-data)'
  prefs: []
  type: TYPE_NORMAL
- en: 'To create year and month cross tabulation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: Apply
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Rolling apply to organize - Turning embedded lists into a MultiIndex frame](https://stackoverflow.com/questions/17349981/converting-pandas-dataframe-with-categorical-values-into-binary-values)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: '[Rolling apply with a DataFrame returning a Series](https://stackoverflow.com/questions/19121854/using-rolling-apply-on-a-dataframe-object)'
  prefs: []
  type: TYPE_NORMAL
- en: Rolling Apply to multiple columns where function calculates a Series before
    a Scalar from the Series is returned
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: '[Rolling apply with a DataFrame returning a Scalar](https://stackoverflow.com/questions/21040766/python-pandas-rolling-apply-two-column-input-into-function/21045831#21045831)'
  prefs: []
  type: TYPE_NORMAL
- en: Rolling Apply to multiple columns where function returns a Scalar (Volume Weighted
    Average Price)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: Timeseries
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Between times](https://stackoverflow.com/questions/14539992/pandas-drop-rows-outside-of-time-range)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Using indexer between time](https://stackoverflow.com/questions/17559885/pandas-dataframe-mask-based-on-index)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Constructing a datetime range that excludes weekends and includes only certain
    times](https://stackoverflow.com/a/24014440)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Vectorized Lookup](https://stackoverflow.com/questions/13893227/vectorized-look-up-of-values-in-pandas-dataframe)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Aggregation and plotting time series](https://nipunbatra.github.io/blog/visualisation/2013/05/01/aggregation-timeseries.html)'
  prefs: []
  type: TYPE_NORMAL
- en: Turn a matrix with hours in columns and days in rows into a continuous row sequence
    in the form of a time series. [How to rearrange a Python pandas DataFrame?](https://stackoverflow.com/questions/15432659/how-to-rearrange-a-python-pandas-dataframe)
  prefs: []
  type: TYPE_NORMAL
- en: '[Dealing with duplicates when reindexing a timeseries to a specified frequency](https://stackoverflow.com/questions/22244383/pandas-df-refill-adding-two-columns-of-different-shape)'
  prefs: []
  type: TYPE_NORMAL
- en: Calculate the first day of the month for each entry in a DatetimeIndex
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: '### Resampling'
  prefs: []
  type: TYPE_NORMAL
- en: The [Resample](timeseries.html#timeseries-resampling) docs.
  prefs: []
  type: TYPE_NORMAL
- en: '[Using Grouper instead of TimeGrouper for time grouping of values](https://stackoverflow.com/questions/15297053/how-can-i-divide-single-values-of-a-dataframe-by-monthly-averages)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Time grouping with some missing values](https://stackoverflow.com/questions/33637312/pandas-grouper-by-frequency-with-completeness-requirement)'
  prefs: []
  type: TYPE_NORMAL
- en: Valid frequency arguments to Grouper [Timeseries](timeseries.html#timeseries-offset-aliases)
  prefs: []
  type: TYPE_NORMAL
- en: '[Grouping using a MultiIndex](https://stackoverflow.com/questions/41483763/pandas-timegrouper-on-multiindex)'
  prefs: []
  type: TYPE_NORMAL
- en: Using TimeGrouper and another grouping to create subgroups, then apply a custom
    function [GH 3791](https://github.com/pandas-dev/pandas/issues/3791)
  prefs: []
  type: TYPE_NORMAL
- en: '[Resampling with custom periods](https://stackoverflow.com/questions/15408156/resampling-with-custom-periods)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Resample intraday frame without adding new days](https://stackoverflow.com/questions/14898574/resample-intrday-pandas-dataframe-without-add-new-days)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Resample minute data](https://stackoverflow.com/questions/14861023/resampling-minute-data)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Resample with groupby](https://stackoverflow.com/q/18677271/564538)  ## Merge'
  prefs: []
  type: TYPE_NORMAL
- en: The [Join](merging.html#merging-join) docs.
  prefs: []
  type: TYPE_NORMAL
- en: '[Concatenate two dataframes with overlapping index (emulate R rbind)](https://stackoverflow.com/questions/14988480/pandas-version-of-rbind)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: Depending on df construction, `ignore_index` may be needed
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: Self Join of a DataFrame [GH 2996](https://github.com/pandas-dev/pandas/issues/2996)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: '[How to set the index and join](https://stackoverflow.com/questions/14341805/pandas-merge-pd-merge-how-to-set-the-index-and-join)'
  prefs: []
  type: TYPE_NORMAL
- en: '[KDB like asof join](https://stackoverflow.com/questions/12322289/kdb-like-asof-join-for-timeseries-data-in-pandas/12336039#12336039)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Join with a criteria based on the values](https://stackoverflow.com/questions/15581829/how-to-perform-an-inner-or-outer-join-of-dataframes-with-pandas-on-non-simplisti)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Using searchsorted to merge based on values inside a range](https://stackoverflow.com/questions/25125626/pandas-merge-with-logic/2512764)  ##
    Plotting'
  prefs: []
  type: TYPE_NORMAL
- en: The [Plotting](visualization.html#visualization) docs.
  prefs: []
  type: TYPE_NORMAL
- en: '[Make Matplotlib look like R](https://stackoverflow.com/questions/14349055/making-matplotlib-graphs-look-like-r-by-default)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Setting x-axis major and minor labels](https://stackoverflow.com/questions/12945971/pandas-timeseries-plot-setting-x-axis-major-and-minor-ticks-and-labels)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Plotting multiple charts in an IPython Jupyter notebook](https://stackoverflow.com/questions/16392921/make-more-than-one-chart-in-same-ipython-notebook-cell)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Creating a multi-line plot](https://stackoverflow.com/questions/16568964/make-a-multiline-plot-from-csv-file-in-matplotlib)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Plotting a heatmap](https://stackoverflow.com/questions/17050202/plot-timeseries-of-histograms-in-python)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Annotate a time-series plot](https://stackoverflow.com/questions/11067368/annotate-time-series-plot-in-matplotlib)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Annotate a time-series plot #2](https://stackoverflow.com/questions/17891493/annotating-points-from-a-pandas-dataframe-in-matplotlib-plot)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Generate Embedded plots in excel files using Pandas, Vincent and xlsxwriter](https://pandas-xlsxwriter-charts.readthedocs.io/)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Boxplot for each quartile of a stratifying variable](https://stackoverflow.com/questions/23232989/boxplot-stratified-by-column-in-python-pandas)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: '![../_images/quartile_boxplot.png](../Images/49df85cb7d3c1e3681f55fa48b5fefa6.png)'
  prefs: []
  type: TYPE_IMG
- en: Data in/out
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Performance comparison of SQL vs HDF5](https://stackoverflow.com/q/16628329)'
  prefs: []
  type: TYPE_NORMAL
- en: '### CSV'
  prefs: []
  type: TYPE_NORMAL
- en: The [CSV](io.html#io-read-csv-table) docs
  prefs: []
  type: TYPE_NORMAL
- en: '[read_csv in action](https://wesmckinney.com/blog/update-on-upcoming-pandas-v0-10-new-file-parser-other-performance-wins/)'
  prefs: []
  type: TYPE_NORMAL
- en: '[appending to a csv](https://stackoverflow.com/questions/17134942/pandas-dataframe-output-end-of-csv)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Reading a csv chunk-by-chunk](https://stackoverflow.com/questions/11622652/large-persistent-dataframe-in-pandas/12193309#12193309)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Reading only certain rows of a csv chunk-by-chunk](https://stackoverflow.com/questions/19674212/pandas-data-frame-select-rows-and-clear-memory)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Reading the first few lines of a frame](https://stackoverflow.com/questions/15008970/way-to-read-first-few-lines-for-pandas-dataframe)'
  prefs: []
  type: TYPE_NORMAL
- en: Reading a file that is compressed but not by `gzip/bz2` (the native compressed
    formats which `read_csv` understands). This example shows a `WinZipped` file,
    but is a general application of opening the file within a context manager and
    using that handle to read. [See here](https://stackoverflow.com/questions/17789907/pandas-convert-winzipped-csv-file-to-data-frame)
  prefs: []
  type: TYPE_NORMAL
- en: '[Inferring dtypes from a file](https://stackoverflow.com/questions/15555005/get-inferred-dataframe-types-iteratively-using-chunksize)'
  prefs: []
  type: TYPE_NORMAL
- en: Dealing with bad lines [GH 2886](https://github.com/pandas-dev/pandas/issues/2886)
  prefs: []
  type: TYPE_NORMAL
- en: '[Write a multi-row index CSV without writing duplicates](https://stackoverflow.com/questions/17349574/pandas-write-multiindex-rows-with-to-csv)'
  prefs: []
  type: TYPE_NORMAL
- en: '#### Reading multiple files to create a single DataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: 'The best way to combine multiple files into a single DataFrame is to read the
    individual frames one by one, put all of the individual frames into a list, and
    then combine the frames in the list using `pd.concat()`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: 'You can use the same approach to read all files matching a pattern. Here is
    an example using `glob`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: Finally, this strategy will work with the other `pd.read_*(...)` functions described
    in the [io docs](io.html#io).
  prefs: []
  type: TYPE_NORMAL
- en: Parsing date components in multi-columns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Parsing date components in multi-columns is faster with a format
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: Skip row between header and data
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: 'Option 1: pass rows explicitly to skip rows'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: 'Option 2: read column names and then data'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: '[PRE60]  ### SQL'
  prefs: []
  type: TYPE_NORMAL
- en: The [SQL](io.html#io-sql) docs
  prefs: []
  type: TYPE_NORMAL
- en: '[Reading from databases with SQL](https://stackoverflow.com/questions/10065051/python-pandas-and-databases-like-mysql)  ###
    Excel'
  prefs: []
  type: TYPE_NORMAL
- en: The [Excel](io.html#io-excel) docs
  prefs: []
  type: TYPE_NORMAL
- en: '[Reading from a filelike handle](https://stackoverflow.com/questions/15588713/sheets-of-excel-workbook-from-a-url-into-a-pandas-dataframe)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Modifying formatting in XlsxWriter output](https://pbpython.com/improve-pandas-excel-output.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Loading only visible sheets [GH 19842#issuecomment-892150745](https://github.com/pandas-dev/pandas/issues/19842#issuecomment-892150745)  ###
    HTML'
  prefs: []
  type: TYPE_NORMAL
- en: '[Reading HTML tables from a server that cannot handle the default request header](https://stackoverflow.com/a/18939272/564538)  ###
    HDFStore'
  prefs: []
  type: TYPE_NORMAL
- en: The [HDFStores](io.html#io-hdf5) docs
  prefs: []
  type: TYPE_NORMAL
- en: '[Simple queries with a Timestamp Index](https://stackoverflow.com/questions/13926089/selecting-columns-from-pandas-hdfstore-table)'
  prefs: []
  type: TYPE_NORMAL
- en: Managing heterogeneous data using a linked multiple table hierarchy [GH 3032](https://github.com/pandas-dev/pandas/issues/3032)
  prefs: []
  type: TYPE_NORMAL
- en: '[Merging on-disk tables with millions of rows](https://stackoverflow.com/questions/14614512/merging-two-tables-with-millions-of-rows-in-python/14617925#14617925)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Avoiding inconsistencies when writing to a store from multiple processes/threads](https://stackoverflow.com/a/29014295/2858145)'
  prefs: []
  type: TYPE_NORMAL
- en: De-duplicating a large store by chunks, essentially a recursive reduction operation.
    Shows a function for taking in data from csv file and creating a store by chunks,
    with date parsing as well. [See here](https://stackoverflow.com/questions/16110252/need-to-compare-very-large-files-around-1-5gb-in-python/16110391#16110391)
  prefs: []
  type: TYPE_NORMAL
- en: '[Creating a store chunk-by-chunk from a csv file](https://stackoverflow.com/questions/20428355/appending-column-to-frame-of-hdf-file-in-pandas/20428786#20428786)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Appending to a store, while creating a unique index](https://stackoverflow.com/questions/16997048/how-does-one-append-large-amounts-of-data-to-a-pandas-hdfstore-and-get-a-natural/16999397#16999397)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Large Data work flows](https://stackoverflow.com/q/14262433)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Reading in a sequence of files, then providing a global unique index to a
    store while appending](https://stackoverflow.com/questions/16997048/how-does-one-append-large-amounts-of-data-to-a-pandas-hdfstore-and-get-a-natural)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Groupby on a HDFStore with low group density](https://stackoverflow.com/questions/15798209/pandas-group-by-query-on-large-data-in-hdfstore)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Groupby on a HDFStore with high group density](https://stackoverflow.com/questions/25459982/trouble-with-grouby-on-millions-of-keys-on-a-chunked-file-in-python-pandas/25471765#25471765)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Hierarchical queries on a HDFStore](https://stackoverflow.com/questions/22777284/improve-query-performance-from-a-large-hdfstore-table-with-pandas/22820780#22820780)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Counting with a HDFStore](https://stackoverflow.com/questions/20497897/converting-dict-of-dicts-into-pandas-dataframe-memory-issues)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Troubleshoot HDFStore exceptions](https://stackoverflow.com/questions/15488809/how-to-trouble-shoot-hdfstore-exception-cannot-find-the-correct-atom-type)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Setting min_itemsize with strings](https://stackoverflow.com/questions/15988871/hdfstore-appendstring-dataframe-fails-when-string-column-contents-are-longer)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Using ptrepack to create a completely-sorted-index on a store](https://stackoverflow.com/questions/17893370/ptrepack-sortby-needs-full-index)'
  prefs: []
  type: TYPE_NORMAL
- en: Storing Attributes to a group node
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: You can create or load a HDFStore in-memory by passing the `driver` parameter
    to PyTables. Changes are only written to disk when the HDFStore is closed.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]  ### Binary files'
  prefs: []
  type: TYPE_NORMAL
- en: pandas readily accepts NumPy record arrays, if you need to read in a binary
    file consisting of an array of C structs. For example, given this C program in
    a file called `main.c` compiled with `gcc main.c -std=gnu99` on a 64-bit machine,
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: 'the following Python code will read the binary file `''binary.dat''` into a
    pandas `DataFrame`, where each element of the struct corresponds to a column in
    the frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: The offsets of the structure elements may be different depending on the architecture
    of the machine on which the file was created. Using a raw binary file format like
    this for general data storage is not recommended, as it is not cross platform.
    We recommended either HDF5 or parquet, both of which are supported by pandas’
    IO facilities.
  prefs: []
  type: TYPE_NORMAL
- en: Computation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Numerical integration (sample-based) of a time series](https://nbviewer.ipython.org/gist/metakermit/5720498)'
  prefs: []
  type: TYPE_NORMAL
- en: Correlation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Often it’s useful to obtain the lower (or upper) triangular form of a correlation
    matrix calculated from [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr"). This can be achieved by passing a boolean mask to `where`
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: The `method` argument within `DataFrame.corr` can accept a callable in addition
    to the named correlation types. Here we compute the [distance correlation](https://en.wikipedia.org/wiki/Distance_correlation)
    matrix for a `DataFrame` object.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: Timedeltas
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The [Timedeltas](timedeltas.html#timedeltas-timedeltas) docs.
  prefs: []
  type: TYPE_NORMAL
- en: '[Using timedeltas](https://github.com/pandas-dev/pandas/pull/2899)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: '[Adding and subtracting deltas and dates](https://stackoverflow.com/questions/16385785/add-days-to-dates-in-dataframe)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: '[Another example](https://stackoverflow.com/questions/15683588/iterating-through-a-pandas-dataframe)'
  prefs: []
  type: TYPE_NORMAL
- en: Values can be set to NaT using np.nan, similar to datetime
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: Creating example data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To create a dataframe from every combination of some given values, like R’s
    `expand.grid()` function, we can create a dict where the keys are column names
    and the values are lists of the data values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: Constant series
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To assess if a series has a constant value, we can check if `series.nunique()
    <= 1`. However, a more performant approach, that does not count all unique values
    first, is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: 'This approach assumes that the series does not contain missing values. For
    the case that we would drop NA values, we can simply remove those values first:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: 'If missing values are considered distinct from any other value, then one could
    use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: (Note that this example does not disambiguate between `np.nan`, `pd.NA` and
    `None`)
  prefs: []
  type: TYPE_NORMAL
- en: Idioms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: These are some neat pandas `idioms`
  prefs: []
  type: TYPE_NORMAL
- en: '[if-then/if-then-else on one column, and assignment to another one or more
    columns:](https://stackoverflow.com/questions/17128302/python-pandas-idiom-for-if-then-else)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: if-then…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: An if-then on one column
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: 'An if-then with assignment to 2 columns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: Add another line with different logic, to do the -else
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: Or use pandas where after you’ve set up a mask
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: '[if-then-else using NumPy’s where()](https://stackoverflow.com/questions/19913659/pandas-conditional-creation-of-a-series-dataframe-column)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: Splitting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Split a frame with a boolean criterion](https://stackoverflow.com/questions/14957116/how-to-split-a-dataframe-according-to-a-boolean-criterion)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: Building criteria
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Select with multi-column criteria](https://stackoverflow.com/questions/15315452/selecting-with-complex-criteria-from-pandas-dataframe)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: …and (without assignment returns a Series)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: …or (without assignment returns a Series)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: …or (with assignment modifies the DataFrame.)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: '[Select rows with data closest to certain value using argsort](https://stackoverflow.com/questions/17758023/return-rows-in-a-dataframe-closest-to-a-user-defined-number)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: '[Dynamically reduce a list of criteria using a binary operators](https://stackoverflow.com/questions/21058254/pandas-boolean-operation-in-a-python-list/21058331)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: 'One could hard code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]'
  prefs: []
  type: TYPE_PRE
- en: …Or it can be done with a list of dynamically built criteria
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: if-then…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: An if-then on one column
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]'
  prefs: []
  type: TYPE_PRE
- en: 'An if-then with assignment to 2 columns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]'
  prefs: []
  type: TYPE_PRE
- en: Add another line with different logic, to do the -else
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]'
  prefs: []
  type: TYPE_PRE
- en: Or use pandas where after you’ve set up a mask
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: '[if-then-else using NumPy’s where()](https://stackoverflow.com/questions/19913659/pandas-conditional-creation-of-a-series-dataframe-column)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE93]'
  prefs: []
  type: TYPE_PRE
- en: Splitting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Split a frame with a boolean criterion](https://stackoverflow.com/questions/14957116/how-to-split-a-dataframe-according-to-a-boolean-criterion)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE94]'
  prefs: []
  type: TYPE_PRE
- en: Building criteria
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Select with multi-column criteria](https://stackoverflow.com/questions/15315452/selecting-with-complex-criteria-from-pandas-dataframe)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: …and (without assignment returns a Series)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE96]'
  prefs: []
  type: TYPE_PRE
- en: …or (without assignment returns a Series)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE97]'
  prefs: []
  type: TYPE_PRE
- en: …or (with assignment modifies the DataFrame.)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE98]'
  prefs: []
  type: TYPE_PRE
- en: '[Select rows with data closest to certain value using argsort](https://stackoverflow.com/questions/17758023/return-rows-in-a-dataframe-closest-to-a-user-defined-number)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE99]'
  prefs: []
  type: TYPE_PRE
- en: '[Dynamically reduce a list of criteria using a binary operators](https://stackoverflow.com/questions/21058254/pandas-boolean-operation-in-a-python-list/21058331)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE100]'
  prefs: []
  type: TYPE_PRE
- en: 'One could hard code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE101]'
  prefs: []
  type: TYPE_PRE
- en: …Or it can be done with a list of dynamically built criteria
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE102]'
  prefs: []
  type: TYPE_PRE
- en: '## Selection'
  prefs: []
  type: TYPE_NORMAL
- en: Dataframes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The [indexing](indexing.html#indexing) docs.
  prefs: []
  type: TYPE_NORMAL
- en: '[Using both row labels and value conditionals](https://stackoverflow.com/questions/14725068/pandas-using-row-labels-in-boolean-indexing)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE103]'
  prefs: []
  type: TYPE_PRE
- en: Use loc for label-oriented slicing and iloc positional slicing [GH 2904](https://github.com/pandas-dev/pandas/issues/2904)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE104]'
  prefs: []
  type: TYPE_PRE
- en: There are 2 explicit slicing methods, with a third general case
  prefs: []
  type: TYPE_NORMAL
- en: 'Positional-oriented (Python slicing style : exclusive of end)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Label-oriented (Non-Python slicing style : inclusive of end)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'General (Either slicing style : depends on if the slice contains labels or
    positions)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE105]'
  prefs: []
  type: TYPE_PRE
- en: Ambiguity arises when an index consists of integers with a non-zero start or
    non-unit increment.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE106]'
  prefs: []
  type: TYPE_PRE
- en: '[Using inverse operator (~) to take the complement of a mask](https://stackoverflow.com/q/14986510)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE107]'
  prefs: []
  type: TYPE_PRE
- en: New columns
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Efficiently and dynamically creating new columns using DataFrame.map (previously
    named applymap)](https://stackoverflow.com/questions/16575868/efficiently-creating-additional-columns-in-a-pandas-dataframe-using-map)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE108]'
  prefs: []
  type: TYPE_PRE
- en: '[Keep other columns when using min() with groupby](https://stackoverflow.com/q/23394476)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE109]'
  prefs: []
  type: TYPE_PRE
- en: 'Method 1 : idxmin() to get the index of the minimums'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE110]'
  prefs: []
  type: TYPE_PRE
- en: 'Method 2 : sort then take first of each'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE111]'
  prefs: []
  type: TYPE_PRE
- en: Notice the same results, with the exception of the index.
  prefs: []
  type: TYPE_NORMAL
- en: Dataframes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The [indexing](indexing.html#indexing) docs.
  prefs: []
  type: TYPE_NORMAL
- en: '[Using both row labels and value conditionals](https://stackoverflow.com/questions/14725068/pandas-using-row-labels-in-boolean-indexing)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE112]'
  prefs: []
  type: TYPE_PRE
- en: Use loc for label-oriented slicing and iloc positional slicing [GH 2904](https://github.com/pandas-dev/pandas/issues/2904)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE113]'
  prefs: []
  type: TYPE_PRE
- en: There are 2 explicit slicing methods, with a third general case
  prefs: []
  type: TYPE_NORMAL
- en: 'Positional-oriented (Python slicing style : exclusive of end)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Label-oriented (Non-Python slicing style : inclusive of end)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'General (Either slicing style : depends on if the slice contains labels or
    positions)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE114]'
  prefs: []
  type: TYPE_PRE
- en: Ambiguity arises when an index consists of integers with a non-zero start or
    non-unit increment.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE115]'
  prefs: []
  type: TYPE_PRE
- en: '[Using inverse operator (~) to take the complement of a mask](https://stackoverflow.com/q/14986510)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE116]'
  prefs: []
  type: TYPE_PRE
- en: New columns
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Efficiently and dynamically creating new columns using DataFrame.map (previously
    named applymap)](https://stackoverflow.com/questions/16575868/efficiently-creating-additional-columns-in-a-pandas-dataframe-using-map)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE117]'
  prefs: []
  type: TYPE_PRE
- en: '[Keep other columns when using min() with groupby](https://stackoverflow.com/q/23394476)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE118]'
  prefs: []
  type: TYPE_PRE
- en: 'Method 1 : idxmin() to get the index of the minimums'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE119]'
  prefs: []
  type: TYPE_PRE
- en: 'Method 2 : sort then take first of each'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE120]'
  prefs: []
  type: TYPE_PRE
- en: Notice the same results, with the exception of the index.
  prefs: []
  type: TYPE_NORMAL
- en: '## Multiindexing'
  prefs: []
  type: TYPE_NORMAL
- en: The [multindexing](advanced.html#advanced-hierarchical) docs.
  prefs: []
  type: TYPE_NORMAL
- en: '[Creating a MultiIndex from a labeled frame](https://stackoverflow.com/questions/14916358/reshaping-dataframes-in-pandas-based-on-column-labels)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE121]'
  prefs: []
  type: TYPE_PRE
- en: Arithmetic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Performing arithmetic with a MultiIndex that needs broadcasting](https://stackoverflow.com/questions/19501510/divide-entire-pandas-multiindex-dataframe-by-dataframe-variable/19502176#19502176)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE122]'
  prefs: []
  type: TYPE_PRE
- en: Slicing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Slicing a MultiIndex with xs](https://stackoverflow.com/questions/12590131/how-to-slice-multindex-columns-in-pandas-dataframes)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE123]'
  prefs: []
  type: TYPE_PRE
- en: 'To take the cross section of the 1st level and 1st axis the index:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE124]'
  prefs: []
  type: TYPE_PRE
- en: …and now the 2nd level of the 1st axis.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE125]'
  prefs: []
  type: TYPE_PRE
- en: '[Slicing a MultiIndex with xs, method #2](https://stackoverflow.com/questions/14964493/multiindex-based-indexing-in-pandas)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE126]'
  prefs: []
  type: TYPE_PRE
- en: '[Setting portions of a MultiIndex with xs](https://stackoverflow.com/questions/19319432/pandas-selecting-a-lower-level-in-a-dataframe-to-do-a-ffill)'
  prefs: []
  type: TYPE_NORMAL
- en: Sorting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Sort by specific column or an ordered list of columns, with a MultiIndex](https://stackoverflow.com/q/14733871)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE127]'
  prefs: []
  type: TYPE_PRE
- en: Partial selection, the need for sortedness [GH 2995](https://github.com/pandas-dev/pandas/issues/2995)
  prefs: []
  type: TYPE_NORMAL
- en: Levels
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Prepending a level to a multiindex](https://stackoverflow.com/questions/14744068/prepend-a-level-to-a-pandas-multiindex)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Flatten Hierarchical columns](https://stackoverflow.com/q/14507794)'
  prefs: []
  type: TYPE_NORMAL
- en: Arithmetic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Performing arithmetic with a MultiIndex that needs broadcasting](https://stackoverflow.com/questions/19501510/divide-entire-pandas-multiindex-dataframe-by-dataframe-variable/19502176#19502176)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE128]'
  prefs: []
  type: TYPE_PRE
- en: Slicing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Slicing a MultiIndex with xs](https://stackoverflow.com/questions/12590131/how-to-slice-multindex-columns-in-pandas-dataframes)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE129]'
  prefs: []
  type: TYPE_PRE
- en: 'To take the cross section of the 1st level and 1st axis the index:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE130]'
  prefs: []
  type: TYPE_PRE
- en: …and now the 2nd level of the 1st axis.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE131]'
  prefs: []
  type: TYPE_PRE
- en: '[Slicing a MultiIndex with xs, method #2](https://stackoverflow.com/questions/14964493/multiindex-based-indexing-in-pandas)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE132]'
  prefs: []
  type: TYPE_PRE
- en: '[Setting portions of a MultiIndex with xs](https://stackoverflow.com/questions/19319432/pandas-selecting-a-lower-level-in-a-dataframe-to-do-a-ffill)'
  prefs: []
  type: TYPE_NORMAL
- en: Sorting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Sort by specific column or an ordered list of columns, with a MultiIndex](https://stackoverflow.com/q/14733871)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE133]'
  prefs: []
  type: TYPE_PRE
- en: Partial selection, the need for sortedness [GH 2995](https://github.com/pandas-dev/pandas/issues/2995)
  prefs: []
  type: TYPE_NORMAL
- en: Levels
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Prepending a level to a multiindex](https://stackoverflow.com/questions/14744068/prepend-a-level-to-a-pandas-multiindex)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Flatten Hierarchical columns](https://stackoverflow.com/q/14507794)'
  prefs: []
  type: TYPE_NORMAL
- en: '## Missing data'
  prefs: []
  type: TYPE_NORMAL
- en: The [missing data](missing_data.html#missing-data) docs.
  prefs: []
  type: TYPE_NORMAL
- en: Fill forward a reversed timeseries
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE134]'
  prefs: []
  type: TYPE_PRE
- en: '[cumsum reset at NaN values](https://stackoverflow.com/questions/18196811/cumsum-reset-at-nan)'
  prefs: []
  type: TYPE_NORMAL
- en: Replace
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Using replace with backrefs](https://stackoverflow.com/questions/16818871/extracting-value-and-creating-new-column-out-of-it)'
  prefs: []
  type: TYPE_NORMAL
- en: Replace
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Using replace with backrefs](https://stackoverflow.com/questions/16818871/extracting-value-and-creating-new-column-out-of-it)'
  prefs: []
  type: TYPE_NORMAL
- en: '## Grouping'
  prefs: []
  type: TYPE_NORMAL
- en: The [grouping](groupby.html#groupby) docs.
  prefs: []
  type: TYPE_NORMAL
- en: '[Basic grouping with apply](https://stackoverflow.com/questions/15322632/python-pandas-df-groupy-agg-column-reference-in-agg)'
  prefs: []
  type: TYPE_NORMAL
- en: Unlike agg, apply’s callable is passed a sub-DataFrame which gives you access
    to all the columns
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE135]'
  prefs: []
  type: TYPE_PRE
- en: '[Using get_group](https://stackoverflow.com/questions/14734533/how-to-access-pandas-groupby-dataframe-by-key)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE136]'
  prefs: []
  type: TYPE_PRE
- en: '[Apply to different items in a group](https://stackoverflow.com/questions/15262134/apply-different-functions-to-different-items-in-group-object-python-pandas)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE137]'
  prefs: []
  type: TYPE_PRE
- en: '[Expanding apply](https://stackoverflow.com/questions/14542145/reductions-down-a-column-in-pandas)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE138]'
  prefs: []
  type: TYPE_PRE
- en: '[Replacing some values with mean of the rest of a group](https://stackoverflow.com/questions/14760757/replacing-values-with-groupby-means)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE139]'
  prefs: []
  type: TYPE_PRE
- en: '[Sort groups by aggregated data](https://stackoverflow.com/questions/14941366/pandas-sort-by-group-aggregate-and-column)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE140]'
  prefs: []
  type: TYPE_PRE
- en: '[Create multiple aggregated columns](https://stackoverflow.com/questions/14897100/create-multiple-columns-in-pandas-aggregation-function)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE141]'
  prefs: []
  type: TYPE_PRE
- en: '[Create a value counts column and reassign back to the DataFrame](https://stackoverflow.com/q/17709270)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE142]'
  prefs: []
  type: TYPE_PRE
- en: '[Shift groups of the values in a column based on the index](https://stackoverflow.com/q/23198053/190597)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE143]'
  prefs: []
  type: TYPE_PRE
- en: '[Select row with maximum value from each group](https://stackoverflow.com/q/26701849/190597)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE144]'
  prefs: []
  type: TYPE_PRE
- en: '[Grouping like Python’s itertools.groupby](https://stackoverflow.com/q/29142487/846892)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE145]'
  prefs: []
  type: TYPE_PRE
- en: Expanding data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Alignment and to-date](https://stackoverflow.com/questions/15489011/python-time-series-alignment-and-to-date-functions)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Rolling Computation window based on values instead of counts](https://stackoverflow.com/questions/14300768/pandas-rolling-computation-with-window-based-on-values-instead-of-counts)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Rolling Mean by Time Interval](https://stackoverflow.com/questions/15771472/pandas-rolling-mean-by-time-interval)'
  prefs: []
  type: TYPE_NORMAL
- en: Splitting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Splitting a frame](https://stackoverflow.com/questions/13353233/best-way-to-split-a-dataframe-given-an-edge/15449992#15449992)'
  prefs: []
  type: TYPE_NORMAL
- en: Create a list of dataframes, split using a delineation based on logic included
    in rows.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE146]'
  prefs: []
  type: TYPE_PRE
- en: '### Pivot'
  prefs: []
  type: TYPE_NORMAL
- en: The [Pivot](reshaping.html#reshaping-pivot) docs.
  prefs: []
  type: TYPE_NORMAL
- en: '[Partial sums and subtotals](https://stackoverflow.com/a/15574875)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE147]'
  prefs: []
  type: TYPE_PRE
- en: '[Frequency table like plyr in R](https://stackoverflow.com/questions/15589354/frequency-tables-in-pandas-like-plyr-in-r)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE148]'
  prefs: []
  type: TYPE_PRE
- en: '[Plot pandas DataFrame with year over year data](https://stackoverflow.com/questions/30379789/plot-pandas-data-frame-with-year-over-year-data)'
  prefs: []
  type: TYPE_NORMAL
- en: 'To create year and month cross tabulation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE149]'
  prefs: []
  type: TYPE_PRE
- en: Apply
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Rolling apply to organize - Turning embedded lists into a MultiIndex frame](https://stackoverflow.com/questions/17349981/converting-pandas-dataframe-with-categorical-values-into-binary-values)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE150]'
  prefs: []
  type: TYPE_PRE
- en: '[Rolling apply with a DataFrame returning a Series](https://stackoverflow.com/questions/19121854/using-rolling-apply-on-a-dataframe-object)'
  prefs: []
  type: TYPE_NORMAL
- en: Rolling Apply to multiple columns where function calculates a Series before
    a Scalar from the Series is returned
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE151]'
  prefs: []
  type: TYPE_PRE
- en: '[Rolling apply with a DataFrame returning a Scalar](https://stackoverflow.com/questions/21040766/python-pandas-rolling-apply-two-column-input-into-function/21045831#21045831)'
  prefs: []
  type: TYPE_NORMAL
- en: Rolling Apply to multiple columns where function returns a Scalar (Volume Weighted
    Average Price)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE152]'
  prefs: []
  type: TYPE_PRE
- en: Expanding data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Alignment and to-date](https://stackoverflow.com/questions/15489011/python-time-series-alignment-and-to-date-functions)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Rolling Computation window based on values instead of counts](https://stackoverflow.com/questions/14300768/pandas-rolling-computation-with-window-based-on-values-instead-of-counts)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Rolling Mean by Time Interval](https://stackoverflow.com/questions/15771472/pandas-rolling-mean-by-time-interval)'
  prefs: []
  type: TYPE_NORMAL
- en: Splitting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Splitting a frame](https://stackoverflow.com/questions/13353233/best-way-to-split-a-dataframe-given-an-edge/15449992#15449992)'
  prefs: []
  type: TYPE_NORMAL
- en: Create a list of dataframes, split using a delineation based on logic included
    in rows.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE153]'
  prefs: []
  type: TYPE_PRE
- en: '### Pivot'
  prefs: []
  type: TYPE_NORMAL
- en: The [Pivot](reshaping.html#reshaping-pivot) docs.
  prefs: []
  type: TYPE_NORMAL
- en: '[Partial sums and subtotals](https://stackoverflow.com/a/15574875)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE154]'
  prefs: []
  type: TYPE_PRE
- en: '[Frequency table like plyr in R](https://stackoverflow.com/questions/15589354/frequency-tables-in-pandas-like-plyr-in-r)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE155]'
  prefs: []
  type: TYPE_PRE
- en: '[Plot pandas DataFrame with year over year data](https://stackoverflow.com/questions/30379789/plot-pandas-data-frame-with-year-over-year-data)'
  prefs: []
  type: TYPE_NORMAL
- en: 'To create year and month cross tabulation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE156]'
  prefs: []
  type: TYPE_PRE
- en: Apply
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Rolling apply to organize - Turning embedded lists into a MultiIndex frame](https://stackoverflow.com/questions/17349981/converting-pandas-dataframe-with-categorical-values-into-binary-values)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE157]'
  prefs: []
  type: TYPE_PRE
- en: '[Rolling apply with a DataFrame returning a Series](https://stackoverflow.com/questions/19121854/using-rolling-apply-on-a-dataframe-object)'
  prefs: []
  type: TYPE_NORMAL
- en: Rolling Apply to multiple columns where function calculates a Series before
    a Scalar from the Series is returned
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE158]'
  prefs: []
  type: TYPE_PRE
- en: '[Rolling apply with a DataFrame returning a Scalar](https://stackoverflow.com/questions/21040766/python-pandas-rolling-apply-two-column-input-into-function/21045831#21045831)'
  prefs: []
  type: TYPE_NORMAL
- en: Rolling Apply to multiple columns where function returns a Scalar (Volume Weighted
    Average Price)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE159]'
  prefs: []
  type: TYPE_PRE
- en: Timeseries
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Between times](https://stackoverflow.com/questions/14539992/pandas-drop-rows-outside-of-time-range)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Using indexer between time](https://stackoverflow.com/questions/17559885/pandas-dataframe-mask-based-on-index)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Constructing a datetime range that excludes weekends and includes only certain
    times](https://stackoverflow.com/a/24014440)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Vectorized Lookup](https://stackoverflow.com/questions/13893227/vectorized-look-up-of-values-in-pandas-dataframe)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Aggregation and plotting time series](https://nipunbatra.github.io/blog/visualisation/2013/05/01/aggregation-timeseries.html)'
  prefs: []
  type: TYPE_NORMAL
- en: Turn a matrix with hours in columns and days in rows into a continuous row sequence
    in the form of a time series. [How to rearrange a Python pandas DataFrame?](https://stackoverflow.com/questions/15432659/how-to-rearrange-a-python-pandas-dataframe)
  prefs: []
  type: TYPE_NORMAL
- en: '[Dealing with duplicates when reindexing a timeseries to a specified frequency](https://stackoverflow.com/questions/22244383/pandas-df-refill-adding-two-columns-of-different-shape)'
  prefs: []
  type: TYPE_NORMAL
- en: Calculate the first day of the month for each entry in a DatetimeIndex
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE160]'
  prefs: []
  type: TYPE_PRE
- en: '### Resampling'
  prefs: []
  type: TYPE_NORMAL
- en: The [Resample](timeseries.html#timeseries-resampling) docs.
  prefs: []
  type: TYPE_NORMAL
- en: '[Using Grouper instead of TimeGrouper for time grouping of values](https://stackoverflow.com/questions/15297053/how-can-i-divide-single-values-of-a-dataframe-by-monthly-averages)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Time grouping with some missing values](https://stackoverflow.com/questions/33637312/pandas-grouper-by-frequency-with-completeness-requirement)'
  prefs: []
  type: TYPE_NORMAL
- en: Valid frequency arguments to Grouper [Timeseries](timeseries.html#timeseries-offset-aliases)
  prefs: []
  type: TYPE_NORMAL
- en: '[Grouping using a MultiIndex](https://stackoverflow.com/questions/41483763/pandas-timegrouper-on-multiindex)'
  prefs: []
  type: TYPE_NORMAL
- en: Using TimeGrouper and another grouping to create subgroups, then apply a custom
    function [GH 3791](https://github.com/pandas-dev/pandas/issues/3791)
  prefs: []
  type: TYPE_NORMAL
- en: '[Resampling with custom periods](https://stackoverflow.com/questions/15408156/resampling-with-custom-periods)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Resample intraday frame without adding new days](https://stackoverflow.com/questions/14898574/resample-intrday-pandas-dataframe-without-add-new-days)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Resample minute data](https://stackoverflow.com/questions/14861023/resampling-minute-data)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Resample with groupby](https://stackoverflow.com/q/18677271/564538)  ### Resampling'
  prefs: []
  type: TYPE_NORMAL
- en: The [Resample](timeseries.html#timeseries-resampling) docs.
  prefs: []
  type: TYPE_NORMAL
- en: '[Using Grouper instead of TimeGrouper for time grouping of values](https://stackoverflow.com/questions/15297053/how-can-i-divide-single-values-of-a-dataframe-by-monthly-averages)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Time grouping with some missing values](https://stackoverflow.com/questions/33637312/pandas-grouper-by-frequency-with-completeness-requirement)'
  prefs: []
  type: TYPE_NORMAL
- en: Valid frequency arguments to Grouper [Timeseries](timeseries.html#timeseries-offset-aliases)
  prefs: []
  type: TYPE_NORMAL
- en: '[Grouping using a MultiIndex](https://stackoverflow.com/questions/41483763/pandas-timegrouper-on-multiindex)'
  prefs: []
  type: TYPE_NORMAL
- en: Using TimeGrouper and another grouping to create subgroups, then apply a custom
    function [GH 3791](https://github.com/pandas-dev/pandas/issues/3791)
  prefs: []
  type: TYPE_NORMAL
- en: '[Resampling with custom periods](https://stackoverflow.com/questions/15408156/resampling-with-custom-periods)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Resample intraday frame without adding new days](https://stackoverflow.com/questions/14898574/resample-intrday-pandas-dataframe-without-add-new-days)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Resample minute data](https://stackoverflow.com/questions/14861023/resampling-minute-data)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Resample with groupby](https://stackoverflow.com/q/18677271/564538)'
  prefs: []
  type: TYPE_NORMAL
- en: '## Merge'
  prefs: []
  type: TYPE_NORMAL
- en: The [Join](merging.html#merging-join) docs.
  prefs: []
  type: TYPE_NORMAL
- en: '[Concatenate two dataframes with overlapping index (emulate R rbind)](https://stackoverflow.com/questions/14988480/pandas-version-of-rbind)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE161]'
  prefs: []
  type: TYPE_PRE
- en: Depending on df construction, `ignore_index` may be needed
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE162]'
  prefs: []
  type: TYPE_PRE
- en: Self Join of a DataFrame [GH 2996](https://github.com/pandas-dev/pandas/issues/2996)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE163]'
  prefs: []
  type: TYPE_PRE
- en: '[How to set the index and join](https://stackoverflow.com/questions/14341805/pandas-merge-pd-merge-how-to-set-the-index-and-join)'
  prefs: []
  type: TYPE_NORMAL
- en: '[KDB like asof join](https://stackoverflow.com/questions/12322289/kdb-like-asof-join-for-timeseries-data-in-pandas/12336039#12336039)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Join with a criteria based on the values](https://stackoverflow.com/questions/15581829/how-to-perform-an-inner-or-outer-join-of-dataframes-with-pandas-on-non-simplisti)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Using searchsorted to merge based on values inside a range](https://stackoverflow.com/questions/25125626/pandas-merge-with-logic/2512764)'
  prefs: []
  type: TYPE_NORMAL
- en: '## Plotting'
  prefs: []
  type: TYPE_NORMAL
- en: The [Plotting](visualization.html#visualization) docs.
  prefs: []
  type: TYPE_NORMAL
- en: '[Make Matplotlib look like R](https://stackoverflow.com/questions/14349055/making-matplotlib-graphs-look-like-r-by-default)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Setting x-axis major and minor labels](https://stackoverflow.com/questions/12945971/pandas-timeseries-plot-setting-x-axis-major-and-minor-ticks-and-labels)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Plotting multiple charts in an IPython Jupyter notebook](https://stackoverflow.com/questions/16392921/make-more-than-one-chart-in-same-ipython-notebook-cell)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Creating a multi-line plot](https://stackoverflow.com/questions/16568964/make-a-multiline-plot-from-csv-file-in-matplotlib)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Plotting a heatmap](https://stackoverflow.com/questions/17050202/plot-timeseries-of-histograms-in-python)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Annotate a time-series plot](https://stackoverflow.com/questions/11067368/annotate-time-series-plot-in-matplotlib)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Annotate a time-series plot #2](https://stackoverflow.com/questions/17891493/annotating-points-from-a-pandas-dataframe-in-matplotlib-plot)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Generate Embedded plots in excel files using Pandas, Vincent and xlsxwriter](https://pandas-xlsxwriter-charts.readthedocs.io/)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Boxplot for each quartile of a stratifying variable](https://stackoverflow.com/questions/23232989/boxplot-stratified-by-column-in-python-pandas)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE164]'
  prefs: []
  type: TYPE_PRE
- en: '![../_images/quartile_boxplot.png](../Images/49df85cb7d3c1e3681f55fa48b5fefa6.png)'
  prefs: []
  type: TYPE_IMG
- en: Data in/out
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Performance comparison of SQL vs HDF5](https://stackoverflow.com/q/16628329)'
  prefs: []
  type: TYPE_NORMAL
- en: '### CSV'
  prefs: []
  type: TYPE_NORMAL
- en: The [CSV](io.html#io-read-csv-table) docs
  prefs: []
  type: TYPE_NORMAL
- en: '[read_csv in action](https://wesmckinney.com/blog/update-on-upcoming-pandas-v0-10-new-file-parser-other-performance-wins/)'
  prefs: []
  type: TYPE_NORMAL
- en: '[appending to a csv](https://stackoverflow.com/questions/17134942/pandas-dataframe-output-end-of-csv)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Reading a csv chunk-by-chunk](https://stackoverflow.com/questions/11622652/large-persistent-dataframe-in-pandas/12193309#12193309)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Reading only certain rows of a csv chunk-by-chunk](https://stackoverflow.com/questions/19674212/pandas-data-frame-select-rows-and-clear-memory)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Reading the first few lines of a frame](https://stackoverflow.com/questions/15008970/way-to-read-first-few-lines-for-pandas-dataframe)'
  prefs: []
  type: TYPE_NORMAL
- en: Reading a file that is compressed but not by `gzip/bz2` (the native compressed
    formats which `read_csv` understands). This example shows a `WinZipped` file,
    but is a general application of opening the file within a context manager and
    using that handle to read. [See here](https://stackoverflow.com/questions/17789907/pandas-convert-winzipped-csv-file-to-data-frame)
  prefs: []
  type: TYPE_NORMAL
- en: '[Inferring dtypes from a file](https://stackoverflow.com/questions/15555005/get-inferred-dataframe-types-iteratively-using-chunksize)'
  prefs: []
  type: TYPE_NORMAL
- en: Dealing with bad lines [GH 2886](https://github.com/pandas-dev/pandas/issues/2886)
  prefs: []
  type: TYPE_NORMAL
- en: '[Write a multi-row index CSV without writing duplicates](https://stackoverflow.com/questions/17349574/pandas-write-multiindex-rows-with-to-csv)'
  prefs: []
  type: TYPE_NORMAL
- en: '#### Reading multiple files to create a single DataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: 'The best way to combine multiple files into a single DataFrame is to read the
    individual frames one by one, put all of the individual frames into a list, and
    then combine the frames in the list using `pd.concat()`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE165]'
  prefs: []
  type: TYPE_PRE
- en: 'You can use the same approach to read all files matching a pattern. Here is
    an example using `glob`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE166]'
  prefs: []
  type: TYPE_PRE
- en: Finally, this strategy will work with the other `pd.read_*(...)` functions described
    in the [io docs](io.html#io).
  prefs: []
  type: TYPE_NORMAL
- en: Parsing date components in multi-columns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Parsing date components in multi-columns is faster with a format
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE167]'
  prefs: []
  type: TYPE_PRE
- en: Skip row between header and data
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE168]'
  prefs: []
  type: TYPE_PRE
- en: 'Option 1: pass rows explicitly to skip rows'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: '[PRE169]'
  prefs: []
  type: TYPE_PRE
- en: 'Option 2: read column names and then data'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: '[PRE170]  ### SQL'
  prefs: []
  type: TYPE_NORMAL
- en: The [SQL](io.html#io-sql) docs
  prefs: []
  type: TYPE_NORMAL
- en: '[Reading from databases with SQL](https://stackoverflow.com/questions/10065051/python-pandas-and-databases-like-mysql)  ###
    Excel'
  prefs: []
  type: TYPE_NORMAL
- en: The [Excel](io.html#io-excel) docs
  prefs: []
  type: TYPE_NORMAL
- en: '[Reading from a filelike handle](https://stackoverflow.com/questions/15588713/sheets-of-excel-workbook-from-a-url-into-a-pandas-dataframe)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Modifying formatting in XlsxWriter output](https://pbpython.com/improve-pandas-excel-output.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Loading only visible sheets [GH 19842#issuecomment-892150745](https://github.com/pandas-dev/pandas/issues/19842#issuecomment-892150745)  ###
    HTML'
  prefs: []
  type: TYPE_NORMAL
- en: '[Reading HTML tables from a server that cannot handle the default request header](https://stackoverflow.com/a/18939272/564538)  ###
    HDFStore'
  prefs: []
  type: TYPE_NORMAL
- en: The [HDFStores](io.html#io-hdf5) docs
  prefs: []
  type: TYPE_NORMAL
- en: '[Simple queries with a Timestamp Index](https://stackoverflow.com/questions/13926089/selecting-columns-from-pandas-hdfstore-table)'
  prefs: []
  type: TYPE_NORMAL
- en: Managing heterogeneous data using a linked multiple table hierarchy [GH 3032](https://github.com/pandas-dev/pandas/issues/3032)
  prefs: []
  type: TYPE_NORMAL
- en: '[Merging on-disk tables with millions of rows](https://stackoverflow.com/questions/14614512/merging-two-tables-with-millions-of-rows-in-python/14617925#14617925)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Avoiding inconsistencies when writing to a store from multiple processes/threads](https://stackoverflow.com/a/29014295/2858145)'
  prefs: []
  type: TYPE_NORMAL
- en: De-duplicating a large store by chunks, essentially a recursive reduction operation.
    Shows a function for taking in data from csv file and creating a store by chunks,
    with date parsing as well. [See here](https://stackoverflow.com/questions/16110252/need-to-compare-very-large-files-around-1-5gb-in-python/16110391#16110391)
  prefs: []
  type: TYPE_NORMAL
- en: '[Creating a store chunk-by-chunk from a csv file](https://stackoverflow.com/questions/20428355/appending-column-to-frame-of-hdf-file-in-pandas/20428786#20428786)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Appending to a store, while creating a unique index](https://stackoverflow.com/questions/16997048/how-does-one-append-large-amounts-of-data-to-a-pandas-hdfstore-and-get-a-natural/16999397#16999397)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Large Data work flows](https://stackoverflow.com/q/14262433)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Reading in a sequence of files, then providing a global unique index to a
    store while appending](https://stackoverflow.com/questions/16997048/how-does-one-append-large-amounts-of-data-to-a-pandas-hdfstore-and-get-a-natural)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Groupby on a HDFStore with low group density](https://stackoverflow.com/questions/15798209/pandas-group-by-query-on-large-data-in-hdfstore)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Groupby on a HDFStore with high group density](https://stackoverflow.com/questions/25459982/trouble-with-grouby-on-millions-of-keys-on-a-chunked-file-in-python-pandas/25471765#25471765)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Hierarchical queries on a HDFStore](https://stackoverflow.com/questions/22777284/improve-query-performance-from-a-large-hdfstore-table-with-pandas/22820780#22820780)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Counting with a HDFStore](https://stackoverflow.com/questions/20497897/converting-dict-of-dicts-into-pandas-dataframe-memory-issues)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Troubleshoot HDFStore exceptions](https://stackoverflow.com/questions/15488809/how-to-trouble-shoot-hdfstore-exception-cannot-find-the-correct-atom-type)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Setting min_itemsize with strings](https://stackoverflow.com/questions/15988871/hdfstore-appendstring-dataframe-fails-when-string-column-contents-are-longer)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Using ptrepack to create a completely-sorted-index on a store](https://stackoverflow.com/questions/17893370/ptrepack-sortby-needs-full-index)'
  prefs: []
  type: TYPE_NORMAL
- en: Storing Attributes to a group node
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE171]'
  prefs: []
  type: TYPE_PRE
- en: You can create or load a HDFStore in-memory by passing the `driver` parameter
    to PyTables. Changes are only written to disk when the HDFStore is closed.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE172]  ### Binary files'
  prefs: []
  type: TYPE_NORMAL
- en: pandas readily accepts NumPy record arrays, if you need to read in a binary
    file consisting of an array of C structs. For example, given this C program in
    a file called `main.c` compiled with `gcc main.c -std=gnu99` on a 64-bit machine,
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE173]'
  prefs: []
  type: TYPE_PRE
- en: 'the following Python code will read the binary file `''binary.dat''` into a
    pandas `DataFrame`, where each element of the struct corresponds to a column in
    the frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE174]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: 'The offsets of the structure elements may be different depending on the architecture
    of the machine on which the file was created. Using a raw binary file format like
    this for general data storage is not recommended, as it is not cross platform.
    We recommended either HDF5 or parquet, both of which are supported by pandas’
    IO facilities.  ### CSV'
  prefs: []
  type: TYPE_NORMAL
- en: The [CSV](io.html#io-read-csv-table) docs
  prefs: []
  type: TYPE_NORMAL
- en: '[read_csv in action](https://wesmckinney.com/blog/update-on-upcoming-pandas-v0-10-new-file-parser-other-performance-wins/)'
  prefs: []
  type: TYPE_NORMAL
- en: '[appending to a csv](https://stackoverflow.com/questions/17134942/pandas-dataframe-output-end-of-csv)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Reading a csv chunk-by-chunk](https://stackoverflow.com/questions/11622652/large-persistent-dataframe-in-pandas/12193309#12193309)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Reading only certain rows of a csv chunk-by-chunk](https://stackoverflow.com/questions/19674212/pandas-data-frame-select-rows-and-clear-memory)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Reading the first few lines of a frame](https://stackoverflow.com/questions/15008970/way-to-read-first-few-lines-for-pandas-dataframe)'
  prefs: []
  type: TYPE_NORMAL
- en: Reading a file that is compressed but not by `gzip/bz2` (the native compressed
    formats which `read_csv` understands). This example shows a `WinZipped` file,
    but is a general application of opening the file within a context manager and
    using that handle to read. [See here](https://stackoverflow.com/questions/17789907/pandas-convert-winzipped-csv-file-to-data-frame)
  prefs: []
  type: TYPE_NORMAL
- en: '[Inferring dtypes from a file](https://stackoverflow.com/questions/15555005/get-inferred-dataframe-types-iteratively-using-chunksize)'
  prefs: []
  type: TYPE_NORMAL
- en: Dealing with bad lines [GH 2886](https://github.com/pandas-dev/pandas/issues/2886)
  prefs: []
  type: TYPE_NORMAL
- en: '[Write a multi-row index CSV without writing duplicates](https://stackoverflow.com/questions/17349574/pandas-write-multiindex-rows-with-to-csv)'
  prefs: []
  type: TYPE_NORMAL
- en: '#### Reading multiple files to create a single DataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: 'The best way to combine multiple files into a single DataFrame is to read the
    individual frames one by one, put all of the individual frames into a list, and
    then combine the frames in the list using `pd.concat()`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE175]'
  prefs: []
  type: TYPE_PRE
- en: 'You can use the same approach to read all files matching a pattern. Here is
    an example using `glob`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE176]'
  prefs: []
  type: TYPE_PRE
- en: Finally, this strategy will work with the other `pd.read_*(...)` functions described
    in the [io docs](io.html#io).
  prefs: []
  type: TYPE_NORMAL
- en: Parsing date components in multi-columns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Parsing date components in multi-columns is faster with a format
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE177]'
  prefs: []
  type: TYPE_PRE
- en: Skip row between header and data
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE178]'
  prefs: []
  type: TYPE_PRE
- en: 'Option 1: pass rows explicitly to skip rows'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: '[PRE179]'
  prefs: []
  type: TYPE_PRE
- en: 'Option 2: read column names and then data'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: '[PRE180]'
  prefs: []
  type: TYPE_PRE
- en: '#### Reading multiple files to create a single DataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: 'The best way to combine multiple files into a single DataFrame is to read the
    individual frames one by one, put all of the individual frames into a list, and
    then combine the frames in the list using `pd.concat()`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE181]'
  prefs: []
  type: TYPE_PRE
- en: 'You can use the same approach to read all files matching a pattern. Here is
    an example using `glob`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE182]'
  prefs: []
  type: TYPE_PRE
- en: Finally, this strategy will work with the other `pd.read_*(...)` functions described
    in the [io docs](io.html#io).
  prefs: []
  type: TYPE_NORMAL
- en: Parsing date components in multi-columns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Parsing date components in multi-columns is faster with a format
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE183]'
  prefs: []
  type: TYPE_PRE
- en: Skip row between header and data
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE184]'
  prefs: []
  type: TYPE_PRE
- en: 'Option 1: pass rows explicitly to skip rows'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: '[PRE185]'
  prefs: []
  type: TYPE_PRE
- en: 'Option 2: read column names and then data'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: '[PRE186]'
  prefs: []
  type: TYPE_PRE
- en: 'Option 1: pass rows explicitly to skip rows'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: '[PRE187]'
  prefs: []
  type: TYPE_PRE
- en: 'Option 2: read column names and then data'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: '[PRE188]'
  prefs: []
  type: TYPE_PRE
- en: '### SQL'
  prefs: []
  type: TYPE_NORMAL
- en: The [SQL](io.html#io-sql) docs
  prefs: []
  type: TYPE_NORMAL
- en: '[Reading from databases with SQL](https://stackoverflow.com/questions/10065051/python-pandas-and-databases-like-mysql)'
  prefs: []
  type: TYPE_NORMAL
- en: '### Excel'
  prefs: []
  type: TYPE_NORMAL
- en: The [Excel](io.html#io-excel) docs
  prefs: []
  type: TYPE_NORMAL
- en: '[Reading from a filelike handle](https://stackoverflow.com/questions/15588713/sheets-of-excel-workbook-from-a-url-into-a-pandas-dataframe)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Modifying formatting in XlsxWriter output](https://pbpython.com/improve-pandas-excel-output.html)'
  prefs: []
  type: TYPE_NORMAL
- en: Loading only visible sheets [GH 19842#issuecomment-892150745](https://github.com/pandas-dev/pandas/issues/19842#issuecomment-892150745)
  prefs: []
  type: TYPE_NORMAL
- en: '### HTML'
  prefs: []
  type: TYPE_NORMAL
- en: '[Reading HTML tables from a server that cannot handle the default request header](https://stackoverflow.com/a/18939272/564538)'
  prefs: []
  type: TYPE_NORMAL
- en: '### HDFStore'
  prefs: []
  type: TYPE_NORMAL
- en: The [HDFStores](io.html#io-hdf5) docs
  prefs: []
  type: TYPE_NORMAL
- en: '[Simple queries with a Timestamp Index](https://stackoverflow.com/questions/13926089/selecting-columns-from-pandas-hdfstore-table)'
  prefs: []
  type: TYPE_NORMAL
- en: Managing heterogeneous data using a linked multiple table hierarchy [GH 3032](https://github.com/pandas-dev/pandas/issues/3032)
  prefs: []
  type: TYPE_NORMAL
- en: '[Merging on-disk tables with millions of rows](https://stackoverflow.com/questions/14614512/merging-two-tables-with-millions-of-rows-in-python/14617925#14617925)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Avoiding inconsistencies when writing to a store from multiple processes/threads](https://stackoverflow.com/a/29014295/2858145)'
  prefs: []
  type: TYPE_NORMAL
- en: De-duplicating a large store by chunks, essentially a recursive reduction operation.
    Shows a function for taking in data from csv file and creating a store by chunks,
    with date parsing as well. [See here](https://stackoverflow.com/questions/16110252/need-to-compare-very-large-files-around-1-5gb-in-python/16110391#16110391)
  prefs: []
  type: TYPE_NORMAL
- en: '[Creating a store chunk-by-chunk from a csv file](https://stackoverflow.com/questions/20428355/appending-column-to-frame-of-hdf-file-in-pandas/20428786#20428786)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Appending to a store, while creating a unique index](https://stackoverflow.com/questions/16997048/how-does-one-append-large-amounts-of-data-to-a-pandas-hdfstore-and-get-a-natural/16999397#16999397)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Large Data work flows](https://stackoverflow.com/q/14262433)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Reading in a sequence of files, then providing a global unique index to a
    store while appending](https://stackoverflow.com/questions/16997048/how-does-one-append-large-amounts-of-data-to-a-pandas-hdfstore-and-get-a-natural)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Groupby on a HDFStore with low group density](https://stackoverflow.com/questions/15798209/pandas-group-by-query-on-large-data-in-hdfstore)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Groupby on a HDFStore with high group density](https://stackoverflow.com/questions/25459982/trouble-with-grouby-on-millions-of-keys-on-a-chunked-file-in-python-pandas/25471765#25471765)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Hierarchical queries on a HDFStore](https://stackoverflow.com/questions/22777284/improve-query-performance-from-a-large-hdfstore-table-with-pandas/22820780#22820780)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Counting with a HDFStore](https://stackoverflow.com/questions/20497897/converting-dict-of-dicts-into-pandas-dataframe-memory-issues)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Troubleshoot HDFStore exceptions](https://stackoverflow.com/questions/15488809/how-to-trouble-shoot-hdfstore-exception-cannot-find-the-correct-atom-type)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Setting min_itemsize with strings](https://stackoverflow.com/questions/15988871/hdfstore-appendstring-dataframe-fails-when-string-column-contents-are-longer)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Using ptrepack to create a completely-sorted-index on a store](https://stackoverflow.com/questions/17893370/ptrepack-sortby-needs-full-index)'
  prefs: []
  type: TYPE_NORMAL
- en: Storing Attributes to a group node
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE189]'
  prefs: []
  type: TYPE_PRE
- en: You can create or load a HDFStore in-memory by passing the `driver` parameter
    to PyTables. Changes are only written to disk when the HDFStore is closed.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE190]'
  prefs: []
  type: TYPE_PRE
- en: '### Binary files'
  prefs: []
  type: TYPE_NORMAL
- en: pandas readily accepts NumPy record arrays, if you need to read in a binary
    file consisting of an array of C structs. For example, given this C program in
    a file called `main.c` compiled with `gcc main.c -std=gnu99` on a 64-bit machine,
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE191]'
  prefs: []
  type: TYPE_PRE
- en: 'the following Python code will read the binary file `''binary.dat''` into a
    pandas `DataFrame`, where each element of the struct corresponds to a column in
    the frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE192]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: The offsets of the structure elements may be different depending on the architecture
    of the machine on which the file was created. Using a raw binary file format like
    this for general data storage is not recommended, as it is not cross platform.
    We recommended either HDF5 or parquet, both of which are supported by pandas’
    IO facilities.
  prefs: []
  type: TYPE_NORMAL
- en: Computation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Numerical integration (sample-based) of a time series](https://nbviewer.ipython.org/gist/metakermit/5720498)'
  prefs: []
  type: TYPE_NORMAL
- en: Correlation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Often it’s useful to obtain the lower (or upper) triangular form of a correlation
    matrix calculated from [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr"). This can be achieved by passing a boolean mask to `where`
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE193]'
  prefs: []
  type: TYPE_PRE
- en: The `method` argument within `DataFrame.corr` can accept a callable in addition
    to the named correlation types. Here we compute the [distance correlation](https://en.wikipedia.org/wiki/Distance_correlation)
    matrix for a `DataFrame` object.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE194]'
  prefs: []
  type: TYPE_PRE
- en: Correlation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Often it’s useful to obtain the lower (or upper) triangular form of a correlation
    matrix calculated from [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr"). This can be achieved by passing a boolean mask to `where`
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE195]'
  prefs: []
  type: TYPE_PRE
- en: The `method` argument within `DataFrame.corr` can accept a callable in addition
    to the named correlation types. Here we compute the [distance correlation](https://en.wikipedia.org/wiki/Distance_correlation)
    matrix for a `DataFrame` object.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE196]'
  prefs: []
  type: TYPE_PRE
- en: Timedeltas
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The [Timedeltas](timedeltas.html#timedeltas-timedeltas) docs.
  prefs: []
  type: TYPE_NORMAL
- en: '[Using timedeltas](https://github.com/pandas-dev/pandas/pull/2899)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE197]'
  prefs: []
  type: TYPE_PRE
- en: '[Adding and subtracting deltas and dates](https://stackoverflow.com/questions/16385785/add-days-to-dates-in-dataframe)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE198]'
  prefs: []
  type: TYPE_PRE
- en: '[Another example](https://stackoverflow.com/questions/15683588/iterating-through-a-pandas-dataframe)'
  prefs: []
  type: TYPE_NORMAL
- en: Values can be set to NaT using np.nan, similar to datetime
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE199]'
  prefs: []
  type: TYPE_PRE
- en: Creating example data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To create a dataframe from every combination of some given values, like R’s
    `expand.grid()` function, we can create a dict where the keys are column names
    and the values are lists of the data values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE200]'
  prefs: []
  type: TYPE_PRE
- en: Constant series
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To assess if a series has a constant value, we can check if `series.nunique()
    <= 1`. However, a more performant approach, that does not count all unique values
    first, is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE201]'
  prefs: []
  type: TYPE_PRE
- en: 'This approach assumes that the series does not contain missing values. For
    the case that we would drop NA values, we can simply remove those values first:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE202]'
  prefs: []
  type: TYPE_PRE
- en: 'If missing values are considered distinct from any other value, then one could
    use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE203]'
  prefs: []
  type: TYPE_PRE
- en: (Note that this example does not disambiguate between `np.nan`, `pd.NA` and
    `None`)
  prefs: []
  type: TYPE_NORMAL
