- en: numpy.geterrcall
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.geterrcall.html](https://numpy.org/doc/1.26/reference/generated/numpy.geterrcall.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return the current callback function used on floating-point errors.
  prefs: []
  type: TYPE_NORMAL
- en: When the error handling for a floating-point error (one of “divide”, “over”,
    “under”, or “invalid”) is set to ‘call’ or ‘log’, the function that is called
    or the log instance that is written to is returned by [`geterrcall`](#numpy.geterrcall
    "numpy.geterrcall"). This function or log instance has been set with [`seterrcall`](numpy.seterrcall.html#numpy.seterrcall
    "numpy.seterrcall").
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**errobj**callable, log instance or None'
  prefs: []
  type: TYPE_NORMAL
- en: The current error handler. If no handler was set through [`seterrcall`](numpy.seterrcall.html#numpy.seterrcall
    "numpy.seterrcall"), `None` is returned.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`seterrcall`](numpy.seterrcall.html#numpy.seterrcall "numpy.seterrcall"),
    [`seterr`](numpy.seterr.html#numpy.seterr "numpy.seterr"), [`geterr`](numpy.geterr.html#numpy.geterr
    "numpy.geterr")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: For complete documentation of the types of floating-point exceptions and treatment
    options, see [`seterr`](numpy.seterr.html#numpy.seterr "numpy.seterr").
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
