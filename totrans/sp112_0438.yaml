- en: scipy.optimize.LinearConstraint
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.LinearConstraint.html#scipy.optimize.LinearConstraint](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.LinearConstraint.html#scipy.optimize.LinearConstraint)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Linear constraint on the variables.
  prefs: []
  type: TYPE_NORMAL
- en: 'The constraint has the general inequality form:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Here the vector of independent variables x is passed as ndarray of shape (n,)
    and the matrix A has shape (m, n).
  prefs: []
  type: TYPE_NORMAL
- en: It is possible to use equal bounds to represent an equality constraint or infinite
    bounds to represent a one-sided constraint.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**A**{array_like, sparse matrix}, shape (m, n)'
  prefs: []
  type: TYPE_NORMAL
- en: Matrix defining the constraint.
  prefs: []
  type: TYPE_NORMAL
- en: '**lb, ub**dense array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Lower and upper limits on the constraint. Each array must have the shape (m,)
    or be a scalar, in the latter case a bound will be the same for all components
    of the constraint. Use `np.inf` with an appropriate sign to specify a one-sided
    constraint. Set components of *lb* and *ub* equal to represent an equality constraint.
    Note that you can mix constraints of different types: interval, one-sided or equality,
    by setting different components of *lb* and *ub* as necessary. Defaults to `lb
    = -np.inf` and `ub = np.inf` (no limits).'
  prefs: []
  type: TYPE_NORMAL
- en: '**keep_feasible**dense array_like of bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to keep the constraint components feasible throughout iterations. A
    single value set this property for all components. Default is False. Has no effect
    for equality constraints.
  prefs: []
  type: TYPE_NORMAL
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`residual`](scipy.optimize.LinearConstraint.residual.html#scipy.optimize.LinearConstraint.residual
    "scipy.optimize.LinearConstraint.residual")(x) | Calculate the residual between
    the constraint function and the limits |'
  prefs: []
  type: TYPE_TB
