- en: pandas.DataFrame.to_xml
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_xml.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_xml.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Render a DataFrame to an XML document.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.3.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**path_or_buffer**str, path object, file-like object, or None, default None'
  prefs: []
  type: TYPE_NORMAL
- en: String, path object (implementing `os.PathLike[str]`), or file-like object implementing
    a `write()` function. If None, the result is returned as a string.
  prefs: []
  type: TYPE_NORMAL
- en: '**index**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to include index in XML document.
  prefs: []
  type: TYPE_NORMAL
- en: '**root_name**str, default ‘data’'
  prefs: []
  type: TYPE_NORMAL
- en: The name of root element in XML document.
  prefs: []
  type: TYPE_NORMAL
- en: '**row_name**str, default ‘row’'
  prefs: []
  type: TYPE_NORMAL
- en: The name of row element in XML document.
  prefs: []
  type: TYPE_NORMAL
- en: '**na_rep**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Missing data representation.
  prefs: []
  type: TYPE_NORMAL
- en: '**attr_cols**list-like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: List of columns to write as attributes in row element. Hierarchical columns
    will be flattened with underscore delimiting the different levels.
  prefs: []
  type: TYPE_NORMAL
- en: '**elem_cols**list-like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: List of columns to write as children in row element. By default, all columns
    output as children of row element. Hierarchical columns will be flattened with
    underscore delimiting the different levels.
  prefs: []
  type: TYPE_NORMAL
- en: '**namespaces**dict, optional'
  prefs: []
  type: TYPE_NORMAL
- en: All namespaces to be defined in root element. Keys of dict should be prefix
    names and values of dict corresponding URIs. Default namespaces should be given
    empty string key. For example,
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**prefix**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Namespace prefix to be used for every element and/or attribute in document.
    This should be one of the keys in `namespaces` dict.
  prefs: []
  type: TYPE_NORMAL
- en: '**encoding**str, default ‘utf-8’'
  prefs: []
  type: TYPE_NORMAL
- en: Encoding of the resulting document.
  prefs: []
  type: TYPE_NORMAL
- en: '**xml_declaration**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to include the XML declaration at start of document.
  prefs: []
  type: TYPE_NORMAL
- en: '**pretty_print**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Whether output should be pretty printed with indentation and line breaks.
  prefs: []
  type: TYPE_NORMAL
- en: '**parser**{‘lxml’,’etree’}, default ‘lxml’'
  prefs: []
  type: TYPE_NORMAL
- en: Parser module to use for building of tree. Only ‘lxml’ and ‘etree’ are supported.
    With ‘lxml’, the ability to use XSLT stylesheet is supported.
  prefs: []
  type: TYPE_NORMAL
- en: '**stylesheet**str, path object or file-like object, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A URL, file-like object, or a raw string containing an XSLT script used to transform
    the raw XML output. Script should use layout of elements and attributes from original
    output. This argument requires `lxml` to be installed. Only XSLT 1.0 scripts and
    not later versions is currently supported.
  prefs: []
  type: TYPE_NORMAL
- en: '**compression**str or dict, default ‘infer’'
  prefs: []
  type: TYPE_NORMAL
- en: 'For on-the-fly compression of the output data. If ‘infer’ and ‘path_or_buffer’
    is path-like, then detect compression from the following extensions: ‘.gz’, ‘.bz2’,
    ‘.zip’, ‘.xz’, ‘.zst’, ‘.tar’, ‘.tar.gz’, ‘.tar.xz’ or ‘.tar.bz2’ (otherwise no
    compression). Set to `None` for no compression. Can also be a dict with key `''method''`
    set to one of {`''zip''`, `''gzip''`, `''bz2''`, `''zstd''`, `''xz''`, `''tar''`}
    and other key-value pairs are forwarded to `zipfile.ZipFile`, `gzip.GzipFile`,
    `bz2.BZ2File`, `zstandard.ZstdCompressor`, `lzma.LZMAFile` or `tarfile.TarFile`,
    respectively. As an example, the following could be passed for faster compression
    and to create a reproducible gzip archive: `compression={''method'': ''gzip'',
    ''compresslevel'': 1, ''mtime'': 1}`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'New in version 1.5.0: Added support for .tar files.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 1.4.0: Zstandard support.'
  prefs: []
  type: TYPE_NORMAL
- en: '**storage_options**dict, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Extra options that make sense for a particular storage connection, e.g. host,
    port, username, password, etc. For HTTP(S) URLs the key-value pairs are forwarded
    to `urllib.request.Request` as header options. For other URLs (e.g. starting with
    “s3://”, and “gcs://”) the key-value pairs are forwarded to `fsspec.open`. Please
    see `fsspec` and `urllib` for more details, and for more examples on storage options
    refer [here](https://pandas.pydata.org/docs/user_guide/io.html?highlight=storage_options#reading-writing-remote-files).
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: None or str
  prefs: []
  type: TYPE_NORMAL
- en: If `io` is None, returns the resulting XML format as a string. Otherwise returns
    None.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`to_json`](pandas.DataFrame.to_json.html#pandas.DataFrame.to_json "pandas.DataFrame.to_json")'
  prefs: []
  type: TYPE_NORMAL
- en: Convert the pandas object to a JSON string.
  prefs: []
  type: TYPE_NORMAL
- en: '[`to_html`](pandas.DataFrame.to_html.html#pandas.DataFrame.to_html "pandas.DataFrame.to_html")'
  prefs: []
  type: TYPE_NORMAL
- en: Convert DataFrame to a html.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
