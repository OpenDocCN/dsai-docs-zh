- en: pandas.TimedeltaIndex
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.TimedeltaIndex.html](https://pandas.pydata.org/docs/reference/api/pandas.TimedeltaIndex.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Immutable Index of timedelta64 data.
  prefs: []
  type: TYPE_NORMAL
- en: Represented internally as int64, and scalars returned Timedelta objects.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**data**array-like (1-dimensional), optional'
  prefs: []
  type: TYPE_NORMAL
- en: Optional timedelta-like data to construct index with.
  prefs: []
  type: TYPE_NORMAL
- en: '**unit**{‘D’, ‘h’, ‘m’, ‘s’, ‘ms’, ‘us’, ‘ns’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The unit of `data`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 2.2.0: Use `pd.to_timedelta` instead.'
  prefs: []
  type: TYPE_NORMAL
- en: '**freq**str or pandas offset object, optional'
  prefs: []
  type: TYPE_NORMAL
- en: One of pandas date offset strings or corresponding objects. The string `'infer'`
    can be passed in order to set the frequency of the index as the inferred frequency
    upon creation.
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype**numpy.dtype or str, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Valid `numpy` dtypes are `timedelta64[ns]`, `timedelta64[us]`, `timedelta64[ms]`,
    and `timedelta64[s]`.
  prefs: []
  type: TYPE_NORMAL
- en: '**copy**bool'
  prefs: []
  type: TYPE_NORMAL
- en: Make a copy of input array.
  prefs: []
  type: TYPE_NORMAL
- en: '**name**object'
  prefs: []
  type: TYPE_NORMAL
- en: Name to be stored in the index.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`Index`](pandas.Index.html#pandas.Index "pandas.Index")'
  prefs: []
  type: TYPE_NORMAL
- en: The base pandas Index type.
  prefs: []
  type: TYPE_NORMAL
- en: '[`Timedelta`](pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")'
  prefs: []
  type: TYPE_NORMAL
- en: Represents a duration between two dates or times.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DatetimeIndex`](pandas.DatetimeIndex.html#pandas.DatetimeIndex "pandas.DatetimeIndex")'
  prefs: []
  type: TYPE_NORMAL
- en: Index of datetime64 data.
  prefs: []
  type: TYPE_NORMAL
- en: '[`PeriodIndex`](pandas.PeriodIndex.html#pandas.PeriodIndex "pandas.PeriodIndex")'
  prefs: []
  type: TYPE_NORMAL
- en: Index of Period data.
  prefs: []
  type: TYPE_NORMAL
- en: '[`timedelta_range`](pandas.timedelta_range.html#pandas.timedelta_range "pandas.timedelta_range")'
  prefs: []
  type: TYPE_NORMAL
- en: Create a fixed-frequency TimedeltaIndex.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: To learn more about the frequency strings, please see [this link](https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases).
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: We can also let pandas infer the frequency when possible.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs: []
  type: TYPE_NORMAL
- en: '| [`days`](pandas.TimedeltaIndex.days.html#pandas.TimedeltaIndex.days "pandas.TimedeltaIndex.days")
    | Number of days for each element. |'
  prefs: []
  type: TYPE_TB
- en: '| [`seconds`](pandas.TimedeltaIndex.seconds.html#pandas.TimedeltaIndex.seconds
    "pandas.TimedeltaIndex.seconds") | Number of seconds (>= 0 and less than 1 day)
    for each element. |'
  prefs: []
  type: TYPE_TB
- en: '| [`microseconds`](pandas.TimedeltaIndex.microseconds.html#pandas.TimedeltaIndex.microseconds
    "pandas.TimedeltaIndex.microseconds") | Number of microseconds (>= 0 and less
    than 1 second) for each element. |'
  prefs: []
  type: TYPE_TB
- en: '| [`nanoseconds`](pandas.TimedeltaIndex.nanoseconds.html#pandas.TimedeltaIndex.nanoseconds
    "pandas.TimedeltaIndex.nanoseconds") | Number of nanoseconds (>= 0 and less than
    1 microsecond) for each element. |'
  prefs: []
  type: TYPE_TB
- en: '| [`components`](pandas.TimedeltaIndex.components.html#pandas.TimedeltaIndex.components
    "pandas.TimedeltaIndex.components") | Return a DataFrame of the individual resolution
    components of the Timedeltas. |'
  prefs: []
  type: TYPE_TB
- en: '| [`inferred_freq`](pandas.TimedeltaIndex.inferred_freq.html#pandas.TimedeltaIndex.inferred_freq
    "pandas.TimedeltaIndex.inferred_freq") | Tries to return a string representing
    a frequency generated by infer_freq. |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`to_pytimedelta`](pandas.TimedeltaIndex.to_pytimedelta.html#pandas.TimedeltaIndex.to_pytimedelta
    "pandas.TimedeltaIndex.to_pytimedelta")(*args, **kwargs) | Return an ndarray of
    datetime.timedelta objects. |'
  prefs: []
  type: TYPE_TB
- en: '| [`to_series`](pandas.TimedeltaIndex.to_series.html#pandas.TimedeltaIndex.to_series
    "pandas.TimedeltaIndex.to_series")([index, name]) | Create a Series with both
    index and values equal to the index keys. |'
  prefs: []
  type: TYPE_TB
- en: '| [`round`](pandas.TimedeltaIndex.round.html#pandas.TimedeltaIndex.round "pandas.TimedeltaIndex.round")(*args, **kwargs)
    | Perform round operation on the data to the specified freq. |'
  prefs: []
  type: TYPE_TB
- en: '| [`floor`](pandas.TimedeltaIndex.floor.html#pandas.TimedeltaIndex.floor "pandas.TimedeltaIndex.floor")(*args, **kwargs)
    | Perform floor operation on the data to the specified freq. |'
  prefs: []
  type: TYPE_TB
- en: '| [`ceil`](pandas.TimedeltaIndex.ceil.html#pandas.TimedeltaIndex.ceil "pandas.TimedeltaIndex.ceil")(*args, **kwargs)
    | Perform ceil operation on the data to the specified freq. |'
  prefs: []
  type: TYPE_TB
- en: '| [`to_frame`](pandas.TimedeltaIndex.to_frame.html#pandas.TimedeltaIndex.to_frame
    "pandas.TimedeltaIndex.to_frame")([index, name]) | Create a DataFrame with a column
    containing the Index. |'
  prefs: []
  type: TYPE_TB
- en: '| [`mean`](pandas.TimedeltaIndex.mean.html#pandas.TimedeltaIndex.mean "pandas.TimedeltaIndex.mean")(*[, skipna, axis])
    | Return the mean value of the Array. |'
  prefs: []
  type: TYPE_TB
