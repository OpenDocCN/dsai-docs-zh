- en: Models Supported by Ultralytics
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ultralytics支持的模型
- en: 原文：[`docs.ultralytics.com/models/`](https://docs.ultralytics.com/models/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[`docs.ultralytics.com/models/`](https://docs.ultralytics.com/models/)
- en: Welcome to Ultralytics' model documentation! We offer support for a wide range
    of models, each tailored to specific tasks like object detection, instance segmentation,
    image classification, pose estimation, and multi-object tracking. If you're interested
    in contributing your model architecture to Ultralytics, check out our Contributing
    Guide.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎访问Ultralytics的模型文档！我们支持多种模型，每个模型都专为特定任务如对象检测、实例分割、图像分类、姿态估计和多对象跟踪而设计。如果您有兴趣将您的模型架构贡献给Ultralytics，请查阅我们的贡献指南。
- en: Featured Models
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 特色模型
- en: 'Here are some of the key models supported:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这里列出了一些主要支持的模型：
- en: '**YOLOv3**: The third iteration of the YOLO model family, originally by Joseph
    Redmon, known for its efficient real-time object detection capabilities.'
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**YOLOv3**: YOLO模型系列的第三个版本，最初由Joseph Redmon开发，以其高效的实时对象检测能力而闻名。'
- en: '**YOLOv4**: A darknet-native update to YOLOv3, released by Alexey Bochkovskiy
    in 2020.'
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**YOLOv4**: 由Alexey Bochkovskiy在2020年发布的darknet原生更新版YOLOv3。'
- en: '**YOLOv5**: An improved version of the YOLO architecture by Ultralytics, offering
    better performance and speed trade-offs compared to previous versions.'
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**YOLOv5**: Ultralytics改进的YOLO架构版本，提供比之前版本更好的性能和速度权衡。'
- en: '**YOLOv6**: Released by [Meituan](https://about.meituan.com/) in 2022, and
    in use in many of the company''s autonomous delivery robots.'
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**YOLOv6**: 2022年由[美团](https://about.meituan.com/)发布，并在该公司许多自主送餐机器人中使用。'
- en: '**YOLOv7**: Updated YOLO models released in 2022 by the authors of YOLOv4.'
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**YOLOv7**: 2022年发布的更新版YOLO模型，由YOLOv4的作者发布。'
- en: '**YOLOv8 NEW 🚀**: The latest version of the YOLO family, featuring enhanced
    capabilities such as instance segmentation, pose/keypoints estimation, and classification.'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**YOLOv8 NEW 🚀**: YOLO系列的最新版本，具有增强的能力，如实例分割、姿态/关键点估计和分类。'
- en: '**YOLOv9**: An experimental model trained on the Ultralytics YOLOv5 codebase
    implementing Programmable Gradient Information (PGI).'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**YOLOv9**: 在Ultralytics YOLOv5代码库上训练的实验性模型，实现可编程梯度信息（PGI）。'
- en: '**YOLOv10**: By Tsinghua University, featuring NMS-free training and efficiency-accuracy
    driven architecture, delivering state-of-the-art performance and latency.'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**YOLOv10**: 清华大学发布，采用无NMS训练和效率-精度驱动架构，提供最先进的性能和延迟。'
- en: '**Segment Anything Model (SAM)**: Meta''s original Segment Anything Model (SAM).'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Segment Anything Model (SAM)**: Meta原始的Segment Anything模型（SAM）。'
- en: '**Segment Anything Model 2 (SAM2)**: The next generation of Meta''s Segment
    Anything Model (SAM) for videos and images.'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Segment Anything Model 2 (SAM2)**: Meta的下一代视频和图像Segment Anything模型（SAM）。'
- en: '**Mobile Segment Anything Model (MobileSAM)**: MobileSAM for mobile applications,
    by Kyung Hee University.'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Mobile Segment Anything Model (MobileSAM)**: MobileSAM 是由庆熙大学推出的面向移动应用的模型。'
- en: '**Fast Segment Anything Model (FastSAM)**: FastSAM by Image & Video Analysis
    Group, Institute of Automation, Chinese Academy of Sciences.'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Fast Segment Anything Model (FastSAM)**: 中国科学院自动化研究所的Image & Video Analysis
    Group推出的FastSAM。'
- en: '**YOLO-NAS**: YOLO Neural Architecture Search (NAS) Models.'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**YOLO-NAS**: YOLO神经架构搜索（NAS）模型。'
- en: '**Realtime Detection Transformers (RT-DETR)**: Baidu''s PaddlePaddle Realtime
    Detection Transformer (RT-DETR) models.'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Realtime Detection Transformers (RT-DETR)**: 百度的PaddlePaddle实时检测变换器（RT-DETR）模型。'
- en: '**YOLO-World**: Real-time Open Vocabulary Object Detection models from Tencent
    AI Lab.'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**YOLO-World**: 腾讯AI实验室发布的实时开放词汇对象检测模型。'
- en: '[`www.youtube.com/embed/MWq1UxqTClU?si=nHAW-lYDzrz68jR0`](https://www.youtube.com/embed/MWq1UxqTClU?si=nHAW-lYDzrz68jR0)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[`www.youtube.com/embed/MWq1UxqTClU?si=nHAW-lYDzrz68jR0`](https://www.youtube.com/embed/MWq1UxqTClU?si=nHAW-lYDzrz68jR0)'
- en: '**Watch:** Run Ultralytics YOLO models in just a few lines of code.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**Watch:** 仅需几行代码即可运行Ultralytics的YOLO模型。'
- en: 'Getting Started: Usage Examples'
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 入门：使用示例
- en: This example provides simple YOLO training and inference examples. For full
    documentation on these and other modes see the Predict, Train, Val and Export
    docs pages.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 该示例提供了简单的YOLO训练和推断示例。有关这些和其他模式的完整文档，请参阅Predict、Train、Val和Export文档页面。
- en: Note the below example is for YOLOv8 Detect models for object detection. For
    additional supported tasks see the Segment, Classify and Pose docs.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 注意下面的例子是关于YOLOv8 Detect模型进行对象检测。有关其他支持的任务，请参阅Segment、Classify和Pose文档。
- en: Example
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: 'PyTorch pretrained `*.pt` models as well as configuration `*.yaml` files can
    be passed to the `YOLO()`, `SAM()`, `NAS()` and `RTDETR()` classes to create a
    model instance in Python:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 可以将预训练的PyTorch `*.pt`模型以及配置`*.yaml`文件传递给`YOLO()`、`SAM()`、`NAS()`和`RTDETR()`类，在Python中创建一个模型实例：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'CLI commands are available to directly run the models:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用CLI命令直接运行模型：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Contributing New Models
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 贡献新模型
- en: Interested in contributing your model to Ultralytics? Great! We're always open
    to expanding our model portfolio.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 感兴趣将您的模型贡献给Ultralytics吗？太棒了！我们始终欢迎扩展我们的模型组合。
- en: '**Fork the Repository**: Start by forking the [Ultralytics GitHub repository](https://github.com/ultralytics/ultralytics).'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**分叉存储库**：首先分叉[Ultralytics GitHub存储库](https://github.com/ultralytics/ultralytics)。'
- en: '**Clone Your Fork**: Clone your fork to your local machine and create a new
    branch to work on.'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**克隆您的分支**：将您的分支克隆到本地机器，并创建一个新分支进行操作。'
- en: '**Implement Your Model**: Add your model following the coding standards and
    guidelines provided in our Contributing Guide.'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**实现您的模型**：按照我们提供的贡献指南中的编码标准和准则添加您的模型。'
- en: '**Test Thoroughly**: Make sure to test your model rigorously, both in isolation
    and as part of the pipeline.'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**彻底测试**：务必对您的模型进行严格测试，无论是独立进行还是作为管道的一部分。'
- en: '**Create a Pull Request**: Once you''re satisfied with your model, create a
    pull request to the main repository for review.'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建拉取请求**：一旦您满意您的模型，请创建一个拉取请求到主存储库进行审查。'
- en: '**Code Review & Merging**: After review, if your model meets our criteria,
    it will be merged into the main repository.'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**代码审查和合并**：经过审查，如果您的模型符合我们的标准，将合并到主存储库中。'
- en: For detailed steps, consult our Contributing Guide.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 详细步骤，请参阅我们的贡献指南。
- en: FAQ
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常见问题
- en: What are the key advantages of using Ultralytics YOLOv8 for object detection?
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Ultralytics YOLOv8进行目标检测的关键优势是什么？
- en: Ultralytics YOLOv8 offers enhanced capabilities such as real-time object detection,
    instance segmentation, pose estimation, and classification. Its optimized architecture
    ensures high-speed performance without sacrificing accuracy, making it ideal for
    a variety of applications. YOLOv8 also includes built-in compatibility with popular
    datasets and models, as detailed on the YOLOv8 documentation page.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Ultralytics YOLOv8提供了增强功能，如实时目标检测、实例分割、姿态估计和分类。其优化的架构确保高速性能，不会牺牲准确性，使其非常适合各种应用。YOLOv8还包括与流行数据集和模型的内置兼容性，详细信息请参阅YOLOv8文档页面。
- en: How can I train a YOLOv8 model on custom data?
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何在自定义数据上训练YOLOv8模型？
- en: 'Training a YOLOv8 model on custom data can be easily accomplished using Ultralytics''
    libraries. Here''s a quick example:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Ultralytics库可以轻松地在自定义数据上训练YOLOv8模型。以下是一个快速示例：
- en: Example
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE2]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: For more detailed instructions, visit the Train documentation page.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 获取更详细的指导，请访问Train文档页面。
- en: Which YOLO versions are supported by Ultralytics?
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Ultralytics支持哪些YOLO版本？
- en: Ultralytics supports a comprehensive range of YOLO (You Only Look Once) versions
    from YOLOv3 to YOLOv10, along with models like NAS, SAM, and RT-DETR. Each version
    is optimized for various tasks such as detection, segmentation, and classification.
    For detailed information on each model, refer to the Models Supported by Ultralytics
    documentation.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Ultralytics支持从YOLOv3到YOLOv10等全面的YOLO（You Only Look Once）版本，以及NAS、SAM和RT-DETR等模型。每个版本都针对检测、分割和分类等各种任务进行了优化。有关每个模型的详细信息，请参阅Ultralytics支持的模型文档。
- en: Why should I use Ultralytics HUB for machine learning projects?
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我为什么应该使用Ultralytics HUB进行机器学习项目？
- en: Ultralytics HUB provides a no-code, end-to-end platform for training, deploying,
    and managing YOLO models. It simplifies complex workflows, enabling users to focus
    on model performance and application. The HUB also offers cloud training capabilities,
    comprehensive dataset management, and user-friendly interfaces. Learn more about
    it on the Ultralytics HUB documentation page.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Ultralytics HUB为训练、部署和管理YOLO模型提供了一个无代码、端到端的平台。它简化了复杂的工作流程，使用户能够专注于模型性能和应用。HUB还提供云训练能力、全面的数据集管理和用户友好的界面。更多信息请访问Ultralytics
    HUB文档页面。
- en: What types of tasks can YOLOv8 perform, and how does it compare to other YOLO
    versions?
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: YOLOv8可以执行哪些类型的任务，以及与其他YOLO版本相比有何优势？
- en: YOLOv8 is a versatile model capable of performing tasks including object detection,
    instance segmentation, classification, and pose estimation. Compared to earlier
    versions like YOLOv3 and YOLOv4, YOLOv8 offers significant improvements in speed
    and accuracy due to its optimized architecture. For a deeper comparison, refer
    to the YOLOv8 documentation and the Task pages for more details on specific tasks.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv8 是一个多功能模型，能够执行包括目标检测、实例分割、分类和姿态估计等任务。与 YOLOv3 和 YOLOv4 等早期版本相比，YOLOv8
    在速度和准确性方面都有显著提升，这归功于其优化的架构。有关更详细的比较，请参考 YOLOv8 文档和任务页面，了解特定任务的更多细节。
