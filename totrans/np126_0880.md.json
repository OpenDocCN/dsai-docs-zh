["```py\nnumpy.float_power(x1, x2, /, out=None, *, where=True, casting='same_kind', order='K', dtype=None, subok=True[, signature, extobj]) = <ufunc 'float_power'>\n```", "```py\n>>> x1 = range(6)\n>>> x1\n[0, 1, 2, 3, 4, 5]\n>>> np.float_power(x1, 3)\narray([   0.,    1.,    8.,   27.,   64.,  125.]) \n```", "```py\n>>> x2 = [1.0, 2.0, 3.0, 3.0, 2.0, 1.0]\n>>> np.float_power(x1, x2)\narray([  0.,   1.,   8.,  27.,  16.,   5.]) \n```", "```py\n>>> x2 = np.array([[1, 2, 3, 3, 2, 1], [1, 2, 3, 3, 2, 1]])\n>>> x2\narray([[1, 2, 3, 3, 2, 1],\n [1, 2, 3, 3, 2, 1]])\n>>> np.float_power(x1, x2)\narray([[  0.,   1.,   8.,  27.,  16.,   5.],\n [  0.,   1.,   8.,  27.,  16.,   5.]]) \n```", "```py\n>>> x3 = np.array([-1, -4])\n>>> with np.errstate(invalid='ignore'):\n...     p = np.float_power(x3, 1.5)\n...\n>>> p\narray([nan, nan]) \n```", "```py\n>>> np.float_power(x3, 1.5, dtype=complex)\narray([-1.83697020e-16-1.j, -1.46957616e-15-8.j]) \n```"]