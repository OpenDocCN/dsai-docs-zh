- en: What’s new in 2.1.0 (Aug 30, 2023)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/whatsnew/v2.1.0.html](https://pandas.pydata.org/docs/whatsnew/v2.1.0.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: These are the changes in pandas 2.1.0\. See [Release notes](index.html#release)
    for a full changelog including other versions of pandas.
  prefs: []
  type: TYPE_NORMAL
- en: '## Enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '### PyArrow will become a required dependency with pandas 3.0'
  prefs: []
  type: TYPE_NORMAL
- en: '[PyArrow](https://arrow.apache.org/docs/python/index.html) will become a required
    dependency of pandas starting with pandas 3.0\. This decision was made based on
    [PDEP 10](https://pandas.pydata.org/pdeps/0010-required-pyarrow-dependency.html).'
  prefs: []
  type: TYPE_NORMAL
- en: 'This will enable more changes that are hugely beneficial to pandas users, including
    but not limited to:'
  prefs: []
  type: TYPE_NORMAL
- en: inferring strings as PyArrow backed strings by default enabling a significant
    reduction of the memory footprint and huge performance improvements.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: inferring more complex dtypes with PyArrow by default, like `Decimal`, `lists`,
    `bytes`, `structured data` and more.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Better interoperability with other libraries that depend on Apache Arrow.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We are collecting feedback on this decision [here](https://github.com/pandas-dev/pandas/issues/54466).  ###
    Avoid NumPy object dtype for strings by default'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, all strings were stored in columns with NumPy object dtype by default.
    This release introduces an option `future.infer_string` that infers all strings
    as PyArrow backed strings with dtype `"string[pyarrow_numpy]"` instead. This is
    a new string dtype implementation that follows NumPy semantics in comparison operations
    and will return `np.nan` as the missing value indicator. Setting the option will
    also infer the dtype `"string"` as a [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype") with storage set to `"pyarrow_numpy"`, ignoring the value
    behind the option `mode.string_storage`.
  prefs: []
  type: TYPE_NORMAL
- en: This option only works if PyArrow is installed. PyArrow backed strings have
    a significantly reduced memory footprint and provide a big performance improvement
    compared to NumPy object ([GH 54430](https://github.com/pandas-dev/pandas/issues/54430)).
  prefs: []
  type: TYPE_NORMAL
- en: 'The option can be enabled with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'This behavior will become the default with pandas 3.0.  ### DataFrame reductions
    preserve extension dtypes'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions of pandas, the results of DataFrame reductions ([`DataFrame.sum()`](../reference/api/pandas.DataFrame.sum.html#pandas.DataFrame.sum
    "pandas.DataFrame.sum") [`DataFrame.mean()`](../reference/api/pandas.DataFrame.mean.html#pandas.DataFrame.mean
    "pandas.DataFrame.mean") etc.) had NumPy dtypes, even when the DataFrames were
    of extension dtypes. Pandas can now keep the dtypes when doing reductions over
    DataFrame columns with a common dtype ([GH 52788](https://github.com/pandas-dev/pandas/issues/52788)).
  prefs: []
  type: TYPE_NORMAL
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Notice that the dtype is now a masked dtype and PyArrow dtype, respectively,
    while previously it was a NumPy integer dtype.
  prefs: []
  type: TYPE_NORMAL
- en: 'To allow DataFrame reductions to preserve extension dtypes, [`ExtensionArray._reduce()`](../reference/api/pandas.api.extensions.ExtensionArray._reduce.html#pandas.api.extensions.ExtensionArray._reduce
    "pandas.api.extensions.ExtensionArray._reduce") has gotten a new keyword parameter
    `keepdims`. Calling [`ExtensionArray._reduce()`](../reference/api/pandas.api.extensions.ExtensionArray._reduce.html#pandas.api.extensions.ExtensionArray._reduce
    "pandas.api.extensions.ExtensionArray._reduce") with `keepdims=True` should return
    an array of length 1 along the reduction axis. In order to maintain backward compatibility,
    the parameter is not required, but will it become required in the future. If the
    parameter is not found in the signature, DataFrame reductions can not preserve
    extension dtypes. Also, if the parameter is not found, a `FutureWarning` will
    be emitted and type checkers like mypy may complain about the signature not being
    compatible with [`ExtensionArray._reduce()`](../reference/api/pandas.api.extensions.ExtensionArray._reduce.html#pandas.api.extensions.ExtensionArray._reduce
    "pandas.api.extensions.ExtensionArray._reduce").  ### Copy-on-Write improvements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.transform()`](../reference/api/pandas.Series.transform.html#pandas.Series.transform
    "pandas.Series.transform") not respecting Copy-on-Write when `func` modifies [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") inplace ([GH 53747](https://github.com/pandas-dev/pandas/issues/53747))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calling [`Index.values()`](../reference/api/pandas.Index.values.html#pandas.Index.values
    "pandas.Index.values") will now return a read-only NumPy array ([GH 53704](https://github.com/pandas-dev/pandas/issues/53704))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting a [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    into a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    now creates a lazy instead of a deep copy ([GH 53142](https://github.com/pandas-dev/pandas/issues/53142))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor, when constructing a DataFrame from a dictionary of Index objects
    and specifying `copy=False`, will now use a lazy copy of those Index objects for
    the columns of the DataFrame ([GH 52947](https://github.com/pandas-dev/pandas/issues/52947))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A shallow copy of a Series or DataFrame (`df.copy(deep=False)`) will now also
    return a shallow copy of the rows/columns [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") objects instead of only a shallow copy of the data, i.e. the index
    of the result is no longer identical (`df.copy(deep=False).index is df.index`
    is no longer True) ([GH 53721](https://github.com/pandas-dev/pandas/issues/53721))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.head()`](../reference/api/pandas.DataFrame.head.html#pandas.DataFrame.head
    "pandas.DataFrame.head") and [`DataFrame.tail()`](../reference/api/pandas.DataFrame.tail.html#pandas.DataFrame.tail
    "pandas.DataFrame.tail") will now return deep copies ([GH 54011](https://github.com/pandas-dev/pandas/issues/54011))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add lazy copy mechanism to [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") ([GH 53746](https://github.com/pandas-dev/pandas/issues/53746))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Trying to operate inplace on a temporary column selection (for example, `df["a"].fillna(100,
    inplace=True)`) will now always raise a warning when Copy-on-Write is enabled.
    In this mode, operating inplace like this will never work, since the selection
    behaves as a temporary copy. This holds true for:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.update / Series.update
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.fillna / Series.fillna
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.replace / Series.replace
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.clip / Series.clip
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.where / Series.where
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.mask / Series.mask
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.interpolate / Series.interpolate
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.ffill / Series.ffill
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'DataFrame.bfill / Series.bfill  ### New [`DataFrame.map()`](../reference/api/pandas.DataFrame.map.html#pandas.DataFrame.map
    "pandas.DataFrame.map") method and support for ExtensionArrays'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame.map()`](../reference/api/pandas.DataFrame.map.html#pandas.DataFrame.map
    "pandas.DataFrame.map") been added and [`DataFrame.applymap()`](../reference/api/pandas.DataFrame.applymap.html#pandas.DataFrame.applymap
    "pandas.DataFrame.applymap") has been deprecated. [`DataFrame.map()`](../reference/api/pandas.DataFrame.map.html#pandas.DataFrame.map
    "pandas.DataFrame.map") has the same functionality as [`DataFrame.applymap()`](../reference/api/pandas.DataFrame.applymap.html#pandas.DataFrame.applymap
    "pandas.DataFrame.applymap"), but the new name better communicates that this is
    the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    version of [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") ([GH 52353](https://github.com/pandas-dev/pandas/issues/52353)).
  prefs: []
  type: TYPE_NORMAL
- en: When given a callable, [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") applies the callable to all elements of the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"). Similarly, [`DataFrame.map()`](../reference/api/pandas.DataFrame.map.html#pandas.DataFrame.map
    "pandas.DataFrame.map") applies the callable to all elements of the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), while [`Index.map()`](../reference/api/pandas.Index.map.html#pandas.Index.map
    "pandas.Index.map") applies the callable to all elements of the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index").
  prefs: []
  type: TYPE_NORMAL
- en: Frequently, it is not desirable to apply the callable to nan-like values of
    the array and to avoid doing that, the `map` method could be called with `na_action="ignore"`,
    i.e. `ser.map(func, na_action="ignore")`. However, `na_action="ignore"` was not
    implemented for many [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") and `Index` types and `na_action="ignore"`
    did not work correctly for any [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") subclass except the nullable numeric ones
    (i.e. with dtype `Int64` etc.).
  prefs: []
  type: TYPE_NORMAL
- en: '`na_action="ignore"` now works for all array types ([GH 52219](https://github.com/pandas-dev/pandas/issues/52219),
    [GH 51645](https://github.com/pandas-dev/pandas/issues/51645), [GH 51809](https://github.com/pandas-dev/pandas/issues/51809),
    [GH 51936](https://github.com/pandas-dev/pandas/issues/51936), [GH 52033](https://github.com/pandas-dev/pandas/issues/52033);
    [GH 52096](https://github.com/pandas-dev/pandas/issues/52096)).'
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Also, note that `Categorical.map()` implicitly has had its `na_action` set
    to `"ignore"` by default. This has been deprecated and the default for `Categorical.map()`
    will change to `na_action=None`, consistent with all the other array types.  ###
    New implementation of [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack")'
  prefs: []
  type: TYPE_NORMAL
- en: pandas has reimplemented [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack"). To use the new implementation, pass the argument `future_stack=True`.
    This will become the only option in pandas 3.0.
  prefs: []
  type: TYPE_NORMAL
- en: The previous implementation had two main behavioral downsides.
  prefs: []
  type: TYPE_NORMAL
- en: The previous implementation would unnecessarily introduce NA values into the
    result. The user could have NA values automatically removed by passing `dropna=True`
    (the default), but doing this could also remove NA values from the result that
    existed in the input. See the examples below.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The previous implementation with `sort=True` (the default) would sometimes sort
    part of the resulting index, and sometimes not. If the input’s columns are *not*
    a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex"),
    then the resulting index would never be sorted. If the columns are a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"), then in most cases the level(s) in the resulting index that
    come from stacking the column level(s) would be sorted. In rare cases such level(s)
    would be sorted in a non-standard order, depending on how the columns were created.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The new implementation (`future_stack=True`) will no longer unnecessarily introduce
    NA values when stacking multiple levels and will never sort. As such, the arguments
    `dropna` and `sort` are not utilized and must remain unspecified when using `future_stack=True`.
    These arguments will be removed in the next major release.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: In the previous version (`future_stack=False`), the default of `dropna=True`
    would remove unnecessarily introduced NA values but still coerce the dtype to
    `float64` in the process. In the new version, no NAs are introduced and so there
    is no coercion of the dtype.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: If the input contains NA values, the previous version would drop those as well
    with `dropna=True` or introduce new NA values with `dropna=False`. The new version
    persists all values from the input.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]  ### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.ffill()`](../reference/api/pandas.Series.ffill.html#pandas.Series.ffill
    "pandas.Series.ffill") and [`Series.bfill()`](../reference/api/pandas.Series.bfill.html#pandas.Series.bfill
    "pandas.Series.bfill") are now supported for objects with [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") ([GH 54247](https://github.com/pandas-dev/pandas/issues/54247))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `filters` parameter to [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") to filter out data, compatible with both `engines` ([GH
    53212](https://github.com/pandas-dev/pandas/issues/53212))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.map()` and [`CategoricalIndex.map()`](../reference/api/pandas.CategoricalIndex.map.html#pandas.CategoricalIndex.map
    "pandas.CategoricalIndex.map") now have a `na_action` parameter. `Categorical.map()`
    implicitly had a default value of `"ignore"` for `na_action`. This has formally
    been deprecated and will be changed to `None` in the future. Also notice that
    [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map "pandas.Series.map")
    has default `na_action=None` and calls to series with categorical data will now
    use `na_action=None` unless explicitly set otherwise ([GH 44279](https://github.com/pandas-dev/pandas/issues/44279))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`api.extensions.ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") now has a `map()` method ([GH 51809](https://github.com/pandas-dev/pandas/issues/51809))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.applymap()`](../reference/api/pandas.DataFrame.applymap.html#pandas.DataFrame.applymap
    "pandas.DataFrame.applymap") now uses the `map()` method of underlying [`api.extensions.ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") instances ([GH 52219](https://github.com/pandas-dev/pandas/issues/52219))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`MultiIndex.sort_values()` now supports `na_position` ([GH 51612](https://github.com/pandas-dev/pandas/issues/51612))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.sortlevel()`](../reference/api/pandas.MultiIndex.sortlevel.html#pandas.MultiIndex.sortlevel
    "pandas.MultiIndex.sortlevel") and `Index.sortlevel()` gained a new keyword `na_position`
    ([GH 51612](https://github.com/pandas-dev/pandas/issues/51612))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`arrays.DatetimeArray.map()`, `arrays.TimedeltaArray.map()` and `arrays.PeriodArray.map()`
    can now take a `na_action` argument ([GH 51644](https://github.com/pandas-dev/pandas/issues/51644))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`arrays.SparseArray.map()` now supports `na_action` ([GH 52096](https://github.com/pandas-dev/pandas/issues/52096)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") now supports the `storage_options` keyword when used with
    a URL, allowing users to add headers to the outbound HTTP request ([GH 49944](https://github.com/pandas-dev/pandas/issues/49944))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add `Index.diff()` and `Index.round()` ([GH 19708](https://github.com/pandas-dev/pandas/issues/19708))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add `"latex-math"` as an option to the `escape` argument of [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") which will not escape all characters between
    `"\("` and `"\)"` during formatting ([GH 51903](https://github.com/pandas-dev/pandas/issues/51903))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add dtype of categories to `repr` information of [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") ([GH 52179](https://github.com/pandas-dev/pandas/issues/52179))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding `engine_kwargs` parameter to [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") ([GH 52214](https://github.com/pandas-dev/pandas/issues/52214))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Classes that are useful for type-hinting have been added to the public API in
    the new submodule `pandas.api.typing` ([GH 48577](https://github.com/pandas-dev/pandas/issues/48577))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented [`Series.dt.is_month_start`](../reference/api/pandas.Series.dt.is_month_start.html#pandas.Series.dt.is_month_start
    "pandas.Series.dt.is_month_start"), [`Series.dt.is_month_end`](../reference/api/pandas.Series.dt.is_month_end.html#pandas.Series.dt.is_month_end
    "pandas.Series.dt.is_month_end"), [`Series.dt.is_year_start`](../reference/api/pandas.Series.dt.is_year_start.html#pandas.Series.dt.is_year_start
    "pandas.Series.dt.is_year_start"), [`Series.dt.is_year_end`](../reference/api/pandas.Series.dt.is_year_end.html#pandas.Series.dt.is_year_end
    "pandas.Series.dt.is_year_end"), [`Series.dt.is_quarter_start`](../reference/api/pandas.Series.dt.is_quarter_start.html#pandas.Series.dt.is_quarter_start
    "pandas.Series.dt.is_quarter_start"), [`Series.dt.is_quarter_end`](../reference/api/pandas.Series.dt.is_quarter_end.html#pandas.Series.dt.is_quarter_end
    "pandas.Series.dt.is_quarter_end"), [`Series.dt.days_in_month`](../reference/api/pandas.Series.dt.days_in_month.html#pandas.Series.dt.days_in_month
    "pandas.Series.dt.days_in_month"), [`Series.dt.unit`](../reference/api/pandas.Series.dt.unit.html#pandas.Series.dt.unit
    "pandas.Series.dt.unit"), [`Series.dt.normalize`](../reference/api/pandas.Series.dt.normalize.html#pandas.Series.dt.normalize
    "pandas.Series.dt.normalize"), [`Series.dt.day_name()`](../reference/api/pandas.Series.dt.day_name.html#pandas.Series.dt.day_name
    "pandas.Series.dt.day_name"), [`Series.dt.month_name()`](../reference/api/pandas.Series.dt.month_name.html#pandas.Series.dt.month_name
    "pandas.Series.dt.month_name"), [`Series.dt.tz_convert()`](../reference/api/pandas.Series.dt.tz_convert.html#pandas.Series.dt.tz_convert
    "pandas.Series.dt.tz_convert") for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.timestamp` ([GH 52388](https://github.com/pandas-dev/pandas/issues/52388),
    [GH 51718](https://github.com/pandas-dev/pandas/issues/51718))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") and [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") now support grouping by multiple
    keys when the index is not a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") for `engine="numba"` ([GH 53486](https://github.com/pandas-dev/pandas/issues/53486))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`SeriesGroupBy.agg()`](../reference/api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg") and [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") now support passing in multiple functions
    for `engine="numba"` ([GH 53486](https://github.com/pandas-dev/pandas/issues/53486))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") and [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") now support passing in a string
    as the function for `engine="numba"` ([GH 53579](https://github.com/pandas-dev/pandas/issues/53579))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") gained the `sort` keyword to dictate whether the resulting
    [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    levels are sorted ([GH 15105](https://github.com/pandas-dev/pandas/issues/15105))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") gained the `sort` keyword to dictate whether the resulting
    [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    levels are sorted ([GH 15105](https://github.com/pandas-dev/pandas/issues/15105))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode") now supports PyArrow-backed list types ([GH 53602](https://github.com/pandas-dev/pandas/issues/53602))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.str.join()`](../reference/api/pandas.Series.str.join.html#pandas.Series.str.join
    "pandas.Series.str.join") now supports `ArrowDtype(pa.string())` ([GH 53646](https://github.com/pandas-dev/pandas/issues/53646))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add `validate` parameter to [`Categorical.from_codes()`](../reference/api/pandas.Categorical.from_codes.html#pandas.Categorical.from_codes
    "pandas.Categorical.from_codes") ([GH 50975](https://github.com/pandas-dev/pandas/issues/50975))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`ExtensionArray.interpolate()`](../reference/api/pandas.api.extensions.ExtensionArray.interpolate.html#pandas.api.extensions.ExtensionArray.interpolate
    "pandas.api.extensions.ExtensionArray.interpolate") used by [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") ([GH 53659](https://github.com/pandas-dev/pandas/issues/53659))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `engine_kwargs` parameter to [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") ([GH 53220](https://github.com/pandas-dev/pandas/issues/53220))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented [`api.interchange.from_dataframe()`](../reference/api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe
    "pandas.api.interchange.from_dataframe") for [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") ([GH 54239](https://github.com/pandas-dev/pandas/issues/54239))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented `__from_arrow__` on [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") ([GH 52201](https://github.com/pandas-dev/pandas/issues/52201))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented `__pandas_priority__` to allow custom types to take precedence over
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame"),
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index"), or
    [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") for arithmetic operations, [see the developer
    guide](../development/extending.html#extending-pandas-priority) ([GH 48347](https://github.com/pandas-dev/pandas/issues/48347))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve error message when having incompatible columns using [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") ([GH 51861](https://github.com/pandas-dev/pandas/issues/51861))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve error message when setting [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with wrong number of columns through `DataFrame.isetitem()`
    ([GH 51701](https://github.com/pandas-dev/pandas/issues/51701))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error handling when using [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") with incompatible `index` and `orient` arguments ([GH
    52143](https://github.com/pandas-dev/pandas/issues/52143))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when creating a DataFrame with empty data (0 rows), no
    index and an incorrect number of columns ([GH 52084](https://github.com/pandas-dev/pandas/issues/52084))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when providing an invalid `index` or `offset` argument
    to [`VariableOffsetWindowIndexer`](../reference/api/pandas.api.indexers.VariableOffsetWindowIndexer.html#pandas.api.indexers.VariableOffsetWindowIndexer
    "pandas.api.indexers.VariableOffsetWindowIndexer") ([GH 54379](https://github.com/pandas-dev/pandas/issues/54379))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let [`DataFrame.to_feather()`](../reference/api/pandas.DataFrame.to_feather.html#pandas.DataFrame.to_feather
    "pandas.DataFrame.to_feather") accept a non-default [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") and non-string column names ([GH 51787](https://github.com/pandas-dev/pandas/issues/51787))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added a new parameter `by_row` to [`Series.apply()`](../reference/api/pandas.Series.apply.html#pandas.Series.apply
    "pandas.Series.apply") and [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply"). When set to `False` the supplied callables will always
    operate on the whole Series or DataFrame ([GH 53400](https://github.com/pandas-dev/pandas/issues/53400),
    [GH 53601](https://github.com/pandas-dev/pandas/issues/53601)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift") and [`Series.shift()`](../reference/api/pandas.Series.shift.html#pandas.Series.shift
    "pandas.Series.shift") now allow shifting by multiple periods by supplying a list
    of periods ([GH 44424](https://github.com/pandas-dev/pandas/issues/44424))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby aggregations with `numba` (such as [`DataFrameGroupBy.sum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum")) now can preserve the dtype of the
    input instead of casting to `float64` ([GH 44952](https://github.com/pandas-dev/pandas/issues/44952))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") failed ([GH 52930](https://github.com/pandas-dev/pandas/issues/52930))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Many read/to_* functions, such as [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle") and [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), support forwarding compression arguments to `lzma.LZMAFile`
    ([GH 52979](https://github.com/pandas-dev/pandas/issues/52979))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reductions [`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax"), [`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin"), [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax"), [`Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin"), [`Index.argmax()`](../reference/api/pandas.Index.argmax.html#pandas.Index.argmax
    "pandas.Index.argmax"), [`Index.argmin()`](../reference/api/pandas.Index.argmin.html#pandas.Index.argmin
    "pandas.Index.argmin"), [`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax"), [`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin") are now supported for object-dtype ([GH 4279](https://github.com/pandas-dev/pandas/issues/4279),
    [GH 18021](https://github.com/pandas-dev/pandas/issues/18021), [GH 40685](https://github.com/pandas-dev/pandas/issues/40685),
    [GH 43697](https://github.com/pandas-dev/pandas/issues/43697))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") and [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") will now write and read `attrs` respectively ([GH 54346](https://github.com/pandas-dev/pandas/issues/54346))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.all()`](../reference/api/pandas.Index.all.html#pandas.Index.all "pandas.Index.all")
    and [`Index.any()`](../reference/api/pandas.Index.any.html#pandas.Index.any "pandas.Index.any")
    with floating dtypes and timedelta64 dtypes no longer raise `TypeError`, matching
    the [`Series.all()`](../reference/api/pandas.Series.all.html#pandas.Series.all
    "pandas.Series.all") and [`Series.any()`](../reference/api/pandas.Series.any.html#pandas.Series.any
    "pandas.Series.any") behavior ([GH 54566](https://github.com/pandas-dev/pandas/issues/54566))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.cummax()`](../reference/api/pandas.Series.cummax.html#pandas.Series.cummax
    "pandas.Series.cummax"), [`Series.cummin()`](../reference/api/pandas.Series.cummin.html#pandas.Series.cummin
    "pandas.Series.cummin") and [`Series.cumprod()`](../reference/api/pandas.Series.cumprod.html#pandas.Series.cumprod
    "pandas.Series.cumprod") are now supported for pyarrow dtypes with pyarrow version
    13.0 and above ([GH 52085](https://github.com/pandas-dev/pandas/issues/52085))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for the DataFrame Consortium Standard ([GH 54383](https://github.com/pandas-dev/pandas/issues/54383))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile") ([GH 51722](https://github.com/pandas-dev/pandas/issues/51722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'PyArrow-backed integer dtypes now support bitwise operations ([GH 54495](https://github.com/pandas-dev/pandas/issues/54495))  ##
    Backwards incompatible API changes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Increased minimum version for Python'
  prefs: []
  type: TYPE_NORMAL
- en: pandas 2.1.0 supports Python 3.9 and higher.
  prefs: []
  type: TYPE_NORMAL
- en: Increased minimum versions for dependencies
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated. If installed,
    we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.22.4 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| mypy (dev) | 1.4.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.11.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.3.4 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| dataframe-api-compat | 0.1.7 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.8.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 2022.05.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| hypothesis | 6.46.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 2022.05.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| jinja2 | 3.1.2 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 4.8.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.55.2 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.8.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 3.0.10 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas-gbq | 0.17.5 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| psycopg2 | 2.9.3 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyreadstat | 1.1.5 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyqt5 | 5.15.6 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.7.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytest | 7.3.2 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| python-snappy | 0.6.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyxlsb | 1.0.9 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 2022.05.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.8.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.4.36 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| tabulate | 0.8.10 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 2022.03.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 3.0.3 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| zstandard | 0.17.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version.
  prefs: []
  type: TYPE_NORMAL
- en: See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: '### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '`arrays.PandasArray` has been renamed [`NumpyExtensionArray`](../reference/api/pandas.arrays.NumpyExtensionArray.html#pandas.arrays.NumpyExtensionArray
    "pandas.arrays.NumpyExtensionArray") and the attached dtype name changed from
    `PandasDtype` to `NumpyEADtype`; importing `PandasArray` still works until the
    next major version ([GH 53694](https://github.com/pandas-dev/pandas/issues/53694))  ##
    Deprecations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated silent upcasting in setitem-like Series operations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'PDEP-6: [https://pandas.pydata.org/pdeps/0006-ban-upcasting.html](https://pandas.pydata.org/pdeps/0006-ban-upcasting.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Setitem-like operations on Series (or DataFrame columns) which silently upcast
    the dtype are deprecated and show a warning. Examples of affected operations are:'
  prefs: []
  type: TYPE_NORMAL
- en: '`ser.fillna(''foo'', inplace=True)`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ser.where(ser.isna(), ''foo'', inplace=True)`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ser.iloc[indexer] = ''foo''`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ser.loc[indexer] = ''foo''`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`df.iloc[indexer, 0] = ''foo''`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`df.loc[indexer, ''a''] = ''foo''`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ser[indexer] = ''foo''`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: where `ser` is a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), `df` is a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), and `indexer` could be a slice, a mask, a single value, a
    list or array of values, or any other allowed indexer.
  prefs: []
  type: TYPE_NORMAL
- en: In a future version, these will raise an error and you should cast to a common
    dtype first.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'To retain the current behaviour, in the case above you could cast `ser` to
    `object` dtype first:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Depending on the use-case, it might be more appropriate to cast to a different
    dtype. In the following, for example, we cast to `float64`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: For further reading, please see [https://pandas.pydata.org/pdeps/0006-ban-upcasting.html](https://pandas.pydata.org/pdeps/0006-ban-upcasting.html).
  prefs: []
  type: TYPE_NORMAL
- en: Deprecated parsing datetimes with mixed time zones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Parsing datetimes with mixed time zones is deprecated and shows a warning unless
    user passes `utc=True` to [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") ([GH 50887](https://github.com/pandas-dev/pandas/issues/50887))
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'In order to silence this warning and avoid an error in a future version of
    pandas, please specify `utc=True`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'To create a `Series` with mixed offsets and `object` dtype, please use `apply`
    and `datetime.datetime.strptime`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Other Deprecations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Deprecated `DataFrameGroupBy.dtypes`, check `dtypes` on the underlying object
    instead ([GH 51045](https://github.com/pandas-dev/pandas/issues/51045))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `DataFrame._data` and `Series._data`, use public APIs instead ([GH
    33333](https://github.com/pandas-dev/pandas/issues/33333))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    behavior when any of the objects being concatenated have length 0; in the past
    the dtypes of empty objects were ignored when determining the resulting dtype,
    in a future version they will not ([GH 39122](https://github.com/pandas-dev/pandas/issues/39122))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Categorical.to_list()`, use `obj.tolist()` instead ([GH 51254](https://github.com/pandas-dev/pandas/issues/51254))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`DataFrameGroupBy.all()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all") and [`DataFrameGroupBy.any()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any") with datetime64 or [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") values, matching the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") deprecations ([GH 34479](https://github.com/pandas-dev/pandas/issues/34479))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `axis=1` in [`DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm"), [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling"), [`DataFrame.expanding()`](../reference/api/pandas.DataFrame.expanding.html#pandas.DataFrame.expanding
    "pandas.DataFrame.expanding"), transpose before calling the method instead ([GH
    51778](https://github.com/pandas-dev/pandas/issues/51778))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `axis=1` in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and in [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper") constructor, do `frame.T.groupby(...)` instead ([GH 51203](https://github.com/pandas-dev/pandas/issues/51203))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deprecated `broadcast_axis` keyword in [`Series.align()`](../reference/api/pandas.Series.align.html#pandas.Series.align
    "pandas.Series.align") and [`DataFrame.align()`](../reference/api/pandas.DataFrame.align.html#pandas.DataFrame.align
    "pandas.DataFrame.align"), upcast before calling `align` with `left = DataFrame({col:
    left for col in right.columns}, index=right.index)` ([GH 51856](https://github.com/pandas-dev/pandas/issues/51856))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `downcast` keyword in [`Index.fillna()`](../reference/api/pandas.Index.fillna.html#pandas.Index.fillna
    "pandas.Index.fillna") ([GH 53956](https://github.com/pandas-dev/pandas/issues/53956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `fill_method` and `limit` keywords in [`DataFrame.pct_change()`](../reference/api/pandas.DataFrame.pct_change.html#pandas.DataFrame.pct_change
    "pandas.DataFrame.pct_change"), [`Series.pct_change()`](../reference/api/pandas.Series.pct_change.html#pandas.Series.pct_change
    "pandas.Series.pct_change"), [`DataFrameGroupBy.pct_change()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.pct_change.html#pandas.core.groupby.DataFrameGroupBy.pct_change
    "pandas.core.groupby.DataFrameGroupBy.pct_change"), and [`SeriesGroupBy.pct_change()`](../reference/api/pandas.core.groupby.SeriesGroupBy.pct_change.html#pandas.core.groupby.SeriesGroupBy.pct_change
    "pandas.core.groupby.SeriesGroupBy.pct_change"), explicitly call e.g. [`DataFrame.ffill()`](../reference/api/pandas.DataFrame.ffill.html#pandas.DataFrame.ffill
    "pandas.DataFrame.ffill") or [`DataFrame.bfill()`](../reference/api/pandas.DataFrame.bfill.html#pandas.DataFrame.bfill
    "pandas.DataFrame.bfill") before calling `pct_change` instead ([GH 53491](https://github.com/pandas-dev/pandas/issues/53491))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `method`, `limit`, and `fill_axis` keywords in [`DataFrame.align()`](../reference/api/pandas.DataFrame.align.html#pandas.DataFrame.align
    "pandas.DataFrame.align") and [`Series.align()`](../reference/api/pandas.Series.align.html#pandas.Series.align
    "pandas.Series.align"), explicitly call [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") or [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") on the alignment results instead ([GH 51856](https://github.com/pandas-dev/pandas/issues/51856))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `quantile` keyword in [`Rolling.quantile()`](../reference/api/pandas.core.window.rolling.Rolling.quantile.html#pandas.core.window.rolling.Rolling.quantile
    "pandas.core.window.rolling.Rolling.quantile") and [`Expanding.quantile()`](../reference/api/pandas.core.window.expanding.Expanding.quantile.html#pandas.core.window.expanding.Expanding.quantile
    "pandas.core.window.expanding.Expanding.quantile"), renamed to `q` instead ([GH
    52550](https://github.com/pandas-dev/pandas/issues/52550))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated accepting slices in [`DataFrame.take()`](../reference/api/pandas.DataFrame.take.html#pandas.DataFrame.take
    "pandas.DataFrame.take"), call `obj[slicer]` or pass a sequence of integers instead
    ([GH 51539](https://github.com/pandas-dev/pandas/issues/51539))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax"), [`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin"), [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax"), [`Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin") in with all-NA entries or any-NA and `skipna=False`; in
    a future version these will raise `ValueError` ([GH 51276](https://github.com/pandas-dev/pandas/issues/51276))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated explicit support for subclassing [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 45289](https://github.com/pandas-dev/pandas/issues/45289))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated making functions given to [`Series.agg()`](../reference/api/pandas.Series.agg.html#pandas.Series.agg
    "pandas.Series.agg") attempt to operate on each element in the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and only operate on the whole [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") if the elementwise operations failed. In the future, functions
    given to [`Series.agg()`](../reference/api/pandas.Series.agg.html#pandas.Series.agg
    "pandas.Series.agg") will always operate on the whole [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") only. To keep the current behavior, use [`Series.transform()`](../reference/api/pandas.Series.transform.html#pandas.Series.transform
    "pandas.Series.transform") instead ([GH 53325](https://github.com/pandas-dev/pandas/issues/53325))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated making the functions in a list of functions given to [`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") attempt to operate on each element in the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and only operate on the columns of the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") if the elementwise operations failed. To keep the current
    behavior, use [`DataFrame.transform()`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform") instead ([GH 53325](https://github.com/pandas-dev/pandas/issues/53325))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to [`DataFrame.from_records()`](../reference/api/pandas.DataFrame.from_records.html#pandas.DataFrame.from_records
    "pandas.DataFrame.from_records"), use [`DataFrame.set_index()`](../reference/api/pandas.DataFrame.set_index.html#pandas.DataFrame.set_index
    "pandas.DataFrame.set_index") or [`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") instead ([GH 51353](https://github.com/pandas-dev/pandas/issues/51353))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated silently dropping unrecognized timezones when parsing strings to
    datetimes ([GH 18702](https://github.com/pandas-dev/pandas/issues/18702))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `axis` keyword in [`DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm"), [`Series.ewm()`](../reference/api/pandas.Series.ewm.html#pandas.Series.ewm
    "pandas.Series.ewm"), [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling"), [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling"), [`DataFrame.expanding()`](../reference/api/pandas.DataFrame.expanding.html#pandas.DataFrame.expanding
    "pandas.DataFrame.expanding"), [`Series.expanding()`](../reference/api/pandas.Series.expanding.html#pandas.Series.expanding
    "pandas.Series.expanding") ([GH 51778](https://github.com/pandas-dev/pandas/issues/51778))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `axis` keyword in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample"), [`Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") ([GH 51778](https://github.com/pandas-dev/pandas/issues/51778))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `downcast` keyword in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate"), [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate"), [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna"), [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna"), [`Series.ffill()`](../reference/api/pandas.Series.ffill.html#pandas.Series.ffill
    "pandas.Series.ffill"), [`DataFrame.ffill()`](../reference/api/pandas.DataFrame.ffill.html#pandas.DataFrame.ffill
    "pandas.DataFrame.ffill"), [`Series.bfill()`](../reference/api/pandas.Series.bfill.html#pandas.Series.bfill
    "pandas.Series.bfill"), [`DataFrame.bfill()`](../reference/api/pandas.DataFrame.bfill.html#pandas.DataFrame.bfill
    "pandas.DataFrame.bfill") ([GH 40988](https://github.com/pandas-dev/pandas/issues/40988))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") with both `len(keys) != len(objs)`, in a future version this
    will raise instead of truncating to the shorter of the two sequences ([GH 43485](https://github.com/pandas-dev/pandas/issues/43485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`Series.argsort()`](../reference/api/pandas.Series.argsort.html#pandas.Series.argsort
    "pandas.Series.argsort") in the presence of NA values; in a future version these
    will be sorted at the end instead of giving -1 ([GH 54219](https://github.com/pandas-dev/pandas/issues/54219))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the default of `observed=False` in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby"); this will default to `True` in a future version ([GH
    43999](https://github.com/pandas-dev/pandas/issues/43999))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecating pinning `group.name` to each group in [`SeriesGroupBy.aggregate()`](../reference/api/pandas.core.groupby.SeriesGroupBy.aggregate.html#pandas.core.groupby.SeriesGroupBy.aggregate
    "pandas.core.groupby.SeriesGroupBy.aggregate") aggregations; if your operation
    requires utilizing the groupby keys, iterate over the groupby object instead ([GH
    41090](https://github.com/pandas-dev/pandas/issues/41090))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `axis` keyword in [`DataFrameGroupBy.idxmax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax"), [`DataFrameGroupBy.idxmin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin"), [`DataFrameGroupBy.fillna()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.fillna.html#pandas.core.groupby.DataFrameGroupBy.fillna
    "pandas.core.groupby.DataFrameGroupBy.fillna"), [`DataFrameGroupBy.take()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.take.html#pandas.core.groupby.DataFrameGroupBy.take
    "pandas.core.groupby.DataFrameGroupBy.take"), [`DataFrameGroupBy.skew()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.skew.html#pandas.core.groupby.DataFrameGroupBy.skew
    "pandas.core.groupby.DataFrameGroupBy.skew"), [`DataFrameGroupBy.rank()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank"), [`DataFrameGroupBy.cumprod()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumprod.html#pandas.core.groupby.DataFrameGroupBy.cumprod
    "pandas.core.groupby.DataFrameGroupBy.cumprod"), [`DataFrameGroupBy.cumsum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum"), [`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax"), [`DataFrameGroupBy.cummin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin"), [`DataFrameGroupBy.pct_change()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.pct_change.html#pandas.core.groupby.DataFrameGroupBy.pct_change
    "pandas.core.groupby.DataFrameGroupBy.pct_change"), [`DataFrameGroupBy.diff()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.diff.html#pandas.core.groupby.DataFrameGroupBy.diff
    "pandas.core.groupby.DataFrameGroupBy.diff"), [`DataFrameGroupBy.shift()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.shift.html#pandas.core.groupby.DataFrameGroupBy.shift
    "pandas.core.groupby.DataFrameGroupBy.shift"), and [`DataFrameGroupBy.corrwith()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.corrwith.html#pandas.core.groupby.DataFrameGroupBy.corrwith
    "pandas.core.groupby.DataFrameGroupBy.corrwith"); for `axis=1` operate on the
    underlying [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") instead ([GH 50405](https://github.com/pandas-dev/pandas/issues/50405),
    [GH 51046](https://github.com/pandas-dev/pandas/issues/51046))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `DataFrameGroupBy` with `as_index=False` not including groupings
    in the result when they are not columns of the DataFrame ([GH 49519](https://github.com/pandas-dev/pandas/issues/49519))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `is_categorical_dtype()`, use `isinstance(obj.dtype, pd.CategoricalDtype)`
    instead ([GH 52527](https://github.com/pandas-dev/pandas/issues/52527))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `is_datetime64tz_dtype()`, check `isinstance(dtype, pd.DatetimeTZDtype)`
    instead ([GH 52607](https://github.com/pandas-dev/pandas/issues/52607))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `is_int64_dtype()`, check `dtype == np.dtype(np.int64)` instead ([GH
    52564](https://github.com/pandas-dev/pandas/issues/52564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `is_interval_dtype()`, check `isinstance(dtype, pd.IntervalDtype)`
    instead ([GH 52607](https://github.com/pandas-dev/pandas/issues/52607))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `is_period_dtype()`, check `isinstance(dtype, pd.PeriodDtype)` instead
    ([GH 52642](https://github.com/pandas-dev/pandas/issues/52642))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `is_sparse()`, check `isinstance(dtype, pd.SparseDtype)` instead
    ([GH 52642](https://github.com/pandas-dev/pandas/issues/52642))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Styler.applymap_index()`. Use the new [`Styler.map_index()`](../reference/api/pandas.io.formats.style.Styler.map_index.html#pandas.io.formats.style.Styler.map_index
    "pandas.io.formats.style.Styler.map_index") method instead ([GH 52708](https://github.com/pandas-dev/pandas/issues/52708))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Styler.applymap()`. Use the new [`Styler.map()`](../reference/api/pandas.io.formats.style.Styler.map.html#pandas.io.formats.style.Styler.map
    "pandas.io.formats.style.Styler.map") method instead ([GH 52708](https://github.com/pandas-dev/pandas/issues/52708))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`DataFrame.applymap()`](../reference/api/pandas.DataFrame.applymap.html#pandas.DataFrame.applymap
    "pandas.DataFrame.applymap"). Use the new [`DataFrame.map()`](../reference/api/pandas.DataFrame.map.html#pandas.DataFrame.map
    "pandas.DataFrame.map") method instead ([GH 52353](https://github.com/pandas-dev/pandas/issues/52353))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`DataFrame.swapaxes()`](../reference/api/pandas.DataFrame.swapaxes.html#pandas.DataFrame.swapaxes
    "pandas.DataFrame.swapaxes") and `Series.swapaxes()`, use [`DataFrame.transpose()`](../reference/api/pandas.DataFrame.transpose.html#pandas.DataFrame.transpose
    "pandas.DataFrame.transpose") or `Series.transpose()` instead ([GH 51946](https://github.com/pandas-dev/pandas/issues/51946))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `freq` parameter in [`PeriodArray`](../reference/api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray") constructor, pass `dtype` instead ([GH 52462](https://github.com/pandas-dev/pandas/issues/52462))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-standard inputs in `take()`, pass either a `numpy.ndarray`,
    [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray"), [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 52981](https://github.com/pandas-dev/pandas/issues/52981))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-standard sequences for `isin()`, `value_counts()`, [`unique()`](../reference/api/pandas.unique.html#pandas.unique
    "pandas.unique"), [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize"), case to one of `numpy.ndarray`, [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray"), or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") before calling ([GH 52986](https://github.com/pandas-dev/pandas/issues/52986))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") reductions `sum`, `prod`, `std`, `var`, `sem` with `axis=None`,
    in a future version this will operate over both axes returning a scalar instead
    of behaving like `axis=0`; note this also affects numpy functions e.g. `np.sum(df)`
    ([GH 21597](https://github.com/pandas-dev/pandas/issues/21597))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has columns that are all-NA, in a future version these will
    not be discarded when determining the resulting dtype ([GH 40893](https://github.com/pandas-dev/pandas/issues/40893))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`Series.dt.to_pydatetime()`](../reference/api/pandas.Series.dt.to_pydatetime.html#pandas.Series.dt.to_pydatetime
    "pandas.Series.dt.to_pydatetime"), in a future version this will return a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") containing python `datetime` objects instead of an `ndarray`
    of datetimes; this matches the behavior of other [`Series.dt`](../reference/api/pandas.Series.dt.html#pandas.Series.dt
    "pandas.Series.dt") properties ([GH 20306](https://github.com/pandas-dev/pandas/issues/20306))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated logical operations (`|`, `&`, `^`) between pandas objects and dtype-less
    sequences (e.g. `list`, `tuple`), wrap a sequence in a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or NumPy array before operating instead ([GH 51521](https://github.com/pandas-dev/pandas/issues/51521))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated parameter `convert_type` in [`Series.apply()`](../reference/api/pandas.Series.apply.html#pandas.Series.apply
    "pandas.Series.apply") ([GH 52140](https://github.com/pandas-dev/pandas/issues/52140))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing a dictionary to [`SeriesGroupBy.agg()`](../reference/api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg"); pass a list of aggregations instead
    ([GH 50684](https://github.com/pandas-dev/pandas/issues/50684))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `fastpath` keyword in [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") constructor, use [`Categorical.from_codes()`](../reference/api/pandas.Categorical.from_codes.html#pandas.Categorical.from_codes
    "pandas.Categorical.from_codes") instead ([GH 20110](https://github.com/pandas-dev/pandas/issues/20110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of `is_bool_dtype()` returning `True` for object-dtype
    [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") of bool
    objects ([GH 52680](https://github.com/pandas-dev/pandas/issues/52680))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the methods [`Series.bool()`](../reference/api/pandas.Series.bool.html#pandas.Series.bool
    "pandas.Series.bool") and [`DataFrame.bool()`](../reference/api/pandas.DataFrame.bool.html#pandas.DataFrame.bool
    "pandas.DataFrame.bool") ([GH 51749](https://github.com/pandas-dev/pandas/issues/51749))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated unused `closed` and `normalize` keywords in the [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") constructor ([GH 52628](https://github.com/pandas-dev/pandas/issues/52628))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated unused `closed` keyword in the [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") constructor ([GH 52628](https://github.com/pandas-dev/pandas/issues/52628))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated logical operation between two non boolean [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with different indexes always coercing the result to bool dtype.
    In a future version, this will maintain the return type of the inputs ([GH 52500](https://github.com/pandas-dev/pandas/issues/52500),
    [GH 52538](https://github.com/pandas-dev/pandas/issues/52538))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    and [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") with `BDay` freq, use a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with `BDay` freq instead ([GH 53446](https://github.com/pandas-dev/pandas/issues/53446))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `value_counts()`, use `pd.Series(obj).value_counts()` instead ([GH
    47862](https://github.com/pandas-dev/pandas/issues/47862))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.first()`](../reference/api/pandas.Series.first.html#pandas.Series.first
    "pandas.Series.first") and [`DataFrame.first()`](../reference/api/pandas.DataFrame.first.html#pandas.DataFrame.first
    "pandas.DataFrame.first"); create a mask and filter using `.loc` instead ([GH
    45908](https://github.com/pandas-dev/pandas/issues/45908))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") for object-dtype ([GH 53631](https://github.com/pandas-dev/pandas/issues/53631))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.last()`](../reference/api/pandas.Series.last.html#pandas.Series.last
    "pandas.Series.last") and [`DataFrame.last()`](../reference/api/pandas.DataFrame.last.html#pandas.DataFrame.last
    "pandas.DataFrame.last"); create a mask and filter using `.loc` instead ([GH 53692](https://github.com/pandas-dev/pandas/issues/53692))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing arbitrary `fill_value` in [`SparseDtype`](../reference/api/pandas.SparseDtype.html#pandas.SparseDtype
    "pandas.SparseDtype"), in a future version the `fill_value` will need to be compatible
    with the `dtype.subtype`, either a scalar that can be held by that subtype or
    `NaN` for integer or bool subtypes ([GH 23124](https://github.com/pandas-dev/pandas/issues/23124))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing bool dtype in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile"), consistent with the [`Series.quantile()`](../reference/api/pandas.Series.quantile.html#pandas.Series.quantile
    "pandas.Series.quantile") and [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile") behavior ([GH 51424](https://github.com/pandas-dev/pandas/issues/51424))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") and [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") considering NA-like values (e.g. `NaN` vs
    `None` as equivalent) ([GH 52081](https://github.com/pandas-dev/pandas/issues/52081))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated bytes input to [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"). To read a file path, use a string or path-like object ([GH
    53767](https://github.com/pandas-dev/pandas/issues/53767))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated constructing [`SparseArray`](../reference/api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray") from scalar data, pass a sequence instead ([GH 53039](https://github.com/pandas-dev/pandas/issues/53039))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated falling back to filling when `value` is not specified in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with non-dict-like `to_replace` ([GH 33302](https://github.com/pandas-dev/pandas/issues/33302))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated literal json input to [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json"). Wrap literal json string input in `io.StringIO` instead ([GH
    53409](https://github.com/pandas-dev/pandas/issues/53409))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated literal string input to [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml"). Wrap literal string/bytes input in `io.StringIO` / `io.BytesIO`
    instead ([GH 53767](https://github.com/pandas-dev/pandas/issues/53767))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated literal string/bytes input to [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html"). Wrap literal string/bytes input in `io.StringIO` / `io.BytesIO`
    instead ([GH 53767](https://github.com/pandas-dev/pandas/issues/53767))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated option `mode.use_inf_as_na`, convert inf entries to `NaN` before
    instead ([GH 51684](https://github.com/pandas-dev/pandas/issues/51684))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated parameter `obj` in [`DataFrameGroupBy.get_group()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.get_group.html#pandas.core.groupby.DataFrameGroupBy.get_group
    "pandas.core.groupby.DataFrameGroupBy.get_group") ([GH 53545](https://github.com/pandas-dev/pandas/issues/53545))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated positional indexing on [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `Series.__getitem__()` and `Series.__setitem__()`, in a
    future version `ser[item]` will *always* interpret `item` as a label, not a position
    ([GH 50617](https://github.com/pandas-dev/pandas/issues/50617))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated replacing builtin and NumPy functions in `.agg`, `.apply`, and `.transform`;
    use the corresponding string alias (e.g. `"sum"` for `sum` or `np.sum`) instead
    ([GH 53425](https://github.com/pandas-dev/pandas/issues/53425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated strings `T`, `t`, `L` and `l` denoting units in [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") ([GH 52536](https://github.com/pandas-dev/pandas/issues/52536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the “method” and “limit” keywords in `.ExtensionArray.fillna`, implement
    `_pad_or_backfill` instead ([GH 53621](https://github.com/pandas-dev/pandas/issues/53621))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `method` and `limit` keywords in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") ([GH 33302](https://github.com/pandas-dev/pandas/issues/33302))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `method` and `limit` keywords on [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna"), [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna"), [`SeriesGroupBy.fillna()`](../reference/api/pandas.core.groupby.SeriesGroupBy.fillna.html#pandas.core.groupby.SeriesGroupBy.fillna
    "pandas.core.groupby.SeriesGroupBy.fillna"), [`DataFrameGroupBy.fillna()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.fillna.html#pandas.core.groupby.DataFrameGroupBy.fillna
    "pandas.core.groupby.DataFrameGroupBy.fillna"), and [`Resampler.fillna()`](../reference/api/pandas.core.resample.Resampler.fillna.html#pandas.core.resample.Resampler.fillna
    "pandas.core.resample.Resampler.fillna"), use `obj.bfill()` or `obj.ffill()` instead
    ([GH 53394](https://github.com/pandas-dev/pandas/issues/53394))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of `Series.__getitem__()`, `Series.__setitem__()`, `DataFrame.__getitem__()`,
    `DataFrame.__setitem__()` with an integer slice on objects with a floating-dtype
    index, in a future version this will be treated as *positional* indexing ([GH
    49612](https://github.com/pandas-dev/pandas/issues/49612))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deprecated the use of non-supported datetime64 and timedelta64 resolutions
    with [`pandas.array()`](../reference/api/pandas.array.html#pandas.array "pandas.array").
    Supported resolutions are: “s”, “ms”, “us”, “ns” resolutions ([GH 53058](https://github.com/pandas-dev/pandas/issues/53058))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated values `"pad"`, `"ffill"`, `"bfill"`, `"backfill"` for [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate"), use `obj.ffill()` or `obj.bfill()` instead ([GH
    53581](https://github.com/pandas-dev/pandas/issues/53581))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`Index.argmax()`](../reference/api/pandas.Index.argmax.html#pandas.Index.argmax
    "pandas.Index.argmax"), [`Index.argmin()`](../reference/api/pandas.Index.argmin.html#pandas.Index.argmin
    "pandas.Index.argmin"), [`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax"), [`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin") with either all-NAs and `skipna=True` or any-NAs and `skipna=False`
    returning -1; in a future version this will raise `ValueError` ([GH 33941](https://github.com/pandas-dev/pandas/issues/33941),
    [GH 33942](https://github.com/pandas-dev/pandas/issues/33942))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") except `name` and `con` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deprecated silently ignoring `fill_value` when passing both `freq` and `fill_value`
    to [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift"), [`Series.shift()`](../reference/api/pandas.Series.shift.html#pandas.Series.shift
    "pandas.Series.shift") and [`DataFrameGroupBy.shift()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.shift.html#pandas.core.groupby.DataFrameGroupBy.shift
    "pandas.core.groupby.DataFrameGroupBy.shift"); in a future version this will raise
    `ValueError` ([GH 53832](https://github.com/pandas-dev/pandas/issues/53832))  ##
    Performance improvements'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") with homogeneous `np.float64` or `np.float32` dtypes ([GH 52685](https://github.com/pandas-dev/pandas/issues/52685))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") for object columns not containing strings ([GH 51921](https://github.com/pandas-dev/pandas/issues/51921))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_orc()`](../reference/api/pandas.read_orc.html#pandas.read_orc
    "pandas.read_orc") when reading a remote URI file path ([GH 51609](https://github.com/pandas-dev/pandas/issues/51609))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") and [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") when reading a remote file with `engine="pyarrow"`
    ([GH 51609](https://github.com/pandas-dev/pandas/issues/51609))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") on string columns when using `use_nullable_dtypes=True`
    ([GH 47345](https://github.com/pandas-dev/pandas/issues/47345))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip") and [`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip") ([GH 51472](https://github.com/pandas-dev/pandas/issues/51472))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.filter()`](../reference/api/pandas.DataFrame.filter.html#pandas.DataFrame.filter
    "pandas.DataFrame.filter") when `items` is given ([GH 52941](https://github.com/pandas-dev/pandas/issues/52941))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.first_valid_index()`](../reference/api/pandas.DataFrame.first_valid_index.html#pandas.DataFrame.first_valid_index
    "pandas.DataFrame.first_valid_index") and [`DataFrame.last_valid_index()`](../reference/api/pandas.DataFrame.last_valid_index.html#pandas.DataFrame.last_valid_index
    "pandas.DataFrame.last_valid_index") for extension array dtypes ([GH 51549](https://github.com/pandas-dev/pandas/issues/51549))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") when `cond` is backed by an extension dtype ([GH 51574](https://github.com/pandas-dev/pandas/issues/51574))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`MultiIndex.set_levels()`](../reference/api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels") and [`MultiIndex.set_codes()`](../reference/api/pandas.MultiIndex.set_codes.html#pandas.MultiIndex.set_codes
    "pandas.MultiIndex.set_codes") when `verify_integrity=True` ([GH 51873](https://github.com/pandas-dev/pandas/issues/51873))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`MultiIndex.sortlevel()`](../reference/api/pandas.MultiIndex.sortlevel.html#pandas.MultiIndex.sortlevel
    "pandas.MultiIndex.sortlevel") when `ascending` is a list ([GH 51612](https://github.com/pandas-dev/pandas/issues/51612))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.combine_first()`](../reference/api/pandas.Series.combine_first.html#pandas.Series.combine_first
    "pandas.Series.combine_first") ([GH 51777](https://github.com/pandas-dev/pandas/issues/51777))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `fillna()` when array does not contain nulls ([GH
    51635](https://github.com/pandas-dev/pandas/issues/51635))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `isna()` when array has zero nulls or is all nulls
    ([GH 51630](https://github.com/pandas-dev/pandas/issues/51630))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when parsing strings to `boolean[pyarrow]` dtype ([GH
    51730](https://github.com/pandas-dev/pandas/issues/51730))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when searching an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") sliced from other indexes ([GH 51738](https://github.com/pandas-dev/pandas/issues/51738))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") ([GH 52291](https://github.com/pandas-dev/pandas/issues/52291),
    [GH 52290](https://github.com/pandas-dev/pandas/issues/52290))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")’s
    default formatter (`period_format`) is now significantly (~twice) faster. This
    improves performance of `str(Period)`, `repr(Period)`, and `Period.strftime(fmt=None)()`,
    as well as `.PeriodArray.strftime(fmt=None)`, `.PeriodIndex.strftime(fmt=None)`
    and `.PeriodIndex.format(fmt=None)`. `to_csv` operations involving [`PeriodArray`](../reference/api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray") or [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") with default `date_format` are also significantly accelerated
    ([GH 51459](https://github.com/pandas-dev/pandas/issues/51459))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement accessing `arrays.IntegerArrays.dtype` & `arrays.FloatingArray.dtype`
    ([GH 52998](https://github.com/pandas-dev/pandas/issues/52998))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for `DataFrameGroupBy`/`SeriesGroupBy` aggregations
    (e.g. [`DataFrameGroupBy.sum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum")) with `engine="numba"` ([GH 53731](https://github.com/pandas-dev/pandas/issues/53731))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") reductions with `axis=1` and extension dtypes ([GH 54341](https://github.com/pandas-dev/pandas/issues/54341))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") reductions with `axis=None` and extension dtypes ([GH 54308](https://github.com/pandas-dev/pandas/issues/54308))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and multi-column operations (e.g. [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values"), [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby"), [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack")) when index/column values are already sorted ([GH 53806](https://github.com/pandas-dev/pandas/issues/53806))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") reductions ([GH 52341](https://github.com/pandas-dev/pandas/issues/52341))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") when `axis=1` and objects have different indexes ([GH 52541](https://github.com/pandas-dev/pandas/issues/52541))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") when the concatenation axis is a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 53574](https://github.com/pandas-dev/pandas/issues/53574))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") for PyArrow backed strings ([GH 54443](https://github.com/pandas-dev/pandas/issues/54443))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `engine="c"` ([GH 52632](https://github.com/pandas-dev/pandas/issues/52632))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `ArrowExtensionArray.to_numpy()` ([GH 52525](https://github.com/pandas-dev/pandas/issues/52525))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.groups()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.groups.html#pandas.core.groupby.DataFrameGroupBy.groups
    "pandas.core.groupby.DataFrameGroupBy.groups") ([GH 53088](https://github.com/pandas-dev/pandas/issues/53088))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") when `dtype` is an extension dtype ([GH 54299](https://github.com/pandas-dev/pandas/issues/54299))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") when input is an single integer and dataframe is backed
    by extension dtypes ([GH 54508](https://github.com/pandas-dev/pandas/issues/54508))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.isin()`](../reference/api/pandas.DataFrame.isin.html#pandas.DataFrame.isin
    "pandas.DataFrame.isin") for extension dtypes ([GH 53514](https://github.com/pandas-dev/pandas/issues/53514))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") when selecting rows and columns ([GH 53014](https://github.com/pandas-dev/pandas/issues/53014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.transpose()`](../reference/api/pandas.DataFrame.transpose.html#pandas.DataFrame.transpose
    "pandas.DataFrame.transpose") when transposing a DataFrame with a single PyArrow
    dtype ([GH 54224](https://github.com/pandas-dev/pandas/issues/54224))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.transpose()`](../reference/api/pandas.DataFrame.transpose.html#pandas.DataFrame.transpose
    "pandas.DataFrame.transpose") when transposing a DataFrame with a single masked
    dtype, e.g. `Int64` ([GH 52836](https://github.com/pandas-dev/pandas/issues/52836))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.add()`](../reference/api/pandas.Series.add.html#pandas.Series.add
    "pandas.Series.add") for PyArrow string and binary dtypes ([GH 53150](https://github.com/pandas-dev/pandas/issues/53150))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.corr()`](../reference/api/pandas.Series.corr.html#pandas.Series.corr
    "pandas.Series.corr") and [`Series.cov()`](../reference/api/pandas.Series.cov.html#pandas.Series.cov
    "pandas.Series.cov") for extension dtypes ([GH 52502](https://github.com/pandas-dev/pandas/issues/52502))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.drop_duplicates()`](../reference/api/pandas.Series.drop_duplicates.html#pandas.Series.drop_duplicates
    "pandas.Series.drop_duplicates") for `ArrowDtype` ([GH 54667](https://github.com/pandas-dev/pandas/issues/54667)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.ffill()`](../reference/api/pandas.Series.ffill.html#pandas.Series.ffill
    "pandas.Series.ffill"), [`Series.bfill()`](../reference/api/pandas.Series.bfill.html#pandas.Series.bfill
    "pandas.Series.bfill"), [`DataFrame.ffill()`](../reference/api/pandas.DataFrame.ffill.html#pandas.DataFrame.ffill
    "pandas.DataFrame.ffill"), [`DataFrame.bfill()`](../reference/api/pandas.DataFrame.bfill.html#pandas.DataFrame.bfill
    "pandas.DataFrame.bfill") with PyArrow dtypes ([GH 53950](https://github.com/pandas-dev/pandas/issues/53950))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.str.get_dummies()`](../reference/api/pandas.Series.str.get_dummies.html#pandas.Series.str.get_dummies
    "pandas.Series.str.get_dummies") for PyArrow-backed strings ([GH 53655](https://github.com/pandas-dev/pandas/issues/53655))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.str.get()`](../reference/api/pandas.Series.str.get.html#pandas.Series.str.get
    "pandas.Series.str.get") for PyArrow-backed strings ([GH 53152](https://github.com/pandas-dev/pandas/issues/53152))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.str.split()`](../reference/api/pandas.Series.str.split.html#pandas.Series.str.split
    "pandas.Series.str.split") with `expand=True` for PyArrow-backed strings ([GH
    53585](https://github.com/pandas-dev/pandas/issues/53585))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.to_numpy()`](../reference/api/pandas.Series.to_numpy.html#pandas.Series.to_numpy
    "pandas.Series.to_numpy") when dtype is a NumPy float dtype and `na_value` is
    `np.nan` ([GH 52430](https://github.com/pandas-dev/pandas/issues/52430))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `astype()` when converting from a PyArrow timestamp
    or duration dtype to NumPy ([GH 53326](https://github.com/pandas-dev/pandas/issues/53326))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in various [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") set and indexing operations ([GH 53955](https://github.com/pandas-dev/pandas/issues/53955))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when doing various reshaping operations on [`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") & [`arrays.FloatingArray`](../reference/api/pandas.arrays.FloatingArray.html#pandas.arrays.FloatingArray
    "pandas.arrays.FloatingArray") by avoiding doing unnecessary validation ([GH 53013](https://github.com/pandas-dev/pandas/issues/53013))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when indexing with PyArrow timestamp and duration dtypes
    ([GH 53368](https://github.com/pandas-dev/pandas/issues/53368))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Performance improvement when passing an array to `RangeIndex.take()`, [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc"), or [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") and the DataFrame is using a RangeIndex ([GH 53387](https://github.com/pandas-dev/pandas/issues/53387))  ##
    Bug fixes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`CategoricalIndex.remove_categories()`](../reference/api/pandas.CategoricalIndex.remove_categories.html#pandas.CategoricalIndex.remove_categories
    "pandas.CategoricalIndex.remove_categories") where ordered categories would not
    be maintained ([GH 53935](https://github.com/pandas-dev/pandas/issues/53935)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") with `dtype="category"` for nullable arrays with read-only
    null value masks ([GH 53658](https://github.com/pandas-dev/pandas/issues/53658))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") , where the value of the `na_action` parameter was not used
    if the series held a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") ([GH 22527](https://github.com/pandas-dev/pandas/issues/22527)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`DatetimeIndex.map()` with `na_action="ignore"` now works as expected ([GH
    51644](https://github.com/pandas-dev/pandas/issues/51644))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.slice_indexer()` now raises `KeyError` for non-monotonic indexes
    if either of the slice bounds is not in the index; this behaviour was previously
    deprecated but inconsistently handled ([GH 53983](https://github.com/pandas-dev/pandas/issues/53983))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DateOffset` which had inconsistent behavior when multiplying a `DateOffset`
    object by a constant ([GH 47953](https://github.com/pandas-dev/pandas/issues/47953))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") when `freq` was a `DateOffset` with `nanoseconds` ([GH 46877](https://github.com/pandas-dev/pandas/issues/46877))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") converting [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") containing [`arrays.ArrowExtensionArray`](../reference/api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") of PyArrow timestamps to numpy datetimes
    ([GH 52545](https://github.com/pandas-dev/pandas/issues/52545))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeArray.map()` and `DatetimeIndex.map()`, where the supplied callable
    operated array-wise instead of element-wise ([GH 51977](https://github.com/pandas-dev/pandas/issues/51977))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") raising `ValueError` for PyArrow-backed date like dtypes
    ([GH 53854](https://github.com/pandas-dev/pandas/issues/53854))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.date()`](../reference/api/pandas.Timestamp.date.html#pandas.Timestamp.date
    "pandas.Timestamp.date"), [`Timestamp.isocalendar()`](../reference/api/pandas.Timestamp.isocalendar.html#pandas.Timestamp.isocalendar
    "pandas.Timestamp.isocalendar"), [`Timestamp.timetuple()`](../reference/api/pandas.Timestamp.timetuple.html#pandas.Timestamp.timetuple
    "pandas.Timestamp.timetuple"), and [`Timestamp.toordinal()`](../reference/api/pandas.Timestamp.toordinal.html#pandas.Timestamp.toordinal
    "pandas.Timestamp.toordinal") were returning incorrect results for inputs outside
    those supported by the Python standard library’s datetime module ([GH 53668](https://github.com/pandas-dev/pandas/issues/53668))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.round()`](../reference/api/pandas.Timestamp.round.html#pandas.Timestamp.round
    "pandas.Timestamp.round") with values close to the implementation bounds returning
    incorrect results instead of raising `OutOfBoundsDatetime` ([GH 51494](https://github.com/pandas-dev/pandas/issues/51494))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from a datetime or timedelta scalar always inferring nanosecond
    resolution instead of inferring from the input ([GH 52212](https://github.com/pandas-dev/pandas/issues/52212))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") from a string representing a time without a date inferring
    an incorrect unit ([GH 54097](https://github.com/pandas-dev/pandas/issues/54097))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with `ts_input=pd.NA` raising `TypeError` ([GH 45481](https://github.com/pandas-dev/pandas/issues/45481))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in parsing datetime strings with weekday but no day e.g. “2023 Sept Thu”
    incorrectly raising `AttributeError` instead of `ValueError` ([GH 52659](https://github.com/pandas-dev/pandas/issues/52659))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the repr for [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") when dtype is a timezone aware datetime with non-nanosecond resolution
    raising `OutOfBoundsDatetime` ([GH 54623](https://github.com/pandas-dev/pandas/issues/54623))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") division or multiplication leading to `.freq` of “0 Days”
    instead of `None` ([GH 51575](https://github.com/pandas-dev/pandas/issues/51575))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") with NumPy `timedelta64` objects not properly raising `ValueError`
    ([GH 52806](https://github.com/pandas-dev/pandas/issues/52806))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") converting [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") containing [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") of `pyarrow.duration` to NumPy `timedelta64` ([GH 54298](https://github.com/pandas-dev/pandas/issues/54298))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timedelta.__hash__()`, raising an `OutOfBoundsTimedelta` on certain
    large values of second resolution ([GH 54037](https://github.com/pandas-dev/pandas/issues/54037))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta.round()`](../reference/api/pandas.Timedelta.round.html#pandas.Timedelta.round
    "pandas.Timedelta.round") with values close to the implementation bounds returning
    incorrect results instead of raising `OutOfBoundsTimedelta` ([GH 51494](https://github.com/pandas-dev/pandas/issues/51494))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `TimedeltaIndex.map()` with `na_action="ignore"` ([GH 51644](https://github.com/pandas-dev/pandas/issues/51644))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `arrays.TimedeltaArray.map()` and `TimedeltaIndex.map()`, where the supplied
    callable operated array-wise instead of element-wise ([GH 51977](https://github.com/pandas-dev/pandas/issues/51977))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`infer_freq()`](../reference/api/pandas.infer_freq.html#pandas.infer_freq
    "pandas.infer_freq") that raises `TypeError` for `Series` of timezone-aware timestamps
    ([GH 52456](https://github.com/pandas-dev/pandas/issues/52456))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeTZDtype.base()` that always returns a NumPy dtype with nanosecond
    resolution ([GH 52705](https://github.com/pandas-dev/pandas/issues/52705))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") setting `step` incorrectly when being the subtrahend with
    minuend a numeric value ([GH 53255](https://github.com/pandas-dev/pandas/issues/53255))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.corr()`](../reference/api/pandas.Series.corr.html#pandas.Series.corr
    "pandas.Series.corr") and [`Series.cov()`](../reference/api/pandas.Series.cov.html#pandas.Series.cov
    "pandas.Series.cov") raising `AttributeError` for masked dtypes ([GH 51422](https://github.com/pandas-dev/pandas/issues/51422))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when calling [`Series.kurt()`](../reference/api/pandas.Series.kurt.html#pandas.Series.kurt
    "pandas.Series.kurt") and [`Series.skew()`](../reference/api/pandas.Series.skew.html#pandas.Series.skew
    "pandas.Series.skew") on NumPy data of all zero returning a Python type instead
    of a NumPy type ([GH 53482](https://github.com/pandas-dev/pandas/issues/53482))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.mean()`](../reference/api/pandas.Series.mean.html#pandas.Series.mean
    "pandas.Series.mean"), [`DataFrame.mean()`](../reference/api/pandas.DataFrame.mean.html#pandas.DataFrame.mean
    "pandas.DataFrame.mean") with object-dtype values containing strings that can
    be converted to numbers (e.g. “2”) returning incorrect numeric results; these
    now raise `TypeError` ([GH 36703](https://github.com/pandas-dev/pandas/issues/36703),
    [GH 44008](https://github.com/pandas-dev/pandas/issues/44008))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.corrwith()`](../reference/api/pandas.DataFrame.corrwith.html#pandas.DataFrame.corrwith
    "pandas.DataFrame.corrwith") raising `NotImplementedError` for PyArrow-backed
    dtypes ([GH 52314](https://github.com/pandas-dev/pandas/issues/52314))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.size()`](../reference/api/pandas.DataFrame.size.html#pandas.DataFrame.size
    "pandas.DataFrame.size") and [`Series.size()`](../reference/api/pandas.Series.size.html#pandas.Series.size
    "pandas.Series.size") returning 64-bit integer instead of a Python int ([GH 52897](https://github.com/pandas-dev/pandas/issues/52897))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DateFrame.dot()` returning `object` dtype for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") data ([GH 53979](https://github.com/pandas-dev/pandas/issues/53979))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.any()`](../reference/api/pandas.Series.any.html#pandas.Series.any
    "pandas.Series.any"), [`Series.all()`](../reference/api/pandas.Series.all.html#pandas.Series.all
    "pandas.Series.all"), [`DataFrame.any()`](../reference/api/pandas.DataFrame.any.html#pandas.DataFrame.any
    "pandas.DataFrame.any"), and [`DataFrame.all()`](../reference/api/pandas.DataFrame.all.html#pandas.DataFrame.all
    "pandas.DataFrame.all") had the default value of `bool_only` set to `None` instead
    of `False`; this change should have no impact on users ([GH 53258](https://github.com/pandas-dev/pandas/issues/53258))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.corr()`](../reference/api/pandas.Series.corr.html#pandas.Series.corr
    "pandas.Series.corr") and [`Series.cov()`](../reference/api/pandas.Series.cov.html#pandas.Series.cov
    "pandas.Series.cov") raising `AttributeError` for masked dtypes ([GH 51422](https://github.com/pandas-dev/pandas/issues/51422))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.median()`](../reference/api/pandas.Series.median.html#pandas.Series.median
    "pandas.Series.median") and [`DataFrame.median()`](../reference/api/pandas.DataFrame.median.html#pandas.DataFrame.median
    "pandas.DataFrame.median") with object-dtype values containing strings that can
    be converted to numbers (e.g. “2”) returning incorrect numeric results; these
    now raise `TypeError` ([GH 34671](https://github.com/pandas-dev/pandas/issues/34671))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.sum()`](../reference/api/pandas.Series.sum.html#pandas.Series.sum
    "pandas.Series.sum") converting dtype `uint64` to `int64` ([GH 53401](https://github.com/pandas-dev/pandas/issues/53401))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `DataFrame.style.to_latex()` and `DataFrame.style.to_html()` if the DataFrame
    contains integers with more digits than can be represented by floating point double
    precision ([GH 52272](https://github.com/pandas-dev/pandas/issues/52272))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    when given a `datetime64` or `timedelta64` dtype with unit of “s”, “us”, or “ms”
    returning [`NumpyExtensionArray`](../reference/api/pandas.arrays.NumpyExtensionArray.html#pandas.arrays.NumpyExtensionArray
    "pandas.arrays.NumpyExtensionArray") instead of [`DatetimeArray`](../reference/api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") or [`TimedeltaArray`](../reference/api/pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray") ([GH 52859](https://github.com/pandas-dev/pandas/issues/52859))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    when given an empty list and no dtype returning [`NumpyExtensionArray`](../reference/api/pandas.arrays.NumpyExtensionArray.html#pandas.arrays.NumpyExtensionArray
    "pandas.arrays.NumpyExtensionArray") instead of [`FloatingArray`](../reference/api/pandas.arrays.FloatingArray.html#pandas.arrays.FloatingArray
    "pandas.arrays.FloatingArray") ([GH 54371](https://github.com/pandas-dev/pandas/issues/54371))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ArrowDtype.numpy_dtype()` returning nanosecond units for non-nanosecond
    `pyarrow.timestamp` and `pyarrow.duration` types ([GH 51800](https://github.com/pandas-dev/pandas/issues/51800))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__repr__()` incorrectly raising a `TypeError` when the dtype
    of a column is `np.record` ([GH 48526](https://github.com/pandas-dev/pandas/issues/48526))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.info()`](../reference/api/pandas.DataFrame.info.html#pandas.DataFrame.info
    "pandas.DataFrame.info") raising `ValueError` when `use_numba` is set ([GH 51922](https://github.com/pandas-dev/pandas/issues/51922))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.insert()`](../reference/api/pandas.DataFrame.insert.html#pandas.DataFrame.insert
    "pandas.DataFrame.insert") raising `TypeError` if `loc` is `np.int64` ([GH 53193](https://github.com/pandas-dev/pandas/issues/53193))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`HDFStore.select()`](../reference/api/pandas.HDFStore.select.html#pandas.HDFStore.select
    "pandas.HDFStore.select") loses precision of large int when stored and retrieved
    ([GH 54186](https://github.com/pandas-dev/pandas/issues/54186))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") not supporting `object_` ([GH 54251](https://github.com/pandas-dev/pandas/issues/54251))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.str()`](../reference/api/pandas.Series.str.html#pandas.Series.str
    "pandas.Series.str") that did not raise a `TypeError` when iterated ([GH 54173](https://github.com/pandas-dev/pandas/issues/54173))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `repr` for `DataFrame`` with string-dtype columns ([GH 54797](https://github.com/pandas-dev/pandas/issues/54797))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`IntervalIndex.get_indexer()`](../reference/api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer") and `IntervalIndex.get_indexer_nonunique()`
    raising if `target` is read-only array ([GH 53703](https://github.com/pandas-dev/pandas/issues/53703))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") where the object could be kept alive when deleted ([GH
    54184](https://github.com/pandas-dev/pandas/issues/54184))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`interval_range()`](../reference/api/pandas.interval_range.html#pandas.interval_range
    "pandas.interval_range") where a float `step` would produce incorrect intervals
    from floating point artifacts ([GH 54477](https://github.com/pandas-dev/pandas/issues/54477))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` losing dtype when setting a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") into duplicated columns ([GH 53143](https://github.com/pandas-dev/pandas/issues/53143))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` with a boolean mask and `DataFrame.putmask()`
    with mixed non-numeric dtypes and a value other than `NaN` incorrectly raising
    `TypeError` ([GH 53291](https://github.com/pandas-dev/pandas/issues/53291))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") when using `nan` as the only element ([GH 52234](https://github.com/pandas-dev/pandas/issues/52234))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") casting [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") to `np.dnarray` when assigning [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") at predefined index of `object` dtype [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 48933](https://github.com/pandas-dev/pandas/issues/48933))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") failing to fill across data when `method` is `"pad"`,
    `"ffill"`, `"bfill"`, or `"backfill"` ([GH 53898](https://github.com/pandas-dev/pandas/issues/53898))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") ignoring `inplace` when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") is empty ([GH 53199](https://github.com/pandas-dev/pandas/issues/53199))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin"), [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax"), [`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin"), [`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax") with a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") index containing `NaT` incorrectly returning `NaN` instead
    of `NaT` ([GH 43587](https://github.com/pandas-dev/pandas/issues/43587))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") failing to raise on invalid `downcast` keyword,
    which can be only `None` or `"infer"` ([GH 53103](https://github.com/pandas-dev/pandas/issues/53103))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") with complex dtype incorrectly failing to fill
    `NaN` entries ([GH 53635](https://github.com/pandas-dev/pandas/issues/53635))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.set_levels()`](../reference/api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels") not preserving dtypes for [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") ([GH 52125](https://github.com/pandas-dev/pandas/issues/52125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in displaying a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with a long element ([GH 52960](https://github.com/pandas-dev/pandas/issues/52960))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I/O
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.to_orc()`](../reference/api/pandas.DataFrame.to_orc.html#pandas.DataFrame.to_orc
    "pandas.DataFrame.to_orc") now raising `ValueError` when non-default [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") is given ([GH 51828](https://github.com/pandas-dev/pandas/issues/51828))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") now raising `ValueError` when the name param is left
    empty while using SQLAlchemy to connect ([GH 52675](https://github.com/pandas-dev/pandas/issues/52675))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") could not parse metadata fields list type ([GH 37782](https://github.com/pandas-dev/pandas/issues/37782))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where it would error when `parse_dates` was set to a list or
    dictionary with `engine="pyarrow"` ([GH 47961](https://github.com/pandas-dev/pandas/issues/47961))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `engine="pyarrow"` raising when specifying a `dtype` with
    `index_col` ([GH 53229](https://github.com/pandas-dev/pandas/issues/53229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") not properly closing store after an `IndexError` is raised
    ([GH 52781](https://github.com/pandas-dev/pandas/issues/52781))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") where style elements were read into DataFrames ([GH 52197](https://github.com/pandas-dev/pandas/issues/52197))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") where tail texts were removed together with elements containing
    `display:none` style ([GH 51629](https://github.com/pandas-dev/pandas/issues/51629))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sql_table()`](../reference/api/pandas.read_sql_table.html#pandas.read_sql_table
    "pandas.read_sql_table") raising an exception when reading a view ([GH 52969](https://github.com/pandas-dev/pandas/issues/52969))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql
    "pandas.read_sql") when reading multiple timezone aware columns with the same
    column name ([GH 44421](https://github.com/pandas-dev/pandas/issues/44421))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") stripping whitespace in string data ([GH 53811](https://github.com/pandas-dev/pandas/issues/53811))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") where `colspace` was incorrectly applied in case of
    multi index columns ([GH 53885](https://github.com/pandas-dev/pandas/issues/53885))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") where conversion for an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with complex dtype raised a `ValueError` ([GH 54167](https://github.com/pandas-dev/pandas/issues/54167))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") where `DateTimeArray`/`DateTimeIndex` with non nanosecond
    precision could not be serialized correctly ([GH 53686](https://github.com/pandas-dev/pandas/issues/53686))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when writing and reading empty Stata dta files where dtype information was
    lost ([GH 46240](https://github.com/pandas-dev/pandas/issues/46240))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where `bz2` was treated as a hard requirement ([GH 53857](https://github.com/pandas-dev/pandas/issues/53857))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Period
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") constructor failing to raise `TypeError` when no argument
    is passed or when `None` is passed ([GH 27388](https://github.com/pandas-dev/pandas/issues/27388))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") constructor incorrectly returning the same `normalize` for
    different `DateOffset` `freq` inputs ([GH 24121](https://github.com/pandas-dev/pandas/issues/24121))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") constructor raising `ValueError` instead of `TypeError`
    when an invalid type is passed ([GH 51790](https://github.com/pandas-dev/pandas/issues/51790))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") where the object could be kept alive when deleted ([GH 54184](https://github.com/pandas-dev/pandas/issues/54184))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not processing empty strings as a null value, with `engine="pyarrow"`
    ([GH 52087](https://github.com/pandas-dev/pandas/issues/52087))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") returning `object` dtype columns instead of `float64` dtype
    columns with `engine="pyarrow"` for columns that are all null with `engine="pyarrow"`
    ([GH 52087](https://github.com/pandas-dev/pandas/issues/52087))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period.now()`](../reference/api/pandas.Period.now.html#pandas.Period.now
    "pandas.Period.now") not accepting the `freq` parameter as a keyword argument
    ([GH 53369](https://github.com/pandas-dev/pandas/issues/53369))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `PeriodIndex.map()` with `na_action="ignore"` ([GH 51644](https://github.com/pandas-dev/pandas/issues/51644))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `arrays.PeriodArray.map()` and `PeriodIndex.map()`, where the supplied
    callable operated array-wise instead of element-wise ([GH 51977](https://github.com/pandas-dev/pandas/issues/51977))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in incorrectly allowing construction of [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") or [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") with `CustomBusinessDay` freq; use `BusinessDay` instead
    ([GH 52534](https://github.com/pandas-dev/pandas/issues/52534))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") when invoked with `color=None` ([GH 51953](https://github.com/pandas-dev/pandas/issues/51953))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed UserWarning in [`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") when invoked with `c="b"` ([GH 53908](https://github.com/pandas-dev/pandas/issues/53908))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.idxmin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin"), [`SeriesGroupBy.idxmin()`](../reference/api/pandas.core.groupby.SeriesGroupBy.idxmin.html#pandas.core.groupby.SeriesGroupBy.idxmin
    "pandas.core.groupby.SeriesGroupBy.idxmin"), [`DataFrameGroupBy.idxmax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax"), [`SeriesGroupBy.idxmax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.idxmax.html#pandas.core.groupby.SeriesGroupBy.idxmax
    "pandas.core.groupby.SeriesGroupBy.idxmax") returns wrong dtype when used on an
    empty DataFrameGroupBy or SeriesGroupBy ([GH 51423](https://github.com/pandas-dev/pandas/issues/51423))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.groupby.rank()` on nullable datatypes when passing `na_option="bottom"`
    or `na_option="top"` ([GH 54206](https://github.com/pandas-dev/pandas/issues/54206))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") and [`Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") in incorrectly allowing non-fixed `freq` when resampling
    on a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") ([GH 51896](https://github.com/pandas-dev/pandas/issues/51896))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") and [`Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") losing time zone when resampling empty data ([GH 53664](https://github.com/pandas-dev/pandas/issues/53664))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") and [`Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") where `origin` has no effect in resample when values
    are outside of axis ([GH 53662](https://github.com/pandas-dev/pandas/issues/53662))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in weighted rolling aggregations when specifying `min_periods=0` ([GH 51449](https://github.com/pandas-dev/pandas/issues/51449))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") where, when the index of the grouped [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") was a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") or [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex"), and the `groupby` method was given a function as its first
    argument, the function operated on the whole index rather than each element of
    the index ([GH 51979](https://github.com/pandas-dev/pandas/issues/51979))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") with lists not respecting `as_index=False`
    ([GH 52849](https://github.com/pandas-dev/pandas/issues/52849))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") causing an error to be raised when
    the input [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") was subset as a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") after groupby (`[['a']]` and not `['a']`) and the given callable
    returned [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    that were not all indexed the same ([GH 52444](https://github.com/pandas-dev/pandas/issues/52444))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") raising a `TypeError` when selecting
    multiple columns and providing a function that returns `np.ndarray` results ([GH
    18930](https://github.com/pandas-dev/pandas/issues/18930))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.groups()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.groups.html#pandas.core.groupby.DataFrameGroupBy.groups
    "pandas.core.groupby.DataFrameGroupBy.groups") and [`SeriesGroupBy.groups()`](../reference/api/pandas.core.groupby.SeriesGroupBy.groups.html#pandas.core.groupby.SeriesGroupBy.groups
    "pandas.core.groupby.SeriesGroupBy.groups") with a datetime key in conjunction
    with another key produced an incorrect number of group keys ([GH 51158](https://github.com/pandas-dev/pandas/issues/51158))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile") may implicitly sort the result index
    with `sort=False` ([GH 53009](https://github.com/pandas-dev/pandas/issues/53009))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.size()`](../reference/api/pandas.core.groupby.SeriesGroupBy.size.html#pandas.core.groupby.SeriesGroupBy.size
    "pandas.core.groupby.SeriesGroupBy.size") where the dtype would be `np.int64`
    for data with [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") or masked dtypes (e.g. `Int64`) ([GH 53831](https://github.com/pandas-dev/pandas/issues/53831))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") with column selection on the resulting groupby object
    not returning names as tuples when grouping by a list consisting of a single element
    ([GH 53500](https://github.com/pandas-dev/pandas/issues/53500))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.var()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.var.html#pandas.core.groupby.DataFrameGroupBy.var
    "pandas.core.groupby.DataFrameGroupBy.var") and [`SeriesGroupBy.var()`](../reference/api/pandas.core.groupby.SeriesGroupBy.var.html#pandas.core.groupby.SeriesGroupBy.var
    "pandas.core.groupby.SeriesGroupBy.var") failing to raise `TypeError` when called
    with datetime64, timedelta64 or [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") values ([GH 52128](https://github.com/pandas-dev/pandas/issues/52128),
    [GH 53045](https://github.com/pandas-dev/pandas/issues/53045))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.resample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.resample.html#pandas.core.groupby.DataFrameGroupBy.resample
    "pandas.core.groupby.DataFrameGroupBy.resample") with `kind="period"` raising
    `AttributeError` ([GH 24103](https://github.com/pandas-dev/pandas/issues/24103))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Resampler.ohlc()`](../reference/api/pandas.core.resample.Resampler.ohlc.html#pandas.core.resample.Resampler.ohlc
    "pandas.core.resample.Resampler.ohlc") with empty object returning a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") instead of empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 42902](https://github.com/pandas-dev/pandas/issues/42902))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.count()`](../reference/api/pandas.core.groupby.SeriesGroupBy.count.html#pandas.core.groupby.SeriesGroupBy.count
    "pandas.core.groupby.SeriesGroupBy.count") and [`DataFrameGroupBy.count()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.count.html#pandas.core.groupby.DataFrameGroupBy.count
    "pandas.core.groupby.DataFrameGroupBy.count") where the dtype would be `np.int64`
    for data with [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") or masked dtypes (e.g. `Int64`) ([GH 53831](https://github.com/pandas-dev/pandas/issues/53831))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") and [`DataFrameGroupBy.nth()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") after performing column selection
    when using `dropna="any"` or `dropna="all"` would not subset columns ([GH 53518](https://github.com/pandas-dev/pandas/issues/53518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") and [`DataFrameGroupBy.nth()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") raised after performing column selection
    when using `dropna="any"` or `dropna="all"` resulted in rows being dropped ([GH
    53518](https://github.com/pandas-dev/pandas/issues/53518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.sum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.sum.html#pandas.core.groupby.SeriesGroupBy.sum
    "pandas.core.groupby.SeriesGroupBy.sum") and [`DataFrameGroupBy.sum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum") summing `np.inf + np.inf` and `(-np.inf)
    + (-np.inf)` to `np.nan` instead of `np.inf` and `-np.inf` respectively ([GH 53606](https://github.com/pandas-dev/pandas/issues/53606))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") raising an error when grouped [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") has a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") index and a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a name that is a month is given to the `by` argument ([GH
    48509](https://github.com/pandas-dev/pandas/issues/48509))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    coercing to `object` dtype when one column has `pa.null()` dtype ([GH 53702](https://github.com/pandas-dev/pandas/issues/53702))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") when `dropna=False` would not keep `np.nan` in the result ([GH
    10772](https://github.com/pandas-dev/pandas/issues/10772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt")
    where the `variable` column would lose extension dtypes ([GH 54297](https://github.com/pandas-dev/pandas/issues/54297))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") raising `KeyError` for extension dtypes ([GH 52904](https://github.com/pandas-dev/pandas/issues/52904))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") raising `ValueError` for data backed by read-only ndarrays
    ([GH 53513](https://github.com/pandas-dev/pandas/issues/53513))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") with `left_index=True` or `right_index=True` with mismatched
    index dtypes giving incorrect results in some cases instead of raising `MergeError`
    ([GH 53870](https://github.com/pandas-dev/pandas/issues/53870))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    when merging on integer `ExtensionDtype` and float NumPy dtype raising `TypeError`
    ([GH 46178](https://github.com/pandas-dev/pandas/issues/46178))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") and [`Series.agg()`](../reference/api/pandas.Series.agg.html#pandas.Series.agg
    "pandas.Series.agg") on non-unique columns would return incorrect type when dist-like
    argument passed in ([GH 51099](https://github.com/pandas-dev/pandas/issues/51099))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first") ignoring other’s columns if `other` is empty
    ([GH 53792](https://github.com/pandas-dev/pandas/issues/53792))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin") and [`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax"), where the axis dtype would be lost for empty frames
    ([GH 53265](https://github.com/pandas-dev/pandas/issues/53265))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") not merging correctly when having `MultiIndex` with
    single level ([GH 52331](https://github.com/pandas-dev/pandas/issues/52331))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") losing extension dtypes when columns is a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and frame contains mixed dtypes ([GH 45740](https://github.com/pandas-dev/pandas/issues/45740))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") sorting columns lexicographically ([GH 53786](https://github.com/pandas-dev/pandas/issues/53786))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.transpose()`](../reference/api/pandas.DataFrame.transpose.html#pandas.DataFrame.transpose
    "pandas.DataFrame.transpose") inferring dtype for object column ([GH 51546](https://github.com/pandas-dev/pandas/issues/51546))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.combine_first()`](../reference/api/pandas.Series.combine_first.html#pandas.Series.combine_first
    "pandas.Series.combine_first") converting `int64` dtype to `float64` and losing
    precision on very large integers ([GH 51764](https://github.com/pandas-dev/pandas/issues/51764))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when joining empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects, where the joined index would be a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") instead of the joined index type ([GH 52777](https://github.com/pandas-dev/pandas/issues/52777))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`SparseDtype`](../reference/api/pandas.SparseDtype.html#pandas.SparseDtype
    "pandas.SparseDtype") constructor failing to raise `TypeError` when given an incompatible
    `dtype` for its subtype, which must be a NumPy dtype ([GH 53160](https://github.com/pandas-dev/pandas/issues/53160))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `arrays.SparseArray.map()` allowed the fill value to be included in the
    sparse values ([GH 52095](https://github.com/pandas-dev/pandas/issues/52095))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`ArrowStringArray`](../reference/api/pandas.arrays.ArrowStringArray.html#pandas.arrays.ArrowStringArray
    "pandas.arrays.ArrowStringArray") constructor raises `ValueError` with dictionary
    types of strings ([GH 54074](https://github.com/pandas-dev/pandas/issues/54074))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor not copying [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with extension dtype when given in dict ([GH 53744](https://github.com/pandas-dev/pandas/issues/53744))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`ArrowExtensionArray`](../reference/api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") converting pandas non-nanosecond temporal
    objects from non-zero values to zero values ([GH 53171](https://github.com/pandas-dev/pandas/issues/53171))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.quantile()`](../reference/api/pandas.Series.quantile.html#pandas.Series.quantile
    "pandas.Series.quantile") for PyArrow temporal types raising `ArrowInvalid` ([GH
    52678](https://github.com/pandas-dev/pandas/issues/52678))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rank()`](../reference/api/pandas.Series.rank.html#pandas.Series.rank
    "pandas.Series.rank") returning wrong order for small values with `Float64` dtype
    ([GH 52471](https://github.com/pandas-dev/pandas/issues/52471))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.unique()`](../reference/api/pandas.Series.unique.html#pandas.Series.unique
    "pandas.Series.unique") for boolean `ArrowDtype` with `NA` values ([GH 54667](https://github.com/pandas-dev/pandas/issues/54667))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `__iter__()` and `__getitem__()` returning python datetime and timedelta
    objects for non-nano dtypes ([GH 53326](https://github.com/pandas-dev/pandas/issues/53326))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `factorize()` returning incorrect uniques for a `pyarrow.dictionary`
    type `pyarrow.chunked_array` with more than one chunk ([GH 54844](https://github.com/pandas-dev/pandas/issues/54844))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when passing an `ExtensionArray` subclass to `dtype` keywords. This will
    now raise a `UserWarning` to encourage passing an instance instead ([GH 31356](https://github.com/pandas-dev/pandas/issues/31356),
    [GH 54592](https://github.com/pandas-dev/pandas/issues/54592))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") repr would not work when a column had an [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with a `pyarrow.ExtensionDtype` ([GH 54063](https://github.com/pandas-dev/pandas/issues/54063))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where the `__from_arrow__` method of masked ExtensionDtypes (e.g. [`Float64Dtype`](../reference/api/pandas.Float64Dtype.html#pandas.Float64Dtype
    "pandas.Float64Dtype"), [`BooleanDtype`](../reference/api/pandas.BooleanDtype.html#pandas.BooleanDtype
    "pandas.BooleanDtype")) would not accept PyArrow arrays of type `pyarrow.null()`
    ([GH 52223](https://github.com/pandas-dev/pandas/issues/52223))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styler
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Styler._copy()` calling overridden methods in subclasses of [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") ([GH 52728](https://github.com/pandas-dev/pandas/issues/52728))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metadata
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fixed metadata propagation in [`DataFrame.max()`](../reference/api/pandas.DataFrame.max.html#pandas.DataFrame.max
    "pandas.DataFrame.max"), [`DataFrame.min()`](../reference/api/pandas.DataFrame.min.html#pandas.DataFrame.min
    "pandas.DataFrame.min"), [`DataFrame.prod()`](../reference/api/pandas.DataFrame.prod.html#pandas.DataFrame.prod
    "pandas.DataFrame.prod"), [`DataFrame.mean()`](../reference/api/pandas.DataFrame.mean.html#pandas.DataFrame.mean
    "pandas.DataFrame.mean"), [`Series.mode()`](../reference/api/pandas.Series.mode.html#pandas.Series.mode
    "pandas.Series.mode"), [`DataFrame.median()`](../reference/api/pandas.DataFrame.median.html#pandas.DataFrame.median
    "pandas.DataFrame.median"), [`DataFrame.sem()`](../reference/api/pandas.DataFrame.sem.html#pandas.DataFrame.sem
    "pandas.DataFrame.sem"), [`DataFrame.skew()`](../reference/api/pandas.DataFrame.skew.html#pandas.DataFrame.skew
    "pandas.DataFrame.skew"), [`DataFrame.kurt()`](../reference/api/pandas.DataFrame.kurt.html#pandas.DataFrame.kurt
    "pandas.DataFrame.kurt") ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed metadata propagation in [`DataFrame.squeeze()`](../reference/api/pandas.DataFrame.squeeze.html#pandas.DataFrame.squeeze
    "pandas.DataFrame.squeeze"), and [`DataFrame.describe()`](../reference/api/pandas.DataFrame.describe.html#pandas.DataFrame.describe
    "pandas.DataFrame.describe") ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed metadata propagation in [`DataFrame.std()`](../reference/api/pandas.DataFrame.std.html#pandas.DataFrame.std
    "pandas.DataFrame.std") ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `FloatingArray.__contains__` with `NaN` item incorrectly returning `False`
    when `NaN` values are present ([GH 52840](https://github.com/pandas-dev/pandas/issues/52840))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") raising for data of complex dtype when `NaN` values are present
    ([GH 53627](https://github.com/pandas-dev/pandas/issues/53627))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") where `repr` of index passed with time does not print
    time is midnight and non-day based freq([GH 53470](https://github.com/pandas-dev/pandas/issues/53470))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") and [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") now throw assertion error for two unequal
    sets ([GH 51727](https://github.com/pandas-dev/pandas/issues/51727))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") checks category dtypes even when asked not
    to check index type ([GH 52126](https://github.com/pandas-dev/pandas/issues/52126))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`api.interchange.from_dataframe()`](../reference/api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe
    "pandas.api.interchange.from_dataframe") was not respecting `allow_copy` argument
    ([GH 54322](https://github.com/pandas-dev/pandas/issues/54322))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`api.interchange.from_dataframe()`](../reference/api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe
    "pandas.api.interchange.from_dataframe") was raising during interchanging from
    non-pandas tz-aware data containing null values ([GH 54287](https://github.com/pandas-dev/pandas/issues/54287))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`api.interchange.from_dataframe()`](../reference/api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe
    "pandas.api.interchange.from_dataframe") when converting an empty DataFrame object
    ([GH 53155](https://github.com/pandas-dev/pandas/issues/53155))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`from_dummies()`](../reference/api/pandas.from_dummies.html#pandas.from_dummies
    "pandas.from_dummies") where the resulting [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") did not match the original [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 54300](https://github.com/pandas-dev/pandas/issues/54300))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`from_dummies()`](../reference/api/pandas.from_dummies.html#pandas.from_dummies
    "pandas.from_dummies") where the resulting data would always be `object` dtype
    instead of the dtype of the columns ([GH 54300](https://github.com/pandas-dev/pandas/issues/54300))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.first()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.first.html#pandas.core.groupby.DataFrameGroupBy.first
    "pandas.core.groupby.DataFrameGroupBy.first"), [`DataFrameGroupBy.last()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.last.html#pandas.core.groupby.DataFrameGroupBy.last
    "pandas.core.groupby.DataFrameGroupBy.last"), [`SeriesGroupBy.first()`](../reference/api/pandas.core.groupby.SeriesGroupBy.first.html#pandas.core.groupby.SeriesGroupBy.first
    "pandas.core.groupby.SeriesGroupBy.first"), and [`SeriesGroupBy.last()`](../reference/api/pandas.core.groupby.SeriesGroupBy.last.html#pandas.core.groupby.SeriesGroupBy.last
    "pandas.core.groupby.SeriesGroupBy.last") where an empty group would return `np.nan`
    instead of the corresponding [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") NA value ([GH 39098](https://github.com/pandas-dev/pandas/issues/39098))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") with casting the mean of ints back to an int ([GH
    16676](https://github.com/pandas-dev/pandas/issues/16676))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") with a `fill_value` that should be inferred with a
    `ExtensionDtype` incorrectly inferring `object` dtype ([GH 52586](https://github.com/pandas-dev/pandas/issues/52586))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift") with `axis=1` on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a single `ExtensionDtype` column giving incorrect results
    ([GH 53832](https://github.com/pandas-dev/pandas/issues/53832))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.sort_values()`](../reference/api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values") when a `key` is passed ([GH 52764](https://github.com/pandas-dev/pandas/issues/52764))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.align()`](../reference/api/pandas.Series.align.html#pandas.Series.align
    "pandas.Series.align"), [`DataFrame.align()`](../reference/api/pandas.DataFrame.align.html#pandas.DataFrame.align
    "pandas.DataFrame.align"), [`Series.reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex"), [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex"), [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate"), [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate"), incorrectly failing to raise with method=”asfreq”
    ([GH 53620](https://github.com/pandas-dev/pandas/issues/53620))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.argsort()`](../reference/api/pandas.Series.argsort.html#pandas.Series.argsort
    "pandas.Series.argsort") failing to raise when an invalid `axis` is passed ([GH
    54257](https://github.com/pandas-dev/pandas/issues/54257))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") when giving a callable to an empty series, the returned series
    had `object` dtype. It now keeps the original dtype ([GH 52384](https://github.com/pandas-dev/pandas/issues/52384))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.memory_usage()`](../reference/api/pandas.Series.memory_usage.html#pandas.Series.memory_usage
    "pandas.Series.memory_usage") when `deep=True` throw an error with Series of objects
    and the returned value is incorrect, as it does not take into account GC corrections
    ([GH 51858](https://github.com/pandas-dev/pandas/issues/51858))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`period_range()`](../reference/api/pandas.period_range.html#pandas.period_range
    "pandas.period_range") the default behavior when freq was not passed as an argument
    was incorrect([GH 53687](https://github.com/pandas-dev/pandas/issues/53687))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Fixed incorrect `__name__` attribute of `pandas._libs.json` ([GH 52898](https://github.com/pandas-dev/pandas/issues/52898))  ##
    Contributors'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A total of 266 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: AG +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aarni Koskela
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adrian D’Alessandro +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adrien RUAULT +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ahmad +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aidos Kanapyanov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Malins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexander Seiler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ali Asgar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allison Kwan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amanda Bizzinotto +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andres Algaba +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Angela Seo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anirudh Hegde +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antony Evmorfopoulos +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anushka Bishnoi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ArnaudChanoine +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Artem Vorobyev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arya Sarkar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ashwin Srinath
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Austin Au-Yeung +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Austin Burnett +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bear +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben Mangold +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bernardo Gameiro +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Boyd Kane +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brayan Alexander Muñoz B +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brock
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chetan0402 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Carini
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ChristofKaufmann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clark-W +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conrad Mcgee Stocks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Corrie Bartelheimer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Coulton Theuer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: D067751 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Isaac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniele Nicolodi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Samuel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Seifert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dea Leon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dea María Léon
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deepyaman Datta
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Denis Sapozhnikov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dharani Akurathi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DimiGrammatikakis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dirk Ulbricht +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dmitry Shemetov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dominik Berger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Efkan S. Goktepe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ege Özgüroğlu
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eli Schwartz
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Erdi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fabrizio Primerano +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Facundo Batista +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fangchen Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Felipe Maion +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Francis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Future Programmer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gabriel Kabbe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gaétan Ramet +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gianluca Ficarelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Godwill Agbehonou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guillaume Lemaitre
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guo Ci
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gustavo Vargas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hamidreza Sanaee +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HappyHorse +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Harald Husum +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hugo van Kemenade
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ido Ronen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Irv Lustig
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire (iMac)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JJ +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jarrod Millman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jay +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jessica Greene +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jiawei Zhang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jinli Xiao +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joanna Ge +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jona Sassenhagen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonas Haag
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joshua Shew +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julian Badillo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julian Ortiz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julien Palard +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justin Tyson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justus Magin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kabiir Krishna +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kang Su Min
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ketu Patel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Anderson
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Jan Anker
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Klein +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kostya Farber
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LM +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lars Lien Ankile +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lawrence Mitchell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Liwei Cai +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Loic Diridollou
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luciana Solorzano +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luke Manley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lumberbot (aka Jack)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marat Kopytjuk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Garcia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Edward Gorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MarcoGorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maria Telenczuk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MarvinGravert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mateusz Sokół +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Richards
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Barber +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matus Valo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mia Reimer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Terry +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Tiemann +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Milad Maani Jou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Miles Cranmer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MirijaH +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Miyuu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Natalia Mokeeva
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nathan Goldbaum +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nicklaus Roach +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nicolas Camenisch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nikolay Boev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nirav
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nishu Choudhary
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Noa Tamir
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Noy Hanan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numan Ijaz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Omar Elbaz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas Development Team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parfait Gasana
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parthi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patrick Hoefler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patrick Schleiter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pawel Kranzberg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Philip
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Philip Meier +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pranav Saibhushan Ravuri
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PrathumP +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rahul Siloniya +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rajasvi Vinayak +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rajat Subhra Mukherjee +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ralf Gommers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: RaphSku
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rebecca Chen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Renato Cotrim Maciel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reza (Milad) Maanijou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Shadrach
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rithik Reddy +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert Luce +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ronalido +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rylie Wei +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SOUMYADIP MAL +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sanjith Chockan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sayed Qaiser Ali +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scott Harp +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Se +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shashwat Agrawal
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simar Bassi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Brugman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Hawkins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Høxbro Hansen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Snorf Yang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sortofamudkip +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefan Krawczyk
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefanie Molin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefanie Senger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stelios Petrakis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stijn Van Hoey
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sven
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sylvain MARIE
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sylvain Marié
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terji Petersen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thierry Moisan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas A Caswell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Grainger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Vranken +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tianye Song +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Hoffmann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Loderhose +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Swast
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timon Jurschitsch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tolker-KU +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tomas Pavlik +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Toroi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Torsten Wörtwein
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Travis Gibbs +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Umberto Fasci +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Valerii +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VanMyHu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Victor Momodu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vijay Vaidyanathan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VomV +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Andrea
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Ayd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wolf Behrenhoff +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Xiao Yuan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yao Xiao
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yasin Tatar
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yaxin Li +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yi Wei +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yulia +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yusharth Singh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zach Breger +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhengbo Wang
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: abokey1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ahmad2901 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: assafam +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: auderson
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: august-tengland +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bunardsheng +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cmmck +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cnguyen-03 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: coco +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dependabot[bot]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: giplessis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: github-actions[bot]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gmaiwald +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gmollard +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kathleenhang
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kevx82 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lia2710 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: liang3zy22 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ltartaro +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lusolorz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: m-ganko +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mKlepsch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mattkeanny +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mrastgoo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nabdoni +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: omar-elbaz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: paulreece +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: penelopeysm +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: potap75 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pre-commit-ci[bot] +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: raanasn +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: raj-thapa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ramvikrams +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rebecca-palmer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: reddyrg1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rmhowe425 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: segatrade +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: shteken +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sweisss +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: taytzehao
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tntmatthews +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tpaxman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tzehaoo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: v-mcoutinho +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: wcgonzal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: yonashub
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: yusharth +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ádám Lippai
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Štěpán Műller +  ## Enhancements'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### PyArrow will become a required dependency with pandas 3.0'
  prefs: []
  type: TYPE_NORMAL
- en: '[PyArrow](https://arrow.apache.org/docs/python/index.html) will become a required
    dependency of pandas starting with pandas 3.0\. This decision was made based on
    [PDEP 10](https://pandas.pydata.org/pdeps/0010-required-pyarrow-dependency.html).'
  prefs: []
  type: TYPE_NORMAL
- en: 'This will enable more changes that are hugely beneficial to pandas users, including
    but not limited to:'
  prefs: []
  type: TYPE_NORMAL
- en: inferring strings as PyArrow backed strings by default enabling a significant
    reduction of the memory footprint and huge performance improvements.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: inferring more complex dtypes with PyArrow by default, like `Decimal`, `lists`,
    `bytes`, `structured data` and more.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Better interoperability with other libraries that depend on Apache Arrow.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We are collecting feedback on this decision [here](https://github.com/pandas-dev/pandas/issues/54466).  ###
    Avoid NumPy object dtype for strings by default'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, all strings were stored in columns with NumPy object dtype by default.
    This release introduces an option `future.infer_string` that infers all strings
    as PyArrow backed strings with dtype `"string[pyarrow_numpy]"` instead. This is
    a new string dtype implementation that follows NumPy semantics in comparison operations
    and will return `np.nan` as the missing value indicator. Setting the option will
    also infer the dtype `"string"` as a [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype") with storage set to `"pyarrow_numpy"`, ignoring the value
    behind the option `mode.string_storage`.
  prefs: []
  type: TYPE_NORMAL
- en: This option only works if PyArrow is installed. PyArrow backed strings have
    a significantly reduced memory footprint and provide a big performance improvement
    compared to NumPy object ([GH 54430](https://github.com/pandas-dev/pandas/issues/54430)).
  prefs: []
  type: TYPE_NORMAL
- en: 'The option can be enabled with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'This behavior will become the default with pandas 3.0.  ### DataFrame reductions
    preserve extension dtypes'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions of pandas, the results of DataFrame reductions ([`DataFrame.sum()`](../reference/api/pandas.DataFrame.sum.html#pandas.DataFrame.sum
    "pandas.DataFrame.sum") [`DataFrame.mean()`](../reference/api/pandas.DataFrame.mean.html#pandas.DataFrame.mean
    "pandas.DataFrame.mean") etc.) had NumPy dtypes, even when the DataFrames were
    of extension dtypes. Pandas can now keep the dtypes when doing reductions over
    DataFrame columns with a common dtype ([GH 52788](https://github.com/pandas-dev/pandas/issues/52788)).
  prefs: []
  type: TYPE_NORMAL
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Notice that the dtype is now a masked dtype and PyArrow dtype, respectively,
    while previously it was a NumPy integer dtype.
  prefs: []
  type: TYPE_NORMAL
- en: 'To allow DataFrame reductions to preserve extension dtypes, [`ExtensionArray._reduce()`](../reference/api/pandas.api.extensions.ExtensionArray._reduce.html#pandas.api.extensions.ExtensionArray._reduce
    "pandas.api.extensions.ExtensionArray._reduce") has gotten a new keyword parameter
    `keepdims`. Calling [`ExtensionArray._reduce()`](../reference/api/pandas.api.extensions.ExtensionArray._reduce.html#pandas.api.extensions.ExtensionArray._reduce
    "pandas.api.extensions.ExtensionArray._reduce") with `keepdims=True` should return
    an array of length 1 along the reduction axis. In order to maintain backward compatibility,
    the parameter is not required, but will it become required in the future. If the
    parameter is not found in the signature, DataFrame reductions can not preserve
    extension dtypes. Also, if the parameter is not found, a `FutureWarning` will
    be emitted and type checkers like mypy may complain about the signature not being
    compatible with [`ExtensionArray._reduce()`](../reference/api/pandas.api.extensions.ExtensionArray._reduce.html#pandas.api.extensions.ExtensionArray._reduce
    "pandas.api.extensions.ExtensionArray._reduce").  ### Copy-on-Write improvements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.transform()`](../reference/api/pandas.Series.transform.html#pandas.Series.transform
    "pandas.Series.transform") not respecting Copy-on-Write when `func` modifies [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") inplace ([GH 53747](https://github.com/pandas-dev/pandas/issues/53747))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calling [`Index.values()`](../reference/api/pandas.Index.values.html#pandas.Index.values
    "pandas.Index.values") will now return a read-only NumPy array ([GH 53704](https://github.com/pandas-dev/pandas/issues/53704))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting a [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    into a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    now creates a lazy instead of a deep copy ([GH 53142](https://github.com/pandas-dev/pandas/issues/53142))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor, when constructing a DataFrame from a dictionary of Index objects
    and specifying `copy=False`, will now use a lazy copy of those Index objects for
    the columns of the DataFrame ([GH 52947](https://github.com/pandas-dev/pandas/issues/52947))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A shallow copy of a Series or DataFrame (`df.copy(deep=False)`) will now also
    return a shallow copy of the rows/columns [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") objects instead of only a shallow copy of the data, i.e. the index
    of the result is no longer identical (`df.copy(deep=False).index is df.index`
    is no longer True) ([GH 53721](https://github.com/pandas-dev/pandas/issues/53721))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.head()`](../reference/api/pandas.DataFrame.head.html#pandas.DataFrame.head
    "pandas.DataFrame.head") and [`DataFrame.tail()`](../reference/api/pandas.DataFrame.tail.html#pandas.DataFrame.tail
    "pandas.DataFrame.tail") will now return deep copies ([GH 54011](https://github.com/pandas-dev/pandas/issues/54011))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add lazy copy mechanism to [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") ([GH 53746](https://github.com/pandas-dev/pandas/issues/53746))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Trying to operate inplace on a temporary column selection (for example, `df["a"].fillna(100,
    inplace=True)`) will now always raise a warning when Copy-on-Write is enabled.
    In this mode, operating inplace like this will never work, since the selection
    behaves as a temporary copy. This holds true for:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.update / Series.update
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.fillna / Series.fillna
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.replace / Series.replace
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.clip / Series.clip
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.where / Series.where
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.mask / Series.mask
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.interpolate / Series.interpolate
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.ffill / Series.ffill
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'DataFrame.bfill / Series.bfill  ### New [`DataFrame.map()`](../reference/api/pandas.DataFrame.map.html#pandas.DataFrame.map
    "pandas.DataFrame.map") method and support for ExtensionArrays'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame.map()`](../reference/api/pandas.DataFrame.map.html#pandas.DataFrame.map
    "pandas.DataFrame.map") been added and [`DataFrame.applymap()`](../reference/api/pandas.DataFrame.applymap.html#pandas.DataFrame.applymap
    "pandas.DataFrame.applymap") has been deprecated. [`DataFrame.map()`](../reference/api/pandas.DataFrame.map.html#pandas.DataFrame.map
    "pandas.DataFrame.map") has the same functionality as [`DataFrame.applymap()`](../reference/api/pandas.DataFrame.applymap.html#pandas.DataFrame.applymap
    "pandas.DataFrame.applymap"), but the new name better communicates that this is
    the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    version of [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") ([GH 52353](https://github.com/pandas-dev/pandas/issues/52353)).
  prefs: []
  type: TYPE_NORMAL
- en: When given a callable, [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") applies the callable to all elements of the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"). Similarly, [`DataFrame.map()`](../reference/api/pandas.DataFrame.map.html#pandas.DataFrame.map
    "pandas.DataFrame.map") applies the callable to all elements of the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), while [`Index.map()`](../reference/api/pandas.Index.map.html#pandas.Index.map
    "pandas.Index.map") applies the callable to all elements of the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index").
  prefs: []
  type: TYPE_NORMAL
- en: Frequently, it is not desirable to apply the callable to nan-like values of
    the array and to avoid doing that, the `map` method could be called with `na_action="ignore"`,
    i.e. `ser.map(func, na_action="ignore")`. However, `na_action="ignore"` was not
    implemented for many [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") and `Index` types and `na_action="ignore"`
    did not work correctly for any [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") subclass except the nullable numeric ones
    (i.e. with dtype `Int64` etc.).
  prefs: []
  type: TYPE_NORMAL
- en: '`na_action="ignore"` now works for all array types ([GH 52219](https://github.com/pandas-dev/pandas/issues/52219),
    [GH 51645](https://github.com/pandas-dev/pandas/issues/51645), [GH 51809](https://github.com/pandas-dev/pandas/issues/51809),
    [GH 51936](https://github.com/pandas-dev/pandas/issues/51936), [GH 52033](https://github.com/pandas-dev/pandas/issues/52033);
    [GH 52096](https://github.com/pandas-dev/pandas/issues/52096)).'
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'Also, note that `Categorical.map()` implicitly has had its `na_action` set
    to `"ignore"` by default. This has been deprecated and the default for `Categorical.map()`
    will change to `na_action=None`, consistent with all the other array types.  ###
    New implementation of [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack")'
  prefs: []
  type: TYPE_NORMAL
- en: pandas has reimplemented [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack"). To use the new implementation, pass the argument `future_stack=True`.
    This will become the only option in pandas 3.0.
  prefs: []
  type: TYPE_NORMAL
- en: The previous implementation had two main behavioral downsides.
  prefs: []
  type: TYPE_NORMAL
- en: The previous implementation would unnecessarily introduce NA values into the
    result. The user could have NA values automatically removed by passing `dropna=True`
    (the default), but doing this could also remove NA values from the result that
    existed in the input. See the examples below.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The previous implementation with `sort=True` (the default) would sometimes sort
    part of the resulting index, and sometimes not. If the input’s columns are *not*
    a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex"),
    then the resulting index would never be sorted. If the columns are a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"), then in most cases the level(s) in the resulting index that
    come from stacking the column level(s) would be sorted. In rare cases such level(s)
    would be sorted in a non-standard order, depending on how the columns were created.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The new implementation (`future_stack=True`) will no longer unnecessarily introduce
    NA values when stacking multiple levels and will never sort. As such, the arguments
    `dropna` and `sort` are not utilized and must remain unspecified when using `future_stack=True`.
    These arguments will be removed in the next major release.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: In the previous version (`future_stack=False`), the default of `dropna=True`
    would remove unnecessarily introduced NA values but still coerce the dtype to
    `float64` in the process. In the new version, no NAs are introduced and so there
    is no coercion of the dtype.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: If the input contains NA values, the previous version would drop those as well
    with `dropna=True` or introduce new NA values with `dropna=False`. The new version
    persists all values from the input.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]  ### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.ffill()`](../reference/api/pandas.Series.ffill.html#pandas.Series.ffill
    "pandas.Series.ffill") and [`Series.bfill()`](../reference/api/pandas.Series.bfill.html#pandas.Series.bfill
    "pandas.Series.bfill") are now supported for objects with [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") ([GH 54247](https://github.com/pandas-dev/pandas/issues/54247))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `filters` parameter to [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") to filter out data, compatible with both `engines` ([GH
    53212](https://github.com/pandas-dev/pandas/issues/53212))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.map()` and [`CategoricalIndex.map()`](../reference/api/pandas.CategoricalIndex.map.html#pandas.CategoricalIndex.map
    "pandas.CategoricalIndex.map") now have a `na_action` parameter. `Categorical.map()`
    implicitly had a default value of `"ignore"` for `na_action`. This has formally
    been deprecated and will be changed to `None` in the future. Also notice that
    [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map "pandas.Series.map")
    has default `na_action=None` and calls to series with categorical data will now
    use `na_action=None` unless explicitly set otherwise ([GH 44279](https://github.com/pandas-dev/pandas/issues/44279))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`api.extensions.ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") now has a `map()` method ([GH 51809](https://github.com/pandas-dev/pandas/issues/51809))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.applymap()`](../reference/api/pandas.DataFrame.applymap.html#pandas.DataFrame.applymap
    "pandas.DataFrame.applymap") now uses the `map()` method of underlying [`api.extensions.ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") instances ([GH 52219](https://github.com/pandas-dev/pandas/issues/52219))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`MultiIndex.sort_values()` now supports `na_position` ([GH 51612](https://github.com/pandas-dev/pandas/issues/51612))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.sortlevel()`](../reference/api/pandas.MultiIndex.sortlevel.html#pandas.MultiIndex.sortlevel
    "pandas.MultiIndex.sortlevel") and `Index.sortlevel()` gained a new keyword `na_position`
    ([GH 51612](https://github.com/pandas-dev/pandas/issues/51612))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`arrays.DatetimeArray.map()`, `arrays.TimedeltaArray.map()` and `arrays.PeriodArray.map()`
    can now take a `na_action` argument ([GH 51644](https://github.com/pandas-dev/pandas/issues/51644))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`arrays.SparseArray.map()` now supports `na_action` ([GH 52096](https://github.com/pandas-dev/pandas/issues/52096)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") now supports the `storage_options` keyword when used with
    a URL, allowing users to add headers to the outbound HTTP request ([GH 49944](https://github.com/pandas-dev/pandas/issues/49944))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add `Index.diff()` and `Index.round()` ([GH 19708](https://github.com/pandas-dev/pandas/issues/19708))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add `"latex-math"` as an option to the `escape` argument of [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") which will not escape all characters between
    `"\("` and `"\)"` during formatting ([GH 51903](https://github.com/pandas-dev/pandas/issues/51903))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add dtype of categories to `repr` information of [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") ([GH 52179](https://github.com/pandas-dev/pandas/issues/52179))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding `engine_kwargs` parameter to [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") ([GH 52214](https://github.com/pandas-dev/pandas/issues/52214))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Classes that are useful for type-hinting have been added to the public API in
    the new submodule `pandas.api.typing` ([GH 48577](https://github.com/pandas-dev/pandas/issues/48577))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented [`Series.dt.is_month_start`](../reference/api/pandas.Series.dt.is_month_start.html#pandas.Series.dt.is_month_start
    "pandas.Series.dt.is_month_start"), [`Series.dt.is_month_end`](../reference/api/pandas.Series.dt.is_month_end.html#pandas.Series.dt.is_month_end
    "pandas.Series.dt.is_month_end"), [`Series.dt.is_year_start`](../reference/api/pandas.Series.dt.is_year_start.html#pandas.Series.dt.is_year_start
    "pandas.Series.dt.is_year_start"), [`Series.dt.is_year_end`](../reference/api/pandas.Series.dt.is_year_end.html#pandas.Series.dt.is_year_end
    "pandas.Series.dt.is_year_end"), [`Series.dt.is_quarter_start`](../reference/api/pandas.Series.dt.is_quarter_start.html#pandas.Series.dt.is_quarter_start
    "pandas.Series.dt.is_quarter_start"), [`Series.dt.is_quarter_end`](../reference/api/pandas.Series.dt.is_quarter_end.html#pandas.Series.dt.is_quarter_end
    "pandas.Series.dt.is_quarter_end"), [`Series.dt.days_in_month`](../reference/api/pandas.Series.dt.days_in_month.html#pandas.Series.dt.days_in_month
    "pandas.Series.dt.days_in_month"), [`Series.dt.unit`](../reference/api/pandas.Series.dt.unit.html#pandas.Series.dt.unit
    "pandas.Series.dt.unit"), [`Series.dt.normalize`](../reference/api/pandas.Series.dt.normalize.html#pandas.Series.dt.normalize
    "pandas.Series.dt.normalize"), [`Series.dt.day_name()`](../reference/api/pandas.Series.dt.day_name.html#pandas.Series.dt.day_name
    "pandas.Series.dt.day_name"), [`Series.dt.month_name()`](../reference/api/pandas.Series.dt.month_name.html#pandas.Series.dt.month_name
    "pandas.Series.dt.month_name"), [`Series.dt.tz_convert()`](../reference/api/pandas.Series.dt.tz_convert.html#pandas.Series.dt.tz_convert
    "pandas.Series.dt.tz_convert") for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.timestamp` ([GH 52388](https://github.com/pandas-dev/pandas/issues/52388),
    [GH 51718](https://github.com/pandas-dev/pandas/issues/51718))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") and [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") now support grouping by multiple
    keys when the index is not a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") for `engine="numba"` ([GH 53486](https://github.com/pandas-dev/pandas/issues/53486))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`SeriesGroupBy.agg()`](../reference/api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg") and [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") now support passing in multiple functions
    for `engine="numba"` ([GH 53486](https://github.com/pandas-dev/pandas/issues/53486))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") and [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") now support passing in a string
    as the function for `engine="numba"` ([GH 53579](https://github.com/pandas-dev/pandas/issues/53579))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") gained the `sort` keyword to dictate whether the resulting
    [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    levels are sorted ([GH 15105](https://github.com/pandas-dev/pandas/issues/15105))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") gained the `sort` keyword to dictate whether the resulting
    [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    levels are sorted ([GH 15105](https://github.com/pandas-dev/pandas/issues/15105))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode") now supports PyArrow-backed list types ([GH 53602](https://github.com/pandas-dev/pandas/issues/53602))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.str.join()`](../reference/api/pandas.Series.str.join.html#pandas.Series.str.join
    "pandas.Series.str.join") now supports `ArrowDtype(pa.string())` ([GH 53646](https://github.com/pandas-dev/pandas/issues/53646))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add `validate` parameter to [`Categorical.from_codes()`](../reference/api/pandas.Categorical.from_codes.html#pandas.Categorical.from_codes
    "pandas.Categorical.from_codes") ([GH 50975](https://github.com/pandas-dev/pandas/issues/50975))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`ExtensionArray.interpolate()`](../reference/api/pandas.api.extensions.ExtensionArray.interpolate.html#pandas.api.extensions.ExtensionArray.interpolate
    "pandas.api.extensions.ExtensionArray.interpolate") used by [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") ([GH 53659](https://github.com/pandas-dev/pandas/issues/53659))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `engine_kwargs` parameter to [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") ([GH 53220](https://github.com/pandas-dev/pandas/issues/53220))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented [`api.interchange.from_dataframe()`](../reference/api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe
    "pandas.api.interchange.from_dataframe") for [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") ([GH 54239](https://github.com/pandas-dev/pandas/issues/54239))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented `__from_arrow__` on [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") ([GH 52201](https://github.com/pandas-dev/pandas/issues/52201))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented `__pandas_priority__` to allow custom types to take precedence over
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame"),
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index"), or
    [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") for arithmetic operations, [see the developer
    guide](../development/extending.html#extending-pandas-priority) ([GH 48347](https://github.com/pandas-dev/pandas/issues/48347))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve error message when having incompatible columns using [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") ([GH 51861](https://github.com/pandas-dev/pandas/issues/51861))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve error message when setting [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with wrong number of columns through `DataFrame.isetitem()`
    ([GH 51701](https://github.com/pandas-dev/pandas/issues/51701))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error handling when using [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") with incompatible `index` and `orient` arguments ([GH
    52143](https://github.com/pandas-dev/pandas/issues/52143))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when creating a DataFrame with empty data (0 rows), no
    index and an incorrect number of columns ([GH 52084](https://github.com/pandas-dev/pandas/issues/52084))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when providing an invalid `index` or `offset` argument
    to [`VariableOffsetWindowIndexer`](../reference/api/pandas.api.indexers.VariableOffsetWindowIndexer.html#pandas.api.indexers.VariableOffsetWindowIndexer
    "pandas.api.indexers.VariableOffsetWindowIndexer") ([GH 54379](https://github.com/pandas-dev/pandas/issues/54379))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let [`DataFrame.to_feather()`](../reference/api/pandas.DataFrame.to_feather.html#pandas.DataFrame.to_feather
    "pandas.DataFrame.to_feather") accept a non-default [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") and non-string column names ([GH 51787](https://github.com/pandas-dev/pandas/issues/51787))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added a new parameter `by_row` to [`Series.apply()`](../reference/api/pandas.Series.apply.html#pandas.Series.apply
    "pandas.Series.apply") and [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply"). When set to `False` the supplied callables will always
    operate on the whole Series or DataFrame ([GH 53400](https://github.com/pandas-dev/pandas/issues/53400),
    [GH 53601](https://github.com/pandas-dev/pandas/issues/53601)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift") and [`Series.shift()`](../reference/api/pandas.Series.shift.html#pandas.Series.shift
    "pandas.Series.shift") now allow shifting by multiple periods by supplying a list
    of periods ([GH 44424](https://github.com/pandas-dev/pandas/issues/44424))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby aggregations with `numba` (such as [`DataFrameGroupBy.sum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum")) now can preserve the dtype of the
    input instead of casting to `float64` ([GH 44952](https://github.com/pandas-dev/pandas/issues/44952))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") failed ([GH 52930](https://github.com/pandas-dev/pandas/issues/52930))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Many read/to_* functions, such as [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle") and [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), support forwarding compression arguments to `lzma.LZMAFile`
    ([GH 52979](https://github.com/pandas-dev/pandas/issues/52979))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reductions [`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax"), [`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin"), [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax"), [`Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin"), [`Index.argmax()`](../reference/api/pandas.Index.argmax.html#pandas.Index.argmax
    "pandas.Index.argmax"), [`Index.argmin()`](../reference/api/pandas.Index.argmin.html#pandas.Index.argmin
    "pandas.Index.argmin"), [`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax"), [`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin") are now supported for object-dtype ([GH 4279](https://github.com/pandas-dev/pandas/issues/4279),
    [GH 18021](https://github.com/pandas-dev/pandas/issues/18021), [GH 40685](https://github.com/pandas-dev/pandas/issues/40685),
    [GH 43697](https://github.com/pandas-dev/pandas/issues/43697))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") and [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") will now write and read `attrs` respectively ([GH 54346](https://github.com/pandas-dev/pandas/issues/54346))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.all()`](../reference/api/pandas.Index.all.html#pandas.Index.all "pandas.Index.all")
    and [`Index.any()`](../reference/api/pandas.Index.any.html#pandas.Index.any "pandas.Index.any")
    with floating dtypes and timedelta64 dtypes no longer raise `TypeError`, matching
    the [`Series.all()`](../reference/api/pandas.Series.all.html#pandas.Series.all
    "pandas.Series.all") and [`Series.any()`](../reference/api/pandas.Series.any.html#pandas.Series.any
    "pandas.Series.any") behavior ([GH 54566](https://github.com/pandas-dev/pandas/issues/54566))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.cummax()`](../reference/api/pandas.Series.cummax.html#pandas.Series.cummax
    "pandas.Series.cummax"), [`Series.cummin()`](../reference/api/pandas.Series.cummin.html#pandas.Series.cummin
    "pandas.Series.cummin") and [`Series.cumprod()`](../reference/api/pandas.Series.cumprod.html#pandas.Series.cumprod
    "pandas.Series.cumprod") are now supported for pyarrow dtypes with pyarrow version
    13.0 and above ([GH 52085](https://github.com/pandas-dev/pandas/issues/52085))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for the DataFrame Consortium Standard ([GH 54383](https://github.com/pandas-dev/pandas/issues/54383))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile") ([GH 51722](https://github.com/pandas-dev/pandas/issues/51722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'PyArrow-backed integer dtypes now support bitwise operations ([GH 54495](https://github.com/pandas-dev/pandas/issues/54495))  ###
    PyArrow will become a required dependency with pandas 3.0'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PyArrow](https://arrow.apache.org/docs/python/index.html) will become a required
    dependency of pandas starting with pandas 3.0\. This decision was made based on
    [PDEP 10](https://pandas.pydata.org/pdeps/0010-required-pyarrow-dependency.html).'
  prefs: []
  type: TYPE_NORMAL
- en: 'This will enable more changes that are hugely beneficial to pandas users, including
    but not limited to:'
  prefs: []
  type: TYPE_NORMAL
- en: inferring strings as PyArrow backed strings by default enabling a significant
    reduction of the memory footprint and huge performance improvements.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: inferring more complex dtypes with PyArrow by default, like `Decimal`, `lists`,
    `bytes`, `structured data` and more.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Better interoperability with other libraries that depend on Apache Arrow.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We are collecting feedback on this decision [here](https://github.com/pandas-dev/pandas/issues/54466).
  prefs: []
  type: TYPE_NORMAL
- en: '### Avoid NumPy object dtype for strings by default'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, all strings were stored in columns with NumPy object dtype by default.
    This release introduces an option `future.infer_string` that infers all strings
    as PyArrow backed strings with dtype `"string[pyarrow_numpy]"` instead. This is
    a new string dtype implementation that follows NumPy semantics in comparison operations
    and will return `np.nan` as the missing value indicator. Setting the option will
    also infer the dtype `"string"` as a [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype") with storage set to `"pyarrow_numpy"`, ignoring the value
    behind the option `mode.string_storage`.
  prefs: []
  type: TYPE_NORMAL
- en: This option only works if PyArrow is installed. PyArrow backed strings have
    a significantly reduced memory footprint and provide a big performance improvement
    compared to NumPy object ([GH 54430](https://github.com/pandas-dev/pandas/issues/54430)).
  prefs: []
  type: TYPE_NORMAL
- en: 'The option can be enabled with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: This behavior will become the default with pandas 3.0.
  prefs: []
  type: TYPE_NORMAL
- en: '### DataFrame reductions preserve extension dtypes'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions of pandas, the results of DataFrame reductions ([`DataFrame.sum()`](../reference/api/pandas.DataFrame.sum.html#pandas.DataFrame.sum
    "pandas.DataFrame.sum") [`DataFrame.mean()`](../reference/api/pandas.DataFrame.mean.html#pandas.DataFrame.mean
    "pandas.DataFrame.mean") etc.) had NumPy dtypes, even when the DataFrames were
    of extension dtypes. Pandas can now keep the dtypes when doing reductions over
    DataFrame columns with a common dtype ([GH 52788](https://github.com/pandas-dev/pandas/issues/52788)).
  prefs: []
  type: TYPE_NORMAL
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: Notice that the dtype is now a masked dtype and PyArrow dtype, respectively,
    while previously it was a NumPy integer dtype.
  prefs: []
  type: TYPE_NORMAL
- en: To allow DataFrame reductions to preserve extension dtypes, [`ExtensionArray._reduce()`](../reference/api/pandas.api.extensions.ExtensionArray._reduce.html#pandas.api.extensions.ExtensionArray._reduce
    "pandas.api.extensions.ExtensionArray._reduce") has gotten a new keyword parameter
    `keepdims`. Calling [`ExtensionArray._reduce()`](../reference/api/pandas.api.extensions.ExtensionArray._reduce.html#pandas.api.extensions.ExtensionArray._reduce
    "pandas.api.extensions.ExtensionArray._reduce") with `keepdims=True` should return
    an array of length 1 along the reduction axis. In order to maintain backward compatibility,
    the parameter is not required, but will it become required in the future. If the
    parameter is not found in the signature, DataFrame reductions can not preserve
    extension dtypes. Also, if the parameter is not found, a `FutureWarning` will
    be emitted and type checkers like mypy may complain about the signature not being
    compatible with [`ExtensionArray._reduce()`](../reference/api/pandas.api.extensions.ExtensionArray._reduce.html#pandas.api.extensions.ExtensionArray._reduce
    "pandas.api.extensions.ExtensionArray._reduce").
  prefs: []
  type: TYPE_NORMAL
- en: '### Copy-on-Write improvements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.transform()`](../reference/api/pandas.Series.transform.html#pandas.Series.transform
    "pandas.Series.transform") not respecting Copy-on-Write when `func` modifies [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") inplace ([GH 53747](https://github.com/pandas-dev/pandas/issues/53747))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calling [`Index.values()`](../reference/api/pandas.Index.values.html#pandas.Index.values
    "pandas.Index.values") will now return a read-only NumPy array ([GH 53704](https://github.com/pandas-dev/pandas/issues/53704))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting a [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    into a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    now creates a lazy instead of a deep copy ([GH 53142](https://github.com/pandas-dev/pandas/issues/53142))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor, when constructing a DataFrame from a dictionary of Index objects
    and specifying `copy=False`, will now use a lazy copy of those Index objects for
    the columns of the DataFrame ([GH 52947](https://github.com/pandas-dev/pandas/issues/52947))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A shallow copy of a Series or DataFrame (`df.copy(deep=False)`) will now also
    return a shallow copy of the rows/columns [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") objects instead of only a shallow copy of the data, i.e. the index
    of the result is no longer identical (`df.copy(deep=False).index is df.index`
    is no longer True) ([GH 53721](https://github.com/pandas-dev/pandas/issues/53721))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.head()`](../reference/api/pandas.DataFrame.head.html#pandas.DataFrame.head
    "pandas.DataFrame.head") and [`DataFrame.tail()`](../reference/api/pandas.DataFrame.tail.html#pandas.DataFrame.tail
    "pandas.DataFrame.tail") will now return deep copies ([GH 54011](https://github.com/pandas-dev/pandas/issues/54011))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add lazy copy mechanism to [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") ([GH 53746](https://github.com/pandas-dev/pandas/issues/53746))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Trying to operate inplace on a temporary column selection (for example, `df["a"].fillna(100,
    inplace=True)`) will now always raise a warning when Copy-on-Write is enabled.
    In this mode, operating inplace like this will never work, since the selection
    behaves as a temporary copy. This holds true for:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.update / Series.update
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.fillna / Series.fillna
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.replace / Series.replace
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.clip / Series.clip
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.where / Series.where
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.mask / Series.mask
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.interpolate / Series.interpolate
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.ffill / Series.ffill
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DataFrame.bfill / Series.bfill
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '### New [`DataFrame.map()`](../reference/api/pandas.DataFrame.map.html#pandas.DataFrame.map
    "pandas.DataFrame.map") method and support for ExtensionArrays'
  prefs: []
  type: TYPE_NORMAL
- en: The [`DataFrame.map()`](../reference/api/pandas.DataFrame.map.html#pandas.DataFrame.map
    "pandas.DataFrame.map") been added and [`DataFrame.applymap()`](../reference/api/pandas.DataFrame.applymap.html#pandas.DataFrame.applymap
    "pandas.DataFrame.applymap") has been deprecated. [`DataFrame.map()`](../reference/api/pandas.DataFrame.map.html#pandas.DataFrame.map
    "pandas.DataFrame.map") has the same functionality as [`DataFrame.applymap()`](../reference/api/pandas.DataFrame.applymap.html#pandas.DataFrame.applymap
    "pandas.DataFrame.applymap"), but the new name better communicates that this is
    the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    version of [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") ([GH 52353](https://github.com/pandas-dev/pandas/issues/52353)).
  prefs: []
  type: TYPE_NORMAL
- en: When given a callable, [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") applies the callable to all elements of the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"). Similarly, [`DataFrame.map()`](../reference/api/pandas.DataFrame.map.html#pandas.DataFrame.map
    "pandas.DataFrame.map") applies the callable to all elements of the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), while [`Index.map()`](../reference/api/pandas.Index.map.html#pandas.Index.map
    "pandas.Index.map") applies the callable to all elements of the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index").
  prefs: []
  type: TYPE_NORMAL
- en: Frequently, it is not desirable to apply the callable to nan-like values of
    the array and to avoid doing that, the `map` method could be called with `na_action="ignore"`,
    i.e. `ser.map(func, na_action="ignore")`. However, `na_action="ignore"` was not
    implemented for many [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") and `Index` types and `na_action="ignore"`
    did not work correctly for any [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") subclass except the nullable numeric ones
    (i.e. with dtype `Int64` etc.).
  prefs: []
  type: TYPE_NORMAL
- en: '`na_action="ignore"` now works for all array types ([GH 52219](https://github.com/pandas-dev/pandas/issues/52219),
    [GH 51645](https://github.com/pandas-dev/pandas/issues/51645), [GH 51809](https://github.com/pandas-dev/pandas/issues/51809),
    [GH 51936](https://github.com/pandas-dev/pandas/issues/51936), [GH 52033](https://github.com/pandas-dev/pandas/issues/52033);
    [GH 52096](https://github.com/pandas-dev/pandas/issues/52096)).'
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: Also, note that `Categorical.map()` implicitly has had its `na_action` set to
    `"ignore"` by default. This has been deprecated and the default for `Categorical.map()`
    will change to `na_action=None`, consistent with all the other array types.
  prefs: []
  type: TYPE_NORMAL
- en: '### New implementation of [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack")'
  prefs: []
  type: TYPE_NORMAL
- en: pandas has reimplemented [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack"). To use the new implementation, pass the argument `future_stack=True`.
    This will become the only option in pandas 3.0.
  prefs: []
  type: TYPE_NORMAL
- en: The previous implementation had two main behavioral downsides.
  prefs: []
  type: TYPE_NORMAL
- en: The previous implementation would unnecessarily introduce NA values into the
    result. The user could have NA values automatically removed by passing `dropna=True`
    (the default), but doing this could also remove NA values from the result that
    existed in the input. See the examples below.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The previous implementation with `sort=True` (the default) would sometimes sort
    part of the resulting index, and sometimes not. If the input’s columns are *not*
    a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex"),
    then the resulting index would never be sorted. If the columns are a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"), then in most cases the level(s) in the resulting index that
    come from stacking the column level(s) would be sorted. In rare cases such level(s)
    would be sorted in a non-standard order, depending on how the columns were created.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The new implementation (`future_stack=True`) will no longer unnecessarily introduce
    NA values when stacking multiple levels and will never sort. As such, the arguments
    `dropna` and `sort` are not utilized and must remain unspecified when using `future_stack=True`.
    These arguments will be removed in the next major release.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: In the previous version (`future_stack=False`), the default of `dropna=True`
    would remove unnecessarily introduced NA values but still coerce the dtype to
    `float64` in the process. In the new version, no NAs are introduced and so there
    is no coercion of the dtype.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: If the input contains NA values, the previous version would drop those as well
    with `dropna=True` or introduce new NA values with `dropna=False`. The new version
    persists all values from the input.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: '### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.ffill()`](../reference/api/pandas.Series.ffill.html#pandas.Series.ffill
    "pandas.Series.ffill") and [`Series.bfill()`](../reference/api/pandas.Series.bfill.html#pandas.Series.bfill
    "pandas.Series.bfill") are now supported for objects with [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") ([GH 54247](https://github.com/pandas-dev/pandas/issues/54247))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `filters` parameter to [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") to filter out data, compatible with both `engines` ([GH
    53212](https://github.com/pandas-dev/pandas/issues/53212))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.map()` and [`CategoricalIndex.map()`](../reference/api/pandas.CategoricalIndex.map.html#pandas.CategoricalIndex.map
    "pandas.CategoricalIndex.map") now have a `na_action` parameter. `Categorical.map()`
    implicitly had a default value of `"ignore"` for `na_action`. This has formally
    been deprecated and will be changed to `None` in the future. Also notice that
    [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map "pandas.Series.map")
    has default `na_action=None` and calls to series with categorical data will now
    use `na_action=None` unless explicitly set otherwise ([GH 44279](https://github.com/pandas-dev/pandas/issues/44279))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`api.extensions.ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") now has a `map()` method ([GH 51809](https://github.com/pandas-dev/pandas/issues/51809))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.applymap()`](../reference/api/pandas.DataFrame.applymap.html#pandas.DataFrame.applymap
    "pandas.DataFrame.applymap") now uses the `map()` method of underlying [`api.extensions.ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") instances ([GH 52219](https://github.com/pandas-dev/pandas/issues/52219))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`MultiIndex.sort_values()` now supports `na_position` ([GH 51612](https://github.com/pandas-dev/pandas/issues/51612))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.sortlevel()`](../reference/api/pandas.MultiIndex.sortlevel.html#pandas.MultiIndex.sortlevel
    "pandas.MultiIndex.sortlevel") and `Index.sortlevel()` gained a new keyword `na_position`
    ([GH 51612](https://github.com/pandas-dev/pandas/issues/51612))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`arrays.DatetimeArray.map()`, `arrays.TimedeltaArray.map()` and `arrays.PeriodArray.map()`
    can now take a `na_action` argument ([GH 51644](https://github.com/pandas-dev/pandas/issues/51644))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`arrays.SparseArray.map()` now supports `na_action` ([GH 52096](https://github.com/pandas-dev/pandas/issues/52096)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") now supports the `storage_options` keyword when used with
    a URL, allowing users to add headers to the outbound HTTP request ([GH 49944](https://github.com/pandas-dev/pandas/issues/49944))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add `Index.diff()` and `Index.round()` ([GH 19708](https://github.com/pandas-dev/pandas/issues/19708))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add `"latex-math"` as an option to the `escape` argument of [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") which will not escape all characters between
    `"\("` and `"\)"` during formatting ([GH 51903](https://github.com/pandas-dev/pandas/issues/51903))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add dtype of categories to `repr` information of [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") ([GH 52179](https://github.com/pandas-dev/pandas/issues/52179))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding `engine_kwargs` parameter to [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") ([GH 52214](https://github.com/pandas-dev/pandas/issues/52214))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Classes that are useful for type-hinting have been added to the public API in
    the new submodule `pandas.api.typing` ([GH 48577](https://github.com/pandas-dev/pandas/issues/48577))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented [`Series.dt.is_month_start`](../reference/api/pandas.Series.dt.is_month_start.html#pandas.Series.dt.is_month_start
    "pandas.Series.dt.is_month_start"), [`Series.dt.is_month_end`](../reference/api/pandas.Series.dt.is_month_end.html#pandas.Series.dt.is_month_end
    "pandas.Series.dt.is_month_end"), [`Series.dt.is_year_start`](../reference/api/pandas.Series.dt.is_year_start.html#pandas.Series.dt.is_year_start
    "pandas.Series.dt.is_year_start"), [`Series.dt.is_year_end`](../reference/api/pandas.Series.dt.is_year_end.html#pandas.Series.dt.is_year_end
    "pandas.Series.dt.is_year_end"), [`Series.dt.is_quarter_start`](../reference/api/pandas.Series.dt.is_quarter_start.html#pandas.Series.dt.is_quarter_start
    "pandas.Series.dt.is_quarter_start"), [`Series.dt.is_quarter_end`](../reference/api/pandas.Series.dt.is_quarter_end.html#pandas.Series.dt.is_quarter_end
    "pandas.Series.dt.is_quarter_end"), [`Series.dt.days_in_month`](../reference/api/pandas.Series.dt.days_in_month.html#pandas.Series.dt.days_in_month
    "pandas.Series.dt.days_in_month"), [`Series.dt.unit`](../reference/api/pandas.Series.dt.unit.html#pandas.Series.dt.unit
    "pandas.Series.dt.unit"), [`Series.dt.normalize`](../reference/api/pandas.Series.dt.normalize.html#pandas.Series.dt.normalize
    "pandas.Series.dt.normalize"), [`Series.dt.day_name()`](../reference/api/pandas.Series.dt.day_name.html#pandas.Series.dt.day_name
    "pandas.Series.dt.day_name"), [`Series.dt.month_name()`](../reference/api/pandas.Series.dt.month_name.html#pandas.Series.dt.month_name
    "pandas.Series.dt.month_name"), [`Series.dt.tz_convert()`](../reference/api/pandas.Series.dt.tz_convert.html#pandas.Series.dt.tz_convert
    "pandas.Series.dt.tz_convert") for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.timestamp` ([GH 52388](https://github.com/pandas-dev/pandas/issues/52388),
    [GH 51718](https://github.com/pandas-dev/pandas/issues/51718))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") and [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") now support grouping by multiple
    keys when the index is not a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") for `engine="numba"` ([GH 53486](https://github.com/pandas-dev/pandas/issues/53486))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`SeriesGroupBy.agg()`](../reference/api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg") and [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") now support passing in multiple functions
    for `engine="numba"` ([GH 53486](https://github.com/pandas-dev/pandas/issues/53486))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") and [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") now support passing in a string
    as the function for `engine="numba"` ([GH 53579](https://github.com/pandas-dev/pandas/issues/53579))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") gained the `sort` keyword to dictate whether the resulting
    [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    levels are sorted ([GH 15105](https://github.com/pandas-dev/pandas/issues/15105))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") gained the `sort` keyword to dictate whether the resulting
    [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    levels are sorted ([GH 15105](https://github.com/pandas-dev/pandas/issues/15105))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode") now supports PyArrow-backed list types ([GH 53602](https://github.com/pandas-dev/pandas/issues/53602))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.str.join()`](../reference/api/pandas.Series.str.join.html#pandas.Series.str.join
    "pandas.Series.str.join") now supports `ArrowDtype(pa.string())` ([GH 53646](https://github.com/pandas-dev/pandas/issues/53646))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add `validate` parameter to [`Categorical.from_codes()`](../reference/api/pandas.Categorical.from_codes.html#pandas.Categorical.from_codes
    "pandas.Categorical.from_codes") ([GH 50975](https://github.com/pandas-dev/pandas/issues/50975))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`ExtensionArray.interpolate()`](../reference/api/pandas.api.extensions.ExtensionArray.interpolate.html#pandas.api.extensions.ExtensionArray.interpolate
    "pandas.api.extensions.ExtensionArray.interpolate") used by [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") ([GH 53659](https://github.com/pandas-dev/pandas/issues/53659))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `engine_kwargs` parameter to [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") ([GH 53220](https://github.com/pandas-dev/pandas/issues/53220))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented [`api.interchange.from_dataframe()`](../reference/api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe
    "pandas.api.interchange.from_dataframe") for [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") ([GH 54239](https://github.com/pandas-dev/pandas/issues/54239))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented `__from_arrow__` on [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") ([GH 52201](https://github.com/pandas-dev/pandas/issues/52201))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented `__pandas_priority__` to allow custom types to take precedence over
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame"),
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index"), or
    [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") for arithmetic operations, [see the developer
    guide](../development/extending.html#extending-pandas-priority) ([GH 48347](https://github.com/pandas-dev/pandas/issues/48347))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve error message when having incompatible columns using [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") ([GH 51861](https://github.com/pandas-dev/pandas/issues/51861))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve error message when setting [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with wrong number of columns through `DataFrame.isetitem()`
    ([GH 51701](https://github.com/pandas-dev/pandas/issues/51701))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error handling when using [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") with incompatible `index` and `orient` arguments ([GH
    52143](https://github.com/pandas-dev/pandas/issues/52143))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when creating a DataFrame with empty data (0 rows), no
    index and an incorrect number of columns ([GH 52084](https://github.com/pandas-dev/pandas/issues/52084))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when providing an invalid `index` or `offset` argument
    to [`VariableOffsetWindowIndexer`](../reference/api/pandas.api.indexers.VariableOffsetWindowIndexer.html#pandas.api.indexers.VariableOffsetWindowIndexer
    "pandas.api.indexers.VariableOffsetWindowIndexer") ([GH 54379](https://github.com/pandas-dev/pandas/issues/54379))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let [`DataFrame.to_feather()`](../reference/api/pandas.DataFrame.to_feather.html#pandas.DataFrame.to_feather
    "pandas.DataFrame.to_feather") accept a non-default [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") and non-string column names ([GH 51787](https://github.com/pandas-dev/pandas/issues/51787))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added a new parameter `by_row` to [`Series.apply()`](../reference/api/pandas.Series.apply.html#pandas.Series.apply
    "pandas.Series.apply") and [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply"). When set to `False` the supplied callables will always
    operate on the whole Series or DataFrame ([GH 53400](https://github.com/pandas-dev/pandas/issues/53400),
    [GH 53601](https://github.com/pandas-dev/pandas/issues/53601)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift") and [`Series.shift()`](../reference/api/pandas.Series.shift.html#pandas.Series.shift
    "pandas.Series.shift") now allow shifting by multiple periods by supplying a list
    of periods ([GH 44424](https://github.com/pandas-dev/pandas/issues/44424))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby aggregations with `numba` (such as [`DataFrameGroupBy.sum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum")) now can preserve the dtype of the
    input instead of casting to `float64` ([GH 44952](https://github.com/pandas-dev/pandas/issues/44952))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") failed ([GH 52930](https://github.com/pandas-dev/pandas/issues/52930))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Many read/to_* functions, such as [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle") and [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), support forwarding compression arguments to `lzma.LZMAFile`
    ([GH 52979](https://github.com/pandas-dev/pandas/issues/52979))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reductions [`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax"), [`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin"), [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax"), [`Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin"), [`Index.argmax()`](../reference/api/pandas.Index.argmax.html#pandas.Index.argmax
    "pandas.Index.argmax"), [`Index.argmin()`](../reference/api/pandas.Index.argmin.html#pandas.Index.argmin
    "pandas.Index.argmin"), [`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax"), [`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin") are now supported for object-dtype ([GH 4279](https://github.com/pandas-dev/pandas/issues/4279),
    [GH 18021](https://github.com/pandas-dev/pandas/issues/18021), [GH 40685](https://github.com/pandas-dev/pandas/issues/40685),
    [GH 43697](https://github.com/pandas-dev/pandas/issues/43697))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") and [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") will now write and read `attrs` respectively ([GH 54346](https://github.com/pandas-dev/pandas/issues/54346))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.all()`](../reference/api/pandas.Index.all.html#pandas.Index.all "pandas.Index.all")
    and [`Index.any()`](../reference/api/pandas.Index.any.html#pandas.Index.any "pandas.Index.any")
    with floating dtypes and timedelta64 dtypes no longer raise `TypeError`, matching
    the [`Series.all()`](../reference/api/pandas.Series.all.html#pandas.Series.all
    "pandas.Series.all") and [`Series.any()`](../reference/api/pandas.Series.any.html#pandas.Series.any
    "pandas.Series.any") behavior ([GH 54566](https://github.com/pandas-dev/pandas/issues/54566))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.cummax()`](../reference/api/pandas.Series.cummax.html#pandas.Series.cummax
    "pandas.Series.cummax"), [`Series.cummin()`](../reference/api/pandas.Series.cummin.html#pandas.Series.cummin
    "pandas.Series.cummin") and [`Series.cumprod()`](../reference/api/pandas.Series.cumprod.html#pandas.Series.cumprod
    "pandas.Series.cumprod") are now supported for pyarrow dtypes with pyarrow version
    13.0 and above ([GH 52085](https://github.com/pandas-dev/pandas/issues/52085))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for the DataFrame Consortium Standard ([GH 54383](https://github.com/pandas-dev/pandas/issues/54383))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile") ([GH 51722](https://github.com/pandas-dev/pandas/issues/51722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PyArrow-backed integer dtypes now support bitwise operations ([GH 54495](https://github.com/pandas-dev/pandas/issues/54495))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Backwards incompatible API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '### Increased minimum version for Python'
  prefs: []
  type: TYPE_NORMAL
- en: pandas 2.1.0 supports Python 3.9 and higher.
  prefs: []
  type: TYPE_NORMAL
- en: Increased minimum versions for dependencies
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated. If installed,
    we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.22.4 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| mypy (dev) | 1.4.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.11.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.3.4 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| dataframe-api-compat | 0.1.7 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.8.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 2022.05.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| hypothesis | 6.46.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 2022.05.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| jinja2 | 3.1.2 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 4.8.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.55.2 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.8.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 3.0.10 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas-gbq | 0.17.5 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| psycopg2 | 2.9.3 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyreadstat | 1.1.5 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyqt5 | 5.15.6 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.7.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytest | 7.3.2 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| python-snappy | 0.6.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyxlsb | 1.0.9 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 2022.05.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.8.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.4.36 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| tabulate | 0.8.10 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 2022.03.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 3.0.3 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| zstandard | 0.17.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version.
  prefs: []
  type: TYPE_NORMAL
- en: See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: '### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '`arrays.PandasArray` has been renamed [`NumpyExtensionArray`](../reference/api/pandas.arrays.NumpyExtensionArray.html#pandas.arrays.NumpyExtensionArray
    "pandas.arrays.NumpyExtensionArray") and the attached dtype name changed from
    `PandasDtype` to `NumpyEADtype`; importing `PandasArray` still works until the
    next major version ([GH 53694](https://github.com/pandas-dev/pandas/issues/53694))  ###
    Increased minimum version for Python'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pandas 2.1.0 supports Python 3.9 and higher.
  prefs: []
  type: TYPE_NORMAL
- en: Increased minimum versions for dependencies
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated. If installed,
    we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.22.4 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| mypy (dev) | 1.4.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.11.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.3.4 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| dataframe-api-compat | 0.1.7 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.8.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 2022.05.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| hypothesis | 6.46.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 2022.05.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| jinja2 | 3.1.2 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 4.8.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.55.2 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.8.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 3.0.10 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas-gbq | 0.17.5 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| psycopg2 | 2.9.3 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyreadstat | 1.1.5 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyqt5 | 5.15.6 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.7.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytest | 7.3.2 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| python-snappy | 0.6.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pyxlsb | 1.0.9 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 2022.05.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.8.1 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.4.36 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| tabulate | 0.8.10 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 2022.03.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 3.0.3 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| zstandard | 0.17.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version.
  prefs: []
  type: TYPE_NORMAL
- en: See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: '### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '`arrays.PandasArray` has been renamed [`NumpyExtensionArray`](../reference/api/pandas.arrays.NumpyExtensionArray.html#pandas.arrays.NumpyExtensionArray
    "pandas.arrays.NumpyExtensionArray") and the attached dtype name changed from
    `PandasDtype` to `NumpyEADtype`; importing `PandasArray` still works until the
    next major version ([GH 53694](https://github.com/pandas-dev/pandas/issues/53694))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: Deprecated silent upcasting in setitem-like Series operations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'PDEP-6: [https://pandas.pydata.org/pdeps/0006-ban-upcasting.html](https://pandas.pydata.org/pdeps/0006-ban-upcasting.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Setitem-like operations on Series (or DataFrame columns) which silently upcast
    the dtype are deprecated and show a warning. Examples of affected operations are:'
  prefs: []
  type: TYPE_NORMAL
- en: '`ser.fillna(''foo'', inplace=True)`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ser.where(ser.isna(), ''foo'', inplace=True)`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ser.iloc[indexer] = ''foo''`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ser.loc[indexer] = ''foo''`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`df.iloc[indexer, 0] = ''foo''`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`df.loc[indexer, ''a''] = ''foo''`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ser[indexer] = ''foo''`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: where `ser` is a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), `df` is a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), and `indexer` could be a slice, a mask, a single value, a
    list or array of values, or any other allowed indexer.
  prefs: []
  type: TYPE_NORMAL
- en: In a future version, these will raise an error and you should cast to a common
    dtype first.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'To retain the current behaviour, in the case above you could cast `ser` to
    `object` dtype first:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'Depending on the use-case, it might be more appropriate to cast to a different
    dtype. In the following, for example, we cast to `float64`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: For further reading, please see [https://pandas.pydata.org/pdeps/0006-ban-upcasting.html](https://pandas.pydata.org/pdeps/0006-ban-upcasting.html).
  prefs: []
  type: TYPE_NORMAL
- en: Deprecated parsing datetimes with mixed time zones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Parsing datetimes with mixed time zones is deprecated and shows a warning unless
    user passes `utc=True` to [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") ([GH 50887](https://github.com/pandas-dev/pandas/issues/50887))
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'In order to silence this warning and avoid an error in a future version of
    pandas, please specify `utc=True`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'To create a `Series` with mixed offsets and `object` dtype, please use `apply`
    and `datetime.datetime.strptime`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: Other Deprecations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Deprecated `DataFrameGroupBy.dtypes`, check `dtypes` on the underlying object
    instead ([GH 51045](https://github.com/pandas-dev/pandas/issues/51045))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `DataFrame._data` and `Series._data`, use public APIs instead ([GH
    33333](https://github.com/pandas-dev/pandas/issues/33333))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    behavior when any of the objects being concatenated have length 0; in the past
    the dtypes of empty objects were ignored when determining the resulting dtype,
    in a future version they will not ([GH 39122](https://github.com/pandas-dev/pandas/issues/39122))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Categorical.to_list()`, use `obj.tolist()` instead ([GH 51254](https://github.com/pandas-dev/pandas/issues/51254))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`DataFrameGroupBy.all()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all") and [`DataFrameGroupBy.any()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any") with datetime64 or [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") values, matching the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") deprecations ([GH 34479](https://github.com/pandas-dev/pandas/issues/34479))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `axis=1` in [`DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm"), [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling"), [`DataFrame.expanding()`](../reference/api/pandas.DataFrame.expanding.html#pandas.DataFrame.expanding
    "pandas.DataFrame.expanding"), transpose before calling the method instead ([GH
    51778](https://github.com/pandas-dev/pandas/issues/51778))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `axis=1` in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and in [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper") constructor, do `frame.T.groupby(...)` instead ([GH 51203](https://github.com/pandas-dev/pandas/issues/51203))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deprecated `broadcast_axis` keyword in [`Series.align()`](../reference/api/pandas.Series.align.html#pandas.Series.align
    "pandas.Series.align") and [`DataFrame.align()`](../reference/api/pandas.DataFrame.align.html#pandas.DataFrame.align
    "pandas.DataFrame.align"), upcast before calling `align` with `left = DataFrame({col:
    left for col in right.columns}, index=right.index)` ([GH 51856](https://github.com/pandas-dev/pandas/issues/51856))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `downcast` keyword in [`Index.fillna()`](../reference/api/pandas.Index.fillna.html#pandas.Index.fillna
    "pandas.Index.fillna") ([GH 53956](https://github.com/pandas-dev/pandas/issues/53956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `fill_method` and `limit` keywords in [`DataFrame.pct_change()`](../reference/api/pandas.DataFrame.pct_change.html#pandas.DataFrame.pct_change
    "pandas.DataFrame.pct_change"), [`Series.pct_change()`](../reference/api/pandas.Series.pct_change.html#pandas.Series.pct_change
    "pandas.Series.pct_change"), [`DataFrameGroupBy.pct_change()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.pct_change.html#pandas.core.groupby.DataFrameGroupBy.pct_change
    "pandas.core.groupby.DataFrameGroupBy.pct_change"), and [`SeriesGroupBy.pct_change()`](../reference/api/pandas.core.groupby.SeriesGroupBy.pct_change.html#pandas.core.groupby.SeriesGroupBy.pct_change
    "pandas.core.groupby.SeriesGroupBy.pct_change"), explicitly call e.g. [`DataFrame.ffill()`](../reference/api/pandas.DataFrame.ffill.html#pandas.DataFrame.ffill
    "pandas.DataFrame.ffill") or [`DataFrame.bfill()`](../reference/api/pandas.DataFrame.bfill.html#pandas.DataFrame.bfill
    "pandas.DataFrame.bfill") before calling `pct_change` instead ([GH 53491](https://github.com/pandas-dev/pandas/issues/53491))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `method`, `limit`, and `fill_axis` keywords in [`DataFrame.align()`](../reference/api/pandas.DataFrame.align.html#pandas.DataFrame.align
    "pandas.DataFrame.align") and [`Series.align()`](../reference/api/pandas.Series.align.html#pandas.Series.align
    "pandas.Series.align"), explicitly call [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") or [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") on the alignment results instead ([GH 51856](https://github.com/pandas-dev/pandas/issues/51856))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `quantile` keyword in [`Rolling.quantile()`](../reference/api/pandas.core.window.rolling.Rolling.quantile.html#pandas.core.window.rolling.Rolling.quantile
    "pandas.core.window.rolling.Rolling.quantile") and [`Expanding.quantile()`](../reference/api/pandas.core.window.expanding.Expanding.quantile.html#pandas.core.window.expanding.Expanding.quantile
    "pandas.core.window.expanding.Expanding.quantile"), renamed to `q` instead ([GH
    52550](https://github.com/pandas-dev/pandas/issues/52550))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated accepting slices in [`DataFrame.take()`](../reference/api/pandas.DataFrame.take.html#pandas.DataFrame.take
    "pandas.DataFrame.take"), call `obj[slicer]` or pass a sequence of integers instead
    ([GH 51539](https://github.com/pandas-dev/pandas/issues/51539))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax"), [`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin"), [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax"), [`Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin") in with all-NA entries or any-NA and `skipna=False`; in
    a future version these will raise `ValueError` ([GH 51276](https://github.com/pandas-dev/pandas/issues/51276))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated explicit support for subclassing [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 45289](https://github.com/pandas-dev/pandas/issues/45289))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated making functions given to [`Series.agg()`](../reference/api/pandas.Series.agg.html#pandas.Series.agg
    "pandas.Series.agg") attempt to operate on each element in the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and only operate on the whole [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") if the elementwise operations failed. In the future, functions
    given to [`Series.agg()`](../reference/api/pandas.Series.agg.html#pandas.Series.agg
    "pandas.Series.agg") will always operate on the whole [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") only. To keep the current behavior, use [`Series.transform()`](../reference/api/pandas.Series.transform.html#pandas.Series.transform
    "pandas.Series.transform") instead ([GH 53325](https://github.com/pandas-dev/pandas/issues/53325))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated making the functions in a list of functions given to [`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") attempt to operate on each element in the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and only operate on the columns of the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") if the elementwise operations failed. To keep the current
    behavior, use [`DataFrame.transform()`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform") instead ([GH 53325](https://github.com/pandas-dev/pandas/issues/53325))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to [`DataFrame.from_records()`](../reference/api/pandas.DataFrame.from_records.html#pandas.DataFrame.from_records
    "pandas.DataFrame.from_records"), use [`DataFrame.set_index()`](../reference/api/pandas.DataFrame.set_index.html#pandas.DataFrame.set_index
    "pandas.DataFrame.set_index") or [`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") instead ([GH 51353](https://github.com/pandas-dev/pandas/issues/51353))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated silently dropping unrecognized timezones when parsing strings to
    datetimes ([GH 18702](https://github.com/pandas-dev/pandas/issues/18702))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `axis` keyword in [`DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm"), [`Series.ewm()`](../reference/api/pandas.Series.ewm.html#pandas.Series.ewm
    "pandas.Series.ewm"), [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling"), [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling"), [`DataFrame.expanding()`](../reference/api/pandas.DataFrame.expanding.html#pandas.DataFrame.expanding
    "pandas.DataFrame.expanding"), [`Series.expanding()`](../reference/api/pandas.Series.expanding.html#pandas.Series.expanding
    "pandas.Series.expanding") ([GH 51778](https://github.com/pandas-dev/pandas/issues/51778))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `axis` keyword in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample"), [`Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") ([GH 51778](https://github.com/pandas-dev/pandas/issues/51778))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `downcast` keyword in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate"), [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate"), [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna"), [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna"), [`Series.ffill()`](../reference/api/pandas.Series.ffill.html#pandas.Series.ffill
    "pandas.Series.ffill"), [`DataFrame.ffill()`](../reference/api/pandas.DataFrame.ffill.html#pandas.DataFrame.ffill
    "pandas.DataFrame.ffill"), [`Series.bfill()`](../reference/api/pandas.Series.bfill.html#pandas.Series.bfill
    "pandas.Series.bfill"), [`DataFrame.bfill()`](../reference/api/pandas.DataFrame.bfill.html#pandas.DataFrame.bfill
    "pandas.DataFrame.bfill") ([GH 40988](https://github.com/pandas-dev/pandas/issues/40988))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") with both `len(keys) != len(objs)`, in a future version this
    will raise instead of truncating to the shorter of the two sequences ([GH 43485](https://github.com/pandas-dev/pandas/issues/43485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`Series.argsort()`](../reference/api/pandas.Series.argsort.html#pandas.Series.argsort
    "pandas.Series.argsort") in the presence of NA values; in a future version these
    will be sorted at the end instead of giving -1 ([GH 54219](https://github.com/pandas-dev/pandas/issues/54219))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the default of `observed=False` in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby"); this will default to `True` in a future version ([GH
    43999](https://github.com/pandas-dev/pandas/issues/43999))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecating pinning `group.name` to each group in [`SeriesGroupBy.aggregate()`](../reference/api/pandas.core.groupby.SeriesGroupBy.aggregate.html#pandas.core.groupby.SeriesGroupBy.aggregate
    "pandas.core.groupby.SeriesGroupBy.aggregate") aggregations; if your operation
    requires utilizing the groupby keys, iterate over the groupby object instead ([GH
    41090](https://github.com/pandas-dev/pandas/issues/41090))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `axis` keyword in [`DataFrameGroupBy.idxmax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax"), [`DataFrameGroupBy.idxmin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin"), [`DataFrameGroupBy.fillna()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.fillna.html#pandas.core.groupby.DataFrameGroupBy.fillna
    "pandas.core.groupby.DataFrameGroupBy.fillna"), [`DataFrameGroupBy.take()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.take.html#pandas.core.groupby.DataFrameGroupBy.take
    "pandas.core.groupby.DataFrameGroupBy.take"), [`DataFrameGroupBy.skew()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.skew.html#pandas.core.groupby.DataFrameGroupBy.skew
    "pandas.core.groupby.DataFrameGroupBy.skew"), [`DataFrameGroupBy.rank()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank"), [`DataFrameGroupBy.cumprod()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumprod.html#pandas.core.groupby.DataFrameGroupBy.cumprod
    "pandas.core.groupby.DataFrameGroupBy.cumprod"), [`DataFrameGroupBy.cumsum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum"), [`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax"), [`DataFrameGroupBy.cummin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin"), [`DataFrameGroupBy.pct_change()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.pct_change.html#pandas.core.groupby.DataFrameGroupBy.pct_change
    "pandas.core.groupby.DataFrameGroupBy.pct_change"), [`DataFrameGroupBy.diff()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.diff.html#pandas.core.groupby.DataFrameGroupBy.diff
    "pandas.core.groupby.DataFrameGroupBy.diff"), [`DataFrameGroupBy.shift()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.shift.html#pandas.core.groupby.DataFrameGroupBy.shift
    "pandas.core.groupby.DataFrameGroupBy.shift"), and [`DataFrameGroupBy.corrwith()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.corrwith.html#pandas.core.groupby.DataFrameGroupBy.corrwith
    "pandas.core.groupby.DataFrameGroupBy.corrwith"); for `axis=1` operate on the
    underlying [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") instead ([GH 50405](https://github.com/pandas-dev/pandas/issues/50405),
    [GH 51046](https://github.com/pandas-dev/pandas/issues/51046))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `DataFrameGroupBy` with `as_index=False` not including groupings
    in the result when they are not columns of the DataFrame ([GH 49519](https://github.com/pandas-dev/pandas/issues/49519))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `is_categorical_dtype()`, use `isinstance(obj.dtype, pd.CategoricalDtype)`
    instead ([GH 52527](https://github.com/pandas-dev/pandas/issues/52527))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `is_datetime64tz_dtype()`, check `isinstance(dtype, pd.DatetimeTZDtype)`
    instead ([GH 52607](https://github.com/pandas-dev/pandas/issues/52607))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `is_int64_dtype()`, check `dtype == np.dtype(np.int64)` instead ([GH
    52564](https://github.com/pandas-dev/pandas/issues/52564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `is_interval_dtype()`, check `isinstance(dtype, pd.IntervalDtype)`
    instead ([GH 52607](https://github.com/pandas-dev/pandas/issues/52607))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `is_period_dtype()`, check `isinstance(dtype, pd.PeriodDtype)` instead
    ([GH 52642](https://github.com/pandas-dev/pandas/issues/52642))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `is_sparse()`, check `isinstance(dtype, pd.SparseDtype)` instead
    ([GH 52642](https://github.com/pandas-dev/pandas/issues/52642))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Styler.applymap_index()`. Use the new [`Styler.map_index()`](../reference/api/pandas.io.formats.style.Styler.map_index.html#pandas.io.formats.style.Styler.map_index
    "pandas.io.formats.style.Styler.map_index") method instead ([GH 52708](https://github.com/pandas-dev/pandas/issues/52708))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Styler.applymap()`. Use the new [`Styler.map()`](../reference/api/pandas.io.formats.style.Styler.map.html#pandas.io.formats.style.Styler.map
    "pandas.io.formats.style.Styler.map") method instead ([GH 52708](https://github.com/pandas-dev/pandas/issues/52708))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`DataFrame.applymap()`](../reference/api/pandas.DataFrame.applymap.html#pandas.DataFrame.applymap
    "pandas.DataFrame.applymap"). Use the new [`DataFrame.map()`](../reference/api/pandas.DataFrame.map.html#pandas.DataFrame.map
    "pandas.DataFrame.map") method instead ([GH 52353](https://github.com/pandas-dev/pandas/issues/52353))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`DataFrame.swapaxes()`](../reference/api/pandas.DataFrame.swapaxes.html#pandas.DataFrame.swapaxes
    "pandas.DataFrame.swapaxes") and `Series.swapaxes()`, use [`DataFrame.transpose()`](../reference/api/pandas.DataFrame.transpose.html#pandas.DataFrame.transpose
    "pandas.DataFrame.transpose") or `Series.transpose()` instead ([GH 51946](https://github.com/pandas-dev/pandas/issues/51946))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `freq` parameter in [`PeriodArray`](../reference/api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray") constructor, pass `dtype` instead ([GH 52462](https://github.com/pandas-dev/pandas/issues/52462))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-standard inputs in `take()`, pass either a `numpy.ndarray`,
    [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray"), [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 52981](https://github.com/pandas-dev/pandas/issues/52981))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-standard sequences for `isin()`, `value_counts()`, [`unique()`](../reference/api/pandas.unique.html#pandas.unique
    "pandas.unique"), [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize"), case to one of `numpy.ndarray`, [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray"), or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") before calling ([GH 52986](https://github.com/pandas-dev/pandas/issues/52986))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") reductions `sum`, `prod`, `std`, `var`, `sem` with `axis=None`,
    in a future version this will operate over both axes returning a scalar instead
    of behaving like `axis=0`; note this also affects numpy functions e.g. `np.sum(df)`
    ([GH 21597](https://github.com/pandas-dev/pandas/issues/21597))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has columns that are all-NA, in a future version these will
    not be discarded when determining the resulting dtype ([GH 40893](https://github.com/pandas-dev/pandas/issues/40893))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`Series.dt.to_pydatetime()`](../reference/api/pandas.Series.dt.to_pydatetime.html#pandas.Series.dt.to_pydatetime
    "pandas.Series.dt.to_pydatetime"), in a future version this will return a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") containing python `datetime` objects instead of an `ndarray`
    of datetimes; this matches the behavior of other [`Series.dt`](../reference/api/pandas.Series.dt.html#pandas.Series.dt
    "pandas.Series.dt") properties ([GH 20306](https://github.com/pandas-dev/pandas/issues/20306))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated logical operations (`|`, `&`, `^`) between pandas objects and dtype-less
    sequences (e.g. `list`, `tuple`), wrap a sequence in a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or NumPy array before operating instead ([GH 51521](https://github.com/pandas-dev/pandas/issues/51521))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated parameter `convert_type` in [`Series.apply()`](../reference/api/pandas.Series.apply.html#pandas.Series.apply
    "pandas.Series.apply") ([GH 52140](https://github.com/pandas-dev/pandas/issues/52140))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing a dictionary to [`SeriesGroupBy.agg()`](../reference/api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg"); pass a list of aggregations instead
    ([GH 50684](https://github.com/pandas-dev/pandas/issues/50684))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `fastpath` keyword in [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") constructor, use [`Categorical.from_codes()`](../reference/api/pandas.Categorical.from_codes.html#pandas.Categorical.from_codes
    "pandas.Categorical.from_codes") instead ([GH 20110](https://github.com/pandas-dev/pandas/issues/20110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of `is_bool_dtype()` returning `True` for object-dtype
    [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") of bool
    objects ([GH 52680](https://github.com/pandas-dev/pandas/issues/52680))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the methods [`Series.bool()`](../reference/api/pandas.Series.bool.html#pandas.Series.bool
    "pandas.Series.bool") and [`DataFrame.bool()`](../reference/api/pandas.DataFrame.bool.html#pandas.DataFrame.bool
    "pandas.DataFrame.bool") ([GH 51749](https://github.com/pandas-dev/pandas/issues/51749))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated unused `closed` and `normalize` keywords in the [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") constructor ([GH 52628](https://github.com/pandas-dev/pandas/issues/52628))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated unused `closed` keyword in the [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") constructor ([GH 52628](https://github.com/pandas-dev/pandas/issues/52628))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated logical operation between two non boolean [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with different indexes always coercing the result to bool dtype.
    In a future version, this will maintain the return type of the inputs ([GH 52500](https://github.com/pandas-dev/pandas/issues/52500),
    [GH 52538](https://github.com/pandas-dev/pandas/issues/52538))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    and [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") with `BDay` freq, use a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with `BDay` freq instead ([GH 53446](https://github.com/pandas-dev/pandas/issues/53446))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `value_counts()`, use `pd.Series(obj).value_counts()` instead ([GH
    47862](https://github.com/pandas-dev/pandas/issues/47862))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.first()`](../reference/api/pandas.Series.first.html#pandas.Series.first
    "pandas.Series.first") and [`DataFrame.first()`](../reference/api/pandas.DataFrame.first.html#pandas.DataFrame.first
    "pandas.DataFrame.first"); create a mask and filter using `.loc` instead ([GH
    45908](https://github.com/pandas-dev/pandas/issues/45908))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") for object-dtype ([GH 53631](https://github.com/pandas-dev/pandas/issues/53631))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.last()`](../reference/api/pandas.Series.last.html#pandas.Series.last
    "pandas.Series.last") and [`DataFrame.last()`](../reference/api/pandas.DataFrame.last.html#pandas.DataFrame.last
    "pandas.DataFrame.last"); create a mask and filter using `.loc` instead ([GH 53692](https://github.com/pandas-dev/pandas/issues/53692))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing arbitrary `fill_value` in [`SparseDtype`](../reference/api/pandas.SparseDtype.html#pandas.SparseDtype
    "pandas.SparseDtype"), in a future version the `fill_value` will need to be compatible
    with the `dtype.subtype`, either a scalar that can be held by that subtype or
    `NaN` for integer or bool subtypes ([GH 23124](https://github.com/pandas-dev/pandas/issues/23124))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing bool dtype in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile"), consistent with the [`Series.quantile()`](../reference/api/pandas.Series.quantile.html#pandas.Series.quantile
    "pandas.Series.quantile") and [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile") behavior ([GH 51424](https://github.com/pandas-dev/pandas/issues/51424))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") and [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") considering NA-like values (e.g. `NaN` vs
    `None` as equivalent) ([GH 52081](https://github.com/pandas-dev/pandas/issues/52081))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated bytes input to [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"). To read a file path, use a string or path-like object ([GH
    53767](https://github.com/pandas-dev/pandas/issues/53767))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated constructing [`SparseArray`](../reference/api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray") from scalar data, pass a sequence instead ([GH 53039](https://github.com/pandas-dev/pandas/issues/53039))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated falling back to filling when `value` is not specified in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with non-dict-like `to_replace` ([GH 33302](https://github.com/pandas-dev/pandas/issues/33302))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated literal json input to [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json"). Wrap literal json string input in `io.StringIO` instead ([GH
    53409](https://github.com/pandas-dev/pandas/issues/53409))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated literal string input to [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml"). Wrap literal string/bytes input in `io.StringIO` / `io.BytesIO`
    instead ([GH 53767](https://github.com/pandas-dev/pandas/issues/53767))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated literal string/bytes input to [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html"). Wrap literal string/bytes input in `io.StringIO` / `io.BytesIO`
    instead ([GH 53767](https://github.com/pandas-dev/pandas/issues/53767))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated option `mode.use_inf_as_na`, convert inf entries to `NaN` before
    instead ([GH 51684](https://github.com/pandas-dev/pandas/issues/51684))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated parameter `obj` in [`DataFrameGroupBy.get_group()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.get_group.html#pandas.core.groupby.DataFrameGroupBy.get_group
    "pandas.core.groupby.DataFrameGroupBy.get_group") ([GH 53545](https://github.com/pandas-dev/pandas/issues/53545))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated positional indexing on [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `Series.__getitem__()` and `Series.__setitem__()`, in a
    future version `ser[item]` will *always* interpret `item` as a label, not a position
    ([GH 50617](https://github.com/pandas-dev/pandas/issues/50617))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated replacing builtin and NumPy functions in `.agg`, `.apply`, and `.transform`;
    use the corresponding string alias (e.g. `"sum"` for `sum` or `np.sum`) instead
    ([GH 53425](https://github.com/pandas-dev/pandas/issues/53425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated strings `T`, `t`, `L` and `l` denoting units in [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") ([GH 52536](https://github.com/pandas-dev/pandas/issues/52536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the “method” and “limit” keywords in `.ExtensionArray.fillna`, implement
    `_pad_or_backfill` instead ([GH 53621](https://github.com/pandas-dev/pandas/issues/53621))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `method` and `limit` keywords in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") ([GH 33302](https://github.com/pandas-dev/pandas/issues/33302))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `method` and `limit` keywords on [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna"), [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna"), [`SeriesGroupBy.fillna()`](../reference/api/pandas.core.groupby.SeriesGroupBy.fillna.html#pandas.core.groupby.SeriesGroupBy.fillna
    "pandas.core.groupby.SeriesGroupBy.fillna"), [`DataFrameGroupBy.fillna()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.fillna.html#pandas.core.groupby.DataFrameGroupBy.fillna
    "pandas.core.groupby.DataFrameGroupBy.fillna"), and [`Resampler.fillna()`](../reference/api/pandas.core.resample.Resampler.fillna.html#pandas.core.resample.Resampler.fillna
    "pandas.core.resample.Resampler.fillna"), use `obj.bfill()` or `obj.ffill()` instead
    ([GH 53394](https://github.com/pandas-dev/pandas/issues/53394))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of `Series.__getitem__()`, `Series.__setitem__()`, `DataFrame.__getitem__()`,
    `DataFrame.__setitem__()` with an integer slice on objects with a floating-dtype
    index, in a future version this will be treated as *positional* indexing ([GH
    49612](https://github.com/pandas-dev/pandas/issues/49612))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deprecated the use of non-supported datetime64 and timedelta64 resolutions
    with [`pandas.array()`](../reference/api/pandas.array.html#pandas.array "pandas.array").
    Supported resolutions are: “s”, “ms”, “us”, “ns” resolutions ([GH 53058](https://github.com/pandas-dev/pandas/issues/53058))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated values `"pad"`, `"ffill"`, `"bfill"`, `"backfill"` for [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate"), use `obj.ffill()` or `obj.bfill()` instead ([GH
    53581](https://github.com/pandas-dev/pandas/issues/53581))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`Index.argmax()`](../reference/api/pandas.Index.argmax.html#pandas.Index.argmax
    "pandas.Index.argmax"), [`Index.argmin()`](../reference/api/pandas.Index.argmin.html#pandas.Index.argmin
    "pandas.Index.argmin"), [`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax"), [`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin") with either all-NAs and `skipna=True` or any-NAs and `skipna=False`
    returning -1; in a future version this will raise `ValueError` ([GH 33941](https://github.com/pandas-dev/pandas/issues/33941),
    [GH 33942](https://github.com/pandas-dev/pandas/issues/33942))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") except `name` and `con` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated silently ignoring `fill_value` when passing both `freq` and `fill_value`
    to [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift"), [`Series.shift()`](../reference/api/pandas.Series.shift.html#pandas.Series.shift
    "pandas.Series.shift") and [`DataFrameGroupBy.shift()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.shift.html#pandas.core.groupby.DataFrameGroupBy.shift
    "pandas.core.groupby.DataFrameGroupBy.shift"); in a future version this will raise
    `ValueError` ([GH 53832](https://github.com/pandas-dev/pandas/issues/53832))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated silent upcasting in setitem-like Series operations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'PDEP-6: [https://pandas.pydata.org/pdeps/0006-ban-upcasting.html](https://pandas.pydata.org/pdeps/0006-ban-upcasting.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Setitem-like operations on Series (or DataFrame columns) which silently upcast
    the dtype are deprecated and show a warning. Examples of affected operations are:'
  prefs: []
  type: TYPE_NORMAL
- en: '`ser.fillna(''foo'', inplace=True)`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ser.where(ser.isna(), ''foo'', inplace=True)`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ser.iloc[indexer] = ''foo''`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ser.loc[indexer] = ''foo''`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`df.iloc[indexer, 0] = ''foo''`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`df.loc[indexer, ''a''] = ''foo''`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ser[indexer] = ''foo''`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: where `ser` is a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), `df` is a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), and `indexer` could be a slice, a mask, a single value, a
    list or array of values, or any other allowed indexer.
  prefs: []
  type: TYPE_NORMAL
- en: In a future version, these will raise an error and you should cast to a common
    dtype first.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: 'To retain the current behaviour, in the case above you could cast `ser` to
    `object` dtype first:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'Depending on the use-case, it might be more appropriate to cast to a different
    dtype. In the following, for example, we cast to `float64`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: For further reading, please see [https://pandas.pydata.org/pdeps/0006-ban-upcasting.html](https://pandas.pydata.org/pdeps/0006-ban-upcasting.html).
  prefs: []
  type: TYPE_NORMAL
- en: Deprecated parsing datetimes with mixed time zones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Parsing datetimes with mixed time zones is deprecated and shows a warning unless
    user passes `utc=True` to [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") ([GH 50887](https://github.com/pandas-dev/pandas/issues/50887))
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: 'In order to silence this warning and avoid an error in a future version of
    pandas, please specify `utc=True`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: 'To create a `Series` with mixed offsets and `object` dtype, please use `apply`
    and `datetime.datetime.strptime`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: Other Deprecations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Deprecated `DataFrameGroupBy.dtypes`, check `dtypes` on the underlying object
    instead ([GH 51045](https://github.com/pandas-dev/pandas/issues/51045))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `DataFrame._data` and `Series._data`, use public APIs instead ([GH
    33333](https://github.com/pandas-dev/pandas/issues/33333))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    behavior when any of the objects being concatenated have length 0; in the past
    the dtypes of empty objects were ignored when determining the resulting dtype,
    in a future version they will not ([GH 39122](https://github.com/pandas-dev/pandas/issues/39122))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Categorical.to_list()`, use `obj.tolist()` instead ([GH 51254](https://github.com/pandas-dev/pandas/issues/51254))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`DataFrameGroupBy.all()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all") and [`DataFrameGroupBy.any()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any") with datetime64 or [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") values, matching the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") deprecations ([GH 34479](https://github.com/pandas-dev/pandas/issues/34479))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `axis=1` in [`DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm"), [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling"), [`DataFrame.expanding()`](../reference/api/pandas.DataFrame.expanding.html#pandas.DataFrame.expanding
    "pandas.DataFrame.expanding"), transpose before calling the method instead ([GH
    51778](https://github.com/pandas-dev/pandas/issues/51778))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `axis=1` in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and in [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper") constructor, do `frame.T.groupby(...)` instead ([GH 51203](https://github.com/pandas-dev/pandas/issues/51203))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deprecated `broadcast_axis` keyword in [`Series.align()`](../reference/api/pandas.Series.align.html#pandas.Series.align
    "pandas.Series.align") and [`DataFrame.align()`](../reference/api/pandas.DataFrame.align.html#pandas.DataFrame.align
    "pandas.DataFrame.align"), upcast before calling `align` with `left = DataFrame({col:
    left for col in right.columns}, index=right.index)` ([GH 51856](https://github.com/pandas-dev/pandas/issues/51856))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `downcast` keyword in [`Index.fillna()`](../reference/api/pandas.Index.fillna.html#pandas.Index.fillna
    "pandas.Index.fillna") ([GH 53956](https://github.com/pandas-dev/pandas/issues/53956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `fill_method` and `limit` keywords in [`DataFrame.pct_change()`](../reference/api/pandas.DataFrame.pct_change.html#pandas.DataFrame.pct_change
    "pandas.DataFrame.pct_change"), [`Series.pct_change()`](../reference/api/pandas.Series.pct_change.html#pandas.Series.pct_change
    "pandas.Series.pct_change"), [`DataFrameGroupBy.pct_change()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.pct_change.html#pandas.core.groupby.DataFrameGroupBy.pct_change
    "pandas.core.groupby.DataFrameGroupBy.pct_change"), and [`SeriesGroupBy.pct_change()`](../reference/api/pandas.core.groupby.SeriesGroupBy.pct_change.html#pandas.core.groupby.SeriesGroupBy.pct_change
    "pandas.core.groupby.SeriesGroupBy.pct_change"), explicitly call e.g. [`DataFrame.ffill()`](../reference/api/pandas.DataFrame.ffill.html#pandas.DataFrame.ffill
    "pandas.DataFrame.ffill") or [`DataFrame.bfill()`](../reference/api/pandas.DataFrame.bfill.html#pandas.DataFrame.bfill
    "pandas.DataFrame.bfill") before calling `pct_change` instead ([GH 53491](https://github.com/pandas-dev/pandas/issues/53491))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `method`, `limit`, and `fill_axis` keywords in [`DataFrame.align()`](../reference/api/pandas.DataFrame.align.html#pandas.DataFrame.align
    "pandas.DataFrame.align") and [`Series.align()`](../reference/api/pandas.Series.align.html#pandas.Series.align
    "pandas.Series.align"), explicitly call [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") or [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") on the alignment results instead ([GH 51856](https://github.com/pandas-dev/pandas/issues/51856))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `quantile` keyword in [`Rolling.quantile()`](../reference/api/pandas.core.window.rolling.Rolling.quantile.html#pandas.core.window.rolling.Rolling.quantile
    "pandas.core.window.rolling.Rolling.quantile") and [`Expanding.quantile()`](../reference/api/pandas.core.window.expanding.Expanding.quantile.html#pandas.core.window.expanding.Expanding.quantile
    "pandas.core.window.expanding.Expanding.quantile"), renamed to `q` instead ([GH
    52550](https://github.com/pandas-dev/pandas/issues/52550))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated accepting slices in [`DataFrame.take()`](../reference/api/pandas.DataFrame.take.html#pandas.DataFrame.take
    "pandas.DataFrame.take"), call `obj[slicer]` or pass a sequence of integers instead
    ([GH 51539](https://github.com/pandas-dev/pandas/issues/51539))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax"), [`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin"), [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax"), [`Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin") in with all-NA entries or any-NA and `skipna=False`; in
    a future version these will raise `ValueError` ([GH 51276](https://github.com/pandas-dev/pandas/issues/51276))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated explicit support for subclassing [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 45289](https://github.com/pandas-dev/pandas/issues/45289))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated making functions given to [`Series.agg()`](../reference/api/pandas.Series.agg.html#pandas.Series.agg
    "pandas.Series.agg") attempt to operate on each element in the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and only operate on the whole [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") if the elementwise operations failed. In the future, functions
    given to [`Series.agg()`](../reference/api/pandas.Series.agg.html#pandas.Series.agg
    "pandas.Series.agg") will always operate on the whole [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") only. To keep the current behavior, use [`Series.transform()`](../reference/api/pandas.Series.transform.html#pandas.Series.transform
    "pandas.Series.transform") instead ([GH 53325](https://github.com/pandas-dev/pandas/issues/53325))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated making the functions in a list of functions given to [`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") attempt to operate on each element in the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and only operate on the columns of the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") if the elementwise operations failed. To keep the current
    behavior, use [`DataFrame.transform()`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform") instead ([GH 53325](https://github.com/pandas-dev/pandas/issues/53325))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to [`DataFrame.from_records()`](../reference/api/pandas.DataFrame.from_records.html#pandas.DataFrame.from_records
    "pandas.DataFrame.from_records"), use [`DataFrame.set_index()`](../reference/api/pandas.DataFrame.set_index.html#pandas.DataFrame.set_index
    "pandas.DataFrame.set_index") or [`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") instead ([GH 51353](https://github.com/pandas-dev/pandas/issues/51353))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated silently dropping unrecognized timezones when parsing strings to
    datetimes ([GH 18702](https://github.com/pandas-dev/pandas/issues/18702))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `axis` keyword in [`DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm"), [`Series.ewm()`](../reference/api/pandas.Series.ewm.html#pandas.Series.ewm
    "pandas.Series.ewm"), [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling"), [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling"), [`DataFrame.expanding()`](../reference/api/pandas.DataFrame.expanding.html#pandas.DataFrame.expanding
    "pandas.DataFrame.expanding"), [`Series.expanding()`](../reference/api/pandas.Series.expanding.html#pandas.Series.expanding
    "pandas.Series.expanding") ([GH 51778](https://github.com/pandas-dev/pandas/issues/51778))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `axis` keyword in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample"), [`Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") ([GH 51778](https://github.com/pandas-dev/pandas/issues/51778))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `downcast` keyword in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate"), [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate"), [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna"), [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna"), [`Series.ffill()`](../reference/api/pandas.Series.ffill.html#pandas.Series.ffill
    "pandas.Series.ffill"), [`DataFrame.ffill()`](../reference/api/pandas.DataFrame.ffill.html#pandas.DataFrame.ffill
    "pandas.DataFrame.ffill"), [`Series.bfill()`](../reference/api/pandas.Series.bfill.html#pandas.Series.bfill
    "pandas.Series.bfill"), [`DataFrame.bfill()`](../reference/api/pandas.DataFrame.bfill.html#pandas.DataFrame.bfill
    "pandas.DataFrame.bfill") ([GH 40988](https://github.com/pandas-dev/pandas/issues/40988))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") with both `len(keys) != len(objs)`, in a future version this
    will raise instead of truncating to the shorter of the two sequences ([GH 43485](https://github.com/pandas-dev/pandas/issues/43485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`Series.argsort()`](../reference/api/pandas.Series.argsort.html#pandas.Series.argsort
    "pandas.Series.argsort") in the presence of NA values; in a future version these
    will be sorted at the end instead of giving -1 ([GH 54219](https://github.com/pandas-dev/pandas/issues/54219))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the default of `observed=False` in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby"); this will default to `True` in a future version ([GH
    43999](https://github.com/pandas-dev/pandas/issues/43999))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecating pinning `group.name` to each group in [`SeriesGroupBy.aggregate()`](../reference/api/pandas.core.groupby.SeriesGroupBy.aggregate.html#pandas.core.groupby.SeriesGroupBy.aggregate
    "pandas.core.groupby.SeriesGroupBy.aggregate") aggregations; if your operation
    requires utilizing the groupby keys, iterate over the groupby object instead ([GH
    41090](https://github.com/pandas-dev/pandas/issues/41090))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `axis` keyword in [`DataFrameGroupBy.idxmax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax"), [`DataFrameGroupBy.idxmin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin"), [`DataFrameGroupBy.fillna()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.fillna.html#pandas.core.groupby.DataFrameGroupBy.fillna
    "pandas.core.groupby.DataFrameGroupBy.fillna"), [`DataFrameGroupBy.take()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.take.html#pandas.core.groupby.DataFrameGroupBy.take
    "pandas.core.groupby.DataFrameGroupBy.take"), [`DataFrameGroupBy.skew()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.skew.html#pandas.core.groupby.DataFrameGroupBy.skew
    "pandas.core.groupby.DataFrameGroupBy.skew"), [`DataFrameGroupBy.rank()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank"), [`DataFrameGroupBy.cumprod()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumprod.html#pandas.core.groupby.DataFrameGroupBy.cumprod
    "pandas.core.groupby.DataFrameGroupBy.cumprod"), [`DataFrameGroupBy.cumsum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum"), [`DataFrameGroupBy.cummax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummax.html#pandas.core.groupby.DataFrameGroupBy.cummax
    "pandas.core.groupby.DataFrameGroupBy.cummax"), [`DataFrameGroupBy.cummin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cummin.html#pandas.core.groupby.DataFrameGroupBy.cummin
    "pandas.core.groupby.DataFrameGroupBy.cummin"), [`DataFrameGroupBy.pct_change()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.pct_change.html#pandas.core.groupby.DataFrameGroupBy.pct_change
    "pandas.core.groupby.DataFrameGroupBy.pct_change"), [`DataFrameGroupBy.diff()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.diff.html#pandas.core.groupby.DataFrameGroupBy.diff
    "pandas.core.groupby.DataFrameGroupBy.diff"), [`DataFrameGroupBy.shift()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.shift.html#pandas.core.groupby.DataFrameGroupBy.shift
    "pandas.core.groupby.DataFrameGroupBy.shift"), and [`DataFrameGroupBy.corrwith()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.corrwith.html#pandas.core.groupby.DataFrameGroupBy.corrwith
    "pandas.core.groupby.DataFrameGroupBy.corrwith"); for `axis=1` operate on the
    underlying [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") instead ([GH 50405](https://github.com/pandas-dev/pandas/issues/50405),
    [GH 51046](https://github.com/pandas-dev/pandas/issues/51046))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `DataFrameGroupBy` with `as_index=False` not including groupings
    in the result when they are not columns of the DataFrame ([GH 49519](https://github.com/pandas-dev/pandas/issues/49519))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `is_categorical_dtype()`, use `isinstance(obj.dtype, pd.CategoricalDtype)`
    instead ([GH 52527](https://github.com/pandas-dev/pandas/issues/52527))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `is_datetime64tz_dtype()`, check `isinstance(dtype, pd.DatetimeTZDtype)`
    instead ([GH 52607](https://github.com/pandas-dev/pandas/issues/52607))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `is_int64_dtype()`, check `dtype == np.dtype(np.int64)` instead ([GH
    52564](https://github.com/pandas-dev/pandas/issues/52564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `is_interval_dtype()`, check `isinstance(dtype, pd.IntervalDtype)`
    instead ([GH 52607](https://github.com/pandas-dev/pandas/issues/52607))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `is_period_dtype()`, check `isinstance(dtype, pd.PeriodDtype)` instead
    ([GH 52642](https://github.com/pandas-dev/pandas/issues/52642))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `is_sparse()`, check `isinstance(dtype, pd.SparseDtype)` instead
    ([GH 52642](https://github.com/pandas-dev/pandas/issues/52642))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Styler.applymap_index()`. Use the new [`Styler.map_index()`](../reference/api/pandas.io.formats.style.Styler.map_index.html#pandas.io.formats.style.Styler.map_index
    "pandas.io.formats.style.Styler.map_index") method instead ([GH 52708](https://github.com/pandas-dev/pandas/issues/52708))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Styler.applymap()`. Use the new [`Styler.map()`](../reference/api/pandas.io.formats.style.Styler.map.html#pandas.io.formats.style.Styler.map
    "pandas.io.formats.style.Styler.map") method instead ([GH 52708](https://github.com/pandas-dev/pandas/issues/52708))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`DataFrame.applymap()`](../reference/api/pandas.DataFrame.applymap.html#pandas.DataFrame.applymap
    "pandas.DataFrame.applymap"). Use the new [`DataFrame.map()`](../reference/api/pandas.DataFrame.map.html#pandas.DataFrame.map
    "pandas.DataFrame.map") method instead ([GH 52353](https://github.com/pandas-dev/pandas/issues/52353))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`DataFrame.swapaxes()`](../reference/api/pandas.DataFrame.swapaxes.html#pandas.DataFrame.swapaxes
    "pandas.DataFrame.swapaxes") and `Series.swapaxes()`, use [`DataFrame.transpose()`](../reference/api/pandas.DataFrame.transpose.html#pandas.DataFrame.transpose
    "pandas.DataFrame.transpose") or `Series.transpose()` instead ([GH 51946](https://github.com/pandas-dev/pandas/issues/51946))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `freq` parameter in [`PeriodArray`](../reference/api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray") constructor, pass `dtype` instead ([GH 52462](https://github.com/pandas-dev/pandas/issues/52462))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-standard inputs in `take()`, pass either a `numpy.ndarray`,
    [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray"), [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 52981](https://github.com/pandas-dev/pandas/issues/52981))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-standard sequences for `isin()`, `value_counts()`, [`unique()`](../reference/api/pandas.unique.html#pandas.unique
    "pandas.unique"), [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize"), case to one of `numpy.ndarray`, [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray"), or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") before calling ([GH 52986](https://github.com/pandas-dev/pandas/issues/52986))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") reductions `sum`, `prod`, `std`, `var`, `sem` with `axis=None`,
    in a future version this will operate over both axes returning a scalar instead
    of behaving like `axis=0`; note this also affects numpy functions e.g. `np.sum(df)`
    ([GH 21597](https://github.com/pandas-dev/pandas/issues/21597))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has columns that are all-NA, in a future version these will
    not be discarded when determining the resulting dtype ([GH 40893](https://github.com/pandas-dev/pandas/issues/40893))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`Series.dt.to_pydatetime()`](../reference/api/pandas.Series.dt.to_pydatetime.html#pandas.Series.dt.to_pydatetime
    "pandas.Series.dt.to_pydatetime"), in a future version this will return a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") containing python `datetime` objects instead of an `ndarray`
    of datetimes; this matches the behavior of other [`Series.dt`](../reference/api/pandas.Series.dt.html#pandas.Series.dt
    "pandas.Series.dt") properties ([GH 20306](https://github.com/pandas-dev/pandas/issues/20306))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated logical operations (`|`, `&`, `^`) between pandas objects and dtype-less
    sequences (e.g. `list`, `tuple`), wrap a sequence in a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or NumPy array before operating instead ([GH 51521](https://github.com/pandas-dev/pandas/issues/51521))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated parameter `convert_type` in [`Series.apply()`](../reference/api/pandas.Series.apply.html#pandas.Series.apply
    "pandas.Series.apply") ([GH 52140](https://github.com/pandas-dev/pandas/issues/52140))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated passing a dictionary to [`SeriesGroupBy.agg()`](../reference/api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg"); pass a list of aggregations instead
    ([GH 50684](https://github.com/pandas-dev/pandas/issues/50684))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `fastpath` keyword in [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") constructor, use [`Categorical.from_codes()`](../reference/api/pandas.Categorical.from_codes.html#pandas.Categorical.from_codes
    "pandas.Categorical.from_codes") instead ([GH 20110](https://github.com/pandas-dev/pandas/issues/20110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of `is_bool_dtype()` returning `True` for object-dtype
    [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") of bool
    objects ([GH 52680](https://github.com/pandas-dev/pandas/issues/52680))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the methods [`Series.bool()`](../reference/api/pandas.Series.bool.html#pandas.Series.bool
    "pandas.Series.bool") and [`DataFrame.bool()`](../reference/api/pandas.DataFrame.bool.html#pandas.DataFrame.bool
    "pandas.DataFrame.bool") ([GH 51749](https://github.com/pandas-dev/pandas/issues/51749))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated unused `closed` and `normalize` keywords in the [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") constructor ([GH 52628](https://github.com/pandas-dev/pandas/issues/52628))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated unused `closed` keyword in the [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") constructor ([GH 52628](https://github.com/pandas-dev/pandas/issues/52628))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated logical operation between two non boolean [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with different indexes always coercing the result to bool dtype.
    In a future version, this will maintain the return type of the inputs ([GH 52500](https://github.com/pandas-dev/pandas/issues/52500),
    [GH 52538](https://github.com/pandas-dev/pandas/issues/52538))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    and [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") with `BDay` freq, use a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with `BDay` freq instead ([GH 53446](https://github.com/pandas-dev/pandas/issues/53446))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `value_counts()`, use `pd.Series(obj).value_counts()` instead ([GH
    47862](https://github.com/pandas-dev/pandas/issues/47862))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.first()`](../reference/api/pandas.Series.first.html#pandas.Series.first
    "pandas.Series.first") and [`DataFrame.first()`](../reference/api/pandas.DataFrame.first.html#pandas.DataFrame.first
    "pandas.DataFrame.first"); create a mask and filter using `.loc` instead ([GH
    45908](https://github.com/pandas-dev/pandas/issues/45908))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") for object-dtype ([GH 53631](https://github.com/pandas-dev/pandas/issues/53631))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.last()`](../reference/api/pandas.Series.last.html#pandas.Series.last
    "pandas.Series.last") and [`DataFrame.last()`](../reference/api/pandas.DataFrame.last.html#pandas.DataFrame.last
    "pandas.DataFrame.last"); create a mask and filter using `.loc` instead ([GH 53692](https://github.com/pandas-dev/pandas/issues/53692))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing arbitrary `fill_value` in [`SparseDtype`](../reference/api/pandas.SparseDtype.html#pandas.SparseDtype
    "pandas.SparseDtype"), in a future version the `fill_value` will need to be compatible
    with the `dtype.subtype`, either a scalar that can be held by that subtype or
    `NaN` for integer or bool subtypes ([GH 23124](https://github.com/pandas-dev/pandas/issues/23124))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing bool dtype in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile"), consistent with the [`Series.quantile()`](../reference/api/pandas.Series.quantile.html#pandas.Series.quantile
    "pandas.Series.quantile") and [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile") behavior ([GH 51424](https://github.com/pandas-dev/pandas/issues/51424))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") and [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") considering NA-like values (e.g. `NaN` vs
    `None` as equivalent) ([GH 52081](https://github.com/pandas-dev/pandas/issues/52081))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated bytes input to [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"). To read a file path, use a string or path-like object ([GH
    53767](https://github.com/pandas-dev/pandas/issues/53767))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated constructing [`SparseArray`](../reference/api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray") from scalar data, pass a sequence instead ([GH 53039](https://github.com/pandas-dev/pandas/issues/53039))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated falling back to filling when `value` is not specified in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with non-dict-like `to_replace` ([GH 33302](https://github.com/pandas-dev/pandas/issues/33302))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated literal json input to [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json"). Wrap literal json string input in `io.StringIO` instead ([GH
    53409](https://github.com/pandas-dev/pandas/issues/53409))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated literal string input to [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml"). Wrap literal string/bytes input in `io.StringIO` / `io.BytesIO`
    instead ([GH 53767](https://github.com/pandas-dev/pandas/issues/53767))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated literal string/bytes input to [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html"). Wrap literal string/bytes input in `io.StringIO` / `io.BytesIO`
    instead ([GH 53767](https://github.com/pandas-dev/pandas/issues/53767))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated option `mode.use_inf_as_na`, convert inf entries to `NaN` before
    instead ([GH 51684](https://github.com/pandas-dev/pandas/issues/51684))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated parameter `obj` in [`DataFrameGroupBy.get_group()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.get_group.html#pandas.core.groupby.DataFrameGroupBy.get_group
    "pandas.core.groupby.DataFrameGroupBy.get_group") ([GH 53545](https://github.com/pandas-dev/pandas/issues/53545))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated positional indexing on [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `Series.__getitem__()` and `Series.__setitem__()`, in a
    future version `ser[item]` will *always* interpret `item` as a label, not a position
    ([GH 50617](https://github.com/pandas-dev/pandas/issues/50617))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated replacing builtin and NumPy functions in `.agg`, `.apply`, and `.transform`;
    use the corresponding string alias (e.g. `"sum"` for `sum` or `np.sum`) instead
    ([GH 53425](https://github.com/pandas-dev/pandas/issues/53425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated strings `T`, `t`, `L` and `l` denoting units in [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") ([GH 52536](https://github.com/pandas-dev/pandas/issues/52536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the “method” and “limit” keywords in `.ExtensionArray.fillna`, implement
    `_pad_or_backfill` instead ([GH 53621](https://github.com/pandas-dev/pandas/issues/53621))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `method` and `limit` keywords in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") ([GH 33302](https://github.com/pandas-dev/pandas/issues/33302))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `method` and `limit` keywords on [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna"), [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna"), [`SeriesGroupBy.fillna()`](../reference/api/pandas.core.groupby.SeriesGroupBy.fillna.html#pandas.core.groupby.SeriesGroupBy.fillna
    "pandas.core.groupby.SeriesGroupBy.fillna"), [`DataFrameGroupBy.fillna()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.fillna.html#pandas.core.groupby.DataFrameGroupBy.fillna
    "pandas.core.groupby.DataFrameGroupBy.fillna"), and [`Resampler.fillna()`](../reference/api/pandas.core.resample.Resampler.fillna.html#pandas.core.resample.Resampler.fillna
    "pandas.core.resample.Resampler.fillna"), use `obj.bfill()` or `obj.ffill()` instead
    ([GH 53394](https://github.com/pandas-dev/pandas/issues/53394))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of `Series.__getitem__()`, `Series.__setitem__()`, `DataFrame.__getitem__()`,
    `DataFrame.__setitem__()` with an integer slice on objects with a floating-dtype
    index, in a future version this will be treated as *positional* indexing ([GH
    49612](https://github.com/pandas-dev/pandas/issues/49612))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deprecated the use of non-supported datetime64 and timedelta64 resolutions
    with [`pandas.array()`](../reference/api/pandas.array.html#pandas.array "pandas.array").
    Supported resolutions are: “s”, “ms”, “us”, “ns” resolutions ([GH 53058](https://github.com/pandas-dev/pandas/issues/53058))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated values `"pad"`, `"ffill"`, `"bfill"`, `"backfill"` for [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate"), use `obj.ffill()` or `obj.bfill()` instead ([GH
    53581](https://github.com/pandas-dev/pandas/issues/53581))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`Index.argmax()`](../reference/api/pandas.Index.argmax.html#pandas.Index.argmax
    "pandas.Index.argmax"), [`Index.argmin()`](../reference/api/pandas.Index.argmin.html#pandas.Index.argmin
    "pandas.Index.argmin"), [`Series.argmax()`](../reference/api/pandas.Series.argmax.html#pandas.Series.argmax
    "pandas.Series.argmax"), [`Series.argmin()`](../reference/api/pandas.Series.argmin.html#pandas.Series.argmin
    "pandas.Series.argmin") with either all-NAs and `skipna=True` or any-NAs and `skipna=False`
    returning -1; in a future version this will raise `ValueError` ([GH 33941](https://github.com/pandas-dev/pandas/issues/33941),
    [GH 33942](https://github.com/pandas-dev/pandas/issues/33942))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") except `name` and `con` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated silently ignoring `fill_value` when passing both `freq` and `fill_value`
    to [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift"), [`Series.shift()`](../reference/api/pandas.Series.shift.html#pandas.Series.shift
    "pandas.Series.shift") and [`DataFrameGroupBy.shift()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.shift.html#pandas.core.groupby.DataFrameGroupBy.shift
    "pandas.core.groupby.DataFrameGroupBy.shift"); in a future version this will raise
    `ValueError` ([GH 53832](https://github.com/pandas-dev/pandas/issues/53832))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Performance improvements'
  prefs: []
  type: TYPE_NORMAL
- en: Performance improvement in [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") with homogeneous `np.float64` or `np.float32` dtypes ([GH 52685](https://github.com/pandas-dev/pandas/issues/52685))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") for object columns not containing strings ([GH 51921](https://github.com/pandas-dev/pandas/issues/51921))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_orc()`](../reference/api/pandas.read_orc.html#pandas.read_orc
    "pandas.read_orc") when reading a remote URI file path ([GH 51609](https://github.com/pandas-dev/pandas/issues/51609))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") and [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") when reading a remote file with `engine="pyarrow"`
    ([GH 51609](https://github.com/pandas-dev/pandas/issues/51609))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet") on string columns when using `use_nullable_dtypes=True`
    ([GH 47345](https://github.com/pandas-dev/pandas/issues/47345))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip") and [`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip") ([GH 51472](https://github.com/pandas-dev/pandas/issues/51472))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.filter()`](../reference/api/pandas.DataFrame.filter.html#pandas.DataFrame.filter
    "pandas.DataFrame.filter") when `items` is given ([GH 52941](https://github.com/pandas-dev/pandas/issues/52941))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.first_valid_index()`](../reference/api/pandas.DataFrame.first_valid_index.html#pandas.DataFrame.first_valid_index
    "pandas.DataFrame.first_valid_index") and [`DataFrame.last_valid_index()`](../reference/api/pandas.DataFrame.last_valid_index.html#pandas.DataFrame.last_valid_index
    "pandas.DataFrame.last_valid_index") for extension array dtypes ([GH 51549](https://github.com/pandas-dev/pandas/issues/51549))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") when `cond` is backed by an extension dtype ([GH 51574](https://github.com/pandas-dev/pandas/issues/51574))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`MultiIndex.set_levels()`](../reference/api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels") and [`MultiIndex.set_codes()`](../reference/api/pandas.MultiIndex.set_codes.html#pandas.MultiIndex.set_codes
    "pandas.MultiIndex.set_codes") when `verify_integrity=True` ([GH 51873](https://github.com/pandas-dev/pandas/issues/51873))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`MultiIndex.sortlevel()`](../reference/api/pandas.MultiIndex.sortlevel.html#pandas.MultiIndex.sortlevel
    "pandas.MultiIndex.sortlevel") when `ascending` is a list ([GH 51612](https://github.com/pandas-dev/pandas/issues/51612))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.combine_first()`](../reference/api/pandas.Series.combine_first.html#pandas.Series.combine_first
    "pandas.Series.combine_first") ([GH 51777](https://github.com/pandas-dev/pandas/issues/51777))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `fillna()` when array does not contain nulls ([GH
    51635](https://github.com/pandas-dev/pandas/issues/51635))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `isna()` when array has zero nulls or is all nulls
    ([GH 51630](https://github.com/pandas-dev/pandas/issues/51630))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when parsing strings to `boolean[pyarrow]` dtype ([GH
    51730](https://github.com/pandas-dev/pandas/issues/51730))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when searching an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") sliced from other indexes ([GH 51738](https://github.com/pandas-dev/pandas/issues/51738))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") ([GH 52291](https://github.com/pandas-dev/pandas/issues/52291),
    [GH 52290](https://github.com/pandas-dev/pandas/issues/52290))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")’s
    default formatter (`period_format`) is now significantly (~twice) faster. This
    improves performance of `str(Period)`, `repr(Period)`, and `Period.strftime(fmt=None)()`,
    as well as `.PeriodArray.strftime(fmt=None)`, `.PeriodIndex.strftime(fmt=None)`
    and `.PeriodIndex.format(fmt=None)`. `to_csv` operations involving [`PeriodArray`](../reference/api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray") or [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") with default `date_format` are also significantly accelerated
    ([GH 51459](https://github.com/pandas-dev/pandas/issues/51459))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement accessing `arrays.IntegerArrays.dtype` & `arrays.FloatingArray.dtype`
    ([GH 52998](https://github.com/pandas-dev/pandas/issues/52998))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for `DataFrameGroupBy`/`SeriesGroupBy` aggregations
    (e.g. [`DataFrameGroupBy.sum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum")) with `engine="numba"` ([GH 53731](https://github.com/pandas-dev/pandas/issues/53731))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") reductions with `axis=1` and extension dtypes ([GH 54341](https://github.com/pandas-dev/pandas/issues/54341))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") reductions with `axis=None` and extension dtypes ([GH 54308](https://github.com/pandas-dev/pandas/issues/54308))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and multi-column operations (e.g. [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values"), [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby"), [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack")) when index/column values are already sorted ([GH 53806](https://github.com/pandas-dev/pandas/issues/53806))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") reductions ([GH 52341](https://github.com/pandas-dev/pandas/issues/52341))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") when `axis=1` and objects have different indexes ([GH 52541](https://github.com/pandas-dev/pandas/issues/52541))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") when the concatenation axis is a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 53574](https://github.com/pandas-dev/pandas/issues/53574))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") for PyArrow backed strings ([GH 54443](https://github.com/pandas-dev/pandas/issues/54443))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `engine="c"` ([GH 52632](https://github.com/pandas-dev/pandas/issues/52632))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `ArrowExtensionArray.to_numpy()` ([GH 52525](https://github.com/pandas-dev/pandas/issues/52525))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.groups()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.groups.html#pandas.core.groupby.DataFrameGroupBy.groups
    "pandas.core.groupby.DataFrameGroupBy.groups") ([GH 53088](https://github.com/pandas-dev/pandas/issues/53088))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") when `dtype` is an extension dtype ([GH 54299](https://github.com/pandas-dev/pandas/issues/54299))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") when input is an single integer and dataframe is backed
    by extension dtypes ([GH 54508](https://github.com/pandas-dev/pandas/issues/54508))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.isin()`](../reference/api/pandas.DataFrame.isin.html#pandas.DataFrame.isin
    "pandas.DataFrame.isin") for extension dtypes ([GH 53514](https://github.com/pandas-dev/pandas/issues/53514))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") when selecting rows and columns ([GH 53014](https://github.com/pandas-dev/pandas/issues/53014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.transpose()`](../reference/api/pandas.DataFrame.transpose.html#pandas.DataFrame.transpose
    "pandas.DataFrame.transpose") when transposing a DataFrame with a single PyArrow
    dtype ([GH 54224](https://github.com/pandas-dev/pandas/issues/54224))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.transpose()`](../reference/api/pandas.DataFrame.transpose.html#pandas.DataFrame.transpose
    "pandas.DataFrame.transpose") when transposing a DataFrame with a single masked
    dtype, e.g. `Int64` ([GH 52836](https://github.com/pandas-dev/pandas/issues/52836))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.add()`](../reference/api/pandas.Series.add.html#pandas.Series.add
    "pandas.Series.add") for PyArrow string and binary dtypes ([GH 53150](https://github.com/pandas-dev/pandas/issues/53150))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.corr()`](../reference/api/pandas.Series.corr.html#pandas.Series.corr
    "pandas.Series.corr") and [`Series.cov()`](../reference/api/pandas.Series.cov.html#pandas.Series.cov
    "pandas.Series.cov") for extension dtypes ([GH 52502](https://github.com/pandas-dev/pandas/issues/52502))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.drop_duplicates()`](../reference/api/pandas.Series.drop_duplicates.html#pandas.Series.drop_duplicates
    "pandas.Series.drop_duplicates") for `ArrowDtype` ([GH 54667](https://github.com/pandas-dev/pandas/issues/54667)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.ffill()`](../reference/api/pandas.Series.ffill.html#pandas.Series.ffill
    "pandas.Series.ffill"), [`Series.bfill()`](../reference/api/pandas.Series.bfill.html#pandas.Series.bfill
    "pandas.Series.bfill"), [`DataFrame.ffill()`](../reference/api/pandas.DataFrame.ffill.html#pandas.DataFrame.ffill
    "pandas.DataFrame.ffill"), [`DataFrame.bfill()`](../reference/api/pandas.DataFrame.bfill.html#pandas.DataFrame.bfill
    "pandas.DataFrame.bfill") with PyArrow dtypes ([GH 53950](https://github.com/pandas-dev/pandas/issues/53950))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.str.get_dummies()`](../reference/api/pandas.Series.str.get_dummies.html#pandas.Series.str.get_dummies
    "pandas.Series.str.get_dummies") for PyArrow-backed strings ([GH 53655](https://github.com/pandas-dev/pandas/issues/53655))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.str.get()`](../reference/api/pandas.Series.str.get.html#pandas.Series.str.get
    "pandas.Series.str.get") for PyArrow-backed strings ([GH 53152](https://github.com/pandas-dev/pandas/issues/53152))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.str.split()`](../reference/api/pandas.Series.str.split.html#pandas.Series.str.split
    "pandas.Series.str.split") with `expand=True` for PyArrow-backed strings ([GH
    53585](https://github.com/pandas-dev/pandas/issues/53585))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.to_numpy()`](../reference/api/pandas.Series.to_numpy.html#pandas.Series.to_numpy
    "pandas.Series.to_numpy") when dtype is a NumPy float dtype and `na_value` is
    `np.nan` ([GH 52430](https://github.com/pandas-dev/pandas/issues/52430))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `astype()` when converting from a PyArrow timestamp
    or duration dtype to NumPy ([GH 53326](https://github.com/pandas-dev/pandas/issues/53326))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in various [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") set and indexing operations ([GH 53955](https://github.com/pandas-dev/pandas/issues/53955))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when doing various reshaping operations on [`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") & [`arrays.FloatingArray`](../reference/api/pandas.arrays.FloatingArray.html#pandas.arrays.FloatingArray
    "pandas.arrays.FloatingArray") by avoiding doing unnecessary validation ([GH 53013](https://github.com/pandas-dev/pandas/issues/53013))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when indexing with PyArrow timestamp and duration dtypes
    ([GH 53368](https://github.com/pandas-dev/pandas/issues/53368))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when passing an array to `RangeIndex.take()`, [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc"), or [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") and the DataFrame is using a RangeIndex ([GH 53387](https://github.com/pandas-dev/pandas/issues/53387))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Bug fixes'
  prefs: []
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`CategoricalIndex.remove_categories()`](../reference/api/pandas.CategoricalIndex.remove_categories.html#pandas.CategoricalIndex.remove_categories
    "pandas.CategoricalIndex.remove_categories") where ordered categories would not
    be maintained ([GH 53935](https://github.com/pandas-dev/pandas/issues/53935)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") with `dtype="category"` for nullable arrays with read-only
    null value masks ([GH 53658](https://github.com/pandas-dev/pandas/issues/53658))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") , where the value of the `na_action` parameter was not used
    if the series held a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") ([GH 22527](https://github.com/pandas-dev/pandas/issues/22527)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`DatetimeIndex.map()` with `na_action="ignore"` now works as expected ([GH
    51644](https://github.com/pandas-dev/pandas/issues/51644))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.slice_indexer()` now raises `KeyError` for non-monotonic indexes
    if either of the slice bounds is not in the index; this behaviour was previously
    deprecated but inconsistently handled ([GH 53983](https://github.com/pandas-dev/pandas/issues/53983))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DateOffset` which had inconsistent behavior when multiplying a `DateOffset`
    object by a constant ([GH 47953](https://github.com/pandas-dev/pandas/issues/47953))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") when `freq` was a `DateOffset` with `nanoseconds` ([GH 46877](https://github.com/pandas-dev/pandas/issues/46877))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") converting [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") containing [`arrays.ArrowExtensionArray`](../reference/api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") of PyArrow timestamps to numpy datetimes
    ([GH 52545](https://github.com/pandas-dev/pandas/issues/52545))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeArray.map()` and `DatetimeIndex.map()`, where the supplied callable
    operated array-wise instead of element-wise ([GH 51977](https://github.com/pandas-dev/pandas/issues/51977))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") raising `ValueError` for PyArrow-backed date like dtypes
    ([GH 53854](https://github.com/pandas-dev/pandas/issues/53854))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.date()`](../reference/api/pandas.Timestamp.date.html#pandas.Timestamp.date
    "pandas.Timestamp.date"), [`Timestamp.isocalendar()`](../reference/api/pandas.Timestamp.isocalendar.html#pandas.Timestamp.isocalendar
    "pandas.Timestamp.isocalendar"), [`Timestamp.timetuple()`](../reference/api/pandas.Timestamp.timetuple.html#pandas.Timestamp.timetuple
    "pandas.Timestamp.timetuple"), and [`Timestamp.toordinal()`](../reference/api/pandas.Timestamp.toordinal.html#pandas.Timestamp.toordinal
    "pandas.Timestamp.toordinal") were returning incorrect results for inputs outside
    those supported by the Python standard library’s datetime module ([GH 53668](https://github.com/pandas-dev/pandas/issues/53668))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.round()`](../reference/api/pandas.Timestamp.round.html#pandas.Timestamp.round
    "pandas.Timestamp.round") with values close to the implementation bounds returning
    incorrect results instead of raising `OutOfBoundsDatetime` ([GH 51494](https://github.com/pandas-dev/pandas/issues/51494))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from a datetime or timedelta scalar always inferring nanosecond
    resolution instead of inferring from the input ([GH 52212](https://github.com/pandas-dev/pandas/issues/52212))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") from a string representing a time without a date inferring
    an incorrect unit ([GH 54097](https://github.com/pandas-dev/pandas/issues/54097))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with `ts_input=pd.NA` raising `TypeError` ([GH 45481](https://github.com/pandas-dev/pandas/issues/45481))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in parsing datetime strings with weekday but no day e.g. “2023 Sept Thu”
    incorrectly raising `AttributeError` instead of `ValueError` ([GH 52659](https://github.com/pandas-dev/pandas/issues/52659))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the repr for [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") when dtype is a timezone aware datetime with non-nanosecond resolution
    raising `OutOfBoundsDatetime` ([GH 54623](https://github.com/pandas-dev/pandas/issues/54623))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") division or multiplication leading to `.freq` of “0 Days”
    instead of `None` ([GH 51575](https://github.com/pandas-dev/pandas/issues/51575))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") with NumPy `timedelta64` objects not properly raising `ValueError`
    ([GH 52806](https://github.com/pandas-dev/pandas/issues/52806))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") converting [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") containing [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") of `pyarrow.duration` to NumPy `timedelta64` ([GH 54298](https://github.com/pandas-dev/pandas/issues/54298))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timedelta.__hash__()`, raising an `OutOfBoundsTimedelta` on certain
    large values of second resolution ([GH 54037](https://github.com/pandas-dev/pandas/issues/54037))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta.round()`](../reference/api/pandas.Timedelta.round.html#pandas.Timedelta.round
    "pandas.Timedelta.round") with values close to the implementation bounds returning
    incorrect results instead of raising `OutOfBoundsTimedelta` ([GH 51494](https://github.com/pandas-dev/pandas/issues/51494))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `TimedeltaIndex.map()` with `na_action="ignore"` ([GH 51644](https://github.com/pandas-dev/pandas/issues/51644))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `arrays.TimedeltaArray.map()` and `TimedeltaIndex.map()`, where the supplied
    callable operated array-wise instead of element-wise ([GH 51977](https://github.com/pandas-dev/pandas/issues/51977))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`infer_freq()`](../reference/api/pandas.infer_freq.html#pandas.infer_freq
    "pandas.infer_freq") that raises `TypeError` for `Series` of timezone-aware timestamps
    ([GH 52456](https://github.com/pandas-dev/pandas/issues/52456))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeTZDtype.base()` that always returns a NumPy dtype with nanosecond
    resolution ([GH 52705](https://github.com/pandas-dev/pandas/issues/52705))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") setting `step` incorrectly when being the subtrahend with
    minuend a numeric value ([GH 53255](https://github.com/pandas-dev/pandas/issues/53255))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.corr()`](../reference/api/pandas.Series.corr.html#pandas.Series.corr
    "pandas.Series.corr") and [`Series.cov()`](../reference/api/pandas.Series.cov.html#pandas.Series.cov
    "pandas.Series.cov") raising `AttributeError` for masked dtypes ([GH 51422](https://github.com/pandas-dev/pandas/issues/51422))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when calling [`Series.kurt()`](../reference/api/pandas.Series.kurt.html#pandas.Series.kurt
    "pandas.Series.kurt") and [`Series.skew()`](../reference/api/pandas.Series.skew.html#pandas.Series.skew
    "pandas.Series.skew") on NumPy data of all zero returning a Python type instead
    of a NumPy type ([GH 53482](https://github.com/pandas-dev/pandas/issues/53482))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.mean()`](../reference/api/pandas.Series.mean.html#pandas.Series.mean
    "pandas.Series.mean"), [`DataFrame.mean()`](../reference/api/pandas.DataFrame.mean.html#pandas.DataFrame.mean
    "pandas.DataFrame.mean") with object-dtype values containing strings that can
    be converted to numbers (e.g. “2”) returning incorrect numeric results; these
    now raise `TypeError` ([GH 36703](https://github.com/pandas-dev/pandas/issues/36703),
    [GH 44008](https://github.com/pandas-dev/pandas/issues/44008))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.corrwith()`](../reference/api/pandas.DataFrame.corrwith.html#pandas.DataFrame.corrwith
    "pandas.DataFrame.corrwith") raising `NotImplementedError` for PyArrow-backed
    dtypes ([GH 52314](https://github.com/pandas-dev/pandas/issues/52314))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.size()`](../reference/api/pandas.DataFrame.size.html#pandas.DataFrame.size
    "pandas.DataFrame.size") and [`Series.size()`](../reference/api/pandas.Series.size.html#pandas.Series.size
    "pandas.Series.size") returning 64-bit integer instead of a Python int ([GH 52897](https://github.com/pandas-dev/pandas/issues/52897))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DateFrame.dot()` returning `object` dtype for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") data ([GH 53979](https://github.com/pandas-dev/pandas/issues/53979))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.any()`](../reference/api/pandas.Series.any.html#pandas.Series.any
    "pandas.Series.any"), [`Series.all()`](../reference/api/pandas.Series.all.html#pandas.Series.all
    "pandas.Series.all"), [`DataFrame.any()`](../reference/api/pandas.DataFrame.any.html#pandas.DataFrame.any
    "pandas.DataFrame.any"), and [`DataFrame.all()`](../reference/api/pandas.DataFrame.all.html#pandas.DataFrame.all
    "pandas.DataFrame.all") had the default value of `bool_only` set to `None` instead
    of `False`; this change should have no impact on users ([GH 53258](https://github.com/pandas-dev/pandas/issues/53258))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.corr()`](../reference/api/pandas.Series.corr.html#pandas.Series.corr
    "pandas.Series.corr") and [`Series.cov()`](../reference/api/pandas.Series.cov.html#pandas.Series.cov
    "pandas.Series.cov") raising `AttributeError` for masked dtypes ([GH 51422](https://github.com/pandas-dev/pandas/issues/51422))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.median()`](../reference/api/pandas.Series.median.html#pandas.Series.median
    "pandas.Series.median") and [`DataFrame.median()`](../reference/api/pandas.DataFrame.median.html#pandas.DataFrame.median
    "pandas.DataFrame.median") with object-dtype values containing strings that can
    be converted to numbers (e.g. “2”) returning incorrect numeric results; these
    now raise `TypeError` ([GH 34671](https://github.com/pandas-dev/pandas/issues/34671))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.sum()`](../reference/api/pandas.Series.sum.html#pandas.Series.sum
    "pandas.Series.sum") converting dtype `uint64` to `int64` ([GH 53401](https://github.com/pandas-dev/pandas/issues/53401))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `DataFrame.style.to_latex()` and `DataFrame.style.to_html()` if the DataFrame
    contains integers with more digits than can be represented by floating point double
    precision ([GH 52272](https://github.com/pandas-dev/pandas/issues/52272))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    when given a `datetime64` or `timedelta64` dtype with unit of “s”, “us”, or “ms”
    returning [`NumpyExtensionArray`](../reference/api/pandas.arrays.NumpyExtensionArray.html#pandas.arrays.NumpyExtensionArray
    "pandas.arrays.NumpyExtensionArray") instead of [`DatetimeArray`](../reference/api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") or [`TimedeltaArray`](../reference/api/pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray") ([GH 52859](https://github.com/pandas-dev/pandas/issues/52859))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    when given an empty list and no dtype returning [`NumpyExtensionArray`](../reference/api/pandas.arrays.NumpyExtensionArray.html#pandas.arrays.NumpyExtensionArray
    "pandas.arrays.NumpyExtensionArray") instead of [`FloatingArray`](../reference/api/pandas.arrays.FloatingArray.html#pandas.arrays.FloatingArray
    "pandas.arrays.FloatingArray") ([GH 54371](https://github.com/pandas-dev/pandas/issues/54371))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ArrowDtype.numpy_dtype()` returning nanosecond units for non-nanosecond
    `pyarrow.timestamp` and `pyarrow.duration` types ([GH 51800](https://github.com/pandas-dev/pandas/issues/51800))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__repr__()` incorrectly raising a `TypeError` when the dtype
    of a column is `np.record` ([GH 48526](https://github.com/pandas-dev/pandas/issues/48526))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.info()`](../reference/api/pandas.DataFrame.info.html#pandas.DataFrame.info
    "pandas.DataFrame.info") raising `ValueError` when `use_numba` is set ([GH 51922](https://github.com/pandas-dev/pandas/issues/51922))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.insert()`](../reference/api/pandas.DataFrame.insert.html#pandas.DataFrame.insert
    "pandas.DataFrame.insert") raising `TypeError` if `loc` is `np.int64` ([GH 53193](https://github.com/pandas-dev/pandas/issues/53193))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`HDFStore.select()`](../reference/api/pandas.HDFStore.select.html#pandas.HDFStore.select
    "pandas.HDFStore.select") loses precision of large int when stored and retrieved
    ([GH 54186](https://github.com/pandas-dev/pandas/issues/54186))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") not supporting `object_` ([GH 54251](https://github.com/pandas-dev/pandas/issues/54251))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.str()`](../reference/api/pandas.Series.str.html#pandas.Series.str
    "pandas.Series.str") that did not raise a `TypeError` when iterated ([GH 54173](https://github.com/pandas-dev/pandas/issues/54173))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `repr` for `DataFrame`` with string-dtype columns ([GH 54797](https://github.com/pandas-dev/pandas/issues/54797))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`IntervalIndex.get_indexer()`](../reference/api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer") and `IntervalIndex.get_indexer_nonunique()`
    raising if `target` is read-only array ([GH 53703](https://github.com/pandas-dev/pandas/issues/53703))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") where the object could be kept alive when deleted ([GH
    54184](https://github.com/pandas-dev/pandas/issues/54184))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`interval_range()`](../reference/api/pandas.interval_range.html#pandas.interval_range
    "pandas.interval_range") where a float `step` would produce incorrect intervals
    from floating point artifacts ([GH 54477](https://github.com/pandas-dev/pandas/issues/54477))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` losing dtype when setting a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") into duplicated columns ([GH 53143](https://github.com/pandas-dev/pandas/issues/53143))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` with a boolean mask and `DataFrame.putmask()`
    with mixed non-numeric dtypes and a value other than `NaN` incorrectly raising
    `TypeError` ([GH 53291](https://github.com/pandas-dev/pandas/issues/53291))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") when using `nan` as the only element ([GH 52234](https://github.com/pandas-dev/pandas/issues/52234))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") casting [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") to `np.dnarray` when assigning [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") at predefined index of `object` dtype [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 48933](https://github.com/pandas-dev/pandas/issues/48933))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") failing to fill across data when `method` is `"pad"`,
    `"ffill"`, `"bfill"`, or `"backfill"` ([GH 53898](https://github.com/pandas-dev/pandas/issues/53898))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") ignoring `inplace` when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") is empty ([GH 53199](https://github.com/pandas-dev/pandas/issues/53199))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin"), [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax"), [`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin"), [`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax") with a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") index containing `NaT` incorrectly returning `NaN` instead
    of `NaT` ([GH 43587](https://github.com/pandas-dev/pandas/issues/43587))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") failing to raise on invalid `downcast` keyword,
    which can be only `None` or `"infer"` ([GH 53103](https://github.com/pandas-dev/pandas/issues/53103))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") with complex dtype incorrectly failing to fill
    `NaN` entries ([GH 53635](https://github.com/pandas-dev/pandas/issues/53635))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.set_levels()`](../reference/api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels") not preserving dtypes for [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") ([GH 52125](https://github.com/pandas-dev/pandas/issues/52125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in displaying a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with a long element ([GH 52960](https://github.com/pandas-dev/pandas/issues/52960))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I/O
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.to_orc()`](../reference/api/pandas.DataFrame.to_orc.html#pandas.DataFrame.to_orc
    "pandas.DataFrame.to_orc") now raising `ValueError` when non-default [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") is given ([GH 51828](https://github.com/pandas-dev/pandas/issues/51828))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") now raising `ValueError` when the name param is left
    empty while using SQLAlchemy to connect ([GH 52675](https://github.com/pandas-dev/pandas/issues/52675))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") could not parse metadata fields list type ([GH 37782](https://github.com/pandas-dev/pandas/issues/37782))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where it would error when `parse_dates` was set to a list or
    dictionary with `engine="pyarrow"` ([GH 47961](https://github.com/pandas-dev/pandas/issues/47961))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `engine="pyarrow"` raising when specifying a `dtype` with
    `index_col` ([GH 53229](https://github.com/pandas-dev/pandas/issues/53229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") not properly closing store after an `IndexError` is raised
    ([GH 52781](https://github.com/pandas-dev/pandas/issues/52781))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") where style elements were read into DataFrames ([GH 52197](https://github.com/pandas-dev/pandas/issues/52197))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") where tail texts were removed together with elements containing
    `display:none` style ([GH 51629](https://github.com/pandas-dev/pandas/issues/51629))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sql_table()`](../reference/api/pandas.read_sql_table.html#pandas.read_sql_table
    "pandas.read_sql_table") raising an exception when reading a view ([GH 52969](https://github.com/pandas-dev/pandas/issues/52969))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql
    "pandas.read_sql") when reading multiple timezone aware columns with the same
    column name ([GH 44421](https://github.com/pandas-dev/pandas/issues/44421))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") stripping whitespace in string data ([GH 53811](https://github.com/pandas-dev/pandas/issues/53811))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") where `colspace` was incorrectly applied in case of
    multi index columns ([GH 53885](https://github.com/pandas-dev/pandas/issues/53885))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") where conversion for an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with complex dtype raised a `ValueError` ([GH 54167](https://github.com/pandas-dev/pandas/issues/54167))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") where `DateTimeArray`/`DateTimeIndex` with non nanosecond
    precision could not be serialized correctly ([GH 53686](https://github.com/pandas-dev/pandas/issues/53686))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when writing and reading empty Stata dta files where dtype information was
    lost ([GH 46240](https://github.com/pandas-dev/pandas/issues/46240))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where `bz2` was treated as a hard requirement ([GH 53857](https://github.com/pandas-dev/pandas/issues/53857))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Period
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") constructor failing to raise `TypeError` when no argument
    is passed or when `None` is passed ([GH 27388](https://github.com/pandas-dev/pandas/issues/27388))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") constructor incorrectly returning the same `normalize` for
    different `DateOffset` `freq` inputs ([GH 24121](https://github.com/pandas-dev/pandas/issues/24121))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") constructor raising `ValueError` instead of `TypeError`
    when an invalid type is passed ([GH 51790](https://github.com/pandas-dev/pandas/issues/51790))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") where the object could be kept alive when deleted ([GH 54184](https://github.com/pandas-dev/pandas/issues/54184))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not processing empty strings as a null value, with `engine="pyarrow"`
    ([GH 52087](https://github.com/pandas-dev/pandas/issues/52087))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") returning `object` dtype columns instead of `float64` dtype
    columns with `engine="pyarrow"` for columns that are all null with `engine="pyarrow"`
    ([GH 52087](https://github.com/pandas-dev/pandas/issues/52087))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period.now()`](../reference/api/pandas.Period.now.html#pandas.Period.now
    "pandas.Period.now") not accepting the `freq` parameter as a keyword argument
    ([GH 53369](https://github.com/pandas-dev/pandas/issues/53369))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `PeriodIndex.map()` with `na_action="ignore"` ([GH 51644](https://github.com/pandas-dev/pandas/issues/51644))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `arrays.PeriodArray.map()` and `PeriodIndex.map()`, where the supplied
    callable operated array-wise instead of element-wise ([GH 51977](https://github.com/pandas-dev/pandas/issues/51977))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in incorrectly allowing construction of [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") or [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") with `CustomBusinessDay` freq; use `BusinessDay` instead
    ([GH 52534](https://github.com/pandas-dev/pandas/issues/52534))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") when invoked with `color=None` ([GH 51953](https://github.com/pandas-dev/pandas/issues/51953))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed UserWarning in [`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") when invoked with `c="b"` ([GH 53908](https://github.com/pandas-dev/pandas/issues/53908))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.idxmin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin"), [`SeriesGroupBy.idxmin()`](../reference/api/pandas.core.groupby.SeriesGroupBy.idxmin.html#pandas.core.groupby.SeriesGroupBy.idxmin
    "pandas.core.groupby.SeriesGroupBy.idxmin"), [`DataFrameGroupBy.idxmax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax"), [`SeriesGroupBy.idxmax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.idxmax.html#pandas.core.groupby.SeriesGroupBy.idxmax
    "pandas.core.groupby.SeriesGroupBy.idxmax") returns wrong dtype when used on an
    empty DataFrameGroupBy or SeriesGroupBy ([GH 51423](https://github.com/pandas-dev/pandas/issues/51423))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.groupby.rank()` on nullable datatypes when passing `na_option="bottom"`
    or `na_option="top"` ([GH 54206](https://github.com/pandas-dev/pandas/issues/54206))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") and [`Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") in incorrectly allowing non-fixed `freq` when resampling
    on a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") ([GH 51896](https://github.com/pandas-dev/pandas/issues/51896))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") and [`Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") losing time zone when resampling empty data ([GH 53664](https://github.com/pandas-dev/pandas/issues/53664))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") and [`Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") where `origin` has no effect in resample when values
    are outside of axis ([GH 53662](https://github.com/pandas-dev/pandas/issues/53662))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in weighted rolling aggregations when specifying `min_periods=0` ([GH 51449](https://github.com/pandas-dev/pandas/issues/51449))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") where, when the index of the grouped [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") was a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") or [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex"), and the `groupby` method was given a function as its first
    argument, the function operated on the whole index rather than each element of
    the index ([GH 51979](https://github.com/pandas-dev/pandas/issues/51979))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") with lists not respecting `as_index=False`
    ([GH 52849](https://github.com/pandas-dev/pandas/issues/52849))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") causing an error to be raised when
    the input [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") was subset as a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") after groupby (`[['a']]` and not `['a']`) and the given callable
    returned [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    that were not all indexed the same ([GH 52444](https://github.com/pandas-dev/pandas/issues/52444))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") raising a `TypeError` when selecting
    multiple columns and providing a function that returns `np.ndarray` results ([GH
    18930](https://github.com/pandas-dev/pandas/issues/18930))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.groups()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.groups.html#pandas.core.groupby.DataFrameGroupBy.groups
    "pandas.core.groupby.DataFrameGroupBy.groups") and [`SeriesGroupBy.groups()`](../reference/api/pandas.core.groupby.SeriesGroupBy.groups.html#pandas.core.groupby.SeriesGroupBy.groups
    "pandas.core.groupby.SeriesGroupBy.groups") with a datetime key in conjunction
    with another key produced an incorrect number of group keys ([GH 51158](https://github.com/pandas-dev/pandas/issues/51158))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile") may implicitly sort the result index
    with `sort=False` ([GH 53009](https://github.com/pandas-dev/pandas/issues/53009))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.size()`](../reference/api/pandas.core.groupby.SeriesGroupBy.size.html#pandas.core.groupby.SeriesGroupBy.size
    "pandas.core.groupby.SeriesGroupBy.size") where the dtype would be `np.int64`
    for data with [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") or masked dtypes (e.g. `Int64`) ([GH 53831](https://github.com/pandas-dev/pandas/issues/53831))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") with column selection on the resulting groupby object
    not returning names as tuples when grouping by a list consisting of a single element
    ([GH 53500](https://github.com/pandas-dev/pandas/issues/53500))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.var()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.var.html#pandas.core.groupby.DataFrameGroupBy.var
    "pandas.core.groupby.DataFrameGroupBy.var") and [`SeriesGroupBy.var()`](../reference/api/pandas.core.groupby.SeriesGroupBy.var.html#pandas.core.groupby.SeriesGroupBy.var
    "pandas.core.groupby.SeriesGroupBy.var") failing to raise `TypeError` when called
    with datetime64, timedelta64 or [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") values ([GH 52128](https://github.com/pandas-dev/pandas/issues/52128),
    [GH 53045](https://github.com/pandas-dev/pandas/issues/53045))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.resample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.resample.html#pandas.core.groupby.DataFrameGroupBy.resample
    "pandas.core.groupby.DataFrameGroupBy.resample") with `kind="period"` raising
    `AttributeError` ([GH 24103](https://github.com/pandas-dev/pandas/issues/24103))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Resampler.ohlc()`](../reference/api/pandas.core.resample.Resampler.ohlc.html#pandas.core.resample.Resampler.ohlc
    "pandas.core.resample.Resampler.ohlc") with empty object returning a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") instead of empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 42902](https://github.com/pandas-dev/pandas/issues/42902))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.count()`](../reference/api/pandas.core.groupby.SeriesGroupBy.count.html#pandas.core.groupby.SeriesGroupBy.count
    "pandas.core.groupby.SeriesGroupBy.count") and [`DataFrameGroupBy.count()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.count.html#pandas.core.groupby.DataFrameGroupBy.count
    "pandas.core.groupby.DataFrameGroupBy.count") where the dtype would be `np.int64`
    for data with [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") or masked dtypes (e.g. `Int64`) ([GH 53831](https://github.com/pandas-dev/pandas/issues/53831))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") and [`DataFrameGroupBy.nth()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") after performing column selection
    when using `dropna="any"` or `dropna="all"` would not subset columns ([GH 53518](https://github.com/pandas-dev/pandas/issues/53518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") and [`DataFrameGroupBy.nth()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") raised after performing column selection
    when using `dropna="any"` or `dropna="all"` resulted in rows being dropped ([GH
    53518](https://github.com/pandas-dev/pandas/issues/53518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.sum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.sum.html#pandas.core.groupby.SeriesGroupBy.sum
    "pandas.core.groupby.SeriesGroupBy.sum") and [`DataFrameGroupBy.sum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum") summing `np.inf + np.inf` and `(-np.inf)
    + (-np.inf)` to `np.nan` instead of `np.inf` and `-np.inf` respectively ([GH 53606](https://github.com/pandas-dev/pandas/issues/53606))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") raising an error when grouped [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") has a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") index and a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a name that is a month is given to the `by` argument ([GH
    48509](https://github.com/pandas-dev/pandas/issues/48509))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    coercing to `object` dtype when one column has `pa.null()` dtype ([GH 53702](https://github.com/pandas-dev/pandas/issues/53702))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") when `dropna=False` would not keep `np.nan` in the result ([GH
    10772](https://github.com/pandas-dev/pandas/issues/10772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt")
    where the `variable` column would lose extension dtypes ([GH 54297](https://github.com/pandas-dev/pandas/issues/54297))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") raising `KeyError` for extension dtypes ([GH 52904](https://github.com/pandas-dev/pandas/issues/52904))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") raising `ValueError` for data backed by read-only ndarrays
    ([GH 53513](https://github.com/pandas-dev/pandas/issues/53513))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") with `left_index=True` or `right_index=True` with mismatched
    index dtypes giving incorrect results in some cases instead of raising `MergeError`
    ([GH 53870](https://github.com/pandas-dev/pandas/issues/53870))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    when merging on integer `ExtensionDtype` and float NumPy dtype raising `TypeError`
    ([GH 46178](https://github.com/pandas-dev/pandas/issues/46178))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") and [`Series.agg()`](../reference/api/pandas.Series.agg.html#pandas.Series.agg
    "pandas.Series.agg") on non-unique columns would return incorrect type when dist-like
    argument passed in ([GH 51099](https://github.com/pandas-dev/pandas/issues/51099))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first") ignoring other’s columns if `other` is empty
    ([GH 53792](https://github.com/pandas-dev/pandas/issues/53792))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin") and [`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax"), where the axis dtype would be lost for empty frames
    ([GH 53265](https://github.com/pandas-dev/pandas/issues/53265))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") not merging correctly when having `MultiIndex` with
    single level ([GH 52331](https://github.com/pandas-dev/pandas/issues/52331))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") losing extension dtypes when columns is a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and frame contains mixed dtypes ([GH 45740](https://github.com/pandas-dev/pandas/issues/45740))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") sorting columns lexicographically ([GH 53786](https://github.com/pandas-dev/pandas/issues/53786))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.transpose()`](../reference/api/pandas.DataFrame.transpose.html#pandas.DataFrame.transpose
    "pandas.DataFrame.transpose") inferring dtype for object column ([GH 51546](https://github.com/pandas-dev/pandas/issues/51546))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.combine_first()`](../reference/api/pandas.Series.combine_first.html#pandas.Series.combine_first
    "pandas.Series.combine_first") converting `int64` dtype to `float64` and losing
    precision on very large integers ([GH 51764](https://github.com/pandas-dev/pandas/issues/51764))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when joining empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects, where the joined index would be a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") instead of the joined index type ([GH 52777](https://github.com/pandas-dev/pandas/issues/52777))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`SparseDtype`](../reference/api/pandas.SparseDtype.html#pandas.SparseDtype
    "pandas.SparseDtype") constructor failing to raise `TypeError` when given an incompatible
    `dtype` for its subtype, which must be a NumPy dtype ([GH 53160](https://github.com/pandas-dev/pandas/issues/53160))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `arrays.SparseArray.map()` allowed the fill value to be included in the
    sparse values ([GH 52095](https://github.com/pandas-dev/pandas/issues/52095))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`ArrowStringArray`](../reference/api/pandas.arrays.ArrowStringArray.html#pandas.arrays.ArrowStringArray
    "pandas.arrays.ArrowStringArray") constructor raises `ValueError` with dictionary
    types of strings ([GH 54074](https://github.com/pandas-dev/pandas/issues/54074))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor not copying [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with extension dtype when given in dict ([GH 53744](https://github.com/pandas-dev/pandas/issues/53744))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`ArrowExtensionArray`](../reference/api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") converting pandas non-nanosecond temporal
    objects from non-zero values to zero values ([GH 53171](https://github.com/pandas-dev/pandas/issues/53171))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.quantile()`](../reference/api/pandas.Series.quantile.html#pandas.Series.quantile
    "pandas.Series.quantile") for PyArrow temporal types raising `ArrowInvalid` ([GH
    52678](https://github.com/pandas-dev/pandas/issues/52678))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rank()`](../reference/api/pandas.Series.rank.html#pandas.Series.rank
    "pandas.Series.rank") returning wrong order for small values with `Float64` dtype
    ([GH 52471](https://github.com/pandas-dev/pandas/issues/52471))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.unique()`](../reference/api/pandas.Series.unique.html#pandas.Series.unique
    "pandas.Series.unique") for boolean `ArrowDtype` with `NA` values ([GH 54667](https://github.com/pandas-dev/pandas/issues/54667))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `__iter__()` and `__getitem__()` returning python datetime and timedelta
    objects for non-nano dtypes ([GH 53326](https://github.com/pandas-dev/pandas/issues/53326))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `factorize()` returning incorrect uniques for a `pyarrow.dictionary`
    type `pyarrow.chunked_array` with more than one chunk ([GH 54844](https://github.com/pandas-dev/pandas/issues/54844))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when passing an `ExtensionArray` subclass to `dtype` keywords. This will
    now raise a `UserWarning` to encourage passing an instance instead ([GH 31356](https://github.com/pandas-dev/pandas/issues/31356),
    [GH 54592](https://github.com/pandas-dev/pandas/issues/54592))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") repr would not work when a column had an [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with a `pyarrow.ExtensionDtype` ([GH 54063](https://github.com/pandas-dev/pandas/issues/54063))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where the `__from_arrow__` method of masked ExtensionDtypes (e.g. [`Float64Dtype`](../reference/api/pandas.Float64Dtype.html#pandas.Float64Dtype
    "pandas.Float64Dtype"), [`BooleanDtype`](../reference/api/pandas.BooleanDtype.html#pandas.BooleanDtype
    "pandas.BooleanDtype")) would not accept PyArrow arrays of type `pyarrow.null()`
    ([GH 52223](https://github.com/pandas-dev/pandas/issues/52223))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styler
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Styler._copy()` calling overridden methods in subclasses of [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") ([GH 52728](https://github.com/pandas-dev/pandas/issues/52728))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metadata
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fixed metadata propagation in [`DataFrame.max()`](../reference/api/pandas.DataFrame.max.html#pandas.DataFrame.max
    "pandas.DataFrame.max"), [`DataFrame.min()`](../reference/api/pandas.DataFrame.min.html#pandas.DataFrame.min
    "pandas.DataFrame.min"), [`DataFrame.prod()`](../reference/api/pandas.DataFrame.prod.html#pandas.DataFrame.prod
    "pandas.DataFrame.prod"), [`DataFrame.mean()`](../reference/api/pandas.DataFrame.mean.html#pandas.DataFrame.mean
    "pandas.DataFrame.mean"), [`Series.mode()`](../reference/api/pandas.Series.mode.html#pandas.Series.mode
    "pandas.Series.mode"), [`DataFrame.median()`](../reference/api/pandas.DataFrame.median.html#pandas.DataFrame.median
    "pandas.DataFrame.median"), [`DataFrame.sem()`](../reference/api/pandas.DataFrame.sem.html#pandas.DataFrame.sem
    "pandas.DataFrame.sem"), [`DataFrame.skew()`](../reference/api/pandas.DataFrame.skew.html#pandas.DataFrame.skew
    "pandas.DataFrame.skew"), [`DataFrame.kurt()`](../reference/api/pandas.DataFrame.kurt.html#pandas.DataFrame.kurt
    "pandas.DataFrame.kurt") ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed metadata propagation in [`DataFrame.squeeze()`](../reference/api/pandas.DataFrame.squeeze.html#pandas.DataFrame.squeeze
    "pandas.DataFrame.squeeze"), and [`DataFrame.describe()`](../reference/api/pandas.DataFrame.describe.html#pandas.DataFrame.describe
    "pandas.DataFrame.describe") ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed metadata propagation in [`DataFrame.std()`](../reference/api/pandas.DataFrame.std.html#pandas.DataFrame.std
    "pandas.DataFrame.std") ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `FloatingArray.__contains__` with `NaN` item incorrectly returning `False`
    when `NaN` values are present ([GH 52840](https://github.com/pandas-dev/pandas/issues/52840))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") raising for data of complex dtype when `NaN` values are present
    ([GH 53627](https://github.com/pandas-dev/pandas/issues/53627))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") where `repr` of index passed with time does not print
    time is midnight and non-day based freq([GH 53470](https://github.com/pandas-dev/pandas/issues/53470))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") and [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") now throw assertion error for two unequal
    sets ([GH 51727](https://github.com/pandas-dev/pandas/issues/51727))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") checks category dtypes even when asked not
    to check index type ([GH 52126](https://github.com/pandas-dev/pandas/issues/52126))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`api.interchange.from_dataframe()`](../reference/api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe
    "pandas.api.interchange.from_dataframe") was not respecting `allow_copy` argument
    ([GH 54322](https://github.com/pandas-dev/pandas/issues/54322))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`api.interchange.from_dataframe()`](../reference/api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe
    "pandas.api.interchange.from_dataframe") was raising during interchanging from
    non-pandas tz-aware data containing null values ([GH 54287](https://github.com/pandas-dev/pandas/issues/54287))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`api.interchange.from_dataframe()`](../reference/api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe
    "pandas.api.interchange.from_dataframe") when converting an empty DataFrame object
    ([GH 53155](https://github.com/pandas-dev/pandas/issues/53155))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`from_dummies()`](../reference/api/pandas.from_dummies.html#pandas.from_dummies
    "pandas.from_dummies") where the resulting [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") did not match the original [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 54300](https://github.com/pandas-dev/pandas/issues/54300))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`from_dummies()`](../reference/api/pandas.from_dummies.html#pandas.from_dummies
    "pandas.from_dummies") where the resulting data would always be `object` dtype
    instead of the dtype of the columns ([GH 54300](https://github.com/pandas-dev/pandas/issues/54300))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.first()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.first.html#pandas.core.groupby.DataFrameGroupBy.first
    "pandas.core.groupby.DataFrameGroupBy.first"), [`DataFrameGroupBy.last()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.last.html#pandas.core.groupby.DataFrameGroupBy.last
    "pandas.core.groupby.DataFrameGroupBy.last"), [`SeriesGroupBy.first()`](../reference/api/pandas.core.groupby.SeriesGroupBy.first.html#pandas.core.groupby.SeriesGroupBy.first
    "pandas.core.groupby.SeriesGroupBy.first"), and [`SeriesGroupBy.last()`](../reference/api/pandas.core.groupby.SeriesGroupBy.last.html#pandas.core.groupby.SeriesGroupBy.last
    "pandas.core.groupby.SeriesGroupBy.last") where an empty group would return `np.nan`
    instead of the corresponding [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") NA value ([GH 39098](https://github.com/pandas-dev/pandas/issues/39098))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") with casting the mean of ints back to an int ([GH
    16676](https://github.com/pandas-dev/pandas/issues/16676))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") with a `fill_value` that should be inferred with a
    `ExtensionDtype` incorrectly inferring `object` dtype ([GH 52586](https://github.com/pandas-dev/pandas/issues/52586))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift") with `axis=1` on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a single `ExtensionDtype` column giving incorrect results
    ([GH 53832](https://github.com/pandas-dev/pandas/issues/53832))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.sort_values()`](../reference/api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values") when a `key` is passed ([GH 52764](https://github.com/pandas-dev/pandas/issues/52764))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.align()`](../reference/api/pandas.Series.align.html#pandas.Series.align
    "pandas.Series.align"), [`DataFrame.align()`](../reference/api/pandas.DataFrame.align.html#pandas.DataFrame.align
    "pandas.DataFrame.align"), [`Series.reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex"), [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex"), [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate"), [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate"), incorrectly failing to raise with method=”asfreq”
    ([GH 53620](https://github.com/pandas-dev/pandas/issues/53620))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.argsort()`](../reference/api/pandas.Series.argsort.html#pandas.Series.argsort
    "pandas.Series.argsort") failing to raise when an invalid `axis` is passed ([GH
    54257](https://github.com/pandas-dev/pandas/issues/54257))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") when giving a callable to an empty series, the returned series
    had `object` dtype. It now keeps the original dtype ([GH 52384](https://github.com/pandas-dev/pandas/issues/52384))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.memory_usage()`](../reference/api/pandas.Series.memory_usage.html#pandas.Series.memory_usage
    "pandas.Series.memory_usage") when `deep=True` throw an error with Series of objects
    and the returned value is incorrect, as it does not take into account GC corrections
    ([GH 51858](https://github.com/pandas-dev/pandas/issues/51858))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`period_range()`](../reference/api/pandas.period_range.html#pandas.period_range
    "pandas.period_range") the default behavior when freq was not passed as an argument
    was incorrect([GH 53687](https://github.com/pandas-dev/pandas/issues/53687))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed incorrect `__name__` attribute of `pandas._libs.json` ([GH 52898](https://github.com/pandas-dev/pandas/issues/52898))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`CategoricalIndex.remove_categories()`](../reference/api/pandas.CategoricalIndex.remove_categories.html#pandas.CategoricalIndex.remove_categories
    "pandas.CategoricalIndex.remove_categories") where ordered categories would not
    be maintained ([GH 53935](https://github.com/pandas-dev/pandas/issues/53935)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") with `dtype="category"` for nullable arrays with read-only
    null value masks ([GH 53658](https://github.com/pandas-dev/pandas/issues/53658))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") , where the value of the `na_action` parameter was not used
    if the series held a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") ([GH 22527](https://github.com/pandas-dev/pandas/issues/22527)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`DatetimeIndex.map()` with `na_action="ignore"` now works as expected ([GH
    51644](https://github.com/pandas-dev/pandas/issues/51644))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.slice_indexer()` now raises `KeyError` for non-monotonic indexes
    if either of the slice bounds is not in the index; this behaviour was previously
    deprecated but inconsistently handled ([GH 53983](https://github.com/pandas-dev/pandas/issues/53983))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DateOffset` which had inconsistent behavior when multiplying a `DateOffset`
    object by a constant ([GH 47953](https://github.com/pandas-dev/pandas/issues/47953))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") when `freq` was a `DateOffset` with `nanoseconds` ([GH 46877](https://github.com/pandas-dev/pandas/issues/46877))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") converting [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") containing [`arrays.ArrowExtensionArray`](../reference/api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") of PyArrow timestamps to numpy datetimes
    ([GH 52545](https://github.com/pandas-dev/pandas/issues/52545))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeArray.map()` and `DatetimeIndex.map()`, where the supplied callable
    operated array-wise instead of element-wise ([GH 51977](https://github.com/pandas-dev/pandas/issues/51977))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") raising `ValueError` for PyArrow-backed date like dtypes
    ([GH 53854](https://github.com/pandas-dev/pandas/issues/53854))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.date()`](../reference/api/pandas.Timestamp.date.html#pandas.Timestamp.date
    "pandas.Timestamp.date"), [`Timestamp.isocalendar()`](../reference/api/pandas.Timestamp.isocalendar.html#pandas.Timestamp.isocalendar
    "pandas.Timestamp.isocalendar"), [`Timestamp.timetuple()`](../reference/api/pandas.Timestamp.timetuple.html#pandas.Timestamp.timetuple
    "pandas.Timestamp.timetuple"), and [`Timestamp.toordinal()`](../reference/api/pandas.Timestamp.toordinal.html#pandas.Timestamp.toordinal
    "pandas.Timestamp.toordinal") were returning incorrect results for inputs outside
    those supported by the Python standard library’s datetime module ([GH 53668](https://github.com/pandas-dev/pandas/issues/53668))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.round()`](../reference/api/pandas.Timestamp.round.html#pandas.Timestamp.round
    "pandas.Timestamp.round") with values close to the implementation bounds returning
    incorrect results instead of raising `OutOfBoundsDatetime` ([GH 51494](https://github.com/pandas-dev/pandas/issues/51494))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from a datetime or timedelta scalar always inferring nanosecond
    resolution instead of inferring from the input ([GH 52212](https://github.com/pandas-dev/pandas/issues/52212))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") from a string representing a time without a date inferring
    an incorrect unit ([GH 54097](https://github.com/pandas-dev/pandas/issues/54097))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with `ts_input=pd.NA` raising `TypeError` ([GH 45481](https://github.com/pandas-dev/pandas/issues/45481))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in parsing datetime strings with weekday but no day e.g. “2023 Sept Thu”
    incorrectly raising `AttributeError` instead of `ValueError` ([GH 52659](https://github.com/pandas-dev/pandas/issues/52659))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the repr for [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") when dtype is a timezone aware datetime with non-nanosecond resolution
    raising `OutOfBoundsDatetime` ([GH 54623](https://github.com/pandas-dev/pandas/issues/54623))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") division or multiplication leading to `.freq` of “0 Days”
    instead of `None` ([GH 51575](https://github.com/pandas-dev/pandas/issues/51575))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") with NumPy `timedelta64` objects not properly raising `ValueError`
    ([GH 52806](https://github.com/pandas-dev/pandas/issues/52806))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") converting [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") containing [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") of `pyarrow.duration` to NumPy `timedelta64` ([GH 54298](https://github.com/pandas-dev/pandas/issues/54298))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timedelta.__hash__()`, raising an `OutOfBoundsTimedelta` on certain
    large values of second resolution ([GH 54037](https://github.com/pandas-dev/pandas/issues/54037))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta.round()`](../reference/api/pandas.Timedelta.round.html#pandas.Timedelta.round
    "pandas.Timedelta.round") with values close to the implementation bounds returning
    incorrect results instead of raising `OutOfBoundsTimedelta` ([GH 51494](https://github.com/pandas-dev/pandas/issues/51494))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `TimedeltaIndex.map()` with `na_action="ignore"` ([GH 51644](https://github.com/pandas-dev/pandas/issues/51644))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `arrays.TimedeltaArray.map()` and `TimedeltaIndex.map()`, where the supplied
    callable operated array-wise instead of element-wise ([GH 51977](https://github.com/pandas-dev/pandas/issues/51977))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`infer_freq()`](../reference/api/pandas.infer_freq.html#pandas.infer_freq
    "pandas.infer_freq") that raises `TypeError` for `Series` of timezone-aware timestamps
    ([GH 52456](https://github.com/pandas-dev/pandas/issues/52456))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeTZDtype.base()` that always returns a NumPy dtype with nanosecond
    resolution ([GH 52705](https://github.com/pandas-dev/pandas/issues/52705))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") setting `step` incorrectly when being the subtrahend with
    minuend a numeric value ([GH 53255](https://github.com/pandas-dev/pandas/issues/53255))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.corr()`](../reference/api/pandas.Series.corr.html#pandas.Series.corr
    "pandas.Series.corr") and [`Series.cov()`](../reference/api/pandas.Series.cov.html#pandas.Series.cov
    "pandas.Series.cov") raising `AttributeError` for masked dtypes ([GH 51422](https://github.com/pandas-dev/pandas/issues/51422))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when calling [`Series.kurt()`](../reference/api/pandas.Series.kurt.html#pandas.Series.kurt
    "pandas.Series.kurt") and [`Series.skew()`](../reference/api/pandas.Series.skew.html#pandas.Series.skew
    "pandas.Series.skew") on NumPy data of all zero returning a Python type instead
    of a NumPy type ([GH 53482](https://github.com/pandas-dev/pandas/issues/53482))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.mean()`](../reference/api/pandas.Series.mean.html#pandas.Series.mean
    "pandas.Series.mean"), [`DataFrame.mean()`](../reference/api/pandas.DataFrame.mean.html#pandas.DataFrame.mean
    "pandas.DataFrame.mean") with object-dtype values containing strings that can
    be converted to numbers (e.g. “2”) returning incorrect numeric results; these
    now raise `TypeError` ([GH 36703](https://github.com/pandas-dev/pandas/issues/36703),
    [GH 44008](https://github.com/pandas-dev/pandas/issues/44008))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.corrwith()`](../reference/api/pandas.DataFrame.corrwith.html#pandas.DataFrame.corrwith
    "pandas.DataFrame.corrwith") raising `NotImplementedError` for PyArrow-backed
    dtypes ([GH 52314](https://github.com/pandas-dev/pandas/issues/52314))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.size()`](../reference/api/pandas.DataFrame.size.html#pandas.DataFrame.size
    "pandas.DataFrame.size") and [`Series.size()`](../reference/api/pandas.Series.size.html#pandas.Series.size
    "pandas.Series.size") returning 64-bit integer instead of a Python int ([GH 52897](https://github.com/pandas-dev/pandas/issues/52897))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DateFrame.dot()` returning `object` dtype for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") data ([GH 53979](https://github.com/pandas-dev/pandas/issues/53979))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.any()`](../reference/api/pandas.Series.any.html#pandas.Series.any
    "pandas.Series.any"), [`Series.all()`](../reference/api/pandas.Series.all.html#pandas.Series.all
    "pandas.Series.all"), [`DataFrame.any()`](../reference/api/pandas.DataFrame.any.html#pandas.DataFrame.any
    "pandas.DataFrame.any"), and [`DataFrame.all()`](../reference/api/pandas.DataFrame.all.html#pandas.DataFrame.all
    "pandas.DataFrame.all") had the default value of `bool_only` set to `None` instead
    of `False`; this change should have no impact on users ([GH 53258](https://github.com/pandas-dev/pandas/issues/53258))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.corr()`](../reference/api/pandas.Series.corr.html#pandas.Series.corr
    "pandas.Series.corr") and [`Series.cov()`](../reference/api/pandas.Series.cov.html#pandas.Series.cov
    "pandas.Series.cov") raising `AttributeError` for masked dtypes ([GH 51422](https://github.com/pandas-dev/pandas/issues/51422))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.median()`](../reference/api/pandas.Series.median.html#pandas.Series.median
    "pandas.Series.median") and [`DataFrame.median()`](../reference/api/pandas.DataFrame.median.html#pandas.DataFrame.median
    "pandas.DataFrame.median") with object-dtype values containing strings that can
    be converted to numbers (e.g. “2”) returning incorrect numeric results; these
    now raise `TypeError` ([GH 34671](https://github.com/pandas-dev/pandas/issues/34671))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.sum()`](../reference/api/pandas.Series.sum.html#pandas.Series.sum
    "pandas.Series.sum") converting dtype `uint64` to `int64` ([GH 53401](https://github.com/pandas-dev/pandas/issues/53401))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `DataFrame.style.to_latex()` and `DataFrame.style.to_html()` if the DataFrame
    contains integers with more digits than can be represented by floating point double
    precision ([GH 52272](https://github.com/pandas-dev/pandas/issues/52272))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    when given a `datetime64` or `timedelta64` dtype with unit of “s”, “us”, or “ms”
    returning [`NumpyExtensionArray`](../reference/api/pandas.arrays.NumpyExtensionArray.html#pandas.arrays.NumpyExtensionArray
    "pandas.arrays.NumpyExtensionArray") instead of [`DatetimeArray`](../reference/api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") or [`TimedeltaArray`](../reference/api/pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray") ([GH 52859](https://github.com/pandas-dev/pandas/issues/52859))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    when given an empty list and no dtype returning [`NumpyExtensionArray`](../reference/api/pandas.arrays.NumpyExtensionArray.html#pandas.arrays.NumpyExtensionArray
    "pandas.arrays.NumpyExtensionArray") instead of [`FloatingArray`](../reference/api/pandas.arrays.FloatingArray.html#pandas.arrays.FloatingArray
    "pandas.arrays.FloatingArray") ([GH 54371](https://github.com/pandas-dev/pandas/issues/54371))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ArrowDtype.numpy_dtype()` returning nanosecond units for non-nanosecond
    `pyarrow.timestamp` and `pyarrow.duration` types ([GH 51800](https://github.com/pandas-dev/pandas/issues/51800))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__repr__()` incorrectly raising a `TypeError` when the dtype
    of a column is `np.record` ([GH 48526](https://github.com/pandas-dev/pandas/issues/48526))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.info()`](../reference/api/pandas.DataFrame.info.html#pandas.DataFrame.info
    "pandas.DataFrame.info") raising `ValueError` when `use_numba` is set ([GH 51922](https://github.com/pandas-dev/pandas/issues/51922))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.insert()`](../reference/api/pandas.DataFrame.insert.html#pandas.DataFrame.insert
    "pandas.DataFrame.insert") raising `TypeError` if `loc` is `np.int64` ([GH 53193](https://github.com/pandas-dev/pandas/issues/53193))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`HDFStore.select()`](../reference/api/pandas.HDFStore.select.html#pandas.HDFStore.select
    "pandas.HDFStore.select") loses precision of large int when stored and retrieved
    ([GH 54186](https://github.com/pandas-dev/pandas/issues/54186))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") not supporting `object_` ([GH 54251](https://github.com/pandas-dev/pandas/issues/54251))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.str()`](../reference/api/pandas.Series.str.html#pandas.Series.str
    "pandas.Series.str") that did not raise a `TypeError` when iterated ([GH 54173](https://github.com/pandas-dev/pandas/issues/54173))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `repr` for `DataFrame`` with string-dtype columns ([GH 54797](https://github.com/pandas-dev/pandas/issues/54797))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`IntervalIndex.get_indexer()`](../reference/api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer") and `IntervalIndex.get_indexer_nonunique()`
    raising if `target` is read-only array ([GH 53703](https://github.com/pandas-dev/pandas/issues/53703))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") where the object could be kept alive when deleted ([GH
    54184](https://github.com/pandas-dev/pandas/issues/54184))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`interval_range()`](../reference/api/pandas.interval_range.html#pandas.interval_range
    "pandas.interval_range") where a float `step` would produce incorrect intervals
    from floating point artifacts ([GH 54477](https://github.com/pandas-dev/pandas/issues/54477))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` losing dtype when setting a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") into duplicated columns ([GH 53143](https://github.com/pandas-dev/pandas/issues/53143))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` with a boolean mask and `DataFrame.putmask()`
    with mixed non-numeric dtypes and a value other than `NaN` incorrectly raising
    `TypeError` ([GH 53291](https://github.com/pandas-dev/pandas/issues/53291))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") when using `nan` as the only element ([GH 52234](https://github.com/pandas-dev/pandas/issues/52234))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") casting [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") to `np.dnarray` when assigning [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") at predefined index of `object` dtype [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 48933](https://github.com/pandas-dev/pandas/issues/48933))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") failing to fill across data when `method` is `"pad"`,
    `"ffill"`, `"bfill"`, or `"backfill"` ([GH 53898](https://github.com/pandas-dev/pandas/issues/53898))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") ignoring `inplace` when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") is empty ([GH 53199](https://github.com/pandas-dev/pandas/issues/53199))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.idxmin()`](../reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin
    "pandas.Series.idxmin"), [`Series.idxmax()`](../reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax
    "pandas.Series.idxmax"), [`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin"), [`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax") with a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") index containing `NaT` incorrectly returning `NaN` instead
    of `NaT` ([GH 43587](https://github.com/pandas-dev/pandas/issues/43587))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") failing to raise on invalid `downcast` keyword,
    which can be only `None` or `"infer"` ([GH 53103](https://github.com/pandas-dev/pandas/issues/53103))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") with complex dtype incorrectly failing to fill
    `NaN` entries ([GH 53635](https://github.com/pandas-dev/pandas/issues/53635))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.set_levels()`](../reference/api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels") not preserving dtypes for [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") ([GH 52125](https://github.com/pandas-dev/pandas/issues/52125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in displaying a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with a long element ([GH 52960](https://github.com/pandas-dev/pandas/issues/52960))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I/O
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.to_orc()`](../reference/api/pandas.DataFrame.to_orc.html#pandas.DataFrame.to_orc
    "pandas.DataFrame.to_orc") now raising `ValueError` when non-default [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") is given ([GH 51828](https://github.com/pandas-dev/pandas/issues/51828))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") now raising `ValueError` when the name param is left
    empty while using SQLAlchemy to connect ([GH 52675](https://github.com/pandas-dev/pandas/issues/52675))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") could not parse metadata fields list type ([GH 37782](https://github.com/pandas-dev/pandas/issues/37782))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where it would error when `parse_dates` was set to a list or
    dictionary with `engine="pyarrow"` ([GH 47961](https://github.com/pandas-dev/pandas/issues/47961))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `engine="pyarrow"` raising when specifying a `dtype` with
    `index_col` ([GH 53229](https://github.com/pandas-dev/pandas/issues/53229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") not properly closing store after an `IndexError` is raised
    ([GH 52781](https://github.com/pandas-dev/pandas/issues/52781))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") where style elements were read into DataFrames ([GH 52197](https://github.com/pandas-dev/pandas/issues/52197))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") where tail texts were removed together with elements containing
    `display:none` style ([GH 51629](https://github.com/pandas-dev/pandas/issues/51629))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sql_table()`](../reference/api/pandas.read_sql_table.html#pandas.read_sql_table
    "pandas.read_sql_table") raising an exception when reading a view ([GH 52969](https://github.com/pandas-dev/pandas/issues/52969))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql
    "pandas.read_sql") when reading multiple timezone aware columns with the same
    column name ([GH 44421](https://github.com/pandas-dev/pandas/issues/44421))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") stripping whitespace in string data ([GH 53811](https://github.com/pandas-dev/pandas/issues/53811))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") where `colspace` was incorrectly applied in case of
    multi index columns ([GH 53885](https://github.com/pandas-dev/pandas/issues/53885))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") where conversion for an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with complex dtype raised a `ValueError` ([GH 54167](https://github.com/pandas-dev/pandas/issues/54167))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") where `DateTimeArray`/`DateTimeIndex` with non nanosecond
    precision could not be serialized correctly ([GH 53686](https://github.com/pandas-dev/pandas/issues/53686))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when writing and reading empty Stata dta files where dtype information was
    lost ([GH 46240](https://github.com/pandas-dev/pandas/issues/46240))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where `bz2` was treated as a hard requirement ([GH 53857](https://github.com/pandas-dev/pandas/issues/53857))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Period
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") constructor failing to raise `TypeError` when no argument
    is passed or when `None` is passed ([GH 27388](https://github.com/pandas-dev/pandas/issues/27388))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") constructor incorrectly returning the same `normalize` for
    different `DateOffset` `freq` inputs ([GH 24121](https://github.com/pandas-dev/pandas/issues/24121))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") constructor raising `ValueError` instead of `TypeError`
    when an invalid type is passed ([GH 51790](https://github.com/pandas-dev/pandas/issues/51790))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") where the object could be kept alive when deleted ([GH 54184](https://github.com/pandas-dev/pandas/issues/54184))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not processing empty strings as a null value, with `engine="pyarrow"`
    ([GH 52087](https://github.com/pandas-dev/pandas/issues/52087))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") returning `object` dtype columns instead of `float64` dtype
    columns with `engine="pyarrow"` for columns that are all null with `engine="pyarrow"`
    ([GH 52087](https://github.com/pandas-dev/pandas/issues/52087))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period.now()`](../reference/api/pandas.Period.now.html#pandas.Period.now
    "pandas.Period.now") not accepting the `freq` parameter as a keyword argument
    ([GH 53369](https://github.com/pandas-dev/pandas/issues/53369))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `PeriodIndex.map()` with `na_action="ignore"` ([GH 51644](https://github.com/pandas-dev/pandas/issues/51644))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `arrays.PeriodArray.map()` and `PeriodIndex.map()`, where the supplied
    callable operated array-wise instead of element-wise ([GH 51977](https://github.com/pandas-dev/pandas/issues/51977))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in incorrectly allowing construction of [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") or [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") with `CustomBusinessDay` freq; use `BusinessDay` instead
    ([GH 52534](https://github.com/pandas-dev/pandas/issues/52534))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") when invoked with `color=None` ([GH 51953](https://github.com/pandas-dev/pandas/issues/51953))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed UserWarning in [`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") when invoked with `c="b"` ([GH 53908](https://github.com/pandas-dev/pandas/issues/53908))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.idxmin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin"), [`SeriesGroupBy.idxmin()`](../reference/api/pandas.core.groupby.SeriesGroupBy.idxmin.html#pandas.core.groupby.SeriesGroupBy.idxmin
    "pandas.core.groupby.SeriesGroupBy.idxmin"), [`DataFrameGroupBy.idxmax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax"), [`SeriesGroupBy.idxmax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.idxmax.html#pandas.core.groupby.SeriesGroupBy.idxmax
    "pandas.core.groupby.SeriesGroupBy.idxmax") returns wrong dtype when used on an
    empty DataFrameGroupBy or SeriesGroupBy ([GH 51423](https://github.com/pandas-dev/pandas/issues/51423))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.groupby.rank()` on nullable datatypes when passing `na_option="bottom"`
    or `na_option="top"` ([GH 54206](https://github.com/pandas-dev/pandas/issues/54206))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") and [`Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") in incorrectly allowing non-fixed `freq` when resampling
    on a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") ([GH 51896](https://github.com/pandas-dev/pandas/issues/51896))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") and [`Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") losing time zone when resampling empty data ([GH 53664](https://github.com/pandas-dev/pandas/issues/53664))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") and [`Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") where `origin` has no effect in resample when values
    are outside of axis ([GH 53662](https://github.com/pandas-dev/pandas/issues/53662))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in weighted rolling aggregations when specifying `min_periods=0` ([GH 51449](https://github.com/pandas-dev/pandas/issues/51449))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") where, when the index of the grouped [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") was a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") or [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex"), and the `groupby` method was given a function as its first
    argument, the function operated on the whole index rather than each element of
    the index ([GH 51979](https://github.com/pandas-dev/pandas/issues/51979))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") with lists not respecting `as_index=False`
    ([GH 52849](https://github.com/pandas-dev/pandas/issues/52849))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") causing an error to be raised when
    the input [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") was subset as a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") after groupby (`[['a']]` and not `['a']`) and the given callable
    returned [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    that were not all indexed the same ([GH 52444](https://github.com/pandas-dev/pandas/issues/52444))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") raising a `TypeError` when selecting
    multiple columns and providing a function that returns `np.ndarray` results ([GH
    18930](https://github.com/pandas-dev/pandas/issues/18930))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.groups()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.groups.html#pandas.core.groupby.DataFrameGroupBy.groups
    "pandas.core.groupby.DataFrameGroupBy.groups") and [`SeriesGroupBy.groups()`](../reference/api/pandas.core.groupby.SeriesGroupBy.groups.html#pandas.core.groupby.SeriesGroupBy.groups
    "pandas.core.groupby.SeriesGroupBy.groups") with a datetime key in conjunction
    with another key produced an incorrect number of group keys ([GH 51158](https://github.com/pandas-dev/pandas/issues/51158))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile") may implicitly sort the result index
    with `sort=False` ([GH 53009](https://github.com/pandas-dev/pandas/issues/53009))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.size()`](../reference/api/pandas.core.groupby.SeriesGroupBy.size.html#pandas.core.groupby.SeriesGroupBy.size
    "pandas.core.groupby.SeriesGroupBy.size") where the dtype would be `np.int64`
    for data with [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") or masked dtypes (e.g. `Int64`) ([GH 53831](https://github.com/pandas-dev/pandas/issues/53831))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") with column selection on the resulting groupby object
    not returning names as tuples when grouping by a list consisting of a single element
    ([GH 53500](https://github.com/pandas-dev/pandas/issues/53500))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.var()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.var.html#pandas.core.groupby.DataFrameGroupBy.var
    "pandas.core.groupby.DataFrameGroupBy.var") and [`SeriesGroupBy.var()`](../reference/api/pandas.core.groupby.SeriesGroupBy.var.html#pandas.core.groupby.SeriesGroupBy.var
    "pandas.core.groupby.SeriesGroupBy.var") failing to raise `TypeError` when called
    with datetime64, timedelta64 or [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") values ([GH 52128](https://github.com/pandas-dev/pandas/issues/52128),
    [GH 53045](https://github.com/pandas-dev/pandas/issues/53045))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.resample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.resample.html#pandas.core.groupby.DataFrameGroupBy.resample
    "pandas.core.groupby.DataFrameGroupBy.resample") with `kind="period"` raising
    `AttributeError` ([GH 24103](https://github.com/pandas-dev/pandas/issues/24103))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Resampler.ohlc()`](../reference/api/pandas.core.resample.Resampler.ohlc.html#pandas.core.resample.Resampler.ohlc
    "pandas.core.resample.Resampler.ohlc") with empty object returning a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") instead of empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 42902](https://github.com/pandas-dev/pandas/issues/42902))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.count()`](../reference/api/pandas.core.groupby.SeriesGroupBy.count.html#pandas.core.groupby.SeriesGroupBy.count
    "pandas.core.groupby.SeriesGroupBy.count") and [`DataFrameGroupBy.count()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.count.html#pandas.core.groupby.DataFrameGroupBy.count
    "pandas.core.groupby.DataFrameGroupBy.count") where the dtype would be `np.int64`
    for data with [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") or masked dtypes (e.g. `Int64`) ([GH 53831](https://github.com/pandas-dev/pandas/issues/53831))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") and [`DataFrameGroupBy.nth()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") after performing column selection
    when using `dropna="any"` or `dropna="all"` would not subset columns ([GH 53518](https://github.com/pandas-dev/pandas/issues/53518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") and [`DataFrameGroupBy.nth()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") raised after performing column selection
    when using `dropna="any"` or `dropna="all"` resulted in rows being dropped ([GH
    53518](https://github.com/pandas-dev/pandas/issues/53518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.sum()`](../reference/api/pandas.core.groupby.SeriesGroupBy.sum.html#pandas.core.groupby.SeriesGroupBy.sum
    "pandas.core.groupby.SeriesGroupBy.sum") and [`DataFrameGroupBy.sum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum") summing `np.inf + np.inf` and `(-np.inf)
    + (-np.inf)` to `np.nan` instead of `np.inf` and `-np.inf` respectively ([GH 53606](https://github.com/pandas-dev/pandas/issues/53606))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") raising an error when grouped [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") has a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") index and a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a name that is a month is given to the `by` argument ([GH
    48509](https://github.com/pandas-dev/pandas/issues/48509))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    coercing to `object` dtype when one column has `pa.null()` dtype ([GH 53702](https://github.com/pandas-dev/pandas/issues/53702))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") when `dropna=False` would not keep `np.nan` in the result ([GH
    10772](https://github.com/pandas-dev/pandas/issues/10772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt")
    where the `variable` column would lose extension dtypes ([GH 54297](https://github.com/pandas-dev/pandas/issues/54297))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") raising `KeyError` for extension dtypes ([GH 52904](https://github.com/pandas-dev/pandas/issues/52904))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") raising `ValueError` for data backed by read-only ndarrays
    ([GH 53513](https://github.com/pandas-dev/pandas/issues/53513))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") with `left_index=True` or `right_index=True` with mismatched
    index dtypes giving incorrect results in some cases instead of raising `MergeError`
    ([GH 53870](https://github.com/pandas-dev/pandas/issues/53870))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    when merging on integer `ExtensionDtype` and float NumPy dtype raising `TypeError`
    ([GH 46178](https://github.com/pandas-dev/pandas/issues/46178))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") and [`Series.agg()`](../reference/api/pandas.Series.agg.html#pandas.Series.agg
    "pandas.Series.agg") on non-unique columns would return incorrect type when dist-like
    argument passed in ([GH 51099](https://github.com/pandas-dev/pandas/issues/51099))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.combine_first()`](../reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first
    "pandas.DataFrame.combine_first") ignoring other’s columns if `other` is empty
    ([GH 53792](https://github.com/pandas-dev/pandas/issues/53792))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin") and [`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax"), where the axis dtype would be lost for empty frames
    ([GH 53265](https://github.com/pandas-dev/pandas/issues/53265))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") not merging correctly when having `MultiIndex` with
    single level ([GH 52331](https://github.com/pandas-dev/pandas/issues/52331))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") losing extension dtypes when columns is a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") and frame contains mixed dtypes ([GH 45740](https://github.com/pandas-dev/pandas/issues/45740))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") sorting columns lexicographically ([GH 53786](https://github.com/pandas-dev/pandas/issues/53786))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.transpose()`](../reference/api/pandas.DataFrame.transpose.html#pandas.DataFrame.transpose
    "pandas.DataFrame.transpose") inferring dtype for object column ([GH 51546](https://github.com/pandas-dev/pandas/issues/51546))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.combine_first()`](../reference/api/pandas.Series.combine_first.html#pandas.Series.combine_first
    "pandas.Series.combine_first") converting `int64` dtype to `float64` and losing
    precision on very large integers ([GH 51764](https://github.com/pandas-dev/pandas/issues/51764))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when joining empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects, where the joined index would be a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") instead of the joined index type ([GH 52777](https://github.com/pandas-dev/pandas/issues/52777))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`SparseDtype`](../reference/api/pandas.SparseDtype.html#pandas.SparseDtype
    "pandas.SparseDtype") constructor failing to raise `TypeError` when given an incompatible
    `dtype` for its subtype, which must be a NumPy dtype ([GH 53160](https://github.com/pandas-dev/pandas/issues/53160))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `arrays.SparseArray.map()` allowed the fill value to be included in the
    sparse values ([GH 52095](https://github.com/pandas-dev/pandas/issues/52095))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`ArrowStringArray`](../reference/api/pandas.arrays.ArrowStringArray.html#pandas.arrays.ArrowStringArray
    "pandas.arrays.ArrowStringArray") constructor raises `ValueError` with dictionary
    types of strings ([GH 54074](https://github.com/pandas-dev/pandas/issues/54074))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor not copying [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with extension dtype when given in dict ([GH 53744](https://github.com/pandas-dev/pandas/issues/53744))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`ArrowExtensionArray`](../reference/api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") converting pandas non-nanosecond temporal
    objects from non-zero values to zero values ([GH 53171](https://github.com/pandas-dev/pandas/issues/53171))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.quantile()`](../reference/api/pandas.Series.quantile.html#pandas.Series.quantile
    "pandas.Series.quantile") for PyArrow temporal types raising `ArrowInvalid` ([GH
    52678](https://github.com/pandas-dev/pandas/issues/52678))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rank()`](../reference/api/pandas.Series.rank.html#pandas.Series.rank
    "pandas.Series.rank") returning wrong order for small values with `Float64` dtype
    ([GH 52471](https://github.com/pandas-dev/pandas/issues/52471))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.unique()`](../reference/api/pandas.Series.unique.html#pandas.Series.unique
    "pandas.Series.unique") for boolean `ArrowDtype` with `NA` values ([GH 54667](https://github.com/pandas-dev/pandas/issues/54667))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `__iter__()` and `__getitem__()` returning python datetime and timedelta
    objects for non-nano dtypes ([GH 53326](https://github.com/pandas-dev/pandas/issues/53326))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `factorize()` returning incorrect uniques for a `pyarrow.dictionary`
    type `pyarrow.chunked_array` with more than one chunk ([GH 54844](https://github.com/pandas-dev/pandas/issues/54844))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when passing an `ExtensionArray` subclass to `dtype` keywords. This will
    now raise a `UserWarning` to encourage passing an instance instead ([GH 31356](https://github.com/pandas-dev/pandas/issues/31356),
    [GH 54592](https://github.com/pandas-dev/pandas/issues/54592))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") repr would not work when a column had an [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with a `pyarrow.ExtensionDtype` ([GH 54063](https://github.com/pandas-dev/pandas/issues/54063))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where the `__from_arrow__` method of masked ExtensionDtypes (e.g. [`Float64Dtype`](../reference/api/pandas.Float64Dtype.html#pandas.Float64Dtype
    "pandas.Float64Dtype"), [`BooleanDtype`](../reference/api/pandas.BooleanDtype.html#pandas.BooleanDtype
    "pandas.BooleanDtype")) would not accept PyArrow arrays of type `pyarrow.null()`
    ([GH 52223](https://github.com/pandas-dev/pandas/issues/52223))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styler
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Styler._copy()` calling overridden methods in subclasses of [`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") ([GH 52728](https://github.com/pandas-dev/pandas/issues/52728))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metadata
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fixed metadata propagation in [`DataFrame.max()`](../reference/api/pandas.DataFrame.max.html#pandas.DataFrame.max
    "pandas.DataFrame.max"), [`DataFrame.min()`](../reference/api/pandas.DataFrame.min.html#pandas.DataFrame.min
    "pandas.DataFrame.min"), [`DataFrame.prod()`](../reference/api/pandas.DataFrame.prod.html#pandas.DataFrame.prod
    "pandas.DataFrame.prod"), [`DataFrame.mean()`](../reference/api/pandas.DataFrame.mean.html#pandas.DataFrame.mean
    "pandas.DataFrame.mean"), [`Series.mode()`](../reference/api/pandas.Series.mode.html#pandas.Series.mode
    "pandas.Series.mode"), [`DataFrame.median()`](../reference/api/pandas.DataFrame.median.html#pandas.DataFrame.median
    "pandas.DataFrame.median"), [`DataFrame.sem()`](../reference/api/pandas.DataFrame.sem.html#pandas.DataFrame.sem
    "pandas.DataFrame.sem"), [`DataFrame.skew()`](../reference/api/pandas.DataFrame.skew.html#pandas.DataFrame.skew
    "pandas.DataFrame.skew"), [`DataFrame.kurt()`](../reference/api/pandas.DataFrame.kurt.html#pandas.DataFrame.kurt
    "pandas.DataFrame.kurt") ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed metadata propagation in [`DataFrame.squeeze()`](../reference/api/pandas.DataFrame.squeeze.html#pandas.DataFrame.squeeze
    "pandas.DataFrame.squeeze"), and [`DataFrame.describe()`](../reference/api/pandas.DataFrame.describe.html#pandas.DataFrame.describe
    "pandas.DataFrame.describe") ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed metadata propagation in [`DataFrame.std()`](../reference/api/pandas.DataFrame.std.html#pandas.DataFrame.std
    "pandas.DataFrame.std") ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `FloatingArray.__contains__` with `NaN` item incorrectly returning `False`
    when `NaN` values are present ([GH 52840](https://github.com/pandas-dev/pandas/issues/52840))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") raising for data of complex dtype when `NaN` values are present
    ([GH 53627](https://github.com/pandas-dev/pandas/issues/53627))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") where `repr` of index passed with time does not print
    time is midnight and non-day based freq([GH 53470](https://github.com/pandas-dev/pandas/issues/53470))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") and [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") now throw assertion error for two unequal
    sets ([GH 51727](https://github.com/pandas-dev/pandas/issues/51727))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") checks category dtypes even when asked not
    to check index type ([GH 52126](https://github.com/pandas-dev/pandas/issues/52126))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`api.interchange.from_dataframe()`](../reference/api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe
    "pandas.api.interchange.from_dataframe") was not respecting `allow_copy` argument
    ([GH 54322](https://github.com/pandas-dev/pandas/issues/54322))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`api.interchange.from_dataframe()`](../reference/api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe
    "pandas.api.interchange.from_dataframe") was raising during interchanging from
    non-pandas tz-aware data containing null values ([GH 54287](https://github.com/pandas-dev/pandas/issues/54287))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`api.interchange.from_dataframe()`](../reference/api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe
    "pandas.api.interchange.from_dataframe") when converting an empty DataFrame object
    ([GH 53155](https://github.com/pandas-dev/pandas/issues/53155))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`from_dummies()`](../reference/api/pandas.from_dummies.html#pandas.from_dummies
    "pandas.from_dummies") where the resulting [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") did not match the original [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 54300](https://github.com/pandas-dev/pandas/issues/54300))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`from_dummies()`](../reference/api/pandas.from_dummies.html#pandas.from_dummies
    "pandas.from_dummies") where the resulting data would always be `object` dtype
    instead of the dtype of the columns ([GH 54300](https://github.com/pandas-dev/pandas/issues/54300))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.first()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.first.html#pandas.core.groupby.DataFrameGroupBy.first
    "pandas.core.groupby.DataFrameGroupBy.first"), [`DataFrameGroupBy.last()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.last.html#pandas.core.groupby.DataFrameGroupBy.last
    "pandas.core.groupby.DataFrameGroupBy.last"), [`SeriesGroupBy.first()`](../reference/api/pandas.core.groupby.SeriesGroupBy.first.html#pandas.core.groupby.SeriesGroupBy.first
    "pandas.core.groupby.SeriesGroupBy.first"), and [`SeriesGroupBy.last()`](../reference/api/pandas.core.groupby.SeriesGroupBy.last.html#pandas.core.groupby.SeriesGroupBy.last
    "pandas.core.groupby.SeriesGroupBy.last") where an empty group would return `np.nan`
    instead of the corresponding [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") NA value ([GH 39098](https://github.com/pandas-dev/pandas/issues/39098))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") with casting the mean of ints back to an int ([GH
    16676](https://github.com/pandas-dev/pandas/issues/16676))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") with a `fill_value` that should be inferred with a
    `ExtensionDtype` incorrectly inferring `object` dtype ([GH 52586](https://github.com/pandas-dev/pandas/issues/52586))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift") with `axis=1` on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a single `ExtensionDtype` column giving incorrect results
    ([GH 53832](https://github.com/pandas-dev/pandas/issues/53832))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.sort_values()`](../reference/api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values") when a `key` is passed ([GH 52764](https://github.com/pandas-dev/pandas/issues/52764))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.align()`](../reference/api/pandas.Series.align.html#pandas.Series.align
    "pandas.Series.align"), [`DataFrame.align()`](../reference/api/pandas.DataFrame.align.html#pandas.DataFrame.align
    "pandas.DataFrame.align"), [`Series.reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex"), [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex"), [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate"), [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate"), incorrectly failing to raise with method=”asfreq”
    ([GH 53620](https://github.com/pandas-dev/pandas/issues/53620))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.argsort()`](../reference/api/pandas.Series.argsort.html#pandas.Series.argsort
    "pandas.Series.argsort") failing to raise when an invalid `axis` is passed ([GH
    54257](https://github.com/pandas-dev/pandas/issues/54257))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") when giving a callable to an empty series, the returned series
    had `object` dtype. It now keeps the original dtype ([GH 52384](https://github.com/pandas-dev/pandas/issues/52384))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.memory_usage()`](../reference/api/pandas.Series.memory_usage.html#pandas.Series.memory_usage
    "pandas.Series.memory_usage") when `deep=True` throw an error with Series of objects
    and the returned value is incorrect, as it does not take into account GC corrections
    ([GH 51858](https://github.com/pandas-dev/pandas/issues/51858))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`period_range()`](../reference/api/pandas.period_range.html#pandas.period_range
    "pandas.period_range") the default behavior when freq was not passed as an argument
    was incorrect([GH 53687](https://github.com/pandas-dev/pandas/issues/53687))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed incorrect `__name__` attribute of `pandas._libs.json` ([GH 52898](https://github.com/pandas-dev/pandas/issues/52898))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Contributors'
  prefs: []
  type: TYPE_NORMAL
- en: A total of 266 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: AG +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aarni Koskela
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adrian D’Alessandro +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adrien RUAULT +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ahmad +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aidos Kanapyanov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Malins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexander Seiler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ali Asgar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allison Kwan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amanda Bizzinotto +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andres Algaba +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Angela Seo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anirudh Hegde +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antony Evmorfopoulos +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anushka Bishnoi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ArnaudChanoine +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Artem Vorobyev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arya Sarkar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ashwin Srinath
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Austin Au-Yeung +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Austin Burnett +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bear +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben Mangold +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bernardo Gameiro +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Boyd Kane +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brayan Alexander Muñoz B +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brock
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chetan0402 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Carini
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ChristofKaufmann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clark-W +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conrad Mcgee Stocks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Corrie Bartelheimer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Coulton Theuer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: D067751 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Isaac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniele Nicolodi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Samuel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Seifert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dea Leon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dea María Léon
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deepyaman Datta
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Denis Sapozhnikov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dharani Akurathi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DimiGrammatikakis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dirk Ulbricht +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dmitry Shemetov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dominik Berger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Efkan S. Goktepe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ege Özgüroğlu
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eli Schwartz
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Erdi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fabrizio Primerano +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Facundo Batista +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fangchen Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Felipe Maion +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Francis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Future Programmer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gabriel Kabbe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gaétan Ramet +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gianluca Ficarelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Godwill Agbehonou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guillaume Lemaitre
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guo Ci
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gustavo Vargas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hamidreza Sanaee +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HappyHorse +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Harald Husum +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hugo van Kemenade
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ido Ronen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Irv Lustig
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire (iMac)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JJ +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jarrod Millman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jay +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jessica Greene +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jiawei Zhang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jinli Xiao +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joanna Ge +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jona Sassenhagen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonas Haag
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joshua Shew +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julian Badillo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julian Ortiz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julien Palard +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justin Tyson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justus Magin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kabiir Krishna +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kang Su Min
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ketu Patel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Anderson
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Jan Anker
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Klein +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kostya Farber
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LM +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lars Lien Ankile +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lawrence Mitchell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Liwei Cai +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Loic Diridollou
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luciana Solorzano +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luke Manley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lumberbot (aka Jack)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marat Kopytjuk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Garcia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Edward Gorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MarcoGorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maria Telenczuk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MarvinGravert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mateusz Sokół +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Richards
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Barber +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matus Valo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mia Reimer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Terry +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Tiemann +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Milad Maani Jou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Miles Cranmer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MirijaH +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Miyuu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Natalia Mokeeva
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nathan Goldbaum +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nicklaus Roach +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nicolas Camenisch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nikolay Boev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nirav
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nishu Choudhary
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Noa Tamir
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Noy Hanan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numan Ijaz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Omar Elbaz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas Development Team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parfait Gasana
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parthi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patrick Hoefler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patrick Schleiter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pawel Kranzberg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Philip
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Philip Meier +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pranav Saibhushan Ravuri
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PrathumP +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rahul Siloniya +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rajasvi Vinayak +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rajat Subhra Mukherjee +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ralf Gommers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: RaphSku
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rebecca Chen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Renato Cotrim Maciel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reza (Milad) Maanijou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Shadrach
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rithik Reddy +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert Luce +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ronalido +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rylie Wei +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SOUMYADIP MAL +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sanjith Chockan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sayed Qaiser Ali +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scott Harp +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Se +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shashwat Agrawal
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simar Bassi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Brugman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Hawkins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Høxbro Hansen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Snorf Yang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sortofamudkip +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefan Krawczyk
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefanie Molin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefanie Senger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stelios Petrakis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stijn Van Hoey
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sven
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sylvain MARIE
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sylvain Marié
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terji Petersen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thierry Moisan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas A Caswell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Grainger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Vranken +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tianye Song +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Hoffmann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Loderhose +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Swast
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timon Jurschitsch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tolker-KU +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tomas Pavlik +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Toroi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Torsten Wörtwein
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Travis Gibbs +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Umberto Fasci +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Valerii +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VanMyHu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Victor Momodu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vijay Vaidyanathan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VomV +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Andrea
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Ayd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wolf Behrenhoff +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Xiao Yuan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yao Xiao
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yasin Tatar
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yaxin Li +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yi Wei +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yulia +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yusharth Singh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zach Breger +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhengbo Wang
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: abokey1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ahmad2901 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: assafam +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: auderson
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: august-tengland +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bunardsheng +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cmmck +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cnguyen-03 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: coco +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dependabot[bot]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: giplessis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: github-actions[bot]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gmaiwald +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gmollard +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kathleenhang
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kevx82 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lia2710 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: liang3zy22 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ltartaro +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lusolorz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: m-ganko +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mKlepsch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mattkeanny +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mrastgoo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nabdoni +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: omar-elbaz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: paulreece +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: penelopeysm +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: potap75 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pre-commit-ci[bot] +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: raanasn +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: raj-thapa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ramvikrams +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rebecca-palmer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: reddyrg1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rmhowe425 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: segatrade +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: shteken +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sweisss +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: taytzehao
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tntmatthews +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tpaxman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tzehaoo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: v-mcoutinho +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: wcgonzal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: yonashub
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: yusharth +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ádám Lippai
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Štěpán Műller +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
