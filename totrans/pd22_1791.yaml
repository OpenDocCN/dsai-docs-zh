- en: pandas.io.formats.style.Styler.to_latex
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.io.formats.style.Styler.to_latex.html](https://pandas.pydata.org/docs/reference/api/pandas.io.formats.style.Styler.to_latex.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Write Styler to a file, buffer or string in LaTeX format.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.3.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**buf**str, path object, file-like object, or None, default None'
  prefs: []
  type: TYPE_NORMAL
- en: String, path object (implementing `os.PathLike[str]`), or file-like object implementing
    a string `write()` function. If None, the result is returned as a string.
  prefs: []
  type: TYPE_NORMAL
- en: '**column_format**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'The LaTeX column specification placed in location:'
  prefs: []
  type: TYPE_NORMAL
- en: \begin{tabular}{<column_format>}
  prefs: []
  type: TYPE_NORMAL
- en: Defaults to ‘l’ for index and non-numeric data columns, and, for numeric data
    columns, to ‘r’ by default, or ‘S’ if `siunitx` is `True`.
  prefs: []
  type: TYPE_NORMAL
- en: '**position**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'The LaTeX positional argument (e.g. ‘h!’) for tables, placed in location:'
  prefs: []
  type: TYPE_NORMAL
- en: '`\\begin{table}[<position>]`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**position_float**{“centering”, “raggedleft”, “raggedright”}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'The LaTeX float command placed in location:'
  prefs: []
  type: TYPE_NORMAL
- en: \begin{table}[<position>]
  prefs: []
  type: TYPE_NORMAL
- en: \<position_float>
  prefs: []
  type: TYPE_NORMAL
- en: Cannot be used if `environment` is “longtable”.
  prefs: []
  type: TYPE_NORMAL
- en: '**hrules**bool'
  prefs: []
  type: TYPE_NORMAL
- en: Set to True to add \toprule, \midrule and \bottomrule from the {booktabs} LaTeX
    package. Defaults to `pandas.options.styler.latex.hrules`, which is False.
  prefs: []
  type: TYPE_NORMAL
- en: Changed in version 1.4.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**clines**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Use to control adding \cline commands for the index labels separation. Possible
    values are:'
  prefs: []
  type: TYPE_NORMAL
- en: 'None: no cline commands are added (default).'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '“all;data”: a cline is added for every index value extending the width of the
    table, including data entries.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '“all;index”: as above with lines extending only the width of the index entries.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '“skip-last;data”: a cline is added for each index value except the last level
    (which is never sparsified), extending the widtn of the table.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '“skip-last;index”: as above with lines extending only the width of the index
    entries.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: New in version 1.4.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**label**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'The LaTeX label included as: \label{<label>}. This is used with \ref{<label>}
    in the main .tex file.'
  prefs: []
  type: TYPE_NORMAL
- en: '**caption**str, tuple, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'If string, the LaTeX table caption included as: \caption{<caption>}. If tuple,
    i.e (“full caption”, “short caption”), the caption included as: \caption[<caption[1]>]{<caption[0]>}.'
  prefs: []
  type: TYPE_NORMAL
- en: '**sparse_index**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to sparsify the display of a hierarchical index. Setting to False will
    display each explicit level element in a hierarchical key for each row. Defaults
    to `pandas.options.styler.sparse.index`, which is True.
  prefs: []
  type: TYPE_NORMAL
- en: '**sparse_columns**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to sparsify the display of a hierarchical index. Setting to False will
    display each explicit level element in a hierarchical key for each column. Defaults
    to `pandas.options.styler.sparse.columns`, which is True.
  prefs: []
  type: TYPE_NORMAL
- en: '**multirow_align**{“c”, “t”, “b”, “naive”}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If sparsifying hierarchical MultiIndexes whether to align text centrally, at
    the top or bottom using the multirow package. If not given defaults to `pandas.options.styler.latex.multirow_align`,
    which is “c”. If “naive” is given renders without multirow.
  prefs: []
  type: TYPE_NORMAL
- en: Changed in version 1.4.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**multicol_align**{“r”, “c”, “l”, “naive-l”, “naive-r”}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If sparsifying hierarchical MultiIndex columns whether to align text at the
    left, centrally, or at the right. If not given defaults to `pandas.options.styler.latex.multicol_align`,
    which is “r”. If a naive option is given renders without multicol. Pipe decorators
    can also be added to non-naive values to draw vertical rules, e.g. “|r” will draw
    a rule on the left side of right aligned merged cells.
  prefs: []
  type: TYPE_NORMAL
- en: Changed in version 1.4.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**siunitx**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Set to `True` to structure LaTeX compatible with the {siunitx} package.
  prefs: []
  type: TYPE_NORMAL
- en: '**environment**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If given, the environment that will replace ‘table’ in `\\begin{table}`. If
    ‘longtable’ is specified then a more suitable template is rendered. If not given
    defaults to `pandas.options.styler.latex.environment`, which is None.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.4.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**encoding**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Character encoding setting. Defaults to `pandas.options.styler.render.encoding`,
    which is “utf-8”.
  prefs: []
  type: TYPE_NORMAL
- en: '**convert_css**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Convert simple cell-styles from CSS to LaTeX format. Any CSS not found in conversion
    table is dropped. A style can be forced by adding option –latex. See notes.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: str or None
  prefs: []
  type: TYPE_NORMAL
- en: If buf is None, returns the result as a string. Otherwise returns None.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`Styler.format`](pandas.io.formats.style.Styler.format.html#pandas.io.formats.style.Styler.format
    "pandas.io.formats.style.Styler.format")'
  prefs: []
  type: TYPE_NORMAL
- en: Format the text display value of cells.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: '**Latex Packages**'
  prefs: []
  type: TYPE_NORMAL
- en: 'For the following features we recommend the following LaTeX inclusions:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Feature | Inclusion |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| sparse columns | none: included within default {tabular} environment |'
  prefs: []
  type: TYPE_TB
- en: '| sparse rows | \usepackage{multirow} |'
  prefs: []
  type: TYPE_TB
- en: '| hrules | \usepackage{booktabs} |'
  prefs: []
  type: TYPE_TB
- en: '| colors | \usepackage[table]{xcolor} |'
  prefs: []
  type: TYPE_TB
- en: '| siunitx | \usepackage{siunitx} |'
  prefs: []
  type: TYPE_TB
- en: '| bold (with siunitx) | \usepackage{etoolbox}\robustify\bfseries\sisetup{detect-all
    = true} *(within {document})* |'
  prefs: []
  type: TYPE_TB
- en: '| italic (with siunitx) | \usepackage{etoolbox}\robustify\itshape\sisetup{detect-all
    = true} *(within {document})* |'
  prefs: []
  type: TYPE_TB
- en: '| environment | \usepackage{longtable} if arg is “longtable” &#124; or any
    other relevant environment package |'
  prefs: []
  type: TYPE_TB
- en: '| hyperlinks | \usepackage{hyperref} |'
  prefs: []
  type: TYPE_TB
- en: '**Cell Styles**'
  prefs: []
  type: TYPE_NORMAL
- en: LaTeX styling can only be rendered if the accompanying styling functions have
    been constructed with appropriate LaTeX commands. All styling functionality is
    built around the concept of a CSS `(<attribute>, <value>)` pair (see [Table Visualization](../../user_guide/style.html)),
    and this should be replaced by a LaTeX `(<command>, <options>)` approach. Each
    cell will be styled individually using nested LaTeX commands with their accompanied
    options.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example the following code will highlight and bold a cell in HTML-CSS:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The equivalent using LaTeX only commands is the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Internally these structured LaTeX `(<command>, <options>)` pairs are translated
    to the `display_value` with the default structure: `\<command><options> <display_value>`.
    Where there are multiple commands the latter is nested recursively, so that the
    above example highlighted cell is rendered as `\cellcolor{red} \bfseries 4`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Occasionally this format does not suit the applied command, or combination
    of LaTeX packages that is in use, so additional flags can be added to the `<options>`,
    within the tuple, to result in different positions of required braces (the **default**
    being the same as `--nowrap`):'
  prefs: []
  type: TYPE_NORMAL
- en: '| Tuple Format | Output Structure |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| (<command>,<options>) | \<command><options> <display_value> |'
  prefs: []
  type: TYPE_TB
- en: '| (<command>,<options> `--nowrap`) | \<command><options> <display_value> |'
  prefs: []
  type: TYPE_TB
- en: '| (<command>,<options> `--rwrap`) | \<command><options>{<display_value>} |'
  prefs: []
  type: TYPE_TB
- en: '| (<command>,<options> `--wrap`) | {\<command><options> <display_value>} |'
  prefs: []
  type: TYPE_TB
- en: '| (<command>,<options> `--lwrap`) | {\<command><options>} <display_value> |'
  prefs: []
  type: TYPE_TB
- en: '| (<command>,<options> `--dwrap`) | {\<command><options>}{<display_value>}
    |'
  prefs: []
  type: TYPE_TB
- en: For example the textbf command for font-weight should always be used with –rwrap
    so `('textbf', '--rwrap')` will render a working cell, wrapped with braces, as
    `\textbf{<display_value>}`.
  prefs: []
  type: TYPE_NORMAL
- en: 'A more comprehensive example is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/latex_1.png](../Images/335b19b4e4e2df2e130edd9f19edf1db.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Table Styles**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Internally Styler uses its `table_styles` object to parse the `column_format`,
    `position`, `position_float`, and `label` input arguments. These arguments are
    added to table styles in the format:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Exception is made for the `hrules` argument which, in fact, controls all three
    commands: `toprule`, `bottomrule` and `midrule` simultaneously. Instead of setting
    `hrules` to `True`, it is also possible to set each individual rule definition,
    by manually setting the `table_styles`, for example below we set a regular `toprule`,
    set an `hline` for `bottomrule` and exclude the `midrule`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'If other `commands` are added to table styles they will be detected, and positioned
    immediately above the ‘\begin{tabular}’ command. For example to add odd and even
    row coloring, from the {colortbl} package, in format `\rowcolors{1}{pink}{red}`,
    use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'A more comprehensive example using these arguments is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/latex_2.png](../Images/a2db4fa7ed9823b939ab58c8866068e7.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Formatting**'
  prefs: []
  type: TYPE_NORMAL
- en: 'To format values [`Styler.format()`](pandas.io.formats.style.Styler.format.html#pandas.io.formats.style.Styler.format
    "pandas.io.formats.style.Styler.format") should be used prior to calling Styler.to_latex,
    as well as other methods such as [`Styler.hide()`](pandas.io.formats.style.Styler.hide.html#pandas.io.formats.style.Styler.hide
    "pandas.io.formats.style.Styler.hide") for example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '**CSS Conversion**'
  prefs: []
  type: TYPE_NORMAL
- en: This method can convert a Styler constructured with HTML-CSS to LaTeX using
    the following limited conversions.
  prefs: []
  type: TYPE_NORMAL
- en: '| CSS Attribute | CSS value | LaTeX Command | LaTeX Options |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| font-weight | boldbolder | bfseriesbfseries |  |'
  prefs: []
  type: TYPE_TB
- en: '| font-style | italicoblique | itshapeslshape |  |'
  prefs: []
  type: TYPE_TB
- en: '| background-color | red#fe01ea#f0ergb(128,255,0)rgba(128,0,0,0.5)rgb(25%,255,50%)
    | cellcolor | {red}–lwrap[HTML]{FE01EA}–lwrap[HTML]{FF00EE}–lwrap[rgb]{0.5,1,0}–lwrap[rgb]{0.5,0,0}–lwrap[rgb]{0.25,1,0.5}–lwrap
    |'
  prefs: []
  type: TYPE_TB
- en: '| color | red#fe01ea#f0ergb(128,255,0)rgba(128,0,0,0.5)rgb(25%,255,50%) | color
    | {red}[HTML]{FE01EA}[HTML]{FF00EE}[rgb]{0.5,1,0}[rgb]{0.5,0,0}[rgb]{0.25,1,0.5}
    |'
  prefs: []
  type: TYPE_TB
- en: It is also possible to add user-defined LaTeX only styles to a HTML-CSS Styler
    using the `--latex` flag, and to add LaTeX parsing options that the converter
    will detect within a CSS-comment.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Below we give a complete step by step example adding some advanced features
    and noting some common gotchas.
  prefs: []
  type: TYPE_NORMAL
- en: 'First we create the DataFrame and Styler as usual, including MultiIndex rows
    and columns, which allow for more advanced formatting options:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Second we will format the display and, since our table is quite wide, will
    hide the repeated level-0 of the index:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Note that one of the string entries of the index and column headers is “H&M”.
    Without applying the escape=”latex” option to the format_index method the resultant
    LaTeX will fail to render, and the error returned is quite difficult to debug.
    Using the appropriate escape the “&” is converted to “\&”.
  prefs: []
  type: TYPE_NORMAL
- en: 'Thirdly we will apply some (CSS-HTML) styles to our object. We will use a builtin
    method and also define our own method to highlight the stock recommendation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'All the above styles will work with HTML (see below) and LaTeX upon conversion:'
  prefs: []
  type: TYPE_NORMAL
- en: '![../../_images/latex_stocks_html.png](../Images/3adfd6fafd4f44ae6644286cf22a6269.png)'
  prefs: []
  type: TYPE_IMG
- en: However, we finally want to add one LaTeX only style (from the {graphicx} package),
    that is not easy to convert from CSS and pandas does not support it. Notice the
    –latex flag used here, as well as –rwrap to ensure this is formatted correctly
    and not ignored upon conversion.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally we render our LaTeX adding in other options as required:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/latex_stocks.png](../Images/d756c29ce87a90f02417c506fdabd14d.png)'
  prefs: []
  type: TYPE_IMG
