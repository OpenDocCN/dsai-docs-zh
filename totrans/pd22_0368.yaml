- en: pandas.DataFrame.transpose
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.transpose.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.transpose.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Transpose index and columns.
  prefs: []
  type: TYPE_NORMAL
- en: Reflect the DataFrame over its main diagonal by writing rows as columns and
    vice-versa. The property [`T`](pandas.DataFrame.T.html#pandas.DataFrame.T "pandas.DataFrame.T")
    is an accessor to the method [`transpose()`](#pandas.DataFrame.transpose "pandas.DataFrame.transpose").
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '***args**tuple, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Accepted for compatibility with NumPy.
  prefs: []
  type: TYPE_NORMAL
- en: '**copy**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to copy the data after transposing, even for DataFrames with a single
    dtype.
  prefs: []
  type: TYPE_NORMAL
- en: Note that a copy is always required for mixed dtype DataFrames, or for DataFrames
    with any extension types.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: The copy keyword will change behavior in pandas 3.0. [Copy-on-Write](https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html)
    will be enabled by default, which means that all methods with a copy keyword will
    use a lazy copy mechanism to defer the copy and ignore the copy keyword. The copy
    keyword will be removed in a future version of pandas.
  prefs: []
  type: TYPE_NORMAL
- en: You can already get the future behavior and improvements through enabling copy
    on write `pd.options.mode.copy_on_write = True`
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: The transposed DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.transpose`](https://numpy.org/doc/stable/reference/generated/numpy.transpose.html#numpy.transpose
    "(in NumPy v1.26)")'
  prefs: []
  type: TYPE_NORMAL
- en: Permute the dimensions of a given array.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Transposing a DataFrame with mixed dtypes will result in a homogeneous DataFrame
    with the object dtype. In such a case, a copy of the data is always made.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '**Square DataFrame with homogeneous dtype**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'When the dtype is homogeneous in the original DataFrame, we get a transposed
    DataFrame with the same dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**Non-square DataFrame with mixed dtypes**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'When the DataFrame has mixed dtypes, we get a transposed DataFrame with the
    object dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
