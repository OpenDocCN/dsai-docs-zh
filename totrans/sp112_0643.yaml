- en: scipy.signal.cascade
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.signal.cascade
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.cascade.html#scipy.signal.cascade](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.cascade.html#scipy.signal.cascade)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.cascade.html#scipy.signal.cascade](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.cascade.html#scipy.signal.cascade)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Return (x, phi, psi) at dyadic points `K/2**J` from filter coefficients.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 从滤波器系数计算出在二分点`K/2**J`处的(x, phi, psi)。
- en: 'Deprecated since version 1.12.0: scipy.signal.cascade is deprecated in SciPy
    1.12 and will be removed in SciPy 1.15\. We recommend using PyWavelets instead.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 自1.12.0版本起已弃用：scipy.signal.cascade在SciPy 1.12中已弃用，将在SciPy 1.15中移除。我们建议改用PyWavelets。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**hk**array_like'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**hk**数组型'
- en: Coefficients of low-pass filter.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 低通滤波器的系数。
- en: '**J**int, optional'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**J** 整型，可选'
- en: Values will be computed at grid points `K/2**J`. Default is 7.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 值将在网格点`K/2**J`处计算。默认值为7。
- en: 'Returns:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**x**ndarray'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**x** 数组型'
- en: The dyadic points `K/2**J` for `K=0...N * (2**J)-1` where `len(hk) = len(gk)
    = N+1`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`K=0...N * (2**J)-1`，`K/2**J`是二分点，其中`len(hk) = len(gk) = N+1`。
- en: '**phi**ndarray'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**phi** 数组型'
- en: 'The scaling function `phi(x)` at *x*: `phi(x) = sum(hk * phi(2x-k))`, where
    k is from 0 to N.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 缩放函数`phi(x)`在*x*处的定义为：`phi(x) = sum(hk * phi(2x-k))`，其中*k*的取值范围是从0到*N*。
- en: '**psi**ndarray, optional'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**psi** 数组型，可选'
- en: 'The wavelet function `psi(x)` at *x*: `phi(x) = sum(gk * phi(2x-k))`, where
    k is from 0 to N. *psi* is only returned if *gk* is not None.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 小波函数`psi(x)`在*x*处的定义为：`phi(x) = sum(gk * phi(2x-k))`，其中*k*的取值范围是从0到*N*。当*gk*不为None时才返回*psi*。
- en: Notes
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 注解
- en: The algorithm uses the vector cascade algorithm described by Strang and Nguyen
    in “Wavelets and Filter Banks”. It builds a dictionary of values and slices for
    quick reuse. Then inserts vectors into final vector at the end.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 算法使用Strang和Nguyen在《小波与滤波器组》中描述的向量级联算法。它构建一个值和切片的字典以便快速重用。然后在最后将向量插入到最终向量中。
