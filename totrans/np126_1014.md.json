["```py\nnumpy.histogram2d(x, y, bins=10, range=None, density=None, weights=None)\n```", "```py\n>>> from matplotlib.image import NonUniformImage\n>>> import matplotlib.pyplot as plt \n```", "```py\n>>> xedges = [0, 1, 3, 5]\n>>> yedges = [0, 2, 3, 4, 6] \n```", "```py\n>>> x = np.random.normal(2, 1, 100)\n>>> y = np.random.normal(1, 1, 100)\n>>> H, xedges, yedges = np.histogram2d(x, y, bins=(xedges, yedges))\n>>> # Histogram does not follow Cartesian convention (see Notes),\n>>> # therefore transpose H for visualization purposes.\n>>> H = H.T \n```", "```py\n>>> fig = plt.figure(figsize=(7, 3))\n>>> ax = fig.add_subplot(131, title='imshow: square bins')\n>>> plt.imshow(H, interpolation='nearest', origin='lower',\n...         extent=[xedges[0], xedges[-1], yedges[0], yedges[-1]])\n<matplotlib.image.AxesImage object at 0x...> \n```", "```py\n>>> ax = fig.add_subplot(132, title='pcolormesh: actual edges',\n...         aspect='equal')\n>>> X, Y = np.meshgrid(xedges, yedges)\n>>> ax.pcolormesh(X, Y, H)\n<matplotlib.collections.QuadMesh object at 0x...> \n```", "```py\n>>> ax = fig.add_subplot(133, title='NonUniformImage: interpolated',\n...         aspect='equal', xlim=xedges[[0, -1]], ylim=yedges[[0, -1]])\n>>> im = NonUniformImage(ax, interpolation='bilinear')\n>>> xcenters = (xedges[:-1] + xedges[1:]) / 2\n>>> ycenters = (yedges[:-1] + yedges[1:]) / 2\n>>> im.set_data(xcenters, ycenters, H)\n>>> ax.add_image(im)\n>>> plt.show() \n```", "```py\n>>> # Generate non-symmetric test data\n>>> n = 10000\n>>> x = np.linspace(1, 100, n)\n>>> y = 2*np.log(x) + np.random.rand(n) - 0.5\n>>> # Compute 2d histogram. Note the order of x/y and xedges/yedges\n>>> H, yedges, xedges = np.histogram2d(y, x, bins=20) \n```", "```py\n>>> # Plot histogram using pcolormesh\n>>> fig, (ax1, ax2) = plt.subplots(ncols=2, sharey=True)\n>>> ax1.pcolormesh(xedges, yedges, H, cmap='rainbow')\n>>> ax1.plot(x, 2*np.log(x), 'k-')\n>>> ax1.set_xlim(x.min(), x.max())\n>>> ax1.set_ylim(y.min(), y.max())\n>>> ax1.set_xlabel('x')\n>>> ax1.set_ylabel('y')\n>>> ax1.set_title('histogram2d')\n>>> ax1.grid() \n```", "```py\n>>> # Create hexbin plot for comparison\n>>> ax2.hexbin(x, y, gridsize=20, cmap='rainbow')\n>>> ax2.plot(x, 2*np.log(x), 'k-')\n>>> ax2.set_title('hexbin')\n>>> ax2.set_xlim(x.min(), x.max())\n>>> ax2.set_xlabel('x')\n>>> ax2.grid() \n```", "```py\n>>> plt.show() \n```"]