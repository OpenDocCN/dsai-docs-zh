- en: numpy.isrealobj
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.isrealobj.html](https://numpy.org/doc/1.26/reference/generated/numpy.isrealobj.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return True if x is a not complex type or an array of complex numbers.
  prefs: []
  type: TYPE_NORMAL
- en: The type of the input is checked, not the value. So even if the input has an
    imaginary part equal to zero, [`isrealobj`](#numpy.isrealobj "numpy.isrealobj")
    evaluates to False if the data type is complex.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**any'
  prefs: []
  type: TYPE_NORMAL
- en: The input can be of any type and shape.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**y**bool'
  prefs: []
  type: TYPE_NORMAL
- en: The return value, False if *x* is of a complex type.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`iscomplexobj`](numpy.iscomplexobj.html#numpy.iscomplexobj "numpy.iscomplexobj"),
    [`isreal`](numpy.isreal.html#numpy.isreal "numpy.isreal")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The function is only meant for arrays with numerical values but it accepts all
    other objects. Since it assumes array input, the return value of other objects
    may be True.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
