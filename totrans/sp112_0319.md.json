["```py\nscipy.linalg.convolution_matrix(a, n, mode='full')\n```", "```py\n=======  =========================\n mode    k\n=======  =========================\n'full'   m + n -1\n'same'   max(m, n)\n'valid'  max(m, n) - min(m, n) + 1\n=======  ========================= \n```", "```py\nA = convolution_matrix(a, n, mode) \n```", "```py\nA[i, j] == (a[i-j] if (0 <= (i-j) < m) else 0) \n```", "```py\n[x, 0, 0, ..., 0, 0]\n[y, x, 0, ..., 0, 0]\n[z, y, x, ..., 0, 0]\n...\n[0, 0, 0, ..., x, 0]\n[0, 0, 0, ..., y, x]\n[0, 0, 0, ..., z, y]\n[0, 0, 0, ..., 0, z] \n```", "```py\nA[i, j] == (a[i-j+m-1] if (0 <= (i-j+m-1) < m) else 0) \n```", "```py\n[z, y, x, 0, 0, ..., 0, 0, 0]\n[0, z, y, x, 0, ..., 0, 0, 0]\n[0, 0, z, y, x, ..., 0, 0, 0]\n...\n[0, 0, 0, 0, 0, ..., x, 0, 0]\n[0, 0, 0, 0, 0, ..., y, x, 0]\n[0, 0, 0, 0, 0, ..., z, y, x] \n```", "```py\nd = (m - 1) // 2\nA[i, j] == (a[i-j+d] if (0 <= (i-j+d) < m) else 0) \n```", "```py\n[y, x, 0, 0, ..., 0, 0, 0]\n[z, y, x, 0, ..., 0, 0, 0]\n[0, z, y, x, ..., 0, 0, 0]\n[0, 0, z, y, ..., 0, 0, 0]\n...\n[0, 0, 0, 0, ..., y, x, 0]\n[0, 0, 0, 0, ..., z, y, x]\n[0, 0, 0, 0, ..., 0, z, y] \n```", "```py\n>>> import numpy as np\n>>> from scipy.linalg import convolution_matrix\n>>> A = convolution_matrix([-1, 4, -2], 5, mode='same')\n>>> A\narray([[ 4, -1,  0,  0,  0],\n [-2,  4, -1,  0,  0],\n [ 0, -2,  4, -1,  0],\n [ 0,  0, -2,  4, -1],\n [ 0,  0,  0, -2,  4]]) \n```", "```py\n>>> x = np.array([1, 2, 0, -3, 0.5])\n>>> A @ x\narray([  2\\. ,   6\\. ,  -1\\. , -12.5,   8\\. ]) \n```", "```py\n>>> np.convolve([-1, 4, -2], x, mode='same')\narray([  2\\. ,   6\\. ,  -1\\. , -12.5,   8\\. ]) \n```", "```py\n>>> convolution_matrix([-1, 4, -2], 5, mode='full')\narray([[-1,  0,  0,  0,  0],\n [ 4, -1,  0,  0,  0],\n [-2,  4, -1,  0,  0],\n [ 0, -2,  4, -1,  0],\n [ 0,  0, -2,  4, -1],\n [ 0,  0,  0, -2,  4],\n [ 0,  0,  0,  0, -2]]) \n```", "```py\n>>> convolution_matrix([-1, 4, -2], 5, mode='valid')\narray([[-2,  4, -1,  0,  0],\n [ 0, -2,  4, -1,  0],\n [ 0,  0, -2,  4, -1]]) \n```"]