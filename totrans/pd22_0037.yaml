- en: Nullable integer data type
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可空整数数据类型
- en: 原文：[https://pandas.pydata.org/docs/user_guide/integer_na.html](https://pandas.pydata.org/docs/user_guide/integer_na.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/user_guide/integer_na.html](https://pandas.pydata.org/docs/user_guide/integer_na.html)
- en: Note
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: IntegerArray is currently experimental. Its API or implementation may change
    without warning. Uses [`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") as the missing value.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: IntegerArray目前处于实验阶段。其API或实现可能会在没有警告的情况下发生变化。使用[`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA")作为缺失值。
- en: In [Working with missing data](missing_data.html#missing-data), we saw that
    pandas primarily uses `NaN` to represent missing data. Because `NaN` is a float,
    this forces an array of integers with any missing values to become floating point.
    In some cases, this may not matter much. But if your integer column is, say, an
    identifier, casting to float can be problematic. Some integers cannot even be
    represented as floating point numbers.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在[处理缺失数据](missing_data.html#missing-data)中，我们看到pandas主要使用`NaN`来表示缺失数据。因为`NaN`是一个浮点数，这会导致任何带有缺失值的整数数组变为浮点数。在某些情况下，这可能并不重要。但是，如果您的整数列是标识符，转换为浮点数可能会有问题。有些整数甚至无法表示为浮点数。
- en: Construction
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构造
- en: pandas can represent integer data with possibly missing values using [`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray"). This is an [extension type](../development/extending.html#extending-extension-types)
    implemented within pandas.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: pandas可以使用[`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray")来表示可能存在缺失值的整数数据。这是pandas内部实现的一种[扩展类型](../development/extending.html#extending-extension-types)。
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Or the string alias `"Int64"` (note the capital `"I"`) to differentiate from
    NumPy’s `''int64''` dtype:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 或者字符串别名`"Int64"`（注意大写的`"I"`）以区别于NumPy的`'int64'` dtype：
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: All NA-like values are replaced with [`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA").
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 所有类似NA的值都被替换为[`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA "pandas.NA")。
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This array can be stored in a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") like any NumPy array.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数组可以像任何NumPy数组一样存储在[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")或[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")中。
- en: '[PRE3]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You can also pass the list-like object to the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") constructor with the dtype.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以将类似列表的对象传递给带有dtype的[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")构造函数。
- en: Warning
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Currently [`pandas.array()`](../reference/api/pandas.array.html#pandas.array
    "pandas.array") and [`pandas.Series()`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") use different rules for dtype inference. [`pandas.array()`](../reference/api/pandas.array.html#pandas.array
    "pandas.array") will infer a nullable-integer dtype
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 目前[`pandas.array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")和[`pandas.Series()`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")在dtype推断上使用不同规则。[`pandas.array()`](../reference/api/pandas.array.html#pandas.array
    "pandas.array")将推断出一个可空整数dtype。
- en: '[PRE4]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: For backwards-compatibility, [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") infers these as either integer or float dtype.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 为了向后兼容，[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")将这些推断为整数或浮点dtype。
- en: '[PRE5]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: We recommend explicitly providing the dtype to avoid confusion.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建议明确提供dtype以避免混淆。
- en: '[PRE6]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In the future, we may provide an option for [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") to infer a nullable-integer dtype.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在将来，我们可能会提供一个选项，使[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")能够推断出一个可空整数dtype。
- en: Operations
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作
- en: Operations involving an integer array will behave similar to NumPy arrays. Missing
    values will be propagated, and the data will be coerced to another dtype if needed.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 涉及整数数组的操作将类似于NumPy数组。缺失值将被传播，并且数据将根据需要强制转换为另一个dtype。
- en: '[PRE7]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: These dtypes can operate as part of a `DataFrame`.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这些dtype可以作为`DataFrame`的一部分运行。
- en: '[PRE8]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: These dtypes can be merged, reshaped & casted.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这些dtype可以合并、重塑和转换。
- en: '[PRE9]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Reduction and groupby operations such as [`sum()`](../reference/api/pandas.DataFrame.sum.html#pandas.DataFrame.sum
    "pandas.DataFrame.sum") work as well.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 诸如[`sum()`](../reference/api/pandas.DataFrame.sum.html#pandas.DataFrame.sum
    "pandas.DataFrame.sum")之类的缩减和分组操作同样有效。
- en: '[PRE10]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Scalar NA Value
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标量NA值
- en: '[`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") uses [`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") as its scalar missing value. Slicing a single element that’s missing
    will return [`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA "pandas.NA")'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray")使用[`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA")作为其标量缺失值。切片一个缺失的单个元素将返回[`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA")'
- en: '[PRE11]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Construction
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构造
- en: pandas can represent integer data with possibly missing values using [`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray"). This is an [extension type](../development/extending.html#extending-extension-types)
    implemented within pandas.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: pandas可以使用[`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray")表示可能包含缺失值的整数数据。这是pandas内部实现的一种[扩展类型](../development/extending.html#extending-extension-types)。
- en: '[PRE12]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Or the string alias `"Int64"` (note the capital `"I"`) to differentiate from
    NumPy’s `''int64''` dtype:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 或者字符串别名`"Int64"`（注意大写的`"I"`）以区别于NumPy的`'int64'`数据类型：
- en: '[PRE13]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: All NA-like values are replaced with [`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA").
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 所有类似NA的值都将被替换为[`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA "pandas.NA")。
- en: '[PRE14]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: This array can be stored in a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") like any NumPy array.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数组可以像任何NumPy数组一样存储在[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")或[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")中。
- en: '[PRE15]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: You can also pass the list-like object to the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") constructor with the dtype.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以将类似列表的对象传递给带有数据类型的[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")构造函数。
- en: Warning
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Currently [`pandas.array()`](../reference/api/pandas.array.html#pandas.array
    "pandas.array") and [`pandas.Series()`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") use different rules for dtype inference. [`pandas.array()`](../reference/api/pandas.array.html#pandas.array
    "pandas.array") will infer a nullable-integer dtype
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 目前[`pandas.array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")和[`pandas.Series()`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")使用不同的规则进行数据类型推断。[`pandas.array()`](../reference/api/pandas.array.html#pandas.array
    "pandas.array")将推断为可空整数数据类型
- en: '[PRE16]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: For backwards-compatibility, [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") infers these as either integer or float dtype.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 为了向后兼容，[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")将这些推断为整数或浮点数数据类型。
- en: '[PRE17]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: We recommend explicitly providing the dtype to avoid confusion.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建议明确提供数据类型以避免混淆。
- en: '[PRE18]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: In the future, we may provide an option for [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") to infer a nullable-integer dtype.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 将来，我们可能会提供一个选项，使[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")推断为可空整数数据类型。
- en: Operations
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作
- en: Operations involving an integer array will behave similar to NumPy arrays. Missing
    values will be propagated, and the data will be coerced to another dtype if needed.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 涉及整数数组的操作将类似于NumPy数组。缺失值将被传播，并且数据将根据需要强制转换为另一种数据类型。
- en: '[PRE19]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: These dtypes can operate as part of a `DataFrame`.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这些数据类型可以作为`DataFrame`的一部分操作。
- en: '[PRE20]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: These dtypes can be merged, reshaped & casted.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这些数据类型可以合并、重塑和转换。
- en: '[PRE21]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Reduction and groupby operations such as [`sum()`](../reference/api/pandas.DataFrame.sum.html#pandas.DataFrame.sum
    "pandas.DataFrame.sum") work as well.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 缩减和分组操作，如[`sum()`](../reference/api/pandas.DataFrame.sum.html#pandas.DataFrame.sum
    "pandas.DataFrame.sum")同样有效。
- en: '[PRE22]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Scalar NA Value
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标量NA值
- en: '[`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") uses [`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") as its scalar missing value. Slicing a single element that’s missing
    will return [`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA "pandas.NA")'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '[`arrays.IntegerArray`](../reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray")使用[`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA")作为其标量缺失值。切片一个缺失的单个元素将返回[`pandas.NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA")'
- en: '[PRE23]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
