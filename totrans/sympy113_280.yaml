- en: Basic functionality of the module
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模块的基本功能
- en: Original text：[https://docs.sympy.org/latest/modules/polys/basics.html](https://docs.sympy.org/latest/modules/polys/basics.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.sympy.org/latest/modules/polys/basics.html](https://docs.sympy.org/latest/modules/polys/basics.html)
- en: '## Introduction'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '## 介绍'
- en: 'This tutorial tries to give an overview of the functionality concerning polynomials
    within SymPy. All code examples assume:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程试图概述SymPy中关于多项式的功能。所有代码示例假设：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Basic concepts
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基本概念
- en: Polynomials
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 多项式
- en: Given a family \((x_i)\) of symbols, or other suitable objects, including numbers,
    expressions derived from them by repeated addition, subtraction and multiplication
    are called *polynomial expressions in the generators* \(x_i\).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 给定一个符号族\((x_i)\)，或其他适当的对象，包括数字，由它们通过重复加法、减法和乘法导出的表达式称为*生成器中的多项式表达式*\(x_i\)。
- en: By the distributive law it is possible to perform multiplications before additions
    and subtractions. The products of generators thus obtained are called *monomials*.
    They are usually written in the form \(x_1^{\nu_1}x_2^{\nu_2}\cdots x_n^{\nu_n}\)
    where the exponents \(\nu_i\) are nonnegative integers. It is often convenient
    to write this briefly as \(x^\nu\) where \(x = (x_1, x_2, \ldots, x_n)\) denotes
    the family of generators and \(\nu = (\nu_1, \nu_2, \ldots, \nu_n)\) is the family
    of exponents.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 根据分配律，在加法和减法之前进行乘法是可能的。因此获得的生成器的乘积称为*单项式*。它们通常以形式\(x_1^{\nu_1}x_2^{\nu_2}\cdots
    x_n^{\nu_n}\)书写，其中指数\(\nu_i\)为非负整数。通常便于简写为\(x^\nu\)，其中\(x = (x_1, x_2, \ldots,
    x_n)\)表示生成器的族，\(\nu = (\nu_1, \nu_2, \ldots, \nu_n)\)表示指数的族。
- en: When all monomials having the same exponents are combined, the polynomial expression
    becomes a sum of products \(c_\nu x^\nu\), called the *terms* of the polynomial,
    where the *coefficients* \(c_\nu\) are integers. If some of the \(x_i\) are manifest
    numbers, they are incorporated in the coefficients and not regarded as generators.
    Such coefficients are typically rational, real or complex numbers. Some symbolic
    numbers, e.g., `pi`, can be either coefficients or generators.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当合并所有具有相同指数的单项式时，多项式表达式变为乘积的和\(c_\nu x^\nu\)，称为多项式的*项*，其中*系数*\(c_\nu\)为整数。如果某些\(x_i\)是明确的数字，则它们被合并到系数中，而不视为生成器。这些系数通常是有理数、实数或复数。一些符号数，例如`pi`，可以是系数或生成器。
- en: A polynomial expression that is a sum of terms with different monomials is uniquely
    determined by its family of coefficients \((c_\nu)\). Such an expression is customarily
    called a *polynomial*, though, more properly, that name does stand for the coefficient
    family once the generators are given. SymPy implements polynomials by default
    as dictionaries with monomials as keys and coefficients as values. Another implementation
    consists of nested lists of coefficients.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 由不同单项式之和构成的多项式表达式可以唯一由其系数族\((c_\nu)\)确定。这样的表达式通常被称为*多项式*，尽管更准确地说，该名称是指一旦生成器给定后的系数族。SymPy默认将多项式实现为以单项式为键、系数为值的字典。另一种实现方式是系数的嵌套列表。
- en: The set of all polynomials with integer coefficients in the generators \(x_i\)
    is a *ring*, i.e., the sums, differences and products of its elements are again
    polynomials in the same generators. This ring is denoted \(\mathbb{Z}[x_1, x_2,
    \ldots, x_n]\), or \(\mathbb{Z}[(x_i)]\), and called the *ring of polynomials
    in the* \(x_i\) *with integer coefficients*.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在生成器\(x_i\)中所有整数系数的多项式集合是一个*环*，即其元素的和、差和积再次是相同生成器的多项式。这个环记作\(\mathbb{Z}[x_1,
    x_2, \ldots, x_n]\)，或\(\mathbb{Z}[(x_i)]\)，并称为*具有整数系数的生成器*\(x_i\)的多项式环。
- en: More generally, the coefficients of a polynomial can be elements of any commutative
    ring \(A\), and the corresponding polynomial ring is then denoted \(A[x_1, x_2,
    \dots, x_n]\). The ring \(A\) can also be a polynomial ring. In SymPy, the coefficient
    ring is called the `domain` of the polynomial ring, and it can be given as a keyword
    parameter. By default, it is determined by the coefficients of the polynomial
    arguments.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 更一般地，多项式的系数可以是任何可交换环\(A\)的元素，相应的多项式环通常记作\(A[x_1, x_2, \dots, x_n]\)。环\(A\)也可以是一个多项式环。在SymPy中，系数环称为多项式环的`domain`，可以作为关键字参数给出。默认情况下，它由多项式参数的系数确定。
- en: 'Polynomial expressions can be transformed into polynomials by the method [`sympy.core.expr.Expr.as_poly`](../core.html#sympy.core.expr.Expr.as_poly
    "sympy.core.expr.Expr.as_poly"):'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式表达式可以通过方法[`sympy.core.expr.Expr.as_poly`](../core.html#sympy.core.expr.Expr.as_poly
    "sympy.core.expr.Expr.as_poly")转换为多项式：
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If a polynomial expression contains numbers that are not integers, they are
    regarded as coefficients and the coefficient ring is extended accordingly. In
    particular, division by integers leads to rational coefficients:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果多项式表达式包含非整数的数，则它们被视为系数，并相应地扩展系数环。特别是，除以整数导致有理系数：
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Symbolic numbers are considered generators unless they are explicitly excluded,
    in which case they are adjoined to the coefficient ring:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 符号数被认为是生成器，除非明确排除，否则它们被附加到系数环中：
- en: '[PRE3]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Alternatively, the coefficient domain can be specified by means of a keyword
    argument:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，可以通过关键字参数指定系数域：
- en: '[PRE4]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Note that the ring \(\mathbb{Z}[\pi][x, y]\) of polynomials in \(x\) and \(y\)
    with coefficients in \(\mathbb{Z}[\pi]\) is mathematically equivalent to \(\mathbb{Z}[\pi,
    x, y]\), only their implementations differ.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，环 \(\mathbb{Z}[\pi][x, y]\)，即以 \(\mathbb{Z}[\pi]\) 为系数的 \(x\) 和 \(y\) 的多项式环，在数学上等同于
    \(\mathbb{Z}[\pi, x, y]\)，只是它们的实现有所不同。
- en: 'If an expression contains functions of the generators, other than their positive
    integer powers, these are interpreted as new generators:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果表达式中包含生成器的函数，除了它们的正整数幂之外，这些函数被解释为新的生成器：
- en: '[PRE5]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Since \(y\) and \(\sin(y)\) are algebraically independent they can both appear
    as generators in a polynomial. However, *polynomial expressions must not contain
    negative powers of generators*:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 \(y\) 和 \(\sin(y)\) 在代数上是独立的，它们可以作为多项式中的生成器出现。然而，*多项式表达式不得包含生成器的负幂*：
- en: '[PRE6]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: It is important to realize that the generators \(x\) and \(1/x = x^{-1}\) are
    treated as algebraically independent variables. In particular, their product is
    not equal to 1\. Hence *generators in denominators should be avoided even if they
    raise no error in the current implementation*. This behavior is undesirable and
    may change in the future. Similar problems emerge with rational powers of generators.
    So, for example, \(x\) and \(\sqrt x = x^{1/2}\) are not recognized as algebraically
    dependent.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要意识到生成器 \(x\) 和 \(1/x = x^{-1}\) 被视为代数独立的变量。特别地，它们的乘积不等于 1。因此*应避免分母中的生成器，即使它们在当前实现中没有错误*。这种行为是不希望的，可能在将来会改变。类似的问题也会出现在生成器的有理幂中。例如，\(x\)
    和 \(\sqrt x = x^{1/2}\) 并不被识别为代数相关。
- en: 'If there are algebraic numbers in an expression, it is possible to adjoin them
    to the coefficient ring by setting the keyword `extension`:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果表达式中含有代数数，则可以通过设置关键字`extension`将它们附加到系数环中：
- en: '[PRE7]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: With the default setting `extension=False`, both \(x\) and \(\sqrt 2\) are incorrectly
    considered algebraically independent variables. With coefficients in the extension
    field \(\mathbb{Q}(\sqrt 2)\) the square root is treated properly as an algebraic
    number. Setting `extension=True` whenever algebraic numbers are involved is definitely
    recommended even though it is not forced in the current implementation.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 使用默认设置`extension=False`，\(x\) 和 \(\sqrt 2\) 都被错误地视为代数独立的变量。在扩展域 \(\mathbb{Q}(\sqrt
    2)\) 中，平方根正确地被视为代数数。尽管当前的实现没有强制要求，但涉及代数数时建议设置`extension=True`。
- en: Divisibility
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可除性
- en: The fourth rational operation, division, or inverted multiplication, is not
    generally possible in rings. If \(a\) and \(b\) are two elements of a ring \(A\),
    then there may exist a third element \(q\) in \(A\) such that \(a = bq\). In fact,
    there may exist several such elements.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 第四个有理运算，即除法或倒数乘法，通常在环中不可能。如果 \(a\) 和 \(b\) 是环 \(A\) 的两个元素，则可能存在第三个元素 \(q\) 使得
    \(a = bq\)。事实上，可能存在几个这样的元素。
- en: If also \(a = bq'\) for some \(q'\) in \(A\), then \(b(q - q') = 0\). Hence
    either \(b\) or \(q - q'\) is zero, or they are both *zero divisors*, nonzero
    elements whose product is zero.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果还有 \(a = bq'\)，其中 \(q'\) 在 \(A\) 中，则 \(b(q - q') = 0\)。因此要么 \(b\) 要么 \(q -
    q'\) 是零，或者它们都是*零因子*，乘积为零的非零元素。
- en: Integral domains
  id: totrans-33
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 整环
- en: Commutative rings with no zero divisors are called *integral domains*. Most
    of the commonly encountered rings, the ring of integers, fields, and polynomial
    rings over integral domains are integral domains.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 没有零因子的交换环称为*整环*。大多数常见的环，如整数环、域以及整环上的多项式环，都是整环。
- en: Assume now that \(A\) is an integral domain, and consider the set \(P\) of its
    nonzero elements, which is closed under multiplication. If \(a\) and \(b\) are
    in \(P\), and there exists an element \(q\) in \(P\) such that \(a = bq\), then
    \(q\) is unique and called the *quotient*, \(a/b\), of \(a\) by \(b\). Moreover,
    it is said that
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在假设\(A\)是一个整环，并考虑其非零元素构成的集合\(P\)，它在乘法下封闭。如果\(a\)和\(b\)属于\(P\)，并且存在\(P\)中的元素\(q\)使得\(a
    = bq\)，那么\(q\)是唯一的，并称为\(a\)除以\(b\)的*商*，记为\(a/b\)。此外，有如下关系：
- en: \(a\) is *divisible* by \(b\),
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: \(a\)是\(b\)的*倍数*，
- en: \(b\) is a *divisor* of \(a\),
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: \(b\)是\(a\)的*除数*。
- en: \(a\) is a *multiple* of \(b\),
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: \(a\)是\(b\)的*倍数*，
- en: \(b\) is a *factor* of \(a\).
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: \(b\)是\(a\)的*因子*。
- en: An element \(a\) of \(P\) is a divisor of \(1\) if and only if it is *invertible*
    in \(A\), with the inverse \(a^{-1} = 1/a\). Such elements are called *units*.
    The units of the ring of integers are \(1\) and \(-1\). The invertible elements
    in a polynomial ring over a field are the nonzero constant polynomials.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 元素\(a\)属于\(P\)，如果且仅如果它在\(A\)中是*可逆*的，即存在逆元\(a^{-1} = 1/a\)。这样的元素称为*单位*。整数环的单位包括\(1\)和\(-1\)。在域上的多项式环中，可逆元素为非零常数多项式。
- en: If two elements of \(P\), \(a\) and \(b\), are divisible by each other, then
    the quotient \(a/b\) is invertible with inverse \(b/a\), or equivalently, \(b
    = ua\) where \(u\) is a unit. Such elements are said to be *associated* with,
    or *associates* of, each other. The associates of an integer \(n\) are \(n\) and
    \(-n\). In a polynomial ring over a field the associates of a polynomial are its
    constant multiples.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果\(P\)中的两个元素\(a\)和\(b\)相互整除，则商\(a/b\)可逆，其逆元为\(b/a\)，或等价地，\(b = ua\)，其中\(u\)是单位。这样的元素称为*关联*或*同伴*。整数\(n\)的同伴是\(n\)和\(-n\)。在域上的多项式环中，多项式的同伴是它的常数倍数。
- en: Each element of \(P\) is divisible by its associates and the units. An element
    is *irreducible* if it has no other divisors and is not a unit. The irreducible
    elements in the ring of integers are the prime numbers \(p\) and their opposites
    \(-p\). In a field, every nonzero element is invertible and there are no irreducible
    elements.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 每个\(P\)中的元素都可被它的关联元素和单位整除。如果一个元素是*不可约*的，那么它没有其他除数且不是单位。整数环中的不可约元素包括素数\(p\)及其负数\(-p\)。在域中，每个非零元素都是可逆的，因此没有不可约元素。
- en: Factorial domains
  id: totrans-43
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 阶乘整环
- en: In the ring of integers, each nonzero element can be represented as a product
    of irreducible elements and optionally a unit \(\pm 1\). Moreover, any two such
    products have the same number of irreducible factors which are associated with
    each other in a suitable order. Integral domains having this property are called
    *factorial*, or *unique factorization domains*. In addition to the ring of integers,
    all polynomial rings over a field are factorial, and so are more generally polynomial
    rings over any factorial domain. Fields are trivially factorial since there are
    only units. The irreducible elements of a factorial domain are usually called
    *primes*.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在整数环中，每个非零元素都可以表示为不可约元素的乘积，可选地加上单位\(\pm 1\)。此外，任意两个这样的乘积具有相同数量的不可约因子，它们在适当顺序下相互关联。具有此特性的整环称为*阶乘*或*唯一分解整环*。除整数环外，所有域上的多项式环都是阶乘整环，更一般地说，所有阶乘整环上的多项式环也是阶乘整环。域因其只有单位而显然是阶乘的。阶乘整环中的不可约元素通常称为*素数*。
- en: A family of integers has only a finite number of common divisors and the greatest
    of them is divisible by all of them. More generally, given a family of nonzero
    elements \((a_i)\) in an integral domain, a common divisor \(d\) of the elements
    is called a *greatest common divisor*, abbreviated *gcd*, of the family if it
    is a multiple of all common divisors. A greatest common divisor, if it exists,
    is not unique in general; all of its associates have the same property. It is
    denoted by \(d = \gcd(a_1,\ldots,a_n)\) if there is no danger of confusion. A
    *least common multiple*, or *lcm*, of a family \((a_i)\) is defined analogously
    as a common multiple \(m\) that divides all common multiples. It is denoted by
    \(m = \operatorname{lcm}(a_1,\dots,a_n)\).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '整数族仅有有限个公共因数，并且其中最大的因数可整除它们中的所有元素。更一般地，给定整环中的非零元素族\((a_i)\)，元素\(d\)称为该族的*最大公因数*（简称*gcd*），如果它是所有公因数的倍数。最大公因数一般并非唯一；所有它的同伴都具有相同的性质。如果没有歧义，用\(d
    = \gcd(a_1,\ldots,a_n)\)表示。一个族的*最小公倍数*（简称*lcm*）\(m\)定义为所有公倍数中的最小数，记为\(m = \operatorname{lcm}(a_1,\dots,a_n)\)。  '
- en: In a factorial domain, greatest common divisors always exists. They can be found,
    at least in principle, by factoring each element of a family into a product of
    prime powers and an optional unit, and, for each prime, taking the least power
    that appears in the factorizations. The product of these prime powers is then
    a greatest common divisor. A least common multiple can be obtained from the same
    factorizations as the product of the greatest powers for each prime.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在因子环中，最大公约数总是存在的。至少在原理上，可以通过将每个成员因式分解为素数幂的乘积和可选单位，并对每个素数取出现在因式分解中的最小幂来找到它们。这些素数幂的乘积就是最大公约数。最小公倍数可以从相同的因式分解中获得，即为每个素数取最大幂的乘积。
- en: Euclidean domains
  id: totrans-47
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 欧几里德整环
- en: 'A practical algorithm for computing a greatest common divisor can be implemented
    in *Euclidean domains*. They are integral domains that can be endowed with a function
    \(w\) assigning a nonnegative integer to each nonzero element of the domain and
    having the following property:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 一个实用的计算最大公约数的算法可以在*欧几里德整环*中实现。它们是可以赋予域内每个非零元素一个非负整数的整环，并具有以下属性：
- en: if \(a\) and \(b\) are nonzero, there are \(q\) and \(r\) that satisfy the *division
    identity*
  id: totrans-49
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果 \(a\) 和 \(b\) 非零，则存在 \(q\) 和 \(r\) 满足*除法标识*
- en: ''
  id: totrans-50
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: \(a = qb + r\)
  id: totrans-51
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \(a = qb + r\)
- en: ''
  id: totrans-52
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: such that either \(r = 0\) or \(w(r) < w(b)\).
  id: totrans-53
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这样要么 \(r = 0\) 要么 \(w(r) < w(b)\)。
- en: The ring of integers and all univariate polynomial rings over fields are Euclidean
    domains with \(w(a) = |a|\) resp. \(w(a) = \deg(a)\).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 整数环和所有域上的一元多项式环是具有 \(w(a) = |a|\) 或 \(w(a) = \deg(a)\) 的欧几里德整环。
- en: 'The division identity for integers is implemented in Python as the built-in
    function `divmod` that can also be applied to SymPy Integers:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 整数的除法标识在Python中作为内置函数`divmod`实现，也可以应用于SymPy整数：
- en: '[PRE8]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'For polynomials the division identity is given in SymPy by the function [`div()`](reference.html#sympy.polys.polytools.div
    "sympy.polys.polytools.div"):'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 对于多项式，SymPy中的除法标识由函数[`div()`](reference.html#sympy.polys.polytools.div "sympy.polys.polytools.div")给出：
- en: '[PRE9]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The division identity can be used to determine the divisibility of elements
    in a Euclidean domain. If \(r = 0\) in the division identity, then \(a\) is divisible
    by \(b\). Conversely, if \(a = cb\) for some element \(c\), then \((c - q)b =
    r\). It follows that \(c = q\) and \(r = 0\) if \(w\) has the additional property:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用除法标识来确定欧几里德整环中元素的可除性。如果在除法标识中 \(r = 0\)，则 \(a\) 可以被 \(b\) 整除。反之，如果 \(a =
    cb\) 对于某些元素 \(c\)，则 \((c - q)b = r\)。由此可知，如果 \(w\) 具有附加属性，则 \(c = q\) 并且 \(r =
    0\)。
- en: if \(a\) and \(b\) are nonzero, then \(w(ab) \ge w(b)\).
  id: totrans-60
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果 \(a\) 和 \(b\) 非零，则 \(w(ab) \ge w(b)\)。
- en: This is satisfied by the functions given above. (And it is always possible to
    redefine \(w(a)\) by taking the minimum of the values \(w(xa)\) for \(x \ne 0\).)
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这些给定的函数满足这一点。（并且总是可以通过重新定义 \(w(a)\) 为 \(w(xa)\) 的值中的最小值来满足。）
- en: The principal application of the division identity is the efficient computation
    of a greatest common divisor by means of the [Euclidean algorithm](https://en.wikipedia.org/wiki/Euclidean_algorithm).
    It applies to two elements of a Euclidean domain. A gcd of several elements can
    be obtained by iteration.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 除法标识的主要应用是通过[欧几里德算法](https://en.wikipedia.org/wiki/Euclidean_algorithm)高效地计算欧几里德整环中两个元素的最大公约数。它适用于多个元素的最大公约数可以通过迭代获得。
- en: 'The function for computing the greatest common divisor of integers in SymPy
    is currently [`igcd()`](../core.html#sympy.core.intfunc.igcd "sympy.core.intfunc.igcd"):'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 计算SymPy整数最大公约数的函数目前是[`igcd()`](../core.html#sympy.core.intfunc.igcd "sympy.core.intfunc.igcd")：
- en: '[PRE10]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'For univariate polynomials over a field the function has its common name [`gcd()`](reference.html#sympy.polys.polytools.gcd
    "sympy.polys.polytools.gcd"), and the returned polynomial is monic:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 对于域上的一元多项式，该函数通常被称为[`gcd()`](reference.html#sympy.polys.polytools.gcd "sympy.polys.polytools.gcd")，并且返回的多项式是首一的：
- en: '[PRE11]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Divisibility of polynomials
  id: totrans-67
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 多项式的可除性
- en: The ring \(A = \mathbb{Z}[x]\) of univariate polynomials over the ring of integers
    is not Euclidean but it is still factorial. To see this, consider the divisibility
    in \(A\).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 一元多项式环 \(A = \mathbb{Z}[x]\) 不是欧几里德但仍然是因子的。要看到这一点，请考虑\(A\)中的可整除性。
- en: Let \(f\) and \(g\) be two nonzero polynomials in \(A\). If \(f\) is divisible
    by \(g\) in \(A\), then it is also divisible in the ring \(B = \mathbb{Q}[x]\)
    of polynomials with rational coefficients. Since \(B\) is Euclidean, this can
    be determined by means of the division identity.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 设\(f\)和\(g\)是\(A\)中的两个非零多项式。如果\(f\)在\(A\)中被\(g\)整除，则在有理系数多项式环\(B = \mathbb{Q}[x]\)中也是如此。由于\(B\)是欧几里得环，这可以通过除法恒等式确定。
- en: Assume, conversely, that \(f = gh\) for some polynomial \(h\) in \(B\). Then
    \(f\) is divisible by \(g\) in \(A\) if and only if the coefficients of \(h\)
    are integers. To find out when this is true it is necessary to consider the divisibility
    of the coefficients.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 假设反过来，对于某些多项式\(h\)在\(B\)中，\(f = gh\)。那么\(f\)在\(A\)中被\(g\)整除当且仅当\(h\)的系数是整数。要确定这是否成立，需要考虑系数的可整除性。
- en: 'For a polynomial \(f\) in \(A\), let \(c\) be the greatest common divisor of
    its coefficients. Then \(f\) is divisible by the constant polynomial \(c\) in
    \(A\), and the quotient \(f/c= p\) is a polynomial whose coefficients are integers
    that have no common divisor apart from the units. Such polynomials are called
    *primitive*. A polynomial with rational coefficients can also be written as \(f
    = cp\), where \(c\) is a rational number and \(p\) is a primitive polynomial.
    The constant \(c\) is called the *content* of \(f\), and \(p\) is its *primitive
    part*. These components can be found by the method [`sympy.core.expr.Expr.as_content_primitive`](../core.html#sympy.core.expr.Expr.as_content_primitive
    "sympy.core.expr.Expr.as_content_primitive"):'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 对于\(A\)中的多项式\(f\)，设\(c\)是其系数的最大公因子。那么\(f\)在\(A\)中被常数多项式\(c\)整除，且商\(f/c = p\)是其系数是没有单位以外的整数的多项式。这样的多项式称为*原始*。有理系数的多项式也可以写为\(f
    = cp\)，其中\(c\)是有理数，\(p\)是原始多项式。常数\(c\)称为\(f\)的*内容*，\(p\)是其*原始部分*。这些组成部分可以通过方法[`sympy.core.expr.Expr.as_content_primitive`](../core.html#sympy.core.expr.Expr.as_content_primitive
    "sympy.core.expr.Expr.as_content_primitive")找到：
- en: '[PRE12]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Let \(f\), \(f'\) be polynomials with contents \(c\), \(c'\) and primitive parts
    \(p\), \(p'\). Then \(ff' = (cc')(pp')\) where the product \(pp'\) is primitive
    by [Gauss’s lemma](https://en.wikipedia.org/wiki/Gauss%27s_lemma_(polynomial)).
    It follows that
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 设\(f\)和\(f'\)是具有内容\(c\)和\(c'\)以及原始部分\(p\)和\(p'\)的多项式。那么\(ff' = (cc')(pp')\)，其中乘积\(pp'\)由[Gauss引理](https://en.wikipedia.org/wiki/Gauss%27s_lemma_(polynomial))是原始的。由此得出
- en: the content of a product of polynomials is the product of their contents and
    the primitive part of the product is the product of the primitive parts.
  id: totrans-74
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多项式乘积的内容是它们内容的乘积，而乘积的原始部分是原始部分的乘积。
- en: 'Returning to the divisibility in the ring \(\mathbb{Z}[x]\), assume that \(f\)
    and \(g\) are two polynomials with integer coefficients such that the division
    identity in \(\mathbb{Q}[x]\) yields the equality \(f = gh\) for some polynomial
    \(h\) with rational coefficients. Then the content of \(f\) is equal to the content
    of \(g\) multiplied by the content of \(h\). As \(h\) has integer coefficients
    if and only if its content is an integer, we get the following criterion:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 回到环\(\mathbb{Z}[x]\)中的整除性，假设\(f\)和\(g\)是具有整数系数的两个多项式，使得在\(\mathbb{Q}[x]\)中的除法恒等式产生多项式\(h\)的等式\(f
    = gh\)。则\(f\)的内容等于\(g\)的内容乘以\(h\)的内容。由于\(h\)具有整数系数当且仅当其内容是整数，我们得到以下判据：
- en: \(f\) is divisible by \(g\) in the ring \(\mathbb{Z}[x]\) if and only if
  id: totrans-76
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \(f\)在环\(\mathbb{Z}[x]\)中被\(g\)整除当且仅当
- en: ''
  id: totrans-77
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: \(f\) is divisible by \(g\) in \(\mathbb{Q}[x]\), and
  id: totrans-78
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: \(f\)在\(\mathbb{Q}[x]\)中被\(g\)整除，并且
- en: ''
  id: totrans-79
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-80
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: the content of \(f\) is divisible by the content of \(g\) in \(\mathbb{Z}\).
  id: totrans-81
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: \(f\)的内容在\(\mathbb{Z}\)中能被\(g\)的内容整除。
- en: 'If \(f = cp\) is irreducible in \(\mathbb{Z}[x]\), then either \(c\) or \(p\)
    must be a unit. If \(p\) is not a unit, it must be irreducible also in \(\mathbb{Q}[x]\).
    For if it is a product of two polynomials, it is also the product of their primitive
    parts, and one of them must be a unit. Hence there are two kinds of irreducible
    elements in \(\mathbb{Z}[x]\):'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如果\(f = cp\)在\(\mathbb{Z}[x]\)中是不可约的，则\(c\)或\(p\)必须是单位。如果\(p\)不是单位，则它在\(\mathbb{Q}[x]\)中也必须是不可约的。因为如果它是两个多项式的乘积，它也是它们的原始部分的乘积，其中一个必须是单位。因此在\(\mathbb{Z}[x]\)中有两种不可约元素：
- en: prime numbers of \(\mathbb{Z}\), and
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: \(\mathbb{Z}\)的素数，以及
- en: primitive polynomials that are irreducible in \(\mathbb{Q}[x]\).
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在\(\mathbb{Q}[x]\)中是不可约的原始多项式。
- en: It follows that each polynomial in \(\mathbb{Z}[x]\) is a product of irreducible
    elements. It suffices to factor its content and primitive part separately. These
    products are essentially unique; hence \(\mathbb{Z}[x]\) is also factorial.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 由此可知，\(\mathbb{Z}[x]\) 中的每个多项式都是不可约元素的乘积。只需分别对其内容和原始部分进行因式分解即可。这些乘积基本上是唯一的；因此
    \(\mathbb{Z}[x]\) 也是因子的。
- en: 'Another important consequence is that a greatest common divisor of two polynomials
    in \(\mathbb{Z}[x]\) can be found efficiently by applying the Euclidean algorithm
    separately to their contents and primitive parts in the Euclidean domains \(\mathbb{Z}\)
    and \(\mathbb{Q}[x]\). This is also implemented in SymPy:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个重要的结论是，在 \(\mathbb{Z}[x]\) 中两个多项式的最大公约数可以通过将它们的内容和原始部分分别应用于欧几里得域 \(\mathbb{Z}\)
    和 \(\mathbb{Q}[x]\) 中的欧几里得算法来有效地找到。这也在 SymPy 中实现了：
- en: '[PRE13]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Basic functionality
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基本功能
- en: These functions provide different algorithms dealing with polynomials in the
    form of SymPy expression, like symbols, sums etc.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数提供了处理 SymPy 表达式形式的多项式的不同算法，如符号、求和等。
- en: Division
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 除法
- en: 'The function [`div()`](reference.html#sympy.polys.polytools.div "sympy.polys.polytools.div")
    provides division of polynomials with remainder. That is, for polynomials `f`
    and `g`, it computes `q` and `r`, such that \(f = g \cdot q + r\) and \(\deg(r)
    < \deg(q)\). For polynomials in one variables with coefficients in a field, say,
    the rational numbers, `q` and `r` are uniquely defined this way:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 函数 [`div()`](reference.html#sympy.polys.polytools.div "sympy.polys.polytools.div")
    提供了带余除法。也就是说，对于多项式 `f` 和 `g`，它计算出 `q` 和 `r`，使得 \(f = g \cdot q + r\) 且 \(\deg(r)
    < \deg(q)\)。对于系数在一个域中（例如有理数）的一元多项式，这种方式唯一地定义了 `q` 和 `r`：
- en: '[PRE14]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'As you can see, `q` has a non-integer coefficient. If you want to do division
    only in the ring of polynomials with integer coefficients, you can specify an
    additional parameter:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，`q` 有一个非整数系数。如果你只想在整数系数的多项式环中进行除法，你可以指定一个额外的参数：
- en: '[PRE15]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'But be warned, that this ring is no longer Euclidean and that the degree of
    the remainder doesn’t need to be smaller than that of `f`. Since 2 doesn’t divide
    5, \(2 x\) doesn’t divide \(5 x^2\), even if the degree is smaller. But:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 但要注意，这个环不再是欧几里得环，余数的次数不一定比 `f` 的次数小。因为 2 不能整除 5，所以 \(2 x\) 不能整除 \(5 x^2\)，即使次数较小。但：
- en: '[PRE16]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'This also works for polynomials with multiple variables:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这也适用于多变量多项式：
- en: '[PRE17]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'In the last examples, all of the three variables `x`, `y` and `z` are assumed
    to be variables of the polynomials. But if you have some unrelated constant as
    coefficient, you can specify the variables explicitly:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后的示例中，所有三个变量 `x`、`y` 和 `z` 都被假定为多项式的变量。但如果你有一些无关的常数作为系数，你可以显式地指定这些变量：
- en: '[PRE18]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: GCD and LCM
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 最大公约数和最小公倍数
- en: With division, there is also the computation of the greatest common divisor
    and the least common multiple.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 除法时，还涉及最大公约数和最小公倍数的计算。
- en: 'When the polynomials have integer coefficients, the contents’ gcd is also considered:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 当多项式具有整数系数时，考虑到内容的最大公约数：
- en: '[PRE19]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'But if the polynomials have rational coefficients, then the returned polynomial
    is monic:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 但是如果多项式具有有理系数，则返回的多项式是首一的：
- en: '[PRE20]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'It also works with multiple variables. In this case, the variables are ordered
    alphabetically, be default, which has influence on the leading coefficient:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 它也适用于多变量。在这种情况下，默认情况下，变量按字母顺序排序，这会影响到主导系数：
- en: '[PRE21]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The lcm is connected with the gcd and one can be computed using the other:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 最小公倍数与最大公约数相关联，可以用其中一个来计算另一个：
- en: '[PRE22]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Square-free factorization
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 无平方因式分解
- en: 'The square-free factorization of a univariate polynomial is the product of
    all factors (not necessarily irreducible) of degree 1, 2 etc.:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 单变量多项式的无平方因式分解是所有一次、二次等因子的乘积（不一定是不可约的）：
- en: '[PRE23]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Factorization
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 因式分解
- en: 'This function provides factorization of univariate and multivariate polynomials
    with rational coefficients:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数提供了有理系数的一元和多元多项式的因式分解：
- en: '[PRE24]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Groebner bases
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Groebner 基
- en: 'Buchberger’s algorithm is implemented, supporting various monomial orders:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: Buchberger 算法已经实现，支持各种单项式排序：
- en: '[PRE25]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Solving Equations
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解方程
- en: 'We have (incomplete) methods to find the complex or even symbolic roots of
    polynomials and to solve some systems of polynomial equations:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有（不完整的）方法来找到多项式的复数甚至符号根，并解一些多项式方程组：
- en: '[PRE26]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
