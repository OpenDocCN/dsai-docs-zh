- en: numpy.matrix
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.matrix
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.matrix.html](https://numpy.org/doc/1.26/reference/generated/numpy.matrix.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.matrix.html](https://numpy.org/doc/1.26/reference/generated/numpy.matrix.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: It is no longer recommended to use this class, even for linear algebra. Instead
    use regular arrays. The class may be removed in the future.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 不再建议使用这个类，甚至对于线性代数也不建议。请使用正规的数组。该类可能会在未来被移除。
- en: Returns a matrix from an array-like object, or from a string of data. A matrix
    is a specialized 2-D array that retains its 2-D nature through operations. It
    has certain special operators, such as `*` (matrix multiplication) and `**` (matrix
    power).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 从一个类似数组的对象或数据字符串返回一个矩阵。矩阵是一个专门化的保持其二维性质的二维数组。它有一些特殊的操作符，比如`*`（矩阵乘法）和`**`（矩阵幂）。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '参数:'
- en: '**data**array_like or string'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**data**array_like or string'
- en: If [`data`](numpy.matrix.data.html#numpy.matrix.data "numpy.matrix.data") is
    a string, it is interpreted as a matrix with commas or spaces separating columns,
    and semicolons separating rows.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果[`data`](numpy.matrix.data.html#numpy.matrix.data "numpy.matrix.data")是一个字符串，它会被解释为以逗号或空格分隔列，用分号分隔行的矩阵。
- en: '**dtype**data-type'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**dtype**数据类型'
- en: Data-type of the output matrix.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 输出矩阵的数据类型。
- en: '**copy**bool'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**copy**bool'
- en: If [`data`](numpy.matrix.data.html#numpy.matrix.data "numpy.matrix.data") is
    already an [`ndarray`](numpy.ndarray.html#numpy.ndarray "numpy.ndarray"), then
    this flag determines whether the data is copied (the default), or whether a view
    is constructed.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果[`data`](numpy.matrix.data.html#numpy.matrix.data "numpy.matrix.data")已经是一个[`ndarray`](numpy.ndarray.html#numpy.ndarray
    "numpy.ndarray")，则此标志确定数据是被复制（默认）还是被构建为视图。
- en: See also
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`array`](numpy.array.html#numpy.array "numpy.array")'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[`array`](numpy.array.html#numpy.array "numpy.array")'
- en: Examples
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Attributes:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '属性:'
- en: '[`A`](numpy.matrix.A.html#numpy.matrix.A "numpy.matrix.A")'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[`A`](numpy.matrix.A.html#numpy.matrix.A "numpy.matrix.A")'
- en: Return *self* as an [`ndarray`](numpy.ndarray.html#numpy.ndarray "numpy.ndarray")
    object.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个[`ndarray`](numpy.ndarray.html#numpy.ndarray "numpy.ndarray")对象返回 *self*。
- en: '[`A1`](numpy.matrix.A1.html#numpy.matrix.A1 "numpy.matrix.A1")'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[`A1`](numpy.matrix.A1.html#numpy.matrix.A1 "numpy.matrix.A1")'
- en: Return *self* as a flattened [`ndarray`](numpy.ndarray.html#numpy.ndarray "numpy.ndarray").
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 将 *self* 作为一个扁平化的[`ndarray`](numpy.ndarray.html#numpy.ndarray "numpy.ndarray")返回。
- en: '[`H`](numpy.matrix.H.html#numpy.matrix.H "numpy.matrix.H")'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[`H`](numpy.matrix.H.html#numpy.matrix.H "numpy.matrix.H")'
- en: Returns the (complex) conjugate transpose of *self*.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 *self* 的（复数）共轭转置。
- en: '[`I`](numpy.matrix.I.html#numpy.matrix.I "numpy.matrix.I")'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[`I`](numpy.matrix.I.html#numpy.matrix.I "numpy.matrix.I")'
- en: Returns the (multiplicative) inverse of invertible *self*.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 *self* 可逆的（乘法）逆。
- en: '[`T`](numpy.matrix.T.html#numpy.matrix.T "numpy.matrix.T")'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[`T`](numpy.matrix.T.html#numpy.matrix.T "numpy.matrix.T")'
- en: Returns the transpose of the matrix.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 返回矩阵的转置。
- en: '[`base`](numpy.matrix.base.html#numpy.matrix.base "numpy.matrix.base")'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[`base`](numpy.matrix.base.html#numpy.matrix.base "numpy.matrix.base")'
- en: Base object if memory is from some other object.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果内存来自其他对象，则为基础对象。
- en: '[`ctypes`](numpy.matrix.ctypes.html#numpy.matrix.ctypes "numpy.matrix.ctypes")'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ctypes`](numpy.matrix.ctypes.html#numpy.matrix.ctypes "numpy.matrix.ctypes")'
- en: An object to simplify the interaction of the array with the ctypes module.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简化数组与 ctypes 模块交互的对象。
- en: '[`data`](numpy.matrix.data.html#numpy.matrix.data "numpy.matrix.data")'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[`data`](numpy.matrix.data.html#numpy.matrix.data "numpy.matrix.data")'
- en: Python buffer object pointing to the start of the array’s data.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 指向数组数据起始位置的 Python 缓冲对象。
- en: '[`dtype`](numpy.dtype.html#numpy.dtype "numpy.dtype")'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dtype`](numpy.dtype.html#numpy.dtype "numpy.dtype")'
- en: Data-type of the array’s elements.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 数组元素的数据类型。
- en: '[`flags`](numpy.matrix.flags.html#numpy.matrix.flags "numpy.matrix.flags")'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[`flags`](numpy.matrix.flags.html#numpy.matrix.flags "numpy.matrix.flags")'
- en: Information about the memory layout of the array.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 数组的内存布局信息。
- en: '[`flat`](numpy.matrix.flat.html#numpy.matrix.flat "numpy.matrix.flat")'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[`flat`](numpy.matrix.flat.html#numpy.matrix.flat "numpy.matrix.flat")'
- en: A 1-D iterator over the array.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 数组的一维迭代器。
- en: '[`imag`](numpy.imag.html#numpy.imag "numpy.imag")'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[`imag`](numpy.imag.html#numpy.imag "numpy.imag")'
- en: The imaginary part of the array.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 数组的虚部。
- en: '[`itemsize`](numpy.matrix.itemsize.html#numpy.matrix.itemsize "numpy.matrix.itemsize")'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '[`itemsize`](numpy.matrix.itemsize.html#numpy.matrix.itemsize "numpy.matrix.itemsize")'
- en: Length of one array element in bytes.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 一个数组元素的字节长度。
- en: '[`nbytes`](numpy.matrix.nbytes.html#numpy.matrix.nbytes "numpy.matrix.nbytes")'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[`nbytes`](numpy.matrix.nbytes.html#numpy.matrix.nbytes "numpy.matrix.nbytes")'
- en: Total bytes consumed by the elements of the array.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 数组元素消耗的总字节数。
- en: '[`ndim`](numpy.matrix.ndim.html#numpy.matrix.ndim "numpy.matrix.ndim")'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ndim`](numpy.matrix.ndim.html#numpy.matrix.ndim "numpy.matrix.ndim")'
- en: Number of array dimensions.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 数组维度数量。
- en: '[`real`](numpy.real.html#numpy.real "numpy.real")'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '[`real`](numpy.real.html#numpy.real "numpy.real")'
- en: The real part of the array.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 数组的实部。
- en: '[`shape`](numpy.shape.html#numpy.shape "numpy.shape")'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[`shape`](numpy.shape.html#numpy.shape "numpy.shape")'
- en: Tuple of array dimensions.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 数组维度的元组。
- en: '[`size`](numpy.matrix.size.html#numpy.matrix.size "numpy.matrix.size")'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[`size`](numpy.matrix.size.html#numpy.matrix.size "numpy.matrix.size")'
- en: Number of elements in the array.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 数组中的元素数量。
- en: '[`strides`](numpy.matrix.strides.html#numpy.matrix.strides "numpy.matrix.strides")'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[`strides`](numpy.matrix.strides.html#numpy.matrix.strides "numpy.matrix.strides")'
- en: Tuple of bytes to step in each dimension when traversing an array.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 遍历数组时，在每个维度上的步长的字节元组。
- en: Methods
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`all`](numpy.matrix.all.html#numpy.matrix.all "numpy.matrix.all")([axis, out])
    | Test whether all matrix elements along a given axis evaluate to True. |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| [`all`](numpy.matrix.all.html#numpy.matrix.all "numpy.matrix.all")([axis, out])
    | 测试沿给定轴的所有矩阵元素是否评估为 True。 |'
- en: '| [`any`](numpy.matrix.any.html#numpy.matrix.any "numpy.matrix.any")([axis, out])
    | Test whether any array element along a given axis evaluates to True. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| [`any`](numpy.matrix.any.html#numpy.matrix.any "numpy.matrix.any")([axis, out])
    | 测试沿给定轴的任何数组元素是否评估为 True。 |'
- en: '| [`argmax`](numpy.matrix.argmax.html#numpy.matrix.argmax "numpy.matrix.argmax")([axis, out])
    | Indexes of the maximum values along an axis. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| [`argmax`](numpy.matrix.argmax.html#numpy.matrix.argmax "numpy.matrix.argmax")([axis, out])
    | 沿轴的最大值的索引。 |'
- en: '| [`argmin`](numpy.matrix.argmin.html#numpy.matrix.argmin "numpy.matrix.argmin")([axis, out])
    | Indexes of the minimum values along an axis. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| [`argmin`](numpy.matrix.argmin.html#numpy.matrix.argmin "numpy.matrix.argmin")([axis, out])
    | 沿轴的最小值的索引。 |'
- en: '| [`argpartition`](numpy.matrix.argpartition.html#numpy.matrix.argpartition
    "numpy.matrix.argpartition")(kth[, axis, kind, order]) | Returns the indices that
    would partition this array. |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| [`argpartition`](numpy.matrix.argpartition.html#numpy.matrix.argpartition
    "numpy.matrix.argpartition")(kth[, axis, kind, order]) | 返回将此数组分区的索引。 |'
- en: '| [`argsort`](numpy.matrix.argsort.html#numpy.matrix.argsort "numpy.matrix.argsort")([axis, kind, order])
    | Returns the indices that would sort this array. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| [`argsort`](numpy.matrix.argsort.html#numpy.matrix.argsort "numpy.matrix.argsort")([axis, kind, order])
    | 返回将此数组排序的索引。 |'
- en: '| [`astype`](numpy.matrix.astype.html#numpy.matrix.astype "numpy.matrix.astype")(dtype[, order, casting, subok, copy])
    | Copy of the array, cast to a specified type. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| [`astype`](numpy.matrix.astype.html#numpy.matrix.astype "numpy.matrix.astype")(dtype[, order, casting, subok, copy])
    | 复制为指定类型的数组。 |'
- en: '| [`byteswap`](numpy.matrix.byteswap.html#numpy.matrix.byteswap "numpy.matrix.byteswap")([inplace])
    | Swap the bytes of the array elements |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| [`byteswap`](numpy.matrix.byteswap.html#numpy.matrix.byteswap "numpy.matrix.byteswap")([inplace])
    | 交换数组元素的字节。 |'
- en: '| [`choose`](numpy.matrix.choose.html#numpy.matrix.choose "numpy.matrix.choose")(choices[, out, mode])
    | Use an index array to construct a new array from a set of choices. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| [`choose`](numpy.matrix.choose.html#numpy.matrix.choose "numpy.matrix.choose")(choices[, out, mode])
    | 使用索引数组从一组选择中构造新数组。 |'
- en: '| [`clip`](numpy.matrix.clip.html#numpy.matrix.clip "numpy.matrix.clip")([min, max, out])
    | Return an array whose values are limited to `[min, max]`. |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| [`clip`](numpy.matrix.clip.html#numpy.matrix.clip "numpy.matrix.clip")([min, max, out])
    | 返回其值限制为`[min, max]`的数组。 |'
- en: '| [`compress`](numpy.matrix.compress.html#numpy.matrix.compress "numpy.matrix.compress")(condition[, axis, out])
    | Return selected slices of this array along given axis. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| [`compress`](numpy.matrix.compress.html#numpy.matrix.compress "numpy.matrix.compress")(condition[, axis, out])
    | 沿给定轴返回此数组的选定切片。 |'
- en: '| [`conj`](numpy.matrix.conj.html#numpy.matrix.conj "numpy.matrix.conj")()
    | Complex-conjugate all elements. |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| [`conj`](numpy.matrix.conj.html#numpy.matrix.conj "numpy.matrix.conj")()
    | 复共轭所有元素。 |'
- en: '| [`conjugate`](numpy.matrix.conjugate.html#numpy.matrix.conjugate "numpy.matrix.conjugate")()
    | Return the complex conjugate, element-wise. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| [`conjugate`](numpy.matrix.conjugate.html#numpy.matrix.conjugate "numpy.matrix.conjugate")()
    | 返回元素的复共轭。 |'
- en: '| [`copy`](numpy.matrix.copy.html#numpy.matrix.copy "numpy.matrix.copy")([order])
    | Return a copy of the array. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| [`copy`](numpy.matrix.copy.html#numpy.matrix.copy "numpy.matrix.copy")([order])
    | 返回数组的副本。 |'
- en: '| [`cumprod`](numpy.matrix.cumprod.html#numpy.matrix.cumprod "numpy.matrix.cumprod")([axis, dtype, out])
    | Return the cumulative product of the elements along the given axis. |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| [`cumprod`](numpy.matrix.cumprod.html#numpy.matrix.cumprod "numpy.matrix.cumprod")([axis, dtype, out])
    | 返回沿给定轴的元素的累积乘积。 |'
- en: '| [`cumsum`](numpy.matrix.cumsum.html#numpy.matrix.cumsum "numpy.matrix.cumsum")([axis, dtype, out])
    | Return the cumulative sum of the elements along the given axis. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| [`cumsum`](numpy.matrix.cumsum.html#numpy.matrix.cumsum "numpy.matrix.cumsum")([axis, dtype, out])
    | 返回沿给定轴的元素的累积和。 |'
- en: '| [`diagonal`](numpy.matrix.diagonal.html#numpy.matrix.diagonal "numpy.matrix.diagonal")([offset, axis1, axis2])
    | Return specified diagonals. |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| [`diagonal`](numpy.matrix.diagonal.html#numpy.matrix.diagonal "numpy.matrix.diagonal")([offset, axis1, axis2])
    | 返回指定对角线。'
- en: '| [`dump`](numpy.matrix.dump.html#numpy.matrix.dump "numpy.matrix.dump")(file)
    | Dump a pickle of the array to the specified file. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| [`dump`](numpy.matrix.dump.html#numpy.matrix.dump "numpy.matrix.dump")(file)
    | 将数组的 pickle 转储到指定的文件中。'
- en: '| [`dumps`](numpy.matrix.dumps.html#numpy.matrix.dumps "numpy.matrix.dumps")()
    | Returns the pickle of the array as a string. |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| [`dumps`](numpy.matrix.dumps.html#numpy.matrix.dumps "numpy.matrix.dumps")()
    | 将数组的 pickle 作为字符串返回。'
- en: '| [`fill`](numpy.matrix.fill.html#numpy.matrix.fill "numpy.matrix.fill")(value)
    | Fill the array with a scalar value. |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| [`fill`](numpy.matrix.fill.html#numpy.matrix.fill "numpy.matrix.fill")(value)
    | 用标量值填充数组。'
- en: '| [`flatten`](numpy.matrix.flatten.html#numpy.matrix.flatten "numpy.matrix.flatten")([order])
    | Return a flattened copy of the matrix. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| [`flatten`](numpy.matrix.flatten.html#numpy.matrix.flatten "numpy.matrix.flatten")([order])
    | 返回矩阵的平展副本。'
- en: '| [`getA`](numpy.matrix.getA.html#numpy.matrix.getA "numpy.matrix.getA")()
    | Return *self* as an [`ndarray`](numpy.ndarray.html#numpy.ndarray "numpy.ndarray")
    object. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| [`getA`](numpy.matrix.getA.html#numpy.matrix.getA "numpy.matrix.getA")()
    | 以 [`ndarray`](numpy.ndarray.html#numpy.ndarray "numpy.ndarray") 对象的形式返回 **self**。'
- en: '| [`getA1`](numpy.matrix.getA1.html#numpy.matrix.getA1 "numpy.matrix.getA1")()
    | Return *self* as a flattened [`ndarray`](numpy.ndarray.html#numpy.ndarray "numpy.ndarray").
    |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| [`getA1`](numpy.matrix.getA1.html#numpy.matrix.getA1 "numpy.matrix.getA1")()
    | 将 **self** 作为一个平展的 [`ndarray`](numpy.ndarray.html#numpy.ndarray "numpy.ndarray")
    返回。'
- en: '| [`getH`](numpy.matrix.getH.html#numpy.matrix.getH "numpy.matrix.getH")()
    | Returns the (complex) conjugate transpose of *self*. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| [`getH`](numpy.matrix.getH.html#numpy.matrix.getH "numpy.matrix.getH")()
    | 返回 **self** 的（复数）共轭转置。'
- en: '| [`getI`](numpy.matrix.getI.html#numpy.matrix.getI "numpy.matrix.getI")()
    | Returns the (multiplicative) inverse of invertible *self*. |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| [`getI`](numpy.matrix.getI.html#numpy.matrix.getI "numpy.matrix.getI")()
    | 返回可逆 **self** 的（乘法）逆。'
- en: '| [`getT`](numpy.matrix.getT.html#numpy.matrix.getT "numpy.matrix.getT")()
    | Returns the transpose of the matrix. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| [`getT`](numpy.matrix.getT.html#numpy.matrix.getT "numpy.matrix.getT")()
    | 返回矩阵的转置。'
- en: '| [`getfield`](numpy.matrix.getfield.html#numpy.matrix.getfield "numpy.matrix.getfield")(dtype[, offset])
    | Returns a field of the given array as a certain type. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| [`getfield`](numpy.matrix.getfield.html#numpy.matrix.getfield "numpy.matrix.getfield")(dtype[, offset])
    | 将给定数组的字段按特定类型返回。'
- en: '| [`item`](numpy.matrix.item.html#numpy.matrix.item "numpy.matrix.item")(*args)
    | Copy an element of an array to a standard Python scalar and return it. |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| [`item`](numpy.matrix.item.html#numpy.matrix.item "numpy.matrix.item")(*args)
    | 将数组的一个元素复制到标准 Python 标量并返回。'
- en: '| [`itemset`](numpy.matrix.itemset.html#numpy.matrix.itemset "numpy.matrix.itemset")(*args)
    | Insert scalar into an array (scalar is cast to array''s dtype, if possible)
    |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| [`itemset`](numpy.matrix.itemset.html#numpy.matrix.itemset "numpy.matrix.itemset")(*args)
    | 将标量插入数组（如果可能，将标量强制转换为数组的dtype）。'
- en: '| [`max`](numpy.matrix.max.html#numpy.matrix.max "numpy.matrix.max")([axis, out])
    | Return the maximum value along an axis. |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| [`max`](numpy.matrix.max.html#numpy.matrix.max "numpy.matrix.max")([axis, out])
    | 返回沿某个轴的最大值。'
- en: '| [`mean`](numpy.matrix.mean.html#numpy.matrix.mean "numpy.matrix.mean")([axis, dtype, out])
    | Returns the average of the matrix elements along the given axis. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| [`mean`](numpy.matrix.mean.html#numpy.matrix.mean "numpy.matrix.mean")([axis, dtype, out])
    | 返回沿给定轴的矩阵元素的平均值。'
- en: '| [`min`](numpy.matrix.min.html#numpy.matrix.min "numpy.matrix.min")([axis, out])
    | Return the minimum value along an axis. |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| [`min`](numpy.matrix.min.html#numpy.matrix.min "numpy.matrix.min")([axis, out])
    | 返回沿某个轴的最小值。'
- en: '| [`newbyteorder`](numpy.matrix.newbyteorder.html#numpy.matrix.newbyteorder
    "numpy.matrix.newbyteorder")([new_order]) | Return the array with the same data
    viewed with a different byte order. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| [`newbyteorder`](numpy.matrix.newbyteorder.html#numpy.matrix.newbyteorder
    "numpy.matrix.newbyteorder")([new_order]) | 返回以不同字节顺序查看的相同数据的数组。'
- en: '| [`nonzero`](numpy.matrix.nonzero.html#numpy.matrix.nonzero "numpy.matrix.nonzero")()
    | Return the indices of the elements that are non-zero. |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| [`nonzero`](numpy.matrix.nonzero.html#numpy.matrix.nonzero "numpy.matrix.nonzero")()
    | 返回非零元素的索引。'
- en: '| [`partition`](numpy.matrix.partition.html#numpy.matrix.partition "numpy.matrix.partition")(kth[, axis, kind, order])
    | Rearranges the elements in the array in such a way that the value of the element
    in kth position is in the position it would be in a sorted array. |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| [`partition`](numpy.matrix.partition.html#numpy.matrix.partition "numpy.matrix.partition")(kth[, axis, kind, order])
    | 重新排列数组中的元素，使第k个位置的元素的值处于排序后数组中的位置。'
- en: '| [`prod`](numpy.matrix.prod.html#numpy.matrix.prod "numpy.matrix.prod")([axis, dtype, out])
    | Return the product of the array elements over the given axis. |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| [`prod`](numpy.matrix.prod.html#numpy.matrix.prod "numpy.matrix.prod")([axis, dtype, out])
    | 返回沿给定轴的数组元素的乘积。 |'
- en: '| [`ptp`](numpy.matrix.ptp.html#numpy.matrix.ptp "numpy.matrix.ptp")([axis, out])
    | Peak-to-peak (maximum - minimum) value along the given axis. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| [`ptp`](numpy.matrix.ptp.html#numpy.matrix.ptp "numpy.matrix.ptp")([axis, out])
    | 沿给定轴的峰值到谷值（最大值 - 最小值）。 |'
- en: '| [`put`](numpy.matrix.put.html#numpy.matrix.put "numpy.matrix.put")(indices, values[, mode])
    | Set `a.flat[n] = values[n]` for all *n* in indices. |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| [`put`](numpy.matrix.put.html#numpy.matrix.put "numpy.matrix.put")(indices, values[, mode])
    | 对所有 *n* 在索引中的值，设置 `a.flat[n] = values[n]`。 |'
- en: '| [`ravel`](numpy.matrix.ravel.html#numpy.matrix.ravel "numpy.matrix.ravel")([order])
    | Return a flattened matrix. |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| [`ravel`](numpy.matrix.ravel.html#numpy.matrix.ravel "numpy.matrix.ravel")([order])
    | 返回一个扁平化的矩阵。 |'
- en: '| [`repeat`](numpy.matrix.repeat.html#numpy.matrix.repeat "numpy.matrix.repeat")(repeats[, axis])
    | Repeat elements of an array. |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| [`repeat`](numpy.matrix.repeat.html#numpy.matrix.repeat "numpy.matrix.repeat")(repeats[, axis])
    | 重复数组的元素。 |'
- en: '| [`reshape`](numpy.matrix.reshape.html#numpy.matrix.reshape "numpy.matrix.reshape")(shape[, order])
    | Returns an array containing the same data with a new shape. |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| [`reshape`](numpy.matrix.reshape.html#numpy.matrix.reshape "numpy.matrix.reshape")(shape[, order])
    | 返回包含相同数据的新形状的数组。 |'
- en: '| [`resize`](numpy.matrix.resize.html#numpy.matrix.resize "numpy.matrix.resize")(new_shape[, refcheck])
    | Change shape and size of array in-place. |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| [`resize`](numpy.matrix.resize.html#numpy.matrix.resize "numpy.matrix.resize")(new_shape[, refcheck])
    | 就地更改数组的形状和大小。 |'
- en: '| [`round`](numpy.matrix.round.html#numpy.matrix.round "numpy.matrix.round")([decimals, out])
    | Return *a* with each element rounded to the given number of decimals. |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| [`round`](numpy.matrix.round.html#numpy.matrix.round "numpy.matrix.round")([decimals, out])
    | 返回每个元素四舍五入到给定小数位的 *a*。 |'
- en: '| [`searchsorted`](numpy.matrix.searchsorted.html#numpy.matrix.searchsorted
    "numpy.matrix.searchsorted")(v[, side, sorter]) | Find indices where elements
    of v should be inserted in a to maintain order. |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| [`searchsorted`](numpy.matrix.searchsorted.html#numpy.matrix.searchsorted
    "numpy.matrix.searchsorted")(v[, side, sorter]) | 查找应插入数组 *a* 中元素*v* 的索引，以保持顺序。
    |'
- en: '| [`setfield`](numpy.matrix.setfield.html#numpy.matrix.setfield "numpy.matrix.setfield")(val, dtype[, offset])
    | Put a value into a specified place in a field defined by a data-type. |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| [`setfield`](numpy.matrix.setfield.html#numpy.matrix.setfield "numpy.matrix.setfield")(val, dtype[, offset])
    | 将一个值放入由数据类型定义的字段中的指定位置。 |'
- en: '| [`setflags`](numpy.matrix.setflags.html#numpy.matrix.setflags "numpy.matrix.setflags")([write, align, uic])
    | Set array flags WRITEABLE, ALIGNED, WRITEBACKIFCOPY, respectively. |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| [`setflags`](numpy.matrix.setflags.html#numpy.matrix.setflags "numpy.matrix.setflags")([write, align, uic])
    | 分别设置数组标志 WRITEABLE、ALIGNED、WRITEBACKIFCOPY。 |'
- en: '| [`sort`](numpy.matrix.sort.html#numpy.matrix.sort "numpy.matrix.sort")([axis, kind, order])
    | Sort an array in-place. |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| [`sort`](numpy.matrix.sort.html#numpy.matrix.sort "numpy.matrix.sort")([axis, kind, order])
    | 就地��数组进行排序。 |'
- en: '| [`squeeze`](numpy.matrix.squeeze.html#numpy.matrix.squeeze "numpy.matrix.squeeze")([axis])
    | Return a possibly reshaped matrix. |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| [`squeeze`](numpy.matrix.squeeze.html#numpy.matrix.squeeze "numpy.matrix.squeeze")([axis])
    | 返回一个可能重新塑形的矩阵。 |'
- en: '| [`std`](numpy.matrix.std.html#numpy.matrix.std "numpy.matrix.std")([axis, dtype, out, ddof])
    | Return the standard deviation of the array elements along the given axis. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| [`std`](numpy.matrix.std.html#numpy.matrix.std "numpy.matrix.std")([axis, dtype, out, ddof])
    | 返回沿给定轴的数组元素的标准偏差。 |'
- en: '| [`sum`](numpy.matrix.sum.html#numpy.matrix.sum "numpy.matrix.sum")([axis, dtype, out])
    | Returns the sum of the matrix elements, along the given axis. |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| [`sum`](numpy.matrix.sum.html#numpy.matrix.sum "numpy.matrix.sum")([axis, dtype, out])
    | 返回矩阵元素沿给定轴的和。 |'
- en: '| [`swapaxes`](numpy.matrix.swapaxes.html#numpy.matrix.swapaxes "numpy.matrix.swapaxes")(axis1, axis2)
    | Return a view of the array with *axis1* and *axis2* interchanged. |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| [`swapaxes`](numpy.matrix.swapaxes.html#numpy.matrix.swapaxes "numpy.matrix.swapaxes")(axis1, axis2)
    | 返回数组的视图，*axis1* 和 *axis2* 互换。 |'
- en: '| [`take`](numpy.matrix.take.html#numpy.matrix.take "numpy.matrix.take")(indices[, axis, out, mode])
    | Return an array formed from the elements of *a* at the given indices. |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| [`take`](numpy.matrix.take.html#numpy.matrix.take "numpy.matrix.take")(indices[, axis, out, mode])
    | 返回数组 *a* 中给定索引处的元素组成的数组。 |'
- en: '| [`tobytes`](numpy.matrix.tobytes.html#numpy.matrix.tobytes "numpy.matrix.tobytes")([order])
    | Construct Python bytes containing the raw data bytes in the array. |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| [`tobytes`](numpy.matrix.tobytes.html#numpy.matrix.tobytes "numpy.matrix.tobytes")([order])
    | 构建包含数组中原始数据字节的 Python 字节。 |'
- en: '| [`tofile`](numpy.matrix.tofile.html#numpy.matrix.tofile "numpy.matrix.tofile")(fid[, sep, format])
    | Write array to a file as text or binary (default). |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| [`tofile`](numpy.matrix.tofile.html#numpy.matrix.tofile "numpy.matrix.tofile")(fid[, sep, format])
    | 将数组以文本或二进制（默认）形式写入文件。 |'
- en: '| [`tolist`](numpy.matrix.tolist.html#numpy.matrix.tolist "numpy.matrix.tolist")()
    | Return the matrix as a (possibly nested) list. |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| [`tolist`](numpy.matrix.tolist.html#numpy.matrix.tolist "numpy.matrix.tolist")()
    | 将矩阵返回为一个（可能嵌套的）列表。 |'
- en: '| [`tostring`](numpy.matrix.tostring.html#numpy.matrix.tostring "numpy.matrix.tostring")([order])
    | A compatibility alias for [`tobytes`](numpy.matrix.tobytes.html#numpy.matrix.tobytes
    "numpy.matrix.tobytes"), with exactly the same behavior. |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| [`tostring`](numpy.matrix.tostring.html#numpy.matrix.tostring "numpy.matrix.tostring")([order])
    | 与[`tobytes`](numpy.matrix.tobytes.html#numpy.matrix.tobytes "numpy.matrix.tobytes")完全相同的行为的兼容别名。
    |'
- en: '| [`trace`](numpy.matrix.trace.html#numpy.matrix.trace "numpy.matrix.trace")([offset, axis1, axis2, dtype, out])
    | Return the sum along diagonals of the array. |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| [`trace`](numpy.matrix.trace.html#numpy.matrix.trace "numpy.matrix.trace")([offset, axis1, axis2, dtype, out])
    | 返回数组对角线上的和。 |'
- en: '| [`transpose`](numpy.matrix.transpose.html#numpy.matrix.transpose "numpy.matrix.transpose")(*axes)
    | Returns a view of the array with axes transposed. |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| [`transpose`](numpy.matrix.transpose.html#numpy.matrix.transpose "numpy.matrix.transpose")(*axes)
    | 返回数组的轴被转置后的视图。 |'
- en: '| [`var`](numpy.matrix.var.html#numpy.matrix.var "numpy.matrix.var")([axis, dtype, out, ddof])
    | Returns the variance of the matrix elements, along the given axis. |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| [`var`](numpy.matrix.var.html#numpy.matrix.var "numpy.matrix.var")([axis, dtype, out, ddof])
    | 返回矩阵元素沿给定轴的方差。 |'
- en: '| [`view`](numpy.matrix.view.html#numpy.matrix.view "numpy.matrix.view")([dtype][, type])
    | New view of array with the same data. |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| [`view`](numpy.matrix.view.html#numpy.matrix.view "numpy.matrix.view")([dtype][, type])
    | 具有相同数据的数组的新视图。 |'
- en: '| **dot** |  |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| **dot** |  |'
