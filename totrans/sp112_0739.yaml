- en: scipy.spatial.distance_matrix
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.spatial.distance_matrix.html#scipy.spatial.distance_matrix](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.spatial.distance_matrix.html#scipy.spatial.distance_matrix)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute the distance matrix.
  prefs: []
  type: TYPE_NORMAL
- en: Returns the matrix of all pair-wise distances.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**(M, K) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Matrix of M vectors in K dimensions.
  prefs: []
  type: TYPE_NORMAL
- en: '**y**(N, K) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Matrix of N vectors in K dimensions.
  prefs: []
  type: TYPE_NORMAL
- en: '**p**float, 1 <= p <= infinity'
  prefs: []
  type: TYPE_NORMAL
- en: Which Minkowski p-norm to use.
  prefs: []
  type: TYPE_NORMAL
- en: '**threshold**positive int'
  prefs: []
  type: TYPE_NORMAL
- en: If `M * N * K` > *threshold*, algorithm uses a Python loop instead of large
    temporary arrays.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**result**(M, N) ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Matrix containing the distance from every vector in *x* to every vector in *y*.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
