- en: numpy.save
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.save.html](https://numpy.org/doc/1.26/reference/generated/numpy.save.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Save an array to a binary file in NumPy `.npy` format.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**file**file, str, or pathlib.Path'
  prefs: []
  type: TYPE_NORMAL
- en: File or filename to which the data is saved. If file is a file-object, then
    the filename is unchanged. If file is a string or Path, a `.npy` extension will
    be appended to the filename if it does not already have one.
  prefs: []
  type: TYPE_NORMAL
- en: '**arr**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Array data to be saved.
  prefs: []
  type: TYPE_NORMAL
- en: '**allow_pickle**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Allow saving object arrays using Python pickles. Reasons for disallowing pickles
    include security (loading pickled data can execute arbitrary code) and portability
    (pickled objects may not be loadable on different Python installations, for example
    if the stored objects require libraries that are not available, and not all pickled
    data is compatible between Python 2 and Python 3). Default: True'
  prefs: []
  type: TYPE_NORMAL
- en: '**fix_imports**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Only useful in forcing objects in object arrays on Python 3 to be pickled in
    a Python 2 compatible way. If *fix_imports* is True, pickle will try to map the
    new Python 3 names to the old module names used in Python 2, so that the pickle
    data stream is readable with Python 2.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`savez`](numpy.savez.html#numpy.savez "numpy.savez")'
  prefs: []
  type: TYPE_NORMAL
- en: Save several arrays into a `.npz` archive
  prefs: []
  type: TYPE_NORMAL
- en: '[`savetxt`](numpy.savetxt.html#numpy.savetxt "numpy.savetxt"), [`load`](numpy.load.html#numpy.load
    "numpy.load")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: For a description of the `.npy` format, see [`numpy.lib.format`](numpy.lib.format.html#module-numpy.lib.format
    "numpy.lib.format").
  prefs: []
  type: TYPE_NORMAL
- en: Any data saved to the file is appended to the end of the file.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
