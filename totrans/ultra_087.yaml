- en: VisionEye View Object Mapping using Ultralytics YOLOv8 🚀
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Ultralytics YOLOv8 进行 VisionEye 视图对象映射 🚀
- en: 原文：[`docs.ultralytics.com/guides/vision-eye/`](https://docs.ultralytics.com/guides/vision-eye/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[`docs.ultralytics.com/guides/vision-eye/`](https://docs.ultralytics.com/guides/vision-eye/)
- en: What is VisionEye Object Mapping?
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是 VisionEye 对象映射？
- en: '[Ultralytics YOLOv8](https://github.com/ultralytics/ultralytics/) VisionEye
    offers the capability for computers to identify and pinpoint objects, simulating
    the observational precision of the human eye. This functionality enables computers
    to discern and focus on specific objects, much like the way the human eye observes
    details from a particular viewpoint.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[Ultralytics YOLOv8](https://github.com/ultralytics/ultralytics/) VisionEye
    提供了计算机识别和定位物体的能力，模拟人眼观察的精确性。该功能使计算机能够像人眼一样分辨并集中注意特定对象的细节。'
- en: Samples
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例
- en: '| VisionEye View | VisionEye View With Object Tracking | VisionEye View With
    Distance Calculation |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| VisionEye 视图 | 带对象跟踪的 VisionEye 视图 | 带距离计算的 VisionEye 视图 |'
- en: '| --- | --- | --- |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| ![VisionEye View Object Mapping using Ultralytics YOLOv8](img/660722b7ba935331fcc1384805fbdbb1.png)
    | ![VisionEye View Object Mapping with Object Tracking using Ultralytics YOLOv8](img/b4363e33522e4f87d96966876ac3fbdc.png)
    | ![VisionEye View with Distance Calculation using Ultralytics YOLOv8](img/effe982fdcf6558076f275d871662324.png)
    |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| ![使用 Ultralytics YOLOv8 进行 VisionEye 视图对象映射](img/660722b7ba935331fcc1384805fbdbb1.png)
    | ![使用 Ultralytics YOLOv8 进行带对象跟踪的 VisionEye 视图对象映射](img/b4363e33522e4f87d96966876ac3fbdc.png)
    | ![使用 Ultralytics YOLOv8 进行带距离计算的 VisionEye 视图](img/effe982fdcf6558076f275d871662324.png)
    |'
- en: '| VisionEye View Object Mapping using Ultralytics YOLOv8 | VisionEye View Object
    Mapping with Object Tracking using Ultralytics YOLOv8 | VisionEye View with Distance
    Calculation using Ultralytics YOLOv8 |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| 使用 Ultralytics YOLOv8 进行 VisionEye 视图对象映射 | 使用 Ultralytics YOLOv8 进行带对象跟踪的
    VisionEye 视图对象映射 | 使用 Ultralytics YOLOv8 进行带距离计算的 VisionEye 视图 |'
- en: VisionEye Object Mapping using YOLOv8
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 YOLOv8 进行 VisionEye 对象映射
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '`visioneye` Arguments'
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`visioneye` 参数'
- en: '| Name | Type | Default | Description |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 | 默认值 | 描述 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| `color` | `tuple` | `(235, 219, 11)` | Line and object centroid color |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| `color` | `tuple` | `(235, 219, 11)` | 线条和对象质心的颜色 |'
- en: '| `pin_color` | `tuple` | `(255, 0, 255)` | VisionEye pinpoint color |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| `pin_color` | `tuple` | `(255, 0, 255)` | VisionEye 的标记颜色 |'
- en: Note
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 注意
- en: For any inquiries, feel free to post your questions in the [Ultralytics Issue
    Section](https://github.com/ultralytics/ultralytics/issues/new/choose) or the
    discussion section mentioned below.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如有任何疑问，请随时在 [Ultralytics 问题部分](https://github.com/ultralytics/ultralytics/issues/new/choose)
    或下面提到的讨论部分发表您的问题。
- en: FAQ
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常见问题解答
- en: How do I start using VisionEye Object Mapping with Ultralytics YOLOv8?
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何开始使用 Ultralytics YOLOv8 进行 VisionEye 对象映射？
- en: 'To start using VisionEye Object Mapping with Ultralytics YOLOv8, first, you''ll
    need to install the Ultralytics YOLO package via pip. Then, you can use the sample
    code provided in the documentation to set up object detection with VisionEye.
    Here''s a simple example to get you started:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用 Ultralytics YOLOv8 进行 VisionEye 对象映射，首先需要通过 pip 安装 Ultralytics YOLO 包。然后，可以使用文档中提供的示例代码设置
    VisionEye 的对象检测。以下是一个简单的示例，帮助您入门：
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: What are the key features of VisionEye's object tracking capability using Ultralytics
    YOLOv8?
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Ultralytics YOLOv8 的 VisionEye 对象跟踪功能的关键特性是什么？
- en: 'VisionEye''s object tracking with Ultralytics YOLOv8 allows users to follow
    the movement of objects within a video frame. Key features include:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: VisionEye 使用 Ultralytics YOLOv8 的对象跟踪功能允许用户在视频帧内跟踪物体的移动。关键功能包括：
- en: '**Real-Time Object Tracking**: Keeps up with objects as they move.'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**实时对象跟踪**：跟踪物体移动的过程。'
- en: '**Object Identification**: Utilizes YOLOv8''s powerful detection algorithms.'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**对象识别**：利用 YOLOv8 强大的检测算法。'
- en: '**Distance Calculation**: Calculates distances between objects and specified
    points.'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**距离计算**：计算对象和指定点之间的距离。'
- en: '**Annotation and Visualization**: Provides visual markers for tracked objects.'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**注释和可视化**：为被跟踪的对象提供视觉标记。'
- en: 'Here''s a brief code snippet demonstrating tracking with VisionEye:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是演示使用 VisionEye 进行跟踪的简短代码片段：
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: For a comprehensive guide, visit the VisionEye Object Mapping with Object Tracking.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 对于全面的指南，请访问 VisionEye 对象映射与对象跟踪。
- en: How can I calculate distances with VisionEye's YOLOv8 model?
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何使用 VisionEye 的 YOLOv8 模型计算距离？
- en: Distance calculation with VisionEye and Ultralytics YOLOv8 involves determining
    the distance of detected objects from a specified point in the frame. It enhances
    spatial analysis capabilities, useful in applications such as autonomous driving
    and surveillance.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: VisionEye和Ultralytics YOLOv8的距离计算涉及确定帧中检测到的对象与指定点的距离。它增强了空间分析能力，在自动驾驶和监控等应用中非常有用。
- en: 'Here''s a simplified example:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个简化的例子：
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: For detailed instructions, refer to the VisionEye with Distance Calculation.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 详细指南，请参阅带有距离计算的VisionEye。
- en: Why should I use Ultralytics YOLOv8 for object mapping and tracking?
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我为什么要使用Ultralytics YOLOv8进行对象映射和跟踪？
- en: 'Ultralytics YOLOv8 is renowned for its speed, accuracy, and ease of integration,
    making it a top choice for object mapping and tracking. Key advantages include:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Ultralytics YOLOv8以其速度、准确性和易集成性而闻名，成为对象映射和跟踪的首选。主要优势包括：
- en: '**State-of-the-art Performance**: Delivers high accuracy in real-time object
    detection.'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**最先进的性能**：在实时物体检测中提供高精度。'
- en: '**Flexibility**: Supports various tasks such as detection, tracking, and distance
    calculation.'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**灵活性**：支持检测、跟踪和距离计算等各种任务。'
- en: '**Community and Support**: Extensive documentation and active GitHub community
    for troubleshooting and enhancements.'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**社区与支持**：提供广泛的文档和活跃的GitHub社区，用于故障排除和增强。'
- en: '**Ease of Use**: Intuitive API simplifies complex tasks, allowing for rapid
    deployment and iteration.'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**易用性**：直观的API简化了复杂任务，可以快速部署和迭代。'
- en: For more information on applications and benefits, check out the [Ultralytics
    YOLOv8 documentation](https://docs.ultralytics.com/models/yolov8/).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 有关应用和优势的更多信息，请访问[Ultralytics YOLOv8文档](https://docs.ultralytics.com/models/yolov8/)。
- en: How can I integrate VisionEye with other machine learning tools like Comet or
    ClearML?
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何将VisionEye与Comet或ClearML等其他机器学习工具集成？
- en: Ultralytics YOLOv8 can integrate seamlessly with various machine learning tools
    like Comet and ClearML, enhancing experiment tracking, collaboration, and reproducibility.
    Follow the detailed guides on [how to use YOLOv5 with Comet](https://www.ultralytics.com/blog/how-to-use-yolov5-with-comet)
    and [integrate YOLOv8 with ClearML](https://docs.ultralytics.com/integrations/clearml/)
    to get started.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Ultralytics YOLOv8可以与Comet和ClearML等多种机器学习工具无缝集成，增强实验跟踪、协作和可复现性。请查阅[如何使用YOLOv5与Comet](https://www.ultralytics.com/blog/how-to-use-yolov5-with-comet)和[将YOLOv8与ClearML集成](https://docs.ultralytics.com/integrations/clearml/)的详细指南以开始。
- en: For further exploration and integration examples, check our [Ultralytics Integrations
    Guide](https://docs.ultralytics.com/integrations/).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 有关进一步探索和集成示例，请查看我们的[Ultralytics集成指南](https://docs.ultralytics.com/integrations/)。
