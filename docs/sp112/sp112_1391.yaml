- en: Building redistributable binaries
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建可再分发的二进制文件
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/building/redistributable_binaries.html](https://docs.scipy.org/doc/scipy-1.12.0/building/redistributable_binaries.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/building/redistributable_binaries.html](https://docs.scipy.org/doc/scipy-1.12.0/building/redistributable_binaries.html)
- en: When `python -m build` or `pip wheel` is used to build a SciPy wheel, that wheel
    will rely on external shared libraries (at least for BLAS/LAPACK and a Fortran
    compiler runtime library, perhaps other libraries). Such wheels therefore will
    only run on the system on which they are built. See [the pypackaging-native content
    under “Building and installing or uploading artifacts”](https://pypackaging-native.github.io/meta-topics/build_steps_conceptual/#building-and-installing-or-uploading-artifacts)
    for more context on that.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用`python -m build`或`pip wheel`构建 SciPy 轮子时，该轮子将依赖外部共享库（至少是 BLAS/LAPACK 和 Fortran
    编译器运行时库，也许还有其他库）。因此，这样的轮子只能在构建它们的系统上运行。有关更多背景信息，请参阅 [“构建和安装或上传工件”下的 pypackaging-native
    内容](https://pypackaging-native.github.io/meta-topics/build_steps_conceptual/#building-and-installing-or-uploading-artifacts)。
- en: A wheel like that is therefore an intermediate stage to producing a binary that
    can be distributed. That final binary may be a wheel - in that case, run `auditwheel`
    (Linux), `delocate` (macOS) or `delvewheel` (Windows) to vendor the required shared
    libraries into the wheel.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这样的轮子是生成可分发的二进制文件的中间阶段。最终的二进制文件可能是一个轮子 - 在这种情况下，请运行`auditwheel`（Linux）、`delocate`（macOS）或`delvewheel`（Windows）来将所需的共享库打包到轮子中。
- en: The final binary may also be in another packaging format (e.g., a `.rpm`, `.deb`
    or `.conda` package). In that case, there are packaging ecosystem-specific tools
    to first install the wheel into a staging area, then making the extension modules
    in that install location relocatable (e.g., by rewriting RPATHs), and then repackaging
    it into the final package format.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 最终的二进制文件也可能是另一种打包格式（例如 `.rpm`、`.deb` 或 `.conda` 包）。在这种情况下，有特定于打包生态系统的工具，首先将轮子安装到临时区域，然后使该安装位置中的扩展模块可重定位（例如通过重写
    RPATHs），最后将其重新打包为最终的包格式。
