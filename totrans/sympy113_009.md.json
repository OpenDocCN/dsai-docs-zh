["```py\n>>> from sympy import init_printing\n>>> init_printing() \n```", "```py\n> >>> from sympy import init_session\n> \n> >>> init_session() \n> ```", "```py\n> Python console for SymPy 0.7.3 (Python 2.7.5-64-bit) (ground types: gmpy)\n> \n> \n> \n> These commands were executed:\n> \n> >>> from __future__ import division\n> \n> >>> from sympy import *\n> \n> >>> x, y, z, t = symbols('x y z t')\n> \n> >>> k, m, n = symbols('k m n', integer=True)\n> \n> >>> f, g, h = symbols('f g h', cls=Function)\n> \n> >>> init_printing() # doctest: +SKIP\n> \n> \n> \n> Documentation can be found at https://www.sympy.org/ \n> ```", "```py\n> >>> \n> ```", "```py\n>>> from sympy import *\n>>> x, y, z = symbols('x y z')\n>>> str(Integral(sqrt(1/x), x))\n'Integral(sqrt(1/x), x)'\n>>> print(Integral(sqrt(1/x), x))\nIntegral(sqrt(1/x), x) \n```", "```py\n>>> srepr(Integral(sqrt(1/x), x))\n\"Integral(Pow(Pow(Symbol('x'), Integer(-1)), Rational(1, 2)), Tuple(Symbol('x')))\" \n```", "```py\n>>> pprint(Integral(sqrt(1/x), x), use_unicode=False)\n /\n |\n |     ___\n |    / 1\n |   /  -  dx\n | \\/   x\n |\n/ \n```", "```py\n>>> pretty(Integral(sqrt(1/x), x), use_unicode=False)\n'  /          \\n |           \\n |     ___   \\n |    / 1    \\n |   /  -  dx\\n | \\\\/   x    \\n |           \\n/            '\n>>> print(pretty(Integral(sqrt(1/x), x), use_unicode=False))\n /\n |\n |     ___\n |    / 1\n |   /  -  dx\n | \\/   x\n |\n/ \n```", "```py\n>>> pprint(Integral(sqrt(1/x), x), use_unicode=True)\n⌠\n⎮     ___\n⎮    ╱ 1\n⎮   ╱  ─  dx\n⎮ ╲╱   x\n⌡ \n```", "```py\n>>> print(latex(Integral(sqrt(1/x), x)))\n\\int \\sqrt{\\frac{1}{x}}\\, dx \n```", "```py\n>>> from sympy.printing.mathml import print_mathml\n>>> print_mathml(Integral(sqrt(1/x), x))\n<apply>\n <int/>\n <bvar>\n <ci>x</ci>\n </bvar>\n <apply>\n <root/>\n <apply>\n <power/>\n <ci>x</ci>\n <cn>-1</cn>\n </apply>\n </apply>\n</apply> \n```", "```py\n>>> from sympy.printing.dot import dotprint\n>>> from sympy.abc import x\n>>> print(dotprint(x+2))\ndigraph{\n\n# Graph style\n\"ordering\"=\"out\"\n\"rankdir\"=\"TD\"\n\n#########\n# Nodes #\n#########\n\n\"Add(Integer(2), Symbol('x'))_()\" [\"color\"=\"black\", \"label\"=\"Add\", \"shape\"=\"ellipse\"];\n\"Integer(2)_(0,)\" [\"color\"=\"black\", \"label\"=\"2\", \"shape\"=\"ellipse\"];\n\"Symbol('x')_(1,)\" [\"color\"=\"black\", \"label\"=\"x\", \"shape\"=\"ellipse\"];\n\n#########\n# Edges #\n#########\n\n\"Add(Integer(2), Symbol('x'))_()\" -> \"Integer(2)_(0,)\";\n\"Add(Integer(2), Symbol('x'))_()\" -> \"Symbol('x')_(1,)\";\n} \n```"]