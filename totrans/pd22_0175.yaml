- en: pandas.Series.iloc
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.Series.iloc.html](https://pandas.pydata.org/docs/reference/api/pandas.Series.iloc.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Purely integer-location based indexing for selection by position.
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 2.2.0: Returning a tuple from a callable is deprecated.'
  prefs: []
  type: TYPE_NORMAL
- en: '`.iloc[]` is primarily integer position based (from `0` to `length-1` of the
    axis), but may also be used with a boolean array.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Allowed inputs are:'
  prefs: []
  type: TYPE_NORMAL
- en: An integer, e.g. `5`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A list or array of integers, e.g. `[4, 3, 0]`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A slice object with ints, e.g. `1:7`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A boolean array.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A `callable` function with one argument (the calling Series or DataFrame) and
    that returns valid output for indexing (one of the above). This is useful in method
    chains, when you don’t have a reference to the calling object, but would like
    to base your selection on some value.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A tuple of row and column indexes. The tuple elements consist of one of the
    above inputs, e.g. `(0, 1)`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.iloc` will raise `IndexError` if a requested indexer is out-of-bounds, except
    *slice* indexers which allow out-of-bounds indexing (this conforms with python/numpy
    *slice* semantics).'
  prefs: []
  type: TYPE_NORMAL
- en: See more at [Selection by Position](../../user_guide/indexing.html#indexing-integer).
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.iat`](pandas.DataFrame.iat.html#pandas.DataFrame.iat "pandas.DataFrame.iat")'
  prefs: []
  type: TYPE_NORMAL
- en: Fast integer location scalar accessor.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.loc`](pandas.DataFrame.loc.html#pandas.DataFrame.loc "pandas.DataFrame.loc")'
  prefs: []
  type: TYPE_NORMAL
- en: Purely label-location based indexer for selection by label.
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.iloc`](#pandas.Series.iloc "pandas.Series.iloc")'
  prefs: []
  type: TYPE_NORMAL
- en: Purely integer-location based indexing for selection by position.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Indexing just the rows**'
  prefs: []
  type: TYPE_NORMAL
- en: With a scalar integer.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: With a list of integers.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: With a slice object.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: With a boolean mask the same length as the index.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: With a callable, useful in method chains. The x passed to the `lambda` is the
    DataFrame being sliced. This selects the rows whose index label even.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '**Indexing both axes**'
  prefs: []
  type: TYPE_NORMAL
- en: You can mix the indexer types for the index and columns. Use `:` to select the
    entire axis.
  prefs: []
  type: TYPE_NORMAL
- en: With scalar integers.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: With lists of integers.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: With slice objects.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: With a boolean array whose length matches the columns.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: With a callable function that expects the Series or DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
