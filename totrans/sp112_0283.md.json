["```py\nscipy.linalg.qr(a, overwrite_a=False, lwork=None, mode='full', pivoting=False, check_finite=True)\n```", "```py\n>>> import numpy as np\n>>> from scipy import linalg\n>>> rng = np.random.default_rng()\n>>> a = rng.standard_normal((9, 6)) \n```", "```py\n>>> q, r = linalg.qr(a)\n>>> np.allclose(a, np.dot(q, r))\nTrue\n>>> q.shape, r.shape\n((9, 9), (9, 6)) \n```", "```py\n>>> r2 = linalg.qr(a, mode='r')\n>>> np.allclose(r, r2)\nTrue \n```", "```py\n>>> q3, r3 = linalg.qr(a, mode='economic')\n>>> q3.shape, r3.shape\n((9, 6), (6, 6)) \n```", "```py\n>>> q4, r4, p4 = linalg.qr(a, pivoting=True)\n>>> d = np.abs(np.diag(r4))\n>>> np.all(d[1:] <= d[:-1])\nTrue\n>>> np.allclose(a[:, p4], np.dot(q4, r4))\nTrue\n>>> q4.shape, r4.shape, p4.shape\n((9, 9), (9, 6), (6,)) \n```", "```py\n>>> q5, r5, p5 = linalg.qr(a, mode='economic', pivoting=True)\n>>> q5.shape, r5.shape, p5.shape\n((9, 6), (6, 6), (6,)) \n```"]