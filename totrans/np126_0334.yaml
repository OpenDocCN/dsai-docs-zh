- en: numpy.ravel
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ravel.html](https://numpy.org/doc/1.26/reference/generated/numpy.ravel.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return a contiguous flattened array.
  prefs: []
  type: TYPE_NORMAL
- en: A 1-D array, containing the elements of the input, is returned. A copy is made
    only if needed.
  prefs: []
  type: TYPE_NORMAL
- en: As of NumPy 1.10, the returned array will have the same type as the input array.
    (for example, a masked array will be returned for a masked array input)
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input array. The elements in *a* are read in the order specified by *order*,
    and packed as a 1-D array.
  prefs: []
  type: TYPE_NORMAL
- en: '**order**{‘C’,’F’, ‘A’, ‘K’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The elements of *a* are read using this index order. ‘C’ means to index the
    elements in row-major, C-style order, with the last axis index changing fastest,
    back to the first axis index changing slowest. ‘F’ means to index the elements
    in column-major, Fortran-style order, with the first index changing fastest, and
    the last index changing slowest. Note that the ‘C’ and ‘F’ options take no account
    of the memory layout of the underlying array, and only refer to the order of axis
    indexing. ‘A’ means to read the elements in Fortran-like index order if *a* is
    Fortran *contiguous* in memory, C-like order otherwise. ‘K’ means to read the
    elements in the order they occur in memory, except for reversing the data when
    strides are negative. By default, ‘C’ index order is used.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**y**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: y is a contiguous 1-D array of the same subtype as *a*, with shape `(a.size,)`.
    Note that matrices are special cased for backward compatibility, if *a* is a matrix,
    then y is a 1-D ndarray.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`ndarray.flat`](numpy.ndarray.flat.html#numpy.ndarray.flat "numpy.ndarray.flat")'
  prefs: []
  type: TYPE_NORMAL
- en: 1-D iterator over an array.
  prefs: []
  type: TYPE_NORMAL
- en: '[`ndarray.flatten`](numpy.ndarray.flatten.html#numpy.ndarray.flatten "numpy.ndarray.flatten")'
  prefs: []
  type: TYPE_NORMAL
- en: 1-D array copy of the elements of an array in row-major order.
  prefs: []
  type: TYPE_NORMAL
- en: '[`ndarray.reshape`](numpy.ndarray.reshape.html#numpy.ndarray.reshape "numpy.ndarray.reshape")'
  prefs: []
  type: TYPE_NORMAL
- en: Change the shape of an array without changing its data.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: In row-major, C-style order, in two dimensions, the row index varies the slowest,
    and the column index the quickest. This can be generalized to multiple dimensions,
    where row-major order implies that the index along the first axis varies slowest,
    and the index along the last quickest. The opposite holds for column-major, Fortran-style
    index ordering.
  prefs: []
  type: TYPE_NORMAL
- en: When a view is desired in as many cases as possible, `arr.reshape(-1)` may be
    preferable. However, `ravel` supports `K` in the optional `order` argument while
    `reshape` does not.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: It is equivalent to `reshape(-1, order=order)`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'When `order` is ‘A’, it will preserve the array’s ‘C’ or ‘F’ ordering:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'When `order` is ‘K’, it will preserve orderings that are neither ‘C’ nor ‘F’,
    but won’t reverse axes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
