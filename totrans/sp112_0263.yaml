- en: scipy.linalg.eigvalsh
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.eigvalsh.html#scipy.linalg.eigvalsh](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.eigvalsh.html#scipy.linalg.eigvalsh)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Solves a standard or generalized eigenvalue problem for a complex Hermitian
    or real symmetric matrix.
  prefs: []
  type: TYPE_NORMAL
- en: 'Find eigenvalues array `w` of array `a`, where `b` is positive definite such
    that for every eigenvalue λ (i-th entry of w) and its eigenvector vi (i-th column
    of v) satisfies:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: In the standard problem, b is assumed to be the identity matrix.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**(M, M) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: A complex Hermitian or real symmetric matrix whose eigenvalues will be computed.
  prefs: []
  type: TYPE_NORMAL
- en: '**b**(M, M) array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A complex Hermitian or real symmetric definite positive matrix in. If omitted,
    identity matrix is assumed.
  prefs: []
  type: TYPE_NORMAL
- en: '**lower**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Whether the pertinent array data is taken from the lower or upper triangle
    of `a` and, if applicable, `b`. (Default: lower)'
  prefs: []
  type: TYPE_NORMAL
- en: '**overwrite_a**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to overwrite data in `a` (may improve performance). Default is False.
  prefs: []
  type: TYPE_NORMAL
- en: '**overwrite_b**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to overwrite data in `b` (may improve performance). Default is False.
  prefs: []
  type: TYPE_NORMAL
- en: '**type**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'For the generalized problems, this keyword specifies the problem type to be
    solved for `w` and `v` (only takes 1, 2, 3 as possible inputs):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: This keyword is ignored for standard problems.
  prefs: []
  type: TYPE_NORMAL
- en: '**check_finite**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to check that the input matrices contain only finite numbers. Disabling
    may give a performance gain, but may result in problems (crashes, non-termination)
    if the inputs do contain infinities or NaNs.
  prefs: []
  type: TYPE_NORMAL
- en: '**subset_by_index**iterable, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If provided, this two-element iterable defines the start and the end indices
    of the desired eigenvalues (ascending order and 0-indexed). To return only the
    second smallest to fifth smallest eigenvalues, `[1, 4]` is used. `[n-3, n-1]`
    returns the largest three. Only available with “evr”, “evx”, and “gvx” drivers.
    The entries are directly converted to integers via `int()`.
  prefs: []
  type: TYPE_NORMAL
- en: '**subset_by_value**iterable, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If provided, this two-element iterable defines the half-open interval `(a, b]`
    that, if any, only the eigenvalues between these values are returned. Only available
    with “evr”, “evx”, and “gvx” drivers. Use `np.inf` for the unconstrained ends.
  prefs: []
  type: TYPE_NORMAL
- en: '**driver**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Defines which LAPACK driver should be used. Valid options are “ev”, “evd”, “evr”,
    “evx” for standard problems and “gv”, “gvd”, “gvx” for generalized (where b is
    not None) problems. See the Notes section of [`scipy.linalg.eigh`](scipy.linalg.eigh.html#scipy.linalg.eigh
    "scipy.linalg.eigh").
  prefs: []
  type: TYPE_NORMAL
- en: '**turbo**bool, optional, deprecated'
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 1.5.0: ‘eigvalsh’ keyword argument *turbo* is deprecated
    in favor of `driver=gvd` option and will be removed in SciPy 1.14.0.'
  prefs: []
  type: TYPE_NORMAL
- en: '**eigvals**tuple (lo, hi), optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 1.5.0: ‘eigvalsh’ keyword argument [`eigvals`](scipy.linalg.eigvals.html#scipy.linalg.eigvals
    "scipy.linalg.eigvals") is deprecated in favor of *subset_by_index* option and
    will be removed in SciPy 1.14.0.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**w**(N,) ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The N (N<=M) selected eigenvalues, in ascending order, each repeated according
    to its multiplicity.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: LinAlgError
  prefs: []
  type: TYPE_NORMAL
- en: If eigenvalue computation does not converge, an error occurred, or b matrix
    is not definite positive. Note that if input matrices are not symmetric or Hermitian,
    no error will be reported but results will be wrong.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`eigh`](scipy.linalg.eigh.html#scipy.linalg.eigh "scipy.linalg.eigh")'
  prefs: []
  type: TYPE_NORMAL
- en: eigenvalues and right eigenvectors for symmetric/Hermitian arrays
  prefs: []
  type: TYPE_NORMAL
- en: '[`eigvals`](scipy.linalg.eigvals.html#scipy.linalg.eigvals "scipy.linalg.eigvals")'
  prefs: []
  type: TYPE_NORMAL
- en: eigenvalues of general arrays
  prefs: []
  type: TYPE_NORMAL
- en: '[`eigvals_banded`](scipy.linalg.eigvals_banded.html#scipy.linalg.eigvals_banded
    "scipy.linalg.eigvals_banded")'
  prefs: []
  type: TYPE_NORMAL
- en: eigenvalues for symmetric/Hermitian band matrices
  prefs: []
  type: TYPE_NORMAL
- en: '[`eigvalsh_tridiagonal`](scipy.linalg.eigvalsh_tridiagonal.html#scipy.linalg.eigvalsh_tridiagonal
    "scipy.linalg.eigvalsh_tridiagonal")'
  prefs: []
  type: TYPE_NORMAL
- en: eigenvalues of symmetric/Hermitian tridiagonal matrices
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This function does not check the input array for being Hermitian/symmetric in
    order to allow for representing arrays with only their upper/lower triangular
    parts.
  prefs: []
  type: TYPE_NORMAL
- en: This function serves as a one-liner shorthand for [`scipy.linalg.eigh`](scipy.linalg.eigh.html#scipy.linalg.eigh
    "scipy.linalg.eigh") with the option `eigvals_only=True` to get the eigenvalues
    and not the eigenvectors. Here it is kept as a legacy convenience. It might be
    beneficial to use the main function to have full control and to be a bit more
    pythonic.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: For more examples see [`scipy.linalg.eigh`](scipy.linalg.eigh.html#scipy.linalg.eigh
    "scipy.linalg.eigh").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
