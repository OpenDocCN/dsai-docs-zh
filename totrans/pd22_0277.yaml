- en: pandas.DataFrame.ewm
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.ewm.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.ewm.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Provide exponentially weighted (EW) calculations.
  prefs: []
  type: TYPE_NORMAL
- en: Exactly one of `com`, `span`, `halflife`, or `alpha` must be provided if `times`
    is not provided. If `times` is provided, `halflife` and one of `com`, `span` or
    `alpha` may be provided.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**com**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Specify decay in terms of center of mass
  prefs: []
  type: TYPE_NORMAL
- en: \(\alpha = 1 / (1 + com)\), for \(com \geq 0\).
  prefs: []
  type: TYPE_NORMAL
- en: '**span**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Specify decay in terms of span
  prefs: []
  type: TYPE_NORMAL
- en: \(\alpha = 2 / (span + 1)\), for \(span \geq 1\).
  prefs: []
  type: TYPE_NORMAL
- en: '**halflife**float, str, timedelta, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Specify decay in terms of half-life
  prefs: []
  type: TYPE_NORMAL
- en: \(\alpha = 1 - \exp\left(-\ln(2) / halflife\right)\), for \(halflife > 0\).
  prefs: []
  type: TYPE_NORMAL
- en: If `times` is specified, a timedelta convertible unit over which an observation
    decays to half its value. Only applicable to `mean()`, and halflife value will
    not apply to the other functions.
  prefs: []
  type: TYPE_NORMAL
- en: '**alpha**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Specify smoothing factor \(\alpha\) directly
  prefs: []
  type: TYPE_NORMAL
- en: \(0 < \alpha \leq 1\).
  prefs: []
  type: TYPE_NORMAL
- en: '**min_periods**int, default 0'
  prefs: []
  type: TYPE_NORMAL
- en: Minimum number of observations in window required to have a value; otherwise,
    result is `np.nan`.
  prefs: []
  type: TYPE_NORMAL
- en: '**adjust**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Divide by decaying adjustment factor in beginning periods to account for imbalance
    in relative weightings (viewing EWMA as a moving average).
  prefs: []
  type: TYPE_NORMAL
- en: 'When `adjust=True` (default), the EW function is calculated using weights \(w_i
    = (1 - \alpha)^i\). For example, the EW moving average of the series [\(x_0, x_1,
    ..., x_t\)] would be:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: \[y_t = \frac{x_t + (1 - \alpha)x_{t-1} + (1 - \alpha)^2 x_{t-2} + ... + (1
    - \alpha)^t x_0}{1 + (1 - \alpha) + (1 - \alpha)^2 + ... + (1 - \alpha)^t}\]
  prefs: []
  type: TYPE_NORMAL
- en: 'When `adjust=False`, the exponentially weighted function is calculated recursively:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: \[\begin{split}\begin{split} y_0 &= x_0\\ y_t &= (1 - \alpha) y_{t-1} + \alpha
    x_t, \end{split}\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: '**ignore_na**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Ignore missing values when calculating weights.
  prefs: []
  type: TYPE_NORMAL
- en: When `ignore_na=False` (default), weights are based on absolute positions. For
    example, the weights of \(x_0\) and \(x_2\) used in calculating the final weighted
    average of [\(x_0\), None, \(x_2\)] are \((1-\alpha)^2\) and \(1\) if `adjust=True`,
    and \((1-\alpha)^2\) and \(\alpha\) if `adjust=False`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When `ignore_na=True`, weights are based on relative positions. For example,
    the weights of \(x_0\) and \(x_2\) used in calculating the final weighted average
    of [\(x_0\), None, \(x_2\)] are \(1-\alpha\) and \(1\) if `adjust=True`, and \(1-\alpha\)
    and \(\alpha\) if `adjust=False`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**axis**{0, 1}, default 0'
  prefs: []
  type: TYPE_NORMAL
- en: If `0` or `'index'`, calculate across the rows.
  prefs: []
  type: TYPE_NORMAL
- en: If `1` or `'columns'`, calculate across the columns.
  prefs: []
  type: TYPE_NORMAL
- en: For Series this parameter is unused and defaults to 0.
  prefs: []
  type: TYPE_NORMAL
- en: '**times**np.ndarray, Series, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Only applicable to `mean()`.
  prefs: []
  type: TYPE_NORMAL
- en: Times corresponding to the observations. Must be monotonically increasing and
    `datetime64[ns]` dtype.
  prefs: []
  type: TYPE_NORMAL
- en: If 1-D array like, a sequence with the same shape as the observations.
  prefs: []
  type: TYPE_NORMAL
- en: '**method**str {‘single’, ‘table’}, default ‘single’'
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.4.0.
  prefs: []
  type: TYPE_NORMAL
- en: Execute the rolling operation per single column or row (`'single'`) or over
    the entire object (`'table'`).
  prefs: []
  type: TYPE_NORMAL
- en: This argument is only implemented when specifying `engine='numba'` in the method
    call.
  prefs: []
  type: TYPE_NORMAL
- en: Only applicable to `mean()`
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: pandas.api.typing.ExponentialMovingWindow
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`rolling`](pandas.DataFrame.rolling.html#pandas.DataFrame.rolling "pandas.DataFrame.rolling")'
  prefs: []
  type: TYPE_NORMAL
- en: Provides rolling window calculations.
  prefs: []
  type: TYPE_NORMAL
- en: '[`expanding`](pandas.DataFrame.expanding.html#pandas.DataFrame.expanding "pandas.DataFrame.expanding")'
  prefs: []
  type: TYPE_NORMAL
- en: Provides expanding transformations.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: See [Windowing Operations](../../user_guide/window.html#window-exponentially-weighted)
    for further usage details and examples.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**adjust**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**ignore_na**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '**times**'
  prefs: []
  type: TYPE_NORMAL
- en: Exponentially weighted mean with weights calculated with a timedelta `halflife`
    relative to `times`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
