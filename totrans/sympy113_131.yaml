- en: General examples of usage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/vector/examples.html](https://docs.sympy.org/latest/modules/vector/examples.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This section details the solution of two basic problems in vector math/calculus
    using the [`sympy.vector`](index.html#module-sympy.vector "sympy.vector") package.
  prefs: []
  type: TYPE_NORMAL
- en: Quadrilateral problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Problem
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*OABC is any quadrilateral in 3D space. P is the midpoint of OA, Q is the midpoint
    of AB, R is the midpoint of BC and S is the midpoint of OC. Prove that PQ is parallel
    to SR*'
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The solution to this problem demonstrates the usage of `Point`, and basic operations
    on `Vector`.
  prefs: []
  type: TYPE_NORMAL
- en: Define a coordinate system
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Define point O to be Sys’ origin. We can do this without loss of generality
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Define point A with respect to O
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Similarly define points B and C
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: P is the midpoint of OA. Lets locate it with respect to O (you could also define
    it with respect to A).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Similarly define points Q, R and S as per the problem definitions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Now compute the vectors in the directions specified by PQ and SR.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Compute cross product
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Since the cross product is a zero vector, the two vectors have to be parallel,
    thus proving that PQ || SR.
  prefs: []
  type: TYPE_NORMAL
- en: Third product rule for Del operator
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: See
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[WikiDel]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Del](https://en.wikipedia.org/wiki/Del)'
  prefs: []
  type: TYPE_NORMAL
- en: The Problem
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Prove the third rule - \(\nabla \cdot (f \vec v) = f (\nabla \cdot \vec v) +
    \vec v \cdot (\nabla f)\)
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Start with a coordinate system
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: The scalar field \(f\) and the measure numbers of the vector field \(\vec v\)
    are all functions of the coordinate variables of the coordinate system in general.
    Hence, define SymPy functions that way.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '`v1`, `v2` and `v3` are the \(X\), \(Y\) and \(Z\) components of the vector
    field respectively.'
  prefs: []
  type: TYPE_NORMAL
- en: Define the vector field as `vfield` and the scalar field as `sfield`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Construct the expression for the LHS of the equation using `Del()`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Similarly, the RHS would be defined.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Now, to prove the product rule, we would just need to equate the expanded and
    simplified versions of the lhs and the rhs, so that the SymPy expressions match.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Thus, the general form of the third product rule mentioned above can be proven
    using [`sympy.vector`](index.html#module-sympy.vector "sympy.vector").
  prefs: []
  type: TYPE_NORMAL
