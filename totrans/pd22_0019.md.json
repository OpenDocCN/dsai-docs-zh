["```py\nIn [1]: import pandas as pd\n\nIn [2]: import numpy as np \n```", "```py\n> sorted_df = df.sort_values(\"col1\") \n> ```", "```py\n> df = df.sort_values(\"col1\") \n> ```", "```py\ndf.replace(5, inplace=True) \n```", "```py\ndata df;\n    input x y;\n datalines;\n 1 2\n 3 4\n 5 6\n ;\nrun; \n```", "```py\nIn [1]: df = pd.DataFrame({\"x\": [1, 3, 5], \"y\": [2, 4, 6]})\n\nIn [2]: df\nOut[2]: \n x  y\n0  1  2\n1  3  4\n2  5  6 \n```", "```py\nproc import datafile='tips.csv' dbms=csv out=tips replace;\n    getnames=yes;\nrun; \n```", "```py\nIn [3]: url = (\n ...:    \"https://raw.githubusercontent.com/pandas-dev/\"\n ...:    \"pandas/main/pandas/tests/io/data/csv/tips.csv\"\n ...: )\n ...: \n\nIn [4]: tips = pd.read_csv(url)\n\nIn [5]: tips\nOut[5]: \n total_bill   tip     sex smoker   day    time  size\n0         16.99  1.01  Female     No   Sun  Dinner     2\n1         10.34  1.66    Male     No   Sun  Dinner     3\n2         21.01  3.50    Male     No   Sun  Dinner     3\n3         23.68  3.31    Male     No   Sun  Dinner     2\n4         24.59  3.61  Female     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       29.03  5.92    Male     No   Sat  Dinner     3\n240       27.18  2.00  Female    Yes   Sat  Dinner     2\n241       22.67  2.00    Male    Yes   Sat  Dinner     2\n242       17.82  1.75    Male     No   Sat  Dinner     2\n243       18.78  3.00  Female     No  Thur  Dinner     2\n\n[244 rows x 7 columns] \n```", "```py\ntips = pd.read_csv(\"tips.csv\", sep=\"\\t\", header=None)\n\n# alternatively, read_table is an alias to read_csv with tab delimiter\ntips = pd.read_table(\"tips.csv\", header=None) \n```", "```py\nIn [1]: tips.head(5)\nOut[1]: \n total_bill   tip     sex smoker  day    time  size\n0       16.99  1.01  Female     No  Sun  Dinner     2\n1       10.34  1.66    Male     No  Sun  Dinner     3\n2       21.01  3.50    Male     No  Sun  Dinner     3\n3       23.68  3.31    Male     No  Sun  Dinner     2\n4       24.59  3.61  Female     No  Sun  Dinner     4 \n```", "```py\nproc print data=df(obs=5);\nrun; \n```", "```py\nproc export data=tips outfile='tips2.csv' dbms=csv;\nrun; \n```", "```py\ntips.to_csv(\"tips2.csv\") \n```", "```py\ndata tips;\n    set tips;\n    total_bill = total_bill - 2;\n    new_bill = total_bill / 2;\nrun; \n```", "```py\nIn [1]: tips[\"total_bill\"] = tips[\"total_bill\"] - 2\n\nIn [2]: tips[\"new_bill\"] = tips[\"total_bill\"] / 2\n\nIn [3]: tips\nOut[3]: \n total_bill   tip     sex smoker   day    time  size  new_bill\n0         14.99  1.01  Female     No   Sun  Dinner     2     7.495\n1          8.34  1.66    Male     No   Sun  Dinner     3     4.170\n2         19.01  3.50    Male     No   Sun  Dinner     3     9.505\n3         21.68  3.31    Male     No   Sun  Dinner     2    10.840\n4         22.59  3.61  Female     No   Sun  Dinner     4    11.295\n..          ...   ...     ...    ...   ...     ...   ...       ...\n239       27.03  5.92    Male     No   Sat  Dinner     3    13.515\n240       25.18  2.00  Female    Yes   Sat  Dinner     2    12.590\n241       20.67  2.00    Male    Yes   Sat  Dinner     2    10.335\n242       15.82  1.75    Male     No   Sat  Dinner     2     7.910\n243       16.78  3.00  Female     No  Thur  Dinner     2     8.390\n\n[244 rows x 8 columns]\n\nIn [4]: tips = tips.drop(\"new_bill\", axis=1) \n```", "```py\ndata tips;\n    set tips;\n    if total_bill > 10;\nrun;\n\ndata tips;\n    set tips;\n    where total_bill > 10;\n    /* equivalent in this case - where happens before the\n DATA step begins and can also be used in PROC statements */\nrun; \n```", "```py\nIn [1]: tips[tips[\"total_bill\"] > 10]\nOut[1]: \n total_bill   tip     sex smoker   day    time  size\n0         14.99  1.01  Female     No   Sun  Dinner     2\n2         19.01  3.50    Male     No   Sun  Dinner     3\n3         21.68  3.31    Male     No   Sun  Dinner     2\n4         22.59  3.61  Female     No   Sun  Dinner     4\n5         23.29  4.71    Male     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       27.03  5.92    Male     No   Sat  Dinner     3\n240       25.18  2.00  Female    Yes   Sat  Dinner     2\n241       20.67  2.00    Male    Yes   Sat  Dinner     2\n242       15.82  1.75    Male     No   Sat  Dinner     2\n243       16.78  3.00  Female     No  Thur  Dinner     2\n\n[204 rows x 7 columns] \n```", "```py\nIn [2]: is_dinner = tips[\"time\"] == \"Dinner\"\n\nIn [3]: is_dinner\nOut[3]: \n0      True\n1      True\n2      True\n3      True\n4      True\n ... \n239    True\n240    True\n241    True\n242    True\n243    True\nName: time, Length: 244, dtype: bool\n\nIn [4]: is_dinner.value_counts()\nOut[4]: \ntime\nTrue     176\nFalse     68\nName: count, dtype: int64\n\nIn [5]: tips[is_dinner]\nOut[5]: \n total_bill   tip     sex smoker   day    time  size\n0         14.99  1.01  Female     No   Sun  Dinner     2\n1          8.34  1.66    Male     No   Sun  Dinner     3\n2         19.01  3.50    Male     No   Sun  Dinner     3\n3         21.68  3.31    Male     No   Sun  Dinner     2\n4         22.59  3.61  Female     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       27.03  5.92    Male     No   Sat  Dinner     3\n240       25.18  2.00  Female    Yes   Sat  Dinner     2\n241       20.67  2.00    Male    Yes   Sat  Dinner     2\n242       15.82  1.75    Male     No   Sat  Dinner     2\n243       16.78  3.00  Female     No  Thur  Dinner     2\n\n[176 rows x 7 columns] \n```", "```py\ndata tips;\n    set tips;\n    format bucket $4.;\n\n    if total_bill < 10 then bucket = 'low';\n    else bucket = 'high';\nrun; \n```", "```py\nIn [1]: tips[\"bucket\"] = np.where(tips[\"total_bill\"] < 10, \"low\", \"high\")\n\nIn [2]: tips\nOut[2]: \n total_bill   tip     sex smoker   day    time  size bucket\n0         14.99  1.01  Female     No   Sun  Dinner     2   high\n1          8.34  1.66    Male     No   Sun  Dinner     3    low\n2         19.01  3.50    Male     No   Sun  Dinner     3   high\n3         21.68  3.31    Male     No   Sun  Dinner     2   high\n4         22.59  3.61  Female     No   Sun  Dinner     4   high\n..          ...   ...     ...    ...   ...     ...   ...    ...\n239       27.03  5.92    Male     No   Sat  Dinner     3   high\n240       25.18  2.00  Female    Yes   Sat  Dinner     2   high\n241       20.67  2.00    Male    Yes   Sat  Dinner     2   high\n242       15.82  1.75    Male     No   Sat  Dinner     2   high\n243       16.78  3.00  Female     No  Thur  Dinner     2   high\n\n[244 rows x 8 columns] \n```", "```py\ndata tips;\n    set tips;\n    format date1 date2 date1_plusmonth mmddyy10.;\n    date1 = mdy(1, 15, 2013);\n    date2 = mdy(2, 15, 2015);\n    date1_year = year(date1);\n    date2_month = month(date2);\n * shift date to beginning of next interval;\n    date1_next = intnx('MONTH', date1, 1);\n * count intervals between dates;\n    months_between = intck('MONTH', date1, date2);\nrun; \n```", "```py\nIn [1]: tips[\"date1\"] = pd.Timestamp(\"2013-01-15\")\n\nIn [2]: tips[\"date2\"] = pd.Timestamp(\"2015-02-15\")\n\nIn [3]: tips[\"date1_year\"] = tips[\"date1\"].dt.year\n\nIn [4]: tips[\"date2_month\"] = tips[\"date2\"].dt.month\n\nIn [5]: tips[\"date1_next\"] = tips[\"date1\"] + pd.offsets.MonthBegin()\n\nIn [6]: tips[\"months_between\"] = tips[\"date2\"].dt.to_period(\"M\") - tips[\n ...:    \"date1\"\n ...: ].dt.to_period(\"M\")\n ...: \n\nIn [7]: tips[\n ...:    [\"date1\", \"date2\", \"date1_year\", \"date2_month\", \"date1_next\", \"months_between\"]\n ...: ]\n ...: \nOut[7]: \n date1      date2  date1_year  date2_month date1_next    months_between\n0   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n1   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n2   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n3   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n4   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n..         ...        ...         ...          ...        ...               ...\n239 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n240 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n241 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n242 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n243 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n\n[244 rows x 6 columns] \n```", "```py\ndata tips;\n    set tips;\n    keep sex total_bill tip;\nrun;\n\ndata tips;\n    set tips;\n    drop sex;\nrun;\n\ndata tips;\n    set tips;\n    rename total_bill=total_bill_2;\nrun; \n```", "```py\nIn [1]: tips[[\"sex\", \"total_bill\", \"tip\"]]\nOut[1]: \n sex  total_bill   tip\n0    Female       14.99  1.01\n1      Male        8.34  1.66\n2      Male       19.01  3.50\n3      Male       21.68  3.31\n4    Female       22.59  3.61\n..      ...         ...   ...\n239    Male       27.03  5.92\n240  Female       25.18  2.00\n241    Male       20.67  2.00\n242    Male       15.82  1.75\n243  Female       16.78  3.00\n\n[244 rows x 3 columns] \n```", "```py\nIn [2]: tips.drop(\"sex\", axis=1)\nOut[2]: \n total_bill   tip smoker   day    time  size\n0         14.99  1.01     No   Sun  Dinner     2\n1          8.34  1.66     No   Sun  Dinner     3\n2         19.01  3.50     No   Sun  Dinner     3\n3         21.68  3.31     No   Sun  Dinner     2\n4         22.59  3.61     No   Sun  Dinner     4\n..          ...   ...    ...   ...     ...   ...\n239       27.03  5.92     No   Sat  Dinner     3\n240       25.18  2.00    Yes   Sat  Dinner     2\n241       20.67  2.00    Yes   Sat  Dinner     2\n242       15.82  1.75     No   Sat  Dinner     2\n243       16.78  3.00     No  Thur  Dinner     2\n\n[244 rows x 6 columns] \n```", "```py\nIn [3]: tips.rename(columns={\"total_bill\": \"total_bill_2\"})\nOut[3]: \n total_bill_2   tip     sex smoker   day    time  size\n0           14.99  1.01  Female     No   Sun  Dinner     2\n1            8.34  1.66    Male     No   Sun  Dinner     3\n2           19.01  3.50    Male     No   Sun  Dinner     3\n3           21.68  3.31    Male     No   Sun  Dinner     2\n4           22.59  3.61  Female     No   Sun  Dinner     4\n..            ...   ...     ...    ...   ...     ...   ...\n239         27.03  5.92    Male     No   Sat  Dinner     3\n240         25.18  2.00  Female    Yes   Sat  Dinner     2\n241         20.67  2.00    Male    Yes   Sat  Dinner     2\n242         15.82  1.75    Male     No   Sat  Dinner     2\n243         16.78  3.00  Female     No  Thur  Dinner     2\n\n[244 rows x 7 columns] \n```", "```py\nproc sort data=tips;\n    by sex total_bill;\nrun; \n```", "```py\nIn [1]: tips = tips.sort_values([\"sex\", \"total_bill\"])\n\nIn [2]: tips\nOut[2]: \n total_bill    tip     sex smoker   day    time  size\n67         1.07   1.00  Female    Yes   Sat  Dinner     1\n92         3.75   1.00  Female    Yes   Fri  Dinner     2\n111        5.25   1.00  Female     No   Sat  Dinner     1\n145        6.35   1.50  Female     No  Thur   Lunch     2\n135        6.51   1.25  Female     No  Thur   Lunch     2\n..          ...    ...     ...    ...   ...     ...   ...\n182       43.35   3.50    Male    Yes   Sun  Dinner     3\n156       46.17   5.00    Male     No   Sun  Dinner     6\n59        46.27   6.73    Male     No   Sat  Dinner     4\n212       46.33   9.00    Male     No   Sat  Dinner     4\n170       48.81  10.00    Male    Yes   Sat  Dinner     3\n\n[244 rows x 7 columns] \n```", "```py\ndata _null_;\nset tips;\nput(LENGTHN(time));\nput(LENGTHC(time));\nrun; \n```", "```py\nIn [1]: tips[\"time\"].str.len()\nOut[1]: \n67     6\n92     6\n111    6\n145    5\n135    5\n ..\n182    6\n156    6\n59     6\n212    6\n170    6\nName: time, Length: 244, dtype: int64\n\nIn [2]: tips[\"time\"].str.rstrip().str.len()\nOut[2]: \n67     6\n92     6\n111    6\n145    5\n135    5\n ..\n182    6\n156    6\n59     6\n212    6\n170    6\nName: time, Length: 244, dtype: int64 \n```", "```py\ndata _null_;\nset tips;\nput(FINDW(sex,'ale'));\nrun; \n```", "```py\nIn [1]: tips[\"sex\"].str.find(\"ale\")\nOut[1]: \n67     3\n92     3\n111    3\n145    3\n135    3\n ..\n182    1\n156    1\n59     1\n212    1\n170    1\nName: sex, Length: 244, dtype: int64 \n```", "```py\ndata _null_;\nset tips;\nput(substr(sex,1,1));\nrun; \n```", "```py\nIn [1]: tips[\"sex\"].str[0:1]\nOut[1]: \n67     F\n92     F\n111    F\n145    F\n135    F\n ..\n182    M\n156    M\n59     M\n212    M\n170    M\nName: sex, Length: 244, dtype: object \n```", "```py\ndata firstlast;\ninput String $60.;\nFirst_Name = scan(string, 1);\nLast_Name = scan(string, -1);\ndatalines2;\nJohn Smith;\nJane Cook;\n;;;\nrun; \n```", "```py\nIn [1]: firstlast = pd.DataFrame({\"String\": [\"John Smith\", \"Jane Cook\"]})\n\nIn [2]: firstlast[\"First_Name\"] = firstlast[\"String\"].str.split(\" \", expand=True)[0]\n\nIn [3]: firstlast[\"Last_Name\"] = firstlast[\"String\"].str.rsplit(\" \", expand=True)[1]\n\nIn [4]: firstlast\nOut[4]: \n String First_Name Last_Name\n0  John Smith       John     Smith\n1   Jane Cook       Jane      Cook \n```", "```py\ndata firstlast;\ninput String $60.;\nstring_up = UPCASE(string);\nstring_low = LOWCASE(string);\nstring_prop = PROPCASE(string);\ndatalines2;\nJohn Smith;\nJane Cook;\n;;;\nrun; \n```", "```py\nIn [1]: firstlast = pd.DataFrame({\"string\": [\"John Smith\", \"Jane Cook\"]})\n\nIn [2]: firstlast[\"upper\"] = firstlast[\"string\"].str.upper()\n\nIn [3]: firstlast[\"lower\"] = firstlast[\"string\"].str.lower()\n\nIn [4]: firstlast[\"title\"] = firstlast[\"string\"].str.title()\n\nIn [5]: firstlast\nOut[5]: \n string       upper       lower       title\n0  John Smith  JOHN SMITH  john smith  John Smith\n1   Jane Cook   JANE COOK   jane cook   Jane Cook \n```", "```py\nIn [1]: df1 = pd.DataFrame({\"key\": [\"A\", \"B\", \"C\", \"D\"], \"value\": np.random.randn(4)})\n\nIn [2]: df1\nOut[2]: \n key     value\n0   A  0.469112\n1   B -0.282863\n2   C -1.509059\n3   D -1.135632\n\nIn [3]: df2 = pd.DataFrame({\"key\": [\"B\", \"D\", \"D\", \"E\"], \"value\": np.random.randn(4)})\n\nIn [4]: df2\nOut[4]: \n key     value\n0   B  1.212112\n1   D -0.173215\n2   D  0.119209\n3   E -1.044236 \n```", "```py\nproc sort data=df1;\n    by key;\nrun;\n\nproc sort data=df2;\n    by key;\nrun;\n\ndata left_join inner_join right_join outer_join;\n    merge df1(in=a) df2(in=b);\n\n    if a and b then output inner_join;\n    if a then output left_join;\n    if b then output right_join;\n    if a or b then output outer_join;\nrun; \n```", "```py\nIn [1]: inner_join = df1.merge(df2, on=[\"key\"], how=\"inner\")\n\nIn [2]: inner_join\nOut[2]: \n key   value_x   value_y\n0   B -0.282863  1.212112\n1   D -1.135632 -0.173215\n2   D -1.135632  0.119209\n\nIn [3]: left_join = df1.merge(df2, on=[\"key\"], how=\"left\")\n\nIn [4]: left_join\nOut[4]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059       NaN\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209\n\nIn [5]: right_join = df1.merge(df2, on=[\"key\"], how=\"right\")\n\nIn [6]: right_join\nOut[6]: \n key   value_x   value_y\n0   B -0.282863  1.212112\n1   D -1.135632 -0.173215\n2   D -1.135632  0.119209\n3   E       NaN -1.044236\n\nIn [7]: outer_join = df1.merge(df2, on=[\"key\"], how=\"outer\")\n\nIn [8]: outer_join\nOut[8]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059       NaN\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209\n5   E       NaN -1.044236 \n```", "```py\nIn [1]: outer_join\nOut[1]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059       NaN\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209\n5   E       NaN -1.044236\n\nIn [2]: outer_join[\"value_x\"] + outer_join[\"value_y\"]\nOut[2]: \n0         NaN\n1    0.929249\n2         NaN\n3   -1.308847\n4   -1.016424\n5         NaN\ndtype: float64\n\nIn [3]: outer_join[\"value_x\"].sum()\nOut[3]: -3.5940742896293765 \n```", "```py\ndata outer_join_nulls;\n    set outer_join;\n    if value_x = .;\nrun;\n\ndata outer_join_no_nulls;\n    set outer_join;\n    if value_x ^= .;\nrun; \n```", "```py\nIn [1]: outer_join[outer_join[\"value_x\"].isna()]\nOut[1]: \n key  value_x   value_y\n5   E      NaN -1.044236\n\nIn [2]: outer_join[outer_join[\"value_x\"].notna()]\nOut[2]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059       NaN\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209 \n```", "```py\nIn [3]: outer_join.dropna()\nOut[3]: \n key   value_x   value_y\n1   B -0.282863  1.212112\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209 \n```", "```py\nIn [4]: outer_join.ffill()\nOut[4]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059  1.212112\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209\n5   E -1.135632 -1.044236 \n```", "```py\nIn [5]: outer_join[\"value_x\"].fillna(outer_join[\"value_x\"].mean())\nOut[5]: \n0    0.469112\n1   -0.282863\n2   -1.509059\n3   -1.135632\n4   -1.135632\n5   -0.718815\nName: value_x, dtype: float64 \n```", "```py\nproc summary data=tips nway;\n    class sex smoker;\n    var total_bill tip;\n    output out=tips_summed sum=;\nrun; \n```", "```py\nIn [1]: tips_summed = tips.groupby([\"sex\", \"smoker\"])[[\"total_bill\", \"tip\"]].sum()\n\nIn [2]: tips_summed\nOut[2]: \n total_bill     tip\nsex    smoker \nFemale No          869.68  149.77\n Yes         527.27   96.74\nMale   No         1725.75  302.00\n Yes        1217.07  183.07 \n```", "```py\nproc summary data=tips missing nway;\n    class smoker;\n    var total_bill;\n    output out=smoker_means mean(total_bill)=group_bill;\nrun;\n\nproc sort data=tips;\n    by smoker;\nrun;\n\ndata tips;\n    merge tips(in=a) smoker_means(in=b);\n    by smoker;\n    adj_total_bill = total_bill - group_bill;\n    if a and b;\nrun; \n```", "```py\nIn [1]: gb = tips.groupby(\"smoker\")[\"total_bill\"]\n\nIn [2]: tips[\"adj_total_bill\"] = tips[\"total_bill\"] - gb.transform(\"mean\")\n\nIn [3]: tips\nOut[3]: \n total_bill    tip     sex smoker   day    time  size  adj_total_bill\n67         1.07   1.00  Female    Yes   Sat  Dinner     1      -17.686344\n92         3.75   1.00  Female    Yes   Fri  Dinner     2      -15.006344\n111        5.25   1.00  Female     No   Sat  Dinner     1      -11.938278\n145        6.35   1.50  Female     No  Thur   Lunch     2      -10.838278\n135        6.51   1.25  Female     No  Thur   Lunch     2      -10.678278\n..          ...    ...     ...    ...   ...     ...   ...             ...\n182       43.35   3.50    Male    Yes   Sun  Dinner     3       24.593656\n156       46.17   5.00    Male     No   Sun  Dinner     6       28.981722\n59        46.27   6.73    Male     No   Sat  Dinner     4       29.081722\n212       46.33   9.00    Male     No   Sat  Dinner     4       29.141722\n170       48.81  10.00    Male    Yes   Sat  Dinner     3       30.053656\n\n[244 rows x 8 columns] \n```", "```py\nproc sort data=tips;\n   by sex smoker;\nrun;\n\ndata tips_first;\n    set tips;\n    by sex smoker;\n    if FIRST.sex or FIRST.smoker then output;\nrun; \n```", "```py\nIn [4]: tips.groupby([\"sex\", \"smoker\"]).first()\nOut[4]: \n total_bill   tip   day    time  size  adj_total_bill\nsex    smoker \nFemale No            5.25  1.00   Sat  Dinner     1      -11.938278\n Yes           1.07  1.00   Sat  Dinner     1      -17.686344\nMale   No            5.51  2.00  Thur   Lunch     2      -11.678278\n Yes           5.25  5.15   Sun  Dinner     2      -13.506344 \n```", "```py\nlibname xportout xport 'transport-file.xpt';\ndata xportout.tips;\n    set tips(rename=(total_bill=tbill));\n * xport variable names limited to 6 characters;\nrun; \n```", "```py\ndf = pd.read_sas(\"transport-file.xpt\")\ndf = pd.read_sas(\"binary-file.sas7bdat\") \n```", "```py\ndf = pd.read_sas(\"transport-file.xpt\", format=\"xport\")\ndf = pd.read_sas(\"binary-file.sas7bdat\", format=\"sas7bdat\") \n```", "```py\n# version 0.17, 10M rows\n\nIn [8]: %time df = pd.read_sas('big.xpt')\nWall time: 14.6 s\n\nIn [9]: %time df = pd.read_csv('big.csv')\nWall time: 4.86 s \n```", "```py\n> sorted_df = df.sort_values(\"col1\") \n> ```", "```py\n> df = df.sort_values(\"col1\") \n> ```", "```py\ndf.replace(5, inplace=True) \n```", "```py\n> sorted_df = df.sort_values(\"col1\") \n> ```", "```py\n> df = df.sort_values(\"col1\") \n> ```", "```py\ndf.replace(5, inplace=True) \n```", "```py\ndata df;\n    input x y;\n datalines;\n 1 2\n 3 4\n 5 6\n ;\nrun; \n```", "```py\nIn [1]: df = pd.DataFrame({\"x\": [1, 3, 5], \"y\": [2, 4, 6]})\n\nIn [2]: df\nOut[2]: \n x  y\n0  1  2\n1  3  4\n2  5  6 \n```", "```py\nproc import datafile='tips.csv' dbms=csv out=tips replace;\n    getnames=yes;\nrun; \n```", "```py\nIn [3]: url = (\n ...:    \"https://raw.githubusercontent.com/pandas-dev/\"\n ...:    \"pandas/main/pandas/tests/io/data/csv/tips.csv\"\n ...: )\n ...: \n\nIn [4]: tips = pd.read_csv(url)\n\nIn [5]: tips\nOut[5]: \n total_bill   tip     sex smoker   day    time  size\n0         16.99  1.01  Female     No   Sun  Dinner     2\n1         10.34  1.66    Male     No   Sun  Dinner     3\n2         21.01  3.50    Male     No   Sun  Dinner     3\n3         23.68  3.31    Male     No   Sun  Dinner     2\n4         24.59  3.61  Female     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       29.03  5.92    Male     No   Sat  Dinner     3\n240       27.18  2.00  Female    Yes   Sat  Dinner     2\n241       22.67  2.00    Male    Yes   Sat  Dinner     2\n242       17.82  1.75    Male     No   Sat  Dinner     2\n243       18.78  3.00  Female     No  Thur  Dinner     2\n\n[244 rows x 7 columns] \n```", "```py\ntips = pd.read_csv(\"tips.csv\", sep=\"\\t\", header=None)\n\n# alternatively, read_table is an alias to read_csv with tab delimiter\ntips = pd.read_table(\"tips.csv\", header=None) \n```", "```py\nIn [1]: tips.head(5)\nOut[1]: \n total_bill   tip     sex smoker  day    time  size\n0       16.99  1.01  Female     No  Sun  Dinner     2\n1       10.34  1.66    Male     No  Sun  Dinner     3\n2       21.01  3.50    Male     No  Sun  Dinner     3\n3       23.68  3.31    Male     No  Sun  Dinner     2\n4       24.59  3.61  Female     No  Sun  Dinner     4 \n```", "```py\nproc print data=df(obs=5);\nrun; \n```", "```py\nproc export data=tips outfile='tips2.csv' dbms=csv;\nrun; \n```", "```py\ntips.to_csv(\"tips2.csv\") \n```", "```py\ndata df;\n    input x y;\n datalines;\n 1 2\n 3 4\n 5 6\n ;\nrun; \n```", "```py\nIn [1]: df = pd.DataFrame({\"x\": [1, 3, 5], \"y\": [2, 4, 6]})\n\nIn [2]: df\nOut[2]: \n x  y\n0  1  2\n1  3  4\n2  5  6 \n```", "```py\nproc import datafile='tips.csv' dbms=csv out=tips replace;\n    getnames=yes;\nrun; \n```", "```py\nIn [3]: url = (\n ...:    \"https://raw.githubusercontent.com/pandas-dev/\"\n ...:    \"pandas/main/pandas/tests/io/data/csv/tips.csv\"\n ...: )\n ...: \n\nIn [4]: tips = pd.read_csv(url)\n\nIn [5]: tips\nOut[5]: \n total_bill   tip     sex smoker   day    time  size\n0         16.99  1.01  Female     No   Sun  Dinner     2\n1         10.34  1.66    Male     No   Sun  Dinner     3\n2         21.01  3.50    Male     No   Sun  Dinner     3\n3         23.68  3.31    Male     No   Sun  Dinner     2\n4         24.59  3.61  Female     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       29.03  5.92    Male     No   Sat  Dinner     3\n240       27.18  2.00  Female    Yes   Sat  Dinner     2\n241       22.67  2.00    Male    Yes   Sat  Dinner     2\n242       17.82  1.75    Male     No   Sat  Dinner     2\n243       18.78  3.00  Female     No  Thur  Dinner     2\n\n[244 rows x 7 columns] \n```", "```py\ntips = pd.read_csv(\"tips.csv\", sep=\"\\t\", header=None)\n\n# alternatively, read_table is an alias to read_csv with tab delimiter\ntips = pd.read_table(\"tips.csv\", header=None) \n```", "```py\nIn [1]: tips.head(5)\nOut[1]: \n total_bill   tip     sex smoker  day    time  size\n0       16.99  1.01  Female     No  Sun  Dinner     2\n1       10.34  1.66    Male     No  Sun  Dinner     3\n2       21.01  3.50    Male     No  Sun  Dinner     3\n3       23.68  3.31    Male     No  Sun  Dinner     2\n4       24.59  3.61  Female     No  Sun  Dinner     4 \n```", "```py\nproc print data=df(obs=5);\nrun; \n```", "```py\nproc export data=tips outfile='tips2.csv' dbms=csv;\nrun; \n```", "```py\ntips.to_csv(\"tips2.csv\") \n```", "```py\ndata tips;\n    set tips;\n    total_bill = total_bill - 2;\n    new_bill = total_bill / 2;\nrun; \n```", "```py\nIn [1]: tips[\"total_bill\"] = tips[\"total_bill\"] - 2\n\nIn [2]: tips[\"new_bill\"] = tips[\"total_bill\"] / 2\n\nIn [3]: tips\nOut[3]: \n total_bill   tip     sex smoker   day    time  size  new_bill\n0         14.99  1.01  Female     No   Sun  Dinner     2     7.495\n1          8.34  1.66    Male     No   Sun  Dinner     3     4.170\n2         19.01  3.50    Male     No   Sun  Dinner     3     9.505\n3         21.68  3.31    Male     No   Sun  Dinner     2    10.840\n4         22.59  3.61  Female     No   Sun  Dinner     4    11.295\n..          ...   ...     ...    ...   ...     ...   ...       ...\n239       27.03  5.92    Male     No   Sat  Dinner     3    13.515\n240       25.18  2.00  Female    Yes   Sat  Dinner     2    12.590\n241       20.67  2.00    Male    Yes   Sat  Dinner     2    10.335\n242       15.82  1.75    Male     No   Sat  Dinner     2     7.910\n243       16.78  3.00  Female     No  Thur  Dinner     2     8.390\n\n[244 rows x 8 columns]\n\nIn [4]: tips = tips.drop(\"new_bill\", axis=1) \n```", "```py\ndata tips;\n    set tips;\n    if total_bill > 10;\nrun;\n\ndata tips;\n    set tips;\n    where total_bill > 10;\n    /* equivalent in this case - where happens before the\n DATA step begins and can also be used in PROC statements */\nrun; \n```", "```py\nIn [1]: tips[tips[\"total_bill\"] > 10]\nOut[1]: \n total_bill   tip     sex smoker   day    time  size\n0         14.99  1.01  Female     No   Sun  Dinner     2\n2         19.01  3.50    Male     No   Sun  Dinner     3\n3         21.68  3.31    Male     No   Sun  Dinner     2\n4         22.59  3.61  Female     No   Sun  Dinner     4\n5         23.29  4.71    Male     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       27.03  5.92    Male     No   Sat  Dinner     3\n240       25.18  2.00  Female    Yes   Sat  Dinner     2\n241       20.67  2.00    Male    Yes   Sat  Dinner     2\n242       15.82  1.75    Male     No   Sat  Dinner     2\n243       16.78  3.00  Female     No  Thur  Dinner     2\n\n[204 rows x 7 columns] \n```", "```py\nIn [2]: is_dinner = tips[\"time\"] == \"Dinner\"\n\nIn [3]: is_dinner\nOut[3]: \n0      True\n1      True\n2      True\n3      True\n4      True\n ... \n239    True\n240    True\n241    True\n242    True\n243    True\nName: time, Length: 244, dtype: bool\n\nIn [4]: is_dinner.value_counts()\nOut[4]: \ntime\nTrue     176\nFalse     68\nName: count, dtype: int64\n\nIn [5]: tips[is_dinner]\nOut[5]: \n total_bill   tip     sex smoker   day    time  size\n0         14.99  1.01  Female     No   Sun  Dinner     2\n1          8.34  1.66    Male     No   Sun  Dinner     3\n2         19.01  3.50    Male     No   Sun  Dinner     3\n3         21.68  3.31    Male     No   Sun  Dinner     2\n4         22.59  3.61  Female     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       27.03  5.92    Male     No   Sat  Dinner     3\n240       25.18  2.00  Female    Yes   Sat  Dinner     2\n241       20.67  2.00    Male    Yes   Sat  Dinner     2\n242       15.82  1.75    Male     No   Sat  Dinner     2\n243       16.78  3.00  Female     No  Thur  Dinner     2\n\n[176 rows x 7 columns] \n```", "```py\ndata tips;\n    set tips;\n    format bucket $4.;\n\n    if total_bill < 10 then bucket = 'low';\n    else bucket = 'high';\nrun; \n```", "```py\nIn [1]: tips[\"bucket\"] = np.where(tips[\"total_bill\"] < 10, \"low\", \"high\")\n\nIn [2]: tips\nOut[2]: \n total_bill   tip     sex smoker   day    time  size bucket\n0         14.99  1.01  Female     No   Sun  Dinner     2   high\n1          8.34  1.66    Male     No   Sun  Dinner     3    low\n2         19.01  3.50    Male     No   Sun  Dinner     3   high\n3         21.68  3.31    Male     No   Sun  Dinner     2   high\n4         22.59  3.61  Female     No   Sun  Dinner     4   high\n..          ...   ...     ...    ...   ...     ...   ...    ...\n239       27.03  5.92    Male     No   Sat  Dinner     3   high\n240       25.18  2.00  Female    Yes   Sat  Dinner     2   high\n241       20.67  2.00    Male    Yes   Sat  Dinner     2   high\n242       15.82  1.75    Male     No   Sat  Dinner     2   high\n243       16.78  3.00  Female     No  Thur  Dinner     2   high\n\n[244 rows x 8 columns] \n```", "```py\ndata tips;\n    set tips;\n    format date1 date2 date1_plusmonth mmddyy10.;\n    date1 = mdy(1, 15, 2013);\n    date2 = mdy(2, 15, 2015);\n    date1_year = year(date1);\n    date2_month = month(date2);\n * shift date to beginning of next interval;\n    date1_next = intnx('MONTH', date1, 1);\n * count intervals between dates;\n    months_between = intck('MONTH', date1, date2);\nrun; \n```", "```py\nIn [1]: tips[\"date1\"] = pd.Timestamp(\"2013-01-15\")\n\nIn [2]: tips[\"date2\"] = pd.Timestamp(\"2015-02-15\")\n\nIn [3]: tips[\"date1_year\"] = tips[\"date1\"].dt.year\n\nIn [4]: tips[\"date2_month\"] = tips[\"date2\"].dt.month\n\nIn [5]: tips[\"date1_next\"] = tips[\"date1\"] + pd.offsets.MonthBegin()\n\nIn [6]: tips[\"months_between\"] = tips[\"date2\"].dt.to_period(\"M\") - tips[\n ...:    \"date1\"\n ...: ].dt.to_period(\"M\")\n ...: \n\nIn [7]: tips[\n ...:    [\"date1\", \"date2\", \"date1_year\", \"date2_month\", \"date1_next\", \"months_between\"]\n ...: ]\n ...: \nOut[7]: \n date1      date2  date1_year  date2_month date1_next    months_between\n0   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n1   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n2   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n3   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n4   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n..         ...        ...         ...          ...        ...               ...\n239 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n240 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n241 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n242 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n243 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n\n[244 rows x 6 columns] \n```", "```py\ndata tips;\n    set tips;\n    keep sex total_bill tip;\nrun;\n\ndata tips;\n    set tips;\n    drop sex;\nrun;\n\ndata tips;\n    set tips;\n    rename total_bill=total_bill_2;\nrun; \n```", "```py\nIn [1]: tips[[\"sex\", \"total_bill\", \"tip\"]]\nOut[1]: \n sex  total_bill   tip\n0    Female       14.99  1.01\n1      Male        8.34  1.66\n2      Male       19.01  3.50\n3      Male       21.68  3.31\n4    Female       22.59  3.61\n..      ...         ...   ...\n239    Male       27.03  5.92\n240  Female       25.18  2.00\n241    Male       20.67  2.00\n242    Male       15.82  1.75\n243  Female       16.78  3.00\n\n[244 rows x 3 columns] \n```", "```py\nIn [2]: tips.drop(\"sex\", axis=1)\nOut[2]: \n total_bill   tip smoker   day    time  size\n0         14.99  1.01     No   Sun  Dinner     2\n1          8.34  1.66     No   Sun  Dinner     3\n2         19.01  3.50     No   Sun  Dinner     3\n3         21.68  3.31     No   Sun  Dinner     2\n4         22.59  3.61     No   Sun  Dinner     4\n..          ...   ...    ...   ...     ...   ...\n239       27.03  5.92     No   Sat  Dinner     3\n240       25.18  2.00    Yes   Sat  Dinner     2\n241       20.67  2.00    Yes   Sat  Dinner     2\n242       15.82  1.75     No   Sat  Dinner     2\n243       16.78  3.00     No  Thur  Dinner     2\n\n[244 rows x 6 columns] \n```", "```py\nIn [3]: tips.rename(columns={\"total_bill\": \"total_bill_2\"})\nOut[3]: \n total_bill_2   tip     sex smoker   day    time  size\n0           14.99  1.01  Female     No   Sun  Dinner     2\n1            8.34  1.66    Male     No   Sun  Dinner     3\n2           19.01  3.50    Male     No   Sun  Dinner     3\n3           21.68  3.31    Male     No   Sun  Dinner     2\n4           22.59  3.61  Female     No   Sun  Dinner     4\n..            ...   ...     ...    ...   ...     ...   ...\n239         27.03  5.92    Male     No   Sat  Dinner     3\n240         25.18  2.00  Female    Yes   Sat  Dinner     2\n241         20.67  2.00    Male    Yes   Sat  Dinner     2\n242         15.82  1.75    Male     No   Sat  Dinner     2\n243         16.78  3.00  Female     No  Thur  Dinner     2\n\n[244 rows x 7 columns] \n```", "```py\nproc sort data=tips;\n    by sex total_bill;\nrun; \n```", "```py\nIn [1]: tips = tips.sort_values([\"sex\", \"total_bill\"])\n\nIn [2]: tips\nOut[2]: \n total_bill    tip     sex smoker   day    time  size\n67         1.07   1.00  Female    Yes   Sat  Dinner     1\n92         3.75   1.00  Female    Yes   Fri  Dinner     2\n111        5.25   1.00  Female     No   Sat  Dinner     1\n145        6.35   1.50  Female     No  Thur   Lunch     2\n135        6.51   1.25  Female     No  Thur   Lunch     2\n..          ...    ...     ...    ...   ...     ...   ...\n182       43.35   3.50    Male    Yes   Sun  Dinner     3\n156       46.17   5.00    Male     No   Sun  Dinner     6\n59        46.27   6.73    Male     No   Sat  Dinner     4\n212       46.33   9.00    Male     No   Sat  Dinner     4\n170       48.81  10.00    Male    Yes   Sat  Dinner     3\n\n[244 rows x 7 columns] \n```", "```py\ndata tips;\n    set tips;\n    total_bill = total_bill - 2;\n    new_bill = total_bill / 2;\nrun; \n```", "```py\nIn [1]: tips[\"total_bill\"] = tips[\"total_bill\"] - 2\n\nIn [2]: tips[\"new_bill\"] = tips[\"total_bill\"] / 2\n\nIn [3]: tips\nOut[3]: \n total_bill   tip     sex smoker   day    time  size  new_bill\n0         14.99  1.01  Female     No   Sun  Dinner     2     7.495\n1          8.34  1.66    Male     No   Sun  Dinner     3     4.170\n2         19.01  3.50    Male     No   Sun  Dinner     3     9.505\n3         21.68  3.31    Male     No   Sun  Dinner     2    10.840\n4         22.59  3.61  Female     No   Sun  Dinner     4    11.295\n..          ...   ...     ...    ...   ...     ...   ...       ...\n239       27.03  5.92    Male     No   Sat  Dinner     3    13.515\n240       25.18  2.00  Female    Yes   Sat  Dinner     2    12.590\n241       20.67  2.00    Male    Yes   Sat  Dinner     2    10.335\n242       15.82  1.75    Male     No   Sat  Dinner     2     7.910\n243       16.78  3.00  Female     No  Thur  Dinner     2     8.390\n\n[244 rows x 8 columns]\n\nIn [4]: tips = tips.drop(\"new_bill\", axis=1) \n```", "```py\ndata tips;\n    set tips;\n    if total_bill > 10;\nrun;\n\ndata tips;\n    set tips;\n    where total_bill > 10;\n    /* equivalent in this case - where happens before the\n DATA step begins and can also be used in PROC statements */\nrun; \n```", "```py\nIn [1]: tips[tips[\"total_bill\"] > 10]\nOut[1]: \n total_bill   tip     sex smoker   day    time  size\n0         14.99  1.01  Female     No   Sun  Dinner     2\n2         19.01  3.50    Male     No   Sun  Dinner     3\n3         21.68  3.31    Male     No   Sun  Dinner     2\n4         22.59  3.61  Female     No   Sun  Dinner     4\n5         23.29  4.71    Male     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       27.03  5.92    Male     No   Sat  Dinner     3\n240       25.18  2.00  Female    Yes   Sat  Dinner     2\n241       20.67  2.00    Male    Yes   Sat  Dinner     2\n242       15.82  1.75    Male     No   Sat  Dinner     2\n243       16.78  3.00  Female     No  Thur  Dinner     2\n\n[204 rows x 7 columns] \n```", "```py\nIn [2]: is_dinner = tips[\"time\"] == \"Dinner\"\n\nIn [3]: is_dinner\nOut[3]: \n0      True\n1      True\n2      True\n3      True\n4      True\n ... \n239    True\n240    True\n241    True\n242    True\n243    True\nName: time, Length: 244, dtype: bool\n\nIn [4]: is_dinner.value_counts()\nOut[4]: \ntime\nTrue     176\nFalse     68\nName: count, dtype: int64\n\nIn [5]: tips[is_dinner]\nOut[5]: \n total_bill   tip     sex smoker   day    time  size\n0         14.99  1.01  Female     No   Sun  Dinner     2\n1          8.34  1.66    Male     No   Sun  Dinner     3\n2         19.01  3.50    Male     No   Sun  Dinner     3\n3         21.68  3.31    Male     No   Sun  Dinner     2\n4         22.59  3.61  Female     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       27.03  5.92    Male     No   Sat  Dinner     3\n240       25.18  2.00  Female    Yes   Sat  Dinner     2\n241       20.67  2.00    Male    Yes   Sat  Dinner     2\n242       15.82  1.75    Male     No   Sat  Dinner     2\n243       16.78  3.00  Female     No  Thur  Dinner     2\n\n[176 rows x 7 columns] \n```", "```py\ndata tips;\n    set tips;\n    format bucket $4.;\n\n    if total_bill < 10 then bucket = 'low';\n    else bucket = 'high';\nrun; \n```", "```py\nIn [1]: tips[\"bucket\"] = np.where(tips[\"total_bill\"] < 10, \"low\", \"high\")\n\nIn [2]: tips\nOut[2]: \n total_bill   tip     sex smoker   day    time  size bucket\n0         14.99  1.01  Female     No   Sun  Dinner     2   high\n1          8.34  1.66    Male     No   Sun  Dinner     3    low\n2         19.01  3.50    Male     No   Sun  Dinner     3   high\n3         21.68  3.31    Male     No   Sun  Dinner     2   high\n4         22.59  3.61  Female     No   Sun  Dinner     4   high\n..          ...   ...     ...    ...   ...     ...   ...    ...\n239       27.03  5.92    Male     No   Sat  Dinner     3   high\n240       25.18  2.00  Female    Yes   Sat  Dinner     2   high\n241       20.67  2.00    Male    Yes   Sat  Dinner     2   high\n242       15.82  1.75    Male     No   Sat  Dinner     2   high\n243       16.78  3.00  Female     No  Thur  Dinner     2   high\n\n[244 rows x 8 columns] \n```", "```py\ndata tips;\n    set tips;\n    format date1 date2 date1_plusmonth mmddyy10.;\n    date1 = mdy(1, 15, 2013);\n    date2 = mdy(2, 15, 2015);\n    date1_year = year(date1);\n    date2_month = month(date2);\n * shift date to beginning of next interval;\n    date1_next = intnx('MONTH', date1, 1);\n * count intervals between dates;\n    months_between = intck('MONTH', date1, date2);\nrun; \n```", "```py\nIn [1]: tips[\"date1\"] = pd.Timestamp(\"2013-01-15\")\n\nIn [2]: tips[\"date2\"] = pd.Timestamp(\"2015-02-15\")\n\nIn [3]: tips[\"date1_year\"] = tips[\"date1\"].dt.year\n\nIn [4]: tips[\"date2_month\"] = tips[\"date2\"].dt.month\n\nIn [5]: tips[\"date1_next\"] = tips[\"date1\"] + pd.offsets.MonthBegin()\n\nIn [6]: tips[\"months_between\"] = tips[\"date2\"].dt.to_period(\"M\") - tips[\n ...:    \"date1\"\n ...: ].dt.to_period(\"M\")\n ...: \n\nIn [7]: tips[\n ...:    [\"date1\", \"date2\", \"date1_year\", \"date2_month\", \"date1_next\", \"months_between\"]\n ...: ]\n ...: \nOut[7]: \n date1      date2  date1_year  date2_month date1_next    months_between\n0   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n1   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n2   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n3   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n4   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n..         ...        ...         ...          ...        ...               ...\n239 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n240 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n241 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n242 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n243 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n\n[244 rows x 6 columns] \n```", "```py\ndata tips;\n    set tips;\n    keep sex total_bill tip;\nrun;\n\ndata tips;\n    set tips;\n    drop sex;\nrun;\n\ndata tips;\n    set tips;\n    rename total_bill=total_bill_2;\nrun; \n```", "```py\nIn [1]: tips[[\"sex\", \"total_bill\", \"tip\"]]\nOut[1]: \n sex  total_bill   tip\n0    Female       14.99  1.01\n1      Male        8.34  1.66\n2      Male       19.01  3.50\n3      Male       21.68  3.31\n4    Female       22.59  3.61\n..      ...         ...   ...\n239    Male       27.03  5.92\n240  Female       25.18  2.00\n241    Male       20.67  2.00\n242    Male       15.82  1.75\n243  Female       16.78  3.00\n\n[244 rows x 3 columns] \n```", "```py\nIn [2]: tips.drop(\"sex\", axis=1)\nOut[2]: \n total_bill   tip smoker   day    time  size\n0         14.99  1.01     No   Sun  Dinner     2\n1          8.34  1.66     No   Sun  Dinner     3\n2         19.01  3.50     No   Sun  Dinner     3\n3         21.68  3.31     No   Sun  Dinner     2\n4         22.59  3.61     No   Sun  Dinner     4\n..          ...   ...    ...   ...     ...   ...\n239       27.03  5.92     No   Sat  Dinner     3\n240       25.18  2.00    Yes   Sat  Dinner     2\n241       20.67  2.00    Yes   Sat  Dinner     2\n242       15.82  1.75     No   Sat  Dinner     2\n243       16.78  3.00     No  Thur  Dinner     2\n\n[244 rows x 6 columns] \n```", "```py\nIn [3]: tips.rename(columns={\"total_bill\": \"total_bill_2\"})\nOut[3]: \n total_bill_2   tip     sex smoker   day    time  size\n0           14.99  1.01  Female     No   Sun  Dinner     2\n1            8.34  1.66    Male     No   Sun  Dinner     3\n2           19.01  3.50    Male     No   Sun  Dinner     3\n3           21.68  3.31    Male     No   Sun  Dinner     2\n4           22.59  3.61  Female     No   Sun  Dinner     4\n..            ...   ...     ...    ...   ...     ...   ...\n239         27.03  5.92    Male     No   Sat  Dinner     3\n240         25.18  2.00  Female    Yes   Sat  Dinner     2\n241         20.67  2.00    Male    Yes   Sat  Dinner     2\n242         15.82  1.75    Male     No   Sat  Dinner     2\n243         16.78  3.00  Female     No  Thur  Dinner     2\n\n[244 rows x 7 columns] \n```", "```py\nIn [1]: tips[[\"sex\", \"total_bill\", \"tip\"]]\nOut[1]: \n sex  total_bill   tip\n0    Female       14.99  1.01\n1      Male        8.34  1.66\n2      Male       19.01  3.50\n3      Male       21.68  3.31\n4    Female       22.59  3.61\n..      ...         ...   ...\n239    Male       27.03  5.92\n240  Female       25.18  2.00\n241    Male       20.67  2.00\n242    Male       15.82  1.75\n243  Female       16.78  3.00\n\n[244 rows x 3 columns] \n```", "```py\nIn [2]: tips.drop(\"sex\", axis=1)\nOut[2]: \n total_bill   tip smoker   day    time  size\n0         14.99  1.01     No   Sun  Dinner     2\n1          8.34  1.66     No   Sun  Dinner     3\n2         19.01  3.50     No   Sun  Dinner     3\n3         21.68  3.31     No   Sun  Dinner     2\n4         22.59  3.61     No   Sun  Dinner     4\n..          ...   ...    ...   ...     ...   ...\n239       27.03  5.92     No   Sat  Dinner     3\n240       25.18  2.00    Yes   Sat  Dinner     2\n241       20.67  2.00    Yes   Sat  Dinner     2\n242       15.82  1.75     No   Sat  Dinner     2\n243       16.78  3.00     No  Thur  Dinner     2\n\n[244 rows x 6 columns] \n```", "```py\nIn [3]: tips.rename(columns={\"total_bill\": \"total_bill_2\"})\nOut[3]: \n total_bill_2   tip     sex smoker   day    time  size\n0           14.99  1.01  Female     No   Sun  Dinner     2\n1            8.34  1.66    Male     No   Sun  Dinner     3\n2           19.01  3.50    Male     No   Sun  Dinner     3\n3           21.68  3.31    Male     No   Sun  Dinner     2\n4           22.59  3.61  Female     No   Sun  Dinner     4\n..            ...   ...     ...    ...   ...     ...   ...\n239         27.03  5.92    Male     No   Sat  Dinner     3\n240         25.18  2.00  Female    Yes   Sat  Dinner     2\n241         20.67  2.00    Male    Yes   Sat  Dinner     2\n242         15.82  1.75    Male     No   Sat  Dinner     2\n243         16.78  3.00  Female     No  Thur  Dinner     2\n\n[244 rows x 7 columns] \n```", "```py\nproc sort data=tips;\n    by sex total_bill;\nrun; \n```", "```py\nIn [1]: tips = tips.sort_values([\"sex\", \"total_bill\"])\n\nIn [2]: tips\nOut[2]: \n total_bill    tip     sex smoker   day    time  size\n67         1.07   1.00  Female    Yes   Sat  Dinner     1\n92         3.75   1.00  Female    Yes   Fri  Dinner     2\n111        5.25   1.00  Female     No   Sat  Dinner     1\n145        6.35   1.50  Female     No  Thur   Lunch     2\n135        6.51   1.25  Female     No  Thur   Lunch     2\n..          ...    ...     ...    ...   ...     ...   ...\n182       43.35   3.50    Male    Yes   Sun  Dinner     3\n156       46.17   5.00    Male     No   Sun  Dinner     6\n59        46.27   6.73    Male     No   Sat  Dinner     4\n212       46.33   9.00    Male     No   Sat  Dinner     4\n170       48.81  10.00    Male    Yes   Sat  Dinner     3\n\n[244 rows x 7 columns] \n```", "```py\ndata _null_;\nset tips;\nput(LENGTHN(time));\nput(LENGTHC(time));\nrun; \n```", "```py\nIn [1]: tips[\"time\"].str.len()\nOut[1]: \n67     6\n92     6\n111    6\n145    5\n135    5\n ..\n182    6\n156    6\n59     6\n212    6\n170    6\nName: time, Length: 244, dtype: int64\n\nIn [2]: tips[\"time\"].str.rstrip().str.len()\nOut[2]: \n67     6\n92     6\n111    6\n145    5\n135    5\n ..\n182    6\n156    6\n59     6\n212    6\n170    6\nName: time, Length: 244, dtype: int64 \n```", "```py\ndata _null_;\nset tips;\nput(FINDW(sex,'ale'));\nrun; \n```", "```py\nIn [1]: tips[\"sex\"].str.find(\"ale\")\nOut[1]: \n67     3\n92     3\n111    3\n145    3\n135    3\n ..\n182    1\n156    1\n59     1\n212    1\n170    1\nName: sex, Length: 244, dtype: int64 \n```", "```py\ndata _null_;\nset tips;\nput(substr(sex,1,1));\nrun; \n```", "```py\nIn [1]: tips[\"sex\"].str[0:1]\nOut[1]: \n67     F\n92     F\n111    F\n145    F\n135    F\n ..\n182    M\n156    M\n59     M\n212    M\n170    M\nName: sex, Length: 244, dtype: object \n```", "```py\ndata firstlast;\ninput String $60.;\nFirst_Name = scan(string, 1);\nLast_Name = scan(string, -1);\ndatalines2;\nJohn Smith;\nJane Cook;\n;;;\nrun; \n```", "```py\nIn [1]: firstlast = pd.DataFrame({\"String\": [\"John Smith\", \"Jane Cook\"]})\n\nIn [2]: firstlast[\"First_Name\"] = firstlast[\"String\"].str.split(\" \", expand=True)[0]\n\nIn [3]: firstlast[\"Last_Name\"] = firstlast[\"String\"].str.rsplit(\" \", expand=True)[1]\n\nIn [4]: firstlast\nOut[4]: \n String First_Name Last_Name\n0  John Smith       John     Smith\n1   Jane Cook       Jane      Cook \n```", "```py\ndata firstlast;\ninput String $60.;\nstring_up = UPCASE(string);\nstring_low = LOWCASE(string);\nstring_prop = PROPCASE(string);\ndatalines2;\nJohn Smith;\nJane Cook;\n;;;\nrun; \n```", "```py\nIn [1]: firstlast = pd.DataFrame({\"string\": [\"John Smith\", \"Jane Cook\"]})\n\nIn [2]: firstlast[\"upper\"] = firstlast[\"string\"].str.upper()\n\nIn [3]: firstlast[\"lower\"] = firstlast[\"string\"].str.lower()\n\nIn [4]: firstlast[\"title\"] = firstlast[\"string\"].str.title()\n\nIn [5]: firstlast\nOut[5]: \n string       upper       lower       title\n0  John Smith  JOHN SMITH  john smith  John Smith\n1   Jane Cook   JANE COOK   jane cook   Jane Cook \n```", "```py\ndata _null_;\nset tips;\nput(LENGTHN(time));\nput(LENGTHC(time));\nrun; \n```", "```py\nIn [1]: tips[\"time\"].str.len()\nOut[1]: \n67     6\n92     6\n111    6\n145    5\n135    5\n ..\n182    6\n156    6\n59     6\n212    6\n170    6\nName: time, Length: 244, dtype: int64\n\nIn [2]: tips[\"time\"].str.rstrip().str.len()\nOut[2]: \n67     6\n92     6\n111    6\n145    5\n135    5\n ..\n182    6\n156    6\n59     6\n212    6\n170    6\nName: time, Length: 244, dtype: int64 \n```", "```py\ndata _null_;\nset tips;\nput(FINDW(sex,'ale'));\nrun; \n```", "```py\nIn [1]: tips[\"sex\"].str.find(\"ale\")\nOut[1]: \n67     3\n92     3\n111    3\n145    3\n135    3\n ..\n182    1\n156    1\n59     1\n212    1\n170    1\nName: sex, Length: 244, dtype: int64 \n```", "```py\ndata _null_;\nset tips;\nput(substr(sex,1,1));\nrun; \n```", "```py\nIn [1]: tips[\"sex\"].str[0:1]\nOut[1]: \n67     F\n92     F\n111    F\n145    F\n135    F\n ..\n182    M\n156    M\n59     M\n212    M\n170    M\nName: sex, Length: 244, dtype: object \n```", "```py\ndata firstlast;\ninput String $60.;\nFirst_Name = scan(string, 1);\nLast_Name = scan(string, -1);\ndatalines2;\nJohn Smith;\nJane Cook;\n;;;\nrun; \n```", "```py\nIn [1]: firstlast = pd.DataFrame({\"String\": [\"John Smith\", \"Jane Cook\"]})\n\nIn [2]: firstlast[\"First_Name\"] = firstlast[\"String\"].str.split(\" \", expand=True)[0]\n\nIn [3]: firstlast[\"Last_Name\"] = firstlast[\"String\"].str.rsplit(\" \", expand=True)[1]\n\nIn [4]: firstlast\nOut[4]: \n String First_Name Last_Name\n0  John Smith       John     Smith\n1   Jane Cook       Jane      Cook \n```", "```py\ndata firstlast;\ninput String $60.;\nstring_up = UPCASE(string);\nstring_low = LOWCASE(string);\nstring_prop = PROPCASE(string);\ndatalines2;\nJohn Smith;\nJane Cook;\n;;;\nrun; \n```", "```py\nIn [1]: firstlast = pd.DataFrame({\"string\": [\"John Smith\", \"Jane Cook\"]})\n\nIn [2]: firstlast[\"upper\"] = firstlast[\"string\"].str.upper()\n\nIn [3]: firstlast[\"lower\"] = firstlast[\"string\"].str.lower()\n\nIn [4]: firstlast[\"title\"] = firstlast[\"string\"].str.title()\n\nIn [5]: firstlast\nOut[5]: \n string       upper       lower       title\n0  John Smith  JOHN SMITH  john smith  John Smith\n1   Jane Cook   JANE COOK   jane cook   Jane Cook \n```", "```py\nIn [1]: df1 = pd.DataFrame({\"key\": [\"A\", \"B\", \"C\", \"D\"], \"value\": np.random.randn(4)})\n\nIn [2]: df1\nOut[2]: \n key     value\n0   A  0.469112\n1   B -0.282863\n2   C -1.509059\n3   D -1.135632\n\nIn [3]: df2 = pd.DataFrame({\"key\": [\"B\", \"D\", \"D\", \"E\"], \"value\": np.random.randn(4)})\n\nIn [4]: df2\nOut[4]: \n key     value\n0   B  1.212112\n1   D -0.173215\n2   D  0.119209\n3   E -1.044236 \n```", "```py\nproc sort data=df1;\n    by key;\nrun;\n\nproc sort data=df2;\n    by key;\nrun;\n\ndata left_join inner_join right_join outer_join;\n    merge df1(in=a) df2(in=b);\n\n    if a and b then output inner_join;\n    if a then output left_join;\n    if b then output right_join;\n    if a or b then output outer_join;\nrun; \n```", "```py\nIn [1]: inner_join = df1.merge(df2, on=[\"key\"], how=\"inner\")\n\nIn [2]: inner_join\nOut[2]: \n key   value_x   value_y\n0   B -0.282863  1.212112\n1   D -1.135632 -0.173215\n2   D -1.135632  0.119209\n\nIn [3]: left_join = df1.merge(df2, on=[\"key\"], how=\"left\")\n\nIn [4]: left_join\nOut[4]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059       NaN\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209\n\nIn [5]: right_join = df1.merge(df2, on=[\"key\"], how=\"right\")\n\nIn [6]: right_join\nOut[6]: \n key   value_x   value_y\n0   B -0.282863  1.212112\n1   D -1.135632 -0.173215\n2   D -1.135632  0.119209\n3   E       NaN -1.044236\n\nIn [7]: outer_join = df1.merge(df2, on=[\"key\"], how=\"outer\")\n\nIn [8]: outer_join\nOut[8]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059       NaN\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209\n5   E       NaN -1.044236 \n```", "```py\nIn [1]: outer_join\nOut[1]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059       NaN\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209\n5   E       NaN -1.044236\n\nIn [2]: outer_join[\"value_x\"] + outer_join[\"value_y\"]\nOut[2]: \n0         NaN\n1    0.929249\n2         NaN\n3   -1.308847\n4   -1.016424\n5         NaN\ndtype: float64\n\nIn [3]: outer_join[\"value_x\"].sum()\nOut[3]: -3.5940742896293765 \n```", "```py\ndata outer_join_nulls;\n    set outer_join;\n    if value_x = .;\nrun;\n\ndata outer_join_no_nulls;\n    set outer_join;\n    if value_x ^= .;\nrun; \n```", "```py\nIn [1]: outer_join[outer_join[\"value_x\"].isna()]\nOut[1]: \n key  value_x   value_y\n5   E      NaN -1.044236\n\nIn [2]: outer_join[outer_join[\"value_x\"].notna()]\nOut[2]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059       NaN\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209 \n```", "```py\nIn [3]: outer_join.dropna()\nOut[3]: \n key   value_x   value_y\n1   B -0.282863  1.212112\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209 \n```", "```py\nIn [4]: outer_join.ffill()\nOut[4]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059  1.212112\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209\n5   E -1.135632 -1.044236 \n```", "```py\nIn [5]: outer_join[\"value_x\"].fillna(outer_join[\"value_x\"].mean())\nOut[5]: \n0    0.469112\n1   -0.282863\n2   -1.509059\n3   -1.135632\n4   -1.135632\n5   -0.718815\nName: value_x, dtype: float64 \n```", "```py\nIn [3]: outer_join.dropna()\nOut[3]: \n key   value_x   value_y\n1   B -0.282863  1.212112\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209 \n```", "```py\nIn [4]: outer_join.ffill()\nOut[4]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059  1.212112\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209\n5   E -1.135632 -1.044236 \n```", "```py\nIn [5]: outer_join[\"value_x\"].fillna(outer_join[\"value_x\"].mean())\nOut[5]: \n0    0.469112\n1   -0.282863\n2   -1.509059\n3   -1.135632\n4   -1.135632\n5   -0.718815\nName: value_x, dtype: float64 \n```", "```py\nproc summary data=tips nway;\n    class sex smoker;\n    var total_bill tip;\n    output out=tips_summed sum=;\nrun; \n```", "```py\nIn [1]: tips_summed = tips.groupby([\"sex\", \"smoker\"])[[\"total_bill\", \"tip\"]].sum()\n\nIn [2]: tips_summed\nOut[2]: \n total_bill     tip\nsex    smoker \nFemale No          869.68  149.77\n Yes         527.27   96.74\nMale   No         1725.75  302.00\n Yes        1217.07  183.07 \n```", "```py\nproc summary data=tips missing nway;\n    class smoker;\n    var total_bill;\n    output out=smoker_means mean(total_bill)=group_bill;\nrun;\n\nproc sort data=tips;\n    by smoker;\nrun;\n\ndata tips;\n    merge tips(in=a) smoker_means(in=b);\n    by smoker;\n    adj_total_bill = total_bill - group_bill;\n    if a and b;\nrun; \n```", "```py\nIn [1]: gb = tips.groupby(\"smoker\")[\"total_bill\"]\n\nIn [2]: tips[\"adj_total_bill\"] = tips[\"total_bill\"] - gb.transform(\"mean\")\n\nIn [3]: tips\nOut[3]: \n total_bill    tip     sex smoker   day    time  size  adj_total_bill\n67         1.07   1.00  Female    Yes   Sat  Dinner     1      -17.686344\n92         3.75   1.00  Female    Yes   Fri  Dinner     2      -15.006344\n111        5.25   1.00  Female     No   Sat  Dinner     1      -11.938278\n145        6.35   1.50  Female     No  Thur   Lunch     2      -10.838278\n135        6.51   1.25  Female     No  Thur   Lunch     2      -10.678278\n..          ...    ...     ...    ...   ...     ...   ...             ...\n182       43.35   3.50    Male    Yes   Sun  Dinner     3       24.593656\n156       46.17   5.00    Male     No   Sun  Dinner     6       28.981722\n59        46.27   6.73    Male     No   Sat  Dinner     4       29.081722\n212       46.33   9.00    Male     No   Sat  Dinner     4       29.141722\n170       48.81  10.00    Male    Yes   Sat  Dinner     3       30.053656\n\n[244 rows x 8 columns] \n```", "```py\nproc sort data=tips;\n   by sex smoker;\nrun;\n\ndata tips_first;\n    set tips;\n    by sex smoker;\n    if FIRST.sex or FIRST.smoker then output;\nrun; \n```", "```py\nIn [4]: tips.groupby([\"sex\", \"smoker\"]).first()\nOut[4]: \n total_bill   tip   day    time  size  adj_total_bill\nsex    smoker \nFemale No            5.25  1.00   Sat  Dinner     1      -11.938278\n Yes           1.07  1.00   Sat  Dinner     1      -17.686344\nMale   No            5.51  2.00  Thur   Lunch     2      -11.678278\n Yes           5.25  5.15   Sun  Dinner     2      -13.506344 \n```", "```py\nproc summary data=tips nway;\n    class sex smoker;\n    var total_bill tip;\n    output out=tips_summed sum=;\nrun; \n```", "```py\nIn [1]: tips_summed = tips.groupby([\"sex\", \"smoker\"])[[\"total_bill\", \"tip\"]].sum()\n\nIn [2]: tips_summed\nOut[2]: \n total_bill     tip\nsex    smoker \nFemale No          869.68  149.77\n Yes         527.27   96.74\nMale   No         1725.75  302.00\n Yes        1217.07  183.07 \n```", "```py\nproc summary data=tips missing nway;\n    class smoker;\n    var total_bill;\n    output out=smoker_means mean(total_bill)=group_bill;\nrun;\n\nproc sort data=tips;\n    by smoker;\nrun;\n\ndata tips;\n    merge tips(in=a) smoker_means(in=b);\n    by smoker;\n    adj_total_bill = total_bill - group_bill;\n    if a and b;\nrun; \n```", "```py\nIn [1]: gb = tips.groupby(\"smoker\")[\"total_bill\"]\n\nIn [2]: tips[\"adj_total_bill\"] = tips[\"total_bill\"] - gb.transform(\"mean\")\n\nIn [3]: tips\nOut[3]: \n total_bill    tip     sex smoker   day    time  size  adj_total_bill\n67         1.07   1.00  Female    Yes   Sat  Dinner     1      -17.686344\n92         3.75   1.00  Female    Yes   Fri  Dinner     2      -15.006344\n111        5.25   1.00  Female     No   Sat  Dinner     1      -11.938278\n145        6.35   1.50  Female     No  Thur   Lunch     2      -10.838278\n135        6.51   1.25  Female     No  Thur   Lunch     2      -10.678278\n..          ...    ...     ...    ...   ...     ...   ...             ...\n182       43.35   3.50    Male    Yes   Sun  Dinner     3       24.593656\n156       46.17   5.00    Male     No   Sun  Dinner     6       28.981722\n59        46.27   6.73    Male     No   Sat  Dinner     4       29.081722\n212       46.33   9.00    Male     No   Sat  Dinner     4       29.141722\n170       48.81  10.00    Male    Yes   Sat  Dinner     3       30.053656\n\n[244 rows x 8 columns] \n```", "```py\nproc sort data=tips;\n   by sex smoker;\nrun;\n\ndata tips_first;\n    set tips;\n    by sex smoker;\n    if FIRST.sex or FIRST.smoker then output;\nrun; \n```", "```py\nIn [4]: tips.groupby([\"sex\", \"smoker\"]).first()\nOut[4]: \n total_bill   tip   day    time  size  adj_total_bill\nsex    smoker \nFemale No            5.25  1.00   Sat  Dinner     1      -11.938278\n Yes           1.07  1.00   Sat  Dinner     1      -17.686344\nMale   No            5.51  2.00  Thur   Lunch     2      -11.678278\n Yes           5.25  5.15   Sun  Dinner     2      -13.506344 \n```", "```py\nlibname xportout xport 'transport-file.xpt';\ndata xportout.tips;\n    set tips(rename=(total_bill=tbill));\n * xport variable names limited to 6 characters;\nrun; \n```", "```py\ndf = pd.read_sas(\"transport-file.xpt\")\ndf = pd.read_sas(\"binary-file.sas7bdat\") \n```", "```py\ndf = pd.read_sas(\"transport-file.xpt\", format=\"xport\")\ndf = pd.read_sas(\"binary-file.sas7bdat\", format=\"sas7bdat\") \n```", "```py\n# version 0.17, 10M rows\n\nIn [8]: %time df = pd.read_sas('big.xpt')\nWall time: 14.6 s\n\nIn [9]: %time df = pd.read_csv('big.csv')\nWall time: 4.86 s \n```", "```py\nlibname xportout xport 'transport-file.xpt';\ndata xportout.tips;\n    set tips(rename=(total_bill=tbill));\n * xport variable names limited to 6 characters;\nrun; \n```", "```py\ndf = pd.read_sas(\"transport-file.xpt\")\ndf = pd.read_sas(\"binary-file.sas7bdat\") \n```", "```py\ndf = pd.read_sas(\"transport-file.xpt\", format=\"xport\")\ndf = pd.read_sas(\"binary-file.sas7bdat\", format=\"sas7bdat\") \n```", "```py\n# version 0.17, 10M rows\n\nIn [8]: %time df = pd.read_sas('big.xpt')\nWall time: 14.6 s\n\nIn [9]: %time df = pd.read_csv('big.csv')\nWall time: 4.86 s \n```"]