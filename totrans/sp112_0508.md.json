["```py\nscipy.signal.correlate2d(in1, in2, mode='full', boundary='fill', fillvalue=0)\n```", "```py\n>>> import numpy as np\n>>> from scipy import signal\n>>> from scipy import datasets\n>>> rng = np.random.default_rng()\n>>> face = datasets.face(gray=True) - datasets.face(gray=True).mean()\n>>> template = np.copy(face[300:365, 670:750])  # right eye\n>>> template -= template.mean()\n>>> face = face + rng.standard_normal(face.shape) * 50  # add noise\n>>> corr = signal.correlate2d(face, template, boundary='symm', mode='same')\n>>> y, x = np.unravel_index(np.argmax(corr), corr.shape)  # find the match \n```", "```py\n>>> import matplotlib.pyplot as plt\n>>> fig, (ax_orig, ax_template, ax_corr) = plt.subplots(3, 1,\n...                                                     figsize=(6, 15))\n>>> ax_orig.imshow(face, cmap='gray')\n>>> ax_orig.set_title('Original')\n>>> ax_orig.set_axis_off()\n>>> ax_template.imshow(template, cmap='gray')\n>>> ax_template.set_title('Template')\n>>> ax_template.set_axis_off()\n>>> ax_corr.imshow(corr, cmap='gray')\n>>> ax_corr.set_title('Cross-correlation')\n>>> ax_corr.set_axis_off()\n>>> ax_orig.plot(x, y, 'ro')\n>>> fig.show() \n```"]