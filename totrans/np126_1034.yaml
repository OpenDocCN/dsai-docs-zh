- en: numpy.testing.assert_approx_equal
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.testing.assert_approx_equal
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.testing.assert_approx_equal.html](https://numpy.org/doc/1.26/reference/generated/numpy.testing.assert_approx_equal.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.testing.assert_approx_equal.html](https://numpy.org/doc/1.26/reference/generated/numpy.testing.assert_approx_equal.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Raises an AssertionError if two items are not equal up to significant digits.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果两个值的值在有效数字位数上不相等，则引发AssertionError。
- en: Note
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: It is recommended to use one of [`assert_allclose`](numpy.testing.assert_allclose.html#numpy.testing.assert_allclose
    "numpy.testing.assert_allclose"), [`assert_array_almost_equal_nulp`](numpy.testing.assert_array_almost_equal_nulp.html#numpy.testing.assert_array_almost_equal_nulp
    "numpy.testing.assert_array_almost_equal_nulp") or [`assert_array_max_ulp`](numpy.testing.assert_array_max_ulp.html#numpy.testing.assert_array_max_ulp
    "numpy.testing.assert_array_max_ulp") instead of this function for more consistent
    floating point comparisons.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 建议使用[`assert_allclose`](numpy.testing.assert_allclose.html#numpy.testing.assert_allclose
    "numpy.testing.assert_allclose")、[`assert_array_almost_equal_nulp`](numpy.testing.assert_array_almost_equal_nulp.html#numpy.testing.assert_array_almost_equal_nulp
    "numpy.testing.assert_array_almost_equal_nulp")或[`assert_array_max_ulp`](numpy.testing.assert_array_max_ulp.html#numpy.testing.assert_array_max_ulp
    "numpy.testing.assert_array_max_ulp")中的一个替代本函数，以进行更一致的浮点数比较。
- en: Given two numbers, check that they are approximately equal. Approximately equal
    is defined as the number of significant digits that agree.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 给定两个数字，检查它们是否近似相等。近似相等定义为一致的有效数字个数。
- en: 'Parameters:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**actual**scalar'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**actual**scalar'
- en: The object to check.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查的对象。
- en: '**desired**scalar'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**desired**scalar'
- en: The expected object.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 期望的对象。
- en: '**significant**int, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**significant**int，可选'
- en: Desired precision, default is 7.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 所需精度，默认为 7。
- en: '**err_msg**str, optional'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**err_msg**str，可选'
- en: The error message to be printed in case of failure.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 失败时要打印的错误消息。
- en: '**verbose**bool, optional'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**verbose**bool，可选'
- en: If True, the conflicting values are appended to the error message.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为True，则冲突的值将附加到错误消息。
- en: 'Raises:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: AssertionError
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: AssertionError
- en: If actual and desired are not equal up to specified precision.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果实际值和期望值在指定精度内不相等。
- en: See also
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`assert_allclose`](numpy.testing.assert_allclose.html#numpy.testing.assert_allclose
    "numpy.testing.assert_allclose")'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[`assert_allclose`](numpy.testing.assert_allclose.html#numpy.testing.assert_allclose
    "numpy.testing.assert_allclose")'
- en: Compare two array_like objects for equality with desired relative and/or absolute
    precision.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 用所需相对精度和/或绝对精度比较两个类似数组的对象是否相等。
- en: '[`assert_array_almost_equal_nulp`](numpy.testing.assert_array_almost_equal_nulp.html#numpy.testing.assert_array_almost_equal_nulp
    "numpy.testing.assert_array_almost_equal_nulp"), [`assert_array_max_ulp`](numpy.testing.assert_array_max_ulp.html#numpy.testing.assert_array_max_ulp
    "numpy.testing.assert_array_max_ulp"), [`assert_equal`](numpy.testing.assert_equal.html#numpy.testing.assert_equal
    "numpy.testing.assert_equal")'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[`assert_array_almost_equal_nulp`](numpy.testing.assert_array_almost_equal_nulp.html#numpy.testing.assert_array_almost_equal_nulp
    "numpy.testing.assert_array_almost_equal_nulp")、[`assert_array_max_ulp`](numpy.testing.assert_array_max_ulp.html#numpy.testing.assert_array_max_ulp
    "numpy.testing.assert_array_max_ulp")、[`assert_equal`](numpy.testing.assert_equal.html#numpy.testing.assert_equal
    "numpy.testing.assert_equal")'
- en: Examples
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: the evaluated condition that raises the exception is
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 引发异常的计算条件是
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
