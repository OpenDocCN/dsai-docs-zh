- en: scipy.signal.sosfreqz
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.signal.sosfreqz
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.sosfreqz.html#scipy.signal.sosfreqz](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.sosfreqz.html#scipy.signal.sosfreqz)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.sosfreqz.html#scipy.signal.sosfreqz](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.sosfreqz.html#scipy.signal.sosfreqz)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Compute the frequency response of a digital filter in SOS format.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 计算SOS格式数字滤波器的频率响应。
- en: 'Given *sos*, an array with shape (n, 6) of second order sections of a digital
    filter, compute the frequency response of the system function:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 给定*sos*，一个形状为(n, 6)的数组，其中包含数字滤波器的二阶段。计算系统函数的频率响应：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: for z = exp(omega*1j), where B{k}(z) and A{k}(z) are numerator and denominator
    of the transfer function of the k-th second order section.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 对于z = exp(omega*1j)，其中B{k}(z)和A{k}(z)分别是第k个二阶段传递函数的分子和分母。
- en: 'Parameters:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**sos**array_like'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**sos** 类似数组'
- en: Array of second-order filter coefficients, must have shape `(n_sections, 6)`.
    Each row corresponds to a second-order section, with the first three columns providing
    the numerator coefficients and the last three providing the denominator coefficients.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 数组的二阶滤波器系数，必须具有形状`(n_sections, 6)`。每行对应一个二阶段，前三列提供分子系数，后三列提供分母系数。
- en: '**worN**{None, int, array_like}, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**worN**{无，整数，类似数组}，可选'
- en: If a single integer, then compute at that many frequencies (default is N=512).
    Using a number that is fast for FFT computations can result in faster computations
    (see Notes of [`freqz`](scipy.signal.freqz.html#scipy.signal.freqz "scipy.signal.freqz")).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果是单个整数，则计算那么多频率（默认为 N=512）。使用 FFT 计算快速的数字可以导致更快的计算（见[`freqz`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.freqz.html#scipy.signal.freqz
    "scipy.signal.freqz")的注意事项）。
- en: If an array_like, compute the response at the frequencies given (must be 1-D).
    These are in the same units as *fs*.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果是类似数组，则在给定频率处计算响应（必须是1-D）。这些单位与*fs*相同。
- en: '**whole**bool, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**whole** 布尔值，可选'
- en: Normally, frequencies are computed from 0 to the Nyquist frequency, fs/2 (upper-half
    of unit-circle). If *whole* is True, compute frequencies from 0 to fs.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，频率从0到Nyquist频率fs/2计算（单位圆的上半部分）。如果*whole*为True，则从0到fs计算频率。
- en: '**fs**float, optional'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**fs** 浮点数，可选'
- en: The sampling frequency of the digital system. Defaults to 2*pi radians/sample
    (so w is from 0 to pi).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 数字系统的采样频率。默认为2*pi弧度/样本（所以w是从0到pi）。
- en: New in version 1.2.0.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本1.2.0中。
- en: 'Returns:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**w**ndarray'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**w** ndarray'
- en: The frequencies at which *h* was computed, in the same units as *fs*. By default,
    *w* is normalized to the range [0, pi) (radians/sample).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 计算*h*的频率，单位与*fs*相同。默认情况下，*w*被归一化到范围[0, pi)（弧度/样本）。
- en: '**h**ndarray'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**h** ndarray'
- en: The frequency response, as complex numbers.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 频率响应，作为复数。
- en: See also
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`freqz`](scipy.signal.freqz.html#scipy.signal.freqz "scipy.signal.freqz"),
    [`sosfilt`](scipy.signal.sosfilt.html#scipy.signal.sosfilt "scipy.signal.sosfilt")'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[`freqz`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.freqz.html#scipy.signal.freqz
    "scipy.signal.freqz")，[`sosfilt`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.sosfilt.html#scipy.signal.sosfilt
    "scipy.signal.sosfilt")'
- en: Notes
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: New in version 0.19.0.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本0.19.0中。
- en: Examples
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: Design a 15th-order bandpass filter in SOS format.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 设计一个15阶带通滤波器的SOS格式。
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Compute the frequency response at 1500 points from DC to Nyquist.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在1500点处从DC到Nyquist计算频率响应。
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Plot the response.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制响应。
- en: '[PRE4]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![../../_images/scipy-signal-sosfreqz-1_00_00.png](../Images/31fa9c10c66cfce14cfe294600776242.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-signal-sosfreqz-1_00_00.png](../Images/31fa9c10c66cfce14cfe294600776242.png)'
- en: 'If the same filter is implemented as a single transfer function, numerical
    error corrupts the frequency response:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果将相同的滤波器实现为单个传递函数，数值误差会损坏频率响应：
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![../../_images/scipy-signal-sosfreqz-1_01_00.png](../Images/71facdf79e27432faa5cfdf248e1255a.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-signal-sosfreqz-1_01_00.png](../Images/71facdf79e27432faa5cfdf248e1255a.png)'
