["```py\n@sympy.utilities.decorator.deprecated(message, *, deprecated_since_version, active_deprecations_target, stacklevel=3)\n```", "```py\n>>> from sympy.utilities.decorator import deprecated\n>>> from sympy import simplify\n>>> @deprecated(\"\"\"    ... The simplify_this(expr) function is deprecated. Use simplify(expr)\n... instead.\"\"\", deprecated_since_version=\"1.1\",\n... active_deprecations_target='simplify-this-deprecation')\n... def simplify_this(expr):\n...  \"\"\"\n...     Simplify ``expr``.\n...\n...     .. deprecated:: 1.1\n...\n...        The ``simplify_this`` function is deprecated. Use :func:`simplify`\n...        instead. See its documentation for more information. See\n...        :ref:`simplify-this-deprecation` for details.\n...\n...     \"\"\"\n...     return simplify(expr)\n>>> from sympy.abc import x\n>>> simplify_this(x*(x + 1) - x**2) \n<stdin>:1: SymPyDeprecationWarning:\n\nThe simplify_this(expr) function is deprecated. Use simplify(expr)\ninstead.\n\nSee https://docs.sympy.org/latest/explanation/active-deprecations.html#simplify-this-deprecation\nfor details.\n\nThis has been deprecated since SymPy version 1.1\\. It\nwill be removed in a future version of SymPy.\n\n simplify_this(x)\nx \n```", "```py\nsympy.utilities.decorator.conserve_mpmath_dps(func)\n```", "```py\nsympy.utilities.decorator.doctest_depends_on(exe=None, modules=None, disable_viewers=None, python_version=None, ground_types=None)\n```", "```py\nsympy.utilities.decorator.memoize_property(propfunc)\n```", "```py\nclass sympy.utilities.decorator.no_attrs_in_subclass(cls, f)\n```", "```py\n>>> from sympy.utilities.decorator import no_attrs_in_subclass \n```", "```py\n>>> class A(object):\n...     x = 'test' \n```", "```py\n>>> A.x = no_attrs_in_subclass(A, A.x) \n```", "```py\n>>> class B(A):\n...     pass \n```", "```py\n>>> hasattr(A, 'x')\nTrue\n>>> hasattr(B, 'x')\nFalse \n```", "```py\nsympy.utilities.decorator.public(obj)\n```", "```py\n>>> from sympy.utilities.decorator import public \n```", "```py\n>>> __all__ # noqa: F821\nTraceback (most recent call last):\n...\nNameError: name '__all__' is not defined \n```", "```py\n>>> @public\n... def some_function():\n...     pass \n```", "```py\n>>> __all__ # noqa: F821\n['some_function'] \n```", "```py\nsympy.utilities.decorator.threaded(func)\n```", "```py\n@threaded\ndef function(expr, *args, **kwargs): \n```", "```py\nsympy.utilities.decorator.threaded_factory(func, use_add)\n```", "```py\nsympy.utilities.decorator.xthreaded(func)\n```", "```py\n@xthreaded\ndef function(expr, *args, **kwargs): \n```"]