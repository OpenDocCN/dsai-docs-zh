["```py\nscipy.spatial.tsearch(tri, xi)\n```", "```py\n>>> import numpy as np\n>>> import matplotlib.pyplot as plt\n>>> from scipy.spatial import Delaunay, delaunay_plot_2d, tsearch\n>>> rng = np.random.default_rng() \n```", "```py\n>>> pts = rng.random((20, 2))\n>>> tri = Delaunay(pts)\n>>> _ = delaunay_plot_2d(tri) \n```", "```py\n>>> loc = rng.uniform(0.2, 0.8, (5, 2))\n>>> s = tsearch(tri, loc)\n>>> plt.triplot(pts[:, 0], pts[:, 1], tri.simplices[s], 'b-', mask=s==-1)\n>>> plt.scatter(loc[:, 0], loc[:, 1], c='r', marker='x')\n>>> plt.show() \n```"]