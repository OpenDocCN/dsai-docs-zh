- en: Joints Framework (Docstrings)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/physics/mechanics/api/joint.html](https://docs.sympy.org/latest/modules/physics/mechanics/api/joint.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '## Joint (Docstrings)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Abstract base class for all specific joints.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**name** : string'
  prefs: []
  type: TYPE_NORMAL
- en: A unique name for the joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent** : Particle or RigidBody or Body'
  prefs: []
  type: TYPE_NORMAL
- en: The parent body of joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child** : Particle or RigidBody or Body'
  prefs: []
  type: TYPE_NORMAL
- en: The child body of joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**coordinates** : iterable of dynamicsymbols, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Generalized coordinates of the joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**speeds** : iterable of dynamicsymbols, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Generalized speeds of joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent_point** : Point or Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Attachment point where the joint is fixed to the parent body. If a vector is
    provided, then the attachment point is computed by adding the vector to the body’s
    mass center. The default value is the parent’s mass center.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child_point** : Point or Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Attachment point where the joint is fixed to the child body. If a vector is
    provided, then the attachment point is computed by adding the vector to the body’s
    mass center. The default value is the child’s mass center.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent_axis** : Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 1.12: Axis fixed in the parent body which aligns with
    an axis fixed in the child body. The default is the x axis of parent’s reference
    frame. For more information on this deprecation, see [New Joint intermediate frames](../../../../explanation/active-deprecations.html#deprecated-mechanics-joint-axis).'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child_axis** : Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 1.12: Axis fixed in the child body which aligns with
    an axis fixed in the parent body. The default is the x axis of child’s reference
    frame. For more information on this deprecation, see [New Joint intermediate frames](../../../../explanation/active-deprecations.html#deprecated-mechanics-joint-axis).'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent_interframe** : ReferenceFrame, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Intermediate frame of the parent body with respect to which the joint transformation
    is formulated. If a Vector is provided then an interframe is created which aligns
    its X axis with the given vector. The default value is the parent’s own frame.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child_interframe** : ReferenceFrame, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Intermediate frame of the child body with respect to which the joint transformation
    is formulated. If a Vector is provided then an interframe is created which aligns
    its X axis with the given vector. The default value is the child’s own frame.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent_joint_pos** : Point or Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 1.12: This argument is replaced by parent_point and
    will be removed in a future version. See [Change in joint attachment point argument](../../../../explanation/active-deprecations.html#deprecated-mechanics-joint-pos)
    for more information.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child_joint_pos** : Point or Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 1.12: This argument is replaced by child_point and
    will be removed in a future version. See [Change in joint attachment point argument](../../../../explanation/active-deprecations.html#deprecated-mechanics-joint-pos)
    for more information.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: A joint subtracts degrees of freedom from a body. This is the base class for
    all specific joints and holds all common methods acting as an interface for all
    joints. Custom joint can be created by inheriting Joint class and defining all
    abstract functions.
  prefs: []
  type: TYPE_NORMAL
- en: 'The abstract methods are:'
  prefs: []
  type: TYPE_NORMAL
- en: '`_generate_coordinates`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`_generate_speeds`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`_orient_frames`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`_set_angular_velocity`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`_set_linear_velocity`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: When providing a vector as the intermediate frame, a new intermediate frame
    is created which aligns its X axis with the provided vector. This is done with
    a single fixed rotation about a rotation axis. This rotation axis is determined
    by taking the cross product of the `body.x` axis with the provided vector. In
    the case where the provided vector is in the `-body.x` direction, the rotation
    is done about the `body.y` axis.
  prefs: []
  type: TYPE_NORMAL
- en: Attributes
  prefs: []
  type: TYPE_NORMAL
- en: '| name | (string) The joint’s name. |'
  prefs: []
  type: TYPE_TB
- en: '| parent | (Particle or RigidBody or Body) The joint’s parent body. |'
  prefs: []
  type: TYPE_TB
- en: '| child | (Particle or RigidBody or Body) The joint’s child body. |'
  prefs: []
  type: TYPE_TB
- en: '| coordinates | (Matrix) Matrix of the joint’s generalized coordinates. |'
  prefs: []
  type: TYPE_TB
- en: '| speeds | (Matrix) Matrix of the joint’s generalized speeds. |'
  prefs: []
  type: TYPE_TB
- en: '| parent_point | (Point) Attachment point where the joint is fixed to the parent
    body. |'
  prefs: []
  type: TYPE_TB
- en: '| child_point | (Point) Attachment point where the joint is fixed to the child
    body. |'
  prefs: []
  type: TYPE_TB
- en: '| parent_axis | (Vector) The axis fixed in the parent frame that represents
    the joint. |'
  prefs: []
  type: TYPE_TB
- en: '| child_axis | (Vector) The axis fixed in the child frame that represents the
    joint. |'
  prefs: []
  type: TYPE_TB
- en: '| parent_interframe | (ReferenceFrame) Intermediate frame of the parent body
    with respect to which the joint transformation is formulated. |'
  prefs: []
  type: TYPE_TB
- en: '| child_interframe | (ReferenceFrame) Intermediate frame of the child body
    with respect to which the joint transformation is formulated. |'
  prefs: []
  type: TYPE_TB
- en: '| kdes | (Matrix) Kinematical differential equations of the joint. |'
  prefs: []
  type: TYPE_TB
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Child body of Joint.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The axis of child frame.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Attachment point where the joint is fixed to the child body.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Matrix of the joint’s generalized coordinates.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Kinematical differential equations of the joint.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Name of the joint.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Parent body of Joint.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: The axis of parent frame.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Attachment point where the joint is fixed to the parent body.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Matrix of the joint’s generalized speeds.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Pin (Revolute) Joint.
  prefs: []
  type: TYPE_NORMAL
- en: <svg overflow="hidden" version="1.1" class="align-center" width="500" viewBox="0
    0 453.51044 333.44882"><g transform="matrix(.21726615 0 0 .21726615 -.0002263261
    -38.380282)"><text x="1608.4777" y="1452.7125" fill="#ff0000" font-family="Calibri,
    Calibri_MSFontService, sans-serif" font-size="73.6424px" font-weight="400" stroke-width=".89678">joint_axis</text>
    <text x="1645.9321" y="1101.9203" fill="#ff0000" font-family="Calibri, Calibri_MSFontService,
    sans-serif" font-size="73.6424px" font-weight="400" stroke-width=".89678">q, u</text>
    <text x="1552.5498" y="484.2467" fill="#0070c0" font-family="Calibri, Calibri_MSFontService,
    sans-serif" font-size="73.6424px" font-weight="400" stroke-width=".89678">child.masscenter</text>
    <text x="890.37671" y="1397.1683" font-family="Calibri, Calibri_MSFontService,
    sans-serif" font-size="73.6424px" font-weight="400" stroke-width=".89678">attachment
    points</text> <text x="270.64819" y="1389.0973" fill="#008000" font-family="Calibri,
    Calibri_MSFontService, sans-serif" font-size="73.6424px" font-weight="400" stroke-width=".89678">parent.frame</text>
    <text x="607.55475" y="831.78076" fill="#008000" font-family="Calibri, Calibri_MSFontService,
    sans-serif" font-size="73.6424px" font-weight="400" stroke-width=".89678">parent_interframe</text>
    <text x="119.91459" y="1070.7595" fill="#008000" font-family="Calibri, Calibri_MSFontService,
    sans-serif" font-size="73.6424px" font-weight="400" stroke-width=".89678">parent.masscenter</text>
    <text x="1021.9164" y="562.26654" fill="#0070c0" font-family="Calibri, Calibri_MSFontService,
    sans-serif" font-size="73.6424px" font-weight="400" stroke-width=".89678">child.frame</text>
    <text x="671.80328" y="730.08099" fill="#0070c0" font-family="Calibri, Calibri_MSFontService,
    sans-serif" font-size="73.6424px" font-weight="400" stroke-width=".89678">child_interframe</text></g></svg>
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**name** : string'
  prefs: []
  type: TYPE_NORMAL
- en: A unique name for the joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent** : Particle or RigidBody or Body'
  prefs: []
  type: TYPE_NORMAL
- en: The parent body of joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child** : Particle or RigidBody or Body'
  prefs: []
  type: TYPE_NORMAL
- en: The child body of joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**coordinates** : dynamicsymbol, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Generalized coordinates of the joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**speeds** : dynamicsymbol, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Generalized speeds of joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent_point** : Point or Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Attachment point where the joint is fixed to the parent body. If a vector is
    provided, then the attachment point is computed by adding the vector to the body’s
    mass center. The default value is the parent’s mass center.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child_point** : Point or Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Attachment point where the joint is fixed to the child body. If a vector is
    provided, then the attachment point is computed by adding the vector to the body’s
    mass center. The default value is the child’s mass center.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent_axis** : Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 1.12: Axis fixed in the parent body which aligns with
    an axis fixed in the child body. The default is the x axis of parent’s reference
    frame. For more information on this deprecation, see [New Joint intermediate frames](../../../../explanation/active-deprecations.html#deprecated-mechanics-joint-axis).'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child_axis** : Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 1.12: Axis fixed in the child body which aligns with
    an axis fixed in the parent body. The default is the x axis of child’s reference
    frame. For more information on this deprecation, see [New Joint intermediate frames](../../../../explanation/active-deprecations.html#deprecated-mechanics-joint-axis).'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent_interframe** : ReferenceFrame, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Intermediate frame of the parent body with respect to which the joint transformation
    is formulated. If a Vector is provided then an interframe is created which aligns
    its X axis with the given vector. The default value is the parent’s own frame.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child_interframe** : ReferenceFrame, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Intermediate frame of the child body with respect to which the joint transformation
    is formulated. If a Vector is provided then an interframe is created which aligns
    its X axis with the given vector. The default value is the child’s own frame.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**joint_axis** : Vector'
  prefs: []
  type: TYPE_NORMAL
- en: The axis about which the rotation occurs. Note that the components of this axis
    are the same in the parent_interframe and child_interframe.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent_joint_pos** : Point or Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 1.12: This argument is replaced by parent_point and
    will be removed in a future version. See [Change in joint attachment point argument](../../../../explanation/active-deprecations.html#deprecated-mechanics-joint-pos)
    for more information.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child_joint_pos** : Point or Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 1.12: This argument is replaced by child_point and
    will be removed in a future version. See [Change in joint attachment point argument](../../../../explanation/active-deprecations.html#deprecated-mechanics-joint-pos)
    for more information.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: A pin joint is defined such that the joint rotation axis is fixed in both the
    child and parent and the location of the joint is relative to the mass center
    of each body. The child rotates an angle, θ, from the parent about the rotation
    axis and has a simple angular speed, ω, relative to the parent. The direction
    cosine matrix between the child interframe and parent interframe is formed using
    a simple rotation about the joint axis. The page on the joints framework gives
    a more detailed explanation of the intermediate frames.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'A single pin joint is created from two bodies and has the following basic attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: To further demonstrate the use of the pin joint, the kinematics of simple double
    pendulum that rotates about the Z axis of each connected body can be created as
    follows.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: First create bodies to represent the fixed ceiling and one to represent each
    pendulum bob.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: The first joint will connect the upper bob to the ceiling by a distance of `l1`
    and the joint axis will be about the Z axis for each body.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: The second joint will connect the lower bob to the upper bob by a distance of
    `l2` and the joint axis will also be about the Z axis for each body.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Once the joints are established the kinematics of the connected bodies can
    be accessed. First the direction cosine matrices of pendulum link relative to
    the ceiling are found:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'The position of the lower bob’s masscenter is found with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: The angular velocities of the two pendulum links can be computed with respect
    to the ceiling.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: And finally, the linear velocities of the two pendulum bobs can be computed
    with respect to the ceiling.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs: []
  type: TYPE_NORMAL
- en: '| name | (string) The joint’s name. |'
  prefs: []
  type: TYPE_TB
- en: '| parent | (Particle or RigidBody or Body) The joint’s parent body. |'
  prefs: []
  type: TYPE_TB
- en: '| child | (Particle or RigidBody or Body) The joint’s child body. |'
  prefs: []
  type: TYPE_TB
- en: '| coordinates | (Matrix) Matrix of the joint’s generalized coordinates. The
    default value is `dynamicsymbols(f''q_{joint.name}'')`. |'
  prefs: []
  type: TYPE_TB
- en: '| speeds | (Matrix) Matrix of the joint’s generalized speeds. The default value
    is `dynamicsymbols(f''u_{joint.name}'')`. |'
  prefs: []
  type: TYPE_TB
- en: '| parent_point | (Point) Attachment point where the joint is fixed to the parent
    body. |'
  prefs: []
  type: TYPE_TB
- en: '| child_point | (Point) Attachment point where the joint is fixed to the child
    body. |'
  prefs: []
  type: TYPE_TB
- en: '| parent_axis | (Vector) The axis fixed in the parent frame that represents
    the joint. |'
  prefs: []
  type: TYPE_TB
- en: '| child_axis | (Vector) The axis fixed in the child frame that represents the
    joint. |'
  prefs: []
  type: TYPE_TB
- en: '| parent_interframe | (ReferenceFrame) Intermediate frame of the parent body
    with respect to which the joint transformation is formulated. |'
  prefs: []
  type: TYPE_TB
- en: '| child_interframe | (ReferenceFrame) Intermediate frame of the child body
    with respect to which the joint transformation is formulated. |'
  prefs: []
  type: TYPE_TB
- en: '| joint_axis | (Vector) The axis about which the rotation occurs. Note that
    the components of this axis are the same in the parent_interframe and child_interframe.
    |'
  prefs: []
  type: TYPE_TB
- en: '| kdes | (Matrix) Kinematical differential equations of the joint. |'
  prefs: []
  type: TYPE_TB
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Axis about which the child rotates with respect to the parent.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Prismatic (Sliding) Joint.
  prefs: []
  type: TYPE_NORMAL
- en: '![../../../../_images/PrismaticJoint.svg](../Images/fd786df288affd6b3f9e2463addeb89b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**name** : string'
  prefs: []
  type: TYPE_NORMAL
- en: A unique name for the joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent** : Particle or RigidBody or Body'
  prefs: []
  type: TYPE_NORMAL
- en: The parent body of joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child** : Particle or RigidBody or Body'
  prefs: []
  type: TYPE_NORMAL
- en: The child body of joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**coordinates** : dynamicsymbol, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Generalized coordinates of the joint. The default value is `dynamicsymbols(f'q_{joint.name}')`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**speeds** : dynamicsymbol, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Generalized speeds of joint. The default value is `dynamicsymbols(f'u_{joint.name}')`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent_point** : Point or Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Attachment point where the joint is fixed to the parent body. If a vector is
    provided, then the attachment point is computed by adding the vector to the body’s
    mass center. The default value is the parent’s mass center.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child_point** : Point or Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Attachment point where the joint is fixed to the child body. If a vector is
    provided, then the attachment point is computed by adding the vector to the body’s
    mass center. The default value is the child’s mass center.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent_axis** : Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 1.12: Axis fixed in the parent body which aligns with
    an axis fixed in the child body. The default is the x axis of parent’s reference
    frame. For more information on this deprecation, see [New Joint intermediate frames](../../../../explanation/active-deprecations.html#deprecated-mechanics-joint-axis).'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child_axis** : Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 1.12: Axis fixed in the child body which aligns with
    an axis fixed in the parent body. The default is the x axis of child’s reference
    frame. For more information on this deprecation, see [New Joint intermediate frames](../../../../explanation/active-deprecations.html#deprecated-mechanics-joint-axis).'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent_interframe** : ReferenceFrame, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Intermediate frame of the parent body with respect to which the joint transformation
    is formulated. If a Vector is provided then an interframe is created which aligns
    its X axis with the given vector. The default value is the parent’s own frame.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child_interframe** : ReferenceFrame, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Intermediate frame of the child body with respect to which the joint transformation
    is formulated. If a Vector is provided then an interframe is created which aligns
    its X axis with the given vector. The default value is the child’s own frame.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**joint_axis** : Vector'
  prefs: []
  type: TYPE_NORMAL
- en: The axis along which the translation occurs. Note that the components of this
    axis are the same in the parent_interframe and child_interframe.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent_joint_pos** : Point or Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 1.12: This argument is replaced by parent_point and
    will be removed in a future version. See [Change in joint attachment point argument](../../../../explanation/active-deprecations.html#deprecated-mechanics-joint-pos)
    for more information.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child_joint_pos** : Point or Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 1.12: This argument is replaced by child_point and
    will be removed in a future version. See [Change in joint attachment point argument](../../../../explanation/active-deprecations.html#deprecated-mechanics-joint-pos)
    for more information.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: It is defined such that the child body translates with respect to the parent
    body along the body-fixed joint axis. The location of the joint is defined by
    two points, one in each body, which coincide when the generalized coordinate is
    zero. The direction cosine matrix between the parent_interframe and child_interframe
    is the identity matrix. Therefore, the direction cosine matrix between the parent
    and child frames is fully defined by the definition of the intermediate frames.
    The page on the joints framework gives a more detailed explanation of the intermediate
    frames.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'A single prismatic joint is created from two bodies and has the following basic
    attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: To further demonstrate the use of the prismatic joint, the kinematics of two
    masses sliding, one moving relative to a fixed body and the other relative to
    the moving body. about the X axis of each connected body can be created as follows.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: First create bodies to represent the fixed ceiling and one to represent a particle.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: The first joint will connect the particle to the ceiling and the joint axis
    will be about the X axis for each body.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: The second joint will connect the second particle to the first particle and
    the joint axis will also be about the X axis for each body.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'Once the joint is established the kinematics of the connected bodies can be
    accessed. First the direction cosine matrices of Part relative to the ceiling
    are found:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'The position of the particles’ masscenter is found with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: The angular velocities of the two particle links can be computed with respect
    to the ceiling.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: And finally, the linear velocities of the two particles can be computed with
    respect to the ceiling.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs: []
  type: TYPE_NORMAL
- en: '| name | (string) The joint’s name. |'
  prefs: []
  type: TYPE_TB
- en: '| parent | (Particle or RigidBody or Body) The joint’s parent body. |'
  prefs: []
  type: TYPE_TB
- en: '| child | (Particle or RigidBody or Body) The joint’s child body. |'
  prefs: []
  type: TYPE_TB
- en: '| coordinates | (Matrix) Matrix of the joint’s generalized coordinates. |'
  prefs: []
  type: TYPE_TB
- en: '| speeds | (Matrix) Matrix of the joint’s generalized speeds. |'
  prefs: []
  type: TYPE_TB
- en: '| parent_point | (Point) Attachment point where the joint is fixed to the parent
    body. |'
  prefs: []
  type: TYPE_TB
- en: '| child_point | (Point) Attachment point where the joint is fixed to the child
    body. |'
  prefs: []
  type: TYPE_TB
- en: '| parent_axis | (Vector) The axis fixed in the parent frame that represents
    the joint. |'
  prefs: []
  type: TYPE_TB
- en: '| child_axis | (Vector) The axis fixed in the child frame that represents the
    joint. |'
  prefs: []
  type: TYPE_TB
- en: '| parent_interframe | (ReferenceFrame) Intermediate frame of the parent body
    with respect to which the joint transformation is formulated. |'
  prefs: []
  type: TYPE_TB
- en: '| child_interframe | (ReferenceFrame) Intermediate frame of the child body
    with respect to which the joint transformation is formulated. |'
  prefs: []
  type: TYPE_TB
- en: '| kdes | (Matrix) Kinematical differential equations of the joint. |'
  prefs: []
  type: TYPE_TB
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: Axis along which the child translates with respect to the parent.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: Cylindrical Joint.
  prefs: []
  type: TYPE_NORMAL
- en: '[![../../../../_images/CylindricalJoint.svg](../Images/579b2a40278d54fdbde7250683f3291f.png)](../../../../_images/CylindricalJoint.svg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**name** : string'
  prefs: []
  type: TYPE_NORMAL
- en: A unique name for the joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent** : Particle or RigidBody or Body'
  prefs: []
  type: TYPE_NORMAL
- en: The parent body of joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child** : Particle or RigidBody or Body'
  prefs: []
  type: TYPE_NORMAL
- en: The child body of joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**rotation_coordinate** : dynamicsymbol, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Generalized coordinate corresponding to the rotation angle. The default value
    is `dynamicsymbols(f'q0_{joint.name}')`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**translation_coordinate** : dynamicsymbol, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Generalized coordinate corresponding to the translation distance. The default
    value is `dynamicsymbols(f'q1_{joint.name}')`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**rotation_speed** : dynamicsymbol, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Generalized speed corresponding to the angular velocity. The default value is
    `dynamicsymbols(f'u0_{joint.name}')`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**translation_speed** : dynamicsymbol, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Generalized speed corresponding to the translation velocity. The default value
    is `dynamicsymbols(f'u1_{joint.name}')`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent_point** : Point or Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Attachment point where the joint is fixed to the parent body. If a vector is
    provided, then the attachment point is computed by adding the vector to the body’s
    mass center. The default value is the parent’s mass center.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child_point** : Point or Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Attachment point where the joint is fixed to the child body. If a vector is
    provided, then the attachment point is computed by adding the vector to the body’s
    mass center. The default value is the child’s mass center.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent_interframe** : ReferenceFrame, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Intermediate frame of the parent body with respect to which the joint transformation
    is formulated. If a Vector is provided then an interframe is created which aligns
    its X axis with the given vector. The default value is the parent’s own frame.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child_interframe** : ReferenceFrame, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Intermediate frame of the child body with respect to which the joint transformation
    is formulated. If a Vector is provided then an interframe is created which aligns
    its X axis with the given vector. The default value is the child’s own frame.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**joint_axis** : Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The rotation as well as translation axis. Note that the components of this axis
    are the same in the parent_interframe and child_interframe.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: A cylindrical joint is defined such that the child body both rotates about and
    translates along the body-fixed joint axis with respect to the parent body. The
    joint axis is both the rotation axis and translation axis. The location of the
    joint is defined by two points, one in each body, which coincide when the generalized
    coordinate corresponding to the translation is zero. The direction cosine matrix
    between the child interframe and parent interframe is formed using a simple rotation
    about the joint axis. The page on the joints framework gives a more detailed explanation
    of the intermediate frames.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'A single cylindrical joint is created between two bodies and has the following
    basic attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: To further demonstrate the use of the cylindrical joint, the kinematics of two
    cylindrical joints perpendicular to each other can be created as follows.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: First create bodies to represent the fixed floor with a fixed pole on it. The
    second body represents a freely moving tube around that pole. The third body represents
    a solid flag freely translating along and rotating around the Y axis of the tube.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: The first joint will connect the first tube to the floor with it translating
    along and rotating around the Z axis of both bodies.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: The second joint will connect the tube perpendicular to the flag along the Y
    axis of both the tube and the flag, with the joint located at a distance `r` from
    the tube’s center of mass and a combination of the distances `l` and `w` from
    the flag’s center of mass.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'Once the joints are established the kinematics of the connected bodies can
    be accessed. First the direction cosine matrices of both the body and the flag
    relative to the floor are found:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: 'The position of the flag’s center of mass is found with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: The angular velocities of the two tubes can be computed with respect to the
    floor.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: Finally, the linear velocities of the two tube centers of mass can be computed
    with respect to the floor, while expressed in the tube’s frame.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs: []
  type: TYPE_NORMAL
- en: '| name | (string) The joint’s name. |'
  prefs: []
  type: TYPE_TB
- en: '| parent | (Particle or RigidBody or Body) The joint’s parent body. |'
  prefs: []
  type: TYPE_TB
- en: '| child | (Particle or RigidBody or Body) The joint’s child body. |'
  prefs: []
  type: TYPE_TB
- en: '| rotation_coordinate | (dynamicsymbol) Generalized coordinate corresponding
    to the rotation angle. |'
  prefs: []
  type: TYPE_TB
- en: '| translation_coordinate | (dynamicsymbol) Generalized coordinate corresponding
    to the translation distance. |'
  prefs: []
  type: TYPE_TB
- en: '| rotation_speed | (dynamicsymbol) Generalized speed corresponding to the angular
    velocity. |'
  prefs: []
  type: TYPE_TB
- en: '| translation_speed | (dynamicsymbol) Generalized speed corresponding to the
    translation velocity. |'
  prefs: []
  type: TYPE_TB
- en: '| coordinates | (Matrix) Matrix of the joint’s generalized coordinates. |'
  prefs: []
  type: TYPE_TB
- en: '| speeds | (Matrix) Matrix of the joint’s generalized speeds. |'
  prefs: []
  type: TYPE_TB
- en: '| parent_point | (Point) Attachment point where the joint is fixed to the parent
    body. |'
  prefs: []
  type: TYPE_TB
- en: '| child_point | (Point) Attachment point where the joint is fixed to the child
    body. |'
  prefs: []
  type: TYPE_TB
- en: '| parent_interframe | (ReferenceFrame) Intermediate frame of the parent body
    with respect to which the joint transformation is formulated. |'
  prefs: []
  type: TYPE_TB
- en: '| child_interframe | (ReferenceFrame) Intermediate frame of the child body
    with respect to which the joint transformation is formulated. |'
  prefs: []
  type: TYPE_TB
- en: '| kdes | (Matrix) Kinematical differential equations of the joint. |'
  prefs: []
  type: TYPE_TB
- en: '| joint_axis | (Vector) The axis of rotation and translation. |'
  prefs: []
  type: TYPE_TB
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: Axis about and along which the rotation and translation occurs.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: Generalized coordinate corresponding to the rotation angle.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: Generalized speed corresponding to the angular velocity.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: Generalized coordinate corresponding to the translation distance.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: Generalized speed corresponding to the translation velocity.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: Planar Joint.
  prefs: []
  type: TYPE_NORMAL
- en: <svg class="align-center" width="800" viewBox="0 0 3108 1681" xml:space="preserve"
    overflow="hidden"><g clip-path="url(#clip0)" transform="translate(-639 -414)"><text
    fill="#0070C0" font-family="Arial,Arial_MSFontService,sans-serif" font-weight="400"
    font-size="83" transform="matrix(1 0 0 1 3103.02 1058)">child_point</text> <text
    fill="#4472C4" font-family="Arial,Arial_MSFontService,sans-serif" font-weight="400"
    font-size="83" transform="matrix(1 0 0 1 3101.8 971)">child_interframe</text>
    <text fill="#FF0000" font-family="Arial,Arial_MSFontService,sans-serif" font-weight="400"
    font-size="83" transform="matrix(1 0 0 1 2055.91 1153)">planar_vectors</text>
    <text fill="#008000" font-family="Arial,Arial_MSFontService,sans-serif" font-weight="400"
    font-size="83" transform="matrix(1 0 0 1 1641.73 1481)">parent_point</text> <text
    fill="#008000" font-family="Arial,Arial_MSFontService,sans-serif" font-weight="400"
    font-size="83" transform="matrix(1 0 0 1 1444.96 1246)">parent_interframe</text>
    <text fill="#FF0000" font-family="Arial,Arial_MSFontService,sans-serif" font-weight="400"
    font-size="83" transform="matrix(0.981712 0.190374 -0.190374 0.981712 2326.62
    1545)">q1, u1</text> <text fill="#FF0000" font-family="Arial,Arial_MSFontService,sans-serif"
    font-weight="400" font-size="83" transform="matrix(1 0 0 1 3250.83 683)">q0, u0<tspan
    fill="#0070C0" font-size="83" x="-1357.08" y="161">child.masscenter</tspan></text>
    <text fill="#0070C0" font-family="Arial,Arial_MSFontService,sans-serif" font-weight="400"
    font-size="83" transform="matrix(1 0 0 1 2115.88 574)">child.frame</text> <text
    fill="#008000" font-family="Arial,Arial_MSFontService,sans-serif" font-weight="400"
    font-size="83" transform="matrix(1 0 0 1 689.249 1404)">parent<tspan font-size="83"
    x="233.75" y="0">.</tspan> <tspan font-size="83" x="256.667" y="0">masscenter</tspan></text>
    <text fill="#008000" font-family="Arial,Arial_MSFontService,sans-serif" font-weight="400"
    font-size="83" transform="matrix(1 0 0 1 906.02 1298)">parent.frame</text> <text
    fill="#FF0000" font-family="Arial,Arial_MSFontService,sans-serif" font-weight="400"
    font-size="83" transform="matrix(0.981712 0.190374 -0.190374 0.981712 2805.48
    1366)">q2, u2</text> <text fill="#FF0000" font-family="Arial,Arial_MSFontService,sans-serif"
    font-weight="400" font-size="83" transform="matrix(1 0 0 1 3027.26 524)">rotation_axis</text></g></svg>
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**name** : string'
  prefs: []
  type: TYPE_NORMAL
- en: A unique name for the joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent** : Particle or RigidBody or Body'
  prefs: []
  type: TYPE_NORMAL
- en: The parent body of joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child** : Particle or RigidBody or Body'
  prefs: []
  type: TYPE_NORMAL
- en: The child body of joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**rotation_coordinate** : dynamicsymbol, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Generalized coordinate corresponding to the rotation angle. The default value
    is `dynamicsymbols(f'q0_{joint.name}')`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**planar_coordinates** : iterable of dynamicsymbols, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Two generalized coordinates used for the planar translation. The default value
    is `dynamicsymbols(f'q1_{joint.name} q2_{joint.name}')`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**rotation_speed** : dynamicsymbol, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Generalized speed corresponding to the angular velocity. The default value is
    `dynamicsymbols(f'u0_{joint.name}')`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**planar_speeds** : dynamicsymbols, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Two generalized speeds used for the planar translation velocity. The default
    value is `dynamicsymbols(f'u1_{joint.name} u2_{joint.name}')`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent_point** : Point or Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Attachment point where the joint is fixed to the parent body. If a vector is
    provided, then the attachment point is computed by adding the vector to the body’s
    mass center. The default value is the parent’s mass center.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child_point** : Point or Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Attachment point where the joint is fixed to the child body. If a vector is
    provided, then the attachment point is computed by adding the vector to the body’s
    mass center. The default value is the child’s mass center.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent_interframe** : ReferenceFrame, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Intermediate frame of the parent body with respect to which the joint transformation
    is formulated. If a Vector is provided then an interframe is created which aligns
    its X axis with the given vector. The default value is the parent’s own frame.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child_interframe** : ReferenceFrame, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Intermediate frame of the child body with respect to which the joint transformation
    is formulated. If a Vector is provided then an interframe is created which aligns
    its X axis with the given vector. The default value is the child’s own frame.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: A planar joint is defined such that the child body translates over a fixed plane
    of the parent body as well as rotate about the rotation axis, which is perpendicular
    to that plane. The origin of this plane is the `parent_point` and the plane is
    spanned by two nonparallel planar vectors. The location of the `child_point` is
    based on the planar vectors (\(\vec{v}_1\), \(\vec{v}_2\)) and generalized coordinates
    (\(q_1\), \(q_2\)), i.e. \(\vec{r} = q_1 \hat{v}_1 + q_2 \hat{v}_2\). The direction
    cosine matrix between the `child_interframe` and `parent_interframe` is formed
    using a simple rotation (\(q_0\)) about the rotation axis.
  prefs: []
  type: TYPE_NORMAL
- en: In order to simplify the definition of the `PlanarJoint`, the `rotation_axis`
    and `planar_vectors` are set to be the unit vectors of the `parent_interframe`
    according to the table below. This ensures that you can only define these vectors
    by creating a separate frame and supplying that as the interframe. If you however
    would only like to supply the normals of the plane with respect to the parent
    and child bodies, then you can also supply those to the `parent_interframe` and
    `child_interframe` arguments. An example of both of these cases is in the examples
    section below and the page on the joints framework provides a more detailed explanation
    of the intermediate frames.
  prefs: []
  type: TYPE_NORMAL
- en: '| `rotation_axis` | `parent_interframe.x` |'
  prefs: []
  type: TYPE_TB
- en: '| `planar_vectors[0]` | `parent_interframe.y` |'
  prefs: []
  type: TYPE_TB
- en: '| `planar_vectors[1]` | `parent_interframe.z` |'
  prefs: []
  type: TYPE_TB
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'A single planar joint is created between two bodies and has the following basic
    attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: To further demonstrate the use of the planar joint, the kinematics of a block
    sliding on a slope, can be created as follows.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: First create bodies to represent the slope and the block.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: To define the slope you can either define the plane by specifying the `planar_vectors`
    or/and the `rotation_axis`. However it is advisable to create a rotated intermediate
    frame, so that the `parent_vectors` and `rotation_axis` will be the unit vectors
    of this intermediate frame.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: The planar joint can be created using these bodies and intermediate frame. We
    can specify the origin of the slope to be `d` above the slope’s center of mass
    and the block’s center of mass to be a distance `h` above the slope’s surface.
    Note that we can specify the normal of the plane using the rotation axis argument.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: Once the joint is established the kinematics of the bodies can be accessed.
    First the `rotation_axis`, which is normal to the plane and the `plane_vectors`,
    can be found.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: 'The direction cosine matrix of the block with respect to the ground can be
    found with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: The angular velocity of the block can be computed with respect to the ground.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: 'The position of the block’s center of mass can be found with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: Finally, the linear velocity of the block’s center of mass can be computed with
    respect to the ground.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: In some cases it could be your preference to only define the normals of the
    plane with respect to both bodies. This can most easily be done by supplying vectors
    to the `interframe` arguments. What will happen in this case is that an interframe
    will be created with its `x` axis aligned with the provided vector. For a further
    explanation of how this is done see the notes of the `Joint` class. In the code
    below, the above example (with the block on the slope) is recreated by supplying
    vectors to the interframe arguments. Note that the previously described option
    is however more computationally efficient, because the algorithm now has to compute
    the rotation angle between the provided vector and the ‘x’ axis.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs: []
  type: TYPE_NORMAL
- en: '| name | (string) The joint’s name. |'
  prefs: []
  type: TYPE_TB
- en: '| parent | (Particle or RigidBody or Body) The joint’s parent body. |'
  prefs: []
  type: TYPE_TB
- en: '| child | (Particle or RigidBody or Body) The joint’s child body. |'
  prefs: []
  type: TYPE_TB
- en: '| rotation_coordinate | (dynamicsymbol) Generalized coordinate corresponding
    to the rotation angle. |'
  prefs: []
  type: TYPE_TB
- en: '| planar_coordinates | (Matrix) Two generalized coordinates used for the planar
    translation. |'
  prefs: []
  type: TYPE_TB
- en: '| rotation_speed | (dynamicsymbol) Generalized speed corresponding to the angular
    velocity. |'
  prefs: []
  type: TYPE_TB
- en: '| planar_speeds | (Matrix) Two generalized speeds used for the planar translation
    velocity. |'
  prefs: []
  type: TYPE_TB
- en: '| coordinates | (Matrix) Matrix of the joint’s generalized coordinates. |'
  prefs: []
  type: TYPE_TB
- en: '| speeds | (Matrix) Matrix of the joint’s generalized speeds. |'
  prefs: []
  type: TYPE_TB
- en: '| parent_point | (Point) Attachment point where the joint is fixed to the parent
    body. |'
  prefs: []
  type: TYPE_TB
- en: '| child_point | (Point) Attachment point where the joint is fixed to the child
    body. |'
  prefs: []
  type: TYPE_TB
- en: '| parent_interframe | (ReferenceFrame) Intermediate frame of the parent body
    with respect to which the joint transformation is formulated. |'
  prefs: []
  type: TYPE_TB
- en: '| child_interframe | (ReferenceFrame) Intermediate frame of the child body
    with respect to which the joint transformation is formulated. |'
  prefs: []
  type: TYPE_TB
- en: '| kdes | (Matrix) Kinematical differential equations of the joint. |'
  prefs: []
  type: TYPE_TB
- en: '| rotation_axis | (Vector) The axis about which the rotation occurs. |'
  prefs: []
  type: TYPE_TB
- en: '| planar_vectors | (list) The vectors that describe the planar translation
    directions. |'
  prefs: []
  type: TYPE_TB
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: Two generalized coordinates used for the planar translation.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: Two generalized speeds used for the planar translation velocity.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: The vectors that describe the planar translation directions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: The axis about which the rotation occurs.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: Generalized coordinate corresponding to the rotation angle.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: Generalized speed corresponding to the angular velocity.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: Spherical (Ball-and-Socket) Joint.
  prefs: []
  type: TYPE_NORMAL
- en: '[![../../../../_images/SphericalJoint.svg](../Images/33c4e2644f54b50513806829019ff82b.png)](../../../../_images/SphericalJoint.svg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**name** : string'
  prefs: []
  type: TYPE_NORMAL
- en: A unique name for the joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent** : Particle or RigidBody or Body'
  prefs: []
  type: TYPE_NORMAL
- en: The parent body of joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child** : Particle or RigidBody or Body'
  prefs: []
  type: TYPE_NORMAL
- en: The child body of joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**coordinates: iterable of dynamicsymbols, optional**'
  prefs: []
  type: TYPE_NORMAL
- en: Generalized coordinates of the joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**speeds** : iterable of dynamicsymbols, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Generalized speeds of joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent_point** : Point or Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Attachment point where the joint is fixed to the parent body. If a vector is
    provided, then the attachment point is computed by adding the vector to the body’s
    mass center. The default value is the parent’s mass center.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child_point** : Point or Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Attachment point where the joint is fixed to the child body. If a vector is
    provided, then the attachment point is computed by adding the vector to the body’s
    mass center. The default value is the child’s mass center.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent_interframe** : ReferenceFrame, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Intermediate frame of the parent body with respect to which the joint transformation
    is formulated. If a Vector is provided then an interframe is created which aligns
    its X axis with the given vector. The default value is the parent’s own frame.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child_interframe** : ReferenceFrame, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Intermediate frame of the child body with respect to which the joint transformation
    is formulated. If a Vector is provided then an interframe is created which aligns
    its X axis with the given vector. The default value is the child’s own frame.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**rot_type** : str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'The method used to generate the direction cosine matrix. Supported methods
    are:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`''Body''`: three successive rotations about new intermediate axes, also called
    “Euler and Tait-Bryan angles”'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`''Space''`: three successive rotations about the parent frames’ unit vectors'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The default method is `'Body'`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**amounts :**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Expressions defining the rotation angles or direction cosine matrix. These
    must match the `rot_type`. See examples below for details. The input types are:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`''Body''`: 3-tuple of expressions, symbols, or functions'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`''Space''`: 3-tuple of expressions, symbols, or functions'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The default amounts are the given `coordinates`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**rot_order** : str or int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If applicable, the order of the successive of rotations. The string `'123'`
    and integer `123` are equivalent, for example. Required for `'Body'` and `'Space'`.
    The default value is `123`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: A spherical joint is defined such that the child body is free to rotate in any
    direction, without allowing a translation of the `child_point`. As can also be
    seen in the image, the `parent_point` and `child_point` are fixed on top of each
    other, i.e. the `joint_point`. This rotation is defined using the [`parent_interframe.orient(child_interframe,
    rot_type, amounts, rot_order)`](../../vector/api/classes.html#sympy.physics.vector.frame.ReferenceFrame.orient
    "sympy.physics.vector.frame.ReferenceFrame.orient") method. The default rotation
    consists of three relative rotations, i.e. body-fixed rotations. Based on the
    direction cosine matrix following from these rotations, the angular velocity is
    computed based on the generalized coordinates and generalized speeds.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'A single spherical joint is created from two bodies and has the following basic
    attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: To further demonstrate the use of the spherical joint, the kinematics of a spherical
    joint with a ZXZ rotation can be created as follows.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: First create bodies to represent the fixed floor and a pendulum bob.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: The joint will connect the bob to the floor, with the joint located at a distance
    of `l1` from the child’s center of mass and the rotation set to a body-fixed ZXZ
    rotation.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: Now that the joint is established, the kinematics of the connected body can
    be accessed.
  prefs: []
  type: TYPE_NORMAL
- en: 'The position of the bob’s masscenter is found with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: The angular velocities of the pendulum link can be computed with respect to
    the floor.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: Finally, the linear velocity of the bob’s center of mass can be computed.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs: []
  type: TYPE_NORMAL
- en: '| name | (string) The joint’s name. |'
  prefs: []
  type: TYPE_TB
- en: '| parent | (Particle or RigidBody or Body) The joint’s parent body. |'
  prefs: []
  type: TYPE_TB
- en: '| child | (Particle or RigidBody or Body) The joint’s child body. |'
  prefs: []
  type: TYPE_TB
- en: '| coordinates | (Matrix) Matrix of the joint’s generalized coordinates. |'
  prefs: []
  type: TYPE_TB
- en: '| speeds | (Matrix) Matrix of the joint’s generalized speeds. |'
  prefs: []
  type: TYPE_TB
- en: '| parent_point | (Point) Attachment point where the joint is fixed to the parent
    body. |'
  prefs: []
  type: TYPE_TB
- en: '| child_point | (Point) Attachment point where the joint is fixed to the child
    body. |'
  prefs: []
  type: TYPE_TB
- en: '| parent_interframe | (ReferenceFrame) Intermediate frame of the parent body
    with respect to which the joint transformation is formulated. |'
  prefs: []
  type: TYPE_TB
- en: '| child_interframe | (ReferenceFrame) Intermediate frame of the child body
    with respect to which the joint transformation is formulated. |'
  prefs: []
  type: TYPE_TB
- en: '| kdes | (Matrix) Kinematical differential equations of the joint. |'
  prefs: []
  type: TYPE_TB
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: Weld Joint.
  prefs: []
  type: TYPE_NORMAL
- en: <svg overflow="hidden" version="1.1" class="align-center" width="500" viewBox="0
    0 351.14169 248.66788"><g transform="matrix(.19263016 0 0 .19263016 -204.31056
    -163.85541)" clip-path="url(#a)"><text transform="translate(1745.95,2052)" fill="CurrentColor"
    font-family="Arial, Arial_MSFontService, sans-serif" font-size="83.0607px" font-weight="400">attachment
    points</text> <text x="1093.09" y="1869.6174" fill="#008000" font-family="Arial,
    Arial_MSFontService, sans-serif" font-size="83.0607px" font-weight="400">parent.masscenter</text>
    <text transform="translate(1663.07,1123)" fill="#0070c0" font-family="Arial, Arial_MSFontService,
    sans-serif" font-size="83.0607px" font-weight="400">child.masscenter</text> <text
    transform="translate(1143.27,1455)" fill="#008000" font-family="Arial, Arial_MSFontService,
    sans-serif" font-size="83.0607px" font-weight="400">parent.frame</text> <text
    transform="translate(2394.69,1074)" fill="#0070c0" font-family="Arial, Arial_MSFontService,
    sans-serif" font-size="83.0607px" font-weight="400">child.frame</text> <text transform="translate(1603.59,1357)"
    fill="CurrentColor" font-family="Arial, Arial_MSFontService, sans-serif" font-size="83.0607px"
    font-weight="400">attachment frames</text></g></svg>
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**name** : string'
  prefs: []
  type: TYPE_NORMAL
- en: A unique name for the joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent** : Particle or RigidBody or Body'
  prefs: []
  type: TYPE_NORMAL
- en: The parent body of joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child** : Particle or RigidBody or Body'
  prefs: []
  type: TYPE_NORMAL
- en: The child body of joint.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent_point** : Point or Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Attachment point where the joint is fixed to the parent body. If a vector is
    provided, then the attachment point is computed by adding the vector to the body’s
    mass center. The default value is the parent’s mass center.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child_point** : Point or Vector, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Attachment point where the joint is fixed to the child body. If a vector is
    provided, then the attachment point is computed by adding the vector to the body’s
    mass center. The default value is the child’s mass center.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**parent_interframe** : ReferenceFrame, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Intermediate frame of the parent body with respect to which the joint transformation
    is formulated. If a Vector is provided then an interframe is created which aligns
    its X axis with the given vector. The default value is the parent’s own frame.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**child_interframe** : ReferenceFrame, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Intermediate frame of the child body with respect to which the joint transformation
    is formulated. If a Vector is provided then an interframe is created which aligns
    its X axis with the given vector. The default value is the child’s own frame.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: A weld joint is defined such that there is no relative motion between the child
    and parent bodies. The direction cosine matrix between the attachment frame (`parent_interframe`
    and `child_interframe`) is the identity matrix and the attachment points (`parent_point`
    and `child_point`) are coincident. The page on the joints framework gives a more
    detailed explanation of the intermediate frames.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'A single weld joint is created from two bodies and has the following basic
    attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: 'To further demonstrate the use of the weld joint, two relatively-fixed bodies
    rotated by a quarter turn about the Y axis can be created as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: First create the bodies to represent the parent and rotated child body.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: Next the intermediate frame specifying the fixed rotation with respect to the
    parent can be created.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: The weld between the parent body and child body is located at a distance `l1`
    from the parent’s center of mass in the X direction and `l2` from the child’s
    center of mass in the child’s negative X direction.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: 'Now that the joint has been established, the kinematics of the bodies can be
    accessed. The direction cosine matrix of the child body with respect to the parent
    can be found:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: 'As can also been seen from the direction cosine matrix, the parent X axis is
    aligned with the child’s Z axis: >>> parent.x == child.z True'
  prefs: []
  type: TYPE_NORMAL
- en: 'The position of the child’s center of mass with respect to the parent’s center
    of mass can be found with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: The angular velocity of the child with respect to the parent is 0 as one would
    expect.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs: []
  type: TYPE_NORMAL
- en: '| name | (string) The joint’s name. |'
  prefs: []
  type: TYPE_TB
- en: '| parent | (Particle or RigidBody or Body) The joint’s parent body. |'
  prefs: []
  type: TYPE_TB
- en: '| child | (Particle or RigidBody or Body) The joint’s child body. |'
  prefs: []
  type: TYPE_TB
- en: '| coordinates | (Matrix) Matrix of the joint’s generalized coordinates. The
    default value is `dynamicsymbols(f''q_{joint.name}'')`. |'
  prefs: []
  type: TYPE_TB
- en: '| speeds | (Matrix) Matrix of the joint’s generalized speeds. The default value
    is `dynamicsymbols(f''u_{joint.name}'')`. |'
  prefs: []
  type: TYPE_TB
- en: '| parent_point | (Point) Attachment point where the joint is fixed to the parent
    body. |'
  prefs: []
  type: TYPE_TB
- en: '| child_point | (Point) Attachment point where the joint is fixed to the child
    body. |'
  prefs: []
  type: TYPE_TB
- en: '| parent_interframe | (ReferenceFrame) Intermediate frame of the parent body
    with respect to which the joint transformation is formulated. |'
  prefs: []
  type: TYPE_TB
- en: '| child_interframe | (ReferenceFrame) Intermediate frame of the child body
    with respect to which the joint transformation is formulated. |'
  prefs: []
  type: TYPE_TB
- en: '| kdes | (Matrix) Kinematical differential equations of the joint. |'
  prefs: []
  type: TYPE_TB
