- en: numpy.errstate
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.errstate.html](https://numpy.org/doc/1.26/reference/generated/numpy.errstate.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Context manager for floating-point error handling.
  prefs: []
  type: TYPE_NORMAL
- en: Using an instance of [`errstate`](#numpy.errstate "numpy.errstate") as a context
    manager allows statements in that context to execute with a known error handling
    behavior. Upon entering the context the error handling is set with [`seterr`](numpy.seterr.html#numpy.seterr
    "numpy.seterr") and [`seterrcall`](numpy.seterrcall.html#numpy.seterrcall "numpy.seterrcall"),
    and upon exiting it is reset to what it was before.
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 1.17.0: [`errstate`](#numpy.errstate "numpy.errstate") is
    also usable as a function decorator, saving a level of indentation if an entire
    function is wrapped. See [`contextlib.ContextDecorator`](https://docs.python.org/3/library/contextlib.html#contextlib.ContextDecorator
    "(in Python v3.11)") for more information.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**kwargs**{divide, over, under, invalid}'
  prefs: []
  type: TYPE_NORMAL
- en: Keyword arguments. The valid keywords are the possible floating-point exceptions.
    Each keyword should have a string value that defines the treatment for the particular
    error. Possible values are {‘ignore’, ‘warn’, ‘raise’, ‘call’, ‘print’, ‘log’}.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`seterr`](numpy.seterr.html#numpy.seterr "numpy.seterr"), [`geterr`](numpy.geterr.html#numpy.geterr
    "numpy.geterr"), [`seterrcall`](numpy.seterrcall.html#numpy.seterrcall "numpy.seterrcall"),
    [`geterrcall`](numpy.geterrcall.html#numpy.geterrcall "numpy.geterrcall")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: For complete documentation of the types of floating-point exceptions and treatment
    options, see [`seterr`](numpy.seterr.html#numpy.seterr "numpy.seterr").
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Outside the context the error handling behavior has not changed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`__call__`](numpy.errstate.__call__.html#numpy.errstate.__call__ "numpy.errstate.__call__")(func)
    | Call self as a function. |'
  prefs: []
  type: TYPE_TB
