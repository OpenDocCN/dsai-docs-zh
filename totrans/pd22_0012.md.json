["```py\n    In [8]: air_quality = pd.concat([air_quality_pm25, air_quality_no2], axis=0)\n\n    In [9]: air_quality.head()\n    Out[9]: \n     date.utc location parameter  value\n    0  2019-06-18 06:00:00+00:00  BETR801      pm25   18.0\n    1  2019-06-17 08:00:00+00:00  BETR801      pm25    6.5\n    2  2019-06-17 07:00:00+00:00  BETR801      pm25   18.5\n    3  2019-06-17 06:00:00+00:00  BETR801      pm25   16.0\n    4  2019-06-17 05:00:00+00:00  BETR801      pm25    7.5 \n    ```", "```py\nIn [10]: print('Shape of the ``air_quality_pm25`` table: ', air_quality_pm25.shape)\nShape of the ``air_quality_pm25`` table:  (1110, 4)\n\nIn [11]: print('Shape of the ``air_quality_no2`` table: ', air_quality_no2.shape)\nShape of the ``air_quality_no2`` table:  (2068, 4)\n\nIn [12]: print('Shape of the resulting ``air_quality`` table: ', air_quality.shape)\nShape of the resulting ``air_quality`` table:  (3178, 4) \n```", "```py\nIn [13]: air_quality = air_quality.sort_values(\"date.utc\")\n\nIn [14]: air_quality.head()\nOut[14]: \n date.utc            location parameter  value\n2067  2019-05-07 01:00:00+00:00  London Westminster       no2   23.0\n1003  2019-05-07 01:00:00+00:00             FR04014       no2   25.0\n100   2019-05-07 01:00:00+00:00             BETR801      pm25   12.5\n1098  2019-05-07 01:00:00+00:00             BETR801       no2   50.5\n1109  2019-05-07 01:00:00+00:00  London Westminster      pm25    8.0 \n```", "```py\nIn [15]: air_quality_ = pd.concat([air_quality_pm25, air_quality_no2], keys=[\"PM25\", \"NO2\"])\n\nIn [16]: air_quality_.head()\nOut[16]: \n date.utc location parameter  value\nPM25 0  2019-06-18 06:00:00+00:00  BETR801      pm25   18.0\n 1  2019-06-17 08:00:00+00:00  BETR801      pm25    6.5\n 2  2019-06-17 07:00:00+00:00  BETR801      pm25   18.5\n 3  2019-06-17 06:00:00+00:00  BETR801      pm25   16.0\n 4  2019-06-17 05:00:00+00:00  BETR801      pm25    7.5 \n```", "```py\n    In [17]: stations_coord = pd.read_csv(\"data/air_quality_stations.csv\")\n\n    In [18]: stations_coord.head()\n    Out[18]: \n     location  coordinates.latitude  coordinates.longitude\n    0  BELAL01              51.23619                4.38522\n    1  BELHB23              51.17030                4.34100\n    2  BELLD01              51.10998                5.00486\n    3  BELLD02              51.12038                5.02155\n    4  BELR833              51.32766                4.36226 \n    ```", "```py\n    In [19]: air_quality.head()\n    Out[19]: \n     date.utc            location parameter  value\n    2067  2019-05-07 01:00:00+00:00  London Westminster       no2   23.0\n    1003  2019-05-07 01:00:00+00:00             FR04014       no2   25.0\n    100   2019-05-07 01:00:00+00:00             BETR801      pm25   12.5\n    1098  2019-05-07 01:00:00+00:00             BETR801       no2   50.5\n    1109  2019-05-07 01:00:00+00:00  London Westminster      pm25    8.0 \n    ```", "```py\n    In [20]: air_quality = pd.merge(air_quality, stations_coord, how=\"left\", on=\"location\")\n\n    In [21]: air_quality.head()\n    Out[21]: \n     date.utc  ... coordinates.longitude\n    0  2019-05-07 01:00:00+00:00  ...              -0.13193\n    1  2019-05-07 01:00:00+00:00  ...               2.39390\n    2  2019-05-07 01:00:00+00:00  ...               2.39390\n    3  2019-05-07 01:00:00+00:00  ...               4.43182\n    4  2019-05-07 01:00:00+00:00  ...               4.43182\n\n    [5 rows x 6 columns] \n    ```", "```py\n    In [22]: air_quality_parameters = pd.read_csv(\"data/air_quality_parameters.csv\")\n\n    In [23]: air_quality_parameters.head()\n    Out[23]: \n     id                                        description  name\n    0    bc                                       Black Carbon    BC\n    1    co                                    Carbon Monoxide    CO\n    2   no2                                   Nitrogen Dioxide   NO2\n    3    o3                                              Ozone    O3\n    4  pm10  Particulate matter less than 10 micrometers in...  PM10 \n    ```", "```py\n    In [24]: air_quality = pd.merge(air_quality, air_quality_parameters,\n     ....:                       how='left', left_on='parameter', right_on='id')\n     ....: \n\n    In [25]: air_quality.head()\n    Out[25]: \n     date.utc  ...   name\n    0  2019-05-07 01:00:00+00:00  ...    NO2\n    1  2019-05-07 01:00:00+00:00  ...    NO2\n    2  2019-05-07 01:00:00+00:00  ...    NO2\n    3  2019-05-07 01:00:00+00:00  ...  PM2.5\n    4  2019-05-07 01:00:00+00:00  ...    NO2\n\n    [5 rows x 9 columns] \n    ```", "```py\n    In [8]: air_quality = pd.concat([air_quality_pm25, air_quality_no2], axis=0)\n\n    In [9]: air_quality.head()\n    Out[9]: \n     date.utc location parameter  value\n    0  2019-06-18 06:00:00+00:00  BETR801      pm25   18.0\n    1  2019-06-17 08:00:00+00:00  BETR801      pm25    6.5\n    2  2019-06-17 07:00:00+00:00  BETR801      pm25   18.5\n    3  2019-06-17 06:00:00+00:00  BETR801      pm25   16.0\n    4  2019-06-17 05:00:00+00:00  BETR801      pm25    7.5 \n    ```", "```py\nIn [10]: print('Shape of the ``air_quality_pm25`` table: ', air_quality_pm25.shape)\nShape of the ``air_quality_pm25`` table:  (1110, 4)\n\nIn [11]: print('Shape of the ``air_quality_no2`` table: ', air_quality_no2.shape)\nShape of the ``air_quality_no2`` table:  (2068, 4)\n\nIn [12]: print('Shape of the resulting ``air_quality`` table: ', air_quality.shape)\nShape of the resulting ``air_quality`` table:  (3178, 4) \n```", "```py\nIn [13]: air_quality = air_quality.sort_values(\"date.utc\")\n\nIn [14]: air_quality.head()\nOut[14]: \n date.utc            location parameter  value\n2067  2019-05-07 01:00:00+00:00  London Westminster       no2   23.0\n1003  2019-05-07 01:00:00+00:00             FR04014       no2   25.0\n100   2019-05-07 01:00:00+00:00             BETR801      pm25   12.5\n1098  2019-05-07 01:00:00+00:00             BETR801       no2   50.5\n1109  2019-05-07 01:00:00+00:00  London Westminster      pm25    8.0 \n```", "```py\nIn [15]: air_quality_ = pd.concat([air_quality_pm25, air_quality_no2], keys=[\"PM25\", \"NO2\"])\n\nIn [16]: air_quality_.head()\nOut[16]: \n date.utc location parameter  value\nPM25 0  2019-06-18 06:00:00+00:00  BETR801      pm25   18.0\n 1  2019-06-17 08:00:00+00:00  BETR801      pm25    6.5\n 2  2019-06-17 07:00:00+00:00  BETR801      pm25   18.5\n 3  2019-06-17 06:00:00+00:00  BETR801      pm25   16.0\n 4  2019-06-17 05:00:00+00:00  BETR801      pm25    7.5 \n```", "```py\n    In [17]: stations_coord = pd.read_csv(\"data/air_quality_stations.csv\")\n\n    In [18]: stations_coord.head()\n    Out[18]: \n     location  coordinates.latitude  coordinates.longitude\n    0  BELAL01              51.23619                4.38522\n    1  BELHB23              51.17030                4.34100\n    2  BELLD01              51.10998                5.00486\n    3  BELLD02              51.12038                5.02155\n    4  BELR833              51.32766                4.36226 \n    ```", "```py\n    In [19]: air_quality.head()\n    Out[19]: \n     date.utc            location parameter  value\n    2067  2019-05-07 01:00:00+00:00  London Westminster       no2   23.0\n    1003  2019-05-07 01:00:00+00:00             FR04014       no2   25.0\n    100   2019-05-07 01:00:00+00:00             BETR801      pm25   12.5\n    1098  2019-05-07 01:00:00+00:00             BETR801       no2   50.5\n    1109  2019-05-07 01:00:00+00:00  London Westminster      pm25    8.0 \n    ```", "```py\n    In [20]: air_quality = pd.merge(air_quality, stations_coord, how=\"left\", on=\"location\")\n\n    In [21]: air_quality.head()\n    Out[21]: \n     date.utc  ... coordinates.longitude\n    0  2019-05-07 01:00:00+00:00  ...              -0.13193\n    1  2019-05-07 01:00:00+00:00  ...               2.39390\n    2  2019-05-07 01:00:00+00:00  ...               2.39390\n    3  2019-05-07 01:00:00+00:00  ...               4.43182\n    4  2019-05-07 01:00:00+00:00  ...               4.43182\n\n    [5 rows x 6 columns] \n    ```", "```py\n    In [22]: air_quality_parameters = pd.read_csv(\"data/air_quality_parameters.csv\")\n\n    In [23]: air_quality_parameters.head()\n    Out[23]: \n     id                                        description  name\n    0    bc                                       Black Carbon    BC\n    1    co                                    Carbon Monoxide    CO\n    2   no2                                   Nitrogen Dioxide   NO2\n    3    o3                                              Ozone    O3\n    4  pm10  Particulate matter less than 10 micrometers in...  PM10 \n    ```", "```py\n    In [24]: air_quality = pd.merge(air_quality, air_quality_parameters,\n     ....:                       how='left', left_on='parameter', right_on='id')\n     ....: \n\n    In [25]: air_quality.head()\n    Out[25]: \n     date.utc  ...   name\n    0  2019-05-07 01:00:00+00:00  ...    NO2\n    1  2019-05-07 01:00:00+00:00  ...    NO2\n    2  2019-05-07 01:00:00+00:00  ...    NO2\n    3  2019-05-07 01:00:00+00:00  ...  PM2.5\n    4  2019-05-07 01:00:00+00:00  ...    NO2\n\n    [5 rows x 9 columns] \n    ```"]