- en: numpy.emath.log
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.emath.log.html](https://numpy.org/doc/1.26/reference/generated/numpy.emath.log.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute the natural logarithm of *x*.
  prefs: []
  type: TYPE_NORMAL
- en: Return the “principal value” (for a description of this, see [`numpy.log`](numpy.log.html#numpy.log
    "numpy.log")) of \(log_e(x)\). For real *x > 0*, this is a real number (`log(0)`
    returns `-inf` and `log(np.inf)` returns `inf`). Otherwise, the complex principle
    value is returned.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The value(s) whose log is (are) required.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray or scalar'
  prefs: []
  type: TYPE_NORMAL
- en: The log of the *x* value(s). If *x* was a scalar, so is *out*, otherwise an
    array is returned.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.log`](numpy.log.html#numpy.log "numpy.log")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: For a log() that returns `NAN` when real *x < 0*, use [`numpy.log`](numpy.log.html#numpy.log
    "numpy.log") (note, however, that otherwise [`numpy.log`](numpy.log.html#numpy.log
    "numpy.log") and this [`log`](numpy.log.html#numpy.log "numpy.log") are identical,
    i.e., both return `-inf` for *x = 0*, `inf` for *x = inf*, and, notably, the complex
    principle value if `x.imag != 0`).
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Negative arguments are handled “correctly” (recall that `exp(log(x)) == x`
    does *not* hold for real `x < 0`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
