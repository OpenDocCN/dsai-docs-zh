- en: Version 0.20.1 (May 5, 2017)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/whatsnew/v0.20.0.html](https://pandas.pydata.org/docs/whatsnew/v0.20.0.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This is a major release from 0.19.2 and includes a number of API changes, deprecations,
    new features, enhancements, and performance improvements along with a large number
    of bug fixes. We recommend that all users upgrade to this version.
  prefs: []
  type: TYPE_NORMAL
- en: 'Highlights include:'
  prefs: []
  type: TYPE_NORMAL
- en: New `.agg()` API for Series/DataFrame similar to the groupby-rolling-resample
    API’s, see [here](#whatsnew-0200-enhancements-agg)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integration with the `feather-format`, including a new top-level `pd.read_feather()`
    and `DataFrame.to_feather()` method, see [here](../user_guide/io.html#io-feather).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `.ix` indexer has been deprecated, see [here](#whatsnew-0200-api-breaking-deprecate-ix)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Panel` has been deprecated, see [here](#whatsnew-0200-api-breaking-deprecate-panel)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Addition of an `IntervalIndex` and `Interval` scalar type, see [here](#whatsnew-0200-enhancements-intervalindex)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved user API when grouping by index levels in `.groupby()`, see [here](#whatsnew-0200-enhancements-groupby-access)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved support for `UInt64` dtypes, see [here](#whatsnew-0200-enhancements-uint64-support)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A new orient for JSON serialization, `orient='table'`, that uses the Table Schema
    spec and that gives the possibility for a more interactive repr in the Jupyter
    Notebook, see [here](#whatsnew-0200-enhancements-table-schema)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Experimental support for exporting styled DataFrames (`DataFrame.style`) to
    Excel, see [here](#whatsnew-0200-enhancements-style-excel)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Window binary corr/cov operations now return a MultiIndexed `DataFrame` rather
    than a `Panel`, as `Panel` is now deprecated, see [here](#whatsnew-0200-api-breaking-rolling-pairwise)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Support for S3 handling now uses `s3fs`, see [here](#whatsnew-0200-api-breaking-s3)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Google BigQuery support now uses the `pandas-gbq` library, see [here](#whatsnew-0200-api-breaking-gbq)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: pandas has changed the internal structure and layout of the code base. This
    can affect imports that are not from the top-level `pandas.*` namespace, please
    see the changes [here](#whatsnew-0200-privacy).
  prefs: []
  type: TYPE_NORMAL
- en: Check the [API Changes](#whatsnew-0200-api-breaking) and [deprecations](#whatsnew-0200-deprecations)
    before updating.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: This is a combined release for 0.20.0 and 0.20.1. Version 0.20.1 contains one
    additional change for backwards-compatibility with downstream projects using pandas’
    `utils` routines. ([GH 16250](https://github.com/pandas-dev/pandas/issues/16250))
  prefs: []
  type: TYPE_NORMAL
- en: What’s new in v0.20.0
  prefs: []
  type: TYPE_NORMAL
- en: '[New features](#new-features)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Method `agg` API for DataFrame/Series](#method-agg-api-for-dataframe-series)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Keyword argument `dtype` for data IO](#keyword-argument-dtype-for-data-io)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Method `.to_datetime()` has gained an `origin` parameter](#method-to-datetime-has-gained-an-origin-parameter)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[GroupBy enhancements](#groupby-enhancements)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Better support for compressed URLs in `read_csv`](#better-support-for-compressed-urls-in-read-csv)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Pickle file IO now supports compression](#pickle-file-io-now-supports-compression)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[UInt64 support improved](#uint64-support-improved)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[GroupBy on categoricals](#groupby-on-categoricals)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Table schema output](#table-schema-output)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SciPy sparse matrix from/to SparseDataFrame](#scipy-sparse-matrix-from-to-sparsedataframe)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Excel output for styled DataFrames](#excel-output-for-styled-dataframes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[IntervalIndex](#intervalindex)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Other enhancements](#other-enhancements)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Backwards incompatible API changes](#backwards-incompatible-api-changes)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Possible incompatibility for HDF5 formats created with pandas < 0.13.0](#possible-incompatibility-for-hdf5-formats-created-with-pandas-0-13-0)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Map on Index types now return other Index types](#map-on-index-types-now-return-other-index-types)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Accessing datetime fields of Index now return Index](#accessing-datetime-fields-of-index-now-return-index)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pd.unique will now be consistent with extension types](#pd-unique-will-now-be-consistent-with-extension-types)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[S3 file handling](#s3-file-handling)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Partial string indexing changes](#partial-string-indexing-changes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Concat of different float dtypes will not automatically upcast](#concat-of-different-float-dtypes-will-not-automatically-upcast)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas Google BigQuery support has moved](#pandas-google-bigquery-support-has-moved)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Memory usage for Index is more accurate](#memory-usage-for-index-is-more-accurate)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[DataFrame.sort_index changes](#dataframe-sort-index-changes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[GroupBy describe formatting](#groupby-describe-formatting)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Window binary corr/cov operations return a MultiIndex DataFrame](#window-binary-corr-cov-operations-return-a-multiindex-dataframe)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[HDFStore where string comparison](#hdfstore-where-string-comparison)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Index.intersection and inner join now preserve the order of the left Index](#index-intersection-and-inner-join-now-preserve-the-order-of-the-left-index)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Pivot table always returns a DataFrame](#pivot-table-always-returns-a-dataframe)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Other API changes](#other-api-changes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Reorganization of the library: privacy changes](#reorganization-of-the-library-privacy-changes)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Modules privacy has changed](#modules-privacy-has-changed)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.errors`](#pandas-errors)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.testing`](#pandas-testing)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.plotting`](#pandas-plotting)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Other development changes](#other-development-changes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Deprecations](#deprecations)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Deprecate `.ix`](#deprecate-ix)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Deprecate Panel](#deprecate-panel)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Deprecate groupby.agg() with a dictionary when renaming](#deprecate-groupby-agg-with-a-dictionary-when-renaming)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Deprecate .plotting](#deprecate-plotting)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Other deprecations](#other-deprecations)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Removal of prior version deprecations/changes](#removal-of-prior-version-deprecations-changes)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Performance improvements](#performance-improvements)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Bug fixes](#bug-fixes)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Conversion](#conversion)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Indexing](#indexing)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[IO](#io)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Plotting](#plotting)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[GroupBy/resample/rolling](#groupby-resample-rolling)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Sparse](#sparse)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Reshaping](#reshaping)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Numeric](#numeric)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Other](#other)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Contributors](#contributors)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## New features'
  prefs: []
  type: TYPE_NORMAL
- en: '### Method `agg` API for DataFrame/Series'
  prefs: []
  type: TYPE_NORMAL
- en: Series & DataFrame have been enhanced to support the aggregation API. This is
    a familiar API from groupby, window operations, and resampling. This allows aggregation
    operations in a concise way by using [`agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") and [`transform()`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform"). The full documentation is [here](../user_guide/basics.html#basics-aggregate)
    ([GH 1623](https://github.com/pandas-dev/pandas/issues/1623)).
  prefs: []
  type: TYPE_NORMAL
- en: Here is a sample
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: One can operate using string function names, callables, lists, or dictionaries
    of these.
  prefs: []
  type: TYPE_NORMAL
- en: Using a single function is equivalent to `.apply`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Multiple aggregations with a list of functions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Using a dict provides the ability to apply specific aggregations per column.
    You will get a matrix-like output of all of the aggregators. The output has one
    column per unique function. Those functions applied to a particular column will
    be `NaN`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The API also supports a `.transform()` function for broadcasting results.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: When presented with mixed dtypes that cannot be aggregated, `.agg()` will only
    take the valid aggregations. This is similar to how groupby `.agg()` works. ([GH
    15015](https://github.com/pandas-dev/pandas/issues/15015))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]  ### Keyword argument `dtype` for data IO'
  prefs: []
  type: TYPE_NORMAL
- en: The `'python'` engine for [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), as well as the [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf") function for parsing fixed-width text files and [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") for parsing Excel files, now accept the `dtype` keyword argument
    for specifying the types of specific columns ([GH 14295](https://github.com/pandas-dev/pandas/issues/14295)).
    See the [io docs](../user_guide/io.html#io-dtypes) for more information.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]  ### Method `.to_datetime()` has gained an `origin` parameter'
  prefs: []
  type: TYPE_NORMAL
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") has gained a new parameter, `origin`, to define a reference
    date from where to compute the resulting timestamps when parsing numerical values
    with a specific `unit` specified. ([GH 11276](https://github.com/pandas-dev/pandas/issues/11276),
    [GH 11745](https://github.com/pandas-dev/pandas/issues/11745))'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, with 1960-01-01 as the starting date:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: The default is set at `origin='unix'`, which defaults to `1970-01-01 00:00:00`,
    which is commonly called ‘unix epoch’ or POSIX time. This was the previous default,
    so this is a backward compatible change.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]  ### GroupBy enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: Strings passed to `DataFrame.groupby()` as the `by` parameter may now reference
    either column names or index level names. Previously, only column names could
    be referenced. This allows to easily group by a column and index level at the
    same time. ([GH 5677](https://github.com/pandas-dev/pandas/issues/5677))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]  ### Better support for compressed URLs in `read_csv`'
  prefs: []
  type: TYPE_NORMAL
- en: 'The compression code was refactored ([GH 12688](https://github.com/pandas-dev/pandas/issues/12688)).
    As a result, reading dataframes from URLs in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") or [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") now supports additional compression methods: `xz`, `bz2`,
    and `zip` ([GH 14570](https://github.com/pandas-dev/pandas/issues/14570)). Previously,
    only `gzip` compression was supported. By default, compression of URLs and paths
    are now inferred using their file extensions. Additionally, support for bz2 compression
    in the python 2 C-engine improved ([GH 14874](https://github.com/pandas-dev/pandas/issues/14874)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]  ### Pickle file IO now supports compression'
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle"), [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle") and [`Series.to_pickle()`](../reference/api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle") can now read from and write to compressed pickle files.
    Compression methods can be an explicit parameter or be inferred from the file
    extension. See [the docs here.](../user_guide/io.html#io-pickle-compression)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Using an explicit compression type
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'The default is to infer the compression type from the extension (`compression=''infer''`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]  ### UInt64 support improved'
  prefs: []
  type: TYPE_NORMAL
- en: pandas has significantly improved support for operations involving unsigned,
    or purely non-negative, integers. Previously, handling these integers would result
    in improper rounding or data-type casting, leading to incorrect results. Notably,
    a new numerical index, `UInt64Index`, has been created ([GH 14937](https://github.com/pandas-dev/pandas/issues/14937))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Bug in converting object elements of array-like objects to unsigned 64-bit integers
    ([GH 4471](https://github.com/pandas-dev/pandas/issues/4471), [GH 14982](https://github.com/pandas-dev/pandas/issues/14982))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.unique()` in which unsigned 64-bit integers were causing overflow
    ([GH 14721](https://github.com/pandas-dev/pandas/issues/14721))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame` construction in which unsigned 64-bit integer elements were
    being converted to objects ([GH 14881](https://github.com/pandas-dev/pandas/issues/14881))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` in which unsigned 64-bit integer elements were being
    improperly converted to the wrong data types ([GH 14983](https://github.com/pandas-dev/pandas/issues/14983))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.unique()` in which unsigned 64-bit integers were causing overflow
    ([GH 14915](https://github.com/pandas-dev/pandas/issues/14915))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in `pd.value_counts()` in which unsigned 64-bit integers were being erroneously
    truncated in the output ([GH 14934](https://github.com/pandas-dev/pandas/issues/14934))  ###
    GroupBy on categoricals'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In previous versions, `.groupby(..., sort=False)` would fail with a `ValueError`
    when grouping on a categorical series with some categories not appearing in the
    data. ([GH 13179](https://github.com/pandas-dev/pandas/issues/13179))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '**Previous behavior**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '**New behavior**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]  ### Table schema output'
  prefs: []
  type: TYPE_NORMAL
- en: The new orient `'table'` for [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") will generate a [Table Schema](http://specs.frictionlessdata.io/json-table-schema/)
    compatible string representation of the data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'See [IO: Table Schema for more information](../user_guide/io.html#io-table-schema).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Additionally, the repr for `DataFrame` and `Series` can now publish this JSON
    Table schema representation of the Series or DataFrame if you are using IPython
    (or another frontend like [nteract](https://nteract.io/) using the Jupyter messaging
    protocol). This gives frontends like the Jupyter notebook and [nteract](https://nteract.io/)
    more flexibility in how they display pandas objects, since they have more information
    about the data. You must enable this by setting the `display.html.table_schema`
    option to `True`.  ### SciPy sparse matrix from/to SparseDataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: pandas now supports creating sparse dataframes directly from `scipy.sparse.spmatrix`
    instances. See the [documentation](../user_guide/sparse.html#sparse-scipysparse)
    for more information. ([GH 4343](https://github.com/pandas-dev/pandas/issues/4343))
  prefs: []
  type: TYPE_NORMAL
- en: All sparse formats are supported, but matrices that are not in [`COOrdinate`](https://docs.scipy.org/doc/scipy/reference/sparse.html#module-scipy.sparse
    "(in SciPy v1.13.0)") format will be converted, copying data as needed.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'To convert a `SparseDataFrame` back to sparse SciPy matrix in COO format, you
    can use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]  ### Excel output for styled DataFrames'
  prefs: []
  type: TYPE_NORMAL
- en: Experimental support has been added to export `DataFrame.style` formats to Excel
    using the `openpyxl` engine. ([GH 15530](https://github.com/pandas-dev/pandas/issues/15530))
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, after running the following, `styled.xlsx` renders as below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: '![../_images/style-excel.png](../Images/505788a349a16f9c1e79c489901cfc1f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'See the [Style documentation](../user_guide/style.html#Export-to-Excel) for
    more detail.  ### IntervalIndex'
  prefs: []
  type: TYPE_NORMAL
- en: pandas has gained an `IntervalIndex` with its own dtype, `interval` as well
    as the `Interval` scalar type. These allow first-class support for interval notation,
    specifically as a return type for the categories in [`cut()`](../reference/api/pandas.cut.html#pandas.cut
    "pandas.cut") and [`qcut()`](../reference/api/pandas.qcut.html#pandas.qcut "pandas.qcut").
    The `IntervalIndex` allows some unique indexing, see the [docs](../user_guide/advanced.html#advanced-intervalindex).
    ([GH 7640](https://github.com/pandas-dev/pandas/issues/7640), [GH 8625](https://github.com/pandas-dev/pandas/issues/8625))
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: These indexing behaviors of the IntervalIndex are provisional and may change
    in a future version of pandas. Feedback on usage is welcome.
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: The returned categories were strings, representing Intervals
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: Furthermore, this allows one to bin *other* data with these same bins, with
    `NaN` representing a missing value similar to other dtypes.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: An `IntervalIndex` can also be used in `Series` and `DataFrame` as the index.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'Selecting via a specific interval:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: Selecting via a scalar value that is contained *in* the intervals.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]  ### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrame.rolling()` now accepts the parameter `closed=''right''|''left''|''both''|''neither''`
    to choose the rolling window-endpoint closedness. See the [documentation](../user_guide/window.html#window-endpoints)
    ([GH 13965](https://github.com/pandas-dev/pandas/issues/13965))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integration with the `feather-format`, including a new top-level `pd.read_feather()`
    and `DataFrame.to_feather()` method, see [here](../user_guide/io.html#io-feather).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.str.replace()` now accepts a callable, as replacement, which is passed
    to `re.sub` ([GH 15055](https://github.com/pandas-dev/pandas/issues/15055))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.str.replace()` now accepts a compiled regular expression as a pattern
    ([GH 15446](https://github.com/pandas-dev/pandas/issues/15446))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.sort_index` accepts parameters `kind` and `na_position` ([GH 13589](https://github.com/pandas-dev/pandas/issues/13589),
    [GH 14444](https://github.com/pandas-dev/pandas/issues/14444))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame` and `DataFrame.groupby()` have gained a `nunique()` method to count
    the distinct values over an axis ([GH 14336](https://github.com/pandas-dev/pandas/issues/14336),
    [GH 15197](https://github.com/pandas-dev/pandas/issues/15197)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame` has gained a `melt()` method, equivalent to `pd.melt()`, for unpivoting
    from a wide to long format ([GH 12640](https://github.com/pandas-dev/pandas/issues/12640)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_excel()` now preserves sheet order when using `sheetname=None` ([GH
    9930](https://github.com/pandas-dev/pandas/issues/9930))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Multiple offset aliases with decimal points are now supported (e.g. `0.5min`
    is parsed as `30s`) ([GH 8419](https://github.com/pandas-dev/pandas/issues/8419))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.isnull()` and `.notnull()` have been added to `Index` object to make them
    more consistent with the `Series` API ([GH 15300](https://github.com/pandas-dev/pandas/issues/15300))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New `UnsortedIndexError` (subclass of `KeyError`) raised when indexing/slicing
    into an unsorted MultiIndex ([GH 11897](https://github.com/pandas-dev/pandas/issues/11897)).
    This allows differentiation between errors due to lack of sorting or an incorrect
    key. See [here](../user_guide/advanced.html#advanced-unsorted)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`MultiIndex` has gained a `.to_frame()` method to convert to a `DataFrame`
    ([GH 12397](https://github.com/pandas-dev/pandas/issues/12397))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.cut` and `pd.qcut` now support datetime64 and timedelta64 dtypes ([GH 14714](https://github.com/pandas-dev/pandas/issues/14714),
    [GH 14798](https://github.com/pandas-dev/pandas/issues/14798))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.qcut` has gained the `duplicates=''raise''|''drop''` option to control
    whether to raise on duplicated edges ([GH 7751](https://github.com/pandas-dev/pandas/issues/7751))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series` provides a `to_excel` method to output Excel files ([GH 8825](https://github.com/pandas-dev/pandas/issues/8825))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `usecols` argument in `pd.read_csv()` now accepts a callable function as
    a value ([GH 14154](https://github.com/pandas-dev/pandas/issues/14154))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `skiprows` argument in `pd.read_csv()` now accepts a callable function as
    a value ([GH 10882](https://github.com/pandas-dev/pandas/issues/10882))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `nrows` and `chunksize` arguments in `pd.read_csv()` are supported if both
    are passed ([GH 6774](https://github.com/pandas-dev/pandas/issues/6774), [GH 15755](https://github.com/pandas-dev/pandas/issues/15755))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.plot` now prints a title above each subplot if `suplots=True` and
    `title` is a list of strings ([GH 14753](https://github.com/pandas-dev/pandas/issues/14753))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.plot` can pass the matplotlib 2.0 default color cycle as a single
    string as color parameter, see [here](http://matplotlib.org/2.0.0/users/colors.html#cn-color-selection).
    ([GH 15516](https://github.com/pandas-dev/pandas/issues/15516))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.interpolate()` now supports timedelta as an index type with `method=''time''`
    ([GH 6424](https://github.com/pandas-dev/pandas/issues/6424))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Addition of a `level` keyword to `DataFrame/Series.rename` to rename labels
    in the specified level of a MultiIndex ([GH 4160](https://github.com/pandas-dev/pandas/issues/4160)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.reset_index()` will now interpret a tuple `index.name` as a key
    spanning across levels of `columns`, if this is a `MultiIndex` ([GH 16164](https://github.com/pandas-dev/pandas/issues/16164))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Timedelta.isoformat` method added for formatting Timedeltas as an [ISO 8601
    duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). See the [Timedelta
    docs](../user_guide/timedeltas.html#timedeltas-isoformat) ([GH 15136](https://github.com/pandas-dev/pandas/issues/15136))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.select_dtypes()` now allows the string `datetimetz` to generically select
    datetimes with tz ([GH 14910](https://github.com/pandas-dev/pandas/issues/14910))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `.to_latex()` method will now accept `multicolumn` and `multirow` arguments
    to use the accompanying LaTeX enhancements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.merge_asof()` gained the option `direction=''backward''|''forward''|''nearest''`
    ([GH 14887](https://github.com/pandas-dev/pandas/issues/14887))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series/DataFrame.asfreq()` have gained a `fill_value` parameter, to fill missing
    values ([GH 3715](https://github.com/pandas-dev/pandas/issues/3715)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series/DataFrame.resample.asfreq` have gained a `fill_value` parameter, to
    fill missing values during resampling ([GH 3715](https://github.com/pandas-dev/pandas/issues/3715)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.util.hash_pandas_object()`](../reference/api/pandas.util.hash_pandas_object.html#pandas.util.hash_pandas_object
    "pandas.util.hash_pandas_object") has gained the ability to hash a `MultiIndex`
    ([GH 15224](https://github.com/pandas-dev/pandas/issues/15224))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series/DataFrame.squeeze()` have gained the `axis` parameter. ([GH 15339](https://github.com/pandas-dev/pandas/issues/15339))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.to_excel()` has a new `freeze_panes` parameter to turn on Freeze
    Panes when exporting to Excel ([GH 15160](https://github.com/pandas-dev/pandas/issues/15160))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_html()` will parse multiple header rows, creating a MultiIndex header.
    ([GH 13434](https://github.com/pandas-dev/pandas/issues/13434)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HTML table output skips `colspan` or `rowspan` attribute if equal to 1\. ([GH
    15403](https://github.com/pandas-dev/pandas/issues/15403))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.io.formats.style.Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") template now has blocks for easier extension,
    see the [example notebook](../user_guide/style.html#Subclassing) ([GH 15649](https://github.com/pandas-dev/pandas/issues/15649))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Styler.render()` now accepts `**kwargs` to allow user-defined variables in
    the template ([GH 15649](https://github.com/pandas-dev/pandas/issues/15649))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compatibility with Jupyter notebook 5.0; MultiIndex column labels are left-aligned
    and MultiIndex row-labels are top-aligned ([GH 15379](https://github.com/pandas-dev/pandas/issues/15379))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`TimedeltaIndex` now has a custom date-tick formatter specifically designed
    for nanosecond level precision ([GH 8711](https://github.com/pandas-dev/pandas/issues/8711))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.api.types.union_categoricals` gained the `ignore_ordered` argument to allow
    ignoring the ordered attribute of unioned categoricals ([GH 13410](https://github.com/pandas-dev/pandas/issues/13410)).
    See the [categorical union docs](../user_guide/categorical.html#categorical-union)
    for more information.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.to_latex()` and `DataFrame.to_string()` now allow optional header
    aliases. ([GH 15536](https://github.com/pandas-dev/pandas/issues/15536))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Re-enable the `parse_dates` keyword of `pd.read_excel()` to parse string columns
    as dates ([GH 14326](https://github.com/pandas-dev/pandas/issues/14326))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `.empty` property to subclasses of `Index`. ([GH 15270](https://github.com/pandas-dev/pandas/issues/15270))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enabled floor division for `Timedelta` and `TimedeltaIndex` ([GH 15828](https://github.com/pandas-dev/pandas/issues/15828))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.io.json.json_normalize()` gained the option `errors=''ignore''|''raise''`;
    the default is `errors=''raise''` which is backward compatible. ([GH 14583](https://github.com/pandas-dev/pandas/issues/14583))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.io.json.json_normalize()` with an empty `list` will return an empty
    `DataFrame` ([GH 15534](https://github.com/pandas-dev/pandas/issues/15534))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.io.json.json_normalize()` has gained a `sep` option that accepts `str`
    to separate joined fields; the default is “.”, which is backward compatible. ([GH
    14883](https://github.com/pandas-dev/pandas/issues/14883))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.remove_unused_levels()`](../reference/api/pandas.MultiIndex.remove_unused_levels.html#pandas.MultiIndex.remove_unused_levels
    "pandas.MultiIndex.remove_unused_levels") has been added to facilitate [removing
    unused levels](../user_guide/advanced.html#advanced-shown-levels). ([GH 15694](https://github.com/pandas-dev/pandas/issues/15694))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_csv()` will now raise a `ParserError` error whenever any parsing error
    occurs ([GH 15913](https://github.com/pandas-dev/pandas/issues/15913), [GH 15925](https://github.com/pandas-dev/pandas/issues/15925))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_csv()` now supports the `error_bad_lines` and `warn_bad_lines` arguments
    for the Python parser ([GH 15925](https://github.com/pandas-dev/pandas/issues/15925))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `display.show_dimensions` option can now also be used to specify whether
    the length of a `Series` should be shown in its repr ([GH 7117](https://github.com/pandas-dev/pandas/issues/7117)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`parallel_coordinates()` has gained a `sort_labels` keyword argument that sorts
    class labels and the colors assigned to them ([GH 15908](https://github.com/pandas-dev/pandas/issues/15908))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Options added to allow one to turn on/off using `bottleneck` and `numexpr`,
    see [here](../user_guide/basics.html#basics-accelerate) ([GH 16157](https://github.com/pandas-dev/pandas/issues/16157))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.style.bar()` now accepts two more options to further customize the
    bar chart. Bar alignment is set with `align=''left''|''mid''|''zero''`, the default
    is “left”, which is backward compatible; You can now pass a list of `color=[color_negative,
    color_positive]`. ([GH 14757](https://github.com/pandas-dev/pandas/issues/14757))  ##
    Backwards incompatible API changes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Possible incompatibility for HDF5 formats created with pandas < 0.13.0'
  prefs: []
  type: TYPE_NORMAL
- en: '`pd.TimeSeries` was deprecated officially in 0.17.0, though has already been
    an alias since 0.13.0\. It has been dropped in favor of `pd.Series`. ([GH 15098](https://github.com/pandas-dev/pandas/issues/15098)).'
  prefs: []
  type: TYPE_NORMAL
- en: This *may* cause HDF5 files that were created in prior versions to become unreadable
    if `pd.TimeSeries` was used. This is most likely to be for pandas < 0.13.0\. If
    you find yourself in this situation. You can use a recent prior version of pandas
    to read in your HDF5 files, then write them out again after applying the procedure
    below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]  ### Map on Index types now return other Index types'
  prefs: []
  type: TYPE_NORMAL
- en: '`map` on an `Index` now returns an `Index`, not a numpy array ([GH 12766](https://github.com/pandas-dev/pandas/issues/12766))'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: '`map` on a `Series` with `datetime64` values may return `int64` dtypes rather
    than `int32`'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]  ### Accessing datetime fields of Index now return Index'
  prefs: []
  type: TYPE_NORMAL
- en: The datetime-related attributes (see [here](../user_guide/timeseries.html#timeseries-components)
    for an overview) of `DatetimeIndex`, `PeriodIndex` and `TimedeltaIndex` previously
    returned numpy arrays. They will now return a new `Index` object, except in the
    case of a boolean field, where the result will still be a boolean ndarray. ([GH
    15022](https://github.com/pandas-dev/pandas/issues/15022))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behaviour:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'This has the advantage that specific `Index` methods are still available on
    the result. On the other hand, this might have backward incompatibilities: e.g.
    compared to numpy arrays, `Index` objects are not mutable. To get the original
    ndarray, you can always convert explicitly using `np.asarray(idx.hour)`.  ###
    pd.unique will now be consistent with extension types'
  prefs: []
  type: TYPE_NORMAL
- en: In prior versions, using [`Series.unique()`](../reference/api/pandas.Series.unique.html#pandas.Series.unique
    "pandas.Series.unique") and [`pandas.unique()`](../reference/api/pandas.unique.html#pandas.unique
    "pandas.unique") on `Categorical` and tz-aware data-types would yield different
    return types. These are now made consistent. ([GH 15903](https://github.com/pandas-dev/pandas/issues/15903))
  prefs: []
  type: TYPE_NORMAL
- en: Datetime tz-aware
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Previous behaviour:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'New behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Categoricals
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Previous behaviour:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'New behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE41]  ### S3 file handling'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'pandas now uses [s3fs](http://s3fs.readthedocs.io/) for handling S3 connections.
    This shouldn’t break any code. However, since `s3fs` is not a required dependency,
    you will need to install it separately, like `boto` in prior versions of pandas.
    ([GH 11915](https://github.com/pandas-dev/pandas/issues/11915)).  ### Partial
    string indexing changes'
  prefs: []
  type: TYPE_NORMAL
- en: '[DatetimeIndex Partial String Indexing](../user_guide/timeseries.html#timeseries-partialindexing)
    now works as an exact match, provided that string resolution coincides with index
    resolution, including a case when both are seconds ([GH 14826](https://github.com/pandas-dev/pandas/issues/14826)).
    See [Slice vs. Exact Match](../user_guide/timeseries.html#timeseries-slice-vs-exact-match)
    for details.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]  ### Concat of different float dtypes will not automatically upcast'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, `concat` of multiple objects with different `float` dtypes would
    automatically upcast results to a dtype of `float64`. Now the smallest acceptable
    dtype will be used ([GH 13247](https://github.com/pandas-dev/pandas/issues/13247))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]  ### pandas Google BigQuery support has moved'
  prefs: []
  type: TYPE_NORMAL
- en: 'pandas has split off Google BigQuery support into a separate package `pandas-gbq`.
    You can `conda install pandas-gbq -c conda-forge` or `pip install pandas-gbq`
    to get it. The functionality of [`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq
    "pandas.read_gbq") and [`DataFrame.to_gbq()`](../reference/api/pandas.DataFrame.to_gbq.html#pandas.DataFrame.to_gbq
    "pandas.DataFrame.to_gbq") remain the same with the currently released version
    of `pandas-gbq=0.1.4`. Documentation is now hosted [here](https://pandas-gbq.readthedocs.io/)
    ([GH 15347](https://github.com/pandas-dev/pandas/issues/15347))  ### Memory usage
    for Index is more accurate'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions, showing `.memory_usage()` on a pandas structure that has
    an index, would only include actual index values and not include structures that
    facilitated fast indexing. This will generally be different for `Index` and `MultiIndex`
    and less-so for other index types. ([GH 15237](https://github.com/pandas-dev/pandas/issues/15237))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]  ### DataFrame.sort_index changes'
  prefs: []
  type: TYPE_NORMAL
- en: In certain cases, calling `.sort_index()` on a MultiIndexed DataFrame would
    return the *same* DataFrame without seeming to sort. This would happen with a
    `lexsorted`, but non-monotonic levels. ([GH 15622](https://github.com/pandas-dev/pandas/issues/15622),
    [GH 15687](https://github.com/pandas-dev/pandas/issues/15687), [GH 14015](https://github.com/pandas-dev/pandas/issues/14015),
    [GH 13431](https://github.com/pandas-dev/pandas/issues/13431), [GH 15797](https://github.com/pandas-dev/pandas/issues/15797))
  prefs: []
  type: TYPE_NORMAL
- en: 'This is *unchanged* from prior versions, but shown for illustration purposes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: Sorting works as expected
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: However, this example, which has a non-monotonic 2nd level, doesn’t behave as
    desired.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]  ### GroupBy describe formatting'
  prefs: []
  type: TYPE_NORMAL
- en: The output formatting of `groupby.describe()` now labels the `describe()` metrics
    in the columns instead of the index. This format is consistent with `groupby.agg()`
    when applying multiple functions at once. ([GH 4792](https://github.com/pandas-dev/pandas/issues/4792))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]  ### Window binary corr/cov operations return a MultiIndex DataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: A binary window operation, like `.corr()` or `.cov()`, when operating on a `.rolling(..)`,
    `.expanding(..)`, or `.ewm(..)` object, will now return a 2-level `MultiIndexed
    DataFrame` rather than a `Panel`, as `Panel` is now deprecated, see [here](#whatsnew-0200-api-breaking-deprecate-panel).
    These are equivalent in function, but a MultiIndexed `DataFrame` enjoys more support
    in pandas. See the section on [Windowed Binary Operations](../user_guide/window.html#window-cov-corr)
    for more information. ([GH 15677](https://github.com/pandas-dev/pandas/issues/15677))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: Retrieving a correlation matrix for a cross-section
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]  ### HDFStore where string comparison'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions most types could be compared to string column in a `HDFStore`
    usually resulting in an invalid comparison, returning an empty result frame. These
    comparisons will now raise a `TypeError` ([GH 15492](https://github.com/pandas-dev/pandas/issues/15492))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]  ### Index.intersection and inner join now preserve the order of the
    left Index'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Index.intersection()`](../reference/api/pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection") now preserves the order of the calling `Index` (left)
    instead of the other `Index` (right) ([GH 15582](https://github.com/pandas-dev/pandas/issues/15582)).
    This affects inner joins, [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") and [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge"), and the `.align` method.'
  prefs: []
  type: TYPE_NORMAL
- en: '`Index.intersection`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'New behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`DataFrame.join` and `pd.merge`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'New behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE71]  ### Pivot table always returns a DataFrame'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The documentation for [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") states that a `DataFrame` is *always* returned. Here a bug
    is fixed that allowed this to return a `Series` under certain circumstance. ([GH
    4386](https://github.com/pandas-dev/pandas/issues/4386))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]  ### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '`numexpr` version is now required to be >= 2.4.6 and it will not be used at
    all if this requisite is not fulfilled ([GH 15213](https://github.com/pandas-dev/pandas/issues/15213)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`CParserError` has been renamed to `ParserError` in `pd.read_csv()` and will
    be removed in the future ([GH 12665](https://github.com/pandas-dev/pandas/issues/12665))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SparseArray.cumsum()` and `SparseSeries.cumsum()` will now always return `SparseArray`
    and `SparseSeries` respectively ([GH 12855](https://github.com/pandas-dev/pandas/issues/12855))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.applymap()` with an empty `DataFrame` will return a copy of the
    empty `DataFrame` instead of a `Series` ([GH 8222](https://github.com/pandas-dev/pandas/issues/8222))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.map()` now respects default values of dictionary subclasses with a
    `__missing__` method, such as `collections.Counter` ([GH 15999](https://github.com/pandas-dev/pandas/issues/15999))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.loc` has compat with `.ix` for accepting iterators, and NamedTuples ([GH
    15120](https://github.com/pandas-dev/pandas/issues/15120))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`interpolate()` and `fillna()` will raise a `ValueError` if the `limit` keyword
    argument is not greater than 0\. ([GH 9217](https://github.com/pandas-dev/pandas/issues/9217))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_csv()` will now issue a `ParserWarning` whenever there are conflicting
    values provided by the `dialect` parameter and the user ([GH 14898](https://github.com/pandas-dev/pandas/issues/14898))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_csv()` will now raise a `ValueError` for the C engine if the quote
    character is larger than one byte ([GH 11592](https://github.com/pandas-dev/pandas/issues/11592))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`inplace` arguments now require a boolean value, else a `ValueError` is thrown
    ([GH 14189](https://github.com/pandas-dev/pandas/issues/14189))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.api.types.is_datetime64_ns_dtype` will now report `True` on a tz-aware
    dtype, similar to `pandas.api.types.is_datetime64_any_dtype`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.asof()` will return a null filled `Series` instead the scalar `NaN`
    if a match is not found ([GH 15118](https://github.com/pandas-dev/pandas/issues/15118))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Specific support for `copy.copy()` and `copy.deepcopy()` functions on NDFrame
    objects ([GH 15444](https://github.com/pandas-dev/pandas/issues/15444))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.sort_values()` accepts a one element list of bool for consistency with
    the behavior of `DataFrame.sort_values()` ([GH 15604](https://github.com/pandas-dev/pandas/issues/15604))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.merge()` and `.join()` on `category` dtype columns will now preserve the
    category dtype when possible ([GH 10409](https://github.com/pandas-dev/pandas/issues/10409))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SparseDataFrame.default_fill_value` will be 0, previously was `nan` in the
    return from `pd.get_dummies(..., sparse=True)` ([GH 15594](https://github.com/pandas-dev/pandas/issues/15594))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The default behaviour of `Series.str.match` has changed from extracting groups
    to matching the pattern. The extracting behaviour was deprecated since pandas
    version 0.13.0 and can be done with the `Series.str.extract` method ([GH 5224](https://github.com/pandas-dev/pandas/issues/5224)).
    As a consequence, the `as_indexer` keyword is ignored (no longer needed to specify
    the new behaviour) and is deprecated.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NaT` will now correctly report `False` for datetimelike boolean operations
    such as `is_month_start` ([GH 15781](https://github.com/pandas-dev/pandas/issues/15781))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NaT` will now correctly return `np.nan` for `Timedelta` and `Period` accessors
    such as `days` and `quarter` ([GH 15782](https://github.com/pandas-dev/pandas/issues/15782))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NaT` will now returns `NaT` for `tz_localize` and `tz_convert` methods ([GH
    15830](https://github.com/pandas-dev/pandas/issues/15830))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame` and `Panel` constructors with invalid input will now raise `ValueError`
    rather than `PandasError`, if called with scalar inputs and not axes ([GH 15541](https://github.com/pandas-dev/pandas/issues/15541))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame` and `Panel` constructors with invalid input will now raise `ValueError`
    rather than `pandas.core.common.PandasError`, if called with scalar inputs and
    not axes; The exception `PandasError` is removed as well. ([GH 15541](https://github.com/pandas-dev/pandas/issues/15541))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The exception `pandas.core.common.AmbiguousIndexError` is removed as it is
    not referenced ([GH 15541](https://github.com/pandas-dev/pandas/issues/15541))  ##
    Reorganization of the library: privacy changes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Modules privacy has changed'
  prefs: []
  type: TYPE_NORMAL
- en: Some formerly public python/c/c++/cython extension modules have been moved and/or
    renamed. These are all removed from the public API. Furthermore, the `pandas.core`,
    `pandas.compat`, and `pandas.util` top-level modules are now considered to be
    PRIVATE. If indicated, a deprecation warning will be issued if you reference these
    modules. ([GH 12588](https://github.com/pandas-dev/pandas/issues/12588))
  prefs: []
  type: TYPE_NORMAL
- en: '| Previous Location | New Location | Deprecated |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.lib | pandas._libs.lib | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.tslib | pandas._libs.tslib | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.computation | pandas.core.computation | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.msgpack | pandas.io.msgpack |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.index | pandas._libs.index |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.algos | pandas._libs.algos |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.hashtable | pandas._libs.hashtable |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.indexes | pandas.core.indexes |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.json | pandas._libs.json / pandas.io.json | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.parser | pandas._libs.parsers | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.formats | pandas.io.formats |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.sparse | pandas.core.sparse |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.tools | pandas.core.reshape | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.types | pandas.core.dtypes | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.io.sas.saslib | pandas.io.sas._sas |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas._join | pandas._libs.join |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas._hash | pandas._libs.hashing |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas._period | pandas._libs.period |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas._sparse | pandas._libs.sparse |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas._testing | pandas._libs.testing |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas._window | pandas._libs.window |  |'
  prefs: []
  type: TYPE_TB
- en: 'Some new subpackages are created with public functionality that is not directly
    exposed in the top-level namespace: `pandas.errors`, `pandas.plotting` and `pandas.testing`
    (more details below). Together with `pandas.api.types` and certain functions in
    the `pandas.io` and `pandas.tseries` submodules, these are now the public subpackages.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Further changes:'
  prefs: []
  type: TYPE_NORMAL
- en: The function [`union_categoricals()`](../reference/api/pandas.api.types.union_categoricals.html#pandas.api.types.union_categoricals
    "pandas.api.types.union_categoricals") is now importable from `pandas.api.types`,
    formerly from `pandas.types.concat` ([GH 15998](https://github.com/pandas-dev/pandas/issues/15998))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The type import `pandas.tslib.NaTType` is deprecated and can be replaced by
    using `type(pandas.NaT)` ([GH 16146](https://github.com/pandas-dev/pandas/issues/16146))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The public functions in `pandas.tools.hashing` deprecated from that locations,
    but are now importable from `pandas.util` ([GH 16223](https://github.com/pandas-dev/pandas/issues/16223))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The modules in `pandas.util`: `decorators`, `print_versions`, `doctools`, `validators`,
    `depr_module` are now private. Only the functions exposed in `pandas.util` itself
    are public ([GH 16223](https://github.com/pandas-dev/pandas/issues/16223))  ###
    `pandas.errors`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We are adding a standard public module for all pandas exceptions & warnings
    `pandas.errors`. ([GH 14800](https://github.com/pandas-dev/pandas/issues/14800)).
    Previously these exceptions & warnings could be imported from `pandas.core.common`
    or `pandas.io.common`. These exceptions and warnings will be removed from the
    `*.common` locations in a future release. ([GH 15541](https://github.com/pandas-dev/pandas/issues/15541))
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are now part of this API:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]  ### `pandas.testing`'
  prefs: []
  type: TYPE_NORMAL
- en: We are adding a standard module that exposes the public testing functions in
    `pandas.testing` ([GH 9895](https://github.com/pandas-dev/pandas/issues/9895)).
    Those functions can be used when writing tests for functionality using pandas
    objects.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following testing functions are now part of this API:'
  prefs: []
  type: TYPE_NORMAL
- en: '[`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`testing.assert_index_equal()`](../reference/api/pandas.testing.assert_index_equal.html#pandas.testing.assert_index_equal
    "pandas.testing.assert_index_equal")  ### `pandas.plotting`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A new public `pandas.plotting` module has been added that holds plotting functionality
    that was previously in either `pandas.tools.plotting` or in the top-level namespace.
    See the [deprecations sections](#whatsnew-0200-privacy-deprecate-plotting) for
    more details.  ### Other development changes'
  prefs: []
  type: TYPE_NORMAL
- en: Building pandas for development now requires `cython >= 0.23` ([GH 14831](https://github.com/pandas-dev/pandas/issues/14831))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Require at least 0.23 version of cython to avoid problems with character encodings
    ([GH 14699](https://github.com/pandas-dev/pandas/issues/14699))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Switched the test framework to use [pytest](http://doc.pytest.org/en/latest)
    ([GH 13097](https://github.com/pandas-dev/pandas/issues/13097))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Reorganization of tests directory layout ([GH 14854](https://github.com/pandas-dev/pandas/issues/14854),
    [GH 15707](https://github.com/pandas-dev/pandas/issues/15707)).  ## Deprecations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Deprecate `.ix`'
  prefs: []
  type: TYPE_NORMAL
- en: The `.ix` indexer is deprecated, in favor of the more strict `.iloc` and `.loc`
    indexers. `.ix` offers a lot of magic on the inference of what the user wants
    to do. More specifically, `.ix` can decide to index *positionally* OR via *labels*,
    depending on the data type of the index. This has caused quite a bit of user confusion
    over the years. The full indexing documentation is [here](../user_guide/indexing.html#indexing).
    ([GH 14218](https://github.com/pandas-dev/pandas/issues/14218))
  prefs: []
  type: TYPE_NORMAL
- en: 'The recommended methods of indexing are:'
  prefs: []
  type: TYPE_NORMAL
- en: '`.loc` if you want to *label* index'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.iloc` if you want to *positionally* index.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using `.ix` will now show a `DeprecationWarning` with a link to some examples
    of how to convert code [here](https://pandas.pydata.org/pandas-docs/version/1.0/user_guide/indexing.html#ix-indexer-is-deprecated).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: Previous behavior, where you wish to get the 0th and the 2nd elements from the
    index in the ‘A’ column.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: Using `.loc`. Here we will select the appropriate indexes from the index, then
    use *label* indexing.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: Using `.iloc`. Here we will get the location of the ‘A’ column, then use *positional*
    indexing to select things.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]  ### Deprecate Panel'
  prefs: []
  type: TYPE_NORMAL
- en: '`Panel` is deprecated and will be removed in a future version. The recommended
    way to represent 3-D data are with a `MultiIndex` on a `DataFrame` via the `to_frame()`
    or with the [xarray package](http://xarray.pydata.org/en/stable/). pandas provides
    a `to_xarray()` method to automate this conversion ([GH 13563](https://github.com/pandas-dev/pandas/issues/13563)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: Convert to a MultiIndex DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: Convert to an xarray DataArray
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]  ### Deprecate groupby.agg() with a dictionary when renaming'
  prefs: []
  type: TYPE_NORMAL
- en: The `.groupby(..).agg(..)`, `.rolling(..).agg(..)`, and `.resample(..).agg(..)`
    syntax can accept a variable of inputs, including scalars, list, and a dict of
    column names to scalars or lists. This provides a useful syntax for constructing
    multiple (potentially different) aggregations.
  prefs: []
  type: TYPE_NORMAL
- en: However, `.agg(..)` can *also* accept a dict that allows ‘renaming’ of the result
    columns. This is a complicated and confusing syntax, as well as not consistent
    between `Series` and `DataFrame`. We are deprecating this ‘renaming’ functionality.
  prefs: []
  type: TYPE_NORMAL
- en: We are deprecating passing a dict to a grouped/rolled/resampled `Series`. This
    allowed one to `rename` the resulting aggregation, but this had a completely different
    meaning than passing a dictionary to a grouped `DataFrame`, which accepts column-to-aggregations.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We are deprecating passing a dict-of-dicts to a grouped/rolled/resampled `DataFrame`
    in a similar manner.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This is an illustrative example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: Here is a typical useful syntax for computing different aggregations for different
    columns. This is a natural, and useful syntax. We aggregate from the dict-to-list
    by taking the specified columns and applying the list of functions. This returns
    a `MultiIndex` for the columns (this is *not* deprecated).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: 'Here’s an example of the first deprecation, passing a dict to a grouped `Series`.
    This is a combination aggregation & renaming:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: 'You can accomplish the same operation, more idiomatically by:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: 'Here’s an example of the second deprecation, passing a dict-of-dict to a grouped
    `DataFrame`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]'
  prefs: []
  type: TYPE_PRE
- en: 'You can accomplish nearly the same by:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]  ### Deprecate .plotting'
  prefs: []
  type: TYPE_NORMAL
- en: The `pandas.tools.plotting` module has been deprecated, in favor of the top
    level `pandas.plotting` module. All the public plotting functions are now available
    from `pandas.plotting` ([GH 12548](https://github.com/pandas-dev/pandas/issues/12548)).
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, the top-level `pandas.scatter_matrix` and `pandas.plot_params`
    are deprecated. Users can import these from `pandas.plotting` as well.
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous script:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]'
  prefs: []
  type: TYPE_PRE
- en: 'Should be changed to:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]  ### Other deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: '`SparseArray.to_dense()` has deprecated the `fill` parameter, as that parameter
    was not being respected ([GH 14647](https://github.com/pandas-dev/pandas/issues/14647))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SparseSeries.to_dense()` has deprecated the `sparse_only` parameter ([GH 14647](https://github.com/pandas-dev/pandas/issues/14647))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.repeat()` has deprecated the `reps` parameter in favor of `repeats`
    ([GH 12662](https://github.com/pandas-dev/pandas/issues/12662))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Series` constructor and `.astype` method have deprecated accepting timestamp
    dtypes without a frequency (e.g. `np.datetime64`) for the `dtype` parameter ([GH
    15524](https://github.com/pandas-dev/pandas/issues/15524))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Index.repeat()` and `MultiIndex.repeat()` have deprecated the `n` parameter
    in favor of `repeats` ([GH 12662](https://github.com/pandas-dev/pandas/issues/12662))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.searchsorted()` and `Series.searchsorted()` have deprecated the
    `v` parameter in favor of `value` ([GH 12662](https://github.com/pandas-dev/pandas/issues/12662))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`TimedeltaIndex.searchsorted()`, `DatetimeIndex.searchsorted()`, and `PeriodIndex.searchsorted()`
    have deprecated the `key` parameter in favor of `value` ([GH 12662](https://github.com/pandas-dev/pandas/issues/12662))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.astype()` has deprecated the `raise_on_error` parameter in favor
    of `errors` ([GH 14878](https://github.com/pandas-dev/pandas/issues/14878))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.sortlevel` and `DataFrame.sortlevel` have been deprecated in favor
    of `Series.sort_index` and `DataFrame.sort_index` ([GH 15099](https://github.com/pandas-dev/pandas/issues/15099))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: importing `concat` from `pandas.tools.merge` has been deprecated in favor of
    imports from the `pandas` namespace. This should only affect explicit imports
    ([GH 15358](https://github.com/pandas-dev/pandas/issues/15358))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series/DataFrame/Panel.consolidate()` been deprecated as a public method.
    ([GH 15483](https://github.com/pandas-dev/pandas/issues/15483))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `as_indexer` keyword of `Series.str.match()` has been deprecated (ignored
    keyword) ([GH 15257](https://github.com/pandas-dev/pandas/issues/15257)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The following top-level pandas functions have been deprecated and will be removed
    in a future version ([GH 13790](https://github.com/pandas-dev/pandas/issues/13790),
    [GH 15940](https://github.com/pandas-dev/pandas/issues/15940))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.pnow()`, replaced by `Period.now()`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.Term`, is removed, as it is not applicable to user code. Instead use in-line
    string expressions in the where clause when searching in HDFStore'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.Expr`, is removed, as it is not applicable to user code.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.match()`, is removed.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.groupby()`, replaced by using the `.groupby()` method directly on a `Series/DataFrame`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.get_store()`, replaced by a direct call to `pd.HDFStore(...)`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`is_any_int_dtype`, `is_floating_dtype`, and `is_sequence` are deprecated from
    `pandas.api.types` ([GH 16042](https://github.com/pandas-dev/pandas/issues/16042))  ##
    Removal of prior version deprecations/changes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `pandas.rpy` module is removed. Similar functionality can be accessed through
    the [rpy2](https://rpy2.readthedocs.io/) project. See the [R interfacing docs](https://pandas.pydata.org/pandas-docs/version/0.20/r_interface.html)
    for more details.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `pandas.io.ga` module with a `google-analytics` interface is removed ([GH
    11308](https://github.com/pandas-dev/pandas/issues/11308)). Similar functionality
    can be found in the [Google2Pandas](https://github.com/panalysis/Google2Pandas)
    package.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.to_datetime` and `pd.to_timedelta` have dropped the `coerce` parameter
    in favor of `errors` ([GH 13602](https://github.com/pandas-dev/pandas/issues/13602))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.stats.fama_macbeth`, `pandas.stats.ols`, `pandas.stats.plm` and `pandas.stats.var`,
    as well as the top-level `pandas.fama_macbeth` and `pandas.ols` routines are removed.
    Similar functionality can be found in the [statsmodels](https://www.statsmodels.org/dev/)
    package. ([GH 11898](https://github.com/pandas-dev/pandas/issues/11898))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `TimeSeries` and `SparseTimeSeries` classes, aliases of `Series` and `SparseSeries`,
    are removed ([GH 10890](https://github.com/pandas-dev/pandas/issues/10890), [GH
    15098](https://github.com/pandas-dev/pandas/issues/15098)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.is_time_series` is dropped in favor of `Series.index.is_all_dates`
    ([GH 15098](https://github.com/pandas-dev/pandas/issues/15098))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The deprecated `irow`, `icol`, `iget` and `iget_value` methods are removed in
    favor of `iloc` and `iat` as explained [here](v0.17.0.html#whatsnew-0170-deprecations)
    ([GH 10711](https://github.com/pandas-dev/pandas/issues/10711)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The deprecated `DataFrame.iterkv()` has been removed in favor of `DataFrame.iteritems()`
    ([GH 10711](https://github.com/pandas-dev/pandas/issues/10711))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Categorical` constructor has dropped the `name` parameter ([GH 10632](https://github.com/pandas-dev/pandas/issues/10632))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical` has dropped support for `NaN` categories ([GH 10748](https://github.com/pandas-dev/pandas/issues/10748))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `take_last` parameter has been dropped from `duplicated()`, `drop_duplicates()`,
    `nlargest()`, and `nsmallest()` methods ([GH 10236](https://github.com/pandas-dev/pandas/issues/10236),
    [GH 10792](https://github.com/pandas-dev/pandas/issues/10792), [GH 10920](https://github.com/pandas-dev/pandas/issues/10920))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series`, `Index`, and `DataFrame` have dropped the `sort` and `order` methods
    ([GH 10726](https://github.com/pandas-dev/pandas/issues/10726))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Where clauses in `pytables` are only accepted as strings and expressions types
    and not other data-types ([GH 12027](https://github.com/pandas-dev/pandas/issues/12027))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame` has dropped the `combineAdd` and `combineMult` methods in favor
    of `add` and `mul` respectively ([GH 10735](https://github.com/pandas-dev/pandas/issues/10735))  ##
    Performance improvements'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `pd.wide_to_long()` ([GH 14779](https://github.com/pandas-dev/pandas/issues/14779))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `pd.factorize()` by releasing the GIL with `object`
    dtype when inferred as strings ([GH 14859](https://github.com/pandas-dev/pandas/issues/14859),
    [GH 16057](https://github.com/pandas-dev/pandas/issues/16057))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of timeseries plotting with an irregular DatetimeIndex
    (or with `compat_x=True`) ([GH 15073](https://github.com/pandas-dev/pandas/issues/15073)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `groupby().cummin()` and `groupby().cummax()` ([GH 15048](https://github.com/pandas-dev/pandas/issues/15048),
    [GH 15109](https://github.com/pandas-dev/pandas/issues/15109), [GH 15561](https://github.com/pandas-dev/pandas/issues/15561),
    [GH 15635](https://github.com/pandas-dev/pandas/issues/15635))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance and reduced memory when indexing with a `MultiIndex` ([GH
    15245](https://github.com/pandas-dev/pandas/issues/15245))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When reading buffer object in `read_sas()` method without specified format,
    filepath string is inferred rather than buffer object. ([GH 14947](https://github.com/pandas-dev/pandas/issues/14947))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `.rank()` for categorical data ([GH 15498](https://github.com/pandas-dev/pandas/issues/15498))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance when using `.unstack()` ([GH 15503](https://github.com/pandas-dev/pandas/issues/15503))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of merge/join on `category` columns ([GH 10409](https://github.com/pandas-dev/pandas/issues/10409))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `drop_duplicates()` on `bool` columns ([GH 12963](https://github.com/pandas-dev/pandas/issues/12963))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve performance of `pd.core.groupby.GroupBy.apply` when the applied function
    used the `.name` attribute of the group DataFrame ([GH 15062](https://github.com/pandas-dev/pandas/issues/15062)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `iloc` indexing with a list or array ([GH 15504](https://github.com/pandas-dev/pandas/issues/15504)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `Series.sort_index()` with a monotonic index ([GH 15694](https://github.com/pandas-dev/pandas/issues/15694))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Improved performance in `pd.read_csv()` on some platforms with buffered reads
    ([GH 16039](https://github.com/pandas-dev/pandas/issues/16039))  ## Bug fixes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Timestamp.replace` now raises `TypeError` when incorrect argument names
    are given; previously this raised `ValueError` ([GH 15240](https://github.com/pandas-dev/pandas/issues/15240))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timestamp.replace` with compat for passing long integers ([GH 15030](https://github.com/pandas-dev/pandas/issues/15030))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timestamp` returning UTC based time/date attributes when a timezone
    was provided ([GH 13303](https://github.com/pandas-dev/pandas/issues/13303), [GH
    6538](https://github.com/pandas-dev/pandas/issues/6538))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timestamp` incorrectly localizing timezones during construction ([GH
    11481](https://github.com/pandas-dev/pandas/issues/11481), [GH 15777](https://github.com/pandas-dev/pandas/issues/15777))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `TimedeltaIndex` addition where overflow was being allowed without error
    ([GH 14816](https://github.com/pandas-dev/pandas/issues/14816))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `TimedeltaIndex` raising a `ValueError` when boolean indexing with `loc`
    ([GH 14946](https://github.com/pandas-dev/pandas/issues/14946))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in catching an overflow in `Timestamp` + `Timedelta/Offset` operations ([GH
    15126](https://github.com/pandas-dev/pandas/issues/15126))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.round()` and `Timestamp.round()` floating point accuracy
    when rounding by milliseconds or less ([GH 14440](https://github.com/pandas-dev/pandas/issues/14440),
    [GH 15578](https://github.com/pandas-dev/pandas/issues/15578))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `astype()` where `inf` values were incorrectly converted to integers.
    Now raises error now with `astype()` for Series and DataFrames ([GH 14265](https://github.com/pandas-dev/pandas/issues/14265))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame(..).apply(to_numeric)` when values are of type decimal.Decimal.
    ([GH 14827](https://github.com/pandas-dev/pandas/issues/14827))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `describe()` when passing a numpy array which does not contain the median
    to the `percentiles` keyword argument ([GH 14908](https://github.com/pandas-dev/pandas/issues/14908))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cleaned up `PeriodIndex` constructor, including raising on floats more consistently
    ([GH 13277](https://github.com/pandas-dev/pandas/issues/13277))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in using `__deepcopy__` on empty NDFrame objects ([GH 15370](https://github.com/pandas-dev/pandas/issues/15370))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.replace()` may result in incorrect dtypes. ([GH 12747](https://github.com/pandas-dev/pandas/issues/12747),
    [GH 15765](https://github.com/pandas-dev/pandas/issues/15765))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.replace` and `DataFrame.replace` which failed on empty replacement
    dicts ([GH 15289](https://github.com/pandas-dev/pandas/issues/15289))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.replace` which replaced a numeric by string ([GH 15743](https://github.com/pandas-dev/pandas/issues/15743))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index` construction with `NaN` elements and integer dtype specified
    ([GH 15187](https://github.com/pandas-dev/pandas/issues/15187))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series` construction with a datetimetz ([GH 14928](https://github.com/pandas-dev/pandas/issues/14928))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.dt.round()` inconsistent behaviour on `NaT` ‘s with different
    arguments ([GH 14940](https://github.com/pandas-dev/pandas/issues/14940))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series` constructor when both `copy=True` and `dtype` arguments are
    provided ([GH 15125](https://github.com/pandas-dev/pandas/issues/15125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Incorrect dtyped `Series` was returned by comparison methods (e.g., `lt`, `gt`,
    …) against a constant for an empty `DataFrame` ([GH 15077](https://github.com/pandas-dev/pandas/issues/15077))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.ffill()` with mixed dtypes containing tz-aware datetimes. ([GH
    14956](https://github.com/pandas-dev/pandas/issues/14956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.fillna()` where the argument `downcast` was ignored when fillna
    value was of type `dict` ([GH 15277](https://github.com/pandas-dev/pandas/issues/15277))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.asfreq()`, where frequency was not set for empty `Series` ([GH 14320](https://github.com/pandas-dev/pandas/issues/14320))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame` construction with nulls and datetimes in a list-like ([GH
    15869](https://github.com/pandas-dev/pandas/issues/15869))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.fillna()` with tz-aware datetimes ([GH 15855](https://github.com/pandas-dev/pandas/issues/15855))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `is_string_dtype`, `is_timedelta64_ns_dtype`, and `is_string_like_dtype`
    in which an error was raised when `None` was passed in ([GH 15941](https://github.com/pandas-dev/pandas/issues/15941))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the return type of `pd.unique` on a `Categorical`, which was returning
    an ndarray and not a `Categorical` ([GH 15903](https://github.com/pandas-dev/pandas/issues/15903))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index.to_series()` where the index was not copied (and so mutating later
    would change the original), ([GH 15949](https://github.com/pandas-dev/pandas/issues/15949))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing with partial string indexing with a len-1 DataFrame ([GH 16071](https://github.com/pandas-dev/pandas/issues/16071))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series` construction where passing invalid dtype didn’t raise an error.
    ([GH 15520](https://github.com/pandas-dev/pandas/issues/15520))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Index` power operations with reversed operands ([GH 14973](https://github.com/pandas-dev/pandas/issues/14973))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.sort_values()` when sorting by multiple columns where one
    column is of type `int64` and contains `NaT` ([GH 14922](https://github.com/pandas-dev/pandas/issues/14922))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.reindex()` in which `method` was ignored when passing `columns`
    ([GH 14992](https://github.com/pandas-dev/pandas/issues/14992))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc` with indexing a `MultiIndex` with a `Series` indexer
    ([GH 14730](https://github.com/pandas-dev/pandas/issues/14730), [GH 15424](https://github.com/pandas-dev/pandas/issues/15424))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc` with indexing a `MultiIndex` with a numpy array ([GH
    15434](https://github.com/pandas-dev/pandas/issues/15434))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.asof` which raised if the series contained all `np.nan` ([GH
    15713](https://github.com/pandas-dev/pandas/issues/15713))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.at` when selecting from a tz-aware column ([GH 15822](https://github.com/pandas-dev/pandas/issues/15822))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.where()` and `DataFrame.where()` where array-like conditionals
    were being rejected ([GH 15414](https://github.com/pandas-dev/pandas/issues/15414))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.where()` where TZ-aware data was converted to float representation
    ([GH 15701](https://github.com/pandas-dev/pandas/issues/15701))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.loc` that would not return the correct dtype for scalar access for
    a DataFrame ([GH 11617](https://github.com/pandas-dev/pandas/issues/11617))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in output formatting of a `MultiIndex` when names are integers ([GH 12223](https://github.com/pandas-dev/pandas/issues/12223),
    [GH 15262](https://github.com/pandas-dev/pandas/issues/15262))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.searchsorted()` where alphabetical instead of the provided
    categorical order was used ([GH 14522](https://github.com/pandas-dev/pandas/issues/14522))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.iloc` where a `Categorical` object for list-like indexes input
    was returned, where a `Series` was expected. ([GH 14580](https://github.com/pandas-dev/pandas/issues/14580))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.isin` comparing datetimelike to empty frame ([GH 15473](https://github.com/pandas-dev/pandas/issues/15473))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.reset_index()` when an all `NaN` level of a `MultiIndex` would fail
    ([GH 6322](https://github.com/pandas-dev/pandas/issues/6322))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.reset_index()` when raising error for index name already present in
    `MultiIndex` columns ([GH 16120](https://github.com/pandas-dev/pandas/issues/16120))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in creating a `MultiIndex` with tuples and not passing a list of names;
    this will now raise `ValueError` ([GH 15110](https://github.com/pandas-dev/pandas/issues/15110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the HTML display with a `MultiIndex` and truncation ([GH 14882](https://github.com/pandas-dev/pandas/issues/14882))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the display of `.info()` where a qualifier (+) would always be displayed
    with a `MultiIndex` that contains only non-strings ([GH 15245](https://github.com/pandas-dev/pandas/issues/15245))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.concat()` where the names of `MultiIndex` of resulting `DataFrame`
    are not handled correctly when `None` is presented in the names of `MultiIndex`
    of input `DataFrame` ([GH 15787](https://github.com/pandas-dev/pandas/issues/15787))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.sort_index()` and `Series.sort_index()` where `na_position`
    doesn’t work with a `MultiIndex` ([GH 14784](https://github.com/pandas-dev/pandas/issues/14784),
    [GH 16604](https://github.com/pandas-dev/pandas/issues/16604))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.concat()` when combining objects with a `CategoricalIndex` ([GH 16111](https://github.com/pandas-dev/pandas/issues/16111))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing with a scalar and a `CategoricalIndex` ([GH 16123](https://github.com/pandas-dev/pandas/issues/16123))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IO
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `pd.to_numeric()` in which float and unsigned integer elements were being
    improperly casted ([GH 14941](https://github.com/pandas-dev/pandas/issues/14941),
    [GH 15005](https://github.com/pandas-dev/pandas/issues/15005))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_fwf()` where the skiprows parameter was not being respected
    during column width inference ([GH 11256](https://github.com/pandas-dev/pandas/issues/11256))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` in which the `dialect` parameter was not being verified
    before processing ([GH 14898](https://github.com/pandas-dev/pandas/issues/14898))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` in which missing data was being improperly handled with
    `usecols` ([GH 6710](https://github.com/pandas-dev/pandas/issues/6710))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` in which a file containing a row with many columns followed
    by rows with fewer columns would cause a crash ([GH 14125](https://github.com/pandas-dev/pandas/issues/14125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` for the C engine where `usecols` were being indexed incorrectly
    with `parse_dates` ([GH 14792](https://github.com/pandas-dev/pandas/issues/14792))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` with `parse_dates` when multi-line headers are specified
    ([GH 15376](https://github.com/pandas-dev/pandas/issues/15376))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` with `float_precision='round_trip'` which caused a segfault
    when a text entry is parsed ([GH 15140](https://github.com/pandas-dev/pandas/issues/15140))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` when an index was specified and no values were specified
    as null values ([GH 15835](https://github.com/pandas-dev/pandas/issues/15835))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` in which certain invalid file objects caused the Python
    interpreter to crash ([GH 15337](https://github.com/pandas-dev/pandas/issues/15337))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` in which invalid values for `nrows` and `chunksize` were
    allowed ([GH 15767](https://github.com/pandas-dev/pandas/issues/15767))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` for the Python engine in which unhelpful error messages
    were being raised when parsing errors occurred ([GH 15910](https://github.com/pandas-dev/pandas/issues/15910))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` in which the `skipfooter` parameter was not being properly
    validated ([GH 15925](https://github.com/pandas-dev/pandas/issues/15925))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.to_csv()` in which there was numeric overflow when a timestamp index
    was being written ([GH 15982](https://github.com/pandas-dev/pandas/issues/15982))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.util.hashing.hash_pandas_object()` in which hashing of categoricals
    depended on the ordering of categories, instead of just their values. ([GH 15143](https://github.com/pandas-dev/pandas/issues/15143))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.to_json()` where `lines=True` and contents (keys or values) contain
    escaped characters ([GH 15096](https://github.com/pandas-dev/pandas/issues/15096))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.to_json()` causing single byte ascii characters to be expanded to four
    byte unicode ([GH 15344](https://github.com/pandas-dev/pandas/issues/15344))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.to_json()` for the C engine where rollover was not correctly handled
    for case where frac is odd and diff is exactly 0.5 ([GH 15716](https://github.com/pandas-dev/pandas/issues/15716),
    [GH 15864](https://github.com/pandas-dev/pandas/issues/15864))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_json()` for Python 2 where `lines=True` and contents contain
    non-ascii unicode characters ([GH 15132](https://github.com/pandas-dev/pandas/issues/15132))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_msgpack()` in which `Series` categoricals were being improperly
    processed ([GH 14901](https://github.com/pandas-dev/pandas/issues/14901))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_msgpack()` which did not allow loading of a dataframe with an
    index of type `CategoricalIndex` ([GH 15487](https://github.com/pandas-dev/pandas/issues/15487))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_msgpack()` when deserializing a `CategoricalIndex` ([GH 15487](https://github.com/pandas-dev/pandas/issues/15487))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.to_records()` with converting a `DatetimeIndex` with a timezone
    ([GH 13937](https://github.com/pandas-dev/pandas/issues/13937))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.to_records()` which failed with unicode characters in column
    names ([GH 11879](https://github.com/pandas-dev/pandas/issues/11879))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.to_sql()` when writing a DataFrame with numeric index names ([GH 15404](https://github.com/pandas-dev/pandas/issues/15404)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.to_html()` with `index=False` and `max_rows` raising in `IndexError`
    ([GH 14998](https://github.com/pandas-dev/pandas/issues/14998))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_hdf()` passing a `Timestamp` to the `where` parameter with a
    non date column ([GH 15492](https://github.com/pandas-dev/pandas/issues/15492))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.to_stata()` and `StataWriter` which produces incorrectly formatted
    files to be produced for some locales ([GH 13856](https://github.com/pandas-dev/pandas/issues/13856))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `StataReader` and `StataWriter` which allows invalid encodings ([GH 15723](https://github.com/pandas-dev/pandas/issues/15723))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the `Series` repr not showing the length when the output was truncated
    ([GH 15962](https://github.com/pandas-dev/pandas/issues/15962)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `DataFrame.hist` where `plt.tight_layout` caused an `AttributeError`
    (use `matplotlib >= 2.0.1`) ([GH 9351](https://github.com/pandas-dev/pandas/issues/9351))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.boxplot` where `fontsize` was not applied to the tick labels
    on both axes ([GH 15108](https://github.com/pandas-dev/pandas/issues/15108))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the date and time converters pandas registers with matplotlib not handling
    multiple dimensions ([GH 16026](https://github.com/pandas-dev/pandas/issues/16026))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.scatter_matrix()` could accept either `color` or `c`, but not both
    ([GH 14855](https://github.com/pandas-dev/pandas/issues/14855))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GroupBy/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `.groupby(..).resample()` when passed the `on=` kwarg. ([GH 15021](https://github.com/pandas-dev/pandas/issues/15021))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Properly set `__name__` and `__qualname__` for `Groupby.*` functions ([GH 14620](https://github.com/pandas-dev/pandas/issues/14620))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.get_group()` failing with a categorical grouper ([GH 15155](https://github.com/pandas-dev/pandas/issues/15155))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.groupby(...).rolling(...)` when `on` is specified and using a `DatetimeIndex`
    ([GH 15130](https://github.com/pandas-dev/pandas/issues/15130), [GH 13966](https://github.com/pandas-dev/pandas/issues/13966))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in groupby operations with `timedelta64` when passing `numeric_only=False`
    ([GH 5724](https://github.com/pandas-dev/pandas/issues/5724))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `groupby.apply()` coercing `object` dtypes to numeric types, when not
    all values were numeric ([GH 14423](https://github.com/pandas-dev/pandas/issues/14423),
    [GH 15421](https://github.com/pandas-dev/pandas/issues/15421), [GH 15670](https://github.com/pandas-dev/pandas/issues/15670))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `resample`, where a non-string `loffset` argument would not be applied
    when resampling a timeseries ([GH 13218](https://github.com/pandas-dev/pandas/issues/13218))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.groupby().describe()` when grouping on `Index` containing
    tuples ([GH 14848](https://github.com/pandas-dev/pandas/issues/14848))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `groupby().nunique()` with a datetimelike-grouper where bins counts were
    incorrect ([GH 13453](https://github.com/pandas-dev/pandas/issues/13453))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `groupby.transform()` that would coerce the resultant dtypes back to
    the original ([GH 10972](https://github.com/pandas-dev/pandas/issues/10972), [GH
    11444](https://github.com/pandas-dev/pandas/issues/11444))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `groupby.agg()` incorrectly localizing timezone on `datetime` ([GH 15426](https://github.com/pandas-dev/pandas/issues/15426),
    [GH 10668](https://github.com/pandas-dev/pandas/issues/10668), [GH 13046](https://github.com/pandas-dev/pandas/issues/13046))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.rolling/expanding()` functions where `count()` was not counting `np.Inf`,
    nor handling `object` dtypes ([GH 12541](https://github.com/pandas-dev/pandas/issues/12541))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.rolling()` where `pd.Timedelta` or `datetime.timedelta` was not accepted
    as a `window` argument ([GH 15440](https://github.com/pandas-dev/pandas/issues/15440))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Rolling.quantile` function that caused a segmentation fault when called
    with a quantile value outside of the range [0, 1] ([GH 15463](https://github.com/pandas-dev/pandas/issues/15463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.resample().median()` if duplicate column names are present
    ([GH 14233](https://github.com/pandas-dev/pandas/issues/14233))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `SparseSeries.reindex` on single level with list of length 1 ([GH 15447](https://github.com/pandas-dev/pandas/issues/15447))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in repr-formatting a `SparseDataFrame` after a value was set on (a copy
    of) one of its series ([GH 15488](https://github.com/pandas-dev/pandas/issues/15488))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseDataFrame` construction with lists not coercing to dtype ([GH
    15682](https://github.com/pandas-dev/pandas/issues/15682))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in sparse array indexing in which indices were not being validated ([GH
    15863](https://github.com/pandas-dev/pandas/issues/15863))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `pd.merge_asof()` where `left_index` or `right_index` caused a failure
    when multiple `by` was specified ([GH 15676](https://github.com/pandas-dev/pandas/issues/15676))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.merge_asof()` where `left_index`/`right_index` together caused a
    failure when `tolerance` was specified ([GH 15135](https://github.com/pandas-dev/pandas/issues/15135))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.pivot_table()` where `dropna=True` would not drop all-NaN
    columns when the columns was a `category` dtype ([GH 15193](https://github.com/pandas-dev/pandas/issues/15193))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.melt()` where passing a tuple value for `value_vars` caused a `TypeError`
    ([GH 15348](https://github.com/pandas-dev/pandas/issues/15348))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.pivot_table()` where no error was raised when values argument was
    not in the columns ([GH 14938](https://github.com/pandas-dev/pandas/issues/14938))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.concat()` in which concatenating with an empty dataframe with `join='inner'`
    was being improperly handled ([GH 15328](https://github.com/pandas-dev/pandas/issues/15328))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug with `sort=True` in `DataFrame.join` and `pd.merge` when joining on indexes
    ([GH 15582](https://github.com/pandas-dev/pandas/issues/15582))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.nsmallest` and `DataFrame.nlargest` where identical values
    resulted in duplicated rows ([GH 15297](https://github.com/pandas-dev/pandas/issues/15297))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") incorrectly raising `UnicodeError` when passing unicode
    input for `margins` keyword ([GH 13292](https://github.com/pandas-dev/pandas/issues/13292))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `.rank()` which incorrectly ranks ordered categories ([GH 15420](https://github.com/pandas-dev/pandas/issues/15420))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.corr()` and `.cov()` where the column and index were the same object
    ([GH 14617](https://github.com/pandas-dev/pandas/issues/14617))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.mode()` where `mode` was not returned if was only a single value ([GH
    15714](https://github.com/pandas-dev/pandas/issues/15714))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.cut()` with a single bin on an all 0s array ([GH 15428](https://github.com/pandas-dev/pandas/issues/15428))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.qcut()` with a single quantile and an array with identical values
    ([GH 15431](https://github.com/pandas-dev/pandas/issues/15431))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas.tools.utils.cartesian_product()` with large input can cause overflow
    on windows ([GH 15265](https://github.com/pandas-dev/pandas/issues/15265))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.eval()` which caused multi-line evals to fail with local variables
    not on the first line ([GH 15342](https://github.com/pandas-dev/pandas/issues/15342))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Compat with SciPy 0.19.0 for testing on `.interpolate()` ([GH 15662](https://github.com/pandas-dev/pandas/issues/15662))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compat for 32-bit platforms for `.qcut/cut`; bins will now be `int64` dtype
    ([GH 14866](https://github.com/pandas-dev/pandas/issues/14866))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in interactions with `Qt` when a `QtApplication` already exists ([GH 14372](https://github.com/pandas-dev/pandas/issues/14372))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Avoid use of `np.finfo()` during `import pandas` removed to mitigate deadlock
    on Python GIL misuse ([GH 14641](https://github.com/pandas-dev/pandas/issues/14641))  ##
    Contributors'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A total of 204 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: Adam J. Stewart +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adrian +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ajay Saxena
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Akash Tandon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Albert Villanova del Moral +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aleksey Bilogur +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexis Mignon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amol Kahat +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andreas Winkler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Kittredge +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anthonios Partheniou
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arco Bast +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ashish Singal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Baurzhan Muftakhidinov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben Kandel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben Thayer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben Welsh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bill Chambers +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brandon M. Burroughs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brian +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brian McFee +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Carlos Souza +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Ham
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Warth
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christoph Gohlke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christoph Paulik +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christopher C. Aycock
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clemens Brunner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: D.S. McNeil +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DaanVanHauwermeiren +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Himmelstein
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dave Willmer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Cook +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Gwynne +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Hoffman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Krych
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Diego Fernandez +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dimitris Spathis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dmitry L +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dody Suria Wijaya +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dominik Stanczak +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dr-Irv
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dr. Irv +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Elliott Sales de Andrade +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ennemoser Christoph +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Francesc Alted +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fumito Hamamura +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Giacomo Ferroni
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Graham R. Jeffries +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Greg Williams +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guilherme Beltramini +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guilherme Samora +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hao Wu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Harshit Patni +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ilya V. Schurov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Iván Vallés Pérez
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jackie Leng +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jaehoon Hwang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Draper +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Goppert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James McBride +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Santucci +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Schulz
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Carey
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JennaVergeynst +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jim +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jim Crist
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joe Jevnik
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joel Nothman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John Tucker +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John W. O’Brien
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John Zwinck
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jon M. Mease
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jon Mease
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonathan Whitmore +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonathan de Bruin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joost Kranendonk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joshua Bradt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julian Santander
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julien Marrec +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jun Kim +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justin Solinsky +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kacawi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kamal Kamalaldin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kerby Shedden
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kernc
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keshav Ramaswamy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kyle Kelley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Larry Ren
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leon Yin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Line Pedersen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lorenzo Cestaro +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luca Scarabello
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lukasz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mahmoud Lababidi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mark Mandel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Brett
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matti Picus
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maximilian Roos
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Charlton +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Felt
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Lamparski +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michiel Stock +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mikolaj Chwalisz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Min RK
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Miroslav Šedivý +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mykola Golubyev
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nate Yoder
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nathalie Rud +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nicholas Ver Halen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nick Chmura +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nolan Nichols +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pankaj Pandey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pawel Kordek
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pete Huang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter Csizsek +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Petio Petrov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Phil Ruffwind +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pietro Battiston
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Piotr Chromiec
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prasanjit Prakash +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rob Forgione +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert Bradshaw
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rodolfo Fernandez
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roger Thomas
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rouz Azari +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sahil Dua
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sam Foo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sami Salonen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sarah Bird +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sarma Tangirala +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scott Sanderson
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastian Bank
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastian Gsänger +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shawn Heide
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shyam Saladi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sinhrks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stephen Rauch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sébastien de Menten +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tara Adiseshan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thiago Serafim
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thoralf Gutierrez +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thrasibule +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tobias Gustafsson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Augspurger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tong SHEN +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tong Shen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: TrigonaMinima +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Uwe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wes Turner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wiktor Tomczak +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: WillAyd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yaroslav Halchenko
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yimeng Zhang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: abaldenko +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: adrian-stepien +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alexandercbooth +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: atbd +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bastewart +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bmagnusson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: carlosdanielcsantos +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: chaimdemulder +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: chris-b1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dickreuter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: discort +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dr-leo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dubourg
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dwkenefick +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: funnycrab +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gfyoung
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: goldenbull +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: hesham.shabana@hotmail.com
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jojomdt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: linebp +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: manu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: manuels +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mattip +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maxalbert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mcocdawc +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nuffe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: paul-mannino
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pbreach +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sakkemo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: scls19fr
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sinhrks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: stijnvanhoey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the-nose-knows +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: themrmax +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tomrod +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tzinckgraf
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: wandersoncferreira
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: watercrossing +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: wcwagner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: xgdgsc +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'yui-knk  ## New features'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Method `agg` API for DataFrame/Series'
  prefs: []
  type: TYPE_NORMAL
- en: Series & DataFrame have been enhanced to support the aggregation API. This is
    a familiar API from groupby, window operations, and resampling. This allows aggregation
    operations in a concise way by using [`agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") and [`transform()`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform"). The full documentation is [here](../user_guide/basics.html#basics-aggregate)
    ([GH 1623](https://github.com/pandas-dev/pandas/issues/1623)).
  prefs: []
  type: TYPE_NORMAL
- en: Here is a sample
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]'
  prefs: []
  type: TYPE_PRE
- en: One can operate using string function names, callables, lists, or dictionaries
    of these.
  prefs: []
  type: TYPE_NORMAL
- en: Using a single function is equivalent to `.apply`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: Multiple aggregations with a list of functions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE93]'
  prefs: []
  type: TYPE_PRE
- en: 'Using a dict provides the ability to apply specific aggregations per column.
    You will get a matrix-like output of all of the aggregators. The output has one
    column per unique function. Those functions applied to a particular column will
    be `NaN`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE94]'
  prefs: []
  type: TYPE_PRE
- en: The API also supports a `.transform()` function for broadcasting results.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: When presented with mixed dtypes that cannot be aggregated, `.agg()` will only
    take the valid aggregations. This is similar to how groupby `.agg()` works. ([GH
    15015](https://github.com/pandas-dev/pandas/issues/15015))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE96]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE97]  ### Keyword argument `dtype` for data IO'
  prefs: []
  type: TYPE_NORMAL
- en: The `'python'` engine for [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), as well as the [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf") function for parsing fixed-width text files and [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") for parsing Excel files, now accept the `dtype` keyword argument
    for specifying the types of specific columns ([GH 14295](https://github.com/pandas-dev/pandas/issues/14295)).
    See the [io docs](../user_guide/io.html#io-dtypes) for more information.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE98]  ### Method `.to_datetime()` has gained an `origin` parameter'
  prefs: []
  type: TYPE_NORMAL
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") has gained a new parameter, `origin`, to define a reference
    date from where to compute the resulting timestamps when parsing numerical values
    with a specific `unit` specified. ([GH 11276](https://github.com/pandas-dev/pandas/issues/11276),
    [GH 11745](https://github.com/pandas-dev/pandas/issues/11745))'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, with 1960-01-01 as the starting date:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE99]'
  prefs: []
  type: TYPE_PRE
- en: The default is set at `origin='unix'`, which defaults to `1970-01-01 00:00:00`,
    which is commonly called ‘unix epoch’ or POSIX time. This was the previous default,
    so this is a backward compatible change.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE100]  ### GroupBy enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: Strings passed to `DataFrame.groupby()` as the `by` parameter may now reference
    either column names or index level names. Previously, only column names could
    be referenced. This allows to easily group by a column and index level at the
    same time. ([GH 5677](https://github.com/pandas-dev/pandas/issues/5677))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE101]  ### Better support for compressed URLs in `read_csv`'
  prefs: []
  type: TYPE_NORMAL
- en: 'The compression code was refactored ([GH 12688](https://github.com/pandas-dev/pandas/issues/12688)).
    As a result, reading dataframes from URLs in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") or [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") now supports additional compression methods: `xz`, `bz2`,
    and `zip` ([GH 14570](https://github.com/pandas-dev/pandas/issues/14570)). Previously,
    only `gzip` compression was supported. By default, compression of URLs and paths
    are now inferred using their file extensions. Additionally, support for bz2 compression
    in the python 2 C-engine improved ([GH 14874](https://github.com/pandas-dev/pandas/issues/14874)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE102]  ### Pickle file IO now supports compression'
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle"), [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle") and [`Series.to_pickle()`](../reference/api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle") can now read from and write to compressed pickle files.
    Compression methods can be an explicit parameter or be inferred from the file
    extension. See [the docs here.](../user_guide/io.html#io-pickle-compression)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE103]'
  prefs: []
  type: TYPE_PRE
- en: Using an explicit compression type
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE104]'
  prefs: []
  type: TYPE_PRE
- en: 'The default is to infer the compression type from the extension (`compression=''infer''`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE105]  ### UInt64 support improved'
  prefs: []
  type: TYPE_NORMAL
- en: pandas has significantly improved support for operations involving unsigned,
    or purely non-negative, integers. Previously, handling these integers would result
    in improper rounding or data-type casting, leading to incorrect results. Notably,
    a new numerical index, `UInt64Index`, has been created ([GH 14937](https://github.com/pandas-dev/pandas/issues/14937))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE106]'
  prefs: []
  type: TYPE_PRE
- en: Bug in converting object elements of array-like objects to unsigned 64-bit integers
    ([GH 4471](https://github.com/pandas-dev/pandas/issues/4471), [GH 14982](https://github.com/pandas-dev/pandas/issues/14982))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.unique()` in which unsigned 64-bit integers were causing overflow
    ([GH 14721](https://github.com/pandas-dev/pandas/issues/14721))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame` construction in which unsigned 64-bit integer elements were
    being converted to objects ([GH 14881](https://github.com/pandas-dev/pandas/issues/14881))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` in which unsigned 64-bit integer elements were being
    improperly converted to the wrong data types ([GH 14983](https://github.com/pandas-dev/pandas/issues/14983))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.unique()` in which unsigned 64-bit integers were causing overflow
    ([GH 14915](https://github.com/pandas-dev/pandas/issues/14915))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in `pd.value_counts()` in which unsigned 64-bit integers were being erroneously
    truncated in the output ([GH 14934](https://github.com/pandas-dev/pandas/issues/14934))  ###
    GroupBy on categoricals'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In previous versions, `.groupby(..., sort=False)` would fail with a `ValueError`
    when grouping on a categorical series with some categories not appearing in the
    data. ([GH 13179](https://github.com/pandas-dev/pandas/issues/13179))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE107]'
  prefs: []
  type: TYPE_PRE
- en: '**Previous behavior**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE108]'
  prefs: []
  type: TYPE_PRE
- en: '**New behavior**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE109]  ### Table schema output'
  prefs: []
  type: TYPE_NORMAL
- en: The new orient `'table'` for [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") will generate a [Table Schema](http://specs.frictionlessdata.io/json-table-schema/)
    compatible string representation of the data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE110]'
  prefs: []
  type: TYPE_PRE
- en: 'See [IO: Table Schema for more information](../user_guide/io.html#io-table-schema).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Additionally, the repr for `DataFrame` and `Series` can now publish this JSON
    Table schema representation of the Series or DataFrame if you are using IPython
    (or another frontend like [nteract](https://nteract.io/) using the Jupyter messaging
    protocol). This gives frontends like the Jupyter notebook and [nteract](https://nteract.io/)
    more flexibility in how they display pandas objects, since they have more information
    about the data. You must enable this by setting the `display.html.table_schema`
    option to `True`.  ### SciPy sparse matrix from/to SparseDataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: pandas now supports creating sparse dataframes directly from `scipy.sparse.spmatrix`
    instances. See the [documentation](../user_guide/sparse.html#sparse-scipysparse)
    for more information. ([GH 4343](https://github.com/pandas-dev/pandas/issues/4343))
  prefs: []
  type: TYPE_NORMAL
- en: All sparse formats are supported, but matrices that are not in [`COOrdinate`](https://docs.scipy.org/doc/scipy/reference/sparse.html#module-scipy.sparse
    "(in SciPy v1.13.0)") format will be converted, copying data as needed.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE111]'
  prefs: []
  type: TYPE_PRE
- en: 'To convert a `SparseDataFrame` back to sparse SciPy matrix in COO format, you
    can use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE112]  ### Excel output for styled DataFrames'
  prefs: []
  type: TYPE_NORMAL
- en: Experimental support has been added to export `DataFrame.style` formats to Excel
    using the `openpyxl` engine. ([GH 15530](https://github.com/pandas-dev/pandas/issues/15530))
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, after running the following, `styled.xlsx` renders as below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE113]'
  prefs: []
  type: TYPE_PRE
- en: '![../_images/style-excel.png](../Images/505788a349a16f9c1e79c489901cfc1f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'See the [Style documentation](../user_guide/style.html#Export-to-Excel) for
    more detail.  ### IntervalIndex'
  prefs: []
  type: TYPE_NORMAL
- en: pandas has gained an `IntervalIndex` with its own dtype, `interval` as well
    as the `Interval` scalar type. These allow first-class support for interval notation,
    specifically as a return type for the categories in [`cut()`](../reference/api/pandas.cut.html#pandas.cut
    "pandas.cut") and [`qcut()`](../reference/api/pandas.qcut.html#pandas.qcut "pandas.qcut").
    The `IntervalIndex` allows some unique indexing, see the [docs](../user_guide/advanced.html#advanced-intervalindex).
    ([GH 7640](https://github.com/pandas-dev/pandas/issues/7640), [GH 8625](https://github.com/pandas-dev/pandas/issues/8625))
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: These indexing behaviors of the IntervalIndex are provisional and may change
    in a future version of pandas. Feedback on usage is welcome.
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: The returned categories were strings, representing Intervals
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE114]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE115]'
  prefs: []
  type: TYPE_PRE
- en: Furthermore, this allows one to bin *other* data with these same bins, with
    `NaN` representing a missing value similar to other dtypes.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE116]'
  prefs: []
  type: TYPE_PRE
- en: An `IntervalIndex` can also be used in `Series` and `DataFrame` as the index.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE117]'
  prefs: []
  type: TYPE_PRE
- en: 'Selecting via a specific interval:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE118]'
  prefs: []
  type: TYPE_PRE
- en: Selecting via a scalar value that is contained *in* the intervals.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE119]  ### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrame.rolling()` now accepts the parameter `closed=''right''|''left''|''both''|''neither''`
    to choose the rolling window-endpoint closedness. See the [documentation](../user_guide/window.html#window-endpoints)
    ([GH 13965](https://github.com/pandas-dev/pandas/issues/13965))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integration with the `feather-format`, including a new top-level `pd.read_feather()`
    and `DataFrame.to_feather()` method, see [here](../user_guide/io.html#io-feather).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.str.replace()` now accepts a callable, as replacement, which is passed
    to `re.sub` ([GH 15055](https://github.com/pandas-dev/pandas/issues/15055))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.str.replace()` now accepts a compiled regular expression as a pattern
    ([GH 15446](https://github.com/pandas-dev/pandas/issues/15446))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.sort_index` accepts parameters `kind` and `na_position` ([GH 13589](https://github.com/pandas-dev/pandas/issues/13589),
    [GH 14444](https://github.com/pandas-dev/pandas/issues/14444))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame` and `DataFrame.groupby()` have gained a `nunique()` method to count
    the distinct values over an axis ([GH 14336](https://github.com/pandas-dev/pandas/issues/14336),
    [GH 15197](https://github.com/pandas-dev/pandas/issues/15197)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame` has gained a `melt()` method, equivalent to `pd.melt()`, for unpivoting
    from a wide to long format ([GH 12640](https://github.com/pandas-dev/pandas/issues/12640)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_excel()` now preserves sheet order when using `sheetname=None` ([GH
    9930](https://github.com/pandas-dev/pandas/issues/9930))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Multiple offset aliases with decimal points are now supported (e.g. `0.5min`
    is parsed as `30s`) ([GH 8419](https://github.com/pandas-dev/pandas/issues/8419))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.isnull()` and `.notnull()` have been added to `Index` object to make them
    more consistent with the `Series` API ([GH 15300](https://github.com/pandas-dev/pandas/issues/15300))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New `UnsortedIndexError` (subclass of `KeyError`) raised when indexing/slicing
    into an unsorted MultiIndex ([GH 11897](https://github.com/pandas-dev/pandas/issues/11897)).
    This allows differentiation between errors due to lack of sorting or an incorrect
    key. See [here](../user_guide/advanced.html#advanced-unsorted)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`MultiIndex` has gained a `.to_frame()` method to convert to a `DataFrame`
    ([GH 12397](https://github.com/pandas-dev/pandas/issues/12397))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.cut` and `pd.qcut` now support datetime64 and timedelta64 dtypes ([GH 14714](https://github.com/pandas-dev/pandas/issues/14714),
    [GH 14798](https://github.com/pandas-dev/pandas/issues/14798))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.qcut` has gained the `duplicates=''raise''|''drop''` option to control
    whether to raise on duplicated edges ([GH 7751](https://github.com/pandas-dev/pandas/issues/7751))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series` provides a `to_excel` method to output Excel files ([GH 8825](https://github.com/pandas-dev/pandas/issues/8825))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `usecols` argument in `pd.read_csv()` now accepts a callable function as
    a value ([GH 14154](https://github.com/pandas-dev/pandas/issues/14154))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `skiprows` argument in `pd.read_csv()` now accepts a callable function as
    a value ([GH 10882](https://github.com/pandas-dev/pandas/issues/10882))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `nrows` and `chunksize` arguments in `pd.read_csv()` are supported if both
    are passed ([GH 6774](https://github.com/pandas-dev/pandas/issues/6774), [GH 15755](https://github.com/pandas-dev/pandas/issues/15755))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.plot` now prints a title above each subplot if `suplots=True` and
    `title` is a list of strings ([GH 14753](https://github.com/pandas-dev/pandas/issues/14753))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.plot` can pass the matplotlib 2.0 default color cycle as a single
    string as color parameter, see [here](http://matplotlib.org/2.0.0/users/colors.html#cn-color-selection).
    ([GH 15516](https://github.com/pandas-dev/pandas/issues/15516))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.interpolate()` now supports timedelta as an index type with `method=''time''`
    ([GH 6424](https://github.com/pandas-dev/pandas/issues/6424))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Addition of a `level` keyword to `DataFrame/Series.rename` to rename labels
    in the specified level of a MultiIndex ([GH 4160](https://github.com/pandas-dev/pandas/issues/4160)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.reset_index()` will now interpret a tuple `index.name` as a key
    spanning across levels of `columns`, if this is a `MultiIndex` ([GH 16164](https://github.com/pandas-dev/pandas/issues/16164))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Timedelta.isoformat` method added for formatting Timedeltas as an [ISO 8601
    duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). See the [Timedelta
    docs](../user_guide/timedeltas.html#timedeltas-isoformat) ([GH 15136](https://github.com/pandas-dev/pandas/issues/15136))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.select_dtypes()` now allows the string `datetimetz` to generically select
    datetimes with tz ([GH 14910](https://github.com/pandas-dev/pandas/issues/14910))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `.to_latex()` method will now accept `multicolumn` and `multirow` arguments
    to use the accompanying LaTeX enhancements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.merge_asof()` gained the option `direction=''backward''|''forward''|''nearest''`
    ([GH 14887](https://github.com/pandas-dev/pandas/issues/14887))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series/DataFrame.asfreq()` have gained a `fill_value` parameter, to fill missing
    values ([GH 3715](https://github.com/pandas-dev/pandas/issues/3715)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series/DataFrame.resample.asfreq` have gained a `fill_value` parameter, to
    fill missing values during resampling ([GH 3715](https://github.com/pandas-dev/pandas/issues/3715)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.util.hash_pandas_object()`](../reference/api/pandas.util.hash_pandas_object.html#pandas.util.hash_pandas_object
    "pandas.util.hash_pandas_object") has gained the ability to hash a `MultiIndex`
    ([GH 15224](https://github.com/pandas-dev/pandas/issues/15224))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series/DataFrame.squeeze()` have gained the `axis` parameter. ([GH 15339](https://github.com/pandas-dev/pandas/issues/15339))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.to_excel()` has a new `freeze_panes` parameter to turn on Freeze
    Panes when exporting to Excel ([GH 15160](https://github.com/pandas-dev/pandas/issues/15160))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_html()` will parse multiple header rows, creating a MultiIndex header.
    ([GH 13434](https://github.com/pandas-dev/pandas/issues/13434)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HTML table output skips `colspan` or `rowspan` attribute if equal to 1\. ([GH
    15403](https://github.com/pandas-dev/pandas/issues/15403))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.io.formats.style.Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") template now has blocks for easier extension,
    see the [example notebook](../user_guide/style.html#Subclassing) ([GH 15649](https://github.com/pandas-dev/pandas/issues/15649))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Styler.render()` now accepts `**kwargs` to allow user-defined variables in
    the template ([GH 15649](https://github.com/pandas-dev/pandas/issues/15649))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compatibility with Jupyter notebook 5.0; MultiIndex column labels are left-aligned
    and MultiIndex row-labels are top-aligned ([GH 15379](https://github.com/pandas-dev/pandas/issues/15379))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`TimedeltaIndex` now has a custom date-tick formatter specifically designed
    for nanosecond level precision ([GH 8711](https://github.com/pandas-dev/pandas/issues/8711))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.api.types.union_categoricals` gained the `ignore_ordered` argument to allow
    ignoring the ordered attribute of unioned categoricals ([GH 13410](https://github.com/pandas-dev/pandas/issues/13410)).
    See the [categorical union docs](../user_guide/categorical.html#categorical-union)
    for more information.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.to_latex()` and `DataFrame.to_string()` now allow optional header
    aliases. ([GH 15536](https://github.com/pandas-dev/pandas/issues/15536))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Re-enable the `parse_dates` keyword of `pd.read_excel()` to parse string columns
    as dates ([GH 14326](https://github.com/pandas-dev/pandas/issues/14326))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `.empty` property to subclasses of `Index`. ([GH 15270](https://github.com/pandas-dev/pandas/issues/15270))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enabled floor division for `Timedelta` and `TimedeltaIndex` ([GH 15828](https://github.com/pandas-dev/pandas/issues/15828))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.io.json.json_normalize()` gained the option `errors=''ignore''|''raise''`;
    the default is `errors=''raise''` which is backward compatible. ([GH 14583](https://github.com/pandas-dev/pandas/issues/14583))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.io.json.json_normalize()` with an empty `list` will return an empty
    `DataFrame` ([GH 15534](https://github.com/pandas-dev/pandas/issues/15534))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.io.json.json_normalize()` has gained a `sep` option that accepts `str`
    to separate joined fields; the default is “.”, which is backward compatible. ([GH
    14883](https://github.com/pandas-dev/pandas/issues/14883))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.remove_unused_levels()`](../reference/api/pandas.MultiIndex.remove_unused_levels.html#pandas.MultiIndex.remove_unused_levels
    "pandas.MultiIndex.remove_unused_levels") has been added to facilitate [removing
    unused levels](../user_guide/advanced.html#advanced-shown-levels). ([GH 15694](https://github.com/pandas-dev/pandas/issues/15694))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_csv()` will now raise a `ParserError` error whenever any parsing error
    occurs ([GH 15913](https://github.com/pandas-dev/pandas/issues/15913), [GH 15925](https://github.com/pandas-dev/pandas/issues/15925))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_csv()` now supports the `error_bad_lines` and `warn_bad_lines` arguments
    for the Python parser ([GH 15925](https://github.com/pandas-dev/pandas/issues/15925))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `display.show_dimensions` option can now also be used to specify whether
    the length of a `Series` should be shown in its repr ([GH 7117](https://github.com/pandas-dev/pandas/issues/7117)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`parallel_coordinates()` has gained a `sort_labels` keyword argument that sorts
    class labels and the colors assigned to them ([GH 15908](https://github.com/pandas-dev/pandas/issues/15908))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Options added to allow one to turn on/off using `bottleneck` and `numexpr`,
    see [here](../user_guide/basics.html#basics-accelerate) ([GH 16157](https://github.com/pandas-dev/pandas/issues/16157))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.style.bar()` now accepts two more options to further customize the
    bar chart. Bar alignment is set with `align=''left''|''mid''|''zero''`, the default
    is “left”, which is backward compatible; You can now pass a list of `color=[color_negative,
    color_positive]`. ([GH 14757](https://github.com/pandas-dev/pandas/issues/14757))  ###
    Method `agg` API for DataFrame/Series'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Series & DataFrame have been enhanced to support the aggregation API. This is
    a familiar API from groupby, window operations, and resampling. This allows aggregation
    operations in a concise way by using [`agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") and [`transform()`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform"). The full documentation is [here](../user_guide/basics.html#basics-aggregate)
    ([GH 1623](https://github.com/pandas-dev/pandas/issues/1623)).
  prefs: []
  type: TYPE_NORMAL
- en: Here is a sample
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE120]'
  prefs: []
  type: TYPE_PRE
- en: One can operate using string function names, callables, lists, or dictionaries
    of these.
  prefs: []
  type: TYPE_NORMAL
- en: Using a single function is equivalent to `.apply`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE121]'
  prefs: []
  type: TYPE_PRE
- en: Multiple aggregations with a list of functions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE122]'
  prefs: []
  type: TYPE_PRE
- en: 'Using a dict provides the ability to apply specific aggregations per column.
    You will get a matrix-like output of all of the aggregators. The output has one
    column per unique function. Those functions applied to a particular column will
    be `NaN`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE123]'
  prefs: []
  type: TYPE_PRE
- en: The API also supports a `.transform()` function for broadcasting results.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE124]'
  prefs: []
  type: TYPE_PRE
- en: When presented with mixed dtypes that cannot be aggregated, `.agg()` will only
    take the valid aggregations. This is similar to how groupby `.agg()` works. ([GH
    15015](https://github.com/pandas-dev/pandas/issues/15015))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE125]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE126]'
  prefs: []
  type: TYPE_PRE
- en: '### Keyword argument `dtype` for data IO'
  prefs: []
  type: TYPE_NORMAL
- en: The `'python'` engine for [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), as well as the [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf") function for parsing fixed-width text files and [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") for parsing Excel files, now accept the `dtype` keyword argument
    for specifying the types of specific columns ([GH 14295](https://github.com/pandas-dev/pandas/issues/14295)).
    See the [io docs](../user_guide/io.html#io-dtypes) for more information.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE127]'
  prefs: []
  type: TYPE_PRE
- en: '### Method `.to_datetime()` has gained an `origin` parameter'
  prefs: []
  type: TYPE_NORMAL
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") has gained a new parameter, `origin`, to define a reference
    date from where to compute the resulting timestamps when parsing numerical values
    with a specific `unit` specified. ([GH 11276](https://github.com/pandas-dev/pandas/issues/11276),
    [GH 11745](https://github.com/pandas-dev/pandas/issues/11745))'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, with 1960-01-01 as the starting date:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE128]'
  prefs: []
  type: TYPE_PRE
- en: The default is set at `origin='unix'`, which defaults to `1970-01-01 00:00:00`,
    which is commonly called ‘unix epoch’ or POSIX time. This was the previous default,
    so this is a backward compatible change.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE129]'
  prefs: []
  type: TYPE_PRE
- en: '### GroupBy enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: Strings passed to `DataFrame.groupby()` as the `by` parameter may now reference
    either column names or index level names. Previously, only column names could
    be referenced. This allows to easily group by a column and index level at the
    same time. ([GH 5677](https://github.com/pandas-dev/pandas/issues/5677))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE130]'
  prefs: []
  type: TYPE_PRE
- en: '### Better support for compressed URLs in `read_csv`'
  prefs: []
  type: TYPE_NORMAL
- en: 'The compression code was refactored ([GH 12688](https://github.com/pandas-dev/pandas/issues/12688)).
    As a result, reading dataframes from URLs in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") or [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") now supports additional compression methods: `xz`, `bz2`,
    and `zip` ([GH 14570](https://github.com/pandas-dev/pandas/issues/14570)). Previously,
    only `gzip` compression was supported. By default, compression of URLs and paths
    are now inferred using their file extensions. Additionally, support for bz2 compression
    in the python 2 C-engine improved ([GH 14874](https://github.com/pandas-dev/pandas/issues/14874)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE131]'
  prefs: []
  type: TYPE_PRE
- en: '### Pickle file IO now supports compression'
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_pickle()`](../reference/api/pandas.read_pickle.html#pandas.read_pickle
    "pandas.read_pickle"), [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle") and [`Series.to_pickle()`](../reference/api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle") can now read from and write to compressed pickle files.
    Compression methods can be an explicit parameter or be inferred from the file
    extension. See [the docs here.](../user_guide/io.html#io-pickle-compression)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE132]'
  prefs: []
  type: TYPE_PRE
- en: Using an explicit compression type
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE133]'
  prefs: []
  type: TYPE_PRE
- en: 'The default is to infer the compression type from the extension (`compression=''infer''`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE134]'
  prefs: []
  type: TYPE_PRE
- en: '### UInt64 support improved'
  prefs: []
  type: TYPE_NORMAL
- en: pandas has significantly improved support for operations involving unsigned,
    or purely non-negative, integers. Previously, handling these integers would result
    in improper rounding or data-type casting, leading to incorrect results. Notably,
    a new numerical index, `UInt64Index`, has been created ([GH 14937](https://github.com/pandas-dev/pandas/issues/14937))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE135]'
  prefs: []
  type: TYPE_PRE
- en: Bug in converting object elements of array-like objects to unsigned 64-bit integers
    ([GH 4471](https://github.com/pandas-dev/pandas/issues/4471), [GH 14982](https://github.com/pandas-dev/pandas/issues/14982))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.unique()` in which unsigned 64-bit integers were causing overflow
    ([GH 14721](https://github.com/pandas-dev/pandas/issues/14721))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame` construction in which unsigned 64-bit integer elements were
    being converted to objects ([GH 14881](https://github.com/pandas-dev/pandas/issues/14881))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` in which unsigned 64-bit integer elements were being
    improperly converted to the wrong data types ([GH 14983](https://github.com/pandas-dev/pandas/issues/14983))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.unique()` in which unsigned 64-bit integers were causing overflow
    ([GH 14915](https://github.com/pandas-dev/pandas/issues/14915))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.value_counts()` in which unsigned 64-bit integers were being erroneously
    truncated in the output ([GH 14934](https://github.com/pandas-dev/pandas/issues/14934))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### GroupBy on categoricals'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions, `.groupby(..., sort=False)` would fail with a `ValueError`
    when grouping on a categorical series with some categories not appearing in the
    data. ([GH 13179](https://github.com/pandas-dev/pandas/issues/13179))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE136]'
  prefs: []
  type: TYPE_PRE
- en: '**Previous behavior**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE137]'
  prefs: []
  type: TYPE_PRE
- en: '**New behavior**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE138]'
  prefs: []
  type: TYPE_PRE
- en: '### Table schema output'
  prefs: []
  type: TYPE_NORMAL
- en: The new orient `'table'` for [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") will generate a [Table Schema](http://specs.frictionlessdata.io/json-table-schema/)
    compatible string representation of the data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE139]'
  prefs: []
  type: TYPE_PRE
- en: 'See [IO: Table Schema for more information](../user_guide/io.html#io-table-schema).'
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, the repr for `DataFrame` and `Series` can now publish this JSON
    Table schema representation of the Series or DataFrame if you are using IPython
    (or another frontend like [nteract](https://nteract.io/) using the Jupyter messaging
    protocol). This gives frontends like the Jupyter notebook and [nteract](https://nteract.io/)
    more flexibility in how they display pandas objects, since they have more information
    about the data. You must enable this by setting the `display.html.table_schema`
    option to `True`.
  prefs: []
  type: TYPE_NORMAL
- en: '### SciPy sparse matrix from/to SparseDataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: pandas now supports creating sparse dataframes directly from `scipy.sparse.spmatrix`
    instances. See the [documentation](../user_guide/sparse.html#sparse-scipysparse)
    for more information. ([GH 4343](https://github.com/pandas-dev/pandas/issues/4343))
  prefs: []
  type: TYPE_NORMAL
- en: All sparse formats are supported, but matrices that are not in [`COOrdinate`](https://docs.scipy.org/doc/scipy/reference/sparse.html#module-scipy.sparse
    "(in SciPy v1.13.0)") format will be converted, copying data as needed.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE140]'
  prefs: []
  type: TYPE_PRE
- en: 'To convert a `SparseDataFrame` back to sparse SciPy matrix in COO format, you
    can use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE141]'
  prefs: []
  type: TYPE_PRE
- en: '### Excel output for styled DataFrames'
  prefs: []
  type: TYPE_NORMAL
- en: Experimental support has been added to export `DataFrame.style` formats to Excel
    using the `openpyxl` engine. ([GH 15530](https://github.com/pandas-dev/pandas/issues/15530))
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, after running the following, `styled.xlsx` renders as below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE142]'
  prefs: []
  type: TYPE_PRE
- en: '![../_images/style-excel.png](../Images/505788a349a16f9c1e79c489901cfc1f.png)'
  prefs: []
  type: TYPE_IMG
- en: See the [Style documentation](../user_guide/style.html#Export-to-Excel) for
    more detail.
  prefs: []
  type: TYPE_NORMAL
- en: '### IntervalIndex'
  prefs: []
  type: TYPE_NORMAL
- en: pandas has gained an `IntervalIndex` with its own dtype, `interval` as well
    as the `Interval` scalar type. These allow first-class support for interval notation,
    specifically as a return type for the categories in [`cut()`](../reference/api/pandas.cut.html#pandas.cut
    "pandas.cut") and [`qcut()`](../reference/api/pandas.qcut.html#pandas.qcut "pandas.qcut").
    The `IntervalIndex` allows some unique indexing, see the [docs](../user_guide/advanced.html#advanced-intervalindex).
    ([GH 7640](https://github.com/pandas-dev/pandas/issues/7640), [GH 8625](https://github.com/pandas-dev/pandas/issues/8625))
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: These indexing behaviors of the IntervalIndex are provisional and may change
    in a future version of pandas. Feedback on usage is welcome.
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: The returned categories were strings, representing Intervals
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE143]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE144]'
  prefs: []
  type: TYPE_PRE
- en: Furthermore, this allows one to bin *other* data with these same bins, with
    `NaN` representing a missing value similar to other dtypes.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE145]'
  prefs: []
  type: TYPE_PRE
- en: An `IntervalIndex` can also be used in `Series` and `DataFrame` as the index.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE146]'
  prefs: []
  type: TYPE_PRE
- en: 'Selecting via a specific interval:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE147]'
  prefs: []
  type: TYPE_PRE
- en: Selecting via a scalar value that is contained *in* the intervals.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE148]'
  prefs: []
  type: TYPE_PRE
- en: '### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrame.rolling()` now accepts the parameter `closed=''right''|''left''|''both''|''neither''`
    to choose the rolling window-endpoint closedness. See the [documentation](../user_guide/window.html#window-endpoints)
    ([GH 13965](https://github.com/pandas-dev/pandas/issues/13965))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integration with the `feather-format`, including a new top-level `pd.read_feather()`
    and `DataFrame.to_feather()` method, see [here](../user_guide/io.html#io-feather).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.str.replace()` now accepts a callable, as replacement, which is passed
    to `re.sub` ([GH 15055](https://github.com/pandas-dev/pandas/issues/15055))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.str.replace()` now accepts a compiled regular expression as a pattern
    ([GH 15446](https://github.com/pandas-dev/pandas/issues/15446))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.sort_index` accepts parameters `kind` and `na_position` ([GH 13589](https://github.com/pandas-dev/pandas/issues/13589),
    [GH 14444](https://github.com/pandas-dev/pandas/issues/14444))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame` and `DataFrame.groupby()` have gained a `nunique()` method to count
    the distinct values over an axis ([GH 14336](https://github.com/pandas-dev/pandas/issues/14336),
    [GH 15197](https://github.com/pandas-dev/pandas/issues/15197)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame` has gained a `melt()` method, equivalent to `pd.melt()`, for unpivoting
    from a wide to long format ([GH 12640](https://github.com/pandas-dev/pandas/issues/12640)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_excel()` now preserves sheet order when using `sheetname=None` ([GH
    9930](https://github.com/pandas-dev/pandas/issues/9930))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Multiple offset aliases with decimal points are now supported (e.g. `0.5min`
    is parsed as `30s`) ([GH 8419](https://github.com/pandas-dev/pandas/issues/8419))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.isnull()` and `.notnull()` have been added to `Index` object to make them
    more consistent with the `Series` API ([GH 15300](https://github.com/pandas-dev/pandas/issues/15300))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New `UnsortedIndexError` (subclass of `KeyError`) raised when indexing/slicing
    into an unsorted MultiIndex ([GH 11897](https://github.com/pandas-dev/pandas/issues/11897)).
    This allows differentiation between errors due to lack of sorting or an incorrect
    key. See [here](../user_guide/advanced.html#advanced-unsorted)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`MultiIndex` has gained a `.to_frame()` method to convert to a `DataFrame`
    ([GH 12397](https://github.com/pandas-dev/pandas/issues/12397))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.cut` and `pd.qcut` now support datetime64 and timedelta64 dtypes ([GH 14714](https://github.com/pandas-dev/pandas/issues/14714),
    [GH 14798](https://github.com/pandas-dev/pandas/issues/14798))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.qcut` has gained the `duplicates=''raise''|''drop''` option to control
    whether to raise on duplicated edges ([GH 7751](https://github.com/pandas-dev/pandas/issues/7751))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series` provides a `to_excel` method to output Excel files ([GH 8825](https://github.com/pandas-dev/pandas/issues/8825))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `usecols` argument in `pd.read_csv()` now accepts a callable function as
    a value ([GH 14154](https://github.com/pandas-dev/pandas/issues/14154))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `skiprows` argument in `pd.read_csv()` now accepts a callable function as
    a value ([GH 10882](https://github.com/pandas-dev/pandas/issues/10882))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `nrows` and `chunksize` arguments in `pd.read_csv()` are supported if both
    are passed ([GH 6774](https://github.com/pandas-dev/pandas/issues/6774), [GH 15755](https://github.com/pandas-dev/pandas/issues/15755))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.plot` now prints a title above each subplot if `suplots=True` and
    `title` is a list of strings ([GH 14753](https://github.com/pandas-dev/pandas/issues/14753))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.plot` can pass the matplotlib 2.0 default color cycle as a single
    string as color parameter, see [here](http://matplotlib.org/2.0.0/users/colors.html#cn-color-selection).
    ([GH 15516](https://github.com/pandas-dev/pandas/issues/15516))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.interpolate()` now supports timedelta as an index type with `method=''time''`
    ([GH 6424](https://github.com/pandas-dev/pandas/issues/6424))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Addition of a `level` keyword to `DataFrame/Series.rename` to rename labels
    in the specified level of a MultiIndex ([GH 4160](https://github.com/pandas-dev/pandas/issues/4160)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.reset_index()` will now interpret a tuple `index.name` as a key
    spanning across levels of `columns`, if this is a `MultiIndex` ([GH 16164](https://github.com/pandas-dev/pandas/issues/16164))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Timedelta.isoformat` method added for formatting Timedeltas as an [ISO 8601
    duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). See the [Timedelta
    docs](../user_guide/timedeltas.html#timedeltas-isoformat) ([GH 15136](https://github.com/pandas-dev/pandas/issues/15136))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.select_dtypes()` now allows the string `datetimetz` to generically select
    datetimes with tz ([GH 14910](https://github.com/pandas-dev/pandas/issues/14910))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `.to_latex()` method will now accept `multicolumn` and `multirow` arguments
    to use the accompanying LaTeX enhancements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.merge_asof()` gained the option `direction=''backward''|''forward''|''nearest''`
    ([GH 14887](https://github.com/pandas-dev/pandas/issues/14887))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series/DataFrame.asfreq()` have gained a `fill_value` parameter, to fill missing
    values ([GH 3715](https://github.com/pandas-dev/pandas/issues/3715)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series/DataFrame.resample.asfreq` have gained a `fill_value` parameter, to
    fill missing values during resampling ([GH 3715](https://github.com/pandas-dev/pandas/issues/3715)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.util.hash_pandas_object()`](../reference/api/pandas.util.hash_pandas_object.html#pandas.util.hash_pandas_object
    "pandas.util.hash_pandas_object") has gained the ability to hash a `MultiIndex`
    ([GH 15224](https://github.com/pandas-dev/pandas/issues/15224))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series/DataFrame.squeeze()` have gained the `axis` parameter. ([GH 15339](https://github.com/pandas-dev/pandas/issues/15339))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.to_excel()` has a new `freeze_panes` parameter to turn on Freeze
    Panes when exporting to Excel ([GH 15160](https://github.com/pandas-dev/pandas/issues/15160))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_html()` will parse multiple header rows, creating a MultiIndex header.
    ([GH 13434](https://github.com/pandas-dev/pandas/issues/13434)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HTML table output skips `colspan` or `rowspan` attribute if equal to 1\. ([GH
    15403](https://github.com/pandas-dev/pandas/issues/15403))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.io.formats.style.Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") template now has blocks for easier extension,
    see the [example notebook](../user_guide/style.html#Subclassing) ([GH 15649](https://github.com/pandas-dev/pandas/issues/15649))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Styler.render()` now accepts `**kwargs` to allow user-defined variables in
    the template ([GH 15649](https://github.com/pandas-dev/pandas/issues/15649))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compatibility with Jupyter notebook 5.0; MultiIndex column labels are left-aligned
    and MultiIndex row-labels are top-aligned ([GH 15379](https://github.com/pandas-dev/pandas/issues/15379))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`TimedeltaIndex` now has a custom date-tick formatter specifically designed
    for nanosecond level precision ([GH 8711](https://github.com/pandas-dev/pandas/issues/8711))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.api.types.union_categoricals` gained the `ignore_ordered` argument to allow
    ignoring the ordered attribute of unioned categoricals ([GH 13410](https://github.com/pandas-dev/pandas/issues/13410)).
    See the [categorical union docs](../user_guide/categorical.html#categorical-union)
    for more information.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.to_latex()` and `DataFrame.to_string()` now allow optional header
    aliases. ([GH 15536](https://github.com/pandas-dev/pandas/issues/15536))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Re-enable the `parse_dates` keyword of `pd.read_excel()` to parse string columns
    as dates ([GH 14326](https://github.com/pandas-dev/pandas/issues/14326))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `.empty` property to subclasses of `Index`. ([GH 15270](https://github.com/pandas-dev/pandas/issues/15270))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enabled floor division for `Timedelta` and `TimedeltaIndex` ([GH 15828](https://github.com/pandas-dev/pandas/issues/15828))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.io.json.json_normalize()` gained the option `errors=''ignore''|''raise''`;
    the default is `errors=''raise''` which is backward compatible. ([GH 14583](https://github.com/pandas-dev/pandas/issues/14583))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.io.json.json_normalize()` with an empty `list` will return an empty
    `DataFrame` ([GH 15534](https://github.com/pandas-dev/pandas/issues/15534))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.io.json.json_normalize()` has gained a `sep` option that accepts `str`
    to separate joined fields; the default is “.”, which is backward compatible. ([GH
    14883](https://github.com/pandas-dev/pandas/issues/14883))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MultiIndex.remove_unused_levels()`](../reference/api/pandas.MultiIndex.remove_unused_levels.html#pandas.MultiIndex.remove_unused_levels
    "pandas.MultiIndex.remove_unused_levels") has been added to facilitate [removing
    unused levels](../user_guide/advanced.html#advanced-shown-levels). ([GH 15694](https://github.com/pandas-dev/pandas/issues/15694))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_csv()` will now raise a `ParserError` error whenever any parsing error
    occurs ([GH 15913](https://github.com/pandas-dev/pandas/issues/15913), [GH 15925](https://github.com/pandas-dev/pandas/issues/15925))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_csv()` now supports the `error_bad_lines` and `warn_bad_lines` arguments
    for the Python parser ([GH 15925](https://github.com/pandas-dev/pandas/issues/15925))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `display.show_dimensions` option can now also be used to specify whether
    the length of a `Series` should be shown in its repr ([GH 7117](https://github.com/pandas-dev/pandas/issues/7117)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`parallel_coordinates()` has gained a `sort_labels` keyword argument that sorts
    class labels and the colors assigned to them ([GH 15908](https://github.com/pandas-dev/pandas/issues/15908))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Options added to allow one to turn on/off using `bottleneck` and `numexpr`,
    see [here](../user_guide/basics.html#basics-accelerate) ([GH 16157](https://github.com/pandas-dev/pandas/issues/16157))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.style.bar()` now accepts two more options to further customize the
    bar chart. Bar alignment is set with `align=''left''|''mid''|''zero''`, the default
    is “left”, which is backward compatible; You can now pass a list of `color=[color_negative,
    color_positive]`. ([GH 14757](https://github.com/pandas-dev/pandas/issues/14757))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Backwards incompatible API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '### Possible incompatibility for HDF5 formats created with pandas < 0.13.0'
  prefs: []
  type: TYPE_NORMAL
- en: '`pd.TimeSeries` was deprecated officially in 0.17.0, though has already been
    an alias since 0.13.0\. It has been dropped in favor of `pd.Series`. ([GH 15098](https://github.com/pandas-dev/pandas/issues/15098)).'
  prefs: []
  type: TYPE_NORMAL
- en: This *may* cause HDF5 files that were created in prior versions to become unreadable
    if `pd.TimeSeries` was used. This is most likely to be for pandas < 0.13.0\. If
    you find yourself in this situation. You can use a recent prior version of pandas
    to read in your HDF5 files, then write them out again after applying the procedure
    below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE149]  ### Map on Index types now return other Index types'
  prefs: []
  type: TYPE_NORMAL
- en: '`map` on an `Index` now returns an `Index`, not a numpy array ([GH 12766](https://github.com/pandas-dev/pandas/issues/12766))'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE150]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE151]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE152]'
  prefs: []
  type: TYPE_PRE
- en: '`map` on a `Series` with `datetime64` values may return `int64` dtypes rather
    than `int32`'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE153]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE154]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE155]  ### Accessing datetime fields of Index now return Index'
  prefs: []
  type: TYPE_NORMAL
- en: The datetime-related attributes (see [here](../user_guide/timeseries.html#timeseries-components)
    for an overview) of `DatetimeIndex`, `PeriodIndex` and `TimedeltaIndex` previously
    returned numpy arrays. They will now return a new `Index` object, except in the
    case of a boolean field, where the result will still be a boolean ndarray. ([GH
    15022](https://github.com/pandas-dev/pandas/issues/15022))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behaviour:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE156]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE157]'
  prefs: []
  type: TYPE_PRE
- en: 'This has the advantage that specific `Index` methods are still available on
    the result. On the other hand, this might have backward incompatibilities: e.g.
    compared to numpy arrays, `Index` objects are not mutable. To get the original
    ndarray, you can always convert explicitly using `np.asarray(idx.hour)`.  ###
    pd.unique will now be consistent with extension types'
  prefs: []
  type: TYPE_NORMAL
- en: In prior versions, using [`Series.unique()`](../reference/api/pandas.Series.unique.html#pandas.Series.unique
    "pandas.Series.unique") and [`pandas.unique()`](../reference/api/pandas.unique.html#pandas.unique
    "pandas.unique") on `Categorical` and tz-aware data-types would yield different
    return types. These are now made consistent. ([GH 15903](https://github.com/pandas-dev/pandas/issues/15903))
  prefs: []
  type: TYPE_NORMAL
- en: Datetime tz-aware
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Previous behaviour:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE158]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'New behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE159]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Categoricals
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Previous behaviour:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE160]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'New behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE161]  ### S3 file handling'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'pandas now uses [s3fs](http://s3fs.readthedocs.io/) for handling S3 connections.
    This shouldn’t break any code. However, since `s3fs` is not a required dependency,
    you will need to install it separately, like `boto` in prior versions of pandas.
    ([GH 11915](https://github.com/pandas-dev/pandas/issues/11915)).  ### Partial
    string indexing changes'
  prefs: []
  type: TYPE_NORMAL
- en: '[DatetimeIndex Partial String Indexing](../user_guide/timeseries.html#timeseries-partialindexing)
    now works as an exact match, provided that string resolution coincides with index
    resolution, including a case when both are seconds ([GH 14826](https://github.com/pandas-dev/pandas/issues/14826)).
    See [Slice vs. Exact Match](../user_guide/timeseries.html#timeseries-slice-vs-exact-match)
    for details.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE162]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE163]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE164]  ### Concat of different float dtypes will not automatically upcast'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, `concat` of multiple objects with different `float` dtypes would
    automatically upcast results to a dtype of `float64`. Now the smallest acceptable
    dtype will be used ([GH 13247](https://github.com/pandas-dev/pandas/issues/13247))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE165]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE166]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE167]  ### pandas Google BigQuery support has moved'
  prefs: []
  type: TYPE_NORMAL
- en: 'pandas has split off Google BigQuery support into a separate package `pandas-gbq`.
    You can `conda install pandas-gbq -c conda-forge` or `pip install pandas-gbq`
    to get it. The functionality of [`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq
    "pandas.read_gbq") and [`DataFrame.to_gbq()`](../reference/api/pandas.DataFrame.to_gbq.html#pandas.DataFrame.to_gbq
    "pandas.DataFrame.to_gbq") remain the same with the currently released version
    of `pandas-gbq=0.1.4`. Documentation is now hosted [here](https://pandas-gbq.readthedocs.io/)
    ([GH 15347](https://github.com/pandas-dev/pandas/issues/15347))  ### Memory usage
    for Index is more accurate'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions, showing `.memory_usage()` on a pandas structure that has
    an index, would only include actual index values and not include structures that
    facilitated fast indexing. This will generally be different for `Index` and `MultiIndex`
    and less-so for other index types. ([GH 15237](https://github.com/pandas-dev/pandas/issues/15237))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE168]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE169]  ### DataFrame.sort_index changes'
  prefs: []
  type: TYPE_NORMAL
- en: In certain cases, calling `.sort_index()` on a MultiIndexed DataFrame would
    return the *same* DataFrame without seeming to sort. This would happen with a
    `lexsorted`, but non-monotonic levels. ([GH 15622](https://github.com/pandas-dev/pandas/issues/15622),
    [GH 15687](https://github.com/pandas-dev/pandas/issues/15687), [GH 14015](https://github.com/pandas-dev/pandas/issues/14015),
    [GH 13431](https://github.com/pandas-dev/pandas/issues/13431), [GH 15797](https://github.com/pandas-dev/pandas/issues/15797))
  prefs: []
  type: TYPE_NORMAL
- en: 'This is *unchanged* from prior versions, but shown for illustration purposes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE170]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE171]'
  prefs: []
  type: TYPE_PRE
- en: Sorting works as expected
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE172]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE173]'
  prefs: []
  type: TYPE_PRE
- en: However, this example, which has a non-monotonic 2nd level, doesn’t behave as
    desired.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE174]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE175]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE176]  ### GroupBy describe formatting'
  prefs: []
  type: TYPE_NORMAL
- en: The output formatting of `groupby.describe()` now labels the `describe()` metrics
    in the columns instead of the index. This format is consistent with `groupby.agg()`
    when applying multiple functions at once. ([GH 4792](https://github.com/pandas-dev/pandas/issues/4792))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE177]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE178]  ### Window binary corr/cov operations return a MultiIndex DataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: A binary window operation, like `.corr()` or `.cov()`, when operating on a `.rolling(..)`,
    `.expanding(..)`, or `.ewm(..)` object, will now return a 2-level `MultiIndexed
    DataFrame` rather than a `Panel`, as `Panel` is now deprecated, see [here](#whatsnew-0200-api-breaking-deprecate-panel).
    These are equivalent in function, but a MultiIndexed `DataFrame` enjoys more support
    in pandas. See the section on [Windowed Binary Operations](../user_guide/window.html#window-cov-corr)
    for more information. ([GH 15677](https://github.com/pandas-dev/pandas/issues/15677))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE179]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE180]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE181]'
  prefs: []
  type: TYPE_PRE
- en: Retrieving a correlation matrix for a cross-section
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE182]  ### HDFStore where string comparison'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions most types could be compared to string column in a `HDFStore`
    usually resulting in an invalid comparison, returning an empty result frame. These
    comparisons will now raise a `TypeError` ([GH 15492](https://github.com/pandas-dev/pandas/issues/15492))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE183]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE184]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE185]  ### Index.intersection and inner join now preserve the order of the
    left Index'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Index.intersection()`](../reference/api/pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection") now preserves the order of the calling `Index` (left)
    instead of the other `Index` (right) ([GH 15582](https://github.com/pandas-dev/pandas/issues/15582)).
    This affects inner joins, [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") and [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge"), and the `.align` method.'
  prefs: []
  type: TYPE_NORMAL
- en: '`Index.intersection`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE186]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE187]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'New behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE188]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`DataFrame.join` and `pd.merge`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE189]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE190]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'New behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE191]  ### Pivot table always returns a DataFrame'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The documentation for [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") states that a `DataFrame` is *always* returned. Here a bug
    is fixed that allowed this to return a `Series` under certain circumstance. ([GH
    4386](https://github.com/pandas-dev/pandas/issues/4386))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE192]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE193]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE194]  ### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '`numexpr` version is now required to be >= 2.4.6 and it will not be used at
    all if this requisite is not fulfilled ([GH 15213](https://github.com/pandas-dev/pandas/issues/15213)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`CParserError` has been renamed to `ParserError` in `pd.read_csv()` and will
    be removed in the future ([GH 12665](https://github.com/pandas-dev/pandas/issues/12665))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SparseArray.cumsum()` and `SparseSeries.cumsum()` will now always return `SparseArray`
    and `SparseSeries` respectively ([GH 12855](https://github.com/pandas-dev/pandas/issues/12855))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.applymap()` with an empty `DataFrame` will return a copy of the
    empty `DataFrame` instead of a `Series` ([GH 8222](https://github.com/pandas-dev/pandas/issues/8222))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.map()` now respects default values of dictionary subclasses with a
    `__missing__` method, such as `collections.Counter` ([GH 15999](https://github.com/pandas-dev/pandas/issues/15999))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.loc` has compat with `.ix` for accepting iterators, and NamedTuples ([GH
    15120](https://github.com/pandas-dev/pandas/issues/15120))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`interpolate()` and `fillna()` will raise a `ValueError` if the `limit` keyword
    argument is not greater than 0\. ([GH 9217](https://github.com/pandas-dev/pandas/issues/9217))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_csv()` will now issue a `ParserWarning` whenever there are conflicting
    values provided by the `dialect` parameter and the user ([GH 14898](https://github.com/pandas-dev/pandas/issues/14898))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_csv()` will now raise a `ValueError` for the C engine if the quote
    character is larger than one byte ([GH 11592](https://github.com/pandas-dev/pandas/issues/11592))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`inplace` arguments now require a boolean value, else a `ValueError` is thrown
    ([GH 14189](https://github.com/pandas-dev/pandas/issues/14189))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.api.types.is_datetime64_ns_dtype` will now report `True` on a tz-aware
    dtype, similar to `pandas.api.types.is_datetime64_any_dtype`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.asof()` will return a null filled `Series` instead the scalar `NaN`
    if a match is not found ([GH 15118](https://github.com/pandas-dev/pandas/issues/15118))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Specific support for `copy.copy()` and `copy.deepcopy()` functions on NDFrame
    objects ([GH 15444](https://github.com/pandas-dev/pandas/issues/15444))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.sort_values()` accepts a one element list of bool for consistency with
    the behavior of `DataFrame.sort_values()` ([GH 15604](https://github.com/pandas-dev/pandas/issues/15604))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.merge()` and `.join()` on `category` dtype columns will now preserve the
    category dtype when possible ([GH 10409](https://github.com/pandas-dev/pandas/issues/10409))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SparseDataFrame.default_fill_value` will be 0, previously was `nan` in the
    return from `pd.get_dummies(..., sparse=True)` ([GH 15594](https://github.com/pandas-dev/pandas/issues/15594))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The default behaviour of `Series.str.match` has changed from extracting groups
    to matching the pattern. The extracting behaviour was deprecated since pandas
    version 0.13.0 and can be done with the `Series.str.extract` method ([GH 5224](https://github.com/pandas-dev/pandas/issues/5224)).
    As a consequence, the `as_indexer` keyword is ignored (no longer needed to specify
    the new behaviour) and is deprecated.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NaT` will now correctly report `False` for datetimelike boolean operations
    such as `is_month_start` ([GH 15781](https://github.com/pandas-dev/pandas/issues/15781))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NaT` will now correctly return `np.nan` for `Timedelta` and `Period` accessors
    such as `days` and `quarter` ([GH 15782](https://github.com/pandas-dev/pandas/issues/15782))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NaT` will now returns `NaT` for `tz_localize` and `tz_convert` methods ([GH
    15830](https://github.com/pandas-dev/pandas/issues/15830))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame` and `Panel` constructors with invalid input will now raise `ValueError`
    rather than `PandasError`, if called with scalar inputs and not axes ([GH 15541](https://github.com/pandas-dev/pandas/issues/15541))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame` and `Panel` constructors with invalid input will now raise `ValueError`
    rather than `pandas.core.common.PandasError`, if called with scalar inputs and
    not axes; The exception `PandasError` is removed as well. ([GH 15541](https://github.com/pandas-dev/pandas/issues/15541))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The exception `pandas.core.common.AmbiguousIndexError` is removed as it is
    not referenced ([GH 15541](https://github.com/pandas-dev/pandas/issues/15541))  ###
    Possible incompatibility for HDF5 formats created with pandas < 0.13.0'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.TimeSeries` was deprecated officially in 0.17.0, though has already been
    an alias since 0.13.0\. It has been dropped in favor of `pd.Series`. ([GH 15098](https://github.com/pandas-dev/pandas/issues/15098)).'
  prefs: []
  type: TYPE_NORMAL
- en: This *may* cause HDF5 files that were created in prior versions to become unreadable
    if `pd.TimeSeries` was used. This is most likely to be for pandas < 0.13.0\. If
    you find yourself in this situation. You can use a recent prior version of pandas
    to read in your HDF5 files, then write them out again after applying the procedure
    below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE195]'
  prefs: []
  type: TYPE_PRE
- en: '### Map on Index types now return other Index types'
  prefs: []
  type: TYPE_NORMAL
- en: '`map` on an `Index` now returns an `Index`, not a numpy array ([GH 12766](https://github.com/pandas-dev/pandas/issues/12766))'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE196]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE197]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE198]'
  prefs: []
  type: TYPE_PRE
- en: '`map` on a `Series` with `datetime64` values may return `int64` dtypes rather
    than `int32`'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE199]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE200]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE201]'
  prefs: []
  type: TYPE_PRE
- en: '### Accessing datetime fields of Index now return Index'
  prefs: []
  type: TYPE_NORMAL
- en: The datetime-related attributes (see [here](../user_guide/timeseries.html#timeseries-components)
    for an overview) of `DatetimeIndex`, `PeriodIndex` and `TimedeltaIndex` previously
    returned numpy arrays. They will now return a new `Index` object, except in the
    case of a boolean field, where the result will still be a boolean ndarray. ([GH
    15022](https://github.com/pandas-dev/pandas/issues/15022))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behaviour:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE202]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE203]'
  prefs: []
  type: TYPE_PRE
- en: 'This has the advantage that specific `Index` methods are still available on
    the result. On the other hand, this might have backward incompatibilities: e.g.
    compared to numpy arrays, `Index` objects are not mutable. To get the original
    ndarray, you can always convert explicitly using `np.asarray(idx.hour)`.'
  prefs: []
  type: TYPE_NORMAL
- en: '### pd.unique will now be consistent with extension types'
  prefs: []
  type: TYPE_NORMAL
- en: In prior versions, using [`Series.unique()`](../reference/api/pandas.Series.unique.html#pandas.Series.unique
    "pandas.Series.unique") and [`pandas.unique()`](../reference/api/pandas.unique.html#pandas.unique
    "pandas.unique") on `Categorical` and tz-aware data-types would yield different
    return types. These are now made consistent. ([GH 15903](https://github.com/pandas-dev/pandas/issues/15903))
  prefs: []
  type: TYPE_NORMAL
- en: Datetime tz-aware
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Previous behaviour:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE204]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'New behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE205]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Categoricals
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Previous behaviour:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE206]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'New behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE207]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '### S3 file handling'
  prefs: []
  type: TYPE_NORMAL
- en: pandas now uses [s3fs](http://s3fs.readthedocs.io/) for handling S3 connections.
    This shouldn’t break any code. However, since `s3fs` is not a required dependency,
    you will need to install it separately, like `boto` in prior versions of pandas.
    ([GH 11915](https://github.com/pandas-dev/pandas/issues/11915)).
  prefs: []
  type: TYPE_NORMAL
- en: '### Partial string indexing changes'
  prefs: []
  type: TYPE_NORMAL
- en: '[DatetimeIndex Partial String Indexing](../user_guide/timeseries.html#timeseries-partialindexing)
    now works as an exact match, provided that string resolution coincides with index
    resolution, including a case when both are seconds ([GH 14826](https://github.com/pandas-dev/pandas/issues/14826)).
    See [Slice vs. Exact Match](../user_guide/timeseries.html#timeseries-slice-vs-exact-match)
    for details.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE208]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE209]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE210]'
  prefs: []
  type: TYPE_PRE
- en: '### Concat of different float dtypes will not automatically upcast'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, `concat` of multiple objects with different `float` dtypes would
    automatically upcast results to a dtype of `float64`. Now the smallest acceptable
    dtype will be used ([GH 13247](https://github.com/pandas-dev/pandas/issues/13247))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE211]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE212]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE213]'
  prefs: []
  type: TYPE_PRE
- en: '### pandas Google BigQuery support has moved'
  prefs: []
  type: TYPE_NORMAL
- en: pandas has split off Google BigQuery support into a separate package `pandas-gbq`.
    You can `conda install pandas-gbq -c conda-forge` or `pip install pandas-gbq`
    to get it. The functionality of [`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq
    "pandas.read_gbq") and [`DataFrame.to_gbq()`](../reference/api/pandas.DataFrame.to_gbq.html#pandas.DataFrame.to_gbq
    "pandas.DataFrame.to_gbq") remain the same with the currently released version
    of `pandas-gbq=0.1.4`. Documentation is now hosted [here](https://pandas-gbq.readthedocs.io/)
    ([GH 15347](https://github.com/pandas-dev/pandas/issues/15347))
  prefs: []
  type: TYPE_NORMAL
- en: '### Memory usage for Index is more accurate'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions, showing `.memory_usage()` on a pandas structure that has
    an index, would only include actual index values and not include structures that
    facilitated fast indexing. This will generally be different for `Index` and `MultiIndex`
    and less-so for other index types. ([GH 15237](https://github.com/pandas-dev/pandas/issues/15237))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE214]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE215]'
  prefs: []
  type: TYPE_PRE
- en: '### DataFrame.sort_index changes'
  prefs: []
  type: TYPE_NORMAL
- en: In certain cases, calling `.sort_index()` on a MultiIndexed DataFrame would
    return the *same* DataFrame without seeming to sort. This would happen with a
    `lexsorted`, but non-monotonic levels. ([GH 15622](https://github.com/pandas-dev/pandas/issues/15622),
    [GH 15687](https://github.com/pandas-dev/pandas/issues/15687), [GH 14015](https://github.com/pandas-dev/pandas/issues/14015),
    [GH 13431](https://github.com/pandas-dev/pandas/issues/13431), [GH 15797](https://github.com/pandas-dev/pandas/issues/15797))
  prefs: []
  type: TYPE_NORMAL
- en: 'This is *unchanged* from prior versions, but shown for illustration purposes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE216]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE217]'
  prefs: []
  type: TYPE_PRE
- en: Sorting works as expected
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE218]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE219]'
  prefs: []
  type: TYPE_PRE
- en: However, this example, which has a non-monotonic 2nd level, doesn’t behave as
    desired.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE220]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE221]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE222]'
  prefs: []
  type: TYPE_PRE
- en: '### GroupBy describe formatting'
  prefs: []
  type: TYPE_NORMAL
- en: The output formatting of `groupby.describe()` now labels the `describe()` metrics
    in the columns instead of the index. This format is consistent with `groupby.agg()`
    when applying multiple functions at once. ([GH 4792](https://github.com/pandas-dev/pandas/issues/4792))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE223]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE224]'
  prefs: []
  type: TYPE_PRE
- en: '### Window binary corr/cov operations return a MultiIndex DataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: A binary window operation, like `.corr()` or `.cov()`, when operating on a `.rolling(..)`,
    `.expanding(..)`, or `.ewm(..)` object, will now return a 2-level `MultiIndexed
    DataFrame` rather than a `Panel`, as `Panel` is now deprecated, see [here](#whatsnew-0200-api-breaking-deprecate-panel).
    These are equivalent in function, but a MultiIndexed `DataFrame` enjoys more support
    in pandas. See the section on [Windowed Binary Operations](../user_guide/window.html#window-cov-corr)
    for more information. ([GH 15677](https://github.com/pandas-dev/pandas/issues/15677))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE225]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE226]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE227]'
  prefs: []
  type: TYPE_PRE
- en: Retrieving a correlation matrix for a cross-section
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE228]'
  prefs: []
  type: TYPE_PRE
- en: '### HDFStore where string comparison'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions most types could be compared to string column in a `HDFStore`
    usually resulting in an invalid comparison, returning an empty result frame. These
    comparisons will now raise a `TypeError` ([GH 15492](https://github.com/pandas-dev/pandas/issues/15492))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE229]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE230]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE231]'
  prefs: []
  type: TYPE_PRE
- en: '### Index.intersection and inner join now preserve the order of the left Index'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Index.intersection()`](../reference/api/pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection") now preserves the order of the calling `Index` (left)
    instead of the other `Index` (right) ([GH 15582](https://github.com/pandas-dev/pandas/issues/15582)).
    This affects inner joins, [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") and [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge"), and the `.align` method.'
  prefs: []
  type: TYPE_NORMAL
- en: '`Index.intersection`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE232]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE233]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'New behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE234]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`DataFrame.join` and `pd.merge`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE235]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE236]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'New behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE237]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '### Pivot table always returns a DataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: The documentation for [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") states that a `DataFrame` is *always* returned. Here a bug
    is fixed that allowed this to return a `Series` under certain circumstance. ([GH
    4386](https://github.com/pandas-dev/pandas/issues/4386))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE238]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE239]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE240]'
  prefs: []
  type: TYPE_PRE
- en: '### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '`numexpr` version is now required to be >= 2.4.6 and it will not be used at
    all if this requisite is not fulfilled ([GH 15213](https://github.com/pandas-dev/pandas/issues/15213)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`CParserError` has been renamed to `ParserError` in `pd.read_csv()` and will
    be removed in the future ([GH 12665](https://github.com/pandas-dev/pandas/issues/12665))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SparseArray.cumsum()` and `SparseSeries.cumsum()` will now always return `SparseArray`
    and `SparseSeries` respectively ([GH 12855](https://github.com/pandas-dev/pandas/issues/12855))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.applymap()` with an empty `DataFrame` will return a copy of the
    empty `DataFrame` instead of a `Series` ([GH 8222](https://github.com/pandas-dev/pandas/issues/8222))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.map()` now respects default values of dictionary subclasses with a
    `__missing__` method, such as `collections.Counter` ([GH 15999](https://github.com/pandas-dev/pandas/issues/15999))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.loc` has compat with `.ix` for accepting iterators, and NamedTuples ([GH
    15120](https://github.com/pandas-dev/pandas/issues/15120))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`interpolate()` and `fillna()` will raise a `ValueError` if the `limit` keyword
    argument is not greater than 0\. ([GH 9217](https://github.com/pandas-dev/pandas/issues/9217))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_csv()` will now issue a `ParserWarning` whenever there are conflicting
    values provided by the `dialect` parameter and the user ([GH 14898](https://github.com/pandas-dev/pandas/issues/14898))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_csv()` will now raise a `ValueError` for the C engine if the quote
    character is larger than one byte ([GH 11592](https://github.com/pandas-dev/pandas/issues/11592))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`inplace` arguments now require a boolean value, else a `ValueError` is thrown
    ([GH 14189](https://github.com/pandas-dev/pandas/issues/14189))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.api.types.is_datetime64_ns_dtype` will now report `True` on a tz-aware
    dtype, similar to `pandas.api.types.is_datetime64_any_dtype`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.asof()` will return a null filled `Series` instead the scalar `NaN`
    if a match is not found ([GH 15118](https://github.com/pandas-dev/pandas/issues/15118))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Specific support for `copy.copy()` and `copy.deepcopy()` functions on NDFrame
    objects ([GH 15444](https://github.com/pandas-dev/pandas/issues/15444))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.sort_values()` accepts a one element list of bool for consistency with
    the behavior of `DataFrame.sort_values()` ([GH 15604](https://github.com/pandas-dev/pandas/issues/15604))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.merge()` and `.join()` on `category` dtype columns will now preserve the
    category dtype when possible ([GH 10409](https://github.com/pandas-dev/pandas/issues/10409))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SparseDataFrame.default_fill_value` will be 0, previously was `nan` in the
    return from `pd.get_dummies(..., sparse=True)` ([GH 15594](https://github.com/pandas-dev/pandas/issues/15594))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The default behaviour of `Series.str.match` has changed from extracting groups
    to matching the pattern. The extracting behaviour was deprecated since pandas
    version 0.13.0 and can be done with the `Series.str.extract` method ([GH 5224](https://github.com/pandas-dev/pandas/issues/5224)).
    As a consequence, the `as_indexer` keyword is ignored (no longer needed to specify
    the new behaviour) and is deprecated.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NaT` will now correctly report `False` for datetimelike boolean operations
    such as `is_month_start` ([GH 15781](https://github.com/pandas-dev/pandas/issues/15781))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NaT` will now correctly return `np.nan` for `Timedelta` and `Period` accessors
    such as `days` and `quarter` ([GH 15782](https://github.com/pandas-dev/pandas/issues/15782))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NaT` will now returns `NaT` for `tz_localize` and `tz_convert` methods ([GH
    15830](https://github.com/pandas-dev/pandas/issues/15830))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame` and `Panel` constructors with invalid input will now raise `ValueError`
    rather than `PandasError`, if called with scalar inputs and not axes ([GH 15541](https://github.com/pandas-dev/pandas/issues/15541))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame` and `Panel` constructors with invalid input will now raise `ValueError`
    rather than `pandas.core.common.PandasError`, if called with scalar inputs and
    not axes; The exception `PandasError` is removed as well. ([GH 15541](https://github.com/pandas-dev/pandas/issues/15541))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The exception `pandas.core.common.AmbiguousIndexError` is removed as it is not
    referenced ([GH 15541](https://github.com/pandas-dev/pandas/issues/15541))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Reorganization of the library: privacy changes'
  prefs: []
  type: TYPE_NORMAL
- en: '### Modules privacy has changed'
  prefs: []
  type: TYPE_NORMAL
- en: Some formerly public python/c/c++/cython extension modules have been moved and/or
    renamed. These are all removed from the public API. Furthermore, the `pandas.core`,
    `pandas.compat`, and `pandas.util` top-level modules are now considered to be
    PRIVATE. If indicated, a deprecation warning will be issued if you reference these
    modules. ([GH 12588](https://github.com/pandas-dev/pandas/issues/12588))
  prefs: []
  type: TYPE_NORMAL
- en: '| Previous Location | New Location | Deprecated |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.lib | pandas._libs.lib | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.tslib | pandas._libs.tslib | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.computation | pandas.core.computation | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.msgpack | pandas.io.msgpack |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.index | pandas._libs.index |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.algos | pandas._libs.algos |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.hashtable | pandas._libs.hashtable |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.indexes | pandas.core.indexes |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.json | pandas._libs.json / pandas.io.json | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.parser | pandas._libs.parsers | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.formats | pandas.io.formats |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.sparse | pandas.core.sparse |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.tools | pandas.core.reshape | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.types | pandas.core.dtypes | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.io.sas.saslib | pandas.io.sas._sas |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas._join | pandas._libs.join |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas._hash | pandas._libs.hashing |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas._period | pandas._libs.period |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas._sparse | pandas._libs.sparse |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas._testing | pandas._libs.testing |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas._window | pandas._libs.window |  |'
  prefs: []
  type: TYPE_TB
- en: 'Some new subpackages are created with public functionality that is not directly
    exposed in the top-level namespace: `pandas.errors`, `pandas.plotting` and `pandas.testing`
    (more details below). Together with `pandas.api.types` and certain functions in
    the `pandas.io` and `pandas.tseries` submodules, these are now the public subpackages.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Further changes:'
  prefs: []
  type: TYPE_NORMAL
- en: The function [`union_categoricals()`](../reference/api/pandas.api.types.union_categoricals.html#pandas.api.types.union_categoricals
    "pandas.api.types.union_categoricals") is now importable from `pandas.api.types`,
    formerly from `pandas.types.concat` ([GH 15998](https://github.com/pandas-dev/pandas/issues/15998))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The type import `pandas.tslib.NaTType` is deprecated and can be replaced by
    using `type(pandas.NaT)` ([GH 16146](https://github.com/pandas-dev/pandas/issues/16146))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The public functions in `pandas.tools.hashing` deprecated from that locations,
    but are now importable from `pandas.util` ([GH 16223](https://github.com/pandas-dev/pandas/issues/16223))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The modules in `pandas.util`: `decorators`, `print_versions`, `doctools`, `validators`,
    `depr_module` are now private. Only the functions exposed in `pandas.util` itself
    are public ([GH 16223](https://github.com/pandas-dev/pandas/issues/16223))  ###
    `pandas.errors`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We are adding a standard public module for all pandas exceptions & warnings
    `pandas.errors`. ([GH 14800](https://github.com/pandas-dev/pandas/issues/14800)).
    Previously these exceptions & warnings could be imported from `pandas.core.common`
    or `pandas.io.common`. These exceptions and warnings will be removed from the
    `*.common` locations in a future release. ([GH 15541](https://github.com/pandas-dev/pandas/issues/15541))
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are now part of this API:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE241]  ### `pandas.testing`'
  prefs: []
  type: TYPE_NORMAL
- en: We are adding a standard module that exposes the public testing functions in
    `pandas.testing` ([GH 9895](https://github.com/pandas-dev/pandas/issues/9895)).
    Those functions can be used when writing tests for functionality using pandas
    objects.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following testing functions are now part of this API:'
  prefs: []
  type: TYPE_NORMAL
- en: '[`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`testing.assert_index_equal()`](../reference/api/pandas.testing.assert_index_equal.html#pandas.testing.assert_index_equal
    "pandas.testing.assert_index_equal")  ### `pandas.plotting`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A new public `pandas.plotting` module has been added that holds plotting functionality
    that was previously in either `pandas.tools.plotting` or in the top-level namespace.
    See the [deprecations sections](#whatsnew-0200-privacy-deprecate-plotting) for
    more details.  ### Other development changes'
  prefs: []
  type: TYPE_NORMAL
- en: Building pandas for development now requires `cython >= 0.23` ([GH 14831](https://github.com/pandas-dev/pandas/issues/14831))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Require at least 0.23 version of cython to avoid problems with character encodings
    ([GH 14699](https://github.com/pandas-dev/pandas/issues/14699))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Switched the test framework to use [pytest](http://doc.pytest.org/en/latest)
    ([GH 13097](https://github.com/pandas-dev/pandas/issues/13097))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Reorganization of tests directory layout ([GH 14854](https://github.com/pandas-dev/pandas/issues/14854),
    [GH 15707](https://github.com/pandas-dev/pandas/issues/15707)).  ### Modules privacy
    has changed'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Some formerly public python/c/c++/cython extension modules have been moved and/or
    renamed. These are all removed from the public API. Furthermore, the `pandas.core`,
    `pandas.compat`, and `pandas.util` top-level modules are now considered to be
    PRIVATE. If indicated, a deprecation warning will be issued if you reference these
    modules. ([GH 12588](https://github.com/pandas-dev/pandas/issues/12588))
  prefs: []
  type: TYPE_NORMAL
- en: '| Previous Location | New Location | Deprecated |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.lib | pandas._libs.lib | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.tslib | pandas._libs.tslib | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.computation | pandas.core.computation | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.msgpack | pandas.io.msgpack |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.index | pandas._libs.index |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.algos | pandas._libs.algos |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.hashtable | pandas._libs.hashtable |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.indexes | pandas.core.indexes |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.json | pandas._libs.json / pandas.io.json | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.parser | pandas._libs.parsers | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.formats | pandas.io.formats |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.sparse | pandas.core.sparse |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.tools | pandas.core.reshape | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.types | pandas.core.dtypes | X |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.io.sas.saslib | pandas.io.sas._sas |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas._join | pandas._libs.join |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas._hash | pandas._libs.hashing |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas._period | pandas._libs.period |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas._sparse | pandas._libs.sparse |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas._testing | pandas._libs.testing |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas._window | pandas._libs.window |  |'
  prefs: []
  type: TYPE_TB
- en: 'Some new subpackages are created with public functionality that is not directly
    exposed in the top-level namespace: `pandas.errors`, `pandas.plotting` and `pandas.testing`
    (more details below). Together with `pandas.api.types` and certain functions in
    the `pandas.io` and `pandas.tseries` submodules, these are now the public subpackages.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Further changes:'
  prefs: []
  type: TYPE_NORMAL
- en: The function [`union_categoricals()`](../reference/api/pandas.api.types.union_categoricals.html#pandas.api.types.union_categoricals
    "pandas.api.types.union_categoricals") is now importable from `pandas.api.types`,
    formerly from `pandas.types.concat` ([GH 15998](https://github.com/pandas-dev/pandas/issues/15998))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The type import `pandas.tslib.NaTType` is deprecated and can be replaced by
    using `type(pandas.NaT)` ([GH 16146](https://github.com/pandas-dev/pandas/issues/16146))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The public functions in `pandas.tools.hashing` deprecated from that locations,
    but are now importable from `pandas.util` ([GH 16223](https://github.com/pandas-dev/pandas/issues/16223))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The modules in `pandas.util`: `decorators`, `print_versions`, `doctools`, `validators`,
    `depr_module` are now private. Only the functions exposed in `pandas.util` itself
    are public ([GH 16223](https://github.com/pandas-dev/pandas/issues/16223))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### `pandas.errors`'
  prefs: []
  type: TYPE_NORMAL
- en: We are adding a standard public module for all pandas exceptions & warnings
    `pandas.errors`. ([GH 14800](https://github.com/pandas-dev/pandas/issues/14800)).
    Previously these exceptions & warnings could be imported from `pandas.core.common`
    or `pandas.io.common`. These exceptions and warnings will be removed from the
    `*.common` locations in a future release. ([GH 15541](https://github.com/pandas-dev/pandas/issues/15541))
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are now part of this API:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE242]'
  prefs: []
  type: TYPE_PRE
- en: '### `pandas.testing`'
  prefs: []
  type: TYPE_NORMAL
- en: We are adding a standard module that exposes the public testing functions in
    `pandas.testing` ([GH 9895](https://github.com/pandas-dev/pandas/issues/9895)).
    Those functions can be used when writing tests for functionality using pandas
    objects.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following testing functions are now part of this API:'
  prefs: []
  type: TYPE_NORMAL
- en: '[`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`testing.assert_index_equal()`](../reference/api/pandas.testing.assert_index_equal.html#pandas.testing.assert_index_equal
    "pandas.testing.assert_index_equal")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### `pandas.plotting`'
  prefs: []
  type: TYPE_NORMAL
- en: A new public `pandas.plotting` module has been added that holds plotting functionality
    that was previously in either `pandas.tools.plotting` or in the top-level namespace.
    See the [deprecations sections](#whatsnew-0200-privacy-deprecate-plotting) for
    more details.
  prefs: []
  type: TYPE_NORMAL
- en: '### Other development changes'
  prefs: []
  type: TYPE_NORMAL
- en: Building pandas for development now requires `cython >= 0.23` ([GH 14831](https://github.com/pandas-dev/pandas/issues/14831))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Require at least 0.23 version of cython to avoid problems with character encodings
    ([GH 14699](https://github.com/pandas-dev/pandas/issues/14699))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Switched the test framework to use [pytest](http://doc.pytest.org/en/latest)
    ([GH 13097](https://github.com/pandas-dev/pandas/issues/13097))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reorganization of tests directory layout ([GH 14854](https://github.com/pandas-dev/pandas/issues/14854),
    [GH 15707](https://github.com/pandas-dev/pandas/issues/15707)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: '### Deprecate `.ix`'
  prefs: []
  type: TYPE_NORMAL
- en: The `.ix` indexer is deprecated, in favor of the more strict `.iloc` and `.loc`
    indexers. `.ix` offers a lot of magic on the inference of what the user wants
    to do. More specifically, `.ix` can decide to index *positionally* OR via *labels*,
    depending on the data type of the index. This has caused quite a bit of user confusion
    over the years. The full indexing documentation is [here](../user_guide/indexing.html#indexing).
    ([GH 14218](https://github.com/pandas-dev/pandas/issues/14218))
  prefs: []
  type: TYPE_NORMAL
- en: 'The recommended methods of indexing are:'
  prefs: []
  type: TYPE_NORMAL
- en: '`.loc` if you want to *label* index'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.iloc` if you want to *positionally* index.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using `.ix` will now show a `DeprecationWarning` with a link to some examples
    of how to convert code [here](https://pandas.pydata.org/pandas-docs/version/1.0/user_guide/indexing.html#ix-indexer-is-deprecated).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE243]'
  prefs: []
  type: TYPE_PRE
- en: Previous behavior, where you wish to get the 0th and the 2nd elements from the
    index in the ‘A’ column.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE244]'
  prefs: []
  type: TYPE_PRE
- en: Using `.loc`. Here we will select the appropriate indexes from the index, then
    use *label* indexing.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE245]'
  prefs: []
  type: TYPE_PRE
- en: Using `.iloc`. Here we will get the location of the ‘A’ column, then use *positional*
    indexing to select things.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE246]  ### Deprecate Panel'
  prefs: []
  type: TYPE_NORMAL
- en: '`Panel` is deprecated and will be removed in a future version. The recommended
    way to represent 3-D data are with a `MultiIndex` on a `DataFrame` via the `to_frame()`
    or with the [xarray package](http://xarray.pydata.org/en/stable/). pandas provides
    a `to_xarray()` method to automate this conversion ([GH 13563](https://github.com/pandas-dev/pandas/issues/13563)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE247]'
  prefs: []
  type: TYPE_PRE
- en: Convert to a MultiIndex DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE248]'
  prefs: []
  type: TYPE_PRE
- en: Convert to an xarray DataArray
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE249]  ### Deprecate groupby.agg() with a dictionary when renaming'
  prefs: []
  type: TYPE_NORMAL
- en: The `.groupby(..).agg(..)`, `.rolling(..).agg(..)`, and `.resample(..).agg(..)`
    syntax can accept a variable of inputs, including scalars, list, and a dict of
    column names to scalars or lists. This provides a useful syntax for constructing
    multiple (potentially different) aggregations.
  prefs: []
  type: TYPE_NORMAL
- en: However, `.agg(..)` can *also* accept a dict that allows ‘renaming’ of the result
    columns. This is a complicated and confusing syntax, as well as not consistent
    between `Series` and `DataFrame`. We are deprecating this ‘renaming’ functionality.
  prefs: []
  type: TYPE_NORMAL
- en: We are deprecating passing a dict to a grouped/rolled/resampled `Series`. This
    allowed one to `rename` the resulting aggregation, but this had a completely different
    meaning than passing a dictionary to a grouped `DataFrame`, which accepts column-to-aggregations.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We are deprecating passing a dict-of-dicts to a grouped/rolled/resampled `DataFrame`
    in a similar manner.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This is an illustrative example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE250]'
  prefs: []
  type: TYPE_PRE
- en: Here is a typical useful syntax for computing different aggregations for different
    columns. This is a natural, and useful syntax. We aggregate from the dict-to-list
    by taking the specified columns and applying the list of functions. This returns
    a `MultiIndex` for the columns (this is *not* deprecated).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE251]'
  prefs: []
  type: TYPE_PRE
- en: 'Here’s an example of the first deprecation, passing a dict to a grouped `Series`.
    This is a combination aggregation & renaming:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE252]'
  prefs: []
  type: TYPE_PRE
- en: 'You can accomplish the same operation, more idiomatically by:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE253]'
  prefs: []
  type: TYPE_PRE
- en: 'Here’s an example of the second deprecation, passing a dict-of-dict to a grouped
    `DataFrame`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE254]'
  prefs: []
  type: TYPE_PRE
- en: 'You can accomplish nearly the same by:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE255]  ### Deprecate .plotting'
  prefs: []
  type: TYPE_NORMAL
- en: The `pandas.tools.plotting` module has been deprecated, in favor of the top
    level `pandas.plotting` module. All the public plotting functions are now available
    from `pandas.plotting` ([GH 12548](https://github.com/pandas-dev/pandas/issues/12548)).
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, the top-level `pandas.scatter_matrix` and `pandas.plot_params`
    are deprecated. Users can import these from `pandas.plotting` as well.
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous script:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE256]'
  prefs: []
  type: TYPE_PRE
- en: 'Should be changed to:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE257]  ### Other deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: '`SparseArray.to_dense()` has deprecated the `fill` parameter, as that parameter
    was not being respected ([GH 14647](https://github.com/pandas-dev/pandas/issues/14647))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SparseSeries.to_dense()` has deprecated the `sparse_only` parameter ([GH 14647](https://github.com/pandas-dev/pandas/issues/14647))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.repeat()` has deprecated the `reps` parameter in favor of `repeats`
    ([GH 12662](https://github.com/pandas-dev/pandas/issues/12662))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Series` constructor and `.astype` method have deprecated accepting timestamp
    dtypes without a frequency (e.g. `np.datetime64`) for the `dtype` parameter ([GH
    15524](https://github.com/pandas-dev/pandas/issues/15524))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Index.repeat()` and `MultiIndex.repeat()` have deprecated the `n` parameter
    in favor of `repeats` ([GH 12662](https://github.com/pandas-dev/pandas/issues/12662))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.searchsorted()` and `Series.searchsorted()` have deprecated the
    `v` parameter in favor of `value` ([GH 12662](https://github.com/pandas-dev/pandas/issues/12662))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`TimedeltaIndex.searchsorted()`, `DatetimeIndex.searchsorted()`, and `PeriodIndex.searchsorted()`
    have deprecated the `key` parameter in favor of `value` ([GH 12662](https://github.com/pandas-dev/pandas/issues/12662))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.astype()` has deprecated the `raise_on_error` parameter in favor
    of `errors` ([GH 14878](https://github.com/pandas-dev/pandas/issues/14878))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.sortlevel` and `DataFrame.sortlevel` have been deprecated in favor
    of `Series.sort_index` and `DataFrame.sort_index` ([GH 15099](https://github.com/pandas-dev/pandas/issues/15099))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: importing `concat` from `pandas.tools.merge` has been deprecated in favor of
    imports from the `pandas` namespace. This should only affect explicit imports
    ([GH 15358](https://github.com/pandas-dev/pandas/issues/15358))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series/DataFrame/Panel.consolidate()` been deprecated as a public method.
    ([GH 15483](https://github.com/pandas-dev/pandas/issues/15483))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `as_indexer` keyword of `Series.str.match()` has been deprecated (ignored
    keyword) ([GH 15257](https://github.com/pandas-dev/pandas/issues/15257)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The following top-level pandas functions have been deprecated and will be removed
    in a future version ([GH 13790](https://github.com/pandas-dev/pandas/issues/13790),
    [GH 15940](https://github.com/pandas-dev/pandas/issues/15940))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.pnow()`, replaced by `Period.now()`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.Term`, is removed, as it is not applicable to user code. Instead use in-line
    string expressions in the where clause when searching in HDFStore'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.Expr`, is removed, as it is not applicable to user code.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.match()`, is removed.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.groupby()`, replaced by using the `.groupby()` method directly on a `Series/DataFrame`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.get_store()`, replaced by a direct call to `pd.HDFStore(...)`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`is_any_int_dtype`, `is_floating_dtype`, and `is_sequence` are deprecated from
    `pandas.api.types` ([GH 16042](https://github.com/pandas-dev/pandas/issues/16042))  ###
    Deprecate `.ix`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `.ix` indexer is deprecated, in favor of the more strict `.iloc` and `.loc`
    indexers. `.ix` offers a lot of magic on the inference of what the user wants
    to do. More specifically, `.ix` can decide to index *positionally* OR via *labels*,
    depending on the data type of the index. This has caused quite a bit of user confusion
    over the years. The full indexing documentation is [here](../user_guide/indexing.html#indexing).
    ([GH 14218](https://github.com/pandas-dev/pandas/issues/14218))
  prefs: []
  type: TYPE_NORMAL
- en: 'The recommended methods of indexing are:'
  prefs: []
  type: TYPE_NORMAL
- en: '`.loc` if you want to *label* index'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.iloc` if you want to *positionally* index.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using `.ix` will now show a `DeprecationWarning` with a link to some examples
    of how to convert code [here](https://pandas.pydata.org/pandas-docs/version/1.0/user_guide/indexing.html#ix-indexer-is-deprecated).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE258]'
  prefs: []
  type: TYPE_PRE
- en: Previous behavior, where you wish to get the 0th and the 2nd elements from the
    index in the ‘A’ column.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE259]'
  prefs: []
  type: TYPE_PRE
- en: Using `.loc`. Here we will select the appropriate indexes from the index, then
    use *label* indexing.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE260]'
  prefs: []
  type: TYPE_PRE
- en: Using `.iloc`. Here we will get the location of the ‘A’ column, then use *positional*
    indexing to select things.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE261]'
  prefs: []
  type: TYPE_PRE
- en: '### Deprecate Panel'
  prefs: []
  type: TYPE_NORMAL
- en: '`Panel` is deprecated and will be removed in a future version. The recommended
    way to represent 3-D data are with a `MultiIndex` on a `DataFrame` via the `to_frame()`
    or with the [xarray package](http://xarray.pydata.org/en/stable/). pandas provides
    a `to_xarray()` method to automate this conversion ([GH 13563](https://github.com/pandas-dev/pandas/issues/13563)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE262]'
  prefs: []
  type: TYPE_PRE
- en: Convert to a MultiIndex DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE263]'
  prefs: []
  type: TYPE_PRE
- en: Convert to an xarray DataArray
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE264]'
  prefs: []
  type: TYPE_PRE
- en: '### Deprecate groupby.agg() with a dictionary when renaming'
  prefs: []
  type: TYPE_NORMAL
- en: The `.groupby(..).agg(..)`, `.rolling(..).agg(..)`, and `.resample(..).agg(..)`
    syntax can accept a variable of inputs, including scalars, list, and a dict of
    column names to scalars or lists. This provides a useful syntax for constructing
    multiple (potentially different) aggregations.
  prefs: []
  type: TYPE_NORMAL
- en: However, `.agg(..)` can *also* accept a dict that allows ‘renaming’ of the result
    columns. This is a complicated and confusing syntax, as well as not consistent
    between `Series` and `DataFrame`. We are deprecating this ‘renaming’ functionality.
  prefs: []
  type: TYPE_NORMAL
- en: We are deprecating passing a dict to a grouped/rolled/resampled `Series`. This
    allowed one to `rename` the resulting aggregation, but this had a completely different
    meaning than passing a dictionary to a grouped `DataFrame`, which accepts column-to-aggregations.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We are deprecating passing a dict-of-dicts to a grouped/rolled/resampled `DataFrame`
    in a similar manner.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This is an illustrative example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE265]'
  prefs: []
  type: TYPE_PRE
- en: Here is a typical useful syntax for computing different aggregations for different
    columns. This is a natural, and useful syntax. We aggregate from the dict-to-list
    by taking the specified columns and applying the list of functions. This returns
    a `MultiIndex` for the columns (this is *not* deprecated).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE266]'
  prefs: []
  type: TYPE_PRE
- en: 'Here’s an example of the first deprecation, passing a dict to a grouped `Series`.
    This is a combination aggregation & renaming:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE267]'
  prefs: []
  type: TYPE_PRE
- en: 'You can accomplish the same operation, more idiomatically by:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE268]'
  prefs: []
  type: TYPE_PRE
- en: 'Here’s an example of the second deprecation, passing a dict-of-dict to a grouped
    `DataFrame`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE269]'
  prefs: []
  type: TYPE_PRE
- en: 'You can accomplish nearly the same by:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE270]'
  prefs: []
  type: TYPE_PRE
- en: '### Deprecate .plotting'
  prefs: []
  type: TYPE_NORMAL
- en: The `pandas.tools.plotting` module has been deprecated, in favor of the top
    level `pandas.plotting` module. All the public plotting functions are now available
    from `pandas.plotting` ([GH 12548](https://github.com/pandas-dev/pandas/issues/12548)).
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, the top-level `pandas.scatter_matrix` and `pandas.plot_params`
    are deprecated. Users can import these from `pandas.plotting` as well.
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous script:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE271]'
  prefs: []
  type: TYPE_PRE
- en: 'Should be changed to:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE272]'
  prefs: []
  type: TYPE_PRE
- en: '### Other deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: '`SparseArray.to_dense()` has deprecated the `fill` parameter, as that parameter
    was not being respected ([GH 14647](https://github.com/pandas-dev/pandas/issues/14647))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SparseSeries.to_dense()` has deprecated the `sparse_only` parameter ([GH 14647](https://github.com/pandas-dev/pandas/issues/14647))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.repeat()` has deprecated the `reps` parameter in favor of `repeats`
    ([GH 12662](https://github.com/pandas-dev/pandas/issues/12662))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Series` constructor and `.astype` method have deprecated accepting timestamp
    dtypes without a frequency (e.g. `np.datetime64`) for the `dtype` parameter ([GH
    15524](https://github.com/pandas-dev/pandas/issues/15524))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Index.repeat()` and `MultiIndex.repeat()` have deprecated the `n` parameter
    in favor of `repeats` ([GH 12662](https://github.com/pandas-dev/pandas/issues/12662))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.searchsorted()` and `Series.searchsorted()` have deprecated the
    `v` parameter in favor of `value` ([GH 12662](https://github.com/pandas-dev/pandas/issues/12662))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`TimedeltaIndex.searchsorted()`, `DatetimeIndex.searchsorted()`, and `PeriodIndex.searchsorted()`
    have deprecated the `key` parameter in favor of `value` ([GH 12662](https://github.com/pandas-dev/pandas/issues/12662))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.astype()` has deprecated the `raise_on_error` parameter in favor
    of `errors` ([GH 14878](https://github.com/pandas-dev/pandas/issues/14878))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.sortlevel` and `DataFrame.sortlevel` have been deprecated in favor
    of `Series.sort_index` and `DataFrame.sort_index` ([GH 15099](https://github.com/pandas-dev/pandas/issues/15099))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: importing `concat` from `pandas.tools.merge` has been deprecated in favor of
    imports from the `pandas` namespace. This should only affect explicit imports
    ([GH 15358](https://github.com/pandas-dev/pandas/issues/15358))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series/DataFrame/Panel.consolidate()` been deprecated as a public method.
    ([GH 15483](https://github.com/pandas-dev/pandas/issues/15483))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `as_indexer` keyword of `Series.str.match()` has been deprecated (ignored
    keyword) ([GH 15257](https://github.com/pandas-dev/pandas/issues/15257)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The following top-level pandas functions have been deprecated and will be removed
    in a future version ([GH 13790](https://github.com/pandas-dev/pandas/issues/13790),
    [GH 15940](https://github.com/pandas-dev/pandas/issues/15940))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.pnow()`, replaced by `Period.now()`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.Term`, is removed, as it is not applicable to user code. Instead use in-line
    string expressions in the where clause when searching in HDFStore'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.Expr`, is removed, as it is not applicable to user code.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.match()`, is removed.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.groupby()`, replaced by using the `.groupby()` method directly on a `Series/DataFrame`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.get_store()`, replaced by a direct call to `pd.HDFStore(...)`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`is_any_int_dtype`, `is_floating_dtype`, and `is_sequence` are deprecated from
    `pandas.api.types` ([GH 16042](https://github.com/pandas-dev/pandas/issues/16042))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Removal of prior version deprecations/changes'
  prefs: []
  type: TYPE_NORMAL
- en: The `pandas.rpy` module is removed. Similar functionality can be accessed through
    the [rpy2](https://rpy2.readthedocs.io/) project. See the [R interfacing docs](https://pandas.pydata.org/pandas-docs/version/0.20/r_interface.html)
    for more details.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `pandas.io.ga` module with a `google-analytics` interface is removed ([GH
    11308](https://github.com/pandas-dev/pandas/issues/11308)). Similar functionality
    can be found in the [Google2Pandas](https://github.com/panalysis/Google2Pandas)
    package.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.to_datetime` and `pd.to_timedelta` have dropped the `coerce` parameter
    in favor of `errors` ([GH 13602](https://github.com/pandas-dev/pandas/issues/13602))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.stats.fama_macbeth`, `pandas.stats.ols`, `pandas.stats.plm` and `pandas.stats.var`,
    as well as the top-level `pandas.fama_macbeth` and `pandas.ols` routines are removed.
    Similar functionality can be found in the [statsmodels](https://www.statsmodels.org/dev/)
    package. ([GH 11898](https://github.com/pandas-dev/pandas/issues/11898))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `TimeSeries` and `SparseTimeSeries` classes, aliases of `Series` and `SparseSeries`,
    are removed ([GH 10890](https://github.com/pandas-dev/pandas/issues/10890), [GH
    15098](https://github.com/pandas-dev/pandas/issues/15098)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.is_time_series` is dropped in favor of `Series.index.is_all_dates`
    ([GH 15098](https://github.com/pandas-dev/pandas/issues/15098))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The deprecated `irow`, `icol`, `iget` and `iget_value` methods are removed in
    favor of `iloc` and `iat` as explained [here](v0.17.0.html#whatsnew-0170-deprecations)
    ([GH 10711](https://github.com/pandas-dev/pandas/issues/10711)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The deprecated `DataFrame.iterkv()` has been removed in favor of `DataFrame.iteritems()`
    ([GH 10711](https://github.com/pandas-dev/pandas/issues/10711))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Categorical` constructor has dropped the `name` parameter ([GH 10632](https://github.com/pandas-dev/pandas/issues/10632))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical` has dropped support for `NaN` categories ([GH 10748](https://github.com/pandas-dev/pandas/issues/10748))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `take_last` parameter has been dropped from `duplicated()`, `drop_duplicates()`,
    `nlargest()`, and `nsmallest()` methods ([GH 10236](https://github.com/pandas-dev/pandas/issues/10236),
    [GH 10792](https://github.com/pandas-dev/pandas/issues/10792), [GH 10920](https://github.com/pandas-dev/pandas/issues/10920))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series`, `Index`, and `DataFrame` have dropped the `sort` and `order` methods
    ([GH 10726](https://github.com/pandas-dev/pandas/issues/10726))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Where clauses in `pytables` are only accepted as strings and expressions types
    and not other data-types ([GH 12027](https://github.com/pandas-dev/pandas/issues/12027))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame` has dropped the `combineAdd` and `combineMult` methods in favor
    of `add` and `mul` respectively ([GH 10735](https://github.com/pandas-dev/pandas/issues/10735))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Performance improvements'
  prefs: []
  type: TYPE_NORMAL
- en: Improved performance of `pd.wide_to_long()` ([GH 14779](https://github.com/pandas-dev/pandas/issues/14779))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `pd.factorize()` by releasing the GIL with `object`
    dtype when inferred as strings ([GH 14859](https://github.com/pandas-dev/pandas/issues/14859),
    [GH 16057](https://github.com/pandas-dev/pandas/issues/16057))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of timeseries plotting with an irregular DatetimeIndex
    (or with `compat_x=True`) ([GH 15073](https://github.com/pandas-dev/pandas/issues/15073)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `groupby().cummin()` and `groupby().cummax()` ([GH 15048](https://github.com/pandas-dev/pandas/issues/15048),
    [GH 15109](https://github.com/pandas-dev/pandas/issues/15109), [GH 15561](https://github.com/pandas-dev/pandas/issues/15561),
    [GH 15635](https://github.com/pandas-dev/pandas/issues/15635))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance and reduced memory when indexing with a `MultiIndex` ([GH
    15245](https://github.com/pandas-dev/pandas/issues/15245))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When reading buffer object in `read_sas()` method without specified format,
    filepath string is inferred rather than buffer object. ([GH 14947](https://github.com/pandas-dev/pandas/issues/14947))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `.rank()` for categorical data ([GH 15498](https://github.com/pandas-dev/pandas/issues/15498))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance when using `.unstack()` ([GH 15503](https://github.com/pandas-dev/pandas/issues/15503))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of merge/join on `category` columns ([GH 10409](https://github.com/pandas-dev/pandas/issues/10409))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `drop_duplicates()` on `bool` columns ([GH 12963](https://github.com/pandas-dev/pandas/issues/12963))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve performance of `pd.core.groupby.GroupBy.apply` when the applied function
    used the `.name` attribute of the group DataFrame ([GH 15062](https://github.com/pandas-dev/pandas/issues/15062)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `iloc` indexing with a list or array ([GH 15504](https://github.com/pandas-dev/pandas/issues/15504)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `Series.sort_index()` with a monotonic index ([GH 15694](https://github.com/pandas-dev/pandas/issues/15694))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance in `pd.read_csv()` on some platforms with buffered reads
    ([GH 16039](https://github.com/pandas-dev/pandas/issues/16039))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Bug fixes'
  prefs: []
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Timestamp.replace` now raises `TypeError` when incorrect argument names
    are given; previously this raised `ValueError` ([GH 15240](https://github.com/pandas-dev/pandas/issues/15240))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timestamp.replace` with compat for passing long integers ([GH 15030](https://github.com/pandas-dev/pandas/issues/15030))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timestamp` returning UTC based time/date attributes when a timezone
    was provided ([GH 13303](https://github.com/pandas-dev/pandas/issues/13303), [GH
    6538](https://github.com/pandas-dev/pandas/issues/6538))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timestamp` incorrectly localizing timezones during construction ([GH
    11481](https://github.com/pandas-dev/pandas/issues/11481), [GH 15777](https://github.com/pandas-dev/pandas/issues/15777))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `TimedeltaIndex` addition where overflow was being allowed without error
    ([GH 14816](https://github.com/pandas-dev/pandas/issues/14816))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `TimedeltaIndex` raising a `ValueError` when boolean indexing with `loc`
    ([GH 14946](https://github.com/pandas-dev/pandas/issues/14946))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in catching an overflow in `Timestamp` + `Timedelta/Offset` operations ([GH
    15126](https://github.com/pandas-dev/pandas/issues/15126))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.round()` and `Timestamp.round()` floating point accuracy
    when rounding by milliseconds or less ([GH 14440](https://github.com/pandas-dev/pandas/issues/14440),
    [GH 15578](https://github.com/pandas-dev/pandas/issues/15578))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `astype()` where `inf` values were incorrectly converted to integers.
    Now raises error now with `astype()` for Series and DataFrames ([GH 14265](https://github.com/pandas-dev/pandas/issues/14265))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame(..).apply(to_numeric)` when values are of type decimal.Decimal.
    ([GH 14827](https://github.com/pandas-dev/pandas/issues/14827))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `describe()` when passing a numpy array which does not contain the median
    to the `percentiles` keyword argument ([GH 14908](https://github.com/pandas-dev/pandas/issues/14908))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cleaned up `PeriodIndex` constructor, including raising on floats more consistently
    ([GH 13277](https://github.com/pandas-dev/pandas/issues/13277))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in using `__deepcopy__` on empty NDFrame objects ([GH 15370](https://github.com/pandas-dev/pandas/issues/15370))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.replace()` may result in incorrect dtypes. ([GH 12747](https://github.com/pandas-dev/pandas/issues/12747),
    [GH 15765](https://github.com/pandas-dev/pandas/issues/15765))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.replace` and `DataFrame.replace` which failed on empty replacement
    dicts ([GH 15289](https://github.com/pandas-dev/pandas/issues/15289))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.replace` which replaced a numeric by string ([GH 15743](https://github.com/pandas-dev/pandas/issues/15743))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index` construction with `NaN` elements and integer dtype specified
    ([GH 15187](https://github.com/pandas-dev/pandas/issues/15187))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series` construction with a datetimetz ([GH 14928](https://github.com/pandas-dev/pandas/issues/14928))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.dt.round()` inconsistent behaviour on `NaT` ‘s with different
    arguments ([GH 14940](https://github.com/pandas-dev/pandas/issues/14940))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series` constructor when both `copy=True` and `dtype` arguments are
    provided ([GH 15125](https://github.com/pandas-dev/pandas/issues/15125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Incorrect dtyped `Series` was returned by comparison methods (e.g., `lt`, `gt`,
    …) against a constant for an empty `DataFrame` ([GH 15077](https://github.com/pandas-dev/pandas/issues/15077))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.ffill()` with mixed dtypes containing tz-aware datetimes. ([GH
    14956](https://github.com/pandas-dev/pandas/issues/14956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.fillna()` where the argument `downcast` was ignored when fillna
    value was of type `dict` ([GH 15277](https://github.com/pandas-dev/pandas/issues/15277))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.asfreq()`, where frequency was not set for empty `Series` ([GH 14320](https://github.com/pandas-dev/pandas/issues/14320))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame` construction with nulls and datetimes in a list-like ([GH
    15869](https://github.com/pandas-dev/pandas/issues/15869))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.fillna()` with tz-aware datetimes ([GH 15855](https://github.com/pandas-dev/pandas/issues/15855))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `is_string_dtype`, `is_timedelta64_ns_dtype`, and `is_string_like_dtype`
    in which an error was raised when `None` was passed in ([GH 15941](https://github.com/pandas-dev/pandas/issues/15941))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the return type of `pd.unique` on a `Categorical`, which was returning
    an ndarray and not a `Categorical` ([GH 15903](https://github.com/pandas-dev/pandas/issues/15903))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index.to_series()` where the index was not copied (and so mutating later
    would change the original), ([GH 15949](https://github.com/pandas-dev/pandas/issues/15949))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing with partial string indexing with a len-1 DataFrame ([GH 16071](https://github.com/pandas-dev/pandas/issues/16071))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series` construction where passing invalid dtype didn’t raise an error.
    ([GH 15520](https://github.com/pandas-dev/pandas/issues/15520))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Index` power operations with reversed operands ([GH 14973](https://github.com/pandas-dev/pandas/issues/14973))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.sort_values()` when sorting by multiple columns where one
    column is of type `int64` and contains `NaT` ([GH 14922](https://github.com/pandas-dev/pandas/issues/14922))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.reindex()` in which `method` was ignored when passing `columns`
    ([GH 14992](https://github.com/pandas-dev/pandas/issues/14992))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc` with indexing a `MultiIndex` with a `Series` indexer
    ([GH 14730](https://github.com/pandas-dev/pandas/issues/14730), [GH 15424](https://github.com/pandas-dev/pandas/issues/15424))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc` with indexing a `MultiIndex` with a numpy array ([GH
    15434](https://github.com/pandas-dev/pandas/issues/15434))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.asof` which raised if the series contained all `np.nan` ([GH
    15713](https://github.com/pandas-dev/pandas/issues/15713))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.at` when selecting from a tz-aware column ([GH 15822](https://github.com/pandas-dev/pandas/issues/15822))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.where()` and `DataFrame.where()` where array-like conditionals
    were being rejected ([GH 15414](https://github.com/pandas-dev/pandas/issues/15414))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.where()` where TZ-aware data was converted to float representation
    ([GH 15701](https://github.com/pandas-dev/pandas/issues/15701))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.loc` that would not return the correct dtype for scalar access for
    a DataFrame ([GH 11617](https://github.com/pandas-dev/pandas/issues/11617))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in output formatting of a `MultiIndex` when names are integers ([GH 12223](https://github.com/pandas-dev/pandas/issues/12223),
    [GH 15262](https://github.com/pandas-dev/pandas/issues/15262))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.searchsorted()` where alphabetical instead of the provided
    categorical order was used ([GH 14522](https://github.com/pandas-dev/pandas/issues/14522))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.iloc` where a `Categorical` object for list-like indexes input
    was returned, where a `Series` was expected. ([GH 14580](https://github.com/pandas-dev/pandas/issues/14580))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.isin` comparing datetimelike to empty frame ([GH 15473](https://github.com/pandas-dev/pandas/issues/15473))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.reset_index()` when an all `NaN` level of a `MultiIndex` would fail
    ([GH 6322](https://github.com/pandas-dev/pandas/issues/6322))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.reset_index()` when raising error for index name already present in
    `MultiIndex` columns ([GH 16120](https://github.com/pandas-dev/pandas/issues/16120))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in creating a `MultiIndex` with tuples and not passing a list of names;
    this will now raise `ValueError` ([GH 15110](https://github.com/pandas-dev/pandas/issues/15110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the HTML display with a `MultiIndex` and truncation ([GH 14882](https://github.com/pandas-dev/pandas/issues/14882))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the display of `.info()` where a qualifier (+) would always be displayed
    with a `MultiIndex` that contains only non-strings ([GH 15245](https://github.com/pandas-dev/pandas/issues/15245))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.concat()` where the names of `MultiIndex` of resulting `DataFrame`
    are not handled correctly when `None` is presented in the names of `MultiIndex`
    of input `DataFrame` ([GH 15787](https://github.com/pandas-dev/pandas/issues/15787))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.sort_index()` and `Series.sort_index()` where `na_position`
    doesn’t work with a `MultiIndex` ([GH 14784](https://github.com/pandas-dev/pandas/issues/14784),
    [GH 16604](https://github.com/pandas-dev/pandas/issues/16604))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.concat()` when combining objects with a `CategoricalIndex` ([GH 16111](https://github.com/pandas-dev/pandas/issues/16111))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing with a scalar and a `CategoricalIndex` ([GH 16123](https://github.com/pandas-dev/pandas/issues/16123))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IO
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `pd.to_numeric()` in which float and unsigned integer elements were being
    improperly casted ([GH 14941](https://github.com/pandas-dev/pandas/issues/14941),
    [GH 15005](https://github.com/pandas-dev/pandas/issues/15005))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_fwf()` where the skiprows parameter was not being respected
    during column width inference ([GH 11256](https://github.com/pandas-dev/pandas/issues/11256))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` in which the `dialect` parameter was not being verified
    before processing ([GH 14898](https://github.com/pandas-dev/pandas/issues/14898))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` in which missing data was being improperly handled with
    `usecols` ([GH 6710](https://github.com/pandas-dev/pandas/issues/6710))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` in which a file containing a row with many columns followed
    by rows with fewer columns would cause a crash ([GH 14125](https://github.com/pandas-dev/pandas/issues/14125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` for the C engine where `usecols` were being indexed incorrectly
    with `parse_dates` ([GH 14792](https://github.com/pandas-dev/pandas/issues/14792))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` with `parse_dates` when multi-line headers are specified
    ([GH 15376](https://github.com/pandas-dev/pandas/issues/15376))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` with `float_precision='round_trip'` which caused a segfault
    when a text entry is parsed ([GH 15140](https://github.com/pandas-dev/pandas/issues/15140))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` when an index was specified and no values were specified
    as null values ([GH 15835](https://github.com/pandas-dev/pandas/issues/15835))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` in which certain invalid file objects caused the Python
    interpreter to crash ([GH 15337](https://github.com/pandas-dev/pandas/issues/15337))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` in which invalid values for `nrows` and `chunksize` were
    allowed ([GH 15767](https://github.com/pandas-dev/pandas/issues/15767))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` for the Python engine in which unhelpful error messages
    were being raised when parsing errors occurred ([GH 15910](https://github.com/pandas-dev/pandas/issues/15910))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` in which the `skipfooter` parameter was not being properly
    validated ([GH 15925](https://github.com/pandas-dev/pandas/issues/15925))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.to_csv()` in which there was numeric overflow when a timestamp index
    was being written ([GH 15982](https://github.com/pandas-dev/pandas/issues/15982))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.util.hashing.hash_pandas_object()` in which hashing of categoricals
    depended on the ordering of categories, instead of just their values. ([GH 15143](https://github.com/pandas-dev/pandas/issues/15143))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.to_json()` where `lines=True` and contents (keys or values) contain
    escaped characters ([GH 15096](https://github.com/pandas-dev/pandas/issues/15096))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.to_json()` causing single byte ascii characters to be expanded to four
    byte unicode ([GH 15344](https://github.com/pandas-dev/pandas/issues/15344))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.to_json()` for the C engine where rollover was not correctly handled
    for case where frac is odd and diff is exactly 0.5 ([GH 15716](https://github.com/pandas-dev/pandas/issues/15716),
    [GH 15864](https://github.com/pandas-dev/pandas/issues/15864))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_json()` for Python 2 where `lines=True` and contents contain
    non-ascii unicode characters ([GH 15132](https://github.com/pandas-dev/pandas/issues/15132))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_msgpack()` in which `Series` categoricals were being improperly
    processed ([GH 14901](https://github.com/pandas-dev/pandas/issues/14901))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_msgpack()` which did not allow loading of a dataframe with an
    index of type `CategoricalIndex` ([GH 15487](https://github.com/pandas-dev/pandas/issues/15487))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_msgpack()` when deserializing a `CategoricalIndex` ([GH 15487](https://github.com/pandas-dev/pandas/issues/15487))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.to_records()` with converting a `DatetimeIndex` with a timezone
    ([GH 13937](https://github.com/pandas-dev/pandas/issues/13937))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.to_records()` which failed with unicode characters in column
    names ([GH 11879](https://github.com/pandas-dev/pandas/issues/11879))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.to_sql()` when writing a DataFrame with numeric index names ([GH 15404](https://github.com/pandas-dev/pandas/issues/15404)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.to_html()` with `index=False` and `max_rows` raising in `IndexError`
    ([GH 14998](https://github.com/pandas-dev/pandas/issues/14998))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_hdf()` passing a `Timestamp` to the `where` parameter with a
    non date column ([GH 15492](https://github.com/pandas-dev/pandas/issues/15492))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.to_stata()` and `StataWriter` which produces incorrectly formatted
    files to be produced for some locales ([GH 13856](https://github.com/pandas-dev/pandas/issues/13856))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `StataReader` and `StataWriter` which allows invalid encodings ([GH 15723](https://github.com/pandas-dev/pandas/issues/15723))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the `Series` repr not showing the length when the output was truncated
    ([GH 15962](https://github.com/pandas-dev/pandas/issues/15962)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `DataFrame.hist` where `plt.tight_layout` caused an `AttributeError`
    (use `matplotlib >= 2.0.1`) ([GH 9351](https://github.com/pandas-dev/pandas/issues/9351))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.boxplot` where `fontsize` was not applied to the tick labels
    on both axes ([GH 15108](https://github.com/pandas-dev/pandas/issues/15108))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the date and time converters pandas registers with matplotlib not handling
    multiple dimensions ([GH 16026](https://github.com/pandas-dev/pandas/issues/16026))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.scatter_matrix()` could accept either `color` or `c`, but not both
    ([GH 14855](https://github.com/pandas-dev/pandas/issues/14855))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GroupBy/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `.groupby(..).resample()` when passed the `on=` kwarg. ([GH 15021](https://github.com/pandas-dev/pandas/issues/15021))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Properly set `__name__` and `__qualname__` for `Groupby.*` functions ([GH 14620](https://github.com/pandas-dev/pandas/issues/14620))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.get_group()` failing with a categorical grouper ([GH 15155](https://github.com/pandas-dev/pandas/issues/15155))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.groupby(...).rolling(...)` when `on` is specified and using a `DatetimeIndex`
    ([GH 15130](https://github.com/pandas-dev/pandas/issues/15130), [GH 13966](https://github.com/pandas-dev/pandas/issues/13966))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in groupby operations with `timedelta64` when passing `numeric_only=False`
    ([GH 5724](https://github.com/pandas-dev/pandas/issues/5724))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `groupby.apply()` coercing `object` dtypes to numeric types, when not
    all values were numeric ([GH 14423](https://github.com/pandas-dev/pandas/issues/14423),
    [GH 15421](https://github.com/pandas-dev/pandas/issues/15421), [GH 15670](https://github.com/pandas-dev/pandas/issues/15670))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `resample`, where a non-string `loffset` argument would not be applied
    when resampling a timeseries ([GH 13218](https://github.com/pandas-dev/pandas/issues/13218))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.groupby().describe()` when grouping on `Index` containing
    tuples ([GH 14848](https://github.com/pandas-dev/pandas/issues/14848))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `groupby().nunique()` with a datetimelike-grouper where bins counts were
    incorrect ([GH 13453](https://github.com/pandas-dev/pandas/issues/13453))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `groupby.transform()` that would coerce the resultant dtypes back to
    the original ([GH 10972](https://github.com/pandas-dev/pandas/issues/10972), [GH
    11444](https://github.com/pandas-dev/pandas/issues/11444))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `groupby.agg()` incorrectly localizing timezone on `datetime` ([GH 15426](https://github.com/pandas-dev/pandas/issues/15426),
    [GH 10668](https://github.com/pandas-dev/pandas/issues/10668), [GH 13046](https://github.com/pandas-dev/pandas/issues/13046))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.rolling/expanding()` functions where `count()` was not counting `np.Inf`,
    nor handling `object` dtypes ([GH 12541](https://github.com/pandas-dev/pandas/issues/12541))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.rolling()` where `pd.Timedelta` or `datetime.timedelta` was not accepted
    as a `window` argument ([GH 15440](https://github.com/pandas-dev/pandas/issues/15440))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Rolling.quantile` function that caused a segmentation fault when called
    with a quantile value outside of the range [0, 1] ([GH 15463](https://github.com/pandas-dev/pandas/issues/15463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.resample().median()` if duplicate column names are present
    ([GH 14233](https://github.com/pandas-dev/pandas/issues/14233))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `SparseSeries.reindex` on single level with list of length 1 ([GH 15447](https://github.com/pandas-dev/pandas/issues/15447))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in repr-formatting a `SparseDataFrame` after a value was set on (a copy
    of) one of its series ([GH 15488](https://github.com/pandas-dev/pandas/issues/15488))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseDataFrame` construction with lists not coercing to dtype ([GH
    15682](https://github.com/pandas-dev/pandas/issues/15682))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in sparse array indexing in which indices were not being validated ([GH
    15863](https://github.com/pandas-dev/pandas/issues/15863))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `pd.merge_asof()` where `left_index` or `right_index` caused a failure
    when multiple `by` was specified ([GH 15676](https://github.com/pandas-dev/pandas/issues/15676))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.merge_asof()` where `left_index`/`right_index` together caused a
    failure when `tolerance` was specified ([GH 15135](https://github.com/pandas-dev/pandas/issues/15135))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.pivot_table()` where `dropna=True` would not drop all-NaN
    columns when the columns was a `category` dtype ([GH 15193](https://github.com/pandas-dev/pandas/issues/15193))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.melt()` where passing a tuple value for `value_vars` caused a `TypeError`
    ([GH 15348](https://github.com/pandas-dev/pandas/issues/15348))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.pivot_table()` where no error was raised when values argument was
    not in the columns ([GH 14938](https://github.com/pandas-dev/pandas/issues/14938))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.concat()` in which concatenating with an empty dataframe with `join='inner'`
    was being improperly handled ([GH 15328](https://github.com/pandas-dev/pandas/issues/15328))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug with `sort=True` in `DataFrame.join` and `pd.merge` when joining on indexes
    ([GH 15582](https://github.com/pandas-dev/pandas/issues/15582))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.nsmallest` and `DataFrame.nlargest` where identical values
    resulted in duplicated rows ([GH 15297](https://github.com/pandas-dev/pandas/issues/15297))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") incorrectly raising `UnicodeError` when passing unicode
    input for `margins` keyword ([GH 13292](https://github.com/pandas-dev/pandas/issues/13292))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `.rank()` which incorrectly ranks ordered categories ([GH 15420](https://github.com/pandas-dev/pandas/issues/15420))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.corr()` and `.cov()` where the column and index were the same object
    ([GH 14617](https://github.com/pandas-dev/pandas/issues/14617))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.mode()` where `mode` was not returned if was only a single value ([GH
    15714](https://github.com/pandas-dev/pandas/issues/15714))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.cut()` with a single bin on an all 0s array ([GH 15428](https://github.com/pandas-dev/pandas/issues/15428))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.qcut()` with a single quantile and an array with identical values
    ([GH 15431](https://github.com/pandas-dev/pandas/issues/15431))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas.tools.utils.cartesian_product()` with large input can cause overflow
    on windows ([GH 15265](https://github.com/pandas-dev/pandas/issues/15265))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.eval()` which caused multi-line evals to fail with local variables
    not on the first line ([GH 15342](https://github.com/pandas-dev/pandas/issues/15342))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Compat with SciPy 0.19.0 for testing on `.interpolate()` ([GH 15662](https://github.com/pandas-dev/pandas/issues/15662))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compat for 32-bit platforms for `.qcut/cut`; bins will now be `int64` dtype
    ([GH 14866](https://github.com/pandas-dev/pandas/issues/14866))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in interactions with `Qt` when a `QtApplication` already exists ([GH 14372](https://github.com/pandas-dev/pandas/issues/14372))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoid use of `np.finfo()` during `import pandas` removed to mitigate deadlock
    on Python GIL misuse ([GH 14641](https://github.com/pandas-dev/pandas/issues/14641))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Timestamp.replace` now raises `TypeError` when incorrect argument names
    are given; previously this raised `ValueError` ([GH 15240](https://github.com/pandas-dev/pandas/issues/15240))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timestamp.replace` with compat for passing long integers ([GH 15030](https://github.com/pandas-dev/pandas/issues/15030))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timestamp` returning UTC based time/date attributes when a timezone
    was provided ([GH 13303](https://github.com/pandas-dev/pandas/issues/13303), [GH
    6538](https://github.com/pandas-dev/pandas/issues/6538))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timestamp` incorrectly localizing timezones during construction ([GH
    11481](https://github.com/pandas-dev/pandas/issues/11481), [GH 15777](https://github.com/pandas-dev/pandas/issues/15777))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `TimedeltaIndex` addition where overflow was being allowed without error
    ([GH 14816](https://github.com/pandas-dev/pandas/issues/14816))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `TimedeltaIndex` raising a `ValueError` when boolean indexing with `loc`
    ([GH 14946](https://github.com/pandas-dev/pandas/issues/14946))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in catching an overflow in `Timestamp` + `Timedelta/Offset` operations ([GH
    15126](https://github.com/pandas-dev/pandas/issues/15126))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.round()` and `Timestamp.round()` floating point accuracy
    when rounding by milliseconds or less ([GH 14440](https://github.com/pandas-dev/pandas/issues/14440),
    [GH 15578](https://github.com/pandas-dev/pandas/issues/15578))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `astype()` where `inf` values were incorrectly converted to integers.
    Now raises error now with `astype()` for Series and DataFrames ([GH 14265](https://github.com/pandas-dev/pandas/issues/14265))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame(..).apply(to_numeric)` when values are of type decimal.Decimal.
    ([GH 14827](https://github.com/pandas-dev/pandas/issues/14827))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `describe()` when passing a numpy array which does not contain the median
    to the `percentiles` keyword argument ([GH 14908](https://github.com/pandas-dev/pandas/issues/14908))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cleaned up `PeriodIndex` constructor, including raising on floats more consistently
    ([GH 13277](https://github.com/pandas-dev/pandas/issues/13277))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in using `__deepcopy__` on empty NDFrame objects ([GH 15370](https://github.com/pandas-dev/pandas/issues/15370))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.replace()` may result in incorrect dtypes. ([GH 12747](https://github.com/pandas-dev/pandas/issues/12747),
    [GH 15765](https://github.com/pandas-dev/pandas/issues/15765))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.replace` and `DataFrame.replace` which failed on empty replacement
    dicts ([GH 15289](https://github.com/pandas-dev/pandas/issues/15289))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.replace` which replaced a numeric by string ([GH 15743](https://github.com/pandas-dev/pandas/issues/15743))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index` construction with `NaN` elements and integer dtype specified
    ([GH 15187](https://github.com/pandas-dev/pandas/issues/15187))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series` construction with a datetimetz ([GH 14928](https://github.com/pandas-dev/pandas/issues/14928))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.dt.round()` inconsistent behaviour on `NaT` ‘s with different
    arguments ([GH 14940](https://github.com/pandas-dev/pandas/issues/14940))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series` constructor when both `copy=True` and `dtype` arguments are
    provided ([GH 15125](https://github.com/pandas-dev/pandas/issues/15125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Incorrect dtyped `Series` was returned by comparison methods (e.g., `lt`, `gt`,
    …) against a constant for an empty `DataFrame` ([GH 15077](https://github.com/pandas-dev/pandas/issues/15077))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.ffill()` with mixed dtypes containing tz-aware datetimes. ([GH
    14956](https://github.com/pandas-dev/pandas/issues/14956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.fillna()` where the argument `downcast` was ignored when fillna
    value was of type `dict` ([GH 15277](https://github.com/pandas-dev/pandas/issues/15277))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.asfreq()`, where frequency was not set for empty `Series` ([GH 14320](https://github.com/pandas-dev/pandas/issues/14320))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame` construction with nulls and datetimes in a list-like ([GH
    15869](https://github.com/pandas-dev/pandas/issues/15869))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.fillna()` with tz-aware datetimes ([GH 15855](https://github.com/pandas-dev/pandas/issues/15855))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `is_string_dtype`, `is_timedelta64_ns_dtype`, and `is_string_like_dtype`
    in which an error was raised when `None` was passed in ([GH 15941](https://github.com/pandas-dev/pandas/issues/15941))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the return type of `pd.unique` on a `Categorical`, which was returning
    an ndarray and not a `Categorical` ([GH 15903](https://github.com/pandas-dev/pandas/issues/15903))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index.to_series()` where the index was not copied (and so mutating later
    would change the original), ([GH 15949](https://github.com/pandas-dev/pandas/issues/15949))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing with partial string indexing with a len-1 DataFrame ([GH 16071](https://github.com/pandas-dev/pandas/issues/16071))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series` construction where passing invalid dtype didn’t raise an error.
    ([GH 15520](https://github.com/pandas-dev/pandas/issues/15520))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Index` power operations with reversed operands ([GH 14973](https://github.com/pandas-dev/pandas/issues/14973))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.sort_values()` when sorting by multiple columns where one
    column is of type `int64` and contains `NaT` ([GH 14922](https://github.com/pandas-dev/pandas/issues/14922))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.reindex()` in which `method` was ignored when passing `columns`
    ([GH 14992](https://github.com/pandas-dev/pandas/issues/14992))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc` with indexing a `MultiIndex` with a `Series` indexer
    ([GH 14730](https://github.com/pandas-dev/pandas/issues/14730), [GH 15424](https://github.com/pandas-dev/pandas/issues/15424))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.loc` with indexing a `MultiIndex` with a numpy array ([GH
    15434](https://github.com/pandas-dev/pandas/issues/15434))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.asof` which raised if the series contained all `np.nan` ([GH
    15713](https://github.com/pandas-dev/pandas/issues/15713))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.at` when selecting from a tz-aware column ([GH 15822](https://github.com/pandas-dev/pandas/issues/15822))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.where()` and `DataFrame.where()` where array-like conditionals
    were being rejected ([GH 15414](https://github.com/pandas-dev/pandas/issues/15414))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.where()` where TZ-aware data was converted to float representation
    ([GH 15701](https://github.com/pandas-dev/pandas/issues/15701))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.loc` that would not return the correct dtype for scalar access for
    a DataFrame ([GH 11617](https://github.com/pandas-dev/pandas/issues/11617))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in output formatting of a `MultiIndex` when names are integers ([GH 12223](https://github.com/pandas-dev/pandas/issues/12223),
    [GH 15262](https://github.com/pandas-dev/pandas/issues/15262))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.searchsorted()` where alphabetical instead of the provided
    categorical order was used ([GH 14522](https://github.com/pandas-dev/pandas/issues/14522))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.iloc` where a `Categorical` object for list-like indexes input
    was returned, where a `Series` was expected. ([GH 14580](https://github.com/pandas-dev/pandas/issues/14580))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.isin` comparing datetimelike to empty frame ([GH 15473](https://github.com/pandas-dev/pandas/issues/15473))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.reset_index()` when an all `NaN` level of a `MultiIndex` would fail
    ([GH 6322](https://github.com/pandas-dev/pandas/issues/6322))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.reset_index()` when raising error for index name already present in
    `MultiIndex` columns ([GH 16120](https://github.com/pandas-dev/pandas/issues/16120))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in creating a `MultiIndex` with tuples and not passing a list of names;
    this will now raise `ValueError` ([GH 15110](https://github.com/pandas-dev/pandas/issues/15110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the HTML display with a `MultiIndex` and truncation ([GH 14882](https://github.com/pandas-dev/pandas/issues/14882))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the display of `.info()` where a qualifier (+) would always be displayed
    with a `MultiIndex` that contains only non-strings ([GH 15245](https://github.com/pandas-dev/pandas/issues/15245))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.concat()` where the names of `MultiIndex` of resulting `DataFrame`
    are not handled correctly when `None` is presented in the names of `MultiIndex`
    of input `DataFrame` ([GH 15787](https://github.com/pandas-dev/pandas/issues/15787))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.sort_index()` and `Series.sort_index()` where `na_position`
    doesn’t work with a `MultiIndex` ([GH 14784](https://github.com/pandas-dev/pandas/issues/14784),
    [GH 16604](https://github.com/pandas-dev/pandas/issues/16604))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.concat()` when combining objects with a `CategoricalIndex` ([GH 16111](https://github.com/pandas-dev/pandas/issues/16111))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing with a scalar and a `CategoricalIndex` ([GH 16123](https://github.com/pandas-dev/pandas/issues/16123))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IO
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `pd.to_numeric()` in which float and unsigned integer elements were being
    improperly casted ([GH 14941](https://github.com/pandas-dev/pandas/issues/14941),
    [GH 15005](https://github.com/pandas-dev/pandas/issues/15005))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_fwf()` where the skiprows parameter was not being respected
    during column width inference ([GH 11256](https://github.com/pandas-dev/pandas/issues/11256))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` in which the `dialect` parameter was not being verified
    before processing ([GH 14898](https://github.com/pandas-dev/pandas/issues/14898))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` in which missing data was being improperly handled with
    `usecols` ([GH 6710](https://github.com/pandas-dev/pandas/issues/6710))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` in which a file containing a row with many columns followed
    by rows with fewer columns would cause a crash ([GH 14125](https://github.com/pandas-dev/pandas/issues/14125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` for the C engine where `usecols` were being indexed incorrectly
    with `parse_dates` ([GH 14792](https://github.com/pandas-dev/pandas/issues/14792))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` with `parse_dates` when multi-line headers are specified
    ([GH 15376](https://github.com/pandas-dev/pandas/issues/15376))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` with `float_precision='round_trip'` which caused a segfault
    when a text entry is parsed ([GH 15140](https://github.com/pandas-dev/pandas/issues/15140))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` when an index was specified and no values were specified
    as null values ([GH 15835](https://github.com/pandas-dev/pandas/issues/15835))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` in which certain invalid file objects caused the Python
    interpreter to crash ([GH 15337](https://github.com/pandas-dev/pandas/issues/15337))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` in which invalid values for `nrows` and `chunksize` were
    allowed ([GH 15767](https://github.com/pandas-dev/pandas/issues/15767))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` for the Python engine in which unhelpful error messages
    were being raised when parsing errors occurred ([GH 15910](https://github.com/pandas-dev/pandas/issues/15910))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv()` in which the `skipfooter` parameter was not being properly
    validated ([GH 15925](https://github.com/pandas-dev/pandas/issues/15925))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.to_csv()` in which there was numeric overflow when a timestamp index
    was being written ([GH 15982](https://github.com/pandas-dev/pandas/issues/15982))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.util.hashing.hash_pandas_object()` in which hashing of categoricals
    depended on the ordering of categories, instead of just their values. ([GH 15143](https://github.com/pandas-dev/pandas/issues/15143))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.to_json()` where `lines=True` and contents (keys or values) contain
    escaped characters ([GH 15096](https://github.com/pandas-dev/pandas/issues/15096))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.to_json()` causing single byte ascii characters to be expanded to four
    byte unicode ([GH 15344](https://github.com/pandas-dev/pandas/issues/15344))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.to_json()` for the C engine where rollover was not correctly handled
    for case where frac is odd and diff is exactly 0.5 ([GH 15716](https://github.com/pandas-dev/pandas/issues/15716),
    [GH 15864](https://github.com/pandas-dev/pandas/issues/15864))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_json()` for Python 2 where `lines=True` and contents contain
    non-ascii unicode characters ([GH 15132](https://github.com/pandas-dev/pandas/issues/15132))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_msgpack()` in which `Series` categoricals were being improperly
    processed ([GH 14901](https://github.com/pandas-dev/pandas/issues/14901))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_msgpack()` which did not allow loading of a dataframe with an
    index of type `CategoricalIndex` ([GH 15487](https://github.com/pandas-dev/pandas/issues/15487))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_msgpack()` when deserializing a `CategoricalIndex` ([GH 15487](https://github.com/pandas-dev/pandas/issues/15487))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.to_records()` with converting a `DatetimeIndex` with a timezone
    ([GH 13937](https://github.com/pandas-dev/pandas/issues/13937))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.to_records()` which failed with unicode characters in column
    names ([GH 11879](https://github.com/pandas-dev/pandas/issues/11879))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.to_sql()` when writing a DataFrame with numeric index names ([GH 15404](https://github.com/pandas-dev/pandas/issues/15404)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.to_html()` with `index=False` and `max_rows` raising in `IndexError`
    ([GH 14998](https://github.com/pandas-dev/pandas/issues/14998))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_hdf()` passing a `Timestamp` to the `where` parameter with a
    non date column ([GH 15492](https://github.com/pandas-dev/pandas/issues/15492))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.to_stata()` and `StataWriter` which produces incorrectly formatted
    files to be produced for some locales ([GH 13856](https://github.com/pandas-dev/pandas/issues/13856))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `StataReader` and `StataWriter` which allows invalid encodings ([GH 15723](https://github.com/pandas-dev/pandas/issues/15723))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the `Series` repr not showing the length when the output was truncated
    ([GH 15962](https://github.com/pandas-dev/pandas/issues/15962)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `DataFrame.hist` where `plt.tight_layout` caused an `AttributeError`
    (use `matplotlib >= 2.0.1`) ([GH 9351](https://github.com/pandas-dev/pandas/issues/9351))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.boxplot` where `fontsize` was not applied to the tick labels
    on both axes ([GH 15108](https://github.com/pandas-dev/pandas/issues/15108))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the date and time converters pandas registers with matplotlib not handling
    multiple dimensions ([GH 16026](https://github.com/pandas-dev/pandas/issues/16026))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.scatter_matrix()` could accept either `color` or `c`, but not both
    ([GH 14855](https://github.com/pandas-dev/pandas/issues/14855))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GroupBy/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `.groupby(..).resample()` when passed the `on=` kwarg. ([GH 15021](https://github.com/pandas-dev/pandas/issues/15021))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Properly set `__name__` and `__qualname__` for `Groupby.*` functions ([GH 14620](https://github.com/pandas-dev/pandas/issues/14620))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.get_group()` failing with a categorical grouper ([GH 15155](https://github.com/pandas-dev/pandas/issues/15155))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.groupby(...).rolling(...)` when `on` is specified and using a `DatetimeIndex`
    ([GH 15130](https://github.com/pandas-dev/pandas/issues/15130), [GH 13966](https://github.com/pandas-dev/pandas/issues/13966))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in groupby operations with `timedelta64` when passing `numeric_only=False`
    ([GH 5724](https://github.com/pandas-dev/pandas/issues/5724))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `groupby.apply()` coercing `object` dtypes to numeric types, when not
    all values were numeric ([GH 14423](https://github.com/pandas-dev/pandas/issues/14423),
    [GH 15421](https://github.com/pandas-dev/pandas/issues/15421), [GH 15670](https://github.com/pandas-dev/pandas/issues/15670))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `resample`, where a non-string `loffset` argument would not be applied
    when resampling a timeseries ([GH 13218](https://github.com/pandas-dev/pandas/issues/13218))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.groupby().describe()` when grouping on `Index` containing
    tuples ([GH 14848](https://github.com/pandas-dev/pandas/issues/14848))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `groupby().nunique()` with a datetimelike-grouper where bins counts were
    incorrect ([GH 13453](https://github.com/pandas-dev/pandas/issues/13453))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `groupby.transform()` that would coerce the resultant dtypes back to
    the original ([GH 10972](https://github.com/pandas-dev/pandas/issues/10972), [GH
    11444](https://github.com/pandas-dev/pandas/issues/11444))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `groupby.agg()` incorrectly localizing timezone on `datetime` ([GH 15426](https://github.com/pandas-dev/pandas/issues/15426),
    [GH 10668](https://github.com/pandas-dev/pandas/issues/10668), [GH 13046](https://github.com/pandas-dev/pandas/issues/13046))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.rolling/expanding()` functions where `count()` was not counting `np.Inf`,
    nor handling `object` dtypes ([GH 12541](https://github.com/pandas-dev/pandas/issues/12541))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.rolling()` where `pd.Timedelta` or `datetime.timedelta` was not accepted
    as a `window` argument ([GH 15440](https://github.com/pandas-dev/pandas/issues/15440))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Rolling.quantile` function that caused a segmentation fault when called
    with a quantile value outside of the range [0, 1] ([GH 15463](https://github.com/pandas-dev/pandas/issues/15463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.resample().median()` if duplicate column names are present
    ([GH 14233](https://github.com/pandas-dev/pandas/issues/14233))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `SparseSeries.reindex` on single level with list of length 1 ([GH 15447](https://github.com/pandas-dev/pandas/issues/15447))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in repr-formatting a `SparseDataFrame` after a value was set on (a copy
    of) one of its series ([GH 15488](https://github.com/pandas-dev/pandas/issues/15488))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseDataFrame` construction with lists not coercing to dtype ([GH
    15682](https://github.com/pandas-dev/pandas/issues/15682))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in sparse array indexing in which indices were not being validated ([GH
    15863](https://github.com/pandas-dev/pandas/issues/15863))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `pd.merge_asof()` where `left_index` or `right_index` caused a failure
    when multiple `by` was specified ([GH 15676](https://github.com/pandas-dev/pandas/issues/15676))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.merge_asof()` where `left_index`/`right_index` together caused a
    failure when `tolerance` was specified ([GH 15135](https://github.com/pandas-dev/pandas/issues/15135))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.pivot_table()` where `dropna=True` would not drop all-NaN
    columns when the columns was a `category` dtype ([GH 15193](https://github.com/pandas-dev/pandas/issues/15193))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.melt()` where passing a tuple value for `value_vars` caused a `TypeError`
    ([GH 15348](https://github.com/pandas-dev/pandas/issues/15348))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.pivot_table()` where no error was raised when values argument was
    not in the columns ([GH 14938](https://github.com/pandas-dev/pandas/issues/14938))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.concat()` in which concatenating with an empty dataframe with `join='inner'`
    was being improperly handled ([GH 15328](https://github.com/pandas-dev/pandas/issues/15328))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug with `sort=True` in `DataFrame.join` and `pd.merge` when joining on indexes
    ([GH 15582](https://github.com/pandas-dev/pandas/issues/15582))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.nsmallest` and `DataFrame.nlargest` where identical values
    resulted in duplicated rows ([GH 15297](https://github.com/pandas-dev/pandas/issues/15297))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") incorrectly raising `UnicodeError` when passing unicode
    input for `margins` keyword ([GH 13292](https://github.com/pandas-dev/pandas/issues/13292))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `.rank()` which incorrectly ranks ordered categories ([GH 15420](https://github.com/pandas-dev/pandas/issues/15420))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.corr()` and `.cov()` where the column and index were the same object
    ([GH 14617](https://github.com/pandas-dev/pandas/issues/14617))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.mode()` where `mode` was not returned if was only a single value ([GH
    15714](https://github.com/pandas-dev/pandas/issues/15714))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.cut()` with a single bin on an all 0s array ([GH 15428](https://github.com/pandas-dev/pandas/issues/15428))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.qcut()` with a single quantile and an array with identical values
    ([GH 15431](https://github.com/pandas-dev/pandas/issues/15431))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas.tools.utils.cartesian_product()` with large input can cause overflow
    on windows ([GH 15265](https://github.com/pandas-dev/pandas/issues/15265))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.eval()` which caused multi-line evals to fail with local variables
    not on the first line ([GH 15342](https://github.com/pandas-dev/pandas/issues/15342))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Compat with SciPy 0.19.0 for testing on `.interpolate()` ([GH 15662](https://github.com/pandas-dev/pandas/issues/15662))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compat for 32-bit platforms for `.qcut/cut`; bins will now be `int64` dtype
    ([GH 14866](https://github.com/pandas-dev/pandas/issues/14866))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in interactions with `Qt` when a `QtApplication` already exists ([GH 14372](https://github.com/pandas-dev/pandas/issues/14372))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoid use of `np.finfo()` during `import pandas` removed to mitigate deadlock
    on Python GIL misuse ([GH 14641](https://github.com/pandas-dev/pandas/issues/14641))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Contributors'
  prefs: []
  type: TYPE_NORMAL
- en: A total of 204 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: Adam J. Stewart +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adrian +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ajay Saxena
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Akash Tandon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Albert Villanova del Moral +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aleksey Bilogur +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexis Mignon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amol Kahat +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andreas Winkler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Kittredge +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anthonios Partheniou
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arco Bast +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ashish Singal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Baurzhan Muftakhidinov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben Kandel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben Thayer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben Welsh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bill Chambers +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brandon M. Burroughs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brian +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brian McFee +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Carlos Souza +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Ham
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Warth
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christoph Gohlke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christoph Paulik +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christopher C. Aycock
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clemens Brunner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: D.S. McNeil +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DaanVanHauwermeiren +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Himmelstein
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dave Willmer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Cook +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Gwynne +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Hoffman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Krych
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Diego Fernandez +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dimitris Spathis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dmitry L +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dody Suria Wijaya +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dominik Stanczak +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dr-Irv
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dr. Irv +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Elliott Sales de Andrade +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ennemoser Christoph +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Francesc Alted +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fumito Hamamura +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Giacomo Ferroni
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Graham R. Jeffries +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Greg Williams +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guilherme Beltramini +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guilherme Samora +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hao Wu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Harshit Patni +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ilya V. Schurov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Iván Vallés Pérez
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jackie Leng +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jaehoon Hwang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Draper +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Goppert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James McBride +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Santucci +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Schulz
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Carey
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JennaVergeynst +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jim +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jim Crist
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joe Jevnik
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joel Nothman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John Tucker +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John W. O’Brien
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John Zwinck
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jon M. Mease
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jon Mease
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonathan Whitmore +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonathan de Bruin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joost Kranendonk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joshua Bradt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julian Santander
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julien Marrec +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jun Kim +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justin Solinsky +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kacawi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kamal Kamalaldin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kerby Shedden
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kernc
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keshav Ramaswamy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kyle Kelley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Larry Ren
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leon Yin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Line Pedersen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lorenzo Cestaro +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luca Scarabello
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lukasz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mahmoud Lababidi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mark Mandel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Brett
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matti Picus
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maximilian Roos
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Charlton +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Felt
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Lamparski +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michiel Stock +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mikolaj Chwalisz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Min RK
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Miroslav Šedivý +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mykola Golubyev
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nate Yoder
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nathalie Rud +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nicholas Ver Halen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nick Chmura +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nolan Nichols +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pankaj Pandey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pawel Kordek
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pete Huang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter Csizsek +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Petio Petrov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Phil Ruffwind +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pietro Battiston
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Piotr Chromiec
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prasanjit Prakash +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rob Forgione +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert Bradshaw
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rodolfo Fernandez
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roger Thomas
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rouz Azari +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sahil Dua
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sam Foo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sami Salonen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sarah Bird +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sarma Tangirala +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scott Sanderson
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastian Bank
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastian Gsänger +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shawn Heide
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shyam Saladi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sinhrks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stephen Rauch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sébastien de Menten +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tara Adiseshan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thiago Serafim
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thoralf Gutierrez +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thrasibule +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tobias Gustafsson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Augspurger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tong SHEN +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tong Shen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: TrigonaMinima +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Uwe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wes Turner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wiktor Tomczak +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: WillAyd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yaroslav Halchenko
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yimeng Zhang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: abaldenko +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: adrian-stepien +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alexandercbooth +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: atbd +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bastewart +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bmagnusson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: carlosdanielcsantos +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: chaimdemulder +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: chris-b1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dickreuter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: discort +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dr-leo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dubourg
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dwkenefick +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: funnycrab +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gfyoung
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: goldenbull +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: hesham.shabana@hotmail.com
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jojomdt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: linebp +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: manu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: manuels +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mattip +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maxalbert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mcocdawc +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nuffe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: paul-mannino
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pbreach +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sakkemo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: scls19fr
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sinhrks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: stijnvanhoey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the-nose-knows +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: themrmax +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tomrod +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tzinckgraf
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: wandersoncferreira
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: watercrossing +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: wcwagner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: xgdgsc +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: yui-knk
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
