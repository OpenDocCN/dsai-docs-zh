- en: numpy.minimum
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.minimum
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.minimum.html](https://numpy.org/doc/1.26/reference/generated/numpy.minimum.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.minimum.html](https://numpy.org/doc/1.26/reference/generated/numpy.minimum.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Element-wise minimum of array elements.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 数组元素的逐元素最小值。
- en: Compare two arrays and return a new array containing the element-wise minima.
    If one of the elements being compared is a NaN, then that element is returned.
    If both elements are NaNs then the first is returned. The latter distinction is
    important for complex NaNs, which are defined as at least one of the real or imaginary
    parts being a NaN. The net effect is that NaNs are propagated.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个数组并返回包含逐元素最小值的新数组。如果要比较的元素之一是 NaN，则返回该元素。如果两个元素都是 NaN，则返回第一个。后者的区别对于复数 NaN
    很重要，复数 NaN 被定义为至少一个实部或虚部是 NaN。净效果是 NaN 被传播。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x1, x2**array_like'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**x1, x2**array_like'
- en: The arrays holding the elements to be compared. If `x1.shape != x2.shape`, they
    must be broadcastable to a common shape (which becomes the shape of the output).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 包含要比较的元素的数组。如果`x1.shape != x2.shape`，它们必须可以广播到一个公共形状（这成为输出的形状）。
- en: '**out**ndarray, None, or tuple of ndarray and None, optional'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**ndarray、None 或 ndarray 和 None 的元组，可选'
- en: A location into which the result is stored. If provided, it must have a shape
    that the inputs broadcast to. If not provided or None, a freshly-allocated array
    is returned. A tuple (possible only as a keyword argument) must have length equal
    to the number of outputs.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 存储结果的位置。如果提供，它必须具有输入广播到的形状。如果未提供或为 None，则返回一个新分配的数组。作为关键字参数的元组（仅为可能）必须具有与输出数量相等的长度。
- en: '**where**array_like, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**where**array_like，可选'
- en: This condition is broadcast over the input. At locations where the condition
    is True, the *out* array will be set to the ufunc result. Elsewhere, the *out*
    array will retain its original value. Note that if an uninitialized *out* array
    is created via the default `out=None`, locations within it where the condition
    is False will remain uninitialized.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 此条件在输入上进行广播。在条件为真的位置，*out* 数组将设置为 ufunc 结果。在其他位置，*out* 数组将保留其原始值。请注意，如果通过默认`out=None`创建了未初始化的
    *out* 数组，则其中条件为 False 的位置将保持未初始化。
- en: '****kwargs**'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '****kwargs**'
- en: For other keyword-only arguments, see the [ufunc docs](../ufuncs.html#ufuncs-kwargs).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 对于其他仅限关键字参数，请参阅[ufunc 文档](../ufuncs.html#ufuncs-kwargs)。
- en: 'Returns:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**y**ndarray or scalar'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**y**ndarray 或标量'
- en: The minimum of *x1* and *x2*, element-wise. This is a scalar if both *x1* and
    *x2* are scalars.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*x1* 和 *x2* 的逐元素最小值。如果 *x1* 和 *x2* 都是标量，则为标量。'
- en: See also
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`maximum`](numpy.maximum.html#numpy.maximum "numpy.maximum")'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[`maximum`](numpy.maximum.html#numpy.maximum "numpy.maximum")'
- en: Element-wise maximum of two arrays, propagates NaNs.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 两个数组的逐元素最大值，传播 NaN。
- en: '[`fmin`](numpy.fmin.html#numpy.fmin "numpy.fmin")'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fmin`](numpy.fmin.html#numpy.fmin "numpy.fmin")'
- en: Element-wise minimum of two arrays, ignores NaNs.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 两个数组的逐元素最小值，忽略 NaN。
- en: '[`amin`](numpy.amin.html#numpy.amin "numpy.amin")'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[`amin`](numpy.amin.html#numpy.amin "numpy.amin")'
- en: The minimum value of an array along a given axis, propagates NaNs.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 给定轴向数组的最小值，传播 NaN。
- en: '[`nanmin`](numpy.nanmin.html#numpy.nanmin "numpy.nanmin")'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[`nanmin`](numpy.nanmin.html#numpy.nanmin "numpy.nanmin")'
- en: The minimum value of an array along a given axis, ignores NaNs.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 给定轴向的数组的最小值，忽略 NaN。
- en: '[`fmax`](numpy.fmax.html#numpy.fmax "numpy.fmax"), [`amax`](numpy.amax.html#numpy.amax
    "numpy.amax"), [`nanmax`](numpy.nanmax.html#numpy.nanmax "numpy.nanmax")'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fmax`](numpy.fmax.html#numpy.fmax "numpy.fmax"), [`amax`](numpy.amax.html#numpy.amax
    "numpy.amax"), [`nanmax`](numpy.nanmax.html#numpy.nanmax "numpy.nanmax")'
- en: Notes
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The minimum is equivalent to `np.where(x1 <= x2, x1, x2)` when neither x1 nor
    x2 are NaNs, but it is faster and does proper broadcasting.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当 x1 和 x2 都不是 NaN 时，最小值等同于 `np.where(x1 <= x2, x1, x2)`，但速度更快且进行适当的广播。
- en: Examples
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
