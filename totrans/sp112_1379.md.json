["```py\nscipy.stats.probplot(x, sparams=(), dist='norm', fit=True, plot=None, rvalue=False)\n```", "```py\nquantiles = dist.ppf(val), for\n\n        0.5**(1/n),                  for i = n\n  val = (i - 0.3175) / (n + 0.365),  for i = 2, ..., n-1\n        1 - 0.5**(1/n),              for i = 1 \n```", "```py\n>>> import numpy as np\n>>> from scipy import stats\n>>> import matplotlib.pyplot as plt\n>>> nsample = 100\n>>> rng = np.random.default_rng() \n```", "```py\n>>> ax1 = plt.subplot(221)\n>>> x = stats.t.rvs(3, size=nsample, random_state=rng)\n>>> res = stats.probplot(x, plot=plt) \n```", "```py\n>>> ax2 = plt.subplot(222)\n>>> x = stats.t.rvs(25, size=nsample, random_state=rng)\n>>> res = stats.probplot(x, plot=plt) \n```", "```py\n>>> ax3 = plt.subplot(223)\n>>> x = stats.norm.rvs(loc=[0,5], scale=[1,1.5],\n...                    size=(nsample//2,2), random_state=rng).ravel()\n>>> res = stats.probplot(x, plot=plt) \n```", "```py\n>>> ax4 = plt.subplot(224)\n>>> x = stats.norm.rvs(loc=0, scale=1, size=nsample, random_state=rng)\n>>> res = stats.probplot(x, plot=plt) \n```", "```py\n>>> fig = plt.figure()\n>>> ax = fig.add_subplot(111)\n>>> x = stats.loggamma.rvs(c=2.5, size=500, random_state=rng)\n>>> res = stats.probplot(x, dist=stats.loggamma, sparams=(2.5,), plot=ax)\n>>> ax.set_title(\"Probplot for loggamma dist with shape parameter 2.5\") \n```", "```py\n>>> plt.show() \n```"]