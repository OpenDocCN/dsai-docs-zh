- en: scipy.signal.lfilter
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.signal.lfilter
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lfilter.html#scipy.signal.lfilter](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lfilter.html#scipy.signal.lfilter)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lfilter.html#scipy.signal.lfilter](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lfilter.html#scipy.signal.lfilter)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Filter data along one-dimension with an IIR or FIR filter.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 沿着一维数据使用 IIR 或 FIR 滤波器滤波。
- en: Filter a data sequence, *x*, using a digital filter. This works for many fundamental
    data types (including Object type). The filter is a direct form II transposed
    implementation of the standard difference equation (see Notes).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 使用数字滤波器滤波数据序列 *x*。这适用于许多基本数据类型（包括对象类型）。滤波器是标准差分方程的直接 II 转置实现（见注意事项）。
- en: The function [`sosfilt`](scipy.signal.sosfilt.html#scipy.signal.sosfilt "scipy.signal.sosfilt")
    (and filter design using `output='sos'`) should be preferred over [`lfilter`](#scipy.signal.lfilter
    "scipy.signal.lfilter") for most filtering tasks, as second-order sections have
    fewer numerical problems.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 函数 [`sosfilt`](scipy.signal.sosfilt.html#scipy.signal.sosfilt "scipy.signal.sosfilt")（使用
    `output='sos'` 进行滤波器设计）应优先于 [`lfilter`](#scipy.signal.lfilter "scipy.signal.lfilter")
    用于大多数滤波任务，因为二阶段节拍具有较少的数值问题。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**b**array_like'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**b** 数组样'
- en: The numerator coefficient vector in a 1-D sequence.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 1-D 序列中的分子系数向量。
- en: '**a**array_like'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**a** 数组样'
- en: The denominator coefficient vector in a 1-D sequence. If `a[0]` is not 1, then
    both *a* and *b* are normalized by `a[0]`.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 1-D 序列中的分母系数向量。如果 `a[0]` 不为 1，则 *a* 和 *b* 都将被 `a[0]` 标准化。
- en: '**x**array_like'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**x** 数组样'
- en: An N-dimensional input array.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: N 维输入数组。
- en: '**axis**int, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**axis** 整型，可选'
- en: The axis of the input data array along which to apply the linear filter. The
    filter is applied to each subarray along this axis. Default is -1.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 应用线性滤波器的输入数据数组的轴。该滤波器应用于此轴上的每个子数组。默认为 -1。
- en: '**zi**array_like, optional'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**zi** 数组样，可选'
- en: Initial conditions for the filter delays. It is a vector (or array of vectors
    for an N-dimensional input) of length `max(len(a), len(b)) - 1`. If *zi* is None
    or is not given then initial rest is assumed. See [`lfiltic`](scipy.signal.lfiltic.html#scipy.signal.lfiltic
    "scipy.signal.lfiltic") for more information.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 滤波器延迟的初始条件。它是长度为 `max(len(a), len(b)) - 1` 的向量（或者对于 N 维输入是向量数组）。如果 *zi* 为 None
    或未给出，则假定初始休息。详见 [`lfiltic`](scipy.signal.lfiltic.html#scipy.signal.lfiltic "scipy.signal.lfiltic")
    获取更多信息。
- en: 'Returns:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**y**array'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**y** 数组'
- en: The output of the digital filter.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 数字滤波器的输出。
- en: '**zf**array, optional'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**zf** 数组，可选'
- en: If *zi* is None, this is not returned, otherwise, *zf* holds the final filter
    delay values.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 *zi* 为 None，则不返回，否则 *zf* 包含最终滤波器延迟值。
- en: See also
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`lfiltic`](scipy.signal.lfiltic.html#scipy.signal.lfiltic "scipy.signal.lfiltic")'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[`lfiltic`](scipy.signal.lfiltic.html#scipy.signal.lfiltic "scipy.signal.lfiltic")'
- en: Construct initial conditions for [`lfilter`](#scipy.signal.lfilter "scipy.signal.lfilter").
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 构建 [`lfilter`](#scipy.signal.lfilter "scipy.signal.lfilter") 的初始条件。
- en: '[`lfilter_zi`](scipy.signal.lfilter_zi.html#scipy.signal.lfilter_zi "scipy.signal.lfilter_zi")'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[`lfilter_zi`](scipy.signal.lfilter_zi.html#scipy.signal.lfilter_zi "scipy.signal.lfilter_zi")'
- en: Compute initial state (steady state of step response) for [`lfilter`](#scipy.signal.lfilter
    "scipy.signal.lfilter").
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 [`lfilter`](#scipy.signal.lfilter "scipy.signal.lfilter") 的初始状态（阶跃响应的稳态）。
- en: '[`filtfilt`](scipy.signal.filtfilt.html#scipy.signal.filtfilt "scipy.signal.filtfilt")'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[`filtfilt`](scipy.signal.filtfilt.html#scipy.signal.filtfilt "scipy.signal.filtfilt")'
- en: A forward-backward filter, to obtain a filter with zero phase.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 前向后向滤波器，以获得零相位滤波器。
- en: '[`savgol_filter`](scipy.signal.savgol_filter.html#scipy.signal.savgol_filter
    "scipy.signal.savgol_filter")'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[`savgol_filter`](scipy.signal.savgol_filter.html#scipy.signal.savgol_filter
    "scipy.signal.savgol_filter")'
- en: A Savitzky-Golay filter.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Savitzky-Golay 滤波器。
- en: '[`sosfilt`](scipy.signal.sosfilt.html#scipy.signal.sosfilt "scipy.signal.sosfilt")'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sosfilt`](scipy.signal.sosfilt.html#scipy.signal.sosfilt "scipy.signal.sosfilt")'
- en: Filter data using cascaded second-order sections.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 使用级联二阶段节拍滤波数据。
- en: '[`sosfiltfilt`](scipy.signal.sosfiltfilt.html#scipy.signal.sosfiltfilt "scipy.signal.sosfiltfilt")'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sosfiltfilt`](scipy.signal.sosfiltfilt.html#scipy.signal.sosfiltfilt "scipy.signal.sosfiltfilt")'
- en: A forward-backward filter using second-order sections.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 使用二阶段节拍进行前向后向滤波器。
- en: Notes
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: 'The filter function is implemented as a direct II transposed structure. This
    means that the filter implements:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 该滤波函数实现为直接 II 转置结构。这意味着滤波器实现：
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'where *M* is the degree of the numerator, *N* is the degree of the denominator,
    and *n* is the sample number. It is implemented using the following difference
    equations (assuming M = N):'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 其中*M*是分子的次数，*N*是分母的次数，*n*是样本数。它使用以下差分方程实现（假设M = N）：
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: where *d* are the state variables.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 其中*d*是状态变量。
- en: 'The rational transfer function describing this filter in the z-transform domain
    is:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 描述该滤波器在z变换域中的有理传递函数为：
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Examples
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Generate a noisy signal to be filtered:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 生成一个噪声信号进行滤波：
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Create an order 3 lowpass butterworth filter:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个3阶低通巴特沃斯滤波器：
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Apply the filter to xn. Use lfilter_zi to choose the initial condition of the
    filter:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 将滤波器应用于xn。使用lfilter_zi选择滤波器的初始条件：
- en: '[PRE6]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Apply the filter again, to have a result filtered at an order the same as filtfilt:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 再次应用滤波器，使得结果与filtfilt中的同阶滤波器相同：
- en: '[PRE7]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Use filtfilt to apply the filter:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 使用filtfilt来应用滤波器：
- en: '[PRE8]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Plot the original signal and the various filtered versions:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制原始信号和各种滤波版本：
- en: '[PRE9]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![../../_images/scipy-signal-lfilter-1.png](../Images/92b6e4a5f0824a73a6f036fb725f7a42.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-signal-lfilter-1.png](../Images/92b6e4a5f0824a73a6f036fb725f7a42.png)'
