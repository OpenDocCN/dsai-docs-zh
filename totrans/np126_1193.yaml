- en: NumPy 1.5.0 Release Notes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/release/1.5.0-notes.html](https://numpy.org/doc/1.26/release/1.5.0-notes.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Highlights
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Python 3 compatibility
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This is the first NumPy release which is compatible with Python 3\. Support
    for Python 3 and Python 2 is done from a single code base. Extensive notes on
    changes can be found at [https://web.archive.org/web/20100814160313/http://projects.scipy.org/numpy/browser/trunk/doc/Py3K.txt](https://web.archive.org/web/20100814160313/http://projects.scipy.org/numpy/browser/trunk/doc/Py3K.txt).
  prefs: []
  type: TYPE_NORMAL
- en: Note that the Numpy testing framework relies on nose, which does not have a
    Python 3 compatible release yet. A working Python 3 branch of nose can be found
    at [https://web.archive.org/web/20100817112505/http://bitbucket.org/jpellerin/nose3/](https://web.archive.org/web/20100817112505/http://bitbucket.org/jpellerin/nose3/)
    however.
  prefs: []
  type: TYPE_NORMAL
- en: Porting of SciPy to Python 3 is expected to be completed soon.
  prefs: []
  type: TYPE_NORMAL
- en: '[**PEP 3118**](https://peps.python.org/pep-3118/) compatibility'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The new buffer protocol described by PEP 3118 is fully supported in this version
    of Numpy. On Python versions >= 2.6 Numpy arrays expose the buffer interface,
    and array(), asarray() and other functions accept new-style buffers as input.
  prefs: []
  type: TYPE_NORMAL
- en: New features
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Warning on casting complex to real
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Numpy now emits a `numpy.ComplexWarning` when a complex number is cast into
    a real number. For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The cast indeed discards the imaginary part, and this may not be the intended
    behavior in all cases, hence the warning. This warning can be turned off in the
    standard way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Dot method for ndarrays
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Ndarrays now have the dot product also as a method, which allows writing chains
    of matrix products as
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: instead of the longer alternative
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: linalg.slogdet function
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The slogdet function returns the sign and logarithm of the determinant of a
    matrix. Because the determinant may involve the product of many small/large values,
    the result is often more accurate than that obtained by simple multiplication.
  prefs: []
  type: TYPE_NORMAL
- en: new header
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The new header file ndarraytypes.h contains the symbols from ndarrayobject.h
    that do not depend on the PY_ARRAY_UNIQUE_SYMBOL and NO_IMPORT/_ARRAY macros.
    Broadly, these symbols are types, typedefs, and enumerations; the array function
    calls are left in ndarrayobject.h. This allows users to include array-related
    types and enumerations without needing to concern themselves with the macro expansions
    and their side- effects.
  prefs: []
  type: TYPE_NORMAL
- en: Changes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: polynomial.polynomial
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The polyint and polyder functions now check that the specified number integrations
    or derivations is a non-negative integer. The number 0 is a valid value for both
    functions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A degree method has been added to the Polynomial class.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A trimdeg method has been added to the Polynomial class. It operates like truncate
    except that the argument is the desired degree of the result, not the number of
    coefficients.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Polynomial.fit now uses None as the default domain for the fit. The default
    Polynomial domain can be specified by using [] as the domain value.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Weights can be used in both polyfit and Polynomial.fit
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A linspace method has been added to the Polynomial class to ease plotting.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The polymulx function was added.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: polynomial.chebyshev
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The chebint and chebder functions now check that the specified number integrations
    or derivations is a non-negative integer. The number 0 is a valid value for both
    functions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A degree method has been added to the Chebyshev class.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A trimdeg method has been added to the Chebyshev class. It operates like truncate
    except that the argument is the desired degree of the result, not the number of
    coefficients.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chebyshev.fit now uses None as the default domain for the fit. The default Chebyshev
    domain can be specified by using [] as the domain value.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Weights can be used in both chebfit and Chebyshev.fit
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A linspace method has been added to the Chebyshev class to ease plotting.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The chebmulx function was added.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added functions for the Chebyshev points of the first and second kind.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: histogram
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: After a two years transition period, the old behavior of the histogram function
    has been phased out, and the “new” keyword has been removed.
  prefs: []
  type: TYPE_NORMAL
- en: correlate
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The old behavior of correlate was deprecated in 1.4.0, the new behavior (the
    usual definition for cross-correlation) is now the default.
  prefs: []
  type: TYPE_NORMAL
- en: Highlights
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Python 3 compatibility
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This is the first NumPy release which is compatible with Python 3\. Support
    for Python 3 and Python 2 is done from a single code base. Extensive notes on
    changes can be found at [https://web.archive.org/web/20100814160313/http://projects.scipy.org/numpy/browser/trunk/doc/Py3K.txt](https://web.archive.org/web/20100814160313/http://projects.scipy.org/numpy/browser/trunk/doc/Py3K.txt).
  prefs: []
  type: TYPE_NORMAL
- en: Note that the Numpy testing framework relies on nose, which does not have a
    Python 3 compatible release yet. A working Python 3 branch of nose can be found
    at [https://web.archive.org/web/20100817112505/http://bitbucket.org/jpellerin/nose3/](https://web.archive.org/web/20100817112505/http://bitbucket.org/jpellerin/nose3/)
    however.
  prefs: []
  type: TYPE_NORMAL
- en: Porting of SciPy to Python 3 is expected to be completed soon.
  prefs: []
  type: TYPE_NORMAL
- en: '[**PEP 3118**](https://peps.python.org/pep-3118/) compatibility'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The new buffer protocol described by PEP 3118 is fully supported in this version
    of Numpy. On Python versions >= 2.6 Numpy arrays expose the buffer interface,
    and array(), asarray() and other functions accept new-style buffers as input.
  prefs: []
  type: TYPE_NORMAL
- en: Python 3 compatibility
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This is the first NumPy release which is compatible with Python 3\. Support
    for Python 3 and Python 2 is done from a single code base. Extensive notes on
    changes can be found at [https://web.archive.org/web/20100814160313/http://projects.scipy.org/numpy/browser/trunk/doc/Py3K.txt](https://web.archive.org/web/20100814160313/http://projects.scipy.org/numpy/browser/trunk/doc/Py3K.txt).
  prefs: []
  type: TYPE_NORMAL
- en: Note that the Numpy testing framework relies on nose, which does not have a
    Python 3 compatible release yet. A working Python 3 branch of nose can be found
    at [https://web.archive.org/web/20100817112505/http://bitbucket.org/jpellerin/nose3/](https://web.archive.org/web/20100817112505/http://bitbucket.org/jpellerin/nose3/)
    however.
  prefs: []
  type: TYPE_NORMAL
- en: Porting of SciPy to Python 3 is expected to be completed soon.
  prefs: []
  type: TYPE_NORMAL
- en: '[**PEP 3118**](https://peps.python.org/pep-3118/) compatibility'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The new buffer protocol described by PEP 3118 is fully supported in this version
    of Numpy. On Python versions >= 2.6 Numpy arrays expose the buffer interface,
    and array(), asarray() and other functions accept new-style buffers as input.
  prefs: []
  type: TYPE_NORMAL
- en: New features
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Warning on casting complex to real
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Numpy now emits a `numpy.ComplexWarning` when a complex number is cast into
    a real number. For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The cast indeed discards the imaginary part, and this may not be the intended
    behavior in all cases, hence the warning. This warning can be turned off in the
    standard way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Dot method for ndarrays
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Ndarrays now have the dot product also as a method, which allows writing chains
    of matrix products as
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: instead of the longer alternative
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: linalg.slogdet function
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The slogdet function returns the sign and logarithm of the determinant of a
    matrix. Because the determinant may involve the product of many small/large values,
    the result is often more accurate than that obtained by simple multiplication.
  prefs: []
  type: TYPE_NORMAL
- en: new header
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The new header file ndarraytypes.h contains the symbols from ndarrayobject.h
    that do not depend on the PY_ARRAY_UNIQUE_SYMBOL and NO_IMPORT/_ARRAY macros.
    Broadly, these symbols are types, typedefs, and enumerations; the array function
    calls are left in ndarrayobject.h. This allows users to include array-related
    types and enumerations without needing to concern themselves with the macro expansions
    and their side- effects.
  prefs: []
  type: TYPE_NORMAL
- en: Warning on casting complex to real
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Numpy now emits a `numpy.ComplexWarning` when a complex number is cast into
    a real number. For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'The cast indeed discards the imaginary part, and this may not be the intended
    behavior in all cases, hence the warning. This warning can be turned off in the
    standard way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Dot method for ndarrays
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Ndarrays now have the dot product also as a method, which allows writing chains
    of matrix products as
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: instead of the longer alternative
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: linalg.slogdet function
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The slogdet function returns the sign and logarithm of the determinant of a
    matrix. Because the determinant may involve the product of many small/large values,
    the result is often more accurate than that obtained by simple multiplication.
  prefs: []
  type: TYPE_NORMAL
- en: new header
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The new header file ndarraytypes.h contains the symbols from ndarrayobject.h
    that do not depend on the PY_ARRAY_UNIQUE_SYMBOL and NO_IMPORT/_ARRAY macros.
    Broadly, these symbols are types, typedefs, and enumerations; the array function
    calls are left in ndarrayobject.h. This allows users to include array-related
    types and enumerations without needing to concern themselves with the macro expansions
    and their side- effects.
  prefs: []
  type: TYPE_NORMAL
- en: Changes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: polynomial.polynomial
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The polyint and polyder functions now check that the specified number integrations
    or derivations is a non-negative integer. The number 0 is a valid value for both
    functions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A degree method has been added to the Polynomial class.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A trimdeg method has been added to the Polynomial class. It operates like truncate
    except that the argument is the desired degree of the result, not the number of
    coefficients.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Polynomial.fit now uses None as the default domain for the fit. The default
    Polynomial domain can be specified by using [] as the domain value.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Weights can be used in both polyfit and Polynomial.fit
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A linspace method has been added to the Polynomial class to ease plotting.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The polymulx function was added.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: polynomial.chebyshev
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The chebint and chebder functions now check that the specified number integrations
    or derivations is a non-negative integer. The number 0 is a valid value for both
    functions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A degree method has been added to the Chebyshev class.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A trimdeg method has been added to the Chebyshev class. It operates like truncate
    except that the argument is the desired degree of the result, not the number of
    coefficients.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chebyshev.fit now uses None as the default domain for the fit. The default Chebyshev
    domain can be specified by using [] as the domain value.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Weights can be used in both chebfit and Chebyshev.fit
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A linspace method has been added to the Chebyshev class to ease plotting.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The chebmulx function was added.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added functions for the Chebyshev points of the first and second kind.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: histogram
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: After a two years transition period, the old behavior of the histogram function
    has been phased out, and the “new” keyword has been removed.
  prefs: []
  type: TYPE_NORMAL
- en: correlate
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The old behavior of correlate was deprecated in 1.4.0, the new behavior (the
    usual definition for cross-correlation) is now the default.
  prefs: []
  type: TYPE_NORMAL
- en: polynomial.polynomial
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The polyint and polyder functions now check that the specified number integrations
    or derivations is a non-negative integer. The number 0 is a valid value for both
    functions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A degree method has been added to the Polynomial class.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A trimdeg method has been added to the Polynomial class. It operates like truncate
    except that the argument is the desired degree of the result, not the number of
    coefficients.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Polynomial.fit now uses None as the default domain for the fit. The default
    Polynomial domain can be specified by using [] as the domain value.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Weights can be used in both polyfit and Polynomial.fit
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A linspace method has been added to the Polynomial class to ease plotting.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The polymulx function was added.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: polynomial.chebyshev
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The chebint and chebder functions now check that the specified number integrations
    or derivations is a non-negative integer. The number 0 is a valid value for both
    functions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A degree method has been added to the Chebyshev class.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A trimdeg method has been added to the Chebyshev class. It operates like truncate
    except that the argument is the desired degree of the result, not the number of
    coefficients.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chebyshev.fit now uses None as the default domain for the fit. The default Chebyshev
    domain can be specified by using [] as the domain value.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Weights can be used in both chebfit and Chebyshev.fit
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A linspace method has been added to the Chebyshev class to ease plotting.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The chebmulx function was added.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added functions for the Chebyshev points of the first and second kind.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: histogram
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: After a two years transition period, the old behavior of the histogram function
    has been phased out, and the “new” keyword has been removed.
  prefs: []
  type: TYPE_NORMAL
- en: correlate
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The old behavior of correlate was deprecated in 1.4.0, the new behavior (the
    usual definition for cross-correlation) is now the default.
  prefs: []
  type: TYPE_NORMAL
