- en: Philosophy behind unit systems
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/physics/units/philosophy.html](https://docs.sympy.org/latest/modules/physics/units/philosophy.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Dimensions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: At the root of unit systems are dimension systems, whose structure mainly determines
    the one of unit systems. Our definition could seem rough but they are largely
    sufficient for our purposes.
  prefs: []
  type: TYPE_NORMAL
- en: A dimension will be defined as a property which is measurable and assigned to
    a specific phenomenon. In this sense dimensions are different from pure numbers
    because they carry some extra-sense, and for this reason two different dimensions
    cannot be added. For example time or length are dimensions, but also any other
    things which has some sense for us, like angle, number of particles (moles…) or
    information (bits…).
  prefs: []
  type: TYPE_NORMAL
- en: From this point of view the only truly dimensionless quantity are pure numbers.
    The idea of being dimensionless is very system-dependent, as can be seen from
    the \((c, \hbar, G)\), in which all units appears to be dimensionless in the usual
    common sense. This is unavoidable for computability of generic unit systems (but
    at the end we can tell the program what is dimensionless).
  prefs: []
  type: TYPE_NORMAL
- en: 'Dimensions can be composed together by taking their product or their ratio
    (to be defined below). For example the velocity is defined as length divided by
    time, or we can see the length as velocity multiplied by time, depending of what
    we see as the more fundamental: in general we can select a set of base dimensions
    from which we can describe all the others.'
  prefs: []
  type: TYPE_NORMAL
- en: Group structure
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'After this short introduction whose aim was to introduce the dimensions from
    an intuitive perspective, we describe the mathematical structure. A dimension
    system with \(n\) independent dimensions \(\{d_i\}_{i=1,\ldots,n}\) is described
    by a multiplicative group \(G\):'
  prefs: []
  type: TYPE_NORMAL
- en: there an identity element \(1\) corresponding to pure numbers;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the product \(D_3 = D_1 D_2\) of two elements \(D_1, D_2 \in G\) is also in
    \(G\);
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: any element \(D \in G\) has an inverse \(D^{-1} \in G\).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We denote
  prefs: []
  type: TYPE_NORMAL
- en: \[D^n = \underbrace{D \times \cdots \times D}_{\text{$n$ times}},\]
  prefs: []
  type: TYPE_NORMAL
- en: 'and by definition \(D^0 = 1\). The \(\{d_i\}_{i=1,\ldots,n}\) are called generators
    of the group since any element \(D \in G\) can be expressed as the product of
    powers of the generators:'
  prefs: []
  type: TYPE_NORMAL
- en: \[D = \prod_{i=1}^n d_i^{a_i}, \qquad a_i \in \mathbf{Z}.\]
  prefs: []
  type: TYPE_NORMAL
- en: 'The identity is given for \(a_i = 0, \forall i\), while we recover the generator
    \(d_i\) for \(a_i = 1, a_j = 0, \forall j \neq i\). This group has the following
    properties:'
  prefs: []
  type: TYPE_NORMAL
- en: abelian, since the generator commutes, \([d_i, d_j] = 0\);
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: countable (infinite but discrete) since the elements are indexed by the powers
    of the generators [[1]](#id3).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'One can change the dimension basis \(\{d''_i\}_{i=1,\ldots,n}\) by taking some
    combination of the old generators:'
  prefs: []
  type: TYPE_NORMAL
- en: \[d'_i = \prod_{j=1}^n d_j^{P_{ij}}.\]
  prefs: []
  type: TYPE_NORMAL
- en: Linear space representation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'It is possible to use the linear space \(\mathbf{Z}^n\) as a representation
    of the group since the power coefficients \(a_i\) carry all the information one
    needs (we do not distinguish between the element of the group and its representation):'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}(d_i)_j = \delta_{ij}, \qquad D = \begin{pmatrix} a_1 \\ \vdots
    \\ a_n \end{pmatrix}.\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: 'The change of basis to \(d''_i\) follows the usual rule of change of basis
    for linear space, the matrix being given by the coefficients \(P_{ij}\), which
    are simply the coefficients of the new vectors in term of the old basis:'
  prefs: []
  type: TYPE_NORMAL
- en: \[d'_i = P_{ij} d_j.\]
  prefs: []
  type: TYPE_NORMAL
- en: We will use this last solution in our algorithm.
  prefs: []
  type: TYPE_NORMAL
- en: An example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In order to illustrate all this formalism, we end this section with a specific
    example, the MKS system (m, kg, s) with dimensions (L: length, M: mass, T: time).
    They are represented as (we will always sort the vectors in alphabetic order)'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}L = \begin{pmatrix} 1 \\ 0 \\ 0 \end{pmatrix}, \qquad M = \begin{pmatrix}
    0 \\ 1 \\ 0 \end{pmatrix}, \qquad T = \begin{pmatrix} 0 \\ 0 \\ 1 \end{pmatrix}.\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: Other dimensions can be derived, for example velocity \(V\) or action \(A\)
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}V = L T^{-1}, \qquad A = M L^2 T^{-2},\\ V = \begin{pmatrix}
    1 \\ 0 \\ -1 \end{pmatrix}, \qquad A = \begin{pmatrix} 2 \\ 1 \\ -2 \end{pmatrix}.\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: 'We can change the basis to go to the natural system \((m, c, \hbar)\) with
    dimension (L: length, V: velocity, A: action) [[2]](#id4). In this basis the generators
    are'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}A = \begin{pmatrix} 1 \\ 0 \\ 0 \end{pmatrix}, \qquad L = \begin{pmatrix}
    0 \\ 1 \\ 0 \end{pmatrix}, \qquad V = \begin{pmatrix} 0 \\ 0 \\ 1 \end{pmatrix},\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: whereas the mass and time are given by
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}T = L V^{-1}, \qquad M = A V^{-2},\\ T = \begin{pmatrix} 0 \\
    1 \\ -1 \end{pmatrix}, \qquad M = \begin{pmatrix} 1 \\ 0 \\ -2 \end{pmatrix}.\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally the inverse change of basis matrix \(P^{-1}\) is obtained by gluing
    the vectors expressed in the old basis:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}P^{-1} = \begin{pmatrix} 2 & 1 & 1 \\ 1 & 0 & 0 \\ -2 & 0 & -1
    \end{pmatrix}.\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: To find the change of basis matrix we just have to take the inverse
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}P = \begin{pmatrix} 0 & 1 & 0 \\ 1 & 0 & 1 \\ 0 & -2 & -1 \end{pmatrix}.\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: Quantities
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A quantity is defined by its name, dimension and factor to a canonical quantity
    of the same dimension. The canonical quantities are an internal reference of the
    units module and should not be relevant for end-users. Both units and physical
    constants are quantities.
  prefs: []
  type: TYPE_NORMAL
- en: Units
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Units, such as meters, seconds and kilograms, are usually reference quantities
    chosen by men to refer to other quantities.
  prefs: []
  type: TYPE_NORMAL
- en: After defining several units of different dimensions we can form a unit system,
    which is basically a dimension system with a notion of scale.
  prefs: []
  type: TYPE_NORMAL
- en: Constants
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Physical constants are just quantities. They indicate that we used not to understand
    that two dimensions are in fact the same. For example, we see a velocity for the
    light different from 1 because we do not think that time is the same as space
    (which is normal because of our sense; but it is different at the fundamental
    level). For example, once there was the “heat constant” which allowed to convert
    between joules and calories since people did not know that heat was energy. As
    soon as they understood it they fixed this constant to 1 (this is a very schematic
    story).
  prefs: []
  type: TYPE_NORMAL
- en: We can interpret the fact that now we fix the value of fundamental constants
    in the SI as showing that they are units (and we use them to define the other
    usual units).
  prefs: []
  type: TYPE_NORMAL
- en: The need for a reference
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'It is not possible to define from scratch units and unit systems: one needs
    to define some references, and then build the rest over them. Said in another
    way, we need an origin for the scales of our units (i.e. a unit with factor 1),
    and to be sure that all units of a given dimension are defined consistently we
    need to use the same origin for all of them. This can happen if we want to use
    a derived unit as a base units in another system: we should not define it as having
    a scale 1, because, even if it is inconsistent inside the system, we could not
    convert to the first system since we have two different units (from our point
    of view) of same scale (which means they are equal for the computer).'
  prefs: []
  type: TYPE_NORMAL
- en: We will say that the dimensions and scales defined outside systems are canonical,
    because we use them for all computations. On the other side the dimensions and
    scales obtained with reference to a system are called physical, because they ultimately
    carry a sense.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s use a concrete (and important) example: the case of the mass units. We
    would like to define the gram as the origin. We would like to define the gram
    as the canonical origin for the mass, so we assign it a scale 1\. Then we can
    define a system (e.g. in chemistry) that take it as a base unit. The MKS system
    prefers to use the kilogram; a naive choice would be to attribute it a scale if
    1 since it is a base, but we see that we could not convert to the chemistry system
    because g and kg have both been given the same factor. So we need to define kg
    as 1000 g, and only then use it as a base in MKS. But as soon as we ask the question
    “what is the factor of kg in MKS?”, we get the answer 1, since it is a base unit.'
  prefs: []
  type: TYPE_NORMAL
- en: Thus we will define all computations without referring to a system, and it is
    only at the end that we can plug the result into a system to give the context
    we are interested in.
  prefs: []
  type: TYPE_NORMAL
- en: Literature
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Page52]'
  prefs: []
  type: TYPE_NORMAL
- en: 'C. H. Page, [Classes of units in the SI](https://doi.org/10.1119/1.1927482),
    Am. J. of Phys. 20, 1 (1952): 1.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Page78]'
  prefs: []
  type: TYPE_NORMAL
- en: 'C. H. Page, [Units and Dimensions in Physics](https://pubs.aip.org/aapt/ajp/article-abstract/20/1/1/1034555/Units-and-Dimensions-in-Physics),
    Am. J. of Phys. 46, 1 (1978): 78.'
  prefs: []
  type: TYPE_NORMAL
- en: '[deBoer79]'
  prefs: []
  type: TYPE_NORMAL
- en: 'J. de Boer, [Group properties of quantities and units](https://aapt.scitation.org/doi/10.1119/1.11703),
    Am. J. of Phys. 47, 9 (1979): 818.'
  prefs: []
  type: TYPE_NORMAL
- en: '[LevyLeblond77]'
  prefs: []
  type: TYPE_NORMAL
- en: 'J.-M. Lévy-Leblond, [On the Conceptual Nature of the Physical Constants](https://link.springer.com/article/10.1007/BF02748049),
    La Rivista Del Nuovo Cimento 7, no. 2 (1977): 187-214.'
  prefs: []
  type: TYPE_NORMAL
- en: '[NIST]'
  prefs: []
  type: TYPE_NORMAL
- en: '[NIST reference on constants, units and uncertainties](https://physics.nist.gov/cuu/Units/introduction.html).'
  prefs: []
  type: TYPE_NORMAL
- en: Footnotes
  prefs: []
  type: TYPE_NORMAL
