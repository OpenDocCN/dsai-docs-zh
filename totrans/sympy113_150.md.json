["```py\nclass sympy.physics.units.dimensions.Dimension(name, symbol=None)\n```", "```py\n>>> from sympy.physics.units import Dimension\n>>> length = Dimension('length')\n>>> length\nDimension(length)\n>>> time = Dimension('time')\n>>> time\nDimension(time) \n```", "```py\n>>> velocity = length / time\n>>> velocity\nDimension(length/time) \n```", "```py\n>>> from sympy.physics.units.systems.si import dimsys_SI\n>>> dimsys_SI.get_dimensional_dependencies(velocity)\n{Dimension(length, L): 1, Dimension(time, T): -1}\n>>> length + length\nDimension(length)\n>>> l2 = length**2\n>>> l2\nDimension(length**2)\n>>> dimsys_SI.get_dimensional_dependencies(l2)\n{Dimension(length, L): 2} \n```", "```py\nhas_integer_powers(dim_sys)\n```", "```py\nclass sympy.physics.units.dimensions.DimensionSystem(base_dims, derived_dims=(), dimensional_dependencies={})\n```", "```py\nproperty can_transf_matrix\n```", "```py\nproperty dim\n```", "```py\ndim_can_vector(dim)\n```", "```py\ndim_vector(dim)\n```", "```py\nproperty inv_can_transf_matrix\n```", "```py\nproperty is_consistent\n```", "```py\nis_dimensionless(dimension)\n```", "```py\nproperty list_can_dims\n```", "```py\nprint_dim_base(dim)\n```"]