- en: numpy.linalg.qr
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.linalg.qr
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.linalg.qr.html](https://numpy.org/doc/1.26/reference/generated/numpy.linalg.qr.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.linalg.qr.html](https://numpy.org/doc/1.26/reference/generated/numpy.linalg.qr.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Compute the qr factorization of a matrix.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 计算矩阵的qr分解。
- en: Factor the matrix *a* as *qr*, where *q* is orthonormal and *r* is upper-triangular.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 将矩阵*a*因子化为*qr*，其中*q*为正交矩阵，*r*为上三角矩阵。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a**array_like, shape (…, M, N)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**array_like，形状（…，M，N）'
- en: An array-like object with the dimensionality of at least 2.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 至少为2的维度的类似数组对象。
- en: '**mode**{‘reduced’, ‘complete’, ‘r’, ‘raw’}, optional'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**mode**{‘reduced’, ‘complete’, ‘r’, ‘raw’}，optional'
- en: If K = min(M, N), then
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果K = min(M，N)，则
- en: '‘reduced’ : returns Q, R with dimensions (…, M, K), (…, K, N) (default)'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘reduced’：返回维度为（…，M，K），（…，K，N）的Q，R（默认）
- en: '‘complete’ : returns Q, R with dimensions (…, M, M), (…, M, N)'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘complete’：返回维度为（…，M，M），（…，M，N）的Q，R
- en: '‘r’ : returns R only with dimensions (…, K, N)'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘r’：仅返回维度为（…，K，N）的R
- en: '‘raw’ : returns h, tau with dimensions (…, N, M), (…, K,)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘raw’：返回维度为（…，N，M），（…，K，）的h，tau
- en: The options ‘reduced’, ‘complete, and ‘raw’ are new in numpy 1.8, see the notes
    for more information. The default is ‘reduced’, and to maintain backward compatibility
    with earlier versions of numpy both it and the old default ‘full’ can be omitted.
    Note that array h returned in ‘raw’ mode is transposed for calling Fortran. The
    ‘economic’ mode is deprecated. The modes ‘full’ and ‘economic’ may be passed using
    only the first letter for backwards compatibility, but all others must be spelled
    out. See the Notes for more explanation.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 选项‘reduced’，‘complete’和‘raw’是numpy 1.8中的新特性，请查阅说明以获取更多信息。默认为‘reduced’，为了与之前版本的numpy保持向后兼容性，可以省略‘reduced’和旧默认值‘full’。请注意，在‘raw’模式下返回的数组h进行了转置以调用Fortran。‘economic’模式已弃用。模式‘full’和‘economic’可以仅使用第一个字母进行传递以实现向后兼容性，但所有其他模式必须拼写完整。有关更多解释，请查看说明。
- en: 'Returns:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: When mode is ‘reduced’ or ‘complete’, the result will be a namedtuple with
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当模式为‘reduced’或‘complete’时，结果将是一个具有
- en: the attributes *Q* and *R*.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 属性*Q*和*R*。
- en: '**Q**ndarray of float or complex, optional'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**Q**ndarray of float or complex, optional'
- en: A matrix with orthonormal columns. When mode = ‘complete’ the result is an orthogonal/unitary
    matrix depending on whether or not a is real/complex. The determinant may be either
    +/- 1 in that case. In case the number of dimensions in the input array is greater
    than 2 then a stack of the matrices with above properties is returned.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 具有正交列的矩阵。当mode = ‘complete’时，结果是一个正交/酉矩阵，取决于*a*是实数还是复数。在这种情况下，行列式可能是+/- 1。如果输入数组的维数大于2，则返回具有上述属性的矩阵堆栈。
- en: '**R**ndarray of float or complex, optional'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**R**ndarray of float or complex, optional'
- en: The upper-triangular matrix or a stack of upper-triangular matrices if the number
    of dimensions in the input array is greater than 2.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 上三角矩阵或者如果输入数组的维数大于2，则返回上三角矩阵的堆栈。
- en: '**(h, tau)**ndarrays of np.double or np.cdouble, optional'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**(h, tau)**ndarrays of np.double or np.cdouble, optional'
- en: The array h contains the Householder reflectors that generate q along with r.
    The tau array contains scaling factors for the reflectors. In the deprecated ‘economic’
    mode only h is returned.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 数组h包含生成q和r的Householder反射器。tau数组包含反射器的缩放因子。在不推荐使用的“经济”模式中，仅返回h。
- en: 'Raises:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: LinAlgError
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: LinAlgError
- en: If factoring fails.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果因子化失败。
- en: See also
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`scipy.linalg.qr`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.linalg.qr.html#scipy.linalg.qr
    "(in SciPy v1.11.2)")'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.linalg.qr`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.linalg.qr.html#scipy.linalg.qr
    "(在SciPy v1.11.2中)")'
- en: Similar function in SciPy.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: SciPy中类似的函数。
- en: '[`scipy.linalg.rq`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.linalg.rq.html#scipy.linalg.rq
    "(in SciPy v1.11.2)")'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.linalg.rq`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.linalg.rq.html#scipy.linalg.rq
    "(在SciPy v1.11.2中)")'
- en: Compute RQ decomposition of a matrix.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 计算矩阵的RQ分解。
- en: Notes
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: This is an interface to the LAPACK routines `dgeqrf`, `zgeqrf`, `dorgqr`, and
    `zungqr`.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这是对LAPACK例程`dgeqrf`，`zgeqrf`，`dorgqr`和`zungqr`的接口。
- en: 'For more information on the qr factorization, see for example: [https://en.wikipedia.org/wiki/QR_factorization](https://en.wikipedia.org/wiki/QR_factorization)'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于qr分解的信息，请参见：[https://zh.wikipedia.org/wiki/QR分解](https://zh.wikipedia.org/wiki/QR分解)
- en: Subclasses of [`ndarray`](numpy.ndarray.html#numpy.ndarray "numpy.ndarray")
    are preserved except for the ‘raw’ mode. So if *a* is of type [`matrix`](numpy.matrix.html#numpy.matrix
    "numpy.matrix"), all the return values will be matrices too.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ndarray`](numpy.ndarray.html#numpy.ndarray "numpy.ndarray") 下的子类除了 ''raw''
    模式之外都会被保留。因此，如果 *a* 的类型是 [`matrix`](numpy.matrix.html#numpy.matrix "numpy.matrix")，那么所有的返回值也将是矩阵。'
- en: New ‘reduced’, ‘complete’, and ‘raw’ options for mode were added in NumPy 1.8.0
    and the old option ‘full’ was made an alias of ‘reduced’. In addition the options
    ‘full’ and ‘economic’ were deprecated. Because ‘full’ was the previous default
    and ‘reduced’ is the new default, backward compatibility can be maintained by
    letting *mode* default. The ‘raw’ option was added so that LAPACK routines that
    can multiply arrays by q using the Householder reflectors can be used. Note that
    in this case the returned arrays are of type np.double or np.cdouble and the h
    array is transposed to be FORTRAN compatible. No routines using the ‘raw’ return
    are currently exposed by numpy, but some are available in lapack_lite and just
    await the necessary work.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 1.8.0 中新增了 “reduced”，“complete” 和 “raw” 选项以及将 “full” 选项作为 “reduced” 的别名。此外，还弃用了
    “full” 和 “economic” 选项。因为 “full” 是先前的默认选项，而 “reduced” 是新的默认选项，所以通过默认设置 *mode*
    即可保持向后兼容性。添加 “raw” 选项是为了使用 Householder reflectors 可以将数组乘以 q 的 LAPACK 函数。请注意，在这种情况下，返回的数组的类型为
    np.double 或 np.cdouble，并且 h 数组被转置以符合 FORTRAN 的兼容性。目前，numpy 没有暴露使用 “raw” 返回值的例程，但是一些例程在
    lapack_lite 中可用并等待相应的工作。
- en: Examples
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Example illustrating a common use of [`qr`](#numpy.linalg.qr "numpy.linalg.qr"):
    solving of least squares problems'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 示例说明了 [`qr`](#numpy.linalg.qr "numpy.linalg.qr") 的常见用法：解决最小二乘问题
- en: 'What are the least-squares-best *m* and *y0* in `y = y0 + mx` for the following
    data: {(0,1), (1,0), (1,2), (2,1)}. (Graph the points and you’ll see that it should
    be y0 = 0, m = 1.) The answer is provided by solving the over-determined matrix
    equation `Ax = b`, where:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 对于给定数据：{(0,1), (1,0), (1,2), (2,1)}，在 `y = y0 + mx` 中最小平方最佳的 *m* 和 *y0* 是多少？（画出这些点，你会发现应该是
    y0 = 0，m = 1）。这个问题通过解方程组 `Ax = b` 来得到答案，其中：
- en: '[PRE2]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: If A = QR such that Q is orthonormal (which is always possible via Gram-Schmidt),
    then `x = inv(R) * (Q.T) * b`. (In numpy practice, however, we simply use [`lstsq`](numpy.linalg.lstsq.html#numpy.linalg.lstsq
    "numpy.linalg.lstsq").)
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 A = QR，并且 Q 是正交的（通过 Gram-Schmidt 过程总可以得到这样一个矩阵），那么 `x = inv(R) * (Q.T) *
    b`。（然而，在 numpy 实践中，我们只需使用 [`lstsq`](numpy.linalg.lstsq.html#numpy.linalg.lstsq
    "numpy.linalg.lstsq")）。
- en: '[PRE3]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
