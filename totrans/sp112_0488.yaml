- en: scipy.optimize.brent
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.optimize.brent
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.brent.html#scipy.optimize.brent](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.brent.html#scipy.optimize.brent)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.brent.html#scipy.optimize.brent](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.brent.html#scipy.optimize.brent)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Given a function of one variable and a possible bracket, return a local minimizer
    of the function isolated to a fractional precision of tol.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 给定一个单变量函数和可能的bracket，返回被孤立到tol分数精度的函数的局部最小值。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**func**callable f(x,*args)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**func**可调用的 f(x,*args)'
- en: Objective function.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目标函数。
- en: '**args**tuple, optional'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**args**元组，可选'
- en: Additional arguments (if present).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 额外的参数（如果存在）。
- en: '**brack**tuple, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**brack**元组，可选'
- en: Either a triple `(xa, xb, xc)` satisfying `xa < xb < xc` and `func(xb) < func(xa)
    and  func(xb) < func(xc)`, or a pair `(xa, xb)` to be used as initial points for
    a downhill bracket search (see [`scipy.optimize.bracket`](scipy.optimize.bracket.html#scipy.optimize.bracket
    "scipy.optimize.bracket")). The minimizer `x` will not necessarily satisfy `xa
    <= x <= xb`.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要么是满足`xa < xb < xc`且`func(xb) < func(xa) and  func(xb) < func(xc)`的三元组`(xa,
    xb, xc)`，要么是用于下山搜索的初始点对`(xa, xb)`（参见[`scipy.optimize.bracket`](scipy.optimize.bracket.html#scipy.optimize.bracket
    "scipy.optimize.bracket")）。最小化器`x`不一定满足`xa <= x <= xb`。
- en: '**tol**float, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**tol**浮点数，可选'
- en: Relative error in solution *xopt* acceptable for convergence.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案*xopt*中可接受的相对误差。
- en: '**full_output**bool, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**full_output**布尔型，可选'
- en: If True, return all output args (xmin, fval, iter, funcalls).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为真，则返回所有输出参数（xmin、fval、iter、funcalls）。
- en: '**maxiter**int, optional'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**maxiter**整数，可选'
- en: Maximum number of iterations in solution.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案中的最大迭代次数。
- en: 'Returns:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 返回值：
- en: '**xmin**ndarray'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**xmin**ndarray'
- en: Optimum point.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 最优点。
- en: '**fval**float'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**fval**浮点数'
- en: (Optional output) Optimum function value.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: （可选输出）最优函数值。
- en: '**iter**int'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**iter**整数'
- en: (Optional output) Number of iterations.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: （可选输出）迭代次数。
- en: '**funcalls**int'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**funcalls**整数'
- en: (Optional output) Number of objective function evaluations made.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: （可选输出）进行的目标函数评估次数。
- en: See also
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`minimize_scalar`](scipy.optimize.minimize_scalar.html#scipy.optimize.minimize_scalar
    "scipy.optimize.minimize_scalar")'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[`minimize_scalar`](scipy.optimize.minimize_scalar.html#scipy.optimize.minimize_scalar
    "scipy.optimize.minimize_scalar")'
- en: Interface to minimization algorithms for scalar univariate functions. See the
    ‘Brent’ *method* in particular.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 标量单变量函数最小化算法接口。详见特定的“Brent” *方法*。
- en: Notes
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: Uses inverse parabolic interpolation when possible to speed up convergence of
    golden section method.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在可能时使用反向抛物线插值来加速黄金分割法的收敛。
- en: Does not ensure that the minimum lies in the range specified by *brack*. See
    [`scipy.optimize.fminbound`](scipy.optimize.fminbound.html#scipy.optimize.fminbound
    "scipy.optimize.fminbound").
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 不保证最小值位于*brack*指定的范围内。参见[`scipy.optimize.fminbound`](scipy.optimize.fminbound.html#scipy.optimize.fminbound
    "scipy.optimize.fminbound")。
- en: Examples
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: We illustrate the behaviour of the function when *brack* is of size 2 and 3
    respectively. In the case where *brack* is of the form `(xa, xb)`, we can see
    for the given values, the output does not necessarily lie in the range `(xa, xb)`.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们展示了在*brack*大小为2和3时函数的行为。在*brack*形式为`(xa, xb)`的情况下，我们可以看到对于给定的值，输出并不一定位于区间`(xa,
    xb)`内。
- en: '[PRE1]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
