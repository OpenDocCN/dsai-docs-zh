- en: scipy.optimize.golden
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.optimize.golden
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.golden.html#scipy.optimize.golden](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.golden.html#scipy.optimize.golden)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.golden.html#scipy.optimize.golden](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.golden.html#scipy.optimize.golden)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Return the minimizer of a function of one variable using the golden section
    method.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 使用黄金分割法返回单变量函数的最小化器。
- en: Given a function of one variable and a possible bracketing interval, return
    a minimizer of the function isolated to a fractional precision of tol.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 给定一个单变量函数和可能的括号区间，返回函数的最小化器，精确到 tol 的分数精度。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**func**callable func(x,*args)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**func**callable func(x,*args)'
- en: Objective function to minimize.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要最小化的目标函数。
- en: '**args**tuple, optional'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**args**tuple, optional'
- en: Additional arguments (if present), passed to func.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果存在其他参数，则传递给 func。
- en: '**brack**tuple, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**brack**tuple, optional'
- en: Either a triple `(xa, xb, xc)` where `xa < xb < xc` and `func(xb) < func(xa)
    and  func(xb) < func(xc)`, or a pair (xa, xb) to be used as initial points for
    a downhill bracket search (see [`scipy.optimize.bracket`](scipy.optimize.bracket.html#scipy.optimize.bracket
    "scipy.optimize.bracket")). The minimizer `x` will not necessarily satisfy `xa
    <= x <= xb`.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要么是一个三元组 `(xa, xb, xc)`，其中 `xa < xb < xc` 且 `func(xb) < func(xa)` 且 `func(xb)
    < func(xc)`，要么是一对 (xa, xb)，用作向下搜索初始点的起始点（参见 [`scipy.optimize.bracket`](scipy.optimize.bracket.html#scipy.optimize.bracket
    "scipy.optimize.bracket")）。最小化器 `x` 不一定满足 `xa <= x <= xb`。
- en: '**tol**float, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**tol**float, optional'
- en: x tolerance stop criterion
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: x 容差停止准则
- en: '**full_output**bool, optional'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**full_output**bool, optional'
- en: If True, return optional outputs.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为 True，则返回可选输出。
- en: '**maxiter**int'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**maxiter**int'
- en: Maximum number of iterations to perform.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行的最大迭代次数。
- en: 'Returns:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**xmin**ndarray'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**xmin**ndarray'
- en: Optimum point.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 最优点。
- en: '**fval**float'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**fval**float'
- en: (Optional output) Optimum function value.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: （可选输出）最优函数值。
- en: '**funcalls**int'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**funcalls**int'
- en: (Optional output) Number of objective function evaluations made.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: （可选输出）执行的目标函数评估次数。
- en: See also
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`minimize_scalar`](scipy.optimize.minimize_scalar.html#scipy.optimize.minimize_scalar
    "scipy.optimize.minimize_scalar")'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[`minimize_scalar`](scipy.optimize.minimize_scalar.html#scipy.optimize.minimize_scalar
    "scipy.optimize.minimize_scalar")'
- en: Interface to minimization algorithms for scalar univariate functions. See the
    ‘Golden’ *method* in particular.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 标量单变量函数最小化算法的接口。特别是参见“Golden” *方法*。
- en: Notes
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: Uses analog of bisection method to decrease the bracketed interval.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 使用二分法的类似方法来缩小括号区间。
- en: Examples
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: We illustrate the behaviour of the function when *brack* is of size 2 and 3,
    respectively. In the case where *brack* is of the form (xa,xb), we can see for
    the given values, the output need not necessarily lie in the range `(xa, xb)`.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们演示了当 *brack* 的大小分别为 2 和 3 时函数的行为。在 *brack* 为 (xa, xb) 形式的情况下，我们可以看到对于给定的值，输出不一定在
    `(xa, xb)` 范围内。
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
