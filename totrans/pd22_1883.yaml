- en: Internals
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 内部情况
- en: 原文：[https://pandas.pydata.org/docs/development/internals.html](https://pandas.pydata.org/docs/development/internals.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/development/internals.html](https://pandas.pydata.org/docs/development/internals.html)
- en: This section will provide a look into some of pandas internals. It’s primarily
    intended for developers of pandas itself.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将介绍一些 pandas 内部情况。 主要面向 pandas 本身的开发者。
- en: Indexing
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 索引
- en: 'In pandas there are a few objects implemented which can serve as valid containers
    for the axis labels:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在 pandas 中，有几个实现的对象可以作为轴标签的有效容器：
- en: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index"):
    the generic “ordered set” object, an ndarray of object dtype assuming nothing
    about its contents. The labels must be hashable (and likely immutable) and unique.
    Populates a dict of label to location in Cython to do `O(1)` lookups.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")：通用的“有序集”对象，一个对象dtype的ndarray，假设其内容为空。
    标签必须是可散列的（并且可能是不可变的）和唯一的。 填充一个字典，标签到位置在Cython中执行`O(1)`查找。'
- en: '[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex"):
    the standard hierarchical index object'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")：标准的分层索引对象'
- en: '[`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"): An Index object with [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") boxed elements (impl are the int64 values)'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex")：带有[`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp")包装元素的索引对象（impl 是 int64 值）'
- en: '[`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex"): An Index object with [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") boxed elements (impl are the in64 values)'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex")：一个带有[`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta")包装元素的索引对象（impl 是 int64 值）'
- en: '[`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex"): An Index object with Period elements'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex")：带有周期元素的索引对象'
- en: 'There are functions that make the creation of a regular index easy:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些函数可以方便地创建常规索引：
- en: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range"): fixed frequency date range generated from a time rule or
    DateOffset. An ndarray of Python datetime objects'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range")：从时间规则或DateOffset生成的固定频率日期范围。 一个由Python datetime对象组成的ndarray'
- en: '[`period_range()`](../reference/api/pandas.period_range.html#pandas.period_range
    "pandas.period_range"): fixed frequency date range generated from a time rule
    or DateOffset. An ndarray of [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") objects, representing timespans'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`period_range()`](../reference/api/pandas.period_range.html#pandas.period_range
    "pandas.period_range")：从时间规则或DateOffset生成的固定频率日期范围。一个由[`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period")对象组成的ndarray，表示时间跨度'
- en: Warning
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Custom [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    subclasses are not supported, custom behavior should be implemented using the
    `ExtensionArray` interface instead.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 不支持自定义[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")子类，应该使用`ExtensionArray`接口来实现自定义行为。
- en: MultiIndex
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 多重索引
- en: 'Internally, the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") consists of a few things: the **levels**, the integer **codes**,
    and the level **names**:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在内部，[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")由几个部分组成：**级别**，整数**代码**和级别**名称**：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You can probably guess that the codes determine which unique element is identified
    with that location at each layer of the index. It’s important to note that sortedness
    is determined **solely** from the integer codes and does not check (or care) whether
    the levels themselves are sorted. Fortunately, the constructors [`from_tuples()`](../reference/api/pandas.MultiIndex.from_tuples.html#pandas.MultiIndex.from_tuples
    "pandas.MultiIndex.from_tuples") and [`from_arrays()`](../reference/api/pandas.MultiIndex.from_arrays.html#pandas.MultiIndex.from_arrays
    "pandas.MultiIndex.from_arrays") ensure that this is true, but if you compute
    the levels and codes yourself, please be careful.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会猜到，这些代码确定了在索引的每一层中用于标识该位置的唯一元素。值得注意的是，排序性**仅仅**由整数代码确定，并且不会检查（或关心）级别本身是否已排序。幸运的是，构造函数[`from_tuples()`](../reference/api/pandas.MultiIndex.from_tuples.html#pandas.MultiIndex.from_tuples
    "pandas.MultiIndex.from_tuples")和[`from_arrays()`](../reference/api/pandas.MultiIndex.from_arrays.html#pandas.MultiIndex.from_arrays
    "pandas.MultiIndex.from_arrays")确保了这一点，但如果您自己计算级别和代码，请务必小心。
- en: Values
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 值
- en: 'pandas extends NumPy’s type system with custom types, like [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") or datetimes with a timezone, so we have multiple notions
    of “values”. For 1-D containers (`Index` classes and `Series`) we have the following
    convention:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 使用自定义类型扩展了 NumPy 的类型系统，例如 [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") 或带有时区的日期时间，因此我们有多个“值”的概念。对于 1-D 容器（`Index` 类和 `Series`）我们有以下约定：
- en: '`cls._values` refers is the “best possible” array. This could be an `ndarray`
    or `ExtensionArray`.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cls._values` 指的是“最佳可能”的数组。这可能是一个 `ndarray` 或 `ExtensionArray`。'
- en: So, for example, `Series[category]._values` is a `Categorical`.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，例如，`Series[category]._values`是一个`Categorical`。
- en: '## Subclassing pandas data structures'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '## 子类化 pandas 数据结构'
- en: This section has been moved to [Subclassing pandas data structures](extending.html#extending-subclassing-pandas).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 此部分已移至 [子类化 pandas 数据结构](extending.html#extending-subclassing-pandas)。
- en: Indexing
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 索引
- en: 'In pandas there are a few objects implemented which can serve as valid containers
    for the axis labels:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在 pandas 中，已实现了一些对象，它们可以作为轴标签的有效容器：
- en: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index"):
    the generic “ordered set” object, an ndarray of object dtype assuming nothing
    about its contents. The labels must be hashable (and likely immutable) and unique.
    Populates a dict of label to location in Cython to do `O(1)` lookups.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")：通用的“有序集合”对象，一个对象数据类型的
    ndarray，不假设其内容。标签必须是可散列的（并且可能是不可变的）和唯一的。填充一个字典，将标签映射到 Cython 中的位置，以进行`O(1)`的查找。'
- en: '[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex"):
    the standard hierarchical index object'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")：标准的分层索引对象'
- en: '[`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"): An Index object with [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") boxed elements (impl are the int64 values)'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex")：一个带有 [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") 的索引对象（实现是 int64 值）'
- en: '[`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex"): An Index object with [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") boxed elements (impl are the in64 values)'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex")：一个带有 [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") 的索引对象（实现是 int64 值）'
- en: '[`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex"): An Index object with Period elements'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex")：一个带有周期元素的索引对象'
- en: 'There are functions that make the creation of a regular index easy:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些函数可以轻松创建常规索引：
- en: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range"): fixed frequency date range generated from a time rule or
    DateOffset. An ndarray of Python datetime objects'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range")：从时间规则或 DateOffset 生成的固定频率日期范围。一个 Python datetime 对象的 ndarray'
- en: '[`period_range()`](../reference/api/pandas.period_range.html#pandas.period_range
    "pandas.period_range"): fixed frequency date range generated from a time rule
    or DateOffset. An ndarray of [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") objects, representing timespans'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`period_range()`](../reference/api/pandas.period_range.html#pandas.period_range
    "pandas.period_range")：从时间规则或日期偏移量生成的固定频率日期范围。一个[`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period")对象的ndarray，表示时间段'
- en: Warning
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Custom [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    subclasses are not supported, custom behavior should be implemented using the
    `ExtensionArray` interface instead.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 不支持自定义[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")子类，应该使用`ExtensionArray`接口实现自定义行为。
- en: MultiIndex
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 多重索引
- en: 'Internally, the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") consists of a few things: the **levels**, the integer **codes**,
    and the level **names**:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 内部，[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")由几个部分组成：**级别**、整数**代码**和级别**名称**：
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You can probably guess that the codes determine which unique element is identified
    with that location at each layer of the index. It’s important to note that sortedness
    is determined **solely** from the integer codes and does not check (or care) whether
    the levels themselves are sorted. Fortunately, the constructors [`from_tuples()`](../reference/api/pandas.MultiIndex.from_tuples.html#pandas.MultiIndex.from_tuples
    "pandas.MultiIndex.from_tuples") and [`from_arrays()`](../reference/api/pandas.MultiIndex.from_arrays.html#pandas.MultiIndex.from_arrays
    "pandas.MultiIndex.from_arrays") ensure that this is true, but if you compute
    the levels and codes yourself, please be careful.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能猜到，代码确定了索引每一层中与该位置相关联的唯一元素。需要注意的是，排序性**完全**由整数代码确定，并不检查（或关心）层级本身是否已排序。幸运的是，构造函数[`from_tuples()`](../reference/api/pandas.MultiIndex.from_tuples.html#pandas.MultiIndex.from_tuples
    "pandas.MultiIndex.from_tuples")和[`from_arrays()`](../reference/api/pandas.MultiIndex.from_arrays.html#pandas.MultiIndex.from_arrays
    "pandas.MultiIndex.from_arrays")确保了这一点，但如果你自己计算层级和代码，请务必小心。
- en: Values
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 值
- en: 'pandas extends NumPy’s type system with custom types, like [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") or datetimes with a timezone, so we have multiple notions
    of “values”. For 1-D containers (`Index` classes and `Series`) we have the following
    convention:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: pandas通过自定义类型（例如[`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical")或带有时区的日期时间）扩展了NumPy的类型系统，因此我们有多种“值”的概念。对于一维容器（`Index`类和`Series`），我们有以下约定：
- en: '`cls._values` refers is the “best possible” array. This could be an `ndarray`
    or `ExtensionArray`.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cls._values`是“最佳可能”数组。这可以是一个`ndarray`或`ExtensionArray`。'
- en: So, for example, `Series[category]._values` is a `Categorical`.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，例如，`Series[category]._values`是一个`Categorical`。
- en: MultiIndex
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 多重索引
- en: 'Internally, the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") consists of a few things: the **levels**, the integer **codes**,
    and the level **names**:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 内部，[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")由几个部分组成：**级别**、整数**代码**和级别**名称**：
- en: '[PRE2]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You can probably guess that the codes determine which unique element is identified
    with that location at each layer of the index. It’s important to note that sortedness
    is determined **solely** from the integer codes and does not check (or care) whether
    the levels themselves are sorted. Fortunately, the constructors [`from_tuples()`](../reference/api/pandas.MultiIndex.from_tuples.html#pandas.MultiIndex.from_tuples
    "pandas.MultiIndex.from_tuples") and [`from_arrays()`](../reference/api/pandas.MultiIndex.from_arrays.html#pandas.MultiIndex.from_arrays
    "pandas.MultiIndex.from_arrays") ensure that this is true, but if you compute
    the levels and codes yourself, please be careful.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能猜到，代码确定了索引每一层中与该位置相关联的唯一元素。需要注意的是，排序性**完全**由整数代码确定，并不检查（或关心）层级本身是否已排序。幸运的是，构造函数[`from_tuples()`](../reference/api/pandas.MultiIndex.from_tuples.html#pandas.MultiIndex.from_tuples
    "pandas.MultiIndex.from_tuples")和[`from_arrays()`](../reference/api/pandas.MultiIndex.from_arrays.html#pandas.MultiIndex.from_arrays
    "pandas.MultiIndex.from_arrays")确保了这一点，但如果你自己计算层级和代码，请务必小心。
- en: Values
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 值
- en: 'pandas extends NumPy’s type system with custom types, like [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") or datetimes with a timezone, so we have multiple notions
    of “values”. For 1-D containers (`Index` classes and `Series`) we have the following
    convention:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: pandas通过自定义类型（如[`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical")或带有时区的日期时间）扩展了NumPy的类型系统，因此我们有多种“值”的概念。对于一维容器（`Index`类和`Series`），我们有以下约定：
- en: '`cls._values` refers is the “best possible” array. This could be an `ndarray`
    or `ExtensionArray`.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cls._values` 是“最佳可能”的数组。这可以是`ndarray`或`ExtensionArray`。'
- en: So, for example, `Series[category]._values` is a `Categorical`.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，例如，`Series[category]._values` 是一个`Categorical`。
- en: '## Subclassing pandas data structures'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '## 继承 pandas 数据结构'
- en: This section has been moved to [Subclassing pandas data structures](extending.html#extending-subclassing-pandas).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 本节已移至[继承 pandas 数据结构](extending.html#extending-subclassing-pandas)。
