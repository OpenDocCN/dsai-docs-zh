- en: Index objects
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 索引对象
- en: 原文：[https://pandas.pydata.org/docs/reference/indexing.html](https://pandas.pydata.org/docs/reference/indexing.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/indexing.html](https://pandas.pydata.org/docs/reference/indexing.html)
- en: '## Index'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '## 索引'
- en: '**Many of these methods or variants thereof are available on the objects that
    contain an index (Series/DataFrame) and those should most likely be used before
    calling these methods directly.**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**这些方法或其变体中的许多方法可用于包含索引的对象（Series/DataFrame），在直接调用这些方法之前，应该首选使用这些对象。**'
- en: '| [`Index`](api/pandas.Index.html#pandas.Index "pandas.Index")([data, dtype, copy, name, tupleize_cols])
    | Immutable sequence used for indexing and alignment. |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| [`Index`](api/pandas.Index.html#pandas.Index "pandas.Index")([data, dtype, copy, name, tupleize_cols])
    | 用于索引和对齐的不可变序列。 |'
- en: Properties
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`Index.values`](api/pandas.Index.values.html#pandas.Index.values "pandas.Index.values")
    | Return an array representing the data in the Index. |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.values`](api/pandas.Index.values.html#pandas.Index.values "pandas.Index.values")
    | 返回表示索引中数据的数组。 |'
- en: '| [`Index.is_monotonic_increasing`](api/pandas.Index.is_monotonic_increasing.html#pandas.Index.is_monotonic_increasing
    "pandas.Index.is_monotonic_increasing") | Return a boolean if the values are equal
    or increasing. |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.is_monotonic_increasing`](api/pandas.Index.is_monotonic_increasing.html#pandas.Index.is_monotonic_increasing
    "pandas.Index.is_monotonic_increasing") | 如果值相等或递增，则返回布尔值。 |'
- en: '| [`Index.is_monotonic_decreasing`](api/pandas.Index.is_monotonic_decreasing.html#pandas.Index.is_monotonic_decreasing
    "pandas.Index.is_monotonic_decreasing") | Return a boolean if the values are equal
    or decreasing. |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.is_monotonic_decreasing`](api/pandas.Index.is_monotonic_decreasing.html#pandas.Index.is_monotonic_decreasing
    "pandas.Index.is_monotonic_decreasing") | 如果值相等或递减，则返回布尔值。 |'
- en: '| [`Index.is_unique`](api/pandas.Index.is_unique.html#pandas.Index.is_unique
    "pandas.Index.is_unique") | Return if the index has unique values. |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.is_unique`](api/pandas.Index.is_unique.html#pandas.Index.is_unique
    "pandas.Index.is_unique") | 返回索引是否具有唯一值。 |'
- en: '| [`Index.has_duplicates`](api/pandas.Index.has_duplicates.html#pandas.Index.has_duplicates
    "pandas.Index.has_duplicates") | Check if the Index has duplicate values. |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.has_duplicates`](api/pandas.Index.has_duplicates.html#pandas.Index.has_duplicates
    "pandas.Index.has_duplicates") | 检查索引是否具有重复值。 |'
- en: '| [`Index.hasnans`](api/pandas.Index.hasnans.html#pandas.Index.hasnans "pandas.Index.hasnans")
    | Return True if there are any NaNs. |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.hasnans`](api/pandas.Index.hasnans.html#pandas.Index.hasnans "pandas.Index.hasnans")
    | 如果存在任何 NaN，则返回 True。 |'
- en: '| [`Index.dtype`](api/pandas.Index.dtype.html#pandas.Index.dtype "pandas.Index.dtype")
    | Return the dtype object of the underlying data. |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.dtype`](api/pandas.Index.dtype.html#pandas.Index.dtype "pandas.Index.dtype")
    | 返回底层数据的 dtype 对象。 |'
- en: '| [`Index.inferred_type`](api/pandas.Index.inferred_type.html#pandas.Index.inferred_type
    "pandas.Index.inferred_type") | Return a string of the type inferred from the
    values. |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.inferred_type`](api/pandas.Index.inferred_type.html#pandas.Index.inferred_type
    "pandas.Index.inferred_type") | 返回从值推断的类型的字符串。 |'
- en: '| [`Index.shape`](api/pandas.Index.shape.html#pandas.Index.shape "pandas.Index.shape")
    | Return a tuple of the shape of the underlying data. |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.shape`](api/pandas.Index.shape.html#pandas.Index.shape "pandas.Index.shape")
    | 返回底层数据的形状的元组。 |'
- en: '| [`Index.name`](api/pandas.Index.name.html#pandas.Index.name "pandas.Index.name")
    | Return Index or MultiIndex name. |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.name`](api/pandas.Index.name.html#pandas.Index.name "pandas.Index.name")
    | 返回索引或多重索引的名称。 |'
- en: '| [`Index.names`](api/pandas.Index.names.html#pandas.Index.names "pandas.Index.names")
    |  |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.names`](api/pandas.Index.names.html#pandas.Index.names "pandas.Index.names")
    |  |'
- en: '| [`Index.nbytes`](api/pandas.Index.nbytes.html#pandas.Index.nbytes "pandas.Index.nbytes")
    | Return the number of bytes in the underlying data. |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.nbytes`](api/pandas.Index.nbytes.html#pandas.Index.nbytes "pandas.Index.nbytes")
    | 返回底层数据中的字节数。 |'
- en: '| [`Index.ndim`](api/pandas.Index.ndim.html#pandas.Index.ndim "pandas.Index.ndim")
    | Number of dimensions of the underlying data, by definition 1. |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.ndim`](api/pandas.Index.ndim.html#pandas.Index.ndim "pandas.Index.ndim")
    | 底层数据的维数，根据定义为 1。 |'
- en: '| [`Index.size`](api/pandas.Index.size.html#pandas.Index.size "pandas.Index.size")
    | Return the number of elements in the underlying data. |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.size`](api/pandas.Index.size.html#pandas.Index.size "pandas.Index.size")
    | 返回底层数据中的元素数。 |'
- en: '| [`Index.empty`](api/pandas.Index.empty.html#pandas.Index.empty "pandas.Index.empty")
    |  |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.empty`](api/pandas.Index.empty.html#pandas.Index.empty "pandas.Index.empty")
    |  |'
- en: '| [`Index.T`](api/pandas.Index.T.html#pandas.Index.T "pandas.Index.T") | Return
    the transpose, which is by definition self. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.T`](api/pandas.Index.T.html#pandas.Index.T "pandas.Index.T") | 返回转置，根据定义为自身。
    |'
- en: '| [`Index.memory_usage`](api/pandas.Index.memory_usage.html#pandas.Index.memory_usage
    "pandas.Index.memory_usage")([deep]) | Memory usage of the values. |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.memory_usage`](api/pandas.Index.memory_usage.html#pandas.Index.memory_usage
    "pandas.Index.memory_usage")([deep]) | 值的内存使用量。 |'
- en: Modifying and computations
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 修改和计算
- en: '| [`Index.all`](api/pandas.Index.all.html#pandas.Index.all "pandas.Index.all")(*args, **kwargs)
    | Return whether all elements are Truthy. |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.all`](api/pandas.Index.all.html#pandas.Index.all "pandas.Index.all")(*args, **kwargs)
    | 返回所有元素是否为真值。 |'
- en: '| [`Index.any`](api/pandas.Index.any.html#pandas.Index.any "pandas.Index.any")(*args, **kwargs)
    | Return whether any element is Truthy. |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.any`](api/pandas.Index.any.html#pandas.Index.any "pandas.Index.any")(*args, **kwargs)
    | 返回是否存在任何元素为真值。 |'
- en: '| [`Index.argmin`](api/pandas.Index.argmin.html#pandas.Index.argmin "pandas.Index.argmin")([axis, skipna])
    | Return int position of the smallest value in the Series. |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.argmin`](api/pandas.Index.argmin.html#pandas.Index.argmin "pandas.Index.argmin")([axis, skipna])
    | 返回 Series 中最小值的整数位置。 |'
- en: '| [`Index.argmax`](api/pandas.Index.argmax.html#pandas.Index.argmax "pandas.Index.argmax")([axis, skipna])
    | Return int position of the largest value in the Series. |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.argmax`](api/pandas.Index.argmax.html#pandas.Index.argmax "pandas.Index.argmax")([axis, skipna])
    | 返回 Series 中最大值的整数位置。 |'
- en: '| [`Index.copy`](api/pandas.Index.copy.html#pandas.Index.copy "pandas.Index.copy")([name, deep])
    | Make a copy of this object. |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.copy`](api/pandas.Index.copy.html#pandas.Index.copy "pandas.Index.copy")([name, deep])
    | 复制此对象。 |'
- en: '| [`Index.delete`](api/pandas.Index.delete.html#pandas.Index.delete "pandas.Index.delete")(loc)
    | Make new Index with passed location(-s) deleted. |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.delete`](api/pandas.Index.delete.html#pandas.Index.delete "pandas.Index.delete")(loc)
    | 使用传入的位置删除索引中的项目。 |'
- en: '| [`Index.drop`](api/pandas.Index.drop.html#pandas.Index.drop "pandas.Index.drop")(labels[, errors])
    | Make new Index with passed list of labels deleted. |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.drop`](api/pandas.Index.drop.html#pandas.Index.drop "pandas.Index.drop")(labels[, errors])
    | 使用传入的标签列表创建新的索引，删除指定标签。 |'
- en: '| [`Index.drop_duplicates`](api/pandas.Index.drop_duplicates.html#pandas.Index.drop_duplicates
    "pandas.Index.drop_duplicates")(*[, keep]) | Return Index with duplicate values
    removed. |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.drop_duplicates`](api/pandas.Index.drop_duplicates.html#pandas.Index.drop_duplicates
    "pandas.Index.drop_duplicates")(*[, keep]) | 返回删除重复值后的索引。 |'
- en: '| [`Index.duplicated`](api/pandas.Index.duplicated.html#pandas.Index.duplicated
    "pandas.Index.duplicated")([keep]) | Indicate duplicate index values. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.duplicated`](api/pandas.Index.duplicated.html#pandas.Index.duplicated
    "pandas.Index.duplicated")([keep]) | 指示重复的索引值。 |'
- en: '| [`Index.equals`](api/pandas.Index.equals.html#pandas.Index.equals "pandas.Index.equals")(other)
    | Determine if two Index object are equal. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.equals`](api/pandas.Index.equals.html#pandas.Index.equals "pandas.Index.equals")(other)
    | 判断两个索引对象是否相等。 |'
- en: '| [`Index.factorize`](api/pandas.Index.factorize.html#pandas.Index.factorize
    "pandas.Index.factorize")([sort, use_na_sentinel]) | Encode the object as an enumerated
    type or categorical variable. |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.factorize`](api/pandas.Index.factorize.html#pandas.Index.factorize
    "pandas.Index.factorize")([sort, use_na_sentinel]) | 将对象编码为枚举类型或分类变��。 |'
- en: '| [`Index.identical`](api/pandas.Index.identical.html#pandas.Index.identical
    "pandas.Index.identical")(other) | Similar to equals, but checks that object attributes
    and types are also equal. |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.identical`](api/pandas.Index.identical.html#pandas.Index.identical
    "pandas.Index.identical")(other) | 类似于 equals，但还检查对象属性和类型是否相等。 |'
- en: '| [`Index.insert`](api/pandas.Index.insert.html#pandas.Index.insert "pandas.Index.insert")(loc, item)
    | Make new Index inserting new item at location. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.insert`](api/pandas.Index.insert.html#pandas.Index.insert "pandas.Index.insert")(loc, item)
    | 在指定位置插入新项目，创建新的索引。 |'
- en: '| [`Index.is_`](api/pandas.Index.is_.html#pandas.Index.is_ "pandas.Index.is_")(other)
    | More flexible, faster check like `is` but that works through views. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.is_`](api/pandas.Index.is_.html#pandas.Index.is_ "pandas.Index.is_")(other)
    | 更灵活、更快速的检查，类似于 `is`，但可以通过视图操作。 |'
- en: '| [`Index.is_boolean`](api/pandas.Index.is_boolean.html#pandas.Index.is_boolean
    "pandas.Index.is_boolean")() | (DEPRECATED) Check if the Index only consists of
    booleans. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.is_boolean`](api/pandas.Index.is_boolean.html#pandas.Index.is_boolean
    "pandas.Index.is_boolean")() | (已弃用) 检查索引是否仅包含布尔值。 |'
- en: '| [`Index.is_categorical`](api/pandas.Index.is_categorical.html#pandas.Index.is_categorical
    "pandas.Index.is_categorical")() | (DEPRECATED) Check if the Index holds categorical
    data. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.is_categorical`](api/pandas.Index.is_categorical.html#pandas.Index.is_categorical
    "pandas.Index.is_categorical")() | (已弃用) 检查索引是否包含分类数据。 |'
- en: '| [`Index.is_floating`](api/pandas.Index.is_floating.html#pandas.Index.is_floating
    "pandas.Index.is_floating")() | (DEPRECATED) Check if the Index is a floating
    type. |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.is_floating`](api/pandas.Index.is_floating.html#pandas.Index.is_floating
    "pandas.Index.is_floating")() | (已弃用) 检查索引是否为浮点类型。 |'
- en: '| [`Index.is_integer`](api/pandas.Index.is_integer.html#pandas.Index.is_integer
    "pandas.Index.is_integer")() | (DEPRECATED) Check if the Index only consists of
    integers. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.is_integer`](api/pandas.Index.is_integer.html#pandas.Index.is_integer
    "pandas.Index.is_integer")() | (已弃用) 检查索引是否仅包含整数。 |'
- en: '| [`Index.is_interval`](api/pandas.Index.is_interval.html#pandas.Index.is_interval
    "pandas.Index.is_interval")() | (DEPRECATED) Check if the Index holds Interval
    objects. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.is_interval`](api/pandas.Index.is_interval.html#pandas.Index.is_interval
    "pandas.Index.is_interval")() | (已弃用) 检查索引是否包含区间对象。 |'
- en: '| [`Index.is_numeric`](api/pandas.Index.is_numeric.html#pandas.Index.is_numeric
    "pandas.Index.is_numeric")() | (DEPRECATED) Check if the Index only consists of
    numeric data. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.is_numeric`](api/pandas.Index.is_numeric.html#pandas.Index.is_numeric
    "pandas.Index.is_numeric")() | (已弃用) 检查索引是否仅包含数值数据。 |'
- en: '| [`Index.is_object`](api/pandas.Index.is_object.html#pandas.Index.is_object
    "pandas.Index.is_object")() | (DEPRECATED) Check if the Index is of the object
    dtype. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.is_object`](api/pandas.Index.is_object.html#pandas.Index.is_object
    "pandas.Index.is_object")() | (已弃用) 检查索引是否为对象数据类型。 |'
- en: '| [`Index.min`](api/pandas.Index.min.html#pandas.Index.min "pandas.Index.min")([axis, skipna])
    | Return the minimum value of the Index. |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.min`](api/pandas.Index.min.html#pandas.Index.min "pandas.Index.min")([axis, skipna])
    | 返回索引的最小值。 |'
- en: '| [`Index.max`](api/pandas.Index.max.html#pandas.Index.max "pandas.Index.max")([axis, skipna])
    | Return the maximum value of the Index. |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.max`](api/pandas.Index.max.html#pandas.Index.max "pandas.Index.max")([axis, skipna])
    | 返回索引的最大值。 |'
- en: '| [`Index.reindex`](api/pandas.Index.reindex.html#pandas.Index.reindex "pandas.Index.reindex")(target[, method, level, ...])
    | Create index with target''s values. |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.reindex`](api/pandas.Index.reindex.html#pandas.Index.reindex "pandas.Index.reindex")(target[, method, level, ...])
    | 使用目标值创建索引。 |'
- en: '| [`Index.rename`](api/pandas.Index.rename.html#pandas.Index.rename "pandas.Index.rename")(name, *[, inplace])
    | Alter Index or MultiIndex name. |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.rename`](api/pandas.Index.rename.html#pandas.Index.rename "pandas.Index.rename")(name, *[, inplace])
    | 更改索引或多级索引的名称。 |'
- en: '| [`Index.repeat`](api/pandas.Index.repeat.html#pandas.Index.repeat "pandas.Index.repeat")(repeats[, axis])
    | Repeat elements of a Index. |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.repeat`](api/pandas.Index.repeat.html#pandas.Index.repeat "pandas.Index.repeat")(repeats[, axis])
    | 重复索引的元素。 |'
- en: '| [`Index.where`](api/pandas.Index.where.html#pandas.Index.where "pandas.Index.where")(cond[, other])
    | Replace values where the condition is False. |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.where`](api/pandas.Index.where.html#pandas.Index.where "pandas.Index.where")(cond[, other])
    | 替换条件为假的值。 |'
- en: '| [`Index.take`](api/pandas.Index.take.html#pandas.Index.take "pandas.Index.take")(indices[, axis, allow_fill, ...])
    | Return a new Index of the values selected by the indices. |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.take`](api/pandas.Index.take.html#pandas.Index.take "pandas.Index.take")(indices[, axis, allow_fill, ...])
    | 返回由索引选定的值的新索引。 |'
- en: '| [`Index.putmask`](api/pandas.Index.putmask.html#pandas.Index.putmask "pandas.Index.putmask")(mask, value)
    | Return a new Index of the values set with the mask. |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.putmask`](api/pandas.Index.putmask.html#pandas.Index.putmask "pandas.Index.putmask")(mask, value)
    | 返回使用掩码设置的新索引。 |'
- en: '| [`Index.unique`](api/pandas.Index.unique.html#pandas.Index.unique "pandas.Index.unique")([level])
    | Return unique values in the index. |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.unique`](api/pandas.Index.unique.html#pandas.Index.unique "pandas.Index.unique")([level])
    | 返回索引中的唯一值。 |'
- en: '| [`Index.nunique`](api/pandas.Index.nunique.html#pandas.Index.nunique "pandas.Index.nunique")([dropna])
    | Return number of unique elements in the object. |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.nunique`](api/pandas.Index.nunique.html#pandas.Index.nunique "pandas.Index.nunique")([dropna])
    | 返回对象中唯一元素的数量。 |'
- en: '| [`Index.value_counts`](api/pandas.Index.value_counts.html#pandas.Index.value_counts
    "pandas.Index.value_counts")([normalize, sort, ...]) | Return a Series containing
    counts of unique values. |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.value_counts`](api/pandas.Index.value_counts.html#pandas.Index.value_counts
    "pandas.Index.value_counts")([normalize, sort, ...]) | 返回包含唯一值计数的 Series。 |'
- en: Compatibility with MultiIndex
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 与 MultiIndex 兼容性
- en: '| [`Index.set_names`](api/pandas.Index.set_names.html#pandas.Index.set_names
    "pandas.Index.set_names")(names, *[, level, inplace]) | Set Index or MultiIndex
    name. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.set_names`](api/pandas.Index.set_names.html#pandas.Index.set_names
    "pandas.Index.set_names")(names, *[, level, inplace]) | 设置索引或多级索引的名称。 |'
- en: '| [`Index.droplevel`](api/pandas.Index.droplevel.html#pandas.Index.droplevel
    "pandas.Index.droplevel")([level]) | Return index with requested level(s) removed.
    |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.droplevel`](api/pandas.Index.droplevel.html#pandas.Index.droplevel
    "pandas.Index.droplevel")([level]) | 返回删除请求级别的索引。 |'
- en: Missing values
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缺失值
- en: '| [`Index.fillna`](api/pandas.Index.fillna.html#pandas.Index.fillna "pandas.Index.fillna")([value, downcast])
    | Fill NA/NaN values with the specified value. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.fillna`](api/pandas.Index.fillna.html#pandas.Index.fillna "pandas.Index.fillna")([value, downcast])
    | 用指定值填充 NA/NaN 值。 |'
- en: '| [`Index.dropna`](api/pandas.Index.dropna.html#pandas.Index.dropna "pandas.Index.dropna")([how])
    | Return Index without NA/NaN values. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.dropna`](api/pandas.Index.dropna.html#pandas.Index.dropna "pandas.Index.dropna")([how])
    | 返回没有 NA/NaN 值的索引。 |'
- en: '| [`Index.isna`](api/pandas.Index.isna.html#pandas.Index.isna "pandas.Index.isna")()
    | Detect missing values. |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.isna`](api/pandas.Index.isna.html#pandas.Index.isna "pandas.Index.isna")()
    | 检测缺失值。 |'
- en: '| [`Index.notna`](api/pandas.Index.notna.html#pandas.Index.notna "pandas.Index.notna")()
    | Detect existing (non-missing) values. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.notna`](api/pandas.Index.notna.html#pandas.Index.notna "pandas.Index.notna")()
    | 检测存在的（非缺失）值。 |'
- en: Conversion
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 转换
- en: '| [`Index.astype`](api/pandas.Index.astype.html#pandas.Index.astype "pandas.Index.astype")(dtype[, copy])
    | Create an Index with values cast to dtypes. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.astype`](api/pandas.Index.astype.html#pandas.Index.astype "pandas.Index.astype")(dtype[, copy])
    | 创建一个将值转换为指定数据类型的索引。 |'
- en: '| [`Index.item`](api/pandas.Index.item.html#pandas.Index.item "pandas.Index.item")()
    | Return the first element of the underlying data as a Python scalar. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.item`](api/pandas.Index.item.html#pandas.Index.item "pandas.Index.item")()
    | 将底层数据的第一个元素作为 Python 标量返回。 |'
- en: '| [`Index.map`](api/pandas.Index.map.html#pandas.Index.map "pandas.Index.map")(mapper[, na_action])
    | Map values using an input mapping or function. |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.map`](api/pandas.Index.map.html#pandas.Index.map "pandas.Index.map")(mapper[, na_action])
    | 使用输入映射或函数映射值。 |'
- en: '| [`Index.ravel`](api/pandas.Index.ravel.html#pandas.Index.ravel "pandas.Index.ravel")([order])
    | Return a view on self. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.ravel`](api/pandas.Index.ravel.html#pandas.Index.ravel "pandas.Index.ravel")([order])
    | 返回自身的视图。 |'
- en: '| [`Index.to_list`](api/pandas.Index.to_list.html#pandas.Index.to_list "pandas.Index.to_list")()
    | Return a list of the values. |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.to_list`](api/pandas.Index.to_list.html#pandas.Index.to_list "pandas.Index.to_list")()
    | 返回值的列表。 |'
- en: '| [`Index.to_series`](api/pandas.Index.to_series.html#pandas.Index.to_series
    "pandas.Index.to_series")([index, name]) | Create a Series with both index and
    values equal to the index keys. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.to_series`](api/pandas.Index.to_series.html#pandas.Index.to_series
    "pandas.Index.to_series")([index, name]) | 创建一个既包含索引又包含值等于索引键的 Series。 |'
- en: '| [`Index.to_frame`](api/pandas.Index.to_frame.html#pandas.Index.to_frame "pandas.Index.to_frame")([index, name])
    | Create a DataFrame with a column containing the Index. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.to_frame`](api/pandas.Index.to_frame.html#pandas.Index.to_frame "pandas.Index.to_frame")([index, name])
    | 创建一个包含索引的列的 DataFrame。 |'
- en: '| [`Index.view`](api/pandas.Index.view.html#pandas.Index.view "pandas.Index.view")([cls])
    |  |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.view`](api/pandas.Index.view.html#pandas.Index.view "pandas.Index.view")([cls])
    |  |'
- en: Sorting
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 排序
- en: '| [`Index.argsort`](api/pandas.Index.argsort.html#pandas.Index.argsort "pandas.Index.argsort")(*args, **kwargs)
    | Return the integer indices that would sort the index. |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.argsort`](api/pandas.Index.argsort.html#pandas.Index.argsort "pandas.Index.argsort")(*args, **kwargs)
    | 返回将索引排序的整数索引。 |'
- en: '| [`Index.searchsorted`](api/pandas.Index.searchsorted.html#pandas.Index.searchsorted
    "pandas.Index.searchsorted")(value[, side, sorter]) | Find indices where elements
    should be inserted to maintain order. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.searchsorted`](api/pandas.Index.searchsorted.html#pandas.Index.searchsorted
    "pandas.Index.searchsorted")(value[, side, sorter]) | 找到应插入元素以保持顺序的索引位置。 |'
- en: '| [`Index.sort_values`](api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values")(*[, return_indexer, ...]) | Return a sorted copy of
    the index. |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.sort_values`](api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values")(*[, return_indexer, ...]) | 返回索引的排序副本。 |'
- en: Time-specific operations
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 时间特定操作
- en: '| [`Index.shift`](api/pandas.Index.shift.html#pandas.Index.shift "pandas.Index.shift")([periods, freq])
    | Shift index by desired number of time frequency increments. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.shift`](api/pandas.Index.shift.html#pandas.Index.shift "pandas.Index.shift")([periods, freq])
    | 将索引按所需的时间频率增量进行移动。 |'
- en: Combining / joining / set operations
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 合并/连接/集合操作
- en: '| [`Index.append`](api/pandas.Index.append.html#pandas.Index.append "pandas.Index.append")(other)
    | Append a collection of Index options together. |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.append`](api/pandas.Index.append.html#pandas.Index.append "pandas.Index.append")(other)
    | 将一组索引选项连接在一起。 |'
- en: '| [`Index.join`](api/pandas.Index.join.html#pandas.Index.join "pandas.Index.join")(other, *[, how, level, ...])
    | Compute join_index and indexers to conform data structures to the new index.
    |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.join`](api/pandas.Index.join.html#pandas.Index.join "pandas.Index.join")(other, *[, how, level, ...])
    | 计算 join_index 和 indexers 以使数据结构符合新索引。 |'
- en: '| [`Index.intersection`](api/pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection")(other[, sort]) | Form the intersection of two Index
    objects. |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.intersection`](api/pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection")(other[, sort]) | 形成两个索引对象的交集。 |'
- en: '| [`Index.union`](api/pandas.Index.union.html#pandas.Index.union "pandas.Index.union")(other[, sort])
    | Form the union of two Index objects. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.union`](api/pandas.Index.union.html#pandas.Index.union "pandas.Index.union")(other[, sort])
    | 形成两个索引对象的并集。 |'
- en: '| [`Index.difference`](api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference")(other[, sort]) | Return a new Index with elements of
    index not in other. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.difference`](api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference")(other[, sort]) | 返回一个新的索引，其中包含不在其他索引中的元素。 |'
- en: '| [`Index.symmetric_difference`](api/pandas.Index.symmetric_difference.html#pandas.Index.symmetric_difference
    "pandas.Index.symmetric_difference")(other[, ...]) | Compute the symmetric difference
    of two Index objects. |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.symmetric_difference`](api/pandas.Index.symmetric_difference.html#pandas.Index.symmetric_difference
    "pandas.Index.symmetric_difference")(other[, ...]) | 计算两个索引对象的对称差。 |'
- en: Selecting
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择
- en: '| [`Index.asof`](api/pandas.Index.asof.html#pandas.Index.asof "pandas.Index.asof")(label)
    | Return the label from the index, or, if not present, the previous one. |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.asof`](api/pandas.Index.asof.html#pandas.Index.asof "pandas.Index.asof")(label)
    | 返回索引中的标签，如果不存在，则返回前一个标签。 |'
- en: '| [`Index.asof_locs`](api/pandas.Index.asof_locs.html#pandas.Index.asof_locs
    "pandas.Index.asof_locs")(where, mask) | Return the locations (indices) of labels
    in the index. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.asof_locs`](api/pandas.Index.asof_locs.html#pandas.Index.asof_locs
    "pandas.Index.asof_locs")(where, mask) | 返回索引中标签的位置（索引）。 |'
- en: '| [`Index.get_indexer`](api/pandas.Index.get_indexer.html#pandas.Index.get_indexer
    "pandas.Index.get_indexer")(target[, method, limit, ...]) | Compute indexer and
    mask for new index given the current index. |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.get_indexer`](api/pandas.Index.get_indexer.html#pandas.Index.get_indexer
    "pandas.Index.get_indexer")(target[, method, limit, ...]) | 给定当前索引，计算新索引的索引器和掩码。
    |'
- en: '| [`Index.get_indexer_for`](api/pandas.Index.get_indexer_for.html#pandas.Index.get_indexer_for
    "pandas.Index.get_indexer_for")(target) | Guaranteed return of an indexer even
    when non-unique. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.get_indexer_for`](api/pandas.Index.get_indexer_for.html#pandas.Index.get_indexer_for
    "pandas.Index.get_indexer_for")(target) | 即使非唯一，也保证返回索引器。 |'
- en: '| [`Index.get_indexer_non_unique`](api/pandas.Index.get_indexer_non_unique.html#pandas.Index.get_indexer_non_unique
    "pandas.Index.get_indexer_non_unique")(target) | Compute indexer and mask for
    new index given the current index. |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.get_indexer_non_unique`](api/pandas.Index.get_indexer_non_unique.html#pandas.Index.get_indexer_non_unique
    "pandas.Index.get_indexer_non_unique")(target) | 给定当前索引，计算新索引的索引器和掩码。 |'
- en: '| [`Index.get_level_values`](api/pandas.Index.get_level_values.html#pandas.Index.get_level_values
    "pandas.Index.get_level_values")(level) | Return an Index of values for requested
    level. |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.get_level_values`](api/pandas.Index.get_level_values.html#pandas.Index.get_level_values
    "pandas.Index.get_level_values")(level) | 返回请求级别的值索引。 |'
- en: '| [`Index.get_loc`](api/pandas.Index.get_loc.html#pandas.Index.get_loc "pandas.Index.get_loc")(key)
    | Get integer location, slice or boolean mask for requested label. |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.get_loc`](api/pandas.Index.get_loc.html#pandas.Index.get_loc "pandas.Index.get_loc")(key)
    | 获取请求标签的整数位置、切片或布尔掩码。 |'
- en: '| [`Index.get_slice_bound`](api/pandas.Index.get_slice_bound.html#pandas.Index.get_slice_bound
    "pandas.Index.get_slice_bound")(label, side) | Calculate slice bound that corresponds
    to given label. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.get_slice_bound`](api/pandas.Index.get_slice_bound.html#pandas.Index.get_slice_bound
    "pandas.Index.get_slice_bound")(label, side) | 计算与给定标签对应的切片边界。 |'
- en: '| [`Index.isin`](api/pandas.Index.isin.html#pandas.Index.isin "pandas.Index.isin")(values[, level])
    | Return a boolean array where the index values are in values. |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.isin`](api/pandas.Index.isin.html#pandas.Index.isin "pandas.Index.isin")(values[, level])
    | 返回一个布尔数组，其中索引值在给定值中。 |'
- en: '| [`Index.slice_indexer`](api/pandas.Index.slice_indexer.html#pandas.Index.slice_indexer
    "pandas.Index.slice_indexer")([start, end, step]) | Compute the slice indexer
    for input labels and step. |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.slice_indexer`](api/pandas.Index.slice_indexer.html#pandas.Index.slice_indexer
    "pandas.Index.slice_indexer")([start, end, step]) | 计算输入标签和步长的切片索引器。 |'
- en: '| [`Index.slice_locs`](api/pandas.Index.slice_locs.html#pandas.Index.slice_locs
    "pandas.Index.slice_locs")([start, end, step]) | Compute slice locations for input
    labels. |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.slice_locs`](api/pandas.Index.slice_locs.html#pandas.Index.slice_locs
    "pandas.Index.slice_locs")([start, end, step]) | 计算输入标签的切片位置。 |'
- en: '## Numeric Index'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '## 数字索引'
- en: '| [`RangeIndex`](api/pandas.RangeIndex.html#pandas.RangeIndex "pandas.RangeIndex")([start, stop, step, dtype, copy, ...])
    | Immutable Index implementing a monotonic integer range. |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| [`RangeIndex`](api/pandas.RangeIndex.html#pandas.RangeIndex "pandas.RangeIndex")([start, stop, step, dtype, copy, ...])
    | 实现单调整数范围的不可变索引。 |'
- en: '| [`RangeIndex.start`](api/pandas.RangeIndex.start.html#pandas.RangeIndex.start
    "pandas.RangeIndex.start") | The value of the start parameter (`0` if this was
    not supplied). |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| [`RangeIndex.start`](api/pandas.RangeIndex.start.html#pandas.RangeIndex.start
    "pandas.RangeIndex.start") | 起始参数的值（如果未提供则为`0`）。 |'
- en: '| [`RangeIndex.stop`](api/pandas.RangeIndex.stop.html#pandas.RangeIndex.stop
    "pandas.RangeIndex.stop") | The value of the stop parameter. |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| [`RangeIndex.stop`](api/pandas.RangeIndex.stop.html#pandas.RangeIndex.stop
    "pandas.RangeIndex.stop") | 停止参数的值。 |'
- en: '| [`RangeIndex.step`](api/pandas.RangeIndex.step.html#pandas.RangeIndex.step
    "pandas.RangeIndex.step") | The value of the step parameter (`1` if this was not
    supplied). |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| [`RangeIndex.step`](api/pandas.RangeIndex.step.html#pandas.RangeIndex.step
    "pandas.RangeIndex.step") | 步长参数的值（如果未提供则为`1`）。 |'
- en: '| [`RangeIndex.from_range`](api/pandas.RangeIndex.from_range.html#pandas.RangeIndex.from_range
    "pandas.RangeIndex.from_range")(data[, name, dtype]) | Create [`pandas.RangeIndex`](api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") from a `range` object. |  ## CategoricalIndex'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`RangeIndex.from_range`](api/pandas.RangeIndex.from_range.html#pandas.RangeIndex.from_range
    "pandas.RangeIndex.from_range")(data[, name, dtype]) | 从`range`对象创建[`pandas.RangeIndex`](api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex")。 |  ## CategoricalIndex'
- en: '| [`CategoricalIndex`](api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex")([data, categories, ...]) | Index based on an underlying
    [`Categorical`](api/pandas.Categorical.html#pandas.Categorical "pandas.Categorical").
    |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex`](api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex")([data, categories, ...]) | 基于底层[`Categorical`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical")的索引。 |'
- en: Categorical components
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Categorical components
- en: '| [`CategoricalIndex.codes`](api/pandas.CategoricalIndex.codes.html#pandas.CategoricalIndex.codes
    "pandas.CategoricalIndex.codes") | The category codes of this categorical index.
    |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.codes`](api/pandas.CategoricalIndex.codes.html#pandas.CategoricalIndex.codes
    "pandas.CategoricalIndex.codes") | 此类别索引的类别编码。 |'
- en: '| [`CategoricalIndex.categories`](api/pandas.CategoricalIndex.categories.html#pandas.CategoricalIndex.categories
    "pandas.CategoricalIndex.categories") | The categories of this categorical. |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.categories`](api/pandas.CategoricalIndex.categories.html#pandas.CategoricalIndex.categories
    "pandas.CategoricalIndex.categories") | 此类别的类别。 |'
- en: '| [`CategoricalIndex.ordered`](api/pandas.CategoricalIndex.ordered.html#pandas.CategoricalIndex.ordered
    "pandas.CategoricalIndex.ordered") | Whether the categories have an ordered relationship.
    |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.ordered`](api/pandas.CategoricalIndex.ordered.html#pandas.CategoricalIndex.ordered
    "pandas.CategoricalIndex.ordered") | 类别是否具有有序关系。 |'
- en: '| [`CategoricalIndex.rename_categories`](api/pandas.CategoricalIndex.rename_categories.html#pandas.CategoricalIndex.rename_categories
    "pandas.CategoricalIndex.rename_categories")(*args, ...) | Rename categories.
    |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.rename_categories`](api/pandas.CategoricalIndex.rename_categories.html#pandas.CategoricalIndex.rename_categories
    "pandas.CategoricalIndex.rename_categories")(*args, ...) | 重命名类别。 |'
- en: '| [`CategoricalIndex.reorder_categories`](api/pandas.CategoricalIndex.reorder_categories.html#pandas.CategoricalIndex.reorder_categories
    "pandas.CategoricalIndex.reorder_categories")(*args, ...) | Reorder categories
    as specified in new_categories. |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.reorder_categories`](api/pandas.CategoricalIndex.reorder_categories.html#pandas.CategoricalIndex.reorder_categories
    "pandas.CategoricalIndex.reorder_categories")(*args, ...) | 按照新类别中指定的顺序重新排序类别。
    |'
- en: '| [`CategoricalIndex.add_categories`](api/pandas.CategoricalIndex.add_categories.html#pandas.CategoricalIndex.add_categories
    "pandas.CategoricalIndex.add_categories")(*args, **kwargs) | Add new categories.
    |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.add_categories`](api/pandas.CategoricalIndex.add_categories.html#pandas.CategoricalIndex.add_categories
    "pandas.CategoricalIndex.add_categories")(*args, **kwargs) | 添加新的类别。 |'
- en: '| [`CategoricalIndex.remove_categories`](api/pandas.CategoricalIndex.remove_categories.html#pandas.CategoricalIndex.remove_categories
    "pandas.CategoricalIndex.remove_categories")(*args, ...) | Remove the specified
    categories. |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.remove_categories`](api/pandas.CategoricalIndex.remove_categories.html#pandas.CategoricalIndex.remove_categories
    "pandas.CategoricalIndex.remove_categories")(*args, ...) | 删除指定的类别。 |'
- en: '| [`CategoricalIndex.remove_unused_categories`](api/pandas.CategoricalIndex.remove_unused_categories.html#pandas.CategoricalIndex.remove_unused_categories
    "pandas.CategoricalIndex.remove_unused_categories")(...) | Remove categories which
    are not used. |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.remove_unused_categories`](api/pandas.CategoricalIndex.remove_unused_categories.html#pandas.CategoricalIndex.remove_unused_categories
    "pandas.CategoricalIndex.remove_unused_categories")(...) | 删除未使用的类别。 |'
- en: '| [`CategoricalIndex.set_categories`](api/pandas.CategoricalIndex.set_categories.html#pandas.CategoricalIndex.set_categories
    "pandas.CategoricalIndex.set_categories")(*args, **kwargs) | Set the categories
    to the specified new categories. |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.set_categories`](api/pandas.CategoricalIndex.set_categories.html#pandas.CategoricalIndex.set_categories
    "pandas.CategoricalIndex.set_categories")(*args, **kwargs) | 将类别设置为指定的新类别。 |'
- en: '| [`CategoricalIndex.as_ordered`](api/pandas.CategoricalIndex.as_ordered.html#pandas.CategoricalIndex.as_ordered
    "pandas.CategoricalIndex.as_ordered")(*args, **kwargs) | Set the Categorical to
    be ordered. |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.as_ordered`](api/pandas.CategoricalIndex.as_ordered.html#pandas.CategoricalIndex.as_ordered
    "pandas.CategoricalIndex.as_ordered")(*args, **kwargs) | 将分类设置为有序。 |'
- en: '| [`CategoricalIndex.as_unordered`](api/pandas.CategoricalIndex.as_unordered.html#pandas.CategoricalIndex.as_unordered
    "pandas.CategoricalIndex.as_unordered")(*args, **kwargs) | Set the Categorical
    to be unordered. |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.as_unordered`](api/pandas.CategoricalIndex.as_unordered.html#pandas.CategoricalIndex.as_unordered
    "pandas.CategoricalIndex.as_unordered")(*args, **kwargs) | 将分类设置为无序。 |'
- en: Modifying and computations
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 修改和计算
- en: '| [`CategoricalIndex.map`](api/pandas.CategoricalIndex.map.html#pandas.CategoricalIndex.map
    "pandas.CategoricalIndex.map")(mapper[, na_action]) | Map values using input an
    input mapping or function. |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.map`](api/pandas.CategoricalIndex.map.html#pandas.CategoricalIndex.map
    "pandas.CategoricalIndex.map")(mapper[, na_action]) | 使用输入的映射或函数映射值。 |'
- en: '| [`CategoricalIndex.equals`](api/pandas.CategoricalIndex.equals.html#pandas.CategoricalIndex.equals
    "pandas.CategoricalIndex.equals")(other) | Determine if two CategoricalIndex objects
    contain the same elements. |  ## IntervalIndex'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`CategoricalIndex.equals`](api/pandas.CategoricalIndex.equals.html#pandas.CategoricalIndex.equals
    "pandas.CategoricalIndex.equals")(other) | 确定两个 CategoricalIndex 对象是否包含相同的元素。
    |  ## IntervalIndex'
- en: '| [`IntervalIndex`](api/pandas.IntervalIndex.html#pandas.IntervalIndex "pandas.IntervalIndex")(data[, closed, dtype, copy, ...])
    | Immutable index of intervals that are closed on the same side. |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex`](api/pandas.IntervalIndex.html#pandas.IntervalIndex "pandas.IntervalIndex")(data[, closed, dtype, copy, ...])
    | 不可变索引，包含在同一侧上关闭的区间。 |'
- en: IntervalIndex components
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 区间索引组件
- en: '| [`IntervalIndex.from_arrays`](api/pandas.IntervalIndex.from_arrays.html#pandas.IntervalIndex.from_arrays
    "pandas.IntervalIndex.from_arrays")(left, right[, ...]) | Construct from two arrays
    defining the left and right bounds. |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.from_arrays`](api/pandas.IntervalIndex.from_arrays.html#pandas.IntervalIndex.from_arrays
    "pandas.IntervalIndex.from_arrays")(left, right[, ...]) | 从定义左右边界的两个数组构造。 |'
- en: '| [`IntervalIndex.from_tuples`](api/pandas.IntervalIndex.from_tuples.html#pandas.IntervalIndex.from_tuples
    "pandas.IntervalIndex.from_tuples")(data[, closed, ...]) | Construct an IntervalIndex
    from an array-like of tuples. |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.from_tuples`](api/pandas.IntervalIndex.from_tuples.html#pandas.IntervalIndex.from_tuples
    "pandas.IntervalIndex.from_tuples")(data[, closed, ...]) | 从类似元组的数组构造一个区间索引。 |'
- en: '| [`IntervalIndex.from_breaks`](api/pandas.IntervalIndex.from_breaks.html#pandas.IntervalIndex.from_breaks
    "pandas.IntervalIndex.from_breaks")(breaks[, closed, ...]) | Construct an IntervalIndex
    from an array of splits. |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.from_breaks`](api/pandas.IntervalIndex.from_breaks.html#pandas.IntervalIndex.from_breaks
    "pandas.IntervalIndex.from_breaks")(breaks[, closed, ...]) | 从数组拆分构造一个区间索引。 |'
- en: '| [`IntervalIndex.left`](api/pandas.IntervalIndex.left.html#pandas.IntervalIndex.left
    "pandas.IntervalIndex.left") |  |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.left`](api/pandas.IntervalIndex.left.html#pandas.IntervalIndex.left
    "pandas.IntervalIndex.left") |  |'
- en: '| [`IntervalIndex.right`](api/pandas.IntervalIndex.right.html#pandas.IntervalIndex.right
    "pandas.IntervalIndex.right") |  |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.right`](api/pandas.IntervalIndex.right.html#pandas.IntervalIndex.right
    "pandas.IntervalIndex.right") |  |'
- en: '| [`IntervalIndex.mid`](api/pandas.IntervalIndex.mid.html#pandas.IntervalIndex.mid
    "pandas.IntervalIndex.mid") |  |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.mid`](api/pandas.IntervalIndex.mid.html#pandas.IntervalIndex.mid
    "pandas.IntervalIndex.mid") |  |'
- en: '| [`IntervalIndex.closed`](api/pandas.IntervalIndex.closed.html#pandas.IntervalIndex.closed
    "pandas.IntervalIndex.closed") | String describing the inclusive side the intervals.
    |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.closed`](api/pandas.IntervalIndex.closed.html#pandas.IntervalIndex.closed
    "pandas.IntervalIndex.closed") | 描述区间的包含侧的字符串。 |'
- en: '| [`IntervalIndex.length`](api/pandas.IntervalIndex.length.html#pandas.IntervalIndex.length
    "pandas.IntervalIndex.length") |  |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.length`](api/pandas.IntervalIndex.length.html#pandas.IntervalIndex.length
    "pandas.IntervalIndex.length") |  |'
- en: '| [`IntervalIndex.values`](api/pandas.IntervalIndex.values.html#pandas.IntervalIndex.values
    "pandas.IntervalIndex.values") | Return an array representing the data in the
    Index. |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.values`](api/pandas.IntervalIndex.values.html#pandas.IntervalIndex.values
    "pandas.IntervalIndex.values") | 返回表示索引中数据的数组。 |'
- en: '| [`IntervalIndex.is_empty`](api/pandas.IntervalIndex.is_empty.html#pandas.IntervalIndex.is_empty
    "pandas.IntervalIndex.is_empty") | Indicates if an interval is empty, meaning
    it contains no points. |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.is_empty`](api/pandas.IntervalIndex.is_empty.html#pandas.IntervalIndex.is_empty
    "pandas.IntervalIndex.is_empty") | 表示区间是否为空，即不包含任何点。 |'
- en: '| [`IntervalIndex.is_non_overlapping_monotonic`](api/pandas.IntervalIndex.is_non_overlapping_monotonic.html#pandas.IntervalIndex.is_non_overlapping_monotonic
    "pandas.IntervalIndex.is_non_overlapping_monotonic") | Return a boolean whether
    the IntervalArray is non-overlapping and monotonic. |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.is_non_overlapping_monotonic`](api/pandas.IntervalIndex.is_non_overlapping_monotonic.html#pandas.IntervalIndex.is_non_overlapping_monotonic
    "pandas.IntervalIndex.is_non_overlapping_monotonic") | 返回一个布尔值，指示 IntervalArray
    是否不重叠且单调。 |'
- en: '| [`IntervalIndex.is_overlapping`](api/pandas.IntervalIndex.is_overlapping.html#pandas.IntervalIndex.is_overlapping
    "pandas.IntervalIndex.is_overlapping") | Return True if the IntervalIndex has
    overlapping intervals, else False. |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.is_overlapping`](api/pandas.IntervalIndex.is_overlapping.html#pandas.IntervalIndex.is_overlapping
    "pandas.IntervalIndex.is_overlapping") | 如果 IntervalIndex 具有重叠的区间，则返回 True，否则返回
    False。 |'
- en: '| [`IntervalIndex.get_loc`](api/pandas.IntervalIndex.get_loc.html#pandas.IntervalIndex.get_loc
    "pandas.IntervalIndex.get_loc")(key) | Get integer location, slice or boolean
    mask for requested label. |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.get_loc`](api/pandas.IntervalIndex.get_loc.html#pandas.IntervalIndex.get_loc
    "pandas.IntervalIndex.get_loc")(key) | 获取请求标签的整数位置、切片或布尔掩码。 |'
- en: '| [`IntervalIndex.get_indexer`](api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer")(target[, method, ...]) | Compute indexer and
    mask for new index given the current index. |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.get_indexer`](api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer")(target[, method, ...]) | 给定当前索引，计算新索引的索引器和掩码。
    |'
- en: '| [`IntervalIndex.set_closed`](api/pandas.IntervalIndex.set_closed.html#pandas.IntervalIndex.set_closed
    "pandas.IntervalIndex.set_closed")(*args, **kwargs) | Return an identical IntervalArray
    closed on the specified side. |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.set_closed`](api/pandas.IntervalIndex.set_closed.html#pandas.IntervalIndex.set_closed
    "pandas.IntervalIndex.set_closed")(*args, **kwargs) | 返回一个在指定侧关闭的相同 IntervalArray。
    |'
- en: '| [`IntervalIndex.contains`](api/pandas.IntervalIndex.contains.html#pandas.IntervalIndex.contains
    "pandas.IntervalIndex.contains")(*args, **kwargs) | Check elementwise if the Intervals
    contain the value. |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.contains`](api/pandas.IntervalIndex.contains.html#pandas.IntervalIndex.contains
    "pandas.IntervalIndex.contains")(*args, **kwargs) | 逐个元素检查区间是否包含该值。 |'
- en: '| [`IntervalIndex.overlaps`](api/pandas.IntervalIndex.overlaps.html#pandas.IntervalIndex.overlaps
    "pandas.IntervalIndex.overlaps")(*args, **kwargs) | Check elementwise if an Interval
    overlaps the values in the IntervalArray. |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.overlaps`](api/pandas.IntervalIndex.overlaps.html#pandas.IntervalIndex.overlaps
    "pandas.IntervalIndex.overlaps")(*args, **kwargs) | 逐个元素检查一个区间是否与 IntervalArray
    中的值重叠。 |'
- en: '| [`IntervalIndex.to_tuples`](api/pandas.IntervalIndex.to_tuples.html#pandas.IntervalIndex.to_tuples
    "pandas.IntervalIndex.to_tuples")(*args, **kwargs) | Return an ndarray (if self
    is IntervalArray) or Index (if self is IntervalIndex) of tuples of the form (left,
    right). |  ## MultiIndex'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`IntervalIndex.to_tuples`](api/pandas.IntervalIndex.to_tuples.html#pandas.IntervalIndex.to_tuples
    "pandas.IntervalIndex.to_tuples")(*args, **kwargs) | 返回形式为 (left, right) 的元组的
    ndarray（如果 self 是 IntervalArray）或 Index（如果 self 是 IntervalIndex）。 |  ## MultiIndex'
- en: '| [`MultiIndex`](api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")([levels, codes, sortorder, ...])
    | A multi-level, or hierarchical, index object for pandas objects. |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex`](api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")([levels, codes, sortorder, ...])
    | 用于 pandas 对象的多级索引对象。 |'
- en: MultiIndex constructors
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MultiIndex 构造函数
- en: '| [`MultiIndex.from_arrays`](api/pandas.MultiIndex.from_arrays.html#pandas.MultiIndex.from_arrays
    "pandas.MultiIndex.from_arrays")(arrays[, sortorder, ...]) | Convert arrays to
    MultiIndex. |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.from_arrays`](api/pandas.MultiIndex.from_arrays.html#pandas.MultiIndex.from_arrays
    "pandas.MultiIndex.from_arrays")(arrays[, sortorder, ...]) | 将数组转换为 MultiIndex。
    |'
- en: '| [`MultiIndex.from_tuples`](api/pandas.MultiIndex.from_tuples.html#pandas.MultiIndex.from_tuples
    "pandas.MultiIndex.from_tuples")(tuples[, sortorder, ...]) | Convert list of tuples
    to MultiIndex. |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.from_tuples`](api/pandas.MultiIndex.from_tuples.html#pandas.MultiIndex.from_tuples
    "pandas.MultiIndex.from_tuples")(tuples[, sortorder, ...]) | 将元组列表转换为 MultiIndex。
    |'
- en: '| [`MultiIndex.from_product`](api/pandas.MultiIndex.from_product.html#pandas.MultiIndex.from_product
    "pandas.MultiIndex.from_product")(iterables[, ...]) | Make a MultiIndex from the
    cartesian product of multiple iterables. |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.from_product`](api/pandas.MultiIndex.from_product.html#pandas.MultiIndex.from_product
    "pandas.MultiIndex.from_product")(iterables[, ...]) | 从多个可迭代对象的笛卡尔积创建 MultiIndex。
    |'
- en: '| [`MultiIndex.from_frame`](api/pandas.MultiIndex.from_frame.html#pandas.MultiIndex.from_frame
    "pandas.MultiIndex.from_frame")(df[, sortorder, names]) | Make a MultiIndex from
    a DataFrame. |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.from_frame`](api/pandas.MultiIndex.from_frame.html#pandas.MultiIndex.from_frame
    "pandas.MultiIndex.from_frame")(df[, sortorder, names]) | 从 DataFrame 创建 MultiIndex。
    |'
- en: MultiIndex properties
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MultiIndex 属性
- en: '| [`MultiIndex.names`](api/pandas.MultiIndex.names.html#pandas.MultiIndex.names
    "pandas.MultiIndex.names") | Names of levels in MultiIndex. |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.names`](api/pandas.MultiIndex.names.html#pandas.MultiIndex.names
    "pandas.MultiIndex.names") | MultiIndex 中级别的名称。'
- en: '| [`MultiIndex.levels`](api/pandas.MultiIndex.levels.html#pandas.MultiIndex.levels
    "pandas.MultiIndex.levels") | Levels of the MultiIndex. |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.levels`](api/pandas.MultiIndex.levels.html#pandas.MultiIndex.levels
    "pandas.MultiIndex.levels") | MultiIndex 的级别。'
- en: '| [`MultiIndex.codes`](api/pandas.MultiIndex.codes.html#pandas.MultiIndex.codes
    "pandas.MultiIndex.codes") |  |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.codes`](api/pandas.MultiIndex.codes.html#pandas.MultiIndex.codes
    "pandas.MultiIndex.codes") |  |'
- en: '| [`MultiIndex.nlevels`](api/pandas.MultiIndex.nlevels.html#pandas.MultiIndex.nlevels
    "pandas.MultiIndex.nlevels") | Integer number of levels in this MultiIndex. |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.nlevels`](api/pandas.MultiIndex.nlevels.html#pandas.MultiIndex.nlevels
    "pandas.MultiIndex.nlevels") | 此 MultiIndex 中级别的整数数量。'
- en: '| [`MultiIndex.levshape`](api/pandas.MultiIndex.levshape.html#pandas.MultiIndex.levshape
    "pandas.MultiIndex.levshape") | A tuple with the length of each level. |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.levshape`](api/pandas.MultiIndex.levshape.html#pandas.MultiIndex.levshape
    "pandas.MultiIndex.levshape") | 每个级别的长度的元组。'
- en: '| [`MultiIndex.dtypes`](api/pandas.MultiIndex.dtypes.html#pandas.MultiIndex.dtypes
    "pandas.MultiIndex.dtypes") | Return the dtypes as a Series for the underlying
    MultiIndex. |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.dtypes`](api/pandas.MultiIndex.dtypes.html#pandas.MultiIndex.dtypes
    "pandas.MultiIndex.dtypes") | 返回基础 MultiIndex 的 dtypes 作为 Series。'
- en: MultiIndex components
  id: totrans-153
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MultiIndex 组件
- en: '| [`MultiIndex.set_levels`](api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels")(levels, *[, level, ...]) | Set new levels on MultiIndex.
    |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.set_levels`](api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels")(levels, *[, level, ...]) | 在 MultiIndex 上设置新的级别。'
- en: '| [`MultiIndex.set_codes`](api/pandas.MultiIndex.set_codes.html#pandas.MultiIndex.set_codes
    "pandas.MultiIndex.set_codes")(codes, *[, level, ...]) | Set new codes on MultiIndex.
    |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.set_codes`](api/pandas.MultiIndex.set_codes.html#pandas.MultiIndex.set_codes
    "pandas.MultiIndex.set_codes")(codes, *[, level, ...]) | 在 MultiIndex 上设置新的代码。'
- en: '| [`MultiIndex.to_flat_index`](api/pandas.MultiIndex.to_flat_index.html#pandas.MultiIndex.to_flat_index
    "pandas.MultiIndex.to_flat_index")() | Convert a MultiIndex to an Index of Tuples
    containing the level values. |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.to_flat_index`](api/pandas.MultiIndex.to_flat_index.html#pandas.MultiIndex.to_flat_index
    "pandas.MultiIndex.to_flat_index")() | 将 MultiIndex 转换为包含级别值的元组索引。'
- en: '| [`MultiIndex.to_frame`](api/pandas.MultiIndex.to_frame.html#pandas.MultiIndex.to_frame
    "pandas.MultiIndex.to_frame")([index, name, ...]) | Create a DataFrame with the
    levels of the MultiIndex as columns. |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.to_frame`](api/pandas.MultiIndex.to_frame.html#pandas.MultiIndex.to_frame
    "pandas.MultiIndex.to_frame")([index, name, ...]) | 创建一个 DataFrame，其中 MultiIndex
    的级别作为列。'
- en: '| [`MultiIndex.sortlevel`](api/pandas.MultiIndex.sortlevel.html#pandas.MultiIndex.sortlevel
    "pandas.MultiIndex.sortlevel")([level, ascending, ...]) | Sort MultiIndex at the
    requested level. |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.sortlevel`](api/pandas.MultiIndex.sortlevel.html#pandas.MultiIndex.sortlevel
    "pandas.MultiIndex.sortlevel")([level, ascending, ...]) | 在请求的级别上对 MultiIndex
    进行排序。'
- en: '| [`MultiIndex.droplevel`](api/pandas.MultiIndex.droplevel.html#pandas.MultiIndex.droplevel
    "pandas.MultiIndex.droplevel")([level]) | Return index with requested level(s)
    removed. |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.droplevel`](api/pandas.MultiIndex.droplevel.html#pandas.MultiIndex.droplevel
    "pandas.MultiIndex.droplevel")([level]) | 返回删除请求级别的索引。'
- en: '| [`MultiIndex.swaplevel`](api/pandas.MultiIndex.swaplevel.html#pandas.MultiIndex.swaplevel
    "pandas.MultiIndex.swaplevel")([i, j]) | Swap level i with level j. |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.swaplevel`](api/pandas.MultiIndex.swaplevel.html#pandas.MultiIndex.swaplevel
    "pandas.MultiIndex.swaplevel")([i, j]) | 交换级别 i 和级别 j。'
- en: '| [`MultiIndex.reorder_levels`](api/pandas.MultiIndex.reorder_levels.html#pandas.MultiIndex.reorder_levels
    "pandas.MultiIndex.reorder_levels")(order) | Rearrange levels using input order.
    |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.reorder_levels`](api/pandas.MultiIndex.reorder_levels.html#pandas.MultiIndex.reorder_levels
    "pandas.MultiIndex.reorder_levels")(order) | 使用输入顺序重新排列级别。'
- en: '| [`MultiIndex.remove_unused_levels`](api/pandas.MultiIndex.remove_unused_levels.html#pandas.MultiIndex.remove_unused_levels
    "pandas.MultiIndex.remove_unused_levels")() | Create new MultiIndex from current
    that removes unused levels. |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.remove_unused_levels`](api/pandas.MultiIndex.remove_unused_levels.html#pandas.MultiIndex.remove_unused_levels
    "pandas.MultiIndex.remove_unused_levels")() | 从当前 MultiIndex 创建一个新的 MultiIndex，删除未使用的级别。'
- en: '| [`MultiIndex.drop`](api/pandas.MultiIndex.drop.html#pandas.MultiIndex.drop
    "pandas.MultiIndex.drop")(codes[, level, errors]) | Make a new [`pandas.MultiIndex`](api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with the passed list of codes deleted. |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.drop`](api/pandas.MultiIndex.drop.html#pandas.MultiIndex.drop
    "pandas.MultiIndex.drop")(codes[, level, errors]) | 使用传递的代码列表创建一个新的 [`pandas.MultiIndex`](api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")。'
- en: '| [`MultiIndex.copy`](api/pandas.MultiIndex.copy.html#pandas.MultiIndex.copy
    "pandas.MultiIndex.copy")([names, deep, name]) | Make a copy of this object. |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.copy`](api/pandas.MultiIndex.copy.html#pandas.MultiIndex.copy
    "pandas.MultiIndex.copy") | 复制此对象。 |'
- en: '| [`MultiIndex.append`](api/pandas.MultiIndex.append.html#pandas.MultiIndex.append
    "pandas.MultiIndex.append")(other) | Append a collection of Index options together.
    |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.append`](api/pandas.MultiIndex.append.html#pandas.MultiIndex.append
    "pandas.MultiIndex.append")(other) | 将一组索引选项追加在一起。 |'
- en: '| [`MultiIndex.truncate`](api/pandas.MultiIndex.truncate.html#pandas.MultiIndex.truncate
    "pandas.MultiIndex.truncate")([before, after]) | Slice index between two labels
    / tuples, return new MultiIndex. |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.truncate`](api/pandas.MultiIndex.truncate.html#pandas.MultiIndex.truncate
    "pandas.MultiIndex.truncate")([before, after]) | 在两个标签/元组之间切片索引，返回新的 MultiIndex。
    |'
- en: MultiIndex selecting
  id: totrans-167
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 多重索引选择
- en: '| [`MultiIndex.get_loc`](api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc")(key) | Get location for a label or a tuple of labels.
    |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.get_loc`](api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc")(key) | 获取标签或标签元组的位置。 |'
- en: '| [`MultiIndex.get_locs`](api/pandas.MultiIndex.get_locs.html#pandas.MultiIndex.get_locs
    "pandas.MultiIndex.get_locs")(seq) | Get location for a sequence of labels. |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.get_locs`](api/pandas.MultiIndex.get_locs.html#pandas.MultiIndex.get_locs
    "pandas.MultiIndex.get_locs")(seq) | 获取一系列标签的位置。 |'
- en: '| [`MultiIndex.get_loc_level`](api/pandas.MultiIndex.get_loc_level.html#pandas.MultiIndex.get_loc_level
    "pandas.MultiIndex.get_loc_level")(key[, level, ...]) | Get location and sliced
    index for requested label(s)/level(s). |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.get_loc_level`](api/pandas.MultiIndex.get_loc_level.html#pandas.MultiIndex.get_loc_level
    "pandas.MultiIndex.get_loc_level")(key[, level, ...]) | 获取请求的标签/级别的位置和切片索引。 |'
- en: '| [`MultiIndex.get_indexer`](api/pandas.MultiIndex.get_indexer.html#pandas.MultiIndex.get_indexer
    "pandas.MultiIndex.get_indexer")(target[, method, ...]) | Compute indexer and
    mask for new index given the current index. |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.get_indexer`](api/pandas.MultiIndex.get_indexer.html#pandas.MultiIndex.get_indexer
    "pandas.MultiIndex.get_indexer")(target[, method, ...]) | 给定��前索引，计算新索引的索引器和掩码。
    |'
- en: '| [`MultiIndex.get_level_values`](api/pandas.MultiIndex.get_level_values.html#pandas.MultiIndex.get_level_values
    "pandas.MultiIndex.get_level_values")(level) | Return vector of label values for
    requested level. |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.get_level_values`](api/pandas.MultiIndex.get_level_values.html#pandas.MultiIndex.get_level_values
    "pandas.MultiIndex.get_level_values")(level) | 返回请求级别的标签值向量。 |'
- en: '| [`IndexSlice`](api/pandas.IndexSlice.html#pandas.IndexSlice "pandas.IndexSlice")
    | Create an object to more easily perform multi-index slicing. |  ## DatetimeIndex'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`IndexSlice`](api/pandas.IndexSlice.html#pandas.IndexSlice "pandas.IndexSlice")
    | 创建一个对象，更容易执行多重索引切片。 |  ## DatetimeIndex'
- en: '| [`DatetimeIndex`](api/pandas.DatetimeIndex.html#pandas.DatetimeIndex "pandas.DatetimeIndex")([data, freq, tz, normalize, ...])
    | Immutable ndarray-like of datetime64 data. |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex`](api/pandas.DatetimeIndex.html#pandas.DatetimeIndex "pandas.DatetimeIndex")([data, freq, tz, normalize, ...])
    | 不可变的 datetime64 数据类似的 ndarray。 |'
- en: Time/date components
  id: totrans-175
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 时间/日期组件
- en: '| [`DatetimeIndex.year`](api/pandas.DatetimeIndex.year.html#pandas.DatetimeIndex.year
    "pandas.DatetimeIndex.year") | The year of the datetime. |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.year`](api/pandas.DatetimeIndex.year.html#pandas.DatetimeIndex.year
    "pandas.DatetimeIndex.year") | 日期时间的年份。 |'
- en: '| [`DatetimeIndex.month`](api/pandas.DatetimeIndex.month.html#pandas.DatetimeIndex.month
    "pandas.DatetimeIndex.month") | The month as January=1, December=12. |'
  id: totrans-177
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.month`](api/pandas.DatetimeIndex.month.html#pandas.DatetimeIndex.month
    "pandas.DatetimeIndex.month") | 月份，一月为1，十二月为12。 |'
- en: '| [`DatetimeIndex.day`](api/pandas.DatetimeIndex.day.html#pandas.DatetimeIndex.day
    "pandas.DatetimeIndex.day") | The day of the datetime. |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.day`](api/pandas.DatetimeIndex.day.html#pandas.DatetimeIndex.day
    "pandas.DatetimeIndex.day") | 日期时间的日期。 |'
- en: '| [`DatetimeIndex.hour`](api/pandas.DatetimeIndex.hour.html#pandas.DatetimeIndex.hour
    "pandas.DatetimeIndex.hour") | The hours of the datetime. |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.hour`](api/pandas.DatetimeIndex.hour.html#pandas.DatetimeIndex.hour
    "pandas.DatetimeIndex.hour") | 日期时间的小时数。 |'
- en: '| [`DatetimeIndex.minute`](api/pandas.DatetimeIndex.minute.html#pandas.DatetimeIndex.minute
    "pandas.DatetimeIndex.minute") | The minutes of the datetime. |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.minute`](api/pandas.DatetimeIndex.minute.html#pandas.DatetimeIndex.minute
    "pandas.DatetimeIndex.minute") | 日期时间的分钟数。 |'
- en: '| [`DatetimeIndex.second`](api/pandas.DatetimeIndex.second.html#pandas.DatetimeIndex.second
    "pandas.DatetimeIndex.second") | The seconds of the datetime. |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.second`](api/pandas.DatetimeIndex.second.html#pandas.DatetimeIndex.second
    "pandas.DatetimeIndex.second") | 日期时间的秒数。 |'
- en: '| [`DatetimeIndex.microsecond`](api/pandas.DatetimeIndex.microsecond.html#pandas.DatetimeIndex.microsecond
    "pandas.DatetimeIndex.microsecond") | The microseconds of the datetime. |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.microsecond`](api/pandas.DatetimeIndex.microsecond.html#pandas.DatetimeIndex.microsecond
    "pandas.DatetimeIndex.microsecond") | 日期时间的微秒数。 |'
- en: '| [`DatetimeIndex.nanosecond`](api/pandas.DatetimeIndex.nanosecond.html#pandas.DatetimeIndex.nanosecond
    "pandas.DatetimeIndex.nanosecond") | The nanoseconds of the datetime. |'
  id: totrans-183
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.nanosecond`](api/pandas.DatetimeIndex.nanosecond.html#pandas.DatetimeIndex.nanosecond
    "pandas.DatetimeIndex.nanosecond") | 日期的纳秒。 |'
- en: '| [`DatetimeIndex.date`](api/pandas.DatetimeIndex.date.html#pandas.DatetimeIndex.date
    "pandas.DatetimeIndex.date") | Returns numpy array of python [`datetime.date`](https://docs.python.org/3/library/datetime.html#datetime.date
    "(in Python v3.12)") objects. |'
  id: totrans-184
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.date`](api/pandas.DatetimeIndex.date.html#pandas.DatetimeIndex.date
    "pandas.DatetimeIndex.date") | 返回 python [`datetime.date`](https://docs.python.org/3/library/datetime.html#datetime.date
    "(在 Python v3.12 中)") 对象的 numpy 数组。 |'
- en: '| [`DatetimeIndex.time`](api/pandas.DatetimeIndex.time.html#pandas.DatetimeIndex.time
    "pandas.DatetimeIndex.time") | Returns numpy array of [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(in Python v3.12)") objects. |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.time`](api/pandas.DatetimeIndex.time.html#pandas.DatetimeIndex.time
    "pandas.DatetimeIndex.time") | 返回带有时区的 python [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(在 Python v3.12 中)") 对象的 numpy 数组。 |'
- en: '| [`DatetimeIndex.timetz`](api/pandas.DatetimeIndex.timetz.html#pandas.DatetimeIndex.timetz
    "pandas.DatetimeIndex.timetz") | Returns numpy array of [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(in Python v3.12)") objects with timezones. |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.timetz`](api/pandas.DatetimeIndex.timetz.html#pandas.DatetimeIndex.timetz
    "pandas.DatetimeIndex.timetz") | 返回带有时区的 python [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(在 Python v3.12 中)") 对象的 numpy 数组。 |'
- en: '| [`DatetimeIndex.dayofyear`](api/pandas.DatetimeIndex.dayofyear.html#pandas.DatetimeIndex.dayofyear
    "pandas.DatetimeIndex.dayofyear") | The ordinal day of the year. |'
  id: totrans-187
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.dayofyear`](api/pandas.DatetimeIndex.dayofyear.html#pandas.DatetimeIndex.dayofyear
    "pandas.DatetimeIndex.dayofyear") | 年份中的第几天。 |'
- en: '| [`DatetimeIndex.day_of_year`](api/pandas.DatetimeIndex.day_of_year.html#pandas.DatetimeIndex.day_of_year
    "pandas.DatetimeIndex.day_of_year") | The ordinal day of the year. |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.day_of_year`](api/pandas.DatetimeIndex.day_of_year.html#pandas.DatetimeIndex.day_of_year
    "pandas.DatetimeIndex.day_of_year") | 年份中的第几天。 |'
- en: '| [`DatetimeIndex.dayofweek`](api/pandas.DatetimeIndex.dayofweek.html#pandas.DatetimeIndex.dayofweek
    "pandas.DatetimeIndex.dayofweek") | The day of the week with Monday=0, Sunday=6.
    |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.dayofweek`](api/pandas.DatetimeIndex.dayofweek.html#pandas.DatetimeIndex.dayofweek
    "pandas.DatetimeIndex.dayofweek") | 一周的第几天，星期一为0，星期日为6。 |'
- en: '| [`DatetimeIndex.day_of_week`](api/pandas.DatetimeIndex.day_of_week.html#pandas.DatetimeIndex.day_of_week
    "pandas.DatetimeIndex.day_of_week") | The day of the week with Monday=0, Sunday=6.
    |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.day_of_week`](api/pandas.DatetimeIndex.day_of_week.html#pandas.DatetimeIndex.day_of_week
    "pandas.DatetimeIndex.day_of_week") | 一周的第几天，星期一为0，星期日为6。 |'
- en: '| [`DatetimeIndex.weekday`](api/pandas.DatetimeIndex.weekday.html#pandas.DatetimeIndex.weekday
    "pandas.DatetimeIndex.weekday") | The day of the week with Monday=0, Sunday=6.
    |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.weekday`](api/pandas.DatetimeIndex.weekday.html#pandas.DatetimeIndex.weekday
    "pandas.DatetimeIndex.weekday") | 一周的第几天，星期一为0，星期日为6。 |'
- en: '| [`DatetimeIndex.quarter`](api/pandas.DatetimeIndex.quarter.html#pandas.DatetimeIndex.quarter
    "pandas.DatetimeIndex.quarter") | The quarter of the date. |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.quarter`](api/pandas.DatetimeIndex.quarter.html#pandas.DatetimeIndex.quarter
    "pandas.DatetimeIndex.quarter") | 日期的季度。 |'
- en: '| [`DatetimeIndex.tz`](api/pandas.DatetimeIndex.tz.html#pandas.DatetimeIndex.tz
    "pandas.DatetimeIndex.tz") | Return the timezone. |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.tz`](api/pandas.DatetimeIndex.tz.html#pandas.DatetimeIndex.tz
    "pandas.DatetimeIndex.tz") | 返回时区。 |'
- en: '| [`DatetimeIndex.freq`](api/pandas.DatetimeIndex.freq.html#pandas.DatetimeIndex.freq
    "pandas.DatetimeIndex.freq") |  |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.freq`](api/pandas.DatetimeIndex.freq.html#pandas.DatetimeIndex.freq
    "pandas.DatetimeIndex.freq") |  |'
- en: '| [`DatetimeIndex.freqstr`](api/pandas.DatetimeIndex.freqstr.html#pandas.DatetimeIndex.freqstr
    "pandas.DatetimeIndex.freqstr") | Return the frequency object as a string if it''s
    set, otherwise None. |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.freqstr`](api/pandas.DatetimeIndex.freqstr.html#pandas.DatetimeIndex.freqstr
    "pandas.DatetimeIndex.freqstr") | 如果已设置，则返回频率对象的字符串，否则返回 None。 |'
- en: '| [`DatetimeIndex.is_month_start`](api/pandas.DatetimeIndex.is_month_start.html#pandas.DatetimeIndex.is_month_start
    "pandas.DatetimeIndex.is_month_start") | Indicates whether the date is the first
    day of the month. |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.is_month_start`](api/pandas.DatetimeIndex.is_month_start.html#pandas.DatetimeIndex.is_month_start
    "pandas.DatetimeIndex.is_month_start") | 表示日期是否为月初。 |'
- en: '| [`DatetimeIndex.is_month_end`](api/pandas.DatetimeIndex.is_month_end.html#pandas.DatetimeIndex.is_month_end
    "pandas.DatetimeIndex.is_month_end") | Indicates whether the date is the last
    day of the month. |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.is_month_end`](api/pandas.DatetimeIndex.is_month_end.html#pandas.DatetimeIndex.is_month_end
    "pandas.DatetimeIndex.is_month_end") | 表示日期是否为月末。 |'
- en: '| [`DatetimeIndex.is_quarter_start`](api/pandas.DatetimeIndex.is_quarter_start.html#pandas.DatetimeIndex.is_quarter_start
    "pandas.DatetimeIndex.is_quarter_start") | Indicator for whether the date is the
    first day of a quarter. |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.is_quarter_start`](api/pandas.DatetimeIndex.is_quarter_start.html#pandas.DatetimeIndex.is_quarter_start
    "pandas.DatetimeIndex.is_quarter_start") | 指示日期是否为一个季度的第一天。 |'
- en: '| [`DatetimeIndex.is_quarter_end`](api/pandas.DatetimeIndex.is_quarter_end.html#pandas.DatetimeIndex.is_quarter_end
    "pandas.DatetimeIndex.is_quarter_end") | Indicator for whether the date is the
    last day of a quarter. |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.is_quarter_end`](api/pandas.DatetimeIndex.is_quarter_end.html#pandas.DatetimeIndex.is_quarter_end
    "pandas.DatetimeIndex.is_quarter_end") | 指示日期是否为一个季度的最后一天。 |'
- en: '| [`DatetimeIndex.is_year_start`](api/pandas.DatetimeIndex.is_year_start.html#pandas.DatetimeIndex.is_year_start
    "pandas.DatetimeIndex.is_year_start") | Indicate whether the date is the first
    day of a year. |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.is_year_start`](api/pandas.DatetimeIndex.is_year_start.html#pandas.DatetimeIndex.is_year_start
    "pandas.DatetimeIndex.is_year_start") | 表示日期是否为一年的第一天。 |'
- en: '| [`DatetimeIndex.is_year_end`](api/pandas.DatetimeIndex.is_year_end.html#pandas.DatetimeIndex.is_year_end
    "pandas.DatetimeIndex.is_year_end") | Indicate whether the date is the last day
    of the year. |'
  id: totrans-201
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.is_year_end`](api/pandas.DatetimeIndex.is_year_end.html#pandas.DatetimeIndex.is_year_end
    "pandas.DatetimeIndex.is_year_end") | 表示日期是否为一年的最后一天。 |'
- en: '| [`DatetimeIndex.is_leap_year`](api/pandas.DatetimeIndex.is_leap_year.html#pandas.DatetimeIndex.is_leap_year
    "pandas.DatetimeIndex.is_leap_year") | Boolean indicator if the date belongs to
    a leap year. |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.is_leap_year`](api/pandas.DatetimeIndex.is_leap_year.html#pandas.DatetimeIndex.is_leap_year
    "pandas.DatetimeIndex.is_leap_year") | 布尔指示器，指示日期是否属于闰年。 |'
- en: '| [`DatetimeIndex.inferred_freq`](api/pandas.DatetimeIndex.inferred_freq.html#pandas.DatetimeIndex.inferred_freq
    "pandas.DatetimeIndex.inferred_freq") | Tries to return a string representing
    a frequency generated by infer_freq. |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.inferred_freq`](api/pandas.DatetimeIndex.inferred_freq.html#pandas.DatetimeIndex.inferred_freq
    "pandas.DatetimeIndex.inferred_freq") | 尝试返回由infer_freq生成的表示频率的字符串。 |'
- en: Selecting
  id: totrans-204
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择
- en: '| [`DatetimeIndex.indexer_at_time`](api/pandas.DatetimeIndex.indexer_at_time.html#pandas.DatetimeIndex.indexer_at_time
    "pandas.DatetimeIndex.indexer_at_time")(time[, asof]) | Return index locations
    of values at particular time of day. |'
  id: totrans-205
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.indexer_at_time`](api/pandas.DatetimeIndex.indexer_at_time.html#pandas.DatetimeIndex.indexer_at_time
    "pandas.DatetimeIndex.indexer_at_time")(time[, asof]) | 返回特定时间一天中值的索引位置。 |'
- en: '| [`DatetimeIndex.indexer_between_time`](api/pandas.DatetimeIndex.indexer_between_time.html#pandas.DatetimeIndex.indexer_between_time
    "pandas.DatetimeIndex.indexer_between_time")(...[, ...]) | Return index locations
    of values between particular times of day. |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.indexer_between_time`](api/pandas.DatetimeIndex.indexer_between_time.html#pandas.DatetimeIndex.indexer_between_time
    "pandas.DatetimeIndex.indexer_between_time")(...[, ...]) | 返回在一天特定时间之间的值的索引位置。
    |'
- en: Time-specific operations
  id: totrans-207
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 特定时间操作
- en: '| [`DatetimeIndex.normalize`](api/pandas.DatetimeIndex.normalize.html#pandas.DatetimeIndex.normalize
    "pandas.DatetimeIndex.normalize")(*args, **kwargs) | Convert times to midnight.
    |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.normalize`](api/pandas.DatetimeIndex.normalize.html#pandas.DatetimeIndex.normalize
    "pandas.DatetimeIndex.normalize")(*args, **kwargs) | 将时间转换为午夜。 |'
- en: '| [`DatetimeIndex.strftime`](api/pandas.DatetimeIndex.strftime.html#pandas.DatetimeIndex.strftime
    "pandas.DatetimeIndex.strftime")(date_format) | Convert to Index using specified
    date_format. |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.strftime`](api/pandas.DatetimeIndex.strftime.html#pandas.DatetimeIndex.strftime
    "pandas.DatetimeIndex.strftime")(date_format) | 使用指定的日期格式转换为索引。 |'
- en: '| [`DatetimeIndex.snap`](api/pandas.DatetimeIndex.snap.html#pandas.DatetimeIndex.snap
    "pandas.DatetimeIndex.snap")([freq]) | Snap time stamps to nearest occurring frequency.
    |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.snap`](api/pandas.DatetimeIndex.snap.html#pandas.DatetimeIndex.snap
    "pandas.DatetimeIndex.snap")([freq]) | 将时间戳捕捉到最近发生的频率。 |'
- en: '| [`DatetimeIndex.tz_convert`](api/pandas.DatetimeIndex.tz_convert.html#pandas.DatetimeIndex.tz_convert
    "pandas.DatetimeIndex.tz_convert")(tz) | Convert tz-aware Datetime Array/Index
    from one time zone to another. |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.tz_convert`](api/pandas.DatetimeIndex.tz_convert.html#pandas.DatetimeIndex.tz_convert
    "pandas.DatetimeIndex.tz_convert")(tz) | 将一个时区感知的日期时间数组/索引从一个时区转换为另一个时区。 |'
- en: '| [`DatetimeIndex.tz_localize`](api/pandas.DatetimeIndex.tz_localize.html#pandas.DatetimeIndex.tz_localize
    "pandas.DatetimeIndex.tz_localize")(tz[, ambiguous, ...]) | Localize tz-naive
    Datetime Array/Index to tz-aware Datetime Array/Index. |'
  id: totrans-212
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.tz_localize`](api/pandas.DatetimeIndex.tz_localize.html#pandas.DatetimeIndex.tz_localize
    "pandas.DatetimeIndex.tz_localize")(tz[, ambiguous, ...]) | 将tz-naive日期时间数组/索引本地化为tz-aware日期时间数组/索引。
    |'
- en: '| [`DatetimeIndex.round`](api/pandas.DatetimeIndex.round.html#pandas.DatetimeIndex.round
    "pandas.DatetimeIndex.round")(*args, **kwargs) | Perform round operation on the
    data to the specified freq. |'
  id: totrans-213
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.round`](api/pandas.DatetimeIndex.round.html#pandas.DatetimeIndex.round
    "pandas.DatetimeIndex.round")(*args, **kwargs) | 对数据执行舍入操作，以指定的频率。 |'
- en: '| [`DatetimeIndex.floor`](api/pandas.DatetimeIndex.floor.html#pandas.DatetimeIndex.floor
    "pandas.DatetimeIndex.floor")(*args, **kwargs) | Perform floor operation on the
    data to the specified freq. |'
  id: totrans-214
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.floor`](api/pandas.DatetimeIndex.floor.html#pandas.DatetimeIndex.floor
    "pandas.DatetimeIndex.floor")(*args, **kwargs) | 对数据执行向下取整操作，以指定的频率。 |'
- en: '| [`DatetimeIndex.ceil`](api/pandas.DatetimeIndex.ceil.html#pandas.DatetimeIndex.ceil
    "pandas.DatetimeIndex.ceil")(*args, **kwargs) | Perform ceil operation on the
    data to the specified freq. |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.ceil`](api/pandas.DatetimeIndex.ceil.html#pandas.DatetimeIndex.ceil
    "pandas.DatetimeIndex.ceil")(*args, **kwargs) | 对数据执行向上取整操作，以指定的频率。 |'
- en: '| [`DatetimeIndex.month_name`](api/pandas.DatetimeIndex.month_name.html#pandas.DatetimeIndex.month_name
    "pandas.DatetimeIndex.month_name")(*args, **kwargs) | Return the month names with
    specified locale. |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.month_name`](api/pandas.DatetimeIndex.month_name.html#pandas.DatetimeIndex.month_name
    "pandas.DatetimeIndex.month_name")(*args, **kwargs) | 返回指定语言环境的月份名称。 |'
- en: '| [`DatetimeIndex.day_name`](api/pandas.DatetimeIndex.day_name.html#pandas.DatetimeIndex.day_name
    "pandas.DatetimeIndex.day_name")(*args, **kwargs) | Return the day names with
    specified locale. |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.day_name`](api/pandas.DatetimeIndex.day_name.html#pandas.DatetimeIndex.day_name
    "pandas.DatetimeIndex.day_name")(*args, **kwargs) | 返回指定语言环境的星期几名称。 |'
- en: Conversion
  id: totrans-218
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 转换
- en: '| [`DatetimeIndex.as_unit`](api/pandas.DatetimeIndex.as_unit.html#pandas.DatetimeIndex.as_unit
    "pandas.DatetimeIndex.as_unit")(*args, **kwargs) | Convert to a dtype with the
    given unit resolution. |'
  id: totrans-219
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.as_unit`](api/pandas.DatetimeIndex.as_unit.html#pandas.DatetimeIndex.as_unit
    "pandas.DatetimeIndex.as_unit")(*args, **kwargs) | 转换为具有给定单位分辨率的 dtype。 |'
- en: '| [`DatetimeIndex.to_period`](api/pandas.DatetimeIndex.to_period.html#pandas.DatetimeIndex.to_period
    "pandas.DatetimeIndex.to_period")(*args, **kwargs) | Cast to PeriodArray/PeriodIndex
    at a particular frequency. |'
  id: totrans-220
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.to_period`](api/pandas.DatetimeIndex.to_period.html#pandas.DatetimeIndex.to_period
    "pandas.DatetimeIndex.to_period")(*args, **kwargs) | 在特定频率下转换为 PeriodArray/PeriodIndex。
    |'
- en: '| [`DatetimeIndex.to_pydatetime`](api/pandas.DatetimeIndex.to_pydatetime.html#pandas.DatetimeIndex.to_pydatetime
    "pandas.DatetimeIndex.to_pydatetime")(*args, **kwargs) | Return an ndarray of
    `datetime.datetime` objects. |'
  id: totrans-221
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.to_pydatetime`](api/pandas.DatetimeIndex.to_pydatetime.html#pandas.DatetimeIndex.to_pydatetime
    "pandas.DatetimeIndex.to_pydatetime")(*args, **kwargs) | 返回一个包含 `datetime.datetime`
    对象的 ndarray。 |'
- en: '| [`DatetimeIndex.to_series`](api/pandas.DatetimeIndex.to_series.html#pandas.DatetimeIndex.to_series
    "pandas.DatetimeIndex.to_series")([index, name]) | Create a Series with both index
    and values equal to the index keys. |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.to_series`](api/pandas.DatetimeIndex.to_series.html#pandas.DatetimeIndex.to_series
    "pandas.DatetimeIndex.to_series")([index, name]) | 创建一个 Series，其索引和值都等于索引键。 |'
- en: '| [`DatetimeIndex.to_frame`](api/pandas.DatetimeIndex.to_frame.html#pandas.DatetimeIndex.to_frame
    "pandas.DatetimeIndex.to_frame")([index, name]) | Create a DataFrame with a column
    containing the Index. |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.to_frame`](api/pandas.DatetimeIndex.to_frame.html#pandas.DatetimeIndex.to_frame
    "pandas.DatetimeIndex.to_frame")([index, name]) | 创建一个包含索引的列的 DataFrame。 |'
- en: Methods
  id: totrans-224
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`DatetimeIndex.mean`](api/pandas.DatetimeIndex.mean.html#pandas.DatetimeIndex.mean
    "pandas.DatetimeIndex.mean")(*[, skipna, axis]) | Return the mean value of the
    Array. |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.mean`](api/pandas.DatetimeIndex.mean.html#pandas.DatetimeIndex.mean
    "pandas.DatetimeIndex.mean")(*[, skipna, axis]) | 返回数组的平均值。 |'
- en: '| [`DatetimeIndex.std`](api/pandas.DatetimeIndex.std.html#pandas.DatetimeIndex.std
    "pandas.DatetimeIndex.std")(*args, **kwargs) | Return sample standard deviation
    over requested axis. |'
  id: totrans-226
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.std`](api/pandas.DatetimeIndex.std.html#pandas.DatetimeIndex.std
    "pandas.DatetimeIndex.std")(*args, **kwargs) | 返回请求轴上的样本标准差。 |'
- en: TimedeltaIndex
  id: totrans-227
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: TimedeltaIndex
- en: '| [`TimedeltaIndex`](api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex "pandas.TimedeltaIndex")([data, unit, freq, closed, ...])
    | Immutable Index of timedelta64 data. |'
  id: totrans-228
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex`](api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex "pandas.TimedeltaIndex")([data, unit, freq, closed, ...])
    | 不可变的 timedelta64 数据索引。 |'
- en: Components
  id: totrans-229
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 组件
- en: '| [`TimedeltaIndex.days`](api/pandas.TimedeltaIndex.days.html#pandas.TimedeltaIndex.days
    "pandas.TimedeltaIndex.days") | Number of days for each element. |'
  id: totrans-230
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.days`](api/pandas.TimedeltaIndex.days.html#pandas.TimedeltaIndex.days
    "pandas.TimedeltaIndex.days") | 每个元素的天数。 |'
- en: '| [`TimedeltaIndex.seconds`](api/pandas.TimedeltaIndex.seconds.html#pandas.TimedeltaIndex.seconds
    "pandas.TimedeltaIndex.seconds") | Number of seconds (>= 0 and less than 1 day)
    for each element. |'
  id: totrans-231
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.seconds`](api/pandas.TimedeltaIndex.seconds.html#pandas.TimedeltaIndex.seconds
    "pandas.TimedeltaIndex.seconds") | 每个元素的秒数（>= 0且小于1天）。 |'
- en: '| [`TimedeltaIndex.microseconds`](api/pandas.TimedeltaIndex.microseconds.html#pandas.TimedeltaIndex.microseconds
    "pandas.TimedeltaIndex.microseconds") | Number of microseconds (>= 0 and less
    than 1 second) for each element. |'
  id: totrans-232
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.microseconds`](api/pandas.TimedeltaIndex.microseconds.html#pandas.TimedeltaIndex.microseconds
    "pandas.TimedeltaIndex.microseconds") | 每个元素的微秒数（>= 0 且小于1秒）。 |'
- en: '| [`TimedeltaIndex.nanoseconds`](api/pandas.TimedeltaIndex.nanoseconds.html#pandas.TimedeltaIndex.nanoseconds
    "pandas.TimedeltaIndex.nanoseconds") | Number of nanoseconds (>= 0 and less than
    1 microsecond) for each element. |'
  id: totrans-233
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.nanoseconds`](api/pandas.TimedeltaIndex.nanoseconds.html#pandas.TimedeltaIndex.nanoseconds
    "pandas.TimedeltaIndex.nanoseconds") | 每个元素的纳秒数（>= 0 且小于1微秒）。 |'
- en: '| [`TimedeltaIndex.components`](api/pandas.TimedeltaIndex.components.html#pandas.TimedeltaIndex.components
    "pandas.TimedeltaIndex.components") | Return a DataFrame of the individual resolution
    components of the Timedeltas. |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.components`](api/pandas.TimedeltaIndex.components.html#pandas.TimedeltaIndex.components
    "pandas.TimedeltaIndex.components") | 返回 Timedeltas 的各个分辨率组件的 DataFrame。 |'
- en: '| [`TimedeltaIndex.inferred_freq`](api/pandas.TimedeltaIndex.inferred_freq.html#pandas.TimedeltaIndex.inferred_freq
    "pandas.TimedeltaIndex.inferred_freq") | Tries to return a string representing
    a frequency generated by infer_freq. |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.inferred_freq`](api/pandas.TimedeltaIndex.inferred_freq.html#pandas.TimedeltaIndex.inferred_freq
    "pandas.TimedeltaIndex.inferred_freq") | 尝试返回由 infer_freq 生成的表示频率的字符串。 |'
- en: Conversion
  id: totrans-236
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Conversion
- en: '| [`TimedeltaIndex.as_unit`](api/pandas.TimedeltaIndex.as_unit.html#pandas.TimedeltaIndex.as_unit
    "pandas.TimedeltaIndex.as_unit")(unit) | Convert to a dtype with the given unit
    resolution. |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.as_unit`](api/pandas.TimedeltaIndex.as_unit.html#pandas.TimedeltaIndex.as_unit
    "pandas.TimedeltaIndex.as_unit")(unit) | 转换为具有给定单位分辨率的 dtype。 |'
- en: '| [`TimedeltaIndex.to_pytimedelta`](api/pandas.TimedeltaIndex.to_pytimedelta.html#pandas.TimedeltaIndex.to_pytimedelta
    "pandas.TimedeltaIndex.to_pytimedelta")(*args, **kwargs) | Return an ndarray of
    datetime.timedelta objects. |'
  id: totrans-238
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.to_pytimedelta`](api/pandas.TimedeltaIndex.to_pytimedelta.html#pandas.TimedeltaIndex.to_pytimedelta
    "pandas.TimedeltaIndex.to_pytimedelta")(*args, **kwargs) | 返回一个 datetime.timedelta
    对象的 ndarray。 |'
- en: '| [`TimedeltaIndex.to_series`](api/pandas.TimedeltaIndex.to_series.html#pandas.TimedeltaIndex.to_series
    "pandas.TimedeltaIndex.to_series")([index, name]) | Create a Series with both
    index and values equal to the index keys. |'
  id: totrans-239
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.to_series`](api/pandas.TimedeltaIndex.to_series.html#pandas.TimedeltaIndex.to_series
    "pandas.TimedeltaIndex.to_series")([index, name]) | 创建一个索引和值都等于索引键的 Series。 |'
- en: '| [`TimedeltaIndex.round`](api/pandas.TimedeltaIndex.round.html#pandas.TimedeltaIndex.round
    "pandas.TimedeltaIndex.round")(*args, **kwargs) | Perform round operation on the
    data to the specified freq. |'
  id: totrans-240
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.round`](api/pandas.TimedeltaIndex.round.html#pandas.TimedeltaIndex.round
    "pandas.TimedeltaIndex.round")(*args, **kwargs) | 对数据执行四舍五入操作，以指定的频率为准。 |'
- en: '| [`TimedeltaIndex.floor`](api/pandas.TimedeltaIndex.floor.html#pandas.TimedeltaIndex.floor
    "pandas.TimedeltaIndex.floor")(*args, **kwargs) | Perform floor operation on the
    data to the specified freq. |'
  id: totrans-241
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.floor`](api/pandas.TimedeltaIndex.floor.html#pandas.TimedeltaIndex.floor
    "pandas.TimedeltaIndex.floor")(*args, **kwargs) | 对数据执行向下取整操作，以指定的频率为准。 |'
- en: '| [`TimedeltaIndex.ceil`](api/pandas.TimedeltaIndex.ceil.html#pandas.TimedeltaIndex.ceil
    "pandas.TimedeltaIndex.ceil")(*args, **kwargs) | Perform ceil operation on the
    data to the specified freq. |'
  id: totrans-242
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.ceil`](api/pandas.TimedeltaIndex.ceil.html#pandas.TimedeltaIndex.ceil
    "pandas.TimedeltaIndex.ceil")(*args, **kwargs) | 对数据执行向上取整操作，以指定的频率为准。 |'
- en: '| [`TimedeltaIndex.to_frame`](api/pandas.TimedeltaIndex.to_frame.html#pandas.TimedeltaIndex.to_frame
    "pandas.TimedeltaIndex.to_frame")([index, name]) | Create a DataFrame with a column
    containing the Index. |'
  id: totrans-243
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.to_frame`](api/pandas.TimedeltaIndex.to_frame.html#pandas.TimedeltaIndex.to_frame
    "pandas.TimedeltaIndex.to_frame")([index, name]) | 创建一个包含索引的列的 DataFrame。 |'
- en: Methods
  id: totrans-244
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Methods
- en: '| [`TimedeltaIndex.mean`](api/pandas.TimedeltaIndex.mean.html#pandas.TimedeltaIndex.mean
    "pandas.TimedeltaIndex.mean")(*[, skipna, axis]) | Return the mean value of the
    Array. |'
  id: totrans-245
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.mean`](api/pandas.TimedeltaIndex.mean.html#pandas.TimedeltaIndex.mean
    "pandas.TimedeltaIndex.mean")(*[, skipna, axis]) | 返回数组的平均值。 |'
- en: PeriodIndex
  id: totrans-246
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PeriodIndex
- en: '| [`PeriodIndex`](api/pandas.PeriodIndex.html#pandas.PeriodIndex "pandas.PeriodIndex")([data, ordinal, freq, dtype, ...])
    | Immutable ndarray holding ordinal values indicating regular periods in time.
    |'
  id: totrans-247
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex`](api/pandas.PeriodIndex.html#pandas.PeriodIndex "pandas.PeriodIndex")([data, ordinal, freq, dtype, ...])
    | 不可变的 ndarray，包含指示时间中常规周期的序数值。 |'
- en: Properties
  id: totrans-248
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Properties
- en: '| [`PeriodIndex.day`](api/pandas.PeriodIndex.day.html#pandas.PeriodIndex.day
    "pandas.PeriodIndex.day") | The days of the period. |'
  id: totrans-249
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.day`](api/pandas.PeriodIndex.day.html#pandas.PeriodIndex.day
    "pandas.PeriodIndex.day") | 该周期的天数。 |'
- en: '| [`PeriodIndex.dayofweek`](api/pandas.PeriodIndex.dayofweek.html#pandas.PeriodIndex.dayofweek
    "pandas.PeriodIndex.dayofweek") | The day of the week with Monday=0, Sunday=6.
    |'
  id: totrans-250
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.dayofweek`](api/pandas.PeriodIndex.dayofweek.html#pandas.PeriodIndex.dayofweek
    "pandas.PeriodIndex.dayofweek") | 一周中的日期，星期一为0，星期日为6。 |'
- en: '| [`PeriodIndex.day_of_week`](api/pandas.PeriodIndex.day_of_week.html#pandas.PeriodIndex.day_of_week
    "pandas.PeriodIndex.day_of_week") | The day of the week with Monday=0, Sunday=6.
    |'
  id: totrans-251
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.day_of_week`](api/pandas.PeriodIndex.day_of_week.html#pandas.PeriodIndex.day_of_week
    "pandas.PeriodIndex.day_of_week") | 一周中的日期，星期一为0，星期日为6。 |'
- en: '| [`PeriodIndex.dayofyear`](api/pandas.PeriodIndex.dayofyear.html#pandas.PeriodIndex.dayofyear
    "pandas.PeriodIndex.dayofyear") | The ordinal day of the year. |'
  id: totrans-252
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.dayofyear`](api/pandas.PeriodIndex.dayofyear.html#pandas.PeriodIndex.dayofyear
    "pandas.PeriodIndex.dayofyear") | 一年中的序数日期。 |'
- en: '| [`PeriodIndex.day_of_year`](api/pandas.PeriodIndex.day_of_year.html#pandas.PeriodIndex.day_of_year
    "pandas.PeriodIndex.day_of_year") | The ordinal day of the year. |'
  id: totrans-253
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.day_of_year`](api/pandas.PeriodIndex.day_of_year.html#pandas.PeriodIndex.day_of_year
    "pandas.PeriodIndex.day_of_year") | 一年中的序数日期。 |'
- en: '| [`PeriodIndex.days_in_month`](api/pandas.PeriodIndex.days_in_month.html#pandas.PeriodIndex.days_in_month
    "pandas.PeriodIndex.days_in_month") | The number of days in the month. |'
  id: totrans-254
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.days_in_month`](api/pandas.PeriodIndex.days_in_month.html#pandas.PeriodIndex.days_in_month
    "pandas.PeriodIndex.days_in_month") | 一个月的天数。 |'
- en: '| [`PeriodIndex.daysinmonth`](api/pandas.PeriodIndex.daysinmonth.html#pandas.PeriodIndex.daysinmonth
    "pandas.PeriodIndex.daysinmonth") | The number of days in the month. |'
  id: totrans-255
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.daysinmonth`](api/pandas.PeriodIndex.daysinmonth.html#pandas.PeriodIndex.daysinmonth
    "pandas.PeriodIndex.daysinmonth") | 一个月的天数。 |'
- en: '| [`PeriodIndex.end_time`](api/pandas.PeriodIndex.end_time.html#pandas.PeriodIndex.end_time
    "pandas.PeriodIndex.end_time") | Get the Timestamp for the end of the period.
    |'
  id: totrans-256
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.end_time`](api/pandas.PeriodIndex.end_time.html#pandas.PeriodIndex.end_time
    "pandas.PeriodIndex.end_time") | 获取期间结束的时间戳。 |'
- en: '| [`PeriodIndex.freq`](api/pandas.PeriodIndex.freq.html#pandas.PeriodIndex.freq
    "pandas.PeriodIndex.freq") |  |'
  id: totrans-257
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.freq`](api/pandas.PeriodIndex.freq.html#pandas.PeriodIndex.freq
    "pandas.PeriodIndex.freq") |  |'
- en: '| [`PeriodIndex.freqstr`](api/pandas.PeriodIndex.freqstr.html#pandas.PeriodIndex.freqstr
    "pandas.PeriodIndex.freqstr") | Return the frequency object as a string if it''s
    set, otherwise None. |'
  id: totrans-258
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.freqstr`](api/pandas.PeriodIndex.freqstr.html#pandas.PeriodIndex.freqstr
    "pandas.PeriodIndex.freqstr") | 返回频率对象的字符串，如果设置了，则返回字符串，否则返回None。 |'
- en: '| [`PeriodIndex.hour`](api/pandas.PeriodIndex.hour.html#pandas.PeriodIndex.hour
    "pandas.PeriodIndex.hour") | The hour of the period. |'
  id: totrans-259
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.hour`](api/pandas.PeriodIndex.hour.html#pandas.PeriodIndex.hour
    "pandas.PeriodIndex.hour") | 期间的小时数。 |'
- en: '| [`PeriodIndex.is_leap_year`](api/pandas.PeriodIndex.is_leap_year.html#pandas.PeriodIndex.is_leap_year
    "pandas.PeriodIndex.is_leap_year") | Logical indicating if the date belongs to
    a leap year. |'
  id: totrans-260
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.is_leap_year`](api/pandas.PeriodIndex.is_leap_year.html#pandas.PeriodIndex.is_leap_year
    "pandas.PeriodIndex.is_leap_year") | 逻辑指示日期是否属于闰年。 |'
- en: '| [`PeriodIndex.minute`](api/pandas.PeriodIndex.minute.html#pandas.PeriodIndex.minute
    "pandas.PeriodIndex.minute") | The minute of the period. |'
  id: totrans-261
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.minute`](api/pandas.PeriodIndex.minute.html#pandas.PeriodIndex.minute
    "pandas.PeriodIndex.minute") | 期间的分钟数。 |'
- en: '| [`PeriodIndex.month`](api/pandas.PeriodIndex.month.html#pandas.PeriodIndex.month
    "pandas.PeriodIndex.month") | The month as January=1, December=12. |'
  id: totrans-262
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.month`](api/pandas.PeriodIndex.month.html#pandas.PeriodIndex.month
    "pandas.PeriodIndex.month") | 月份，一月为1，十二月为12。 |'
- en: '| [`PeriodIndex.quarter`](api/pandas.PeriodIndex.quarter.html#pandas.PeriodIndex.quarter
    "pandas.PeriodIndex.quarter") | The quarter of the date. |'
  id: totrans-263
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.quarter`](api/pandas.PeriodIndex.quarter.html#pandas.PeriodIndex.quarter
    "pandas.PeriodIndex.quarter") | 日期的季度。 |'
- en: '| [`PeriodIndex.qyear`](api/pandas.PeriodIndex.qyear.html#pandas.PeriodIndex.qyear
    "pandas.PeriodIndex.qyear") |  |'
  id: totrans-264
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.qyear`](api/pandas.PeriodIndex.qyear.html#pandas.PeriodIndex.qyear
    "pandas.PeriodIndex.qyear") |  |'
- en: '| [`PeriodIndex.second`](api/pandas.PeriodIndex.second.html#pandas.PeriodIndex.second
    "pandas.PeriodIndex.second") | The second of the period. |'
  id: totrans-265
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.second`](api/pandas.PeriodIndex.second.html#pandas.PeriodIndex.second
    "pandas.PeriodIndex.second") | 期间的秒数。 |'
- en: '| [`PeriodIndex.start_time`](api/pandas.PeriodIndex.start_time.html#pandas.PeriodIndex.start_time
    "pandas.PeriodIndex.start_time") | Get the Timestamp for the start of the period.
    |'
  id: totrans-266
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.start_time`](api/pandas.PeriodIndex.start_time.html#pandas.PeriodIndex.start_time
    "pandas.PeriodIndex.start_time") | 获取期间开始的时间戳。 |'
- en: '| [`PeriodIndex.week`](api/pandas.PeriodIndex.week.html#pandas.PeriodIndex.week
    "pandas.PeriodIndex.week") | The week ordinal of the year. |'
  id: totrans-267
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.week`](api/pandas.PeriodIndex.week.html#pandas.PeriodIndex.week
    "pandas.PeriodIndex.week") | 一年中的周序数。 |'
- en: '| [`PeriodIndex.weekday`](api/pandas.PeriodIndex.weekday.html#pandas.PeriodIndex.weekday
    "pandas.PeriodIndex.weekday") | The day of the week with Monday=0, Sunday=6. |'
  id: totrans-268
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.weekday`](api/pandas.PeriodIndex.weekday.html#pandas.PeriodIndex.weekday
    "pandas.PeriodIndex.weekday") | 一周中的日期，星期一=0，星期日=6。 |'
- en: '| [`PeriodIndex.weekofyear`](api/pandas.PeriodIndex.weekofyear.html#pandas.PeriodIndex.weekofyear
    "pandas.PeriodIndex.weekofyear") | The week ordinal of the year. |'
  id: totrans-269
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.weekofyear`](api/pandas.PeriodIndex.weekofyear.html#pandas.PeriodIndex.weekofyear
    "pandas.PeriodIndex.weekofyear") | 年份的周序数。 |'
- en: '| [`PeriodIndex.year`](api/pandas.PeriodIndex.year.html#pandas.PeriodIndex.year
    "pandas.PeriodIndex.year") | The year of the period. |'
  id: totrans-270
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.year`](api/pandas.PeriodIndex.year.html#pandas.PeriodIndex.year
    "pandas.PeriodIndex.year") | 该时期的年份。 |'
- en: Methods
  id: totrans-271
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`PeriodIndex.asfreq`](api/pandas.PeriodIndex.asfreq.html#pandas.PeriodIndex.asfreq
    "pandas.PeriodIndex.asfreq")([freq, how]) | Convert the PeriodArray to the specified
    frequency freq. |'
  id: totrans-272
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.asfreq`](api/pandas.PeriodIndex.asfreq.html#pandas.PeriodIndex.asfreq
    "pandas.PeriodIndex.asfreq")([freq, how]) | 将PeriodArray转换为指定频率freq。 |'
- en: '| [`PeriodIndex.strftime`](api/pandas.PeriodIndex.strftime.html#pandas.PeriodIndex.strftime
    "pandas.PeriodIndex.strftime")(*args, **kwargs) | Convert to Index using specified
    date_format. |'
  id: totrans-273
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.strftime`](api/pandas.PeriodIndex.strftime.html#pandas.PeriodIndex.strftime
    "pandas.PeriodIndex.strftime")(*args, **kwargs) | 使用指定的日期格式转换为索引。 |'
- en: '| [`PeriodIndex.to_timestamp`](api/pandas.PeriodIndex.to_timestamp.html#pandas.PeriodIndex.to_timestamp
    "pandas.PeriodIndex.to_timestamp")([freq, how]) | Cast to DatetimeArray/Index.
    |'
  id: totrans-274
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.to_timestamp`](api/pandas.PeriodIndex.to_timestamp.html#pandas.PeriodIndex.to_timestamp
    "pandas.PeriodIndex.to_timestamp")([freq, how]) | 转换为DatetimeArray/Index。 |'
- en: '| [`PeriodIndex.from_fields`](api/pandas.PeriodIndex.from_fields.html#pandas.PeriodIndex.from_fields
    "pandas.PeriodIndex.from_fields")(*[, year, quarter, ...]) |  |'
  id: totrans-275
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.from_fields`](api/pandas.PeriodIndex.from_fields.html#pandas.PeriodIndex.from_fields")(*[, year, quarter, ...])
    |  |'
- en: '| [`PeriodIndex.from_ordinals`](api/pandas.PeriodIndex.from_ordinals.html#pandas.PeriodIndex.from_ordinals
    "pandas.PeriodIndex.from_ordinals")(ordinals, *, freq) |  |'
  id: totrans-276
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.from_ordinals`](api/pandas.PeriodIndex.from_ordinals.html#pandas.PeriodIndex.from_ordinals
    "pandas.PeriodIndex.from_ordinals")(ordinals, *, freq) |  |'
- en: Index
  id: totrans-277
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 索引
- en: '**Many of these methods or variants thereof are available on the objects that
    contain an index (Series/DataFrame) and those should most likely be used before
    calling these methods directly.**'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '**这些方法或其变体多数可用于包含索引的对象（Series/DataFrame），在直接调用这些方法之前，应该首选使用这些对象。**'
- en: '| [`Index`](api/pandas.Index.html#pandas.Index "pandas.Index")([data, dtype, copy, name, tupleize_cols])
    | Immutable sequence used for indexing and alignment. |'
  id: totrans-279
  prefs: []
  type: TYPE_TB
  zh: '| [`Index`](api/pandas.Index.html#pandas.Index "pandas.Index")([data, dtype, copy, name, tupleize_cols])
    | 用于索引和对齐的不可变序列。 |'
- en: Properties
  id: totrans-280
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`Index.values`](api/pandas.Index.values.html#pandas.Index.values "pandas.Index.values")
    | Return an array representing the data in the Index. |'
  id: totrans-281
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.values`](api/pandas.Index.values.html#pandas.Index.values "pandas.Index.values")
    | 返回表示索引中数据的数组。 |'
- en: '| [`Index.is_monotonic_increasing`](api/pandas.Index.is_monotonic_increasing.html#pandas.Index.is_monotonic_increasing
    "pandas.Index.is_monotonic_increasing") | Return a boolean if the values are equal
    or increasing. |'
  id: totrans-282
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.is_monotonic_increasing`](api/pandas.Index.is_monotonic_increasing.html#pandas.Index.is_monotonic_increasing
    "pandas.Index.is_monotonic_increasing") | 如果值相等或递增，则返回布尔值。 |'
- en: '| [`Index.is_monotonic_decreasing`](api/pandas.Index.is_monotonic_decreasing.html#pandas.Index.is_monotonic_decreasing
    "pandas.Index.is_monotonic_decreasing") | Return a boolean if the values are equal
    or decreasing. |'
  id: totrans-283
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.is_monotonic_decreasing`](api/pandas.Index.is_monotonic_decreasing.html#pandas.Index.is_monotonic_decreasing
    "pandas.Index.is_monotonic_decreasing") | 如果值相等或递减，则返回布尔值。 |'
- en: '| [`Index.is_unique`](api/pandas.Index.is_unique.html#pandas.Index.is_unique
    "pandas.Index.is_unique") | Return if the index has unique values. |'
  id: totrans-284
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.is_unique`](api/pandas.Index.is_unique.html#pandas.Index.is_unique
    "pandas.Index.is_unique") | 返回索引是否具有唯一值。 |'
- en: '| [`Index.has_duplicates`](api/pandas.Index.has_duplicates.html#pandas.Index.has_duplicates
    "pandas.Index.has_duplicates") | Check if the Index has duplicate values. |'
  id: totrans-285
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.has_duplicates`](api/pandas.Index.has_duplicates.html#pandas.Index.has_duplicates
    "pandas.Index.has_duplicates") | 检查索引是否具有重复值。 |'
- en: '| [`Index.hasnans`](api/pandas.Index.hasnans.html#pandas.Index.hasnans "pandas.Index.hasnans")
    | Return True if there are any NaNs. |'
  id: totrans-286
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.hasnans`](api/pandas.Index.hasnans.html#pandas.Index.hasnans "pandas.Index.hasnans")
    | 如果存在任何NaN，则返回True。 |'
- en: '| [`Index.dtype`](api/pandas.Index.dtype.html#pandas.Index.dtype "pandas.Index.dtype")
    | Return the dtype object of the underlying data. |'
  id: totrans-287
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.dtype`](api/pandas.Index.dtype.html#pandas.Index.dtype "pandas.Index.dtype")
    | 返回基础数据的dtype对象。 |'
- en: '| [`Index.inferred_type`](api/pandas.Index.inferred_type.html#pandas.Index.inferred_type
    "pandas.Index.inferred_type") | Return a string of the type inferred from the
    values. |'
  id: totrans-288
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.inferred_type`](api/pandas.Index.inferred_type.html#pandas.Index.inferred_type
    "pandas.Index.inferred_type") | 返回从值推断的类型的字符串。 |'
- en: '| [`Index.shape`](api/pandas.Index.shape.html#pandas.Index.shape "pandas.Index.shape")
    | Return a tuple of the shape of the underlying data. |'
  id: totrans-289
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.shape`](api/pandas.Index.shape.html#pandas.Index.shape "pandas.Index.shape")
    | 返回底层数据的形状的元组。 |'
- en: '| [`Index.name`](api/pandas.Index.name.html#pandas.Index.name "pandas.Index.name")
    | Return Index or MultiIndex name. |'
  id: totrans-290
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.name`](api/pandas.Index.name.html#pandas.Index.name "pandas.Index.name")
    | 返回 Index 或 MultiIndex 的名称。 |'
- en: '| [`Index.names`](api/pandas.Index.names.html#pandas.Index.names "pandas.Index.names")
    |  |'
  id: totrans-291
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.names`](api/pandas.Index.names.html#pandas.Index.names "pandas.Index.names")
    |  |'
- en: '| [`Index.nbytes`](api/pandas.Index.nbytes.html#pandas.Index.nbytes "pandas.Index.nbytes")
    | Return the number of bytes in the underlying data. |'
  id: totrans-292
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.nbytes`](api/pandas.Index.nbytes.html#pandas.Index.nbytes "pandas.Index.nbytes")
    | 返回底层数据的字节数。 |'
- en: '| [`Index.ndim`](api/pandas.Index.ndim.html#pandas.Index.ndim "pandas.Index.ndim")
    | Number of dimensions of the underlying data, by definition 1. |'
  id: totrans-293
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.ndim`](api/pandas.Index.ndim.html#pandas.Index.ndim "pandas.Index.ndim")
    | 底层数据的维数，按定义为 1。 |'
- en: '| [`Index.size`](api/pandas.Index.size.html#pandas.Index.size "pandas.Index.size")
    | Return the number of elements in the underlying data. |'
  id: totrans-294
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.size`](api/pandas.Index.size.html#pandas.Index.size "pandas.Index.size")
    | 返回底层数据中的元素数量。 |'
- en: '| [`Index.empty`](api/pandas.Index.empty.html#pandas.Index.empty "pandas.Index.empty")
    |  |'
  id: totrans-295
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.empty`](api/pandas.Index.empty.html#pandas.Index.empty "pandas.Index.empty")
    |  |'
- en: '| [`Index.T`](api/pandas.Index.T.html#pandas.Index.T "pandas.Index.T") | Return
    the transpose, which is by definition self. |'
  id: totrans-296
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.T`](api/pandas.Index.T.html#pandas.Index.T "pandas.Index.T") | 返回转置，根据定义为自身。
    |'
- en: '| [`Index.memory_usage`](api/pandas.Index.memory_usage.html#pandas.Index.memory_usage
    "pandas.Index.memory_usage")([deep]) | Memory usage of the values. |'
  id: totrans-297
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.memory_usage`](api/pandas.Index.memory_usage.html#pandas.Index.memory_usage
    "pandas.Index.memory_usage")([deep]) | 值的内存使用情况。 |'
- en: Modifying and computations
  id: totrans-298
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 修改和计算
- en: '| [`Index.all`](api/pandas.Index.all.html#pandas.Index.all "pandas.Index.all")(*args, **kwargs)
    | Return whether all elements are Truthy. |'
  id: totrans-299
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.all`](api/pandas.Index.all.html#pandas.Index.all "pandas.Index.all")(*args, **kwargs)
    | 返回是否所有元素都为 Truthy。 |'
- en: '| [`Index.any`](api/pandas.Index.any.html#pandas.Index.any "pandas.Index.any")(*args, **kwargs)
    | Return whether any element is Truthy. |'
  id: totrans-300
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.any`](api/pandas.Index.any.html#pandas.Index.any "pandas.Index.any")(*args, **kwargs)
    | 返回是否存在任何 Truthy 元素。 |'
- en: '| [`Index.argmin`](api/pandas.Index.argmin.html#pandas.Index.argmin "pandas.Index.argmin")([axis, skipna])
    | Return int position of the smallest value in the Series. |'
  id: totrans-301
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.argmin`](api/pandas.Index.argmin.html#pandas.Index.argmin "pandas.Index.argmin")([axis, skipna])
    | 返回 Series 中最小值的整数位置。 |'
- en: '| [`Index.argmax`](api/pandas.Index.argmax.html#pandas.Index.argmax "pandas.Index.argmax")([axis, skipna])
    | Return int position of the largest value in the Series. |'
  id: totrans-302
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.argmax`](api/pandas.Index.argmax.html#pandas.Index.argmax "pandas.Index.argmax")([axis, skipna])
    | 返回 Series 中最大值的整数位置。 |'
- en: '| [`Index.copy`](api/pandas.Index.copy.html#pandas.Index.copy "pandas.Index.copy")([name, deep])
    | Make a copy of this object. |'
  id: totrans-303
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.copy`](api/pandas.Index.copy.html#pandas.Index.copy "pandas.Index.copy")([name, deep])
    | 复制此对象。 |'
- en: '| [`Index.delete`](api/pandas.Index.delete.html#pandas.Index.delete "pandas.Index.delete")(loc)
    | Make new Index with passed location(-s) deleted. |'
  id: totrans-304
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.delete`](api/pandas.Index.delete.html#pandas.Index.delete "pandas.Index.delete")(loc)
    | 使用传递的位置删除新的 Index。 |'
- en: '| [`Index.drop`](api/pandas.Index.drop.html#pandas.Index.drop "pandas.Index.drop")(labels[, errors])
    | Make new Index with passed list of labels deleted. |'
  id: totrans-305
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.drop`](api/pandas.Index.drop.html#pandas.Index.drop "pandas.Index.drop")(labels[, errors])
    | 使用传递的标签列表创建新的 Index。 |'
- en: '| [`Index.drop_duplicates`](api/pandas.Index.drop_duplicates.html#pandas.Index.drop_duplicates
    "pandas.Index.drop_duplicates")(*[, keep]) | Return Index with duplicate values
    removed. |'
  id: totrans-306
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.drop_duplicates`](api/pandas.Index.drop_duplicates.html#pandas.Index.drop_duplicates
    "pandas.Index.drop_duplicates")(*[, keep]) | 返回删除重复值的 Index。 |'
- en: '| [`Index.duplicated`](api/pandas.Index.duplicated.html#pandas.Index.duplicated
    "pandas.Index.duplicated")([keep]) | Indicate duplicate index values. |'
  id: totrans-307
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.duplicated`](api/pandas.Index.duplicated.html#pandas.Index.duplicated
    "pandas.Index.duplicated")([keep]) | 指示重复的索引值。 |'
- en: '| [`Index.equals`](api/pandas.Index.equals.html#pandas.Index.equals "pandas.Index.equals")(other)
    | Determine if two Index object are equal. |'
  id: totrans-308
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.equals`](api/pandas.Index.equals.html#pandas.Index.equals "pandas.Index.equals")(other)
    | 确定两个 Index 对象是否相等。 |'
- en: '| [`Index.factorize`](api/pandas.Index.factorize.html#pandas.Index.factorize
    "pandas.Index.factorize")([sort, use_na_sentinel]) | Encode the object as an enumerated
    type or categorical variable. |'
  id: totrans-309
  prefs: []
  type: TYPE_TB
  zh: '[`Index.factorize`](api/pandas.Index.factorize.html#pandas.Index.factorize
    "pandas.Index.factorize")([sort, use_na_sentinel]) | 将对象编码为枚举类型或分类变量。'
- en: '| [`Index.identical`](api/pandas.Index.identical.html#pandas.Index.identical
    "pandas.Index.identical")(other) | Similar to equals, but checks that object attributes
    and types are also equal. |'
  id: totrans-310
  prefs: []
  type: TYPE_TB
  zh: '[`Index.identical`](api/pandas.Index.identical.html#pandas.Index.identical
    "pandas.Index.identical")(other) | 类似于 equals，但检查对象属性和类型也相等。'
- en: '| [`Index.insert`](api/pandas.Index.insert.html#pandas.Index.insert "pandas.Index.insert")(loc, item)
    | Make new Index inserting new item at location. |'
  id: totrans-311
  prefs: []
  type: TYPE_TB
  zh: '[`Index.insert`](api/pandas.Index.insert.html#pandas.Index.insert "pandas.Index.insert")(loc, item)
    | 在指定位置插入新项，生成新索引。'
- en: '| [`Index.is_`](api/pandas.Index.is_.html#pandas.Index.is_ "pandas.Index.is_")(other)
    | More flexible, faster check like `is` but that works through views. |'
  id: totrans-312
  prefs: []
  type: TYPE_TB
  zh: '[`Index.is_`](api/pandas.Index.is_.html#pandas.Index.is_ "pandas.Index.is_")(other)
    | 更灵活、更快速的检查，类似于`is`但可以通过视图操作。'
- en: '| [`Index.is_boolean`](api/pandas.Index.is_boolean.html#pandas.Index.is_boolean
    "pandas.Index.is_boolean")() | (DEPRECATED) Check if the Index only consists of
    booleans. |'
  id: totrans-313
  prefs: []
  type: TYPE_TB
  zh: '[`Index.is_boolean`](api/pandas.Index.is_boolean.html#pandas.Index.is_boolean
    "pandas.Index.is_boolean")() | (已弃用) 检查索引是否仅包含布尔值。'
- en: '| [`Index.is_categorical`](api/pandas.Index.is_categorical.html#pandas.Index.is_categorical
    "pandas.Index.is_categorical")() | (DEPRECATED) Check if the Index holds categorical
    data. |'
  id: totrans-314
  prefs: []
  type: TYPE_TB
  zh: '[`Index.is_categorical`](api/pandas.Index.is_categorical.html#pandas.Index.is_categorical
    "pandas.Index.is_categorical")() | (已弃用) 检查索引是否持有分类数据。'
- en: '| [`Index.is_floating`](api/pandas.Index.is_floating.html#pandas.Index.is_floating
    "pandas.Index.is_floating")() | (DEPRECATED) Check if the Index is a floating
    type. |'
  id: totrans-315
  prefs: []
  type: TYPE_TB
  zh: '[`Index.is_floating`](api/pandas.Index.is_floating.html#pandas.Index.is_floating
    "pandas.Index.is_floating")() | (已弃用) 检查索引是否为浮点类型。'
- en: '| [`Index.is_integer`](api/pandas.Index.is_integer.html#pandas.Index.is_integer
    "pandas.Index.is_integer")() | (DEPRECATED) Check if the Index only consists of
    integers. |'
  id: totrans-316
  prefs: []
  type: TYPE_TB
  zh: '[`Index.is_integer`](api/pandas.Index.is_integer.html#pandas.Index.is_integer
    "pandas.Index.is_integer")() | (已弃用) 检查索引是否仅由整数组成。'
- en: '| [`Index.is_interval`](api/pandas.Index.is_interval.html#pandas.Index.is_interval
    "pandas.Index.is_interval")() | (DEPRECATED) Check if the Index holds Interval
    objects. |'
  id: totrans-317
  prefs: []
  type: TYPE_TB
  zh: '[`Index.is_interval`](api/pandas.Index.is_interval.html#pandas.Index.is_interval
    "pandas.Index.is_interval")() | (已弃用) 检查索引是否持有 Interval 对象。'
- en: '| [`Index.is_numeric`](api/pandas.Index.is_numeric.html#pandas.Index.is_numeric
    "pandas.Index.is_numeric")() | (DEPRECATED) Check if the Index only consists of
    numeric data. |'
  id: totrans-318
  prefs: []
  type: TYPE_TB
  zh: '[`Index.is_numeric`](api/pandas.Index.is_numeric.html#pandas.Index.is_numeric
    "pandas.Index.is_numeric")() | (已弃用) 检查索引是否仅包含数值数据。'
- en: '| [`Index.is_object`](api/pandas.Index.is_object.html#pandas.Index.is_object
    "pandas.Index.is_object")() | (DEPRECATED) Check if the Index is of the object
    dtype. |'
  id: totrans-319
  prefs: []
  type: TYPE_TB
  zh: '[`Index.is_object`](api/pandas.Index.is_object.html#pandas.Index.is_object
    "pandas.Index.is_object")() | (已弃用) 检查索引是否为对象 dtype。'
- en: '| [`Index.min`](api/pandas.Index.min.html#pandas.Index.min "pandas.Index.min")([axis, skipna])
    | Return the minimum value of the Index. |'
  id: totrans-320
  prefs: []
  type: TYPE_TB
  zh: '[`Index.min`](api/pandas.Index.min.html#pandas.Index.min "pandas.Index.min")([axis, skipna])
    | 返回索引的最小值。'
- en: '| [`Index.max`](api/pandas.Index.max.html#pandas.Index.max "pandas.Index.max")([axis, skipna])
    | Return the maximum value of the Index. |'
  id: totrans-321
  prefs: []
  type: TYPE_TB
  zh: '[`Index.max`](api/pandas.Index.max.html#pandas.Index.max "pandas.Index.max")([axis, skipna])
    | 返回索引的最大值。'
- en: '| [`Index.reindex`](api/pandas.Index.reindex.html#pandas.Index.reindex "pandas.Index.reindex")(target[, method, level, ...])
    | Create index with target''s values. |'
  id: totrans-322
  prefs: []
  type: TYPE_TB
  zh: '[`Index.reindex`](api/pandas.Index.reindex.html#pandas.Index.reindex "pandas.Index.reindex")(target[, method, level, ...])
    | 使用目标的值创建索引。'
- en: '| [`Index.rename`](api/pandas.Index.rename.html#pandas.Index.rename "pandas.Index.rename")(name, *[, inplace])
    | Alter Index or MultiIndex name. |'
  id: totrans-323
  prefs: []
  type: TYPE_TB
  zh: '[`Index.rename`](api/pandas.Index.rename.html#pandas.Index.rename "pandas.Index.rename")(name, *[, inplace])
    | 更改索引或多级索引的名称。'
- en: '| [`Index.repeat`](api/pandas.Index.repeat.html#pandas.Index.repeat "pandas.Index.repeat")(repeats[, axis])
    | Repeat elements of a Index. |'
  id: totrans-324
  prefs: []
  type: TYPE_TB
  zh: '[`Index.repeat`](api/pandas.Index.repeat.html#pandas.Index.repeat "pandas.Index.repeat")(repeats[, axis])
    | 重复索引的元素。'
- en: '| [`Index.where`](api/pandas.Index.where.html#pandas.Index.where "pandas.Index.where")(cond[, other])
    | Replace values where the condition is False. |'
  id: totrans-325
  prefs: []
  type: TYPE_TB
  zh: '[`Index.where`](api/pandas.Index.where.html#pandas.Index.where "pandas.Index.where")(cond[, other])
    | 替换条件为 False 的值。'
- en: '| [`Index.take`](api/pandas.Index.take.html#pandas.Index.take "pandas.Index.take")(indices[, axis, allow_fill, ...])
    | Return a new Index of the values selected by the indices. |'
  id: totrans-326
  prefs: []
  type: TYPE_TB
  zh: '[`Index.take`](api/pandas.Index.take.html#pandas.Index.take "pandas.Index.take")(indices[, axis, allow_fill, ...])
    | 返回由索引选定的值组成的新索引。'
- en: '| [`Index.putmask`](api/pandas.Index.putmask.html#pandas.Index.putmask "pandas.Index.putmask")(mask, value)
    | Return a new Index of the values set with the mask. |'
  id: totrans-327
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.putmask`](api/pandas.Index.putmask.html#pandas.Index.putmask "pandas.Index.putmask")
    | 返回使用掩码设置的新值索引。'
- en: '| [`Index.unique`](api/pandas.Index.unique.html#pandas.Index.unique "pandas.Index.unique")([level])
    | Return unique values in the index. |'
  id: totrans-328
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.unique`](api/pandas.Index.unique.html#pandas.Index.unique "pandas.Index.unique")
    | 返回索引中的唯一值。'
- en: '| [`Index.nunique`](api/pandas.Index.nunique.html#pandas.Index.nunique "pandas.Index.nunique")([dropna])
    | Return number of unique elements in the object. |'
  id: totrans-329
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.nunique`](api/pandas.Index.nunique.html#pandas.Index.nunique "pandas.Index.nunique")
    | 返回对象中唯一元素的数量。'
- en: '| [`Index.value_counts`](api/pandas.Index.value_counts.html#pandas.Index.value_counts
    "pandas.Index.value_counts")([normalize, sort, ...]) | Return a Series containing
    counts of unique values. |'
  id: totrans-330
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.value_counts`](api/pandas.Index.value_counts.html#pandas.Index.value_counts
    "pandas.Index.value_counts") | 返回包含唯一值计数的 Series。'
- en: Compatibility with MultiIndex
  id: totrans-331
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 与 MultiIndex 兼容性
- en: '| [`Index.set_names`](api/pandas.Index.set_names.html#pandas.Index.set_names
    "pandas.Index.set_names")(names, *[, level, inplace]) | Set Index or MultiIndex
    name. |'
  id: totrans-332
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.set_names`](api/pandas.Index.set_names.html#pandas.Index.set_names
    "pandas.Index.set_names") | 设置索引或 MultiIndex 名称。'
- en: '| [`Index.droplevel`](api/pandas.Index.droplevel.html#pandas.Index.droplevel
    "pandas.Index.droplevel")([level]) | Return index with requested level(s) removed.
    |'
  id: totrans-333
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.droplevel`](api/pandas.Index.droplevel.html#pandas.Index.droplevel
    "pandas.Index.droplevel") | 返回删除了请求级别的索引。'
- en: Missing values
  id: totrans-334
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缺失值
- en: '| [`Index.fillna`](api/pandas.Index.fillna.html#pandas.Index.fillna "pandas.Index.fillna")([value, downcast])
    | Fill NA/NaN values with the specified value. |'
  id: totrans-335
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.fillna`](api/pandas.Index.fillna.html#pandas.Index.fillna "pandas.Index.fillna")
    | 用指定值填充 NA/NaN 值。'
- en: '| [`Index.dropna`](api/pandas.Index.dropna.html#pandas.Index.dropna "pandas.Index.dropna")([how])
    | Return Index without NA/NaN values. |'
  id: totrans-336
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.dropna`](api/pandas.Index.dropna.html#pandas.Index.dropna "pandas.Index.dropna")
    | 返回没有 NA/NaN 值的索引。'
- en: '| [`Index.isna`](api/pandas.Index.isna.html#pandas.Index.isna "pandas.Index.isna")()
    | Detect missing values. |'
  id: totrans-337
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.isna`](api/pandas.Index.isna.html#pandas.Index.isna "pandas.Index.isna")
    | 检测缺失值。'
- en: '| [`Index.notna`](api/pandas.Index.notna.html#pandas.Index.notna "pandas.Index.notna")()
    | Detect existing (non-missing) values. |'
  id: totrans-338
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.notna`](api/pandas.Index.notna.html#pandas.Index.notna "pandas.Index.notna")
    | 检测存在（非缺失）值。'
- en: Conversion
  id: totrans-339
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 转换
- en: '| [`Index.astype`](api/pandas.Index.astype.html#pandas.Index.astype "pandas.Index.astype")(dtype[, copy])
    | Create an Index with values cast to dtypes. |'
  id: totrans-340
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.astype`](api/pandas.Index.astype.html#pandas.Index.astype "pandas.Index.astype")
    | 创建一个将值强制转换为 dtypes 的索引。'
- en: '| [`Index.item`](api/pandas.Index.item.html#pandas.Index.item "pandas.Index.item")()
    | Return the first element of the underlying data as a Python scalar. |'
  id: totrans-341
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.item`](api/pandas.Index.item.html#pandas.Index.item "pandas.Index.item")
    | 以 Python 标量形式返回底层数据的第一个元素。'
- en: '| [`Index.map`](api/pandas.Index.map.html#pandas.Index.map "pandas.Index.map")(mapper[, na_action])
    | Map values using an input mapping or function. |'
  id: totrans-342
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.map`](api/pandas.Index.map.html#pandas.Index.map "pandas.Index.map")
    | 使用输入映射或函数映射值。'
- en: '| [`Index.ravel`](api/pandas.Index.ravel.html#pandas.Index.ravel "pandas.Index.ravel")([order])
    | Return a view on self. |'
  id: totrans-343
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.ravel`](api/pandas.Index.ravel.html#pandas.Index.ravel "pandas.Index.ravel")
    | 返回自身的视图。'
- en: '| [`Index.to_list`](api/pandas.Index.to_list.html#pandas.Index.to_list "pandas.Index.to_list")()
    | Return a list of the values. |'
  id: totrans-344
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.to_list`](api/pandas.Index.to_list.html#pandas.Index.to_list "pandas.Index.to_list")
    | 返回值的列表。'
- en: '| [`Index.to_series`](api/pandas.Index.to_series.html#pandas.Index.to_series
    "pandas.Index.to_series")([index, name]) | Create a Series with both index and
    values equal to the index keys. |'
  id: totrans-345
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.to_series`](api/pandas.Index.to_series.html#pandas.Index.to_series
    "pandas.Index.to_series") | 创建一个索引和值都等于索引键的 Series。'
- en: '| [`Index.to_frame`](api/pandas.Index.to_frame.html#pandas.Index.to_frame "pandas.Index.to_frame")([index, name])
    | Create a DataFrame with a column containing the Index. |'
  id: totrans-346
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.to_frame`](api/pandas.Index.to_frame.html#pandas.Index.to_frame "pandas.Index.to_frame")
    | 创建一个包含索引的列的 DataFrame。'
- en: '| [`Index.view`](api/pandas.Index.view.html#pandas.Index.view "pandas.Index.view")([cls])
    |  |'
  id: totrans-347
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.view`](api/pandas.Index.view.html#pandas.Index.view "pandas.Index.view")
    |  |'
- en: Sorting
  id: totrans-348
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 排序
- en: '| [`Index.argsort`](api/pandas.Index.argsort.html#pandas.Index.argsort "pandas.Index.argsort")(*args, **kwargs)
    | Return the integer indices that would sort the index. |'
  id: totrans-349
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.argsort`](api/pandas.Index.argsort.html#pandas.Index.argsort "pandas.Index.argsort")
    | 返回对索引进行排序的整数索引。'
- en: '| [`Index.searchsorted`](api/pandas.Index.searchsorted.html#pandas.Index.searchsorted
    "pandas.Index.searchsorted")(value[, side, sorter]) | Find indices where elements
    should be inserted to maintain order. |'
  id: totrans-350
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.searchsorted`](api/pandas.Index.searchsorted.html#pandas.Index.searchsorted
    "pandas.Index.searchsorted")(value[, side, sorter]) | 查找元素应插入以保持顺序的索引。'
- en: '| [`Index.sort_values`](api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values")(*[, return_indexer, ...]) | Return a sorted copy of
    the index. |'
  id: totrans-351
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.sort_values`](api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values")(*[, return_indexer, ...]) | 返回索引的排序副本。'
- en: Time-specific operations
  id: totrans-352
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 时间特定操作
- en: '| [`Index.shift`](api/pandas.Index.shift.html#pandas.Index.shift "pandas.Index.shift")([periods, freq])
    | Shift index by desired number of time frequency increments. |'
  id: totrans-353
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.shift`](api/pandas.Index.shift.html#pandas.Index.shift "pandas.Index.shift")([periods, freq])
    | 将索引按所需的时间频率增量移动。'
- en: Combining / joining / set operations
  id: totrans-354
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 组合/连接/集合操作
- en: '| [`Index.append`](api/pandas.Index.append.html#pandas.Index.append "pandas.Index.append")(other)
    | Append a collection of Index options together. |'
  id: totrans-355
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.append`](api/pandas.Index.append.html#pandas.Index.append "pandas.Index.append")(other)
    | 将一系列索引选项追加在一起。'
- en: '| [`Index.join`](api/pandas.Index.join.html#pandas.Index.join "pandas.Index.join")(other, *[, how, level, ...])
    | Compute join_index and indexers to conform data structures to the new index.
    |'
  id: totrans-356
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.join`](api/pandas.Index.join.html#pandas.Index.join "pandas.Index.join")(other, *[, how, level, ...])
    | 计算连接数据结构到新索引的join_index和索引器。'
- en: '| [`Index.intersection`](api/pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection")(other[, sort]) | Form the intersection of two Index
    objects. |'
  id: totrans-357
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.intersection`](api/pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection")(other[, sort]) | 形成两个索引对象的交集。'
- en: '| [`Index.union`](api/pandas.Index.union.html#pandas.Index.union "pandas.Index.union")(other[, sort])
    | Form the union of two Index objects. |'
  id: totrans-358
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.union`](api/pandas.Index.union.html#pandas.Index.union "pandas.Index.union")(other[, sort])
    | 形成两个索引对象的并集。'
- en: '| [`Index.difference`](api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference")(other[, sort]) | Return a new Index with elements of
    index not in other. |'
  id: totrans-359
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.difference`](api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference")(other[, sort]) | 返回一个新的索引，其中包含不在其他索引中的元素。'
- en: '| [`Index.symmetric_difference`](api/pandas.Index.symmetric_difference.html#pandas.Index.symmetric_difference
    "pandas.Index.symmetric_difference")(other[, ...]) | Compute the symmetric difference
    of two Index objects. |'
  id: totrans-360
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.symmetric_difference`](api/pandas.Index.symmetric_difference.html#pandas.Index.symmetric_difference
    "pandas.Index.symmetric_difference")(other[, ...]) | 计算两个索引对象的对称差。'
- en: Selecting
  id: totrans-361
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择
- en: '| [`Index.asof`](api/pandas.Index.asof.html#pandas.Index.asof "pandas.Index.asof")(label)
    | Return the label from the index, or, if not present, the previous one. |'
  id: totrans-362
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.asof`](api/pandas.Index.asof.html#pandas.Index.asof "pandas.Index.asof")(label)
    | 返回索引中的标签，如果不存在，则返回前一个。'
- en: '| [`Index.asof_locs`](api/pandas.Index.asof_locs.html#pandas.Index.asof_locs
    "pandas.Index.asof_locs")(where, mask) | Return the locations (indices) of labels
    in the index. |'
  id: totrans-363
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.asof_locs`](api/pandas.Index.asof_locs.html#pandas.Index.asof_locs
    "pandas.Index.asof_locs")(where, mask) | 返回索引中标签的位置（索引）。'
- en: '| [`Index.get_indexer`](api/pandas.Index.get_indexer.html#pandas.Index.get_indexer
    "pandas.Index.get_indexer")(target[, method, limit, ...]) | Compute indexer and
    mask for new index given the current index. |'
  id: totrans-364
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.get_indexer`](api/pandas.Index.get_indexer.html#pandas.Index.get_indexer
    "pandas.Index.get_indexer")(target[, method, limit, ...]) | 计算给定当前索引的新索引的索引器和掩码。'
- en: '| [`Index.get_indexer_for`](api/pandas.Index.get_indexer_for.html#pandas.Index.get_indexer_for
    "pandas.Index.get_indexer_for")(target) | Guaranteed return of an indexer even
    when non-unique. |'
  id: totrans-365
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.get_indexer_for`](api/pandas.Index.get_indexer_for.html#pandas.Index.get_indexer_for
    "pandas.Index.get_indexer_for")(target) | 即使是非唯一的，也保证返回一个索引器。'
- en: '| [`Index.get_indexer_non_unique`](api/pandas.Index.get_indexer_non_unique.html#pandas.Index.get_indexer_non_unique
    "pandas.Index.get_indexer_non_unique")(target) | Compute indexer and mask for
    new index given the current index. |'
  id: totrans-366
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.get_indexer_non_unique`](api/pandas.Index.get_indexer_non_unique.html#pandas.Index.get_indexer_non_unique
    "pandas.Index.get_indexer_non_unique")(target) | 计算给定当前索引的新索引的索引器和掩码。'
- en: '| [`Index.get_level_values`](api/pandas.Index.get_level_values.html#pandas.Index.get_level_values
    "pandas.Index.get_level_values")(level) | Return an Index of values for requested
    level. |'
  id: totrans-367
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.get_level_values`](api/pandas.Index.get_level_values.html#pandas.Index.get_level_values
    "pandas.Index.get_level_values")(level) | 返回请求级别的值索引。'
- en: '| [`Index.get_loc`](api/pandas.Index.get_loc.html#pandas.Index.get_loc "pandas.Index.get_loc")(key)
    | Get integer location, slice or boolean mask for requested label. |'
  id: totrans-368
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.get_loc`](api/pandas.Index.get_loc.html#pandas.Index.get_loc "pandas.Index.get_loc")(key)
    | 获取请求标签的整数位置、切片或布尔掩码。 |'
- en: '| [`Index.get_slice_bound`](api/pandas.Index.get_slice_bound.html#pandas.Index.get_slice_bound
    "pandas.Index.get_slice_bound")(label, side) | Calculate slice bound that corresponds
    to given label. |'
  id: totrans-369
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.get_slice_bound`](api/pandas.Index.get_slice_bound.html#pandas.Index.get_slice_bound
    "pandas.Index.get_slice_bound")(label, side) | 计算与给定标签对应的切片边界。 |'
- en: '| [`Index.isin`](api/pandas.Index.isin.html#pandas.Index.isin "pandas.Index.isin")(values[, level])
    | Return a boolean array where the index values are in values. |'
  id: totrans-370
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.isin`](api/pandas.Index.isin.html#pandas.Index.isin "pandas.Index.isin")(values[, level])
    | 返回一个布尔数组，其中索引值在给定的values中。 |'
- en: '| [`Index.slice_indexer`](api/pandas.Index.slice_indexer.html#pandas.Index.slice_indexer
    "pandas.Index.slice_indexer")([start, end, step]) | Compute the slice indexer
    for input labels and step. |'
  id: totrans-371
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.slice_indexer`](api/pandas.Index.slice_indexer.html#pandas.Index.slice_indexer
    "pandas.Index.slice_indexer")([start, end, step]) | 计算输入标签和步长的切片索引器。 |'
- en: '| [`Index.slice_locs`](api/pandas.Index.slice_locs.html#pandas.Index.slice_locs
    "pandas.Index.slice_locs")([start, end, step]) | Compute slice locations for input
    labels. |'
  id: totrans-372
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.slice_locs`](api/pandas.Index.slice_locs.html#pandas.Index.slice_locs")([start, end, step])
    | 计算输入标签的切片位置。 |'
- en: Properties
  id: totrans-373
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`Index.values`](api/pandas.Index.values.html#pandas.Index.values "pandas.Index.values")
    | Return an array representing the data in the Index. |'
  id: totrans-374
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.values`](api/pandas.Index.values.html#pandas.Index.values "pandas.Index.values")
    | 返回表示索引中数据的数组。 |'
- en: '| [`Index.is_monotonic_increasing`](api/pandas.Index.is_monotonic_increasing.html#pandas.Index.is_monotonic_increasing
    "pandas.Index.is_monotonic_increasing") | Return a boolean if the values are equal
    or increasing. |'
  id: totrans-375
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.is_monotonic_increasing`](api/pandas.Index.is_monotonic_increasing.html#pandas.Index.is_monotonic_increasing
    "pandas.Index.is_monotonic_increasing") | 如果值相等或递增，则返回布尔值。 |'
- en: '| [`Index.is_monotonic_decreasing`](api/pandas.Index.is_monotonic_decreasing.html#pandas.Index.is_monotonic_decreasing
    "pandas.Index.is_monotonic_decreasing") | Return a boolean if the values are equal
    or decreasing. |'
  id: totrans-376
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.is_monotonic_decreasing`](api/pandas.Index.is_monotonic_decreasing.html#pandas.Index.is_monotonic_decreasing
    "pandas.Index.is_monotonic_decreasing") | 如果值相等或递减，则返回布尔值。 |'
- en: '| [`Index.is_unique`](api/pandas.Index.is_unique.html#pandas.Index.is_unique
    "pandas.Index.is_unique") | Return if the index has unique values. |'
  id: totrans-377
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.is_unique`](api/pandas.Index.is_unique.html#pandas.Index.is_unique
    "pandas.Index.is_unique") | 返回索引是否具有唯一值。 |'
- en: '| [`Index.has_duplicates`](api/pandas.Index.has_duplicates.html#pandas.Index.has_duplicates
    "pandas.Index.has_duplicates") | Check if the Index has duplicate values. |'
  id: totrans-378
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.has_duplicates`](api/pandas.Index.has_duplicates.html#pandas.Index.has_duplicates
    "pandas.Index.has_duplicates") | 检查索引是否具有重复值。 |'
- en: '| [`Index.hasnans`](api/pandas.Index.hasnans.html#pandas.Index.hasnans "pandas.Index.hasnans")
    | Return True if there are any NaNs. |'
  id: totrans-379
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.hasnans`](api/pandas.Index.hasnans.html#pandas.Index.hasnans "pandas.Index.hasnans")
    | 如果存在NaN值，则返回True。 |'
- en: '| [`Index.dtype`](api/pandas.Index.dtype.html#pandas.Index.dtype "pandas.Index.dtype")
    | Return the dtype object of the underlying data. |'
  id: totrans-380
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.dtype`](api/pandas.Index.dtype.html#pandas.Index.dtype "pandas.Index.dtype")
    | 返回底层数据的dtype对象。 |'
- en: '| [`Index.inferred_type`](api/pandas.Index.inferred_type.html#pandas.Index.inferred_type
    "pandas.Index.inferred_type") | Return a string of the type inferred from the
    values. |'
  id: totrans-381
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.inferred_type`](api/pandas.Index.inferred_type.html#pandas.Index.inferred_type
    "pandas.Index.inferred_type") | 返回从值中推断出的类型的字符串。 |'
- en: '| [`Index.shape`](api/pandas.Index.shape.html#pandas.Index.shape "pandas.Index.shape")
    | Return a tuple of the shape of the underlying data. |'
  id: totrans-382
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.shape`](api/pandas.Index.shape.html#pandas.Index.shape "pandas.Index.shape")
    | 返回底层数据的形状的元组。 |'
- en: '| [`Index.name`](api/pandas.Index.name.html#pandas.Index.name "pandas.Index.name")
    | Return Index or MultiIndex name. |'
  id: totrans-383
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.name`](api/pandas.Index.name.html#pandas.Index.name "pandas.Index.name")
    | 返回索引或多重索引的名称。 |'
- en: '| [`Index.names`](api/pandas.Index.names.html#pandas.Index.names "pandas.Index.names")
    |  |'
  id: totrans-384
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.names`](api/pandas.Index.names.html#pandas.Index.names "pandas.Index.names")
    |  |'
- en: '| [`Index.nbytes`](api/pandas.Index.nbytes.html#pandas.Index.nbytes "pandas.Index.nbytes")
    | Return the number of bytes in the underlying data. |'
  id: totrans-385
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.nbytes`](api/pandas.Index.nbytes.html#pandas.Index.nbytes "pandas.Index.nbytes")
    | 返回底层数据中的字节数。 |'
- en: '| [`Index.ndim`](api/pandas.Index.ndim.html#pandas.Index.ndim "pandas.Index.ndim")
    | Number of dimensions of the underlying data, by definition 1. |'
  id: totrans-386
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.ndim`](api/pandas.Index.ndim.html#pandas.Index.ndim "pandas.Index.ndim")
    | 底层数据的维数，根据定义为1。 |'
- en: '| [`Index.size`](api/pandas.Index.size.html#pandas.Index.size "pandas.Index.size")
    | Return the number of elements in the underlying data. |'
  id: totrans-387
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.size`](api/pandas.Index.size.html#pandas.Index.size "pandas.Index.size")
    | 返回基础数据中的元素数。 |'
- en: '| [`Index.empty`](api/pandas.Index.empty.html#pandas.Index.empty "pandas.Index.empty")
    |  |'
  id: totrans-388
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.empty`](api/pandas.Index.empty.html#pandas.Index.empty "pandas.Index.empty")
    |  |'
- en: '| [`Index.T`](api/pandas.Index.T.html#pandas.Index.T "pandas.Index.T") | Return
    the transpose, which is by definition self. |'
  id: totrans-389
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.T`](api/pandas.Index.T.html#pandas.Index.T "pandas.Index.T") | 返回转置，这在定义上是自身。
    |'
- en: '| [`Index.memory_usage`](api/pandas.Index.memory_usage.html#pandas.Index.memory_usage
    "pandas.Index.memory_usage")([deep]) | Memory usage of the values. |'
  id: totrans-390
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.memory_usage`](api/pandas.Index.memory_usage.html#pandas.Index.memory_usage
    "pandas.Index.memory_usage")([deep]) | 值的内存使用情况。 |'
- en: Modifying and computations
  id: totrans-391
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 修改和计算
- en: '| [`Index.all`](api/pandas.Index.all.html#pandas.Index.all "pandas.Index.all")(*args, **kwargs)
    | Return whether all elements are Truthy. |'
  id: totrans-392
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.all`](api/pandas.Index.all.html#pandas.Index.all "pandas.Index.all")(*args, **kwargs)
    | 返回所有元素是否为真值。 |'
- en: '| [`Index.any`](api/pandas.Index.any.html#pandas.Index.any "pandas.Index.any")(*args, **kwargs)
    | Return whether any element is Truthy. |'
  id: totrans-393
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.any`](api/pandas.Index.any.html#pandas.Index.any "pandas.Index.any")(*args, **kwargs)
    | 返回是否存在任何真值元素。 |'
- en: '| [`Index.argmin`](api/pandas.Index.argmin.html#pandas.Index.argmin "pandas.Index.argmin")([axis, skipna])
    | Return int position of the smallest value in the Series. |'
  id: totrans-394
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.argmin`](api/pandas.Index.argmin.html#pandas.Index.argmin "pandas.Index.argmin")([axis, skipna])
    | 返回系列中最小值的整数位置。 |'
- en: '| [`Index.argmax`](api/pandas.Index.argmax.html#pandas.Index.argmax "pandas.Index.argmax")([axis, skipna])
    | Return int position of the largest value in the Series. |'
  id: totrans-395
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.argmax`](api/pandas.Index.argmax.html#pandas.Index.argmax "pandas.Index.argmax")([axis, skipna])
    | 返回系列中最大值的整数位置。 |'
- en: '| [`Index.copy`](api/pandas.Index.copy.html#pandas.Index.copy "pandas.Index.copy")([name, deep])
    | Make a copy of this object. |'
  id: totrans-396
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.copy`](api/pandas.Index.copy.html#pandas.Index.copy "pandas.Index.copy")([name, deep])
    | 复制此对象。 |'
- en: '| [`Index.delete`](api/pandas.Index.delete.html#pandas.Index.delete "pandas.Index.delete")(loc)
    | Make new Index with passed location(-s) deleted. |'
  id: totrans-397
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.delete`](api/pandas.Index.delete.html#pandas.Index.delete "pandas.Index.delete")(loc)
    | 生成删除传递位置的新索引。 |'
- en: '| [`Index.drop`](api/pandas.Index.drop.html#pandas.Index.drop "pandas.Index.drop")(labels[, errors])
    | Make new Index with passed list of labels deleted. |'
  id: totrans-398
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.drop`](api/pandas.Index.drop.html#pandas.Index.drop "pandas.Index.drop")(labels[, errors])
    | 生成删除传递标签列表的新索引。 |'
- en: '| [`Index.drop_duplicates`](api/pandas.Index.drop_duplicates.html#pandas.Index.drop_duplicates
    "pandas.Index.drop_duplicates")(*[, keep]) | Return Index with duplicate values
    removed. |'
  id: totrans-399
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.drop_duplicates`](api/pandas.Index.drop_duplicates.html#pandas.Index.drop_duplicates
    "pandas.Index.drop_duplicates")(*[, keep]) | 返回删除重复值的索引。 |'
- en: '| [`Index.duplicated`](api/pandas.Index.duplicated.html#pandas.Index.duplicated
    "pandas.Index.duplicated")([keep]) | Indicate duplicate index values. |'
  id: totrans-400
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.duplicated`](api/pandas.Index.duplicated.html#pandas.Index.duplicated
    "pandas.Index.duplicated")([keep]) | 指示重复的索引值。 |'
- en: '| [`Index.equals`](api/pandas.Index.equals.html#pandas.Index.equals "pandas.Index.equals")(other)
    | Determine if two Index object are equal. |'
  id: totrans-401
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.equals`](api/pandas.Index.equals.html#pandas.Index.equals "pandas.Index.equals")(other)
    | 确定两个索引对象是否相等。 |'
- en: '| [`Index.factorize`](api/pandas.Index.factorize.html#pandas.Index.factorize
    "pandas.Index.factorize")([sort, use_na_sentinel]) | Encode the object as an enumerated
    type or categorical variable. |'
  id: totrans-402
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.factorize`](api/pandas.Index.factorize.html#pandas.Index.factorize
    "pandas.Index.factorize")([sort, use_na_sentinel]) | 将对象编码为枚举类型或分类变量。 |'
- en: '| [`Index.identical`](api/pandas.Index.identical.html#pandas.Index.identical
    "pandas.Index.identical")(other) | Similar to equals, but checks that object attributes
    and types are also equal. |'
  id: totrans-403
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.identical`](api/pandas.Index.identical.html#pandas.Index.identical
    "pandas.Index.identical")(other) | 类似于equals，但检查对象属性和类型是否也相等。 |'
- en: '| [`Index.insert`](api/pandas.Index.insert.html#pandas.Index.insert "pandas.Index.insert")(loc, item)
    | Make new Index inserting new item at location. |'
  id: totrans-404
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.insert`](api/pandas.Index.insert.html#pandas.Index.insert "pandas.Index.insert")(loc, item)
    | 在位置插入新项目，生成新索引。 |'
- en: '| [`Index.is_`](api/pandas.Index.is_.html#pandas.Index.is_ "pandas.Index.is_")(other)
    | More flexible, faster check like `is` but that works through views. |'
  id: totrans-405
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.is_`](api/pandas.Index.is_.html#pandas.Index.is_ "pandas.Index.is_")（other）
    | 更灵活、更快速的检查，类似于`is`，但适用于视图。 |'
- en: '| [`Index.is_boolean`](api/pandas.Index.is_boolean.html#pandas.Index.is_boolean
    "pandas.Index.is_boolean")() | (DEPRECATED) Check if the Index only consists of
    booleans. |'
  id: totrans-406
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.is_boolean`](api/pandas.Index.is_boolean.html#pandas.Index.is_boolean
    "pandas.Index.is_boolean")() | （已弃用）检查索引是否仅由布尔值组成。 |'
- en: '| [`Index.is_categorical`](api/pandas.Index.is_categorical.html#pandas.Index.is_categorical
    "pandas.Index.is_categorical")() | (DEPRECATED) Check if the Index holds categorical
    data. |'
  id: totrans-407
  prefs: []
  type: TYPE_TB
  zh: '[`Index.is_categorical`](api/pandas.Index.is_categorical.html#pandas.Index.is_categorical
    "pandas.Index.is_categorical")() | （已弃用）检查索引是否包含分类数据。'
- en: '| [`Index.is_floating`](api/pandas.Index.is_floating.html#pandas.Index.is_floating
    "pandas.Index.is_floating")() | (DEPRECATED) Check if the Index is a floating
    type. |'
  id: totrans-408
  prefs: []
  type: TYPE_TB
  zh: '[`Index.is_floating`](api/pandas.Index.is_floating.html#pandas.Index.is_floating
    "pandas.Index.is_floating")() | （已弃用）检查索引是否为浮点类型。'
- en: '| [`Index.is_integer`](api/pandas.Index.is_integer.html#pandas.Index.is_integer
    "pandas.Index.is_integer")() | (DEPRECATED) Check if the Index only consists of
    integers. |'
  id: totrans-409
  prefs: []
  type: TYPE_TB
  zh: '[`Index.is_integer`](api/pandas.Index.is_integer.html#pandas.Index.is_integer
    "pandas.Index.is_integer")() | （已弃用）检查索引是否仅由整数组成。'
- en: '| [`Index.is_interval`](api/pandas.Index.is_interval.html#pandas.Index.is_interval
    "pandas.Index.is_interval")() | (DEPRECATED) Check if the Index holds Interval
    objects. |'
  id: totrans-410
  prefs: []
  type: TYPE_TB
  zh: '[`Index.is_interval`](api/pandas.Index.is_interval.html#pandas.Index.is_interval
    "pandas.Index.is_interval")() | （已弃用）检查索引是否包含区间对象。'
- en: '| [`Index.is_numeric`](api/pandas.Index.is_numeric.html#pandas.Index.is_numeric
    "pandas.Index.is_numeric")() | (DEPRECATED) Check if the Index only consists of
    numeric data. |'
  id: totrans-411
  prefs: []
  type: TYPE_TB
  zh: '[`Index.is_numeric`](api/pandas.Index.is_numeric.html#pandas.Index.is_numeric
    "pandas.Index.is_numeric")() | （已弃用）检查索引是否仅包含数值数据。'
- en: '| [`Index.is_object`](api/pandas.Index.is_object.html#pandas.Index.is_object
    "pandas.Index.is_object")() | (DEPRECATED) Check if the Index is of the object
    dtype. |'
  id: totrans-412
  prefs: []
  type: TYPE_TB
  zh: '[`Index.is_object`](api/pandas.Index.is_object.html#pandas.Index.is_object
    "pandas.Index.is_object")() | （已弃用）检查索引是否为对象数据类型。'
- en: '| [`Index.min`](api/pandas.Index.min.html#pandas.Index.min "pandas.Index.min")([axis, skipna])
    | Return the minimum value of the Index. |'
  id: totrans-413
  prefs: []
  type: TYPE_TB
  zh: '[`Index.min`](api/pandas.Index.min.html#pandas.Index.min "pandas.Index.min")([axis, skipna])
    | 返回索引的最小值。'
- en: '| [`Index.max`](api/pandas.Index.max.html#pandas.Index.max "pandas.Index.max")([axis, skipna])
    | Return the maximum value of the Index. |'
  id: totrans-414
  prefs: []
  type: TYPE_TB
  zh: '[`Index.max`](api/pandas.Index.max.html#pandas.Index.max "pandas.Index.max")([axis, skipna])
    | 返回索引的最大值。'
- en: '| [`Index.reindex`](api/pandas.Index.reindex.html#pandas.Index.reindex "pandas.Index.reindex")(target[, method, level, ...])
    | Create index with target''s values. |'
  id: totrans-415
  prefs: []
  type: TYPE_TB
  zh: '[`Index.reindex`](api/pandas.Index.reindex.html#pandas.Index.reindex "pandas.Index.reindex")(target[, method, level, ...])
    | 使用目标的值创建索引。'
- en: '| [`Index.rename`](api/pandas.Index.rename.html#pandas.Index.rename "pandas.Index.rename")(name, *[, inplace])
    | Alter Index or MultiIndex name. |'
  id: totrans-416
  prefs: []
  type: TYPE_TB
  zh: '[`Index.rename`](api/pandas.Index.rename.html#pandas.Index.rename "pandas.Index.rename")(name, *[, inplace])
    | 更改索引或多级索引的名称。'
- en: '| [`Index.repeat`](api/pandas.Index.repeat.html#pandas.Index.repeat "pandas.Index.repeat")(repeats[, axis])
    | Repeat elements of a Index. |'
  id: totrans-417
  prefs: []
  type: TYPE_TB
  zh: '[`Index.repeat`](api/pandas.Index.repeat.html#pandas.Index.repeat "pandas.Index.repeat")(repeats[, axis])
    | 重复索引的元素。'
- en: '| [`Index.where`](api/pandas.Index.where.html#pandas.Index.where "pandas.Index.where")(cond[, other])
    | Replace values where the condition is False. |'
  id: totrans-418
  prefs: []
  type: TYPE_TB
  zh: '[`Index.where`](api/pandas.Index.where.html#pandas.Index.where "pandas.Index.where")(cond[, other])
    | 替换条件为假的值。'
- en: '| [`Index.take`](api/pandas.Index.take.html#pandas.Index.take "pandas.Index.take")(indices[, axis, allow_fill, ...])
    | Return a new Index of the values selected by the indices. |'
  id: totrans-419
  prefs: []
  type: TYPE_TB
  zh: '[`Index.take`](api/pandas.Index.take.html#pandas.Index.take "pandas.Index.take")(indices[, axis, allow_fill, ...])
    | 返回由索引选择的值的新索引。'
- en: '| [`Index.putmask`](api/pandas.Index.putmask.html#pandas.Index.putmask "pandas.Index.putmask")(mask, value)
    | Return a new Index of the values set with the mask. |'
  id: totrans-420
  prefs: []
  type: TYPE_TB
  zh: '[`Index.putmask`](api/pandas.Index.putmask.html#pandas.Index.putmask "pandas.Index.putmask")(mask, value)
    | 返回使用掩码设置的新索引值。'
- en: '| [`Index.unique`](api/pandas.Index.unique.html#pandas.Index.unique "pandas.Index.unique")([level])
    | Return unique values in the index. |'
  id: totrans-421
  prefs: []
  type: TYPE_TB
  zh: '[`Index.unique`](api/pandas.Index.unique.html#pandas.Index.unique "pandas.Index.unique")([level])
    | 返回索引中的唯一值。'
- en: '| [`Index.nunique`](api/pandas.Index.nunique.html#pandas.Index.nunique "pandas.Index.nunique")([dropna])
    | Return number of unique elements in the object. |'
  id: totrans-422
  prefs: []
  type: TYPE_TB
  zh: '[`Index.nunique`](api/pandas.Index.nunique.html#pandas.Index.nunique "pandas.Index.nunique")([dropna])
    | 返回对象中唯一元素的数量。'
- en: '| [`Index.value_counts`](api/pandas.Index.value_counts.html#pandas.Index.value_counts
    "pandas.Index.value_counts")([normalize, sort, ...]) | Return a Series containing
    counts of unique values. |'
  id: totrans-423
  prefs: []
  type: TYPE_TB
  zh: '[`Index.value_counts`](api/pandas.Index.value_counts.html#pandas.Index.value_counts
    "pandas.Index.value_counts")([normalize, sort, ...]) | 返回包含唯一值计数的系列。'
- en: Compatibility with MultiIndex
  id: totrans-424
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 与多级索引兼容性
- en: '| [`Index.set_names`](api/pandas.Index.set_names.html#pandas.Index.set_names
    "pandas.Index.set_names")(names, *[, level, inplace]) | Set Index or MultiIndex
    name. |'
  id: totrans-425
  prefs: []
  type: TYPE_TB
  zh: '[`Index.set_names`](api/pandas.Index.set_names.html#pandas.Index.set_names
    "pandas.Index.set_names")(names, *[, level, inplace]) | 设置索引或多级索引的名称。'
- en: '| [`Index.droplevel`](api/pandas.Index.droplevel.html#pandas.Index.droplevel
    "pandas.Index.droplevel")([level]) | Return index with requested level(s) removed.
    |'
  id: totrans-426
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.droplevel`](api/pandas.Index.droplevel.html#pandas.Index.droplevel
    "pandas.Index.droplevel")([level]) | 返回已删除请求级别的索引。 |'
- en: Missing values
  id: totrans-427
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缺失数值
- en: '| [`Index.fillna`](api/pandas.Index.fillna.html#pandas.Index.fillna "pandas.Index.fillna")([value, downcast])
    | Fill NA/NaN values with the specified value. |'
  id: totrans-428
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.fillna`](api/pandas.Index.fillna.html#pandas.Index.fillna "pandas.Index.fillna")([value, downcast])
    | 用指定值填充 NA/NaN 值。 |'
- en: '| [`Index.dropna`](api/pandas.Index.dropna.html#pandas.Index.dropna "pandas.Index.dropna")([how])
    | Return Index without NA/NaN values. |'
  id: totrans-429
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.dropna`](api/pandas.Index.dropna.html#pandas.Index.dropna "pandas.Index.dropna")([how])
    | 返回不包含 NA/NaN 值的索引。 |'
- en: '| [`Index.isna`](api/pandas.Index.isna.html#pandas.Index.isna "pandas.Index.isna")()
    | Detect missing values. |'
  id: totrans-430
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.isna`](api/pandas.Index.isna.html#pandas.Index.isna "pandas.Index.isna")()
    | 检测缺失值。 |'
- en: '| [`Index.notna`](api/pandas.Index.notna.html#pandas.Index.notna "pandas.Index.notna")()
    | Detect existing (non-missing) values. |'
  id: totrans-431
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.notna`](api/pandas.Index.notna.html#pandas.Index.notna "pandas.Index.notna")()
    | 检测存在（非缺失）数值。 |'
- en: Conversion
  id: totrans-432
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 转换
- en: '| [`Index.astype`](api/pandas.Index.astype.html#pandas.Index.astype "pandas.Index.astype")(dtype[, copy])
    | Create an Index with values cast to dtypes. |'
  id: totrans-433
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.astype`](api/pandas.Index.astype.html#pandas.Index.astype "pandas.Index.astype")(dtype[, copy])
    | 创建一个值被转换为数据类型的索引。 |'
- en: '| [`Index.item`](api/pandas.Index.item.html#pandas.Index.item "pandas.Index.item")()
    | Return the first element of the underlying data as a Python scalar. |'
  id: totrans-434
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.item`](api/pandas.Index.item.html#pandas.Index.item "pandas.Index.item")()
    | 作为 Python 标量返回底层数据的第一个元素。 |'
- en: '| [`Index.map`](api/pandas.Index.map.html#pandas.Index.map "pandas.Index.map")(mapper[, na_action])
    | Map values using an input mapping or function. |'
  id: totrans-435
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.map`](api/pandas.Index.map.html#pandas.Index.map "pandas.Index.map")(mapper[, na_action])
    | 使用输入映射或函数映射值。 |'
- en: '| [`Index.ravel`](api/pandas.Index.ravel.html#pandas.Index.ravel "pandas.Index.ravel")([order])
    | Return a view on self. |'
  id: totrans-436
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.ravel`](api/pandas.Index.ravel.html#pandas.Index.ravel "pandas.Index.ravel")([order])
    | 返回对自身的视图。 |'
- en: '| [`Index.to_list`](api/pandas.Index.to_list.html#pandas.Index.to_list "pandas.Index.to_list")()
    | Return a list of the values. |'
  id: totrans-437
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.to_list`](api/pandas.Index.to_list.html#pandas.Index.to_list "pandas.Index.to_list")()
    | 返回值的列表。 |'
- en: '| [`Index.to_series`](api/pandas.Index.to_series.html#pandas.Index.to_series
    "pandas.Index.to_series")([index, name]) | Create a Series with both index and
    values equal to the index keys. |'
  id: totrans-438
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.to_series`](api/pandas.Index.to_series.html#pandas.Index.to_series
    "pandas.Index.to_series")([index, name]) | 创建一个序列，其索引和值都等于索引键。 |'
- en: '| [`Index.to_frame`](api/pandas.Index.to_frame.html#pandas.Index.to_frame "pandas.Index.to_frame")([index, name])
    | Create a DataFrame with a column containing the Index. |'
  id: totrans-439
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.to_frame`](api/pandas.Index.to_frame.html#pandas.Index.to_frame "pandas.Index.to_frame")([index, name])
    | 创建一个包含索引的列的数据框。 |'
- en: '| [`Index.view`](api/pandas.Index.view.html#pandas.Index.view "pandas.Index.view")([cls])
    |  |'
  id: totrans-440
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.view`](api/pandas.Index.view.html#pandas.Index.view "pandas.Index.view")([cls])
    |  |'
- en: Sorting
  id: totrans-441
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 排序
- en: '| [`Index.argsort`](api/pandas.Index.argsort.html#pandas.Index.argsort "pandas.Index.argsort")(*args, **kwargs)
    | Return the integer indices that would sort the index. |'
  id: totrans-442
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.argsort`](api/pandas.Index.argsort.html#pandas.Index.argsort "pandas.Index.argsort")(*args, **kwargs)
    | 返回将索引排序的整数索引。 |'
- en: '| [`Index.searchsorted`](api/pandas.Index.searchsorted.html#pandas.Index.searchsorted
    "pandas.Index.searchsorted")(value[, side, sorter]) | Find indices where elements
    should be inserted to maintain order. |'
  id: totrans-443
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.searchsorted`](api/pandas.Index.searchsorted.html#pandas.Index.searchsorted
    "pandas.Index.searchsorted")(value[, side, sorter]) | 找到应插入以保持顺序的元素的索引。 |'
- en: '| [`Index.sort_values`](api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values")(*[, return_indexer, ...]) | Return a sorted copy of
    the index. |'
  id: totrans-444
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.sort_values`](api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values")(*[, return_indexer, ...]) | 返回索引的排序副本。 |'
- en: Time-specific operations
  id: totrans-445
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 特定于时间的操作
- en: '| [`Index.shift`](api/pandas.Index.shift.html#pandas.Index.shift "pandas.Index.shift")([periods, freq])
    | Shift index by desired number of time frequency increments. |'
  id: totrans-446
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.shift`](api/pandas.Index.shift.html#pandas.Index.shift "pandas.Index.shift")([periods, freq])
    | 按所需的时间频率增量移动索引。 |'
- en: Combining / joining / set operations
  id: totrans-447
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 合并 / 连接 / 集合操作
- en: '| [`Index.append`](api/pandas.Index.append.html#pandas.Index.append "pandas.Index.append")(other)
    | Append a collection of Index options together. |'
  id: totrans-448
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.append`](api/pandas.Index.append.html#pandas.Index.append "pandas.Index.append")(other)
    | 将一系列索引选项附加在一起。 |'
- en: '| [`Index.join`](api/pandas.Index.join.html#pandas.Index.join "pandas.Index.join")(other, *[, how, level, ...])
    | Compute join_index and indexers to conform data structures to the new index.
    |'
  id: totrans-449
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.join`](api/pandas.Index.join.html#pandas.Index.join "pandas.Index.join")(other, *[, how, level, ...])
    | 计算join_index和indexers以使数据结构符合新索引。 |'
- en: '| [`Index.intersection`](api/pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection")(other[, sort]) | Form the intersection of two Index
    objects. |'
  id: totrans-450
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.intersection`](api/pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection")(other[, sort]) | 形成两个索引对象的交集。 |'
- en: '| [`Index.union`](api/pandas.Index.union.html#pandas.Index.union "pandas.Index.union")(other[, sort])
    | Form the union of two Index objects. |'
  id: totrans-451
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.union`](api/pandas.Index.union.html#pandas.Index.union "pandas.Index.union")(other[, sort])
    | 形成两个索引对象的并集。 |'
- en: '| [`Index.difference`](api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference")(other[, sort]) | Return a new Index with elements of
    index not in other. |'
  id: totrans-452
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.difference`](api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference")(other[, sort]) | 返回一个新的索引，其中包含不在其他索引中的元素。 |'
- en: '| [`Index.symmetric_difference`](api/pandas.Index.symmetric_difference.html#pandas.Index.symmetric_difference
    "pandas.Index.symmetric_difference")(other[, ...]) | Compute the symmetric difference
    of two Index objects. |'
  id: totrans-453
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.symmetric_difference`](api/pandas.Index.symmetric_difference.html#pandas.Index.symmetric_difference
    "pandas.Index.symmetric_difference")(other[, ...]) | 计算两个索引对象的对称差异。 |'
- en: Selecting
  id: totrans-454
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择
- en: '| [`Index.asof`](api/pandas.Index.asof.html#pandas.Index.asof "pandas.Index.asof")(label)
    | Return the label from the index, or, if not present, the previous one. |'
  id: totrans-455
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.asof`](api/pandas.Index.asof.html#pandas.Index.asof "pandas.Index.asof")(label)
    | 返回索引中的标签，如果不存在，则返回前一个标签。 |'
- en: '| [`Index.asof_locs`](api/pandas.Index.asof_locs.html#pandas.Index.asof_locs
    "pandas.Index.asof_locs")(where, mask) | Return the locations (indices) of labels
    in the index. |'
  id: totrans-456
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.asof_locs`](api/pandas.Index.asof_locs.html#pandas.Index.asof_locs
    "pandas.Index.asof_locs")(where, mask) | 返回索引中标签的位置（索引）。 |'
- en: '| [`Index.get_indexer`](api/pandas.Index.get_indexer.html#pandas.Index.get_indexer
    "pandas.Index.get_indexer")(target[, method, limit, ...]) | Compute indexer and
    mask for new index given the current index. |'
  id: totrans-457
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.get_indexer`](api/pandas.Index.get_indexer.html#pandas.Index.get_indexer
    "pandas.Index.get_indexer")(target[, method, limit, ...]) | 给定当前索引，计算新索引的索引器和掩码。
    |'
- en: '| [`Index.get_indexer_for`](api/pandas.Index.get_indexer_for.html#pandas.Index.get_indexer_for
    "pandas.Index.get_indexer_for")(target) | Guaranteed return of an indexer even
    when non-unique. |'
  id: totrans-458
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.get_indexer_for`](api/pandas.Index.get_indexer_for.html#pandas.Index.get_indexer_for
    "pandas.Index.get_indexer_for")(target) | 即使是非唯一的情况，也保证返回一个索引器。 |'
- en: '| [`Index.get_indexer_non_unique`](api/pandas.Index.get_indexer_non_unique.html#pandas.Index.get_indexer_non_unique
    "pandas.Index.get_indexer_non_unique")(target) | Compute indexer and mask for
    new index given the current index. |'
  id: totrans-459
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.get_indexer_non_unique`](api/pandas.Index.get_indexer_non_unique.html#pandas.Index.get_indexer_non_unique
    "pandas.Index.get_indexer_non_unique")(target) | 给定当前索引，计算新索引的索引器和掩码。 |'
- en: '| [`Index.get_level_values`](api/pandas.Index.get_level_values.html#pandas.Index.get_level_values
    "pandas.Index.get_level_values")(level) | Return an Index of values for requested
    level. |'
  id: totrans-460
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.get_level_values`](api/pandas.Index.get_level_values.html#pandas.Index.get_level_values
    "pandas.Index.get_level_values")(level) | 返回请求级别的值的索引。 |'
- en: '| [`Index.get_loc`](api/pandas.Index.get_loc.html#pandas.Index.get_loc "pandas.Index.get_loc")(key)
    | Get integer location, slice or boolean mask for requested label. |'
  id: totrans-461
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.get_loc`](api/pandas.Index.get_loc.html#pandas.Index.get_loc "pandas.Index.get_loc")(key)
    | 获取请求标签的整数位置、切片或布尔掩码。 |'
- en: '| [`Index.get_slice_bound`](api/pandas.Index.get_slice_bound.html#pandas.Index.get_slice_bound
    "pandas.Index.get_slice_bound")(label, side) | Calculate slice bound that corresponds
    to given label. |'
  id: totrans-462
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.get_slice_bound`](api/pandas.Index.get_slice_bound.html#pandas.Index.get_slice_bound
    "pandas.Index.get_slice_bound")(label, side) | 计算与给定标签对应的切片边界。 |'
- en: '| [`Index.isin`](api/pandas.Index.isin.html#pandas.Index.isin "pandas.Index.isin")(values[, level])
    | Return a boolean array where the index values are in values. |'
  id: totrans-463
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.isin`](api/pandas.Index.isin.html#pandas.Index.isin "pandas.Index.isin")(values[, level])
    | 返回索引值在值中的布尔数组。 |'
- en: '| [`Index.slice_indexer`](api/pandas.Index.slice_indexer.html#pandas.Index.slice_indexer
    "pandas.Index.slice_indexer")([start, end, step]) | Compute the slice indexer
    for input labels and step. |'
  id: totrans-464
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.slice_indexer`](api/pandas.Index.slice_indexer.html#pandas.Index.slice_indexer
    "pandas.Index.slice_indexer")([start, end, step]) | 计算输入标签和步长的切片索引器。 |'
- en: '| [`Index.slice_locs`](api/pandas.Index.slice_locs.html#pandas.Index.slice_locs
    "pandas.Index.slice_locs")([start, end, step]) | Compute slice locations for input
    labels. |'
  id: totrans-465
  prefs: []
  type: TYPE_TB
  zh: '| [`Index.slice_locs`](api/pandas.Index.slice_locs.html#pandas.Index.slice_locs
    "pandas.Index.slice_locs")([start, end, step]) | 计算输入标签的切片位置。 |'
- en: '## Numeric Index'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: '## 数值索引'
- en: '| [`RangeIndex`](api/pandas.RangeIndex.html#pandas.RangeIndex "pandas.RangeIndex")([start, stop, step, dtype, copy, ...])
    | Immutable Index implementing a monotonic integer range. |'
  id: totrans-467
  prefs: []
  type: TYPE_TB
  zh: '| [`RangeIndex`](api/pandas.RangeIndex.html#pandas.RangeIndex "pandas.RangeIndex")([start, stop, step, dtype, copy, ...])
    | 实现单调整数范围的不可变索引。 |'
- en: '| [`RangeIndex.start`](api/pandas.RangeIndex.start.html#pandas.RangeIndex.start
    "pandas.RangeIndex.start") | The value of the start parameter (`0` if this was
    not supplied). |'
  id: totrans-468
  prefs: []
  type: TYPE_TB
  zh: '| [`RangeIndex.start`](api/pandas.RangeIndex.start.html#pandas.RangeIndex.start
    "pandas.RangeIndex.start") | 起始参数的值（如果未提供则为`0`）。 |'
- en: '| [`RangeIndex.stop`](api/pandas.RangeIndex.stop.html#pandas.RangeIndex.stop
    "pandas.RangeIndex.stop") | The value of the stop parameter. |'
  id: totrans-469
  prefs: []
  type: TYPE_TB
  zh: '| [`RangeIndex.stop`](api/pandas.RangeIndex.stop.html#pandas.RangeIndex.stop
    "pandas.RangeIndex.stop") | 停止参数的值。 |'
- en: '| [`RangeIndex.step`](api/pandas.RangeIndex.step.html#pandas.RangeIndex.step
    "pandas.RangeIndex.step") | The value of the step parameter (`1` if this was not
    supplied). |'
  id: totrans-470
  prefs: []
  type: TYPE_TB
  zh: '| [`RangeIndex.step`](api/pandas.RangeIndex.step.html#pandas.RangeIndex.step
    "pandas.RangeIndex.step") | 步长参数的值（如果未提供则为`1`）。 |'
- en: '| [`RangeIndex.from_range`](api/pandas.RangeIndex.from_range.html#pandas.RangeIndex.from_range
    "pandas.RangeIndex.from_range")(data[, name, dtype]) | Create [`pandas.RangeIndex`](api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") from a `range` object. |'
  id: totrans-471
  prefs: []
  type: TYPE_TB
  zh: '| [`RangeIndex.from_range`](api/pandas.RangeIndex.from_range.html#pandas.RangeIndex.from_range
    "pandas.RangeIndex.from_range")(data[, name, dtype]) | 从`range`对象创建[`pandas.RangeIndex`](api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex")。 |'
- en: '## CategoricalIndex'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: '## CategoricalIndex'
- en: '| [`CategoricalIndex`](api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex")([data, categories, ...]) | Index based on an underlying
    [`Categorical`](api/pandas.Categorical.html#pandas.Categorical "pandas.Categorical").
    |'
  id: totrans-473
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex`](api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex")([data, categories, ...]) | 基于底层[`Categorical`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical")的索引。 |'
- en: Categorical components
  id: totrans-474
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分类组件
- en: '| [`CategoricalIndex.codes`](api/pandas.CategoricalIndex.codes.html#pandas.CategoricalIndex.codes
    "pandas.CategoricalIndex.codes") | The category codes of this categorical index.
    |'
  id: totrans-475
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.codes`](api/pandas.CategoricalIndex.codes.html#pandas.CategoricalIndex.codes
    "pandas.CategoricalIndex.codes") | 此分类索引的类别编码。 |'
- en: '| [`CategoricalIndex.categories`](api/pandas.CategoricalIndex.categories.html#pandas.CategoricalIndex.categories
    "pandas.CategoricalIndex.categories") | The categories of this categorical. |'
  id: totrans-476
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.categories`](api/pandas.CategoricalIndex.categories.html#pandas.CategoricalIndex.categories
    "pandas.CategoricalIndex.categories") | 此分类的类别。 |'
- en: '| [`CategoricalIndex.ordered`](api/pandas.CategoricalIndex.ordered.html#pandas.CategoricalIndex.ordered
    "pandas.CategoricalIndex.ordered") | Whether the categories have an ordered relationship.
    |'
  id: totrans-477
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.ordered`](api/pandas.CategoricalIndex.ordered.html#pandas.CategoricalIndex.ordered
    "pandas.CategoricalIndex.ordered") | 类别是否具有有序关系。 |'
- en: '| [`CategoricalIndex.rename_categories`](api/pandas.CategoricalIndex.rename_categories.html#pandas.CategoricalIndex.rename_categories
    "pandas.CategoricalIndex.rename_categories")(*args, ...) | Rename categories.
    |'
  id: totrans-478
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.rename_categories`](api/pandas.CategoricalIndex.rename_categories.html#pandas.CategoricalIndex.rename_categories
    "pandas.CategoricalIndex.rename_categories")(*args, ...) | 重命名类别。 |'
- en: '| [`CategoricalIndex.reorder_categories`](api/pandas.CategoricalIndex.reorder_categories.html#pandas.CategoricalIndex.reorder_categories
    "pandas.CategoricalIndex.reorder_categories")(*args, ...) | Reorder categories
    as specified in new_categories. |'
  id: totrans-479
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.reorder_categories`](api/pandas.CategoricalIndex.reorder_categories.html#pandas.CategoricalIndex.reorder_categories
    "pandas.CategoricalIndex.reorder_categories")(*args, ...) | 根据新类别指定的顺序重新排序类别。
    |'
- en: '| [`CategoricalIndex.add_categories`](api/pandas.CategoricalIndex.add_categories.html#pandas.CategoricalIndex.add_categories
    "pandas.CategoricalIndex.add_categories")(*args, **kwargs) | Add new categories.
    |'
  id: totrans-480
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.add_categories`](api/pandas.CategoricalIndex.add_categories.html#pandas.CategoricalIndex.add_categories
    "pandas.CategoricalIndex.add_categories")(*args, **kwargs) | 添加新的类别。 |'
- en: '| [`CategoricalIndex.remove_categories`](api/pandas.CategoricalIndex.remove_categories.html#pandas.CategoricalIndex.remove_categories
    "pandas.CategoricalIndex.remove_categories")(*args, ...) | Remove the specified
    categories. |'
  id: totrans-481
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.remove_categories`](api/pandas.CategoricalIndex.remove_categories.html#pandas.CategoricalIndex.remove_categories
    "pandas.CategoricalIndex.remove_categories")(*args, ...) | 移除指定的类别。 |'
- en: '| [`CategoricalIndex.remove_unused_categories`](api/pandas.CategoricalIndex.remove_unused_categories.html#pandas.CategoricalIndex.remove_unused_categories
    "pandas.CategoricalIndex.remove_unused_categories")(...) | Remove categories which
    are not used. |'
  id: totrans-482
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.remove_unused_categories`](api/pandas.CategoricalIndex.remove_unused_categories.html#pandas.CategoricalIndex.remove_unused_categories
    "pandas.CategoricalIndex.remove_unused_categories")(...) | 移除未使用的类别。 |'
- en: '| [`CategoricalIndex.set_categories`](api/pandas.CategoricalIndex.set_categories.html#pandas.CategoricalIndex.set_categories
    "pandas.CategoricalIndex.set_categories")(*args, **kwargs) | Set the categories
    to the specified new categories. |'
  id: totrans-483
  prefs: []
  type: TYPE_TB
  zh: '[`CategoricalIndex.set_categories`](api/pandas.CategoricalIndex.set_categories.html#pandas.CategoricalIndex.set_categories
    "pandas.CategoricalIndex.set_categories")(*args, **kwargs) | 将类别设置为指定的新类别。 |'
- en: '| [`CategoricalIndex.as_ordered`](api/pandas.CategoricalIndex.as_ordered.html#pandas.CategoricalIndex.as_ordered
    "pandas.CategoricalIndex.as_ordered")(*args, **kwargs) | Set the Categorical to
    be ordered. |'
  id: totrans-484
  prefs: []
  type: TYPE_TB
  zh: '[`CategoricalIndex.as_ordered`](api/pandas.CategoricalIndex.as_ordered.html#pandas.CategoricalIndex.as_ordered
    "pandas.CategoricalIndex.as_ordered")(*args, **kwargs) | 将分类设为有序。 |'
- en: '| [`CategoricalIndex.as_unordered`](api/pandas.CategoricalIndex.as_unordered.html#pandas.CategoricalIndex.as_unordered
    "pandas.CategoricalIndex.as_unordered")(*args, **kwargs) | Set the Categorical
    to be unordered. |'
  id: totrans-485
  prefs: []
  type: TYPE_TB
  zh: '[`CategoricalIndex.as_unordered`](api/pandas.CategoricalIndex.as_unordered.html#pandas.CategoricalIndex.as_unordered
    "pandas.CategoricalIndex.as_unordered")(*args, **kwargs) | 将分类设为无序。 |'
- en: Modifying and computations
  id: totrans-486
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 修改和计算
- en: '| [`CategoricalIndex.map`](api/pandas.CategoricalIndex.map.html#pandas.CategoricalIndex.map
    "pandas.CategoricalIndex.map")(mapper[, na_action]) | Map values using input an
    input mapping or function. |'
  id: totrans-487
  prefs: []
  type: TYPE_TB
  zh: '[`CategoricalIndex.map`](api/pandas.CategoricalIndex.map.html#pandas.CategoricalIndex.map
    "pandas.CategoricalIndex.map")(mapper[, na_action]) | 使用输入映射或函数映射值。 |'
- en: '| [`CategoricalIndex.equals`](api/pandas.CategoricalIndex.equals.html#pandas.CategoricalIndex.equals
    "pandas.CategoricalIndex.equals")(other) | Determine if two CategoricalIndex objects
    contain the same elements. |'
  id: totrans-488
  prefs: []
  type: TYPE_TB
  zh: '[`CategoricalIndex.equals`](api/pandas.CategoricalIndex.equals.html#pandas.CategoricalIndex.equals
    "pandas.CategoricalIndex.equals")(other) | 确定两个 CategoricalIndex 对象是否包含相同的元素。
    |'
- en: Categorical components
  id: totrans-489
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分类组件
- en: '| [`CategoricalIndex.codes`](api/pandas.CategoricalIndex.codes.html#pandas.CategoricalIndex.codes
    "pandas.CategoricalIndex.codes") | The category codes of this categorical index.
    |'
  id: totrans-490
  prefs: []
  type: TYPE_TB
  zh: '[`CategoricalIndex.codes`](api/pandas.CategoricalIndex.codes.html#pandas.CategoricalIndex.codes
    "pandas.CategoricalIndex.codes") | 此分类索引的类别代码。 |'
- en: '| [`CategoricalIndex.categories`](api/pandas.CategoricalIndex.categories.html#pandas.CategoricalIndex.categories
    "pandas.CategoricalIndex.categories") | The categories of this categorical. |'
  id: totrans-491
  prefs: []
  type: TYPE_TB
  zh: '[`CategoricalIndex.categories`](api/pandas.CategoricalIndex.categories.html#pandas.CategoricalIndex.categories
    "pandas.CategoricalIndex.categories") | 此分类的类别。 |'
- en: '| [`CategoricalIndex.ordered`](api/pandas.CategoricalIndex.ordered.html#pandas.CategoricalIndex.ordered
    "pandas.CategoricalIndex.ordered") | Whether the categories have an ordered relationship.
    |'
  id: totrans-492
  prefs: []
  type: TYPE_TB
  zh: '[`CategoricalIndex.ordered`](api/pandas.CategoricalIndex.ordered.html#pandas.CategoricalIndex.ordered
    "pandas.CategoricalIndex.ordered") | 类别是否具有有序关系。 |'
- en: '| [`CategoricalIndex.rename_categories`](api/pandas.CategoricalIndex.rename_categories.html#pandas.CategoricalIndex.rename_categories
    "pandas.CategoricalIndex.rename_categories")(*args, ...) | Rename categories.
    |'
  id: totrans-493
  prefs: []
  type: TYPE_TB
  zh: '[`CategoricalIndex.rename_categories`](api/pandas.CategoricalIndex.rename_categories.html#pandas.CategoricalIndex.rename_categories
    "pandas.CategoricalIndex.rename_categories")(*args, ...) | 重命名类别。 |'
- en: '| [`CategoricalIndex.reorder_categories`](api/pandas.CategoricalIndex.reorder_categories.html#pandas.CategoricalIndex.reorder_categories
    "pandas.CategoricalIndex.reorder_categories")(*args, ...) | Reorder categories
    as specified in new_categories. |'
  id: totrans-494
  prefs: []
  type: TYPE_TB
  zh: '[`CategoricalIndex.reorder_categories`](api/pandas.CategoricalIndex.reorder_categories.html#pandas.CategoricalIndex.reorder_categories
    "pandas.CategoricalIndex.reorder_categories")(*args, ...) | 按照 new_categories
    中指定的顺序重新排序类别。 |'
- en: '| [`CategoricalIndex.add_categories`](api/pandas.CategoricalIndex.add_categories.html#pandas.CategoricalIndex.add_categories
    "pandas.CategoricalIndex.add_categories")(*args, **kwargs) | Add new categories.
    |'
  id: totrans-495
  prefs: []
  type: TYPE_TB
  zh: '[`CategoricalIndex.add_categories`](api/pandas.CategoricalIndex.add_categories.html#pandas.CategoricalIndex.add_categories
    "pandas.CategoricalIndex.add_categories")(*args, **kwargs) | 添加新类别。 |'
- en: '| [`CategoricalIndex.remove_categories`](api/pandas.CategoricalIndex.remove_categories.html#pandas.CategoricalIndex.remove_categories
    "pandas.CategoricalIndex.remove_categories")(*args, ...) | Remove the specified
    categories. |'
  id: totrans-496
  prefs: []
  type: TYPE_TB
  zh: '[`CategoricalIndex.remove_categories`](api/pandas.CategoricalIndex.remove_categories.html#pandas.CategoricalIndex.remove_categories
    "pandas.CategoricalIndex.remove_categories")(*args, ...) | 删除指定的类别。 |'
- en: '| [`CategoricalIndex.remove_unused_categories`](api/pandas.CategoricalIndex.remove_unused_categories.html#pandas.CategoricalIndex.remove_unused_categories
    "pandas.CategoricalIndex.remove_unused_categories")(...) | Remove categories which
    are not used. |'
  id: totrans-497
  prefs: []
  type: TYPE_TB
  zh: '[`CategoricalIndex.remove_unused_categories`](api/pandas.CategoricalIndex.remove_unused_categories.html#pandas.CategoricalIndex.remove_unused_categories
    "pandas.CategoricalIndex.remove_unused_categories")(...) | 删除未使用的类别。 |'
- en: '| [`CategoricalIndex.set_categories`](api/pandas.CategoricalIndex.set_categories.html#pandas.CategoricalIndex.set_categories
    "pandas.CategoricalIndex.set_categories")(*args, **kwargs) | Set the categories
    to the specified new categories. |'
  id: totrans-498
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.set_categories`](api/pandas.CategoricalIndex.set_categories.html#pandas.CategoricalIndex.set_categories
    "pandas.CategoricalIndex.set_categories")(*args, **kwargs) | 将分类设置为指定的新类别。 |'
- en: '| [`CategoricalIndex.as_ordered`](api/pandas.CategoricalIndex.as_ordered.html#pandas.CategoricalIndex.as_ordered
    "pandas.CategoricalIndex.as_ordered")(*args, **kwargs) | Set the Categorical to
    be ordered. |'
  id: totrans-499
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.as_ordered`](api/pandas.CategoricalIndex.as_ordered.html#pandas.CategoricalIndex.as_ordered
    "pandas.CategoricalIndex.as_ordered")(*args, **kwargs) | 将分类设置为有序。 |'
- en: '| [`CategoricalIndex.as_unordered`](api/pandas.CategoricalIndex.as_unordered.html#pandas.CategoricalIndex.as_unordered
    "pandas.CategoricalIndex.as_unordered")(*args, **kwargs) | Set the Categorical
    to be unordered. |'
  id: totrans-500
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.as_unordered`](api/pandas.CategoricalIndex.as_unordered.html#pandas.CategoricalIndex.as_unordered
    "pandas.CategoricalIndex.as_unordered")(*args, **kwargs) | 将分类索引设置为无序。 |'
- en: Modifying and computations
  id: totrans-501
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 修改和计算
- en: '| [`CategoricalIndex.map`](api/pandas.CategoricalIndex.map.html#pandas.CategoricalIndex.map
    "pandas.CategoricalIndex.map")(mapper[, na_action]) | Map values using input an
    input mapping or function. |'
  id: totrans-502
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.map`](api/pandas.CategoricalIndex.map.html#pandas.CategoricalIndex.map
    "pandas.CategoricalIndex.map")(mapper[, na_action]) | 使用输入映射或函数映射值。 |'
- en: '| [`CategoricalIndex.equals`](api/pandas.CategoricalIndex.equals.html#pandas.CategoricalIndex.equals
    "pandas.CategoricalIndex.equals")(other) | Determine if two CategoricalIndex objects
    contain the same elements. |'
  id: totrans-503
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalIndex.equals`](api/pandas.CategoricalIndex.equals.html#pandas.CategoricalIndex.equals
    "pandas.CategoricalIndex.equals")(other) | 确定两个分类索引对象是否包含相同的元素。 |'
- en: '## IntervalIndex'
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: '## IntervalIndex'
- en: '| [`IntervalIndex`](api/pandas.IntervalIndex.html#pandas.IntervalIndex "pandas.IntervalIndex")(data[, closed, dtype, copy, ...])
    | Immutable index of intervals that are closed on the same side. |'
  id: totrans-505
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex`](api/pandas.IntervalIndex.html#pandas.IntervalIndex "pandas.IntervalIndex")(data[, closed, dtype, copy, ...])
    | 不可变的区间索引，其边界在同一侧关闭。 |'
- en: IntervalIndex components
  id: totrans-506
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: IntervalIndex 组件
- en: '| [`IntervalIndex.from_arrays`](api/pandas.IntervalIndex.from_arrays.html#pandas.IntervalIndex.from_arrays
    "pandas.IntervalIndex.from_arrays")(left, right[, ...]) | Construct from two arrays
    defining the left and right bounds. |'
  id: totrans-507
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.from_arrays`](api/pandas.IntervalIndex.from_arrays.html#pandas.IntervalIndex.from_arrays
    "pandas.IntervalIndex.from_arrays")(left, right[, ...]) | 从定义左右边界的两个数组构造。 |'
- en: '| [`IntervalIndex.from_tuples`](api/pandas.IntervalIndex.from_tuples.html#pandas.IntervalIndex.from_tuples
    "pandas.IntervalIndex.from_tuples")(data[, closed, ...]) | Construct an IntervalIndex
    from an array-like of tuples. |'
  id: totrans-508
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.from_tuples`](api/pandas.IntervalIndex.from_tuples.html#pandas.IntervalIndex.from_tuples
    "pandas.IntervalIndex.from_tuples")(data[, closed, ...]) | 从元组的类数组构造IntervalIndex。
    |'
- en: '| [`IntervalIndex.from_breaks`](api/pandas.IntervalIndex.from_breaks.html#pandas.IntervalIndex.from_breaks
    "pandas.IntervalIndex.from_breaks")(breaks[, closed, ...]) | Construct an IntervalIndex
    from an array of splits. |'
  id: totrans-509
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.from_breaks`](api/pandas.IntervalIndex.from_breaks.html#pandas.IntervalIndex.from_breaks
    "pandas.IntervalIndex.from_breaks")(breaks[, closed, ...]) | 从拆分数组构造IntervalIndex。
    |'
- en: '| [`IntervalIndex.left`](api/pandas.IntervalIndex.left.html#pandas.IntervalIndex.left
    "pandas.IntervalIndex.left") |  |'
  id: totrans-510
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.left`](api/pandas.IntervalIndex.left.html#pandas.IntervalIndex.left
    "pandas.IntervalIndex.left") |  |'
- en: '| [`IntervalIndex.right`](api/pandas.IntervalIndex.right.html#pandas.IntervalIndex.right
    "pandas.IntervalIndex.right") |  |'
  id: totrans-511
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.right`](api/pandas.IntervalIndex.right.html#pandas.IntervalIndex.right
    "pandas.IntervalIndex.right") |  |'
- en: '| [`IntervalIndex.mid`](api/pandas.IntervalIndex.mid.html#pandas.IntervalIndex.mid
    "pandas.IntervalIndex.mid") |  |'
  id: totrans-512
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.mid`](api/pandas.IntervalIndex.mid.html#pandas.IntervalIndex.mid
    "pandas.IntervalIndex.mid") |  |'
- en: '| [`IntervalIndex.closed`](api/pandas.IntervalIndex.closed.html#pandas.IntervalIndex.closed
    "pandas.IntervalIndex.closed") | String describing the inclusive side the intervals.
    |'
  id: totrans-513
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.closed`](api/pandas.IntervalIndex.closed.html#pandas.IntervalIndex.closed
    "pandas.IntervalIndex.closed") | 描述间隔的包含侧的字符串。 |'
- en: '| [`IntervalIndex.length`](api/pandas.IntervalIndex.length.html#pandas.IntervalIndex.length
    "pandas.IntervalIndex.length") |  |'
  id: totrans-514
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.length`](api/pandas.IntervalIndex.length.html#pandas.IntervalIndex.length
    "pandas.IntervalIndex.length") |  |'
- en: '| [`IntervalIndex.values`](api/pandas.IntervalIndex.values.html#pandas.IntervalIndex.values
    "pandas.IntervalIndex.values") | Return an array representing the data in the
    Index. |'
  id: totrans-515
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.values`](api/pandas.IntervalIndex.values.html#pandas.IntervalIndex.values
    "pandas.IntervalIndex.values") | 返回表示索引中数据的数组。 |'
- en: '| [`IntervalIndex.is_empty`](api/pandas.IntervalIndex.is_empty.html#pandas.IntervalIndex.is_empty
    "pandas.IntervalIndex.is_empty") | Indicates if an interval is empty, meaning
    it contains no points. |'
  id: totrans-516
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.is_empty`](api/pandas.IntervalIndex.is_empty.html#pandas.IntervalIndex.is_empty
    "pandas.IntervalIndex.is_empty") | 表示区间是否为空，即不包含任何点。 |'
- en: '| [`IntervalIndex.is_non_overlapping_monotonic`](api/pandas.IntervalIndex.is_non_overlapping_monotonic.html#pandas.IntervalIndex.is_non_overlapping_monotonic
    "pandas.IntervalIndex.is_non_overlapping_monotonic") | Return a boolean whether
    the IntervalArray is non-overlapping and monotonic. |'
  id: totrans-517
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.is_non_overlapping_monotonic`](api/pandas.IntervalIndex.is_non_overlapping_monotonic.html#pandas.IntervalIndex.is_non_overlapping_monotonic
    "pandas.IntervalIndex.is_non_overlapping_monotonic") | 返回一个布尔值，指示 IntervalArray
    是否不重叠且单调。 |'
- en: '| [`IntervalIndex.is_overlapping`](api/pandas.IntervalIndex.is_overlapping.html#pandas.IntervalIndex.is_overlapping
    "pandas.IntervalIndex.is_overlapping") | Return True if the IntervalIndex has
    overlapping intervals, else False. |'
  id: totrans-518
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.is_overlapping`](api/pandas.IntervalIndex.is_overlapping.html#pandas.IntervalIndex.is_overlapping
    "pandas.IntervalIndex.is_overlapping") | 如果 IntervalIndex 存在重叠的区间，则返回 True，否则返回
    False。 |'
- en: '| [`IntervalIndex.get_loc`](api/pandas.IntervalIndex.get_loc.html#pandas.IntervalIndex.get_loc
    "pandas.IntervalIndex.get_loc")(key) | Get integer location, slice or boolean
    mask for requested label. |'
  id: totrans-519
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.get_loc`](api/pandas.IntervalIndex.get_loc.html#pandas.IntervalIndex.get_loc
    "pandas.IntervalIndex.get_loc")(key) | 获取请求标签的整数位置、切片或布尔掩码。 |'
- en: '| [`IntervalIndex.get_indexer`](api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer")(target[, method, ...]) | Compute indexer and
    mask for new index given the current index. |'
  id: totrans-520
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.get_indexer`](api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer")(target[, method, ...]) | 给定当前索引，计算新索引的索引器和掩码。
    |'
- en: '| [`IntervalIndex.set_closed`](api/pandas.IntervalIndex.set_closed.html#pandas.IntervalIndex.set_closed
    "pandas.IntervalIndex.set_closed")(*args, **kwargs) | Return an identical IntervalArray
    closed on the specified side. |'
  id: totrans-521
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.set_closed`](api/pandas.IntervalIndex.set_closed.html#pandas.IntervalIndex.set_closed
    "pandas.IntervalIndex.set_closed")(*args, **kwargs) | 返回一个在指定侧关闭的相同 IntervalArray。
    |'
- en: '| [`IntervalIndex.contains`](api/pandas.IntervalIndex.contains.html#pandas.IntervalIndex.contains
    "pandas.IntervalIndex.contains")(*args, **kwargs) | Check elementwise if the Intervals
    contain the value. |'
  id: totrans-522
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.contains`](api/pandas.IntervalIndex.contains.html#pandas.IntervalIndex.contains
    "pandas.IntervalIndex.contains")(*args, **kwargs) | 逐个元素检查区间是否包含该值。 |'
- en: '| [`IntervalIndex.overlaps`](api/pandas.IntervalIndex.overlaps.html#pandas.IntervalIndex.overlaps
    "pandas.IntervalIndex.overlaps")(*args, **kwargs) | Check elementwise if an Interval
    overlaps the values in the IntervalArray. |'
  id: totrans-523
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.overlaps`](api/pandas.IntervalIndex.overlaps.html#pandas.IntervalIndex.overlaps
    "pandas.IntervalIndex.overlaps")(*args, **kwargs) | 逐个元素检查区间是否与 IntervalArray
    中的值重叠。 |'
- en: '| [`IntervalIndex.to_tuples`](api/pandas.IntervalIndex.to_tuples.html#pandas.IntervalIndex.to_tuples
    "pandas.IntervalIndex.to_tuples")(*args, **kwargs) | Return an ndarray (if self
    is IntervalArray) or Index (if self is IntervalIndex) of tuples of the form (left,
    right). |'
  id: totrans-524
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.to_tuples`](api/pandas.IntervalIndex.to_tuples.html#pandas.IntervalIndex.to_tuples
    "pandas.IntervalIndex.to_tuples")(*args, **kwargs) | 返回形式为（左边界，右边界）的元组的 ndarray（如果
    self 是 IntervalArray）或索引（如果 self 是 IntervalIndex）。 |'
- en: IntervalIndex components
  id: totrans-525
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 区间索引组件
- en: '| [`IntervalIndex.from_arrays`](api/pandas.IntervalIndex.from_arrays.html#pandas.IntervalIndex.from_arrays
    "pandas.IntervalIndex.from_arrays")(left, right[, ...]) | Construct from two arrays
    defining the left and right bounds. |'
  id: totrans-526
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.from_arrays`](api/pandas.IntervalIndex.from_arrays.html#pandas.IntervalIndex.from_arrays
    "pandas.IntervalIndex.from_arrays")(left, right[, ...]) | 通过定义左右边界的两个数组构造。 |'
- en: '| [`IntervalIndex.from_tuples`](api/pandas.IntervalIndex.from_tuples.html#pandas.IntervalIndex.from_tuples
    "pandas.IntervalIndex.from_tuples")(data[, closed, ...]) | Construct an IntervalIndex
    from an array-like of tuples. |'
  id: totrans-527
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.from_tuples`](api/pandas.IntervalIndex.from_tuples.html#pandas.IntervalIndex.from_tuples
    "pandas.IntervalIndex.from_tuples")(data[, closed, ...]) | 从类似元组的数组构造 IntervalIndex。
    |'
- en: '| [`IntervalIndex.from_breaks`](api/pandas.IntervalIndex.from_breaks.html#pandas.IntervalIndex.from_breaks
    "pandas.IntervalIndex.from_breaks")(breaks[, closed, ...]) | Construct an IntervalIndex
    from an array of splits. |'
  id: totrans-528
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.from_breaks`](api/pandas.IntervalIndex.from_breaks.html#pandas.IntervalIndex.from_breaks
    "pandas.IntervalIndex.from_breaks")(breaks[, closed, ...]) | 从分割数组构造 IntervalIndex。
    |'
- en: '| [`IntervalIndex.left`](api/pandas.IntervalIndex.left.html#pandas.IntervalIndex.left
    "pandas.IntervalIndex.left") |  |'
  id: totrans-529
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.left`](api/pandas.IntervalIndex.left.html#pandas.IntervalIndex.left
    "pandas.IntervalIndex.left") |  |'
- en: '| [`IntervalIndex.right`](api/pandas.IntervalIndex.right.html#pandas.IntervalIndex.right
    "pandas.IntervalIndex.right") |  |'
  id: totrans-530
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.right`](api/pandas.IntervalIndex.right.html#pandas.IntervalIndex.right
    "pandas.IntervalIndex.right") |  |'
- en: '| [`IntervalIndex.mid`](api/pandas.IntervalIndex.mid.html#pandas.IntervalIndex.mid
    "pandas.IntervalIndex.mid") |  |'
  id: totrans-531
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.mid`](api/pandas.IntervalIndex.mid.html#pandas.IntervalIndex.mid
    "pandas.IntervalIndex.mid") |  |'
- en: '| [`IntervalIndex.closed`](api/pandas.IntervalIndex.closed.html#pandas.IntervalIndex.closed
    "pandas.IntervalIndex.closed") | String describing the inclusive side the intervals.
    |'
  id: totrans-532
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.closed`](api/pandas.IntervalIndex.closed.html#pandas.IntervalIndex.closed
    "pandas.IntervalIndex.closed") | 描述区间的包含侧的字符串。 |'
- en: '| [`IntervalIndex.length`](api/pandas.IntervalIndex.length.html#pandas.IntervalIndex.length
    "pandas.IntervalIndex.length") |  |'
  id: totrans-533
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.length`](api/pandas.IntervalIndex.length.html#pandas.IntervalIndex.length
    "pandas.IntervalIndex.length") |  |'
- en: '| [`IntervalIndex.values`](api/pandas.IntervalIndex.values.html#pandas.IntervalIndex.values
    "pandas.IntervalIndex.values") | Return an array representing the data in the
    Index. |'
  id: totrans-534
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.values`](api/pandas.IntervalIndex.values.html#pandas.IntervalIndex.values
    "pandas.IntervalIndex.values") | 返回表示索引中数据的数组。 |'
- en: '| [`IntervalIndex.is_empty`](api/pandas.IntervalIndex.is_empty.html#pandas.IntervalIndex.is_empty
    "pandas.IntervalIndex.is_empty") | Indicates if an interval is empty, meaning
    it contains no points. |'
  id: totrans-535
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.is_empty`](api/pandas.IntervalIndex.is_empty.html#pandas.IntervalIndex.is_empty
    "pandas.IntervalIndex.is_empty") | 指示区间是否为空，即它不包含任何点。 |'
- en: '| [`IntervalIndex.is_non_overlapping_monotonic`](api/pandas.IntervalIndex.is_non_overlapping_monotonic.html#pandas.IntervalIndex.is_non_overlapping_monotonic
    "pandas.IntervalIndex.is_non_overlapping_monotonic") | Return a boolean whether
    the IntervalArray is non-overlapping and monotonic. |'
  id: totrans-536
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.is_non_overlapping_monotonic`](api/pandas.IntervalIndex.is_non_overlapping_monotonic.html#pandas.IntervalIndex.is_non_overlapping_monotonic
    "pandas.IntervalIndex.is_non_overlapping_monotonic") | 返回一个布尔值，指示 IntervalArray
    是否非重叠且单调。 |'
- en: '| [`IntervalIndex.is_overlapping`](api/pandas.IntervalIndex.is_overlapping.html#pandas.IntervalIndex.is_overlapping
    "pandas.IntervalIndex.is_overlapping") | Return True if the IntervalIndex has
    overlapping intervals, else False. |'
  id: totrans-537
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.is_overlapping`](api/pandas.IntervalIndex.is_overlapping.html#pandas.IntervalIndex.is_overlapping
    "pandas.IntervalIndex.is_overlapping") | 如果 IntervalIndex 具有重叠的区间，则返回 True，否则返回
    False。 |'
- en: '| [`IntervalIndex.get_loc`](api/pandas.IntervalIndex.get_loc.html#pandas.IntervalIndex.get_loc
    "pandas.IntervalIndex.get_loc")(key) | Get integer location, slice or boolean
    mask for requested label. |'
  id: totrans-538
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.get_loc`](api/pandas.IntervalIndex.get_loc.html#pandas.IntervalIndex.get_loc
    "pandas.IntervalIndex.get_loc")(key) | 获取所请求标签的整数位置、切片或布尔掩码。 |'
- en: '| [`IntervalIndex.get_indexer`](api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer")(target[, method, ...]) | Compute indexer and
    mask for new index given the current index. |'
  id: totrans-539
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.get_indexer`](api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer")(target[, method, ...]) | 给定当前索引，计算新索引的索引器和掩码。
    |'
- en: '| [`IntervalIndex.set_closed`](api/pandas.IntervalIndex.set_closed.html#pandas.IntervalIndex.set_closed
    "pandas.IntervalIndex.set_closed")(*args, **kwargs) | Return an identical IntervalArray
    closed on the specified side. |'
  id: totrans-540
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.set_closed`](api/pandas.IntervalIndex.set_closed.html#pandas.IntervalIndex.set_closed
    "pandas.IntervalIndex.set_closed")(*args, **kwargs) | 返回一个相同的 IntervalArray，其闭合在指定侧。
    |'
- en: '| [`IntervalIndex.contains`](api/pandas.IntervalIndex.contains.html#pandas.IntervalIndex.contains
    "pandas.IntervalIndex.contains")(*args, **kwargs) | Check elementwise if the Intervals
    contain the value. |'
  id: totrans-541
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.contains`](api/pandas.IntervalIndex.contains.html#pandas.IntervalIndex.contains
    "pandas.IntervalIndex.contains")(*args, **kwargs) | 逐个元素检查区间是否包含该值。 |'
- en: '| [`IntervalIndex.overlaps`](api/pandas.IntervalIndex.overlaps.html#pandas.IntervalIndex.overlaps
    "pandas.IntervalIndex.overlaps")(*args, **kwargs) | Check elementwise if an Interval
    overlaps the values in the IntervalArray. |'
  id: totrans-542
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.overlaps`](api/pandas.IntervalIndex.overlaps.html#pandas.IntervalIndex.overlaps
    "pandas.IntervalIndex.overlaps")(*args, **kwargs) | 逐个元素检查一个区间是否与 IntervalArray
    中的值重叠。 |'
- en: '| [`IntervalIndex.to_tuples`](api/pandas.IntervalIndex.to_tuples.html#pandas.IntervalIndex.to_tuples
    "pandas.IntervalIndex.to_tuples")(*args, **kwargs) | Return an ndarray (if self
    is IntervalArray) or Index (if self is IntervalIndex) of tuples of the form (left,
    right). |'
  id: totrans-543
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalIndex.to_tuples`](api/pandas.IntervalIndex.to_tuples.html#pandas.IntervalIndex.to_tuples
    "pandas.IntervalIndex.to_tuples")(*args, **kwargs) | 返回形式为 (left, right) 的元组的
    ndarray（如果 self 是 IntervalArray）或索引（如果 self 是 IntervalIndex）。 |'
- en: '## MultiIndex'
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: '## MultiIndex'
- en: '| [`MultiIndex`](api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")([levels, codes, sortorder, ...])
    | A multi-level, or hierarchical, index object for pandas objects. |'
  id: totrans-545
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex`](api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")([levels, codes, sortorder, ...])
    | 一个用于 pandas 对象的多级别（层次化）索引对象。 |'
- en: MultiIndex constructors
  id: totrans-546
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MultiIndex 构造器
- en: '| [`MultiIndex.from_arrays`](api/pandas.MultiIndex.from_arrays.html#pandas.MultiIndex.from_arrays
    "pandas.MultiIndex.from_arrays")(arrays[, sortorder, ...]) | Convert arrays to
    MultiIndex. |'
  id: totrans-547
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.from_arrays`](api/pandas.MultiIndex.from_arrays.html#pandas.MultiIndex.from_arrays
    "pandas.MultiIndex.from_arrays")(arrays[, sortorder, ...]) | 将数组转换为 MultiIndex。
    |'
- en: '| [`MultiIndex.from_tuples`](api/pandas.MultiIndex.from_tuples.html#pandas.MultiIndex.from_tuples
    "pandas.MultiIndex.from_tuples")(tuples[, sortorder, ...]) | Convert list of tuples
    to MultiIndex. |'
  id: totrans-548
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.from_tuples`](api/pandas.MultiIndex.from_tuples.html#pandas.MultiIndex.from_tuples
    "pandas.MultiIndex.from_tuples")(tuples[, sortorder, ...]) | 将元组列表转换为 MultiIndex。
    |'
- en: '| [`MultiIndex.from_product`](api/pandas.MultiIndex.from_product.html#pandas.MultiIndex.from_product
    "pandas.MultiIndex.from_product")(iterables[, ...]) | Make a MultiIndex from the
    cartesian product of multiple iterables. |'
  id: totrans-549
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.from_product`](api/pandas.MultiIndex.from_product.html#pandas.MultiIndex.from_product
    "pandas.MultiIndex.from_product")(iterables[, ...]) | 从多个可迭代对象的笛卡尔积创建一个 MultiIndex。
    |'
- en: '| [`MultiIndex.from_frame`](api/pandas.MultiIndex.from_frame.html#pandas.MultiIndex.from_frame
    "pandas.MultiIndex.from_frame")(df[, sortorder, names]) | Make a MultiIndex from
    a DataFrame. |'
  id: totrans-550
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.from_frame`](api/pandas.MultiIndex.from_frame.html#pandas.MultiIndex.from_frame
    "pandas.MultiIndex.from_frame")(df[, sortorder, names]) | 从 DataFrame 创建一个 MultiIndex。
    |'
- en: MultiIndex properties
  id: totrans-551
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MultiIndex 属性
- en: '| [`MultiIndex.names`](api/pandas.MultiIndex.names.html#pandas.MultiIndex.names
    "pandas.MultiIndex.names") | Names of levels in MultiIndex. |'
  id: totrans-552
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.names`](api/pandas.MultiIndex.names.html#pandas.MultiIndex.names
    "pandas.MultiIndex.names") | MultiIndex 中级别的名称。 |'
- en: '| [`MultiIndex.levels`](api/pandas.MultiIndex.levels.html#pandas.MultiIndex.levels
    "pandas.MultiIndex.levels") | Levels of the MultiIndex. |'
  id: totrans-553
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.levels`](api/pandas.MultiIndex.levels.html#pandas.MultiIndex.levels
    "pandas.MultiIndex.levels") | MultiIndex 的级别。 |'
- en: '| [`MultiIndex.codes`](api/pandas.MultiIndex.codes.html#pandas.MultiIndex.codes
    "pandas.MultiIndex.codes") |  |'
  id: totrans-554
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.codes`](api/pandas.MultiIndex.codes.html#pandas.MultiIndex.codes
    "pandas.MultiIndex.codes") |  |'
- en: '| [`MultiIndex.nlevels`](api/pandas.MultiIndex.nlevels.html#pandas.MultiIndex.nlevels
    "pandas.MultiIndex.nlevels") | Integer number of levels in this MultiIndex. |'
  id: totrans-555
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.nlevels`](api/pandas.MultiIndex.nlevels.html#pandas.MultiIndex.nlevels
    "pandas.MultiIndex.nlevels") | 这个 MultiIndex 中的级别数目（整数）。 |'
- en: '| [`MultiIndex.levshape`](api/pandas.MultiIndex.levshape.html#pandas.MultiIndex.levshape
    "pandas.MultiIndex.levshape") | A tuple with the length of each level. |'
  id: totrans-556
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.levshape`](api/pandas.MultiIndex.levshape.html#pandas.MultiIndex.levshape
    "pandas.MultiIndex.levshape") | 每个级别的长度的元组。 |'
- en: '| [`MultiIndex.dtypes`](api/pandas.MultiIndex.dtypes.html#pandas.MultiIndex.dtypes
    "pandas.MultiIndex.dtypes") | Return the dtypes as a Series for the underlying
    MultiIndex. |'
  id: totrans-557
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.dtypes`](api/pandas.MultiIndex.dtypes.html#pandas.MultiIndex.dtypes
    "pandas.MultiIndex.dtypes") | 返回底层 MultiIndex 的 dtypes 作为 Series。 |'
- en: MultiIndex components
  id: totrans-558
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MultiIndex 组件
- en: '| [`MultiIndex.set_levels`](api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels")(levels, *[, level, ...]) | Set new levels on MultiIndex.
    |'
  id: totrans-559
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.set_levels`](api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels")(levels, *[, level, ...]) | 在 MultiIndex 上设置新的级别。
    |'
- en: '| [`MultiIndex.set_codes`](api/pandas.MultiIndex.set_codes.html#pandas.MultiIndex.set_codes
    "pandas.MultiIndex.set_codes")(codes, *[, level, ...]) | Set new codes on MultiIndex.
    |'
  id: totrans-560
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.set_codes`](api/pandas.MultiIndex.set_codes.html#pandas.MultiIndex.set_codes
    "pandas.MultiIndex.set_codes")(codes, *[, level, ...]) | 在 MultiIndex 上设置新的代码。
    |'
- en: '| [`MultiIndex.to_flat_index`](api/pandas.MultiIndex.to_flat_index.html#pandas.MultiIndex.to_flat_index
    "pandas.MultiIndex.to_flat_index")() | Convert a MultiIndex to an Index of Tuples
    containing the level values. |'
  id: totrans-561
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.to_flat_index`](api/pandas.MultiIndex.to_flat_index.html#pandas.MultiIndex.to_flat_index
    "pandas.MultiIndex.to_flat_index")() | 将 MultiIndex 转换为包含级别值的元组的索引。 |'
- en: '| [`MultiIndex.to_frame`](api/pandas.MultiIndex.to_frame.html#pandas.MultiIndex.to_frame
    "pandas.MultiIndex.to_frame")([index, name, ...]) | Create a DataFrame with the
    levels of the MultiIndex as columns. |'
  id: totrans-562
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.to_frame`](api/pandas.MultiIndex.to_frame.html#pandas.MultiIndex.to_frame
    "pandas.MultiIndex.to_frame")([index, name, ...]) | 使用 MultiIndex 的级别创建一个 DataFrame，级别将作为列。
    |'
- en: '| [`MultiIndex.sortlevel`](api/pandas.MultiIndex.sortlevel.html#pandas.MultiIndex.sortlevel
    "pandas.MultiIndex.sortlevel")([level, ascending, ...]) | Sort MultiIndex at the
    requested level. |'
  id: totrans-563
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.sortlevel`](api/pandas.MultiIndex.sortlevel.html#pandas.MultiIndex.sortlevel
    "pandas.MultiIndex.sortlevel")([level, ascending, ...]) | 在请求的级别上对 MultiIndex
    进行排序。 |'
- en: '| [`MultiIndex.droplevel`](api/pandas.MultiIndex.droplevel.html#pandas.MultiIndex.droplevel
    "pandas.MultiIndex.droplevel")([level]) | Return index with requested level(s)
    removed. |'
  id: totrans-564
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.droplevel`](api/pandas.MultiIndex.droplevel.html#pandas.MultiIndex.droplevel
    "pandas.MultiIndex.droplevel")([level]) | 返回删除请求的级别的索引。 |'
- en: '| [`MultiIndex.swaplevel`](api/pandas.MultiIndex.swaplevel.html#pandas.MultiIndex.swaplevel
    "pandas.MultiIndex.swaplevel")([i, j]) | Swap level i with level j. |'
  id: totrans-565
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.swaplevel`](api/pandas.MultiIndex.swaplevel.html#pandas.MultiIndex.swaplevel
    "pandas.MultiIndex.swaplevel")([i, j]) | 交换级别 i 和级别 j。 |'
- en: '| [`MultiIndex.reorder_levels`](api/pandas.MultiIndex.reorder_levels.html#pandas.MultiIndex.reorder_levels
    "pandas.MultiIndex.reorder_levels")(order) | Rearrange levels using input order.
    |'
  id: totrans-566
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.reorder_levels`](api/pandas.MultiIndex.reorder_levels.html#pandas.MultiIndex.reorder_levels
    "pandas.MultiIndex.reorder_levels")(order) | 使用输入顺序重新排列级别。 |'
- en: '| [`MultiIndex.remove_unused_levels`](api/pandas.MultiIndex.remove_unused_levels.html#pandas.MultiIndex.remove_unused_levels
    "pandas.MultiIndex.remove_unused_levels")() | Create new MultiIndex from current
    that removes unused levels. |'
  id: totrans-567
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.remove_unused_levels`](api/pandas.MultiIndex.remove_unused_levels.html#pandas.MultiIndex.remove_unused_levels
    "pandas.MultiIndex.remove_unused_levels")() | 从当前中创建新的 MultiIndex，删除未使用的级别。 |'
- en: '| [`MultiIndex.drop`](api/pandas.MultiIndex.drop.html#pandas.MultiIndex.drop
    "pandas.MultiIndex.drop")(codes[, level, errors]) | Make a new [`pandas.MultiIndex`](api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with the passed list of codes deleted. |'
  id: totrans-568
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.drop`](api/pandas.MultiIndex.drop.html#pandas.MultiIndex.drop
    "pandas.MultiIndex.drop")(codes[, level, errors]) | 使用传递的代码列表创建一个新的 [`pandas.MultiIndex`](api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") 删除的索引。 |'
- en: '| [`MultiIndex.copy`](api/pandas.MultiIndex.copy.html#pandas.MultiIndex.copy
    "pandas.MultiIndex.copy")([names, deep, name]) | Make a copy of this object. |'
  id: totrans-569
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.copy`](api/pandas.MultiIndex.copy.html#pandas.MultiIndex.copy
    "pandas.MultiIndex.copy")([names, deep, name]) | 创建此对象的副本。 |'
- en: '| [`MultiIndex.append`](api/pandas.MultiIndex.append.html#pandas.MultiIndex.append
    "pandas.MultiIndex.append")(other) | Append a collection of Index options together.
    |'
  id: totrans-570
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.append`](api/pandas.MultiIndex.append.html#pandas.MultiIndex.append
    "pandas.MultiIndex.append")(other) | 将一系列索引选项附加在一起。 |'
- en: '| [`MultiIndex.truncate`](api/pandas.MultiIndex.truncate.html#pandas.MultiIndex.truncate
    "pandas.MultiIndex.truncate")([before, after]) | Slice index between two labels
    / tuples, return new MultiIndex. |'
  id: totrans-571
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.truncate`](api/pandas.MultiIndex.truncate.html#pandas.MultiIndex.truncate
    "pandas.MultiIndex.truncate")([before, after]) | 在两个标签/元组之间切片索引，返回新的 MultiIndex。
    |'
- en: MultiIndex selecting
  id: totrans-572
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 多级索引选择
- en: '| [`MultiIndex.get_loc`](api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc")(key) | Get location for a label or a tuple of labels.
    |'
  id: totrans-573
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.get_loc`](api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc")(key) | 获取标签或标签元组的位置。 |'
- en: '| [`MultiIndex.get_locs`](api/pandas.MultiIndex.get_locs.html#pandas.MultiIndex.get_locs
    "pandas.MultiIndex.get_locs")(seq) | Get location for a sequence of labels. |'
  id: totrans-574
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.get_locs`](api/pandas.MultiIndex.get_locs.html#pandas.MultiIndex.get_locs
    "pandas.MultiIndex.get_locs")(seq) | 获取标签序列的位置。 |'
- en: '| [`MultiIndex.get_loc_level`](api/pandas.MultiIndex.get_loc_level.html#pandas.MultiIndex.get_loc_level
    "pandas.MultiIndex.get_loc_level")(key[, level, ...]) | Get location and sliced
    index for requested label(s)/level(s). |'
  id: totrans-575
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.get_loc_level`](api/pandas.MultiIndex.get_loc_level.html#pandas.MultiIndex.get_loc_level
    "pandas.MultiIndex.get_loc_level")(key[, level, ...]) | 获取所请求标签/级别的位置和切片索引。 |'
- en: '| [`MultiIndex.get_indexer`](api/pandas.MultiIndex.get_indexer.html#pandas.MultiIndex.get_indexer
    "pandas.MultiIndex.get_indexer")(target[, method, ...]) | Compute indexer and
    mask for new index given the current index. |'
  id: totrans-576
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.get_indexer`](api/pandas.MultiIndex.get_indexer.html#pandas.MultiIndex.get_indexer
    "pandas.MultiIndex.get_indexer")(target[, method, ...]) | 针对当前索引计算新索引的索引器和掩码。
    |'
- en: '| [`MultiIndex.get_level_values`](api/pandas.MultiIndex.get_level_values.html#pandas.MultiIndex.get_level_values
    "pandas.MultiIndex.get_level_values")(level) | Return vector of label values for
    requested level. |'
  id: totrans-577
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.get_level_values`](api/pandas.MultiIndex.get_level_values.html#pandas.MultiIndex.get_level_values
    "pandas.MultiIndex.get_level_values")(level) | 返回所请求级别的标签值向量。 |'
- en: '| [`IndexSlice`](api/pandas.IndexSlice.html#pandas.IndexSlice "pandas.IndexSlice")
    | Create an object to more easily perform multi-index slicing. |'
  id: totrans-578
  prefs: []
  type: TYPE_TB
  zh: '| [`IndexSlice`](api/pandas.IndexSlice.html#pandas.IndexSlice "pandas.IndexSlice")
    | 创建一个对象，更容易执行多级索引切片。 |'
- en: MultiIndex constructors
  id: totrans-579
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MultiIndex 构造器
- en: '| [`MultiIndex.from_arrays`](api/pandas.MultiIndex.from_arrays.html#pandas.MultiIndex.from_arrays
    "pandas.MultiIndex.from_arrays")(arrays[, sortorder, ...]) | Convert arrays to
    MultiIndex. |'
  id: totrans-580
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.from_arrays`](api/pandas.MultiIndex.from_arrays.html#pandas.MultiIndex.from_arrays
    "pandas.MultiIndex.from_arrays")(arrays[, sortorder, ...]) | 将数组转换为 MultiIndex。
    |'
- en: '| [`MultiIndex.from_tuples`](api/pandas.MultiIndex.from_tuples.html#pandas.MultiIndex.from_tuples
    "pandas.MultiIndex.from_tuples")(tuples[, sortorder, ...]) | Convert list of tuples
    to MultiIndex. |'
  id: totrans-581
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.from_tuples`](api/pandas.MultiIndex.from_tuples.html#pandas.MultiIndex.from_tuples
    "pandas.MultiIndex.from_tuples")(tuples[, sortorder, ...]) | 将元组列表转换为 MultiIndex。
    |'
- en: '| [`MultiIndex.from_product`](api/pandas.MultiIndex.from_product.html#pandas.MultiIndex.from_product
    "pandas.MultiIndex.from_product")(iterables[, ...]) | Make a MultiIndex from the
    cartesian product of multiple iterables. |'
  id: totrans-582
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.from_product`](api/pandas.MultiIndex.from_product.html#pandas.MultiIndex.from_product
    "pandas.MultiIndex.from_product")(iterables[, ...]) | 从多个可迭代对象的笛卡尔积中创建 MultiIndex。
    |'
- en: '| [`MultiIndex.from_frame`](api/pandas.MultiIndex.from_frame.html#pandas.MultiIndex.from_frame
    "pandas.MultiIndex.from_frame")(df[, sortorder, names]) | Make a MultiIndex from
    a DataFrame. |'
  id: totrans-583
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.from_frame`](api/pandas.MultiIndex.from_frame.html#pandas.MultiIndex.from_frame
    "pandas.MultiIndex.from_frame")(df[, sortorder, names]) | 从 DataFrame 创建 MultiIndex。
    |'
- en: MultiIndex properties
  id: totrans-584
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MultiIndex 属性
- en: '| [`MultiIndex.names`](api/pandas.MultiIndex.names.html#pandas.MultiIndex.names
    "pandas.MultiIndex.names") | Names of levels in MultiIndex. |'
  id: totrans-585
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.names`](api/pandas.MultiIndex.names.html#pandas.MultiIndex.names
    "pandas.MultiIndex.names") | MultiIndex 中级别的名称。 |'
- en: '| [`MultiIndex.levels`](api/pandas.MultiIndex.levels.html#pandas.MultiIndex.levels
    "pandas.MultiIndex.levels") | Levels of the MultiIndex. |'
  id: totrans-586
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.levels`](api/pandas.MultiIndex.levels.html#pandas.MultiIndex.levels
    "pandas.MultiIndex.levels") | MultiIndex 的级别。 |'
- en: '| [`MultiIndex.codes`](api/pandas.MultiIndex.codes.html#pandas.MultiIndex.codes
    "pandas.MultiIndex.codes") |  |'
  id: totrans-587
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.codes`](api/pandas.MultiIndex.codes.html#pandas.MultiIndex.codes
    "pandas.MultiIndex.codes") |  |'
- en: '| [`MultiIndex.nlevels`](api/pandas.MultiIndex.nlevels.html#pandas.MultiIndex.nlevels
    "pandas.MultiIndex.nlevels") | Integer number of levels in this MultiIndex. |'
  id: totrans-588
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.nlevels`](api/pandas.MultiIndex.nlevels.html#pandas.MultiIndex.nlevels
    "pandas.MultiIndex.nlevels") | 此 MultiIndex 中级别的整数数量。 |'
- en: '| [`MultiIndex.levshape`](api/pandas.MultiIndex.levshape.html#pandas.MultiIndex.levshape
    "pandas.MultiIndex.levshape") | A tuple with the length of each level. |'
  id: totrans-589
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.levshape`](api/pandas.MultiIndex.levshape.html#pandas.MultiIndex.levshape
    "pandas.MultiIndex.levshape") | 包含每个级别长度的元组。 |'
- en: '| [`MultiIndex.dtypes`](api/pandas.MultiIndex.dtypes.html#pandas.MultiIndex.dtypes
    "pandas.MultiIndex.dtypes") | Return the dtypes as a Series for the underlying
    MultiIndex. |'
  id: totrans-590
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.dtypes`](api/pandas.MultiIndex.dtypes.html#pandas.MultiIndex.dtypes
    "pandas.MultiIndex.dtypes") | 返回基础 MultiIndex 的 dtypes 作为 Series。 |'
- en: MultiIndex components
  id: totrans-591
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MultiIndex 组件
- en: '| [`MultiIndex.set_levels`](api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels")(levels, *[, level, ...]) | Set new levels on MultiIndex.
    |'
  id: totrans-592
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.set_levels`](api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels")(levels, *[, level, ...]) | 设置 MultiIndex 的新级别。
    |'
- en: '| [`MultiIndex.set_codes`](api/pandas.MultiIndex.set_codes.html#pandas.MultiIndex.set_codes
    "pandas.MultiIndex.set_codes")(codes, *[, level, ...]) | Set new codes on MultiIndex.
    |'
  id: totrans-593
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.set_codes`](api/pandas.MultiIndex.set_codes.html#pandas.MultiIndex.set_codes
    "pandas.MultiIndex.set_codes")(codes, *[, level, ...]) | 设置 MultiIndex 的新代码。 |'
- en: '| [`MultiIndex.to_flat_index`](api/pandas.MultiIndex.to_flat_index.html#pandas.MultiIndex.to_flat_index
    "pandas.MultiIndex.to_flat_index")() | Convert a MultiIndex to an Index of Tuples
    containing the level values. |'
  id: totrans-594
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.to_flat_index`](api/pandas.MultiIndex.to_flat_index.html#pandas.MultiIndex.to_flat_index
    "pandas.MultiIndex.to_flat_index")() | 将 MultiIndex 转换为包含级别值的元组的索引。 |'
- en: '| [`MultiIndex.to_frame`](api/pandas.MultiIndex.to_frame.html#pandas.MultiIndex.to_frame
    "pandas.MultiIndex.to_frame")([index, name, ...]) | Create a DataFrame with the
    levels of the MultiIndex as columns. |'
  id: totrans-595
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.to_frame`](api/pandas.MultiIndex.to_frame.html#pandas.MultiIndex.to_frame
    "pandas.MultiIndex.to_frame")([index, name, ...]) | 创建一个以 MultiIndex 级别为列的 DataFrame。
    |'
- en: '| [`MultiIndex.sortlevel`](api/pandas.MultiIndex.sortlevel.html#pandas.MultiIndex.sortlevel
    "pandas.MultiIndex.sortlevel")([level, ascending, ...]) | Sort MultiIndex at the
    requested level. |'
  id: totrans-596
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.sortlevel`](api/pandas.MultiIndex.sortlevel.html#pandas.MultiIndex.sortlevel
    "pandas.MultiIndex.sortlevel")([level, ascending, ...]) | 在请求的级别上对 MultiIndex
    进行排序。 |'
- en: '| [`MultiIndex.droplevel`](api/pandas.MultiIndex.droplevel.html#pandas.MultiIndex.droplevel
    "pandas.MultiIndex.droplevel")([level]) | Return index with requested level(s)
    removed. |'
  id: totrans-597
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.droplevel`](api/pandas.MultiIndex.droplevel.html#pandas.MultiIndex.droplevel
    "pandas.MultiIndex.droplevel")([level]) | 返回删除了请求级别的索引。 |'
- en: '| [`MultiIndex.swaplevel`](api/pandas.MultiIndex.swaplevel.html#pandas.MultiIndex.swaplevel
    "pandas.MultiIndex.swaplevel")([i, j]) | Swap level i with level j. |'
  id: totrans-598
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.swaplevel`](api/pandas.MultiIndex.swaplevel.html#pandas.MultiIndex.swaplevel
    "pandas.MultiIndex.swaplevel")([i, j]) | 交换级别 i 和级别 j。 |'
- en: '| [`MultiIndex.reorder_levels`](api/pandas.MultiIndex.reorder_levels.html#pandas.MultiIndex.reorder_levels
    "pandas.MultiIndex.reorder_levels")(order) | Rearrange levels using input order.
    |'
  id: totrans-599
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.reorder_levels`](api/pandas.MultiIndex.reorder_levels.html#pandas.MultiIndex.reorder_levels
    "pandas.MultiIndex.reorder_levels")(order) | 使用输入顺序重新排列级别。 |'
- en: '| [`MultiIndex.remove_unused_levels`](api/pandas.MultiIndex.remove_unused_levels.html#pandas.MultiIndex.remove_unused_levels
    "pandas.MultiIndex.remove_unused_levels")() | Create new MultiIndex from current
    that removes unused levels. |'
  id: totrans-600
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.remove_unused_levels`](api/pandas.MultiIndex.remove_unused_levels.html#pandas.MultiIndex.remove_unused_levels
    "pandas.MultiIndex.remove_unused_levels")() | 从当前索引创建新的 MultiIndex，删除未使用的级别。 |'
- en: '| [`MultiIndex.drop`](api/pandas.MultiIndex.drop.html#pandas.MultiIndex.drop
    "pandas.MultiIndex.drop")(codes[, level, errors]) | Make a new [`pandas.MultiIndex`](api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with the passed list of codes deleted. |'
  id: totrans-601
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.drop`](api/pandas.MultiIndex.drop.html#pandas.MultiIndex.drop
    "pandas.MultiIndex.drop")(codes[, level, errors]) | 使用传递的代码列表创建一个新的[`pandas.MultiIndex`](api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")，其中包含被删除的代码。 |'
- en: '| [`MultiIndex.copy`](api/pandas.MultiIndex.copy.html#pandas.MultiIndex.copy
    "pandas.MultiIndex.copy")([names, deep, name]) | Make a copy of this object. |'
  id: totrans-602
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.copy`](api/pandas.MultiIndex.copy.html#pandas.MultiIndex.copy
    "pandas.MultiIndex.copy")([names, deep, name]) | 复制此对象。 |'
- en: '| [`MultiIndex.append`](api/pandas.MultiIndex.append.html#pandas.MultiIndex.append
    "pandas.MultiIndex.append")(other) | Append a collection of Index options together.
    |'
  id: totrans-603
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.append`](api/pandas.MultiIndex.append.html#pandas.MultiIndex.append
    "pandas.MultiIndex.append")(other) | 将一系列索引选项追加在一起。 |'
- en: '| [`MultiIndex.truncate`](api/pandas.MultiIndex.truncate.html#pandas.MultiIndex.truncate
    "pandas.MultiIndex.truncate")([before, after]) | Slice index between two labels
    / tuples, return new MultiIndex. |'
  id: totrans-604
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.truncate`](api/pandas.MultiIndex.truncate.html#pandas.MultiIndex.truncate
    "pandas.MultiIndex.truncate")([before, after]) | 在两个标签/元组之间切片索引，返回新的 MultiIndex。
    |'
- en: MultiIndex selecting
  id: totrans-605
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择多重索引
- en: '| [`MultiIndex.get_loc`](api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc")(key) | Get location for a label or a tuple of labels.
    |'
  id: totrans-606
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.get_loc`](api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc
    "pandas.MultiIndex.get_loc")（key） | 获取标签或标签元组的位置。 |'
- en: '| [`MultiIndex.get_locs`](api/pandas.MultiIndex.get_locs.html#pandas.MultiIndex.get_locs
    "pandas.MultiIndex.get_locs")(seq) | Get location for a sequence of labels. |'
  id: totrans-607
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.get_locs`](api/pandas.MultiIndex.get_locs.html#pandas.MultiIndex.get_locs
    "pandas.MultiIndex.get_locs")(seq) | 获取一系列标签的位置。 |'
- en: '| [`MultiIndex.get_loc_level`](api/pandas.MultiIndex.get_loc_level.html#pandas.MultiIndex.get_loc_level
    "pandas.MultiIndex.get_loc_level")(key[, level, ...]) | Get location and sliced
    index for requested label(s)/level(s). |'
  id: totrans-608
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.get_loc_level`](api/pandas.MultiIndex.get_loc_level.html#pandas.MultiIndex.get_loc_level
    "pandas.MultiIndex.get_loc_level")(key[, level, ...]) | 获取请求的标签/级别的位置和切片索引。 |'
- en: '| [`MultiIndex.get_indexer`](api/pandas.MultiIndex.get_indexer.html#pandas.MultiIndex.get_indexer
    "pandas.MultiIndex.get_indexer")(target[, method, ...]) | Compute indexer and
    mask for new index given the current index. |'
  id: totrans-609
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.get_indexer`](api/pandas.MultiIndex.get_indexer.html#pandas.MultiIndex.get_indexer
    "pandas.MultiIndex.get_indexer")(target[, method, ...]) | 根据当前索引计算新索引的索引器和掩码。
    |'
- en: '| [`MultiIndex.get_level_values`](api/pandas.MultiIndex.get_level_values.html#pandas.MultiIndex.get_level_values
    "pandas.MultiIndex.get_level_values")(level) | Return vector of label values for
    requested level. |'
  id: totrans-610
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiIndex.get_level_values`](api/pandas.MultiIndex.get_level_values.html#pandas.MultiIndex.get_level_values
    "pandas.MultiIndex.get_level_values")(level) | 返回请求级别的标签值向量。 |'
- en: '| [`IndexSlice`](api/pandas.IndexSlice.html#pandas.IndexSlice "pandas.IndexSlice")
    | Create an object to more easily perform multi-index slicing. |'
  id: totrans-611
  prefs: []
  type: TYPE_TB
  zh: '| [`IndexSlice`](api/pandas.IndexSlice.html#pandas.IndexSlice "pandas.IndexSlice")
    | 创建一个对象，更容易执行多级索引切片。 |'
- en: '## DatetimeIndex'
  id: totrans-612
  prefs: []
  type: TYPE_NORMAL
  zh: '## DatetimeIndex'
- en: '| [`DatetimeIndex`](api/pandas.DatetimeIndex.html#pandas.DatetimeIndex "pandas.DatetimeIndex")([data, freq, tz, normalize, ...])
    | Immutable ndarray-like of datetime64 data. |'
  id: totrans-613
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex`](api/pandas.DatetimeIndex.html#pandas.DatetimeIndex "pandas.DatetimeIndex")([data, freq, tz, normalize, ...])
    | 不可变的类似ndarray的datetime64数据。 |'
- en: Time/date components
  id: totrans-614
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 时间/日期组件
- en: '| [`DatetimeIndex.year`](api/pandas.DatetimeIndex.year.html#pandas.DatetimeIndex.year
    "pandas.DatetimeIndex.year") | The year of the datetime. |'
  id: totrans-615
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.year`](api/pandas.DatetimeIndex.year.html#pandas.DatetimeIndex.year
    "pandas.DatetimeIndex.year") | 日期的年份。 |'
- en: '| [`DatetimeIndex.month`](api/pandas.DatetimeIndex.month.html#pandas.DatetimeIndex.month
    "pandas.DatetimeIndex.month") | The month as January=1, December=12. |'
  id: totrans-616
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.month`](api/pandas.DatetimeIndex.month.html#pandas.DatetimeIndex.month
    "pandas.DatetimeIndex.month") | 月份，一月为1，十二月为12。 |'
- en: '| [`DatetimeIndex.day`](api/pandas.DatetimeIndex.day.html#pandas.DatetimeIndex.day
    "pandas.DatetimeIndex.day") | The day of the datetime. |'
  id: totrans-617
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.day`](api/pandas.DatetimeIndex.day.html#pandas.DatetimeIndex.day
    "pandas.DatetimeIndex.day") | 日期的日部分。 |'
- en: '| [`DatetimeIndex.hour`](api/pandas.DatetimeIndex.hour.html#pandas.DatetimeIndex.hour
    "pandas.DatetimeIndex.hour") | The hours of the datetime. |'
  id: totrans-618
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.hour`](api/pandas.DatetimeIndex.hour.html#pandas.DatetimeIndex.hour
    "pandas.DatetimeIndex.hour") | 日期的小时部分。 |'
- en: '| [`DatetimeIndex.minute`](api/pandas.DatetimeIndex.minute.html#pandas.DatetimeIndex.minute
    "pandas.DatetimeIndex.minute") | The minutes of the datetime. |'
  id: totrans-619
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.minute`](api/pandas.DatetimeIndex.minute.html#pandas.DatetimeIndex.minute
    "pandas.DatetimeIndex.minute") | 日期的分钟部分。 |'
- en: '| [`DatetimeIndex.second`](api/pandas.DatetimeIndex.second.html#pandas.DatetimeIndex.second
    "pandas.DatetimeIndex.second") | The seconds of the datetime. |'
  id: totrans-620
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.second`](api/pandas.DatetimeIndex.second.html#pandas.DatetimeIndex.second
    "pandas.DatetimeIndex.second") | 日期的秒部分。 |'
- en: '| [`DatetimeIndex.microsecond`](api/pandas.DatetimeIndex.microsecond.html#pandas.DatetimeIndex.microsecond
    "pandas.DatetimeIndex.microsecond") | The microseconds of the datetime. |'
  id: totrans-621
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.microsecond`](api/pandas.DatetimeIndex.microsecond.html#pandas.DatetimeIndex.microsecond
    "pandas.DatetimeIndex.microsecond") | 日期的微秒部分。 |'
- en: '| [`DatetimeIndex.nanosecond`](api/pandas.DatetimeIndex.nanosecond.html#pandas.DatetimeIndex.nanosecond
    "pandas.DatetimeIndex.nanosecond") | The nanoseconds of the datetime. |'
  id: totrans-622
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.nanosecond`](api/pandas.DatetimeIndex.nanosecond.html#pandas.DatetimeIndex.nanosecond
    "pandas.DatetimeIndex.nanosecond") | 日期的纳秒部分。 |'
- en: '| [`DatetimeIndex.date`](api/pandas.DatetimeIndex.date.html#pandas.DatetimeIndex.date
    "pandas.DatetimeIndex.date") | Returns numpy array of python [`datetime.date`](https://docs.python.org/3/library/datetime.html#datetime.date
    "(in Python v3.12)") objects. |'
  id: totrans-623
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.date`](api/pandas.DatetimeIndex.date.html#pandas.DatetimeIndex.date
    "pandas.DatetimeIndex.date") | 返回python [`datetime.date`](https://docs.python.org/3/library/datetime.html#datetime.date
    "(in Python v3.12)") 对象的numpy数组。 |'
- en: '| [`DatetimeIndex.time`](api/pandas.DatetimeIndex.time.html#pandas.DatetimeIndex.time
    "pandas.DatetimeIndex.time") | Returns numpy array of [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(in Python v3.12)") objects. |'
  id: totrans-624
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.time`](api/pandas.DatetimeIndex.time.html#pandas.DatetimeIndex.time
    "pandas.DatetimeIndex.time") | 返回python [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(in Python v3.12)") 对象的numpy数组。 |'
- en: '| [`DatetimeIndex.timetz`](api/pandas.DatetimeIndex.timetz.html#pandas.DatetimeIndex.timetz
    "pandas.DatetimeIndex.timetz") | Returns numpy array of [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(in Python v3.12)") objects with timezones. |'
  id: totrans-625
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.timetz`](api/pandas.DatetimeIndex.timetz.html#pandas.DatetimeIndex.timetz
    "pandas.DatetimeIndex.timetz") | 返回带有时区的python [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(in Python v3.12)") 对象的numpy数组。 |'
- en: '| [`DatetimeIndex.dayofyear`](api/pandas.DatetimeIndex.dayofyear.html#pandas.DatetimeIndex.dayofyear
    "pandas.DatetimeIndex.dayofyear") | The ordinal day of the year. |'
  id: totrans-626
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.dayofyear`](api/pandas.DatetimeIndex.dayofyear.html#pandas.DatetimeIndex.dayofyear
    "pandas.DatetimeIndex.dayofyear") | 年份中的第几天。 |'
- en: '| [`DatetimeIndex.day_of_year`](api/pandas.DatetimeIndex.day_of_year.html#pandas.DatetimeIndex.day_of_year
    "pandas.DatetimeIndex.day_of_year") | The ordinal day of the year. |'
  id: totrans-627
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.day_of_year`](api/pandas.DatetimeIndex.day_of_year.html#pandas.DatetimeIndex.day_of_year
    "pandas.DatetimeIndex.day_of_year") | 年份中的第几天。 |'
- en: '| [`DatetimeIndex.dayofweek`](api/pandas.DatetimeIndex.dayofweek.html#pandas.DatetimeIndex.dayofweek
    "pandas.DatetimeIndex.dayofweek") | The day of the week with Monday=0, Sunday=6.
    |'
  id: totrans-628
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.dayofweek`](api/pandas.DatetimeIndex.dayofweek.html#pandas.DatetimeIndex.dayofweek
    "pandas.DatetimeIndex.dayofweek") | 表示一周中的第几天，星期一为0，星期日为6。 |'
- en: '| [`DatetimeIndex.day_of_week`](api/pandas.DatetimeIndex.day_of_week.html#pandas.DatetimeIndex.day_of_week
    "pandas.DatetimeIndex.day_of_week") | The day of the week with Monday=0, Sunday=6.
    |'
  id: totrans-629
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.day_of_week`](api/pandas.DatetimeIndex.day_of_week.html#pandas.DatetimeIndex.day_of_week
    "pandas.DatetimeIndex.day_of_week") | 表示一周中的第几天，星期一为0，星期日为6。 |'
- en: '| [`DatetimeIndex.weekday`](api/pandas.DatetimeIndex.weekday.html#pandas.DatetimeIndex.weekday
    "pandas.DatetimeIndex.weekday") | The day of the week with Monday=0, Sunday=6.
    |'
  id: totrans-630
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.weekday`](api/pandas.DatetimeIndex.weekday.html#pandas.DatetimeIndex.weekday
    "pandas.DatetimeIndex.weekday") | 表示一周中的第几天，星期一为0，星期日为6。 |'
- en: '| [`DatetimeIndex.quarter`](api/pandas.DatetimeIndex.quarter.html#pandas.DatetimeIndex.quarter
    "pandas.DatetimeIndex.quarter") | The quarter of the date. |'
  id: totrans-631
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.quarter`](api/pandas.DatetimeIndex.quarter.html#pandas.DatetimeIndex.quarter
    "pandas.DatetimeIndex.quarter") | 日期所在的季度。 |'
- en: '| [`DatetimeIndex.tz`](api/pandas.DatetimeIndex.tz.html#pandas.DatetimeIndex.tz
    "pandas.DatetimeIndex.tz") | Return the timezone. |'
  id: totrans-632
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.tz`](api/pandas.DatetimeIndex.tz.html#pandas.DatetimeIndex.tz
    "pandas.DatetimeIndex.tz") | 返回时区。 |'
- en: '| [`DatetimeIndex.freq`](api/pandas.DatetimeIndex.freq.html#pandas.DatetimeIndex.freq
    "pandas.DatetimeIndex.freq") |  |'
  id: totrans-633
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.freq`](api/pandas.DatetimeIndex.freq.html#pandas.DatetimeIndex.freq
    "pandas.DatetimeIndex.freq") |  |'
- en: '| [`DatetimeIndex.freqstr`](api/pandas.DatetimeIndex.freqstr.html#pandas.DatetimeIndex.freqstr
    "pandas.DatetimeIndex.freqstr") | Return the frequency object as a string if it''s
    set, otherwise None. |'
  id: totrans-634
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.freqstr`](api/pandas.DatetimeIndex.freqstr.html#pandas.DatetimeIndex.freqstr
    "pandas.DatetimeIndex.freqstr") | 如果设置了频率对象，则返回字符串，否则返回None。 |'
- en: '| [`DatetimeIndex.is_month_start`](api/pandas.DatetimeIndex.is_month_start.html#pandas.DatetimeIndex.is_month_start
    "pandas.DatetimeIndex.is_month_start") | Indicates whether the date is the first
    day of the month. |'
  id: totrans-635
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.is_month_start`](api/pandas.DatetimeIndex.is_month_start.html#pandas.DatetimeIndex.is_month_start
    "pandas.DatetimeIndex.is_month_start") | 表示日期是否为月初。 |'
- en: '| [`DatetimeIndex.is_month_end`](api/pandas.DatetimeIndex.is_month_end.html#pandas.DatetimeIndex.is_month_end
    "pandas.DatetimeIndex.is_month_end") | Indicates whether the date is the last
    day of the month. |'
  id: totrans-636
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.is_month_end`](api/pandas.DatetimeIndex.is_month_end.html#pandas.DatetimeIndex.is_month_end
    "pandas.DatetimeIndex.is_month_end") | 表示日期是否为月底。 |'
- en: '| [`DatetimeIndex.is_quarter_start`](api/pandas.DatetimeIndex.is_quarter_start.html#pandas.DatetimeIndex.is_quarter_start
    "pandas.DatetimeIndex.is_quarter_start") | Indicator for whether the date is the
    first day of a quarter. |'
  id: totrans-637
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.is_quarter_start`](api/pandas.DatetimeIndex.is_quarter_start.html#pandas.DatetimeIndex.is_quarter_start
    "pandas.DatetimeIndex.is_quarter_start") | 指示日期是否为季度的第一天。 |'
- en: '| [`DatetimeIndex.is_quarter_end`](api/pandas.DatetimeIndex.is_quarter_end.html#pandas.DatetimeIndex.is_quarter_end
    "pandas.DatetimeIndex.is_quarter_end") | Indicator for whether the date is the
    last day of a quarter. |'
  id: totrans-638
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.is_quarter_end`](api/pandas.DatetimeIndex.is_quarter_end.html#pandas.DatetimeIndex.is_quarter_end
    "pandas.DatetimeIndex.is_quarter_end") | 指示日期是否为季度的最后一天。 |'
- en: '| [`DatetimeIndex.is_year_start`](api/pandas.DatetimeIndex.is_year_start.html#pandas.DatetimeIndex.is_year_start
    "pandas.DatetimeIndex.is_year_start") | Indicate whether the date is the first
    day of a year. |'
  id: totrans-639
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.is_year_start`](api/pandas.DatetimeIndex.is_year_start.html#pandas.DatetimeIndex.is_year_start
    "pandas.DatetimeIndex.is_year_start") | 表示日期是否为一年的第一天。 |'
- en: '| [`DatetimeIndex.is_year_end`](api/pandas.DatetimeIndex.is_year_end.html#pandas.DatetimeIndex.is_year_end
    "pandas.DatetimeIndex.is_year_end") | Indicate whether the date is the last day
    of the year. |'
  id: totrans-640
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.is_year_end`](api/pandas.DatetimeIndex.is_year_end.html#pandas.DatetimeIndex.is_year_end
    "pandas.DatetimeIndex.is_year_end") | 表示日期是否为一年的最后一天。 |'
- en: '| [`DatetimeIndex.is_leap_year`](api/pandas.DatetimeIndex.is_leap_year.html#pandas.DatetimeIndex.is_leap_year
    "pandas.DatetimeIndex.is_leap_year") | Boolean indicator if the date belongs to
    a leap year. |'
  id: totrans-641
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.is_leap_year`](api/pandas.DatetimeIndex.is_leap_year.html#pandas.DatetimeIndex.is_leap_year
    "pandas.DatetimeIndex.is_leap_year") | 如果日期属于闰年，则返回布尔指示符。 |'
- en: '| [`DatetimeIndex.inferred_freq`](api/pandas.DatetimeIndex.inferred_freq.html#pandas.DatetimeIndex.inferred_freq
    "pandas.DatetimeIndex.inferred_freq") | Tries to return a string representing
    a frequency generated by infer_freq. |'
  id: totrans-642
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.inferred_freq`](api/pandas.DatetimeIndex.inferred_freq.html#pandas.DatetimeIndex.inferred_freq
    "pandas.DatetimeIndex.inferred_freq") | 尝试返回由infer_freq生成的表示频率的字符串。 |'
- en: Selecting
  id: totrans-643
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择
- en: '| [`DatetimeIndex.indexer_at_time`](api/pandas.DatetimeIndex.indexer_at_time.html#pandas.DatetimeIndex.indexer_at_time
    "pandas.DatetimeIndex.indexer_at_time")(time[, asof]) | Return index locations
    of values at particular time of day. |'
  id: totrans-644
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.indexer_at_time`](api/pandas.DatetimeIndex.indexer_at_time.html#pandas.DatetimeIndex.indexer_at_time
    "pandas.DatetimeIndex.indexer_at_time")(time[, asof]) | 返回特定时间的值的索引位置。 |'
- en: '| [`DatetimeIndex.indexer_between_time`](api/pandas.DatetimeIndex.indexer_between_time.html#pandas.DatetimeIndex.indexer_between_time
    "pandas.DatetimeIndex.indexer_between_time")(...[, ...]) | Return index locations
    of values between particular times of day. |'
  id: totrans-645
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.indexer_between_time`](api/pandas.DatetimeIndex.indexer_between_time.html#pandas.DatetimeIndex.indexer_between_time
    "pandas.DatetimeIndex.indexer_between_time")(...[, ...]) | 返回特定时间段内值的索引位置。 |'
- en: Time-specific operations
  id: totrans-646
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 时间特定操作
- en: '| [`DatetimeIndex.normalize`](api/pandas.DatetimeIndex.normalize.html#pandas.DatetimeIndex.normalize
    "pandas.DatetimeIndex.normalize")(*args, **kwargs) | Convert times to midnight.
    |'
  id: totrans-647
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.normalize`](api/pandas.DatetimeIndex.normalize.html#pandas.DatetimeIndex.normalize
    "pandas.DatetimeIndex.normalize")(*args, **kwargs) | 将时间转换为午夜。 |'
- en: '| [`DatetimeIndex.strftime`](api/pandas.DatetimeIndex.strftime.html#pandas.DatetimeIndex.strftime
    "pandas.DatetimeIndex.strftime")(date_format) | Convert to Index using specified
    date_format. |'
  id: totrans-648
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.strftime`](api/pandas.DatetimeIndex.strftime.html#pandas.DatetimeIndex.strftime
    "pandas.DatetimeIndex.strftime")(date_format) | 使用指定的date_format转换为索引。 |'
- en: '| [`DatetimeIndex.snap`](api/pandas.DatetimeIndex.snap.html#pandas.DatetimeIndex.snap
    "pandas.DatetimeIndex.snap")([freq]) | Snap time stamps to nearest occurring frequency.
    |'
  id: totrans-649
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.snap`](api/pandas.DatetimeIndex.snap.html#pandas.DatetimeIndex.snap
    "pandas.DatetimeIndex.snap")([freq]) | 将时间戳捕捉到最近发生的频率。 |'
- en: '| [`DatetimeIndex.tz_convert`](api/pandas.DatetimeIndex.tz_convert.html#pandas.DatetimeIndex.tz_convert
    "pandas.DatetimeIndex.tz_convert")(tz) | Convert tz-aware Datetime Array/Index
    from one time zone to another. |'
  id: totrans-650
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.tz_convert`](api/pandas.DatetimeIndex.tz_convert.html#pandas.DatetimeIndex.tz_convert
    "pandas.DatetimeIndex.tz_convert")(tz) | 将具有时区信息的日期时间数组/索引从一个时区转换为另一个时区。 |'
- en: '| [`DatetimeIndex.tz_localize`](api/pandas.DatetimeIndex.tz_localize.html#pandas.DatetimeIndex.tz_localize
    "pandas.DatetimeIndex.tz_localize")(tz[, ambiguous, ...]) | Localize tz-naive
    Datetime Array/Index to tz-aware Datetime Array/Index. |'
  id: totrans-651
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.tz_localize`](api/pandas.DatetimeIndex.tz_localize.html#pandas.DatetimeIndex.tz_localize
    "pandas.DatetimeIndex.tz_localize")(tz[, ambiguous, ...]) | 将没有时区信息的日期时间数组/索引本地化为具有时区信息的日期时间数组/索引。
    |'
- en: '| [`DatetimeIndex.round`](api/pandas.DatetimeIndex.round.html#pandas.DatetimeIndex.round
    "pandas.DatetimeIndex.round")(*args, **kwargs) | Perform round operation on the
    data to the specified freq. |'
  id: totrans-652
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.round`](api/pandas.DatetimeIndex.round.html#pandas.DatetimeIndex.round
    "pandas.DatetimeIndex.round")(*args, **kwargs) | 对数据执行四舍五入操作到指定的频率。 |'
- en: '| [`DatetimeIndex.floor`](api/pandas.DatetimeIndex.floor.html#pandas.DatetimeIndex.floor
    "pandas.DatetimeIndex.floor")(*args, **kwargs) | Perform floor operation on the
    data to the specified freq. |'
  id: totrans-653
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.floor`](api/pandas.DatetimeIndex.floor.html#pandas.DatetimeIndex.floor
    "pandas.DatetimeIndex.floor")(*args, **kwargs) | 对数据执行向下取整操作到指定的频率。 |'
- en: '| [`DatetimeIndex.ceil`](api/pandas.DatetimeIndex.ceil.html#pandas.DatetimeIndex.ceil
    "pandas.DatetimeIndex.ceil")(*args, **kwargs) | Perform ceil operation on the
    data to the specified freq. |'
  id: totrans-654
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.ceil`](api/pandas.DatetimeIndex.ceil.html#pandas.DatetimeIndex.ceil
    "pandas.DatetimeIndex.ceil")(*args, **kwargs) | 对数据执行向上取整操作到指定的频率。 |'
- en: '| [`DatetimeIndex.month_name`](api/pandas.DatetimeIndex.month_name.html#pandas.DatetimeIndex.month_name
    "pandas.DatetimeIndex.month_name")(*args, **kwargs) | Return the month names with
    specified locale. |'
  id: totrans-655
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.month_name`](api/pandas.DatetimeIndex.month_name.html#pandas.DatetimeIndex.month_name
    "pandas.DatetimeIndex.month_name")(*args, **kwargs) | 返回指定语言环境下的月份名称。 |'
- en: '| [`DatetimeIndex.day_name`](api/pandas.DatetimeIndex.day_name.html#pandas.DatetimeIndex.day_name
    "pandas.DatetimeIndex.day_name")(*args, **kwargs) | Return the day names with
    specified locale. |'
  id: totrans-656
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.day_name`](api/pandas.DatetimeIndex.day_name.html#pandas.DatetimeIndex.day_name
    "pandas.DatetimeIndex.day_name")(*args, **kwargs) | 返回指定语言环境下的星期几名称。 |'
- en: Conversion
  id: totrans-657
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 转换
- en: '| [`DatetimeIndex.as_unit`](api/pandas.DatetimeIndex.as_unit.html#pandas.DatetimeIndex.as_unit
    "pandas.DatetimeIndex.as_unit")(*args, **kwargs) | Convert to a dtype with the
    given unit resolution. |'
  id: totrans-658
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.as_unit`](api/pandas.DatetimeIndex.as_unit.html#pandas.DatetimeIndex.as_unit
    "pandas.DatetimeIndex.as_unit")(*args, **kwargs) | 转换为具有给定单位分辨率的 dtype。 |'
- en: '| [`DatetimeIndex.to_period`](api/pandas.DatetimeIndex.to_period.html#pandas.DatetimeIndex.to_period
    "pandas.DatetimeIndex.to_period")(*args, **kwargs) | Cast to PeriodArray/PeriodIndex
    at a particular frequency. |'
  id: totrans-659
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.to_period`](api/pandas.DatetimeIndex.to_period.html#pandas.DatetimeIndex.to_period
    "pandas.DatetimeIndex.to_period")(*args, **kwargs) | 将数组转换为特定频率的 PeriodArray/PeriodIndex。
    |'
- en: '| [`DatetimeIndex.to_pydatetime`](api/pandas.DatetimeIndex.to_pydatetime.html#pandas.DatetimeIndex.to_pydatetime
    "pandas.DatetimeIndex.to_pydatetime")(*args, **kwargs) | Return an ndarray of
    `datetime.datetime` objects. |'
  id: totrans-660
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.to_pydatetime`](api/pandas.DatetimeIndex.to_pydatetime.html#pandas.DatetimeIndex.to_pydatetime
    "pandas.DatetimeIndex.to_pydatetime")(*args, **kwargs) | 返回一个 `datetime.datetime`
    对象的 ndarray。 |'
- en: '| [`DatetimeIndex.to_series`](api/pandas.DatetimeIndex.to_series.html#pandas.DatetimeIndex.to_series
    "pandas.DatetimeIndex.to_series")([index, name]) | Create a Series with both index
    and values equal to the index keys. |'
  id: totrans-661
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.to_series`](api/pandas.DatetimeIndex.to_series.html#pandas.DatetimeIndex.to_series
    "pandas.DatetimeIndex.to_series")([index, name]) | 创建一个 Series，索引和值都等于索引键。 |'
- en: '| [`DatetimeIndex.to_frame`](api/pandas.DatetimeIndex.to_frame.html#pandas.DatetimeIndex.to_frame
    "pandas.DatetimeIndex.to_frame")([index, name]) | Create a DataFrame with a column
    containing the Index. |'
  id: totrans-662
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.to_frame`](api/pandas.DatetimeIndex.to_frame.html#pandas.DatetimeIndex.to_frame
    "pandas.DatetimeIndex.to_frame")([index, name]) | 创建一个 DataFrame，其中包含一个包含索引的列。
    |'
- en: Methods
  id: totrans-663
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`DatetimeIndex.mean`](api/pandas.DatetimeIndex.mean.html#pandas.DatetimeIndex.mean
    "pandas.DatetimeIndex.mean")(*[, skipna, axis]) | Return the mean value of the
    Array. |'
  id: totrans-664
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.mean`](api/pandas.DatetimeIndex.mean.html#pandas.DatetimeIndex.mean
    "pandas.DatetimeIndex.mean")(*[, skipna, axis]) | 返回数组的平均值。 |'
- en: '| [`DatetimeIndex.std`](api/pandas.DatetimeIndex.std.html#pandas.DatetimeIndex.std
    "pandas.DatetimeIndex.std")(*args, **kwargs) | Return sample standard deviation
    over requested axis. |'
  id: totrans-665
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.std`](api/pandas.DatetimeIndex.std.html#pandas.DatetimeIndex.std
    "pandas.DatetimeIndex.std")(*args, **kwargs) | 沿请求的轴返回样本标准差。 |'
- en: Time/date components
  id: totrans-666
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 时间/日期组件
- en: '| [`DatetimeIndex.year`](api/pandas.DatetimeIndex.year.html#pandas.DatetimeIndex.year
    "pandas.DatetimeIndex.year") | The year of the datetime. |'
  id: totrans-667
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.year`](api/pandas.DatetimeIndex.year.html#pandas.DatetimeIndex.year
    "pandas.DatetimeIndex.year") | 日期时间的年份。 |'
- en: '| [`DatetimeIndex.month`](api/pandas.DatetimeIndex.month.html#pandas.DatetimeIndex.month
    "pandas.DatetimeIndex.month") | The month as January=1, December=12. |'
  id: totrans-668
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.month`](api/pandas.DatetimeIndex.month.html#pandas.DatetimeIndex.month
    "pandas.DatetimeIndex.month") | 月份，一月=1，十二月=12。 |'
- en: '| [`DatetimeIndex.day`](api/pandas.DatetimeIndex.day.html#pandas.DatetimeIndex.day
    "pandas.DatetimeIndex.day") | The day of the datetime. |'
  id: totrans-669
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.day`](api/pandas.DatetimeIndex.day.html#pandas.DatetimeIndex.day
    "pandas.DatetimeIndex.day") | 日期时间的日期。 |'
- en: '| [`DatetimeIndex.hour`](api/pandas.DatetimeIndex.hour.html#pandas.DatetimeIndex.hour
    "pandas.DatetimeIndex.hour") | The hours of the datetime. |'
  id: totrans-670
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.hour`](api/pandas.DatetimeIndex.hour.html#pandas.DatetimeIndex.hour
    "pandas.DatetimeIndex.hour") | 日期时间的小时数。 |'
- en: '| [`DatetimeIndex.minute`](api/pandas.DatetimeIndex.minute.html#pandas.DatetimeIndex.minute
    "pandas.DatetimeIndex.minute") | The minutes of the datetime. |'
  id: totrans-671
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.minute`](api/pandas.DatetimeIndex.minute.html#pandas.DatetimeIndex.minute
    "pandas.DatetimeIndex.minute") | 日期时间的分钟数。 |'
- en: '| [`DatetimeIndex.second`](api/pandas.DatetimeIndex.second.html#pandas.DatetimeIndex.second
    "pandas.DatetimeIndex.second") | The seconds of the datetime. |'
  id: totrans-672
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.second`](api/pandas.DatetimeIndex.second.html#pandas.DatetimeIndex.second
    "pandas.DatetimeIndex.second") | 日期时间的秒数。 |'
- en: '| [`DatetimeIndex.microsecond`](api/pandas.DatetimeIndex.microsecond.html#pandas.DatetimeIndex.microsecond
    "pandas.DatetimeIndex.microsecond") | The microseconds of the datetime. |'
  id: totrans-673
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.microsecond`](api/pandas.DatetimeIndex.microsecond.html#pandas.DatetimeIndex.microsecond
    "pandas.DatetimeIndex.microsecond") | 日期时间的微秒。 |'
- en: '| [`DatetimeIndex.nanosecond`](api/pandas.DatetimeIndex.nanosecond.html#pandas.DatetimeIndex.nanosecond
    "pandas.DatetimeIndex.nanosecond") | The nanoseconds of the datetime. |'
  id: totrans-674
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.nanosecond`](api/pandas.DatetimeIndex.nanosecond.html#pandas.DatetimeIndex.nanosecond
    "pandas.DatetimeIndex.nanosecond") | 日期时间的纳秒。 |'
- en: '| [`DatetimeIndex.date`](api/pandas.DatetimeIndex.date.html#pandas.DatetimeIndex.date
    "pandas.DatetimeIndex.date") | Returns numpy array of python [`datetime.date`](https://docs.python.org/3/library/datetime.html#datetime.date
    "(in Python v3.12)") objects. |'
  id: totrans-675
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.date`](api/pandas.DatetimeIndex.date.html#pandas.DatetimeIndex.date
    "pandas.DatetimeIndex.date") | 返回 python [`datetime.date`](https://docs.python.org/3/library/datetime.html#datetime.date
    "(在 Python v3.12 中)")对象的 numpy 数组。 |'
- en: '| [`DatetimeIndex.time`](api/pandas.DatetimeIndex.time.html#pandas.DatetimeIndex.time
    "pandas.DatetimeIndex.time") | Returns numpy array of [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(in Python v3.12)") objects. |'
  id: totrans-676
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.time`](api/pandas.DatetimeIndex.time.html#pandas.DatetimeIndex.time
    "pandas.DatetimeIndex.time") | 返回[`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(在 Python v3.12 中)")对象的 numpy 数组。 |'
- en: '| [`DatetimeIndex.timetz`](api/pandas.DatetimeIndex.timetz.html#pandas.DatetimeIndex.timetz
    "pandas.DatetimeIndex.timetz") | Returns numpy array of [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(in Python v3.12)") objects with timezones. |'
  id: totrans-677
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.timetz`](api/pandas.DatetimeIndex.timetz.html#pandas.DatetimeIndex.timetz
    "pandas.DatetimeIndex.timetz") | 返回带有时区的[`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(在 Python v3.12 中)")对象的 numpy 数组。 |'
- en: '| [`DatetimeIndex.dayofyear`](api/pandas.DatetimeIndex.dayofyear.html#pandas.DatetimeIndex.dayofyear
    "pandas.DatetimeIndex.dayofyear") | The ordinal day of the year. |'
  id: totrans-678
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.dayofyear`](api/pandas.DatetimeIndex.dayofyear.html#pandas.DatetimeIndex.dayofyear
    "pandas.DatetimeIndex.dayofyear") | 一年中的序数日期。 |'
- en: '| [`DatetimeIndex.day_of_year`](api/pandas.DatetimeIndex.day_of_year.html#pandas.DatetimeIndex.day_of_year
    "pandas.DatetimeIndex.day_of_year") | The ordinal day of the year. |'
  id: totrans-679
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.day_of_year`](api/pandas.DatetimeIndex.day_of_year.html#pandas.DatetimeIndex.day_of_year
    "pandas.DatetimeIndex.day_of_year") | 一年中的序数日期。 |'
- en: '| [`DatetimeIndex.dayofweek`](api/pandas.DatetimeIndex.dayofweek.html#pandas.DatetimeIndex.dayofweek
    "pandas.DatetimeIndex.dayofweek") | The day of the week with Monday=0, Sunday=6.
    |'
  id: totrans-680
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.dayofweek`](api/pandas.DatetimeIndex.dayofweek.html#pandas.DatetimeIndex.dayofweek
    "pandas.DatetimeIndex.dayofweek") | 一周中的日期，星期一=0，星期日=6。 |'
- en: '| [`DatetimeIndex.day_of_week`](api/pandas.DatetimeIndex.day_of_week.html#pandas.DatetimeIndex.day_of_week
    "pandas.DatetimeIndex.day_of_week") | The day of the week with Monday=0, Sunday=6.
    |'
  id: totrans-681
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.day_of_week`](api/pandas.DatetimeIndex.day_of_week.html#pandas.DatetimeIndex.day_of_week
    "pandas.DatetimeIndex.day_of_week") | 一周中的日期，星期一=0，星期日=6。 |'
- en: '| [`DatetimeIndex.weekday`](api/pandas.DatetimeIndex.weekday.html#pandas.DatetimeIndex.weekday
    "pandas.DatetimeIndex.weekday") | The day of the week with Monday=0, Sunday=6.
    |'
  id: totrans-682
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.weekday`](api/pandas.DatetimeIndex.weekday.html#pandas.DatetimeIndex.weekday
    "pandas.DatetimeIndex.weekday") | 一周中的日期，星期一=0，星期日=6。 |'
- en: '| [`DatetimeIndex.quarter`](api/pandas.DatetimeIndex.quarter.html#pandas.DatetimeIndex.quarter
    "pandas.DatetimeIndex.quarter") | The quarter of the date. |'
  id: totrans-683
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.quarter`](api/pandas.DatetimeIndex.quarter.html#pandas.DatetimeIndex.quarter
    "pandas.DatetimeIndex.quarter") | 日期所在季度。 |'
- en: '| [`DatetimeIndex.tz`](api/pandas.DatetimeIndex.tz.html#pandas.DatetimeIndex.tz
    "pandas.DatetimeIndex.tz") | Return the timezone. |'
  id: totrans-684
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.tz`](api/pandas.DatetimeIndex.tz.html#pandas.DatetimeIndex.tz
    "pandas.DatetimeIndex.tz") | 返回时区。 |'
- en: '| [`DatetimeIndex.freq`](api/pandas.DatetimeIndex.freq.html#pandas.DatetimeIndex.freq
    "pandas.DatetimeIndex.freq") |  |'
  id: totrans-685
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.freq`](api/pandas.DatetimeIndex.freq.html#pandas.DatetimeIndex.freq
    "pandas.DatetimeIndex.freq") |  |'
- en: '| [`DatetimeIndex.freqstr`](api/pandas.DatetimeIndex.freqstr.html#pandas.DatetimeIndex.freqstr
    "pandas.DatetimeIndex.freqstr") | Return the frequency object as a string if it''s
    set, otherwise None. |'
  id: totrans-686
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.freqstr`](api/pandas.DatetimeIndex.freqstr.html#pandas.DatetimeIndex.freqstr
    "pandas.DatetimeIndex.freqstr") | 如果设置了频率对象，则返回字符串，否则返回None。 |'
- en: '| [`DatetimeIndex.is_month_start`](api/pandas.DatetimeIndex.is_month_start.html#pandas.DatetimeIndex.is_month_start
    "pandas.DatetimeIndex.is_month_start") | Indicates whether the date is the first
    day of the month. |'
  id: totrans-687
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.is_month_start`](api/pandas.DatetimeIndex.is_month_start.html#pandas.DatetimeIndex.is_month_start
    "pandas.DatetimeIndex.is_month_start") | 表示日期是否为月初。 |'
- en: '| [`DatetimeIndex.is_month_end`](api/pandas.DatetimeIndex.is_month_end.html#pandas.DatetimeIndex.is_month_end
    "pandas.DatetimeIndex.is_month_end") | Indicates whether the date is the last
    day of the month. |'
  id: totrans-688
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.is_month_end`](api/pandas.DatetimeIndex.is_month_end.html#pandas.DatetimeIndex.is_month_end
    "pandas.DatetimeIndex.is_month_end") | 表示日期是否为月末。 |'
- en: '| [`DatetimeIndex.is_quarter_start`](api/pandas.DatetimeIndex.is_quarter_start.html#pandas.DatetimeIndex.is_quarter_start
    "pandas.DatetimeIndex.is_quarter_start") | Indicator for whether the date is the
    first day of a quarter. |'
  id: totrans-689
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.is_quarter_start`](api/pandas.DatetimeIndex.is_quarter_start.html#pandas.DatetimeIndex.is_quarter_start
    "pandas.DatetimeIndex.is_quarter_start") | 表示日期是否为季度初。 |'
- en: '| [`DatetimeIndex.is_quarter_end`](api/pandas.DatetimeIndex.is_quarter_end.html#pandas.DatetimeIndex.is_quarter_end
    "pandas.DatetimeIndex.is_quarter_end") | Indicator for whether the date is the
    last day of a quarter. |'
  id: totrans-690
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.is_quarter_end`](api/pandas.DatetimeIndex.is_quarter_end.html#pandas.DatetimeIndex.is_quarter_end
    "pandas.DatetimeIndex.is_quarter_end") | 表示日期是否为季度末。 |'
- en: '| [`DatetimeIndex.is_year_start`](api/pandas.DatetimeIndex.is_year_start.html#pandas.DatetimeIndex.is_year_start
    "pandas.DatetimeIndex.is_year_start") | Indicate whether the date is the first
    day of a year. |'
  id: totrans-691
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.is_year_start`](api/pandas.DatetimeIndex.is_year_start.html#pandas.DatetimeIndex.is_year_start
    "pandas.DatetimeIndex.is_year_start") | 表示日期是否为年初。 |'
- en: '| [`DatetimeIndex.is_year_end`](api/pandas.DatetimeIndex.is_year_end.html#pandas.DatetimeIndex.is_year_end
    "pandas.DatetimeIndex.is_year_end") | Indicate whether the date is the last day
    of the year. |'
  id: totrans-692
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.is_year_end`](api/pandas.DatetimeIndex.is_year_end.html#pandas.DatetimeIndex.is_year_end
    "pandas.DatetimeIndex.is_year_end") | 表示日期是否为年底。 |'
- en: '| [`DatetimeIndex.is_leap_year`](api/pandas.DatetimeIndex.is_leap_year.html#pandas.DatetimeIndex.is_leap_year
    "pandas.DatetimeIndex.is_leap_year") | Boolean indicator if the date belongs to
    a leap year. |'
  id: totrans-693
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.is_leap_year`](api/pandas.DatetimeIndex.is_leap_year.html#pandas.DatetimeIndex.is_leap_year
    "pandas.DatetimeIndex.is_leap_year") | 如果日期属于闰年，则返回布尔指示符。 |'
- en: '| [`DatetimeIndex.inferred_freq`](api/pandas.DatetimeIndex.inferred_freq.html#pandas.DatetimeIndex.inferred_freq
    "pandas.DatetimeIndex.inferred_freq") | Tries to return a string representing
    a frequency generated by infer_freq. |'
  id: totrans-694
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.inferred_freq`](api/pandas.DatetimeIndex.inferred_freq.html#pandas.DatetimeIndex.inferred_freq
    "pandas.DatetimeIndex.inferred_freq") | 尝试返回由infer_freq生成的表示频率的字符串。 |'
- en: Selecting
  id: totrans-695
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择
- en: '| [`DatetimeIndex.indexer_at_time`](api/pandas.DatetimeIndex.indexer_at_time.html#pandas.DatetimeIndex.indexer_at_time
    "pandas.DatetimeIndex.indexer_at_time")(time[, asof]) | Return index locations
    of values at particular time of day. |'
  id: totrans-696
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.indexer_at_time`](api/pandas.DatetimeIndex.indexer_at_time.html#pandas.DatetimeIndex.indexer_at_time
    "pandas.DatetimeIndex.indexer_at_time")(time[, asof]) | 返回特定时间的值的索引位置。 |'
- en: '| [`DatetimeIndex.indexer_between_time`](api/pandas.DatetimeIndex.indexer_between_time.html#pandas.DatetimeIndex.indexer_between_time
    "pandas.DatetimeIndex.indexer_between_time")(...[, ...]) | Return index locations
    of values between particular times of day. |'
  id: totrans-697
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.indexer_between_time`](api/pandas.DatetimeIndex.indexer_between_time.html#pandas.DatetimeIndex.indexer_between_time
    "pandas.DatetimeIndex.indexer_between_time")(...[, ...]) | 返回在一天中特定时间之间的值的索引位置。
    |'
- en: Time-specific operations
  id: totrans-698
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 特定时间操作
- en: '| [`DatetimeIndex.normalize`](api/pandas.DatetimeIndex.normalize.html#pandas.DatetimeIndex.normalize
    "pandas.DatetimeIndex.normalize")(*args, **kwargs) | Convert times to midnight.
    |'
  id: totrans-699
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.normalize`](api/pandas.DatetimeIndex.normalize.html#pandas.DatetimeIndex.normalize
    "pandas.DatetimeIndex.normalize")(*args, **kwargs) | 将时间转换为午夜。 |'
- en: '| [`DatetimeIndex.strftime`](api/pandas.DatetimeIndex.strftime.html#pandas.DatetimeIndex.strftime
    "pandas.DatetimeIndex.strftime")(date_format) | Convert to Index using specified
    date_format. |'
  id: totrans-700
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.strftime`](api/pandas.DatetimeIndex.strftime.html#pandas.DatetimeIndex.strftime
    "pandas.DatetimeIndex.strftime")(date_format) | 使用指定的日期格式转换为索引。 |'
- en: '| [`DatetimeIndex.snap`](api/pandas.DatetimeIndex.snap.html#pandas.DatetimeIndex.snap
    "pandas.DatetimeIndex.snap")([freq]) | Snap time stamps to nearest occurring frequency.
    |'
  id: totrans-701
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.snap`](api/pandas.DatetimeIndex.snap.html#pandas.DatetimeIndex.snap
    "pandas.DatetimeIndex.snap")([freq]) | 将时间戳捕捉到最近的发生频率。 |'
- en: '| [`DatetimeIndex.tz_convert`](api/pandas.DatetimeIndex.tz_convert.html#pandas.DatetimeIndex.tz_convert
    "pandas.DatetimeIndex.tz_convert")(tz) | Convert tz-aware Datetime Array/Index
    from one time zone to another. |'
  id: totrans-702
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.tz_convert`](api/pandas.DatetimeIndex.tz_convert.html#pandas.DatetimeIndex.tz_convert
    "pandas.DatetimeIndex.tz_convert")(tz) | 将具有时区信息的日期时间数组/索引从一个时区转换为另一个时区。 |'
- en: '| [`DatetimeIndex.tz_localize`](api/pandas.DatetimeIndex.tz_localize.html#pandas.DatetimeIndex.tz_localize
    "pandas.DatetimeIndex.tz_localize")(tz[, ambiguous, ...]) | Localize tz-naive
    Datetime Array/Index to tz-aware Datetime Array/Index. |'
  id: totrans-703
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.tz_localize`](api/pandas.DatetimeIndex.tz_localize.html#pandas.DatetimeIndex.tz_localize
    "pandas.DatetimeIndex.tz_localize")(tz[, ambiguous, ...]) | 将时区无关的日期时间数组/索引本地化为具有时区信息的日期时间数组/索引。
    |'
- en: '| [`DatetimeIndex.round`](api/pandas.DatetimeIndex.round.html#pandas.DatetimeIndex.round
    "pandas.DatetimeIndex.round")(*args, **kwargs) | Perform round operation on the
    data to the specified freq. |'
  id: totrans-704
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.round`](api/pandas.DatetimeIndex.round.html#pandas.DatetimeIndex.round
    "pandas.DatetimeIndex.round")(*args, **kwargs) | 对数据执行舍入操作到指定的频率。 |'
- en: '| [`DatetimeIndex.floor`](api/pandas.DatetimeIndex.floor.html#pandas.DatetimeIndex.floor
    "pandas.DatetimeIndex.floor")(*args, **kwargs) | Perform floor operation on the
    data to the specified freq. |'
  id: totrans-705
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.floor`](api/pandas.DatetimeIndex.floor.html#pandas.DatetimeIndex.floor
    "pandas.DatetimeIndex.floor")(*args, **kwargs) | 对数据执行向下取整操作到指定的频率。 |'
- en: '| [`DatetimeIndex.ceil`](api/pandas.DatetimeIndex.ceil.html#pandas.DatetimeIndex.ceil
    "pandas.DatetimeIndex.ceil")(*args, **kwargs) | Perform ceil operation on the
    data to the specified freq. |'
  id: totrans-706
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.ceil`](api/pandas.DatetimeIndex.ceil.html#pandas.DatetimeIndex.ceil
    "pandas.DatetimeIndex.ceil")(*args, **kwargs) | 对数据执行向上取整操作到指定的频率。 |'
- en: '| [`DatetimeIndex.month_name`](api/pandas.DatetimeIndex.month_name.html#pandas.DatetimeIndex.month_name
    "pandas.DatetimeIndex.month_name")(*args, **kwargs) | Return the month names with
    specified locale. |'
  id: totrans-707
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.month_name`](api/pandas.DatetimeIndex.month_name.html#pandas.DatetimeIndex.month_name
    "pandas.DatetimeIndex.month_name")(*args, **kwargs) | 返回指定语言环境下的月份名称。 |'
- en: '| [`DatetimeIndex.day_name`](api/pandas.DatetimeIndex.day_name.html#pandas.DatetimeIndex.day_name
    "pandas.DatetimeIndex.day_name")(*args, **kwargs) | Return the day names with
    specified locale. |'
  id: totrans-708
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.day_name`](api/pandas.DatetimeIndex.day_name.html#pandas.DatetimeIndex.day_name
    "pandas.DatetimeIndex.day_name")(*args, **kwargs) | 返回指定语言环境下的星期几名称。 |'
- en: Conversion
  id: totrans-709
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 转换
- en: '| [`DatetimeIndex.as_unit`](api/pandas.DatetimeIndex.as_unit.html#pandas.DatetimeIndex.as_unit
    "pandas.DatetimeIndex.as_unit")(*args, **kwargs) | Convert to a dtype with the
    given unit resolution. |'
  id: totrans-710
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.as_unit`](api/pandas.DatetimeIndex.as_unit.html#pandas.DatetimeIndex.as_unit
    "pandas.DatetimeIndex.as_unit")(*args, **kwargs) | 转换为具有给定单位分辨率的dtype。 |'
- en: '| [`DatetimeIndex.to_period`](api/pandas.DatetimeIndex.to_period.html#pandas.DatetimeIndex.to_period
    "pandas.DatetimeIndex.to_period")(*args, **kwargs) | Cast to PeriodArray/PeriodIndex
    at a particular frequency. |'
  id: totrans-711
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.to_period`](api/pandas.DatetimeIndex.to_period.html#pandas.DatetimeIndex.to_period
    "pandas.DatetimeIndex.to_period")(*args, **kwargs) | 转换为特定频率的PeriodArray/PeriodIndex。
    |'
- en: '| [`DatetimeIndex.to_pydatetime`](api/pandas.DatetimeIndex.to_pydatetime.html#pandas.DatetimeIndex.to_pydatetime
    "pandas.DatetimeIndex.to_pydatetime")(*args, **kwargs) | Return an ndarray of
    `datetime.datetime` objects. |'
  id: totrans-712
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.to_pydatetime`](api/pandas.DatetimeIndex.to_pydatetime.html#pandas.DatetimeIndex.to_pydatetime
    "pandas.DatetimeIndex.to_pydatetime")(*args, **kwargs) | 返回一个`datetime.datetime`对象的ndarray。
    |'
- en: '| [`DatetimeIndex.to_series`](api/pandas.DatetimeIndex.to_series.html#pandas.DatetimeIndex.to_series
    "pandas.DatetimeIndex.to_series")([index, name]) | Create a Series with both index
    and values equal to the index keys. |'
  id: totrans-713
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.to_series`](api/pandas.DatetimeIndex.to_series.html#pandas.DatetimeIndex.to_series
    "pandas.DatetimeIndex.to_series")([index, name]) | 创建一个 Series，其索引和值都等于索引键。 |'
- en: '| [`DatetimeIndex.to_frame`](api/pandas.DatetimeIndex.to_frame.html#pandas.DatetimeIndex.to_frame
    "pandas.DatetimeIndex.to_frame")([index, name]) | Create a DataFrame with a column
    containing the Index. |'
  id: totrans-714
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.to_frame`](api/pandas.DatetimeIndex.to_frame.html#pandas.DatetimeIndex.to_frame
    "pandas.DatetimeIndex.to_frame")([index, name]) | 创建一个包含索引的列的 DataFrame。 |'
- en: Methods
  id: totrans-715
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`DatetimeIndex.mean`](api/pandas.DatetimeIndex.mean.html#pandas.DatetimeIndex.mean
    "pandas.DatetimeIndex.mean")(*[, skipna, axis]) | Return the mean value of the
    Array. |'
  id: totrans-716
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.mean`](api/pandas.DatetimeIndex.mean.html#pandas.DatetimeIndex.mean
    "pandas.DatetimeIndex.mean")(*[, skipna, axis]) | 返回数组的平均值。 |'
- en: '| [`DatetimeIndex.std`](api/pandas.DatetimeIndex.std.html#pandas.DatetimeIndex.std
    "pandas.DatetimeIndex.std")(*args, **kwargs) | Return sample standard deviation
    over requested axis. |'
  id: totrans-717
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeIndex.std`](api/pandas.DatetimeIndex.std.html#pandas.DatetimeIndex.std
    "pandas.DatetimeIndex.std")(*args, **kwargs) | 返回所请求轴上的样本标准差。 |'
- en: TimedeltaIndex
  id: totrans-718
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: TimedeltaIndex
- en: '| [`TimedeltaIndex`](api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex "pandas.TimedeltaIndex")([data, unit, freq, closed, ...])
    | Immutable Index of timedelta64 data. |'
  id: totrans-719
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex`](api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex "pandas.TimedeltaIndex")([data, unit, freq, closed, ...])
    | 不可变 timedelta64 数据的索引。 |'
- en: Components
  id: totrans-720
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 组件
- en: '| [`TimedeltaIndex.days`](api/pandas.TimedeltaIndex.days.html#pandas.TimedeltaIndex.days
    "pandas.TimedeltaIndex.days") | Number of days for each element. |'
  id: totrans-721
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.days`](api/pandas.TimedeltaIndex.days.html#pandas.TimedeltaIndex.days
    "pandas.TimedeltaIndex.days") | 每个元素的天数。 |'
- en: '| [`TimedeltaIndex.seconds`](api/pandas.TimedeltaIndex.seconds.html#pandas.TimedeltaIndex.seconds
    "pandas.TimedeltaIndex.seconds") | Number of seconds (>= 0 and less than 1 day)
    for each element. |'
  id: totrans-722
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.seconds`](api/pandas.TimedeltaIndex.seconds.html#pandas.TimedeltaIndex.seconds
    "pandas.TimedeltaIndex.seconds") | 每个元素的秒数（大于等于 0 且小于 1 天）。 |'
- en: '| [`TimedeltaIndex.microseconds`](api/pandas.TimedeltaIndex.microseconds.html#pandas.TimedeltaIndex.microseconds
    "pandas.TimedeltaIndex.microseconds") | Number of microseconds (>= 0 and less
    than 1 second) for each element. |'
  id: totrans-723
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.microseconds`](api/pandas.TimedeltaIndex.microseconds.html#pandas.TimedeltaIndex.microseconds
    "pandas.TimedeltaIndex.microseconds") | 每个元素的微秒数（大于等于 0 且小于 1 秒）。 |'
- en: '| [`TimedeltaIndex.nanoseconds`](api/pandas.TimedeltaIndex.nanoseconds.html#pandas.TimedeltaIndex.nanoseconds
    "pandas.TimedeltaIndex.nanoseconds") | Number of nanoseconds (>= 0 and less than
    1 microsecond) for each element. |'
  id: totrans-724
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.nanoseconds`](api/pandas.TimedeltaIndex.nanoseconds.html#pandas.TimedeltaIndex.nanoseconds
    "pandas.TimedeltaIndex.nanoseconds") | 每个元素的纳秒数（大于等于 0 且小于 1 微秒）。 |'
- en: '| [`TimedeltaIndex.components`](api/pandas.TimedeltaIndex.components.html#pandas.TimedeltaIndex.components
    "pandas.TimedeltaIndex.components") | Return a DataFrame of the individual resolution
    components of the Timedeltas. |'
  id: totrans-725
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.components`](api/pandas.TimedeltaIndex.components.html#pandas.TimedeltaIndex.components
    "pandas.TimedeltaIndex.components") | 返回 Timedeltas 的各个分辨率组件的 DataFrame。 |'
- en: '| [`TimedeltaIndex.inferred_freq`](api/pandas.TimedeltaIndex.inferred_freq.html#pandas.TimedeltaIndex.inferred_freq
    "pandas.TimedeltaIndex.inferred_freq") | Tries to return a string representing
    a frequency generated by infer_freq. |'
  id: totrans-726
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.inferred_freq`](api/pandas.TimedeltaIndex.inferred_freq.html#pandas.TimedeltaIndex.inferred_freq
    "pandas.TimedeltaIndex.inferred_freq") | 尝试返回由 infer_freq 生成的表示频率的字符串。 |'
- en: Conversion
  id: totrans-727
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 转换
- en: '| [`TimedeltaIndex.as_unit`](api/pandas.TimedeltaIndex.as_unit.html#pandas.TimedeltaIndex.as_unit
    "pandas.TimedeltaIndex.as_unit")(unit) | Convert to a dtype with the given unit
    resolution. |'
  id: totrans-728
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.as_unit`](api/pandas.TimedeltaIndex.as_unit.html#pandas.TimedeltaIndex.as_unit
    "pandas.TimedeltaIndex.as_unit")(unit) | 转换为具有给定单位分辨率的 dtype。 |'
- en: '| [`TimedeltaIndex.to_pytimedelta`](api/pandas.TimedeltaIndex.to_pytimedelta.html#pandas.TimedeltaIndex.to_pytimedelta
    "pandas.TimedeltaIndex.to_pytimedelta")(*args, **kwargs) | Return an ndarray of
    datetime.timedelta objects. |'
  id: totrans-729
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.to_pytimedelta`](api/pandas.TimedeltaIndex.to_pytimedelta.html#pandas.TimedeltaIndex.to_pytimedelta
    "pandas.TimedeltaIndex.to_pytimedelta")(*args, **kwargs) | 返回一个 datetime.timedelta
    对象的 ndarray。 |'
- en: '| [`TimedeltaIndex.to_series`](api/pandas.TimedeltaIndex.to_series.html#pandas.TimedeltaIndex.to_series
    "pandas.TimedeltaIndex.to_series")([index, name]) | Create a Series with both
    index and values equal to the index keys. |'
  id: totrans-730
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.to_series`](api/pandas.TimedeltaIndex.to_series.html#pandas.TimedeltaIndex.to_series
    "pandas.TimedeltaIndex.to_series")([index, name]) | 创建一个 Series，其索引和值都等于索引键。 |'
- en: '| [`TimedeltaIndex.round`](api/pandas.TimedeltaIndex.round.html#pandas.TimedeltaIndex.round
    "pandas.TimedeltaIndex.round")(*args, **kwargs) | Perform round operation on the
    data to the specified freq. |'
  id: totrans-731
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.round`](api/pandas.TimedeltaIndex.round.html#pandas.TimedeltaIndex.round
    "pandas.TimedeltaIndex.round")(*args, **kwargs) | 对数据执行四舍五入到指定频率的操作。 |'
- en: '| [`TimedeltaIndex.floor`](api/pandas.TimedeltaIndex.floor.html#pandas.TimedeltaIndex.floor
    "pandas.TimedeltaIndex.floor")(*args, **kwargs) | Perform floor operation on the
    data to the specified freq. |'
  id: totrans-732
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.floor`](api/pandas.TimedeltaIndex.floor.html#pandas.TimedeltaIndex.floor
    "pandas.TimedeltaIndex.floor")(*args, **kwargs) | 对数据执行向下取整到指定频率的操作。 |'
- en: '| [`TimedeltaIndex.ceil`](api/pandas.TimedeltaIndex.ceil.html#pandas.TimedeltaIndex.ceil
    "pandas.TimedeltaIndex.ceil")(*args, **kwargs) | Perform ceil operation on the
    data to the specified freq. |'
  id: totrans-733
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.ceil`](api/pandas.TimedeltaIndex.ceil.html#pandas.TimedeltaIndex.ceil
    "pandas.TimedeltaIndex.ceil")(*args, **kwargs) | 对数据执行向上取整到指定频率的操作。 |'
- en: '| [`TimedeltaIndex.to_frame`](api/pandas.TimedeltaIndex.to_frame.html#pandas.TimedeltaIndex.to_frame
    "pandas.TimedeltaIndex.to_frame")([index, name]) | Create a DataFrame with a column
    containing the Index. |'
  id: totrans-734
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.to_frame`](api/pandas.TimedeltaIndex.to_frame.html#pandas.TimedeltaIndex.to_frame
    "pandas.TimedeltaIndex.to_frame")([index, name]) | 创建一个包含索引的列的 DataFrame。 |'
- en: Methods
  id: totrans-735
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`TimedeltaIndex.mean`](api/pandas.TimedeltaIndex.mean.html#pandas.TimedeltaIndex.mean
    "pandas.TimedeltaIndex.mean")(*[, skipna, axis]) | Return the mean value of the
    Array. |'
  id: totrans-736
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.mean`](api/pandas.TimedeltaIndex.mean.html#pandas.TimedeltaIndex.mean
    "pandas.TimedeltaIndex.mean")(*[, skipna, axis]) | 返回数组的平均值。 |'
- en: Components
  id: totrans-737
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 组件
- en: '| [`TimedeltaIndex.days`](api/pandas.TimedeltaIndex.days.html#pandas.TimedeltaIndex.days
    "pandas.TimedeltaIndex.days") | Number of days for each element. |'
  id: totrans-738
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.days`](api/pandas.TimedeltaIndex.days.html#pandas.TimedeltaIndex.days
    "pandas.TimedeltaIndex.days") | 每个元素的天数。 |'
- en: '| [`TimedeltaIndex.seconds`](api/pandas.TimedeltaIndex.seconds.html#pandas.TimedeltaIndex.seconds
    "pandas.TimedeltaIndex.seconds") | Number of seconds (>= 0 and less than 1 day)
    for each element. |'
  id: totrans-739
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.seconds`](api/pandas.TimedeltaIndex.seconds.html#pandas.TimedeltaIndex.seconds
    "pandas.TimedeltaIndex.seconds") | 每个元素的秒数（>= 0 且小于 1 天）。 |'
- en: '| [`TimedeltaIndex.microseconds`](api/pandas.TimedeltaIndex.microseconds.html#pandas.TimedeltaIndex.microseconds
    "pandas.TimedeltaIndex.microseconds") | Number of microseconds (>= 0 and less
    than 1 second) for each element. |'
  id: totrans-740
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.microseconds`](api/pandas.TimedeltaIndex.microseconds.html#pandas.TimedeltaIndex.microseconds
    "pandas.TimedeltaIndex.microseconds") | 每个元素的微秒数（>= 0 且小于 1 秒）。 |'
- en: '| [`TimedeltaIndex.nanoseconds`](api/pandas.TimedeltaIndex.nanoseconds.html#pandas.TimedeltaIndex.nanoseconds
    "pandas.TimedeltaIndex.nanoseconds") | Number of nanoseconds (>= 0 and less than
    1 microsecond) for each element. |'
  id: totrans-741
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.nanoseconds`](api/pandas.TimedeltaIndex.nanoseconds.html#pandas.TimedeltaIndex.nanoseconds
    "pandas.TimedeltaIndex.nanoseconds") | 每个元素的纳秒数（>= 0 且小于 1 微秒）。 |'
- en: '| [`TimedeltaIndex.components`](api/pandas.TimedeltaIndex.components.html#pandas.TimedeltaIndex.components
    "pandas.TimedeltaIndex.components") | Return a DataFrame of the individual resolution
    components of the Timedeltas. |'
  id: totrans-742
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.components`](api/pandas.TimedeltaIndex.components.html#pandas.TimedeltaIndex.components
    "pandas.TimedeltaIndex.components") | 返回 Timedeltas 的各个分辨率组件的 DataFrame。 |'
- en: '| [`TimedeltaIndex.inferred_freq`](api/pandas.TimedeltaIndex.inferred_freq.html#pandas.TimedeltaIndex.inferred_freq
    "pandas.TimedeltaIndex.inferred_freq") | Tries to return a string representing
    a frequency generated by infer_freq. |'
  id: totrans-743
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.inferred_freq`](api/pandas.TimedeltaIndex.inferred_freq.html#pandas.TimedeltaIndex.inferred_freq
    "pandas.TimedeltaIndex.inferred_freq") | 尝试返回由 infer_freq 生成的表示频率的字符串。 |'
- en: Conversion
  id: totrans-744
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 转换
- en: '| [`TimedeltaIndex.as_unit`](api/pandas.TimedeltaIndex.as_unit.html#pandas.TimedeltaIndex.as_unit
    "pandas.TimedeltaIndex.as_unit")(unit) | Convert to a dtype with the given unit
    resolution. |'
  id: totrans-745
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.as_unit`](api/pandas.TimedeltaIndex.as_unit.html#pandas.TimedeltaIndex.as_unit
    "pandas.TimedeltaIndex.as_unit")(unit) | 转换为具有给定单位分辨率的 dtype。 |'
- en: '| [`TimedeltaIndex.to_pytimedelta`](api/pandas.TimedeltaIndex.to_pytimedelta.html#pandas.TimedeltaIndex.to_pytimedelta
    "pandas.TimedeltaIndex.to_pytimedelta")(*args, **kwargs) | Return an ndarray of
    datetime.timedelta objects. |'
  id: totrans-746
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.to_pytimedelta`](api/pandas.TimedeltaIndex.to_pytimedelta.html#pandas.TimedeltaIndex.to_pytimedelta
    "pandas.TimedeltaIndex.to_pytimedelta")(*args, **kwargs) | 返回一个包含 datetime.timedelta
    对象的 ndarray。 |'
- en: '| [`TimedeltaIndex.to_series`](api/pandas.TimedeltaIndex.to_series.html#pandas.TimedeltaIndex.to_series
    "pandas.TimedeltaIndex.to_series")([index, name]) | Create a Series with both
    index and values equal to the index keys. |'
  id: totrans-747
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.to_series`](api/pandas.TimedeltaIndex.to_series.html#pandas.TimedeltaIndex.to_series
    "pandas.TimedeltaIndex.to_series")([index, name]) | 创建一个索引和值都等于索引键的 Series。 |'
- en: '| [`TimedeltaIndex.round`](api/pandas.TimedeltaIndex.round.html#pandas.TimedeltaIndex.round
    "pandas.TimedeltaIndex.round")(*args, **kwargs) | Perform round operation on the
    data to the specified freq. |'
  id: totrans-748
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.round`](api/pandas.TimedeltaIndex.round.html#pandas.TimedeltaIndex.round
    "pandas.TimedeltaIndex.round")(*args, **kwargs) | 对数据执行四舍五入操作到指定的频率。 |'
- en: '| [`TimedeltaIndex.floor`](api/pandas.TimedeltaIndex.floor.html#pandas.TimedeltaIndex.floor
    "pandas.TimedeltaIndex.floor")(*args, **kwargs) | Perform floor operation on the
    data to the specified freq. |'
  id: totrans-749
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.floor`](api/pandas.TimedeltaIndex.floor.html#pandas.TimedeltaIndex.floor
    "pandas.TimedeltaIndex.floor")(*args, **kwargs) | 对数据执行向下取整操作到指定的频率。 |'
- en: '| [`TimedeltaIndex.ceil`](api/pandas.TimedeltaIndex.ceil.html#pandas.TimedeltaIndex.ceil
    "pandas.TimedeltaIndex.ceil")(*args, **kwargs) | Perform ceil operation on the
    data to the specified freq. |'
  id: totrans-750
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.ceil`](api/pandas.TimedeltaIndex.ceil.html#pandas.TimedeltaIndex.ceil
    "pandas.TimedeltaIndex.ceil")(*args, **kwargs) | 对数据执行向上取整操作到指定的频率。 |'
- en: '| [`TimedeltaIndex.to_frame`](api/pandas.TimedeltaIndex.to_frame.html#pandas.TimedeltaIndex.to_frame
    "pandas.TimedeltaIndex.to_frame")([index, name]) | Create a DataFrame with a column
    containing the Index. |'
  id: totrans-751
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.to_frame`](api/pandas.TimedeltaIndex.to_frame.html#pandas.TimedeltaIndex.to_frame
    "pandas.TimedeltaIndex.to_frame")([index, name]) | 创建一个包含索引的列的DataFrame。 |'
- en: Methods
  id: totrans-752
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`TimedeltaIndex.mean`](api/pandas.TimedeltaIndex.mean.html#pandas.TimedeltaIndex.mean
    "pandas.TimedeltaIndex.mean")(*[, skipna, axis]) | Return the mean value of the
    Array. |'
  id: totrans-753
  prefs: []
  type: TYPE_TB
  zh: '| [`TimedeltaIndex.mean`](api/pandas.TimedeltaIndex.mean.html#pandas.TimedeltaIndex.mean
    "pandas.TimedeltaIndex.mean")(*[, skipna, axis]) | 返回数组的平均值。 |'
- en: PeriodIndex
  id: totrans-754
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PeriodIndex
- en: '| [`PeriodIndex`](api/pandas.PeriodIndex.html#pandas.PeriodIndex "pandas.PeriodIndex")([data, ordinal, freq, dtype, ...])
    | Immutable ndarray holding ordinal values indicating regular periods in time.
    |'
  id: totrans-755
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex`](api/pandas.PeriodIndex.html#pandas.PeriodIndex "pandas.PeriodIndex")([data, ordinal, freq, dtype, ...])
    | 不可变的ndarray，包含指示时间中常规周期的序数值。 |'
- en: Properties
  id: totrans-756
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`PeriodIndex.day`](api/pandas.PeriodIndex.day.html#pandas.PeriodIndex.day
    "pandas.PeriodIndex.day") | The days of the period. |'
  id: totrans-757
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.day`](api/pandas.PeriodIndex.day.html#pandas.PeriodIndex.day
    "pandas.PeriodIndex.day") | 周期的天数。 |'
- en: '| [`PeriodIndex.dayofweek`](api/pandas.PeriodIndex.dayofweek.html#pandas.PeriodIndex.dayofweek
    "pandas.PeriodIndex.dayofweek") | The day of the week with Monday=0, Sunday=6.
    |'
  id: totrans-758
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.dayofweek`](api/pandas.PeriodIndex.dayofweek.html#pandas.PeriodIndex.dayofweek
    "pandas.PeriodIndex.dayofweek") | 一周中的日期，星期一=0，星期日=6。 |'
- en: '| [`PeriodIndex.day_of_week`](api/pandas.PeriodIndex.day_of_week.html#pandas.PeriodIndex.day_of_week
    "pandas.PeriodIndex.day_of_week") | The day of the week with Monday=0, Sunday=6.
    |'
  id: totrans-759
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.day_of_week`](api/pandas.PeriodIndex.day_of_week.html#pandas.PeriodIndex.day_of_week
    "pandas.PeriodIndex.day_of_week") | 一周中的日期，星期一=0，星期日=6。 |'
- en: '| [`PeriodIndex.dayofyear`](api/pandas.PeriodIndex.dayofyear.html#pandas.PeriodIndex.dayofyear
    "pandas.PeriodIndex.dayofyear") | The ordinal day of the year. |'
  id: totrans-760
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.dayofyear`](api/pandas.PeriodIndex.dayofyear.html#pandas.PeriodIndex.dayofyear
    "pandas.PeriodIndex.dayofyear") | 年中的序数天数。 |'
- en: '| [`PeriodIndex.day_of_year`](api/pandas.PeriodIndex.day_of_year.html#pandas.PeriodIndex.day_of_year
    "pandas.PeriodIndex.day_of_year") | The ordinal day of the year. |'
  id: totrans-761
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.day_of_year`](api/pandas.PeriodIndex.day_of_year.html#pandas.PeriodIndex.day_of_year
    "pandas.PeriodIndex.day_of_year") | 年中的序数天数。 |'
- en: '| [`PeriodIndex.days_in_month`](api/pandas.PeriodIndex.days_in_month.html#pandas.PeriodIndex.days_in_month
    "pandas.PeriodIndex.days_in_month") | The number of days in the month. |'
  id: totrans-762
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.days_in_month`](api/pandas.PeriodIndex.days_in_month.html#pandas.PeriodIndex.days_in_month
    "pandas.PeriodIndex.days_in_month") | 月份中的天数。 |'
- en: '| [`PeriodIndex.daysinmonth`](api/pandas.PeriodIndex.daysinmonth.html#pandas.PeriodIndex.daysinmonth
    "pandas.PeriodIndex.daysinmonth") | The number of days in the month. |'
  id: totrans-763
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.daysinmonth`](api/pandas.PeriodIndex.daysinmonth.html#pandas.PeriodIndex.daysinmonth
    "pandas.PeriodIndex.daysinmonth") | 月份中的天数。 |'
- en: '| [`PeriodIndex.end_time`](api/pandas.PeriodIndex.end_time.html#pandas.PeriodIndex.end_time
    "pandas.PeriodIndex.end_time") | Get the Timestamp for the end of the period.
    |'
  id: totrans-764
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.end_time`](api/pandas.PeriodIndex.end_time.html#pandas.PeriodIndex.end_time
    "pandas.PeriodIndex.end_time") | 获取周期结束的时间戳。 |'
- en: '| [`PeriodIndex.freq`](api/pandas.PeriodIndex.freq.html#pandas.PeriodIndex.freq
    "pandas.PeriodIndex.freq") |  |'
  id: totrans-765
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.freq`](api/pandas.PeriodIndex.freq.html#pandas.PeriodIndex.freq
    "pandas.PeriodIndex.freq") |  |'
- en: '| [`PeriodIndex.freqstr`](api/pandas.PeriodIndex.freqstr.html#pandas.PeriodIndex.freqstr
    "pandas.PeriodIndex.freqstr") | Return the frequency object as a string if it''s
    set, otherwise None. |'
  id: totrans-766
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.freqstr`](api/pandas.PeriodIndex.freqstr.html#pandas.PeriodIndex.freqstr
    "pandas.PeriodIndex.freqstr") | 如果设置了频率对象，则返回字符串，否则返回None。 |'
- en: '| [`PeriodIndex.hour`](api/pandas.PeriodIndex.hour.html#pandas.PeriodIndex.hour
    "pandas.PeriodIndex.hour") | The hour of the period. |'
  id: totrans-767
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.hour`](api/pandas.PeriodIndex.hour.html#pandas.PeriodIndex.hour
    "pandas.PeriodIndex.hour") | 期间的小时数。 |'
- en: '| [`PeriodIndex.is_leap_year`](api/pandas.PeriodIndex.is_leap_year.html#pandas.PeriodIndex.is_leap_year
    "pandas.PeriodIndex.is_leap_year") | Logical indicating if the date belongs to
    a leap year. |'
  id: totrans-768
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.is_leap_year`](api/pandas.PeriodIndex.is_leap_year.html#pandas.PeriodIndex.is_leap_year
    "pandas.PeriodIndex.is_leap_year") | 逻辑指示日期是否属于闰年。 |'
- en: '| [`PeriodIndex.minute`](api/pandas.PeriodIndex.minute.html#pandas.PeriodIndex.minute
    "pandas.PeriodIndex.minute") | The minute of the period. |'
  id: totrans-769
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.minute`](api/pandas.PeriodIndex.minute.html#pandas.PeriodIndex.minute
    "pandas.PeriodIndex.minute") | 期间的分钟数。 |'
- en: '| [`PeriodIndex.month`](api/pandas.PeriodIndex.month.html#pandas.PeriodIndex.month
    "pandas.PeriodIndex.month") | The month as January=1, December=12. |'
  id: totrans-770
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.month`](api/pandas.PeriodIndex.month.html#pandas.PeriodIndex.month
    "pandas.PeriodIndex.month") | 月份，一月为1，十二月为12。 |'
- en: '| [`PeriodIndex.quarter`](api/pandas.PeriodIndex.quarter.html#pandas.PeriodIndex.quarter
    "pandas.PeriodIndex.quarter") | The quarter of the date. |'
  id: totrans-771
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.quarter`](api/pandas.PeriodIndex.quarter.html#pandas.PeriodIndex.quarter
    "pandas.PeriodIndex.quarter") | 日期的季度。 |'
- en: '| [`PeriodIndex.qyear`](api/pandas.PeriodIndex.qyear.html#pandas.PeriodIndex.qyear
    "pandas.PeriodIndex.qyear") |  |'
  id: totrans-772
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.qyear`](api/pandas.PeriodIndex.qyear.html#pandas.PeriodIndex.qyear
    "pandas.PeriodIndex.qyear") |  |'
- en: '| [`PeriodIndex.second`](api/pandas.PeriodIndex.second.html#pandas.PeriodIndex.second
    "pandas.PeriodIndex.second") | The second of the period. |'
  id: totrans-773
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.second`](api/pandas.PeriodIndex.second.html#pandas.PeriodIndex.second
    "pandas.PeriodIndex.second") | 期间的秒数。 |'
- en: '| [`PeriodIndex.start_time`](api/pandas.PeriodIndex.start_time.html#pandas.PeriodIndex.start_time
    "pandas.PeriodIndex.start_time") | Get the Timestamp for the start of the period.
    |'
  id: totrans-774
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.start_time`](api/pandas.PeriodIndex.start_time.html#pandas.PeriodIndex.start_time
    "pandas.PeriodIndex.start_time") | 获取期间开始的时间戳。 |'
- en: '| [`PeriodIndex.week`](api/pandas.PeriodIndex.week.html#pandas.PeriodIndex.week
    "pandas.PeriodIndex.week") | The week ordinal of the year. |'
  id: totrans-775
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.week`](api/pandas.PeriodIndex.week.html#pandas.PeriodIndex.week
    "pandas.PeriodIndex.week") | 年份的周序数。 |'
- en: '| [`PeriodIndex.weekday`](api/pandas.PeriodIndex.weekday.html#pandas.PeriodIndex.weekday
    "pandas.PeriodIndex.weekday") | The day of the week with Monday=0, Sunday=6. |'
  id: totrans-776
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.weekday`](api/pandas.PeriodIndex.weekday.html#pandas.PeriodIndex.weekday
    "pandas.PeriodIndex.weekday") | 一周的第几天，星期一为0，星期日为6。 |'
- en: '| [`PeriodIndex.weekofyear`](api/pandas.PeriodIndex.weekofyear.html#pandas.PeriodIndex.weekofyear
    "pandas.PeriodIndex.weekofyear") | The week ordinal of the year. |'
  id: totrans-777
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.weekofyear`](api/pandas.PeriodIndex.weekofyear.html#pandas.PeriodIndex.weekofyear
    "pandas.PeriodIndex.weekofyear") | 年份的周序数。 |'
- en: '| [`PeriodIndex.year`](api/pandas.PeriodIndex.year.html#pandas.PeriodIndex.year
    "pandas.PeriodIndex.year") | The year of the period. |'
  id: totrans-778
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.year`](api/pandas.PeriodIndex.year.html#pandas.PeriodIndex.year
    "pandas.PeriodIndex.year") | 期间的年份。 |'
- en: Methods
  id: totrans-779
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`PeriodIndex.asfreq`](api/pandas.PeriodIndex.asfreq.html#pandas.PeriodIndex.asfreq
    "pandas.PeriodIndex.asfreq")([freq, how]) | Convert the PeriodArray to the specified
    frequency freq. |'
  id: totrans-780
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.asfreq`](api/pandas.PeriodIndex.asfreq.html#pandas.PeriodIndex.asfreq
    "pandas.PeriodIndex.asfreq")([freq, how]) | 将 PeriodArray 转换为指定频率 freq。 |'
- en: '| [`PeriodIndex.strftime`](api/pandas.PeriodIndex.strftime.html#pandas.PeriodIndex.strftime
    "pandas.PeriodIndex.strftime")(*args, **kwargs) | Convert to Index using specified
    date_format. |'
  id: totrans-781
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.strftime`](api/pandas.PeriodIndex.strftime.html#pandas.PeriodIndex.strftime
    "pandas.PeriodIndex.strftime")(*args, **kwargs) | 使用指定的日期格式转换为索引。 |'
- en: '| [`PeriodIndex.to_timestamp`](api/pandas.PeriodIndex.to_timestamp.html#pandas.PeriodIndex.to_timestamp
    "pandas.PeriodIndex.to_timestamp")([freq, how]) | Cast to DatetimeArray/Index.
    |'
  id: totrans-782
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.to_timestamp`](api/pandas.PeriodIndex.to_timestamp.html#pandas.PeriodIndex.to_timestamp
    "pandas.PeriodIndex.to_timestamp")([freq, how]) | 转换为 DatetimeArray/Index。 |'
- en: '| [`PeriodIndex.from_fields`](api/pandas.PeriodIndex.from_fields.html#pandas.PeriodIndex.from_fields
    "pandas.PeriodIndex.from_fields")(*[, year, quarter, ...]) |  |'
  id: totrans-783
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.from_fields`](api/pandas.PeriodIndex.from_fields.html#pandas.PeriodIndex.from_fields
    "pandas.PeriodIndex.from_fields")(*[, year, quarter, ...]) |  |'
- en: '| [`PeriodIndex.from_ordinals`](api/pandas.PeriodIndex.from_ordinals.html#pandas.PeriodIndex.from_ordinals
    "pandas.PeriodIndex.from_ordinals")(ordinals, *, freq) |  |'
  id: totrans-784
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.from_ordinals`](api/pandas.PeriodIndex.from_ordinals.html#pandas.PeriodIndex.from_ordinals
    "pandas.PeriodIndex.from_ordinals")(ordinals, *, freq) |  |'
- en: Properties
  id: totrans-785
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`PeriodIndex.day`](api/pandas.PeriodIndex.day.html#pandas.PeriodIndex.day
    "pandas.PeriodIndex.day") | The days of the period. |'
  id: totrans-786
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.day`](api/pandas.PeriodIndex.day.html#pandas.PeriodIndex.day
    "pandas.PeriodIndex.day") | 期间的天数。 |'
- en: '| [`PeriodIndex.dayofweek`](api/pandas.PeriodIndex.dayofweek.html#pandas.PeriodIndex.dayofweek
    "pandas.PeriodIndex.dayofweek") | The day of the week with Monday=0, Sunday=6.
    |'
  id: totrans-787
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.dayofweek`](api/pandas.PeriodIndex.dayofweek.html#pandas.PeriodIndex.dayofweek
    "pandas.PeriodIndex.dayofweek") | 周几，星期一为0，星期日为6。 |'
- en: '| [`PeriodIndex.day_of_week`](api/pandas.PeriodIndex.day_of_week.html#pandas.PeriodIndex.day_of_week
    "pandas.PeriodIndex.day_of_week") | The day of the week with Monday=0, Sunday=6.
    |'
  id: totrans-788
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.day_of_week`](api/pandas.PeriodIndex.day_of_week.html#pandas.PeriodIndex.day_of_week
    "pandas.PeriodIndex.day_of_week") | 周几，星期一为0，星期日为6。 |'
- en: '| [`PeriodIndex.dayofyear`](api/pandas.PeriodIndex.dayofyear.html#pandas.PeriodIndex.dayofyear
    "pandas.PeriodIndex.dayofyear") | The ordinal day of the year. |'
  id: totrans-789
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.dayofyear`](api/pandas.PeriodIndex.dayofyear.html#pandas.PeriodIndex.dayofyear
    "pandas.PeriodIndex.dayofyear") | 一年中的序数日期。 |'
- en: '| [`PeriodIndex.day_of_year`](api/pandas.PeriodIndex.day_of_year.html#pandas.PeriodIndex.day_of_year
    "pandas.PeriodIndex.day_of_year") | The ordinal day of the year. |'
  id: totrans-790
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.day_of_year`](api/pandas.PeriodIndex.day_of_year.html#pandas.PeriodIndex.day_of_year
    "pandas.PeriodIndex.day_of_year") | 一年中的序数日期。 |'
- en: '| [`PeriodIndex.days_in_month`](api/pandas.PeriodIndex.days_in_month.html#pandas.PeriodIndex.days_in_month
    "pandas.PeriodIndex.days_in_month") | The number of days in the month. |'
  id: totrans-791
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.days_in_month`](api/pandas.PeriodIndex.days_in_month.html#pandas.PeriodIndex.days_in_month
    "pandas.PeriodIndex.days_in_month") | 月份中的天数。 |'
- en: '| [`PeriodIndex.daysinmonth`](api/pandas.PeriodIndex.daysinmonth.html#pandas.PeriodIndex.daysinmonth
    "pandas.PeriodIndex.daysinmonth") | The number of days in the month. |'
  id: totrans-792
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.daysinmonth`](api/pandas.PeriodIndex.daysinmonth.html#pandas.PeriodIndex.daysinmonth
    "pandas.PeriodIndex.daysinmonth") | 月份中的天数。 |'
- en: '| [`PeriodIndex.end_time`](api/pandas.PeriodIndex.end_time.html#pandas.PeriodIndex.end_time
    "pandas.PeriodIndex.end_time") | Get the Timestamp for the end of the period.
    |'
  id: totrans-793
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.end_time`](api/pandas.PeriodIndex.end_time.html#pandas.PeriodIndex.end_time
    "pandas.PeriodIndex.end_time") | 获取周期结束时的时间戳。 |'
- en: '| [`PeriodIndex.freq`](api/pandas.PeriodIndex.freq.html#pandas.PeriodIndex.freq
    "pandas.PeriodIndex.freq") |  |'
  id: totrans-794
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.freq`](api/pandas.PeriodIndex.freq.html#pandas.PeriodIndex.freq
    "pandas.PeriodIndex.freq") |  |'
- en: '| [`PeriodIndex.freqstr`](api/pandas.PeriodIndex.freqstr.html#pandas.PeriodIndex.freqstr
    "pandas.PeriodIndex.freqstr") | Return the frequency object as a string if it''s
    set, otherwise None. |'
  id: totrans-795
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.freqstr`](api/pandas.PeriodIndex.freqstr.html#pandas.PeriodIndex.freqstr
    "pandas.PeriodIndex.freqstr") | 如果已设置，返回频率对象的字符串，否则返回None。 |'
- en: '| [`PeriodIndex.hour`](api/pandas.PeriodIndex.hour.html#pandas.PeriodIndex.hour
    "pandas.PeriodIndex.hour") | The hour of the period. |'
  id: totrans-796
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.hour`](api/pandas.PeriodIndex.hour.html#pandas.PeriodIndex.hour
    "pandas.PeriodIndex.hour") | 周期的小时数。 |'
- en: '| [`PeriodIndex.is_leap_year`](api/pandas.PeriodIndex.is_leap_year.html#pandas.PeriodIndex.is_leap_year
    "pandas.PeriodIndex.is_leap_year") | Logical indicating if the date belongs to
    a leap year. |'
  id: totrans-797
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.is_leap_year`](api/pandas.PeriodIndex.is_leap_year.html#pandas.PeriodIndex.is_leap_year
    "pandas.PeriodIndex.is_leap_year") | 逻辑值，表示日期是否属于闰年。 |'
- en: '| [`PeriodIndex.minute`](api/pandas.PeriodIndex.minute.html#pandas.PeriodIndex.minute
    "pandas.PeriodIndex.minute") | The minute of the period. |'
  id: totrans-798
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.minute`](api/pandas.PeriodIndex.minute.html#pandas.PeriodIndex.minute
    "pandas.PeriodIndex.minute") | 周期的分钟数。 |'
- en: '| [`PeriodIndex.month`](api/pandas.PeriodIndex.month.html#pandas.PeriodIndex.month
    "pandas.PeriodIndex.month") | The month as January=1, December=12. |'
  id: totrans-799
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.month`](api/pandas.PeriodIndex.month.html#pandas.PeriodIndex.month
    "pandas.PeriodIndex.month") | 月份，一月为1，十二月为12。 |'
- en: '| [`PeriodIndex.quarter`](api/pandas.PeriodIndex.quarter.html#pandas.PeriodIndex.quarter
    "pandas.PeriodIndex.quarter") | The quarter of the date. |'
  id: totrans-800
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.quarter`](api/pandas.PeriodIndex.quarter.html#pandas.PeriodIndex.quarter
    "pandas.PeriodIndex.quarter") | 日期的季度。 |'
- en: '| [`PeriodIndex.qyear`](api/pandas.PeriodIndex.qyear.html#pandas.PeriodIndex.qyear
    "pandas.PeriodIndex.qyear") |  |'
  id: totrans-801
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.qyear`](api/pandas.PeriodIndex.qyear.html#pandas.PeriodIndex.qyear
    "pandas.PeriodIndex.qyear") |  |'
- en: '| [`PeriodIndex.second`](api/pandas.PeriodIndex.second.html#pandas.PeriodIndex.second
    "pandas.PeriodIndex.second") | The second of the period. |'
  id: totrans-802
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.second`](api/pandas.PeriodIndex.second.html#pandas.PeriodIndex.second
    "pandas.PeriodIndex.second") | 周期的秒数。 |'
- en: '| [`PeriodIndex.start_time`](api/pandas.PeriodIndex.start_time.html#pandas.PeriodIndex.start_time
    "pandas.PeriodIndex.start_time") | Get the Timestamp for the start of the period.
    |'
  id: totrans-803
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.start_time`](api/pandas.PeriodIndex.start_time.html#pandas.PeriodIndex.start_time
    "pandas.PeriodIndex.start_time") | 获取周期开始时的时间戳。 |'
- en: '| [`PeriodIndex.week`](api/pandas.PeriodIndex.week.html#pandas.PeriodIndex.week
    "pandas.PeriodIndex.week") | The week ordinal of the year. |'
  id: totrans-804
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.week`](api/pandas.PeriodIndex.week.html#pandas.PeriodIndex.week
    "pandas.PeriodIndex.week") | 年中的周序数。 |'
- en: '| [`PeriodIndex.weekday`](api/pandas.PeriodIndex.weekday.html#pandas.PeriodIndex.weekday
    "pandas.PeriodIndex.weekday") | The day of the week with Monday=0, Sunday=6. |'
  id: totrans-805
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.weekday`](api/pandas.PeriodIndex.weekday.html#pandas.PeriodIndex.weekday
    "pandas.PeriodIndex.weekday") | 一周中的日期，星期一=0，星期日=6。 |'
- en: '| [`PeriodIndex.weekofyear`](api/pandas.PeriodIndex.weekofyear.html#pandas.PeriodIndex.weekofyear
    "pandas.PeriodIndex.weekofyear") | The week ordinal of the year. |'
  id: totrans-806
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.weekofyear`](api/pandas.PeriodIndex.weekofyear.html#pandas.PeriodIndex.weekofyear
    "pandas.PeriodIndex.weekofyear") | 一年中的周序数。 |'
- en: '| [`PeriodIndex.year`](api/pandas.PeriodIndex.year.html#pandas.PeriodIndex.year
    "pandas.PeriodIndex.year") | The year of the period. |'
  id: totrans-807
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.year`](api/pandas.PeriodIndex.year.html#pandas.PeriodIndex.year
    "pandas.PeriodIndex.year") | 该时期的年份。 |'
- en: Methods
  id: totrans-808
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`PeriodIndex.asfreq`](api/pandas.PeriodIndex.asfreq.html#pandas.PeriodIndex.asfreq
    "pandas.PeriodIndex.asfreq")([freq, how]) | Convert the PeriodArray to the specified
    frequency freq. |'
  id: totrans-809
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.asfreq`](api/pandas.PeriodIndex.asfreq.html#pandas.PeriodIndex.asfreq
    "pandas.PeriodIndex.asfreq")([freq, how]) | 将PeriodArray转换为指定频率freq。 |'
- en: '| [`PeriodIndex.strftime`](api/pandas.PeriodIndex.strftime.html#pandas.PeriodIndex.strftime
    "pandas.PeriodIndex.strftime")(*args, **kwargs) | Convert to Index using specified
    date_format. |'
  id: totrans-810
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.strftime`](api/pandas.PeriodIndex.strftime.html#pandas.PeriodIndex.strftime
    "pandas.PeriodIndex.strftime")(*args, **kwargs) | 使用指定的日期格式转换为索引。 |'
- en: '| [`PeriodIndex.to_timestamp`](api/pandas.PeriodIndex.to_timestamp.html#pandas.PeriodIndex.to_timestamp
    "pandas.PeriodIndex.to_timestamp")([freq, how]) | Cast to DatetimeArray/Index.
    |'
  id: totrans-811
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.to_timestamp`](api/pandas.PeriodIndex.to_timestamp.html#pandas.PeriodIndex.to_timestamp
    "pandas.PeriodIndex.to_timestamp")([freq, how]) | 转换为DatetimeArray/Index。 |'
- en: '| [`PeriodIndex.from_fields`](api/pandas.PeriodIndex.from_fields.html#pandas.PeriodIndex.from_fields
    "pandas.PeriodIndex.from_fields")(*[, year, quarter, ...]) |  |'
  id: totrans-812
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.from_fields`](api/pandas.PeriodIndex.from_fields.html#pandas.PeriodIndex.from_fields
    "pandas.PeriodIndex.from_fields")(*[, year, quarter, ...]) |  |'
- en: '| [`PeriodIndex.from_ordinals`](api/pandas.PeriodIndex.from_ordinals.html#pandas.PeriodIndex.from_ordinals
    "pandas.PeriodIndex.from_ordinals")(ordinals, *, freq) |  |'
  id: totrans-813
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodIndex.from_ordinals`](api/pandas.PeriodIndex.from_ordinals.html#pandas.PeriodIndex.from_ordinals
    "pandas.PeriodIndex.from_ordinals")(ordinals, *, freq) |  |'
