- en: Object Counting using Ultralytics YOLOv8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[`docs.ultralytics.com/guides/object-counting/`](https://docs.ultralytics.com/guides/object-counting/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: What is Object Counting?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Object counting with [Ultralytics YOLOv8](https://github.com/ultralytics/ultralytics/)
    involves accurate identification and counting of specific objects in videos and
    camera streams. YOLOv8 excels in real-time applications, providing efficient and
    precise object counting for various scenarios like crowd analysis and surveillance,
    thanks to its state-of-the-art algorithms and deep learning capabilities.
  prefs: []
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '[`www.youtube.com/embed/Ag2e-5_NpS0`](https://www.youtube.com/embed/Ag2e-5_NpS0)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Watch:** Object Counting using Ultralytics YOLOv8 |'
  prefs: []
  type: TYPE_NORMAL
- en: '[`www.youtube.com/embed/Fj9TStNBVoY`](https://www.youtube.com/embed/Fj9TStNBVoY)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Watch:** Class-wise Object Counting using Ultralytics YOLOv8 |'
  prefs: []
  type: TYPE_NORMAL
- en: Advantages of Object Counting?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Resource Optimization:** Object counting facilitates efficient resource management
    by providing accurate counts, and optimizing resource allocation in applications
    like inventory management.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Enhanced Security:** Object counting enhances security and surveillance by
    accurately tracking and counting entities, aiding in proactive threat detection.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Informed Decision-Making:** Object counting offers valuable insights for
    decision-making, optimizing processes in retail, traffic management, and various
    other domains.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Real World Applications
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| Logistics | Aquaculture |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| ![Conveyor Belt Packets Counting Using Ultralytics YOLOv8](img/ca5975376e8109512dde2de53f82c528.png)
    | ![Fish Counting in Sea using Ultralytics YOLOv8](img/10299b830cb7415f0631cbd9a349d37b.png)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Conveyor Belt Packets Counting Using Ultralytics YOLOv8 | Fish Counting in
    Sea using Ultralytics YOLOv8 |'
  prefs: []
  type: TYPE_TB
- en: Object Counting using YOLOv8 Example
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: <details class="tip" open="open"><summary>Region is Movable</summary>
  prefs: []
  type: TYPE_NORMAL
- en: You can move the region anywhere in the frame by clicking on its edges</details>
  prefs: []
  type: TYPE_NORMAL
- en: Argument `ObjectCounter`
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Here''s a table with the `ObjectCounter` arguments:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Name | Type | Default | Description |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `names` | `dict` | `None` | Dictionary of classes names. |'
  prefs: []
  type: TYPE_TB
- en: '| `reg_pts` | `list` | `[(20, 400), (1260, 400)]` | List of points defining
    the counting region. |'
  prefs: []
  type: TYPE_TB
- en: '| `count_reg_color` | `tuple` | `(255, 0, 255)` | RGB color of the counting
    region. |'
  prefs: []
  type: TYPE_TB
- en: '| `count_txt_color` | `tuple` | `(0, 0, 0)` | RGB color of the count text.
    |'
  prefs: []
  type: TYPE_TB
- en: '| `count_bg_color` | `tuple` | `(255, 255, 255)` | RGB color of the count text
    background. |'
  prefs: []
  type: TYPE_TB
- en: '| `line_thickness` | `int` | `2` | Line thickness for bounding boxes. |'
  prefs: []
  type: TYPE_TB
- en: '| `track_thickness` | `int` | `2` | Thickness of the track lines. |'
  prefs: []
  type: TYPE_TB
- en: '| `view_img` | `bool` | `False` | Flag to control whether to display the video
    stream. |'
  prefs: []
  type: TYPE_TB
- en: '| `view_in_counts` | `bool` | `True` | Flag to control whether to display the
    in counts on the video stream. |'
  prefs: []
  type: TYPE_TB
- en: '| `view_out_counts` | `bool` | `True` | Flag to control whether to display
    the out counts on the video stream. |'
  prefs: []
  type: TYPE_TB
- en: '| `draw_tracks` | `bool` | `False` | Flag to control whether to draw the object
    tracks. |'
  prefs: []
  type: TYPE_TB
- en: '| `track_color` | `tuple` | `None` | RGB color of the tracks. |'
  prefs: []
  type: TYPE_TB
- en: '| `region_thickness` | `int` | `5` | Thickness of the object counting region.
    |'
  prefs: []
  type: TYPE_TB
- en: '| `line_dist_thresh` | `int` | `15` | Euclidean distance threshold for line
    counter. |'
  prefs: []
  type: TYPE_TB
- en: '| `cls_txtdisplay_gap` | `int` | `50` | Display gap between each class count.
    |'
  prefs: []
  type: TYPE_TB
- en: Arguments `model.track`
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| Name | Type | Default | Description |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `source` | `im0` | `None` | source directory for images or videos |'
  prefs: []
  type: TYPE_TB
- en: '| `persist` | `bool` | `False` | persisting tracks between frames |'
  prefs: []
  type: TYPE_TB
- en: '| `tracker` | `str` | `botsort.yaml` | Tracking method ''bytetrack'' or ''botsort''
    |'
  prefs: []
  type: TYPE_TB
- en: '| `conf` | `float` | `0.3` | Confidence Threshold |'
  prefs: []
  type: TYPE_TB
- en: '| `iou` | `float` | `0.5` | IOU Threshold |'
  prefs: []
  type: TYPE_TB
- en: '| `classes` | `list` | `None` | filter results by class, i.e. classes=0, or
    classes=[0,2,3] |'
  prefs: []
  type: TYPE_TB
- en: '| `verbose` | `bool` | `True` | Display the object tracking results |'
  prefs: []
  type: TYPE_TB
- en: FAQ
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: How do I count objects in a video using Ultralytics YOLOv8?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To count objects in a video using Ultralytics YOLOv8, you can follow these
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Import the necessary libraries (`cv2`, `ultralytics`).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Load a pretrained YOLOv8 model.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Define the counting region (e.g., a polygon, line, etc.).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set up the video capture and initialize the object counter.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Process each frame to track objects and count them within the defined region.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Here''s a simple example for counting in a region:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Explore more configurations and options in the Object Counting section.
  prefs: []
  type: TYPE_NORMAL
- en: What are the advantages of using Ultralytics YOLOv8 for object counting?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Using Ultralytics YOLOv8 for object counting offers several advantages:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Resource Optimization:** It facilitates efficient resource management by
    providing accurate counts, helping optimize resource allocation in industries
    like inventory management.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Enhanced Security:** It enhances security and surveillance by accurately
    tracking and counting entities, aiding in proactive threat detection.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Informed Decision-Making:** It offers valuable insights for decision-making,
    optimizing processes in domains like retail, traffic management, and more.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For real-world applications and code examples, visit the Advantages of Object
    Counting section.
  prefs: []
  type: TYPE_NORMAL
- en: How can I count specific classes of objects using Ultralytics YOLOv8?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To count specific classes of objects using Ultralytics YOLOv8, you need to
    specify the classes you are interested in during the tracking phase. Below is
    a Python example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: In this example, `classes_to_count=[0, 2]`, which means it counts objects of
    class `0` and `2` (e.g., person and car).
  prefs: []
  type: TYPE_NORMAL
- en: Why should I use YOLOv8 over other object detection models for real-time applications?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ultralytics YOLOv8 provides several advantages over other object detection
    models like Faster R-CNN, SSD, and previous YOLO versions:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Speed and Efficiency:** YOLOv8 offers real-time processing capabilities,
    making it ideal for applications requiring high-speed inference, such as surveillance
    and autonomous driving.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Accuracy:** It provides state-of-the-art accuracy for object detection and
    tracking tasks, reducing the number of false positives and improving overall system
    reliability.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Ease of Integration:** YOLOv8 offers seamless integration with various platforms
    and devices, including mobile and edge devices, which is crucial for modern AI
    applications.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Flexibility:** Supports various tasks like object detection, segmentation,
    and tracking with configurable models to meet specific use-case requirements.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Check out Ultralytics [YOLOv8 Documentation](https://docs.ultralytics.com/models/yolov8)
    for a deeper dive into its features and performance comparisons.
  prefs: []
  type: TYPE_NORMAL
- en: Can I use YOLOv8 for advanced applications like crowd analysis and traffic management?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Yes, Ultralytics YOLOv8 is perfectly suited for advanced applications like
    crowd analysis and traffic management due to its real-time detection capabilities,
    scalability, and integration flexibility. Its advanced features allow for high-accuracy
    object tracking, counting, and classification in dynamic environments. Example
    use cases include:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Crowd Analysis:** Monitor and manage large gatherings, ensuring safety and
    optimizing crowd flow.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Traffic Management:** Track and count vehicles, analyze traffic patterns,
    and manage congestion in real-time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For more information and implementation details, refer to the guide on Real
    World Applications of object counting with YOLOv8.
  prefs: []
  type: TYPE_NORMAL
