- en: numpy.ufunc.reduceat
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ufunc.reduceat.html](https://numpy.org/doc/1.26/reference/generated/numpy.ufunc.reduceat.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: method
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Performs a (local) reduce with specified slices over a single axis.
  prefs: []
  type: TYPE_NORMAL
- en: 'For i in `range(len(indices))`, [`reduceat`](#numpy.ufunc.reduceat "numpy.ufunc.reduceat")
    computes `ufunc.reduce(array[indices[i]:indices[i+1]])`, which becomes the i-th
    generalized “row” parallel to *axis* in the final result (i.e., in a 2-D array,
    for example, if *axis = 0*, it becomes the i-th row, but if *axis = 1*, it becomes
    the i-th column). There are three exceptions to this:'
  prefs: []
  type: TYPE_NORMAL
- en: when `i = len(indices) - 1` (so for the last index), `indices[i+1] = array.shape[axis]`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: if `indices[i] >= indices[i + 1]`, the i-th generalized “row” is simply `array[indices[i]]`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: if `indices[i] >= len(array)` or `indices[i] < 0`, an error is raised.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The shape of the output depends on the size of [`indices`](numpy.indices.html#numpy.indices
    "numpy.indices"), and may be larger than [`array`](numpy.array.html#numpy.array
    "numpy.array") (this happens if `len(indices) > array.shape[axis]`).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**array**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The array to act on.
  prefs: []
  type: TYPE_NORMAL
- en: '**indices**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Paired indices, comma separated (not colon), specifying slices to reduce.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The axis along which to apply the reduceat.
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype**data-type code, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The type used to represent the intermediate results. Defaults to the data type
    of the output array if this is provided, or the data type of the input array if
    no output array is provided.
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, None, or tuple of ndarray and None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A location into which the result is stored. If not provided or None, a freshly-allocated
    array is returned. For consistency with `ufunc.__call__`, if given as a keyword,
    this may be wrapped in a 1-element tuple.
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 1.13.0: Tuples are allowed for keyword argument.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**r**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The reduced values. If *out* was supplied, *r* is a reference to *out*.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'A descriptive example:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If [`array`](numpy.array.html#numpy.array "numpy.array") is 1-D, the function
    *ufunc.accumulate(array)* is the same as `ufunc.reduceat(array, indices)[::2]`
    where [`indices`](numpy.indices.html#numpy.indices "numpy.indices") is `range(len(array)
    - 1)` with a zero placed in every other element: `indices = zeros(2 * len(array)
    - 1)`, `indices[1::2] = range(1, len(array))`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Don’t be fooled by this attribute’s name: *reduceat(array)* is not necessarily
    smaller than [`array`](numpy.array.html#numpy.array "numpy.array").'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'To take the running sum of four successive values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'A 2-D example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
