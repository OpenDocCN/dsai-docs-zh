["```py\nscipy.fft.fht(a, dln, mu, offset=0.0, bias=0.0)\n```", "```py\n>>> import numpy as np\n>>> from scipy import fft\n>>> import matplotlib.pyplot as plt \n```", "```py\n>>> mu = 0.0                     # Order mu of Bessel function\n>>> r = np.logspace(-7, 1, 128)  # Input evaluation points\n>>> dln = np.log(r[1]/r[0])      # Step size\n>>> offset = fft.fhtoffset(dln, initial=-6*np.log(10), mu=mu)\n>>> k = np.exp(offset)/r[::-1]   # Output evaluation points \n```", "```py\n>>> def f(x, mu):\n...  \"\"\"Analytical function: x^(mu+1) exp(-x^2/2).\"\"\"\n...     return x**(mu + 1)*np.exp(-x**2/2) \n```", "```py\n>>> a_r = f(r, mu)\n>>> fht = fft.fht(a_r, dln, mu=mu, offset=offset) \n```", "```py\n>>> a_k = f(k, mu)\n>>> rel_err = abs((fht-a_k)/a_k) \n```", "```py\n>>> figargs = {'sharex': True, 'sharey': True, 'constrained_layout': True}\n>>> fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(10, 4), **figargs)\n>>> ax1.set_title(r'$r^{\\mu+1}\\ \\exp(-r^2/2)$')\n>>> ax1.loglog(r, a_r, 'k', lw=2)\n>>> ax1.set_xlabel('r')\n>>> ax2.set_title(r'$k^{\\mu+1} \\exp(-k^2/2)$')\n>>> ax2.loglog(k, a_k, 'k', lw=2, label='Analytical')\n>>> ax2.loglog(k, fht, 'C3--', lw=2, label='FFTLog')\n>>> ax2.set_xlabel('k')\n>>> ax2.legend(loc=3, framealpha=1)\n>>> ax2.set_ylim([1e-10, 1e1])\n>>> ax2b = ax2.twinx()\n>>> ax2b.loglog(k, rel_err, 'C0', label='Rel. Error (-)')\n>>> ax2b.set_ylabel('Rel. Error (-)', color='C0')\n>>> ax2b.tick_params(axis='y', labelcolor='C0')\n>>> ax2b.legend(loc=4, framealpha=1)\n>>> ax2b.set_ylim([1e-9, 1e-3])\n>>> plt.show() \n```"]