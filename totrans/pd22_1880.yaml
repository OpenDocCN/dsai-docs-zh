- en: pandas docstring guide
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas文档字符串指南
- en: 原文：[https://pandas.pydata.org/docs/development/contributing_docstring.html](https://pandas.pydata.org/docs/development/contributing_docstring.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/development/contributing_docstring.html](https://pandas.pydata.org/docs/development/contributing_docstring.html)
- en: '## About docstrings and standards'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '## 关于文档字符串和标准'
- en: A Python docstring is a string used to document a Python module, class, function
    or method, so programmers can understand what it does without having to read the
    details of the implementation.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Python文档字符串是用于记录Python模块、类、函数或方法的字符串，以便程序员可以在不阅读实现细节的情况下了解其功能。
- en: Also, it is a common practice to generate online (html) documentation automatically
    from docstrings. [Sphinx](https://www.sphinx-doc.org) serves this purpose.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，从文档字符串自动生成在线（html）文档是一种常见做法。[Sphinx](https://www.sphinx-doc.org)用于此目的。
- en: 'The next example gives an idea of what a docstring looks like:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个示例展示了文档字符串的样式：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Some standards regarding docstrings exist, which make them easier to read, and
    allow them be easily exported to other formats such as html or pdf.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 存在一些关于文档字符串的标准，使它们更易阅读，并允许它们轻松导出到其他格式，如html或pdf。
- en: The first conventions every Python docstring should follow are defined in [PEP-257](https://www.python.org/dev/peps/pep-0257/).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 每个Python文档字符串应遵循的第一个约定在[PEP-257](https://www.python.org/dev/peps/pep-0257/)中定义。
- en: 'As PEP-257 is quite broad, other more specific standards also exist. In the
    case of pandas, the NumPy docstring convention is followed. These conventions
    are explained in this document:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 由于PEP-257相当广泛，还存在其他更具体的标准。在pandas的情况下，遵循NumPy文档字符串约定。这些约定在本文档中有解释：
- en: '[numpydoc docstring guide](https://numpydoc.readthedocs.io/en/latest/format.html)'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[numpydoc文档字符串指南](https://numpydoc.readthedocs.io/en/latest/format.html)'
- en: numpydoc is a Sphinx extension to support the NumPy docstring convention.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: numpydoc是一个支持NumPy文档字符串约定的Sphinx扩展。
- en: 'The standard uses reStructuredText (reST). reStructuredText is a markup language
    that allows encoding styles in plain text files. Documentation about reStructuredText
    can be found in:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 该标准使用reStructuredText（reST）。reStructuredText是一种标记语言，允许在纯文本文件中编码样式。关于reStructuredText的文档可以在以下找到：
- en: '[Sphinx reStructuredText primer](https://www.sphinx-doc.org/en/stable/rest.html)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Sphinx reStructuredText入门](https://www.sphinx-doc.org/en/stable/rest.html)'
- en: '[Quick reStructuredText reference](https://docutils.sourceforge.io/docs/user/rst/quickref.html)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[快速reStructuredText参考](https://docutils.sourceforge.io/docs/user/rst/quickref.html)'
- en: '[Full reStructuredText specification](https://docutils.sourceforge.io/docs/ref/rst/restructuredtext.html)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[完整的reStructuredText规范](https://docutils.sourceforge.io/docs/ref/rst/restructuredtext.html)'
- en: pandas has some helpers for sharing docstrings between related classes, see
    [Sharing docstrings](#docstring-sharing).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: pandas有一些辅助功能，用于在相关类之间共享文档字符串，请参见[共享文档字符串](#docstring-sharing)。
- en: The rest of this document will summarize all the above guidelines, and will
    provide additional conventions specific to the pandas project.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本文的其余部分将总结上述所有准则，并提供特定于pandas项目的其他约定。
- en: '## Writing a docstring'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '## 编写文档字符串'
- en: '### General rules'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '### 一般规则'
- en: Docstrings must be defined with three double-quotes. No blank lines should be
    left before or after the docstring. The text starts in the next line after the
    opening quotes. The closing quotes have their own line (meaning that they are
    not at the end of the last sentence).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 文档字符串必须用三个双引号定义。在文档字符串之前或之后不应留下空行。文本从开头引号的下一行开始。结束引号有自己的一行（这意味着它们不在最后一句的末尾）。
- en: 'On rare occasions reST styles like bold text or italics will be used in docstrings,
    but is it common to have inline code, which is presented between backticks. The
    following are considered inline code:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在罕见情况下，文档字符串中会使用reST样式，如粗体文本或斜体文本，但常见的是内联代码，用反引号括起来。以下被视为内联代码：
- en: The name of a parameter
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参数的名称
- en: Python code, a module, function, built-in, type, literal… (e.g. `os`, `list`,
    `numpy.abs`, `datetime.date`, `True`)
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python代码，模块，函数，内置，类型，文字…（例如`os`，`list`，`numpy.abs`，`datetime.date`，`True`）
- en: A pandas class (in the form `:class:`pandas.Series``)
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个pandas类（形式为`:class:`pandas.Series``）
- en: A pandas method (in the form `:meth:`pandas.Series.sum``)
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个pandas方法（形式为`:meth:`pandas.Series.sum``）
- en: A pandas function (in the form `:func:`pandas.to_datetime``)
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个pandas函数（形式为`:func:`pandas.to_datetime``）
- en: Note
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To display only the last component of the linked class, method or function,
    prefix it with `~`. For example, `:class:`~pandas.Series`` will link to `pandas.Series`
    but only display the last part, `Series` as the link text. See [Sphinx cross-referencing
    syntax](https://www.sphinx-doc.org/en/stable/domains.html#cross-referencing-syntax)
    for details.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 要仅显示链接类、方法或函数的最后一个组件，请在其前面加上`~`。例如，`:class:`~pandas.Series``将链接到`pandas.Series`，但只显示最后部分`Series`作为链接文本。有关详细信息，请参阅[Sphinx交叉引用语法](https://www.sphinx-doc.org/en/stable/domains.html#cross-referencing-syntax)。
- en: '**Good:**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**好的：**'
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Bad:**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**不好的：**'
- en: '[PRE2]  ### Section 1: short summary'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE2]  ### 第1节：简短摘要'
- en: The short summary is a single sentence that expresses what the function does
    in a concise way.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 简短摘要是一个简洁表达函数功能的单个句子。
- en: The short summary must start with a capital letter, end with a dot, and fit
    in a single line. It needs to express what the object does without providing details.
    For functions and methods, the short summary must start with an infinitive verb.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 简短摘要必须以大写字���开头，以句点结束，并适合在一行内。它需要表达对象的功能，而不提供详细信息。对于函数和方法，简短摘要必须以不定式动词开头。
- en: '**Good:**'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**好的：**'
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Bad:**'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**不好的：**'
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]  ### Section 2: extended summary'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE7]  ### 第2节：扩展摘要'
- en: The extended summary provides details on what the function does. It should not
    go into the details of the parameters, or discuss implementation notes, which
    go in other sections.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展摘要提供了函数的详细信息。它不应该详细说明参数，或讨论实现注意事项，这些应该在其他部分中说明。
- en: A blank line is left between the short summary and the extended summary. Every
    paragraph in the extended summary ends with a dot.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 简短摘要和扩展摘要之间留有一个空行。扩展摘要中的每个段落都以句点结束。
- en: The extended summary should provide details on why the function is useful and
    their use cases, if it is not too generic.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展摘要应提供函数的用途及其用例的详细信息，如果不太通用的话。
- en: '[PRE8]  ### Section 3: parameters'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE8]  ### 第3节：参数'
- en: The details of the parameters will be added in this section. This section has
    the title “Parameters”, followed by a line with a hyphen under each letter of
    the word “Parameters”. A blank line is left before the section title, but not
    after, and not between the line with the word “Parameters” and the one with the
    hyphens.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 参数的详细信息将添加在此部分。此部分的标题为“参数”，下面是一个以“参数”每个字母下面的连字符为分隔的线。在部分标题之前留有一个空行，但之后不留空行，也不在“参数”一词下面的线和连字符之间留空行。
- en: After the title, each parameter in the signature must be documented, including
    `*args` and `**kwargs`, but not `self`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在标题之后，必须记录签名中的每个参数，包括`*args`和`**kwargs`，但不包括`self`。
- en: The parameters are defined by their name, followed by a space, a colon, another
    space, and the type (or types). Note that the space between the name and the colon
    is important. Types are not defined for `*args` and `**kwargs`, but must be defined
    for all other parameters. After the parameter definition, it is required to have
    a line with the parameter description, which is indented, and can have multiple
    lines. The description must start with a capital letter, and finish with a dot.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 参数由其名称定义，后面跟着一个空格，一个冒号，另一个空格，以及类型（或类型）。请注意名称和冒号之间的空格很重要。对于`*args`和`**kwargs`不定义类型，但对于所有其他参数必须定义类型。在参数定义之后，需要有一个带缩进的参数描述行，可以有多行。描述必须以大写字母开头，并以句点结束。
- en: For keyword arguments with a default value, the default will be listed after
    a comma at the end of the type. The exact form of the type in this case will be
    “int, default 0”. In some cases it may be useful to explain what the default argument
    means, which can be added after a comma “int, default -1, meaning all cpus”.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 对于带有默认值的关键字参数，类型后面会列出默认值，具体形式为“int, default 0”。在某些情况下，解释默认参数的含义可能很有用，可以在逗号后面添加“int,
    default -1，表示所有cpu”。
- en: In cases where the default value is `None`, meaning that the value will not
    be used. Instead of `"str, default None"`, it is preferred to write `"str, optional"`.
    When `None` is a value being used, we will keep the form “str, default None”.
    For example, in `df.to_csv(compression=None)`, `None` is not a value being used,
    but means that compression is optional, and no compression is being used if not
    provided. In this case we will use `"str, optional"`. Only in cases like `func(value=None)`
    and `None` is being used in the same way as `0` or `foo` would be used, then we
    will specify “str, int or None, default None”.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在默认值为 `None` 的情况下，意味着该值不会被使用。与 `"str, default None"` 不同，更倾向于写成 `"str, optional"`。当
    `None` 是被使用的值时，我们将保持“str, default None”形式。例如，在 `df.to_csv(compression=None)` 中，`None`
    不是被使用的值，而是表示压缩是可选的，如果未提供，则不使用压缩。在这种情况下，我们将使用 `"str, optional"`。仅在类似 `func(value=None)`
    和 `None` 被使用与 `0` 或 `foo` 相同的方式时，我们将指定“str, int or None, default None”。
- en: '**Good:**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**好：**'
- en: '[PRE9]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '**Bad:**'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**不好：**'
- en: '[PRE10]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '#### Parameter types'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '#### 参数类型'
- en: 'When specifying the parameter types, Python built-in data types can be used
    directly (the Python type is preferred to the more verbose string, integer, boolean,
    etc):'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在指定参数类型时，可以直接使用 Python 内置数据类型（优选使用 Python 类型，而不是更冗长的字符串、整数、布尔值等）：
- en: int
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: int
- en: float
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: float
- en: str
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: str
- en: bool
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: bool
- en: 'For complex types, define the subtypes. For `dict` and `tuple`, as more than
    one type is present, we use the brackets to help read the type (curly brackets
    for `dict` and normal brackets for `tuple`):'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 对于复杂类型，定义子类型。对于 `dict` 和 `tuple`，由于存在多种类型，我们使用括号来帮助阅读类型（花括号用于 `dict`，普通括号用于
    `tuple`）：
- en: list of int
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: int 列表
- en: 'dict of {str : int}'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '{str : int} 字典'
- en: tuple of (str, int, int)
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: (str, int, int) 元组
- en: tuple of (str,)
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: (str,) 元组
- en: set of str
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: set of str
- en: 'In case where there are just a set of values allowed, list them in curly brackets
    and separated by commas (followed by a space). If the values are ordinal and they
    have an order, list them in this order. Otherwise, list the default value first,
    if there is one:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果只允许一组值，则用花括号将它们列出，并用逗号（后跟一个空格）分隔。如果值是有序的并且有顺序，请按此顺序列出。否则，如果有默认值，请先列出默认值：
- en: '{0, 10, 25}'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '{0, 10, 25}'
- en: '{‘simple’, ‘advanced’}'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '{‘simple’, ‘advanced’}'
- en: '{‘low’, ‘medium’, ‘high’}'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '{‘low’, ‘medium’, ‘high’}'
- en: '{‘cat’, ‘dog’, ‘bird’}'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '{‘cat’, ‘dog’, ‘bird’}'
- en: 'If the type is defined in a Python module, the module must be specified:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果类型在 Python 模块中定义，则必须指定模块：
- en: datetime.date
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: datetime.date
- en: datetime.datetime
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: datetime.datetime
- en: decimal.Decimal
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: decimal.Decimal
- en: 'If the type is in a package, the module must be also specified:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如果类型在包中，则还必须指定模块：
- en: numpy.ndarray
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: numpy.ndarray
- en: scipy.sparse.coo_matrix
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: scipy.sparse.coo_matrix
- en: 'If the type is a pandas type, also specify pandas except for Series and DataFrame:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果类型是 pandas 类型，则除了 Series 和 DataFrame 外，还要指定 pandas：
- en: Series
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Series
- en: DataFrame
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DataFrame
- en: pandas.Index
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas.Index
- en: pandas.Categorical
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas.Categorical
- en: pandas.arrays.SparseArray
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas.arrays.SparseArray
- en: 'If the exact type is not relevant, but must be compatible with a NumPy array,
    array-like can be specified. If Any type that can be iterated is accepted, iterable
    can be used:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果确切类型不重要，但必须与 NumPy 数组兼容，则可以指定类似数组。如果接受任何可迭代的类型，则可使用 iterable：
- en: array-like
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: array-like
- en: iterable
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iterable
- en: 'If more than one type is accepted, separate them by commas, except the last
    two types, that need to be separated by the word ‘or’:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 如果接受多种类型，则用逗号分隔它们，除了最后两种类型，它们需要用‘or’分隔：
- en: int or float
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: int 或 float
- en: float, decimal.Decimal or None
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: float, decimal.Decimal 或 None
- en: str or list of str
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: str 或 str 列表
- en: If `None` is one of the accepted values, it always needs to be the last in the
    list.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `None` 是可接受的值之一，则始终需要将其列为列表的最后一项。
- en: 'For axis, the convention is to use something like:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 对于轴，惯例是使用类似以下的内容：
- en: 'axis : {0 or ‘index’, 1 or ‘columns’, None}, default None  ### Section 4: returns
    or yields'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'axis : {0 or ‘index’, 1 or ‘columns’, None}, 默认为 None  ### Section 4: returns
    or yields'
- en: If the method returns a value, it will be documented in this section. Also if
    the method yields its output.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 如果方法返回一个值，将在此部分中记录它。如果方法输出其输出，则也会记录在这里。
- en: The title of the section will be defined in the same way as the “Parameters”.
    With the names “Returns” or “Yields” followed by a line with as many hyphens as
    the letters in the preceding word.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 与“参数”相同的方式定义部分的标题。以“Returns”或“Yields”为名称，后跟一行连字符，连字符数量与前一个单词中的字母数量相同。
- en: The documentation of the return is also similar to the parameters. But in this
    case, no name will be provided, unless the method returns or yields more than
    one value (a tuple of values).
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 返回值的文档也与参数类似。但在这种情况下，除非方法返回或产生多个值（值的元组），否则不会提供名称。
- en: The types for “Returns” and “Yields” are the same as the ones for the “Parameters”.
    Also, the description must finish with a dot.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: “Returns”和“Yields”的类型与“Parameters”的类型相同。此外，描述必须以句点结束。
- en: 'For example, with a single value:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 举例来说，对于单个数值：
- en: '[PRE11]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'With more than one value:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 对于多个数值：
- en: '[PRE12]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'If the method yields its value:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果该方法产生其值：
- en: '[PRE13]  ### Section 5: see also'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE13]  ### Section 5: see also'
- en: This section is used to let users know about pandas functionality related to
    the one being documented. In rare cases, if no related methods or functions can
    be found at all, this section can be skipped.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 此部分用于让用户了解与所记录的功能相关的 pandas 功能。在极少数情况下，如果找不到任何相关方法或函数，可以跳过此部分。
- en: An obvious example would be the `head()` and `tail()` methods. As `tail()` does
    the equivalent as `head()` but at the end of the `Series` or `DataFrame` instead
    of at the beginning, it is good to let the users know about it.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 一个明显的例子是 `head()` 和 `tail()` 方法。因为 `tail()` 在 `Series` 或 `DataFrame` 的末尾执行与
    `head()` 类似的操作，而不是在开头，所以最好让用户知道这一点。
- en: 'To give an intuition on what can be considered related, here there are some
    examples:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 为了直观地了解什么可以被视为相关的，这里有一些例子：
- en: '`loc` and `iloc`, as they do the same, but in one case providing indices and
    in the other positions'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`loc` 和 `iloc`，因为它们做的是相同的事情，但在一个情况下提供索引，在另一个情况下提供位置。'
- en: '`max` and `min`, as they do the opposite'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max` 和 `min`，因为它们相反操作。'
- en: '`iterrows`, `itertuples` and `items`, as it is easy that a user looking for
    the method to iterate over columns ends up in the method to iterate over rows,
    and vice-versa'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`iterrows`，`itertuples` 和 `items`，因为一个用户要查找遍历列的方法很容易最终找到遍历行的方法，反之亦然。'
- en: '`fillna` and `dropna`, as both methods are used to handle missing values'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fillna` 和 `dropna`，因为这两种方法都用于处理缺失值。'
- en: '`read_csv` and `to_csv`, as they are complementary'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`read_csv` 和 `to_csv`，因为它们是互补的。'
- en: '`merge` and `join`, as one is a generalization of the other'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`merge` 和 `join`，因为一个是另一个的概括。'
- en: '`astype` and `pandas.to_datetime`, as users may be reading the documentation
    of `astype` to know how to cast as a date, and the way to do it is with `pandas.to_datetime`'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`astype` 和 `pandas.to_datetime`，因为用户可能正在阅读 `astype` 的文档以了解如何转换为日期，而转换方法是使用
    `pandas.to_datetime`。'
- en: '`where` is related to `numpy.where`, as its functionality is based on it'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`where` 与 `numpy.where` 相关，因为其功能是基于它的。'
- en: When deciding what is related, you should mainly use your common sense and think
    about what can be useful for the users reading the documentation, especially the
    less experienced ones.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在决定相关内容时，您应该主要凭借常识，并考虑对于阅读文档的用户来说什么可能有用，特别是对于经验较少的用户。
- en: When relating to other libraries (mainly `numpy`), use the name of the module
    first (not an alias like `np`). If the function is in a module which is not the
    main one, like `scipy.sparse`, list the full module (e.g. `scipy.sparse.coo_matrix`).
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 当与其他库（主要是 `numpy`）相关时，首先使用模块的名称（而不是别名，如 `np`）。如果函数位于不是主要的模块中，比如 `scipy.sparse`，则列出完整的模块（例如
    `scipy.sparse.coo_matrix`）。
- en: This section has a header, “See Also” (note the capital S and A), followed by
    the line with hyphens and preceded by a blank line.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这个部分有一个标题，“See Also”（注意大写的S和A），后面跟着由破折号构成的一行，并且前面有一个空行。
- en: After the header, we will add a line for each related method or function, followed
    by a space, a colon, another space, and a short description that illustrates what
    this method or function does, why is it relevant in this context, and what the
    key differences are between the documented function and the one being referenced.
    The description must also end with a dot.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在标题之后，我们将为每个相关方法或函数添加一行，后跟一个空格、一个冒号、另一个空格和一个简短的描述，说明这个方法或函数做什么，在这个上下文中为什么是相关的，以及所记录的函数与被引用的函数之间的关键区别是什么。描述还必须以句点结束。
- en: Note that in “Returns” and “Yields”, the description is located on the line
    after the type. In this section, however, it is located on the same line, with
    a colon in between. If the description does not fit on the same line, it can continue
    onto other lines which must be further indented.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意在“Returns”和“Yields”中，描述位于类型之后的一行上。然而，在这个部分中，它位于同一行上，中间用冒号分隔。如果描述不适合在同一行上，则可以继续到其他必须进一步缩进的行上。
- en: 'For example:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE14]  ### Section 6: notes'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE14]  ### Section 6: notes'
- en: This is an optional section used for notes about the implementation of the algorithm,
    or to document technical aspects of the function behavior.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个可选部分，用于有关算法实现的注释，或者记录函数行为的技术方面。
- en: Feel free to skip it, unless you are familiar with the implementation of the
    algorithm, or you discover some counter-intuitive behavior while writing the examples
    for the function.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您熟悉算法的实现，或者在编写函数示例时发现一些反直觉的行为，请随意跳过它。
- en: 'This section follows the same format as the extended summary section.  ###
    Section 7: examples'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 本节遵循扩展摘要部分相同的格式。### 第7节：示例
- en: This is one of the most important sections of a docstring, despite being placed
    in the last position, as often people understand concepts better by example than
    through accurate explanations.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这是文档字符串中最重要的部分之一，尽管它位于最后位置，因为人们通常通过示例而不是准确的解释更容易理解概念。
- en: Examples in docstrings, besides illustrating the usage of the function or method,
    must be valid Python code, that returns the given output in a deterministic way,
    and that can be copied and run by users.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在文档字符串中的示例除了说明函数或方法的用法外，必须是有效的 Python 代码，以确定性方式返回给定输出，并且用户可以复制并运行。
- en: Examples are presented as a session in the Python terminal. `>>>` is used to
    present code. `...` is used for code continuing from the previous line. Output
    is presented immediately after the last line of code generating the output (no
    blank lines in between). Comments describing the examples can be added with blank
    lines before and after them.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 示例以 Python 终端中的会话形式呈现。使用`>>>`来呈现代码。使用`...`表示从上一行继续的代码。输出立即在生成输出的最后一行代码之后呈现（中间没有空行）。可以在示例描述之前和之后添加空行以添加描述示例的注释。
- en: 'The way to present examples is as follows:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 展示示例的方式如下：
- en: Import required libraries (except `numpy` and `pandas`)
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入所需的库（除了`numpy`和`pandas`）
- en: Create the data required for the example
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建示例所需的数据
- en: Show a very basic example that gives an idea of the most common use case
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 展示一个非常基本的例子，给出最常见用例的概念
- en: Add examples with explanations that illustrate how the parameters can be used
    for extended functionality
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加带有说明的示例，说明参数如何用于扩展功能
- en: 'A simple example could be:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的例子可能是：
- en: '[PRE15]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The examples should be as concise as possible. In cases where the complexity
    of the function requires long examples, is recommended to use blocks with headers
    in bold. Use double star `**` to make a text bold, like in `**this example**`.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 示例应尽可能简洁。在函数复杂性需要长示例的情况下，建议使用加粗标题的块。使用双星号`**`使文本加粗，就像`**这个例子**`中一样。
- en: '#### Conventions for the examples'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '#### 示例的约定'
- en: 'Code in examples is assumed to always start with these two lines which are
    not shown:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 示例中的代码始终假定以未显示的这两行开头：
- en: '[PRE16]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Any other module used in the examples must be explicitly imported, one per line
    (as recommended in [**PEP 8#imports**](https://peps.python.org/pep-0008/#imports))
    and avoiding aliases. Avoid excessive imports, but if needed, imports from the
    standard library go first, followed by third-party libraries (like matplotlib).
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 示例中使用的任何其他模块必须显式导入，每行一个（如[**PEP 8#imports**](https://peps.python.org/pep-0008/#imports)中建议的），避免使用别名。避免过多的导入，但如果需要，首先导入标准库，然后是第三方库（如
    matplotlib）。
- en: When illustrating examples with a single `Series` use the name `ser`, and if
    illustrating with a single `DataFrame` use the name `df`. For indices, `idx` is
    the preferred name. If a set of homogeneous `Series` or `DataFrame` is used, name
    them `ser1`, `ser2`, `ser3`… or `df1`, `df2`, `df3`… If the data is not homogeneous,
    and more than one structure is needed, name them with something meaningful, for
    example `df_main` and `df_to_join`.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用单个`Series`进行示例说明时，请使用名称`ser`，如果使用单个`DataFrame`进行说明，请使用名称`df`。对于索引，首选名称为`idx`。如果使用一组同质的`Series`或`DataFrame`，请将它们命名为`ser1`、`ser2`、`ser3`...或`df1`、`df2`、`df3`...
    如果数据不是同质的，并且需要多个结构，请使用有意义的名称命名它们，例如`df_main`和`df_to_join`。
- en: Data used in the example should be as compact as possible. The number of rows
    is recommended to be around 4, but make it a number that makes sense for the specific
    example. For example in the `head` method, it requires to be higher than 5, to
    show the example with the default values. If doing the `mean`, we could use something
    like `[1, 2, 3]`, so it is easy to see that the value returned is the mean.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 示例中使用的数据应尽可能紧凑。建议行数约为4行，但应根据具体示例合理确定。例如，在`head`方法中，建议使用大于5的值，以显示具有默认值的示例。如果进行`mean`操作，我们可以使用类似`[1,
    2, 3]`的数据，这样很容易看出返回的值是平均值。
- en: For more complex examples (grouping for example), avoid using data without interpretation,
    like a matrix of random numbers with columns A, B, C, D… And instead use a meaningful
    example, which makes it easier to understand the concept. Unless required by the
    example, use names of animals, to keep examples consistent. And numerical properties
    of them.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 对于更复杂的示例（例如分组），避免使用没有解释的数据，比如随机数字矩阵，列为A、B、C、D…而是使用一个有意义的示例，这样更容易理解概念。除非示例要求，否则使用动物的名称，以保持示例一致。并且它们的数字属性。
- en: When calling the method, keywords arguments `head(n=3)` are preferred to positional
    arguments `head(3)`.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 调用方法时，关键字参数`head(n=3)`优先于位置参数`head(3)`。
- en: '**Good:**'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '**好：**'
- en: '[PRE17]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '**Bad:**'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '**不好：**'
- en: '[PRE18]  #### Tips for getting your examples pass the doctests'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE18]  #### 使示例通过doctest的提示'
- en: 'Getting the examples pass the doctests in the validation script can sometimes
    be tricky. Here are some attention points:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 使示例通过验证脚本的doctest有时可能会有些棘手。以下是一些注意事项：
- en: Import all needed libraries (except for pandas and NumPy, those are already
    imported as `import pandas as pd` and `import numpy as np`) and define all variables
    you use in the example.
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入所有需要的库（除了pandas和NumPy，它们已经作为`import pandas as pd`和`import numpy as np`导入）并定义你在示例中使用的所有变量。
- en: 'Try to avoid using random data. However random data might be OK in some cases,
    like if the function you are documenting deals with probability distributions,
    or if the amount of data needed to make the function result meaningful is too
    much, such that creating it manually is very cumbersome. In those cases, always
    use a fixed random seed to make the generated examples predictable. Example:'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽量避免使用随机数据。然而，在某些情况下，随机数据可能是可以接受的，比如如果你正在记录的函数涉及概率分布，或者如果生成有意义的函数结果所需的数据量太大，手动创建会非常繁琐。在这些情况下，始终使用固定的随机种子使生成的示例可预测。例如：
- en: '[PRE19]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'If you have a code snippet that wraps multiple lines, you need to use ‘…’ on
    the continued lines:'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你有一个跨越多行的代码片段，你需要在后续行上使用‘…’：
- en: '[PRE20]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'If you want to show a case where an exception is raised, you can do:'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你想展示出引发异常的情况，可以这样做：
- en: '[PRE21]'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: It is essential to include the “Traceback (most recent call last):”, but for
    the actual error only the error name is sufficient.
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 包含“Traceback（最近一次调用的最后）:”是必要的，但对于实际错误只需提供错误名称即可。
- en: If there is a small part of the result that can vary (e.g. a hash in an object
    representation), you can use `...` to represent this part.
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果结果中有一小部分可能会变化（例如对象表示中的哈希），可以使用`...`表示此部分。
- en: If you want to show that `s.plot()` returns a matplotlib AxesSubplot object,
    this will fail the doctest
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你想要展示`s.plot()`返回一个matplotlib AxesSubplot对象，这将导致doctest失败。
- en: '[PRE22]'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: However, you can do (notice the comment that needs to be added)
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 但是，你可以这样做（注意需要添加的注释）
- en: '[PRE23]  #### Plots in examples'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[PRE23]  #### 示例中的图表'
- en: There are some methods in pandas returning plots. To render the plots generated
    by the examples in the documentation, the `.. plot::` directive exists.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: pandas中有一些返回图表的方法。为了渲染文档中示例生成的图表，存在`.. plot::`指令。
- en: To use it, place the next code after the “Examples” header as shown below. The
    plot will be generated automatically when building the documentation.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用它，请将下一个代码放在“示例”标题后面，如下所示。生成文档时，图表将自动生成。
- en: '[PRE24]  ## Sharing docstrings'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE24]  ## 共享文档字符串'
- en: pandas has a system for sharing docstrings, with slight variations, between
    classes. This helps us keep docstrings consistent, while keeping things clear
    for the user reading. It comes at the cost of some complexity when writing.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: pandas有一个系统，可以在类之间共享文档字符串，稍有不同。这有助于我们保持文档字符串一致，同时为用户阅读保持清晰。在编写时会增加一些复杂性。
- en: Each shared docstring will have a base template with variables, like `{klass}`.
    The variables filled in later on using the `doc` decorator. Finally, docstrings
    can also be appended to with the `doc` decorator.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 每个共享的文档字符串都会有一个基础模板和变量，比如`{klass}`。稍后使用`doc`装饰器填充变量。最后，文档字符串也可以使用`doc`装饰器追加。
- en: In this example, we’ll create a parent docstring normally (this is like `pandas.core.generic.NDFrame`.
    Then we’ll have two children (like `pandas.core.series.Series` and `pandas.core.frame.DataFrame`).
    We’ll substitute the class names in this docstring.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在本示例中，我们将正常创建一个父文档字符串（这类似于`pandas.core.generic.NDFrame`）。然后我们将有两个子文档字符串（像`pandas.core.series.Series`和`pandas.core.frame.DataFrame`）。我们将在此文档字符串中替换类名。
- en: '[PRE25]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The resulting docstrings are
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 结果文档字符串为
- en: '[PRE26]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Notice:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：
- en: We “append” the parent docstring to the children docstrings, which are initially
    empty.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将父文档字符串“附加”到最初为空的子文档字符串上。
- en: Our files will often contain a module-level `_shared_doc_kwargs` with some common
    substitution values (things like `klass`, `axes`, etc).
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的文件通常会包含一个模块级别的`_shared_doc_kwargs`，其中包含一些常见的替换值（例如`klass`、`axes`等）。
- en: You can substitute and append in one shot with something like
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以一次性进行替换和附加，例如
- en: '[PRE27]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: where `template` may come from a module-level `_shared_docs` dictionary mapping
    function names to docstrings. Wherever possible, we prefer using `doc`, since
    the docstring-writing processes is slightly closer to normal.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 其中`template`可能来自模块级别的`_shared_docs`字典，将函数名称映射到文档字符串。在可能的情况下，我们更喜欢使用`doc`，因为文档字符串编写过程略微接近正常。
- en: See `pandas.core.generic.NDFrame.fillna` for an example template, and `pandas.core.series.Series.fillna`
    and `pandas.core.generic.frame.fillna` for the filled versions.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 查看`pandas.core.generic.NDFrame.fillna`以获取一个示例模板，以及填充版本的`pandas.core.series.Series.fillna`和`pandas.core.generic.frame.fillna`。
- en: About docstrings and standards
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于文档字符串和标准
- en: A Python docstring is a string used to document a Python module, class, function
    or method, so programmers can understand what it does without having to read the
    details of the implementation.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: Python文档字符串是用于记录Python模块、类、函数或方法的字符串，以便程序员可以了解其功能，而无需阅读实现细节。
- en: Also, it is a common practice to generate online (html) documentation automatically
    from docstrings. [Sphinx](https://www.sphinx-doc.org) serves this purpose.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，从文档字符串自动生成在线（html）文档是一种常见做法。[Sphinx](https://www.sphinx-doc.org)用于此目的。
- en: 'The next example gives an idea of what a docstring looks like:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个示例给出了文档字符串的外观：
- en: '[PRE28]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Some standards regarding docstrings exist, which make them easier to read, and
    allow them be easily exported to other formats such as html or pdf.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 存在一些关于文档字符串的标准，使它们更易于阅读，并允许它们轻松导出到其他格式，如html或pdf。
- en: The first conventions every Python docstring should follow are defined in [PEP-257](https://www.python.org/dev/peps/pep-0257/).
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 每个Python文档字符串应遵循的第一个约定在[PEP-257](https://www.python.org/dev/peps/pep-0257/)中定义。
- en: 'As PEP-257 is quite broad, other more specific standards also exist. In the
    case of pandas, the NumPy docstring convention is followed. These conventions
    are explained in this document:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 由于PEP-257相当广泛，还存在其他更具体的标准。在pandas的情况下，遵循NumPy文档字符串约定。这些约定在本文档中有解释：
- en: '[numpydoc docstring guide](https://numpydoc.readthedocs.io/en/latest/format.html)'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[numpydoc文档字符串指南](https://numpydoc.readthedocs.io/en/latest/format.html)'
- en: numpydoc is a Sphinx extension to support the NumPy docstring convention.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: numpydoc是一个支持NumPy文档字符串约定的Sphinx扩展。
- en: 'The standard uses reStructuredText (reST). reStructuredText is a markup language
    that allows encoding styles in plain text files. Documentation about reStructuredText
    can be found in:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 标准使用reStructuredText（reST）。reStructuredText是一种标记语言，允许在纯文本文件中编码样式。关于reStructuredText的文档可以在以下找到：
- en: '[Sphinx reStructuredText primer](https://www.sphinx-doc.org/en/stable/rest.html)'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Sphinx reStructuredText入门](https://www.sphinx-doc.org/en/stable/rest.html)'
- en: '[Quick reStructuredText reference](https://docutils.sourceforge.io/docs/user/rst/quickref.html)'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[快速reStructuredText参考](https://docutils.sourceforge.io/docs/user/rst/quickref.html)'
- en: '[Full reStructuredText specification](https://docutils.sourceforge.io/docs/ref/rst/restructuredtext.html)'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[完整的reStructuredText规范](https://docutils.sourceforge.io/docs/ref/rst/restructuredtext.html)'
- en: pandas has some helpers for sharing docstrings between related classes, see
    [Sharing docstrings](#docstring-sharing).
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: pandas有一些辅助功能，用于在相关类之间共享文档字符串，请参阅[共享文档字符串](#docstring-sharing)。
- en: The rest of this document will summarize all the above guidelines, and will
    provide additional conventions specific to the pandas project.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 本文档的其余部分将总结上述所有准则，并提供特定于pandas项目的额外约定。
- en: '## Writing a docstring'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '## 编写文档字符串'
- en: '### General rules'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '### 一般规则'
- en: Docstrings must be defined with three double-quotes. No blank lines should be
    left before or after the docstring. The text starts in the next line after the
    opening quotes. The closing quotes have their own line (meaning that they are
    not at the end of the last sentence).
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 文档字符串必须用三个双引号定义。在文档字符串之前或之后不应留下空行。文本从开头引号的下一行开始。结束引号有自己的一行（这意味着它们不在最后一句的末尾）。
- en: 'On rare occasions reST styles like bold text or italics will be used in docstrings,
    but is it common to have inline code, which is presented between backticks. The
    following are considered inline code:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在罕见的情况下，文档字符串中会使用reST样式，如粗体文本或斜体文本，但通常会使用内联代码，该代码位于反引号之间。以下内容被视为内联代码：
- en: The name of a parameter
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参数的名称
- en: Python code, a module, function, built-in, type, literal… (e.g. `os`, `list`,
    `numpy.abs`, `datetime.date`, `True`)
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 代码，模块，函数，内置类型，字面值…（例如 `os`，`list`，`numpy.abs`，`datetime.date`，`True`）
- en: A pandas class (in the form `:class:`pandas.Series``)
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 pandas 类（形式为 `:class:`pandas.Series``）
- en: A pandas method (in the form `:meth:`pandas.Series.sum``)
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 pandas 方法（形式为 `:meth:`pandas.Series.sum``）
- en: A pandas function (in the form `:func:`pandas.to_datetime``)
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 pandas 函数（形式为 `:func:`pandas.to_datetime``）
- en: Note
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 注
- en: To display only the last component of the linked class, method or function,
    prefix it with `~`. For example, `:class:`~pandas.Series`` will link to `pandas.Series`
    but only display the last part, `Series` as the link text. See [Sphinx cross-referencing
    syntax](https://www.sphinx-doc.org/en/stable/domains.html#cross-referencing-syntax)
    for details.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 为了仅显示链接类，方法或函数的最后组件，请以 `~` 为前缀。例如，`:class:`~pandas.Series`` 将链接到 `pandas.Series`，但只显示最后一部分
    `Series` 作为链接文本。有关详细信息，请参阅 [Sphinx 交叉引用语法](https://www.sphinx-doc.org/en/stable/domains.html#cross-referencing-syntax)。
- en: '**Good:**'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '**好的：**'
- en: '[PRE29]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '**Bad:**'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '**不好的：**'
- en: '[PRE30]  ### Section 1: short summary'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE30]  ### 第一部分：简短摘要'
- en: The short summary is a single sentence that expresses what the function does
    in a concise way.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 简短摘要是一句话，简洁地表达函数的作用。
- en: The short summary must start with a capital letter, end with a dot, and fit
    in a single line. It needs to express what the object does without providing details.
    For functions and methods, the short summary must start with an infinitive verb.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 简短摘要必须以大写字母开头，以句点结束，并适合一行。它需要表达对象的作用，而不提供细节。对于函数和方法，简短摘要必须以不定式动词开头。
- en: '**Good:**'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '**好的：**'
- en: '[PRE31]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '**Bad:**'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '**不好的：**'
- en: '[PRE32]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]  ### Section 2: extended summary'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE35]  ### 第二部分：扩展摘要'
- en: The extended summary provides details on what the function does. It should not
    go into the details of the parameters, or discuss implementation notes, which
    go in other sections.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展摘要提供了函数的详细信息。它不应该详细说明参数，或者讨论实现注意事项，这些内容在其他部分中。
- en: A blank line is left between the short summary and the extended summary. Every
    paragraph in the extended summary ends with a dot.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 简短摘要和扩展摘要之间留有一个空行。扩展摘要中的每个段落都以句点结尾。
- en: The extended summary should provide details on why the function is useful and
    their use cases, if it is not too generic.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展摘要应提供有关函数为什么有用以及它们的用例的详细信息，如果不太通用的话。
- en: '[PRE36]  ### Section 3: parameters'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE36]  ### 第三部分：参数'
- en: The details of the parameters will be added in this section. This section has
    the title “Parameters”, followed by a line with a hyphen under each letter of
    the word “Parameters”. A blank line is left before the section title, but not
    after, and not between the line with the word “Parameters” and the one with the
    hyphens.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 将在此部分添加参数的详细信息。此部分的标题为“参数”，下面是一行带有单词“参数”的连字符。标题之前留有一个空行，但标题后面没有空行，在单词“参数”所在行和带连字符的行之间也没有空行。
- en: After the title, each parameter in the signature must be documented, including
    `*args` and `**kwargs`, but not `self`.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 在标题之后，必须记录签名中的每个参数，包括 `*args` 和 `**kwargs`，但不包括 `self`。
- en: The parameters are defined by their name, followed by a space, a colon, another
    space, and the type (or types). Note that the space between the name and the colon
    is important. Types are not defined for `*args` and `**kwargs`, but must be defined
    for all other parameters. After the parameter definition, it is required to have
    a line with the parameter description, which is indented, and can have multiple
    lines. The description must start with a capital letter, and finish with a dot.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 参数由其名称定义，后面跟着一个空格，一个冒号，另一个空格，以及类型（或类型）。注意名称和冒号之间的空格很重要。`*args` 和 `**kwargs`
    不定义类型，但所有其他参数必须定义类型。在参数定义之后，必须有一个带缩进的参数描述行，可以有多行。描述必须以大写字母开头，并以句点结束。
- en: For keyword arguments with a default value, the default will be listed after
    a comma at the end of the type. The exact form of the type in this case will be
    “int, default 0”. In some cases it may be useful to explain what the default argument
    means, which can be added after a comma “int, default -1, meaning all cpus”.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 对于具有默认值的关键字参数，类型后面会列出默认值。在这种情况下，类型的确切形式将是“int，默认值为0”。在某些情况下，解释默认参数的含义可能很有用，这可以在逗号后面添加“int，默认值为-1，表示所有
    CPU”。
- en: In cases where the default value is `None`, meaning that the value will not
    be used. Instead of `"str, default None"`, it is preferred to write `"str, optional"`.
    When `None` is a value being used, we will keep the form “str, default None”.
    For example, in `df.to_csv(compression=None)`, `None` is not a value being used,
    but means that compression is optional, and no compression is being used if not
    provided. In this case we will use `"str, optional"`. Only in cases like `func(value=None)`
    and `None` is being used in the same way as `0` or `foo` would be used, then we
    will specify “str, int or None, default None”.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在默认值为`None`的情况下，意味着不会使用该值。与“str，default None”相比，更倾向于写成“str，optional”。当`None`是一个被使用的值时，我们将保持形式“str，default
    None”。例如，在`df.to_csv(compression=None)`中，`None`不是一个被使用的值，但意味着压缩是可选的，如果未提供压缩，则不使用压缩。在这种情况下，我们将使用“str，optional”。仅在像`func(value=None)`和`None`被使用与`0`或`foo`相同的方式时，我们将指定“str，int或None，默认为None”。
- en: '**Good:**'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '**好的：**'
- en: '[PRE37]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '**Bad:**'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '**不好：**'
- en: '[PRE38]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '#### Parameter types'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '#### 参数类型'
- en: 'When specifying the parameter types, Python built-in data types can be used
    directly (the Python type is preferred to the more verbose string, integer, boolean,
    etc):'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 在指定参数类型时，可以直接使用Python内置数据类型（Python类型优先于更冗长的字符串、整数、布尔值等）：
- en: int
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整数
- en: float
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浮点数
- en: str
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: str
- en: bool
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 布尔值
- en: 'For complex types, define the subtypes. For `dict` and `tuple`, as more than
    one type is present, we use the brackets to help read the type (curly brackets
    for `dict` and normal brackets for `tuple`):'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 对于复杂类型，定义子类型。对于`dict`和`tuple`，由于存在多种类型，我们使用括号来帮助阅读类型（大括号用于`dict`，普通括号用于`tuple`）：
- en: list of int
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: int列表
- en: 'dict of {str : int}'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '{str: int}字典'
- en: tuple of (str, int, int)
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （str、int、int）元组
- en: tuple of (str,)
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （str，）元组
- en: set of str
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: str集合
- en: 'In case where there are just a set of values allowed, list them in curly brackets
    and separated by commas (followed by a space). If the values are ordinal and they
    have an order, list them in this order. Otherwise, list the default value first,
    if there is one:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 如果只有一组允许的值，请用大括号列出它们，并用逗号（后跟一个空格）分隔。如果这些值是有序的，并且它们有一个顺序，请按此顺序列出它们。否则，如果有默认值，请首先列出默认值：
- en: '{0, 10, 25}'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '{0, 10, 25}'
- en: '{‘simple’, ‘advanced’}'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '{''simple''，''advanced''}'
- en: '{‘low’, ‘medium’, ‘high’}'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '{''low''，''medium''，''high''}'
- en: '{‘cat’, ‘dog’, ‘bird’}'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '{''cat''，''dog''，''bird''}'
- en: 'If the type is defined in a Python module, the module must be specified:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 如果类型在Python模块中定义，则必须指定模块：
- en: datetime.date
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: datetime.date
- en: datetime.datetime
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: datetime.datetime
- en: decimal.Decimal
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: decimal.Decimal
- en: 'If the type is in a package, the module must be also specified:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 如果类型在一个包中，也必须指定模块：
- en: numpy.ndarray
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: numpy.ndarray
- en: scipy.sparse.coo_matrix
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: scipy.sparse.coo_matrix
- en: 'If the type is a pandas type, also specify pandas except for Series and DataFrame:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 如果类型是pandas类型，则除了Series和DataFrame外，还要指定pandas：
- en: Series
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Series
- en: DataFrame
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DataFrame
- en: pandas.Index
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas.Index
- en: pandas.Categorical
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas.Categorical
- en: pandas.arrays.SparseArray
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas.arrays.SparseArray
- en: 'If the exact type is not relevant, but must be compatible with a NumPy array,
    array-like can be specified. If Any type that can be iterated is accepted, iterable
    can be used:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 如果确切的类型不相关，但必须与NumPy数组兼容，则可以指定array-like。如果接受可迭代的任何类型，可以使用iterable：
- en: array-like
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: array-like
- en: iterable
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可迭代对象
- en: 'If more than one type is accepted, separate them by commas, except the last
    two types, that need to be separated by the word ‘or’:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 如果接受的类型超过一个，用逗号分隔它们，除了最后两种类型，它们需要用单词'or'分隔：
- en: int or float
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整数或浮点数
- en: float, decimal.Decimal or None
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浮点数、decimal.Decimal或None
- en: str or list of str
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: str或str列表
- en: If `None` is one of the accepted values, it always needs to be the last in the
    list.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`None`是接受的值之一，则它始终需要是列表中的最后一个。
- en: 'For axis, the convention is to use something like:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 对于轴，惯例是使用类似于：
- en: 'axis : {0 or ‘index’, 1 or ‘columns’, None}, default None  ### Section 4: returns
    or yields'
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '轴：{0或''index''，1或''columns''，None}，默认为None  ### 第4节：返回或产出'
- en: If the method returns a value, it will be documented in this section. Also if
    the method yields its output.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 如果方法返回一个值，将在本节中记录它。如果方法产生其输出。
- en: The title of the section will be defined in the same way as the “Parameters”.
    With the names “Returns” or “Yields” followed by a line with as many hyphens as
    the letters in the preceding word.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 该部分的标题将与“参数”相同。使用名称“返回”或“产出”，后跟一行与前一个单词中的字母数相同的连字符。
- en: The documentation of the return is also similar to the parameters. But in this
    case, no name will be provided, unless the method returns or yields more than
    one value (a tuple of values).
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的文档与参数类似。但在这种情况下，不提供名称，除非该方法返回或产出多个值（值的元组）。
- en: The types for “Returns” and “Yields” are the same as the ones for the “Parameters”.
    Also, the description must finish with a dot.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: “返回”和“产出”的类型与“参数”的类型相同。此外，描述必须以句点结束。
- en: 'For example, with a single value:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，对于单个值：
- en: '[PRE39]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'With more than one value:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 当有多个值时：
- en: '[PRE40]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'If the method yields its value:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 如果方法产生它的值：
- en: '[PRE41]  ### Section 5: see also'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE41]  ### 第 5 节：参见'
- en: This section is used to let users know about pandas functionality related to
    the one being documented. In rare cases, if no related methods or functions can
    be found at all, this section can be skipped.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 本节用于让用户了解与正在文档化的功能相关的 pandas 功能。在极少数情况下，如果找不到任何相关的方法或函数，可以跳过此节。
- en: An obvious example would be the `head()` and `tail()` methods. As `tail()` does
    the equivalent as `head()` but at the end of the `Series` or `DataFrame` instead
    of at the beginning, it is good to let the users know about it.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 一个明显的例子是 `head()` 和 `tail()` 方法。由于 `tail()` 做的是 `head()` 的等效操作，但是在 `Series`
    或 `DataFrame` 的末尾而不是开头，因此让用户知道这一点是很好的。
- en: 'To give an intuition on what can be considered related, here there are some
    examples:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 为了直观地了解什么可以被视为相关，这里有一些例子：
- en: '`loc` and `iloc`, as they do the same, but in one case providing indices and
    in the other positions'
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`loc` 和 `iloc`，因为它们做的事情相同，但在一个情况下提供索引，在另一个情况下提供位置。'
- en: '`max` and `min`, as they do the opposite'
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max` 和 `min`，因为它们起相反的作用。'
- en: '`iterrows`, `itertuples` and `items`, as it is easy that a user looking for
    the method to iterate over columns ends up in the method to iterate over rows,
    and vice-versa'
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`iterrows`、`itertuples` 和 `items`，因为用户可能在寻找按列迭代的方法时最终找到了按行迭代的方法，反之亦然。'
- en: '`fillna` and `dropna`, as both methods are used to handle missing values'
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fillna` 和 `dropna`，因为这两种方法都用于处理缺失值。'
- en: '`read_csv` and `to_csv`, as they are complementary'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`read_csv` 和 `to_csv`，因为它们是互补的。'
- en: '`merge` and `join`, as one is a generalization of the other'
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`merge` 和 `join`，因为其中一个是另一个的概括。'
- en: '`astype` and `pandas.to_datetime`, as users may be reading the documentation
    of `astype` to know how to cast as a date, and the way to do it is with `pandas.to_datetime`'
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`astype` 和 `pandas.to_datetime`，因为用户可能在阅读 `astype` 的文档以了解如何转换为日期，而做法是使用 `pandas.to_datetime`。'
- en: '`where` is related to `numpy.where`, as its functionality is based on it'
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`where` 和 `numpy.where` 相关，因为它的功能基于它。'
- en: When deciding what is related, you should mainly use your common sense and think
    about what can be useful for the users reading the documentation, especially the
    less experienced ones.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 决定相关内容时，你应该主要运用常识，考虑对于阅读文档的用户而言哪些内容可能有用，尤其是对于那些经验较少的用户。
- en: When relating to other libraries (mainly `numpy`), use the name of the module
    first (not an alias like `np`). If the function is in a module which is not the
    main one, like `scipy.sparse`, list the full module (e.g. `scipy.sparse.coo_matrix`).
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 当与其他库（主要是 `numpy`）相关时，首先使用模块的名称（而不是别名，如 `np`）。如果函数在一个不是主要的模块中，比如 `scipy.sparse`，则列出完整的模块（例如
    `scipy.sparse.coo_matrix`）。
- en: This section has a header, “See Also” (note the capital S and A), followed by
    the line with hyphens and preceded by a blank line.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 本节有一个标题，“参见”（注意大写的 S 和 A），后面跟着带有连字符的行，并且前面有一个空行。
- en: After the header, we will add a line for each related method or function, followed
    by a space, a colon, another space, and a short description that illustrates what
    this method or function does, why is it relevant in this context, and what the
    key differences are between the documented function and the one being referenced.
    The description must also end with a dot.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 在标题之后，我们会为每个相关的方法或函数添加一行，后跟一个空格，一个冒号，另一个空格，以及一个简短的描述，说明此方法或函数在这个上下文中的相关性，以及所记录的函数与被引用的函数之间的关键差异。描述还必须以句点结束。
- en: Note that in “Returns” and “Yields”, the description is located on the line
    after the type. In this section, however, it is located on the same line, with
    a colon in between. If the description does not fit on the same line, it can continue
    onto other lines which must be further indented.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 注意在“返回”和“产出”中，描述位于类型之后的行。然而，在本节中，它位于同一行上，中间有一个冒号。如果描述不适合在同一行上，可以延续到其他行，必须进一步缩进。
- en: 'For example:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE42]  ### Section 6: notes'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE42]  ### 第 6 节：注解'
- en: This is an optional section used for notes about the implementation of the algorithm,
    or to document technical aspects of the function behavior.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个可选的部分，用于记录算法实现的注解，或者记录函数行为的技术方面。
- en: Feel free to skip it, unless you are familiar with the implementation of the
    algorithm, or you discover some counter-intuitive behavior while writing the examples
    for the function.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 请随意跳过，除非您熟悉算法的实现，或者在为函数编写示例时发现一些违反直觉的行为。
- en: 'This section follows the same format as the extended summary section.  ###
    Section 7: examples'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 本节遵循与扩展摘要部分相同的格式。### 第7节：示例
- en: This is one of the most important sections of a docstring, despite being placed
    in the last position, as often people understand concepts better by example than
    through accurate explanations.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 这是文档字符串中最重要的部分之一，尽管通常被放在最后的位置，因为人们更容易通过示例而不是准确的解释来理解概念。
- en: Examples in docstrings, besides illustrating the usage of the function or method,
    must be valid Python code, that returns the given output in a deterministic way,
    and that can be copied and run by users.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 文档字符串中的示例，除了说明函数或方法的用法外，还必须是有效的Python代码，以确定的方式返回给定的输出，并且可以由用户复制并运行。
- en: Examples are presented as a session in the Python terminal. `>>>` is used to
    present code. `...` is used for code continuing from the previous line. Output
    is presented immediately after the last line of code generating the output (no
    blank lines in between). Comments describing the examples can be added with blank
    lines before and after them.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 示例以Python终端中的会话形式呈现。`>>>`用于展示代码。`...`用于继续上一行的代码。输出立即在生成输出的最后一行代码之后呈现（中间没有空行）。在示例之前和之后可以添加描述示例的注释，中间有空行。
- en: 'The way to present examples is as follows:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 呈现示例的方式如下：
- en: Import required libraries (except `numpy` and `pandas`)
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入所需的库（除了`numpy`和`pandas`）
- en: Create the data required for the example
  id: totrans-308
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建示例所需的数据
- en: Show a very basic example that gives an idea of the most common use case
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 展示一个非常基本的示例，以便了解最常见的用例
- en: Add examples with explanations that illustrate how the parameters can be used
    for extended functionality
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加带有说明的示例，说明参数如何用于扩展功能
- en: 'A simple example could be:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的示例可能是：
- en: '[PRE43]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: The examples should be as concise as possible. In cases where the complexity
    of the function requires long examples, is recommended to use blocks with headers
    in bold. Use double star `**` to make a text bold, like in `**this example**`.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 示例应尽可能简洁。在函数复杂性需要长示例的情况下，建议使用粗体标题的块。使用双星`**`使文本加粗，就像`**这个例子**`中一样。
- en: '#### Conventions for the examples'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '#### 示例的约定'
- en: 'Code in examples is assumed to always start with these two lines which are
    not shown:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 示例中的代码始终假定以这两行开头，但没有显示：
- en: '[PRE44]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Any other module used in the examples must be explicitly imported, one per line
    (as recommended in [**PEP 8#imports**](https://peps.python.org/pep-0008/#imports))
    and avoiding aliases. Avoid excessive imports, but if needed, imports from the
    standard library go first, followed by third-party libraries (like matplotlib).
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 示例中使用的任何其他模块必须显式导入，每行一个（如在[**PEP 8#imports**](https://peps.python.org/pep-0008/#imports)中推荐的）并避免使用别名。避免过多的导入，但如果需要，首先是来自标准库的导入，然后是第三方库（如matplotlib）。
- en: When illustrating examples with a single `Series` use the name `ser`, and if
    illustrating with a single `DataFrame` use the name `df`. For indices, `idx` is
    the preferred name. If a set of homogeneous `Series` or `DataFrame` is used, name
    them `ser1`, `ser2`, `ser3`… or `df1`, `df2`, `df3`… If the data is not homogeneous,
    and more than one structure is needed, name them with something meaningful, for
    example `df_main` and `df_to_join`.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 当用单个`Series`说明示例时，请使用名称`ser`，如果用单个`DataFrame`说明，则使用名称`df`。对于索引，`idx`是首选名称。如果使用一组同类的`Series`或`DataFrame`，请将它们命名为`ser1`、`ser2`、`ser3`...或`df1`、`df2`、`df3`...
    如果数据不同类，并且需要多个结构，请用有意义的名称命名它们，例如`df_main`和`df_to_join`。
- en: Data used in the example should be as compact as possible. The number of rows
    is recommended to be around 4, but make it a number that makes sense for the specific
    example. For example in the `head` method, it requires to be higher than 5, to
    show the example with the default values. If doing the `mean`, we could use something
    like `[1, 2, 3]`, so it is easy to see that the value returned is the mean.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 示例中使用的数据应尽可能紧凑。推荐行数约为4，但对于特定示例，使其为合理数字。例如，在`head`方法中，它需要比5更高，以显示具有默认值的示例。如果进行`mean`，我们可以使用类似`[1,
    2, 3]`的东西，这样很容易看到返回的值是均值。
- en: For more complex examples (grouping for example), avoid using data without interpretation,
    like a matrix of random numbers with columns A, B, C, D… And instead use a meaningful
    example, which makes it easier to understand the concept. Unless required by the
    example, use names of animals, to keep examples consistent. And numerical properties
    of them.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 对于更复杂的示例（例如分组），避免使用没有解释的数据，比如由随机数字组成的带有列 A、B、C、D 的矩阵…… 而是使用一个有意义的示例，这样更容易理解概念。除非示例要求，否则使用动物的名称，以保持示例的一致性。以及它们的数值属性。
- en: When calling the method, keywords arguments `head(n=3)` are preferred to positional
    arguments `head(3)`.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 在调用方法时，关键字参数 `head(n=3)` 优先于位置参数 `head(3)`。
- en: '**Good:**'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '**好：**'
- en: '[PRE45]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '**Bad:**'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '**不好：**'
- en: '[PRE46]  #### Tips for getting your examples pass the doctests'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE46]  #### 通过doctest测试的示例的提示'
- en: 'Getting the examples pass the doctests in the validation script can sometimes
    be tricky. Here are some attention points:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 使示例通过验证脚本的 doctest 有时可能会很棘手。以下是一些注意点：
- en: Import all needed libraries (except for pandas and NumPy, those are already
    imported as `import pandas as pd` and `import numpy as np`) and define all variables
    you use in the example.
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入所有所需的库（除了 pandas 和 NumPy，它们已经被导入为 `import pandas as pd` 和 `import numpy as
    np`），并定义您在示例中使用的所有变量。
- en: 'Try to avoid using random data. However random data might be OK in some cases,
    like if the function you are documenting deals with probability distributions,
    or if the amount of data needed to make the function result meaningful is too
    much, such that creating it manually is very cumbersome. In those cases, always
    use a fixed random seed to make the generated examples predictable. Example:'
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽量避免使用随机数据。但在某些情况下，使用随机数据可能是可以的，比如您要记录的函数处理概率分布，或者如果需要创建使函数结果有意义的数据量太大，手动创建它非常麻烦。在这些情况下，始终使用固定的随机种子使生成的示例可预测。例如：
- en: '[PRE47]'
  id: totrans-329
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'If you have a code snippet that wraps multiple lines, you need to use ‘…’ on
    the continued lines:'
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您有一个跨越多行的代码片段，您需要在连续的行上使用 '...'：
- en: '[PRE48]'
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'If you want to show a case where an exception is raised, you can do:'
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要显示引发异常的情况，可以执行：
- en: '[PRE49]'
  id: totrans-333
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: It is essential to include the “Traceback (most recent call last):”, but for
    the actual error only the error name is sufficient.
  id: totrans-334
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 必须包含“Traceback (most recent call last):”，但对于实际错误，只需提供错误名称即可。
- en: If there is a small part of the result that can vary (e.g. a hash in an object
    representation), you can use `...` to represent this part.
  id: totrans-335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果结果中有一个可以变化的小部分（例如对象表示中的哈希），则可以使用 `...` 表示此部分。
- en: If you want to show that `s.plot()` returns a matplotlib AxesSubplot object,
    this will fail the doctest
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果要显示 `s.plot()` 返回一个 matplotlib AxesSubplot 对象，这将导致 doctest 失败。
- en: '[PRE50]'
  id: totrans-337
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: However, you can do (notice the comment that needs to be added)
  id: totrans-338
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然而，您可以执行以下操作（注意需要添加的注释）
- en: '[PRE51]  #### Plots in examples'
  id: totrans-339
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[PRE51]  #### 示例中的绘图'
- en: There are some methods in pandas returning plots. To render the plots generated
    by the examples in the documentation, the `.. plot::` directive exists.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 中有一些返回绘图的方法。为了渲染文档中示例生成的图形，存在 `.. plot::` 指令。
- en: To use it, place the next code after the “Examples” header as shown below. The
    plot will be generated automatically when building the documentation.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用它，请在“示例”标题之后放置下面显示的代码。构建文档时将自动生成图形。
- en: '[PRE52]  ### General rules'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE52]  ### 通用规则'
- en: Docstrings must be defined with three double-quotes. No blank lines should be
    left before or after the docstring. The text starts in the next line after the
    opening quotes. The closing quotes have their own line (meaning that they are
    not at the end of the last sentence).
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 文档字符串必须用三个双引号定义。在文档字符串之前或之后不应该留下空行。文本从开头引号的下一行开始。闭合引号有它们自己的一行（这意味着它们不是在最后一个句子的末尾）。
- en: 'On rare occasions reST styles like bold text or italics will be used in docstrings,
    but is it common to have inline code, which is presented between backticks. The
    following are considered inline code:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 在文档字符串中，偶尔会使用 reST 样式，比如粗体文本或斜体文本，但常见的是使用内联代码，这些代码被放置在反引号之间。以下内容被视为内联代码：
- en: The name of a parameter
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参数的名称
- en: Python code, a module, function, built-in, type, literal… (e.g. `os`, `list`,
    `numpy.abs`, `datetime.date`, `True`)
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 代码、模块、函数、内置函数、类型、字面值……（例如 `os`、`list`、`numpy.abs`、`datetime.date`、`True`）
- en: A pandas class (in the form `:class:`pandas.Series``)
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 pandas 类（以 `:class:`pandas.Series`` 形式）
- en: A pandas method (in the form `:meth:`pandas.Series.sum``)
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 pandas 方法（以 `:meth:`pandas.Series.sum`` 形式）
- en: A pandas function (in the form `:func:`pandas.to_datetime``)
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 pandas 函数（以 `:func:`pandas.to_datetime`` 形式）
- en: Note
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To display only the last component of the linked class, method or function,
    prefix it with `~`. For example, `:class:`~pandas.Series`` will link to `pandas.Series`
    but only display the last part, `Series` as the link text. See [Sphinx cross-referencing
    syntax](https://www.sphinx-doc.org/en/stable/domains.html#cross-referencing-syntax)
    for details.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 要仅显示链接类、方法或函数的最后一个组件，请在其前面加上`~`。例如，`:class:`~pandas.Series``将链接到`pandas.Series`，但只显示最后部分`Series`作为链接文本。有关详细信息，请参阅[Sphinx交叉引用语法](https://www.sphinx-doc.org/en/stable/domains.html#cross-referencing-syntax)。
- en: '**Good:**'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: '**好：**'
- en: '[PRE53]'
  id: totrans-353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '**Bad:**'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: '**不好：**'
- en: '[PRE54]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '### Section 1: short summary'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: '### 第1节：简短摘要'
- en: The short summary is a single sentence that expresses what the function does
    in a concise way.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 简短摘要是一句话，简洁地表达函数的作用。
- en: The short summary must start with a capital letter, end with a dot, and fit
    in a single line. It needs to express what the object does without providing details.
    For functions and methods, the short summary must start with an infinitive verb.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 简短摘要必须以大写字母开头，以句点结束，并适合在一行内。它需要表达对象的作用，而不提供细节。对于函数和方法，简短摘要必须以不定式动词开头。
- en: '**Good:**'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: '**好：**'
- en: '[PRE55]'
  id: totrans-360
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '**Bad:**'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: '**不好：**'
- en: '[PRE56]'
  id: totrans-362
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '[PRE57]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '[PRE58]'
  id: totrans-364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '[PRE59]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '### Section 2: extended summary'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: '### 第2节：扩展摘要'
- en: The extended summary provides details on what the function does. It should not
    go into the details of the parameters, or discuss implementation notes, which
    go in other sections.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展摘要提供了函数的详细信息。不应该深入讨论参数的细节，或者讨论实现注意事项，这些应该放在其他部分。
- en: A blank line is left between the short summary and the extended summary. Every
    paragraph in the extended summary ends with a dot.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 简短摘要和扩展摘要之间留有一个空行。扩展摘要中的每个段落都以句点结束。
- en: The extended summary should provide details on why the function is useful and
    their use cases, if it is not too generic.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展摘要应提供函数的用途及其用例的详细信息，如果不是太通用的话。
- en: '[PRE60]'
  id: totrans-370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: '### Section 3: parameters'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '### 第3节：参数'
- en: The details of the parameters will be added in this section. This section has
    the title “Parameters”, followed by a line with a hyphen under each letter of
    the word “Parameters”. A blank line is left before the section title, but not
    after, and not between the line with the word “Parameters” and the one with the
    hyphens.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 参数的详细信息将在此部分添加。此部分的标题为“参数”，后跟��个下划线线，下划��下面是单词“参数”的每个字母。在部分标题之前留有一个空行，但在之后不留空行，在单词“参数”下划线和下划线之间也不留空行。
- en: After the title, each parameter in the signature must be documented, including
    `*args` and `**kwargs`, but not `self`.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 在标题之后，必须记录签名中的每个参数，包括`*args`和`**kwargs`，但不包括`self`。
- en: The parameters are defined by their name, followed by a space, a colon, another
    space, and the type (or types). Note that the space between the name and the colon
    is important. Types are not defined for `*args` and `**kwargs`, but must be defined
    for all other parameters. After the parameter definition, it is required to have
    a line with the parameter description, which is indented, and can have multiple
    lines. The description must start with a capital letter, and finish with a dot.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 参数由其名称定义，后跟一个空格，一个冒号，另一个空格，以及类型（或类型）。请注意名称和冒号之间的空格很重要。对于`*args`和`**kwargs`不定义类型，但对于所有其他参数必须定义类型。在参数定义之后，需要有一行参数描述，缩进，并且可以有多行。描述必须以大写字母开头，并以句点结束。
- en: For keyword arguments with a default value, the default will be listed after
    a comma at the end of the type. The exact form of the type in this case will be
    “int, default 0”. In some cases it may be useful to explain what the default argument
    means, which can be added after a comma “int, default -1, meaning all cpus”.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 对于具有默认值的关键字参数，将在类型末尾的逗号后列出默认值。在这种情况下，类型的确切形式将是“int，默认值0”。在某些情况下，解释默认参数的含义可能很有用，可以在逗号后添加“int，默认值-1，表示所有cpu”。
- en: In cases where the default value is `None`, meaning that the value will not
    be used. Instead of `"str, default None"`, it is preferred to write `"str, optional"`.
    When `None` is a value being used, we will keep the form “str, default None”.
    For example, in `df.to_csv(compression=None)`, `None` is not a value being used,
    but means that compression is optional, and no compression is being used if not
    provided. In this case we will use `"str, optional"`. Only in cases like `func(value=None)`
    and `None` is being used in the same way as `0` or `foo` would be used, then we
    will specify “str, int or None, default None”.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 在默认值为`None`的情况下，意味着该值将不被使用。与“str，默认为None”相比，更倾向于写“str，可选”。当`None`是一个被使用的值时，我们将保持“str，默认为None”的形式。例如，在`df.to_csv(compression=None)`中，`None`不是一个被使用的值，而是表示压缩是可选的，如果不提供，则不使用压缩。在这种情况下，我们将使用“str，可选”。只有在像`func(value=None)`和`None`被用作`0`或`foo`一样使用时，我们将指定“str，int或None，默认为None”。
- en: '**Good:**'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: '**好：**'
- en: '[PRE61]'
  id: totrans-378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '**Bad:**'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: '**不好：**'
- en: '[PRE62]'
  id: totrans-380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '#### Parameter types'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: '#### 参数类型'
- en: 'When specifying the parameter types, Python built-in data types can be used
    directly (the Python type is preferred to the more verbose string, integer, boolean,
    etc):'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 在指定参数类型时，可以直接使用 Python 内置数据类型（优先使用 Python 类型，而不是更冗长的字符串、整数、布尔值等）：
- en: int
  id: totrans-383
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整数
- en: float
  id: totrans-384
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浮点数
- en: str
  id: totrans-385
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串
- en: bool
  id: totrans-386
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 布尔值
- en: 'For complex types, define the subtypes. For `dict` and `tuple`, as more than
    one type is present, we use the brackets to help read the type (curly brackets
    for `dict` and normal brackets for `tuple`):'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 对于复杂类型，定义子类型。对于`dict`和`tuple`，由于存在多种类型，我们使用括号来帮助阅读类型（大括号用于`dict`，普通括号用于`tuple`）：
- en: list of int
  id: totrans-388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整数列表
- en: 'dict of {str : int}'
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字典{str：int}
- en: tuple of (str, int, int)
  id: totrans-390
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 元组（str，int，int）
- en: tuple of (str,)
  id: totrans-391
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 元组（str，）
- en: set of str
  id: totrans-392
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串集合
- en: 'In case where there are just a set of values allowed, list them in curly brackets
    and separated by commas (followed by a space). If the values are ordinal and they
    have an order, list them in this order. Otherwise, list the default value first,
    if there is one:'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 在只允许一组值的情况下，将它们用大括号分隔并用逗号（后跟一个空格）分隔。如果值是有序的并且有顺序，请按此顺序列出。否则，如果有默认值，请首先列出默认值：
- en: '{0, 10, 25}'
  id: totrans-394
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '{0, 10, 25}'
- en: '{‘simple’, ‘advanced’}'
  id: totrans-395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '{‘简单’，‘高级’}'
- en: '{‘low’, ‘medium’, ‘high’}'
  id: totrans-396
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '{‘低’, ‘中’, ‘高’}'
- en: '{‘cat’, ‘dog’, ‘bird’}'
  id: totrans-397
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '{‘猫’，‘狗’，‘鸟’}'
- en: 'If the type is defined in a Python module, the module must be specified:'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 如果类型在 Python 模块中定义，则必须指定模块：
- en: datetime.date
  id: totrans-399
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: datetime.date
- en: datetime.datetime
  id: totrans-400
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: datetime.datetime
- en: decimal.Decimal
  id: totrans-401
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: decimal.Decimal
- en: 'If the type is in a package, the module must be also specified:'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 如果类型在一个包中，必须同时指定模块：
- en: numpy.ndarray
  id: totrans-403
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: numpy.ndarray
- en: scipy.sparse.coo_matrix
  id: totrans-404
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: scipy.sparse.coo_matrix
- en: 'If the type is a pandas type, also specify pandas except for Series and DataFrame:'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 如果类型是 pandas 类型，则还需指定 pandas，除了 Series 和 DataFrame：
- en: Series
  id: totrans-406
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Series
- en: DataFrame
  id: totrans-407
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据框
- en: pandas.Index
  id: totrans-408
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas.Index
- en: pandas.Categorical
  id: totrans-409
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas.Categorical
- en: pandas.arrays.SparseArray
  id: totrans-410
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas.arrays.SparseArray
- en: 'If the exact type is not relevant, but must be compatible with a NumPy array,
    array-like can be specified. If Any type that can be iterated is accepted, iterable
    can be used:'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 如果确切的类型不重要，但必须与 NumPy 数组兼容，则可以指定类似数组。如果接受任何可迭代的类型，则可以使用可迭代：
- en: array-like
  id: totrans-412
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类似数组
- en: iterable
  id: totrans-413
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可迭代
- en: 'If more than one type is accepted, separate them by commas, except the last
    two types, that need to be separated by the word ‘or’:'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 如果接受多种类型，请用逗号分隔，除了最后两种类型，它们需要用“或”分隔：
- en: int or float
  id: totrans-415
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整数或浮点数
- en: float, decimal.Decimal or None
  id: totrans-416
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浮点数、decimal.Decimal 或 None
- en: str or list of str
  id: totrans-417
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串或字符串列表
- en: If `None` is one of the accepted values, it always needs to be the last in the
    list.
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`None`是被接受的值之一，则它总是需要在列表中的最后。
- en: 'For axis, the convention is to use something like:'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 对于轴，惯例是使用类似于：
- en: 'axis : {0 or ‘index’, 1 or ‘columns’, None}, default None  #### Parameter types'
  id: totrans-420
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '轴：{0或‘索引’，1或‘列’，无}，默认无  #### 参数类型'
- en: 'When specifying the parameter types, Python built-in data types can be used
    directly (the Python type is preferred to the more verbose string, integer, boolean,
    etc):'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 在指定参数类型时，可以直接使用 Python 内置数据类型（优先使用 Python 类型，而不是更冗长的字符串、整数、布尔值等）：
- en: int
  id: totrans-422
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整数
- en: float
  id: totrans-423
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浮点数
- en: str
  id: totrans-424
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串
- en: bool
  id: totrans-425
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 布尔值
- en: 'For complex types, define the subtypes. For `dict` and `tuple`, as more than
    one type is present, we use the brackets to help read the type (curly brackets
    for `dict` and normal brackets for `tuple`):'
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 对于复杂类型，定义子类型。对于`dict`和`tuple`，由于存在多种类型，我们使用括号来帮助阅读类型（大括号用于`dict`，普通括号用于`tuple`）：
- en: list of int
  id: totrans-427
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整数列表
- en: 'dict of {str : int}'
  id: totrans-428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字典{str：int}
- en: tuple of (str, int, int)
  id: totrans-429
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 元组（str，int，int）
- en: tuple of (str,)
  id: totrans-430
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 元组（str，）
- en: set of str
  id: totrans-431
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串集合
- en: 'In case where there are just a set of values allowed, list them in curly brackets
    and separated by commas (followed by a space). If the values are ordinal and they
    have an order, list them in this order. Otherwise, list the default value first,
    if there is one:'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 如果只允许一组值，则用大括号列出它们，并用逗号（后跟一个空格）分隔。如果值是有序的并且有顺序，请按此顺序列出它们。否则，如果有默认值，请首先列出默认值：
- en: '{0, 10, 25}'
  id: totrans-433
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '{0, 10, 25}'
- en: '{‘simple’, ‘advanced’}'
  id: totrans-434
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '{‘simple’、‘advanced’}'
- en: '{‘low’, ‘medium’, ‘high’}'
  id: totrans-435
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '{‘low’, ‘medium’, ‘high’}'
- en: '{‘cat’, ‘dog’, ‘bird’}'
  id: totrans-436
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '{‘cat’、‘dog’、‘bird’}'
- en: 'If the type is defined in a Python module, the module must be specified:'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 如果类型在 Python 模块中定义，则必须指定模块：
- en: datetime.date
  id: totrans-438
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: datetime.date
- en: datetime.datetime
  id: totrans-439
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: datetime.datetime
- en: decimal.Decimal
  id: totrans-440
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: decimal.Decimal
- en: 'If the type is in a package, the module must be also specified:'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 如果类型在一个包中，则必须同时指定模块：
- en: numpy.ndarray
  id: totrans-442
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: numpy.ndarray
- en: scipy.sparse.coo_matrix
  id: totrans-443
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: scipy.sparse.coo_matrix
- en: 'If the type is a pandas type, also specify pandas except for Series and DataFrame:'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 如果类型是 pandas 类型，则除了 Series 和 DataFrame 外，还要指定 pandas：
- en: Series
  id: totrans-445
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Series
- en: DataFrame
  id: totrans-446
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DataFrame
- en: pandas.Index
  id: totrans-447
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas.Index
- en: pandas.Categorical
  id: totrans-448
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas.Categorical
- en: pandas.arrays.SparseArray
  id: totrans-449
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas.arrays.SparseArray
- en: 'If the exact type is not relevant, but must be compatible with a NumPy array,
    array-like can be specified. If Any type that can be iterated is accepted, iterable
    can be used:'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 如果确切类型不相关，但必须与 NumPy 数组兼容，则可以指定类似数组。如果接受可以迭代的任何类型，则可以使用 iterable：
- en: array-like
  id: totrans-451
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类似数组
- en: iterable
  id: totrans-452
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可迭代的
- en: 'If more than one type is accepted, separate them by commas, except the last
    two types, that need to be separated by the word ‘or’:'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 如果接受多种类型，请用逗号分隔它们，除了最后两种类型需要用“or”分隔的单词之外：
- en: int or float
  id: totrans-454
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: int 或 float
- en: float, decimal.Decimal or None
  id: totrans-455
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: float、decimal.Decimal 或 None
- en: str or list of str
  id: totrans-456
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: str 或 str 的列表
- en: If `None` is one of the accepted values, it always needs to be the last in the
    list.
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `None` 是可接受的值之一，则它始终需要在列表中的最后。
- en: 'For axis, the convention is to use something like:'
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 对于轴，惯例是使用类似以下的内容：
- en: 'axis : {0 or ‘index’, 1 or ‘columns’, None}, default None'
  id: totrans-459
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: axis：{0 或 ‘index’，1 或 ‘columns’，None}，默认为 None
- en: '### Section 4: returns or yields'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: '### 第四节：返回或产出'
- en: If the method returns a value, it will be documented in this section. Also if
    the method yields its output.
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 如果方法返回一个值，则将在此部分中记录该值。如果方法也产生其输出。
- en: The title of the section will be defined in the same way as the “Parameters”.
    With the names “Returns” or “Yields” followed by a line with as many hyphens as
    the letters in the preceding word.
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 节的标题将与“Parameters”相同的方式定义。使用名称“Returns”或“Yields”，后跟一行连字符，连字符数与前面单词的字母数相同。
- en: The documentation of the return is also similar to the parameters. But in this
    case, no name will be provided, unless the method returns or yields more than
    one value (a tuple of values).
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的文档也类似于参数。但是在这种情况下，除非方法返回或产出多个值（一组值的元组），否则不会提供名称。
- en: The types for “Returns” and “Yields” are the same as the ones for the “Parameters”.
    Also, the description must finish with a dot.
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: “Returns”和“Yields”的类型与“Parameters”的类型相同。此外，描述必须以句点结束。
- en: 'For example, with a single value:'
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，对于单个值：
- en: '[PRE63]'
  id: totrans-466
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'With more than one value:'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 带有多个值：
- en: '[PRE64]'
  id: totrans-468
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'If the method yields its value:'
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 如果方法产生其值：
- en: '[PRE65]'
  id: totrans-470
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '### Section 5: see also'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: '### 第五节：参见'
- en: This section is used to let users know about pandas functionality related to
    the one being documented. In rare cases, if no related methods or functions can
    be found at all, this section can be skipped.
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 这个部分用于让用户了解与正在文档化的功能相关的 pandas 功能。在极少数情况下，如果根本找不到任何相关的方法或函数，可以跳过此部分。
- en: An obvious example would be the `head()` and `tail()` methods. As `tail()` does
    the equivalent as `head()` but at the end of the `Series` or `DataFrame` instead
    of at the beginning, it is good to let the users know about it.
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 显而易见的例子是 `head()` 和 `tail()` 方法。由于 `tail()` 执行的操作与 `head()` 相当，但是在 `Series`
    或 `DataFrame` 的末尾而不是开头进行，因此让用户知道这一点是很好的。
- en: 'To give an intuition on what can be considered related, here there are some
    examples:'
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 为了对什么可以被认为是相关的有所了解，这里有一些例子：
- en: '`loc` and `iloc`, as they do the same, but in one case providing indices and
    in the other positions'
  id: totrans-475
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`loc` 和 `iloc`，因为它们执行相同的操作，但在一个情况下提供索引，在另一个情况下提供位置'
- en: '`max` and `min`, as they do the opposite'
  id: totrans-476
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max` 和 `min`，因为它们执行相反的操作'
- en: '`iterrows`, `itertuples` and `items`, as it is easy that a user looking for
    the method to iterate over columns ends up in the method to iterate over rows,
    and vice-versa'
  id: totrans-477
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`iterrows`、`itertuples` 和 `items`，因为很容易让寻找用于迭代列的方法的用户最终进入用于迭代行的方法，反之亦然'
- en: '`fillna` and `dropna`, as both methods are used to handle missing values'
  id: totrans-478
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fillna` 和 `dropna`，因为这两种方法都用于处理缺失值'
- en: '`read_csv` and `to_csv`, as they are complementary'
  id: totrans-479
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`read_csv` 和 `to_csv`，因为它们是互补的'
- en: '`merge` and `join`, as one is a generalization of the other'
  id: totrans-480
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`merge` 和 `join`，因为其中一个是另一个的泛化'
- en: '`astype` and `pandas.to_datetime`, as users may be reading the documentation
    of `astype` to know how to cast as a date, and the way to do it is with `pandas.to_datetime`'
  id: totrans-481
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`astype` 和 `pandas.to_datetime`，因为用户可能正在阅读 `astype` 的文档以了解如何转换为日期，而正确的方法是使用
    `pandas.to_datetime`'
- en: '`where` is related to `numpy.where`, as its functionality is based on it'
  id: totrans-482
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`where` 与 `numpy.where` 相关，因为它的功能是基于它的'
- en: When deciding what is related, you should mainly use your common sense and think
    about what can be useful for the users reading the documentation, especially the
    less experienced ones.
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 在决定相关内容时，你应该主要依靠常识，思考对阅读文档的用户有用的内容，特别是对于经验较少的用户。
- en: When relating to other libraries (mainly `numpy`), use the name of the module
    first (not an alias like `np`). If the function is in a module which is not the
    main one, like `scipy.sparse`, list the full module (e.g. `scipy.sparse.coo_matrix`).
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到其他库（主要是 `numpy`）时，首先使用模块的名称（而不是别名像 `np`）。如果函数在不是主要的模块中，比如 `scipy.sparse`，列出完整的模块（例如
    `scipy.sparse.coo_matrix`）。
- en: This section has a header, “See Also” (note the capital S and A), followed by
    the line with hyphens and preceded by a blank line.
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 这一部分有一个标题，“参见”（注意大写的 S 和 A），后面跟着由破折号组成的行，并在前面有一个空行。
- en: After the header, we will add a line for each related method or function, followed
    by a space, a colon, another space, and a short description that illustrates what
    this method or function does, why is it relevant in this context, and what the
    key differences are between the documented function and the one being referenced.
    The description must also end with a dot.
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 在标题之后，我们将为每个相关的方法或函数添加一行，后面跟着一个空格，一个冒号，另一个空格，以及一个简短的描述，说明这个方法或函数在这个上下文中的相关性，以及文档化函数和被引用函数之间的主要区别是什么。描述还必须以句点结束。
- en: Note that in “Returns” and “Yields”, the description is located on the line
    after the type. In this section, however, it is located on the same line, with
    a colon in between. If the description does not fit on the same line, it can continue
    onto other lines which must be further indented.
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在“Returns”和“Yields”中，描述位于类型的下一行上。然而，在这一部分中，它位于同一行上，中间有一个冒号。如果描述不适合在同一行上，则可以继续到其他行，这些行必须进一步缩进。
- en: 'For example:'
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE66]'
  id: totrans-489
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: '### Section 6: notes'
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: '### 第 6 部分：注意事项'
- en: This is an optional section used for notes about the implementation of the algorithm,
    or to document technical aspects of the function behavior.
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个可选部分，用于关于算法实现的笔记，或者记录函数行为的技术细节。
- en: Feel free to skip it, unless you are familiar with the implementation of the
    algorithm, or you discover some counter-intuitive behavior while writing the examples
    for the function.
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 可以跳过这部分，除非你熟悉算法的实现，或者在编写函数示例时发现了一些反直觉的行为。
- en: This section follows the same format as the extended summary section.
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 这一部分的格式与扩展摘要部分相同。
- en: '### Section 7: examples'
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: '### 第 7 部分：示例'
- en: This is one of the most important sections of a docstring, despite being placed
    in the last position, as often people understand concepts better by example than
    through accurate explanations.
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管放在最后位置，但这是 docstring 中最重要的部分之一，因为人们通常通过示例而不是准确的解释更好地理解概念。
- en: Examples in docstrings, besides illustrating the usage of the function or method,
    must be valid Python code, that returns the given output in a deterministic way,
    and that can be copied and run by users.
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: 文档字符串中的示例除了说明函数或方法的使用方法外，还必须是有效的 Python 代码，以确定的方式返回给定的输出，并且可以被用户复制并运行。
- en: Examples are presented as a session in the Python terminal. `>>>` is used to
    present code. `...` is used for code continuing from the previous line. Output
    is presented immediately after the last line of code generating the output (no
    blank lines in between). Comments describing the examples can be added with blank
    lines before and after them.
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 示例被呈现为 Python 终端中的会话。 `>>>` 用于呈现代码。 `...` 用于从上一行继续的代码。输出立即在生成输出的最后一行代码之后呈现（中间没有空行）。在示例之前和之后可以添加描述示例的注释，这些注释用空行分隔。
- en: 'The way to present examples is as follows:'
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 示例的呈现方式如下：
- en: Import required libraries (except `numpy` and `pandas`)
  id: totrans-499
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入所需的库（除了 `numpy` 和 `pandas`）
- en: Create the data required for the example
  id: totrans-500
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建示例所需的数据
- en: Show a very basic example that gives an idea of the most common use case
  id: totrans-501
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显示一个非常基本的示例，给出最常见用例的概念
- en: Add examples with explanations that illustrate how the parameters can be used
    for extended functionality
  id: totrans-502
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加带有解释的示例，说明参数如何用于扩展功能
- en: 'A simple example could be:'
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的示例可能是：
- en: '[PRE67]'
  id: totrans-504
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: The examples should be as concise as possible. In cases where the complexity
    of the function requires long examples, is recommended to use blocks with headers
    in bold. Use double star `**` to make a text bold, like in `**this example**`.
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 示例应尽可能简洁。在函数复杂性要求较长示例的情况下，建议使用加粗标题的块。使用双星号`**`使文本加粗，如`**这个示例**`。
- en: '#### Conventions for the examples'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: '#### 示例的约定'
- en: 'Code in examples is assumed to always start with these two lines which are
    not shown:'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 示例中的代码始终假定以未显示的这两行开头：
- en: '[PRE68]'
  id: totrans-508
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Any other module used in the examples must be explicitly imported, one per line
    (as recommended in [**PEP 8#imports**](https://peps.python.org/pep-0008/#imports))
    and avoiding aliases. Avoid excessive imports, but if needed, imports from the
    standard library go first, followed by third-party libraries (like matplotlib).
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 示例中使用的任何其他模块都必须显式导入，每行一个（如[**PEP 8#imports**](https://peps.python.org/pep-0008/#imports)中推荐的），避免使用别名。避免过多的导入，但如果需要，标准库的导入优先，然后是第三方库（如matplotlib）。
- en: When illustrating examples with a single `Series` use the name `ser`, and if
    illustrating with a single `DataFrame` use the name `df`. For indices, `idx` is
    the preferred name. If a set of homogeneous `Series` or `DataFrame` is used, name
    them `ser1`, `ser2`, `ser3`… or `df1`, `df2`, `df3`… If the data is not homogeneous,
    and more than one structure is needed, name them with something meaningful, for
    example `df_main` and `df_to_join`.
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 当用单个`Series`说明示例时，请使用名称`ser`，如果用单个`DataFrame`说明，请使用名称`df`。对于索引，首选名称为`idx`。如果使用一组同质的`Series`或`DataFrame`，请将它们命名为`ser1`、`ser2`、`ser3`…或`df1`、`df2`、`df3`…如果数据不是同质的，并且需要多个结构，则使用有意义的名称，例如`df_main`和`df_to_join`。
- en: Data used in the example should be as compact as possible. The number of rows
    is recommended to be around 4, but make it a number that makes sense for the specific
    example. For example in the `head` method, it requires to be higher than 5, to
    show the example with the default values. If doing the `mean`, we could use something
    like `[1, 2, 3]`, so it is easy to see that the value returned is the mean.
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 示例中使用的数据应尽可能紧凑。建议行数约为4行，但应根据具体示例的情况确定。例如，在`head`方法中，建议行数大于5，以显示具有默认值的示例。如果进行`mean`操作，我们可以使用类似`[1,
    2, 3]`的数据，这样很容易看出返回的值是平均值。
- en: For more complex examples (grouping for example), avoid using data without interpretation,
    like a matrix of random numbers with columns A, B, C, D… And instead use a meaningful
    example, which makes it easier to understand the concept. Unless required by the
    example, use names of animals, to keep examples consistent. And numerical properties
    of them.
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 对于更复杂的示例（例如分组），避免使用没有解释的数据，比如具有A、B、C、D列的随机数矩阵…而是使用一个有意义的示例，这样更容易理解概念。除非示例需要，否则使用动物的名称，以保持示例的一致性。以及它们的数值属性。
- en: When calling the method, keywords arguments `head(n=3)` are preferred to positional
    arguments `head(3)`.
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 在调用该方法时，优先使用关键字参数`head(n=3)`而不是位置参数`head(3)`。
- en: '**Good:**'
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: '**好的做法：**'
- en: '[PRE69]'
  id: totrans-515
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '**Bad:**'
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: '**不好的做法：**'
- en: '[PRE70]  #### Tips for getting your examples pass the doctests'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE70]  #### 通过doctests的提示'
- en: 'Getting the examples pass the doctests in the validation script can sometimes
    be tricky. Here are some attention points:'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: 通过doctests的验证脚本使示例通过有时可能会有些棘手。以下是一些注意事项：
- en: Import all needed libraries (except for pandas and NumPy, those are already
    imported as `import pandas as pd` and `import numpy as np`) and define all variables
    you use in the example.
  id: totrans-519
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入所有需要的库（除了pandas和NumPy，它们已经作为`import pandas as pd`和`import numpy as np`导入）并定义您在示例中使用的所有变量。
- en: 'Try to avoid using random data. However random data might be OK in some cases,
    like if the function you are documenting deals with probability distributions,
    or if the amount of data needed to make the function result meaningful is too
    much, such that creating it manually is very cumbersome. In those cases, always
    use a fixed random seed to make the generated examples predictable. Example:'
  id: totrans-520
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽量避免使用随机数据。但在某些情况下，随机数据可能是可以接受的，比如您正在记录处理概率分布的函数，或者如果需要大量数据才能使函数结果有意义，手动创建数据非常繁琐。在这些情况下，始终使用固定的随机种子使生成的示例可预测。例如：
- en: '[PRE71]'
  id: totrans-521
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'If you have a code snippet that wraps multiple lines, you need to use ‘…’ on
    the continued lines:'
  id: totrans-522
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您有一个跨越多行的代码片段，需要在续行上使用‘…’：
- en: '[PRE72]'
  id: totrans-523
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'If you want to show a case where an exception is raised, you can do:'
  id: totrans-524
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您想展示引发异常的情况，可以执行以下操作：
- en: '[PRE73]'
  id: totrans-525
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: It is essential to include the “Traceback (most recent call last):”, but for
    the actual error only the error name is sufficient.
  id: totrans-526
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 包含 “Traceback (most recent call last):” 是必不可少的，但实际错误只需提供错误名称即可。
- en: If there is a small part of the result that can vary (e.g. a hash in an object
    representation), you can use `...` to represent this part.
  id: totrans-527
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果结果中有一小部分可能会变化（例如，对象表示中的哈希值），您可以使用 `...` 来表示这部分。
- en: If you want to show that `s.plot()` returns a matplotlib AxesSubplot object,
    this will fail the doctest
  id: totrans-528
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果要显示 `s.plot()` 返回 matplotlib AxesSubplot 对象，这将导致文档测试失败。
- en: '[PRE74]'
  id: totrans-529
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE74]'
- en: However, you can do (notice the comment that needs to be added)
  id: totrans-530
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 但是，您可以执行以下操作（注意需要添加的注释）
- en: '[PRE75]  #### Plots in examples'
  id: totrans-531
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[PRE75]  #### 示例中的绘图'
- en: There are some methods in pandas returning plots. To render the plots generated
    by the examples in the documentation, the `.. plot::` directive exists.
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 中有一些返回图形的方法。为了渲染文档中示例生成的图形，存在 `.. plot::` 指令。
- en: To use it, place the next code after the “Examples” header as shown below. The
    plot will be generated automatically when building the documentation.
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用它，请将下一行代码放在“示例”标题后，如下所示。当构建文档时，图形将自动生成。
- en: '[PRE76]  #### Conventions for the examples'
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE76]  #### 示例的约定'
- en: 'Code in examples is assumed to always start with these two lines which are
    not shown:'
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: 示例中的代码始终假定以未显示的这两行开头：
- en: '[PRE77]'
  id: totrans-536
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: Any other module used in the examples must be explicitly imported, one per line
    (as recommended in [**PEP 8#imports**](https://peps.python.org/pep-0008/#imports))
    and avoiding aliases. Avoid excessive imports, but if needed, imports from the
    standard library go first, followed by third-party libraries (like matplotlib).
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: 示例中使用的任何其他模块都必须明确导入，每行一个（如[**PEP 8#imports**](https://peps.python.org/pep-0008/#imports)中建议的），避免使用别名。避免过多的导入，但如果需要，标准库的导入首先进行，然后是第三方库（例如
    matplotlib）。
- en: When illustrating examples with a single `Series` use the name `ser`, and if
    illustrating with a single `DataFrame` use the name `df`. For indices, `idx` is
    the preferred name. If a set of homogeneous `Series` or `DataFrame` is used, name
    them `ser1`, `ser2`, `ser3`… or `df1`, `df2`, `df3`… If the data is not homogeneous,
    and more than one structure is needed, name them with something meaningful, for
    example `df_main` and `df_to_join`.
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: 在用单个 `Series` 说明示例时，使用名称 `ser`，如果用单个 `DataFrame` 说明，使用名称 `df`。对于索引，首选名称是 `idx`。如果使用一组同质的
    `Series` 或 `DataFrame`，请将它们命名为 `ser1`、`ser2`、`ser3`… 或 `df1`、`df2`、`df3`… 如果数据不同质，并且需要多个结构，则使用有意义的名称，例如
    `df_main` 和 `df_to_join`。
- en: Data used in the example should be as compact as possible. The number of rows
    is recommended to be around 4, but make it a number that makes sense for the specific
    example. For example in the `head` method, it requires to be higher than 5, to
    show the example with the default values. If doing the `mean`, we could use something
    like `[1, 2, 3]`, so it is easy to see that the value returned is the mean.
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: 示例中使用的数据应尽可能紧凑。建议行数约为 4，但根据具体示例选择一个合理的数字。例如，在 `head` 方法中，需要高于 5，以显示默认值的示例。如果执行
    `mean`，我们可以使用类似 `[1, 2, 3]` 的内容，这样很容易看到返回的值是平均值。
- en: For more complex examples (grouping for example), avoid using data without interpretation,
    like a matrix of random numbers with columns A, B, C, D… And instead use a meaningful
    example, which makes it easier to understand the concept. Unless required by the
    example, use names of animals, to keep examples consistent. And numerical properties
    of them.
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: 对于更复杂的示例（例如分组），避免使用没有解释的数据，比如随机数矩阵，列为 A、B、C、D… 而是使用有意义的示例，这样更容易理解概念。除非示例需要，否则使用动物的名称，以保持示例的一致性。以及它们的数值属性。
- en: When calling the method, keywords arguments `head(n=3)` are preferred to positional
    arguments `head(3)`.
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: 在调用方法时，关键字参数 `head(n=3)` 优先于位置参数 `head(3)`。
- en: '**Good:**'
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: '**好的：**'
- en: '[PRE78]'
  id: totrans-543
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '**Bad:**'
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: '**不好的：**'
- en: '[PRE79]'
  id: totrans-545
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '#### Tips for getting your examples pass the doctests'
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: '#### 通过文档测试使示例通过的提示'
- en: 'Getting the examples pass the doctests in the validation script can sometimes
    be tricky. Here are some attention points:'
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: 使示例在验证脚本中通过文档测试有时可能会很棘手。以下是一些注意事项：
- en: Import all needed libraries (except for pandas and NumPy, those are already
    imported as `import pandas as pd` and `import numpy as np`) and define all variables
    you use in the example.
  id: totrans-548
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入所有需要的库（除了 pandas 和 NumPy，它们已经被导入为 `import pandas as pd` 和 `import numpy as
    np`），并定义您在示例中使用的所有变量。
- en: 'Try to avoid using random data. However random data might be OK in some cases,
    like if the function you are documenting deals with probability distributions,
    or if the amount of data needed to make the function result meaningful is too
    much, such that creating it manually is very cumbersome. In those cases, always
    use a fixed random seed to make the generated examples predictable. Example:'
  id: totrans-549
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽量避免使用随机数据。但是在某些情况下，使用随机数据可能是可以的，比如您要记录的函数处理概率分布，或者使函数结果有意义所需的数据量太大，手动创建这些数据非常麻烦。在这些情况下，始终使用固定的随机种子使生成的示例可预测。例如：
- en: '[PRE80]'
  id: totrans-550
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'If you have a code snippet that wraps multiple lines, you need to use ‘…’ on
    the continued lines:'
  id: totrans-551
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您有一个跨越多行的代码片段，您需要在连续的行上使用`…`：
- en: '[PRE81]'
  id: totrans-552
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'If you want to show a case where an exception is raised, you can do:'
  id: totrans-553
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您想展示引发异常的情况，可以这样做：
- en: '[PRE82]'
  id: totrans-554
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE82]'
- en: It is essential to include the “Traceback (most recent call last):”, but for
    the actual error only the error name is sufficient.
  id: totrans-555
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于实际错误，包含“Traceback（最近的调用最后）”是至关重要的，但实际错误只需要错误名称即可。
- en: If there is a small part of the result that can vary (e.g. a hash in an object
    representation), you can use `...` to represent this part.
  id: totrans-556
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果结果中有一小部分可能会变化（例如对象表示中的哈希），您可以使用`...`表示此部分。
- en: If you want to show that `s.plot()` returns a matplotlib AxesSubplot object,
    this will fail the doctest
  id: totrans-557
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您想展示 `s.plot()` 返回 matplotlib AxesSubplot 对象，这将导致 doctest 失败
- en: '[PRE83]'
  id: totrans-558
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE83]'
- en: However, you can do (notice the comment that needs to be added)
  id: totrans-559
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然而，您可以这样做（注意需要添加的注释）
- en: '[PRE84]'
  id: totrans-560
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE84]'
- en: '#### Plots in examples'
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: '#### 示例中的图表'
- en: There are some methods in pandas returning plots. To render the plots generated
    by the examples in the documentation, the `.. plot::` directive exists.
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: pandas中有一些返回图表的方法。为了渲染文档中示例生成的图表，存在`.. plot::`指令。
- en: To use it, place the next code after the “Examples” header as shown below. The
    plot will be generated automatically when building the documentation.
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用它，请按照下面所示的“示例”标题后面放置下一个代码。生成文档时，图将自动生成。
- en: '[PRE85]'
  id: totrans-564
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: '## Sharing docstrings'
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: '## 共享文档字符串'
- en: pandas has a system for sharing docstrings, with slight variations, between
    classes. This helps us keep docstrings consistent, while keeping things clear
    for the user reading. It comes at the cost of some complexity when writing.
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: pandas有一个用于在类之间共享文档字符串的系统，其中略有不同。这帮助我们保持文档字符串的一致性，同时保持用户阅读时的清晰度。在编写时会带来一些复杂性的代价。
- en: Each shared docstring will have a base template with variables, like `{klass}`.
    The variables filled in later on using the `doc` decorator. Finally, docstrings
    can also be appended to with the `doc` decorator.
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: 每个共享文档字符串都将具有基本模板和变量，如`{klass}`。稍后使用`doc`装饰器填充变量。最后，文档字符串也可以使用`doc`装饰器附加。
- en: In this example, we’ll create a parent docstring normally (this is like `pandas.core.generic.NDFrame`.
    Then we’ll have two children (like `pandas.core.series.Series` and `pandas.core.frame.DataFrame`).
    We’ll substitute the class names in this docstring.
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将以正常方式创建一个父文档字符串（这类似于 `pandas.core.generic.NDFrame`）。然后我们会有两个子文档字符串（像
    `pandas.core.series.Series` 和 `pandas.core.frame.DataFrame`）。我们将在这个文档字符串中替换类名。
- en: '[PRE86]'
  id: totrans-569
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: The resulting docstrings are
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: 结果文档字符串是
- en: '[PRE87]'
  id: totrans-571
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: 'Notice:'
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：
- en: We “append” the parent docstring to the children docstrings, which are initially
    empty.
  id: totrans-573
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将父文档字符串“附加”到最初为空的子文档字符串上。
- en: Our files will often contain a module-level `_shared_doc_kwargs` with some common
    substitution values (things like `klass`, `axes`, etc).
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的文件通常包含一个模块级别的`_shared_doc_kwargs`，其中包含一些常见的替换值（如`klass`、`axes`等）。
- en: You can substitute and append in one shot with something like
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用类似于以下内容的一次性替换和附加：
- en: '[PRE88]'
  id: totrans-576
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: where `template` may come from a module-level `_shared_docs` dictionary mapping
    function names to docstrings. Wherever possible, we prefer using `doc`, since
    the docstring-writing processes is slightly closer to normal.
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: 其中`template`可能来自一个模块级别的`_shared_docs`字典，将函数名映射到文档字符串。在可能的情况下，我们更喜欢使用`doc`，因为文档字符串编写过程稍微接近于正常。
- en: See `pandas.core.generic.NDFrame.fillna` for an example template, and `pandas.core.series.Series.fillna`
    and `pandas.core.generic.frame.fillna` for the filled versions.
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: 参见 `pandas.core.generic.NDFrame.fillna` 以获取示例模板，以及填充版本的 `pandas.core.series.Series.fillna`
    和 `pandas.core.generic.frame.fillna`。
