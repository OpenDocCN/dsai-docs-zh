- en: numpy.isinf
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.isinf.html](https://numpy.org/doc/1.26/reference/generated/numpy.isinf.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Test element-wise for positive or negative infinity.
  prefs: []
  type: TYPE_NORMAL
- en: Returns a boolean array of the same shape as *x*, True where `x == +/-inf`,
    otherwise False.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input values
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, None, or tuple of ndarray and None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A location into which the result is stored. If provided, it must have a shape
    that the inputs broadcast to. If not provided or None, a freshly-allocated array
    is returned. A tuple (possible only as a keyword argument) must have length equal
    to the number of outputs.
  prefs: []
  type: TYPE_NORMAL
- en: '**where**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: This condition is broadcast over the input. At locations where the condition
    is True, the *out* array will be set to the ufunc result. Elsewhere, the *out*
    array will retain its original value. Note that if an uninitialized *out* array
    is created via the default `out=None`, locations within it where the condition
    is False will remain uninitialized.
  prefs: []
  type: TYPE_NORMAL
- en: '****kwargs**'
  prefs: []
  type: TYPE_NORMAL
- en: For other keyword-only arguments, see the [ufunc docs](../ufuncs.html#ufuncs-kwargs).
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**y**bool (scalar) or boolean ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: True where `x` is positive or negative infinity, false otherwise. This is a
    scalar if *x* is a scalar.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`isneginf`](numpy.isneginf.html#numpy.isneginf "numpy.isneginf"), [`isposinf`](numpy.isposinf.html#numpy.isposinf
    "numpy.isposinf"), [`isnan`](numpy.isnan.html#numpy.isnan "numpy.isnan"), [`isfinite`](numpy.isfinite.html#numpy.isfinite
    "numpy.isfinite")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: NumPy uses the IEEE Standard for Binary Floating-Point for Arithmetic (IEEE
    754).
  prefs: []
  type: TYPE_NORMAL
- en: Errors result if the second argument is supplied when the first argument is
    a scalar, or if the first and second arguments have different shapes.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
