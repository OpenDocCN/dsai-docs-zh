- en: numpy.tensordot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.tensordot.html](https://numpy.org/doc/1.26/reference/generated/numpy.tensordot.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute tensor dot product along specified axes.
  prefs: []
  type: TYPE_NORMAL
- en: Given two tensors, *a* and *b*, and an array_like object containing two array_like
    objects, `(a_axes, b_axes)`, sum the products of *a*’s and *b*’s elements (components)
    over the axes specified by `a_axes` and `b_axes`. The third argument can be a
    single non-negative integer_like scalar, `N`; if it is such, then the last `N`
    dimensions of *a* and the first `N` dimensions of *b* are summed over.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a, b**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Tensors to “dot”.
  prefs: []
  type: TYPE_NORMAL
- en: '**axes**int or (2,) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: integer_like If an int N, sum over the last N axes of *a* and the first N axes
    of *b* in order. The sizes of the corresponding axes must match.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: (2,) array_like Or, a list of axes to be summed over, first sequence applying
    to *a*, second to *b*. Both elements array_like must be of the same length.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**output**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The tensor dot product of the input.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`dot`](numpy.dot.html#numpy.dot "numpy.dot"), [`einsum`](numpy.einsum.html#numpy.einsum
    "numpy.einsum")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'Three common use cases are:'
  prefs: []
  type: TYPE_NORMAL
- en: '`axes = 0` : tensor product \(a\otimes b\)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`axes = 1` : tensor dot product \(a\cdot b\)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`axes = 2` : (default) tensor double contraction \(a:b\)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'When *axes* is integer_like, the sequence for evaluation will be: first the
    -Nth axis in *a* and 0th axis in *b*, and the -1th axis in *a* and Nth axis in
    *b* last.'
  prefs: []
  type: TYPE_NORMAL
- en: When there is more than one axis to sum over - and they are not the last (first)
    axes of *a* (*b*) - the argument *axes* should consist of two sequences of the
    same length, with the first axis to sum over given first in both sequences, the
    second axis second, and so forth.
  prefs: []
  type: TYPE_NORMAL
- en: The shape of the result consists of the non-contracted axes of the first tensor,
    followed by the non-contracted axes of the second.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'A “traditional” example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'An extended example taking advantage of the overloading of + and *:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
