- en: pandas.json_normalize
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas.json_normalize
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.json_normalize.html](https://pandas.pydata.org/docs/reference/api/pandas.json_normalize.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.json_normalize.html](https://pandas.pydata.org/docs/reference/api/pandas.json_normalize.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Normalize semi-structured JSON data into a flat table.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 将半结构化的JSON数据规范化为平面表。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**data**dict or list of dicts'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**data**字典或字典列表'
- en: Unserialized JSON objects.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 未序列化的JSON对象。
- en: '**record_path**str or list of str, default None'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**record_path**str或str列表，默认为None'
- en: Path in each object to list of records. If not passed, data will be assumed
    to be an array of records.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 每个对象中到记录列表的路径。如果未传递，则假定数据为记录数组。
- en: '**meta**list of paths (str or list of str), default None'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**meta**路径列表（str或str列表），默认为None'
- en: Fields to use as metadata for each record in resulting table.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 用作结果表中每个记录的元数据字段。
- en: '**meta_prefix**str, default None'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**meta_prefix**str，默认为None'
- en: If True, prefix records with dotted (?) path, e.g. foo.bar.field if meta is
    [‘foo’, ‘bar’].
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为True，则以点（?）路径为记录添加前缀，例如如果元数据为['foo'，'bar']，则为foo.bar.field。
- en: '**record_prefix**str, default None'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**record_prefix**str，默认为None'
- en: If True, prefix records with dotted (?) path, e.g. foo.bar.field if path to
    records is [‘foo’, ‘bar’].
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为True，则以点（?）路径为记录添加前缀，例如如果记录路径为['foo'，'bar']，则为foo.bar.field。
- en: '**errors**{‘raise’, ‘ignore’}, default ‘raise’'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**errors**{‘raise’，‘ignore’}，默认为‘raise’'
- en: Configures error handling.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 配置错误处理。
- en: '‘ignore’ : will ignore KeyError if keys listed in meta are not always present.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘ignore’：如果元数据中列出的键不一定总是存在，则将忽略KeyError。
- en: '‘raise’ : will raise KeyError if keys listed in meta are not always present.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘raise’：如果元数据中列出的键不一定总是存在，则将引发KeyError。
- en: '**sep**str, default ‘.’'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**sep**str，默认为‘.’'
- en: 'Nested records will generate names separated by sep. e.g., for sep=’.’, {‘foo’:
    {‘bar’: 0}} -> foo.bar.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌套记录将生成以sep分隔的名称。例如，对于sep=‘.’，{‘foo’：{‘bar’：0}} -> foo.bar。
- en: '**max_level**int, default None'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**max_level**int，默认为None'
- en: Max number of levels(depth of dict) to normalize. if None, normalizes all levels.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 规范化的最大级别（字典深度）。如果为None，则规范化所有级别。
- en: 'Returns:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**frame**DataFrame'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**frame**DataFrame'
- en: Normalize semi-structured JSON data into a flat table.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 将半结构化的JSON数据规范化为平面表。
- en: Examples
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Normalizes nested data up to level 1.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 将嵌套数据规范化至1级。
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Returns normalized data with columns prefixed with the given string.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 返回带有给定字符串前缀的规范化数据列。
