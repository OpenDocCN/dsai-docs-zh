- en: scipy.ndimage.binary_fill_holes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.binary_fill_holes.html#scipy.ndimage.binary_fill_holes](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.binary_fill_holes.html#scipy.ndimage.binary_fill_holes)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Fill the holes in binary objects.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**input**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: N-D binary array with holes to be filled
  prefs: []
  type: TYPE_NORMAL
- en: '**structure**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Structuring element used in the computation; large-size elements make computations
    faster but may miss holes separated from the background by thin regions. The default
    element (with a square connectivity equal to one) yields the intuitive result
    where all holes in the input have been filled.
  prefs: []
  type: TYPE_NORMAL
- en: '**output**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Array of the same shape as input, into which the output is placed. By default,
    a new array is created.
  prefs: []
  type: TYPE_NORMAL
- en: '**origin**int, tuple of ints, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Position of the structuring element.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Transformation of the initial image *input* where holes have been filled.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`binary_dilation`](scipy.ndimage.binary_dilation.html#scipy.ndimage.binary_dilation
    "scipy.ndimage.binary_dilation"), [`binary_propagation`](scipy.ndimage.binary_propagation.html#scipy.ndimage.binary_propagation
    "scipy.ndimage.binary_propagation"), [`label`](scipy.ndimage.label.html#scipy.ndimage.label
    "scipy.ndimage.label")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The algorithm used in this function consists in invading the complementary of
    the shapes in *input* from the outer boundary of the image, using binary dilations.
    Holes are not connected to the boundary and are therefore not invaded. The result
    is the complementary subset of the invaded region.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Mathematical_morphology](https://en.wikipedia.org/wiki/Mathematical_morphology)'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
