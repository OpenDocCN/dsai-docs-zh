- en: scipy.stats.vonmises_fisher
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.vonmises_fisher.html#scipy.stats.vonmises_fisher](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.vonmises_fisher.html#scipy.stats.vonmises_fisher)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: A von Mises-Fisher variable.
  prefs: []
  type: TYPE_NORMAL
- en: The *mu* keyword specifies the mean direction vector. The *kappa* keyword specifies
    the concentration parameter.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**mu**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Mean direction of the distribution. Must be a one-dimensional unit vector of
    norm 1.
  prefs: []
  type: TYPE_NORMAL
- en: '**kappa**float'
  prefs: []
  type: TYPE_NORMAL
- en: Concentration parameter. Must be positive.
  prefs: []
  type: TYPE_NORMAL
- en: '**seed**{None, int, np.random.RandomState, np.random.Generator}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Used for drawing random variates. If *seed* is *None*, the *RandomState* singleton
    is used. If *seed* is an int, a new `RandomState` instance is used, seeded with
    seed. If *seed* is already a `RandomState` or `Generator` instance, then that
    object is used. Default is *None*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`scipy.stats.vonmises`](scipy.stats.vonmises.html#scipy.stats.vonmises "scipy.stats.vonmises")'
  prefs: []
  type: TYPE_NORMAL
- en: Von-Mises Fisher distribution in 2D on a circle
  prefs: []
  type: TYPE_NORMAL
- en: '[`uniform_direction`](scipy.stats.uniform_direction.html#scipy.stats.uniform_direction
    "scipy.stats.uniform_direction")'
  prefs: []
  type: TYPE_NORMAL
- en: uniform distribution on the surface of a hypersphere
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The von Mises-Fisher distribution is a directional distribution on the surface
    of the unit hypersphere. The probability density function of a unit vector \(\mathbf{x}\)
    is
  prefs: []
  type: TYPE_NORMAL
- en: \[f(\mathbf{x}) = \frac{\kappa^{d/2-1}}{(2\pi)^{d/2}I_{d/2-1}(\kappa)} \exp\left(\kappa
    \mathbf{\mu}^T\mathbf{x}\right),\]
  prefs: []
  type: TYPE_NORMAL
- en: 'where \(\mathbf{\mu}\) is the mean direction, \(\kappa\) the concentration
    parameter, \(d\) the dimension and \(I\) the modified Bessel function of the first
    kind. As \(\mu\) represents a direction, it must be a unit vector or in other
    words, a point on the hypersphere: \(\mathbf{\mu}\in S^{d-1}\). \(\kappa\) is
    a concentration parameter, which means that it must be positive (\(\kappa>0\))
    and that the distribution becomes more narrow with increasing \(\kappa\). In that
    sense, the reciprocal value \(1/\kappa\) resembles the variance parameter of the
    normal distribution.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The von Mises-Fisher distribution often serves as an analogue of the normal
    distribution on the sphere. Intuitively, for unit vectors, a useful distance measure
    is given by the angle \(\alpha\) between them. This is exactly what the scalar
    product \(\mathbf{\mu}^T\mathbf{x}=\cos(\alpha)\) in the von Mises-Fisher probability
    density function describes: the angle between the mean direction \(\mathbf{\mu}\)
    and the vector \(\mathbf{x}\). The larger the angle between them, the smaller
    the probability to observe \(\mathbf{x}\) for this particular mean direction \(\mathbf{\mu}\).'
  prefs: []
  type: TYPE_NORMAL
- en: In dimensions 2 and 3, specialized algorithms are used for fast sampling [[2]](#r62578a40ba6e-2),
    [[3]](#r62578a40ba6e-3). For dimensions of 4 or higher the rejection sampling
    algorithm described in [[4]](#r62578a40ba6e-4) is utilized. This implementation
    is partially based on the geomstats package [[5]](#r62578a40ba6e-5), [[6]](#r62578a40ba6e-6).
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.11.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1]'
  prefs: []
  type: TYPE_NORMAL
- en: Von Mises-Fisher distribution, Wikipedia, [https://en.wikipedia.org/wiki/Von_Mises%E2%80%93Fisher_distribution](https://en.wikipedia.org/wiki/Von_Mises%E2%80%93Fisher_distribution)
  prefs: []
  type: TYPE_NORMAL
- en: '[[2](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: Mardia, K., and Jupp, P. Directional statistics. Wiley, 2000.
  prefs: []
  type: TYPE_NORMAL
- en: '[[3](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: J. Wenzel. Numerically stable sampling of the von Mises Fisher distribution
    on S2. [https://www.mitsuba-renderer.org/~wenzel/files/vmf.pdf](https://www.mitsuba-renderer.org/~wenzel/files/vmf.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: '[[4](#id3)]'
  prefs: []
  type: TYPE_NORMAL
- en: Wood, A. Simulation of the von mises fisher distribution. Communications in
    statistics-simulation and computation 23, 1 (1994), 157-164\. [https://doi.org/10.1080/03610919408813161](https://doi.org/10.1080/03610919408813161)
  prefs: []
  type: TYPE_NORMAL
- en: '[[5](#id4)]'
  prefs: []
  type: TYPE_NORMAL
- en: 'geomstats, Github. MIT License. Accessed: 06.01.2023. [https://github.com/geomstats/geomstats](https://github.com/geomstats/geomstats)'
  prefs: []
  type: TYPE_NORMAL
- en: '[[6](#id5)]'
  prefs: []
  type: TYPE_NORMAL
- en: 'Miolane, N. et al. Geomstats: A Python Package for Riemannian Geometry in Machine
    Learning. Journal of Machine Learning Research 21 (2020). [http://jmlr.org/papers/v21/19-027.html](http://jmlr.org/papers/v21/19-027.html)'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '**Visualization of the probability density**'
  prefs: []
  type: TYPE_NORMAL
- en: Plot the probability density in three dimensions for increasing concentration
    parameter. The density is calculated by the `pdf` method.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-stats-vonmises_fisher-1_00_00.png](../Images/c7a1922ade9346d5043f6fc3da5d6f4f.png)'
  prefs: []
  type: TYPE_IMG
- en: As we increase the concentration parameter, the points are getting more clustered
    together around the mean direction.
  prefs: []
  type: TYPE_NORMAL
- en: '**Sampling**'
  prefs: []
  type: TYPE_NORMAL
- en: Draw 5 samples from the distribution using the `rvs` method resulting in a 5x3
    array.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'These samples are unit vectors on the sphere \(S^2\). To verify, let us calculate
    their euclidean norms:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Plot 20 observations drawn from the von Mises-Fisher distribution for increasing
    concentration parameter \(\kappa\). The red dot highlights the mean direction
    \(\mu\).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-stats-vonmises_fisher-1_01_00.png](../Images/4d01b78376554a1b78e2d6b629b47b21.png)'
  prefs: []
  type: TYPE_IMG
- en: The plots show that with increasing concentration \(\kappa\) the resulting samples
    are centered more closely around the mean direction.
  prefs: []
  type: TYPE_NORMAL
- en: '**Fitting the distribution parameters**'
  prefs: []
  type: TYPE_NORMAL
- en: The distribution can be fitted to data using the `fit` method returning the
    estimated parameters. As a toy example let’s fit the distribution to samples drawn
    from a known von Mises-Fisher distribution.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: We see that the estimated parameters *mu_fit* and *kappa_fit* are very close
    to the ground truth parameters.
  prefs: []
  type: TYPE_NORMAL
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| **pdf(x, mu=None, kappa=1)** | Probability density function. |'
  prefs: []
  type: TYPE_TB
- en: '| **logpdf(x, mu=None, kappa=1)** | Log of the probability density function.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **rvs(mu=None, kappa=1, size=1, random_state=None)** | Draw random samples
    from a von Mises-Fisher distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **entropy(mu=None, kappa=1)** | Compute the differential entropy of the von
    Mises-Fisher distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **fit(data)** | Fit a von Mises-Fisher distribution to data. |'
  prefs: []
  type: TYPE_TB
