["```py\n>>> from sympy.physics.hep.gamma_matrices import GammaMatrix as G, LorentzIndex\n>>> from sympy.tensor.tensor import tensor_indices\n>>> i = tensor_indices('i', LorentzIndex)\n>>> G(i)\nGammaMatrix(i) \n```", "```py\n>>> from sympy.physics.hep.gamma_matrices import GammaMatrix\n>>> from sympy.tensor.tensor import tensor_indices\n>>> i = tensor_indices('i', LorentzIndex)\n>>> GammaMatrix(i)\nGammaMatrix(i) \n```", "```py\n>>> LorentzIndex.metric\nmetric(LorentzIndex,LorentzIndex) \n```", "```py\nsympy.physics.hep.gamma_matrices.extract_type_tens(expression, component)\n```", "```py\nsympy.physics.hep.gamma_matrices.gamma_trace(t)\n```", "```py\n>>> from sympy.physics.hep.gamma_matrices import GammaMatrix as G,         gamma_trace, LorentzIndex\n>>> from sympy.tensor.tensor import tensor_indices, tensor_heads\n>>> p, q = tensor_heads('p, q', [LorentzIndex])\n>>> i0,i1,i2,i3,i4,i5 = tensor_indices('i0:6', LorentzIndex)\n>>> ps = p(i0)*G(-i0)\n>>> qs = q(i0)*G(-i0)\n>>> gamma_trace(G(i0)*G(i1))\n4*metric(i0, i1)\n>>> gamma_trace(ps*ps) - 4*p(i0)*p(-i0)\n0\n>>> gamma_trace(ps*qs + ps*ps) - 4*p(i0)*p(-i0) - 4*p(i0)*q(-i0)\n0 \n```", "```py\nsympy.physics.hep.gamma_matrices.kahane_simplify(expression)\n```", "```py\n>>> from sympy.physics.hep.gamma_matrices import GammaMatrix as G, LorentzIndex\n>>> from sympy.physics.hep.gamma_matrices import kahane_simplify\n>>> from sympy.tensor.tensor import tensor_indices\n>>> i0, i1, i2 = tensor_indices('i0:3', LorentzIndex)\n>>> ta = G(i0)*G(-i0)\n>>> kahane_simplify(ta)\nMatrix([\n[4, 0, 0, 0],\n[0, 4, 0, 0],\n[0, 0, 4, 0],\n[0, 0, 0, 4]])\n>>> tb = G(i0)*G(i1)*G(-i0)\n>>> kahane_simplify(tb)\n-2*GammaMatrix(i1)\n>>> t = G(i0)*G(-i0)\n>>> kahane_simplify(t)\nMatrix([\n[4, 0, 0, 0],\n[0, 4, 0, 0],\n[0, 0, 4, 0],\n[0, 0, 0, 4]])\n>>> t = G(i0)*G(-i0)\n>>> kahane_simplify(t)\nMatrix([\n[4, 0, 0, 0],\n[0, 4, 0, 0],\n[0, 0, 4, 0],\n[0, 0, 0, 4]]) \n```", "```py\n>>> tc = G(i0)*G(i1)\n>>> kahane_simplify(tc)\nGammaMatrix(i0)*GammaMatrix(i1) \n```", "```py\nsympy.physics.hep.gamma_matrices.simplify_gpgp(ex, sort=True)\n```", "```py\n>>> from sympy.physics.hep.gamma_matrices import GammaMatrix as G,         LorentzIndex, simplify_gpgp\n>>> from sympy.tensor.tensor import tensor_indices, tensor_heads\n>>> p, q = tensor_heads('p, q', [LorentzIndex])\n>>> i0,i1,i2,i3,i4,i5 = tensor_indices('i0:6', LorentzIndex)\n>>> ps = p(i0)*G(-i0)\n>>> qs = q(i0)*G(-i0)\n>>> simplify_gpgp(ps*qs*qs)\nGammaMatrix(-L_0)*p(L_0)*q(L_1)*q(-L_1) \n```"]