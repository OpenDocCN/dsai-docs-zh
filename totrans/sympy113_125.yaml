- en: Tensor Operators
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 张量运算符
- en: Original text：[https://docs.sympy.org/latest/modules/tensor/toperators.html](https://docs.sympy.org/latest/modules/tensor/toperators.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.sympy.org/latest/modules/tensor/toperators.html](https://docs.sympy.org/latest/modules/tensor/toperators.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Partial derivative for tensor expressions.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 张量表达式的偏导数。
- en: Examples
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The `PartialDerivative` object behaves like a tensorial expression:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`PartialDerivative` 对象的行为类似张量表达式：'
- en: '[PRE3]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Notice that the deriving variables have opposite valence than the printed one:
    `A(j)` is printed as covariant, but the index of the derivative is actually contravariant,
    i.e. `-j`.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 注意求导变量的价度与打印的相反：`A(j)` 打印为协变，但导数的指标实际上是逆变的，即 `-j`。
- en: 'Indices can be contracted:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 指标可以被缩并：
- en: '[PRE4]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The method `.get_indices()` always returns all indices (even the contracted
    ones). If only uncontracted indices are needed, call `.get_free_indices()`:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 方法 `.get_indices()` 总是返回所有指标（即使是缩并的）。如果只需要未缩并的指标，请调用 `.get_free_indices()`：
- en: '[PRE5]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Nested partial derivatives are flattened:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌套偏导数被展开：
- en: '[PRE6]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Replace a derivative with array values:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 用数组值替换导数：
- en: '[PRE7]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The returned array is indexed by \((i, -j)\).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的数组由 \((i, -j)\) 索引。
- en: 'Be careful that other SymPy modules put the indices of the deriving variables
    before the indices of the derivand in the derivative result. For example:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 注意其他 SymPy 模块在导数结果中将求导变量的指标放在被导变量的指标之前。例如：
- en: '[PRE8]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'These are the transpose of the result of `PartialDerivative`, as the matrix
    and the array modules put the index \(-j\) before \(i\) in the derivative result.
    An array read with index order \((-j, i)\) is indeed the transpose of the same
    array read with index order \((i, -j)\). By specifying the index order to `.replace_with_arrays`
    one can get a compatible expression:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是 `PartialDerivative` 的转置，因为矩阵和数组模块在导数结果中将指标 \(-j\) 放在 \(i\) 前面。用指标顺序 `(-j,
    i)` 读取的数组确实是用指标顺序 `(i, -j)` 读取的同一数组的转置。通过指定 `.replace_with_arrays` 的指标顺序，可以得到兼容的表达式：
- en: '[PRE10]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
