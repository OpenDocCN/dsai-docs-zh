- en: numpy.can_cast
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.can_cast.html](https://numpy.org/doc/1.26/reference/generated/numpy.can_cast.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Returns True if cast between data types can occur according to the casting rule.
    If from is a scalar or array scalar, also returns True if the scalar value can
    be cast without overflow or truncation to an integer.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**from_**dtype, dtype specifier, scalar, or array'
  prefs: []
  type: TYPE_NORMAL
- en: Data type, scalar, or array to cast from.
  prefs: []
  type: TYPE_NORMAL
- en: '**to**dtype or dtype specifier'
  prefs: []
  type: TYPE_NORMAL
- en: Data type to cast to.
  prefs: []
  type: TYPE_NORMAL
- en: '**casting**{‘no’, ‘equiv’, ‘safe’, ‘same_kind’, ‘unsafe’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Controls what kind of data casting may occur.
  prefs: []
  type: TYPE_NORMAL
- en: ‘no’ means the data types should not be cast at all.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ‘equiv’ means only byte-order changes are allowed.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ‘safe’ means only casts which can preserve values are allowed.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ‘same_kind’ means only safe casts or casts within a kind, like float64 to float32,
    are allowed.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ‘unsafe’ means any data conversions may be done.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**bool'
  prefs: []
  type: TYPE_NORMAL
- en: True if cast can occur according to the casting rule.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`dtype`](numpy.dtype.html#numpy.dtype "numpy.dtype"), [`result_type`](numpy.result_type.html#numpy.result_type
    "numpy.result_type")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 1.17.0: Casting between a simple data type and a structured
    one is possible only for “unsafe” casting. Casting to multiple fields is allowed,
    but casting from multiple fields is not.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 1.9.0: Casting from numeric to string types in ‘safe’ casting
    mode requires that the string dtype length is long enough to store the maximum
    integer/float value converted.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Basic examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Casting scalars
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Array scalar checks the value, array does not
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Using the casting rules
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
