["```py\nscipy.fft.hfft(x, n=None, axis=-1, norm=None, overwrite_x=False, workers=None, *, plan=None)\n```", "```py\n>>> from scipy.fft import fft, hfft\n>>> import numpy as np\n>>> a = 2 * np.pi * np.arange(10) / 10\n>>> signal = np.cos(a) + 3j * np.sin(3 * a)\n>>> fft(signal).round(10)\narray([ -0.+0.j,   5.+0.j,  -0.+0.j,  15.-0.j,   0.+0.j,   0.+0.j,\n -0.+0.j, -15.-0.j,   0.+0.j,   5.+0.j])\n>>> hfft(signal[:6]).round(10) # Input first half of signal\narray([  0.,   5.,   0.,  15.,  -0.,   0.,   0., -15.,  -0.,   5.])\n>>> hfft(signal, 10)  # Input entire signal and truncate\narray([  0.,   5.,   0.,  15.,  -0.,   0.,   0., -15.,  -0.,   5.]) \n```"]