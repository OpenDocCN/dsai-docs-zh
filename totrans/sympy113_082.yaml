- en: Fourier Series
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/series/fourier.html](https://docs.sympy.org/latest/modules/series/fourier.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Provides methods to compute Fourier series.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Represents Fourier sine/cosine series.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: This class only represents a fourier series. No computation is performed.
  prefs: []
  type: TYPE_NORMAL
- en: For how to compute Fourier series, see the [`fourier_series()`](#sympy.series.fourier.fourier_series
    "sympy.series.fourier.fourier_series") docstring.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.series.fourier.fourier_series`](#sympy.series.fourier.fourier_series
    "sympy.series.fourier.fourier_series")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Scale the function by a term independent of x.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: f(x) -> s * f(x)
  prefs: []
  type: TYPE_NORMAL
- en: This is fast, if Fourier series of f(x) is already computed.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Scale x by a term independent of x.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: f(x) -> f(s*x)
  prefs: []
  type: TYPE_NORMAL
- en: This is fast, if Fourier series of f(x) is already computed.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Shift the function by a term independent of x.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: f(x) -> f(x) + s
  prefs: []
  type: TYPE_NORMAL
- en: This is fast, if Fourier series of f(x) is already computed.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Shift x by a term independent of x.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: f(x) -> f(x + s)
  prefs: []
  type: TYPE_NORMAL
- en: This is fast, if Fourier series of f(x) is already computed.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Return \(\sigma\)-approximation of Fourier series with respect to order n.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**n** : int'
  prefs: []
  type: TYPE_NORMAL
- en: Highest order of the terms taken into account in approximation.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Expr :'
  prefs: []
  type: TYPE_NORMAL
- en: Sigma approximation of function expanded into Fourier series.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: Sigma approximation adjusts a Fourier summation to eliminate the Gibbs phenomenon
    which would otherwise occur at discontinuities. A sigma-approximated summation
    for a Fourier series of a T-periodical function can be written as
  prefs: []
  type: TYPE_NORMAL
- en: \[s(\theta) = \frac{1}{2} a_0 + \sum _{k=1}^{m-1} \operatorname{sinc} \Bigl(
    \frac{k}{m} \Bigr) \cdot \left[ a_k \cos \Bigl( \frac{2\pi k}{T} \theta \Bigr)
    + b_k \sin \Bigl( \frac{2\pi k}{T} \theta \Bigr) \right],\]
  prefs: []
  type: TYPE_NORMAL
- en: where \(a_0, a_k, b_k, k=1,\ldots,{m-1}\) are standard Fourier series coefficients
    and \(\operatorname{sinc} \Bigl( \frac{k}{m} \Bigr)\) is a Lanczos \(\sigma\)
    factor (expressed in terms of normalized \(\operatorname{sinc}\) function).
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The behaviour of [`sigma_approximation()`](#sympy.series.fourier.FourierSeries.sigma_approximation
    "sympy.series.fourier.FourierSeries.sigma_approximation") is different from [`truncate()`](#sympy.series.fourier.FourierSeries.truncate
    "sympy.series.fourier.FourierSeries.truncate") - it takes all nonzero terms of
    degree smaller than n, rather than first n nonzero ones.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.series.fourier.FourierSeries.truncate`](#sympy.series.fourier.FourierSeries.truncate
    "sympy.series.fourier.FourierSeries.truncate")'
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[R830](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Gibbs_phenomenon](https://en.wikipedia.org/wiki/Gibbs_phenomenon)'
  prefs: []
  type: TYPE_NORMAL
- en: '[[R831](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Sigma_approximation](https://en.wikipedia.org/wiki/Sigma_approximation)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Return the first n nonzero terms of the series.
  prefs: []
  type: TYPE_NORMAL
- en: If `n` is None return an iterator.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**n** : int or None'
  prefs: []
  type: TYPE_NORMAL
- en: Amount of non-zero terms in approximation or None.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Expr or iterator :'
  prefs: []
  type: TYPE_NORMAL
- en: Approximation of function expanded into Fourier series.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.series.fourier.FourierSeries.sigma_approximation`](#sympy.series.fourier.FourierSeries.sigma_approximation
    "sympy.series.fourier.FourierSeries.sigma_approximation")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Computes the Fourier trigonometric series expansion.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**limits** : (sym, start, end), optional'
  prefs: []
  type: TYPE_NORMAL
- en: '*sym* denotes the symbol the series is computed with respect to.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*start* and *end* denotes the start and the end of the interval where the fourier
    series converges to the given function.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Default range is specified as \(-\pi\) and \(\pi\).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: FourierSeries
  prefs: []
  type: TYPE_NORMAL
- en: A symbolic object representing the Fourier trigonometric series.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: 'Fourier trigonometric series of \(f(x)\) over the interval \((a, b)\) is defined
    as:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\frac{a_0}{2} + \sum_{n=1}^{\infty} (a_n \cos(\frac{2n \pi x}{L}) + b_n \sin(\frac{2n
    \pi x}{L}))\]
  prefs: []
  type: TYPE_NORMAL
- en: 'where the coefficients are:'
  prefs: []
  type: TYPE_NORMAL
- en: \[L = b - a\]\[a_0 = \frac{2}{L} \int_{a}^{b}{f(x) dx}\]\[a_n = \frac{2}{L}
    \int_{a}^{b}{f(x) \cos(\frac{2n \pi x}{L}) dx}\]\[b_n = \frac{2}{L} \int_{a}^{b}{f(x)
    \sin(\frac{2n \pi x}{L}) dx}\]
  prefs: []
  type: TYPE_NORMAL
- en: The condition whether the function \(f(x)\) given should be periodic or not
    is more than necessary, because it is sufficient to consider the series to be
    converging to \(f(x)\) only in the given interval, not throughout the whole real
    line.
  prefs: []
  type: TYPE_NORMAL
- en: This also brings a lot of ease for the computation because you do not have to
    make \(f(x)\) artificially periodic by wrapping it with piecewise, modulo operations,
    but you can shape the function to look like the desired periodic function only
    in the interval \((a, b)\), and the computed series will automatically become
    the series of the periodic version of \(f(x)\).
  prefs: []
  type: TYPE_NORMAL
- en: This property is illustrated in the examples section below.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Computing the Fourier series of \(f(x) = x^2\):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Shifting of the Fourier series:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Scaling of the Fourier series:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Computing the Fourier series of \(f(x) = x\):'
  prefs: []
  type: TYPE_NORMAL
- en: This illustrates how truncating to the higher order gives better convergence.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: ([`png`](../../_downloads/76df571e9817d9bbaf023fa2a75c529e/fourier-1.png), [`hires.png`](../../_downloads/9c4ec69e5dc6c9d79548acdff5c978fa/fourier-1.hires.png),
    [`pdf`](../../_downloads/ebf272f79479d63cc5b71ad0f0e41f7d/fourier-1.pdf))
  prefs: []
  type: TYPE_NORMAL
- en: '![../../_images/fourier-1.png](../Images/8afb07fed19cc6c7ad4d475d4fb91a11.png)'
  prefs: []
  type: TYPE_IMG
- en: This illustrates how the series converges to different sawtooth waves if the
    different ranges are specified.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: ([`png`](../../_downloads/ee567ad991450c909244479668e91f3e/fourier-2.png), [`hires.png`](../../_downloads/4748caff5a1a15170028c1a6884b6745/fourier-2.hires.png),
    [`pdf`](../../_downloads/ee22a6375b132bbe50ac86a0282c8f8f/fourier-2.pdf))
  prefs: []
  type: TYPE_NORMAL
- en: '![../../_images/fourier-2.png](../Images/a8b96a38a7c40ccdfb84c1c5da16bb4e.png)'
  prefs: []
  type: TYPE_IMG
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Computing Fourier series can be slow due to the integration required in computing
    an, bn.
  prefs: []
  type: TYPE_NORMAL
- en: It is faster to compute Fourier series of a function by using shifting and scaling
    on an already computed Fourier series rather than computing again.
  prefs: []
  type: TYPE_NORMAL
- en: e.g. If the Fourier series of `x**2` is known the Fourier series of `x**2 -
    1` can be found by shifting by `-1`.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.series.fourier.FourierSeries`](#sympy.series.fourier.FourierSeries
    "sympy.series.fourier.FourierSeries")'
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[R832](#id3)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://mathworld.wolfram.com/FourierSeries.html](https://mathworld.wolfram.com/FourierSeries.html)'
  prefs: []
  type: TYPE_NORMAL
