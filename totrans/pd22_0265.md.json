["```py\nDataFrame.combine(other, func, fill_value=None, overwrite=True)\n```", "```py\n>>> df1 = pd.DataFrame({'A': [0, 0], 'B': [4, 4]})\n>>> df2 = pd.DataFrame({'A': [1, 1], 'B': [3, 3]})\n>>> take_smaller = lambda s1, s2: s1 if s1.sum() < s2.sum() else s2\n>>> df1.combine(df2, take_smaller)\n A  B\n0  0  3\n1  0  3 \n```", "```py\n>>> df1 = pd.DataFrame({'A': [5, 0], 'B': [2, 4]})\n>>> df2 = pd.DataFrame({'A': [1, 1], 'B': [3, 3]})\n>>> df1.combine(df2, np.minimum)\n A  B\n0  1  2\n1  0  3 \n```", "```py\n>>> df1 = pd.DataFrame({'A': [0, 0], 'B': [None, 4]})\n>>> df2 = pd.DataFrame({'A': [1, 1], 'B': [3, 3]})\n>>> df1.combine(df2, take_smaller, fill_value=-5)\n A    B\n0  0 -5.0\n1  0  4.0 \n```", "```py\n>>> df1 = pd.DataFrame({'A': [0, 0], 'B': [None, 4]})\n>>> df2 = pd.DataFrame({'A': [1, 1], 'B': [None, 3]})\n>>> df1.combine(df2, take_smaller, fill_value=-5)\n A    B\n0  0 -5.0\n1  0  3.0 \n```", "```py\n>>> df1 = pd.DataFrame({'A': [0, 0], 'B': [4, 4]})\n>>> df2 = pd.DataFrame({'B': [3, 3], 'C': [-10, 1], }, index=[1, 2])\n>>> df1.combine(df2, take_smaller)\n A    B     C\n0  NaN  NaN   NaN\n1  NaN  3.0 -10.0\n2  NaN  3.0   1.0 \n```", "```py\n>>> df1.combine(df2, take_smaller, overwrite=False)\n A    B     C\n0  0.0  NaN   NaN\n1  0.0  3.0 -10.0\n2  NaN  3.0   1.0 \n```", "```py\n>>> df2 = pd.DataFrame({'B': [3, 3], 'C': [1, 1], }, index=[1, 2])\n>>> df2.combine(df1, take_smaller)\n A    B   C\n0  0.0  NaN NaN\n1  0.0  3.0 NaN\n2  NaN  3.0 NaN \n```", "```py\n>>> df2.combine(df1, take_smaller, overwrite=False)\n A    B   C\n0  0.0  NaN NaN\n1  0.0  3.0 1.0\n2  NaN  3.0 1.0 \n```"]