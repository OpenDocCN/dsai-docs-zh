["```py\n    In [7]: air_quality[\"datetime\"] = pd.to_datetime(air_quality[\"datetime\"])\n\n    In [8]: air_quality[\"datetime\"]\n    Out[8]: \n    0      2019-06-21 00:00:00+00:00\n    1      2019-06-20 23:00:00+00:00\n    2      2019-06-20 22:00:00+00:00\n    3      2019-06-20 21:00:00+00:00\n    4      2019-06-20 20:00:00+00:00\n     ... \n    2063   2019-05-07 06:00:00+00:00\n    2064   2019-05-07 04:00:00+00:00\n    2065   2019-05-07 03:00:00+00:00\n    2066   2019-05-07 02:00:00+00:00\n    2067   2019-05-07 01:00:00+00:00\n    Name: datetime, Length: 2068, dtype: datetime64[ns, UTC] \n    ```", "```py\npd.read_csv(\"../data/air_quality_no2_long.csv\", parse_dates=[\"datetime\"]) \n```", "```py\nIn [9]: air_quality[\"datetime\"].min(), air_quality[\"datetime\"].max()\nOut[9]: \n(Timestamp('2019-05-07 01:00:00+0000', tz='UTC'),\n Timestamp('2019-06-21 00:00:00+0000', tz='UTC')) \n```", "```py\nIn [10]: air_quality[\"datetime\"].max() - air_quality[\"datetime\"].min()\nOut[10]: Timedelta('44 days 23:00:00') \n```", "```py\n    In [11]: air_quality[\"month\"] = air_quality[\"datetime\"].dt.month\n\n    In [12]: air_quality.head()\n    Out[12]: \n     city country                  datetime  ... value   unit  month\n    0  Paris      FR 2019-06-21 00:00:00+00:00  ...  20.0  \u00b5g/m\u00b3      6\n    1  Paris      FR 2019-06-20 23:00:00+00:00  ...  21.8  \u00b5g/m\u00b3      6\n    2  Paris      FR 2019-06-20 22:00:00+00:00  ...  26.5  \u00b5g/m\u00b3      6\n    3  Paris      FR 2019-06-20 21:00:00+00:00  ...  24.9  \u00b5g/m\u00b3      6\n    4  Paris      FR 2019-06-20 20:00:00+00:00  ...  21.4  \u00b5g/m\u00b3      6\n\n    [5 rows x 8 columns] \n    ```", "```py\n    In [13]: air_quality.groupby(\n     ....:    [air_quality[\"datetime\"].dt.weekday, \"location\"])[\"value\"].mean()\n     ....: \n    Out[13]: \n    datetime  location \n    0         BETR801               27.875000\n     FR04014               24.856250\n     London Westminster    23.969697\n    1         BETR801               22.214286\n     FR04014               30.999359\n     ... \n    5         FR04014               25.266154\n     London Westminster    24.977612\n    6         BETR801               21.896552\n     FR04014               23.274306\n     London Westminster    24.859155\n    Name: value, Length: 21, dtype: float64 \n    ```", "```py\n    In [14]: fig, axs = plt.subplots(figsize=(12, 4))\n\n    In [15]: air_quality.groupby(air_quality[\"datetime\"].dt.hour)[\"value\"].mean().plot(\n     ....:    kind='bar', rot=0, ax=axs\n     ....: )\n     ....: \n    Out[15]: <Axes: xlabel='datetime'>\n\n    In [16]: plt.xlabel(\"Hour of the day\");  # custom x label using Matplotlib\n\n    In [17]: plt.ylabel(\"$NO_2 (\u00b5g/m^3)$\"); \n    ```", "```py\nIn [18]: no_2 = air_quality.pivot(index=\"datetime\", columns=\"location\", values=\"value\")\n\nIn [19]: no_2.head()\nOut[19]: \nlocation                   BETR801  FR04014  London Westminster\ndatetime \n2019-05-07 01:00:00+00:00     50.5     25.0                23.0\n2019-05-07 02:00:00+00:00     45.0     27.7                19.0\n2019-05-07 03:00:00+00:00      NaN     50.4                19.0\n2019-05-07 04:00:00+00:00      NaN     61.9                16.0\n2019-05-07 05:00:00+00:00      NaN     72.4                 NaN \n```", "```py\nIn [20]: no_2.index.year, no_2.index.weekday\nOut[20]: \n(Index([2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,\n ...\n 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019],\n dtype='int32', name='datetime', length=1033),\n Index([1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n ...\n 3, 3, 3, 3, 3, 3, 3, 3, 3, 4],\n dtype='int32', name='datetime', length=1033)) \n```", "```py\n    In [21]: no_2[\"2019-05-20\":\"2019-05-21\"].plot(); \n    ```", "```py\n    In [22]: monthly_max = no_2.resample(\"ME\").max()\n\n    In [23]: monthly_max\n    Out[23]: \n    location                   BETR801  FR04014  London Westminster\n    datetime \n    2019-05-31 00:00:00+00:00     74.5     97.0                97.0\n    2019-06-30 00:00:00+00:00     52.5     84.7                52.0 \n    ```", "```py\nIn [24]: monthly_max.index.freq\nOut[24]: <MonthEnd> \n```", "```py\n    In [25]: no_2.resample(\"D\").mean().plot(style=\"-o\", figsize=(10, 5)); \n    ```", "```py\n    In [7]: air_quality[\"datetime\"] = pd.to_datetime(air_quality[\"datetime\"])\n\n    In [8]: air_quality[\"datetime\"]\n    Out[8]: \n    0      2019-06-21 00:00:00+00:00\n    1      2019-06-20 23:00:00+00:00\n    2      2019-06-20 22:00:00+00:00\n    3      2019-06-20 21:00:00+00:00\n    4      2019-06-20 20:00:00+00:00\n     ... \n    2063   2019-05-07 06:00:00+00:00\n    2064   2019-05-07 04:00:00+00:00\n    2065   2019-05-07 03:00:00+00:00\n    2066   2019-05-07 02:00:00+00:00\n    2067   2019-05-07 01:00:00+00:00\n    Name: datetime, Length: 2068, dtype: datetime64[ns, UTC] \n    ```", "```py\npd.read_csv(\"../data/air_quality_no2_long.csv\", parse_dates=[\"datetime\"]) \n```", "```py\nIn [9]: air_quality[\"datetime\"].min(), air_quality[\"datetime\"].max()\nOut[9]: \n(Timestamp('2019-05-07 01:00:00+0000', tz='UTC'),\n Timestamp('2019-06-21 00:00:00+0000', tz='UTC')) \n```", "```py\nIn [10]: air_quality[\"datetime\"].max() - air_quality[\"datetime\"].min()\nOut[10]: Timedelta('44 days 23:00:00') \n```", "```py\n    In [11]: air_quality[\"month\"] = air_quality[\"datetime\"].dt.month\n\n    In [12]: air_quality.head()\n    Out[12]: \n     city country                  datetime  ... value   unit  month\n    0  Paris      FR 2019-06-21 00:00:00+00:00  ...  20.0  \u00b5g/m\u00b3      6\n    1  Paris      FR 2019-06-20 23:00:00+00:00  ...  21.8  \u00b5g/m\u00b3      6\n    2  Paris      FR 2019-06-20 22:00:00+00:00  ...  26.5  \u00b5g/m\u00b3      6\n    3  Paris      FR 2019-06-20 21:00:00+00:00  ...  24.9  \u00b5g/m\u00b3      6\n    4  Paris      FR 2019-06-20 20:00:00+00:00  ...  21.4  \u00b5g/m\u00b3      6\n\n    [5 rows x 8 columns] \n    ```", "```py\n    In [13]: air_quality.groupby(\n     ....:    [air_quality[\"datetime\"].dt.weekday, \"location\"])[\"value\"].mean()\n     ....: \n    Out[13]: \n    datetime  location \n    0         BETR801               27.875000\n     FR04014               24.856250\n     London Westminster    23.969697\n    1         BETR801               22.214286\n     FR04014               30.999359\n     ... \n    5         FR04014               25.266154\n     London Westminster    24.977612\n    6         BETR801               21.896552\n     FR04014               23.274306\n     London Westminster    24.859155\n    Name: value, Length: 21, dtype: float64 \n    ```", "```py\n    In [14]: fig, axs = plt.subplots(figsize=(12, 4))\n\n    In [15]: air_quality.groupby(air_quality[\"datetime\"].dt.hour)[\"value\"].mean().plot(\n     ....:    kind='bar', rot=0, ax=axs\n     ....: )\n     ....: \n    Out[15]: <Axes: xlabel='datetime'>\n\n    In [16]: plt.xlabel(\"Hour of the day\");  # custom x label using Matplotlib\n\n    In [17]: plt.ylabel(\"$NO_2 (\u00b5g/m^3)$\"); \n    ```", "```py\nIn [18]: no_2 = air_quality.pivot(index=\"datetime\", columns=\"location\", values=\"value\")\n\nIn [19]: no_2.head()\nOut[19]: \nlocation                   BETR801  FR04014  London Westminster\ndatetime \n2019-05-07 01:00:00+00:00     50.5     25.0                23.0\n2019-05-07 02:00:00+00:00     45.0     27.7                19.0\n2019-05-07 03:00:00+00:00      NaN     50.4                19.0\n2019-05-07 04:00:00+00:00      NaN     61.9                16.0\n2019-05-07 05:00:00+00:00      NaN     72.4                 NaN \n```", "```py\nIn [20]: no_2.index.year, no_2.index.weekday\nOut[20]: \n(Index([2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,\n ...\n 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019],\n dtype='int32', name='datetime', length=1033),\n Index([1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n ...\n 3, 3, 3, 3, 3, 3, 3, 3, 3, 4],\n dtype='int32', name='datetime', length=1033)) \n```", "```py\n    In [21]: no_2[\"2019-05-20\":\"2019-05-21\"].plot(); \n    ```", "```py\n    In [22]: monthly_max = no_2.resample(\"ME\").max()\n\n    In [23]: monthly_max\n    Out[23]: \n    location                   BETR801  FR04014  London Westminster\n    datetime \n    2019-05-31 00:00:00+00:00     74.5     97.0                97.0\n    2019-06-30 00:00:00+00:00     52.5     84.7                52.0 \n    ```", "```py\nIn [24]: monthly_max.index.freq\nOut[24]: <MonthEnd> \n```", "```py\n    In [25]: no_2.resample(\"D\").mean().plot(style=\"-o\", figsize=(10, 5)); \n    ```"]