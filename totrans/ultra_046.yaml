- en: VOC Dataset
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[`docs.ultralytics.com/datasets/detect/voc/`](https://docs.ultralytics.com/datasets/detect/voc/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The [PASCAL VOC](http://host.robots.ox.ac.uk/pascal/VOC/) (Visual Object Classes)
    dataset is a well-known object detection, segmentation, and classification dataset.
    It is designed to encourage research on a wide variety of object categories and
    is commonly used for benchmarking computer vision models. It is an essential dataset
    for researchers and developers working on object detection, segmentation, and
    classification tasks.
  prefs: []
  type: TYPE_NORMAL
- en: Key Features
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'VOC dataset includes two main challenges: VOC2007 and VOC2012.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The dataset comprises 20 object categories, including common objects like cars,
    bicycles, and animals, as well as more specific categories such as boats, sofas,
    and dining tables.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Annotations include object bounding boxes and class labels for object detection
    and classification tasks, and segmentation masks for the segmentation tasks.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VOC provides standardized evaluation metrics like mean Average Precision (mAP)
    for object detection and classification, making it suitable for comparing model
    performance.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dataset Structure
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The VOC dataset is split into three subsets:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Train**: This subset contains images for training object detection, segmentation,
    and classification models.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Validation**: This subset has images used for validation purposes during
    model training.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Test**: This subset consists of images used for testing and benchmarking
    the trained models. Ground truth annotations for this subset are not publicly
    available, and the results are submitted to the [PASCAL VOC evaluation server](http://host.robots.ox.ac.uk:8080/leaderboard/displaylb.php)
    for performance evaluation.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Applications
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The VOC dataset is widely used for training and evaluating deep learning models
    in object detection (such as YOLO, Faster R-CNN, and SSD), instance segmentation
    (such as Mask R-CNN), and image classification. The dataset's diverse set of object
    categories, large number of annotated images, and standardized evaluation metrics
    make it an essential resource for computer vision researchers and practitioners.
  prefs: []
  type: TYPE_NORMAL
- en: Dataset YAML
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A YAML (Yet Another Markup Language) file is used to define the dataset configuration.
    It contains information about the dataset's paths, classes, and other relevant
    information. In the case of the VOC dataset, the `VOC.yaml` file is maintained
    at [`github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/datasets/VOC.yaml`](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/datasets/VOC.yaml).
  prefs: []
  type: TYPE_NORMAL
- en: ultralytics/cfg/datasets/VOC.yaml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Usage
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To train a YOLOv8n model on the VOC dataset for 100 epochs with an image size
    of 640, you can use the following code snippets. For a comprehensive list of available
    arguments, refer to the model Training page.
  prefs: []
  type: TYPE_NORMAL
- en: Train Example
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Sample Images and Annotations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The VOC dataset contains a diverse set of images with various object categories
    and complex scenes. Here are some examples of images from the dataset, along with
    their corresponding annotations:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Dataset sample image](img/5c57ec2ac27b2f566bf9cf5db4bb2bcc.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Mosaiced Image**: This image demonstrates a training batch composed of mosaiced
    dataset images. Mosaicing is a technique used during training that combines multiple
    images into a single image to increase the variety of objects and scenes within
    each training batch. This helps improve the model''s ability to generalize to
    different object sizes, aspect ratios, and contexts.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The example showcases the variety and complexity of the images in the VOC dataset
    and the benefits of using mosaicing during the training process.
  prefs: []
  type: TYPE_NORMAL
- en: Citations and Acknowledgments
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you use the VOC dataset in your research or development work, please cite
    the following paper:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: We would like to acknowledge the PASCAL VOC Consortium for creating and maintaining
    this valuable resource for the computer vision community. For more information
    about the VOC dataset and its creators, visit the [PASCAL VOC dataset website](http://host.robots.ox.ac.uk/pascal/VOC/).
  prefs: []
  type: TYPE_NORMAL
- en: FAQ
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: What is the PASCAL VOC dataset and why is it important for computer vision tasks?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The [PASCAL VOC](http://host.robots.ox.ac.uk/pascal/VOC/) (Visual Object Classes)
    dataset is a renowned benchmark for object detection, segmentation, and classification
    in computer vision. It includes comprehensive annotations like bounding boxes,
    class labels, and segmentation masks across 20 different object categories. Researchers
    use it widely to evaluate the performance of models like Faster R-CNN, YOLO, and
    Mask R-CNN due to its standardized evaluation metrics such as mean Average Precision
    (mAP).
  prefs: []
  type: TYPE_NORMAL
- en: How do I train a YOLOv8 model using the VOC dataset?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To train a YOLOv8 model with the VOC dataset, you need the dataset configuration
    in a YAML file. Here''s an example to start training a YOLOv8n model for 100 epochs
    with an image size of 640:'
  prefs: []
  type: TYPE_NORMAL
- en: Train Example
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: What are the primary challenges included in the VOC dataset?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The VOC dataset includes two main challenges: VOC2007 and VOC2012\. These challenges
    test object detection, segmentation, and classification across 20 diverse object
    categories. Each image is meticulously annotated with bounding boxes, class labels,
    and segmentation masks. The challenges provide standardized metrics like mAP,
    facilitating the comparison and benchmarking of different computer vision models.'
  prefs: []
  type: TYPE_NORMAL
- en: How does the PASCAL VOC dataset enhance model benchmarking and evaluation?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The PASCAL VOC dataset enhances model benchmarking and evaluation through its
    detailed annotations and standardized metrics like mean Average Precision (mAP).
    These metrics are crucial for assessing the performance of object detection and
    classification models. The dataset's diverse and complex images ensure comprehensive
    model evaluation across various real-world scenarios.
  prefs: []
  type: TYPE_NORMAL
- en: How do I use the VOC dataset for semantic segmentation in YOLO models?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To use the VOC dataset for semantic segmentation tasks with YOLO models, you
    need to configure the dataset properly in a YAML file. The YAML file defines paths
    and classes needed for training segmentation models. Check the VOC dataset YAML
    configuration file at [VOC.yaml](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/datasets/VOC.yaml)
    for detailed setups.
  prefs: []
  type: TYPE_NORMAL
