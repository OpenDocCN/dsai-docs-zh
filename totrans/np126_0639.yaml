- en: numpy.ma.is_mask
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.is_mask.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.is_mask.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return True if m is a valid, standard mask.
  prefs: []
  type: TYPE_NORMAL
- en: This function does not check the contents of the input, only that the type is
    MaskType. In particular, this function returns False if the mask has a flexible
    dtype.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**m**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Array to test.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**result**bool'
  prefs: []
  type: TYPE_NORMAL
- en: True if *m.dtype.type* is MaskType, False otherwise.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`ma.isMaskedArray`](numpy.ma.isMaskedArray.html#numpy.ma.isMaskedArray "numpy.ma.isMaskedArray")'
  prefs: []
  type: TYPE_NORMAL
- en: Test whether input is an instance of MaskedArray.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Input must be an ndarray (or have similar attributes) for it to be considered
    a valid mask.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Arrays with complex dtypes don’t return True.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
