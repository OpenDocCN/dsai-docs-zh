- en: pandas.Series.copy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.Series.copy.html](https://pandas.pydata.org/docs/reference/api/pandas.Series.copy.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Make a copy of this object’s indices and data.
  prefs: []
  type: TYPE_NORMAL
- en: When `deep=True` (default), a new object will be created with a copy of the
    calling object’s data and indices. Modifications to the data or indices of the
    copy will not be reflected in the original object (see notes below).
  prefs: []
  type: TYPE_NORMAL
- en: When `deep=False`, a new object will be created without copying the calling
    object’s data or index (only references to the data and index are copied). Any
    changes to the data of the original will be reflected in the shallow copy (and
    vice versa).
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: The `deep=False` behaviour as described above will change in pandas 3.0\. [Copy-on-Write](https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html)
    will be enabled by default, which means that the “shallow” copy is that is returned
    with `deep=False` will still avoid making an eager copy, but changes to the data
    of the original will *no* longer be reflected in the shallow copy (or vice versa).
    Instead, it makes use of a lazy (deferred) copy mechanism that will copy the data
    only when any changes to the original or shallow copy is made.
  prefs: []
  type: TYPE_NORMAL
- en: You can already get the future behavior and improvements through enabling copy
    on write `pd.options.mode.copy_on_write = True`
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**deep**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Make a deep copy, including a copy of the data and the indices. With `deep=False`
    neither the indices nor the data are copied.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: Series or DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: Object type matches caller.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: When `deep=True`, data is copied but actual Python objects will not be copied
    recursively, only the reference to the object. This is in contrast to copy.deepcopy
    in the Standard Library, which recursively copies object data (see examples below).
  prefs: []
  type: TYPE_NORMAL
- en: While `Index` objects are copied when `deep=True`, the underlying numpy array
    is not copied for performance reasons. Since `Index` is immutable, the underlying
    data can be safely shared and a copy is not needed.
  prefs: []
  type: TYPE_NORMAL
- en: Since pandas is not thread safe, see the [gotchas](../../user_guide/gotchas.html#gotchas-thread-safety)
    when copying in a threading environment.
  prefs: []
  type: TYPE_NORMAL
- en: When `copy_on_write` in pandas config is set to `True`, the `copy_on_write`
    config takes effect even when `deep=False`. This means that any changes to the
    copied data would make a new copy of the data upon write (and vice versa). Changes
    made to either the original or copied variable would not be reflected in the counterpart.
    See [Copy_on_Write](../../user_guide/copy_on_write.html#copy-on-write) for more
    information.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Shallow copy versus default (deep) copy:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Shallow copy shares data and index with original.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Deep copy has own copy of data and index.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Updates to the data shared by shallow copy and original is reflected in both
    (NOTE: this will no longer be true for pandas >= 3.0); deep copy remains unchanged.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Note that when copying an object containing Python objects, a deep copy will
    copy the data, but will not do so recursively. Updating a nested data object will
    be reflected in the deep copy.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '**Copy-on-Write is set to true**, the shallow copy is not modified when the
    original data is changed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
