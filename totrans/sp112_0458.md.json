["```py\nscipy.optimize.newton(func, x0, fprime=None, args=(), tol=1.48e-08, maxiter=50, fprime2=None, x1=None, rtol=0.0, full_output=False, disp=True)\n```", "```py\n>>> import numpy as np\n>>> import matplotlib.pyplot as plt\n>>> from scipy import optimize \n```", "```py\n>>> def f(x):\n...     return (x**3 - 1)  # only one real root at x = 1 \n```", "```py\n>>> root = optimize.newton(f, 1.5)\n>>> root\n1.0000000000000016\n>>> root = optimize.newton(f, 1.5, fprime2=lambda x: 6 * x)\n>>> root\n1.0000000000000016 \n```", "```py\n>>> root = optimize.newton(f, 1.5, fprime=lambda x: 3 * x**2)\n>>> root\n1.0 \n```", "```py\n>>> root = optimize.newton(f, 1.5, fprime=lambda x: 3 * x**2,\n...                        fprime2=lambda x: 6 * x)\n>>> root\n1.0 \n```", "```py\n>>> f = lambda x, a: x**3 - a\n>>> fder = lambda x, a: 3 * x**2\n>>> rng = np.random.default_rng()\n>>> x = rng.standard_normal(100)\n>>> a = np.arange(-50, 50)\n>>> vec_res = optimize.newton(f, x, fprime=fder, args=(a, ), maxiter=200) \n```", "```py\n>>> loop_res = [optimize.newton(f, x0, fprime=fder, args=(a0,),\n...                             maxiter=200)\n...             for x0, a0 in zip(x, a)]\n>>> np.allclose(vec_res, loop_res)\nTrue \n```", "```py\n>>> analytical_result = np.sign(a) * np.abs(a)**(1/3)\n>>> fig, ax = plt.subplots()\n>>> ax.plot(a, analytical_result, 'o')\n>>> ax.plot(a, vec_res, '.')\n>>> ax.set_xlabel('$a$')\n>>> ax.set_ylabel('$x$ where $f(x, a)=0$')\n>>> plt.show() \n```"]