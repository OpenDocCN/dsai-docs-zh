["```py\n`<class-index> <x1> <y1> <x2> <y2> ... <xn> <yn>` \n```", "```py\n`0 0.681 0.485 0.670 0.487 0.676 0.487 1 0.504 0.000 0.501 0.004 0.498 0.004 0.493 0.010 0.492 0.0104` \n```", "```py\n`# Train/val/test sets as 1) dir: path/to/imgs, 2) file: path/to/imgs.txt, or 3) list: [path/to/imgs1, path/to/imgs2, ..] path:  ../datasets/coco8-seg  # dataset root dir train:  images/train  # train images (relative to 'path') 4 images val:  images/val  # val images (relative to 'path') 4 images test:  # test images (optional)  # Classes (80 COCO classes) names:   0:  person   1:  bicycle   2:  car   # ...   77:  teddy bear   78:  hair drier   79:  toothbrush` \n```", "```py\n`from ultralytics import YOLO  # Load a model model = YOLO(\"yolov8n-seg.pt\")  # load a pretrained model (recommended for training)  # Train the model results = model.train(data=\"coco8-seg.yaml\", epochs=100, imgsz=640)` \n```", "```py\n`# Start training from a pretrained *.pt model yolo  segment  train  data=coco8-seg.yaml  model=yolov8n-seg.pt  epochs=100  imgsz=640` \n```", "```py\n`from ultralytics.data.converter import convert_coco  convert_coco(labels_dir=\"path/to/coco/annotations/\", use_segments=True)` \n```", "```py\n`from ultralytics.data.annotator import auto_annotate  auto_annotate(data=\"path/to/images\", det_model=\"yolov8x.pt\", sam_model=\"sam_b.pt\")` \n```", "```py\n`from ultralytics.data.converter import convert_coco  convert_coco(labels_dir=\"path/to/coco/annotations/\", use_segments=True)` \n```", "```py\n`path:  ../datasets/coco8-seg  # dataset root dir train:  images/train  # train images (relative to 'path')  val:  images/val  # val images (relative to 'path')   names:   0:  person   1:  bicycle   2:  car   # ...` \n```", "```py\n`from ultralytics.data.annotator import auto_annotate  auto_annotate(data=\"path/to/images\", det_model=\"yolov8x.pt\", sam_model=\"sam_b.pt\")` \n```"]