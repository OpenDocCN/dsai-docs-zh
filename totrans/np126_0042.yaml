- en: numpy.ndarray.itemset
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.itemset.html](https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.itemset.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: method
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Insert scalar into an array (scalar is cast to array’s dtype, if possible)
  prefs: []
  type: TYPE_NORMAL
- en: There must be at least 1 argument, and define the last argument as *item*. Then,
    `a.itemset(*args)` is equivalent to but faster than `a[args] = item`. The item
    should be a scalar value and *args* must select a single item in the array *a*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '***args**Arguments'
  prefs: []
  type: TYPE_NORMAL
- en: 'If one argument: a scalar, only used in case *a* is of size 1. If two arguments:
    the last argument is the value to be set and must be a scalar, the first argument
    specifies a single array element location. It is either an int or a tuple.'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'Compared to indexing syntax, [`itemset`](#numpy.ndarray.itemset "numpy.ndarray.itemset")
    provides some speed increase for placing a scalar into a particular location in
    an [`ndarray`](numpy.ndarray.html#numpy.ndarray "numpy.ndarray"), if you must
    do this. However, generally this is discouraged: among other problems, it complicates
    the appearance of the code. Also, when using [`itemset`](#numpy.ndarray.itemset
    "numpy.ndarray.itemset") (and [`item`](numpy.ndarray.item.html#numpy.ndarray.item
    "numpy.ndarray.item")) inside a loop, be sure to assign the methods to a local
    variable to avoid the attribute look-up at each loop iteration.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
