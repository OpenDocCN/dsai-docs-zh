- en: numpy.nonzero
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.nonzero
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.nonzero.html](https://numpy.org/doc/1.26/reference/generated/numpy.nonzero.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.nonzero.html](https://numpy.org/doc/1.26/reference/generated/numpy.nonzero.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Return the indices of the elements that are non-zero.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 返回非零元素的下标。
- en: Returns a tuple of arrays, one for each dimension of *a*, containing the indices
    of the non-zero elements in that dimension. The values in *a* are always tested
    and returned in row-major, C-style order.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个数组的元组，每个维度都包含该维度中非零元素的下标。 *a* 中的值始终以行为主测试和返回，**C** 样式排序。
- en: To group the indices by element, rather than dimension, use [`argwhere`](numpy.argwhere.html#numpy.argwhere
    "numpy.argwhere"), which returns a row for each non-zero element.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 要按元素而不是维度对下标进行分组，请使用[`argwhere`](https://numpy.org/doc/1.26/reference/generated/numpy.argwhere.html#numpy.argwhere
    "numpy.argwhere")，其将为每个非零元素返回一行。
- en: Note
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When called on a zero-d array or scalar, `nonzero(a)` is treated as `nonzero(atleast_1d(a))`.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 当在零维数组或标量上调用`nonzero(a)`时，会将其视为`nonzero(atleast_1d(a))`。
- en: 'Deprecated since version 1.17.0: Use [`atleast_1d`](numpy.atleast_1d.html#numpy.atleast_1d
    "numpy.atleast_1d") explicitly if this behavior is deliberate.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 自版本1.17.0开始弃用：如果此行为是刻意的，请显式使用[`atleast_1d`](https://numpy.org/doc/1.26/reference/generated/numpy.atleast_1d.html#numpy.atleast_1d
    "numpy.atleast_1d")。
- en: 'Parameters:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a**array_like'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**类似数组'
- en: Input array.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数组。
- en: 'Returns:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**tuple_of_arrays**tuple'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**tuple_of_arrays**数组'
- en: Indices of elements that are non-zero.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 非零元素的下标。
- en: See also
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`flatnonzero`](numpy.flatnonzero.html#numpy.flatnonzero "numpy.flatnonzero")'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[`flatnonzero`](https://numpy.org/doc/1.26/reference/generated/numpy.flatnonzero.html#numpy.flatnonzero
    "numpy.flatnonzero")'
- en: Return indices that are non-zero in the flattened version of the input array.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 返回输入数组的扁平版本中非零的下标。
- en: '[`ndarray.nonzero`](numpy.ndarray.nonzero.html#numpy.ndarray.nonzero "numpy.ndarray.nonzero")'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ndarray.nonzero`](https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.nonzero.html#numpy.ndarray.nonzero
    "numpy.ndarray.nonzero")'
- en: Equivalent ndarray method.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 等效的ndarray方法。
- en: '[`count_nonzero`](numpy.count_nonzero.html#numpy.count_nonzero "numpy.count_nonzero")'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[`count_nonzero`](https://numpy.org/doc/1.26/reference/generated/numpy.count_nonzero.html#numpy.count_nonzero
    "numpy.count_nonzero")'
- en: Counts the number of non-zero elements in the input array.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 计算输入数组中的非零元素的数量。
- en: Notes
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 注解
- en: While the nonzero values can be obtained with `a[nonzero(a)]`, it is recommended
    to use `x[x.astype(bool)]` or `x[x != 0]` instead, which will correctly handle
    0-d arrays.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管可以使用`a[nonzero(a)]`获得非零值，但建议改用`x[x.astype(bool)]`或`x[x != 0]`，这样可以正确处理 0 维数组。
- en: Examples
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: A common use for `nonzero` is to find the indices of an array, where a condition
    is True. Given an array *a*, the condition *a* > 3 is a boolean array and since
    False is interpreted as 0, np.nonzero(a > 3) yields the indices of the *a* where
    the condition is true.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '`nonzero`的一个常见用法是找到数组的索引，其中条件为 True。给定数组 *a*，条件 *a* > 3 是一个布尔数组，因为 False 被解释为
    0，`np.nonzero(a > 3)`产生条件为真的 *a* 的索引。'
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Using this result to index *a* is equivalent to using the mask directly:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此结果索引 *a* 等同于直接使用掩码：
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '`nonzero` can also be called as a method of the array.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`nonzero`也可以作为数组的方法调用。'
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
