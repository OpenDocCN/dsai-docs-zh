- en: numpy.power
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.power
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.power.html](https://numpy.org/doc/1.26/reference/generated/numpy.power.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.power.html](https://numpy.org/doc/1.26/reference/generated/numpy.power.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: First array elements raised to powers from second array, element-wise.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个数组元素按照第二个数组的幂逐元素提升。
- en: Raise each base in *x1* to the positionally-corresponding power in *x2*. *x1*
    and *x2* must be broadcastable to the same shape.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 将*x1*中的每个基数提升到*x2*中对应位置的幂。*x1*和*x2*必须能够广播到相同的形状。
- en: An integer type raised to a negative integer power will raise a `ValueError`.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 将整数类型提升到负整数幂将引发`ValueError`。
- en: Negative values raised to a non-integral value will return `nan`. To get complex
    results, cast the input to complex, or specify the `dtype` to be `complex` (see
    the example below).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 将负值提升到非整数值将返回`nan`。要获得复杂的结果，将输入转换为复数，或指定`dtype`为`complex`（请参见下面的示例）。
- en: 'Parameters:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x1**array_like'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**x1**数组样式'
- en: The bases.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 基数。
- en: '**x2**array_like'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**x2**数组样式'
- en: The exponents. If `x1.shape != x2.shape`, they must be broadcastable to a common
    shape (which becomes the shape of the output).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 指数。如果`x1.shape != x2.shape`，它们必须能够广播到一个公共形状（这将成为输出的形状）。
- en: '**out**ndarray, None, or tuple of ndarray and None, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**out** ndarray、None或ndarray和None的元组，可选'
- en: A location into which the result is stored. If provided, it must have a shape
    that the inputs broadcast to. If not provided or None, a freshly-allocated array
    is returned. A tuple (possible only as a keyword argument) must have length equal
    to the number of outputs.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 存储结果的位置。如果提供，它必须具有输入广播到的形状。如果未提供或为None，则返回一个新分配的数组。一个元组（仅作为关键字参数）的长度必须等于输出的数量。
- en: '**where**array_like, optional'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**where**数组样式，可选'
- en: This condition is broadcast over the input. At locations where the condition
    is True, the *out* array will be set to the ufunc result. Elsewhere, the *out*
    array will retain its original value. Note that if an uninitialized *out* array
    is created via the default `out=None`, locations within it where the condition
    is False will remain uninitialized.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 此条件在输入上进行广播。在条件为True的位置，*out*数组将设置为ufunc结果。否则，*out*数组将保留其原始值。请注意，如果通过默认的`out=None`创建了一个未初始化的*out*数组，则其中条件为False的位置将保持未初始化。
- en: '****kwargs**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '****kwargs**'
- en: For other keyword-only arguments, see the [ufunc docs](../ufuncs.html#ufuncs-kwargs).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 对于其他仅限关键字参数，请参阅[ufunc文档](../ufuncs.html#ufuncs-kwargs)。
- en: 'Returns:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**y**ndarray'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**y** ndarray'
- en: The bases in *x1* raised to the exponents in *x2*. This is a scalar if both
    *x1* and *x2* are scalars.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '*x1*中的基数提升到*x2*中的指数。如果*x1*和*x2*都是标量，则这是一个标量。'
- en: See also
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`float_power`](numpy.float_power.html#numpy.float_power "numpy.float_power")'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[`float_power`](numpy.float_power.html#numpy.float_power "numpy.float_power")'
- en: power function that promotes integers to float
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 将整数提升为浮点数的幂函数
- en: Examples
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: Cube each element in an array.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 将数组中的每个元素立方。
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Raise the bases to different exponents.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 将基数提升到不同的指数。
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The effect of broadcasting.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 广播的效果。
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `**` operator can be used as a shorthand for `np.power` on ndarrays.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`**`运算符可用作ndarrays上`np.power`的简写。'
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Negative values raised to a non-integral value will result in `nan` (and a warning
    will be generated).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 将负值提升到非整数值将导致`nan`（并生成警告）。
- en: '[PRE5]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: To get complex results, give the argument `dtype=complex`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要获得复杂的结果，请给出参数`dtype=complex`。
- en: '[PRE6]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
