- en: numpy.real_if_close
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.real_if_close
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.real_if_close.html](https://numpy.org/doc/1.26/reference/generated/numpy.real_if_close.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.real_if_close.html](https://numpy.org/doc/1.26/reference/generated/numpy.real_if_close.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If input is complex with all imaginary parts close to zero, return real parts.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果输入是复数，并且所有虚部接近于零，则返回实部。
- en: “Close to zero” is defined as *tol* * (machine epsilon of the type for *a*).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: “接近零”被定义为*tol* * *a*类型的机器epsilon。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a**array_like'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**array_like'
- en: Input array.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数组。
- en: '**tol**float'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**tol**float'
- en: Tolerance in machine epsilons for the complex part of the elements in the array.
    If the tolerance is <=1, then the absolute tolerance is used.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 复数数组中元素的机器epsilon公差。如果公差<=1，则使用绝对公差。
- en: 'Returns:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**out**ndarray'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**ndarray'
- en: If *a* is real, the type of *a* is used for the output. If *a* has complex elements,
    the returned type is float.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*a*是实数，则输出的类型与*a*的类型相同。如果*a*有复数元素，则返回类型为float。
- en: See also
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`real`](numpy.real.html#numpy.real "numpy.real"), [`imag`](numpy.imag.html#numpy.imag
    "numpy.imag"), [`angle`](numpy.angle.html#numpy.angle "numpy.angle")'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[`real`](numpy.real.html#numpy.real "numpy.real"), [`imag`](numpy.imag.html#numpy.imag
    "numpy.imag"), [`angle`](numpy.angle.html#numpy.angle "numpy.angle")'
- en: Notes
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Machine epsilon varies from machine to machine and between data types but Python
    floats on most platforms have a machine epsilon equal to 2.2204460492503131e-16\.
    You can use ‘np.finfo(float).eps’ to print out the machine epsilon for floats.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 机器epsilon因机器和数据类型而异，但大多数平台上的Python浮点数具有相同的机器epsilon，等于2.2204460492503131e-16。您可以使用‘np.finfo(float).eps’打印出浮点数的机器epsilon。
- en: Examples
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
