["```py\nDataFrame.to_dict(orient='dict', *, into=<class 'dict'>, index=True)\n```", "```py\n>>> df = pd.DataFrame({'col1': [1, 2],\n...                    'col2': [0.5, 0.75]},\n...                   index=['row1', 'row2'])\n>>> df\n col1  col2\nrow1     1  0.50\nrow2     2  0.75\n>>> df.to_dict()\n{'col1': {'row1': 1, 'row2': 2}, 'col2': {'row1': 0.5, 'row2': 0.75}} \n```", "```py\n>>> df.to_dict('series')\n{'col1': row1    1\n row2    2\nName: col1, dtype: int64,\n'col2': row1    0.50\n row2    0.75\nName: col2, dtype: float64} \n```", "```py\n>>> df.to_dict('split')\n{'index': ['row1', 'row2'], 'columns': ['col1', 'col2'],\n 'data': [[1, 0.5], [2, 0.75]]} \n```", "```py\n>>> df.to_dict('records')\n[{'col1': 1, 'col2': 0.5}, {'col1': 2, 'col2': 0.75}] \n```", "```py\n>>> df.to_dict('index')\n{'row1': {'col1': 1, 'col2': 0.5}, 'row2': {'col1': 2, 'col2': 0.75}} \n```", "```py\n>>> df.to_dict('tight')\n{'index': ['row1', 'row2'], 'columns': ['col1', 'col2'],\n 'data': [[1, 0.5], [2, 0.75]], 'index_names': [None], 'column_names': [None]} \n```", "```py\n>>> from collections import OrderedDict, defaultdict\n>>> df.to_dict(into=OrderedDict)\nOrderedDict([('col1', OrderedDict([('row1', 1), ('row2', 2)])),\n ('col2', OrderedDict([('row1', 0.5), ('row2', 0.75)]))]) \n```", "```py\n>>> dd = defaultdict(list)\n>>> df.to_dict('records', into=dd)\n[defaultdict(<class 'list'>, {'col1': 1, 'col2': 0.5}),\n defaultdict(<class 'list'>, {'col1': 2, 'col2': 0.75})] \n```"]