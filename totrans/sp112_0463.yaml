- en: scipy.optimize.milp
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.optimize.milp
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.milp.html#scipy.optimize.milp](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.milp.html#scipy.optimize.milp)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.milp.html#scipy.optimize.milp](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.milp.html#scipy.optimize.milp)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Mixed-integer linear programming
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 混合整数线性规划
- en: 'Solves problems of the following form:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 解决以下形式的问题：
- en: \[\begin{split}\min_x \ & c^T x \\ \mbox{such that} \ & b_l \leq A x \leq b_u,\\
    & l \leq x \leq u, \\ & x_i \in \mathbb{Z}, i \in X_i\end{split}\]
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}\min_x \ & c^T x \\ \mbox{使得} \ & b_l \leq A x \leq b_u,\\ &
    l \leq x \leq u, \\ & x_i \in \mathbb{Z}, i \in X_i\end{split}\]
- en: where \(x\) is a vector of decision variables; \(c\), \(b_l\), \(b_u\), \(l\),
    and \(u\) are vectors; \(A\) is a matrix, and \(X_i\) is the set of indices of
    decision variables that must be integral. (In this context, a variable that can
    assume only integer values is said to be “integral”; it has an “integrality” constraint.)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 \(x\) 是决策变量向量；\(c\), \(b_l\), \(b_u\), \(l\), 和 \(u\) 是向量；\(A\) 是矩阵，\(X_i\)
    是必须是整数的决策变量索引集合。（在此上下文中，只能取整数值的变量称为“整数”；它具有“整数性”约束。）
- en: 'Alternatively, that’s:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，这样说：
- en: 'minimize:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 最小化：
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'such that:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 使得：
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: By default, `l = 0` and `u = np.inf` unless specified with `bounds`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`l = 0` 并且 `u = np.inf`，除非使用 `bounds` 进行指定。
- en: 'Parameters:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**c**1D dense array_like'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**c**1D 密集数组'
- en: The coefficients of the linear objective function to be minimized. *c* is converted
    to a double precision array before the problem is solved.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要最小化的线性目标函数的系数。在问题解决之前，*c* 被转换为双精度数组。
- en: '**integrality**1D dense array_like, optional'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**integrality** 1D 密集数组，可选'
- en: Indicates the type of integrality constraint on each decision variable.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 指示每个决策变量的整数约束类型。
- en: '`0` : Continuous variable; no integrality constraint.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '`0` : 连续变量；无整数约束。'
- en: '`1` : Integer variable; decision variable must be an integer within *bounds*.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '`1` : 整数变量；决策变量必须是整数且在*边界*内。'
- en: '`2` : Semi-continuous variable; decision variable must be within *bounds* or
    take value `0`.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`2` : 半连续变量；决策变量必须在*边界*内或者取值为 `0`。'
- en: '`3` : Semi-integer variable; decision variable must be an integer within *bounds*
    or take value `0`.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`3` : 半整数变量；决策变量必须是整数且在*边界*内，或者取值为 `0`。'
- en: By default, all variables are continuous. *integrality* is converted to an array
    of integers before the problem is solved.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，所有变量均为连续变量。*整数性*在问题解决之前被转换为整数数组。
- en: '**bounds**scipy.optimize.Bounds, optional'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**bounds** scipy.optimize.Bounds，可选'
- en: Bounds on the decision variables. Lower and upper bounds are converted to double
    precision arrays before the problem is solved. The `keep_feasible` parameter of
    the [`Bounds`](scipy.optimize.Bounds.html#scipy.optimize.Bounds "scipy.optimize.Bounds")
    object is ignored. If not specified, all decision variables are constrained to
    be non-negative.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 决策变量的边界。在问题解决之前，下限和上限被转换为双精度数组。[`Bounds`](scipy.optimize.Bounds.html#scipy.optimize.Bounds
    "scipy.optimize.Bounds") 对象的 `keep_feasible` 参数被忽略。如果未指定，则所有决策变量都受到非负约束。
- en: '**constraints**sequence of scipy.optimize.LinearConstraint, optional'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**constraints** 一系列 scipy.optimize.LinearConstraint，可选'
- en: 'Linear constraints of the optimization problem. Arguments may be one of the
    following:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 优化问题的线性约束。参数可以是以下之一：
- en: A single [`LinearConstraint`](scipy.optimize.LinearConstraint.html#scipy.optimize.LinearConstraint
    "scipy.optimize.LinearConstraint") object
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单个 [`LinearConstraint`](scipy.optimize.LinearConstraint.html#scipy.optimize.LinearConstraint
    "scipy.optimize.LinearConstraint") 对象
- en: A single tuple that can be converted to a [`LinearConstraint`](scipy.optimize.LinearConstraint.html#scipy.optimize.LinearConstraint
    "scipy.optimize.LinearConstraint") object as `LinearConstraint(*constraints)`
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以转换为单个元组，作为[`LinearConstraint`](scipy.optimize.LinearConstraint.html#scipy.optimize.LinearConstraint
    "scipy.optimize.LinearConstraint")对象的参数 `LinearConstraint(*constraints)`
- en: A sequence composed entirely of objects of type 1\. and 2.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由类型为 1\. 和 2\. 的对象组成的序列。
- en: Before the problem is solved, all values are converted to double precision,
    and the matrices of constraint coefficients are converted to instances of [`scipy.sparse.csc_array`](scipy.sparse.csc_array.html#scipy.sparse.csc_array
    "scipy.sparse.csc_array"). The `keep_feasible` parameter of [`LinearConstraint`](scipy.optimize.LinearConstraint.html#scipy.optimize.LinearConstraint
    "scipy.optimize.LinearConstraint") objects is ignored.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在解决问题之前，所有值都转换为双精度，并且约束系数的矩阵转换为[`scipy.sparse.csc_array`](scipy.sparse.csc_array.html#scipy.sparse.csc_array
    "scipy.sparse.csc_array")的实例。[`LinearConstraint`](scipy.optimize.LinearConstraint.html#scipy.optimize.LinearConstraint
    "scipy.optimize.LinearConstraint")对象的`keep_feasible`参数被忽略。
- en: '**options**dict, optional'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**options**dict，可选'
- en: A dictionary of solver options. The following keys are recognized.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 求解器选项的字典。以下键被识别。
- en: 'dispbool (default: `False`)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: dispbool（默认值：`False`）
- en: Set to `True` if indicators of optimization status are to be printed to the
    console during optimization.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要在优化期间将优化状态的指示器打印到控制台，则设置为`True`。
- en: node_limitint, optional
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: node_limitint，可选
- en: The maximum number of nodes (linear program relaxations) to solve before stopping.
    Default is no maximum number of nodes.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 解决前停止的最大节点数（线性程序松弛）。默认情况下没有最大节点数。
- en: 'presolvebool (default: `True`)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: presolvebool（默认值：`True`）
- en: Presolve attempts to identify trivial infeasibilities, identify trivial unboundedness,
    and simplify the problem before sending it to the main solver.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Presolve尝试在将问题发送给主求解器之前识别微不足道的不可行性，识别微不足道的无界性并简化问题。
- en: time_limitfloat, optional
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: time_limitfloat，可选
- en: The maximum number of seconds allotted to solve the problem. Default is no time
    limit.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 解决问题的最大秒数。默认情况下没有时间限制。
- en: mip_rel_gapfloat, optional
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: mip_rel_gapfloat，可选
- en: 'Termination criterion for MIP solver: solver will terminate when the gap between
    the primal objective value and the dual objective bound, scaled by the primal
    objective value, is <= mip_rel_gap.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: MIP求解器的终止准则：当主目标值与对偶目标界限之间的差距，按主目标值缩放，<= mip_rel_gap时，求解器将终止。
- en: 'Returns:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**res**OptimizeResult'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**res**OptimizeResult'
- en: An instance of [`scipy.optimize.OptimizeResult`](scipy.optimize.OptimizeResult.html#scipy.optimize.OptimizeResult
    "scipy.optimize.OptimizeResult"). The object is guaranteed to have the following
    attributes.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.optimize.OptimizeResult`](scipy.optimize.OptimizeResult.html#scipy.optimize.OptimizeResult
    "scipy.optimize.OptimizeResult")的实例。对象保证具有以下属性。'
- en: statusint
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: statusint
- en: An integer representing the exit status of the algorithm.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 表示算法退出状态的整数。
- en: '`0` : Optimal solution found.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '`0`：找到最优解。'
- en: '`1` : Iteration or time limit reached.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`1`：达到迭代或时间限制。'
- en: '`2` : Problem is infeasible.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`2`：问题不可行。'
- en: '`3` : Problem is unbounded.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`3`：问题无界。'
- en: '`4` : Other; see message for details.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`4`：其他；请参阅详细信息。'
- en: successbool
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: successbool
- en: '`True` when an optimal solution is found and `False` otherwise.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 当找到最优解时为`True`，否则为`False`。
- en: messagestr
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: messagestr
- en: A string descriptor of the exit status of the algorithm.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 算法的退出状态的字符串描述符。
- en: The following attributes will also be present, but the values may be `None`,
    depending on the solution status.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 还将存在以下属性，但根据解决方案状态，值可能为`None`。
- en: xndarray
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: xndarray
- en: The values of the decision variables that minimize the objective function while
    satisfying the constraints.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 决策变量的值，这些值最小化了满足约束条件的目标函数。
- en: funfloat
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: funfloat
- en: The optimal value of the objective function `c @ x`.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 目标函数`c @ x`的最优值。
- en: mip_node_countint
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: mip_node_countint
- en: The number of subproblems or “nodes” solved by the MILP solver.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: MILP求解器解决的子问题或“节点”的数量。
- en: mip_dual_boundfloat
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: mip_dual_boundfloat
- en: The MILP solver’s final estimate of the lower bound on the optimal solution.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: MILP求解器对最优解的下界的最终估计。
- en: mip_gapfloat
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: mip_gapfloat
- en: The difference between the primal objective value and the dual objective bound,
    scaled by the primal objective value.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 主目标值与对偶目标界限之间的差距，按主目标值缩放。
- en: Notes
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: '[`milp`](#scipy.optimize.milp "scipy.optimize.milp") is a wrapper of the HiGHS
    linear optimization software [[1]](#rab6a199aba7d-1). The algorithm is deterministic,
    and it typically finds the global optimum of moderately challenging mixed-integer
    linear programs (when it exists).'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '[`milp`](#scipy.optimize.milp "scipy.optimize.milp")是HiGHS线性优化软件的包装器[[1]](#rab6a199aba7d-1)。该算法是确定性的，并且通常在存在时找到中度挑战的混合整数线性规划的全局最优解。'
- en: References
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[1](#id1)]'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '[[1](#id1)]'
- en: Huangfu, Q., Galabova, I., Feldmeier, M., and Hall, J. A. J. “HiGHS - high performance
    software for linear optimization.” [https://highs.dev/](https://highs.dev/)
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Huangfu, Q., Galabova, I., Feldmeier, M., 和 Hall, J. A. J. “HiGHS - 高性能线性优化软件。”
    [https://highs.dev/](https://highs.dev/)
- en: '[2]'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '[2]'
- en: 'Huangfu, Q. and Hall, J. A. J. “Parallelizing the dual revised simplex method.”
    Mathematical Programming Computation, 10 (1), 119-142, 2018\. DOI: 10.1007/s12532-017-0130-5'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 'Huangfu, Q. 和 Hall, J. A. J. “并行化双修正单纯形法。” 数学规划计算, 10 (1), 119-142, 2018\.
    DOI: 10.1007/s12532-017-0130-5'
- en: Examples
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Consider the problem at [https://en.wikipedia.org/wiki/Integer_programming#Example](https://en.wikipedia.org/wiki/Integer_programming#Example),
    which is expressed as a maximization problem of two variables. Since [`milp`](#scipy.optimize.milp
    "scipy.optimize.milp") requires that the problem be expressed as a minimization
    problem, the objective function coefficients on the decision variables are:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑[https://en.wikipedia.org/wiki/Integer_programming#Example](https://en.wikipedia.org/wiki/Integer_programming#Example)中表达为两个变量最大化问题。由于[`milp`](#scipy.optimize.milp
    "scipy.optimize.milp")要求将问题表达为最小化问题，决策变量的目标函数系数为：
- en: '[PRE3]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Note the negative sign: we maximize the original objective function by minimizing
    the negative of the objective function.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 注意负号：我们通过最小化目标函数的负数来最大化原始目标函数。
- en: 'We collect the coefficients of the constraints into arrays like:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将约束的系数收集到数组中，例如：
- en: '[PRE4]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Because there is no lower limit on these constraints, we have defined a variable
    `b_l` full of values representing negative infinity. This may be unfamiliar to
    users of [`scipy.optimize.linprog`](scipy.optimize.linprog.html#scipy.optimize.linprog
    "scipy.optimize.linprog"), which only accepts “less than” (or “upper bound”) inequality
    constraints of the form `A_ub @ x <= b_u`. By accepting both `b_l` and `b_u` of
    constraints `b_l <= A_ub @ x <= b_u`, [`milp`](#scipy.optimize.milp "scipy.optimize.milp")
    makes it easy to specify “greater than” inequality constraints, “less than” inequality
    constraints, and equality constraints concisely.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这些约束没有下限，我们定义了一个变量`b_l`，其中包含代表负无穷大的值。这对于[`scipy.optimize.linprog`](scipy.optimize.linprog.html#scipy.optimize.linprog
    "scipy.optimize.linprog")的用户可能不熟悉，后者仅接受形式为`A_ub @ x <= b_u`的“小于”（或“上界”）不等式约束。通过接受约束`b_l
    <= A_ub @ x <= b_u`的`b_l`和`b_u`，[`milp`](#scipy.optimize.milp "scipy.optimize.milp")能够简洁地指定“大于”不等式约束、“小于”不等式约束和等式约束。
- en: 'These arrays are collected into a single [`LinearConstraint`](scipy.optimize.LinearConstraint.html#scipy.optimize.LinearConstraint
    "scipy.optimize.LinearConstraint") object like:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些数组收集到一个单一的[`LinearConstraint`](scipy.optimize.LinearConstraint.html#scipy.optimize.LinearConstraint
    "scipy.optimize.LinearConstraint")对象中，如下：
- en: '[PRE5]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The non-negativity bounds on the decision variables are enforced by default,
    so we do not need to provide an argument for *bounds*.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 决策变量的非负限制默认受到强制执行，因此我们无需为*bounds*提供参数。
- en: 'Finally, the problem states that both decision variables must be integers:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，问题规定决策变量必须是整数：
- en: '[PRE6]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We solve the problem like:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们解决问题如下：
- en: '[PRE7]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Note that had we solved the relaxed problem (without integrality constraints):'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果我们解决了放松的问题（没有整数约束）：
- en: '[PRE8]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: we would not have obtained the correct solution by rounding to the nearest integers.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们通过四舍五入到最接近的整数来解决问题，我们将得不到正确的解决方案。
- en: Other examples are given [in the tutorial](../../tutorial/optimize.html#tutorial-optimize-milp).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 其他示例见于[tutorial教程](../../tutorial/optimize.html#tutorial-optimize-milp)。
