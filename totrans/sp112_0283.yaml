- en: scipy.linalg.qr
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.qr.html#scipy.linalg.qr](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.qr.html#scipy.linalg.qr)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute QR decomposition of a matrix.
  prefs: []
  type: TYPE_NORMAL
- en: Calculate the decomposition `A = Q R` where Q is unitary/orthogonal and R upper
    triangular.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**(M, N) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Matrix to be decomposed
  prefs: []
  type: TYPE_NORMAL
- en: '**overwrite_a**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether data in *a* is overwritten (may improve performance if *overwrite_a*
    is set to True by reusing the existing input data structure rather than creating
    a new one.)
  prefs: []
  type: TYPE_NORMAL
- en: '**lwork**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Work array size, lwork >= a.shape[1]. If None or -1, an optimal size is computed.
  prefs: []
  type: TYPE_NORMAL
- en: '**mode**{‘full’, ‘r’, ‘economic’, ‘raw’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Determines what information is to be returned: either both Q and R (‘full’,
    default), only R (‘r’) or both Q and R but computed in economy-size (‘economic’,
    see Notes). The final option ‘raw’ (added in SciPy 0.11) makes the function return
    two matrices (Q, TAU) in the internal format used by LAPACK.'
  prefs: []
  type: TYPE_NORMAL
- en: '**pivoting**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether or not factorization should include pivoting for rank-revealing qr decomposition.
    If pivoting, compute the decomposition `A P = Q R` as above, but where P is chosen
    such that the diagonal of R is non-increasing.
  prefs: []
  type: TYPE_NORMAL
- en: '**check_finite**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to check that the input matrix contains only finite numbers. Disabling
    may give a performance gain, but may result in problems (crashes, non-termination)
    if the inputs do contain infinities or NaNs.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Q**float or complex ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Of shape (M, M), or (M, K) for `mode='economic'`. Not returned if `mode='r'`.
    Replaced by tuple `(Q, TAU)` if `mode='raw'`.
  prefs: []
  type: TYPE_NORMAL
- en: '**R**float or complex ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Of shape (M, N), or (K, N) for `mode in ['economic', 'raw']`. `K = min(M, N)`.
  prefs: []
  type: TYPE_NORMAL
- en: '**P**int ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Of shape (N,) for `pivoting=True`. Not returned if `pivoting=False`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: LinAlgError
  prefs: []
  type: TYPE_NORMAL
- en: Raised if decomposition fails
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This is an interface to the LAPACK routines dgeqrf, zgeqrf, dorgqr, zungqr,
    dgeqp3, and zgeqp3.
  prefs: []
  type: TYPE_NORMAL
- en: If `mode=economic`, the shapes of Q and R are (M, K) and (K, N) instead of (M,M)
    and (M,N), with `K=min(M,N)`.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
