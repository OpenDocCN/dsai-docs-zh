- en: scipy.fft.fft
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.fft.fft
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.fft.html#scipy.fft.fft](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.fft.html#scipy.fft.fft)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.fft.html#scipy.fft.fft](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.fft.html#scipy.fft.fft)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Compute the 1-D discrete Fourier Transform.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 计算1-D离散傅里叶变换。
- en: This function computes the 1-D *n*-point discrete Fourier Transform (DFT) with
    the efficient Fast Fourier Transform (FFT) algorithm [[1]](#r33a4a1a5944b-1).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数使用高效的快速傅里叶变换（FFT）算法计算1-D *n*-点离散傅里叶变换（DFT）[[1]](#r33a4a1a5944b-1)。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x**array_like'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**array_like'
- en: Input array, can be complex.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数组，可以是复数。
- en: '**n**int, optional'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**int, optional'
- en: Length of the transformed axis of the output. If *n* is smaller than the length
    of the input, the input is cropped. If it is larger, the input is padded with
    zeros. If *n* is not given, the length of the input along the axis specified by
    *axis* is used.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 输出的变换轴的长度。如果*n*小于输入的长度，则截断输入。如果*n*大于输入的长度，则用零填充输入。如果没有给出*n*，则使用*axis*指定的轴上的输入长度。
- en: '**axis**int, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**axis**int, optional'
- en: Axis over which to compute the FFT. If not given, the last axis is used.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 用于计算FFT的轴。如果未给出，则使用最后一个轴。
- en: '**norm**{“backward”, “ortho”, “forward”}, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**norm**{“backward”，“ortho”，“forward”}，optional'
- en: Normalization mode. Default is “backward”, meaning no normalization on the forward
    transforms and scaling by `1/n` on the [`ifft`](scipy.fft.ifft.html#scipy.fft.ifft
    "scipy.fft.ifft"). “forward” instead applies the `1/n` factor on the forward transform.
    For `norm="ortho"`, both directions are scaled by `1/sqrt(n)`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 标准化模式。默认为“backward”，表示在正向变换上不进行标准化，在[`ifft`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.ifft.html#scipy.fft.ifft
    "scipy.fft.ifft")上按`1/n`进行缩放。而“forward”则在正向变换上应用`1/n`因子。对于`norm="ortho"`，两个方向均按`1/sqrt(n)`进行缩放。
- en: 'New in version 1.6.0: `norm={"forward", "backward"}` options were added'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本1.6.0中添加了`norm={"forward", "backward"}`选项。
- en: '**overwrite_x**bool, optional'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**overwrite_x**bool, optional'
- en: If True, the contents of *x* can be destroyed; the default is False. See the
    notes below for more details.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为True，则*x*的内容可以被销毁；默认为False。有关更多详细信息，请参见下面的说明。
- en: '**workers**int, optional'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**workers**int, optional'
- en: Maximum number of workers to use for parallel computation. If negative, the
    value wraps around from `os.cpu_count()`. See below for more details.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 并行计算的最大工作线程数。如果为负数，则从`os.cpu_count()`循环回绕。有关更多详细信息，请参见下文。
- en: '**plan**object, optional'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**plan**object, optional'
- en: This argument is reserved for passing in a precomputed plan provided by downstream
    FFT vendors. It is currently not used in SciPy.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 此参数保留供下游FFT供应商提供的预计算计划。目前在SciPy中未使用。
- en: New in version 1.5.0.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本1.5.0中的新增内容。
- en: 'Returns:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**out**complex ndarray'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**complex ndarray'
- en: The truncated or zero-padded input, transformed along the axis indicated by
    *axis*, or the last one if *axis* is not specified.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 指定由*axis*指示的轴或最后一个轴（如果未指定*axis*）转换的截断或零填充输入。
- en: 'Raises:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: IndexError
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: IndexError
- en: if *axes* is larger than the last axis of *x*.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 若*axes*大于*x*的最后一个轴。
- en: See also
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`ifft`](scipy.fft.ifft.html#scipy.fft.ifft "scipy.fft.ifft")'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ifft`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.ifft.html#scipy.fft.ifft
    "scipy.fft.ifft")'
- en: The inverse of [`fft`](#scipy.fft.fft "scipy.fft.fft").
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fft`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.fft.html#scipy.fft.fft)'
- en: '[`fft2`](scipy.fft.fft2.html#scipy.fft.fft2 "scipy.fft.fft2")'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fft2`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.fft2.html#scipy.fft.fft2
    "scipy.fft.fft2")'
- en: The 2-D FFT.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 二维FFT。
- en: '[`fftn`](scipy.fft.fftn.html#scipy.fft.fftn "scipy.fft.fftn")'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fftn`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.fftn.html#scipy.fft.fftn
    "scipy.fft.fftn")'
- en: The N-D FFT.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: N维FFT。
- en: '[`rfftn`](scipy.fft.rfftn.html#scipy.fft.rfftn "scipy.fft.rfftn")'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '[`rfftn`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.rfftn.html#scipy.fft.rfftn
    "scipy.fft.rfftn")'
- en: The N-D FFT of real input.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 实输入的N维FFT。
- en: '[`fftfreq`](scipy.fft.fftfreq.html#scipy.fft.fftfreq "scipy.fft.fftfreq")'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fftfreq`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.fftfreq.html#scipy.fft.fftfreq
    "scipy.fft.fftfreq")'
- en: Frequency bins for given FFT parameters.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 给定FFT参数的频率分bin。
- en: '[`next_fast_len`](scipy.fft.next_fast_len.html#scipy.fft.next_fast_len "scipy.fft.next_fast_len")'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[`next_fast_len`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.next_fast_len.html#scipy.fft.next_fast_len
    "scipy.fft.next_fast_len")'
- en: Size to pad input to for most efficient transforms
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 用于最有效转换的输入填充大小。
- en: Notes
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: FFT (Fast Fourier Transform) refers to a way the discrete Fourier Transform
    (DFT) can be calculated efficiently, by using symmetries in the calculated terms.
    The symmetry is highest when *n* is a power of 2, and the transform is therefore
    most efficient for these sizes. For poorly factorizable sizes, [`scipy.fft`](../fft.html#module-scipy.fft
    "scipy.fft") uses Bluestein’s algorithm [[2]](#r33a4a1a5944b-2) and so is never
    worse than O(*n* log *n*). Further performance improvements may be seen by zero-padding
    the input using [`next_fast_len`](scipy.fft.next_fast_len.html#scipy.fft.next_fast_len
    "scipy.fft.next_fast_len").
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: FFT（快速傅里叶变换）指的是通过使用计算项中的对称性来高效计算离散傅里叶变换（DFT）的一种方法。当 *n* 是2的幂时，对称性最高，因此对于这些大小的变换效率最高。对于难以因式分解的大小，[`scipy.fft`](../fft.html#module-scipy.fft
    "scipy.fft") 使用 Bluestein 算法 [[2]](#r33a4a1a5944b-2)，因此计算复杂度永远不会超过 O(*n* log *n*)。通过使用
    [`next_fast_len`](scipy.fft.next_fast_len.html#scipy.fft.next_fast_len "scipy.fft.next_fast_len")
    来对输入进行零填充，可能会看到进一步的性能提升。
- en: If `x` is a 1d array, then the [`fft`](#scipy.fft.fft "scipy.fft.fft") is equivalent
    to
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `x` 是1维数组，则 [`fft`](#scipy.fft.fft "scipy.fft.fft") 等效于
- en: '[PRE1]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The frequency term `f=k/n` is found at `y[k]`. At `y[n/2]` we reach the Nyquist
    frequency and wrap around to the negative-frequency terms. So, for an 8-point
    transform, the frequencies of the result are [0, 1, 2, 3, -4, -3, -2, -1]. To
    rearrange the fft output so that the zero-frequency component is centered, like
    [-4, -3, -2, -1, 0, 1, 2, 3], use [`fftshift`](scipy.fft.fftshift.html#scipy.fft.fftshift
    "scipy.fft.fftshift").
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 频率项 `f=k/n` 在 `y[k]` 处找到。在 `y[n/2]` 处达到奈奎斯特频率，并绕到负频率项。因此，对于8点变换，结果的频率是 [0, 1,
    2, 3, -4, -3, -2, -1]。要重新排列fft输出，使零频率分量居中，如 [-4, -3, -2, -1, 0, 1, 2, 3]，使用 [`fftshift`](scipy.fft.fftshift.html#scipy.fft.fftshift
    "scipy.fft.fftshift")。
- en: Transforms can be done in single, double, or extended precision (long double)
    floating point. Half precision inputs will be converted to single precision and
    non-floating-point inputs will be converted to double precision.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 变换可以使用单精度、双精度或扩展精度（长双精度）浮点数完成。半精度输入将转换为单精度，非浮点输入将转换为双精度。
- en: If the data type of `x` is real, a “real FFT” algorithm is automatically used,
    which roughly halves the computation time. To increase efficiency a little further,
    use [`rfft`](scipy.fft.rfft.html#scipy.fft.rfft "scipy.fft.rfft"), which does
    the same calculation, but only outputs half of the symmetrical spectrum. If the
    data are both real and symmetrical, the [`dct`](scipy.fft.dct.html#scipy.fft.dct
    "scipy.fft.dct") can again double the efficiency, by generating half of the spectrum
    from half of the signal.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `x` 的数据类型是实数，则会自动使用“实FFT”算法，大致减少计算时间的一半。为了进一步提高效率，可以使用 [`rfft`](scipy.fft.rfft.html#scipy.fft.rfft
    "scipy.fft.rfft")，它执行相同的计算，但只输出对称频谱的一半。如果数据既是实数又是对称的，则 [`dct`](scipy.fft.dct.html#scipy.fft.dct
    "scipy.fft.dct") 可以再次将效率提升一倍，通过从信号的一半生成一半的频谱。
- en: When `overwrite_x=True` is specified, the memory referenced by `x` may be used
    by the implementation in any way. This may include reusing the memory for the
    result, but this is in no way guaranteed. You should not rely on the contents
    of `x` after the transform as this may change in future without warning.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 当指定 `overwrite_x=True` 时，`x` 引用的内存可能会被实现方式使用。这可能包括重用内存作为结果，但这并不保证。您不应依赖于变换后
    `x` 的内容，因为这可能会在未来更改而没有警告。
- en: The `workers` argument specifies the maximum number of parallel jobs to split
    the FFT computation into. This will execute independent 1-D FFTs within `x`. So,
    `x` must be at least 2-D and the non-transformed axes must be large enough to
    split into chunks. If `x` is too small, fewer jobs may be used than requested.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`workers` 参数指定要将FFT计算拆分为的最大并行作业数。这将在 `x` 中执行独立的1-D FFT。因此，`x` 必须至少是2-D，并且非变换的轴必须足够大，以便分成块。如果
    `x` 太小，则可能使用的作业数少于请求的数量。'
- en: References
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[1](#id1)]'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[[1](#id1)]'
- en: 'Cooley, James W., and John W. Tukey, 1965, “An algorithm for the machine calculation
    of complex Fourier series,” *Math. Comput.* 19: 297-301.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 'Cooley, James W. 和 John W. Tukey, 1965 年, “An algorithm for the machine calculation
    of complex Fourier series,” *Math. Comput.* 19: 297-301.'
- en: '[[2](#id2)]'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[[2](#id2)]'
- en: 'Bluestein, L., 1970, “A linear filtering approach to the computation of discrete
    Fourier transform”. *IEEE Transactions on Audio and Electroacoustics.* 18 (4):
    451-455.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 'Bluestein, L., 1970 年, “A linear filtering approach to the computation of discrete
    Fourier transform”. *IEEE Transactions on Audio and Electroacoustics.* 18 (4):
    451-455.'
- en: Examples
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE2]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In this example, real input has an FFT which is Hermitian, i.e., symmetric
    in the real part and anti-symmetric in the imaginary part:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，实数输入的FFT是Hermitian的，即在实部对称，在虚部反对称：
- en: '[PRE3]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![../../_images/scipy-fft-fft-1.png](../Images/804529bc158e9d5b55381632892c2333.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-fft-fft-1.png](../Images/804529bc158e9d5b55381632892c2333.png)'
