- en: scipy.signal.decimate
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.decimate.html#scipy.signal.decimate](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.decimate.html#scipy.signal.decimate)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Downsample the signal after applying an anti-aliasing filter.
  prefs: []
  type: TYPE_NORMAL
- en: By default, an order 8 Chebyshev type I filter is used. A 30 point FIR filter
    with Hamming window is used if *ftype* is ‘fir’.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The signal to be downsampled, as an N-dimensional array.
  prefs: []
  type: TYPE_NORMAL
- en: '**q**int'
  prefs: []
  type: TYPE_NORMAL
- en: The downsampling factor. When using IIR downsampling, it is recommended to call
    [`decimate`](#scipy.signal.decimate "scipy.signal.decimate") multiple times for
    downsampling factors higher than 13.
  prefs: []
  type: TYPE_NORMAL
- en: '**n**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The order of the filter (1 less than the length for ‘fir’). Defaults to 8 for
    ‘iir’ and 20 times the downsampling factor for ‘fir’.
  prefs: []
  type: TYPE_NORMAL
- en: '**ftype**str {‘iir’, ‘fir’} or `dlti` instance, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If ‘iir’ or ‘fir’, specifies the type of lowpass filter. If an instance of an
    [`dlti`](scipy.signal.dlti.html#scipy.signal.dlti "scipy.signal.dlti") object,
    uses that object to filter before downsampling.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The axis along which to decimate.
  prefs: []
  type: TYPE_NORMAL
- en: '**zero_phase**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Prevent phase shift by filtering with [`filtfilt`](scipy.signal.filtfilt.html#scipy.signal.filtfilt
    "scipy.signal.filtfilt") instead of [`lfilter`](scipy.signal.lfilter.html#scipy.signal.lfilter
    "scipy.signal.lfilter") when using an IIR filter, and shifting the outputs back
    by the filter’s group delay when using an FIR filter. The default value of `True`
    is recommended, since a phase shift is generally not desired.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.18.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**y**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The down-sampled signal.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`resample`](scipy.signal.resample.html#scipy.signal.resample "scipy.signal.resample")'
  prefs: []
  type: TYPE_NORMAL
- en: Resample up or down using the FFT method.
  prefs: []
  type: TYPE_NORMAL
- en: '[`resample_poly`](scipy.signal.resample_poly.html#scipy.signal.resample_poly
    "scipy.signal.resample_poly")'
  prefs: []
  type: TYPE_NORMAL
- en: Resample using polyphase filtering and an FIR filter.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The `zero_phase` keyword was added in 0.18.0. The possibility to use instances
    of `dlti` as `ftype` was added in 0.18.0.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Define wave parameters.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Calculate number of samples.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Create cosine wave.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Decimate cosine wave.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Plot original and decimated waves.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-signal-decimate-1.png](../Images/40b5a840651c90c2ff50063fc444c6b9.png)'
  prefs: []
  type: TYPE_IMG
