- en: scipy.stats.kstest
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.kstest.html#scipy.stats.kstest](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.kstest.html#scipy.stats.kstest)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Performs the (one-sample or two-sample) Kolmogorov-Smirnov test for goodness
    of fit.
  prefs: []
  type: TYPE_NORMAL
- en: The one-sample test compares the underlying distribution F(x) of a sample against
    a given distribution G(x). The two-sample test compares the underlying distributions
    of two independent samples. Both tests are valid only for continuous distributions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**rvs**str, array_like, or callable'
  prefs: []
  type: TYPE_NORMAL
- en: If an array, it should be a 1-D array of observations of random variables. If
    a callable, it should be a function to generate random variables; it is required
    to have a keyword argument *size*. If a string, it should be the name of a distribution
    in [`scipy.stats`](../stats.html#module-scipy.stats "scipy.stats"), which will
    be used to generate random variables.
  prefs: []
  type: TYPE_NORMAL
- en: '**cdf**str, array_like or callable'
  prefs: []
  type: TYPE_NORMAL
- en: If array_like, it should be a 1-D array of observations of random variables,
    and the two-sample test is performed (and rvs must be array_like). If a callable,
    that callable is used to calculate the cdf. If a string, it should be the name
    of a distribution in [`scipy.stats`](../stats.html#module-scipy.stats "scipy.stats"),
    which will be used as the cdf function.
  prefs: []
  type: TYPE_NORMAL
- en: '**args**tuple, sequence, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Distribution parameters, used if *rvs* or *cdf* are strings or callables.
  prefs: []
  type: TYPE_NORMAL
- en: '**N**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Sample size if *rvs* is string or callable. Default is 20.
  prefs: []
  type: TYPE_NORMAL
- en: '**alternative**{‘two-sided’, ‘less’, ‘greater’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Defines the null and alternative hypotheses. Default is ‘two-sided’. Please
    see explanations in the Notes below.
  prefs: []
  type: TYPE_NORMAL
- en: '**method**{‘auto’, ‘exact’, ‘approx’, ‘asymp’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Defines the distribution used for calculating the p-value. The following options
    are available (default is ‘auto’):'
  prefs: []
  type: TYPE_NORMAL
- en: '‘auto’ : selects one of the other options.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘exact’ : uses the exact distribution of test statistic.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘approx’ : approximates the two-sided probability with twice the one-sided
    probability'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘asymp’: uses asymptotic distribution of test statistic'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '**axis**int or None, default: 0'
  prefs: []
  type: TYPE_NORMAL
- en: If an int, the axis of the input along which to compute the statistic. The statistic
    of each axis-slice (e.g. row) of the input will appear in a corresponding element
    of the output. If `None`, the input will be raveled before computing the statistic.
  prefs: []
  type: TYPE_NORMAL
- en: '**nan_policy**{‘propagate’, ‘omit’, ‘raise’}'
  prefs: []
  type: TYPE_NORMAL
- en: Defines how to handle input NaNs.
  prefs: []
  type: TYPE_NORMAL
- en: '`propagate`: if a NaN is present in the axis slice (e.g. row) along which the
    statistic is computed, the corresponding entry of the output will be NaN.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`omit`: NaNs will be omitted when performing the calculation. If insufficient
    data remains in the axis slice along which the statistic is computed, the corresponding
    entry of the output will be NaN.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`raise`: if a NaN is present, a `ValueError` will be raised.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**keepdims**bool, default: False'
  prefs: []
  type: TYPE_NORMAL
- en: If this is set to True, the axes which are reduced are left in the result as
    dimensions with size one. With this option, the result will broadcast correctly
    against the input array.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: 'res: KstestResult'
  prefs: []
  type: TYPE_NORMAL
- en: 'An object containing attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: statisticfloat
  prefs: []
  type: TYPE_NORMAL
- en: KS test statistic, either D+, D-, or D (the maximum of the two)
  prefs: []
  type: TYPE_NORMAL
- en: pvaluefloat
  prefs: []
  type: TYPE_NORMAL
- en: One-tailed or two-tailed p-value.
  prefs: []
  type: TYPE_NORMAL
- en: statistic_locationfloat
  prefs: []
  type: TYPE_NORMAL
- en: In a one-sample test, this is the value of *rvs* corresponding with the KS statistic;
    i.e., the distance between the empirical distribution function and the hypothesized
    cumulative distribution function is measured at this observation.
  prefs: []
  type: TYPE_NORMAL
- en: In a two-sample test, this is the value from *rvs* or *cdf* corresponding with
    the KS statistic; i.e., the distance between the empirical distribution functions
    is measured at this observation.
  prefs: []
  type: TYPE_NORMAL
- en: statistic_signint
  prefs: []
  type: TYPE_NORMAL
- en: In a one-sample test, this is +1 if the KS statistic is the maximum positive
    difference between the empirical distribution function and the hypothesized cumulative
    distribution function (D+); it is -1 if the KS statistic is the maximum negative
    difference (D-).
  prefs: []
  type: TYPE_NORMAL
- en: In a two-sample test, this is +1 if the empirical distribution function of *rvs*
    exceeds the empirical distribution function of *cdf* at *statistic_location*,
    otherwise -1.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`ks_1samp`](scipy.stats.ks_1samp.html#scipy.stats.ks_1samp "scipy.stats.ks_1samp"),
    [`ks_2samp`](scipy.stats.ks_2samp.html#scipy.stats.ks_2samp "scipy.stats.ks_2samp")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: There are three options for the null and corresponding alternative hypothesis
    that can be selected using the *alternative* parameter.
  prefs: []
  type: TYPE_NORMAL
- en: '*two-sided*: The null hypothesis is that the two distributions are identical,
    F(x)=G(x) for all x; the alternative is that they are not identical.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*less*: The null hypothesis is that F(x) >= G(x) for all x; the alternative
    is that F(x) < G(x) for at least one x.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*greater*: The null hypothesis is that F(x) <= G(x) for all x; the alternative
    is that F(x) > G(x) for at least one x.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note that the alternative hypotheses describe the *CDFs* of the underlying distributions,
    not the observed values. For example, suppose x1 ~ F and x2 ~ G. If F(x) > G(x)
    for all x, the values in x1 tend to be less than those in x2.
  prefs: []
  type: TYPE_NORMAL
- en: Beginning in SciPy 1.9, `np.matrix` inputs (not recommended for new code) are
    converted to `np.ndarray` before the calculation is performed. In this case, the
    output will be a scalar or `np.ndarray` of appropriate shape rather than a 2D
    `np.matrix`. Similarly, while masked elements of masked arrays are ignored, the
    output will be a scalar or `np.ndarray` rather than a masked array with `mask=False`.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Suppose we wish to test the null hypothesis that a sample is distributed according
    to the standard normal. We choose a confidence level of 95%; that is, we will
    reject the null hypothesis in favor of the alternative if the p-value is less
    than 0.05.
  prefs: []
  type: TYPE_NORMAL
- en: When testing uniformly distributed data, we would expect the null hypothesis
    to be rejected.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Indeed, the p-value is lower than our threshold of 0.05, so we reject the null
    hypothesis in favor of the default “two-sided” alternative: the data are *not*
    distributed according to the standard normal.'
  prefs: []
  type: TYPE_NORMAL
- en: When testing random variates from the standard normal distribution, we expect
    the data to be consistent with the null hypothesis most of the time.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: As expected, the p-value of 0.92 is not below our threshold of 0.05, so we cannot
    reject the null hypothesis.
  prefs: []
  type: TYPE_NORMAL
- en: 'Suppose, however, that the random variates are distributed according to a normal
    distribution that is shifted toward greater values. In this case, the cumulative
    density function (CDF) of the underlying distribution tends to be *less* than
    the CDF of the standard normal. Therefore, we would expect the null hypothesis
    to be rejected with `alternative=''less''`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: and indeed, with p-value smaller than our threshold, we reject the null hypothesis
    in favor of the alternative.
  prefs: []
  type: TYPE_NORMAL
- en: For convenience, the previous test can be performed using the name of the distribution
    as the second argument.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The examples above have all been one-sample tests identical to those performed
    by [`ks_1samp`](scipy.stats.ks_1samp.html#scipy.stats.ks_1samp "scipy.stats.ks_1samp").
    Note that [`kstest`](#scipy.stats.kstest "scipy.stats.kstest") can also perform
    two-sample tests identical to those performed by [`ks_2samp`](scipy.stats.ks_2samp.html#scipy.stats.ks_2samp
    "scipy.stats.ks_2samp"). For example, when two samples are drawn from the same
    distribution, we expect the data to be consistent with the null hypothesis most
    of the time.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: As expected, the p-value of 0.45 is not below our threshold of 0.05, so we cannot
    reject the null hypothesis.
  prefs: []
  type: TYPE_NORMAL
