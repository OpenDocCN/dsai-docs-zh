- en: What’s new in 0.25.0 (July 18, 2019)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/whatsnew/v0.25.0.html](https://pandas.pydata.org/docs/whatsnew/v0.25.0.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: Starting with the 0.25.x series of releases, pandas only supports Python 3.5.3
    and higher. See [Dropping Python 2.7](https://pandas.pydata.org/pandas-docs/version/0.24/install.html#install-dropping-27)
    for more details.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: The minimum supported Python version will be bumped to 3.6 in a future release.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: '`Panel` has been fully removed. For N-D labeled data structures, please use
    [xarray](https://xarray.pydata.org/en/stable/)'
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: '`read_pickle()` and `read_msgpack()` are only guaranteed backwards compatible
    back to pandas version 0.20.3 ([GH 27082](https://github.com/pandas-dev/pandas/issues/27082))'
  prefs: []
  type: TYPE_NORMAL
- en: These are the changes in pandas 0.25.0\. See [Release notes](index.html#release)
    for a full changelog including other versions of pandas.
  prefs: []
  type: TYPE_NORMAL
- en: Enhancements
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### GroupBy aggregation with relabeling'
  prefs: []
  type: TYPE_NORMAL
- en: pandas has added special groupby behavior, known as “named aggregation”, for
    naming the output columns when applying multiple aggregation functions to specific
    columns ([GH 18366](https://github.com/pandas-dev/pandas/issues/18366), [GH 26512](https://github.com/pandas-dev/pandas/issues/26512)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Pass the desired columns names as the `**kwargs` to `.agg`. The values of `**kwargs`
    should be tuples where the first element is the column selection, and the second
    element is the aggregation function to apply. pandas provides the `pandas.NamedAgg`
    namedtuple to make it clearer what the arguments to the function are, but plain
    tuples are accepted as well.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Named aggregation is the recommended replacement for the deprecated “dict-of-dicts”
    approach to naming the output of column-specific aggregations ([Deprecate groupby.agg()
    with a dictionary when renaming](v0.20.0.html#whatsnew-0200-api-breaking-deprecate-group-agg-dict)).
  prefs: []
  type: TYPE_NORMAL
- en: A similar approach is now available for Series groupby objects as well. Because
    there’s no need for column selection, the values can just be the functions to
    apply
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: This type of aggregation is the recommended alternative to the deprecated behavior
    when passing a dict to a Series groupby aggregation ([Deprecate groupby.agg()
    with a dictionary when renaming](v0.20.0.html#whatsnew-0200-api-breaking-deprecate-group-agg-dict)).
  prefs: []
  type: TYPE_NORMAL
- en: 'See [Named aggregation](../user_guide/groupby.html#groupby-aggregate-named)
    for more.  ### GroupBy aggregation with multiple lambdas'
  prefs: []
  type: TYPE_NORMAL
- en: You can now provide multiple lambda functions to a list-like aggregation in
    `GroupBy.agg` ([GH 26430](https://github.com/pandas-dev/pandas/issues/26430)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Previously, these raised a `SpecificationError`.  ### Better repr for MultiIndex'
  prefs: []
  type: TYPE_NORMAL
- en: 'Printing of [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") instances now shows tuples of each row and ensures that the
    tuple items are vertically aligned, so it’s now easier to understand the structure
    of the `MultiIndex`. ([GH 13480](https://github.com/pandas-dev/pandas/issues/13480)):'
  prefs: []
  type: TYPE_NORMAL
- en: 'The repr now looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Previously, outputting a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") printed all the `levels` and `codes` of the `MultiIndex`,
    which was visually unappealing and made the output more difficult to navigate.
    For example (limiting the range to 5):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'In the new repr, all values will be shown, if the number of rows is smaller
    than `options.display.max_seq_items` (default: 100 items). Horizontally, the output
    will truncate, if it’s wider than `options.display.width` (default: 80 characters).  ###
    Shorter truncated repr for Series and DataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: 'Currently, the default display options of pandas ensure that when a Series
    or DataFrame has more than 60 rows, its repr gets truncated to this maximum of
    60 rows (the `display.max_rows` option). However, this still gives a repr that
    takes up a large part of the vertical screen estate. Therefore, a new option `display.min_rows`
    is introduced with a default of 10 which determines the number of rows showed
    in the truncated repr:'
  prefs: []
  type: TYPE_NORMAL
- en: 'For small Series or DataFrames, up to `max_rows` number of rows is shown (default:
    60).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For larger Series of DataFrame with a length above `max_rows`, only `min_rows`
    number of rows is shown (default: 10, i.e. the first and last 5 rows).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This dual option allows to still see the full content of relatively small objects
    (e.g. `df.head(20)` shows all 20 rows), while giving a brief repr for large objects.
  prefs: []
  type: TYPE_NORMAL
- en: 'To restore the previous behaviour of a single threshold, set `pd.options.display.min_rows
    = None`.  ### JSON normalize with max_level param support'
  prefs: []
  type: TYPE_NORMAL
- en: '[`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") normalizes the provided input dict to all nested levels.
    The new max_level parameter provides more control over which level to end normalization
    ([GH 23843](https://github.com/pandas-dev/pandas/issues/23843)):'
  prefs: []
  type: TYPE_NORMAL
- en: 'The repr now looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]  ### Series.explode to split list-like values to rows'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    have gained the [`DataFrame.explode()`](../reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode
    "pandas.DataFrame.explode") methods to transform list-likes to individual rows.
    See [section on Exploding list-like column](../user_guide/reshaping.html#reshaping-explode)
    in docs for more information ([GH 16538](https://github.com/pandas-dev/pandas/issues/16538),
    [GH 10511](https://github.com/pandas-dev/pandas/issues/10511))'
  prefs: []
  type: TYPE_NORMAL
- en: Here is a typical usecase. You have comma separated string in a column.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Creating a long form `DataFrame` is now straightforward using chained operations
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]  ### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") keywords `logy`, `logx` and `loglog` can now accept the
    value `''sym''` for symlog scaling. ([GH 24867](https://github.com/pandas-dev/pandas/issues/24867))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for ISO week year format (‘%G-%V-%u’) when parsing datetimes using
    [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") ([GH 16607](https://github.com/pandas-dev/pandas/issues/16607))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing of `DataFrame` and `Series` now accepts zerodim `np.ndarray` ([GH 24919](https://github.com/pandas-dev/pandas/issues/24919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp.replace()`](../reference/api/pandas.Timestamp.replace.html#pandas.Timestamp.replace
    "pandas.Timestamp.replace") now supports the `fold` argument to disambiguate DST
    transition times ([GH 25017](https://github.com/pandas-dev/pandas/issues/25017))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.at_time()`](../reference/api/pandas.DataFrame.at_time.html#pandas.DataFrame.at_time
    "pandas.DataFrame.at_time") and [`Series.at_time()`](../reference/api/pandas.Series.at_time.html#pandas.Series.at_time
    "pandas.Series.at_time") now support [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(in Python v3.12)") objects with timezones ([GH 24043](https://github.com/pandas-dev/pandas/issues/24043))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") now accepts an `observed` parameter which is passed
    to underlying calls to [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") to speed up grouping categorical data. ([GH 24923](https://github.com/pandas-dev/pandas/issues/24923))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.str` has gained [`Series.str.casefold()`](../reference/api/pandas.Series.str.casefold.html#pandas.Series.str.casefold
    "pandas.Series.str.casefold") method to removes all case distinctions present
    in a string ([GH 25405](https://github.com/pandas-dev/pandas/issues/25405))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.set_index()`](../reference/api/pandas.DataFrame.set_index.html#pandas.DataFrame.set_index
    "pandas.DataFrame.set_index") now works for instances of `abc.Iterator`, provided
    their output is of the same length as the calling frame ([GH 22484](https://github.com/pandas-dev/pandas/issues/22484),
    [GH 24984](https://github.com/pandas-dev/pandas/issues/24984))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.union()` now supports the `sort` argument. The behavior of the
    sort parameter matches that of [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") ([GH 24994](https://github.com/pandas-dev/pandas/issues/24994))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`RangeIndex.union()` now supports the `sort` argument. If `sort=False` an unsorted
    `Int64Index` is always returned. `sort=None` is the default and returns a monotonically
    increasing `RangeIndex` if possible or a sorted `Int64Index` if not ([GH 24471](https://github.com/pandas-dev/pandas/issues/24471))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`TimedeltaIndex.intersection()` now also supports the `sort` keyword ([GH 24471](https://github.com/pandas-dev/pandas/issues/24471))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.rename()`](../reference/api/pandas.DataFrame.rename.html#pandas.DataFrame.rename
    "pandas.DataFrame.rename") now supports the `errors` argument to raise errors
    when attempting to rename nonexistent keys ([GH 13473](https://github.com/pandas-dev/pandas/issues/13473))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [Sparse accessor](../reference/frame.html#api-frame-sparse) for working
    with a `DataFrame` whose values are sparse ([GH 25681](https://github.com/pandas-dev/pandas/issues/25681))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex "pandas.RangeIndex")
    has gained [`start`](../reference/api/pandas.RangeIndex.start.html#pandas.RangeIndex.start
    "pandas.RangeIndex.start"), [`stop`](../reference/api/pandas.RangeIndex.stop.html#pandas.RangeIndex.stop
    "pandas.RangeIndex.stop"), and [`step`](../reference/api/pandas.RangeIndex.step.html#pandas.RangeIndex.step
    "pandas.RangeIndex.step") attributes ([GH 25710](https://github.com/pandas-dev/pandas/issues/25710))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`datetime.timezone`](https://docs.python.org/3/library/datetime.html#datetime.timezone
    "(in Python v3.12)") objects are now supported as arguments to timezone methods
    and constructors ([GH 25065](https://github.com/pandas-dev/pandas/issues/25065))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") and [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") now supports quoting column names with backticks to refer
    to names with spaces ([GH 6508](https://github.com/pandas-dev/pandas/issues/6508))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") now gives a more clear error message when merge keys are
    categoricals that are not equal ([GH 26136](https://github.com/pandas-dev/pandas/issues/26136))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Rolling()` supports exponential (or Poisson) window type ([GH 21303](https://github.com/pandas-dev/pandas/issues/21303))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Error message for missing required imports now includes the original import
    error’s text ([GH 23868](https://github.com/pandas-dev/pandas/issues/23868))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") now have a `mean` method ([GH 24757](https://github.com/pandas-dev/pandas/issues/24757))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.describe()`](../reference/api/pandas.DataFrame.describe.html#pandas.DataFrame.describe
    "pandas.DataFrame.describe") now formats integer percentiles without decimal point
    ([GH 26660](https://github.com/pandas-dev/pandas/issues/26660))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for reading SPSS .sav files using [`read_spss()`](../reference/api/pandas.read_spss.html#pandas.read_spss
    "pandas.read_spss") ([GH 26537](https://github.com/pandas-dev/pandas/issues/26537))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added new option `plotting.backend` to be able to select a plotting backend
    different than the existing `matplotlib` one. Use `pandas.set_option('plotting.backend',
    '<backend-module>')` where `<backend-module` is a library implementing the pandas
    plotting API ([GH 14130](https://github.com/pandas-dev/pandas/issues/14130))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.offsets.BusinessHour` supports multiple opening hours intervals ([GH
    15481](https://github.com/pandas-dev/pandas/issues/15481))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") can now use `openpyxl` to read Excel files via the `engine=''openpyxl''`
    argument. This will become the default in a future release ([GH 11499](https://github.com/pandas-dev/pandas/issues/11499))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.io.excel.read_excel()` supports reading OpenDocument tables. Specify
    `engine=''odf''` to enable. Consult the [IO User Guide](../user_guide/io.html#io-ods)
    for more details ([GH 9070](https://github.com/pandas-dev/pandas/issues/9070))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Interval`](../reference/api/pandas.Interval.html#pandas.Interval "pandas.Interval"),
    [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex"), and [`IntervalArray`](../reference/api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray") have gained an [`is_empty`](../reference/api/pandas.Interval.is_empty.html#pandas.Interval.is_empty
    "pandas.Interval.is_empty") attribute denoting if the given interval(s) are empty
    ([GH 27219](https://github.com/pandas-dev/pandas/issues/27219))  ## Backwards
    incompatible API changes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Indexing with date strings with UTC offsets'
  prefs: []
  type: TYPE_NORMAL
- en: Indexing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with a date string with a UTC offset would previously
    ignore the UTC offset. Now, the UTC offset is respected in indexing. ([GH 24076](https://github.com/pandas-dev/pandas/issues/24076),
    [GH 16785](https://github.com/pandas-dev/pandas/issues/16785))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]  ### `MultiIndex` constructed from levels and codes'
  prefs: []
  type: TYPE_NORMAL
- en: Constructing a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with `NaN` levels or codes value < -1 was allowed previously.
    Now, construction with codes value < -1 is not allowed and `NaN` levels’ corresponding
    codes would be reassigned as -1\. ([GH 19387](https://github.com/pandas-dev/pandas/issues/19387))
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]  ### `GroupBy.apply` on `DataFrame` evaluates first group only once'
  prefs: []
  type: TYPE_NORMAL
- en: The implementation of [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") previously evaluated the supplied
    function consistently twice on the first group to infer if it is safe to use a
    fast code path. Particularly for functions with side effects, this was an undesired
    behavior and may have led to surprises. ([GH 2936](https://github.com/pandas-dev/pandas/issues/2936),
    [GH 2656](https://github.com/pandas-dev/pandas/issues/2656), [GH 7739](https://github.com/pandas-dev/pandas/issues/7739),
    [GH 10519](https://github.com/pandas-dev/pandas/issues/10519), [GH 12155](https://github.com/pandas-dev/pandas/issues/12155),
    [GH 20084](https://github.com/pandas-dev/pandas/issues/20084), [GH 21417](https://github.com/pandas-dev/pandas/issues/21417))
  prefs: []
  type: TYPE_NORMAL
- en: Now every group is evaluated only a single time.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Concatenating sparse values
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When passed DataFrames whose values are sparse, [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") will now return a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with sparse values, rather than a `SparseDataFrame` ([GH 25702](https://github.com/pandas-dev/pandas/issues/25702)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: This now matches the existing behavior of [`concat`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") on `Series` with sparse values. [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") will continue to return a `SparseDataFrame` when all the values
    are instances of `SparseDataFrame`.
  prefs: []
  type: TYPE_NORMAL
- en: This change also affects routines using [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") internally, like [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies"), which now returns a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") in all cases (previously a `SparseDataFrame` was returned
    if all the columns were dummy encoded, and a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") otherwise).
  prefs: []
  type: TYPE_NORMAL
- en: Providing any `SparseSeries` or `SparseDataFrame` to [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") will cause a `SparseSeries` or `SparseDataFrame` to be returned,
    as before.
  prefs: []
  type: TYPE_NORMAL
- en: The `.str`-accessor performs stricter type checks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Due to the lack of more fine-grained dtypes, [`Series.str`](../reference/api/pandas.Series.str.html#pandas.Series.str
    "pandas.Series.str") so far only checked whether the data was of `object` dtype.
    [`Series.str`](../reference/api/pandas.Series.str.html#pandas.Series.str "pandas.Series.str")
    will now infer the dtype data *within* the Series; in particular, `'bytes'`-only
    data will raise an exception (except for [`Series.str.decode()`](../reference/api/pandas.Series.str.decode.html#pandas.Series.str.decode
    "pandas.Series.str.decode"), [`Series.str.get()`](../reference/api/pandas.Series.str.get.html#pandas.Series.str.get
    "pandas.Series.str.get"), [`Series.str.len()`](../reference/api/pandas.Series.str.len.html#pandas.Series.str.len
    "pandas.Series.str.len"), [`Series.str.slice()`](../reference/api/pandas.Series.str.slice.html#pandas.Series.str.slice
    "pandas.Series.str.slice")), see [GH 23163](https://github.com/pandas-dev/pandas/issues/23163),
    [GH 23011](https://github.com/pandas-dev/pandas/issues/23011), [GH 23551](https://github.com/pandas-dev/pandas/issues/23551).
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '### Categorical dtypes are preserved during GroupBy'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, columns that were categorical, but not the groupby key(s) would
    be converted to `object` dtype during groupby operations. pandas now will preserve
    these dtypes. ([GH 18502](https://github.com/pandas-dev/pandas/issues/18502))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous Behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]  ### Incompatible Index type unions'
  prefs: []
  type: TYPE_NORMAL
- en: When performing [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") operations between objects of incompatible dtypes, the result
    will be a base [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    of dtype `object`. This behavior holds true for unions between [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") objects that previously would have been prohibited. The dtype
    of empty [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    objects will now be evaluated before performing union operations rather than simply
    returning the other [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") object. [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") can now be considered commutative, such that `A.union(B)
    == B.union(A)` ([GH 23525](https://github.com/pandas-dev/pandas/issues/23525)).
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: Note that integer- and floating-dtype indexes are considered “compatible”. The
    integer values are coerced to floating point, which may result in loss of precision.
    See [Set operations on Index objects](../user_guide/indexing.html#indexing-set-ops)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrame` GroupBy ffill/bfill no longer return group labels'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The methods `ffill`, `bfill`, `pad` and `backfill` of `DataFrameGroupBy` previously
    included the group labels in the return value, which was inconsistent with other
    groupby transforms. Now only the filled values are returned. ([GH 21521](https://github.com/pandas-dev/pandas/issues/21521))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: '`DataFrame` describe on an empty Categorical / object column will return top
    and freq'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When calling [`DataFrame.describe()`](../reference/api/pandas.DataFrame.describe.html#pandas.DataFrame.describe
    "pandas.DataFrame.describe") with an empty categorical / object column, the ‘top’
    and ‘freq’ columns were previously omitted, which was inconsistent with the output
    for non-empty columns. Now the ‘top’ and ‘freq’ columns will always be included,
    with `numpy.nan` in the case of an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 26397](https://github.com/pandas-dev/pandas/issues/26397))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: '`__str__` methods now call `__repr__` rather than vice versa'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: pandas has until now mostly defined string representations in a pandas objects’
    `__str__`/`__unicode__`/`__bytes__` methods, and called `__str__` from the `__repr__`
    method, if a specific `__repr__` method is not found. This is not needed for Python3.
    In pandas 0.25, the string representations of pandas objects are now generally
    defined in `__repr__`, and calls to `__str__` in general now pass the call on
    to the `__repr__`, if a specific `__str__` method doesn’t exist, as is standard
    for Python. This change is backward compatible for direct usage of pandas, but
    if you subclass pandas objects *and* give your subclasses specific `__str__`/`__repr__`
    methods, you may have to adjust your `__str__`/`__repr__` methods ([GH 26495](https://github.com/pandas-dev/pandas/issues/26495)).
  prefs: []
  type: TYPE_NORMAL
- en: '### Indexing an `IntervalIndex` with `Interval` objects'
  prefs: []
  type: TYPE_NORMAL
- en: Indexing methods for [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") have been modified to require exact matches only for [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") queries. `IntervalIndex` methods previously matched on any
    overlapping `Interval`. Behavior with scalar points, e.g. querying with an integer,
    is unchanged ([GH 16316](https://github.com/pandas-dev/pandas/issues/16316)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: The `in` operator (`__contains__`) now only returns `True` for exact matches
    to `Intervals` in the `IntervalIndex`, whereas this would previously return `True`
    for any `Interval` overlapping an `Interval` in the `IntervalIndex`.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: The [`get_loc()`](../reference/api/pandas.IntervalIndex.get_loc.html#pandas.IntervalIndex.get_loc
    "pandas.IntervalIndex.get_loc") method now only returns locations for exact matches
    to `Interval` queries, as opposed to the previous behavior of returning locations
    for overlapping matches. A `KeyError` will be raised if an exact match is not
    found.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: Likewise, [`get_indexer()`](../reference/api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer") and `get_indexer_non_unique()` will also only
    return locations for exact matches to `Interval` queries, with `-1` denoting that
    an exact match was not found.
  prefs: []
  type: TYPE_NORMAL
- en: These indexing changes extend to querying a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with an `IntervalIndex` index.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: Selecting from a `Series` or `DataFrame` using `[]` (`__getitem__`) or `loc`
    now only returns exact matches for `Interval` queries.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: Similarly, a `KeyError` will be raised for non-exact matches instead of returning
    overlapping matches.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: The [`overlaps()`](../reference/api/pandas.IntervalIndex.overlaps.html#pandas.IntervalIndex.overlaps
    "pandas.IntervalIndex.overlaps") method can be used to create a boolean indexer
    that replicates the previous behavior of returning overlapping matches.
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]  ### Binary ufuncs on Series now align'
  prefs: []
  type: TYPE_NORMAL
- en: Applying a binary ufunc like `numpy.power()` now aligns the inputs when both
    are [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    ([GH 23293](https://github.com/pandas-dev/pandas/issues/23293)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: This matches the behavior of other binary operations in pandas, like [`Series.add()`](../reference/api/pandas.Series.add.html#pandas.Series.add
    "pandas.Series.add"). To retain the previous behavior, convert the other `Series`
    to an array before applying the ufunc.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: Categorical.argsort now places missing values at the end
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`Categorical.argsort()` now places missing values at the end of the array,
    making it consistent with NumPy and the rest of pandas ([GH 21801](https://github.com/pandas-dev/pandas/issues/21801)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: '### Column order is preserved when passing a list of dicts to DataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: Starting with Python 3.7 the key-order of `dict` is [guaranteed](https://mail.python.org/pipermail/python-dev/2017-December/151283.html).
    In practice, this has been true since Python 3.6\. The [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor now treats a list of dicts in the same way as
    it does a list of `OrderedDict`, i.e. preserving the order of the dicts. This
    change applies only when pandas is running on Python>=3.6 ([GH 27309](https://github.com/pandas-dev/pandas/issues/27309)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous Behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: The columns were lexicographically sorted previously,
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: The column order now matches the insertion-order of the keys in the `dict`,
    considering all the records from top to bottom. As a consequence, the column order
    of the resulting DataFrame has changed compared to previous pandas versions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]  ### Increased minimum versions for dependencies'
  prefs: []
  type: TYPE_NORMAL
- en: 'Due to dropping support for Python 2.7, a number of optional dependencies have
    updated minimum versions ([GH 25725](https://github.com/pandas-dev/pandas/issues/25725),
    [GH 24942](https://github.com/pandas-dev/pandas/issues/24942), [GH 25752](https://github.com/pandas-dev/pandas/issues/25752)).
    Independently, some minimum supported versions of dependencies were updated ([GH
    23519](https://github.com/pandas-dev/pandas/issues/23519), [GH 25554](https://github.com/pandas-dev/pandas/issues/25554)).
    If installed, we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.13.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytz | 2015.4 | X |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.6.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.2.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.6.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pytest (dev) | 4.0.2 |  |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.6.0 |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.2.1 |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 0.2.2 |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 3.8.0 |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 2.2.2 |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 2.4.8 |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 0.9.0 |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 0.7.1 |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.4.2 |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 0.19.0 |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.1.4 |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.8.2 |'
  prefs: []
  type: TYPE_TB
- en: '| xlrd | 1.1.0 |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 0.9.8 |'
  prefs: []
  type: TYPE_TB
- en: '| xlwt | 1.2.0 |'
  prefs: []
  type: TYPE_TB
- en: 'See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.  ### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") will now standardize pytz timezones to a common timezone
    instance ([GH 24713](https://github.com/pandas-dev/pandas/issues/24713))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    and [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    scalars now implement the `to_numpy()` method as aliases to [`Timestamp.to_datetime64()`](../reference/api/pandas.Timestamp.to_datetime64.html#pandas.Timestamp.to_datetime64
    "pandas.Timestamp.to_datetime64") and [`Timedelta.to_timedelta64()`](../reference/api/pandas.Timedelta.to_timedelta64.html#pandas.Timedelta.to_timedelta64
    "pandas.Timedelta.to_timedelta64"), respectively. ([GH 24653](https://github.com/pandas-dev/pandas/issues/24653))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp.strptime()`](../reference/api/pandas.Timestamp.strptime.html#pandas.Timestamp.strptime
    "pandas.Timestamp.strptime") will now rise a `NotImplementedError` ([GH 25016](https://github.com/pandas-dev/pandas/issues/25016))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Comparing [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with unsupported objects now returns [`NotImplemented`](https://docs.python.org/3/library/constants.html#NotImplemented
    "(in Python v3.12)") instead of raising `TypeError`. This implies that unsupported
    rich comparisons are delegated to the other object, and are now consistent with
    Python 3 behavior for `datetime` objects ([GH 24011](https://github.com/pandas-dev/pandas/issues/24011))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex.snap()`](../reference/api/pandas.DatetimeIndex.snap.html#pandas.DatetimeIndex.snap
    "pandas.DatetimeIndex.snap") which didn’t preserving the `name` of the input [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 25575](https://github.com/pandas-dev/pandas/issues/25575))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `arg` argument in [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") has been renamed to `func` ([GH 26089](https://github.com/pandas-dev/pandas/issues/26089))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `arg` argument in `Window.aggregate()` has been renamed to `func` ([GH 26372](https://github.com/pandas-dev/pandas/issues/26372))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Most pandas classes had a `__bytes__` method, which was used for getting a python2-style
    bytestring representation of the object. This method has been removed as a part
    of dropping Python2 ([GH 26447](https://github.com/pandas-dev/pandas/issues/26447))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `.str`-accessor has been disabled for 1-level [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"), use [`MultiIndex.to_flat_index()`](../reference/api/pandas.MultiIndex.to_flat_index.html#pandas.MultiIndex.to_flat_index
    "pandas.MultiIndex.to_flat_index") if necessary ([GH 23679](https://github.com/pandas-dev/pandas/issues/23679))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed support of gtk package for clipboards ([GH 26563](https://github.com/pandas-dev/pandas/issues/26563))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using an unsupported version of Beautiful Soup 4 will now raise an `ImportError`
    instead of a `ValueError` ([GH 27063](https://github.com/pandas-dev/pandas/issues/27063))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.to_excel()`](../reference/api/pandas.Series.to_excel.html#pandas.Series.to_excel
    "pandas.Series.to_excel") and [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") will now raise a `ValueError` when saving timezone
    aware data. ([GH 27008](https://github.com/pandas-dev/pandas/issues/27008), [GH
    7056](https://github.com/pandas-dev/pandas/issues/7056))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExtensionArray.argsort()` places NA values at the end of the sorted array.
    ([GH 21801](https://github.com/pandas-dev/pandas/issues/21801))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_hdf()`](../reference/api/pandas.DataFrame.to_hdf.html#pandas.DataFrame.to_hdf
    "pandas.DataFrame.to_hdf") and [`Series.to_hdf()`](../reference/api/pandas.Series.to_hdf.html#pandas.Series.to_hdf
    "pandas.Series.to_hdf") will now raise a `NotImplementedError` when saving a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with extension data types for a `fixed` format. ([GH 7775](https://github.com/pandas-dev/pandas/issues/7775))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Passing duplicate `names` in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") will now raise a `ValueError` ([GH 17346](https://github.com/pandas-dev/pandas/issues/17346))  ##
    Deprecations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse subclasses
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `SparseSeries` and `SparseDataFrame` subclasses are deprecated. Their functionality
    is better-provided by a `Series` or `DataFrame` with sparse values.
  prefs: []
  type: TYPE_NORMAL
- en: '**Previous way**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: '**New way**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: The memory usage of the two approaches is identical ([GH 19239](https://github.com/pandas-dev/pandas/issues/19239)).
  prefs: []
  type: TYPE_NORMAL
- en: msgpack format
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The msgpack format is deprecated as of 0.25 and will be removed in a future
    version. It is recommended to use pyarrow for on-the-wire transmission of pandas
    objects. ([GH 27084](https://github.com/pandas-dev/pandas/issues/27084))
  prefs: []
  type: TYPE_NORMAL
- en: Other deprecations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The deprecated `.ix[]` indexer now raises a more visible `FutureWarning` instead
    of `DeprecationWarning` ([GH 26438](https://github.com/pandas-dev/pandas/issues/26438)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `units=M` (months) and `units=Y` (year) parameters for `units`
    of [`pandas.to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta"), [`pandas.Timedelta()`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") and [`pandas.TimedeltaIndex()`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") ([GH 16344](https://github.com/pandas-dev/pandas/issues/16344))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    has deprecated the `join_axes`-keyword. Instead, use [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") or [`DataFrame.reindex_like()`](../reference/api/pandas.DataFrame.reindex_like.html#pandas.DataFrame.reindex_like
    "pandas.DataFrame.reindex_like") on the result or on the inputs ([GH 21951](https://github.com/pandas-dev/pandas/issues/21951))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `SparseArray.values` attribute is deprecated. You can use `np.asarray(...)`
    or the `SparseArray.to_dense()` method instead ([GH 26421](https://github.com/pandas-dev/pandas/issues/26421)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The functions [`pandas.to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") and [`pandas.to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") have deprecated the `box` keyword. Instead, use `to_numpy()`
    or [`Timestamp.to_datetime64()`](../reference/api/pandas.Timestamp.to_datetime64.html#pandas.Timestamp.to_datetime64
    "pandas.Timestamp.to_datetime64") or [`Timedelta.to_timedelta64()`](../reference/api/pandas.Timedelta.to_timedelta64.html#pandas.Timedelta.to_timedelta64
    "pandas.Timedelta.to_timedelta64"). ([GH 24416](https://github.com/pandas-dev/pandas/issues/24416))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `DataFrame.compound()` and `Series.compound()` methods are deprecated and
    will be removed in a future version ([GH 26405](https://github.com/pandas-dev/pandas/issues/26405)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The internal attributes `_start`, `_stop` and `_step` attributes of [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") have been deprecated. Use the public attributes [`start`](../reference/api/pandas.RangeIndex.start.html#pandas.RangeIndex.start
    "pandas.RangeIndex.start"), [`stop`](../reference/api/pandas.RangeIndex.stop.html#pandas.RangeIndex.stop
    "pandas.RangeIndex.stop") and [`step`](../reference/api/pandas.RangeIndex.step.html#pandas.RangeIndex.step
    "pandas.RangeIndex.step") instead ([GH 26581](https://github.com/pandas-dev/pandas/issues/26581)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Series.ftype()`, `Series.ftypes()` and `DataFrame.ftypes()` methods are
    deprecated and will be removed in a future version. Instead, use [`Series.dtype()`](../reference/api/pandas.Series.dtype.html#pandas.Series.dtype
    "pandas.Series.dtype") and [`DataFrame.dtypes()`](../reference/api/pandas.DataFrame.dtypes.html#pandas.DataFrame.dtypes
    "pandas.DataFrame.dtypes") ([GH 26705](https://github.com/pandas-dev/pandas/issues/26705)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Series.get_values()`, `DataFrame.get_values()`, `Index.get_values()`, `SparseArray.get_values()`
    and `Categorical.get_values()` methods are deprecated. One of `np.asarray(..)`
    or [`to_numpy()`](../reference/api/pandas.Series.to_numpy.html#pandas.Series.to_numpy
    "pandas.Series.to_numpy") can be used instead ([GH 19617](https://github.com/pandas-dev/pandas/issues/19617)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The ‘outer’ method on NumPy ufuncs, e.g. `np.subtract.outer` has been deprecated
    on [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    objects. Convert the input to an array with [`Series.array`](../reference/api/pandas.Series.array.html#pandas.Series.array
    "pandas.Series.array") first ([GH 27186](https://github.com/pandas-dev/pandas/issues/27186))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timedelta.resolution()`](../reference/api/pandas.Timedelta.resolution.html#pandas.Timedelta.resolution
    "pandas.Timedelta.resolution") is deprecated and replaced with `Timedelta.resolution_string()`.
    In a future version, [`Timedelta.resolution()`](../reference/api/pandas.Timedelta.resolution.html#pandas.Timedelta.resolution
    "pandas.Timedelta.resolution") will be changed to behave like the standard library
    [`datetime.timedelta.resolution`](https://docs.python.org/3/library/datetime.html#datetime.timedelta.resolution
    "(in Python v3.12)") ([GH 21344](https://github.com/pandas-dev/pandas/issues/21344))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") has been undeprecated. ([GH 25220](https://github.com/pandas-dev/pandas/issues/25220))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Index.dtype_str` is deprecated. ([GH 18262](https://github.com/pandas-dev/pandas/issues/18262))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.imag` and `Series.real` are deprecated. ([GH 18262](https://github.com/pandas-dev/pandas/issues/18262))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.put()` is deprecated. ([GH 18262](https://github.com/pandas-dev/pandas/issues/18262))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.item()`](../reference/api/pandas.Index.item.html#pandas.Index.item
    "pandas.Index.item") and [`Series.item()`](../reference/api/pandas.Series.item.html#pandas.Series.item
    "pandas.Series.item") is deprecated. ([GH 18262](https://github.com/pandas-dev/pandas/issues/18262))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The default value `ordered=None` in `CategoricalDtype` has been deprecated in
    favor of `ordered=False`. When converting between categorical types `ordered=True`
    must be explicitly passed in order to be preserved. ([GH 26336](https://github.com/pandas-dev/pandas/issues/26336))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Index.contains()` is deprecated. Use `key in index` (`__contains__`) instead
    ([GH 17753](https://github.com/pandas-dev/pandas/issues/17753)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.get_dtype_counts()` is deprecated. ([GH 18262](https://github.com/pandas-dev/pandas/issues/18262))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.ravel()` will return a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") instead of a `np.ndarray` ([GH 27199](https://github.com/pandas-dev/pandas/issues/27199))  ##
    Removal of prior version deprecations/changes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Panel` ([GH 25047](https://github.com/pandas-dev/pandas/issues/25047),
    [GH 25191](https://github.com/pandas-dev/pandas/issues/25191), [GH 25231](https://github.com/pandas-dev/pandas/issues/25231))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `sheetname` keyword in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") ([GH 16442](https://github.com/pandas-dev/pandas/issues/16442),
    [GH 20938](https://github.com/pandas-dev/pandas/issues/20938))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `TimeGrouper` ([GH 16942](https://github.com/pandas-dev/pandas/issues/16942))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `parse_cols` keyword in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") ([GH 16488](https://github.com/pandas-dev/pandas/issues/16488))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `pd.options.html.border` ([GH 16970](https://github.com/pandas-dev/pandas/issues/16970))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `convert_objects` ([GH 11221](https://github.com/pandas-dev/pandas/issues/11221))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `select` method of `DataFrame` and `Series`
    ([GH 17633](https://github.com/pandas-dev/pandas/issues/17633))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated behavior of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") treated as list-like in [`rename_categories()`](../reference/api/pandas.Series.cat.rename_categories.html#pandas.Series.cat.rename_categories
    "pandas.Series.cat.rename_categories") ([GH 17982](https://github.com/pandas-dev/pandas/issues/17982))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `DataFrame.reindex_axis` and `Series.reindex_axis`
    ([GH 17842](https://github.com/pandas-dev/pandas/issues/17842))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated behavior of altering column or index labels
    with [`Series.rename_axis()`](../reference/api/pandas.Series.rename_axis.html#pandas.Series.rename_axis
    "pandas.Series.rename_axis") or [`DataFrame.rename_axis()`](../reference/api/pandas.DataFrame.rename_axis.html#pandas.DataFrame.rename_axis
    "pandas.DataFrame.rename_axis") ([GH 17842](https://github.com/pandas-dev/pandas/issues/17842))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `tupleize_cols` keyword argument in [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html"), [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), and [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") ([GH 17877](https://github.com/pandas-dev/pandas/issues/17877),
    [GH 17820](https://github.com/pandas-dev/pandas/issues/17820))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `DataFrame.from.csv` and `Series.from_csv`
    ([GH 17812](https://github.com/pandas-dev/pandas/issues/17812))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `raise_on_error` keyword argument in [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") and [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask") ([GH 17744](https://github.com/pandas-dev/pandas/issues/17744))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `ordered` and `categories` keyword arguments
    in `astype` ([GH 17742](https://github.com/pandas-dev/pandas/issues/17742))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `cdate_range` ([GH 17691](https://github.com/pandas-dev/pandas/issues/17691))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `True` option for the `dropna` keyword argument
    in `SeriesGroupBy.nth()` ([GH 17493](https://github.com/pandas-dev/pandas/issues/17493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `convert` keyword argument in [`Series.take()`](../reference/api/pandas.Series.take.html#pandas.Series.take
    "pandas.Series.take") and [`DataFrame.take()`](../reference/api/pandas.DataFrame.take.html#pandas.DataFrame.take
    "pandas.DataFrame.take") ([GH 17352](https://github.com/pandas-dev/pandas/issues/17352))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Removed the previously deprecated behavior of arithmetic operations with `datetime.date`
    objects ([GH 21152](https://github.com/pandas-dev/pandas/issues/21152))  ## Performance
    improvements'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Significant speedup in `SparseArray` initialization that benefits most operations,
    fixing performance regression introduced in v0.20.0 ([GH 24985](https://github.com/pandas-dev/pandas/issues/24985))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") is now faster when outputting data with any string
    or non-native endian columns ([GH 25045](https://github.com/pandas-dev/pandas/issues/25045))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`Series.searchsorted()`](../reference/api/pandas.Series.searchsorted.html#pandas.Series.searchsorted
    "pandas.Series.searchsorted"). The speedup is especially large when the dtype
    is int8/int16/int32 and the searched key is within the integer bounds for the
    dtype ([GH 22034](https://github.com/pandas-dev/pandas/issues/22034))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `GroupBy.quantile()` ([GH 20405](https://github.com/pandas-dev/pandas/issues/20405))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of slicing and other selected operation on a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") ([GH 26565](https://github.com/pandas-dev/pandas/issues/26565),
    [GH 26617](https://github.com/pandas-dev/pandas/issues/26617), [GH 26722](https://github.com/pandas-dev/pandas/issues/26722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex "pandas.RangeIndex")
    now performs standard lookup without instantiating an actual hashtable, hence
    saving memory ([GH 16685](https://github.com/pandas-dev/pandas/issues/16685))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") by faster tokenizing and faster parsing of small float numbers
    ([GH 25784](https://github.com/pandas-dev/pandas/issues/25784))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") by faster parsing of N/A and boolean values ([GH 25804](https://github.com/pandas-dev/pandas/issues/25804))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `IntervalIndex.is_monotonic`, `IntervalIndex.is_monotonic_increasing`
    and `IntervalIndex.is_monotonic_decreasing` by removing conversion to [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 24813](https://github.com/pandas-dev/pandas/issues/24813))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") when writing datetime dtypes ([GH 25708](https://github.com/pandas-dev/pandas/issues/25708))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") by much faster parsing of `MM/YYYY` and `DD/MM/YYYY` datetime
    formats ([GH 25922](https://github.com/pandas-dev/pandas/issues/25922))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of nanops for dtypes that cannot store NaNs. Speedup is
    particularly prominent for [`Series.all()`](../reference/api/pandas.Series.all.html#pandas.Series.all
    "pandas.Series.all") and [`Series.any()`](../reference/api/pandas.Series.any.html#pandas.Series.any
    "pandas.Series.any") ([GH 25070](https://github.com/pandas-dev/pandas/issues/25070))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") for dictionary mappers on categorical series by mapping the
    categories instead of mapping all values ([GH 23785](https://github.com/pandas-dev/pandas/issues/23785))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `IntervalIndex.intersection()` ([GH 24813](https://github.com/pandas-dev/pandas/issues/24813))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") by faster concatenating date columns without extra conversion
    to string for integer/float zero and float `NaN`; by faster checking the string
    for the possibility of being a date ([GH 25754](https://github.com/pandas-dev/pandas/issues/25754))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `IntervalIndex.is_unique` by removing conversion to
    `MultiIndex` ([GH 24813](https://github.com/pandas-dev/pandas/issues/24813))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Restored performance of `DatetimeIndex.__iter__()` by re-enabling specialized
    code path ([GH 26702](https://github.com/pandas-dev/pandas/issues/26702))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance when building [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with at least one [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") level ([GH 22044](https://github.com/pandas-dev/pandas/issues/22044))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance by removing the need for a garbage collect when checking
    for `SettingWithCopyWarning` ([GH 27031](https://github.com/pandas-dev/pandas/issues/27031))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") changed default value of cache parameter to `True` ([GH
    26043](https://github.com/pandas-dev/pandas/issues/26043))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") slicing given non-unique, monotonic data ([GH 27136](https://github.com/pandas-dev/pandas/issues/27136)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `pd.read_json()` for index-oriented data. ([GH 26773](https://github.com/pandas-dev/pandas/issues/26773))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Improved performance of `MultiIndex.shape()` ([GH 27384](https://github.com/pandas-dev/pandas/issues/27384)).  ##
    Bug fixes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.at()`](../reference/api/pandas.DataFrame.at.html#pandas.DataFrame.at
    "pandas.DataFrame.at") and [`Series.at()`](../reference/api/pandas.Series.at.html#pandas.Series.at
    "pandas.Series.at") that would raise exception if the index was a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 20629](https://github.com/pandas-dev/pandas/issues/20629))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in comparison of ordered [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") that contained missing values with a scalar which sometimes
    incorrectly resulted in `True` ([GH 26504](https://github.com/pandas-dev/pandas/issues/26504))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") when the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") containing [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") objects incorrectly raised a `TypeError` ([GH 25087](https://github.com/pandas-dev/pandas/issues/25087))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") which would raise an (incorrect) `ValueError` when called
    with a date far into the future and the `format` argument specified instead of
    raising `OutOfBoundsDatetime` ([GH 23830](https://github.com/pandas-dev/pandas/issues/23830))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") which would raise `InvalidIndexError: Reindexing only valid
    with uniquely valued Index objects` when called with `cache=True`, with `arg`
    including at least two different elements from the set `{None, numpy.nan, pandas.NaT}`
    ([GH 22305](https://github.com/pandas-dev/pandas/issues/22305))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") where timezone aware data with `dtype='datetime64[ns]` was not
    cast to naive ([GH 25843](https://github.com/pandas-dev/pandas/issues/25843))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") type checking in various datetime functions to prevent exceptions
    when using a subclassed `datetime` ([GH 25851](https://github.com/pandas-dev/pandas/issues/25851))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    repr where `np.datetime64('NaT')` and `np.timedelta64('NaT')` with `dtype=object`
    would be represented as `NaN` ([GH 25445](https://github.com/pandas-dev/pandas/issues/25445))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") which does not replace the invalid argument with `NaT` when
    error is set to coerce ([GH 26122](https://github.com/pandas-dev/pandas/issues/26122))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in adding `DateOffset` with nonzero month to [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") would raise `ValueError` ([GH 26258](https://github.com/pandas-dev/pandas/issues/26258))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") which raises unhandled `OverflowError` when called with
    mix of invalid dates and `NaN` values with `format='%Y%m%d'` and `error='coerce'`
    ([GH 25512](https://github.com/pandas-dev/pandas/issues/25512))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `isin()` for datetimelike indexes; [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") and [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") where the `levels` parameter was ignored. ([GH 26675](https://github.com/pandas-dev/pandas/issues/26675))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") which raises `TypeError` for `format='%Y%m%d'` when called
    for invalid integer dates with length >= 6 digits with `errors='ignore'`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when comparing a [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") against a zero-dimensional numpy array ([GH 26689](https://github.com/pandas-dev/pandas/issues/26689))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a `Series` or `DataFrame` from a numpy `datetime64` array
    with a non-ns unit and out-of-bound timestamps generating rubbish data, which
    will now correctly raise an `OutOfBoundsDatetime` error ([GH 26206](https://github.com/pandas-dev/pandas/issues/26206)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") with unnecessary `OverflowError` being raised for very large
    or very small dates ([GH 26651](https://github.com/pandas-dev/pandas/issues/26651))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where adding [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") to a `np.timedelta64` object would raise instead of returning
    a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    ([GH 24775](https://github.com/pandas-dev/pandas/issues/24775))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where comparing a zero-dimensional numpy array containing a `np.datetime64`
    object to a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") would incorrect raise `TypeError` ([GH 26916](https://github.com/pandas-dev/pandas/issues/26916))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") which would raise `ValueError: Tz-aware datetime.datetime
    cannot be converted to datetime64 unless utc=True` when called with `cache=True`,
    with `arg` including datetime strings with different offset ([GH 26097](https://github.com/pandas-dev/pandas/issues/26097))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `TimedeltaIndex.intersection()` where for non-monotonic indices in some
    cases an empty `Index` was returned when in fact an intersection existed ([GH
    25913](https://github.com/pandas-dev/pandas/issues/25913))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug with comparisons between [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") and `NaT` raising `TypeError` ([GH 26039](https://github.com/pandas-dev/pandas/issues/26039))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when adding or subtracting a `BusinessHour` to a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with the resulting time landing in a following or prior day
    respectively ([GH 26381](https://github.com/pandas-dev/pandas/issues/26381))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when comparing a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") against a zero-dimensional numpy array ([GH 26689](https://github.com/pandas-dev/pandas/issues/26689))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex.to_frame()`](../reference/api/pandas.DatetimeIndex.to_frame.html#pandas.DatetimeIndex.to_frame
    "pandas.DatetimeIndex.to_frame") where timezone aware data would be converted
    to timezone naive data ([GH 25809](https://github.com/pandas-dev/pandas/issues/25809))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `utc=True` and datetime strings that would apply previously
    parsed UTC offsets to subsequent arguments ([GH 24992](https://github.com/pandas-dev/pandas/issues/24992))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.tz_localize()`](../reference/api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize") and [`Timestamp.tz_convert()`](../reference/api/pandas.Timestamp.tz_convert.html#pandas.Timestamp.tz_convert
    "pandas.Timestamp.tz_convert") does not propagate `freq` ([GH 25241](https://github.com/pandas-dev/pandas/issues/25241))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.at()`](../reference/api/pandas.Series.at.html#pandas.Series.at
    "pandas.Series.at") where setting [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with timezone raises `TypeError` ([GH 25506](https://github.com/pandas-dev/pandas/issues/25506))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.update()`](../reference/api/pandas.DataFrame.update.html#pandas.DataFrame.update
    "pandas.DataFrame.update") when updating with timezone aware data would return
    timezone naive data ([GH 25807](https://github.com/pandas-dev/pandas/issues/25807))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") where an uninformative `RuntimeError` was raised when passing
    a naive [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with datetime strings with mixed UTC offsets ([GH 25978](https://github.com/pandas-dev/pandas/issues/25978))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `unit='ns'` would drop timezone information from the
    parsed argument ([GH 26168](https://github.com/pandas-dev/pandas/issues/26168))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") where joining a timezone aware index with a timezone
    aware column would result in a column of `NaN` ([GH 26335](https://github.com/pandas-dev/pandas/issues/26335))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") where ambiguous or nonexistent start or end times were not
    handled by the `ambiguous` or `nonexistent` keywords respectively ([GH 27088](https://github.com/pandas-dev/pandas/issues/27088))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.union()` when combining a timezone aware and timezone
    unaware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 21671](https://github.com/pandas-dev/pandas/issues/21671))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when applying a numpy reduction function (e.g. `numpy.minimum()`) to a timezone
    aware [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    ([GH 15552](https://github.com/pandas-dev/pandas/issues/15552))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") in which large negative numbers were being improperly handled
    ([GH 24910](https://github.com/pandas-dev/pandas/issues/24910))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") in which numbers were being coerced to float, even though
    `errors` was not `coerce` ([GH 24910](https://github.com/pandas-dev/pandas/issues/24910))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") in which invalid values for `errors` were being allowed ([GH
    26466](https://github.com/pandas-dev/pandas/issues/26466))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `format` in which floating point complex numbers were not being formatted
    to proper display precision and trimming ([GH 25514](https://github.com/pandas-dev/pandas/issues/25514))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in error messages in [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr") and [`Series.corr()`](../reference/api/pandas.Series.corr.html#pandas.Series.corr
    "pandas.Series.corr"). Added the possibility of using a callable. ([GH 25729](https://github.com/pandas-dev/pandas/issues/25729))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.divmod()` and `Series.rdivmod()` which would raise an (incorrect)
    `ValueError` rather than return a pair of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") objects as result ([GH 25557](https://github.com/pandas-dev/pandas/issues/25557))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Raises a helpful exception when a non-numeric index is sent to `interpolate()`
    with methods which require numeric index. ([GH 21662](https://github.com/pandas-dev/pandas/issues/21662))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in [`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval")
    when comparing floats with scalar operators, for example: `x < -0.1` ([GH 25928](https://github.com/pandas-dev/pandas/issues/25928))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where casting all-boolean array to integer extension array failed
    ([GH 25211](https://github.com/pandas-dev/pandas/issues/25211))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `divmod` with a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") object containing zeros incorrectly raising `AttributeError`
    ([GH 26987](https://github.com/pandas-dev/pandas/issues/26987))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Inconsistency in [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") floor-division (//) and `divmod` filling positive//zero with
    `NaN` instead of `Inf` ([GH 27321](https://github.com/pandas-dev/pandas/issues/27321))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") when passing a dict of columns and types the `errors`
    parameter was ignored. ([GH 25905](https://github.com/pandas-dev/pandas/issues/25905))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in the `__name__` attribute of several methods of [`Series.str`](../reference/api/pandas.Series.str.html#pandas.Series.str
    "pandas.Series.str"), which were set incorrectly ([GH 23551](https://github.com/pandas-dev/pandas/issues/23551))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when passing [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") of wrong dtype to [`Series.str.cat()`](../reference/api/pandas.Series.str.cat.html#pandas.Series.str.cat
    "pandas.Series.str.cat") ([GH 22722](https://github.com/pandas-dev/pandas/issues/22722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Construction of [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") is restricted to numeric, [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") and [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") endpoints ([GH 23013](https://github.com/pandas-dev/pandas/issues/23013))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")/[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") not displaying `NaN` in [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") with missing values ([GH 25984](https://github.com/pandas-dev/pandas/issues/25984))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.get_loc()`](../reference/api/pandas.IntervalIndex.get_loc.html#pandas.IntervalIndex.get_loc
    "pandas.IntervalIndex.get_loc") where a `KeyError` would be incorrectly raised
    for a decreasing [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") ([GH 25860](https://github.com/pandas-dev/pandas/issues/25860))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    constructor where passing mixed closed [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") objects would result in a `ValueError` instead of an `object`
    dtype `Index` ([GH 27172](https://github.com/pandas-dev/pandas/issues/27172))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Improved exception message when calling [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") with a list of non-numeric objects ([GH 25753](https://github.com/pandas-dev/pandas/issues/25753)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved exception message when calling `.iloc` or `.loc` with a boolean indexer
    with different length ([GH 26658](https://github.com/pandas-dev/pandas/issues/26658)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `KeyError` exception message when indexing a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with a non-existent key not displaying the original key ([GH
    27250](https://github.com/pandas-dev/pandas/issues/27250)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.iloc` and `.loc` with a boolean indexer not raising an `IndexError`
    when too few items are passed ([GH 26658](https://github.com/pandas-dev/pandas/issues/26658)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") where `KeyError` was not raised for a `MultiIndex` when the
    key was less than or equal to the number of levels in the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 14885](https://github.com/pandas-dev/pandas/issues/14885)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in which `DataFrame.append()` produced an erroneous warning indicating that
    a `KeyError` will be thrown in the future when the data to be appended contains
    new columns ([GH 22252](https://github.com/pandas-dev/pandas/issues/22252)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in which [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") caused a segfault for a reindexed data frame, when
    the indices were single-level [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 26303](https://github.com/pandas-dev/pandas/issues/26303)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where assigning a `arrays.PandasArray` to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") would raise error ([GH 26390](https://github.com/pandas-dev/pandas/issues/26390))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow keyword arguments for callable local reference used in the [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") string ([GH 26426](https://github.com/pandas-dev/pandas/issues/26426))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed a `KeyError` when indexing a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") level with a list containing exactly one label, which is
    missing ([GH 27148](https://github.com/pandas-dev/pandas/issues/27148))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug which produced `AttributeError` on partial matching [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") in a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 26944](https://github.com/pandas-dev/pandas/issues/26944))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") and [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") with [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") values when using the `in` operator (`__contains`) with objects
    that are not comparable to the values in the `Interval` ([GH 23705](https://github.com/pandas-dev/pandas/issues/23705))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a single timezone-aware datetime64[ns] column incorrectly
    returning a scalar instead of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 27110](https://github.com/pandas-dev/pandas/issues/27110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") and [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") incorrectly raising `ValueError` instead of `TypeError`
    when a list is passed using the `in` operator (`__contains__`) ([GH 21729](https://github.com/pandas-dev/pandas/issues/21729))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting a new value in a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") object incorrectly casting the value to an integer ([GH 22717](https://github.com/pandas-dev/pandas/issues/22717))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    setting a new key (`__setitem__`) with a timezone-aware datetime incorrectly raising
    `ValueError` ([GH 12862](https://github.com/pandas-dev/pandas/issues/12862))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") when indexing with a read-only indexer ([GH 17192](https://github.com/pandas-dev/pandas/issues/17192))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    setting an existing tuple key (`__setitem__`) with timezone-aware datetime values
    incorrectly raising `TypeError` ([GH 20441](https://github.com/pandas-dev/pandas/issues/20441))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fixed misleading exception message in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") if argument `order` is required, but omitted ([GH
    10633](https://github.com/pandas-dev/pandas/issues/10633), [GH 24014](https://github.com/pandas-dev/pandas/issues/24014)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed class type displayed in exception message in [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") if invalid `axis` parameter passed ([GH 25555](https://github.com/pandas-dev/pandas/issues/25555))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A `ValueError` will now be thrown by [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") when `limit` is not a positive integer ([GH 27042](https://github.com/pandas-dev/pandas/issues/27042))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in which incorrect exception raised by [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") when testing the membership of [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 24570](https://github.com/pandas-dev/pandas/issues/24570))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IO
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") where values were truncated using display options
    instead of outputting the full content ([GH 17004](https://github.com/pandas-dev/pandas/issues/17004))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in missing text when using `to_clipboard()` if copying utf-16 characters
    in Python 3 on Windows ([GH 25040](https://github.com/pandas-dev/pandas/issues/25040))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") for `orient='table'` when it tries to infer dtypes by default,
    which is not applicable as dtypes are already defined in the JSON schema ([GH
    21345](https://github.com/pandas-dev/pandas/issues/21345))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") for `orient='table'` and float index, as it infers index dtype
    by default, which is not applicable because index dtype is already defined in
    the JSON schema ([GH 25433](https://github.com/pandas-dev/pandas/issues/25433))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") for `orient='table'` and string of float column names, as
    it makes a column name type conversion to [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp"), which is not applicable because column names are already
    defined in the JSON schema ([GH 25435](https://github.com/pandas-dev/pandas/issues/25435))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") for `errors='ignore'` where missing values in the input
    data, were filled in resulting `DataFrame` with the string `"nan"` instead of
    `numpy.nan` ([GH 25468](https://github.com/pandas-dev/pandas/issues/25468))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") now raises `TypeError` when using an invalid type
    for the `classes` parameter instead of `AssertionError` ([GH 25608](https://github.com/pandas-dev/pandas/issues/25608))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") and [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") that would lead to incorrect output when the `header`
    keyword is used ([GH 16718](https://github.com/pandas-dev/pandas/issues/16718))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not properly interpreting the UTF8 encoded filenames on Windows
    on Python 3.6+ ([GH 15086](https://github.com/pandas-dev/pandas/issues/15086))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance in [`pandas.read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") and `pandas.io.stata.StataReader` when converting columns
    that have missing values ([GH 25772](https://github.com/pandas-dev/pandas/issues/25772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") where header numbers would ignore display options
    when rounding ([GH 17280](https://github.com/pandas-dev/pandas/issues/17280))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") where reading a table from an HDF5 file written directly with
    PyTables fails with a `ValueError` when using a sub-selection via the `start`
    or `stop` arguments ([GH 11188](https://github.com/pandas-dev/pandas/issues/11188))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") not properly closing store after a `KeyError` is raised ([GH
    25766](https://github.com/pandas-dev/pandas/issues/25766))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved the explanation for the failure when value labels are repeated in Stata
    dta files and suggested work-arounds ([GH 25772](https://github.com/pandas-dev/pandas/issues/25772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved [`pandas.read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") and `pandas.io.stata.StataReader` to read incorrectly formatted
    118 format files saved by Stata ([GH 25960](https://github.com/pandas-dev/pandas/issues/25960))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved the `col_space` parameter in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") to accept a string so CSS length values can be set
    correctly ([GH 25941](https://github.com/pandas-dev/pandas/issues/25941))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in loading objects from S3 that contain `#` characters in the URL
    ([GH 25945](https://github.com/pandas-dev/pandas/issues/25945))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adds `use_bqstorage_api` parameter to [`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq
    "pandas.read_gbq") to speed up downloads of large data frames. This feature requires
    version 0.10.0 of the `pandas-gbq` library as well as the `google-cloud-bigquery-storage`
    and `fastavro` libraries. ([GH 26104](https://github.com/pandas-dev/pandas/issues/26104))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed memory leak in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") when dealing with numeric data ([GH 24889](https://github.com/pandas-dev/pandas/issues/24889))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") where date strings with `Z` were not converted to a UTC timezone
    ([GH 26168](https://github.com/pandas-dev/pandas/issues/26168))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `cache_dates=True` parameter to [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), which allows to cache unique dates when they are parsed ([GH
    25990](https://github.com/pandas-dev/pandas/issues/25990))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") now raises a `ValueError` when the caller’s dimensions
    exceed the limitations of Excel ([GH 26051](https://github.com/pandas-dev/pandas/issues/26051))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`pandas.read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where a BOM would result in incorrect parsing using engine=’python’
    ([GH 26545](https://github.com/pandas-dev/pandas/issues/26545))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") now raises a `ValueError` when input is of type `pandas.io.excel.ExcelFile`
    and `engine` param is passed since `pandas.io.excel.ExcelFile` has an engine defined
    ([GH 26566](https://github.com/pandas-dev/pandas/issues/26566))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug while selecting from `HDFStore` with `where=''` specified ([GH 26610](https://github.com/pandas-dev/pandas/issues/26610)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") where custom objects (i.e. `PeriodIndex`) inside
    merged cells were not being converted into types safe for the Excel writer ([GH
    27006](https://github.com/pandas-dev/pandas/issues/27006))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") where reading a timezone aware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") would raise a `TypeError` ([GH 11926](https://github.com/pandas-dev/pandas/issues/11926))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `to_msgpack()` and `read_msgpack()` which would raise a `ValueError`
    rather than a `FileNotFoundError` for an invalid path ([GH 27160](https://github.com/pandas-dev/pandas/issues/27160))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") which would raise a `ValueError` when the dataframe
    had no columns ([GH 27339](https://github.com/pandas-dev/pandas/issues/27339))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow parsing of [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") columns when using [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") ([GH 26934](https://github.com/pandas-dev/pandas/issues/26934))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fixed bug where [`api.extensions.ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") could not be used in matplotlib plotting
    ([GH 25587](https://github.com/pandas-dev/pandas/issues/25587))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in an error message in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot"). Improved the error message if non-numerics are passed
    to [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") ([GH 25481](https://github.com/pandas-dev/pandas/issues/25481))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in incorrect ticklabel positions when plotting an index that are non-numeric
    / non-datetime ([GH 7612](https://github.com/pandas-dev/pandas/issues/7612), [GH
    15912](https://github.com/pandas-dev/pandas/issues/15912), [GH 22334](https://github.com/pandas-dev/pandas/issues/22334))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug causing plots of [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") timeseries to fail if the frequency is a multiple of the
    frequency rule code ([GH 14763](https://github.com/pandas-dev/pandas/issues/14763))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug when plotting a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with `datetime.timezone.utc` timezone ([GH 17173](https://github.com/pandas-dev/pandas/issues/17173))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GroupBy/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Resampler.agg()` with a timezone aware index where `OverflowError` would
    raise when passing a list of functions ([GH 22660](https://github.com/pandas-dev/pandas/issues/22660))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.nunique()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nunique.html#pandas.core.groupby.DataFrameGroupBy.nunique
    "pandas.core.groupby.DataFrameGroupBy.nunique") in which the names of column levels
    were lost ([GH 23222](https://github.com/pandas-dev/pandas/issues/23222))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.agg()` when applying an aggregation function to timezone aware
    data ([GH 23683](https://github.com/pandas-dev/pandas/issues/23683))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.first()` and `GroupBy.last()` where timezone information would
    be dropped ([GH 21603](https://github.com/pandas-dev/pandas/issues/21603))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.size()` when grouping only NA values ([GH 23050](https://github.com/pandas-dev/pandas/issues/23050))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") where `observed` kwarg was previously ignored ([GH 24880](https://github.com/pandas-dev/pandas/issues/24880))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") where using `groupby` with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") Series with a list of labels equal to the length of the series
    caused incorrect grouping ([GH 25704](https://github.com/pandas-dev/pandas/issues/25704))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensured that ordering of outputs in `groupby` aggregation functions is consistent
    across all versions of Python ([GH 25692](https://github.com/pandas-dev/pandas/issues/25692))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensured that result group order is correct when grouping on an ordered `Categorical`
    and specifying `observed=True` ([GH 25871](https://github.com/pandas-dev/pandas/issues/25871),
    [GH 25167](https://github.com/pandas-dev/pandas/issues/25167))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.min()`](../reference/api/pandas.core.window.rolling.Rolling.min.html#pandas.core.window.rolling.Rolling.min
    "pandas.core.window.rolling.Rolling.min") and [`Rolling.max()`](../reference/api/pandas.core.window.rolling.Rolling.max.html#pandas.core.window.rolling.Rolling.max
    "pandas.core.window.rolling.Rolling.max") that caused a memory leak ([GH 25893](https://github.com/pandas-dev/pandas/issues/25893))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.count()`](../reference/api/pandas.core.window.rolling.Rolling.count.html#pandas.core.window.rolling.Rolling.count
    "pandas.core.window.rolling.Rolling.count") and `.Expanding.count` was previously
    ignoring the `axis` keyword ([GH 13503](https://github.com/pandas-dev/pandas/issues/13503))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.idxmax()` and `GroupBy.idxmin()` with datetime column would
    return incorrect dtype ([GH 25444](https://github.com/pandas-dev/pandas/issues/25444),
    [GH 15306](https://github.com/pandas-dev/pandas/issues/15306))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.cumsum()`, `GroupBy.cumprod()`, `GroupBy.cummin()` and `GroupBy.cummax()`
    with categorical column having absent categories, would return incorrect result
    or segfault ([GH 16771](https://github.com/pandas-dev/pandas/issues/16771))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.nth()` where NA values in the grouping would return incorrect
    results ([GH 26011](https://github.com/pandas-dev/pandas/issues/26011))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") where transforming an empty group
    would raise a `ValueError` ([GH 26208](https://github.com/pandas-dev/pandas/issues/26208))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") where passing a [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper") would return incorrect groups when using the `.groups` accessor
    ([GH 26326](https://github.com/pandas-dev/pandas/issues/26326))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.agg()` where incorrect results are returned for uint64 columns.
    ([GH 26310](https://github.com/pandas-dev/pandas/issues/26310))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.median()`](../reference/api/pandas.core.window.rolling.Rolling.median.html#pandas.core.window.rolling.Rolling.median
    "pandas.core.window.rolling.Rolling.median") and [`Rolling.quantile()`](../reference/api/pandas.core.window.rolling.Rolling.quantile.html#pandas.core.window.rolling.Rolling.quantile
    "pandas.core.window.rolling.Rolling.quantile") where MemoryError is raised with
    empty window ([GH 26005](https://github.com/pandas-dev/pandas/issues/26005))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.median()`](../reference/api/pandas.core.window.rolling.Rolling.median.html#pandas.core.window.rolling.Rolling.median
    "pandas.core.window.rolling.Rolling.median") and [`Rolling.quantile()`](../reference/api/pandas.core.window.rolling.Rolling.quantile.html#pandas.core.window.rolling.Rolling.quantile
    "pandas.core.window.rolling.Rolling.quantile") where incorrect results are returned
    with `closed='left'` and `closed='neither'` ([GH 26005](https://github.com/pandas-dev/pandas/issues/26005))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved `Rolling`, `Window` and `ExponentialMovingWindow` functions to exclude
    nuisance columns from results instead of raising errors and raise a `DataError`
    only if all columns are nuisance ([GH 12537](https://github.com/pandas-dev/pandas/issues/12537))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.max()`](../reference/api/pandas.core.window.rolling.Rolling.max.html#pandas.core.window.rolling.Rolling.max
    "pandas.core.window.rolling.Rolling.max") and [`Rolling.min()`](../reference/api/pandas.core.window.rolling.Rolling.min.html#pandas.core.window.rolling.Rolling.min
    "pandas.core.window.rolling.Rolling.min") where incorrect results are returned
    with an empty variable window ([GH 26005](https://github.com/pandas-dev/pandas/issues/26005))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Raise a helpful exception when an unsupported weighted window function is used
    as an argument of `Window.aggregate()` ([GH 26597](https://github.com/pandas-dev/pandas/issues/26597))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`pandas.merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    adds a string of `None`, if `None` is assigned in suffixes instead of remain the
    column name as-is ([GH 24782](https://github.com/pandas-dev/pandas/issues/24782)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    when merging by index name would sometimes result in an incorrectly numbered index
    (missing index values are now assigned NA) ([GH 24212](https://github.com/pandas-dev/pandas/issues/24212),
    [GH 25009](https://github.com/pandas-dev/pandas/issues/25009))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_records()` now accepts dtypes to its `column_dtypes` parameter ([GH 24895](https://github.com/pandas-dev/pandas/issues/24895))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    where order of `OrderedDict` (and `dict` in Python 3.6+) is not respected, when
    passed in as `objs` argument ([GH 21510](https://github.com/pandas-dev/pandas/issues/21510))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") where columns with `NaN` values are dropped even if `dropna`
    argument is `False`, when the `aggfunc` argument contains a `list` ([GH 22159](https://github.com/pandas-dev/pandas/issues/22159))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    where the resulting `freq` of two [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with the same `freq` would be dropped ([GH 3232](https://github.com/pandas-dev/pandas/issues/3232)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    where merging with equivalent Categorical dtypes was raising an error ([GH 22501](https://github.com/pandas-dev/pandas/issues/22501))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") instantiating with a dict of iterators or generators (e.g.
    `pd.DataFrame({''A'': reversed(range(3))})`) raised an error ([GH 26349](https://github.com/pandas-dev/pandas/issues/26349)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") instantiating with a `range` (e.g. `pd.DataFrame(range(3))`)
    raised an error ([GH 26342](https://github.com/pandas-dev/pandas/issues/26342)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor when passing non-empty tuples would cause a segmentation
    fault ([GH 25691](https://github.com/pandas-dev/pandas/issues/25691))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.apply()`](../reference/api/pandas.Series.apply.html#pandas.Series.apply
    "pandas.Series.apply") failed when the series is a timezone aware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 25959](https://github.com/pandas-dev/pandas/issues/25959))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut")
    where large bins could incorrectly raise an error due to an integer overflow ([GH
    26045](https://github.com/pandas-dev/pandas/issues/26045))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index") where an error is thrown when a multi-indexed `DataFrame`
    is sorted on all levels with the initial level sorted last ([GH 26053](https://github.com/pandas-dev/pandas/issues/26053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.nlargest()`](../reference/api/pandas.Series.nlargest.html#pandas.Series.nlargest
    "pandas.Series.nlargest") treats `True` as smaller than `False` ([GH 26154](https://github.com/pandas-dev/pandas/issues/26154))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") with a [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") as pivot index would raise `TypeError` ([GH 25814](https://github.com/pandas-dev/pandas/issues/25814))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in which [`DataFrame.from_dict()`](../reference/api/pandas.DataFrame.from_dict.html#pandas.DataFrame.from_dict
    "pandas.DataFrame.from_dict") ignored order of `OrderedDict` when `orient='index'`
    ([GH 8425](https://github.com/pandas-dev/pandas/issues/8425)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.transpose()`](../reference/api/pandas.DataFrame.transpose.html#pandas.DataFrame.transpose
    "pandas.DataFrame.transpose") where transposing a DataFrame with a timezone-aware
    datetime column would incorrectly raise `ValueError` ([GH 26825](https://github.com/pandas-dev/pandas/issues/26825))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") when pivoting a timezone aware column as the `values` would
    remove timezone information ([GH 14948](https://github.com/pandas-dev/pandas/issues/14948))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") when specifying multiple `by` columns where one is `datetime64[ns,
    tz]` dtype ([GH 26649](https://github.com/pandas-dev/pandas/issues/26649))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Significant speedup in `SparseArray` initialization that benefits most operations,
    fixing performance regression introduced in v0.20.0 ([GH 24985](https://github.com/pandas-dev/pandas/issues/24985))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseFrame` constructor where passing `None` as the data would cause
    `default_fill_value` to be ignored ([GH 16807](https://github.com/pandas-dev/pandas/issues/16807))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseDataFrame` when adding a column in which the length of values
    does not match length of index, `AssertionError` is raised instead of raising
    `ValueError` ([GH 25484](https://github.com/pandas-dev/pandas/issues/25484))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduce a better error message in [`Series.sparse.from_coo()`](../reference/api/pandas.Series.sparse.from_coo.html#pandas.Series.sparse.from_coo
    "pandas.Series.sparse.from_coo") so it returns a `TypeError` for inputs that are
    not coo matrices ([GH 26554](https://github.com/pandas-dev/pandas/issues/26554))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `numpy.modf()` on a `SparseArray`. Now a tuple of `SparseArray` is returned
    ([GH 26946](https://github.com/pandas-dev/pandas/issues/26946)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Build changes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fix install error with PyPy on macOS ([GH 26536](https://github.com/pandas-dev/pandas/issues/26536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") when passing an `ExtensionArray` with a custom `na_sentinel`
    ([GH 25696](https://github.com/pandas-dev/pandas/issues/25696)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.count()`](../reference/api/pandas.Series.count.html#pandas.Series.count
    "pandas.Series.count") miscounts NA values in ExtensionArrays ([GH 26835](https://github.com/pandas-dev/pandas/issues/26835))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `Series.__array_ufunc__` to better handle NumPy ufuncs applied to Series
    backed by extension arrays ([GH 23293](https://github.com/pandas-dev/pandas/issues/23293)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keyword argument `deep` has been removed from `ExtensionArray.copy()` ([GH 27083](https://github.com/pandas-dev/pandas/issues/27083))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Removed unused C functions from vendored UltraJSON implementation ([GH 26198](https://github.com/pandas-dev/pandas/issues/26198))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    and [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex "pandas.RangeIndex")
    to be passed to numpy `min` and `max` functions ([GH 26125](https://github.com/pandas-dev/pandas/issues/26125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use actual class name in repr of empty objects of a `Series` subclass ([GH 27001](https://github.com/pandas-dev/pandas/issues/27001)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") where passing an object array of timezone-aware `datetime`
    objects would incorrectly raise `ValueError` ([GH 13287](https://github.com/pandas-dev/pandas/issues/13287))  ##
    Contributors'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A total of 231 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: 1_x7 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abdullah İhsan Seçer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam Bull +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam Hooper
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Albert Villanova del Moral
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Watt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AlexTereshenkov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexander Buchkovsky
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexander Hendorf +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexander Nordin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexander Ponomaroff
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexandre Batisse +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexandre Decan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allen Downey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alyssa Fu Ward +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Gaspari +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Wood +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antoine Viscardi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antonio Gutierrez +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arno Veenstra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ArtinSarraf
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Batalex +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Baurzhan Muftakhidinov
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Benjamin Rowell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bharat Raghunathan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bhavani Ravi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Big Head +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brett Randall +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bryan Cutler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: C John Klehm +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Caleb Braun +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cecilia +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Bertinato +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Stadler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christian Haege +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christian Hudon
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christopher Whelan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chuanzhu Xu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clemens Brunner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Damian Kula +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Hrisca +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Luis Costa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Saxton
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DanielFEvans +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Liu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deepyaman Datta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Denis Belavin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Devin Petersohn +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Diane Trout +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: EdAbati +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enrico Rotundo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: EternalLearner42 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Evan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Evan Livelo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fabian Rost +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Flavien Lambert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Florian Rathgeber +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Frank Hoang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gaibo Zhang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gioia Ballin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Giuseppe Romagnuolo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gordon Blackadder +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gregory Rome +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guillaume Gay
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HHest +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hielke Walinga +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How Si Wei +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hubert
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Huize Wang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hyukjin Kwon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ian Dunn +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Inevitable-Marzipan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Irv Lustig
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JElfner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jacob Bundgaard +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Cobon-Kerr +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan-Philip Gehrcke +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jarrod Millman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jayanth Katuri +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeremy Schendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jiang Yue +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joel Ostblom
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Johan von Forstner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Johnny Chiu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonathon Vandezande +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jop Vermeer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josh
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josh Friedlander +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justin Zheng
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kaiqi Dong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kane +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kapil Patel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kara de la Marck +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Katherine Surta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Katrin Leinweber +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kendall Masse
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kyle Kosic +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lorenzo Stella +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maarten Rietbergen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mak Sze Chun
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Garcia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mateusz Woś
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matias Heikkilä
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mats Maiwald +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Max Bolingbroke +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Max Kovalovs +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Max van Deursen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Davis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael P. Moran +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mike Cramblett +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Min ho Kim +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Misha Veldhoen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mukul Ashwath Ram +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MusTheDataGuy +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nanda H Krishna +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nicholas Musolino
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Noam Hershtig +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Noora Husseini +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul Reidy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pauli Virtanen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pav A +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter Leimbigler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Philippe Ombredanne +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pietro Battiston
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Eames +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roman Yurchak
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ruijing Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ryan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ryan Joyce +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ryan Nazareth
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ryan Rehman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sakar Panta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Samuel Sinayoko
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sandeep Pathak +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sangwoong Yoon
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Saurav Chakravorty
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scott Talbert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sergey Kopylov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shantanu Gontia +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shivam Rana +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shorokhov Sergey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Hawkins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Soyoun(Rose) Kim
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stephan Hoyer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stephen Cowley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stephen Rauch
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sterling Paramore +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steven +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stijn Van Hoey
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sumanau Sareen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Takuya N +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tan Tran +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tao He +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tarbo Fukazawa
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terji Petersen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thein Oo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ThibTrip +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thijs Damsma +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thiviyan Thanapalasingam
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas A Caswell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Kluiters +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tilen Kusterle +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Gates +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Hoffmann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Swast
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Augspurger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Neep +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tomáš Chvátal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tyler Reddy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vaibhav Vishal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vasily Litvinov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vibhu Agarwal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vikramjeet Das +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vladislav +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Víctor Moron Tejero +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wenhuan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Will Ayd +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Ayd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wouter De Coster +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yoann Goular +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zach Angell +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alimcmaster1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: anmyachev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: chris-b1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: danielplawrence +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: endenis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: enisnazif +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ezcitron +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: fjetter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: froessler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gfyoung
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gwrome +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: h-vetinari
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: haison +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: hannah-c +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: heckeop +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: iamshwin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jamesoliverh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jkovacevic +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: killerontherun1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: knuu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kpapdac +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kpflugshaupt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: krsnik93 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: leerssej +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lrjball +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mazayo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nathalier +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nrebena +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nullptr +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pilkibun +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pmaxey83 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rbenes +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: robbuckley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: shawnbrown +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sudhir mohanraj +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tadeja +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tamuhey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: thatneat
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: topper-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: willweil +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: yehia67 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: yhaque1213 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enhancements
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### GroupBy aggregation with relabeling'
  prefs: []
  type: TYPE_NORMAL
- en: pandas has added special groupby behavior, known as “named aggregation”, for
    naming the output columns when applying multiple aggregation functions to specific
    columns ([GH 18366](https://github.com/pandas-dev/pandas/issues/18366), [GH 26512](https://github.com/pandas-dev/pandas/issues/26512)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: Pass the desired columns names as the `**kwargs` to `.agg`. The values of `**kwargs`
    should be tuples where the first element is the column selection, and the second
    element is the aggregation function to apply. pandas provides the `pandas.NamedAgg`
    namedtuple to make it clearer what the arguments to the function are, but plain
    tuples are accepted as well.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: Named aggregation is the recommended replacement for the deprecated “dict-of-dicts”
    approach to naming the output of column-specific aggregations ([Deprecate groupby.agg()
    with a dictionary when renaming](v0.20.0.html#whatsnew-0200-api-breaking-deprecate-group-agg-dict)).
  prefs: []
  type: TYPE_NORMAL
- en: A similar approach is now available for Series groupby objects as well. Because
    there’s no need for column selection, the values can just be the functions to
    apply
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: This type of aggregation is the recommended alternative to the deprecated behavior
    when passing a dict to a Series groupby aggregation ([Deprecate groupby.agg()
    with a dictionary when renaming](v0.20.0.html#whatsnew-0200-api-breaking-deprecate-group-agg-dict)).
  prefs: []
  type: TYPE_NORMAL
- en: 'See [Named aggregation](../user_guide/groupby.html#groupby-aggregate-named)
    for more.  ### GroupBy aggregation with multiple lambdas'
  prefs: []
  type: TYPE_NORMAL
- en: You can now provide multiple lambda functions to a list-like aggregation in
    `GroupBy.agg` ([GH 26430](https://github.com/pandas-dev/pandas/issues/26430)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: 'Previously, these raised a `SpecificationError`.  ### Better repr for MultiIndex'
  prefs: []
  type: TYPE_NORMAL
- en: 'Printing of [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") instances now shows tuples of each row and ensures that the
    tuple items are vertically aligned, so it’s now easier to understand the structure
    of the `MultiIndex`. ([GH 13480](https://github.com/pandas-dev/pandas/issues/13480)):'
  prefs: []
  type: TYPE_NORMAL
- en: 'The repr now looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: 'Previously, outputting a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") printed all the `levels` and `codes` of the `MultiIndex`,
    which was visually unappealing and made the output more difficult to navigate.
    For example (limiting the range to 5):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: 'In the new repr, all values will be shown, if the number of rows is smaller
    than `options.display.max_seq_items` (default: 100 items). Horizontally, the output
    will truncate, if it’s wider than `options.display.width` (default: 80 characters).  ###
    Shorter truncated repr for Series and DataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: 'Currently, the default display options of pandas ensure that when a Series
    or DataFrame has more than 60 rows, its repr gets truncated to this maximum of
    60 rows (the `display.max_rows` option). However, this still gives a repr that
    takes up a large part of the vertical screen estate. Therefore, a new option `display.min_rows`
    is introduced with a default of 10 which determines the number of rows showed
    in the truncated repr:'
  prefs: []
  type: TYPE_NORMAL
- en: 'For small Series or DataFrames, up to `max_rows` number of rows is shown (default:
    60).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For larger Series of DataFrame with a length above `max_rows`, only `min_rows`
    number of rows is shown (default: 10, i.e. the first and last 5 rows).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This dual option allows to still see the full content of relatively small objects
    (e.g. `df.head(20)` shows all 20 rows), while giving a brief repr for large objects.
  prefs: []
  type: TYPE_NORMAL
- en: 'To restore the previous behaviour of a single threshold, set `pd.options.display.min_rows
    = None`.  ### JSON normalize with max_level param support'
  prefs: []
  type: TYPE_NORMAL
- en: '[`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") normalizes the provided input dict to all nested levels.
    The new max_level parameter provides more control over which level to end normalization
    ([GH 23843](https://github.com/pandas-dev/pandas/issues/23843)):'
  prefs: []
  type: TYPE_NORMAL
- en: 'The repr now looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]  ### Series.explode to split list-like values to rows'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    have gained the [`DataFrame.explode()`](../reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode
    "pandas.DataFrame.explode") methods to transform list-likes to individual rows.
    See [section on Exploding list-like column](../user_guide/reshaping.html#reshaping-explode)
    in docs for more information ([GH 16538](https://github.com/pandas-dev/pandas/issues/16538),
    [GH 10511](https://github.com/pandas-dev/pandas/issues/10511))'
  prefs: []
  type: TYPE_NORMAL
- en: Here is a typical usecase. You have comma separated string in a column.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: Creating a long form `DataFrame` is now straightforward using chained operations
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]  ### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") keywords `logy`, `logx` and `loglog` can now accept the
    value `''sym''` for symlog scaling. ([GH 24867](https://github.com/pandas-dev/pandas/issues/24867))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for ISO week year format (‘%G-%V-%u’) when parsing datetimes using
    [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") ([GH 16607](https://github.com/pandas-dev/pandas/issues/16607))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing of `DataFrame` and `Series` now accepts zerodim `np.ndarray` ([GH 24919](https://github.com/pandas-dev/pandas/issues/24919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp.replace()`](../reference/api/pandas.Timestamp.replace.html#pandas.Timestamp.replace
    "pandas.Timestamp.replace") now supports the `fold` argument to disambiguate DST
    transition times ([GH 25017](https://github.com/pandas-dev/pandas/issues/25017))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.at_time()`](../reference/api/pandas.DataFrame.at_time.html#pandas.DataFrame.at_time
    "pandas.DataFrame.at_time") and [`Series.at_time()`](../reference/api/pandas.Series.at_time.html#pandas.Series.at_time
    "pandas.Series.at_time") now support [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(in Python v3.12)") objects with timezones ([GH 24043](https://github.com/pandas-dev/pandas/issues/24043))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") now accepts an `observed` parameter which is passed
    to underlying calls to [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") to speed up grouping categorical data. ([GH 24923](https://github.com/pandas-dev/pandas/issues/24923))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.str` has gained [`Series.str.casefold()`](../reference/api/pandas.Series.str.casefold.html#pandas.Series.str.casefold
    "pandas.Series.str.casefold") method to removes all case distinctions present
    in a string ([GH 25405](https://github.com/pandas-dev/pandas/issues/25405))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.set_index()`](../reference/api/pandas.DataFrame.set_index.html#pandas.DataFrame.set_index
    "pandas.DataFrame.set_index") now works for instances of `abc.Iterator`, provided
    their output is of the same length as the calling frame ([GH 22484](https://github.com/pandas-dev/pandas/issues/22484),
    [GH 24984](https://github.com/pandas-dev/pandas/issues/24984))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.union()` now supports the `sort` argument. The behavior of the
    sort parameter matches that of [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") ([GH 24994](https://github.com/pandas-dev/pandas/issues/24994))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`RangeIndex.union()` now supports the `sort` argument. If `sort=False` an unsorted
    `Int64Index` is always returned. `sort=None` is the default and returns a monotonically
    increasing `RangeIndex` if possible or a sorted `Int64Index` if not ([GH 24471](https://github.com/pandas-dev/pandas/issues/24471))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`TimedeltaIndex.intersection()` now also supports the `sort` keyword ([GH 24471](https://github.com/pandas-dev/pandas/issues/24471))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.rename()`](../reference/api/pandas.DataFrame.rename.html#pandas.DataFrame.rename
    "pandas.DataFrame.rename") now supports the `errors` argument to raise errors
    when attempting to rename nonexistent keys ([GH 13473](https://github.com/pandas-dev/pandas/issues/13473))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [Sparse accessor](../reference/frame.html#api-frame-sparse) for working
    with a `DataFrame` whose values are sparse ([GH 25681](https://github.com/pandas-dev/pandas/issues/25681))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex "pandas.RangeIndex")
    has gained [`start`](../reference/api/pandas.RangeIndex.start.html#pandas.RangeIndex.start
    "pandas.RangeIndex.start"), [`stop`](../reference/api/pandas.RangeIndex.stop.html#pandas.RangeIndex.stop
    "pandas.RangeIndex.stop"), and [`step`](../reference/api/pandas.RangeIndex.step.html#pandas.RangeIndex.step
    "pandas.RangeIndex.step") attributes ([GH 25710](https://github.com/pandas-dev/pandas/issues/25710))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`datetime.timezone`](https://docs.python.org/3/library/datetime.html#datetime.timezone
    "(in Python v3.12)") objects are now supported as arguments to timezone methods
    and constructors ([GH 25065](https://github.com/pandas-dev/pandas/issues/25065))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") and [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") now supports quoting column names with backticks to refer
    to names with spaces ([GH 6508](https://github.com/pandas-dev/pandas/issues/6508))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") now gives a more clear error message when merge keys are
    categoricals that are not equal ([GH 26136](https://github.com/pandas-dev/pandas/issues/26136))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Rolling()` supports exponential (or Poisson) window type ([GH 21303](https://github.com/pandas-dev/pandas/issues/21303))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Error message for missing required imports now includes the original import
    error’s text ([GH 23868](https://github.com/pandas-dev/pandas/issues/23868))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") now have a `mean` method ([GH 24757](https://github.com/pandas-dev/pandas/issues/24757))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.describe()`](../reference/api/pandas.DataFrame.describe.html#pandas.DataFrame.describe
    "pandas.DataFrame.describe") now formats integer percentiles without decimal point
    ([GH 26660](https://github.com/pandas-dev/pandas/issues/26660))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for reading SPSS .sav files using [`read_spss()`](../reference/api/pandas.read_spss.html#pandas.read_spss
    "pandas.read_spss") ([GH 26537](https://github.com/pandas-dev/pandas/issues/26537))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added new option `plotting.backend` to be able to select a plotting backend
    different than the existing `matplotlib` one. Use `pandas.set_option('plotting.backend',
    '<backend-module>')` where `<backend-module` is a library implementing the pandas
    plotting API ([GH 14130](https://github.com/pandas-dev/pandas/issues/14130))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.offsets.BusinessHour` supports multiple opening hours intervals ([GH
    15481](https://github.com/pandas-dev/pandas/issues/15481))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") can now use `openpyxl` to read Excel files via the `engine=''openpyxl''`
    argument. This will become the default in a future release ([GH 11499](https://github.com/pandas-dev/pandas/issues/11499))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.io.excel.read_excel()` supports reading OpenDocument tables. Specify
    `engine=''odf''` to enable. Consult the [IO User Guide](../user_guide/io.html#io-ods)
    for more details ([GH 9070](https://github.com/pandas-dev/pandas/issues/9070))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Interval`](../reference/api/pandas.Interval.html#pandas.Interval "pandas.Interval"),
    [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex"), and [`IntervalArray`](../reference/api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray") have gained an [`is_empty`](../reference/api/pandas.Interval.is_empty.html#pandas.Interval.is_empty
    "pandas.Interval.is_empty") attribute denoting if the given interval(s) are empty
    ([GH 27219](https://github.com/pandas-dev/pandas/issues/27219))  ### GroupBy aggregation
    with relabeling'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pandas has added special groupby behavior, known as “named aggregation”, for
    naming the output columns when applying multiple aggregation functions to specific
    columns ([GH 18366](https://github.com/pandas-dev/pandas/issues/18366), [GH 26512](https://github.com/pandas-dev/pandas/issues/26512)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: Pass the desired columns names as the `**kwargs` to `.agg`. The values of `**kwargs`
    should be tuples where the first element is the column selection, and the second
    element is the aggregation function to apply. pandas provides the `pandas.NamedAgg`
    namedtuple to make it clearer what the arguments to the function are, but plain
    tuples are accepted as well.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: Named aggregation is the recommended replacement for the deprecated “dict-of-dicts”
    approach to naming the output of column-specific aggregations ([Deprecate groupby.agg()
    with a dictionary when renaming](v0.20.0.html#whatsnew-0200-api-breaking-deprecate-group-agg-dict)).
  prefs: []
  type: TYPE_NORMAL
- en: A similar approach is now available for Series groupby objects as well. Because
    there’s no need for column selection, the values can just be the functions to
    apply
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: This type of aggregation is the recommended alternative to the deprecated behavior
    when passing a dict to a Series groupby aggregation ([Deprecate groupby.agg()
    with a dictionary when renaming](v0.20.0.html#whatsnew-0200-api-breaking-deprecate-group-agg-dict)).
  prefs: []
  type: TYPE_NORMAL
- en: See [Named aggregation](../user_guide/groupby.html#groupby-aggregate-named)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: '### GroupBy aggregation with multiple lambdas'
  prefs: []
  type: TYPE_NORMAL
- en: You can now provide multiple lambda functions to a list-like aggregation in
    `GroupBy.agg` ([GH 26430](https://github.com/pandas-dev/pandas/issues/26430)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: Previously, these raised a `SpecificationError`.
  prefs: []
  type: TYPE_NORMAL
- en: '### Better repr for MultiIndex'
  prefs: []
  type: TYPE_NORMAL
- en: 'Printing of [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") instances now shows tuples of each row and ensures that the
    tuple items are vertically aligned, so it’s now easier to understand the structure
    of the `MultiIndex`. ([GH 13480](https://github.com/pandas-dev/pandas/issues/13480)):'
  prefs: []
  type: TYPE_NORMAL
- en: 'The repr now looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: 'Previously, outputting a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") printed all the `levels` and `codes` of the `MultiIndex`,
    which was visually unappealing and made the output more difficult to navigate.
    For example (limiting the range to 5):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: 'In the new repr, all values will be shown, if the number of rows is smaller
    than `options.display.max_seq_items` (default: 100 items). Horizontally, the output
    will truncate, if it’s wider than `options.display.width` (default: 80 characters).'
  prefs: []
  type: TYPE_NORMAL
- en: '### Shorter truncated repr for Series and DataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: 'Currently, the default display options of pandas ensure that when a Series
    or DataFrame has more than 60 rows, its repr gets truncated to this maximum of
    60 rows (the `display.max_rows` option). However, this still gives a repr that
    takes up a large part of the vertical screen estate. Therefore, a new option `display.min_rows`
    is introduced with a default of 10 which determines the number of rows showed
    in the truncated repr:'
  prefs: []
  type: TYPE_NORMAL
- en: 'For small Series or DataFrames, up to `max_rows` number of rows is shown (default:
    60).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For larger Series of DataFrame with a length above `max_rows`, only `min_rows`
    number of rows is shown (default: 10, i.e. the first and last 5 rows).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This dual option allows to still see the full content of relatively small objects
    (e.g. `df.head(20)` shows all 20 rows), while giving a brief repr for large objects.
  prefs: []
  type: TYPE_NORMAL
- en: To restore the previous behaviour of a single threshold, set `pd.options.display.min_rows
    = None`.
  prefs: []
  type: TYPE_NORMAL
- en: '### JSON normalize with max_level param support'
  prefs: []
  type: TYPE_NORMAL
- en: '[`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") normalizes the provided input dict to all nested levels.
    The new max_level parameter provides more control over which level to end normalization
    ([GH 23843](https://github.com/pandas-dev/pandas/issues/23843)):'
  prefs: []
  type: TYPE_NORMAL
- en: 'The repr now looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: '### Series.explode to split list-like values to rows'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    have gained the [`DataFrame.explode()`](../reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode
    "pandas.DataFrame.explode") methods to transform list-likes to individual rows.
    See [section on Exploding list-like column](../user_guide/reshaping.html#reshaping-explode)
    in docs for more information ([GH 16538](https://github.com/pandas-dev/pandas/issues/16538),
    [GH 10511](https://github.com/pandas-dev/pandas/issues/10511))'
  prefs: []
  type: TYPE_NORMAL
- en: Here is a typical usecase. You have comma separated string in a column.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: Creating a long form `DataFrame` is now straightforward using chained operations
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: '### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") keywords `logy`, `logx` and `loglog` can now accept the
    value `''sym''` for symlog scaling. ([GH 24867](https://github.com/pandas-dev/pandas/issues/24867))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for ISO week year format (‘%G-%V-%u’) when parsing datetimes using
    [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") ([GH 16607](https://github.com/pandas-dev/pandas/issues/16607))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing of `DataFrame` and `Series` now accepts zerodim `np.ndarray` ([GH 24919](https://github.com/pandas-dev/pandas/issues/24919))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp.replace()`](../reference/api/pandas.Timestamp.replace.html#pandas.Timestamp.replace
    "pandas.Timestamp.replace") now supports the `fold` argument to disambiguate DST
    transition times ([GH 25017](https://github.com/pandas-dev/pandas/issues/25017))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.at_time()`](../reference/api/pandas.DataFrame.at_time.html#pandas.DataFrame.at_time
    "pandas.DataFrame.at_time") and [`Series.at_time()`](../reference/api/pandas.Series.at_time.html#pandas.Series.at_time
    "pandas.Series.at_time") now support [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time
    "(in Python v3.12)") objects with timezones ([GH 24043](https://github.com/pandas-dev/pandas/issues/24043))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") now accepts an `observed` parameter which is passed
    to underlying calls to [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") to speed up grouping categorical data. ([GH 24923](https://github.com/pandas-dev/pandas/issues/24923))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.str` has gained [`Series.str.casefold()`](../reference/api/pandas.Series.str.casefold.html#pandas.Series.str.casefold
    "pandas.Series.str.casefold") method to removes all case distinctions present
    in a string ([GH 25405](https://github.com/pandas-dev/pandas/issues/25405))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.set_index()`](../reference/api/pandas.DataFrame.set_index.html#pandas.DataFrame.set_index
    "pandas.DataFrame.set_index") now works for instances of `abc.Iterator`, provided
    their output is of the same length as the calling frame ([GH 22484](https://github.com/pandas-dev/pandas/issues/22484),
    [GH 24984](https://github.com/pandas-dev/pandas/issues/24984))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.union()` now supports the `sort` argument. The behavior of the
    sort parameter matches that of [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") ([GH 24994](https://github.com/pandas-dev/pandas/issues/24994))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`RangeIndex.union()` now supports the `sort` argument. If `sort=False` an unsorted
    `Int64Index` is always returned. `sort=None` is the default and returns a monotonically
    increasing `RangeIndex` if possible or a sorted `Int64Index` if not ([GH 24471](https://github.com/pandas-dev/pandas/issues/24471))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`TimedeltaIndex.intersection()` now also supports the `sort` keyword ([GH 24471](https://github.com/pandas-dev/pandas/issues/24471))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.rename()`](../reference/api/pandas.DataFrame.rename.html#pandas.DataFrame.rename
    "pandas.DataFrame.rename") now supports the `errors` argument to raise errors
    when attempting to rename nonexistent keys ([GH 13473](https://github.com/pandas-dev/pandas/issues/13473))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [Sparse accessor](../reference/frame.html#api-frame-sparse) for working
    with a `DataFrame` whose values are sparse ([GH 25681](https://github.com/pandas-dev/pandas/issues/25681))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex "pandas.RangeIndex")
    has gained [`start`](../reference/api/pandas.RangeIndex.start.html#pandas.RangeIndex.start
    "pandas.RangeIndex.start"), [`stop`](../reference/api/pandas.RangeIndex.stop.html#pandas.RangeIndex.stop
    "pandas.RangeIndex.stop"), and [`step`](../reference/api/pandas.RangeIndex.step.html#pandas.RangeIndex.step
    "pandas.RangeIndex.step") attributes ([GH 25710](https://github.com/pandas-dev/pandas/issues/25710))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`datetime.timezone`](https://docs.python.org/3/library/datetime.html#datetime.timezone
    "(in Python v3.12)") objects are now supported as arguments to timezone methods
    and constructors ([GH 25065](https://github.com/pandas-dev/pandas/issues/25065))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") and [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") now supports quoting column names with backticks to refer
    to names with spaces ([GH 6508](https://github.com/pandas-dev/pandas/issues/6508))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") now gives a more clear error message when merge keys are
    categoricals that are not equal ([GH 26136](https://github.com/pandas-dev/pandas/issues/26136))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Rolling()` supports exponential (or Poisson) window type ([GH 21303](https://github.com/pandas-dev/pandas/issues/21303))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Error message for missing required imports now includes the original import
    error’s text ([GH 23868](https://github.com/pandas-dev/pandas/issues/23868))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") now have a `mean` method ([GH 24757](https://github.com/pandas-dev/pandas/issues/24757))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.describe()`](../reference/api/pandas.DataFrame.describe.html#pandas.DataFrame.describe
    "pandas.DataFrame.describe") now formats integer percentiles without decimal point
    ([GH 26660](https://github.com/pandas-dev/pandas/issues/26660))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for reading SPSS .sav files using [`read_spss()`](../reference/api/pandas.read_spss.html#pandas.read_spss
    "pandas.read_spss") ([GH 26537](https://github.com/pandas-dev/pandas/issues/26537))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added new option `plotting.backend` to be able to select a plotting backend
    different than the existing `matplotlib` one. Use `pandas.set_option('plotting.backend',
    '<backend-module>')` where `<backend-module` is a library implementing the pandas
    plotting API ([GH 14130](https://github.com/pandas-dev/pandas/issues/14130))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.offsets.BusinessHour` supports multiple opening hours intervals ([GH
    15481](https://github.com/pandas-dev/pandas/issues/15481))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") can now use `openpyxl` to read Excel files via the `engine=''openpyxl''`
    argument. This will become the default in a future release ([GH 11499](https://github.com/pandas-dev/pandas/issues/11499))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.io.excel.read_excel()` supports reading OpenDocument tables. Specify
    `engine=''odf''` to enable. Consult the [IO User Guide](../user_guide/io.html#io-ods)
    for more details ([GH 9070](https://github.com/pandas-dev/pandas/issues/9070))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Interval`](../reference/api/pandas.Interval.html#pandas.Interval "pandas.Interval"),
    [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex"), and [`IntervalArray`](../reference/api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray") have gained an [`is_empty`](../reference/api/pandas.Interval.is_empty.html#pandas.Interval.is_empty
    "pandas.Interval.is_empty") attribute denoting if the given interval(s) are empty
    ([GH 27219](https://github.com/pandas-dev/pandas/issues/27219))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Backwards incompatible API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '### Indexing with date strings with UTC offsets'
  prefs: []
  type: TYPE_NORMAL
- en: Indexing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with a date string with a UTC offset would previously
    ignore the UTC offset. Now, the UTC offset is respected in indexing. ([GH 24076](https://github.com/pandas-dev/pandas/issues/24076),
    [GH 16785](https://github.com/pandas-dev/pandas/issues/16785))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]  ### `MultiIndex` constructed from levels and codes'
  prefs: []
  type: TYPE_NORMAL
- en: Constructing a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with `NaN` levels or codes value < -1 was allowed previously.
    Now, construction with codes value < -1 is not allowed and `NaN` levels’ corresponding
    codes would be reassigned as -1\. ([GH 19387](https://github.com/pandas-dev/pandas/issues/19387))
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]  ### `GroupBy.apply` on `DataFrame` evaluates first group only once'
  prefs: []
  type: TYPE_NORMAL
- en: The implementation of [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") previously evaluated the supplied
    function consistently twice on the first group to infer if it is safe to use a
    fast code path. Particularly for functions with side effects, this was an undesired
    behavior and may have led to surprises. ([GH 2936](https://github.com/pandas-dev/pandas/issues/2936),
    [GH 2656](https://github.com/pandas-dev/pandas/issues/2656), [GH 7739](https://github.com/pandas-dev/pandas/issues/7739),
    [GH 10519](https://github.com/pandas-dev/pandas/issues/10519), [GH 12155](https://github.com/pandas-dev/pandas/issues/12155),
    [GH 20084](https://github.com/pandas-dev/pandas/issues/20084), [GH 21417](https://github.com/pandas-dev/pandas/issues/21417))
  prefs: []
  type: TYPE_NORMAL
- en: Now every group is evaluated only a single time.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: Concatenating sparse values
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When passed DataFrames whose values are sparse, [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") will now return a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with sparse values, rather than a `SparseDataFrame` ([GH 25702](https://github.com/pandas-dev/pandas/issues/25702)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: This now matches the existing behavior of [`concat`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") on `Series` with sparse values. [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") will continue to return a `SparseDataFrame` when all the values
    are instances of `SparseDataFrame`.
  prefs: []
  type: TYPE_NORMAL
- en: This change also affects routines using [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") internally, like [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies"), which now returns a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") in all cases (previously a `SparseDataFrame` was returned
    if all the columns were dummy encoded, and a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") otherwise).
  prefs: []
  type: TYPE_NORMAL
- en: Providing any `SparseSeries` or `SparseDataFrame` to [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") will cause a `SparseSeries` or `SparseDataFrame` to be returned,
    as before.
  prefs: []
  type: TYPE_NORMAL
- en: The `.str`-accessor performs stricter type checks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Due to the lack of more fine-grained dtypes, [`Series.str`](../reference/api/pandas.Series.str.html#pandas.Series.str
    "pandas.Series.str") so far only checked whether the data was of `object` dtype.
    [`Series.str`](../reference/api/pandas.Series.str.html#pandas.Series.str "pandas.Series.str")
    will now infer the dtype data *within* the Series; in particular, `'bytes'`-only
    data will raise an exception (except for [`Series.str.decode()`](../reference/api/pandas.Series.str.decode.html#pandas.Series.str.decode
    "pandas.Series.str.decode"), [`Series.str.get()`](../reference/api/pandas.Series.str.get.html#pandas.Series.str.get
    "pandas.Series.str.get"), [`Series.str.len()`](../reference/api/pandas.Series.str.len.html#pandas.Series.str.len
    "pandas.Series.str.len"), [`Series.str.slice()`](../reference/api/pandas.Series.str.slice.html#pandas.Series.str.slice
    "pandas.Series.str.slice")), see [GH 23163](https://github.com/pandas-dev/pandas/issues/23163),
    [GH 23011](https://github.com/pandas-dev/pandas/issues/23011), [GH 23551](https://github.com/pandas-dev/pandas/issues/23551).
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: '### Categorical dtypes are preserved during GroupBy'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, columns that were categorical, but not the groupby key(s) would
    be converted to `object` dtype during groupby operations. pandas now will preserve
    these dtypes. ([GH 18502](https://github.com/pandas-dev/pandas/issues/18502))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous Behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]  ### Incompatible Index type unions'
  prefs: []
  type: TYPE_NORMAL
- en: When performing [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") operations between objects of incompatible dtypes, the result
    will be a base [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    of dtype `object`. This behavior holds true for unions between [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") objects that previously would have been prohibited. The dtype
    of empty [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    objects will now be evaluated before performing union operations rather than simply
    returning the other [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") object. [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") can now be considered commutative, such that `A.union(B)
    == B.union(A)` ([GH 23525](https://github.com/pandas-dev/pandas/issues/23525)).
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]'
  prefs: []
  type: TYPE_PRE
- en: Note that integer- and floating-dtype indexes are considered “compatible”. The
    integer values are coerced to floating point, which may result in loss of precision.
    See [Set operations on Index objects](../user_guide/indexing.html#indexing-set-ops)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrame` GroupBy ffill/bfill no longer return group labels'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The methods `ffill`, `bfill`, `pad` and `backfill` of `DataFrameGroupBy` previously
    included the group labels in the return value, which was inconsistent with other
    groupby transforms. Now only the filled values are returned. ([GH 21521](https://github.com/pandas-dev/pandas/issues/21521))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE93]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE94]'
  prefs: []
  type: TYPE_PRE
- en: '`DataFrame` describe on an empty Categorical / object column will return top
    and freq'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When calling [`DataFrame.describe()`](../reference/api/pandas.DataFrame.describe.html#pandas.DataFrame.describe
    "pandas.DataFrame.describe") with an empty categorical / object column, the ‘top’
    and ‘freq’ columns were previously omitted, which was inconsistent with the output
    for non-empty columns. Now the ‘top’ and ‘freq’ columns will always be included,
    with `numpy.nan` in the case of an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 26397](https://github.com/pandas-dev/pandas/issues/26397))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE96]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE97]'
  prefs: []
  type: TYPE_PRE
- en: '`__str__` methods now call `__repr__` rather than vice versa'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: pandas has until now mostly defined string representations in a pandas objects’
    `__str__`/`__unicode__`/`__bytes__` methods, and called `__str__` from the `__repr__`
    method, if a specific `__repr__` method is not found. This is not needed for Python3.
    In pandas 0.25, the string representations of pandas objects are now generally
    defined in `__repr__`, and calls to `__str__` in general now pass the call on
    to the `__repr__`, if a specific `__str__` method doesn’t exist, as is standard
    for Python. This change is backward compatible for direct usage of pandas, but
    if you subclass pandas objects *and* give your subclasses specific `__str__`/`__repr__`
    methods, you may have to adjust your `__str__`/`__repr__` methods ([GH 26495](https://github.com/pandas-dev/pandas/issues/26495)).
  prefs: []
  type: TYPE_NORMAL
- en: '### Indexing an `IntervalIndex` with `Interval` objects'
  prefs: []
  type: TYPE_NORMAL
- en: Indexing methods for [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") have been modified to require exact matches only for [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") queries. `IntervalIndex` methods previously matched on any
    overlapping `Interval`. Behavior with scalar points, e.g. querying with an integer,
    is unchanged ([GH 16316](https://github.com/pandas-dev/pandas/issues/16316)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE98]'
  prefs: []
  type: TYPE_PRE
- en: The `in` operator (`__contains__`) now only returns `True` for exact matches
    to `Intervals` in the `IntervalIndex`, whereas this would previously return `True`
    for any `Interval` overlapping an `Interval` in the `IntervalIndex`.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE99]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE100]'
  prefs: []
  type: TYPE_PRE
- en: The [`get_loc()`](../reference/api/pandas.IntervalIndex.get_loc.html#pandas.IntervalIndex.get_loc
    "pandas.IntervalIndex.get_loc") method now only returns locations for exact matches
    to `Interval` queries, as opposed to the previous behavior of returning locations
    for overlapping matches. A `KeyError` will be raised if an exact match is not
    found.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE101]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE102]'
  prefs: []
  type: TYPE_PRE
- en: Likewise, [`get_indexer()`](../reference/api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer") and `get_indexer_non_unique()` will also only
    return locations for exact matches to `Interval` queries, with `-1` denoting that
    an exact match was not found.
  prefs: []
  type: TYPE_NORMAL
- en: These indexing changes extend to querying a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with an `IntervalIndex` index.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE103]'
  prefs: []
  type: TYPE_PRE
- en: Selecting from a `Series` or `DataFrame` using `[]` (`__getitem__`) or `loc`
    now only returns exact matches for `Interval` queries.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE104]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE105]'
  prefs: []
  type: TYPE_PRE
- en: Similarly, a `KeyError` will be raised for non-exact matches instead of returning
    overlapping matches.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE106]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE107]'
  prefs: []
  type: TYPE_PRE
- en: The [`overlaps()`](../reference/api/pandas.IntervalIndex.overlaps.html#pandas.IntervalIndex.overlaps
    "pandas.IntervalIndex.overlaps") method can be used to create a boolean indexer
    that replicates the previous behavior of returning overlapping matches.
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE108]  ### Binary ufuncs on Series now align'
  prefs: []
  type: TYPE_NORMAL
- en: Applying a binary ufunc like `numpy.power()` now aligns the inputs when both
    are [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    ([GH 23293](https://github.com/pandas-dev/pandas/issues/23293)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE109]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE110]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE111]'
  prefs: []
  type: TYPE_PRE
- en: This matches the behavior of other binary operations in pandas, like [`Series.add()`](../reference/api/pandas.Series.add.html#pandas.Series.add
    "pandas.Series.add"). To retain the previous behavior, convert the other `Series`
    to an array before applying the ufunc.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE112]'
  prefs: []
  type: TYPE_PRE
- en: Categorical.argsort now places missing values at the end
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`Categorical.argsort()` now places missing values at the end of the array,
    making it consistent with NumPy and the rest of pandas ([GH 21801](https://github.com/pandas-dev/pandas/issues/21801)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE113]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE114]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE115]'
  prefs: []
  type: TYPE_PRE
- en: '### Column order is preserved when passing a list of dicts to DataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: Starting with Python 3.7 the key-order of `dict` is [guaranteed](https://mail.python.org/pipermail/python-dev/2017-December/151283.html).
    In practice, this has been true since Python 3.6\. The [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor now treats a list of dicts in the same way as
    it does a list of `OrderedDict`, i.e. preserving the order of the dicts. This
    change applies only when pandas is running on Python>=3.6 ([GH 27309](https://github.com/pandas-dev/pandas/issues/27309)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE116]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous Behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: The columns were lexicographically sorted previously,
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE117]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: The column order now matches the insertion-order of the keys in the `dict`,
    considering all the records from top to bottom. As a consequence, the column order
    of the resulting DataFrame has changed compared to previous pandas versions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE118]  ### Increased minimum versions for dependencies'
  prefs: []
  type: TYPE_NORMAL
- en: 'Due to dropping support for Python 2.7, a number of optional dependencies have
    updated minimum versions ([GH 25725](https://github.com/pandas-dev/pandas/issues/25725),
    [GH 24942](https://github.com/pandas-dev/pandas/issues/24942), [GH 25752](https://github.com/pandas-dev/pandas/issues/25752)).
    Independently, some minimum supported versions of dependencies were updated ([GH
    23519](https://github.com/pandas-dev/pandas/issues/23519), [GH 25554](https://github.com/pandas-dev/pandas/issues/25554)).
    If installed, we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.13.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytz | 2015.4 | X |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.6.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.2.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.6.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pytest (dev) | 4.0.2 |  |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.6.0 |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.2.1 |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 0.2.2 |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 3.8.0 |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 2.2.2 |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 2.4.8 |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 0.9.0 |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 0.7.1 |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.4.2 |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 0.19.0 |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.1.4 |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.8.2 |'
  prefs: []
  type: TYPE_TB
- en: '| xlrd | 1.1.0 |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 0.9.8 |'
  prefs: []
  type: TYPE_TB
- en: '| xlwt | 1.2.0 |'
  prefs: []
  type: TYPE_TB
- en: 'See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.  ### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") will now standardize pytz timezones to a common timezone
    instance ([GH 24713](https://github.com/pandas-dev/pandas/issues/24713))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    and [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    scalars now implement the `to_numpy()` method as aliases to [`Timestamp.to_datetime64()`](../reference/api/pandas.Timestamp.to_datetime64.html#pandas.Timestamp.to_datetime64
    "pandas.Timestamp.to_datetime64") and [`Timedelta.to_timedelta64()`](../reference/api/pandas.Timedelta.to_timedelta64.html#pandas.Timedelta.to_timedelta64
    "pandas.Timedelta.to_timedelta64"), respectively. ([GH 24653](https://github.com/pandas-dev/pandas/issues/24653))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp.strptime()`](../reference/api/pandas.Timestamp.strptime.html#pandas.Timestamp.strptime
    "pandas.Timestamp.strptime") will now rise a `NotImplementedError` ([GH 25016](https://github.com/pandas-dev/pandas/issues/25016))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Comparing [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with unsupported objects now returns [`NotImplemented`](https://docs.python.org/3/library/constants.html#NotImplemented
    "(in Python v3.12)") instead of raising `TypeError`. This implies that unsupported
    rich comparisons are delegated to the other object, and are now consistent with
    Python 3 behavior for `datetime` objects ([GH 24011](https://github.com/pandas-dev/pandas/issues/24011))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex.snap()`](../reference/api/pandas.DatetimeIndex.snap.html#pandas.DatetimeIndex.snap
    "pandas.DatetimeIndex.snap") which didn’t preserving the `name` of the input [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 25575](https://github.com/pandas-dev/pandas/issues/25575))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `arg` argument in [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") has been renamed to `func` ([GH 26089](https://github.com/pandas-dev/pandas/issues/26089))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `arg` argument in `Window.aggregate()` has been renamed to `func` ([GH 26372](https://github.com/pandas-dev/pandas/issues/26372))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Most pandas classes had a `__bytes__` method, which was used for getting a python2-style
    bytestring representation of the object. This method has been removed as a part
    of dropping Python2 ([GH 26447](https://github.com/pandas-dev/pandas/issues/26447))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `.str`-accessor has been disabled for 1-level [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"), use [`MultiIndex.to_flat_index()`](../reference/api/pandas.MultiIndex.to_flat_index.html#pandas.MultiIndex.to_flat_index
    "pandas.MultiIndex.to_flat_index") if necessary ([GH 23679](https://github.com/pandas-dev/pandas/issues/23679))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed support of gtk package for clipboards ([GH 26563](https://github.com/pandas-dev/pandas/issues/26563))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using an unsupported version of Beautiful Soup 4 will now raise an `ImportError`
    instead of a `ValueError` ([GH 27063](https://github.com/pandas-dev/pandas/issues/27063))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.to_excel()`](../reference/api/pandas.Series.to_excel.html#pandas.Series.to_excel
    "pandas.Series.to_excel") and [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") will now raise a `ValueError` when saving timezone
    aware data. ([GH 27008](https://github.com/pandas-dev/pandas/issues/27008), [GH
    7056](https://github.com/pandas-dev/pandas/issues/7056))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExtensionArray.argsort()` places NA values at the end of the sorted array.
    ([GH 21801](https://github.com/pandas-dev/pandas/issues/21801))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_hdf()`](../reference/api/pandas.DataFrame.to_hdf.html#pandas.DataFrame.to_hdf
    "pandas.DataFrame.to_hdf") and [`Series.to_hdf()`](../reference/api/pandas.Series.to_hdf.html#pandas.Series.to_hdf
    "pandas.Series.to_hdf") will now raise a `NotImplementedError` when saving a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with extension data types for a `fixed` format. ([GH 7775](https://github.com/pandas-dev/pandas/issues/7775))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Passing duplicate `names` in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") will now raise a `ValueError` ([GH 17346](https://github.com/pandas-dev/pandas/issues/17346))  ###
    Indexing with date strings with UTC offsets'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with a date string with a UTC offset would previously
    ignore the UTC offset. Now, the UTC offset is respected in indexing. ([GH 24076](https://github.com/pandas-dev/pandas/issues/24076),
    [GH 16785](https://github.com/pandas-dev/pandas/issues/16785))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE119]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE120]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE121]'
  prefs: []
  type: TYPE_PRE
- en: '### `MultiIndex` constructed from levels and codes'
  prefs: []
  type: TYPE_NORMAL
- en: Constructing a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with `NaN` levels or codes value < -1 was allowed previously.
    Now, construction with codes value < -1 is not allowed and `NaN` levels’ corresponding
    codes would be reassigned as -1\. ([GH 19387](https://github.com/pandas-dev/pandas/issues/19387))
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE122]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE123]'
  prefs: []
  type: TYPE_PRE
- en: '### `GroupBy.apply` on `DataFrame` evaluates first group only once'
  prefs: []
  type: TYPE_NORMAL
- en: The implementation of [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") previously evaluated the supplied
    function consistently twice on the first group to infer if it is safe to use a
    fast code path. Particularly for functions with side effects, this was an undesired
    behavior and may have led to surprises. ([GH 2936](https://github.com/pandas-dev/pandas/issues/2936),
    [GH 2656](https://github.com/pandas-dev/pandas/issues/2656), [GH 7739](https://github.com/pandas-dev/pandas/issues/7739),
    [GH 10519](https://github.com/pandas-dev/pandas/issues/10519), [GH 12155](https://github.com/pandas-dev/pandas/issues/12155),
    [GH 20084](https://github.com/pandas-dev/pandas/issues/20084), [GH 21417](https://github.com/pandas-dev/pandas/issues/21417))
  prefs: []
  type: TYPE_NORMAL
- en: Now every group is evaluated only a single time.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE124]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE125]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE126]'
  prefs: []
  type: TYPE_PRE
- en: Concatenating sparse values
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When passed DataFrames whose values are sparse, [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") will now return a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with sparse values, rather than a `SparseDataFrame` ([GH 25702](https://github.com/pandas-dev/pandas/issues/25702)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE127]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE128]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE129]'
  prefs: []
  type: TYPE_PRE
- en: This now matches the existing behavior of [`concat`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") on `Series` with sparse values. [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") will continue to return a `SparseDataFrame` when all the values
    are instances of `SparseDataFrame`.
  prefs: []
  type: TYPE_NORMAL
- en: This change also affects routines using [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") internally, like [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies"), which now returns a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") in all cases (previously a `SparseDataFrame` was returned
    if all the columns were dummy encoded, and a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") otherwise).
  prefs: []
  type: TYPE_NORMAL
- en: Providing any `SparseSeries` or `SparseDataFrame` to [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") will cause a `SparseSeries` or `SparseDataFrame` to be returned,
    as before.
  prefs: []
  type: TYPE_NORMAL
- en: The `.str`-accessor performs stricter type checks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Due to the lack of more fine-grained dtypes, [`Series.str`](../reference/api/pandas.Series.str.html#pandas.Series.str
    "pandas.Series.str") so far only checked whether the data was of `object` dtype.
    [`Series.str`](../reference/api/pandas.Series.str.html#pandas.Series.str "pandas.Series.str")
    will now infer the dtype data *within* the Series; in particular, `'bytes'`-only
    data will raise an exception (except for [`Series.str.decode()`](../reference/api/pandas.Series.str.decode.html#pandas.Series.str.decode
    "pandas.Series.str.decode"), [`Series.str.get()`](../reference/api/pandas.Series.str.get.html#pandas.Series.str.get
    "pandas.Series.str.get"), [`Series.str.len()`](../reference/api/pandas.Series.str.len.html#pandas.Series.str.len
    "pandas.Series.str.len"), [`Series.str.slice()`](../reference/api/pandas.Series.str.slice.html#pandas.Series.str.slice
    "pandas.Series.str.slice")), see [GH 23163](https://github.com/pandas-dev/pandas/issues/23163),
    [GH 23011](https://github.com/pandas-dev/pandas/issues/23011), [GH 23551](https://github.com/pandas-dev/pandas/issues/23551).
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE130]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE131]'
  prefs: []
  type: TYPE_PRE
- en: '### Categorical dtypes are preserved during GroupBy'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, columns that were categorical, but not the groupby key(s) would
    be converted to `object` dtype during groupby operations. pandas now will preserve
    these dtypes. ([GH 18502](https://github.com/pandas-dev/pandas/issues/18502))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE132]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous Behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE133]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE134]'
  prefs: []
  type: TYPE_PRE
- en: '### Incompatible Index type unions'
  prefs: []
  type: TYPE_NORMAL
- en: When performing [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") operations between objects of incompatible dtypes, the result
    will be a base [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    of dtype `object`. This behavior holds true for unions between [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") objects that previously would have been prohibited. The dtype
    of empty [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    objects will now be evaluated before performing union operations rather than simply
    returning the other [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") object. [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") can now be considered commutative, such that `A.union(B)
    == B.union(A)` ([GH 23525](https://github.com/pandas-dev/pandas/issues/23525)).
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE135]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE136]'
  prefs: []
  type: TYPE_PRE
- en: Note that integer- and floating-dtype indexes are considered “compatible”. The
    integer values are coerced to floating point, which may result in loss of precision.
    See [Set operations on Index objects](../user_guide/indexing.html#indexing-set-ops)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrame` GroupBy ffill/bfill no longer return group labels'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The methods `ffill`, `bfill`, `pad` and `backfill` of `DataFrameGroupBy` previously
    included the group labels in the return value, which was inconsistent with other
    groupby transforms. Now only the filled values are returned. ([GH 21521](https://github.com/pandas-dev/pandas/issues/21521))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE137]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE138]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE139]'
  prefs: []
  type: TYPE_PRE
- en: '`DataFrame` describe on an empty Categorical / object column will return top
    and freq'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When calling [`DataFrame.describe()`](../reference/api/pandas.DataFrame.describe.html#pandas.DataFrame.describe
    "pandas.DataFrame.describe") with an empty categorical / object column, the ‘top’
    and ‘freq’ columns were previously omitted, which was inconsistent with the output
    for non-empty columns. Now the ‘top’ and ‘freq’ columns will always be included,
    with `numpy.nan` in the case of an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 26397](https://github.com/pandas-dev/pandas/issues/26397))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE140]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE141]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE142]'
  prefs: []
  type: TYPE_PRE
- en: '`__str__` methods now call `__repr__` rather than vice versa'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: pandas has until now mostly defined string representations in a pandas objects’
    `__str__`/`__unicode__`/`__bytes__` methods, and called `__str__` from the `__repr__`
    method, if a specific `__repr__` method is not found. This is not needed for Python3.
    In pandas 0.25, the string representations of pandas objects are now generally
    defined in `__repr__`, and calls to `__str__` in general now pass the call on
    to the `__repr__`, if a specific `__str__` method doesn’t exist, as is standard
    for Python. This change is backward compatible for direct usage of pandas, but
    if you subclass pandas objects *and* give your subclasses specific `__str__`/`__repr__`
    methods, you may have to adjust your `__str__`/`__repr__` methods ([GH 26495](https://github.com/pandas-dev/pandas/issues/26495)).
  prefs: []
  type: TYPE_NORMAL
- en: '### Indexing an `IntervalIndex` with `Interval` objects'
  prefs: []
  type: TYPE_NORMAL
- en: Indexing methods for [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") have been modified to require exact matches only for [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") queries. `IntervalIndex` methods previously matched on any
    overlapping `Interval`. Behavior with scalar points, e.g. querying with an integer,
    is unchanged ([GH 16316](https://github.com/pandas-dev/pandas/issues/16316)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE143]'
  prefs: []
  type: TYPE_PRE
- en: The `in` operator (`__contains__`) now only returns `True` for exact matches
    to `Intervals` in the `IntervalIndex`, whereas this would previously return `True`
    for any `Interval` overlapping an `Interval` in the `IntervalIndex`.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE144]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE145]'
  prefs: []
  type: TYPE_PRE
- en: The [`get_loc()`](../reference/api/pandas.IntervalIndex.get_loc.html#pandas.IntervalIndex.get_loc
    "pandas.IntervalIndex.get_loc") method now only returns locations for exact matches
    to `Interval` queries, as opposed to the previous behavior of returning locations
    for overlapping matches. A `KeyError` will be raised if an exact match is not
    found.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE146]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE147]'
  prefs: []
  type: TYPE_PRE
- en: Likewise, [`get_indexer()`](../reference/api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer") and `get_indexer_non_unique()` will also only
    return locations for exact matches to `Interval` queries, with `-1` denoting that
    an exact match was not found.
  prefs: []
  type: TYPE_NORMAL
- en: These indexing changes extend to querying a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with an `IntervalIndex` index.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE148]'
  prefs: []
  type: TYPE_PRE
- en: Selecting from a `Series` or `DataFrame` using `[]` (`__getitem__`) or `loc`
    now only returns exact matches for `Interval` queries.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE149]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE150]'
  prefs: []
  type: TYPE_PRE
- en: Similarly, a `KeyError` will be raised for non-exact matches instead of returning
    overlapping matches.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE151]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE152]'
  prefs: []
  type: TYPE_PRE
- en: The [`overlaps()`](../reference/api/pandas.IntervalIndex.overlaps.html#pandas.IntervalIndex.overlaps
    "pandas.IntervalIndex.overlaps") method can be used to create a boolean indexer
    that replicates the previous behavior of returning overlapping matches.
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE153]'
  prefs: []
  type: TYPE_PRE
- en: '### Binary ufuncs on Series now align'
  prefs: []
  type: TYPE_NORMAL
- en: Applying a binary ufunc like `numpy.power()` now aligns the inputs when both
    are [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    ([GH 23293](https://github.com/pandas-dev/pandas/issues/23293)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE154]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE155]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE156]'
  prefs: []
  type: TYPE_PRE
- en: This matches the behavior of other binary operations in pandas, like [`Series.add()`](../reference/api/pandas.Series.add.html#pandas.Series.add
    "pandas.Series.add"). To retain the previous behavior, convert the other `Series`
    to an array before applying the ufunc.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE157]'
  prefs: []
  type: TYPE_PRE
- en: Categorical.argsort now places missing values at the end
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`Categorical.argsort()` now places missing values at the end of the array,
    making it consistent with NumPy and the rest of pandas ([GH 21801](https://github.com/pandas-dev/pandas/issues/21801)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE158]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE159]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE160]'
  prefs: []
  type: TYPE_PRE
- en: '### Column order is preserved when passing a list of dicts to DataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: Starting with Python 3.7 the key-order of `dict` is [guaranteed](https://mail.python.org/pipermail/python-dev/2017-December/151283.html).
    In practice, this has been true since Python 3.6\. The [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor now treats a list of dicts in the same way as
    it does a list of `OrderedDict`, i.e. preserving the order of the dicts. This
    change applies only when pandas is running on Python>=3.6 ([GH 27309](https://github.com/pandas-dev/pandas/issues/27309)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE161]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous Behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: The columns were lexicographically sorted previously,
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE162]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: The column order now matches the insertion-order of the keys in the `dict`,
    considering all the records from top to bottom. As a consequence, the column order
    of the resulting DataFrame has changed compared to previous pandas versions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE163]'
  prefs: []
  type: TYPE_PRE
- en: '### Increased minimum versions for dependencies'
  prefs: []
  type: TYPE_NORMAL
- en: 'Due to dropping support for Python 2.7, a number of optional dependencies have
    updated minimum versions ([GH 25725](https://github.com/pandas-dev/pandas/issues/25725),
    [GH 24942](https://github.com/pandas-dev/pandas/issues/24942), [GH 25752](https://github.com/pandas-dev/pandas/issues/25752)).
    Independently, some minimum supported versions of dependencies were updated ([GH
    23519](https://github.com/pandas-dev/pandas/issues/23519), [GH 25554](https://github.com/pandas-dev/pandas/issues/25554)).
    If installed, we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.13.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytz | 2015.4 | X |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.6.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.2.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.6.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pytest (dev) | 4.0.2 |  |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.6.0 |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.2.1 |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 0.2.2 |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 3.8.0 |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 2.2.2 |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 2.4.8 |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 0.9.0 |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 0.7.1 |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.4.2 |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 0.19.0 |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.1.4 |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.8.2 |'
  prefs: []
  type: TYPE_TB
- en: '| xlrd | 1.1.0 |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 0.9.8 |'
  prefs: []
  type: TYPE_TB
- en: '| xlwt | 1.2.0 |'
  prefs: []
  type: TYPE_TB
- en: See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: '### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '[`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") will now standardize pytz timezones to a common timezone
    instance ([GH 24713](https://github.com/pandas-dev/pandas/issues/24713))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    and [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    scalars now implement the `to_numpy()` method as aliases to [`Timestamp.to_datetime64()`](../reference/api/pandas.Timestamp.to_datetime64.html#pandas.Timestamp.to_datetime64
    "pandas.Timestamp.to_datetime64") and [`Timedelta.to_timedelta64()`](../reference/api/pandas.Timedelta.to_timedelta64.html#pandas.Timedelta.to_timedelta64
    "pandas.Timedelta.to_timedelta64"), respectively. ([GH 24653](https://github.com/pandas-dev/pandas/issues/24653))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp.strptime()`](../reference/api/pandas.Timestamp.strptime.html#pandas.Timestamp.strptime
    "pandas.Timestamp.strptime") will now rise a `NotImplementedError` ([GH 25016](https://github.com/pandas-dev/pandas/issues/25016))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Comparing [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with unsupported objects now returns [`NotImplemented`](https://docs.python.org/3/library/constants.html#NotImplemented
    "(in Python v3.12)") instead of raising `TypeError`. This implies that unsupported
    rich comparisons are delegated to the other object, and are now consistent with
    Python 3 behavior for `datetime` objects ([GH 24011](https://github.com/pandas-dev/pandas/issues/24011))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex.snap()`](../reference/api/pandas.DatetimeIndex.snap.html#pandas.DatetimeIndex.snap
    "pandas.DatetimeIndex.snap") which didn’t preserving the `name` of the input [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 25575](https://github.com/pandas-dev/pandas/issues/25575))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `arg` argument in [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") has been renamed to `func` ([GH 26089](https://github.com/pandas-dev/pandas/issues/26089))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `arg` argument in `Window.aggregate()` has been renamed to `func` ([GH 26372](https://github.com/pandas-dev/pandas/issues/26372))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Most pandas classes had a `__bytes__` method, which was used for getting a python2-style
    bytestring representation of the object. This method has been removed as a part
    of dropping Python2 ([GH 26447](https://github.com/pandas-dev/pandas/issues/26447))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `.str`-accessor has been disabled for 1-level [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"), use [`MultiIndex.to_flat_index()`](../reference/api/pandas.MultiIndex.to_flat_index.html#pandas.MultiIndex.to_flat_index
    "pandas.MultiIndex.to_flat_index") if necessary ([GH 23679](https://github.com/pandas-dev/pandas/issues/23679))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed support of gtk package for clipboards ([GH 26563](https://github.com/pandas-dev/pandas/issues/26563))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using an unsupported version of Beautiful Soup 4 will now raise an `ImportError`
    instead of a `ValueError` ([GH 27063](https://github.com/pandas-dev/pandas/issues/27063))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.to_excel()`](../reference/api/pandas.Series.to_excel.html#pandas.Series.to_excel
    "pandas.Series.to_excel") and [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") will now raise a `ValueError` when saving timezone
    aware data. ([GH 27008](https://github.com/pandas-dev/pandas/issues/27008), [GH
    7056](https://github.com/pandas-dev/pandas/issues/7056))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExtensionArray.argsort()` places NA values at the end of the sorted array.
    ([GH 21801](https://github.com/pandas-dev/pandas/issues/21801))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_hdf()`](../reference/api/pandas.DataFrame.to_hdf.html#pandas.DataFrame.to_hdf
    "pandas.DataFrame.to_hdf") and [`Series.to_hdf()`](../reference/api/pandas.Series.to_hdf.html#pandas.Series.to_hdf
    "pandas.Series.to_hdf") will now raise a `NotImplementedError` when saving a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with extension data types for a `fixed` format. ([GH 7775](https://github.com/pandas-dev/pandas/issues/7775))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing duplicate `names` in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") will now raise a `ValueError` ([GH 17346](https://github.com/pandas-dev/pandas/issues/17346))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: Sparse subclasses
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `SparseSeries` and `SparseDataFrame` subclasses are deprecated. Their functionality
    is better-provided by a `Series` or `DataFrame` with sparse values.
  prefs: []
  type: TYPE_NORMAL
- en: '**Previous way**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE164]'
  prefs: []
  type: TYPE_PRE
- en: '**New way**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE165]'
  prefs: []
  type: TYPE_PRE
- en: The memory usage of the two approaches is identical ([GH 19239](https://github.com/pandas-dev/pandas/issues/19239)).
  prefs: []
  type: TYPE_NORMAL
- en: msgpack format
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The msgpack format is deprecated as of 0.25 and will be removed in a future
    version. It is recommended to use pyarrow for on-the-wire transmission of pandas
    objects. ([GH 27084](https://github.com/pandas-dev/pandas/issues/27084))
  prefs: []
  type: TYPE_NORMAL
- en: Other deprecations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The deprecated `.ix[]` indexer now raises a more visible `FutureWarning` instead
    of `DeprecationWarning` ([GH 26438](https://github.com/pandas-dev/pandas/issues/26438)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `units=M` (months) and `units=Y` (year) parameters for `units`
    of [`pandas.to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta"), [`pandas.Timedelta()`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") and [`pandas.TimedeltaIndex()`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") ([GH 16344](https://github.com/pandas-dev/pandas/issues/16344))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    has deprecated the `join_axes`-keyword. Instead, use [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") or [`DataFrame.reindex_like()`](../reference/api/pandas.DataFrame.reindex_like.html#pandas.DataFrame.reindex_like
    "pandas.DataFrame.reindex_like") on the result or on the inputs ([GH 21951](https://github.com/pandas-dev/pandas/issues/21951))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `SparseArray.values` attribute is deprecated. You can use `np.asarray(...)`
    or the `SparseArray.to_dense()` method instead ([GH 26421](https://github.com/pandas-dev/pandas/issues/26421)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The functions [`pandas.to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") and [`pandas.to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") have deprecated the `box` keyword. Instead, use `to_numpy()`
    or [`Timestamp.to_datetime64()`](../reference/api/pandas.Timestamp.to_datetime64.html#pandas.Timestamp.to_datetime64
    "pandas.Timestamp.to_datetime64") or [`Timedelta.to_timedelta64()`](../reference/api/pandas.Timedelta.to_timedelta64.html#pandas.Timedelta.to_timedelta64
    "pandas.Timedelta.to_timedelta64"). ([GH 24416](https://github.com/pandas-dev/pandas/issues/24416))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `DataFrame.compound()` and `Series.compound()` methods are deprecated and
    will be removed in a future version ([GH 26405](https://github.com/pandas-dev/pandas/issues/26405)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The internal attributes `_start`, `_stop` and `_step` attributes of [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") have been deprecated. Use the public attributes [`start`](../reference/api/pandas.RangeIndex.start.html#pandas.RangeIndex.start
    "pandas.RangeIndex.start"), [`stop`](../reference/api/pandas.RangeIndex.stop.html#pandas.RangeIndex.stop
    "pandas.RangeIndex.stop") and [`step`](../reference/api/pandas.RangeIndex.step.html#pandas.RangeIndex.step
    "pandas.RangeIndex.step") instead ([GH 26581](https://github.com/pandas-dev/pandas/issues/26581)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Series.ftype()`, `Series.ftypes()` and `DataFrame.ftypes()` methods are
    deprecated and will be removed in a future version. Instead, use [`Series.dtype()`](../reference/api/pandas.Series.dtype.html#pandas.Series.dtype
    "pandas.Series.dtype") and [`DataFrame.dtypes()`](../reference/api/pandas.DataFrame.dtypes.html#pandas.DataFrame.dtypes
    "pandas.DataFrame.dtypes") ([GH 26705](https://github.com/pandas-dev/pandas/issues/26705)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Series.get_values()`, `DataFrame.get_values()`, `Index.get_values()`, `SparseArray.get_values()`
    and `Categorical.get_values()` methods are deprecated. One of `np.asarray(..)`
    or [`to_numpy()`](../reference/api/pandas.Series.to_numpy.html#pandas.Series.to_numpy
    "pandas.Series.to_numpy") can be used instead ([GH 19617](https://github.com/pandas-dev/pandas/issues/19617)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The ‘outer’ method on NumPy ufuncs, e.g. `np.subtract.outer` has been deprecated
    on [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    objects. Convert the input to an array with [`Series.array`](../reference/api/pandas.Series.array.html#pandas.Series.array
    "pandas.Series.array") first ([GH 27186](https://github.com/pandas-dev/pandas/issues/27186))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timedelta.resolution()`](../reference/api/pandas.Timedelta.resolution.html#pandas.Timedelta.resolution
    "pandas.Timedelta.resolution") is deprecated and replaced with `Timedelta.resolution_string()`.
    In a future version, [`Timedelta.resolution()`](../reference/api/pandas.Timedelta.resolution.html#pandas.Timedelta.resolution
    "pandas.Timedelta.resolution") will be changed to behave like the standard library
    [`datetime.timedelta.resolution`](https://docs.python.org/3/library/datetime.html#datetime.timedelta.resolution
    "(in Python v3.12)") ([GH 21344](https://github.com/pandas-dev/pandas/issues/21344))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") has been undeprecated. ([GH 25220](https://github.com/pandas-dev/pandas/issues/25220))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Index.dtype_str` is deprecated. ([GH 18262](https://github.com/pandas-dev/pandas/issues/18262))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.imag` and `Series.real` are deprecated. ([GH 18262](https://github.com/pandas-dev/pandas/issues/18262))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.put()` is deprecated. ([GH 18262](https://github.com/pandas-dev/pandas/issues/18262))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.item()`](../reference/api/pandas.Index.item.html#pandas.Index.item
    "pandas.Index.item") and [`Series.item()`](../reference/api/pandas.Series.item.html#pandas.Series.item
    "pandas.Series.item") is deprecated. ([GH 18262](https://github.com/pandas-dev/pandas/issues/18262))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The default value `ordered=None` in `CategoricalDtype` has been deprecated in
    favor of `ordered=False`. When converting between categorical types `ordered=True`
    must be explicitly passed in order to be preserved. ([GH 26336](https://github.com/pandas-dev/pandas/issues/26336))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Index.contains()` is deprecated. Use `key in index` (`__contains__`) instead
    ([GH 17753](https://github.com/pandas-dev/pandas/issues/17753)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.get_dtype_counts()` is deprecated. ([GH 18262](https://github.com/pandas-dev/pandas/issues/18262))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.ravel()` will return a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") instead of a `np.ndarray` ([GH 27199](https://github.com/pandas-dev/pandas/issues/27199))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse subclasses
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `SparseSeries` and `SparseDataFrame` subclasses are deprecated. Their functionality
    is better-provided by a `Series` or `DataFrame` with sparse values.
  prefs: []
  type: TYPE_NORMAL
- en: '**Previous way**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE166]'
  prefs: []
  type: TYPE_PRE
- en: '**New way**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE167]'
  prefs: []
  type: TYPE_PRE
- en: The memory usage of the two approaches is identical ([GH 19239](https://github.com/pandas-dev/pandas/issues/19239)).
  prefs: []
  type: TYPE_NORMAL
- en: msgpack format
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The msgpack format is deprecated as of 0.25 and will be removed in a future
    version. It is recommended to use pyarrow for on-the-wire transmission of pandas
    objects. ([GH 27084](https://github.com/pandas-dev/pandas/issues/27084))
  prefs: []
  type: TYPE_NORMAL
- en: Other deprecations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The deprecated `.ix[]` indexer now raises a more visible `FutureWarning` instead
    of `DeprecationWarning` ([GH 26438](https://github.com/pandas-dev/pandas/issues/26438)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `units=M` (months) and `units=Y` (year) parameters for `units`
    of [`pandas.to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta"), [`pandas.Timedelta()`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") and [`pandas.TimedeltaIndex()`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") ([GH 16344](https://github.com/pandas-dev/pandas/issues/16344))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    has deprecated the `join_axes`-keyword. Instead, use [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") or [`DataFrame.reindex_like()`](../reference/api/pandas.DataFrame.reindex_like.html#pandas.DataFrame.reindex_like
    "pandas.DataFrame.reindex_like") on the result or on the inputs ([GH 21951](https://github.com/pandas-dev/pandas/issues/21951))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `SparseArray.values` attribute is deprecated. You can use `np.asarray(...)`
    or the `SparseArray.to_dense()` method instead ([GH 26421](https://github.com/pandas-dev/pandas/issues/26421)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The functions [`pandas.to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") and [`pandas.to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") have deprecated the `box` keyword. Instead, use `to_numpy()`
    or [`Timestamp.to_datetime64()`](../reference/api/pandas.Timestamp.to_datetime64.html#pandas.Timestamp.to_datetime64
    "pandas.Timestamp.to_datetime64") or [`Timedelta.to_timedelta64()`](../reference/api/pandas.Timedelta.to_timedelta64.html#pandas.Timedelta.to_timedelta64
    "pandas.Timedelta.to_timedelta64"). ([GH 24416](https://github.com/pandas-dev/pandas/issues/24416))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `DataFrame.compound()` and `Series.compound()` methods are deprecated and
    will be removed in a future version ([GH 26405](https://github.com/pandas-dev/pandas/issues/26405)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The internal attributes `_start`, `_stop` and `_step` attributes of [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") have been deprecated. Use the public attributes [`start`](../reference/api/pandas.RangeIndex.start.html#pandas.RangeIndex.start
    "pandas.RangeIndex.start"), [`stop`](../reference/api/pandas.RangeIndex.stop.html#pandas.RangeIndex.stop
    "pandas.RangeIndex.stop") and [`step`](../reference/api/pandas.RangeIndex.step.html#pandas.RangeIndex.step
    "pandas.RangeIndex.step") instead ([GH 26581](https://github.com/pandas-dev/pandas/issues/26581)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Series.ftype()`, `Series.ftypes()` and `DataFrame.ftypes()` methods are
    deprecated and will be removed in a future version. Instead, use [`Series.dtype()`](../reference/api/pandas.Series.dtype.html#pandas.Series.dtype
    "pandas.Series.dtype") and [`DataFrame.dtypes()`](../reference/api/pandas.DataFrame.dtypes.html#pandas.DataFrame.dtypes
    "pandas.DataFrame.dtypes") ([GH 26705](https://github.com/pandas-dev/pandas/issues/26705)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Series.get_values()`, `DataFrame.get_values()`, `Index.get_values()`, `SparseArray.get_values()`
    and `Categorical.get_values()` methods are deprecated. One of `np.asarray(..)`
    or [`to_numpy()`](../reference/api/pandas.Series.to_numpy.html#pandas.Series.to_numpy
    "pandas.Series.to_numpy") can be used instead ([GH 19617](https://github.com/pandas-dev/pandas/issues/19617)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The ‘outer’ method on NumPy ufuncs, e.g. `np.subtract.outer` has been deprecated
    on [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    objects. Convert the input to an array with [`Series.array`](../reference/api/pandas.Series.array.html#pandas.Series.array
    "pandas.Series.array") first ([GH 27186](https://github.com/pandas-dev/pandas/issues/27186))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timedelta.resolution()`](../reference/api/pandas.Timedelta.resolution.html#pandas.Timedelta.resolution
    "pandas.Timedelta.resolution") is deprecated and replaced with `Timedelta.resolution_string()`.
    In a future version, [`Timedelta.resolution()`](../reference/api/pandas.Timedelta.resolution.html#pandas.Timedelta.resolution
    "pandas.Timedelta.resolution") will be changed to behave like the standard library
    [`datetime.timedelta.resolution`](https://docs.python.org/3/library/datetime.html#datetime.timedelta.resolution
    "(in Python v3.12)") ([GH 21344](https://github.com/pandas-dev/pandas/issues/21344))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") has been undeprecated. ([GH 25220](https://github.com/pandas-dev/pandas/issues/25220))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Index.dtype_str` is deprecated. ([GH 18262](https://github.com/pandas-dev/pandas/issues/18262))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.imag` and `Series.real` are deprecated. ([GH 18262](https://github.com/pandas-dev/pandas/issues/18262))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.put()` is deprecated. ([GH 18262](https://github.com/pandas-dev/pandas/issues/18262))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.item()`](../reference/api/pandas.Index.item.html#pandas.Index.item
    "pandas.Index.item") and [`Series.item()`](../reference/api/pandas.Series.item.html#pandas.Series.item
    "pandas.Series.item") is deprecated. ([GH 18262](https://github.com/pandas-dev/pandas/issues/18262))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The default value `ordered=None` in `CategoricalDtype` has been deprecated in
    favor of `ordered=False`. When converting between categorical types `ordered=True`
    must be explicitly passed in order to be preserved. ([GH 26336](https://github.com/pandas-dev/pandas/issues/26336))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Index.contains()` is deprecated. Use `key in index` (`__contains__`) instead
    ([GH 17753](https://github.com/pandas-dev/pandas/issues/17753)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.get_dtype_counts()` is deprecated. ([GH 18262](https://github.com/pandas-dev/pandas/issues/18262))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.ravel()` will return a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") instead of a `np.ndarray` ([GH 27199](https://github.com/pandas-dev/pandas/issues/27199))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Removal of prior version deprecations/changes'
  prefs: []
  type: TYPE_NORMAL
- en: Removed `Panel` ([GH 25047](https://github.com/pandas-dev/pandas/issues/25047),
    [GH 25191](https://github.com/pandas-dev/pandas/issues/25191), [GH 25231](https://github.com/pandas-dev/pandas/issues/25231))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `sheetname` keyword in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") ([GH 16442](https://github.com/pandas-dev/pandas/issues/16442),
    [GH 20938](https://github.com/pandas-dev/pandas/issues/20938))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `TimeGrouper` ([GH 16942](https://github.com/pandas-dev/pandas/issues/16942))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `parse_cols` keyword in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") ([GH 16488](https://github.com/pandas-dev/pandas/issues/16488))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `pd.options.html.border` ([GH 16970](https://github.com/pandas-dev/pandas/issues/16970))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `convert_objects` ([GH 11221](https://github.com/pandas-dev/pandas/issues/11221))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `select` method of `DataFrame` and `Series`
    ([GH 17633](https://github.com/pandas-dev/pandas/issues/17633))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated behavior of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") treated as list-like in [`rename_categories()`](../reference/api/pandas.Series.cat.rename_categories.html#pandas.Series.cat.rename_categories
    "pandas.Series.cat.rename_categories") ([GH 17982](https://github.com/pandas-dev/pandas/issues/17982))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `DataFrame.reindex_axis` and `Series.reindex_axis`
    ([GH 17842](https://github.com/pandas-dev/pandas/issues/17842))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated behavior of altering column or index labels
    with [`Series.rename_axis()`](../reference/api/pandas.Series.rename_axis.html#pandas.Series.rename_axis
    "pandas.Series.rename_axis") or [`DataFrame.rename_axis()`](../reference/api/pandas.DataFrame.rename_axis.html#pandas.DataFrame.rename_axis
    "pandas.DataFrame.rename_axis") ([GH 17842](https://github.com/pandas-dev/pandas/issues/17842))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `tupleize_cols` keyword argument in [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html"), [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), and [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") ([GH 17877](https://github.com/pandas-dev/pandas/issues/17877),
    [GH 17820](https://github.com/pandas-dev/pandas/issues/17820))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `DataFrame.from.csv` and `Series.from_csv`
    ([GH 17812](https://github.com/pandas-dev/pandas/issues/17812))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `raise_on_error` keyword argument in [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") and [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask") ([GH 17744](https://github.com/pandas-dev/pandas/issues/17744))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `ordered` and `categories` keyword arguments
    in `astype` ([GH 17742](https://github.com/pandas-dev/pandas/issues/17742))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `cdate_range` ([GH 17691](https://github.com/pandas-dev/pandas/issues/17691))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `True` option for the `dropna` keyword argument
    in `SeriesGroupBy.nth()` ([GH 17493](https://github.com/pandas-dev/pandas/issues/17493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated `convert` keyword argument in [`Series.take()`](../reference/api/pandas.Series.take.html#pandas.Series.take
    "pandas.Series.take") and [`DataFrame.take()`](../reference/api/pandas.DataFrame.take.html#pandas.DataFrame.take
    "pandas.DataFrame.take") ([GH 17352](https://github.com/pandas-dev/pandas/issues/17352))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the previously deprecated behavior of arithmetic operations with `datetime.date`
    objects ([GH 21152](https://github.com/pandas-dev/pandas/issues/21152))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Performance improvements'
  prefs: []
  type: TYPE_NORMAL
- en: Significant speedup in `SparseArray` initialization that benefits most operations,
    fixing performance regression introduced in v0.20.0 ([GH 24985](https://github.com/pandas-dev/pandas/issues/24985))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") is now faster when outputting data with any string
    or non-native endian columns ([GH 25045](https://github.com/pandas-dev/pandas/issues/25045))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`Series.searchsorted()`](../reference/api/pandas.Series.searchsorted.html#pandas.Series.searchsorted
    "pandas.Series.searchsorted"). The speedup is especially large when the dtype
    is int8/int16/int32 and the searched key is within the integer bounds for the
    dtype ([GH 22034](https://github.com/pandas-dev/pandas/issues/22034))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `GroupBy.quantile()` ([GH 20405](https://github.com/pandas-dev/pandas/issues/20405))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of slicing and other selected operation on a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") ([GH 26565](https://github.com/pandas-dev/pandas/issues/26565),
    [GH 26617](https://github.com/pandas-dev/pandas/issues/26617), [GH 26722](https://github.com/pandas-dev/pandas/issues/26722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex "pandas.RangeIndex")
    now performs standard lookup without instantiating an actual hashtable, hence
    saving memory ([GH 16685](https://github.com/pandas-dev/pandas/issues/16685))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") by faster tokenizing and faster parsing of small float numbers
    ([GH 25784](https://github.com/pandas-dev/pandas/issues/25784))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") by faster parsing of N/A and boolean values ([GH 25804](https://github.com/pandas-dev/pandas/issues/25804))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `IntervalIndex.is_monotonic`, `IntervalIndex.is_monotonic_increasing`
    and `IntervalIndex.is_monotonic_decreasing` by removing conversion to [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 24813](https://github.com/pandas-dev/pandas/issues/24813))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") when writing datetime dtypes ([GH 25708](https://github.com/pandas-dev/pandas/issues/25708))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") by much faster parsing of `MM/YYYY` and `DD/MM/YYYY` datetime
    formats ([GH 25922](https://github.com/pandas-dev/pandas/issues/25922))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of nanops for dtypes that cannot store NaNs. Speedup is
    particularly prominent for [`Series.all()`](../reference/api/pandas.Series.all.html#pandas.Series.all
    "pandas.Series.all") and [`Series.any()`](../reference/api/pandas.Series.any.html#pandas.Series.any
    "pandas.Series.any") ([GH 25070](https://github.com/pandas-dev/pandas/issues/25070))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") for dictionary mappers on categorical series by mapping the
    categories instead of mapping all values ([GH 23785](https://github.com/pandas-dev/pandas/issues/23785))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `IntervalIndex.intersection()` ([GH 24813](https://github.com/pandas-dev/pandas/issues/24813))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") by faster concatenating date columns without extra conversion
    to string for integer/float zero and float `NaN`; by faster checking the string
    for the possibility of being a date ([GH 25754](https://github.com/pandas-dev/pandas/issues/25754))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `IntervalIndex.is_unique` by removing conversion to
    `MultiIndex` ([GH 24813](https://github.com/pandas-dev/pandas/issues/24813))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Restored performance of `DatetimeIndex.__iter__()` by re-enabling specialized
    code path ([GH 26702](https://github.com/pandas-dev/pandas/issues/26702))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance when building [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with at least one [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") level ([GH 22044](https://github.com/pandas-dev/pandas/issues/22044))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance by removing the need for a garbage collect when checking
    for `SettingWithCopyWarning` ([GH 27031](https://github.com/pandas-dev/pandas/issues/27031))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") changed default value of cache parameter to `True` ([GH
    26043](https://github.com/pandas-dev/pandas/issues/26043))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") slicing given non-unique, monotonic data ([GH 27136](https://github.com/pandas-dev/pandas/issues/27136)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `pd.read_json()` for index-oriented data. ([GH 26773](https://github.com/pandas-dev/pandas/issues/26773))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `MultiIndex.shape()` ([GH 27384](https://github.com/pandas-dev/pandas/issues/27384)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Bug fixes'
  prefs: []
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.at()`](../reference/api/pandas.DataFrame.at.html#pandas.DataFrame.at
    "pandas.DataFrame.at") and [`Series.at()`](../reference/api/pandas.Series.at.html#pandas.Series.at
    "pandas.Series.at") that would raise exception if the index was a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 20629](https://github.com/pandas-dev/pandas/issues/20629))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in comparison of ordered [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") that contained missing values with a scalar which sometimes
    incorrectly resulted in `True` ([GH 26504](https://github.com/pandas-dev/pandas/issues/26504))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") when the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") containing [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") objects incorrectly raised a `TypeError` ([GH 25087](https://github.com/pandas-dev/pandas/issues/25087))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") which would raise an (incorrect) `ValueError` when called
    with a date far into the future and the `format` argument specified instead of
    raising `OutOfBoundsDatetime` ([GH 23830](https://github.com/pandas-dev/pandas/issues/23830))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") which would raise `InvalidIndexError: Reindexing only valid
    with uniquely valued Index objects` when called with `cache=True`, with `arg`
    including at least two different elements from the set `{None, numpy.nan, pandas.NaT}`
    ([GH 22305](https://github.com/pandas-dev/pandas/issues/22305))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") where timezone aware data with `dtype='datetime64[ns]` was not
    cast to naive ([GH 25843](https://github.com/pandas-dev/pandas/issues/25843))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") type checking in various datetime functions to prevent exceptions
    when using a subclassed `datetime` ([GH 25851](https://github.com/pandas-dev/pandas/issues/25851))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    repr where `np.datetime64('NaT')` and `np.timedelta64('NaT')` with `dtype=object`
    would be represented as `NaN` ([GH 25445](https://github.com/pandas-dev/pandas/issues/25445))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") which does not replace the invalid argument with `NaT` when
    error is set to coerce ([GH 26122](https://github.com/pandas-dev/pandas/issues/26122))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in adding `DateOffset` with nonzero month to [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") would raise `ValueError` ([GH 26258](https://github.com/pandas-dev/pandas/issues/26258))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") which raises unhandled `OverflowError` when called with
    mix of invalid dates and `NaN` values with `format='%Y%m%d'` and `error='coerce'`
    ([GH 25512](https://github.com/pandas-dev/pandas/issues/25512))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `isin()` for datetimelike indexes; [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") and [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") where the `levels` parameter was ignored. ([GH 26675](https://github.com/pandas-dev/pandas/issues/26675))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") which raises `TypeError` for `format='%Y%m%d'` when called
    for invalid integer dates with length >= 6 digits with `errors='ignore'`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when comparing a [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") against a zero-dimensional numpy array ([GH 26689](https://github.com/pandas-dev/pandas/issues/26689))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a `Series` or `DataFrame` from a numpy `datetime64` array
    with a non-ns unit and out-of-bound timestamps generating rubbish data, which
    will now correctly raise an `OutOfBoundsDatetime` error ([GH 26206](https://github.com/pandas-dev/pandas/issues/26206)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") with unnecessary `OverflowError` being raised for very large
    or very small dates ([GH 26651](https://github.com/pandas-dev/pandas/issues/26651))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where adding [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") to a `np.timedelta64` object would raise instead of returning
    a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    ([GH 24775](https://github.com/pandas-dev/pandas/issues/24775))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where comparing a zero-dimensional numpy array containing a `np.datetime64`
    object to a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") would incorrect raise `TypeError` ([GH 26916](https://github.com/pandas-dev/pandas/issues/26916))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") which would raise `ValueError: Tz-aware datetime.datetime
    cannot be converted to datetime64 unless utc=True` when called with `cache=True`,
    with `arg` including datetime strings with different offset ([GH 26097](https://github.com/pandas-dev/pandas/issues/26097))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `TimedeltaIndex.intersection()` where for non-monotonic indices in some
    cases an empty `Index` was returned when in fact an intersection existed ([GH
    25913](https://github.com/pandas-dev/pandas/issues/25913))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug with comparisons between [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") and `NaT` raising `TypeError` ([GH 26039](https://github.com/pandas-dev/pandas/issues/26039))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when adding or subtracting a `BusinessHour` to a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with the resulting time landing in a following or prior day
    respectively ([GH 26381](https://github.com/pandas-dev/pandas/issues/26381))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when comparing a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") against a zero-dimensional numpy array ([GH 26689](https://github.com/pandas-dev/pandas/issues/26689))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex.to_frame()`](../reference/api/pandas.DatetimeIndex.to_frame.html#pandas.DatetimeIndex.to_frame
    "pandas.DatetimeIndex.to_frame") where timezone aware data would be converted
    to timezone naive data ([GH 25809](https://github.com/pandas-dev/pandas/issues/25809))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `utc=True` and datetime strings that would apply previously
    parsed UTC offsets to subsequent arguments ([GH 24992](https://github.com/pandas-dev/pandas/issues/24992))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.tz_localize()`](../reference/api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize") and [`Timestamp.tz_convert()`](../reference/api/pandas.Timestamp.tz_convert.html#pandas.Timestamp.tz_convert
    "pandas.Timestamp.tz_convert") does not propagate `freq` ([GH 25241](https://github.com/pandas-dev/pandas/issues/25241))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.at()`](../reference/api/pandas.Series.at.html#pandas.Series.at
    "pandas.Series.at") where setting [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with timezone raises `TypeError` ([GH 25506](https://github.com/pandas-dev/pandas/issues/25506))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.update()`](../reference/api/pandas.DataFrame.update.html#pandas.DataFrame.update
    "pandas.DataFrame.update") when updating with timezone aware data would return
    timezone naive data ([GH 25807](https://github.com/pandas-dev/pandas/issues/25807))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") where an uninformative `RuntimeError` was raised when passing
    a naive [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with datetime strings with mixed UTC offsets ([GH 25978](https://github.com/pandas-dev/pandas/issues/25978))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `unit='ns'` would drop timezone information from the
    parsed argument ([GH 26168](https://github.com/pandas-dev/pandas/issues/26168))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") where joining a timezone aware index with a timezone
    aware column would result in a column of `NaN` ([GH 26335](https://github.com/pandas-dev/pandas/issues/26335))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") where ambiguous or nonexistent start or end times were not
    handled by the `ambiguous` or `nonexistent` keywords respectively ([GH 27088](https://github.com/pandas-dev/pandas/issues/27088))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.union()` when combining a timezone aware and timezone
    unaware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 21671](https://github.com/pandas-dev/pandas/issues/21671))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when applying a numpy reduction function (e.g. `numpy.minimum()`) to a timezone
    aware [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    ([GH 15552](https://github.com/pandas-dev/pandas/issues/15552))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") in which large negative numbers were being improperly handled
    ([GH 24910](https://github.com/pandas-dev/pandas/issues/24910))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") in which numbers were being coerced to float, even though
    `errors` was not `coerce` ([GH 24910](https://github.com/pandas-dev/pandas/issues/24910))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") in which invalid values for `errors` were being allowed ([GH
    26466](https://github.com/pandas-dev/pandas/issues/26466))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `format` in which floating point complex numbers were not being formatted
    to proper display precision and trimming ([GH 25514](https://github.com/pandas-dev/pandas/issues/25514))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in error messages in [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr") and [`Series.corr()`](../reference/api/pandas.Series.corr.html#pandas.Series.corr
    "pandas.Series.corr"). Added the possibility of using a callable. ([GH 25729](https://github.com/pandas-dev/pandas/issues/25729))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.divmod()` and `Series.rdivmod()` which would raise an (incorrect)
    `ValueError` rather than return a pair of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") objects as result ([GH 25557](https://github.com/pandas-dev/pandas/issues/25557))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Raises a helpful exception when a non-numeric index is sent to `interpolate()`
    with methods which require numeric index. ([GH 21662](https://github.com/pandas-dev/pandas/issues/21662))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in [`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval")
    when comparing floats with scalar operators, for example: `x < -0.1` ([GH 25928](https://github.com/pandas-dev/pandas/issues/25928))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where casting all-boolean array to integer extension array failed
    ([GH 25211](https://github.com/pandas-dev/pandas/issues/25211))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `divmod` with a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") object containing zeros incorrectly raising `AttributeError`
    ([GH 26987](https://github.com/pandas-dev/pandas/issues/26987))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Inconsistency in [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") floor-division (//) and `divmod` filling positive//zero with
    `NaN` instead of `Inf` ([GH 27321](https://github.com/pandas-dev/pandas/issues/27321))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") when passing a dict of columns and types the `errors`
    parameter was ignored. ([GH 25905](https://github.com/pandas-dev/pandas/issues/25905))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in the `__name__` attribute of several methods of [`Series.str`](../reference/api/pandas.Series.str.html#pandas.Series.str
    "pandas.Series.str"), which were set incorrectly ([GH 23551](https://github.com/pandas-dev/pandas/issues/23551))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when passing [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") of wrong dtype to [`Series.str.cat()`](../reference/api/pandas.Series.str.cat.html#pandas.Series.str.cat
    "pandas.Series.str.cat") ([GH 22722](https://github.com/pandas-dev/pandas/issues/22722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Construction of [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") is restricted to numeric, [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") and [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") endpoints ([GH 23013](https://github.com/pandas-dev/pandas/issues/23013))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")/[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") not displaying `NaN` in [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") with missing values ([GH 25984](https://github.com/pandas-dev/pandas/issues/25984))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.get_loc()`](../reference/api/pandas.IntervalIndex.get_loc.html#pandas.IntervalIndex.get_loc
    "pandas.IntervalIndex.get_loc") where a `KeyError` would be incorrectly raised
    for a decreasing [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") ([GH 25860](https://github.com/pandas-dev/pandas/issues/25860))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    constructor where passing mixed closed [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") objects would result in a `ValueError` instead of an `object`
    dtype `Index` ([GH 27172](https://github.com/pandas-dev/pandas/issues/27172))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Improved exception message when calling [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") with a list of non-numeric objects ([GH 25753](https://github.com/pandas-dev/pandas/issues/25753)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved exception message when calling `.iloc` or `.loc` with a boolean indexer
    with different length ([GH 26658](https://github.com/pandas-dev/pandas/issues/26658)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `KeyError` exception message when indexing a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with a non-existent key not displaying the original key ([GH
    27250](https://github.com/pandas-dev/pandas/issues/27250)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.iloc` and `.loc` with a boolean indexer not raising an `IndexError`
    when too few items are passed ([GH 26658](https://github.com/pandas-dev/pandas/issues/26658)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") where `KeyError` was not raised for a `MultiIndex` when the
    key was less than or equal to the number of levels in the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 14885](https://github.com/pandas-dev/pandas/issues/14885)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in which `DataFrame.append()` produced an erroneous warning indicating that
    a `KeyError` will be thrown in the future when the data to be appended contains
    new columns ([GH 22252](https://github.com/pandas-dev/pandas/issues/22252)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in which [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") caused a segfault for a reindexed data frame, when
    the indices were single-level [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 26303](https://github.com/pandas-dev/pandas/issues/26303)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where assigning a `arrays.PandasArray` to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") would raise error ([GH 26390](https://github.com/pandas-dev/pandas/issues/26390))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow keyword arguments for callable local reference used in the [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") string ([GH 26426](https://github.com/pandas-dev/pandas/issues/26426))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed a `KeyError` when indexing a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") level with a list containing exactly one label, which is
    missing ([GH 27148](https://github.com/pandas-dev/pandas/issues/27148))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug which produced `AttributeError` on partial matching [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") in a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 26944](https://github.com/pandas-dev/pandas/issues/26944))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") and [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") with [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") values when using the `in` operator (`__contains`) with objects
    that are not comparable to the values in the `Interval` ([GH 23705](https://github.com/pandas-dev/pandas/issues/23705))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a single timezone-aware datetime64[ns] column incorrectly
    returning a scalar instead of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 27110](https://github.com/pandas-dev/pandas/issues/27110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") and [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") incorrectly raising `ValueError` instead of `TypeError`
    when a list is passed using the `in` operator (`__contains__`) ([GH 21729](https://github.com/pandas-dev/pandas/issues/21729))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting a new value in a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") object incorrectly casting the value to an integer ([GH 22717](https://github.com/pandas-dev/pandas/issues/22717))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    setting a new key (`__setitem__`) with a timezone-aware datetime incorrectly raising
    `ValueError` ([GH 12862](https://github.com/pandas-dev/pandas/issues/12862))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") when indexing with a read-only indexer ([GH 17192](https://github.com/pandas-dev/pandas/issues/17192))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    setting an existing tuple key (`__setitem__`) with timezone-aware datetime values
    incorrectly raising `TypeError` ([GH 20441](https://github.com/pandas-dev/pandas/issues/20441))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fixed misleading exception message in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") if argument `order` is required, but omitted ([GH
    10633](https://github.com/pandas-dev/pandas/issues/10633), [GH 24014](https://github.com/pandas-dev/pandas/issues/24014)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed class type displayed in exception message in [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") if invalid `axis` parameter passed ([GH 25555](https://github.com/pandas-dev/pandas/issues/25555))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A `ValueError` will now be thrown by [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") when `limit` is not a positive integer ([GH 27042](https://github.com/pandas-dev/pandas/issues/27042))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in which incorrect exception raised by [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") when testing the membership of [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 24570](https://github.com/pandas-dev/pandas/issues/24570))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IO
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") where values were truncated using display options
    instead of outputting the full content ([GH 17004](https://github.com/pandas-dev/pandas/issues/17004))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in missing text when using `to_clipboard()` if copying utf-16 characters
    in Python 3 on Windows ([GH 25040](https://github.com/pandas-dev/pandas/issues/25040))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") for `orient='table'` when it tries to infer dtypes by default,
    which is not applicable as dtypes are already defined in the JSON schema ([GH
    21345](https://github.com/pandas-dev/pandas/issues/21345))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") for `orient='table'` and float index, as it infers index dtype
    by default, which is not applicable because index dtype is already defined in
    the JSON schema ([GH 25433](https://github.com/pandas-dev/pandas/issues/25433))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") for `orient='table'` and string of float column names, as
    it makes a column name type conversion to [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp"), which is not applicable because column names are already
    defined in the JSON schema ([GH 25435](https://github.com/pandas-dev/pandas/issues/25435))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") for `errors='ignore'` where missing values in the input
    data, were filled in resulting `DataFrame` with the string `"nan"` instead of
    `numpy.nan` ([GH 25468](https://github.com/pandas-dev/pandas/issues/25468))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") now raises `TypeError` when using an invalid type
    for the `classes` parameter instead of `AssertionError` ([GH 25608](https://github.com/pandas-dev/pandas/issues/25608))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") and [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") that would lead to incorrect output when the `header`
    keyword is used ([GH 16718](https://github.com/pandas-dev/pandas/issues/16718))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not properly interpreting the UTF8 encoded filenames on Windows
    on Python 3.6+ ([GH 15086](https://github.com/pandas-dev/pandas/issues/15086))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance in [`pandas.read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") and `pandas.io.stata.StataReader` when converting columns
    that have missing values ([GH 25772](https://github.com/pandas-dev/pandas/issues/25772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") where header numbers would ignore display options
    when rounding ([GH 17280](https://github.com/pandas-dev/pandas/issues/17280))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") where reading a table from an HDF5 file written directly with
    PyTables fails with a `ValueError` when using a sub-selection via the `start`
    or `stop` arguments ([GH 11188](https://github.com/pandas-dev/pandas/issues/11188))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") not properly closing store after a `KeyError` is raised ([GH
    25766](https://github.com/pandas-dev/pandas/issues/25766))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved the explanation for the failure when value labels are repeated in Stata
    dta files and suggested work-arounds ([GH 25772](https://github.com/pandas-dev/pandas/issues/25772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved [`pandas.read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") and `pandas.io.stata.StataReader` to read incorrectly formatted
    118 format files saved by Stata ([GH 25960](https://github.com/pandas-dev/pandas/issues/25960))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved the `col_space` parameter in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") to accept a string so CSS length values can be set
    correctly ([GH 25941](https://github.com/pandas-dev/pandas/issues/25941))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in loading objects from S3 that contain `#` characters in the URL
    ([GH 25945](https://github.com/pandas-dev/pandas/issues/25945))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adds `use_bqstorage_api` parameter to [`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq
    "pandas.read_gbq") to speed up downloads of large data frames. This feature requires
    version 0.10.0 of the `pandas-gbq` library as well as the `google-cloud-bigquery-storage`
    and `fastavro` libraries. ([GH 26104](https://github.com/pandas-dev/pandas/issues/26104))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed memory leak in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") when dealing with numeric data ([GH 24889](https://github.com/pandas-dev/pandas/issues/24889))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") where date strings with `Z` were not converted to a UTC timezone
    ([GH 26168](https://github.com/pandas-dev/pandas/issues/26168))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `cache_dates=True` parameter to [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), which allows to cache unique dates when they are parsed ([GH
    25990](https://github.com/pandas-dev/pandas/issues/25990))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") now raises a `ValueError` when the caller’s dimensions
    exceed the limitations of Excel ([GH 26051](https://github.com/pandas-dev/pandas/issues/26051))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`pandas.read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where a BOM would result in incorrect parsing using engine=’python’
    ([GH 26545](https://github.com/pandas-dev/pandas/issues/26545))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") now raises a `ValueError` when input is of type `pandas.io.excel.ExcelFile`
    and `engine` param is passed since `pandas.io.excel.ExcelFile` has an engine defined
    ([GH 26566](https://github.com/pandas-dev/pandas/issues/26566))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug while selecting from `HDFStore` with `where=''` specified ([GH 26610](https://github.com/pandas-dev/pandas/issues/26610)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") where custom objects (i.e. `PeriodIndex`) inside
    merged cells were not being converted into types safe for the Excel writer ([GH
    27006](https://github.com/pandas-dev/pandas/issues/27006))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") where reading a timezone aware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") would raise a `TypeError` ([GH 11926](https://github.com/pandas-dev/pandas/issues/11926))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `to_msgpack()` and `read_msgpack()` which would raise a `ValueError`
    rather than a `FileNotFoundError` for an invalid path ([GH 27160](https://github.com/pandas-dev/pandas/issues/27160))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") which would raise a `ValueError` when the dataframe
    had no columns ([GH 27339](https://github.com/pandas-dev/pandas/issues/27339))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow parsing of [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") columns when using [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") ([GH 26934](https://github.com/pandas-dev/pandas/issues/26934))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fixed bug where [`api.extensions.ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") could not be used in matplotlib plotting
    ([GH 25587](https://github.com/pandas-dev/pandas/issues/25587))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in an error message in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot"). Improved the error message if non-numerics are passed
    to [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") ([GH 25481](https://github.com/pandas-dev/pandas/issues/25481))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in incorrect ticklabel positions when plotting an index that are non-numeric
    / non-datetime ([GH 7612](https://github.com/pandas-dev/pandas/issues/7612), [GH
    15912](https://github.com/pandas-dev/pandas/issues/15912), [GH 22334](https://github.com/pandas-dev/pandas/issues/22334))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug causing plots of [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") timeseries to fail if the frequency is a multiple of the
    frequency rule code ([GH 14763](https://github.com/pandas-dev/pandas/issues/14763))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug when plotting a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with `datetime.timezone.utc` timezone ([GH 17173](https://github.com/pandas-dev/pandas/issues/17173))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GroupBy/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Resampler.agg()` with a timezone aware index where `OverflowError` would
    raise when passing a list of functions ([GH 22660](https://github.com/pandas-dev/pandas/issues/22660))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.nunique()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nunique.html#pandas.core.groupby.DataFrameGroupBy.nunique
    "pandas.core.groupby.DataFrameGroupBy.nunique") in which the names of column levels
    were lost ([GH 23222](https://github.com/pandas-dev/pandas/issues/23222))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.agg()` when applying an aggregation function to timezone aware
    data ([GH 23683](https://github.com/pandas-dev/pandas/issues/23683))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.first()` and `GroupBy.last()` where timezone information would
    be dropped ([GH 21603](https://github.com/pandas-dev/pandas/issues/21603))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.size()` when grouping only NA values ([GH 23050](https://github.com/pandas-dev/pandas/issues/23050))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") where `observed` kwarg was previously ignored ([GH 24880](https://github.com/pandas-dev/pandas/issues/24880))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") where using `groupby` with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") Series with a list of labels equal to the length of the series
    caused incorrect grouping ([GH 25704](https://github.com/pandas-dev/pandas/issues/25704))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensured that ordering of outputs in `groupby` aggregation functions is consistent
    across all versions of Python ([GH 25692](https://github.com/pandas-dev/pandas/issues/25692))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensured that result group order is correct when grouping on an ordered `Categorical`
    and specifying `observed=True` ([GH 25871](https://github.com/pandas-dev/pandas/issues/25871),
    [GH 25167](https://github.com/pandas-dev/pandas/issues/25167))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.min()`](../reference/api/pandas.core.window.rolling.Rolling.min.html#pandas.core.window.rolling.Rolling.min
    "pandas.core.window.rolling.Rolling.min") and [`Rolling.max()`](../reference/api/pandas.core.window.rolling.Rolling.max.html#pandas.core.window.rolling.Rolling.max
    "pandas.core.window.rolling.Rolling.max") that caused a memory leak ([GH 25893](https://github.com/pandas-dev/pandas/issues/25893))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.count()`](../reference/api/pandas.core.window.rolling.Rolling.count.html#pandas.core.window.rolling.Rolling.count
    "pandas.core.window.rolling.Rolling.count") and `.Expanding.count` was previously
    ignoring the `axis` keyword ([GH 13503](https://github.com/pandas-dev/pandas/issues/13503))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.idxmax()` and `GroupBy.idxmin()` with datetime column would
    return incorrect dtype ([GH 25444](https://github.com/pandas-dev/pandas/issues/25444),
    [GH 15306](https://github.com/pandas-dev/pandas/issues/15306))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.cumsum()`, `GroupBy.cumprod()`, `GroupBy.cummin()` and `GroupBy.cummax()`
    with categorical column having absent categories, would return incorrect result
    or segfault ([GH 16771](https://github.com/pandas-dev/pandas/issues/16771))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.nth()` where NA values in the grouping would return incorrect
    results ([GH 26011](https://github.com/pandas-dev/pandas/issues/26011))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") where transforming an empty group
    would raise a `ValueError` ([GH 26208](https://github.com/pandas-dev/pandas/issues/26208))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") where passing a [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper") would return incorrect groups when using the `.groups` accessor
    ([GH 26326](https://github.com/pandas-dev/pandas/issues/26326))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.agg()` where incorrect results are returned for uint64 columns.
    ([GH 26310](https://github.com/pandas-dev/pandas/issues/26310))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.median()`](../reference/api/pandas.core.window.rolling.Rolling.median.html#pandas.core.window.rolling.Rolling.median
    "pandas.core.window.rolling.Rolling.median") and [`Rolling.quantile()`](../reference/api/pandas.core.window.rolling.Rolling.quantile.html#pandas.core.window.rolling.Rolling.quantile
    "pandas.core.window.rolling.Rolling.quantile") where MemoryError is raised with
    empty window ([GH 26005](https://github.com/pandas-dev/pandas/issues/26005))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.median()`](../reference/api/pandas.core.window.rolling.Rolling.median.html#pandas.core.window.rolling.Rolling.median
    "pandas.core.window.rolling.Rolling.median") and [`Rolling.quantile()`](../reference/api/pandas.core.window.rolling.Rolling.quantile.html#pandas.core.window.rolling.Rolling.quantile
    "pandas.core.window.rolling.Rolling.quantile") where incorrect results are returned
    with `closed='left'` and `closed='neither'` ([GH 26005](https://github.com/pandas-dev/pandas/issues/26005))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved `Rolling`, `Window` and `ExponentialMovingWindow` functions to exclude
    nuisance columns from results instead of raising errors and raise a `DataError`
    only if all columns are nuisance ([GH 12537](https://github.com/pandas-dev/pandas/issues/12537))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.max()`](../reference/api/pandas.core.window.rolling.Rolling.max.html#pandas.core.window.rolling.Rolling.max
    "pandas.core.window.rolling.Rolling.max") and [`Rolling.min()`](../reference/api/pandas.core.window.rolling.Rolling.min.html#pandas.core.window.rolling.Rolling.min
    "pandas.core.window.rolling.Rolling.min") where incorrect results are returned
    with an empty variable window ([GH 26005](https://github.com/pandas-dev/pandas/issues/26005))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Raise a helpful exception when an unsupported weighted window function is used
    as an argument of `Window.aggregate()` ([GH 26597](https://github.com/pandas-dev/pandas/issues/26597))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`pandas.merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    adds a string of `None`, if `None` is assigned in suffixes instead of remain the
    column name as-is ([GH 24782](https://github.com/pandas-dev/pandas/issues/24782)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    when merging by index name would sometimes result in an incorrectly numbered index
    (missing index values are now assigned NA) ([GH 24212](https://github.com/pandas-dev/pandas/issues/24212),
    [GH 25009](https://github.com/pandas-dev/pandas/issues/25009))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_records()` now accepts dtypes to its `column_dtypes` parameter ([GH 24895](https://github.com/pandas-dev/pandas/issues/24895))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    where order of `OrderedDict` (and `dict` in Python 3.6+) is not respected, when
    passed in as `objs` argument ([GH 21510](https://github.com/pandas-dev/pandas/issues/21510))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") where columns with `NaN` values are dropped even if `dropna`
    argument is `False`, when the `aggfunc` argument contains a `list` ([GH 22159](https://github.com/pandas-dev/pandas/issues/22159))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    where the resulting `freq` of two [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with the same `freq` would be dropped ([GH 3232](https://github.com/pandas-dev/pandas/issues/3232)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    where merging with equivalent Categorical dtypes was raising an error ([GH 22501](https://github.com/pandas-dev/pandas/issues/22501))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") instantiating with a dict of iterators or generators (e.g.
    `pd.DataFrame({''A'': reversed(range(3))})`) raised an error ([GH 26349](https://github.com/pandas-dev/pandas/issues/26349)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") instantiating with a `range` (e.g. `pd.DataFrame(range(3))`)
    raised an error ([GH 26342](https://github.com/pandas-dev/pandas/issues/26342)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor when passing non-empty tuples would cause a segmentation
    fault ([GH 25691](https://github.com/pandas-dev/pandas/issues/25691))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.apply()`](../reference/api/pandas.Series.apply.html#pandas.Series.apply
    "pandas.Series.apply") failed when the series is a timezone aware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 25959](https://github.com/pandas-dev/pandas/issues/25959))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut")
    where large bins could incorrectly raise an error due to an integer overflow ([GH
    26045](https://github.com/pandas-dev/pandas/issues/26045))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index") where an error is thrown when a multi-indexed `DataFrame`
    is sorted on all levels with the initial level sorted last ([GH 26053](https://github.com/pandas-dev/pandas/issues/26053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.nlargest()`](../reference/api/pandas.Series.nlargest.html#pandas.Series.nlargest
    "pandas.Series.nlargest") treats `True` as smaller than `False` ([GH 26154](https://github.com/pandas-dev/pandas/issues/26154))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") with a [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") as pivot index would raise `TypeError` ([GH 25814](https://github.com/pandas-dev/pandas/issues/25814))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in which [`DataFrame.from_dict()`](../reference/api/pandas.DataFrame.from_dict.html#pandas.DataFrame.from_dict
    "pandas.DataFrame.from_dict") ignored order of `OrderedDict` when `orient='index'`
    ([GH 8425](https://github.com/pandas-dev/pandas/issues/8425)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.transpose()`](../reference/api/pandas.DataFrame.transpose.html#pandas.DataFrame.transpose
    "pandas.DataFrame.transpose") where transposing a DataFrame with a timezone-aware
    datetime column would incorrectly raise `ValueError` ([GH 26825](https://github.com/pandas-dev/pandas/issues/26825))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") when pivoting a timezone aware column as the `values` would
    remove timezone information ([GH 14948](https://github.com/pandas-dev/pandas/issues/14948))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") when specifying multiple `by` columns where one is `datetime64[ns,
    tz]` dtype ([GH 26649](https://github.com/pandas-dev/pandas/issues/26649))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Significant speedup in `SparseArray` initialization that benefits most operations,
    fixing performance regression introduced in v0.20.0 ([GH 24985](https://github.com/pandas-dev/pandas/issues/24985))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseFrame` constructor where passing `None` as the data would cause
    `default_fill_value` to be ignored ([GH 16807](https://github.com/pandas-dev/pandas/issues/16807))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseDataFrame` when adding a column in which the length of values
    does not match length of index, `AssertionError` is raised instead of raising
    `ValueError` ([GH 25484](https://github.com/pandas-dev/pandas/issues/25484))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduce a better error message in [`Series.sparse.from_coo()`](../reference/api/pandas.Series.sparse.from_coo.html#pandas.Series.sparse.from_coo
    "pandas.Series.sparse.from_coo") so it returns a `TypeError` for inputs that are
    not coo matrices ([GH 26554](https://github.com/pandas-dev/pandas/issues/26554))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `numpy.modf()` on a `SparseArray`. Now a tuple of `SparseArray` is returned
    ([GH 26946](https://github.com/pandas-dev/pandas/issues/26946)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Build changes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fix install error with PyPy on macOS ([GH 26536](https://github.com/pandas-dev/pandas/issues/26536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") when passing an `ExtensionArray` with a custom `na_sentinel`
    ([GH 25696](https://github.com/pandas-dev/pandas/issues/25696)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.count()`](../reference/api/pandas.Series.count.html#pandas.Series.count
    "pandas.Series.count") miscounts NA values in ExtensionArrays ([GH 26835](https://github.com/pandas-dev/pandas/issues/26835))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `Series.__array_ufunc__` to better handle NumPy ufuncs applied to Series
    backed by extension arrays ([GH 23293](https://github.com/pandas-dev/pandas/issues/23293)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keyword argument `deep` has been removed from `ExtensionArray.copy()` ([GH 27083](https://github.com/pandas-dev/pandas/issues/27083))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Removed unused C functions from vendored UltraJSON implementation ([GH 26198](https://github.com/pandas-dev/pandas/issues/26198))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    and [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex "pandas.RangeIndex")
    to be passed to numpy `min` and `max` functions ([GH 26125](https://github.com/pandas-dev/pandas/issues/26125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use actual class name in repr of empty objects of a `Series` subclass ([GH 27001](https://github.com/pandas-dev/pandas/issues/27001)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") where passing an object array of timezone-aware `datetime`
    objects would incorrectly raise `ValueError` ([GH 13287](https://github.com/pandas-dev/pandas/issues/13287))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.at()`](../reference/api/pandas.DataFrame.at.html#pandas.DataFrame.at
    "pandas.DataFrame.at") and [`Series.at()`](../reference/api/pandas.Series.at.html#pandas.Series.at
    "pandas.Series.at") that would raise exception if the index was a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") ([GH 20629](https://github.com/pandas-dev/pandas/issues/20629))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in comparison of ordered [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") that contained missing values with a scalar which sometimes
    incorrectly resulted in `True` ([GH 26504](https://github.com/pandas-dev/pandas/issues/26504))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") when the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") containing [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") objects incorrectly raised a `TypeError` ([GH 25087](https://github.com/pandas-dev/pandas/issues/25087))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") which would raise an (incorrect) `ValueError` when called
    with a date far into the future and the `format` argument specified instead of
    raising `OutOfBoundsDatetime` ([GH 23830](https://github.com/pandas-dev/pandas/issues/23830))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") which would raise `InvalidIndexError: Reindexing only valid
    with uniquely valued Index objects` when called with `cache=True`, with `arg`
    including at least two different elements from the set `{None, numpy.nan, pandas.NaT}`
    ([GH 22305](https://github.com/pandas-dev/pandas/issues/22305))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") where timezone aware data with `dtype='datetime64[ns]` was not
    cast to naive ([GH 25843](https://github.com/pandas-dev/pandas/issues/25843))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") type checking in various datetime functions to prevent exceptions
    when using a subclassed `datetime` ([GH 25851](https://github.com/pandas-dev/pandas/issues/25851))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    repr where `np.datetime64('NaT')` and `np.timedelta64('NaT')` with `dtype=object`
    would be represented as `NaN` ([GH 25445](https://github.com/pandas-dev/pandas/issues/25445))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") which does not replace the invalid argument with `NaT` when
    error is set to coerce ([GH 26122](https://github.com/pandas-dev/pandas/issues/26122))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in adding `DateOffset` with nonzero month to [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") would raise `ValueError` ([GH 26258](https://github.com/pandas-dev/pandas/issues/26258))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") which raises unhandled `OverflowError` when called with
    mix of invalid dates and `NaN` values with `format='%Y%m%d'` and `error='coerce'`
    ([GH 25512](https://github.com/pandas-dev/pandas/issues/25512))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `isin()` for datetimelike indexes; [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") and [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") where the `levels` parameter was ignored. ([GH 26675](https://github.com/pandas-dev/pandas/issues/26675))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") which raises `TypeError` for `format='%Y%m%d'` when called
    for invalid integer dates with length >= 6 digits with `errors='ignore'`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when comparing a [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") against a zero-dimensional numpy array ([GH 26689](https://github.com/pandas-dev/pandas/issues/26689))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a `Series` or `DataFrame` from a numpy `datetime64` array
    with a non-ns unit and out-of-bound timestamps generating rubbish data, which
    will now correctly raise an `OutOfBoundsDatetime` error ([GH 26206](https://github.com/pandas-dev/pandas/issues/26206)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") with unnecessary `OverflowError` being raised for very large
    or very small dates ([GH 26651](https://github.com/pandas-dev/pandas/issues/26651))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where adding [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") to a `np.timedelta64` object would raise instead of returning
    a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    ([GH 24775](https://github.com/pandas-dev/pandas/issues/24775))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where comparing a zero-dimensional numpy array containing a `np.datetime64`
    object to a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") would incorrect raise `TypeError` ([GH 26916](https://github.com/pandas-dev/pandas/issues/26916))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") which would raise `ValueError: Tz-aware datetime.datetime
    cannot be converted to datetime64 unless utc=True` when called with `cache=True`,
    with `arg` including datetime strings with different offset ([GH 26097](https://github.com/pandas-dev/pandas/issues/26097))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `TimedeltaIndex.intersection()` where for non-monotonic indices in some
    cases an empty `Index` was returned when in fact an intersection existed ([GH
    25913](https://github.com/pandas-dev/pandas/issues/25913))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug with comparisons between [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") and `NaT` raising `TypeError` ([GH 26039](https://github.com/pandas-dev/pandas/issues/26039))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when adding or subtracting a `BusinessHour` to a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with the resulting time landing in a following or prior day
    respectively ([GH 26381](https://github.com/pandas-dev/pandas/issues/26381))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when comparing a [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") against a zero-dimensional numpy array ([GH 26689](https://github.com/pandas-dev/pandas/issues/26689))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex.to_frame()`](../reference/api/pandas.DatetimeIndex.to_frame.html#pandas.DatetimeIndex.to_frame
    "pandas.DatetimeIndex.to_frame") where timezone aware data would be converted
    to timezone naive data ([GH 25809](https://github.com/pandas-dev/pandas/issues/25809))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `utc=True` and datetime strings that would apply previously
    parsed UTC offsets to subsequent arguments ([GH 24992](https://github.com/pandas-dev/pandas/issues/24992))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.tz_localize()`](../reference/api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize") and [`Timestamp.tz_convert()`](../reference/api/pandas.Timestamp.tz_convert.html#pandas.Timestamp.tz_convert
    "pandas.Timestamp.tz_convert") does not propagate `freq` ([GH 25241](https://github.com/pandas-dev/pandas/issues/25241))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.at()`](../reference/api/pandas.Series.at.html#pandas.Series.at
    "pandas.Series.at") where setting [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with timezone raises `TypeError` ([GH 25506](https://github.com/pandas-dev/pandas/issues/25506))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.update()`](../reference/api/pandas.DataFrame.update.html#pandas.DataFrame.update
    "pandas.DataFrame.update") when updating with timezone aware data would return
    timezone naive data ([GH 25807](https://github.com/pandas-dev/pandas/issues/25807))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") where an uninformative `RuntimeError` was raised when passing
    a naive [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with datetime strings with mixed UTC offsets ([GH 25978](https://github.com/pandas-dev/pandas/issues/25978))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `unit='ns'` would drop timezone information from the
    parsed argument ([GH 26168](https://github.com/pandas-dev/pandas/issues/26168))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") where joining a timezone aware index with a timezone
    aware column would result in a column of `NaN` ([GH 26335](https://github.com/pandas-dev/pandas/issues/26335))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") where ambiguous or nonexistent start or end times were not
    handled by the `ambiguous` or `nonexistent` keywords respectively ([GH 27088](https://github.com/pandas-dev/pandas/issues/27088))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.union()` when combining a timezone aware and timezone
    unaware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 21671](https://github.com/pandas-dev/pandas/issues/21671))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when applying a numpy reduction function (e.g. `numpy.minimum()`) to a timezone
    aware [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    ([GH 15552](https://github.com/pandas-dev/pandas/issues/15552))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") in which large negative numbers were being improperly handled
    ([GH 24910](https://github.com/pandas-dev/pandas/issues/24910))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") in which numbers were being coerced to float, even though
    `errors` was not `coerce` ([GH 24910](https://github.com/pandas-dev/pandas/issues/24910))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") in which invalid values for `errors` were being allowed ([GH
    26466](https://github.com/pandas-dev/pandas/issues/26466))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `format` in which floating point complex numbers were not being formatted
    to proper display precision and trimming ([GH 25514](https://github.com/pandas-dev/pandas/issues/25514))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in error messages in [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr") and [`Series.corr()`](../reference/api/pandas.Series.corr.html#pandas.Series.corr
    "pandas.Series.corr"). Added the possibility of using a callable. ([GH 25729](https://github.com/pandas-dev/pandas/issues/25729))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.divmod()` and `Series.rdivmod()` which would raise an (incorrect)
    `ValueError` rather than return a pair of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") objects as result ([GH 25557](https://github.com/pandas-dev/pandas/issues/25557))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Raises a helpful exception when a non-numeric index is sent to `interpolate()`
    with methods which require numeric index. ([GH 21662](https://github.com/pandas-dev/pandas/issues/21662))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in [`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval")
    when comparing floats with scalar operators, for example: `x < -0.1` ([GH 25928](https://github.com/pandas-dev/pandas/issues/25928))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where casting all-boolean array to integer extension array failed
    ([GH 25211](https://github.com/pandas-dev/pandas/issues/25211))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `divmod` with a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") object containing zeros incorrectly raising `AttributeError`
    ([GH 26987](https://github.com/pandas-dev/pandas/issues/26987))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Inconsistency in [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") floor-division (//) and `divmod` filling positive//zero with
    `NaN` instead of `Inf` ([GH 27321](https://github.com/pandas-dev/pandas/issues/27321))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") when passing a dict of columns and types the `errors`
    parameter was ignored. ([GH 25905](https://github.com/pandas-dev/pandas/issues/25905))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in the `__name__` attribute of several methods of [`Series.str`](../reference/api/pandas.Series.str.html#pandas.Series.str
    "pandas.Series.str"), which were set incorrectly ([GH 23551](https://github.com/pandas-dev/pandas/issues/23551))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when passing [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") of wrong dtype to [`Series.str.cat()`](../reference/api/pandas.Series.str.cat.html#pandas.Series.str.cat
    "pandas.Series.str.cat") ([GH 22722](https://github.com/pandas-dev/pandas/issues/22722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Construction of [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") is restricted to numeric, [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") and [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") endpoints ([GH 23013](https://github.com/pandas-dev/pandas/issues/23013))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")/[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") not displaying `NaN` in [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") with missing values ([GH 25984](https://github.com/pandas-dev/pandas/issues/25984))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.get_loc()`](../reference/api/pandas.IntervalIndex.get_loc.html#pandas.IntervalIndex.get_loc
    "pandas.IntervalIndex.get_loc") where a `KeyError` would be incorrectly raised
    for a decreasing [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") ([GH 25860](https://github.com/pandas-dev/pandas/issues/25860))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    constructor where passing mixed closed [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") objects would result in a `ValueError` instead of an `object`
    dtype `Index` ([GH 27172](https://github.com/pandas-dev/pandas/issues/27172))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Improved exception message when calling [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") with a list of non-numeric objects ([GH 25753](https://github.com/pandas-dev/pandas/issues/25753)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved exception message when calling `.iloc` or `.loc` with a boolean indexer
    with different length ([GH 26658](https://github.com/pandas-dev/pandas/issues/26658)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `KeyError` exception message when indexing a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with a non-existent key not displaying the original key ([GH
    27250](https://github.com/pandas-dev/pandas/issues/27250)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.iloc` and `.loc` with a boolean indexer not raising an `IndexError`
    when too few items are passed ([GH 26658](https://github.com/pandas-dev/pandas/issues/26658)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") where `KeyError` was not raised for a `MultiIndex` when the
    key was less than or equal to the number of levels in the [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 14885](https://github.com/pandas-dev/pandas/issues/14885)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in which `DataFrame.append()` produced an erroneous warning indicating that
    a `KeyError` will be thrown in the future when the data to be appended contains
    new columns ([GH 22252](https://github.com/pandas-dev/pandas/issues/22252)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in which [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") caused a segfault for a reindexed data frame, when
    the indices were single-level [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 26303](https://github.com/pandas-dev/pandas/issues/26303)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where assigning a `arrays.PandasArray` to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") would raise error ([GH 26390](https://github.com/pandas-dev/pandas/issues/26390))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow keyword arguments for callable local reference used in the [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") string ([GH 26426](https://github.com/pandas-dev/pandas/issues/26426))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed a `KeyError` when indexing a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") level with a list containing exactly one label, which is
    missing ([GH 27148](https://github.com/pandas-dev/pandas/issues/27148))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug which produced `AttributeError` on partial matching [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") in a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 26944](https://github.com/pandas-dev/pandas/issues/26944))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") and [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") with [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") values when using the `in` operator (`__contains`) with objects
    that are not comparable to the values in the `Interval` ([GH 23705](https://github.com/pandas-dev/pandas/issues/23705))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a single timezone-aware datetime64[ns] column incorrectly
    returning a scalar instead of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 27110](https://github.com/pandas-dev/pandas/issues/27110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") and [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") incorrectly raising `ValueError` instead of `TypeError`
    when a list is passed using the `in` operator (`__contains__`) ([GH 21729](https://github.com/pandas-dev/pandas/issues/21729))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting a new value in a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") object incorrectly casting the value to an integer ([GH 22717](https://github.com/pandas-dev/pandas/issues/22717))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    setting a new key (`__setitem__`) with a timezone-aware datetime incorrectly raising
    `ValueError` ([GH 12862](https://github.com/pandas-dev/pandas/issues/12862))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") when indexing with a read-only indexer ([GH 17192](https://github.com/pandas-dev/pandas/issues/17192))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    setting an existing tuple key (`__setitem__`) with timezone-aware datetime values
    incorrectly raising `TypeError` ([GH 20441](https://github.com/pandas-dev/pandas/issues/20441))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fixed misleading exception message in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") if argument `order` is required, but omitted ([GH
    10633](https://github.com/pandas-dev/pandas/issues/10633), [GH 24014](https://github.com/pandas-dev/pandas/issues/24014)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed class type displayed in exception message in [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") if invalid `axis` parameter passed ([GH 25555](https://github.com/pandas-dev/pandas/issues/25555))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A `ValueError` will now be thrown by [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") when `limit` is not a positive integer ([GH 27042](https://github.com/pandas-dev/pandas/issues/27042))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in which incorrect exception raised by [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") when testing the membership of [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 24570](https://github.com/pandas-dev/pandas/issues/24570))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IO
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") where values were truncated using display options
    instead of outputting the full content ([GH 17004](https://github.com/pandas-dev/pandas/issues/17004))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in missing text when using `to_clipboard()` if copying utf-16 characters
    in Python 3 on Windows ([GH 25040](https://github.com/pandas-dev/pandas/issues/25040))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") for `orient='table'` when it tries to infer dtypes by default,
    which is not applicable as dtypes are already defined in the JSON schema ([GH
    21345](https://github.com/pandas-dev/pandas/issues/21345))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") for `orient='table'` and float index, as it infers index dtype
    by default, which is not applicable because index dtype is already defined in
    the JSON schema ([GH 25433](https://github.com/pandas-dev/pandas/issues/25433))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") for `orient='table'` and string of float column names, as
    it makes a column name type conversion to [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp"), which is not applicable because column names are already
    defined in the JSON schema ([GH 25435](https://github.com/pandas-dev/pandas/issues/25435))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") for `errors='ignore'` where missing values in the input
    data, were filled in resulting `DataFrame` with the string `"nan"` instead of
    `numpy.nan` ([GH 25468](https://github.com/pandas-dev/pandas/issues/25468))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") now raises `TypeError` when using an invalid type
    for the `classes` parameter instead of `AssertionError` ([GH 25608](https://github.com/pandas-dev/pandas/issues/25608))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") and [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") that would lead to incorrect output when the `header`
    keyword is used ([GH 16718](https://github.com/pandas-dev/pandas/issues/16718))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") not properly interpreting the UTF8 encoded filenames on Windows
    on Python 3.6+ ([GH 15086](https://github.com/pandas-dev/pandas/issues/15086))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance in [`pandas.read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") and `pandas.io.stata.StataReader` when converting columns
    that have missing values ([GH 25772](https://github.com/pandas-dev/pandas/issues/25772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") where header numbers would ignore display options
    when rounding ([GH 17280](https://github.com/pandas-dev/pandas/issues/17280))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") where reading a table from an HDF5 file written directly with
    PyTables fails with a `ValueError` when using a sub-selection via the `start`
    or `stop` arguments ([GH 11188](https://github.com/pandas-dev/pandas/issues/11188))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") not properly closing store after a `KeyError` is raised ([GH
    25766](https://github.com/pandas-dev/pandas/issues/25766))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved the explanation for the failure when value labels are repeated in Stata
    dta files and suggested work-arounds ([GH 25772](https://github.com/pandas-dev/pandas/issues/25772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved [`pandas.read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") and `pandas.io.stata.StataReader` to read incorrectly formatted
    118 format files saved by Stata ([GH 25960](https://github.com/pandas-dev/pandas/issues/25960))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved the `col_space` parameter in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") to accept a string so CSS length values can be set
    correctly ([GH 25941](https://github.com/pandas-dev/pandas/issues/25941))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in loading objects from S3 that contain `#` characters in the URL
    ([GH 25945](https://github.com/pandas-dev/pandas/issues/25945))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adds `use_bqstorage_api` parameter to [`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq
    "pandas.read_gbq") to speed up downloads of large data frames. This feature requires
    version 0.10.0 of the `pandas-gbq` library as well as the `google-cloud-bigquery-storage`
    and `fastavro` libraries. ([GH 26104](https://github.com/pandas-dev/pandas/issues/26104))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed memory leak in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") when dealing with numeric data ([GH 24889](https://github.com/pandas-dev/pandas/issues/24889))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") where date strings with `Z` were not converted to a UTC timezone
    ([GH 26168](https://github.com/pandas-dev/pandas/issues/26168))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `cache_dates=True` parameter to [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), which allows to cache unique dates when they are parsed ([GH
    25990](https://github.com/pandas-dev/pandas/issues/25990))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") now raises a `ValueError` when the caller’s dimensions
    exceed the limitations of Excel ([GH 26051](https://github.com/pandas-dev/pandas/issues/26051))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`pandas.read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where a BOM would result in incorrect parsing using engine=’python’
    ([GH 26545](https://github.com/pandas-dev/pandas/issues/26545))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") now raises a `ValueError` when input is of type `pandas.io.excel.ExcelFile`
    and `engine` param is passed since `pandas.io.excel.ExcelFile` has an engine defined
    ([GH 26566](https://github.com/pandas-dev/pandas/issues/26566))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug while selecting from `HDFStore` with `where=''` specified ([GH 26610](https://github.com/pandas-dev/pandas/issues/26610)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") where custom objects (i.e. `PeriodIndex`) inside
    merged cells were not being converted into types safe for the Excel writer ([GH
    27006](https://github.com/pandas-dev/pandas/issues/27006))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") where reading a timezone aware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") would raise a `TypeError` ([GH 11926](https://github.com/pandas-dev/pandas/issues/11926))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `to_msgpack()` and `read_msgpack()` which would raise a `ValueError`
    rather than a `FileNotFoundError` for an invalid path ([GH 27160](https://github.com/pandas-dev/pandas/issues/27160))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") which would raise a `ValueError` when the dataframe
    had no columns ([GH 27339](https://github.com/pandas-dev/pandas/issues/27339))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow parsing of [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") columns when using [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") ([GH 26934](https://github.com/pandas-dev/pandas/issues/26934))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fixed bug where [`api.extensions.ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") could not be used in matplotlib plotting
    ([GH 25587](https://github.com/pandas-dev/pandas/issues/25587))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in an error message in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot"). Improved the error message if non-numerics are passed
    to [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") ([GH 25481](https://github.com/pandas-dev/pandas/issues/25481))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in incorrect ticklabel positions when plotting an index that are non-numeric
    / non-datetime ([GH 7612](https://github.com/pandas-dev/pandas/issues/7612), [GH
    15912](https://github.com/pandas-dev/pandas/issues/15912), [GH 22334](https://github.com/pandas-dev/pandas/issues/22334))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug causing plots of [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") timeseries to fail if the frequency is a multiple of the
    frequency rule code ([GH 14763](https://github.com/pandas-dev/pandas/issues/14763))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug when plotting a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with `datetime.timezone.utc` timezone ([GH 17173](https://github.com/pandas-dev/pandas/issues/17173))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GroupBy/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Resampler.agg()` with a timezone aware index where `OverflowError` would
    raise when passing a list of functions ([GH 22660](https://github.com/pandas-dev/pandas/issues/22660))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.nunique()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nunique.html#pandas.core.groupby.DataFrameGroupBy.nunique
    "pandas.core.groupby.DataFrameGroupBy.nunique") in which the names of column levels
    were lost ([GH 23222](https://github.com/pandas-dev/pandas/issues/23222))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.agg()` when applying an aggregation function to timezone aware
    data ([GH 23683](https://github.com/pandas-dev/pandas/issues/23683))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.first()` and `GroupBy.last()` where timezone information would
    be dropped ([GH 21603](https://github.com/pandas-dev/pandas/issues/21603))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.size()` when grouping only NA values ([GH 23050](https://github.com/pandas-dev/pandas/issues/23050))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") where `observed` kwarg was previously ignored ([GH 24880](https://github.com/pandas-dev/pandas/issues/24880))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") where using `groupby` with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") Series with a list of labels equal to the length of the series
    caused incorrect grouping ([GH 25704](https://github.com/pandas-dev/pandas/issues/25704))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensured that ordering of outputs in `groupby` aggregation functions is consistent
    across all versions of Python ([GH 25692](https://github.com/pandas-dev/pandas/issues/25692))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensured that result group order is correct when grouping on an ordered `Categorical`
    and specifying `observed=True` ([GH 25871](https://github.com/pandas-dev/pandas/issues/25871),
    [GH 25167](https://github.com/pandas-dev/pandas/issues/25167))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.min()`](../reference/api/pandas.core.window.rolling.Rolling.min.html#pandas.core.window.rolling.Rolling.min
    "pandas.core.window.rolling.Rolling.min") and [`Rolling.max()`](../reference/api/pandas.core.window.rolling.Rolling.max.html#pandas.core.window.rolling.Rolling.max
    "pandas.core.window.rolling.Rolling.max") that caused a memory leak ([GH 25893](https://github.com/pandas-dev/pandas/issues/25893))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.count()`](../reference/api/pandas.core.window.rolling.Rolling.count.html#pandas.core.window.rolling.Rolling.count
    "pandas.core.window.rolling.Rolling.count") and `.Expanding.count` was previously
    ignoring the `axis` keyword ([GH 13503](https://github.com/pandas-dev/pandas/issues/13503))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.idxmax()` and `GroupBy.idxmin()` with datetime column would
    return incorrect dtype ([GH 25444](https://github.com/pandas-dev/pandas/issues/25444),
    [GH 15306](https://github.com/pandas-dev/pandas/issues/15306))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.cumsum()`, `GroupBy.cumprod()`, `GroupBy.cummin()` and `GroupBy.cummax()`
    with categorical column having absent categories, would return incorrect result
    or segfault ([GH 16771](https://github.com/pandas-dev/pandas/issues/16771))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.nth()` where NA values in the grouping would return incorrect
    results ([GH 26011](https://github.com/pandas-dev/pandas/issues/26011))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") where transforming an empty group
    would raise a `ValueError` ([GH 26208](https://github.com/pandas-dev/pandas/issues/26208))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") where passing a [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper") would return incorrect groups when using the `.groups` accessor
    ([GH 26326](https://github.com/pandas-dev/pandas/issues/26326))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `GroupBy.agg()` where incorrect results are returned for uint64 columns.
    ([GH 26310](https://github.com/pandas-dev/pandas/issues/26310))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.median()`](../reference/api/pandas.core.window.rolling.Rolling.median.html#pandas.core.window.rolling.Rolling.median
    "pandas.core.window.rolling.Rolling.median") and [`Rolling.quantile()`](../reference/api/pandas.core.window.rolling.Rolling.quantile.html#pandas.core.window.rolling.Rolling.quantile
    "pandas.core.window.rolling.Rolling.quantile") where MemoryError is raised with
    empty window ([GH 26005](https://github.com/pandas-dev/pandas/issues/26005))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.median()`](../reference/api/pandas.core.window.rolling.Rolling.median.html#pandas.core.window.rolling.Rolling.median
    "pandas.core.window.rolling.Rolling.median") and [`Rolling.quantile()`](../reference/api/pandas.core.window.rolling.Rolling.quantile.html#pandas.core.window.rolling.Rolling.quantile
    "pandas.core.window.rolling.Rolling.quantile") where incorrect results are returned
    with `closed='left'` and `closed='neither'` ([GH 26005](https://github.com/pandas-dev/pandas/issues/26005))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved `Rolling`, `Window` and `ExponentialMovingWindow` functions to exclude
    nuisance columns from results instead of raising errors and raise a `DataError`
    only if all columns are nuisance ([GH 12537](https://github.com/pandas-dev/pandas/issues/12537))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Rolling.max()`](../reference/api/pandas.core.window.rolling.Rolling.max.html#pandas.core.window.rolling.Rolling.max
    "pandas.core.window.rolling.Rolling.max") and [`Rolling.min()`](../reference/api/pandas.core.window.rolling.Rolling.min.html#pandas.core.window.rolling.Rolling.min
    "pandas.core.window.rolling.Rolling.min") where incorrect results are returned
    with an empty variable window ([GH 26005](https://github.com/pandas-dev/pandas/issues/26005))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Raise a helpful exception when an unsupported weighted window function is used
    as an argument of `Window.aggregate()` ([GH 26597](https://github.com/pandas-dev/pandas/issues/26597))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`pandas.merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    adds a string of `None`, if `None` is assigned in suffixes instead of remain the
    column name as-is ([GH 24782](https://github.com/pandas-dev/pandas/issues/24782)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    when merging by index name would sometimes result in an incorrectly numbered index
    (missing index values are now assigned NA) ([GH 24212](https://github.com/pandas-dev/pandas/issues/24212),
    [GH 25009](https://github.com/pandas-dev/pandas/issues/25009))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_records()` now accepts dtypes to its `column_dtypes` parameter ([GH 24895](https://github.com/pandas-dev/pandas/issues/24895))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    where order of `OrderedDict` (and `dict` in Python 3.6+) is not respected, when
    passed in as `objs` argument ([GH 21510](https://github.com/pandas-dev/pandas/issues/21510))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") where columns with `NaN` values are dropped even if `dropna`
    argument is `False`, when the `aggfunc` argument contains a `list` ([GH 22159](https://github.com/pandas-dev/pandas/issues/22159))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    where the resulting `freq` of two [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with the same `freq` would be dropped ([GH 3232](https://github.com/pandas-dev/pandas/issues/3232)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    where merging with equivalent Categorical dtypes was raising an error ([GH 22501](https://github.com/pandas-dev/pandas/issues/22501))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") instantiating with a dict of iterators or generators (e.g.
    `pd.DataFrame({''A'': reversed(range(3))})`) raised an error ([GH 26349](https://github.com/pandas-dev/pandas/issues/26349)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") instantiating with a `range` (e.g. `pd.DataFrame(range(3))`)
    raised an error ([GH 26342](https://github.com/pandas-dev/pandas/issues/26342)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor when passing non-empty tuples would cause a segmentation
    fault ([GH 25691](https://github.com/pandas-dev/pandas/issues/25691))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.apply()`](../reference/api/pandas.Series.apply.html#pandas.Series.apply
    "pandas.Series.apply") failed when the series is a timezone aware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 25959](https://github.com/pandas-dev/pandas/issues/25959))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut")
    where large bins could incorrectly raise an error due to an integer overflow ([GH
    26045](https://github.com/pandas-dev/pandas/issues/26045))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index") where an error is thrown when a multi-indexed `DataFrame`
    is sorted on all levels with the initial level sorted last ([GH 26053](https://github.com/pandas-dev/pandas/issues/26053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.nlargest()`](../reference/api/pandas.Series.nlargest.html#pandas.Series.nlargest
    "pandas.Series.nlargest") treats `True` as smaller than `False` ([GH 26154](https://github.com/pandas-dev/pandas/issues/26154))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") with a [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") as pivot index would raise `TypeError` ([GH 25814](https://github.com/pandas-dev/pandas/issues/25814))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in which [`DataFrame.from_dict()`](../reference/api/pandas.DataFrame.from_dict.html#pandas.DataFrame.from_dict
    "pandas.DataFrame.from_dict") ignored order of `OrderedDict` when `orient='index'`
    ([GH 8425](https://github.com/pandas-dev/pandas/issues/8425)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.transpose()`](../reference/api/pandas.DataFrame.transpose.html#pandas.DataFrame.transpose
    "pandas.DataFrame.transpose") where transposing a DataFrame with a timezone-aware
    datetime column would incorrectly raise `ValueError` ([GH 26825](https://github.com/pandas-dev/pandas/issues/26825))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") when pivoting a timezone aware column as the `values` would
    remove timezone information ([GH 14948](https://github.com/pandas-dev/pandas/issues/14948))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") when specifying multiple `by` columns where one is `datetime64[ns,
    tz]` dtype ([GH 26649](https://github.com/pandas-dev/pandas/issues/26649))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Significant speedup in `SparseArray` initialization that benefits most operations,
    fixing performance regression introduced in v0.20.0 ([GH 24985](https://github.com/pandas-dev/pandas/issues/24985))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseFrame` constructor where passing `None` as the data would cause
    `default_fill_value` to be ignored ([GH 16807](https://github.com/pandas-dev/pandas/issues/16807))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SparseDataFrame` when adding a column in which the length of values
    does not match length of index, `AssertionError` is raised instead of raising
    `ValueError` ([GH 25484](https://github.com/pandas-dev/pandas/issues/25484))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduce a better error message in [`Series.sparse.from_coo()`](../reference/api/pandas.Series.sparse.from_coo.html#pandas.Series.sparse.from_coo
    "pandas.Series.sparse.from_coo") so it returns a `TypeError` for inputs that are
    not coo matrices ([GH 26554](https://github.com/pandas-dev/pandas/issues/26554))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `numpy.modf()` on a `SparseArray`. Now a tuple of `SparseArray` is returned
    ([GH 26946](https://github.com/pandas-dev/pandas/issues/26946)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Build changes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fix install error with PyPy on macOS ([GH 26536](https://github.com/pandas-dev/pandas/issues/26536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") when passing an `ExtensionArray` with a custom `na_sentinel`
    ([GH 25696](https://github.com/pandas-dev/pandas/issues/25696)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.count()`](../reference/api/pandas.Series.count.html#pandas.Series.count
    "pandas.Series.count") miscounts NA values in ExtensionArrays ([GH 26835](https://github.com/pandas-dev/pandas/issues/26835))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `Series.__array_ufunc__` to better handle NumPy ufuncs applied to Series
    backed by extension arrays ([GH 23293](https://github.com/pandas-dev/pandas/issues/23293)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keyword argument `deep` has been removed from `ExtensionArray.copy()` ([GH 27083](https://github.com/pandas-dev/pandas/issues/27083))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Removed unused C functions from vendored UltraJSON implementation ([GH 26198](https://github.com/pandas-dev/pandas/issues/26198))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    and [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex "pandas.RangeIndex")
    to be passed to numpy `min` and `max` functions ([GH 26125](https://github.com/pandas-dev/pandas/issues/26125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use actual class name in repr of empty objects of a `Series` subclass ([GH 27001](https://github.com/pandas-dev/pandas/issues/27001)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") where passing an object array of timezone-aware `datetime`
    objects would incorrectly raise `ValueError` ([GH 13287](https://github.com/pandas-dev/pandas/issues/13287))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Contributors'
  prefs: []
  type: TYPE_NORMAL
- en: A total of 231 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: 1_x7 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abdullah İhsan Seçer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam Bull +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam Hooper
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Albert Villanova del Moral
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Watt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AlexTereshenkov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexander Buchkovsky
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexander Hendorf +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexander Nordin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexander Ponomaroff
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexandre Batisse +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexandre Decan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allen Downey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alyssa Fu Ward +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Gaspari +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Wood +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antoine Viscardi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antonio Gutierrez +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arno Veenstra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ArtinSarraf
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Batalex +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Baurzhan Muftakhidinov
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Benjamin Rowell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bharat Raghunathan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bhavani Ravi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Big Head +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brett Randall +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bryan Cutler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: C John Klehm +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Caleb Braun +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cecilia +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Bertinato +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Stadler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christian Haege +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christian Hudon
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christopher Whelan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chuanzhu Xu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clemens Brunner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Damian Kula +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Hrisca +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Luis Costa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Saxton
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DanielFEvans +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Liu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deepyaman Datta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Denis Belavin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Devin Petersohn +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Diane Trout +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: EdAbati +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enrico Rotundo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: EternalLearner42 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Evan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Evan Livelo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fabian Rost +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Flavien Lambert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Florian Rathgeber +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Frank Hoang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gaibo Zhang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gioia Ballin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Giuseppe Romagnuolo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gordon Blackadder +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gregory Rome +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guillaume Gay
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HHest +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hielke Walinga +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How Si Wei +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hubert
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Huize Wang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hyukjin Kwon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ian Dunn +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Inevitable-Marzipan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Irv Lustig
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JElfner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jacob Bundgaard +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Cobon-Kerr +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan-Philip Gehrcke +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jarrod Millman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jayanth Katuri +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeremy Schendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jiang Yue +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joel Ostblom
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Johan von Forstner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Johnny Chiu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonathon Vandezande +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jop Vermeer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josh
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josh Friedlander +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justin Zheng
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kaiqi Dong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kane +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kapil Patel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kara de la Marck +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Katherine Surta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Katrin Leinweber +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kendall Masse
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kyle Kosic +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lorenzo Stella +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maarten Rietbergen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mak Sze Chun
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Garcia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mateusz Woś
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matias Heikkilä
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mats Maiwald +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Max Bolingbroke +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Max Kovalovs +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Max van Deursen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Davis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael P. Moran +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mike Cramblett +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Min ho Kim +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Misha Veldhoen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mukul Ashwath Ram +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MusTheDataGuy +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nanda H Krishna +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nicholas Musolino
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Noam Hershtig +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Noora Husseini +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul Reidy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pauli Virtanen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pav A +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter Leimbigler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Philippe Ombredanne +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pietro Battiston
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Eames +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roman Yurchak
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ruijing Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ryan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ryan Joyce +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ryan Nazareth
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ryan Rehman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sakar Panta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Samuel Sinayoko
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sandeep Pathak +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sangwoong Yoon
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Saurav Chakravorty
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scott Talbert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sergey Kopylov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shantanu Gontia +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shivam Rana +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shorokhov Sergey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Hawkins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Soyoun(Rose) Kim
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stephan Hoyer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stephen Cowley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stephen Rauch
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sterling Paramore +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steven +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stijn Van Hoey
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sumanau Sareen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Takuya N +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tan Tran +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tao He +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tarbo Fukazawa
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terji Petersen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thein Oo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ThibTrip +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thijs Damsma +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thiviyan Thanapalasingam
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas A Caswell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Kluiters +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tilen Kusterle +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Gates +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Hoffmann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Swast
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Augspurger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Neep +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tomáš Chvátal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tyler Reddy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vaibhav Vishal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vasily Litvinov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vibhu Agarwal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vikramjeet Das +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vladislav +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Víctor Moron Tejero +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wenhuan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Will Ayd +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Ayd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wouter De Coster +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yoann Goular +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zach Angell +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alimcmaster1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: anmyachev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: chris-b1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: danielplawrence +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: endenis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: enisnazif +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ezcitron +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: fjetter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: froessler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gfyoung
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gwrome +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: h-vetinari
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: haison +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: hannah-c +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: heckeop +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: iamshwin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jamesoliverh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jkovacevic +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: killerontherun1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: knuu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kpapdac +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kpflugshaupt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: krsnik93 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: leerssej +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lrjball +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mazayo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nathalier +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nrebena +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nullptr +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pilkibun +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pmaxey83 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rbenes +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: robbuckley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: shawnbrown +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sudhir mohanraj +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tadeja +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tamuhey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: thatneat
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: topper-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: willweil +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: yehia67 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: yhaque1213 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
