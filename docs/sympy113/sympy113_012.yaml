- en: Solvers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解算器
- en: Original text：[https://docs.sympy.org/latest/tutorials/intro-tutorial/solvers.html](https://docs.sympy.org/latest/tutorials/intro-tutorial/solvers.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.sympy.org/latest/tutorials/intro-tutorial/solvers.html](https://docs.sympy.org/latest/tutorials/intro-tutorial/solvers.html)
- en: Note
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For a beginner-friendly guide focused on solving common types of equations,
    refer to [Solve Equations](../../guides/solving/index.html#solving-guide).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对于解决常见类型方程的初学者友好指南，请参阅[解方程](../../guides/solving/index.html#solving-guide)。
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: A Note about Equations
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 方程的注意事项
- en: Recall from the [gotchas](gotchas.html#tutorial-gotchas-equals) section of this
    tutorial that symbolic equations in SymPy are not represented by `=` or `==`,
    but by `Eq`.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 从本教程的[陷阱](gotchas.html#tutorial-gotchas-equals)部分回想起，SymPy中的符号方程不是用`=`或`==`表示，而是用`Eq`表示。
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: However, there is an even easier way. In SymPy, any expression not in an `Eq`
    is automatically assumed to equal 0 by the solving functions. Since \(a = b\)
    if and only if \(a - b = 0\), this means that instead of using `x == y`, you can
    just use `x - y`. For example
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，还有一种更简单的方法。在SymPy中，解函数会自动假设任何不在`Eq`中的表达式等于零。因此，由于\(a = b\)当且仅当\(a - b = 0\)，这意味着，不需要使用`x
    == y`，只需使用`x - y`。例如
- en: '[PRE2]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This is particularly useful if the equation you wish to solve is already equal
    to 0\. Instead of typing `solveset(Eq(expr, 0), x)`, you can just use `solveset(expr,
    x)`.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要解的方程已经等于0，则无需输入`solveset(Eq(expr, 0), x)`，可以直接使用`solveset(expr, x)`。
- en: Solving Equations Algebraically
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代数解方程
- en: The main function for solving algebraic equations is `solveset`. The syntax
    for `solveset` is `solveset(equation, variable=None, domain=S.Complexes)` Where
    `equations` may be in the form of `Eq` instances or expressions that are assumed
    to be equal to zero.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 解代数方程的主要函数是`solveset`。`solveset`的语法是`solveset(equation, variable=None, domain=S.Complexes)`，其中`equations`可以是`Eq`实例或被假定为等于零的表达式。
- en: Please note that there is another function called `solve` which can also be
    used to solve equations. The syntax is `solve(equations, variables)` However,
    it is recommended to use `solveset` instead.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意还有另一个名为`solve`的函数，也可用于解方程。其语法是`solve(equations, variables)`，但推荐使用`solveset`。
- en: When solving a single equation, the output of `solveset` is a `FiniteSet` or
    an `Interval` or `ImageSet` of the solutions.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当解单个方程时，`solveset`的输出是解的`FiniteSet`或`Interval`或`ImageSet`。
- en: '[PRE3]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: If there are no solutions, an `EmptySet` is returned and if it is not able to
    find solutions then a `ConditionSet` is returned.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有解，则返回`EmptySet`，如果无法找到解，则返回`ConditionSet`。
- en: '[PRE4]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In the `solveset` module, the linear system of equations is solved using `linsolve`.
    In future we would be able to use linsolve directly from `solveset`. Following
    is an example of the syntax of `linsolve`.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在`solveset`模块中，使用`linsolve`来解线性方程组。将来我们将能够直接从`solveset`使用`linsolve`。以下是`linsolve`语法的示例。
- en: 'List of Equations Form:'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 方程的列表形式：
- en: '[PRE5]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Augmented Matrix Form:'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增广矩阵形式：
- en: '[PRE6]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: A*x = b Form
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: A*x = b 形式
- en: '[PRE7]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Note
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The order of solution corresponds the order of given symbols.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 解的顺序对应于给定符号的顺序。
- en: In the `solveset` module, the non linear system of equations is solved using
    `nonlinsolve`. Following are examples of `nonlinsolve`.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在`solveset`模块中，使用`nonlinsolve`来解非线性方程组。以下是`nonlinsolve`的示例。
- en: 'When only real solution is present:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当只有实数解时：
- en: '[PRE8]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'When only complex solution is present:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当只有复数解时：
- en: '[PRE9]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'When both real and complex solution are present:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当既有实数解又有复数解时：
- en: '[PRE10]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'When the system is positive-dimensional system (has infinitely many solutions):'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当系统是正维度系统（有无限多个解）时：
- en: '[PRE12]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Note
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The order of solution corresponds the order of given symbols.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解的顺序对应于给定符号的顺序。
- en: 2\. Currently `nonlinsolve` doesn’t return solution in form of `LambertW` (if
    there is solution present in the form of `LambertW`).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 目前`nonlinsolve`不会以`LambertW`形式返回解（如果解以`LambertW`形式存在）。
- en: '`solve` can be used for such cases:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '`solve`可以用于这些情况：'
- en: '[PRE14]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 3\. Currently `nonlinsolve` is not properly capable of solving the system of
    equations having trigonometric functions.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 目前`nonlinsolve`无法正确解决具有三角函数的方程组。
- en: '`solve` can be used for such cases (but does not give all solution):'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`solve`可以用于这些情况（但不提供所有解）：'
- en: '[PRE15]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '`solveset` reports each solution only once. To get the solutions of a polynomial
    including multiplicity use `roots`.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`solveset`仅报告每个解一次。要获取多重性的多项式解，请使用`roots`。'
- en: '[PRE16]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The output `{0: 1, 3: 2}` of `roots` means that `0` is a root of multiplicity
    1 and `3` is a root of multiplicity 2.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '输出 `{0: 1, 3: 2}` 的 `roots` 意味着 `0` 是多重根为 1，而 `3` 是多重根为 2。'
- en: Note
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'Currently `solveset` is not capable of solving the following types of equations:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 目前 `solveset` 无法解决以下类型的方程：
- en: Equations solvable by LambertW (Transcendental equation solver).
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以用 LambertW（超越方程求解器）解的方程。
- en: '`solve` can be used for such cases:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这类情况，可以使用 `solve`：
- en: '[PRE17]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '## Solving Differential Equations'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '## 解微分方程'
- en: To solve differential equations, use `dsolve`. First, create an undefined function
    by passing `cls=Function` to the `symbols` function.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 要解微分方程，请使用 `dsolve`。首先通过将 `cls=Function` 传递给 `symbols` 函数创建一个未定义函数。
- en: '[PRE18]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '`f` and `g` are now undefined functions. We can call `f(x)`, and it will represent
    an unknown function.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`f` 和 `g` 现在是未定义的函数。我们可以调用 `f(x)`，它将代表一个未知函数。'
- en: '[PRE19]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Derivatives of `f(x)` are unevaluated.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '`f(x)` 的导数是未计算的。'
- en: '[PRE20]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: (see the [Derivatives](calculus.html#tutorial-derivatives) section for more
    on derivatives).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: （详见[导数](calculus.html#tutorial-derivatives)部分，了解更多关于导数的内容）。
- en: To represent the differential equation \(f''(x) - 2f'(x) + f(x) = \sin(x)\),
    we would thus use
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 要表示微分方程 \(f''(x) - 2f'(x) + f(x) = \sin(x)\)，我们可以使用以下方式：
- en: '[PRE21]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: To solve the ODE, pass it and the function to solve for to `dsolve`.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 要解ODE，请将其和要解的函数传递给 `dsolve`。
- en: '[PRE22]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '`dsolve` returns an instance of `Eq`. This is because, in general, solutions
    to differential equations cannot be solved explicitly for the function.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`dsolve` 返回 `Eq` 的一个实例。这是因为一般来说，微分方程的解不能显式地解出函数。'
- en: '[PRE23]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The arbitrary constants in the solutions from dsolve are symbols of the form
    `C1`, `C2`, `C3`, and so on.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 解中的任意常数来自 `dsolve` 的解，是形如 `C1`、`C2`、`C3` 等符号。
