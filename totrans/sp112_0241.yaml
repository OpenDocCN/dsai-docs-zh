- en: scipy.linalg.solve_toeplitz
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.solve_toeplitz.html#scipy.linalg.solve_toeplitz](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.solve_toeplitz.html#scipy.linalg.solve_toeplitz)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Solve a Toeplitz system using Levinson Recursion
  prefs: []
  type: TYPE_NORMAL
- en: The Toeplitz matrix has constant diagonals, with c as its first column and r
    as its first row. If r is not given, `r == conjugate(c)` is assumed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**c_or_cr**array_like or tuple of (array_like, array_like)'
  prefs: []
  type: TYPE_NORMAL
- en: The vector `c`, or a tuple of arrays (`c`, `r`). Whatever the actual shape of
    `c`, it will be converted to a 1-D array. If not supplied, `r = conjugate(c)`
    is assumed; in this case, if c[0] is real, the Toeplitz matrix is Hermitian. r[0]
    is ignored; the first row of the Toeplitz matrix is `[c[0], r[1:]]`. Whatever
    the actual shape of `r`, it will be converted to a 1-D array.
  prefs: []
  type: TYPE_NORMAL
- en: '**b**(M,) or (M, K) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Right-hand side in `T x = b`.
  prefs: []
  type: TYPE_NORMAL
- en: '**check_finite**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to check that the input matrices contain only finite numbers. Disabling
    may give a performance gain, but may result in problems (result entirely NaNs)
    if the inputs do contain infinities or NaNs.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**(M,) or (M, K) ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The solution to the system `T x = b`. Shape of return matches shape of *b*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`toeplitz`](scipy.linalg.toeplitz.html#scipy.linalg.toeplitz "scipy.linalg.toeplitz")'
  prefs: []
  type: TYPE_NORMAL
- en: Toeplitz matrix
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The solution is computed using Levinson-Durbin recursion, which is faster than
    generic least-squares methods, but can be less numerically stable.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Solve the Toeplitz system T x = b, where:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: To specify the Toeplitz matrix, only the first column and the first row are
    needed.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Check the result by creating the full Toeplitz matrix and multiplying it by
    *x*. We should get *b*.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
