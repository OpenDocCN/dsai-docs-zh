- en: scipy.stats.invwishart
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.invwishart.html#scipy.stats.invwishart](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.invwishart.html#scipy.stats.invwishart)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: An inverse Wishart random variable.
  prefs: []
  type: TYPE_NORMAL
- en: The *df* keyword specifies the degrees of freedom. The *scale* keyword specifies
    the scale matrix, which must be symmetric and positive definite. In this context,
    the scale matrix is often interpreted in terms of a multivariate normal covariance
    matrix.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**df**int'
  prefs: []
  type: TYPE_NORMAL
- en: Degrees of freedom, must be greater than or equal to dimension of the scale
    matrix
  prefs: []
  type: TYPE_NORMAL
- en: '**scale**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Symmetric positive definite scale matrix of the distribution
  prefs: []
  type: TYPE_NORMAL
- en: '**seed**{None, int, np.random.RandomState, np.random.Generator}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Used for drawing random variates. If *seed* is *None*, the *RandomState* singleton
    is used. If *seed* is an int, a new `RandomState` instance is used, seeded with
    seed. If *seed* is already a `RandomState` or `Generator` instance, then that
    object is used. Default is *None*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: scipy.linalg.LinAlgError
  prefs: []
  type: TYPE_NORMAL
- en: If the scale matrix *scale* is not positive definite.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`wishart`](scipy.stats.wishart.html#scipy.stats.wishart "scipy.stats.wishart")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The scale matrix *scale* must be a symmetric positive definite matrix. Singular
    matrices, including the symmetric positive semi-definite case, are not supported.
    Symmetry is not checked; only the lower triangular portion is used.
  prefs: []
  type: TYPE_NORMAL
- en: The inverse Wishart distribution is often denoted
  prefs: []
  type: TYPE_NORMAL
- en: \[W_p^{-1}(\nu, \Psi)\]
  prefs: []
  type: TYPE_NORMAL
- en: where \(\nu\) is the degrees of freedom and \(\Psi\) is the \(p \times p\) scale
    matrix.
  prefs: []
  type: TYPE_NORMAL
- en: 'The probability density function for [`invwishart`](#scipy.stats.invwishart
    "scipy.stats.invwishart") has support over positive definite matrices \(S\); if
    \(S \sim W^{-1}_p(\nu, \Sigma)\), then its PDF is given by:'
  prefs: []
  type: TYPE_NORMAL
- en: \[f(S) = \frac{|\Sigma|^\frac{\nu}{2}}{2^{ \frac{\nu p}{2} } |S|^{\frac{\nu
    + p + 1}{2}} \Gamma_p \left(\frac{\nu}{2} \right)} \exp\left( -tr(\Sigma S^{-1})
    / 2 \right)\]
  prefs: []
  type: TYPE_NORMAL
- en: If \(S \sim W_p^{-1}(\nu, \Psi)\) (inverse Wishart) then \(S^{-1} \sim W_p(\nu,
    \Psi^{-1})\) (Wishart).
  prefs: []
  type: TYPE_NORMAL
- en: If the scale matrix is 1-dimensional and equal to one, then the inverse Wishart
    distribution \(W_1(\nu, 1)\) collapses to the inverse Gamma distribution with
    parameters shape = \(\frac{\nu}{2}\) and scale = \(\frac{1}{2}\).
  prefs: []
  type: TYPE_NORMAL
- en: Instead of inverting a randomly generated Wishart matrix as described in [2],
    here the algorithm in [4] is used to directly generate a random inverse-Wishart
    matrix without inversion.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.16.0.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1]'
  prefs: []
  type: TYPE_NORMAL
- en: 'M.L. Eaton, “Multivariate Statistics: A Vector Space Approach”, Wiley, 1983.'
  prefs: []
  type: TYPE_NORMAL
- en: '[2]'
  prefs: []
  type: TYPE_NORMAL
- en: M.C. Jones, “Generating Inverse Wishart Matrices”, Communications in Statistics
    - Simulation and Computation, vol. 14.2, pp.511-514, 1985.
  prefs: []
  type: TYPE_NORMAL
- en: '[3]'
  prefs: []
  type: TYPE_NORMAL
- en: Gupta, M. and Srivastava, S. “Parametric Bayesian Estimation of Differential
    Entropy and Relative Entropy”. Entropy 12, 818 - 843. 2010.
  prefs: []
  type: TYPE_NORMAL
- en: '[4]'
  prefs: []
  type: TYPE_NORMAL
- en: S.D. Axen, “Efficiently generating inverse-Wishart matrices and their Cholesky
    factors”, [arXiv:2310.15884v1](https://arxiv.org/abs/2310.15884v1). 2023.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-stats-invwishart-1_00_00.png](../Images/cbf521bba25326b02b172f803df134ec.png)'
  prefs: []
  type: TYPE_IMG
- en: The input quantiles can be any shape of array, as long as the last axis labels
    the components.
  prefs: []
  type: TYPE_NORMAL
- en: 'Alternatively, the object may be called (as a function) to fix the degrees
    of freedom and scale parameters, returning a “frozen” inverse Wishart random variable:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| **pdf(x, df, scale)** | Probability density function. |'
  prefs: []
  type: TYPE_TB
- en: '| **logpdf(x, df, scale)** | Log of the probability density function. |'
  prefs: []
  type: TYPE_TB
- en: '| **rvs(df, scale, size=1, random_state=None)** | Draw random samples from
    an inverse Wishart distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **entropy(df, scale)** | Differential entropy of the distribution. |'
  prefs: []
  type: TYPE_TB
