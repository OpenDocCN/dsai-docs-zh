- en: Status of numpy.distutils and migration advice
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`numpy.distutils` 的状态和迁移建议'
- en: 原文：[https://numpy.org/doc/1.26/reference/distutils_status_migration.html](https://numpy.org/doc/1.26/reference/distutils_status_migration.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/distutils_status_migration.html](https://numpy.org/doc/1.26/reference/distutils_status_migration.html)
- en: '[`numpy.distutils`](distutils.html#module-numpy.distutils "numpy.distutils")
    has been deprecated in NumPy `1.23.0`. It will be removed for Python 3.12; for
    Python <= 3.11 it will not be removed until 2 years after the Python 3.12 release
    (Oct 2025).'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[`numpy.distutils`](distutils.html#module-numpy.distutils "numpy.distutils")
    已在 NumPy `1.23.0` 中被弃用。它将在 Python 3.12 中被移除；对于 Python <= 3.11，它将在 Python 3.12
    发布后的 2 年内不会被移除（2025 年 10 月）。'
- en: Warning
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: '`numpy.distutils` is only tested with `setuptools < 60.0`, newer versions may
    break. See [Interaction of numpy.distutils with setuptools](#numpy-setuptools-interaction)
    for details.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '`numpy.distutils` 仅与 `setuptools < 60.0` 进行了测试，更新的版本可能会出现问题。有关详细信息，请参见 [numpy.distutils
    与 setuptools 的交互](#numpy-setuptools-interaction)。'
- en: Migration advice
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 迁移建议
- en: 'There are several build systems which are good options to migrate to. Assuming
    you have compiled code in your package (if not, you have several good options,
    e.g. the build backends offered by Poetry, Hatch or PDM) and you want to be using
    a well-designed, modern and reliable build system, we recommend:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个很好的选项可供迁移。假设您的软件包中有编译代码（如果没有，您有几个很好的选项，例如 Poetry、Hatch 或 PDM 提供的构建后端），并且您希望使用一个设计良好、现代且可靠的构建系统，我们建议使用：
- en: '[Meson](https://mesonbuild.com/), and the [meson-python](https://meson-python.readthedocs.io)
    build backend'
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Meson](https://mesonbuild.com/)，以及 [meson-python](https://meson-python.readthedocs.io)
    构建后端'
- en: '[CMake](https://cmake.org/), and the [scikit-build-core](https://scikit-build-core.readthedocs.io/en/latest/)
    build backend'
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[CMake](https://cmake.org/)，以及 [scikit-build-core](https://scikit-build-core.readthedocs.io/en/latest/)
    构建后端'
- en: If you have modest needs (only simple Cython/C extensions; no need for Fortran,
    BLAS/LAPACK, nested `setup.py` files, or other features of `numpy.distutils`)
    and have been happy with `numpy.distutils` so far, you can also consider switching
    to `setuptools`. Note that most functionality of `numpy.distutils` is unlikely
    to be ported to `setuptools`.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的需求不高（只有简单的 Cython/C 扩展；不需要 Fortran、BLAS/LAPACK、嵌套的 `setup.py` 文件或 `numpy.distutils`
    的其他功能），并且迄今为止对 `numpy.distutils` 感到满意，您也可以考虑切换到 `setuptools`。请注意，`numpy.distutils`
    的大多数功能不太可能被移植到 `setuptools`。
- en: Moving to Meson
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 迁移到 Meson
- en: 'SciPy has moved to Meson and meson-python for its 1.9.0 release. During this
    process, remaining issues with Meson’s Python support and feature parity with
    `numpy.distutils` were resolved. *Note: parity means a large superset (because
    Meson is a good general-purpose build system); only a few BLAS/LAPACK library
    selection niceties are missing*. SciPy uses almost all functionality that `numpy.distutils`
    offers, so if SciPy has successfully made a release with Meson as the build system,
    there should be no blockers left to migrate, and SciPy will be a good reference
    for other packages who are migrating. For more details about the SciPy migration,
    see:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: SciPy 在其 1.9.0 版本中已经转向使用 Meson 和 meson-python。在此过程中，解决了 Meson 的 Python 支持和与
    `numpy.distutils` 功能对齐的剩余问题。*注意：对齐意味着一个大的超集（因为 Meson 是一个很好的通用构建系统）；只有一些 BLAS/LAPACK
    库选择的细微差别是缺失的*。SciPy 几乎使用了 `numpy.distutils` 提供的所有功能，因此如果 SciPy 成功地使用 Meson 作为构建系统发布了一个版本，那么应该没有障碍可以阻止迁移，SciPy
    将成为其他正在迁移的软件包的良好参考。有关 SciPy 迁移的更多详细信息，请参见：
- en: '[RFC: switch to Meson as a build system](https://github.com/scipy/scipy/issues/13615)'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RFC：切换到 Meson 作为构建系统](https://github.com/scipy/scipy/issues/13615)'
- en: '[Tracking issue for Meson support](https://github.com/rgommers/scipy/issues/22)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Meson 支持的跟踪问题](https://github.com/rgommers/scipy/issues/22)'
- en: NumPy will migrate to Meson for the 1.26 release.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 将在 1.26 版本中迁移到 Meson。
- en: Moving to CMake / scikit-build
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 迁移到 CMake / scikit-build
- en: The next generation of scikit-build is called [scikit-build-core](https://scikit-build-core.readthedocs.io/en/latest/).
    Where the older `scikit-build` used `setuptools` underneath, the rewrite does
    not. Like Meson, CMake is a good general-purpose build system.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 下一代 scikit-build 称为 [scikit-build-core](https://scikit-build-core.readthedocs.io/en/latest/)。在旧的
    `scikit-build` 使用 `setuptools` 作为底层时，重写不再使用。与 Meson 一样，CMake 是一个很好的通用构建系统。
- en: Moving to `setuptools`
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 迁移到 `setuptools`
- en: 'For projects that only use `numpy.distutils` for historical reasons, and do
    not actually use features beyond those that `setuptools` also supports, moving
    to `setuptools` is likely the solution which costs the least effort. To assess
    that, there are the `numpy.distutils` features that are *not* present in `setuptools`:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 对于仅因历史原因而使用`numpy.distutils`的项目，并且实际上没有使用`setuptools`也支持的功能，迁移到`setuptools`很可能是成本最低的解决方案。为评估这一点，有一些`numpy.distutils`功能
    *不* 在`setuptools`中存在：
- en: Nested `setup.py` files
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 嵌套的`setup.py`文件
- en: Fortran build support
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fortran构建支持
- en: BLAS/LAPACK library support (OpenBLAS, MKL, ATLAS, Netlib LAPACK/BLAS, BLIS,
    64-bit ILP interface, etc.)
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BLAS / LAPACK库支持（OpenBLAS、MKL、ATLAS、Netlib LAPACK / BLAS、BLIS、64位ILP接口等）
- en: Support for a few other scientific libraries, like FFTW and UMFPACK
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对其他一些科学库的支持，如FFTW和UMFPACK
- en: Better MinGW support
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好的MinGW支持
- en: Per-compiler build flag customization (e.g. *-O3* and *SSE2* flags are default)
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个编译器的构建标志自定义（例如* -O3*和* SSE2*标志是默认的）
- en: a simple user build config system, see [site.cfg.example](https://github.com/numpy/numpy/blob/master/site.cfg.example)
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个简单的用户构建配置系统，请查看[site.cfg.example](https://github.com/numpy/numpy/blob/master/site.cfg.example)
- en: SIMD intrinsics support
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SIMD内在支持
- en: 'The most widely used feature is nested `setup.py` files. This feature may perhaps
    still be ported to `setuptools` in the future (it needs a volunteer though, see
    [gh-18588](https://github.com/numpy/numpy/issues/18588) for status). Projects
    only using that feature could move to `setuptools` after that is done. In case
    a project uses only a couple of `setup.py` files, it also could make sense to
    simply aggregate all the content of those files into a single `setup.py` file
    and then move to `setuptools`. This involves dropping all `Configuration` instances,
    and using `Extension` instead. E.g.,:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 最广泛使用的功能是嵌套的`setup.py`文件。该功能可能将来可能仍然被移植到`setuptools`中（但需要一个志愿者，见[gh-18588](https://github.com/numpy/numpy/issues/18588)了解状态）。只使用该功能的项目在此之后可以迁移到`setuptools`。如果一个项目只使用了几个`setup.py`文件，将这些文件的所有内容聚合到一个单独的`setup.py`文件中，然后迁移到`setuptools`可能是有意义的。这涉及放弃所有`Configuration`实例，并改用`Extension`。例如：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: For more details, see the [setuptools documentation](https://setuptools.pypa.io/en/latest/setuptools.html)
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多细节，请参阅[setuptools文档](https://setuptools.pypa.io/en/latest/setuptools.html)
- en: '## Interaction of `numpy.distutils` with `setuptools`'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '##`numpy.distutils`与`setuptools`的互动'
- en: It is recommended to use `setuptools < 60.0`. Newer versions may work, but are
    not guaranteed to. The reason for this is that `setuptools` 60.0 enabled a vendored
    copy of `distutils`, including backwards incompatible changes that affect some
    functionality in `numpy.distutils`.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 建议使用`setuptools < 60.0`。更新的版本可能有效，但不能保证。原因是`setuptools` 60.0启用了`distutils`的供应商副本，其中包含一些影响`numpy.distutils`某些功能的向后不兼容更改。
- en: If you are using only simple Cython or C extensions with minimal use of `numpy.distutils`
    functionality beyond nested `setup.py` files (its most popular feature, see [`Configuration`](distutils.html#numpy.distutils.misc_util.Configuration
    "numpy.distutils.misc_util.Configuration")), then latest `setuptools` is likely
    to continue working. In case of problems, you can also try `SETUPTOOLS_USE_DISTUTILS=stdlib`
    to avoid the backwards incompatible changes in `setuptools`.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您只使用简单的Cython或C扩展并最小限度地使用`numpy.distutils`功能，超出嵌套的`setup.py`文件（它最流行的特性，请参阅[`Configuration`](distutils.html#numpy.distutils.misc_util.Configuration
    "numpy.distutils.misc_util.Configuration")），那么最新的`setuptools`可能会继续运作正常。如果出现问题，您还可以尝试`SETUPTOOLS_USE_DISTUTILS=stdlib`来避免`setuptools`中不兼容的更改。
- en: Whatever you do, it is recommended to put an upper bound on your `setuptools`
    build requirement in `pyproject.toml` to avoid future breakage - see [For downstream
    package authors](../dev/depending_on_numpy.html#for-downstream-package-authors).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您做什么，建议在`pyproject.toml`中对`setuptools`的构建需求设置一个上限，以避免未来的破坏 - 请参见[对下游包作者的建议](../dev/depending_on_numpy.html#for-downstream-package-authors)。
- en: Migration advice
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 迁移建议
- en: 'There are several build systems which are good options to migrate to. Assuming
    you have compiled code in your package (if not, you have several good options,
    e.g. the build backends offered by Poetry, Hatch or PDM) and you want to be using
    a well-designed, modern and reliable build system, we recommend:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种可供迁移的构建系统选择。假设您的软件包中有编译代码（如果没有，您有几个良好的选择，例如Poetry、Hatch或PDM提供的构建后端），并且您希望使用一个设计良好、现代化和可靠的构建系统，我们建议：
- en: '[Meson](https://mesonbuild.com/), and the [meson-python](https://meson-python.readthedocs.io)
    build backend'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Meson](https://mesonbuild.com/)和[meson-python](https://meson-python.readthedocs.io)构建后端'
- en: '[CMake](https://cmake.org/), and the [scikit-build-core](https://scikit-build-core.readthedocs.io/en/latest/)
    build backend'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[CMake](https://cmake.org/)和[scikit-build-core](https://scikit-build-core.readthedocs.io/en/latest/)构建后端'
- en: If you have modest needs (only simple Cython/C extensions; no need for Fortran,
    BLAS/LAPACK, nested `setup.py` files, or other features of `numpy.distutils`)
    and have been happy with `numpy.distutils` so far, you can also consider switching
    to `setuptools`. Note that most functionality of `numpy.distutils` is unlikely
    to be ported to `setuptools`.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您只需要简单的Cython/C扩展（不需要Fortran，BLAS/LAPACK，嵌套的`setup.py`文件或其他`numpy.distutils`的功能），并且迄今为止对`numpy.distutils`感到满意，您也可以考虑切换到`setuptools`。请注意，大多数`numpy.distutils`的功能不太可能被迁移到`setuptools`。
- en: Moving to Meson
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 迁移至Meson
- en: 'SciPy has moved to Meson and meson-python for its 1.9.0 release. During this
    process, remaining issues with Meson’s Python support and feature parity with
    `numpy.distutils` were resolved. *Note: parity means a large superset (because
    Meson is a good general-purpose build system); only a few BLAS/LAPACK library
    selection niceties are missing*. SciPy uses almost all functionality that `numpy.distutils`
    offers, so if SciPy has successfully made a release with Meson as the build system,
    there should be no blockers left to migrate, and SciPy will be a good reference
    for other packages who are migrating. For more details about the SciPy migration,
    see:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: SciPy在其1.9.0版本中已经迁移到了Meson和meson-python。在此过程中，已解决了Meson的Python支持以及与`numpy.distutils`功能平等的剩余问题。*注意：平等意味着一个大的超集（因为Meson是一个很好的通用构建系统）；只有一些BLAS/LAPACK库选择上的小问题缺失*。SciPy几乎使用了`numpy.distutils`提供的所有功能，因此如果SciPy成功发布了使用Meson作为构建系统的版本，那么应该没有任何阻碍可以迁移，SciPy将成为其他正在迁移的软件包的良好参考。有关SciPy迁移的更多详细信息，请参见：
- en: '[RFC: switch to Meson as a build system](https://github.com/scipy/scipy/issues/13615)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RFC：切换到Meson作为构建系统](https://github.com/scipy/scipy/issues/13615)'
- en: '[Tracking issue for Meson support](https://github.com/rgommers/scipy/issues/22)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Meson支持跟踪问题](https://github.com/rgommers/scipy/issues/22)'
- en: NumPy will migrate to Meson for the 1.26 release.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy将在1.26版本中迁移到Meson。
- en: Moving to CMake / scikit-build
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 迁移到CMake / scikit-build
- en: The next generation of scikit-build is called [scikit-build-core](https://scikit-build-core.readthedocs.io/en/latest/).
    Where the older `scikit-build` used `setuptools` underneath, the rewrite does
    not. Like Meson, CMake is a good general-purpose build system.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 下一代scikit-build称为[scikit-build-core](https://scikit-build-core.readthedocs.io/en/latest/)。旧版的`scikit-build`使用了`setuptools`作为底层，但重写并没有。与Meson一样，CMake是一个很好的通用构建系统。
- en: Moving to `setuptools`
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 迁移到`setuptools`
- en: 'For projects that only use `numpy.distutils` for historical reasons, and do
    not actually use features beyond those that `setuptools` also supports, moving
    to `setuptools` is likely the solution which costs the least effort. To assess
    that, there are the `numpy.distutils` features that are *not* present in `setuptools`:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 对于仅出于历史原因使用`numpy.distutils`的项目，并且实际上没有使用`setuptools`也支持的功能，移至`setuptools`很可能是耗费最少努力的解决方案。为了评估，这里是`setuptools`中*没有*存在的`numpy.distutils`功能：
- en: Nested `setup.py` files
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 嵌套的`setup.py`文件
- en: Fortran build support
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fortran构建支持
- en: BLAS/LAPACK library support (OpenBLAS, MKL, ATLAS, Netlib LAPACK/BLAS, BLIS,
    64-bit ILP interface, etc.)
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BLAS/LAPACK库支持（OpenBLAS，MKL，ATLAS，Netlib LAPACK/BLAS，BLIS，64位ILP接口等）
- en: Support for a few other scientific libraries, like FFTW and UMFPACK
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持其他几个科学库，如FFTW和UMFPACK
- en: Better MinGW support
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好的MinGW支持
- en: Per-compiler build flag customization (e.g. *-O3* and *SSE2* flags are default)
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个编译器的构建标志定制（例如，默认为* -O3 *和* SSE2 *标志）
- en: a simple user build config system, see [site.cfg.example](https://github.com/numpy/numpy/blob/master/site.cfg.example)
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个简单的用户构建配置系统，请参阅[site.cfg.example](https://github.com/numpy/numpy/blob/master/site.cfg.example)
- en: SIMD intrinsics support
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SIMD指令集支持
- en: 'The most widely used feature is nested `setup.py` files. This feature may perhaps
    still be ported to `setuptools` in the future (it needs a volunteer though, see
    [gh-18588](https://github.com/numpy/numpy/issues/18588) for status). Projects
    only using that feature could move to `setuptools` after that is done. In case
    a project uses only a couple of `setup.py` files, it also could make sense to
    simply aggregate all the content of those files into a single `setup.py` file
    and then move to `setuptools`. This involves dropping all `Configuration` instances,
    and using `Extension` instead. E.g.,:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 最广泛使用的功能是嵌套的`setup.py`文件。这个功能可能将来仍然被移植到`setuptools`中（需要一个志愿者，参见[gh-18588](https://github.com/numpy/numpy/issues/18588)了解状态）。只使用该功能的项目在完成后可以转移到`setuptools`。如果一个项目只使用了几个`setup.py`文件，将这些文件的所有内容聚合到一个单独的`setup.py`文件中，然后转移到`setuptools`也是有意义的。这涉及放弃所有`Configuration`实例，并改用`Extension`。例如：
- en: '[PRE1]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: For more details, see the [setuptools documentation](https://setuptools.pypa.io/en/latest/setuptools.html)
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 更多详细信息，请参见[setuptools文档](https://setuptools.pypa.io/en/latest/setuptools.html)。
- en: Moving to Meson
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 转移到Meson。
- en: 'SciPy has moved to Meson and meson-python for its 1.9.0 release. During this
    process, remaining issues with Meson’s Python support and feature parity with
    `numpy.distutils` were resolved. *Note: parity means a large superset (because
    Meson is a good general-purpose build system); only a few BLAS/LAPACK library
    selection niceties are missing*. SciPy uses almost all functionality that `numpy.distutils`
    offers, so if SciPy has successfully made a release with Meson as the build system,
    there should be no blockers left to migrate, and SciPy will be a good reference
    for other packages who are migrating. For more details about the SciPy migration,
    see:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: SciPy已经在其1.9.0版本中迁移到Meson和meson-python。在此过程中，解决了Meson的Python支持和与`numpy.distutils`功能平衡的剩余问题。*注意：平衡意味着一个大的超集（因为Meson是一个很好的通用构建系统）；只有一些BLAS/LAPACK库选择的细微差别缺失*。SciPy几乎使用了`numpy.distutils`提供的所有功能，因此如果SciPy成功使用Meson作为构建系统发布了一个版本，那么应该没有障碍可以迁移，SciPy将成为其他正在迁移的软件包的良好参考。有关SciPy迁移的更多详细信息，请参见：
- en: '[RFC: switch to Meson as a build system](https://github.com/scipy/scipy/issues/13615)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RFC：切换到Meson作为构建系统](https://github.com/scipy/scipy/issues/13615)'
- en: '[Tracking issue for Meson support](https://github.com/rgommers/scipy/issues/22)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Meson支持跟踪问题](https://github.com/rgommers/scipy/issues/22)'
- en: NumPy will migrate to Meson for the 1.26 release.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy将在1.26版本中迁移到Meson。
- en: Moving to CMake / scikit-build
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 转移到CMake / scikit-build。
- en: The next generation of scikit-build is called [scikit-build-core](https://scikit-build-core.readthedocs.io/en/latest/).
    Where the older `scikit-build` used `setuptools` underneath, the rewrite does
    not. Like Meson, CMake is a good general-purpose build system.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 下一代scikit-build被称为[scikit-build-core](https://scikit-build-core.readthedocs.io/en/latest/)。旧的`scikit-build`使用`setuptools`作为底层，而重写则不是。与Meson一样，CMake是一个很好的通用构建系统。
- en: Moving to `setuptools`
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 转移到`setuptools`
- en: 'For projects that only use `numpy.distutils` for historical reasons, and do
    not actually use features beyond those that `setuptools` also supports, moving
    to `setuptools` is likely the solution which costs the least effort. To assess
    that, there are the `numpy.distutils` features that are *not* present in `setuptools`:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 对于仅出于历史原因使用`numpy.distutils`的项目，并且实际上没有使用`setuptools`支持的功能，转移到`setuptools`可能是付出最少努力的解决方案。为了评估这一点，有一些`numpy.distutils`功能*不*存在于`setuptools`中：
- en: Nested `setup.py` files
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 嵌套的`setup.py`文件。
- en: Fortran build support
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fortran构建支持。
- en: BLAS/LAPACK library support (OpenBLAS, MKL, ATLAS, Netlib LAPACK/BLAS, BLIS,
    64-bit ILP interface, etc.)
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BLAS/LAPACK库支持（OpenBLAS、MKL、ATLAS、Netlib LAPACK/BLAS、BLIS、64位ILP接口等）。
- en: Support for a few other scientific libraries, like FFTW and UMFPACK
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持其他几个科学库，如FFTW和UMFPACK。
- en: Better MinGW support
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好的MinGW支持。
- en: Per-compiler build flag customization (e.g. *-O3* and *SSE2* flags are default)
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个编译器的构建标志自定义（例如，默认为*-O3*和*SSE2*标志）
- en: a simple user build config system, see [site.cfg.example](https://github.com/numpy/numpy/blob/master/site.cfg.example)
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个简单的用户构建配置系统，请参见[site.cfg.example](https://github.com/numpy/numpy/blob/master/site.cfg.example)
- en: SIMD intrinsics support
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SIMD指令支持。
- en: 'The most widely used feature is nested `setup.py` files. This feature may perhaps
    still be ported to `setuptools` in the future (it needs a volunteer though, see
    [gh-18588](https://github.com/numpy/numpy/issues/18588) for status). Projects
    only using that feature could move to `setuptools` after that is done. In case
    a project uses only a couple of `setup.py` files, it also could make sense to
    simply aggregate all the content of those files into a single `setup.py` file
    and then move to `setuptools`. This involves dropping all `Configuration` instances,
    and using `Extension` instead. E.g.,:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 最广泛使用的功能是嵌套的`setup.py`文件。这个功能可能在将来仍然会被移植到`setuptools`中（不过需要有志愿者，参见[gh-18588](https://github.com/numpy/numpy/issues/18588)了解状态）。只使用该功能的项目在完成后可以转移到`setuptools`。如果一个项目只使用了几个`setup.py`文件，将这些文件的所有内容聚合到一个单独的`setup.py`文件中，然后转移到`setuptools`也是有意义的。这涉及放弃所有的`Configuration`实例，并使用`Extension`代替。例如：
- en: '[PRE2]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For more details, see the [setuptools documentation](https://setuptools.pypa.io/en/latest/setuptools.html)
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 更多详情，请参阅[setuptools文档](https://setuptools.pypa.io/en/latest/setuptools.html)
- en: '## Interaction of `numpy.distutils` with `setuptools`'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '## `numpy.distutils`与`setuptools`的交互'
- en: It is recommended to use `setuptools < 60.0`. Newer versions may work, but are
    not guaranteed to. The reason for this is that `setuptools` 60.0 enabled a vendored
    copy of `distutils`, including backwards incompatible changes that affect some
    functionality in `numpy.distutils`.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 建议使用`setuptools < 60.0`。更新的版本可能会工作，但不能保证。原因是`setuptools` 60.0启用了`distutils`的一个供应商副本，其中包含影响`numpy.distutils`某些功能的不兼容更改。
- en: If you are using only simple Cython or C extensions with minimal use of `numpy.distutils`
    functionality beyond nested `setup.py` files (its most popular feature, see [`Configuration`](distutils.html#numpy.distutils.misc_util.Configuration
    "numpy.distutils.misc_util.Configuration")), then latest `setuptools` is likely
    to continue working. In case of problems, you can also try `SETUPTOOLS_USE_DISTUTILS=stdlib`
    to avoid the backwards incompatible changes in `setuptools`.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只是简单地使用Cython或C扩展，并且最多只是在嵌套的`setup.py`文件之外使用了少量`numpy.distutils`功能（它最受欢迎的功能，请参见[`Configuration`](distutils.html#numpy.distutils.misc_util.Configuration
    "numpy.distutils.misc_util.Configuration")），那么最新的`setuptools`可能会继续工作。如果出现问题，你也可以尝试`SETUPTOOLS_USE_DISTUTILS=stdlib`来避免`setuptools`中的不兼容更改。
- en: Whatever you do, it is recommended to put an upper bound on your `setuptools`
    build requirement in `pyproject.toml` to avoid future breakage - see [For downstream
    package authors](../dev/depending_on_numpy.html#for-downstream-package-authors).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你做什么，建议在`pyproject.toml`中对你的`setuptools`构建需求设置一个上限，以避免未来的破坏 - 参见[对下游包作者的建议](../dev/depending_on_numpy.html#for-downstream-package-authors)。
