- en: scipy.special.yve
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.special.yve
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.yve.html#scipy.special.yve](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.yve.html#scipy.special.yve)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.yve.html#scipy.special.yve](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.yve.html#scipy.special.yve)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Exponentially scaled Bessel function of the second kind of real order.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 实部阶数的未缩放贝塞尔函数第二类。
- en: 'Returns the exponentially scaled Bessel function of the second kind of real
    order *v* at complex *z*:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 返回实部阶数为*v*的复参数*z*的指数缩放贝塞尔函数第二类：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**v**array_like'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**v**array_like'
- en: Order (float).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 阶数（浮点数）。
- en: '**z**array_like'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**z**array_like'
- en: Argument (float or complex).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 参数（浮点数或复数）。
- en: '**out**ndarray, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**ndarray，可选'
- en: Optional output array for the function results
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 函数结果的可选输出数组
- en: 'Returns:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**Y**scalar or ndarray'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**Y**标量或ndarray'
- en: Value of the exponentially scaled Bessel function.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 指数缩放贝塞尔函数的值。
- en: See also
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`yv`](scipy.special.yv.html#scipy.special.yv "scipy.special.yv")'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[`yv`](scipy.special.yv.html#scipy.special.yv "scipy.special.yv")'
- en: Unscaled Bessel function of the second kind of real order.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 实部阶数的未缩放贝塞尔函数第二类。
- en: Notes
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记
- en: For positive *v* values, the computation is carried out using the AMOS [[1]](#rba64767b4bf9-1)
    *zbesy* routine, which exploits the connection to the Hankel Bessel functions
    \(H_v^{(1)}\) and \(H_v^{(2)}\),
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 对于正*v*值，使用AMOS [[1]](#rba64767b4bf9-1) *zbesy*例程进行计算，该例程利用与汉克尔贝塞尔函数\(H_v^{(1)}\)和\(H_v^{(2)}\)的连接，
- en: \[Y_v(z) = \frac{1}{2\imath} (H_v^{(1)} - H_v^{(2)}).\]
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: \[Y_v(z) = \frac{1}{2\imath} (H_v^{(1)} - H_v^{(2)}).\]
- en: For negative *v* values the formula,
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 对于负*v*值，使用公式，
- en: \[Y_{-v}(z) = Y_v(z) \cos(\pi v) + J_v(z) \sin(\pi v)\]
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: \[Y_{-v}(z) = Y_v(z) \cos(\pi v) + J_v(z) \sin(\pi v)\]
- en: is used, where \(J_v(z)\) is the Bessel function of the first kind, computed
    using the AMOS routine *zbesj*. Note that the second term is exactly zero for
    integer *v*; to improve accuracy the second term is explicitly omitted for *v*
    values such that *v = floor(v)*.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 使用，其中\(J_v(z)\)是第一类贝塞尔函数，使用AMOS例程*zbesj*计算。注意，对于整数*v*，第二项确实为零；为了提高精度，对于使*v =
    floor(v)*的*v*值，明确省略第二项。
- en: 'Exponentially scaled Bessel functions are useful for large *z*: for these,
    the unscaled Bessel functions can easily under-or overflow.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 指数缩放贝塞尔函数对大*z*很有用：对于这些函数，未缩放的贝塞尔函数可能很容易溢出或下溢。
- en: References
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[1](#id1)]'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[[1](#id1)]'
- en: Donald E. Amos, “AMOS, A Portable Package for Bessel Functions of a Complex
    Argument and Nonnegative Order”, [http://netlib.org/amos/](http://netlib.org/amos/)
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Donald E. Amos，“AMOS，一种用于复参数和非负阶贝塞尔函数的便携包”，[http://netlib.org/amos/](http://netlib.org/amos/)
- en: Examples
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Compare the output of [`yv`](scipy.special.yv.html#scipy.special.yv "scipy.special.yv")
    and [`yve`](#scipy.special.yve "scipy.special.yve") for large complex arguments
    for *z* by computing their values for order `v=1` at `z=1000j`. We see that [`yv`](scipy.special.yv.html#scipy.special.yv
    "scipy.special.yv") returns nan but [`yve`](#scipy.special.yve "scipy.special.yve")
    returns a finite number:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 通过计算在大复数参数*z*处阶数`v=1`和`z=1000j`的值来比较[`yv`](scipy.special.yv.html#scipy.special.yv
    "scipy.special.yv")和[`yve`](#scipy.special.yve "scipy.special.yve")的输出。我们看到[`yv`](scipy.special.yv.html#scipy.special.yv
    "scipy.special.yv")返回nan，但[`yve`](#scipy.special.yve "scipy.special.yve")返回有限数值：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For real arguments for *z*, [`yve`](#scipy.special.yve "scipy.special.yve")
    returns the same as [`yv`](scipy.special.yv.html#scipy.special.yv "scipy.special.yv")
    up to floating point errors.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 对于*z*的实数参数，[`yve`](#scipy.special.yve "scipy.special.yve")返回与[`yv`](scipy.special.yv.html#scipy.special.yv
    "scipy.special.yv")相同，直到浮点误差。
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The function can be evaluated for several orders at the same time by providing
    a list or NumPy array for *v*:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过提供*v*的列表或NumPy数组同时评估多个阶数的函数：
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In the same way, the function can be evaluated at several points in one call
    by providing a list or NumPy array for *z*:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，通过提供列表或NumPy数组给*z*，可以一次性评估函数在多个点上的值：
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: It is also possible to evaluate several orders at several points at the same
    time by providing arrays for *v* and *z* with broadcasting compatible shapes.
    Compute [`yve`](#scipy.special.yve "scipy.special.yve") for two different orders
    *v* and three points *z* resulting in a 2x3 array.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以通过提供广播兼容形状的*v*和*z*数组，同时在几个点上计算两个不同阶数*v*和三个点*z*的[`yve`](#scipy.special.yve
    "scipy.special.yve")得到一个2x3数组。
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
